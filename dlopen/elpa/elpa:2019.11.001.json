{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-elpa-2019.11.001-qjdkuz3xp4qrmu3u6sou4k4e2c7p3m4b/spack-src/ltmain.sh": "#! /bin/sh\n## DO NOT EDIT - This file generated from ./build-aux/ltmain.in\n##               by inline-source v2014-01-03.01\n\n# libtool (GNU libtool) 2.4.6\n# Provide generalized library-building support services.\n# Written by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n\n# Copyright (C) 1996-2015 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# GNU Libtool is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# As a special exception to the GNU General Public License,\n# if you distribute this file as part of a program or library that\n# is built using GNU Libtool, you may include this file under the\n# same distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\nPROGRAM=libtool\nPACKAGE=libtool\nVERSION=2.4.6\npackage_revision=2.4.6\n\n\n## ------ ##\n## Usage. ##\n## ------ ##\n\n# Run './libtool --help' for help with using this script from the\n# command line.\n\n\n## ------------------------------- ##\n## User overridable command paths. ##\n## ------------------------------- ##\n\n# After configure completes, it has a better idea of some of the\n# shell tools we need than the defaults used by the functions shared\n# with bootstrap, so set those here where they can still be over-\n# ridden by the user, but otherwise take precedence.\n\n: ${AUTOCONF=\"autoconf\"}\n: ${AUTOMAKE=\"automake\"}\n\n\n## -------------------------- ##\n## Source external libraries. ##\n## -------------------------- ##\n\n# Much of our low-level functionality needs to be sourced from external\n# libraries, which are installed to $pkgauxdir.\n\n# Set a version string for this script.\nscriptversion=2015-01-20.17; # UTC\n\n# General shell script boiler plate, and helper functions.\n# Written by Gary V. Vaughan, 2004\n\n# Copyright (C) 2004-2015 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 3 of the License, or\n# (at your option) any later version.\n\n# As a special exception to the GNU General Public License, if you distribute\n# this file as part of a program or library that is built using GNU Libtool,\n# you may include this file under the same distribution terms that you use\n# for the rest of that program.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNES FOR A PARTICULAR PURPOSE. See the GNU\n# General Public License for more details.\n\n# You should have received a copy of the GNU General Public License\n# along with this program. If not, see <http://www.gnu.org/licenses/>.\n\n# Please report bugs or propose patches to gary@gnu.org.\n\n\n## ------ ##\n## Usage. ##\n## ------ ##\n\n# Evaluate this file near the top of your script to gain access to\n# the functions and variables defined here:\n#\n#   . `echo \"$0\" | ${SED-sed} 's|[^/]*$||'`/build-aux/funclib.sh\n#\n# If you need to override any of the default environment variable\n# settings, do that before evaluating this file.\n\n\n## -------------------- ##\n## Shell normalisation. ##\n## -------------------- ##\n\n# Some shells need a little help to be as Bourne compatible as possible.\n# Before doing anything else, make sure all that help has been provided!\n\nDUALCASE=1; export DUALCASE # for MKS sh\nif test -n \"${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :\n  emulate sh\n  NULLCMD=:\n  # Pre-4.2 versions of Zsh do word splitting on ${1+\"$@\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '${1+\"$@\"}'='\"$@\"'\n  setopt NO_GLOB_SUBST\nelse\n  case `(set -o) 2>/dev/null` in *posix*) set -o posix ;; esac\nfi\n\n# NLS nuisances: We save the old values in case they are required later.\n_G_user_locale=\n_G_safe_locale=\nfor _G_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\ndo\n  eval \"if test set = \\\"\\${$_G_var+set}\\\"; then\n          save_$_G_var=\\$$_G_var\n          $_G_var=C\n\t  export $_G_var\n\t  _G_user_locale=\\\"$_G_var=\\\\\\$save_\\$_G_var; \\$_G_user_locale\\\"\n\t  _G_safe_locale=\\\"$_G_var=C; \\$_G_safe_locale\\\"\n\tfi\"\ndone\n\n# CDPATH.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\n# Make sure IFS has a sensible default\nsp=' '\nnl='\n'\nIFS=\"$sp\t$nl\"\n\n# There are apparently some retarded systems that use ';' as a PATH separator!\nif test \"${PATH_SEPARATOR+set}\" != set; then\n  PATH_SEPARATOR=:\n  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {\n    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||\n      PATH_SEPARATOR=';'\n  }\nfi\n\n\n\n## ------------------------- ##\n## Locate command utilities. ##\n## ------------------------- ##\n\n\n# func_executable_p FILE\n# ----------------------\n# Check that FILE is an executable regular file.\nfunc_executable_p ()\n{\n    test -f \"$1\" && test -x \"$1\"\n}\n\n\n# func_path_progs PROGS_LIST CHECK_FUNC [PATH]\n# --------------------------------------------\n# Search for either a program that responds to --version with output\n# containing \"GNU\", or else returned by CHECK_FUNC otherwise, by\n# trying all the directories in PATH with each of the elements of\n# PROGS_LIST.\n#\n# CHECK_FUNC should accept the path to a candidate program, and\n# set $func_check_prog_result if it truncates its output less than\n# $_G_path_prog_max characters.\nfunc_path_progs ()\n{\n    _G_progs_list=$1\n    _G_check_func=$2\n    _G_PATH=${3-\"$PATH\"}\n\n    _G_path_prog_max=0\n    _G_path_prog_found=false\n    _G_save_IFS=$IFS; IFS=${PATH_SEPARATOR-:}\n    for _G_dir in $_G_PATH; do\n      IFS=$_G_save_IFS\n      test -z \"$_G_dir\" && _G_dir=.\n      for _G_prog_name in $_G_progs_list; do\n        for _exeext in '' .EXE; do\n          _G_path_prog=$_G_dir/$_G_prog_name$_exeext\n          func_executable_p \"$_G_path_prog\" || continue\n          case `\"$_G_path_prog\" --version 2>&1` in\n            *GNU*) func_path_progs_result=$_G_path_prog _G_path_prog_found=: ;;\n            *)     $_G_check_func $_G_path_prog\n\t\t   func_path_progs_result=$func_check_prog_result\n\t\t   ;;\n          esac\n          $_G_path_prog_found && break 3\n        done\n      done\n    done\n    IFS=$_G_save_IFS\n    test -z \"$func_path_progs_result\" && {\n      echo \"no acceptable sed could be found in \\$PATH\" >&2\n      exit 1\n    }\n}\n\n\n# We want to be able to use the functions in this file before configure\n# has figured out where the best binaries are kept, which means we have\n# to search for them ourselves - except when the results are already set\n# where we skip the searches.\n\n# Unless the user overrides by setting SED, search the path for either GNU\n# sed, or the sed that truncates its output the least.\ntest -z \"$SED\" && {\n  _G_sed_script=s/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/\n  for _G_i in 1 2 3 4 5 6 7; do\n    _G_sed_script=$_G_sed_script$nl$_G_sed_script\n  done\n  echo \"$_G_sed_script\" 2>/dev/null | sed 99q >conftest.sed\n  _G_sed_script=\n\n  func_check_prog_sed ()\n  {\n    _G_path_prog=$1\n\n    _G_count=0\n    printf 0123456789 >conftest.in\n    while :\n    do\n      cat conftest.in conftest.in >conftest.tmp\n      mv conftest.tmp conftest.in\n      cp conftest.in conftest.nl\n      echo '' >> conftest.nl\n      \"$_G_path_prog\" -f conftest.sed <conftest.nl >conftest.out 2>/dev/null || break\n      diff conftest.out conftest.nl >/dev/null 2>&1 || break\n      _G_count=`expr $_G_count + 1`\n      if test \"$_G_count\" -gt \"$_G_path_prog_max\"; then\n        # Best one so far, save it but keep looking for a better one\n        func_check_prog_result=$_G_path_prog\n        _G_path_prog_max=$_G_count\n      fi\n      # 10*(2^10) chars as input seems more than enough\n      test 10 -lt \"$_G_count\" && break\n    done\n    rm -f conftest.in conftest.tmp conftest.nl conftest.out\n  }\n\n  func_path_progs \"sed gsed\" func_check_prog_sed $PATH:/usr/xpg4/bin\n  rm -f conftest.sed\n  SED=$func_path_progs_result\n}\n\n\n# Unless the user overrides by setting GREP, search the path for either GNU\n# grep, or the grep that truncates its output the least.\ntest -z \"$GREP\" && {\n  func_check_prog_grep ()\n  {\n    _G_path_prog=$1\n\n    _G_count=0\n    _G_path_prog_max=0\n    printf 0123456789 >conftest.in\n    while :\n    do\n      cat conftest.in conftest.in >conftest.tmp\n      mv conftest.tmp conftest.in\n      cp conftest.in conftest.nl\n      echo 'GREP' >> conftest.nl\n      \"$_G_path_prog\" -e 'GREP$' -e '-(cannot match)-' <conftest.nl >conftest.out 2>/dev/null || break\n      diff conftest.out conftest.nl >/dev/null 2>&1 || break\n      _G_count=`expr $_G_count + 1`\n      if test \"$_G_count\" -gt \"$_G_path_prog_max\"; then\n        # Best one so far, save it but keep looking for a better one\n        func_check_prog_result=$_G_path_prog\n        _G_path_prog_max=$_G_count\n      fi\n      # 10*(2^10) chars as input seems more than enough\n      test 10 -lt \"$_G_count\" && break\n    done\n    rm -f conftest.in conftest.tmp conftest.nl conftest.out\n  }\n\n  func_path_progs \"grep ggrep\" func_check_prog_grep $PATH:/usr/xpg4/bin\n  GREP=$func_path_progs_result\n}\n\n\n## ------------------------------- ##\n## User overridable command paths. ##\n## ------------------------------- ##\n\n# All uppercase variable names are used for environment variables.  These\n# variables can be overridden by the user before calling a script that\n# uses them if a suitable command of that name is not already available\n# in the command search PATH.\n\n: ${CP=\"cp -f\"}\n: ${ECHO=\"printf %s\\n\"}\n: ${EGREP=\"$GREP -E\"}\n: ${FGREP=\"$GREP -F\"}\n: ${LN_S=\"ln -s\"}\n: ${MAKE=\"make\"}\n: ${MKDIR=\"mkdir\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n: ${SHELL=\"${CONFIG_SHELL-/bin/sh}\"}\n\n\n## -------------------- ##\n## Useful sed snippets. ##\n## -------------------- ##\n\nsed_dirname='s|/[^/]*$||'\nsed_basename='s|^.*/||'\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nsed_quote_subst='s|\\([`\"$\\\\]\\)|\\\\\\1|g'\n\n# Same as above, but do not quote variable references.\nsed_double_quote_subst='s/\\([\"`\\\\]\\)/\\\\\\1/g'\n\n# Sed substitution that turns a string into a regex matching for the\n# string literally.\nsed_make_literal_regex='s|[].[^$\\\\*\\/]|\\\\&|g'\n\n# Sed substitution that converts a w32 file name or path\n# that contains forward slashes, into one that contains\n# (escaped) backslashes.  A very naive implementation.\nsed_naive_backslashify='s|\\\\\\\\*|\\\\|g;s|/|\\\\|g;s|\\\\|\\\\\\\\|g'\n\n# Re-'\\' parameter expansions in output of sed_double_quote_subst that\n# were '\\'-ed in input to the same.  If an odd number of '\\' preceded a\n# '$' in input to sed_double_quote_subst, that '$' was protected from\n# expansion.  Since each input '\\' is now two '\\'s, look for any number\n# of runs of four '\\'s followed by two '\\'s and then a '$'.  '\\' that '$'.\n_G_bs='\\\\'\n_G_bs2='\\\\\\\\'\n_G_bs4='\\\\\\\\\\\\\\\\'\n_G_dollar='\\$'\nsed_double_backslash=\"\\\n  s/$_G_bs4/&\\\\\n/g\n  s/^$_G_bs2$_G_dollar/$_G_bs&/\n  s/\\\\([^$_G_bs]\\\\)$_G_bs2$_G_dollar/\\\\1$_G_bs2$_G_bs$_G_dollar/g\n  s/\\n//g\"\n\n\n## ----------------- ##\n## Global variables. ##\n## ----------------- ##\n\n# Except for the global variables explicitly listed below, the following\n# functions in the '^func_' namespace, and the '^require_' namespace\n# variables initialised in the 'Resource management' section, sourcing\n# this file will not pollute your global namespace with anything\n# else. There's no portable way to scope variables in Bourne shell\n# though, so actually running these functions will sometimes place\n# results into a variable named after the function, and often use\n# temporary variables in the '^_G_' namespace. If you are careful to\n# avoid using those namespaces casually in your sourcing script, things\n# should continue to work as you expect. And, of course, you can freely\n# overwrite any of the functions or variables defined here before\n# calling anything to customize them.\n\nEXIT_SUCCESS=0\nEXIT_FAILURE=1\nEXIT_MISMATCH=63  # $? = 63 is used to indicate version mismatch to missing.\nEXIT_SKIP=77\t  # $? = 77 is used to indicate a skipped test to automake.\n\n# Allow overriding, eg assuming that you follow the convention of\n# putting '$debug_cmd' at the start of all your functions, you can get\n# bash to show function call trace with:\n#\n#    debug_cmd='eval echo \"${FUNCNAME[0]} $*\" >&2' bash your-script-name\ndebug_cmd=${debug_cmd-\":\"}\nexit_cmd=:\n\n# By convention, finish your script with:\n#\n#    exit $exit_status\n#\n# so that you can set exit_status to non-zero if you want to indicate\n# something went wrong during execution without actually bailing out at\n# the point of failure.\nexit_status=$EXIT_SUCCESS\n\n# Work around backward compatibility issue on IRIX 6.5. On IRIX 6.4+, sh\n# is ksh but when the shell is invoked as \"sh\" and the current value of\n# the _XPG environment variable is not equal to 1 (one), the special\n# positional parameter $0, within a function call, is the name of the\n# function.\nprogpath=$0\n\n# The name of this program.\nprogname=`$ECHO \"$progpath\" |$SED \"$sed_basename\"`\n\n# Make sure we have an absolute progpath for reexecution:\ncase $progpath in\n  [\\\\/]*|[A-Za-z]:\\\\*) ;;\n  *[\\\\/]*)\n     progdir=`$ECHO \"$progpath\" |$SED \"$sed_dirname\"`\n     progdir=`cd \"$progdir\" && pwd`\n     progpath=$progdir/$progname\n     ;;\n  *)\n     _G_IFS=$IFS\n     IFS=${PATH_SEPARATOR-:}\n     for progdir in $PATH; do\n       IFS=$_G_IFS\n       test -x \"$progdir/$progname\" && break\n     done\n     IFS=$_G_IFS\n     test -n \"$progdir\" || progdir=`pwd`\n     progpath=$progdir/$progname\n     ;;\nesac\n\n\n## ----------------- ##\n## Standard options. ##\n## ----------------- ##\n\n# The following options affect the operation of the functions defined\n# below, and should be set appropriately depending on run-time para-\n# meters passed on the command line.\n\nopt_dry_run=false\nopt_quiet=false\nopt_verbose=false\n\n# Categories 'all' and 'none' are always available.  Append any others\n# you will pass as the first argument to func_warning from your own\n# code.\nwarning_categories=\n\n# By default, display warnings according to 'opt_warning_types'.  Set\n# 'warning_func'  to ':' to elide all warnings, or func_fatal_error to\n# treat the next displayed warning as a fatal error.\nwarning_func=func_warn_and_continue\n\n# Set to 'all' to display all warnings, 'none' to suppress all\n# warnings, or a space delimited list of some subset of\n# 'warning_categories' to display only the listed warnings.\nopt_warning_types=all\n\n\n## -------------------- ##\n## Resource management. ##\n## -------------------- ##\n\n# This section contains definitions for functions that each ensure a\n# particular resource (a file, or a non-empty configuration variable for\n# example) is available, and if appropriate to extract default values\n# from pertinent package files. Call them using their associated\n# 'require_*' variable to ensure that they are executed, at most, once.\n#\n# It's entirely deliberate that calling these functions can set\n# variables that don't obey the namespace limitations obeyed by the rest\n# of this file, in order that that they be as useful as possible to\n# callers.\n\n\n# require_term_colors\n# -------------------\n# Allow display of bold text on terminals that support it.\nrequire_term_colors=func_require_term_colors\nfunc_require_term_colors ()\n{\n    $debug_cmd\n\n    test -t 1 && {\n      # COLORTERM and USE_ANSI_COLORS environment variables take\n      # precedence, because most terminfo databases neglect to describe\n      # whether color sequences are supported.\n      test -n \"${COLORTERM+set}\" && : ${USE_ANSI_COLORS=\"1\"}\n\n      if test 1 = \"$USE_ANSI_COLORS\"; then\n        # Standard ANSI escape sequences\n        tc_reset='\u001b[0m'\n        tc_bold='\u001b[1m';   tc_standout='\u001b[7m'\n        tc_red='\u001b[31m';   tc_green='\u001b[32m'\n        tc_blue='\u001b[34m';  tc_cyan='\u001b[36m'\n      else\n        # Otherwise trust the terminfo database after all.\n        test -n \"`tput sgr0 2>/dev/null`\" && {\n          tc_reset=`tput sgr0`\n          test -n \"`tput bold 2>/dev/null`\" && tc_bold=`tput bold`\n          tc_standout=$tc_bold\n          test -n \"`tput smso 2>/dev/null`\" && tc_standout=`tput smso`\n          test -n \"`tput setaf 1 2>/dev/null`\" && tc_red=`tput setaf 1`\n          test -n \"`tput setaf 2 2>/dev/null`\" && tc_green=`tput setaf 2`\n          test -n \"`tput setaf 4 2>/dev/null`\" && tc_blue=`tput setaf 4`\n          test -n \"`tput setaf 5 2>/dev/null`\" && tc_cyan=`tput setaf 5`\n        }\n      fi\n    }\n\n    require_term_colors=:\n}\n\n\n## ----------------- ##\n## Function library. ##\n## ----------------- ##\n\n# This section contains a variety of useful functions to call in your\n# scripts. Take note of the portable wrappers for features provided by\n# some modern shells, which will fall back to slower equivalents on\n# less featureful shells.\n\n\n# func_append VAR VALUE\n# ---------------------\n# Append VALUE onto the existing contents of VAR.\n\n  # We should try to minimise forks, especially on Windows where they are\n  # unreasonably slow, so skip the feature probes when bash or zsh are\n  # being used:\n  if test set = \"${BASH_VERSION+set}${ZSH_VERSION+set}\"; then\n    : ${_G_HAVE_ARITH_OP=\"yes\"}\n    : ${_G_HAVE_XSI_OPS=\"yes\"}\n    # The += operator was introduced in bash 3.1\n    case $BASH_VERSION in\n      [12].* | 3.0 | 3.0*) ;;\n      *)\n        : ${_G_HAVE_PLUSEQ_OP=\"yes\"}\n        ;;\n    esac\n  fi\n\n  # _G_HAVE_PLUSEQ_OP\n  # Can be empty, in which case the shell is probed, \"yes\" if += is\n  # useable or anything else if it does not work.\n  test -z \"$_G_HAVE_PLUSEQ_OP\" \\\n    && (eval 'x=a; x+=\" b\"; test \"a b\" = \"$x\"') 2>/dev/null \\\n    && _G_HAVE_PLUSEQ_OP=yes\n\nif test yes = \"$_G_HAVE_PLUSEQ_OP\"\nthen\n  # This is an XSI compatible shell, allowing a faster implementation...\n  eval 'func_append ()\n  {\n    $debug_cmd\n\n    eval \"$1+=\\$2\"\n  }'\nelse\n  # ...otherwise fall back to using expr, which is often a shell builtin.\n  func_append ()\n  {\n    $debug_cmd\n\n    eval \"$1=\\$$1\\$2\"\n  }\nfi\n\n\n# func_append_quoted VAR VALUE\n# ----------------------------\n# Quote VALUE and append to the end of shell variable VAR, separated\n# by a space.\nif test yes = \"$_G_HAVE_PLUSEQ_OP\"; then\n  eval 'func_append_quoted ()\n  {\n    $debug_cmd\n\n    func_quote_for_eval \"$2\"\n    eval \"$1+=\\\\ \\$func_quote_for_eval_result\"\n  }'\nelse\n  func_append_quoted ()\n  {\n    $debug_cmd\n\n    func_quote_for_eval \"$2\"\n    eval \"$1=\\$$1\\\\ \\$func_quote_for_eval_result\"\n  }\nfi\n\n\n# func_append_uniq VAR VALUE\n# --------------------------\n# Append unique VALUE onto the existing contents of VAR, assuming\n# entries are delimited by the first character of VALUE.  For example:\n#\n#   func_append_uniq options \" --another-option option-argument\"\n#\n# will only append to $options if \" --another-option option-argument \"\n# is not already present somewhere in $options already (note spaces at\n# each end implied by leading space in second argument).\nfunc_append_uniq ()\n{\n    $debug_cmd\n\n    eval _G_current_value='`$ECHO $'$1'`'\n    _G_delim=`expr \"$2\" : '\\(.\\)'`\n\n    case $_G_delim$_G_current_value$_G_delim in\n      *\"$2$_G_delim\"*) ;;\n      *) func_append \"$@\" ;;\n    esac\n}\n\n\n# func_arith TERM...\n# ------------------\n# Set func_arith_result to the result of evaluating TERMs.\n  test -z \"$_G_HAVE_ARITH_OP\" \\\n    && (eval 'test 2 = $(( 1 + 1 ))') 2>/dev/null \\\n    && _G_HAVE_ARITH_OP=yes\n\nif test yes = \"$_G_HAVE_ARITH_OP\"; then\n  eval 'func_arith ()\n  {\n    $debug_cmd\n\n    func_arith_result=$(( $* ))\n  }'\nelse\n  func_arith ()\n  {\n    $debug_cmd\n\n    func_arith_result=`expr \"$@\"`\n  }\nfi\n\n\n# func_basename FILE\n# ------------------\n# Set func_basename_result to FILE with everything up to and including\n# the last / stripped.\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  # If this shell supports suffix pattern removal, then use it to avoid\n  # forking. Hide the definitions single quotes in case the shell chokes\n  # on unsupported syntax...\n  _b='func_basename_result=${1##*/}'\n  _d='case $1 in\n        */*) func_dirname_result=${1%/*}$2 ;;\n        *  ) func_dirname_result=$3        ;;\n      esac'\n\nelse\n  # ...otherwise fall back to using sed.\n  _b='func_basename_result=`$ECHO \"$1\" |$SED \"$sed_basename\"`'\n  _d='func_dirname_result=`$ECHO \"$1\"  |$SED \"$sed_dirname\"`\n      if test \"X$func_dirname_result\" = \"X$1\"; then\n        func_dirname_result=$3\n      else\n        func_append func_dirname_result \"$2\"\n      fi'\nfi\n\neval 'func_basename ()\n{\n    $debug_cmd\n\n    '\"$_b\"'\n}'\n\n\n# func_dirname FILE APPEND NONDIR_REPLACEMENT\n# -------------------------------------------\n# Compute the dirname of FILE.  If nonempty, add APPEND to the result,\n# otherwise set result to NONDIR_REPLACEMENT.\neval 'func_dirname ()\n{\n    $debug_cmd\n\n    '\"$_d\"'\n}'\n\n\n# func_dirname_and_basename FILE APPEND NONDIR_REPLACEMENT\n# --------------------------------------------------------\n# Perform func_basename and func_dirname in a single function\n# call:\n#   dirname:  Compute the dirname of FILE.  If nonempty,\n#             add APPEND to the result, otherwise set result\n#             to NONDIR_REPLACEMENT.\n#             value returned in \"$func_dirname_result\"\n#   basename: Compute filename of FILE.\n#             value retuned in \"$func_basename_result\"\n# For efficiency, we do not delegate to the functions above but instead\n# duplicate the functionality here.\neval 'func_dirname_and_basename ()\n{\n    $debug_cmd\n\n    '\"$_b\"'\n    '\"$_d\"'\n}'\n\n\n# func_echo ARG...\n# ----------------\n# Echo program name prefixed message.\nfunc_echo ()\n{\n    $debug_cmd\n\n    _G_message=$*\n\n    func_echo_IFS=$IFS\n    IFS=$nl\n    for _G_line in $_G_message; do\n      IFS=$func_echo_IFS\n      $ECHO \"$progname: $_G_line\"\n    done\n    IFS=$func_echo_IFS\n}\n\n\n# func_echo_all ARG...\n# --------------------\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"$*\"\n}\n\n\n# func_echo_infix_1 INFIX ARG...\n# ------------------------------\n# Echo program name, followed by INFIX on the first line, with any\n# additional lines not showing INFIX.\nfunc_echo_infix_1 ()\n{\n    $debug_cmd\n\n    $require_term_colors\n\n    _G_infix=$1; shift\n    _G_indent=$_G_infix\n    _G_prefix=\"$progname: $_G_infix: \"\n    _G_message=$*\n\n    # Strip color escape sequences before counting printable length\n    for _G_tc in \"$tc_reset\" \"$tc_bold\" \"$tc_standout\" \"$tc_red\" \"$tc_green\" \"$tc_blue\" \"$tc_cyan\"\n    do\n      test -n \"$_G_tc\" && {\n        _G_esc_tc=`$ECHO \"$_G_tc\" | $SED \"$sed_make_literal_regex\"`\n        _G_indent=`$ECHO \"$_G_indent\" | $SED \"s|$_G_esc_tc||g\"`\n      }\n    done\n    _G_indent=\"$progname: \"`echo \"$_G_indent\" | $SED 's|.| |g'`\"  \" ## exclude from sc_prohibit_nested_quotes\n\n    func_echo_infix_1_IFS=$IFS\n    IFS=$nl\n    for _G_line in $_G_message; do\n      IFS=$func_echo_infix_1_IFS\n      $ECHO \"$_G_prefix$tc_bold$_G_line$tc_reset\" >&2\n      _G_prefix=$_G_indent\n    done\n    IFS=$func_echo_infix_1_IFS\n}\n\n\n# func_error ARG...\n# -----------------\n# Echo program name prefixed message to standard error.\nfunc_error ()\n{\n    $debug_cmd\n\n    $require_term_colors\n\n    func_echo_infix_1 \"  $tc_standout${tc_red}error$tc_reset\" \"$*\" >&2\n}\n\n\n# func_fatal_error ARG...\n# -----------------------\n# Echo program name prefixed message to standard error, and exit.\nfunc_fatal_error ()\n{\n    $debug_cmd\n\n    func_error \"$*\"\n    exit $EXIT_FAILURE\n}\n\n\n# func_grep EXPRESSION FILENAME\n# -----------------------------\n# Check whether EXPRESSION matches any line of FILENAME, without output.\nfunc_grep ()\n{\n    $debug_cmd\n\n    $GREP \"$1\" \"$2\" >/dev/null 2>&1\n}\n\n\n# func_len STRING\n# ---------------\n# Set func_len_result to the length of STRING. STRING may not\n# start with a hyphen.\n  test -z \"$_G_HAVE_XSI_OPS\" \\\n    && (eval 'x=a/b/c;\n      test 5aa/bb/cc = \"${#x}${x%%/*}${x%/*}${x#*/}${x##*/}\"') 2>/dev/null \\\n    && _G_HAVE_XSI_OPS=yes\n\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  eval 'func_len ()\n  {\n    $debug_cmd\n\n    func_len_result=${#1}\n  }'\nelse\n  func_len ()\n  {\n    $debug_cmd\n\n    func_len_result=`expr \"$1\" : \".*\" 2>/dev/null || echo $max_cmd_len`\n  }\nfi\n\n\n# func_mkdir_p DIRECTORY-PATH\n# ---------------------------\n# Make sure the entire path to DIRECTORY-PATH is available.\nfunc_mkdir_p ()\n{\n    $debug_cmd\n\n    _G_directory_path=$1\n    _G_dir_list=\n\n    if test -n \"$_G_directory_path\" && test : != \"$opt_dry_run\"; then\n\n      # Protect directory names starting with '-'\n      case $_G_directory_path in\n        -*) _G_directory_path=./$_G_directory_path ;;\n      esac\n\n      # While some portion of DIR does not yet exist...\n      while test ! -d \"$_G_directory_path\"; do\n        # ...make a list in topmost first order.  Use a colon delimited\n\t# list incase some portion of path contains whitespace.\n        _G_dir_list=$_G_directory_path:$_G_dir_list\n\n        # If the last portion added has no slash in it, the list is done\n        case $_G_directory_path in */*) ;; *) break ;; esac\n\n        # ...otherwise throw away the child directory and loop\n        _G_directory_path=`$ECHO \"$_G_directory_path\" | $SED -e \"$sed_dirname\"`\n      done\n      _G_dir_list=`$ECHO \"$_G_dir_list\" | $SED 's|:*$||'`\n\n      func_mkdir_p_IFS=$IFS; IFS=:\n      for _G_dir in $_G_dir_list; do\n\tIFS=$func_mkdir_p_IFS\n        # mkdir can fail with a 'File exist' error if two processes\n        # try to create one of the directories concurrently.  Don't\n        # stop in that case!\n        $MKDIR \"$_G_dir\" 2>/dev/null || :\n      done\n      IFS=$func_mkdir_p_IFS\n\n      # Bail out if we (or some other process) failed to create a directory.\n      test -d \"$_G_directory_path\" || \\\n        func_fatal_error \"Failed to create '$1'\"\n    fi\n}\n\n\n# func_mktempdir [BASENAME]\n# -------------------------\n# Make a temporary directory that won't clash with other running\n# libtool processes, and avoids race conditions if possible.  If\n# given, BASENAME is the basename for that directory.\nfunc_mktempdir ()\n{\n    $debug_cmd\n\n    _G_template=${TMPDIR-/tmp}/${1-$progname}\n\n    if test : = \"$opt_dry_run\"; then\n      # Return a directory name, but don't create it in dry-run mode\n      _G_tmpdir=$_G_template-$$\n    else\n\n      # If mktemp works, use that first and foremost\n      _G_tmpdir=`mktemp -d \"$_G_template-XXXXXXXX\" 2>/dev/null`\n\n      if test ! -d \"$_G_tmpdir\"; then\n        # Failing that, at least try and use $RANDOM to avoid a race\n        _G_tmpdir=$_G_template-${RANDOM-0}$$\n\n        func_mktempdir_umask=`umask`\n        umask 0077\n        $MKDIR \"$_G_tmpdir\"\n        umask $func_mktempdir_umask\n      fi\n\n      # If we're not in dry-run mode, bomb out on failure\n      test -d \"$_G_tmpdir\" || \\\n        func_fatal_error \"cannot create temporary directory '$_G_tmpdir'\"\n    fi\n\n    $ECHO \"$_G_tmpdir\"\n}\n\n\n# func_normal_abspath PATH\n# ------------------------\n# Remove doubled-up and trailing slashes, \".\" path components,\n# and cancel out any \"..\" path components in PATH after making\n# it an absolute path.\nfunc_normal_abspath ()\n{\n    $debug_cmd\n\n    # These SED scripts presuppose an absolute path with a trailing slash.\n    _G_pathcar='s|^/\\([^/]*\\).*$|\\1|'\n    _G_pathcdr='s|^/[^/]*||'\n    _G_removedotparts=':dotsl\n\t\ts|/\\./|/|g\n\t\tt dotsl\n\t\ts|/\\.$|/|'\n    _G_collapseslashes='s|/\\{1,\\}|/|g'\n    _G_finalslash='s|/*$|/|'\n\n    # Start from root dir and reassemble the path.\n    func_normal_abspath_result=\n    func_normal_abspath_tpath=$1\n    func_normal_abspath_altnamespace=\n    case $func_normal_abspath_tpath in\n      \"\")\n        # Empty path, that just means $cwd.\n        func_stripname '' '/' \"`pwd`\"\n        func_normal_abspath_result=$func_stripname_result\n        return\n        ;;\n      # The next three entries are used to spot a run of precisely\n      # two leading slashes without using negated character classes;\n      # we take advantage of case's first-match behaviour.\n      ///*)\n        # Unusual form of absolute path, do nothing.\n        ;;\n      //*)\n        # Not necessarily an ordinary path; POSIX reserves leading '//'\n        # and for example Cygwin uses it to access remote file shares\n        # over CIFS/SMB, so we conserve a leading double slash if found.\n        func_normal_abspath_altnamespace=/\n        ;;\n      /*)\n        # Absolute path, do nothing.\n        ;;\n      *)\n        # Relative path, prepend $cwd.\n        func_normal_abspath_tpath=`pwd`/$func_normal_abspath_tpath\n        ;;\n    esac\n\n    # Cancel out all the simple stuff to save iterations.  We also want\n    # the path to end with a slash for ease of parsing, so make sure\n    # there is one (and only one) here.\n    func_normal_abspath_tpath=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n          -e \"$_G_removedotparts\" -e \"$_G_collapseslashes\" -e \"$_G_finalslash\"`\n    while :; do\n      # Processed it all yet?\n      if test / = \"$func_normal_abspath_tpath\"; then\n        # If we ascended to the root using \"..\" the result may be empty now.\n        if test -z \"$func_normal_abspath_result\"; then\n          func_normal_abspath_result=/\n        fi\n        break\n      fi\n      func_normal_abspath_tcomponent=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n          -e \"$_G_pathcar\"`\n      func_normal_abspath_tpath=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n          -e \"$_G_pathcdr\"`\n      # Figure out what to do with it\n      case $func_normal_abspath_tcomponent in\n        \"\")\n          # Trailing empty path component, ignore it.\n          ;;\n        ..)\n          # Parent dir; strip last assembled component from result.\n          func_dirname \"$func_normal_abspath_result\"\n          func_normal_abspath_result=$func_dirname_result\n          ;;\n        *)\n          # Actual path component, append it.\n          func_append func_normal_abspath_result \"/$func_normal_abspath_tcomponent\"\n          ;;\n      esac\n    done\n    # Restore leading double-slash if one was found on entry.\n    func_normal_abspath_result=$func_normal_abspath_altnamespace$func_normal_abspath_result\n}\n\n\n# func_notquiet ARG...\n# --------------------\n# Echo program name prefixed message only when not in quiet mode.\nfunc_notquiet ()\n{\n    $debug_cmd\n\n    $opt_quiet || func_echo ${1+\"$@\"}\n\n    # A bug in bash halts the script if the last line of a function\n    # fails when set -e is in force, so we need another command to\n    # work around that:\n    :\n}\n\n\n# func_relative_path SRCDIR DSTDIR\n# --------------------------------\n# Set func_relative_path_result to the relative path from SRCDIR to DSTDIR.\nfunc_relative_path ()\n{\n    $debug_cmd\n\n    func_relative_path_result=\n    func_normal_abspath \"$1\"\n    func_relative_path_tlibdir=$func_normal_abspath_result\n    func_normal_abspath \"$2\"\n    func_relative_path_tbindir=$func_normal_abspath_result\n\n    # Ascend the tree starting from libdir\n    while :; do\n      # check if we have found a prefix of bindir\n      case $func_relative_path_tbindir in\n        $func_relative_path_tlibdir)\n          # found an exact match\n          func_relative_path_tcancelled=\n          break\n          ;;\n        $func_relative_path_tlibdir*)\n          # found a matching prefix\n          func_stripname \"$func_relative_path_tlibdir\" '' \"$func_relative_path_tbindir\"\n          func_relative_path_tcancelled=$func_stripname_result\n          if test -z \"$func_relative_path_result\"; then\n            func_relative_path_result=.\n          fi\n          break\n          ;;\n        *)\n          func_dirname $func_relative_path_tlibdir\n          func_relative_path_tlibdir=$func_dirname_result\n          if test -z \"$func_relative_path_tlibdir\"; then\n            # Have to descend all the way to the root!\n            func_relative_path_result=../$func_relative_path_result\n            func_relative_path_tcancelled=$func_relative_path_tbindir\n            break\n          fi\n          func_relative_path_result=../$func_relative_path_result\n          ;;\n      esac\n    done\n\n    # Now calculate path; take care to avoid doubling-up slashes.\n    func_stripname '' '/' \"$func_relative_path_result\"\n    func_relative_path_result=$func_stripname_result\n    func_stripname '/' '/' \"$func_relative_path_tcancelled\"\n    if test -n \"$func_stripname_result\"; then\n      func_append func_relative_path_result \"/$func_stripname_result\"\n    fi\n\n    # Normalisation. If bindir is libdir, return '.' else relative path.\n    if test -n \"$func_relative_path_result\"; then\n      func_stripname './' '' \"$func_relative_path_result\"\n      func_relative_path_result=$func_stripname_result\n    fi\n\n    test -n \"$func_relative_path_result\" || func_relative_path_result=.\n\n    :\n}\n\n\n# func_quote_for_eval ARG...\n# --------------------------\n# Aesthetically quote ARGs to be evaled later.\n# This function returns two values:\n#   i) func_quote_for_eval_result\n#      double-quoted, suitable for a subsequent eval\n#  ii) func_quote_for_eval_unquoted_result\n#      has all characters that are still active within double\n#      quotes backslashified.\nfunc_quote_for_eval ()\n{\n    $debug_cmd\n\n    func_quote_for_eval_unquoted_result=\n    func_quote_for_eval_result=\n    while test 0 -lt $#; do\n      case $1 in\n        *[\\\\\\`\\\"\\$]*)\n\t  _G_unquoted_arg=`printf '%s\\n' \"$1\" |$SED \"$sed_quote_subst\"` ;;\n        *)\n          _G_unquoted_arg=$1 ;;\n      esac\n      if test -n \"$func_quote_for_eval_unquoted_result\"; then\n\tfunc_append func_quote_for_eval_unquoted_result \" $_G_unquoted_arg\"\n      else\n        func_append func_quote_for_eval_unquoted_result \"$_G_unquoted_arg\"\n      fi\n\n      case $_G_unquoted_arg in\n        # Double-quote args containing shell metacharacters to delay\n        # word splitting, command substitution and variable expansion\n        # for a subsequent eval.\n        # Many Bourne shells cannot handle close brackets correctly\n        # in scan sets, so we specify it separately.\n        *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n          _G_quoted_arg=\\\"$_G_unquoted_arg\\\"\n          ;;\n        *)\n          _G_quoted_arg=$_G_unquoted_arg\n\t  ;;\n      esac\n\n      if test -n \"$func_quote_for_eval_result\"; then\n\tfunc_append func_quote_for_eval_result \" $_G_quoted_arg\"\n      else\n        func_append func_quote_for_eval_result \"$_G_quoted_arg\"\n      fi\n      shift\n    done\n}\n\n\n# func_quote_for_expand ARG\n# -------------------------\n# Aesthetically quote ARG to be evaled later; same as above,\n# but do not quote variable references.\nfunc_quote_for_expand ()\n{\n    $debug_cmd\n\n    case $1 in\n      *[\\\\\\`\\\"]*)\n\t_G_arg=`$ECHO \"$1\" | $SED \\\n\t    -e \"$sed_double_quote_subst\" -e \"$sed_double_backslash\"` ;;\n      *)\n        _G_arg=$1 ;;\n    esac\n\n    case $_G_arg in\n      # Double-quote args containing shell metacharacters to delay\n      # word splitting and command substitution for a subsequent eval.\n      # Many Bourne shells cannot handle close brackets correctly\n      # in scan sets, so we specify it separately.\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n        _G_arg=\\\"$_G_arg\\\"\n        ;;\n    esac\n\n    func_quote_for_expand_result=$_G_arg\n}\n\n\n# func_stripname PREFIX SUFFIX NAME\n# ---------------------------------\n# strip PREFIX and SUFFIX from NAME, and store in func_stripname_result.\n# PREFIX and SUFFIX must not contain globbing or regex special\n# characters, hashes, percent signs, but SUFFIX may contain a leading\n# dot (in which case that matches only a dot).\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  eval 'func_stripname ()\n  {\n    $debug_cmd\n\n    # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are\n    # positional parameters, so assign one to ordinary variable first.\n    func_stripname_result=$3\n    func_stripname_result=${func_stripname_result#\"$1\"}\n    func_stripname_result=${func_stripname_result%\"$2\"}\n  }'\nelse\n  func_stripname ()\n  {\n    $debug_cmd\n\n    case $2 in\n      .*) func_stripname_result=`$ECHO \"$3\" | $SED -e \"s%^$1%%\" -e \"s%\\\\\\\\$2\\$%%\"`;;\n      *)  func_stripname_result=`$ECHO \"$3\" | $SED -e \"s%^$1%%\" -e \"s%$2\\$%%\"`;;\n    esac\n  }\nfi\n\n\n# func_show_eval CMD [FAIL_EXP]\n# -----------------------------\n# Unless opt_quiet is true, then output CMD.  Then, if opt_dryrun is\n# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP\n# is given, then evaluate it.\nfunc_show_eval ()\n{\n    $debug_cmd\n\n    _G_cmd=$1\n    _G_fail_exp=${2-':'}\n\n    func_quote_for_expand \"$_G_cmd\"\n    eval \"func_notquiet $func_quote_for_expand_result\"\n\n    $opt_dry_run || {\n      eval \"$_G_cmd\"\n      _G_status=$?\n      if test 0 -ne \"$_G_status\"; then\n\teval \"(exit $_G_status); $_G_fail_exp\"\n      fi\n    }\n}\n\n\n# func_show_eval_locale CMD [FAIL_EXP]\n# ------------------------------------\n# Unless opt_quiet is true, then output CMD.  Then, if opt_dryrun is\n# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP\n# is given, then evaluate it.  Use the saved locale for evaluation.\nfunc_show_eval_locale ()\n{\n    $debug_cmd\n\n    _G_cmd=$1\n    _G_fail_exp=${2-':'}\n\n    $opt_quiet || {\n      func_quote_for_expand \"$_G_cmd\"\n      eval \"func_echo $func_quote_for_expand_result\"\n    }\n\n    $opt_dry_run || {\n      eval \"$_G_user_locale\n\t    $_G_cmd\"\n      _G_status=$?\n      eval \"$_G_safe_locale\"\n      if test 0 -ne \"$_G_status\"; then\n\teval \"(exit $_G_status); $_G_fail_exp\"\n      fi\n    }\n}\n\n\n# func_tr_sh\n# ----------\n# Turn $1 into a string suitable for a shell variable name.\n# Result is stored in $func_tr_sh_result.  All characters\n# not in the set a-zA-Z0-9_ are replaced with '_'. Further,\n# if $1 begins with a digit, a '_' is prepended as well.\nfunc_tr_sh ()\n{\n    $debug_cmd\n\n    case $1 in\n    [0-9]* | *[!a-zA-Z0-9_]*)\n      func_tr_sh_result=`$ECHO \"$1\" | $SED -e 's/^\\([0-9]\\)/_\\1/' -e 's/[^a-zA-Z0-9_]/_/g'`\n      ;;\n    * )\n      func_tr_sh_result=$1\n      ;;\n    esac\n}\n\n\n# func_verbose ARG...\n# -------------------\n# Echo program name prefixed message in verbose mode only.\nfunc_verbose ()\n{\n    $debug_cmd\n\n    $opt_verbose && func_echo \"$*\"\n\n    :\n}\n\n\n# func_warn_and_continue ARG...\n# -----------------------------\n# Echo program name prefixed warning message to standard error.\nfunc_warn_and_continue ()\n{\n    $debug_cmd\n\n    $require_term_colors\n\n    func_echo_infix_1 \"${tc_red}warning$tc_reset\" \"$*\" >&2\n}\n\n\n# func_warning CATEGORY ARG...\n# ----------------------------\n# Echo program name prefixed warning message to standard error. Warning\n# messages can be filtered according to CATEGORY, where this function\n# elides messages where CATEGORY is not listed in the global variable\n# 'opt_warning_types'.\nfunc_warning ()\n{\n    $debug_cmd\n\n    # CATEGORY must be in the warning_categories list!\n    case \" $warning_categories \" in\n      *\" $1 \"*) ;;\n      *) func_internal_error \"invalid warning category '$1'\" ;;\n    esac\n\n    _G_category=$1\n    shift\n\n    case \" $opt_warning_types \" in\n      *\" $_G_category \"*) $warning_func ${1+\"$@\"} ;;\n    esac\n}\n\n\n# func_sort_ver VER1 VER2\n# -----------------------\n# 'sort -V' is not generally available.\n# Note this deviates from the version comparison in automake\n# in that it treats 1.5 < 1.5.0, and treats 1.4.4a < 1.4-p3a\n# but this should suffice as we won't be specifying old\n# version formats or redundant trailing .0 in bootstrap.conf.\n# If we did want full compatibility then we should probably\n# use m4_version_compare from autoconf.\nfunc_sort_ver ()\n{\n    $debug_cmd\n\n    printf '%s\\n%s\\n' \"$1\" \"$2\" \\\n      | sort -t. -k 1,1n -k 2,2n -k 3,3n -k 4,4n -k 5,5n -k 6,6n -k 7,7n -k 8,8n -k 9,9n\n}\n\n# func_lt_ver PREV CURR\n# ---------------------\n# Return true if PREV and CURR are in the correct order according to\n# func_sort_ver, otherwise false.  Use it like this:\n#\n#  func_lt_ver \"$prev_ver\" \"$proposed_ver\" || func_fatal_error \"...\"\nfunc_lt_ver ()\n{\n    $debug_cmd\n\n    test \"x$1\" = x`func_sort_ver \"$1\" \"$2\" | $SED 1q`\n}\n\n\n# Local variables:\n# mode: shell-script\n# sh-indentation: 2\n# eval: (add-hook 'before-save-hook 'time-stamp)\n# time-stamp-pattern: \"10/scriptversion=%:y-%02m-%02d.%02H; # UTC\"\n# time-stamp-time-zone: \"UTC\"\n# End:\n#! /bin/sh\n\n# Set a version string for this script.\nscriptversion=2014-01-07.03; # UTC\n\n# A portable, pluggable option parser for Bourne shell.\n# Written by Gary V. Vaughan, 2010\n\n# Copyright (C) 2010-2015 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n# Please report bugs or propose patches to gary@gnu.org.\n\n\n## ------ ##\n## Usage. ##\n## ------ ##\n\n# This file is a library for parsing options in your shell scripts along\n# with assorted other useful supporting features that you can make use\n# of too.\n#\n# For the simplest scripts you might need only:\n#\n#   #!/bin/sh\n#   . relative/path/to/funclib.sh\n#   . relative/path/to/options-parser\n#   scriptversion=1.0\n#   func_options ${1+\"$@\"}\n#   eval set dummy \"$func_options_result\"; shift\n#   ...rest of your script...\n#\n# In order for the '--version' option to work, you will need to have a\n# suitably formatted comment like the one at the top of this file\n# starting with '# Written by ' and ending with '# warranty; '.\n#\n# For '-h' and '--help' to work, you will also need a one line\n# description of your script's purpose in a comment directly above the\n# '# Written by ' line, like the one at the top of this file.\n#\n# The default options also support '--debug', which will turn on shell\n# execution tracing (see the comment above debug_cmd below for another\n# use), and '--verbose' and the func_verbose function to allow your script\n# to display verbose messages only when your user has specified\n# '--verbose'.\n#\n# After sourcing this file, you can plug processing for additional\n# options by amending the variables from the 'Configuration' section\n# below, and following the instructions in the 'Option parsing'\n# section further down.\n\n## -------------- ##\n## Configuration. ##\n## -------------- ##\n\n# You should override these variables in your script after sourcing this\n# file so that they reflect the customisations you have added to the\n# option parser.\n\n# The usage line for option parsing errors and the start of '-h' and\n# '--help' output messages. You can embed shell variables for delayed\n# expansion at the time the message is displayed, but you will need to\n# quote other shell meta-characters carefully to prevent them being\n# expanded when the contents are evaled.\nusage='$progpath [OPTION]...'\n\n# Short help message in response to '-h' and '--help'.  Add to this or\n# override it after sourcing this library to reflect the full set of\n# options your script accepts.\nusage_message=\"\\\n       --debug        enable verbose shell tracing\n   -W, --warnings=CATEGORY\n                      report the warnings falling in CATEGORY [all]\n   -v, --verbose      verbosely report processing\n       --version      print version information and exit\n   -h, --help         print short or long help message and exit\n\"\n\n# Additional text appended to 'usage_message' in response to '--help'.\nlong_help_message=\"\nWarning categories include:\n       'all'          show all warnings\n       'none'         turn off all the warnings\n       'error'        warnings are treated as fatal errors\"\n\n# Help message printed before fatal option parsing errors.\nfatal_help=\"Try '\\$progname --help' for more information.\"\n\n\n\n## ------------------------- ##\n## Hook function management. ##\n## ------------------------- ##\n\n# This section contains functions for adding, removing, and running hooks\n# to the main code.  A hook is just a named list of of function, that can\n# be run in order later on.\n\n# func_hookable FUNC_NAME\n# -----------------------\n# Declare that FUNC_NAME will run hooks added with\n# 'func_add_hook FUNC_NAME ...'.\nfunc_hookable ()\n{\n    $debug_cmd\n\n    func_append hookable_fns \" $1\"\n}\n\n\n# func_add_hook FUNC_NAME HOOK_FUNC\n# ---------------------------------\n# Request that FUNC_NAME call HOOK_FUNC before it returns.  FUNC_NAME must\n# first have been declared \"hookable\" by a call to 'func_hookable'.\nfunc_add_hook ()\n{\n    $debug_cmd\n\n    case \" $hookable_fns \" in\n      *\" $1 \"*) ;;\n      *) func_fatal_error \"'$1' does not accept hook functions.\" ;;\n    esac\n\n    eval func_append ${1}_hooks '\" $2\"'\n}\n\n\n# func_remove_hook FUNC_NAME HOOK_FUNC\n# ------------------------------------\n# Remove HOOK_FUNC from the list of functions called by FUNC_NAME.\nfunc_remove_hook ()\n{\n    $debug_cmd\n\n    eval ${1}_hooks='`$ECHO \"\\$'$1'_hooks\" |$SED \"s| '$2'||\"`'\n}\n\n\n# func_run_hooks FUNC_NAME [ARG]...\n# ---------------------------------\n# Run all hook functions registered to FUNC_NAME.\n# It is assumed that the list of hook functions contains nothing more\n# than a whitespace-delimited list of legal shell function names, and\n# no effort is wasted trying to catch shell meta-characters or preserve\n# whitespace.\nfunc_run_hooks ()\n{\n    $debug_cmd\n\n    case \" $hookable_fns \" in\n      *\" $1 \"*) ;;\n      *) func_fatal_error \"'$1' does not support hook funcions.n\" ;;\n    esac\n\n    eval _G_hook_fns=\\$$1_hooks; shift\n\n    for _G_hook in $_G_hook_fns; do\n      eval $_G_hook '\"$@\"'\n\n      # store returned options list back into positional\n      # parameters for next 'cmd' execution.\n      eval _G_hook_result=\\$${_G_hook}_result\n      eval set dummy \"$_G_hook_result\"; shift\n    done\n\n    func_quote_for_eval ${1+\"$@\"}\n    func_run_hooks_result=$func_quote_for_eval_result\n}\n\n\n\n## --------------- ##\n## Option parsing. ##\n## --------------- ##\n\n# In order to add your own option parsing hooks, you must accept the\n# full positional parameter list in your hook function, remove any\n# options that you action, and then pass back the remaining unprocessed\n# options in '<hooked_function_name>_result', escaped suitably for\n# 'eval'.  Like this:\n#\n#    my_options_prep ()\n#    {\n#        $debug_cmd\n#\n#        # Extend the existing usage message.\n#        usage_message=$usage_message'\n#      -s, --silent       don'\\''t print informational messages\n#    '\n#\n#        func_quote_for_eval ${1+\"$@\"}\n#        my_options_prep_result=$func_quote_for_eval_result\n#    }\n#    func_add_hook func_options_prep my_options_prep\n#\n#\n#    my_silent_option ()\n#    {\n#        $debug_cmd\n#\n#        # Note that for efficiency, we parse as many options as we can\n#        # recognise in a loop before passing the remainder back to the\n#        # caller on the first unrecognised argument we encounter.\n#        while test $# -gt 0; do\n#          opt=$1; shift\n#          case $opt in\n#            --silent|-s) opt_silent=: ;;\n#            # Separate non-argument short options:\n#            -s*)         func_split_short_opt \"$_G_opt\"\n#                         set dummy \"$func_split_short_opt_name\" \\\n#                             \"-$func_split_short_opt_arg\" ${1+\"$@\"}\n#                         shift\n#                         ;;\n#            *)            set dummy \"$_G_opt\" \"$*\"; shift; break ;;\n#          esac\n#        done\n#\n#        func_quote_for_eval ${1+\"$@\"}\n#        my_silent_option_result=$func_quote_for_eval_result\n#    }\n#    func_add_hook func_parse_options my_silent_option\n#\n#\n#    my_option_validation ()\n#    {\n#        $debug_cmd\n#\n#        $opt_silent && $opt_verbose && func_fatal_help \"\\\n#    '--silent' and '--verbose' options are mutually exclusive.\"\n#\n#        func_quote_for_eval ${1+\"$@\"}\n#        my_option_validation_result=$func_quote_for_eval_result\n#    }\n#    func_add_hook func_validate_options my_option_validation\n#\n# You'll alse need to manually amend $usage_message to reflect the extra\n# options you parse.  It's preferable to append if you can, so that\n# multiple option parsing hooks can be added safely.\n\n\n# func_options [ARG]...\n# ---------------------\n# All the functions called inside func_options are hookable. See the\n# individual implementations for details.\nfunc_hookable func_options\nfunc_options ()\n{\n    $debug_cmd\n\n    func_options_prep ${1+\"$@\"}\n    eval func_parse_options \\\n        ${func_options_prep_result+\"$func_options_prep_result\"}\n    eval func_validate_options \\\n        ${func_parse_options_result+\"$func_parse_options_result\"}\n\n    eval func_run_hooks func_options \\\n        ${func_validate_options_result+\"$func_validate_options_result\"}\n\n    # save modified positional parameters for caller\n    func_options_result=$func_run_hooks_result\n}\n\n\n# func_options_prep [ARG]...\n# --------------------------\n# All initialisations required before starting the option parse loop.\n# Note that when calling hook functions, we pass through the list of\n# positional parameters.  If a hook function modifies that list, and\n# needs to propogate that back to rest of this script, then the complete\n# modified list must be put in 'func_run_hooks_result' before\n# returning.\nfunc_hookable func_options_prep\nfunc_options_prep ()\n{\n    $debug_cmd\n\n    # Option defaults:\n    opt_verbose=false\n    opt_warning_types=\n\n    func_run_hooks func_options_prep ${1+\"$@\"}\n\n    # save modified positional parameters for caller\n    func_options_prep_result=$func_run_hooks_result\n}\n\n\n# func_parse_options [ARG]...\n# ---------------------------\n# The main option parsing loop.\nfunc_hookable func_parse_options\nfunc_parse_options ()\n{\n    $debug_cmd\n\n    func_parse_options_result=\n\n    # this just eases exit handling\n    while test $# -gt 0; do\n      # Defer to hook functions for initial option parsing, so they\n      # get priority in the event of reusing an option name.\n      func_run_hooks func_parse_options ${1+\"$@\"}\n\n      # Adjust func_parse_options positional parameters to match\n      eval set dummy \"$func_run_hooks_result\"; shift\n\n      # Break out of the loop if we already parsed every option.\n      test $# -gt 0 || break\n\n      _G_opt=$1\n      shift\n      case $_G_opt in\n        --debug|-x)   debug_cmd='set -x'\n                      func_echo \"enabling shell trace mode\"\n                      $debug_cmd\n                      ;;\n\n        --no-warnings|--no-warning|--no-warn)\n                      set dummy --warnings none ${1+\"$@\"}\n                      shift\n\t\t      ;;\n\n        --warnings|--warning|-W)\n                      test $# = 0 && func_missing_arg $_G_opt && break\n                      case \" $warning_categories $1\" in\n                        *\" $1 \"*)\n                          # trailing space prevents matching last $1 above\n                          func_append_uniq opt_warning_types \" $1\"\n                          ;;\n                        *all)\n                          opt_warning_types=$warning_categories\n                          ;;\n                        *none)\n                          opt_warning_types=none\n                          warning_func=:\n                          ;;\n                        *error)\n                          opt_warning_types=$warning_categories\n                          warning_func=func_fatal_error\n                          ;;\n                        *)\n                          func_fatal_error \\\n                             \"unsupported warning category: '$1'\"\n                          ;;\n                      esac\n                      shift\n                      ;;\n\n        --verbose|-v) opt_verbose=: ;;\n        --version)    func_version ;;\n        -\\?|-h)       func_usage ;;\n        --help)       func_help ;;\n\n\t# Separate optargs to long options (plugins may need this):\n\t--*=*)        func_split_equals \"$_G_opt\"\n\t              set dummy \"$func_split_equals_lhs\" \\\n                          \"$func_split_equals_rhs\" ${1+\"$@\"}\n                      shift\n                      ;;\n\n       # Separate optargs to short options:\n        -W*)\n                      func_split_short_opt \"$_G_opt\"\n                      set dummy \"$func_split_short_opt_name\" \\\n                          \"$func_split_short_opt_arg\" ${1+\"$@\"}\n                      shift\n                      ;;\n\n        # Separate non-argument short options:\n        -\\?*|-h*|-v*|-x*)\n                      func_split_short_opt \"$_G_opt\"\n                      set dummy \"$func_split_short_opt_name\" \\\n                          \"-$func_split_short_opt_arg\" ${1+\"$@\"}\n                      shift\n                      ;;\n\n        --)           break ;;\n        -*)           func_fatal_help \"unrecognised option: '$_G_opt'\" ;;\n        *)            set dummy \"$_G_opt\" ${1+\"$@\"}; shift; break ;;\n      esac\n    done\n\n    # save modified positional parameters for caller\n    func_quote_for_eval ${1+\"$@\"}\n    func_parse_options_result=$func_quote_for_eval_result\n}\n\n\n# func_validate_options [ARG]...\n# ------------------------------\n# Perform any sanity checks on option settings and/or unconsumed\n# arguments.\nfunc_hookable func_validate_options\nfunc_validate_options ()\n{\n    $debug_cmd\n\n    # Display all warnings if -W was not given.\n    test -n \"$opt_warning_types\" || opt_warning_types=\" $warning_categories\"\n\n    func_run_hooks func_validate_options ${1+\"$@\"}\n\n    # Bail if the options were screwed!\n    $exit_cmd $EXIT_FAILURE\n\n    # save modified positional parameters for caller\n    func_validate_options_result=$func_run_hooks_result\n}\n\n\n\n## ----------------- ##\n## Helper functions. ##\n## ----------------- ##\n\n# This section contains the helper functions used by the rest of the\n# hookable option parser framework in ascii-betical order.\n\n\n# func_fatal_help ARG...\n# ----------------------\n# Echo program name prefixed message to standard error, followed by\n# a help hint, and exit.\nfunc_fatal_help ()\n{\n    $debug_cmd\n\n    eval \\$ECHO \\\"\"Usage: $usage\"\\\"\n    eval \\$ECHO \\\"\"$fatal_help\"\\\"\n    func_error ${1+\"$@\"}\n    exit $EXIT_FAILURE\n}\n\n\n# func_help\n# ---------\n# Echo long help message to standard output and exit.\nfunc_help ()\n{\n    $debug_cmd\n\n    func_usage_message\n    $ECHO \"$long_help_message\"\n    exit 0\n}\n\n\n# func_missing_arg ARGNAME\n# ------------------------\n# Echo program name prefixed message to standard error and set global\n# exit_cmd.\nfunc_missing_arg ()\n{\n    $debug_cmd\n\n    func_error \"Missing argument for '$1'.\"\n    exit_cmd=exit\n}\n\n\n# func_split_equals STRING\n# ------------------------\n# Set func_split_equals_lhs and func_split_equals_rhs shell variables after\n# splitting STRING at the '=' sign.\ntest -z \"$_G_HAVE_XSI_OPS\" \\\n    && (eval 'x=a/b/c;\n      test 5aa/bb/cc = \"${#x}${x%%/*}${x%/*}${x#*/}${x##*/}\"') 2>/dev/null \\\n    && _G_HAVE_XSI_OPS=yes\n\nif test yes = \"$_G_HAVE_XSI_OPS\"\nthen\n  # This is an XSI compatible shell, allowing a faster implementation...\n  eval 'func_split_equals ()\n  {\n      $debug_cmd\n\n      func_split_equals_lhs=${1%%=*}\n      func_split_equals_rhs=${1#*=}\n      test \"x$func_split_equals_lhs\" = \"x$1\" \\\n        && func_split_equals_rhs=\n  }'\nelse\n  # ...otherwise fall back to using expr, which is often a shell builtin.\n  func_split_equals ()\n  {\n      $debug_cmd\n\n      func_split_equals_lhs=`expr \"x$1\" : 'x\\([^=]*\\)'`\n      func_split_equals_rhs=\n      test \"x$func_split_equals_lhs\" = \"x$1\" \\\n        || func_split_equals_rhs=`expr \"x$1\" : 'x[^=]*=\\(.*\\)$'`\n  }\nfi #func_split_equals\n\n\n# func_split_short_opt SHORTOPT\n# -----------------------------\n# Set func_split_short_opt_name and func_split_short_opt_arg shell\n# variables after splitting SHORTOPT after the 2nd character.\nif test yes = \"$_G_HAVE_XSI_OPS\"\nthen\n  # This is an XSI compatible shell, allowing a faster implementation...\n  eval 'func_split_short_opt ()\n  {\n      $debug_cmd\n\n      func_split_short_opt_arg=${1#??}\n      func_split_short_opt_name=${1%\"$func_split_short_opt_arg\"}\n  }'\nelse\n  # ...otherwise fall back to using expr, which is often a shell builtin.\n  func_split_short_opt ()\n  {\n      $debug_cmd\n\n      func_split_short_opt_name=`expr \"x$1\" : 'x-\\(.\\)'`\n      func_split_short_opt_arg=`expr \"x$1\" : 'x-.\\(.*\\)$'`\n  }\nfi #func_split_short_opt\n\n\n# func_usage\n# ----------\n# Echo short help message to standard output and exit.\nfunc_usage ()\n{\n    $debug_cmd\n\n    func_usage_message\n    $ECHO \"Run '$progname --help |${PAGER-more}' for full usage\"\n    exit 0\n}\n\n\n# func_usage_message\n# ------------------\n# Echo short help message to standard output.\nfunc_usage_message ()\n{\n    $debug_cmd\n\n    eval \\$ECHO \\\"\"Usage: $usage\"\\\"\n    echo\n    $SED -n 's|^# ||\n        /^Written by/{\n          x;p;x\n        }\n\th\n\t/^Written by/q' < \"$progpath\"\n    echo\n    eval \\$ECHO \\\"\"$usage_message\"\\\"\n}\n\n\n# func_version\n# ------------\n# Echo version message to standard output and exit.\nfunc_version ()\n{\n    $debug_cmd\n\n    printf '%s\\n' \"$progname $scriptversion\"\n    $SED -n '\n        /(C)/!b go\n        :more\n        /\\./!{\n          N\n          s|\\n# | |\n          b more\n        }\n        :go\n        /^# Written by /,/# warranty; / {\n          s|^# ||\n          s|^# *$||\n          s|\\((C)\\)[ 0-9,-]*[ ,-]\\([1-9][0-9]* \\)|\\1 \\2|\n          p\n        }\n        /^# Written by / {\n          s|^# ||\n          p\n        }\n        /^warranty; /q' < \"$progpath\"\n\n    exit $?\n}\n\n\n# Local variables:\n# mode: shell-script\n# sh-indentation: 2\n# eval: (add-hook 'before-save-hook 'time-stamp)\n# time-stamp-pattern: \"10/scriptversion=%:y-%02m-%02d.%02H; # UTC\"\n# time-stamp-time-zone: \"UTC\"\n# End:\n\n# Set a version string.\nscriptversion='(GNU libtool) 2.4.6'\n\n\n# func_echo ARG...\n# ----------------\n# Libtool also displays the current mode in messages, so override\n# funclib.sh func_echo with this custom definition.\nfunc_echo ()\n{\n    $debug_cmd\n\n    _G_message=$*\n\n    func_echo_IFS=$IFS\n    IFS=$nl\n    for _G_line in $_G_message; do\n      IFS=$func_echo_IFS\n      $ECHO \"$progname${opt_mode+: $opt_mode}: $_G_line\"\n    done\n    IFS=$func_echo_IFS\n}\n\n\n# func_warning ARG...\n# -------------------\n# Libtool warnings are not categorized, so override funclib.sh\n# func_warning with this simpler definition.\nfunc_warning ()\n{\n    $debug_cmd\n\n    $warning_func ${1+\"$@\"}\n}\n\n\n## ---------------- ##\n## Options parsing. ##\n## ---------------- ##\n\n# Hook in the functions to make sure our own options are parsed during\n# the option parsing loop.\n\nusage='$progpath [OPTION]... [MODE-ARG]...'\n\n# Short help message in response to '-h'.\nusage_message=\"Options:\n       --config             show all configuration variables\n       --debug              enable verbose shell tracing\n   -n, --dry-run            display commands without modifying any files\n       --features           display basic configuration information and exit\n       --mode=MODE          use operation mode MODE\n       --no-warnings        equivalent to '-Wnone'\n       --preserve-dup-deps  don't remove duplicate dependency libraries\n       --quiet, --silent    don't print informational messages\n       --tag=TAG            use configuration variables from tag TAG\n   -v, --verbose            print more informational messages than default\n       --version            print version information\n   -W, --warnings=CATEGORY  report the warnings falling in CATEGORY [all]\n   -h, --help, --help-all   print short, long, or detailed help message\n\"\n\n# Additional text appended to 'usage_message' in response to '--help'.\nfunc_help ()\n{\n    $debug_cmd\n\n    func_usage_message\n    $ECHO \"$long_help_message\n\nMODE must be one of the following:\n\n       clean           remove files from the build directory\n       compile         compile a source file into a libtool object\n       execute         automatically set library path, then run a program\n       finish          complete the installation of libtool libraries\n       install         install libraries or executables\n       link            create a library or an executable\n       uninstall       remove libraries from an installed directory\n\nMODE-ARGS vary depending on the MODE.  When passed as first option,\n'--mode=MODE' may be abbreviated as 'MODE' or a unique abbreviation of that.\nTry '$progname --help --mode=MODE' for a more detailed description of MODE.\n\nWhen reporting a bug, please describe a test case to reproduce it and\ninclude the following information:\n\n       host-triplet:   $host\n       shell:          $SHELL\n       compiler:       $LTCC\n       compiler flags: $LTCFLAGS\n       linker:         $LD (gnu? $with_gnu_ld)\n       version:        $progname (GNU libtool) 2.4.6\n       automake:       `($AUTOMAKE --version) 2>/dev/null |$SED 1q`\n       autoconf:       `($AUTOCONF --version) 2>/dev/null |$SED 1q`\n\nReport bugs to <bug-libtool@gnu.org>.\nGNU libtool home page: <http://www.gnu.org/software/libtool/>.\nGeneral help using GNU software: <http://www.gnu.org/gethelp/>.\"\n    exit 0\n}\n\n\n# func_lo2o OBJECT-NAME\n# ---------------------\n# Transform OBJECT-NAME from a '.lo' suffix to the platform specific\n# object suffix.\n\nlo2o=s/\\\\.lo\\$/.$objext/\no2lo=s/\\\\.$objext\\$/.lo/\n\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  eval 'func_lo2o ()\n  {\n    case $1 in\n      *.lo) func_lo2o_result=${1%.lo}.$objext ;;\n      *   ) func_lo2o_result=$1               ;;\n    esac\n  }'\n\n  # func_xform LIBOBJ-OR-SOURCE\n  # ---------------------------\n  # Transform LIBOBJ-OR-SOURCE from a '.o' or '.c' (or otherwise)\n  # suffix to a '.lo' libtool-object suffix.\n  eval 'func_xform ()\n  {\n    func_xform_result=${1%.*}.lo\n  }'\nelse\n  # ...otherwise fall back to using sed.\n  func_lo2o ()\n  {\n    func_lo2o_result=`$ECHO \"$1\" | $SED \"$lo2o\"`\n  }\n\n  func_xform ()\n  {\n    func_xform_result=`$ECHO \"$1\" | $SED 's|\\.[^.]*$|.lo|'`\n  }\nfi\n\n\n# func_fatal_configuration ARG...\n# -------------------------------\n# Echo program name prefixed message to standard error, followed by\n# a configuration failure hint, and exit.\nfunc_fatal_configuration ()\n{\n    func__fatal_error ${1+\"$@\"} \\\n      \"See the $PACKAGE documentation for more information.\" \\\n      \"Fatal configuration error.\"\n}\n\n\n# func_config\n# -----------\n# Display the configuration for all the tags in this script.\nfunc_config ()\n{\n    re_begincf='^# ### BEGIN LIBTOOL'\n    re_endcf='^# ### END LIBTOOL'\n\n    # Default configuration.\n    $SED \"1,/$re_begincf CONFIG/d;/$re_endcf CONFIG/,\\$d\" < \"$progpath\"\n\n    # Now print the configurations for the tags.\n    for tagname in $taglist; do\n      $SED -n \"/$re_begincf TAG CONFIG: $tagname\\$/,/$re_endcf TAG CONFIG: $tagname\\$/p\" < \"$progpath\"\n    done\n\n    exit $?\n}\n\n\n# func_features\n# -------------\n# Display the features supported by this script.\nfunc_features ()\n{\n    echo \"host: $host\"\n    if test yes = \"$build_libtool_libs\"; then\n      echo \"enable shared libraries\"\n    else\n      echo \"disable shared libraries\"\n    fi\n    if test yes = \"$build_old_libs\"; then\n      echo \"enable static libraries\"\n    else\n      echo \"disable static libraries\"\n    fi\n\n    exit $?\n}\n\n\n# func_enable_tag TAGNAME\n# -----------------------\n# Verify that TAGNAME is valid, and either flag an error and exit, or\n# enable the TAGNAME tag.  We also add TAGNAME to the global $taglist\n# variable here.\nfunc_enable_tag ()\n{\n    # Global variable:\n    tagname=$1\n\n    re_begincf=\"^# ### BEGIN LIBTOOL TAG CONFIG: $tagname\\$\"\n    re_endcf=\"^# ### END LIBTOOL TAG CONFIG: $tagname\\$\"\n    sed_extractcf=/$re_begincf/,/$re_endcf/p\n\n    # Validate tagname.\n    case $tagname in\n      *[!-_A-Za-z0-9,/]*)\n        func_fatal_error \"invalid tag name: $tagname\"\n        ;;\n    esac\n\n    # Don't test for the \"default\" C tag, as we know it's\n    # there but not specially marked.\n    case $tagname in\n        CC) ;;\n    *)\n        if $GREP \"$re_begincf\" \"$progpath\" >/dev/null 2>&1; then\n\t  taglist=\"$taglist $tagname\"\n\n\t  # Evaluate the configuration.  Be careful to quote the path\n\t  # and the sed script, to avoid splitting on whitespace, but\n\t  # also don't use non-portable quotes within backquotes within\n\t  # quotes we have to do it in 2 steps:\n\t  extractedcf=`$SED -n -e \"$sed_extractcf\" < \"$progpath\"`\n\t  eval \"$extractedcf\"\n        else\n\t  func_error \"ignoring unknown tag $tagname\"\n        fi\n        ;;\n    esac\n}\n\n\n# func_check_version_match\n# ------------------------\n# Ensure that we are using m4 macros, and libtool script from the same\n# release of libtool.\nfunc_check_version_match ()\n{\n    if test \"$package_revision\" != \"$macro_revision\"; then\n      if test \"$VERSION\" != \"$macro_version\"; then\n        if test -z \"$macro_version\"; then\n          cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from an older release.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n        else\n          cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from $PACKAGE $macro_version.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n        fi\n      else\n        cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, revision $package_revision,\n$progname: but the definition of this LT_INIT comes from revision $macro_revision.\n$progname: You should recreate aclocal.m4 with macros from revision $package_revision\n$progname: of $PACKAGE $VERSION and run autoconf again.\n_LT_EOF\n      fi\n\n      exit $EXIT_MISMATCH\n    fi\n}\n\n\n# libtool_options_prep [ARG]...\n# -----------------------------\n# Preparation for options parsed by libtool.\nlibtool_options_prep ()\n{\n    $debug_mode\n\n    # Option defaults:\n    opt_config=false\n    opt_dlopen=\n    opt_dry_run=false\n    opt_help=false\n    opt_mode=\n    opt_preserve_dup_deps=false\n    opt_quiet=false\n\n    nonopt=\n    preserve_args=\n\n    # Shorthand for --mode=foo, only valid as the first argument\n    case $1 in\n    clean|clea|cle|cl)\n      shift; set dummy --mode clean ${1+\"$@\"}; shift\n      ;;\n    compile|compil|compi|comp|com|co|c)\n      shift; set dummy --mode compile ${1+\"$@\"}; shift\n      ;;\n    execute|execut|execu|exec|exe|ex|e)\n      shift; set dummy --mode execute ${1+\"$@\"}; shift\n      ;;\n    finish|finis|fini|fin|fi|f)\n      shift; set dummy --mode finish ${1+\"$@\"}; shift\n      ;;\n    install|instal|insta|inst|ins|in|i)\n      shift; set dummy --mode install ${1+\"$@\"}; shift\n      ;;\n    link|lin|li|l)\n      shift; set dummy --mode link ${1+\"$@\"}; shift\n      ;;\n    uninstall|uninstal|uninsta|uninst|unins|unin|uni|un|u)\n      shift; set dummy --mode uninstall ${1+\"$@\"}; shift\n      ;;\n    esac\n\n    # Pass back the list of options.\n    func_quote_for_eval ${1+\"$@\"}\n    libtool_options_prep_result=$func_quote_for_eval_result\n}\nfunc_add_hook func_options_prep libtool_options_prep\n\n\n# libtool_parse_options [ARG]...\n# ---------------------------------\n# Provide handling for libtool specific options.\nlibtool_parse_options ()\n{\n    $debug_cmd\n\n    # Perform our own loop to consume as many options as possible in\n    # each iteration.\n    while test $# -gt 0; do\n      _G_opt=$1\n      shift\n      case $_G_opt in\n        --dry-run|--dryrun|-n)\n                        opt_dry_run=:\n                        ;;\n\n        --config)       func_config ;;\n\n        --dlopen|-dlopen)\n                        opt_dlopen=\"${opt_dlopen+$opt_dlopen\n}$1\"\n                        shift\n                        ;;\n\n        --preserve-dup-deps)\n                        opt_preserve_dup_deps=: ;;\n\n        --features)     func_features ;;\n\n        --finish)       set dummy --mode finish ${1+\"$@\"}; shift ;;\n\n        --help)         opt_help=: ;;\n\n        --help-all)     opt_help=': help-all' ;;\n\n        --mode)         test $# = 0 && func_missing_arg $_G_opt && break\n                        opt_mode=$1\n                        case $1 in\n                          # Valid mode arguments:\n                          clean|compile|execute|finish|install|link|relink|uninstall) ;;\n\n                          # Catch anything else as an error\n                          *) func_error \"invalid argument for $_G_opt\"\n                             exit_cmd=exit\n                             break\n                             ;;\n                        esac\n                        shift\n                        ;;\n\n        --no-silent|--no-quiet)\n                        opt_quiet=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --no-warnings|--no-warning|--no-warn)\n                        opt_warning=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --no-verbose)\n                        opt_verbose=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --silent|--quiet)\n                        opt_quiet=:\n                        opt_verbose=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --tag)          test $# = 0 && func_missing_arg $_G_opt && break\n                        opt_tag=$1\n                        func_append preserve_args \" $_G_opt $1\"\n                        func_enable_tag \"$1\"\n                        shift\n                        ;;\n\n        --verbose|-v)   opt_quiet=false\n                        opt_verbose=:\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n\t# An option not handled by this hook function:\n        *)\t\tset dummy \"$_G_opt\" ${1+\"$@\"};\tshift; break  ;;\n      esac\n    done\n\n\n    # save modified positional parameters for caller\n    func_quote_for_eval ${1+\"$@\"}\n    libtool_parse_options_result=$func_quote_for_eval_result\n}\nfunc_add_hook func_parse_options libtool_parse_options\n\n\n\n# libtool_validate_options [ARG]...\n# ---------------------------------\n# Perform any sanity checks on option settings and/or unconsumed\n# arguments.\nlibtool_validate_options ()\n{\n    # save first non-option argument\n    if test 0 -lt $#; then\n      nonopt=$1\n      shift\n    fi\n\n    # preserve --debug\n    test : = \"$debug_cmd\" || func_append preserve_args \" --debug\"\n\n    case $host in\n      # Solaris2 added to fix http://debbugs.gnu.org/cgi/bugreport.cgi?bug=16452\n      # see also: http://gcc.gnu.org/bugzilla/show_bug.cgi?id=59788\n      *cygwin* | *mingw* | *pw32* | *cegcc* | *solaris2* | *os2*)\n        # don't eliminate duplications in $postdeps and $predeps\n        opt_duplicate_compiler_generated_deps=:\n        ;;\n      *)\n        opt_duplicate_compiler_generated_deps=$opt_preserve_dup_deps\n        ;;\n    esac\n\n    $opt_help || {\n      # Sanity checks first:\n      func_check_version_match\n\n      test yes != \"$build_libtool_libs\" \\\n        && test yes != \"$build_old_libs\" \\\n        && func_fatal_configuration \"not configured to build any kind of library\"\n\n      # Darwin sucks\n      eval std_shrext=\\\"$shrext_cmds\\\"\n\n      # Only execute mode is allowed to have -dlopen flags.\n      if test -n \"$opt_dlopen\" && test execute != \"$opt_mode\"; then\n        func_error \"unrecognized option '-dlopen'\"\n        $ECHO \"$help\" 1>&2\n        exit $EXIT_FAILURE\n      fi\n\n      # Change the help message to a mode-specific one.\n      generic_help=$help\n      help=\"Try '$progname --help --mode=$opt_mode' for more information.\"\n    }\n\n    # Pass back the unparsed argument list\n    func_quote_for_eval ${1+\"$@\"}\n    libtool_validate_options_result=$func_quote_for_eval_result\n}\nfunc_add_hook func_validate_options libtool_validate_options\n\n\n# Process options as early as possible so that --help and --version\n# can return quickly.\nfunc_options ${1+\"$@\"}\neval set dummy \"$func_options_result\"; shift\n\n\n\n## ----------- ##\n##    Main.    ##\n## ----------- ##\n\nmagic='%%%MAGIC variable%%%'\nmagic_exe='%%%MAGIC EXE variable%%%'\n\n# Global variables.\nextracted_archives=\nextracted_serial=0\n\n# If this variable is set in any of the actions, the command in it\n# will be execed at the end.  This prevents here-documents from being\n# left over by shells.\nexec_cmd=\n\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n$1\n_LTECHO_EOF'\n}\n\n# func_generated_by_libtool\n# True iff stdin has been generated by Libtool. This function is only\n# a basic sanity check; it will hardly flush out determined imposters.\nfunc_generated_by_libtool_p ()\n{\n  $GREP \"^# Generated by .*$PACKAGE\" > /dev/null 2>&1\n}\n\n# func_lalib_p file\n# True iff FILE is a libtool '.la' library or '.lo' object file.\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_lalib_p ()\n{\n    test -f \"$1\" &&\n      $SED -e 4q \"$1\" 2>/dev/null | func_generated_by_libtool_p\n}\n\n# func_lalib_unsafe_p file\n# True iff FILE is a libtool '.la' library or '.lo' object file.\n# This function implements the same check as func_lalib_p without\n# resorting to external programs.  To this end, it redirects stdin and\n# closes it afterwards, without saving the original file descriptor.\n# As a safety measure, use it only where a negative result would be\n# fatal anyway.  Works if 'file' does not exist.\nfunc_lalib_unsafe_p ()\n{\n    lalib_p=no\n    if test -f \"$1\" && test -r \"$1\" && exec 5<&0 <\"$1\"; then\n\tfor lalib_p_l in 1 2 3 4\n\tdo\n\t    read lalib_p_line\n\t    case $lalib_p_line in\n\t\t\\#\\ Generated\\ by\\ *$PACKAGE* ) lalib_p=yes; break;;\n\t    esac\n\tdone\n\texec 0<&5 5<&-\n    fi\n    test yes = \"$lalib_p\"\n}\n\n# func_ltwrapper_script_p file\n# True iff FILE is a libtool wrapper script\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_script_p ()\n{\n    test -f \"$1\" &&\n      $lt_truncate_bin < \"$1\" 2>/dev/null | func_generated_by_libtool_p\n}\n\n# func_ltwrapper_executable_p file\n# True iff FILE is a libtool wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_executable_p ()\n{\n    func_ltwrapper_exec_suffix=\n    case $1 in\n    *.exe) ;;\n    *) func_ltwrapper_exec_suffix=.exe ;;\n    esac\n    $GREP \"$magic_exe\" \"$1$func_ltwrapper_exec_suffix\" >/dev/null 2>&1\n}\n\n# func_ltwrapper_scriptname file\n# Assumes file is an ltwrapper_executable\n# uses $file to determine the appropriate filename for a\n# temporary ltwrapper_script.\nfunc_ltwrapper_scriptname ()\n{\n    func_dirname_and_basename \"$1\" \"\" \".\"\n    func_stripname '' '.exe' \"$func_basename_result\"\n    func_ltwrapper_scriptname_result=$func_dirname_result/$objdir/${func_stripname_result}_ltshwrapper\n}\n\n# func_ltwrapper_p file\n# True iff FILE is a libtool wrapper script or wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_p ()\n{\n    func_ltwrapper_script_p \"$1\" || func_ltwrapper_executable_p \"$1\"\n}\n\n\n# func_execute_cmds commands fail_cmd\n# Execute tilde-delimited COMMANDS.\n# If FAIL_CMD is given, eval that upon failure.\n# FAIL_CMD may read-access the current command in variable CMD!\nfunc_execute_cmds ()\n{\n    $debug_cmd\n\n    save_ifs=$IFS; IFS='~'\n    for cmd in $1; do\n      IFS=$sp$nl\n      eval cmd=\\\"$cmd\\\"\n      IFS=$save_ifs\n      func_show_eval \"$cmd\" \"${2-:}\"\n    done\n    IFS=$save_ifs\n}\n\n\n# func_source file\n# Source FILE, adding directory component if necessary.\n# Note that it is not necessary on cygwin/mingw to append a dot to\n# FILE even if both FILE and FILE.exe exist: automatic-append-.exe\n# behavior happens only for exec(3), not for open(2)!  Also, sourcing\n# 'FILE.' does not work on cygwin managed mounts.\nfunc_source ()\n{\n    $debug_cmd\n\n    case $1 in\n    */* | *\\\\*)\t. \"$1\" ;;\n    *)\t\t. \"./$1\" ;;\n    esac\n}\n\n\n# func_resolve_sysroot PATH\n# Replace a leading = in PATH with a sysroot.  Store the result into\n# func_resolve_sysroot_result\nfunc_resolve_sysroot ()\n{\n  func_resolve_sysroot_result=$1\n  case $func_resolve_sysroot_result in\n  =*)\n    func_stripname '=' '' \"$func_resolve_sysroot_result\"\n    func_resolve_sysroot_result=$lt_sysroot$func_stripname_result\n    ;;\n  esac\n}\n\n# func_replace_sysroot PATH\n# If PATH begins with the sysroot, replace it with = and\n# store the result into func_replace_sysroot_result.\nfunc_replace_sysroot ()\n{\n  case $lt_sysroot:$1 in\n  ?*:\"$lt_sysroot\"*)\n    func_stripname \"$lt_sysroot\" '' \"$1\"\n    func_replace_sysroot_result='='$func_stripname_result\n    ;;\n  *)\n    # Including no sysroot.\n    func_replace_sysroot_result=$1\n    ;;\n  esac\n}\n\n# func_infer_tag arg\n# Infer tagged configuration to use if any are available and\n# if one wasn't chosen via the \"--tag\" command line option.\n# Only attempt this if the compiler in the base compile\n# command doesn't match the default compiler.\n# arg is usually of the form 'gcc ...'\nfunc_infer_tag ()\n{\n    $debug_cmd\n\n    if test -n \"$available_tags\" && test -z \"$tagname\"; then\n      CC_quoted=\n      for arg in $CC; do\n\tfunc_append_quoted CC_quoted \"$arg\"\n      done\n      CC_expanded=`func_echo_all $CC`\n      CC_quoted_expanded=`func_echo_all $CC_quoted`\n      case $@ in\n      # Blanks in the command may have been stripped by the calling shell,\n      # but not from the CC environment variable when configure was run.\n      \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n      \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*) ;;\n      # Blanks at the start of $base_compile will cause this to fail\n      # if we don't check for them as well.\n      *)\n\tfor z in $available_tags; do\n\t  if $GREP \"^# ### BEGIN LIBTOOL TAG CONFIG: $z$\" < \"$progpath\" > /dev/null; then\n\t    # Evaluate the configuration.\n\t    eval \"`$SED -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^# ### END LIBTOOL TAG CONFIG: '$z'$/p' < $progpath`\"\n\t    CC_quoted=\n\t    for arg in $CC; do\n\t      # Double-quote args containing other shell metacharacters.\n\t      func_append_quoted CC_quoted \"$arg\"\n\t    done\n\t    CC_expanded=`func_echo_all $CC`\n\t    CC_quoted_expanded=`func_echo_all $CC_quoted`\n\t    case \"$@ \" in\n\t    \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n\t    \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*)\n\t      # The compiler in the base compile command matches\n\t      # the one in the tagged configuration.\n\t      # Assume this is the tagged configuration we want.\n\t      tagname=$z\n\t      break\n\t      ;;\n\t    esac\n\t  fi\n\tdone\n\t# If $tagname still isn't set, then no tagged configuration\n\t# was found and let the user know that the \"--tag\" command\n\t# line option must be used.\n\tif test -z \"$tagname\"; then\n\t  func_echo \"unable to infer tagged configuration\"\n\t  func_fatal_error \"specify a tag with '--tag'\"\n#\telse\n#\t  func_verbose \"using $tagname tagged configuration\"\n\tfi\n\t;;\n      esac\n    fi\n}\n\n\n\n# func_write_libtool_object output_name pic_name nonpic_name\n# Create a libtool object file (analogous to a \".la\" file),\n# but don't create it if we're doing a dry run.\nfunc_write_libtool_object ()\n{\n    write_libobj=$1\n    if test yes = \"$build_libtool_libs\"; then\n      write_lobj=\\'$2\\'\n    else\n      write_lobj=none\n    fi\n\n    if test yes = \"$build_old_libs\"; then\n      write_oldobj=\\'$3\\'\n    else\n      write_oldobj=none\n    fi\n\n    $opt_dry_run || {\n      cat >${write_libobj}T <<EOF\n# $write_libobj - a libtool object file\n# Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# Name of the PIC object.\npic_object=$write_lobj\n\n# Name of the non-PIC object\nnon_pic_object=$write_oldobj\n\nEOF\n      $MV \"${write_libobj}T\" \"$write_libobj\"\n    }\n}\n\n\n##################################################\n# FILE NAME AND PATH CONVERSION HELPER FUNCTIONS #\n##################################################\n\n# func_convert_core_file_wine_to_w32 ARG\n# Helper function used by file name conversion functions when $build is *nix,\n# and $host is mingw, cygwin, or some other w32 environment. Relies on a\n# correctly configured wine environment available, with the winepath program\n# in $build's $PATH.\n#\n# ARG is the $build file name to be converted to w32 format.\n# Result is available in $func_convert_core_file_wine_to_w32_result, and will\n# be empty on error (or when ARG is empty)\nfunc_convert_core_file_wine_to_w32 ()\n{\n  $debug_cmd\n\n  func_convert_core_file_wine_to_w32_result=$1\n  if test -n \"$1\"; then\n    # Unfortunately, winepath does not exit with a non-zero error code, so we\n    # are forced to check the contents of stdout. On the other hand, if the\n    # command is not found, the shell will set an exit code of 127 and print\n    # *an error message* to stdout. So we must check for both error code of\n    # zero AND non-empty stdout, which explains the odd construction:\n    func_convert_core_file_wine_to_w32_tmp=`winepath -w \"$1\" 2>/dev/null`\n    if test \"$?\" -eq 0 && test -n \"$func_convert_core_file_wine_to_w32_tmp\"; then\n      func_convert_core_file_wine_to_w32_result=`$ECHO \"$func_convert_core_file_wine_to_w32_tmp\" |\n        $SED -e \"$sed_naive_backslashify\"`\n    else\n      func_convert_core_file_wine_to_w32_result=\n    fi\n  fi\n}\n# end: func_convert_core_file_wine_to_w32\n\n\n# func_convert_core_path_wine_to_w32 ARG\n# Helper function used by path conversion functions when $build is *nix, and\n# $host is mingw, cygwin, or some other w32 environment. Relies on a correctly\n# configured wine environment available, with the winepath program in $build's\n# $PATH. Assumes ARG has no leading or trailing path separator characters.\n#\n# ARG is path to be converted from $build format to win32.\n# Result is available in $func_convert_core_path_wine_to_w32_result.\n# Unconvertible file (directory) names in ARG are skipped; if no directory names\n# are convertible, then the result may be empty.\nfunc_convert_core_path_wine_to_w32 ()\n{\n  $debug_cmd\n\n  # unfortunately, winepath doesn't convert paths, only file names\n  func_convert_core_path_wine_to_w32_result=\n  if test -n \"$1\"; then\n    oldIFS=$IFS\n    IFS=:\n    for func_convert_core_path_wine_to_w32_f in $1; do\n      IFS=$oldIFS\n      func_convert_core_file_wine_to_w32 \"$func_convert_core_path_wine_to_w32_f\"\n      if test -n \"$func_convert_core_file_wine_to_w32_result\"; then\n        if test -z \"$func_convert_core_path_wine_to_w32_result\"; then\n          func_convert_core_path_wine_to_w32_result=$func_convert_core_file_wine_to_w32_result\n        else\n          func_append func_convert_core_path_wine_to_w32_result \";$func_convert_core_file_wine_to_w32_result\"\n        fi\n      fi\n    done\n    IFS=$oldIFS\n  fi\n}\n# end: func_convert_core_path_wine_to_w32\n\n\n# func_cygpath ARGS...\n# Wrapper around calling the cygpath program via LT_CYGPATH. This is used when\n# when (1) $build is *nix and Cygwin is hosted via a wine environment; or (2)\n# $build is MSYS and $host is Cygwin, or (3) $build is Cygwin. In case (1) or\n# (2), returns the Cygwin file name or path in func_cygpath_result (input\n# file name or path is assumed to be in w32 format, as previously converted\n# from $build's *nix or MSYS format). In case (3), returns the w32 file name\n# or path in func_cygpath_result (input file name or path is assumed to be in\n# Cygwin format). Returns an empty string on error.\n#\n# ARGS are passed to cygpath, with the last one being the file name or path to\n# be converted.\n#\n# Specify the absolute *nix (or w32) name to cygpath in the LT_CYGPATH\n# environment variable; do not put it in $PATH.\nfunc_cygpath ()\n{\n  $debug_cmd\n\n  if test -n \"$LT_CYGPATH\" && test -f \"$LT_CYGPATH\"; then\n    func_cygpath_result=`$LT_CYGPATH \"$@\" 2>/dev/null`\n    if test \"$?\" -ne 0; then\n      # on failure, ensure result is empty\n      func_cygpath_result=\n    fi\n  else\n    func_cygpath_result=\n    func_error \"LT_CYGPATH is empty or specifies non-existent file: '$LT_CYGPATH'\"\n  fi\n}\n#end: func_cygpath\n\n\n# func_convert_core_msys_to_w32 ARG\n# Convert file name or path ARG from MSYS format to w32 format.  Return\n# result in func_convert_core_msys_to_w32_result.\nfunc_convert_core_msys_to_w32 ()\n{\n  $debug_cmd\n\n  # awkward: cmd appends spaces to result\n  func_convert_core_msys_to_w32_result=`( cmd //c echo \"$1\" ) 2>/dev/null |\n    $SED -e 's/[ ]*$//' -e \"$sed_naive_backslashify\"`\n}\n#end: func_convert_core_msys_to_w32\n\n\n# func_convert_file_check ARG1 ARG2\n# Verify that ARG1 (a file name in $build format) was converted to $host\n# format in ARG2. Otherwise, emit an error message, but continue (resetting\n# func_to_host_file_result to ARG1).\nfunc_convert_file_check ()\n{\n  $debug_cmd\n\n  if test -z \"$2\" && test -n \"$1\"; then\n    func_error \"Could not determine host file name corresponding to\"\n    func_error \"  '$1'\"\n    func_error \"Continuing, but uninstalled executables may not work.\"\n    # Fallback:\n    func_to_host_file_result=$1\n  fi\n}\n# end func_convert_file_check\n\n\n# func_convert_path_check FROM_PATHSEP TO_PATHSEP FROM_PATH TO_PATH\n# Verify that FROM_PATH (a path in $build format) was converted to $host\n# format in TO_PATH. Otherwise, emit an error message, but continue, resetting\n# func_to_host_file_result to a simplistic fallback value (see below).\nfunc_convert_path_check ()\n{\n  $debug_cmd\n\n  if test -z \"$4\" && test -n \"$3\"; then\n    func_error \"Could not determine the host path corresponding to\"\n    func_error \"  '$3'\"\n    func_error \"Continuing, but uninstalled executables may not work.\"\n    # Fallback.  This is a deliberately simplistic \"conversion\" and\n    # should not be \"improved\".  See libtool.info.\n    if test \"x$1\" != \"x$2\"; then\n      lt_replace_pathsep_chars=\"s|$1|$2|g\"\n      func_to_host_path_result=`echo \"$3\" |\n        $SED -e \"$lt_replace_pathsep_chars\"`\n    else\n      func_to_host_path_result=$3\n    fi\n  fi\n}\n# end func_convert_path_check\n\n\n# func_convert_path_front_back_pathsep FRONTPAT BACKPAT REPL ORIG\n# Modifies func_to_host_path_result by prepending REPL if ORIG matches FRONTPAT\n# and appending REPL if ORIG matches BACKPAT.\nfunc_convert_path_front_back_pathsep ()\n{\n  $debug_cmd\n\n  case $4 in\n  $1 ) func_to_host_path_result=$3$func_to_host_path_result\n    ;;\n  esac\n  case $4 in\n  $2 ) func_append func_to_host_path_result \"$3\"\n    ;;\n  esac\n}\n# end func_convert_path_front_back_pathsep\n\n\n##################################################\n# $build to $host FILE NAME CONVERSION FUNCTIONS #\n##################################################\n# invoked via '$to_host_file_cmd ARG'\n#\n# In each case, ARG is the path to be converted from $build to $host format.\n# Result will be available in $func_to_host_file_result.\n\n\n# func_to_host_file ARG\n# Converts the file name ARG from $build format to $host format. Return result\n# in func_to_host_file_result.\nfunc_to_host_file ()\n{\n  $debug_cmd\n\n  $to_host_file_cmd \"$1\"\n}\n# end func_to_host_file\n\n\n# func_to_tool_file ARG LAZY\n# converts the file name ARG from $build format to toolchain format. Return\n# result in func_to_tool_file_result.  If the conversion in use is listed\n# in (the comma separated) LAZY, no conversion takes place.\nfunc_to_tool_file ()\n{\n  $debug_cmd\n\n  case ,$2, in\n    *,\"$to_tool_file_cmd\",*)\n      func_to_tool_file_result=$1\n      ;;\n    *)\n      $to_tool_file_cmd \"$1\"\n      func_to_tool_file_result=$func_to_host_file_result\n      ;;\n  esac\n}\n# end func_to_tool_file\n\n\n# func_convert_file_noop ARG\n# Copy ARG to func_to_host_file_result.\nfunc_convert_file_noop ()\n{\n  func_to_host_file_result=$1\n}\n# end func_convert_file_noop\n\n\n# func_convert_file_msys_to_w32 ARG\n# Convert file name ARG from (mingw) MSYS to (mingw) w32 format; automatic\n# conversion to w32 is not available inside the cwrapper.  Returns result in\n# func_to_host_file_result.\nfunc_convert_file_msys_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    func_convert_core_msys_to_w32 \"$1\"\n    func_to_host_file_result=$func_convert_core_msys_to_w32_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_msys_to_w32\n\n\n# func_convert_file_cygwin_to_w32 ARG\n# Convert file name ARG from Cygwin to w32 format.  Returns result in\n# func_to_host_file_result.\nfunc_convert_file_cygwin_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    # because $build is cygwin, we call \"the\" cygpath in $PATH; no need to use\n    # LT_CYGPATH in this case.\n    func_to_host_file_result=`cygpath -m \"$1\"`\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_cygwin_to_w32\n\n\n# func_convert_file_nix_to_w32 ARG\n# Convert file name ARG from *nix to w32 format.  Requires a wine environment\n# and a working winepath. Returns result in func_to_host_file_result.\nfunc_convert_file_nix_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    func_convert_core_file_wine_to_w32 \"$1\"\n    func_to_host_file_result=$func_convert_core_file_wine_to_w32_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_nix_to_w32\n\n\n# func_convert_file_msys_to_cygwin ARG\n# Convert file name ARG from MSYS to Cygwin format.  Requires LT_CYGPATH set.\n# Returns result in func_to_host_file_result.\nfunc_convert_file_msys_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    func_convert_core_msys_to_w32 \"$1\"\n    func_cygpath -u \"$func_convert_core_msys_to_w32_result\"\n    func_to_host_file_result=$func_cygpath_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_msys_to_cygwin\n\n\n# func_convert_file_nix_to_cygwin ARG\n# Convert file name ARG from *nix to Cygwin format.  Requires Cygwin installed\n# in a wine environment, working winepath, and LT_CYGPATH set.  Returns result\n# in func_to_host_file_result.\nfunc_convert_file_nix_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    # convert from *nix to w32, then use cygpath to convert from w32 to cygwin.\n    func_convert_core_file_wine_to_w32 \"$1\"\n    func_cygpath -u \"$func_convert_core_file_wine_to_w32_result\"\n    func_to_host_file_result=$func_cygpath_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_nix_to_cygwin\n\n\n#############################################\n# $build to $host PATH CONVERSION FUNCTIONS #\n#############################################\n# invoked via '$to_host_path_cmd ARG'\n#\n# In each case, ARG is the path to be converted from $build to $host format.\n# The result will be available in $func_to_host_path_result.\n#\n# Path separators are also converted from $build format to $host format.  If\n# ARG begins or ends with a path separator character, it is preserved (but\n# converted to $host format) on output.\n#\n# All path conversion functions are named using the following convention:\n#   file name conversion function    : func_convert_file_X_to_Y ()\n#   path conversion function         : func_convert_path_X_to_Y ()\n# where, for any given $build/$host combination the 'X_to_Y' value is the\n# same.  If conversion functions are added for new $build/$host combinations,\n# the two new functions must follow this pattern, or func_init_to_host_path_cmd\n# will break.\n\n\n# func_init_to_host_path_cmd\n# Ensures that function \"pointer\" variable $to_host_path_cmd is set to the\n# appropriate value, based on the value of $to_host_file_cmd.\nto_host_path_cmd=\nfunc_init_to_host_path_cmd ()\n{\n  $debug_cmd\n\n  if test -z \"$to_host_path_cmd\"; then\n    func_stripname 'func_convert_file_' '' \"$to_host_file_cmd\"\n    to_host_path_cmd=func_convert_path_$func_stripname_result\n  fi\n}\n\n\n# func_to_host_path ARG\n# Converts the path ARG from $build format to $host format. Return result\n# in func_to_host_path_result.\nfunc_to_host_path ()\n{\n  $debug_cmd\n\n  func_init_to_host_path_cmd\n  $to_host_path_cmd \"$1\"\n}\n# end func_to_host_path\n\n\n# func_convert_path_noop ARG\n# Copy ARG to func_to_host_path_result.\nfunc_convert_path_noop ()\n{\n  func_to_host_path_result=$1\n}\n# end func_convert_path_noop\n\n\n# func_convert_path_msys_to_w32 ARG\n# Convert path ARG from (mingw) MSYS to (mingw) w32 format; automatic\n# conversion to w32 is not available inside the cwrapper.  Returns result in\n# func_to_host_path_result.\nfunc_convert_path_msys_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # Remove leading and trailing path separator characters from ARG.  MSYS\n    # behavior is inconsistent here; cygpath turns them into '.;' and ';.';\n    # and winepath ignores them completely.\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_msys_to_w32 \"$func_to_host_path_tmp1\"\n    func_to_host_path_result=$func_convert_core_msys_to_w32_result\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_msys_to_w32\n\n\n# func_convert_path_cygwin_to_w32 ARG\n# Convert path ARG from Cygwin to w32 format.  Returns result in\n# func_to_host_file_result.\nfunc_convert_path_cygwin_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_to_host_path_result=`cygpath -m -p \"$func_to_host_path_tmp1\"`\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_cygwin_to_w32\n\n\n# func_convert_path_nix_to_w32 ARG\n# Convert path ARG from *nix to w32 format.  Requires a wine environment and\n# a working winepath.  Returns result in func_to_host_file_result.\nfunc_convert_path_nix_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_path_wine_to_w32 \"$func_to_host_path_tmp1\"\n    func_to_host_path_result=$func_convert_core_path_wine_to_w32_result\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_nix_to_w32\n\n\n# func_convert_path_msys_to_cygwin ARG\n# Convert path ARG from MSYS to Cygwin format.  Requires LT_CYGPATH set.\n# Returns result in func_to_host_file_result.\nfunc_convert_path_msys_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_msys_to_w32 \"$func_to_host_path_tmp1\"\n    func_cygpath -u -p \"$func_convert_core_msys_to_w32_result\"\n    func_to_host_path_result=$func_cygpath_result\n    func_convert_path_check : : \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" : \"$1\"\n  fi\n}\n# end func_convert_path_msys_to_cygwin\n\n\n# func_convert_path_nix_to_cygwin ARG\n# Convert path ARG from *nix to Cygwin format.  Requires Cygwin installed in a\n# a wine environment, working winepath, and LT_CYGPATH set.  Returns result in\n# func_to_host_file_result.\nfunc_convert_path_nix_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # Remove leading and trailing path separator characters from\n    # ARG. msys behavior is inconsistent here, cygpath turns them\n    # into '.;' and ';.', and winepath ignores them completely.\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_path_wine_to_w32 \"$func_to_host_path_tmp1\"\n    func_cygpath -u -p \"$func_convert_core_path_wine_to_w32_result\"\n    func_to_host_path_result=$func_cygpath_result\n    func_convert_path_check : : \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" : \"$1\"\n  fi\n}\n# end func_convert_path_nix_to_cygwin\n\n\n# func_dll_def_p FILE\n# True iff FILE is a Windows DLL '.def' file.\n# Keep in sync with _LT_DLL_DEF_P in libtool.m4\nfunc_dll_def_p ()\n{\n  $debug_cmd\n\n  func_dll_def_p_tmp=`$SED -n \\\n    -e 's/^[\t ]*//' \\\n    -e '/^\\(;.*\\)*$/d' \\\n    -e 's/^\\(EXPORTS\\|LIBRARY\\)\\([\t ].*\\)*$/DEF/p' \\\n    -e q \\\n    \"$1\"`\n  test DEF = \"$func_dll_def_p_tmp\"\n}\n\n\n# func_mode_compile arg...\nfunc_mode_compile ()\n{\n    $debug_cmd\n\n    # Get the compilation command and the source file.\n    base_compile=\n    srcfile=$nonopt  #  always keep a non-empty value in \"srcfile\"\n    suppress_opt=yes\n    suppress_output=\n    arg_mode=normal\n    libobj=\n    later=\n    pie_flag=\n\n    for arg\n    do\n      case $arg_mode in\n      arg  )\n\t# do not \"continue\".  Instead, add this to base_compile\n\tlastarg=$arg\n\targ_mode=normal\n\t;;\n\n      target )\n\tlibobj=$arg\n\targ_mode=normal\n\tcontinue\n\t;;\n\n      normal )\n\t# Accept any command-line options.\n\tcase $arg in\n\t-o)\n\t  test -n \"$libobj\" && \\\n\t    func_fatal_error \"you cannot specify '-o' more than once\"\n\t  arg_mode=target\n\t  continue\n\t  ;;\n\n\t-pie | -fpie | -fPIE)\n          func_append pie_flag \" $arg\"\n\t  continue\n\t  ;;\n\n\t-shared | -static | -prefer-pic | -prefer-non-pic)\n\t  func_append later \" $arg\"\n\t  continue\n\t  ;;\n\n\t-no-suppress)\n\t  suppress_opt=no\n\t  continue\n\t  ;;\n\n\t-Xcompiler)\n\t  arg_mode=arg  #  the next one goes into the \"base_compile\" arg list\n\t  continue      #  The current \"srcfile\" will either be retained or\n\t  ;;            #  replaced later.  I would guess that would be a bug.\n\n\t-Wc,*)\n\t  func_stripname '-Wc,' '' \"$arg\"\n\t  args=$func_stripname_result\n\t  lastarg=\n\t  save_ifs=$IFS; IFS=,\n\t  for arg in $args; do\n\t    IFS=$save_ifs\n\t    func_append_quoted lastarg \"$arg\"\n\t  done\n\t  IFS=$save_ifs\n\t  func_stripname ' ' '' \"$lastarg\"\n\t  lastarg=$func_stripname_result\n\n\t  # Add the arguments to base_compile.\n\t  func_append base_compile \" $lastarg\"\n\t  continue\n\t  ;;\n\n\t*)\n\t  # Accept the current argument as the source file.\n\t  # The previous \"srcfile\" becomes the current argument.\n\t  #\n\t  lastarg=$srcfile\n\t  srcfile=$arg\n\t  ;;\n\tesac  #  case $arg\n\t;;\n      esac    #  case $arg_mode\n\n      # Aesthetically quote the previous argument.\n      func_append_quoted base_compile \"$lastarg\"\n    done # for arg\n\n    case $arg_mode in\n    arg)\n      func_fatal_error \"you must specify an argument for -Xcompile\"\n      ;;\n    target)\n      func_fatal_error \"you must specify a target with '-o'\"\n      ;;\n    *)\n      # Get the name of the library object.\n      test -z \"$libobj\" && {\n\tfunc_basename \"$srcfile\"\n\tlibobj=$func_basename_result\n      }\n      ;;\n    esac\n\n    # Recognize several different file suffixes.\n    # If the user specifies -o file.o, it is replaced with file.lo\n    case $libobj in\n    *.[cCFSifmso] | \\\n    *.ada | *.adb | *.ads | *.asm | \\\n    *.c++ | *.cc | *.ii | *.class | *.cpp | *.cxx | \\\n    *.[fF][09]? | *.for | *.java | *.go | *.obj | *.sx | *.cu | *.cup)\n      func_xform \"$libobj\"\n      libobj=$func_xform_result\n      ;;\n    esac\n\n    case $libobj in\n    *.lo) func_lo2o \"$libobj\"; obj=$func_lo2o_result ;;\n    *)\n      func_fatal_error \"cannot determine name of library object from '$libobj'\"\n      ;;\n    esac\n\n    func_infer_tag $base_compile\n\n    for arg in $later; do\n      case $arg in\n      -shared)\n\ttest yes = \"$build_libtool_libs\" \\\n\t  || func_fatal_configuration \"cannot build a shared library\"\n\tbuild_old_libs=no\n\tcontinue\n\t;;\n\n      -static)\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tcontinue\n\t;;\n\n      -prefer-pic)\n\tpic_mode=yes\n\tcontinue\n\t;;\n\n      -prefer-non-pic)\n\tpic_mode=no\n\tcontinue\n\t;;\n      esac\n    done\n\n    func_quote_for_eval \"$libobj\"\n    test \"X$libobj\" != \"X$func_quote_for_eval_result\" \\\n      && $ECHO \"X$libobj\" | $GREP '[]~#^*{};<>?\"'\"'\"'\t &()|`$[]' \\\n      && func_warning \"libobj name '$libobj' may not contain shell special characters.\"\n    func_dirname_and_basename \"$obj\" \"/\" \"\"\n    objname=$func_basename_result\n    xdir=$func_dirname_result\n    lobj=$xdir$objdir/$objname\n\n    test -z \"$base_compile\" && \\\n      func_fatal_help \"you must specify a compilation command\"\n\n    # Delete any leftover library objects.\n    if test yes = \"$build_old_libs\"; then\n      removelist=\"$obj $lobj $libobj ${libobj}T\"\n    else\n      removelist=\"$lobj $libobj ${libobj}T\"\n    fi\n\n    # On Cygwin there's no \"real\" PIC flag so we must build both object types\n    case $host_os in\n    cygwin* | mingw* | pw32* | os2* | cegcc*)\n      pic_mode=default\n      ;;\n    esac\n    if test no = \"$pic_mode\" && test pass_all != \"$deplibs_check_method\"; then\n      # non-PIC code in shared libraries is not supported\n      pic_mode=default\n    fi\n\n    # Calculate the filename of the output object if compiler does\n    # not support -o with -c\n    if test no = \"$compiler_c_o\"; then\n      output_obj=`$ECHO \"$srcfile\" | $SED 's%^.*/%%; s%\\.[^.]*$%%'`.$objext\n      lockfile=$output_obj.lock\n    else\n      output_obj=\n      need_locks=no\n      lockfile=\n    fi\n\n    # Lock this critical section if it is needed\n    # We use this script file to make the link, it avoids creating a new file\n    if test yes = \"$need_locks\"; then\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    elif test warn = \"$need_locks\"; then\n      if test -f \"$lockfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile exists and contains:\n`cat $lockfile 2>/dev/null`\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support '-c' and '-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n      func_append removelist \" $output_obj\"\n      $ECHO \"$srcfile\" > \"$lockfile\"\n    fi\n\n    $opt_dry_run || $RM $removelist\n    func_append removelist \" $lockfile\"\n    trap '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE' 1 2 15\n\n    func_to_tool_file \"$srcfile\" func_convert_file_msys_to_w32\n    srcfile=$func_to_tool_file_result\n    func_quote_for_eval \"$srcfile\"\n    qsrcfile=$func_quote_for_eval_result\n\n    # Only build a PIC object if we are building libtool libraries.\n    if test yes = \"$build_libtool_libs\"; then\n      # Without this assignment, base_compile gets emptied.\n      fbsd_hideous_sh_bug=$base_compile\n\n      if test no != \"$pic_mode\"; then\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      else\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile\"\n      fi\n\n      func_mkdir_p \"$xdir$objdir\"\n\n      if test -z \"$output_obj\"; then\n\t# Place PIC objects in $objdir\n\tfunc_append command \" -o $lobj\"\n      fi\n\n      func_show_eval_locale \"$command\"\t\\\n          'test -n \"$output_obj\" && $RM $removelist; exit $EXIT_FAILURE'\n\n      if test warn = \"$need_locks\" &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support '-c' and '-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed, then go on to compile the next one\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$lobj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$lobj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n\n      # Allow error messages only from the first compilation.\n      if test yes = \"$suppress_opt\"; then\n\tsuppress_output=' >/dev/null 2>&1'\n      fi\n    fi\n\n    # Only build a position-dependent object if we build old libraries.\n    if test yes = \"$build_old_libs\"; then\n      if test yes != \"$pic_mode\"; then\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile$pie_flag\"\n      else\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      fi\n      if test yes = \"$compiler_c_o\"; then\n\tfunc_append command \" -o $obj\"\n      fi\n\n      # Suppress compiler output if we already did a PIC compilation.\n      func_append command \"$suppress_output\"\n      func_show_eval_locale \"$command\" \\\n        '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE'\n\n      if test warn = \"$need_locks\" &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support '-c' and '-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$obj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$obj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n    fi\n\n    $opt_dry_run || {\n      func_write_libtool_object \"$libobj\" \"$objdir/$objname\" \"$objname\"\n\n      # Unlock the critical section if it was locked\n      if test no != \"$need_locks\"; then\n\tremovelist=$lockfile\n        $RM \"$lockfile\"\n      fi\n    }\n\n    exit $EXIT_SUCCESS\n}\n\n$opt_help || {\n  test compile = \"$opt_mode\" && func_mode_compile ${1+\"$@\"}\n}\n\nfunc_mode_help ()\n{\n    # We need to display help for each of the modes.\n    case $opt_mode in\n      \"\")\n        # Generic help is extracted from the usage comments\n        # at the start of this file.\n        func_help\n        ;;\n\n      clean)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=clean RM [RM-OPTION]... FILE...\n\nRemove files from the build directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically '/bin/rm').  RM-OPTIONS are options (such as '-f') to be passed\nto RM.\n\nIf FILE is a libtool library, object or program, all the files associated\nwith it are deleted. Otherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      compile)\n      $ECHO \\\n\"Usage: $progname [OPTION]... --mode=compile COMPILE-COMMAND... SOURCEFILE\n\nCompile a source file into a libtool library object.\n\nThis mode accepts the following additional options:\n\n  -o OUTPUT-FILE    set the output file name to OUTPUT-FILE\n  -no-suppress      do not suppress compiler output for multiple passes\n  -prefer-pic       try to build PIC objects only\n  -prefer-non-pic   try to build non-PIC objects only\n  -shared           do not build a '.o' file suitable for static linking\n  -static           only build a '.o' file suitable for static linking\n  -Wc,FLAG          pass FLAG directly to the compiler\n\nCOMPILE-COMMAND is a command to be used in creating a 'standard' object file\nfrom the given SOURCEFILE.\n\nThe output file name is determined by removing the directory component from\nSOURCEFILE, then substituting the C source code suffix '.c' with the\nlibrary object suffix, '.lo'.\"\n        ;;\n\n      execute)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=execute COMMAND [ARGS]...\n\nAutomatically set library path, then run a program.\n\nThis mode accepts the following additional options:\n\n  -dlopen FILE      add the directory containing FILE to the library path\n\nThis mode sets the library path environment variable according to '-dlopen'\nflags.\n\nIf any of the ARGS are libtool executable wrappers, then they are translated\ninto their corresponding uninstalled binary, and any of their required library\ndirectories are added to the library path.\n\nThen, COMMAND is executed, with ARGS as arguments.\"\n        ;;\n\n      finish)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=finish [LIBDIR]...\n\nComplete the installation of libtool libraries.\n\nEach LIBDIR is a directory that contains libtool libraries.\n\nThe commands that this mode executes may require superuser privileges.  Use\nthe '--dry-run' option if you just want to see what would be executed.\"\n        ;;\n\n      install)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=install INSTALL-COMMAND...\n\nInstall executables or libraries.\n\nINSTALL-COMMAND is the installation command.  The first component should be\neither the 'install' or 'cp' program.\n\nThe following components of INSTALL-COMMAND are treated specially:\n\n  -inst-prefix-dir PREFIX-DIR  Use PREFIX-DIR as a staging area for installation\n\nThe rest of the components are interpreted as arguments to that command (only\nBSD-compatible install options are recognized).\"\n        ;;\n\n      link)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=link LINK-COMMAND...\n\nLink object files or libraries together to form another library, or to\ncreate an executable program.\n\nLINK-COMMAND is a command using the C compiler that you would use to create\na program from several object files.\n\nThe following components of LINK-COMMAND are treated specially:\n\n  -all-static       do not do any dynamic linking at all\n  -avoid-version    do not add a version suffix if possible\n  -bindir BINDIR    specify path to binaries directory (for systems where\n                    libraries must be found in the PATH setting at runtime)\n  -dlopen FILE      '-dlpreopen' FILE if it cannot be dlopened at runtime\n  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols\n  -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)\n  -export-symbols SYMFILE\n                    try to export only the symbols listed in SYMFILE\n  -export-symbols-regex REGEX\n                    try to export only the symbols matching REGEX\n  -LLIBDIR          search LIBDIR for required installed libraries\n  -lNAME            OUTPUT-FILE requires the installed library libNAME\n  -module           build a library that can dlopened\n  -no-fast-install  disable the fast-install mode\n  -no-install       link a not-installable executable\n  -no-undefined     declare that a library does not refer to external symbols\n  -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects\n  -objectlist FILE  use a list of object files found in FILE to specify objects\n  -os2dllname NAME  force a short DLL name on OS/2 (no effect on other OSes)\n  -precious-files-regex REGEX\n                    don't remove output files matching REGEX\n  -release RELEASE  specify package release information\n  -rpath LIBDIR     the created library will eventually be installed in LIBDIR\n  -R[ ]LIBDIR       add LIBDIR to the runtime path of programs and libraries\n  -shared           only do dynamic linking of libtool libraries\n  -shrext SUFFIX    override the standard shared library file extension\n  -static           do not do any dynamic linking of uninstalled libtool libraries\n  -static-libtool-libs\n                    do not do any dynamic linking of libtool libraries\n  -version-info CURRENT[:REVISION[:AGE]]\n                    specify library version info [each variable defaults to 0]\n  -weak LIBNAME     declare that the target provides the LIBNAME interface\n  -Wc,FLAG\n  -Xcompiler FLAG   pass linker-specific FLAG directly to the compiler\n  -Wl,FLAG\n  -Xlinker FLAG     pass linker-specific FLAG directly to the linker\n  -XCClinker FLAG   pass link-specific FLAG to the compiler driver (CC)\n\nAll other options (arguments beginning with '-') are ignored.\n\nEvery other argument is treated as a filename.  Files ending in '.la' are\ntreated as uninstalled libtool libraries, other files are standard or library\nobject files.\n\nIf the OUTPUT-FILE ends in '.la', then a libtool library is created,\nonly library objects ('.lo' files) may be specified, and '-rpath' is\nrequired, except when creating a convenience library.\n\nIf OUTPUT-FILE ends in '.a' or '.lib', then a standard library is created\nusing 'ar' and 'ranlib', or on Windows using 'lib'.\n\nIf OUTPUT-FILE ends in '.lo' or '.$objext', then a reloadable object file\nis created, otherwise an executable program is created.\"\n        ;;\n\n      uninstall)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=uninstall RM [RM-OPTION]... FILE...\n\nRemove libraries from an installation directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically '/bin/rm').  RM-OPTIONS are options (such as '-f') to be passed\nto RM.\n\nIf FILE is a libtool library, all the files associated with it are deleted.\nOtherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      *)\n        func_fatal_help \"invalid operation mode '$opt_mode'\"\n        ;;\n    esac\n\n    echo\n    $ECHO \"Try '$progname --help' for more information about other modes.\"\n}\n\n# Now that we've collected a possible --mode arg, show help if necessary\nif $opt_help; then\n  if test : = \"$opt_help\"; then\n    func_mode_help\n  else\n    {\n      func_help noexit\n      for opt_mode in compile link execute install finish uninstall clean; do\n\tfunc_mode_help\n      done\n    } | $SED -n '1p; 2,$s/^Usage:/  or: /p'\n    {\n      func_help noexit\n      for opt_mode in compile link execute install finish uninstall clean; do\n\techo\n\tfunc_mode_help\n      done\n    } |\n    $SED '1d\n      /^When reporting/,/^Report/{\n\tH\n\td\n      }\n      $x\n      /information about other modes/d\n      /more detailed .*MODE/d\n      s/^Usage:.*--mode=\\([^ ]*\\) .*/Description of \\1 mode:/'\n  fi\n  exit $?\nfi\n\n\n# func_mode_execute arg...\nfunc_mode_execute ()\n{\n    $debug_cmd\n\n    # The first argument is the command name.\n    cmd=$nonopt\n    test -z \"$cmd\" && \\\n      func_fatal_help \"you must specify a COMMAND\"\n\n    # Handle -dlopen flags immediately.\n    for file in $opt_dlopen; do\n      test -f \"$file\" \\\n\t|| func_fatal_help \"'$file' is not a file\"\n\n      dir=\n      case $file in\n      *.la)\n\tfunc_resolve_sysroot \"$file\"\n\tfile=$func_resolve_sysroot_result\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"'$lib' is not a valid libtool archive\"\n\n\t# Read the libtool library.\n\tdlname=\n\tlibrary_names=\n\tfunc_source \"$file\"\n\n\t# Skip this library if it cannot be dlopened.\n\tif test -z \"$dlname\"; then\n\t  # Warn if it was a shared library.\n\t  test -n \"$library_names\" && \\\n\t    func_warning \"'$file' was not linked with '-export-dynamic'\"\n\t  continue\n\tfi\n\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=$func_dirname_result\n\n\tif test -f \"$dir/$objdir/$dlname\"; then\n\t  func_append dir \"/$objdir\"\n\telse\n\t  if test ! -f \"$dir/$dlname\"; then\n\t    func_fatal_error \"cannot find '$dlname' in '$dir' or '$dir/$objdir'\"\n\t  fi\n\tfi\n\t;;\n\n      *.lo)\n\t# Just add the directory containing the .lo file.\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=$func_dirname_result\n\t;;\n\n      *)\n\tfunc_warning \"'-dlopen' is ignored for non-libtool libraries and objects\"\n\tcontinue\n\t;;\n      esac\n\n      # Get the absolute pathname.\n      absdir=`cd \"$dir\" && pwd`\n      test -n \"$absdir\" && dir=$absdir\n\n      # Now add the directory to shlibpath_var.\n      if eval \"test -z \\\"\\$$shlibpath_var\\\"\"; then\n\teval \"$shlibpath_var=\\\"\\$dir\\\"\"\n      else\n\teval \"$shlibpath_var=\\\"\\$dir:\\$$shlibpath_var\\\"\"\n      fi\n    done\n\n    # This variable tells wrapper scripts just to set shlibpath_var\n    # rather than running their programs.\n    libtool_execute_magic=$magic\n\n    # Check if any of the arguments is a wrapper script.\n    args=\n    for file\n    do\n      case $file in\n      -* | *.la | *.lo ) ;;\n      *)\n\t# Do a test to see if this is really a libtool program.\n\tif func_ltwrapper_script_p \"$file\"; then\n\t  func_source \"$file\"\n\t  # Transform arg to wrapped name.\n\t  file=$progdir/$program\n\telif func_ltwrapper_executable_p \"$file\"; then\n\t  func_ltwrapper_scriptname \"$file\"\n\t  func_source \"$func_ltwrapper_scriptname_result\"\n\t  # Transform arg to wrapped name.\n\t  file=$progdir/$program\n\tfi\n\t;;\n      esac\n      # Quote arguments (to preserve shell metacharacters).\n      func_append_quoted args \"$file\"\n    done\n\n    if $opt_dry_run; then\n      # Display what would be done.\n      if test -n \"$shlibpath_var\"; then\n\teval \"\\$ECHO \\\"\\$shlibpath_var=\\$$shlibpath_var\\\"\"\n\techo \"export $shlibpath_var\"\n      fi\n      $ECHO \"$cmd$args\"\n      exit $EXIT_SUCCESS\n    else\n      if test -n \"$shlibpath_var\"; then\n\t# Export the shlibpath_var.\n\teval \"export $shlibpath_var\"\n      fi\n\n      # Restore saved environment variables\n      for lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\n      do\n\teval \"if test \\\"\\${save_$lt_var+set}\\\" = set; then\n                $lt_var=\\$save_$lt_var; export $lt_var\n\t      else\n\t\t$lt_unset $lt_var\n\t      fi\"\n      done\n\n      # Now prepare to actually exec the command.\n      exec_cmd=\\$cmd$args\n    fi\n}\n\ntest execute = \"$opt_mode\" && func_mode_execute ${1+\"$@\"}\n\n\n# func_mode_finish arg...\nfunc_mode_finish ()\n{\n    $debug_cmd\n\n    libs=\n    libdirs=\n    admincmds=\n\n    for opt in \"$nonopt\" ${1+\"$@\"}\n    do\n      if test -d \"$opt\"; then\n\tfunc_append libdirs \" $opt\"\n\n      elif test -f \"$opt\"; then\n\tif func_lalib_unsafe_p \"$opt\"; then\n\t  func_append libs \" $opt\"\n\telse\n\t  func_warning \"'$opt' is not a valid libtool archive\"\n\tfi\n\n      else\n\tfunc_fatal_error \"invalid argument '$opt'\"\n      fi\n    done\n\n    if test -n \"$libs\"; then\n      if test -n \"$lt_sysroot\"; then\n        sysroot_regex=`$ECHO \"$lt_sysroot\" | $SED \"$sed_make_literal_regex\"`\n        sysroot_cmd=\"s/\\([ ']\\)$sysroot_regex/\\1/g;\"\n      else\n        sysroot_cmd=\n      fi\n\n      # Remove sysroot references\n      if $opt_dry_run; then\n        for lib in $libs; do\n          echo \"removing references to $lt_sysroot and '=' prefixes from $lib\"\n        done\n      else\n        tmpdir=`func_mktempdir`\n        for lib in $libs; do\n\t  $SED -e \"$sysroot_cmd s/\\([ ']-[LR]\\)=/\\1/g; s/\\([ ']\\)=/\\1/g\" $lib \\\n\t    > $tmpdir/tmp-la\n\t  mv -f $tmpdir/tmp-la $lib\n\tdone\n        ${RM}r \"$tmpdir\"\n      fi\n    fi\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      for libdir in $libdirs; do\n\tif test -n \"$finish_cmds\"; then\n\t  # Do each command in the finish commands.\n\t  func_execute_cmds \"$finish_cmds\" 'admincmds=\"$admincmds\n'\"$cmd\"'\"'\n\tfi\n\tif test -n \"$finish_eval\"; then\n\t  # Do the single finish_eval.\n\t  eval cmds=\\\"$finish_eval\\\"\n\t  $opt_dry_run || eval \"$cmds\" || func_append admincmds \"\n       $cmds\"\n\tfi\n      done\n    fi\n\n    # Exit here if they wanted silent mode.\n    $opt_quiet && exit $EXIT_SUCCESS\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      echo \"----------------------------------------------------------------------\"\n      echo \"Libraries have been installed in:\"\n      for libdir in $libdirs; do\n\t$ECHO \"   $libdir\"\n      done\n      echo\n      echo \"If you ever happen to want to link against installed libraries\"\n      echo \"in a given directory, LIBDIR, you must either use libtool, and\"\n      echo \"specify the full pathname of the library, or use the '-LLIBDIR'\"\n      echo \"flag during linking and do at least one of the following:\"\n      if test -n \"$shlibpath_var\"; then\n\techo \"   - add LIBDIR to the '$shlibpath_var' environment variable\"\n\techo \"     during execution\"\n      fi\n      if test -n \"$runpath_var\"; then\n\techo \"   - add LIBDIR to the '$runpath_var' environment variable\"\n\techo \"     during linking\"\n      fi\n      if test -n \"$hardcode_libdir_flag_spec\"; then\n\tlibdir=LIBDIR\n\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\n\t$ECHO \"   - use the '$flag' linker flag\"\n      fi\n      if test -n \"$admincmds\"; then\n\t$ECHO \"   - have your system administrator run these commands:$admincmds\"\n      fi\n      if test -f /etc/ld.so.conf; then\n\techo \"   - have your system administrator add LIBDIR to '/etc/ld.so.conf'\"\n      fi\n      echo\n\n      echo \"See any operating system documentation about shared libraries for\"\n      case $host in\n\tsolaris2.[6789]|solaris2.1[0-9])\n\t  echo \"more information, such as the ld(1), crle(1) and ld.so(8) manual\"\n\t  echo \"pages.\"\n\t  ;;\n\t*)\n\t  echo \"more information, such as the ld(1) and ld.so(8) manual pages.\"\n\t  ;;\n      esac\n      echo \"----------------------------------------------------------------------\"\n    fi\n    exit $EXIT_SUCCESS\n}\n\ntest finish = \"$opt_mode\" && func_mode_finish ${1+\"$@\"}\n\n\n# func_mode_install arg...\nfunc_mode_install ()\n{\n    $debug_cmd\n\n    # There may be an optional sh(1) argument at the beginning of\n    # install_prog (especially on Windows NT).\n    if test \"$SHELL\" = \"$nonopt\" || test /bin/sh = \"$nonopt\" ||\n       # Allow the use of GNU shtool's install command.\n       case $nonopt in *shtool*) :;; *) false;; esac\n    then\n      # Aesthetically quote it.\n      func_quote_for_eval \"$nonopt\"\n      install_prog=\"$func_quote_for_eval_result \"\n      arg=$1\n      shift\n    else\n      install_prog=\n      arg=$nonopt\n    fi\n\n    # The real first argument should be the name of the installation program.\n    # Aesthetically quote it.\n    func_quote_for_eval \"$arg\"\n    func_append install_prog \"$func_quote_for_eval_result\"\n    install_shared_prog=$install_prog\n    case \" $install_prog \" in\n      *[\\\\\\ /]cp\\ *) install_cp=: ;;\n      *) install_cp=false ;;\n    esac\n\n    # We need to accept at least all the BSD install flags.\n    dest=\n    files=\n    opts=\n    prev=\n    install_type=\n    isdir=false\n    stripme=\n    no_mode=:\n    for arg\n    do\n      arg2=\n      if test -n \"$dest\"; then\n\tfunc_append files \" $dest\"\n\tdest=$arg\n\tcontinue\n      fi\n\n      case $arg in\n      -d) isdir=: ;;\n      -f)\n\tif $install_cp; then :; else\n\t  prev=$arg\n\tfi\n\t;;\n      -g | -m | -o)\n\tprev=$arg\n\t;;\n      -s)\n\tstripme=\" -s\"\n\tcontinue\n\t;;\n      -*)\n\t;;\n      *)\n\t# If the previous option needed an argument, then skip it.\n\tif test -n \"$prev\"; then\n\t  if test X-m = \"X$prev\" && test -n \"$install_override_mode\"; then\n\t    arg2=$install_override_mode\n\t    no_mode=false\n\t  fi\n\t  prev=\n\telse\n\t  dest=$arg\n\t  continue\n\tfi\n\t;;\n      esac\n\n      # Aesthetically quote the argument.\n      func_quote_for_eval \"$arg\"\n      func_append install_prog \" $func_quote_for_eval_result\"\n      if test -n \"$arg2\"; then\n\tfunc_quote_for_eval \"$arg2\"\n      fi\n      func_append install_shared_prog \" $func_quote_for_eval_result\"\n    done\n\n    test -z \"$install_prog\" && \\\n      func_fatal_help \"you must specify an install program\"\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the '$prev' option requires an argument\"\n\n    if test -n \"$install_override_mode\" && $no_mode; then\n      if $install_cp; then :; else\n\tfunc_quote_for_eval \"$install_override_mode\"\n\tfunc_append install_shared_prog \" -m $func_quote_for_eval_result\"\n      fi\n    fi\n\n    if test -z \"$files\"; then\n      if test -z \"$dest\"; then\n\tfunc_fatal_help \"no file or destination specified\"\n      else\n\tfunc_fatal_help \"you must specify a destination\"\n      fi\n    fi\n\n    # Strip any trailing slash from the destination.\n    func_stripname '' '/' \"$dest\"\n    dest=$func_stripname_result\n\n    # Check to see that the destination is a directory.\n    test -d \"$dest\" && isdir=:\n    if $isdir; then\n      destdir=$dest\n      destname=\n    else\n      func_dirname_and_basename \"$dest\" \"\" \".\"\n      destdir=$func_dirname_result\n      destname=$func_basename_result\n\n      # Not a directory, so check to see that there is only one file specified.\n      set dummy $files; shift\n      test \"$#\" -gt 1 && \\\n\tfunc_fatal_help \"'$dest' is not a directory\"\n    fi\n    case $destdir in\n    [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n    *)\n      for file in $files; do\n\tcase $file in\n\t*.lo) ;;\n\t*)\n\t  func_fatal_help \"'$destdir' must be an absolute directory name\"\n\t  ;;\n\tesac\n      done\n      ;;\n    esac\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=$magic\n\n    staticlibs=\n    future_libdirs=\n    current_libdirs=\n    for file in $files; do\n\n      # Do each installation.\n      case $file in\n      *.$libext)\n\t# Do the static libraries later.\n\tfunc_append staticlibs \" $file\"\n\t;;\n\n      *.la)\n\tfunc_resolve_sysroot \"$file\"\n\tfile=$func_resolve_sysroot_result\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"'$file' is not a valid libtool archive\"\n\n\tlibrary_names=\n\told_library=\n\trelink_command=\n\tfunc_source \"$file\"\n\n\t# Add the libdir to current_libdirs if it is the destination.\n\tif test \"X$destdir\" = \"X$libdir\"; then\n\t  case \"$current_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append current_libdirs \" $libdir\" ;;\n\t  esac\n\telse\n\t  # Note the libdir as a future libdir.\n\t  case \"$future_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append future_libdirs \" $libdir\" ;;\n\t  esac\n\tfi\n\n\tfunc_dirname \"$file\" \"/\" \"\"\n\tdir=$func_dirname_result\n\tfunc_append dir \"$objdir\"\n\n\tif test -n \"$relink_command\"; then\n\t  # Determine the prefix the user has applied to our future dir.\n\t  inst_prefix_dir=`$ECHO \"$destdir\" | $SED -e \"s%$libdir\\$%%\"`\n\n\t  # Don't allow the user to place us outside of our expected\n\t  # location b/c this prevents finding dependent libraries that\n\t  # are installed to the same prefix.\n\t  # At present, this check doesn't affect windows .dll's that\n\t  # are installed into $libdir/../bin (currently, that works fine)\n\t  # but it's something to keep an eye on.\n\t  test \"$inst_prefix_dir\" = \"$destdir\" && \\\n\t    func_fatal_error \"error: cannot install '$file' to a directory not ending in $libdir\"\n\n\t  if test -n \"$inst_prefix_dir\"; then\n\t    # Stick the inst_prefix_dir data into the link command.\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%-inst-prefix-dir $inst_prefix_dir%\"`\n\t  else\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%%\"`\n\t  fi\n\n\t  func_warning \"relinking '$file'\"\n\t  func_show_eval \"$relink_command\" \\\n\t    'func_fatal_error \"error: relink '\\''$file'\\'' with the above command before installing it\"'\n\tfi\n\n\t# See the names of the shared library.\n\tset dummy $library_names; shift\n\tif test -n \"$1\"; then\n\t  realname=$1\n\t  shift\n\n\t  srcname=$realname\n\t  test -n \"$relink_command\" && srcname=${realname}T\n\n\t  # Install the shared library and build the symlinks.\n\t  func_show_eval \"$install_shared_prog $dir/$srcname $destdir/$realname\" \\\n\t      'exit $?'\n\t  tstripme=$stripme\n\t  case $host_os in\n\t  cygwin* | mingw* | pw32* | cegcc*)\n\t    case $realname in\n\t    *.dll.a)\n\t      tstripme=\n\t      ;;\n\t    esac\n\t    ;;\n\t  os2*)\n\t    case $realname in\n\t    *_dll.a)\n\t      tstripme=\n\t      ;;\n\t    esac\n\t    ;;\n\t  esac\n\t  if test -n \"$tstripme\" && test -n \"$striplib\"; then\n\t    func_show_eval \"$striplib $destdir/$realname\" 'exit $?'\n\t  fi\n\n\t  if test \"$#\" -gt 0; then\n\t    # Delete the old symlinks, and create new ones.\n\t    # Try 'ln -sf' first, because the 'ln' binary might depend on\n\t    # the symlink we replace!  Solaris /bin/ln does not understand -f,\n\t    # so we also need to try rm && ln -s.\n\t    for linkname\n\t    do\n\t      test \"$linkname\" != \"$realname\" \\\n\t\t&& func_show_eval \"(cd $destdir && { $LN_S -f $realname $linkname || { $RM $linkname && $LN_S $realname $linkname; }; })\"\n\t    done\n\t  fi\n\n\t  # Do each command in the postinstall commands.\n\t  lib=$destdir/$realname\n\t  func_execute_cmds \"$postinstall_cmds\" 'exit $?'\n\tfi\n\n\t# Install the pseudo-library for information purposes.\n\tfunc_basename \"$file\"\n\tname=$func_basename_result\n\tinstname=$dir/${name}i\n\tfunc_show_eval \"$install_prog $instname $destdir/$name\" 'exit $?'\n\n\t# Maybe install the static library, too.\n\ttest -n \"$old_library\" && func_append staticlibs \" $dir/$old_library\"\n\t;;\n\n      *.lo)\n\t# Install (i.e. copy) a libtool object.\n\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=$destdir/$destname\n\telse\n\t  func_basename \"$file\"\n\t  destfile=$func_basename_result\n\t  destfile=$destdir/$destfile\n\tfi\n\n\t# Deduce the name of the destination old-style object file.\n\tcase $destfile in\n\t*.lo)\n\t  func_lo2o \"$destfile\"\n\t  staticdest=$func_lo2o_result\n\t  ;;\n\t*.$objext)\n\t  staticdest=$destfile\n\t  destfile=\n\t  ;;\n\t*)\n\t  func_fatal_help \"cannot copy a libtool object to '$destfile'\"\n\t  ;;\n\tesac\n\n\t# Install the libtool object if requested.\n\ttest -n \"$destfile\" && \\\n\t  func_show_eval \"$install_prog $file $destfile\" 'exit $?'\n\n\t# Install the old object if enabled.\n\tif test yes = \"$build_old_libs\"; then\n\t  # Deduce the name of the old-style object file.\n\t  func_lo2o \"$file\"\n\t  staticobj=$func_lo2o_result\n\t  func_show_eval \"$install_prog \\$staticobj \\$staticdest\" 'exit $?'\n\tfi\n\texit $EXIT_SUCCESS\n\t;;\n\n      *)\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=$destdir/$destname\n\telse\n\t  func_basename \"$file\"\n\t  destfile=$func_basename_result\n\t  destfile=$destdir/$destfile\n\tfi\n\n\t# If the file is missing, and there is a .exe on the end, strip it\n\t# because it is most likely a libtool script we actually want to\n\t# install\n\tstripped_ext=\n\tcase $file in\n\t  *.exe)\n\t    if test ! -f \"$file\"; then\n\t      func_stripname '' '.exe' \"$file\"\n\t      file=$func_stripname_result\n\t      stripped_ext=.exe\n\t    fi\n\t    ;;\n\tesac\n\n\t# Do a test to see if this is really a libtool program.\n\tcase $host in\n\t*cygwin* | *mingw*)\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      wrapper=$func_ltwrapper_scriptname_result\n\t    else\n\t      func_stripname '' '.exe' \"$file\"\n\t      wrapper=$func_stripname_result\n\t    fi\n\t    ;;\n\t*)\n\t    wrapper=$file\n\t    ;;\n\tesac\n\tif func_ltwrapper_script_p \"$wrapper\"; then\n\t  notinst_deplibs=\n\t  relink_command=\n\n\t  func_source \"$wrapper\"\n\n\t  # Check the variables that should have been set.\n\t  test -z \"$generated_by_libtool_version\" && \\\n\t    func_fatal_error \"invalid libtool wrapper script '$wrapper'\"\n\n\t  finalize=:\n\t  for lib in $notinst_deplibs; do\n\t    # Check to see that each library is installed.\n\t    libdir=\n\t    if test -f \"$lib\"; then\n\t      func_source \"$lib\"\n\t    fi\n\t    libfile=$libdir/`$ECHO \"$lib\" | $SED 's%^.*/%%g'`\n\t    if test -n \"$libdir\" && test ! -f \"$libfile\"; then\n\t      func_warning \"'$lib' has not been installed in '$libdir'\"\n\t      finalize=false\n\t    fi\n\t  done\n\n\t  relink_command=\n\t  func_source \"$wrapper\"\n\n\t  outputname=\n\t  if test no = \"$fast_install\" && test -n \"$relink_command\"; then\n\t    $opt_dry_run || {\n\t      if $finalize; then\n\t        tmpdir=`func_mktempdir`\n\t\tfunc_basename \"$file$stripped_ext\"\n\t\tfile=$func_basename_result\n\t        outputname=$tmpdir/$file\n\t        # Replace the output file specification.\n\t        relink_command=`$ECHO \"$relink_command\" | $SED 's%@OUTPUT@%'\"$outputname\"'%g'`\n\n\t        $opt_quiet || {\n\t          func_quote_for_expand \"$relink_command\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t        }\n\t        if eval \"$relink_command\"; then :\n\t          else\n\t\t  func_error \"error: relink '$file' with the above command before installing it\"\n\t\t  $opt_dry_run || ${RM}r \"$tmpdir\"\n\t\t  continue\n\t        fi\n\t        file=$outputname\n\t      else\n\t        func_warning \"cannot relink '$file'\"\n\t      fi\n\t    }\n\t  else\n\t    # Install the binary that we compiled earlier.\n\t    file=`$ECHO \"$file$stripped_ext\" | $SED \"s%\\([^/]*\\)$%$objdir/\\1%\"`\n\t  fi\n\tfi\n\n\t# remove .exe since cygwin /usr/bin/install will append another\n\t# one anyway\n\tcase $install_prog,$host in\n\t*/usr/bin/install*,*cygwin*)\n\t  case $file:$destfile in\n\t  *.exe:*.exe)\n\t    # this is ok\n\t    ;;\n\t  *.exe:*)\n\t    destfile=$destfile.exe\n\t    ;;\n\t  *:*.exe)\n\t    func_stripname '' '.exe' \"$destfile\"\n\t    destfile=$func_stripname_result\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tfunc_show_eval \"$install_prog\\$stripme \\$file \\$destfile\" 'exit $?'\n\t$opt_dry_run || if test -n \"$outputname\"; then\n\t  ${RM}r \"$tmpdir\"\n\tfi\n\t;;\n      esac\n    done\n\n    for file in $staticlibs; do\n      func_basename \"$file\"\n      name=$func_basename_result\n\n      # Set up the ranlib parameters.\n      oldlib=$destdir/$name\n      func_to_tool_file \"$oldlib\" func_convert_file_msys_to_w32\n      tool_oldlib=$func_to_tool_file_result\n\n      func_show_eval \"$install_prog \\$file \\$oldlib\" 'exit $?'\n\n      if test -n \"$stripme\" && test -n \"$old_striplib\"; then\n\tfunc_show_eval \"$old_striplib $tool_oldlib\" 'exit $?'\n      fi\n\n      # Do each command in the postinstall commands.\n      func_execute_cmds \"$old_postinstall_cmds\" 'exit $?'\n    done\n\n    test -n \"$future_libdirs\" && \\\n      func_warning \"remember to run '$progname --finish$future_libdirs'\"\n\n    if test -n \"$current_libdirs\"; then\n      # Maybe just do a dry run.\n      $opt_dry_run && current_libdirs=\" -n$current_libdirs\"\n      exec_cmd='$SHELL \"$progpath\" $preserve_args --finish$current_libdirs'\n    else\n      exit $EXIT_SUCCESS\n    fi\n}\n\ntest install = \"$opt_mode\" && func_mode_install ${1+\"$@\"}\n\n\n# func_generate_dlsyms outputname originator pic_p\n# Extract symbols from dlprefiles and create ${outputname}S.o with\n# a dlpreopen symbol table.\nfunc_generate_dlsyms ()\n{\n    $debug_cmd\n\n    my_outputname=$1\n    my_originator=$2\n    my_pic_p=${3-false}\n    my_prefix=`$ECHO \"$my_originator\" | $SED 's%[^a-zA-Z0-9]%_%g'`\n    my_dlsyms=\n\n    if test -n \"$dlfiles$dlprefiles\" || test no != \"$dlself\"; then\n      if test -n \"$NM\" && test -n \"$global_symbol_pipe\"; then\n\tmy_dlsyms=${my_outputname}S.c\n      else\n\tfunc_error \"not configured to extract global symbols from dlpreopened files\"\n      fi\n    fi\n\n    if test -n \"$my_dlsyms\"; then\n      case $my_dlsyms in\n      \"\") ;;\n      *.c)\n\t# Discover the nlist of each of the dlfiles.\n\tnlist=$output_objdir/$my_outputname.nm\n\n\tfunc_show_eval \"$RM $nlist ${nlist}S ${nlist}T\"\n\n\t# Parse the name list into a source file.\n\tfunc_verbose \"creating $output_objdir/$my_dlsyms\"\n\n\t$opt_dry_run || $ECHO > \"$output_objdir/$my_dlsyms\" \"\\\n/* $my_dlsyms - symbol resolution table for '$my_outputname' dlsym emulation. */\n/* Generated by $PROGRAM (GNU $PACKAGE) $VERSION */\n\n#ifdef __cplusplus\nextern \\\"C\\\" {\n#endif\n\n#if defined __GNUC__ && (((__GNUC__ == 4) && (__GNUC_MINOR__ >= 4)) || (__GNUC__ > 4))\n#pragma GCC diagnostic ignored \\\"-Wstrict-prototypes\\\"\n#endif\n\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined _WIN32 || defined __CYGWIN__ || defined _WIN32_WCE\n/* DATA imports from DLLs on WIN32 can't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT_DLSYM_CONST\n#elif defined __osf__\n/* This system does not cope well with relocations in const data.  */\n# define LT_DLSYM_CONST\n#else\n# define LT_DLSYM_CONST const\n#endif\n\n#define STREQ(s1, s2) (strcmp ((s1), (s2)) == 0)\n\n/* External symbol declarations for the compiler. */\\\n\"\n\n\tif test yes = \"$dlself\"; then\n\t  func_verbose \"generating symbol list for '$output'\"\n\n\t  $opt_dry_run || echo ': @PROGRAM@ ' > \"$nlist\"\n\n\t  # Add our own program objects to the symbol list.\n\t  progfiles=`$ECHO \"$objs$old_deplibs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\t  for progfile in $progfiles; do\n\t    func_to_tool_file \"$progfile\" func_convert_file_msys_to_w32\n\t    func_verbose \"extracting global C symbols from '$func_to_tool_file_result'\"\n\t    $opt_dry_run || eval \"$NM $func_to_tool_file_result | $global_symbol_pipe >> '$nlist'\"\n\t  done\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $opt_dry_run || {\n\t      eval '$EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t    }\n\t  fi\n\n\t  if test -n \"$export_symbols_regex\"; then\n\t    $opt_dry_run || {\n\t      eval '$EGREP -e \"$export_symbols_regex\" \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t    }\n\t  fi\n\n\t  # Prepare the list of exported symbols\n\t  if test -z \"$export_symbols\"; then\n\t    export_symbols=$output_objdir/$outputname.exp\n\t    $opt_dry_run || {\n\t      $RM $export_symbols\n\t      eval \"$SED -n -e '/^: @PROGRAM@ $/d' -e 's/^.* \\(.*\\)$/\\1/p' \"'< \"$nlist\" > \"$export_symbols\"'\n\t      case $host in\n\t      *cygwin* | *mingw* | *cegcc* )\n                eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n                eval 'cat \"$export_symbols\" >> \"$output_objdir/$outputname.def\"'\n\t        ;;\n\t      esac\n\t    }\n\t  else\n\t    $opt_dry_run || {\n\t      eval \"$SED -e 's/\\([].[*^$]\\)/\\\\\\\\\\1/g' -e 's/^/ /' -e 's/$/$/'\"' < \"$export_symbols\" > \"$output_objdir/$outputname.exp\"'\n\t      eval '$GREP -f \"$output_objdir/$outputname.exp\" < \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t      case $host in\n\t        *cygwin* | *mingw* | *cegcc* )\n\t          eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n\t          eval 'cat \"$nlist\" >> \"$output_objdir/$outputname.def\"'\n\t          ;;\n\t      esac\n\t    }\n\t  fi\n\tfi\n\n\tfor dlprefile in $dlprefiles; do\n\t  func_verbose \"extracting global C symbols from '$dlprefile'\"\n\t  func_basename \"$dlprefile\"\n\t  name=$func_basename_result\n          case $host in\n\t    *cygwin* | *mingw* | *cegcc* )\n\t      # if an import library, we need to obtain dlname\n\t      if func_win32_import_lib_p \"$dlprefile\"; then\n\t        func_tr_sh \"$dlprefile\"\n\t        eval \"curr_lafile=\\$libfile_$func_tr_sh_result\"\n\t        dlprefile_dlbasename=\n\t        if test -n \"$curr_lafile\" && func_lalib_p \"$curr_lafile\"; then\n\t          # Use subshell, to avoid clobbering current variable values\n\t          dlprefile_dlname=`source \"$curr_lafile\" && echo \"$dlname\"`\n\t          if test -n \"$dlprefile_dlname\"; then\n\t            func_basename \"$dlprefile_dlname\"\n\t            dlprefile_dlbasename=$func_basename_result\n\t          else\n\t            # no lafile. user explicitly requested -dlpreopen <import library>.\n\t            $sharedlib_from_linklib_cmd \"$dlprefile\"\n\t            dlprefile_dlbasename=$sharedlib_from_linklib_result\n\t          fi\n\t        fi\n\t        $opt_dry_run || {\n\t          if test -n \"$dlprefile_dlbasename\"; then\n\t            eval '$ECHO \": $dlprefile_dlbasename\" >> \"$nlist\"'\n\t          else\n\t            func_warning \"Could not compute DLL name from $name\"\n\t            eval '$ECHO \": $name \" >> \"$nlist\"'\n\t          fi\n\t          func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t          eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe |\n\t            $SED -e '/I __imp/d' -e 's/I __nm_/D /;s/_nm__//' >> '$nlist'\"\n\t        }\n\t      else # not an import lib\n\t        $opt_dry_run || {\n\t          eval '$ECHO \": $name \" >> \"$nlist\"'\n\t          func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t          eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t        }\n\t      fi\n\t    ;;\n\t    *)\n\t      $opt_dry_run || {\n\t        eval '$ECHO \": $name \" >> \"$nlist\"'\n\t        func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t        eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t      }\n\t    ;;\n          esac\n\tdone\n\n\t$opt_dry_run || {\n\t  # Make sure we have at least an empty file.\n\t  test -f \"$nlist\" || : > \"$nlist\"\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T\n\t    $MV \"$nlist\"T \"$nlist\"\n\t  fi\n\n\t  # Try sorting and uniquifying the output.\n\t  if $GREP -v \"^: \" < \"$nlist\" |\n\t      if sort -k 3 </dev/null >/dev/null 2>&1; then\n\t\tsort -k 3\n\t      else\n\t\tsort +2\n\t      fi |\n\t      uniq > \"$nlist\"S; then\n\t    :\n\t  else\n\t    $GREP -v \"^: \" < \"$nlist\" > \"$nlist\"S\n\t  fi\n\n\t  if test -f \"$nlist\"S; then\n\t    eval \"$global_symbol_to_cdecl\"' < \"$nlist\"S >> \"$output_objdir/$my_dlsyms\"'\n\t  else\n\t    echo '/* NONE */' >> \"$output_objdir/$my_dlsyms\"\n\t  fi\n\n\t  func_show_eval '$RM \"${nlist}I\"'\n\t  if test -n \"$global_symbol_to_import\"; then\n\t    eval \"$global_symbol_to_import\"' < \"$nlist\"S > \"$nlist\"I'\n\t  fi\n\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n\n/* The mapping between symbol names and symbols.  */\ntypedef struct {\n  const char *name;\n  void *address;\n} lt_dlsymlist;\nextern LT_DLSYM_CONST lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[];\\\n\"\n\n\t  if test -s \"$nlist\"I; then\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\nstatic void lt_syminit(void)\n{\n  LT_DLSYM_CONST lt_dlsymlist *symbol = lt_${my_prefix}_LTX_preloaded_symbols;\n  for (; symbol->name; ++symbol)\n    {\"\n\t    $SED 's/.*/      if (STREQ (symbol->name, \\\"&\\\")) symbol->address = (void *) \\&&;/' < \"$nlist\"I >> \"$output_objdir/$my_dlsyms\"\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\n    }\n}\"\n\t  fi\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\nLT_DLSYM_CONST lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[] =\n{ {\\\"$my_originator\\\", (void *) 0},\"\n\n\t  if test -s \"$nlist\"I; then\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\n  {\\\"@INIT@\\\", (void *) &lt_syminit},\"\n\t  fi\n\n\t  case $need_lib_prefix in\n\t  no)\n\t    eval \"$global_symbol_to_c_name_address\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  *)\n\t    eval \"$global_symbol_to_c_name_address_lib_prefix\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  esac\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt_${my_prefix}_LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\\\n\"\n\t} # !$opt_dry_run\n\n\tpic_flag_for_symtable=\n\tcase \"$compile_command \" in\n\t*\" -static \"*) ;;\n\t*)\n\t  case $host in\n\t  # compiling the symbol table file with pic_flag works around\n\t  # a FreeBSD bug that causes programs to crash when -lm is\n\t  # linked before any other PIC object.  But we must not use\n\t  # pic_flag when linking with -static.  The problem exists in\n\t  # FreeBSD 2.2.6 and is fixed in FreeBSD 3.1.\n\t  *-*-freebsd2.*|*-*-freebsd3.0*|*-*-freebsdelf3.0*)\n\t    pic_flag_for_symtable=\" $pic_flag -DFREEBSD_WORKAROUND\" ;;\n\t  *-*-hpux*)\n\t    pic_flag_for_symtable=\" $pic_flag\"  ;;\n\t  *)\n\t    $my_pic_p && pic_flag_for_symtable=\" $pic_flag\"\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tsymtab_cflags=\n\tfor arg in $LTCFLAGS; do\n\t  case $arg in\n\t  -pie | -fpie | -fPIE) ;;\n\t  *) func_append symtab_cflags \" $arg\" ;;\n\t  esac\n\tdone\n\n\t# Now compile the dynamic symbol file.\n\tfunc_show_eval '(cd $output_objdir && $LTCC$symtab_cflags -c$no_builtin_flag$pic_flag_for_symtable \"$my_dlsyms\")' 'exit $?'\n\n\t# Clean up the generated files.\n\tfunc_show_eval '$RM \"$output_objdir/$my_dlsyms\" \"$nlist\" \"${nlist}S\" \"${nlist}T\" \"${nlist}I\"'\n\n\t# Transform the symbol file into the correct name.\n\tsymfileobj=$output_objdir/${my_outputname}S.$objext\n\tcase $host in\n\t*cygwin* | *mingw* | *cegcc* )\n\t  if test -f \"$output_objdir/$my_outputname.def\"; then\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t  else\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  fi\n\t  ;;\n\t*)\n\t  compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  ;;\n\tesac\n\t;;\n      *)\n\tfunc_fatal_error \"unknown suffix for '$my_dlsyms'\"\n\t;;\n      esac\n    else\n      # We keep going just in case the user didn't refer to\n      # lt_preloaded_symbols.  The linker will fail if global_symbol_pipe\n      # really was required.\n\n      # Nullify the symbol file.\n      compile_command=`$ECHO \"$compile_command\" | $SED \"s% @SYMFILE@%%\"`\n      finalize_command=`$ECHO \"$finalize_command\" | $SED \"s% @SYMFILE@%%\"`\n    fi\n}\n\n# func_cygming_gnu_implib_p ARG\n# This predicate returns with zero status (TRUE) if\n# ARG is a GNU/binutils-style import library. Returns\n# with nonzero status (FALSE) otherwise.\nfunc_cygming_gnu_implib_p ()\n{\n  $debug_cmd\n\n  func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n  func_cygming_gnu_implib_tmp=`$NM \"$func_to_tool_file_result\" | eval \"$global_symbol_pipe\" | $EGREP ' (_head_[A-Za-z0-9_]+_[ad]l*|[A-Za-z0-9_]+_[ad]l*_iname)$'`\n  test -n \"$func_cygming_gnu_implib_tmp\"\n}\n\n# func_cygming_ms_implib_p ARG\n# This predicate returns with zero status (TRUE) if\n# ARG is an MS-style import library. Returns\n# with nonzero status (FALSE) otherwise.\nfunc_cygming_ms_implib_p ()\n{\n  $debug_cmd\n\n  func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n  func_cygming_ms_implib_tmp=`$NM \"$func_to_tool_file_result\" | eval \"$global_symbol_pipe\" | $GREP '_NULL_IMPORT_DESCRIPTOR'`\n  test -n \"$func_cygming_ms_implib_tmp\"\n}\n\n# func_win32_libid arg\n# return the library type of file 'arg'\n#\n# Need a lot of goo to handle *both* DLLs and import libs\n# Has to be a shell function in order to 'eat' the argument\n# that is supplied when $file_magic_command is called.\n# Despite the name, also deal with 64 bit binaries.\nfunc_win32_libid ()\n{\n  $debug_cmd\n\n  win32_libid_type=unknown\n  win32_fileres=`file -L $1 2>/dev/null`\n  case $win32_fileres in\n  *ar\\ archive\\ import\\ library*) # definitely import\n    win32_libid_type=\"x86 archive import\"\n    ;;\n  *ar\\ archive*) # could be an import, or static\n    # Keep the egrep pattern in sync with the one in _LT_CHECK_MAGIC_METHOD.\n    if eval $OBJDUMP -f $1 | $SED -e '10q' 2>/dev/null |\n       $EGREP 'file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)' >/dev/null; then\n      case $nm_interface in\n      \"MS dumpbin\")\n\tif func_cygming_ms_implib_p \"$1\" ||\n\t   func_cygming_gnu_implib_p \"$1\"\n\tthen\n\t  win32_nmres=import\n\telse\n\t  win32_nmres=\n\tfi\n\t;;\n      *)\n\tfunc_to_tool_file \"$1\" func_convert_file_msys_to_w32\n\twin32_nmres=`eval $NM -f posix -A \\\"$func_to_tool_file_result\\\" |\n\t  $SED -n -e '\n\t    1,100{\n\t\t/ I /{\n\t\t    s|.*|import|\n\t\t    p\n\t\t    q\n\t\t}\n\t    }'`\n\t;;\n      esac\n      case $win32_nmres in\n      import*)  win32_libid_type=\"x86 archive import\";;\n      *)        win32_libid_type=\"x86 archive static\";;\n      esac\n    fi\n    ;;\n  *DLL*)\n    win32_libid_type=\"x86 DLL\"\n    ;;\n  *executable*) # but shell scripts are \"executable\" too...\n    case $win32_fileres in\n    *MS\\ Windows\\ PE\\ Intel*)\n      win32_libid_type=\"x86 DLL\"\n      ;;\n    esac\n    ;;\n  esac\n  $ECHO \"$win32_libid_type\"\n}\n\n# func_cygming_dll_for_implib ARG\n#\n# Platform-specific function to extract the\n# name of the DLL associated with the specified\n# import library ARG.\n# Invoked by eval'ing the libtool variable\n#    $sharedlib_from_linklib_cmd\n# Result is available in the variable\n#    $sharedlib_from_linklib_result\nfunc_cygming_dll_for_implib ()\n{\n  $debug_cmd\n\n  sharedlib_from_linklib_result=`$DLLTOOL --identify-strict --identify \"$1\"`\n}\n\n# func_cygming_dll_for_implib_fallback_core SECTION_NAME LIBNAMEs\n#\n# The is the core of a fallback implementation of a\n# platform-specific function to extract the name of the\n# DLL associated with the specified import library LIBNAME.\n#\n# SECTION_NAME is either .idata$6 or .idata$7, depending\n# on the platform and compiler that created the implib.\n#\n# Echos the name of the DLL associated with the\n# specified import library.\nfunc_cygming_dll_for_implib_fallback_core ()\n{\n  $debug_cmd\n\n  match_literal=`$ECHO \"$1\" | $SED \"$sed_make_literal_regex\"`\n  $OBJDUMP -s --section \"$1\" \"$2\" 2>/dev/null |\n    $SED '/^Contents of section '\"$match_literal\"':/{\n      # Place marker at beginning of archive member dllname section\n      s/.*/====MARK====/\n      p\n      d\n    }\n    # These lines can sometimes be longer than 43 characters, but\n    # are always uninteresting\n    /:[\t ]*file format pe[i]\\{,1\\}-/d\n    /^In archive [^:]*:/d\n    # Ensure marker is printed\n    /^====MARK====/p\n    # Remove all lines with less than 43 characters\n    /^.\\{43\\}/!d\n    # From remaining lines, remove first 43 characters\n    s/^.\\{43\\}//' |\n    $SED -n '\n      # Join marker and all lines until next marker into a single line\n      /^====MARK====/ b para\n      H\n      $ b para\n      b\n      :para\n      x\n      s/\\n//g\n      # Remove the marker\n      s/^====MARK====//\n      # Remove trailing dots and whitespace\n      s/[\\. \\t]*$//\n      # Print\n      /./p' |\n    # we now have a list, one entry per line, of the stringified\n    # contents of the appropriate section of all members of the\n    # archive that possess that section. Heuristic: eliminate\n    # all those that have a first or second character that is\n    # a '.' (that is, objdump's representation of an unprintable\n    # character.) This should work for all archives with less than\n    # 0x302f exports -- but will fail for DLLs whose name actually\n    # begins with a literal '.' or a single character followed by\n    # a '.'.\n    #\n    # Of those that remain, print the first one.\n    $SED -e '/^\\./d;/^.\\./d;q'\n}\n\n# func_cygming_dll_for_implib_fallback ARG\n# Platform-specific function to extract the\n# name of the DLL associated with the specified\n# import library ARG.\n#\n# This fallback implementation is for use when $DLLTOOL\n# does not support the --identify-strict option.\n# Invoked by eval'ing the libtool variable\n#    $sharedlib_from_linklib_cmd\n# Result is available in the variable\n#    $sharedlib_from_linklib_result\nfunc_cygming_dll_for_implib_fallback ()\n{\n  $debug_cmd\n\n  if func_cygming_gnu_implib_p \"$1\"; then\n    # binutils import library\n    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$7' \"$1\"`\n  elif func_cygming_ms_implib_p \"$1\"; then\n    # ms-generated import library\n    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$6' \"$1\"`\n  else\n    # unknown\n    sharedlib_from_linklib_result=\n  fi\n}\n\n\n# func_extract_an_archive dir oldlib\nfunc_extract_an_archive ()\n{\n    $debug_cmd\n\n    f_ex_an_ar_dir=$1; shift\n    f_ex_an_ar_oldlib=$1\n    if test yes = \"$lock_old_archive_extraction\"; then\n      lockfile=$f_ex_an_ar_oldlib.lock\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    fi\n    func_show_eval \"(cd \\$f_ex_an_ar_dir && $AR x \\\"\\$f_ex_an_ar_oldlib\\\")\" \\\n\t\t   'stat=$?; rm -f \"$lockfile\"; exit $stat'\n    if test yes = \"$lock_old_archive_extraction\"; then\n      $opt_dry_run || rm -f \"$lockfile\"\n    fi\n    if ($AR t \"$f_ex_an_ar_oldlib\" | sort | sort -uc >/dev/null 2>&1); then\n     :\n    else\n      func_fatal_error \"object name conflicts in archive: $f_ex_an_ar_dir/$f_ex_an_ar_oldlib\"\n    fi\n}\n\n\n# func_extract_archives gentop oldlib ...\nfunc_extract_archives ()\n{\n    $debug_cmd\n\n    my_gentop=$1; shift\n    my_oldlibs=${1+\"$@\"}\n    my_oldobjs=\n    my_xlib=\n    my_xabs=\n    my_xdir=\n\n    for my_xlib in $my_oldlibs; do\n      # Extract the objects.\n      case $my_xlib in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) my_xabs=$my_xlib ;;\n\t*) my_xabs=`pwd`\"/$my_xlib\" ;;\n      esac\n      func_basename \"$my_xlib\"\n      my_xlib=$func_basename_result\n      my_xlib_u=$my_xlib\n      while :; do\n        case \" $extracted_archives \" in\n\t*\" $my_xlib_u \"*)\n\t  func_arith $extracted_serial + 1\n\t  extracted_serial=$func_arith_result\n\t  my_xlib_u=lt$extracted_serial-$my_xlib ;;\n\t*) break ;;\n\tesac\n      done\n      extracted_archives=\"$extracted_archives $my_xlib_u\"\n      my_xdir=$my_gentop/$my_xlib_u\n\n      func_mkdir_p \"$my_xdir\"\n\n      case $host in\n      *-darwin*)\n\tfunc_verbose \"Extracting $my_xabs\"\n\t# Do not bother doing anything if just a dry run\n\t$opt_dry_run || {\n\t  darwin_orig_dir=`pwd`\n\t  cd $my_xdir || exit $?\n\t  darwin_archive=$my_xabs\n\t  darwin_curdir=`pwd`\n\t  func_basename \"$darwin_archive\"\n\t  darwin_base_archive=$func_basename_result\n\t  darwin_arches=`$LIPO -info \"$darwin_archive\" 2>/dev/null | $GREP Architectures 2>/dev/null || true`\n\t  if test -n \"$darwin_arches\"; then\n\t    darwin_arches=`$ECHO \"$darwin_arches\" | $SED -e 's/.*are://'`\n\t    darwin_arch=\n\t    func_verbose \"$darwin_base_archive has multiple architectures $darwin_arches\"\n\t    for darwin_arch in  $darwin_arches; do\n\t      func_mkdir_p \"unfat-$$/$darwin_base_archive-$darwin_arch\"\n\t      $LIPO -thin $darwin_arch -output \"unfat-$$/$darwin_base_archive-$darwin_arch/$darwin_base_archive\" \"$darwin_archive\"\n\t      cd \"unfat-$$/$darwin_base_archive-$darwin_arch\"\n\t      func_extract_an_archive \"`pwd`\" \"$darwin_base_archive\"\n\t      cd \"$darwin_curdir\"\n\t      $RM \"unfat-$$/$darwin_base_archive-$darwin_arch/$darwin_base_archive\"\n\t    done # $darwin_arches\n            ## Okay now we've a bunch of thin objects, gotta fatten them up :)\n\t    darwin_filelist=`find unfat-$$ -type f -name \\*.o -print -o -name \\*.lo -print | $SED -e \"$sed_basename\" | sort -u`\n\t    darwin_file=\n\t    darwin_files=\n\t    for darwin_file in $darwin_filelist; do\n\t      darwin_files=`find unfat-$$ -name $darwin_file -print | sort | $NL2SP`\n\t      $LIPO -create -output \"$darwin_file\" $darwin_files\n\t    done # $darwin_filelist\n\t    $RM -rf unfat-$$\n\t    cd \"$darwin_orig_dir\"\n\t  else\n\t    cd $darwin_orig_dir\n\t    func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t  fi # $darwin_arches\n\t} # !$opt_dry_run\n\t;;\n      *)\n        func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t;;\n      esac\n      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | sort | $NL2SP`\n    done\n\n    func_extract_archives_result=$my_oldobjs\n}\n\n\n# func_emit_wrapper [arg=no]\n#\n# Emit a libtool wrapper script on stdout.\n# Don't directly open a file because we may want to\n# incorporate the script contents within a cygwin/mingw\n# wrapper executable.  Must ONLY be called from within\n# func_mode_link because it depends on a number of variables\n# set therein.\n#\n# ARG is the value that the WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\n# variable will take.  If 'yes', then the emitted script\n# will assume that the directory where it is stored is\n# the $objdir directory.  This is a cygwin/mingw-specific\n# behavior.\nfunc_emit_wrapper ()\n{\n\tfunc_emit_wrapper_arg1=${1-no}\n\n\t$ECHO \"\\\n#! $SHELL\n\n# $output - temporary wrapper script for $objdir/$outputname\n# Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n#\n# The $output program cannot be directly executed until all the libtool\n# libraries that it depends on are installed.\n#\n# This wrapper script should never be moved out of the build directory.\n# If it is, it will not operate correctly.\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nsed_quote_subst='$sed_quote_subst'\n\n# Be Bourne compatible\nif test -n \\\"\\${ZSH_VERSION+set}\\\" && (emulate sh) >/dev/null 2>&1; then\n  emulate sh\n  NULLCMD=:\n  # Zsh 3.x and 4.x performs word splitting on \\${1+\\\"\\$@\\\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '\\${1+\\\"\\$@\\\"}'='\\\"\\$@\\\"'\n  setopt NO_GLOB_SUBST\nelse\n  case \\`(set -o) 2>/dev/null\\` in *posix*) set -o posix;; esac\nfi\nBIN_SH=xpg4; export BIN_SH # for Tru64\nDUALCASE=1; export DUALCASE # for MKS sh\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nrelink_command=\\\"$relink_command\\\"\n\n# This environment variable determines our operation mode.\nif test \\\"\\$libtool_install_magic\\\" = \\\"$magic\\\"; then\n  # install mode needs the following variables:\n  generated_by_libtool_version='$macro_version'\n  notinst_deplibs='$notinst_deplibs'\nelse\n  # When we are sourced in execute mode, \\$file and \\$ECHO are already set.\n  if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n    file=\\\"\\$0\\\"\"\n\n    qECHO=`$ECHO \"$ECHO\" | $SED \"$sed_quote_subst\"`\n    $ECHO \"\\\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$1\n_LTECHO_EOF'\n}\n    ECHO=\\\"$qECHO\\\"\n  fi\n\n# Very basic option parsing. These options are (a) specific to\n# the libtool wrapper, (b) are identical between the wrapper\n# /script/ and the wrapper /executable/ that is used only on\n# windows platforms, and (c) all begin with the string \"--lt-\"\n# (application programs are unlikely to have options that match\n# this pattern).\n#\n# There are only two supported options: --lt-debug and\n# --lt-dump-script. There is, deliberately, no --lt-help.\n#\n# The first argument to this parsing function should be the\n# script's $0 value, followed by \"$@\".\nlt_option_debug=\nfunc_parse_lt_options ()\n{\n  lt_script_arg0=\\$0\n  shift\n  for lt_opt\n  do\n    case \\\"\\$lt_opt\\\" in\n    --lt-debug) lt_option_debug=1 ;;\n    --lt-dump-script)\n        lt_dump_D=\\`\\$ECHO \\\"X\\$lt_script_arg0\\\" | $SED -e 's/^X//' -e 's%/[^/]*$%%'\\`\n        test \\\"X\\$lt_dump_D\\\" = \\\"X\\$lt_script_arg0\\\" && lt_dump_D=.\n        lt_dump_F=\\`\\$ECHO \\\"X\\$lt_script_arg0\\\" | $SED -e 's/^X//' -e 's%^.*/%%'\\`\n        cat \\\"\\$lt_dump_D/\\$lt_dump_F\\\"\n        exit 0\n      ;;\n    --lt-*)\n        \\$ECHO \\\"Unrecognized --lt- option: '\\$lt_opt'\\\" 1>&2\n        exit 1\n      ;;\n    esac\n  done\n\n  # Print the debug banner immediately:\n  if test -n \\\"\\$lt_option_debug\\\"; then\n    echo \\\"$outputname:$output:\\$LINENO: libtool wrapper (GNU $PACKAGE) $VERSION\\\" 1>&2\n  fi\n}\n\n# Used when --lt-debug. Prints its arguments to stdout\n# (redirection is the responsibility of the caller)\nfunc_lt_dump_args ()\n{\n  lt_dump_args_N=1;\n  for lt_arg\n  do\n    \\$ECHO \\\"$outputname:$output:\\$LINENO: newargv[\\$lt_dump_args_N]: \\$lt_arg\\\"\n    lt_dump_args_N=\\`expr \\$lt_dump_args_N + 1\\`\n  done\n}\n\n# Core function for launching the target application\nfunc_exec_program_core ()\n{\n\"\n  case $host in\n  # Backslashes separate directories on plain windows\n  *-*-mingw | *-*-os2* | *-cegcc*)\n    $ECHO \"\\\n      if test -n \\\"\\$lt_option_debug\\\"; then\n        \\$ECHO \\\"$outputname:$output:\\$LINENO: newargv[0]: \\$progdir\\\\\\\\\\$program\\\" 1>&2\n        func_lt_dump_args \\${1+\\\"\\$@\\\"} 1>&2\n      fi\n      exec \\\"\\$progdir\\\\\\\\\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n    ;;\n\n  *)\n    $ECHO \"\\\n      if test -n \\\"\\$lt_option_debug\\\"; then\n        \\$ECHO \\\"$outputname:$output:\\$LINENO: newargv[0]: \\$progdir/\\$program\\\" 1>&2\n        func_lt_dump_args \\${1+\\\"\\$@\\\"} 1>&2\n      fi\n      exec \\\"\\$progdir/\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n    ;;\n  esac\n  $ECHO \"\\\n      \\$ECHO \\\"\\$0: cannot exec \\$program \\$*\\\" 1>&2\n      exit 1\n}\n\n# A function to encapsulate launching the target application\n# Strips options in the --lt-* namespace from \\$@ and\n# launches target application with the remaining arguments.\nfunc_exec_program ()\n{\n  case \\\" \\$* \\\" in\n  *\\\\ --lt-*)\n    for lt_wr_arg\n    do\n      case \\$lt_wr_arg in\n      --lt-*) ;;\n      *) set x \\\"\\$@\\\" \\\"\\$lt_wr_arg\\\"; shift;;\n      esac\n      shift\n    done ;;\n  esac\n  func_exec_program_core \\${1+\\\"\\$@\\\"}\n}\n\n  # Parse options\n  func_parse_lt_options \\\"\\$0\\\" \\${1+\\\"\\$@\\\"}\n\n  # Find the directory that this script lives in.\n  thisdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*$%%'\\`\n  test \\\"x\\$thisdir\\\" = \\\"x\\$file\\\" && thisdir=.\n\n  # Follow symbolic links until we get to the real thisdir.\n  file=\\`ls -ld \\\"\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  while test -n \\\"\\$file\\\"; do\n    destdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*\\$%%'\\`\n\n    # If there was a directory component, then change thisdir.\n    if test \\\"x\\$destdir\\\" != \\\"x\\$file\\\"; then\n      case \\\"\\$destdir\\\" in\n      [\\\\\\\\/]* | [A-Za-z]:[\\\\\\\\/]*) thisdir=\\\"\\$destdir\\\" ;;\n      *) thisdir=\\\"\\$thisdir/\\$destdir\\\" ;;\n      esac\n    fi\n\n    file=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%^.*/%%'\\`\n    file=\\`ls -ld \\\"\\$thisdir/\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  done\n\n  # Usually 'no', except on cygwin/mingw when embedded into\n  # the cwrapper.\n  WRAPPER_SCRIPT_BELONGS_IN_OBJDIR=$func_emit_wrapper_arg1\n  if test \\\"\\$WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\\\" = \\\"yes\\\"; then\n    # special case for '.'\n    if test \\\"\\$thisdir\\\" = \\\".\\\"; then\n      thisdir=\\`pwd\\`\n    fi\n    # remove .libs from thisdir\n    case \\\"\\$thisdir\\\" in\n    *[\\\\\\\\/]$objdir ) thisdir=\\`\\$ECHO \\\"\\$thisdir\\\" | $SED 's%[\\\\\\\\/][^\\\\\\\\/]*$%%'\\` ;;\n    $objdir )   thisdir=. ;;\n    esac\n  fi\n\n  # Try to get the absolute directory name.\n  absdir=\\`cd \\\"\\$thisdir\\\" && pwd\\`\n  test -n \\\"\\$absdir\\\" && thisdir=\\\"\\$absdir\\\"\n\"\n\n\tif test yes = \"$fast_install\"; then\n\t  $ECHO \"\\\n  program=lt-'$outputname'$exeext\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\n  if test ! -f \\\"\\$progdir/\\$program\\\" ||\n     { file=\\`ls -1dt \\\"\\$progdir/\\$program\\\" \\\"\\$progdir/../\\$program\\\" 2>/dev/null | $SED 1q\\`; \\\\\n       test \\\"X\\$file\\\" != \\\"X\\$progdir/\\$program\\\"; }; then\n\n    file=\\\"\\$\\$-\\$program\\\"\n\n    if test ! -d \\\"\\$progdir\\\"; then\n      $MKDIR \\\"\\$progdir\\\"\n    else\n      $RM \\\"\\$progdir/\\$file\\\"\n    fi\"\n\n\t  $ECHO \"\\\n\n    # relink executable if necessary\n    if test -n \\\"\\$relink_command\\\"; then\n      if relink_command_output=\\`eval \\$relink_command 2>&1\\`; then :\n      else\n\t\\$ECHO \\\"\\$relink_command_output\\\" >&2\n\t$RM \\\"\\$progdir/\\$file\\\"\n\texit 1\n      fi\n    fi\n\n    $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\" 2>/dev/null ||\n    { $RM \\\"\\$progdir/\\$program\\\";\n      $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\"; }\n    $RM \\\"\\$progdir/\\$file\\\"\n  fi\"\n\telse\n\t  $ECHO \"\\\n  program='$outputname'\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\"\n\tfi\n\n\t$ECHO \"\\\n\n  if test -f \\\"\\$progdir/\\$program\\\"; then\"\n\n\t# fixup the dll searchpath if we need to.\n\t#\n\t# Fix the DLL searchpath if we need to.  Do this before prepending\n\t# to shlibpath, because on Windows, both are PATH and uninstalled\n\t# libraries must come first.\n\tif test -n \"$dllsearchpath\"; then\n\t  $ECHO \"\\\n    # Add the dll search path components to the executable PATH\n    PATH=$dllsearchpath:\\$PATH\n\"\n\tfi\n\n\t# Export our shlibpath_var if we have one.\n\tif test yes = \"$shlibpath_overrides_runpath\" && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n\t  $ECHO \"\\\n    # Add our own library path to $shlibpath_var\n    $shlibpath_var=\\\"$temp_rpath\\$$shlibpath_var\\\"\n\n    # Some systems cannot cope with colon-terminated $shlibpath_var\n    # The second colon is a workaround for a bug in BeOS R4 sed\n    $shlibpath_var=\\`\\$ECHO \\\"\\$$shlibpath_var\\\" | $SED 's/::*\\$//'\\`\n\n    export $shlibpath_var\n\"\n\tfi\n\n\t$ECHO \"\\\n    if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n      # Run the actual program with our arguments.\n      func_exec_program \\${1+\\\"\\$@\\\"}\n    fi\n  else\n    # The program doesn't exist.\n    \\$ECHO \\\"\\$0: error: '\\$progdir/\\$program' does not exist\\\" 1>&2\n    \\$ECHO \\\"This script is just a wrapper for \\$program.\\\" 1>&2\n    \\$ECHO \\\"See the $PACKAGE documentation for more information.\\\" 1>&2\n    exit 1\n  fi\nfi\\\n\"\n}\n\n\n# func_emit_cwrapperexe_src\n# emit the source code for a wrapper executable on stdout\n# Must ONLY be called from within func_mode_link because\n# it depends on a number of variable set therein.\nfunc_emit_cwrapperexe_src ()\n{\n\tcat <<EOF\n\n/* $cwrappersource - temporary wrapper executable for $objdir/$outputname\n   Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n\n   The $output program cannot be directly executed until all the libtool\n   libraries that it depends on are installed.\n\n   This wrapper executable should never be moved out of the build directory.\n   If it is, it will not operate correctly.\n*/\nEOF\n\t    cat <<\"EOF\"\n#ifdef _MSC_VER\n# define _CRT_SECURE_NO_DEPRECATE 1\n#endif\n#include <stdio.h>\n#include <stdlib.h>\n#ifdef _MSC_VER\n# include <direct.h>\n# include <process.h>\n# include <io.h>\n#else\n# include <unistd.h>\n# include <stdint.h>\n# ifdef __CYGWIN__\n#  include <io.h>\n# endif\n#endif\n#include <malloc.h>\n#include <stdarg.h>\n#include <assert.h>\n#include <string.h>\n#include <ctype.h>\n#include <errno.h>\n#include <fcntl.h>\n#include <sys/stat.h>\n\n#define STREQ(s1, s2) (strcmp ((s1), (s2)) == 0)\n\n/* declarations of non-ANSI functions */\n#if defined __MINGW32__\n# ifdef __STRICT_ANSI__\nint _putenv (const char *);\n# endif\n#elif defined __CYGWIN__\n# ifdef __STRICT_ANSI__\nchar *realpath (const char *, char *);\nint putenv (char *);\nint setenv (const char *, const char *, int);\n# endif\n/* #elif defined other_platform || defined ... */\n#endif\n\n/* portability defines, excluding path handling macros */\n#if defined _MSC_VER\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n# define S_IXUSR _S_IEXEC\n#elif defined __MINGW32__\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n#elif defined __CYGWIN__\n# define HAVE_SETENV\n# define FOPEN_WB \"wb\"\n/* #elif defined other platforms ... */\n#endif\n\n#if defined PATH_MAX\n# define LT_PATHMAX PATH_MAX\n#elif defined MAXPATHLEN\n# define LT_PATHMAX MAXPATHLEN\n#else\n# define LT_PATHMAX 1024\n#endif\n\n#ifndef S_IXOTH\n# define S_IXOTH 0\n#endif\n#ifndef S_IXGRP\n# define S_IXGRP 0\n#endif\n\n/* path handling portability macros */\n#ifndef DIR_SEPARATOR\n# define DIR_SEPARATOR '/'\n# define PATH_SEPARATOR ':'\n#endif\n\n#if defined _WIN32 || defined __MSDOS__ || defined __DJGPP__ || \\\n  defined __OS2__\n# define HAVE_DOS_BASED_FILE_SYSTEM\n# define FOPEN_WB \"wb\"\n# ifndef DIR_SEPARATOR_2\n#  define DIR_SEPARATOR_2 '\\\\'\n# endif\n# ifndef PATH_SEPARATOR_2\n#  define PATH_SEPARATOR_2 ';'\n# endif\n#endif\n\n#ifndef DIR_SEPARATOR_2\n# define IS_DIR_SEPARATOR(ch) ((ch) == DIR_SEPARATOR)\n#else /* DIR_SEPARATOR_2 */\n# define IS_DIR_SEPARATOR(ch) \\\n\t(((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))\n#endif /* DIR_SEPARATOR_2 */\n\n#ifndef PATH_SEPARATOR_2\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR)\n#else /* PATH_SEPARATOR_2 */\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR_2)\n#endif /* PATH_SEPARATOR_2 */\n\n#ifndef FOPEN_WB\n# define FOPEN_WB \"w\"\n#endif\n#ifndef _O_BINARY\n# define _O_BINARY 0\n#endif\n\n#define XMALLOC(type, num)      ((type *) xmalloc ((num) * sizeof(type)))\n#define XFREE(stale) do { \\\n  if (stale) { free (stale); stale = 0; } \\\n} while (0)\n\n#if defined LT_DEBUGWRAPPER\nstatic int lt_debug = 1;\n#else\nstatic int lt_debug = 0;\n#endif\n\nconst char *program_name = \"libtool-wrapper\"; /* in case xstrdup fails */\n\nvoid *xmalloc (size_t num);\nchar *xstrdup (const char *string);\nconst char *base_name (const char *name);\nchar *find_executable (const char *wrapper);\nchar *chase_symlinks (const char *pathspec);\nint make_executable (const char *path);\nint check_executable (const char *path);\nchar *strendzap (char *str, const char *pat);\nvoid lt_debugprintf (const char *file, int line, const char *fmt, ...);\nvoid lt_fatal (const char *file, int line, const char *message, ...);\nstatic const char *nonnull (const char *s);\nstatic const char *nonempty (const char *s);\nvoid lt_setenv (const char *name, const char *value);\nchar *lt_extend_str (const char *orig_value, const char *add, int to_end);\nvoid lt_update_exe_path (const char *name, const char *value);\nvoid lt_update_lib_path (const char *name, const char *value);\nchar **prepare_spawn (char **argv);\nvoid lt_dump_script (FILE *f);\nEOF\n\n\t    cat <<EOF\n#if __GNUC__ < 4 || (__GNUC__ == 4 && __GNUC_MINOR__ < 5)\n# define externally_visible volatile\n#else\n# define externally_visible __attribute__((externally_visible)) volatile\n#endif\nexternally_visible const char * MAGIC_EXE = \"$magic_exe\";\nconst char * LIB_PATH_VARNAME = \"$shlibpath_var\";\nEOF\n\n\t    if test yes = \"$shlibpath_overrides_runpath\" && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n              func_to_host_path \"$temp_rpath\"\n\t      cat <<EOF\nconst char * LIB_PATH_VALUE   = \"$func_to_host_path_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * LIB_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test -n \"$dllsearchpath\"; then\n              func_to_host_path \"$dllsearchpath:\"\n\t      cat <<EOF\nconst char * EXE_PATH_VARNAME = \"PATH\";\nconst char * EXE_PATH_VALUE   = \"$func_to_host_path_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * EXE_PATH_VARNAME = \"\";\nconst char * EXE_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test yes = \"$fast_install\"; then\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"lt-$outputname\"; /* hopefully, no .exe */\nEOF\n\t    else\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"$outputname\"; /* hopefully, no .exe */\nEOF\n\t    fi\n\n\n\t    cat <<\"EOF\"\n\n#define LTWRAPPER_OPTION_PREFIX         \"--lt-\"\n\nstatic const char *ltwrapper_option_prefix = LTWRAPPER_OPTION_PREFIX;\nstatic const char *dumpscript_opt       = LTWRAPPER_OPTION_PREFIX \"dump-script\";\nstatic const char *debug_opt            = LTWRAPPER_OPTION_PREFIX \"debug\";\n\nint\nmain (int argc, char *argv[])\n{\n  char **newargz;\n  int  newargc;\n  char *tmp_pathspec;\n  char *actual_cwrapper_path;\n  char *actual_cwrapper_name;\n  char *target_name;\n  char *lt_argv_zero;\n  int rval = 127;\n\n  int i;\n\n  program_name = (char *) xstrdup (base_name (argv[0]));\n  newargz = XMALLOC (char *, (size_t) argc + 1);\n\n  /* very simple arg parsing; don't want to rely on getopt\n   * also, copy all non cwrapper options to newargz, except\n   * argz[0], which is handled differently\n   */\n  newargc=0;\n  for (i = 1; i < argc; i++)\n    {\n      if (STREQ (argv[i], dumpscript_opt))\n\t{\nEOF\n\t    case $host in\n\t      *mingw* | *cygwin* )\n\t\t# make stdout use \"unix\" line endings\n\t\techo \"          setmode(1,_O_BINARY);\"\n\t\t;;\n\t      esac\n\n\t    cat <<\"EOF\"\n\t  lt_dump_script (stdout);\n\t  return 0;\n\t}\n      if (STREQ (argv[i], debug_opt))\n\t{\n          lt_debug = 1;\n          continue;\n\t}\n      if (STREQ (argv[i], ltwrapper_option_prefix))\n        {\n          /* however, if there is an option in the LTWRAPPER_OPTION_PREFIX\n             namespace, but it is not one of the ones we know about and\n             have already dealt with, above (inluding dump-script), then\n             report an error. Otherwise, targets might begin to believe\n             they are allowed to use options in the LTWRAPPER_OPTION_PREFIX\n             namespace. The first time any user complains about this, we'll\n             need to make LTWRAPPER_OPTION_PREFIX a configure-time option\n             or a configure.ac-settable value.\n           */\n          lt_fatal (__FILE__, __LINE__,\n\t\t    \"unrecognized %s option: '%s'\",\n                    ltwrapper_option_prefix, argv[i]);\n        }\n      /* otherwise ... */\n      newargz[++newargc] = xstrdup (argv[i]);\n    }\n  newargz[++newargc] = NULL;\n\nEOF\n\t    cat <<EOF\n  /* The GNU banner must be the first non-error debug message */\n  lt_debugprintf (__FILE__, __LINE__, \"libtool wrapper (GNU $PACKAGE) $VERSION\\n\");\nEOF\n\t    cat <<\"EOF\"\n  lt_debugprintf (__FILE__, __LINE__, \"(main) argv[0]: %s\\n\", argv[0]);\n  lt_debugprintf (__FILE__, __LINE__, \"(main) program_name: %s\\n\", program_name);\n\n  tmp_pathspec = find_executable (argv[0]);\n  if (tmp_pathspec == NULL)\n    lt_fatal (__FILE__, __LINE__, \"couldn't find %s\", argv[0]);\n  lt_debugprintf (__FILE__, __LINE__,\n                  \"(main) found exe (before symlink chase) at: %s\\n\",\n\t\t  tmp_pathspec);\n\n  actual_cwrapper_path = chase_symlinks (tmp_pathspec);\n  lt_debugprintf (__FILE__, __LINE__,\n                  \"(main) found exe (after symlink chase) at: %s\\n\",\n\t\t  actual_cwrapper_path);\n  XFREE (tmp_pathspec);\n\n  actual_cwrapper_name = xstrdup (base_name (actual_cwrapper_path));\n  strendzap (actual_cwrapper_path, actual_cwrapper_name);\n\n  /* wrapper name transforms */\n  strendzap (actual_cwrapper_name, \".exe\");\n  tmp_pathspec = lt_extend_str (actual_cwrapper_name, \".exe\", 1);\n  XFREE (actual_cwrapper_name);\n  actual_cwrapper_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  /* target_name transforms -- use actual target program name; might have lt- prefix */\n  target_name = xstrdup (base_name (TARGET_PROGRAM_NAME));\n  strendzap (target_name, \".exe\");\n  tmp_pathspec = lt_extend_str (target_name, \".exe\", 1);\n  XFREE (target_name);\n  target_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(main) libtool target name: %s\\n\",\n\t\t  target_name);\nEOF\n\n\t    cat <<EOF\n  newargz[0] =\n    XMALLOC (char, (strlen (actual_cwrapper_path) +\n\t\t    strlen (\"$objdir\") + 1 + strlen (actual_cwrapper_name) + 1));\n  strcpy (newargz[0], actual_cwrapper_path);\n  strcat (newargz[0], \"$objdir\");\n  strcat (newargz[0], \"/\");\nEOF\n\n\t    cat <<\"EOF\"\n  /* stop here, and copy so we don't have to do this twice */\n  tmp_pathspec = xstrdup (newargz[0]);\n\n  /* do NOT want the lt- prefix here, so use actual_cwrapper_name */\n  strcat (newargz[0], actual_cwrapper_name);\n\n  /* DO want the lt- prefix here if it exists, so use target_name */\n  lt_argv_zero = lt_extend_str (tmp_pathspec, target_name, 1);\n  XFREE (tmp_pathspec);\n  tmp_pathspec = NULL;\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t    cat <<\"EOF\"\n  {\n    char* p;\n    while ((p = strchr (newargz[0], '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n    while ((p = strchr (lt_argv_zero, '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n  }\nEOF\n\t    ;;\n\t    esac\n\n\t    cat <<\"EOF\"\n  XFREE (target_name);\n  XFREE (actual_cwrapper_path);\n  XFREE (actual_cwrapper_name);\n\n  lt_setenv (\"BIN_SH\", \"xpg4\"); /* for Tru64 */\n  lt_setenv (\"DUALCASE\", \"1\");  /* for MSK sh */\n  /* Update the DLL searchpath.  EXE_PATH_VALUE ($dllsearchpath) must\n     be prepended before (that is, appear after) LIB_PATH_VALUE ($temp_rpath)\n     because on Windows, both *_VARNAMEs are PATH but uninstalled\n     libraries must come first. */\n  lt_update_exe_path (EXE_PATH_VARNAME, EXE_PATH_VALUE);\n  lt_update_lib_path (LIB_PATH_VARNAME, LIB_PATH_VALUE);\n\n  lt_debugprintf (__FILE__, __LINE__, \"(main) lt_argv_zero: %s\\n\",\n\t\t  nonnull (lt_argv_zero));\n  for (i = 0; i < newargc; i++)\n    {\n      lt_debugprintf (__FILE__, __LINE__, \"(main) newargz[%d]: %s\\n\",\n\t\t      i, nonnull (newargz[i]));\n    }\n\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n  /* execv doesn't actually work on mingw as expected on unix */\n  newargz = prepare_spawn (newargz);\n  rval = (int) _spawnv (_P_WAIT, lt_argv_zero, (const char * const *) newargz);\n  if (rval == -1)\n    {\n      /* failed to start process */\n      lt_debugprintf (__FILE__, __LINE__,\n\t\t      \"(main) failed to launch target \\\"%s\\\": %s\\n\",\n\t\t      lt_argv_zero, nonnull (strerror (errno)));\n      return 127;\n    }\n  return rval;\nEOF\n\t\t;;\n\t      *)\n\t\tcat <<\"EOF\"\n  execv (lt_argv_zero, newargz);\n  return rval; /* =127, but avoids unused variable warning */\nEOF\n\t\t;;\n\t    esac\n\n\t    cat <<\"EOF\"\n}\n\nvoid *\nxmalloc (size_t num)\n{\n  void *p = (void *) malloc (num);\n  if (!p)\n    lt_fatal (__FILE__, __LINE__, \"memory exhausted\");\n\n  return p;\n}\n\nchar *\nxstrdup (const char *string)\n{\n  return string ? strcpy ((char *) xmalloc (strlen (string) + 1),\n\t\t\t  string) : NULL;\n}\n\nconst char *\nbase_name (const char *name)\n{\n  const char *base;\n\n#if defined HAVE_DOS_BASED_FILE_SYSTEM\n  /* Skip over the disk name in MSDOS pathnames. */\n  if (isalpha ((unsigned char) name[0]) && name[1] == ':')\n    name += 2;\n#endif\n\n  for (base = name; *name; name++)\n    if (IS_DIR_SEPARATOR (*name))\n      base = name + 1;\n  return base;\n}\n\nint\ncheck_executable (const char *path)\n{\n  struct stat st;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(check_executable): %s\\n\",\n                  nonempty (path));\n  if ((!path) || (!*path))\n    return 0;\n\n  if ((stat (path, &st) >= 0)\n      && (st.st_mode & (S_IXUSR | S_IXGRP | S_IXOTH)))\n    return 1;\n  else\n    return 0;\n}\n\nint\nmake_executable (const char *path)\n{\n  int rval = 0;\n  struct stat st;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(make_executable): %s\\n\",\n                  nonempty (path));\n  if ((!path) || (!*path))\n    return 0;\n\n  if (stat (path, &st) >= 0)\n    {\n      rval = chmod (path, st.st_mode | S_IXOTH | S_IXGRP | S_IXUSR);\n    }\n  return rval;\n}\n\n/* Searches for the full path of the wrapper.  Returns\n   newly allocated full path name if found, NULL otherwise\n   Does not chase symlinks, even on platforms that support them.\n*/\nchar *\nfind_executable (const char *wrapper)\n{\n  int has_slash = 0;\n  const char *p;\n  const char *p_next;\n  /* static buffer for getcwd */\n  char tmp[LT_PATHMAX + 1];\n  size_t tmp_len;\n  char *concat_name;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(find_executable): %s\\n\",\n                  nonempty (wrapper));\n\n  if ((wrapper == NULL) || (*wrapper == '\\0'))\n    return NULL;\n\n  /* Absolute path? */\n#if defined HAVE_DOS_BASED_FILE_SYSTEM\n  if (isalpha ((unsigned char) wrapper[0]) && wrapper[1] == ':')\n    {\n      concat_name = xstrdup (wrapper);\n      if (check_executable (concat_name))\n\treturn concat_name;\n      XFREE (concat_name);\n    }\n  else\n    {\n#endif\n      if (IS_DIR_SEPARATOR (wrapper[0]))\n\t{\n\t  concat_name = xstrdup (wrapper);\n\t  if (check_executable (concat_name))\n\t    return concat_name;\n\t  XFREE (concat_name);\n\t}\n#if defined HAVE_DOS_BASED_FILE_SYSTEM\n    }\n#endif\n\n  for (p = wrapper; *p; p++)\n    if (*p == '/')\n      {\n\thas_slash = 1;\n\tbreak;\n      }\n  if (!has_slash)\n    {\n      /* no slashes; search PATH */\n      const char *path = getenv (\"PATH\");\n      if (path != NULL)\n\t{\n\t  for (p = path; *p; p = p_next)\n\t    {\n\t      const char *q;\n\t      size_t p_len;\n\t      for (q = p; *q; q++)\n\t\tif (IS_PATH_SEPARATOR (*q))\n\t\t  break;\n\t      p_len = (size_t) (q - p);\n\t      p_next = (*q == '\\0' ? q : q + 1);\n\t      if (p_len == 0)\n\t\t{\n\t\t  /* empty path: current directory */\n\t\t  if (getcwd (tmp, LT_PATHMAX) == NULL)\n\t\t    lt_fatal (__FILE__, __LINE__, \"getcwd failed: %s\",\n                              nonnull (strerror (errno)));\n\t\t  tmp_len = strlen (tmp);\n\t\t  concat_name =\n\t\t    XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, tmp, tmp_len);\n\t\t  concat_name[tmp_len] = '/';\n\t\t  strcpy (concat_name + tmp_len + 1, wrapper);\n\t\t}\n\t      else\n\t\t{\n\t\t  concat_name =\n\t\t    XMALLOC (char, p_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, p, p_len);\n\t\t  concat_name[p_len] = '/';\n\t\t  strcpy (concat_name + p_len + 1, wrapper);\n\t\t}\n\t      if (check_executable (concat_name))\n\t\treturn concat_name;\n\t      XFREE (concat_name);\n\t    }\n\t}\n      /* not found in PATH; assume curdir */\n    }\n  /* Relative path | not found in path: prepend cwd */\n  if (getcwd (tmp, LT_PATHMAX) == NULL)\n    lt_fatal (__FILE__, __LINE__, \"getcwd failed: %s\",\n              nonnull (strerror (errno)));\n  tmp_len = strlen (tmp);\n  concat_name = XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n  memcpy (concat_name, tmp, tmp_len);\n  concat_name[tmp_len] = '/';\n  strcpy (concat_name + tmp_len + 1, wrapper);\n\n  if (check_executable (concat_name))\n    return concat_name;\n  XFREE (concat_name);\n  return NULL;\n}\n\nchar *\nchase_symlinks (const char *pathspec)\n{\n#ifndef S_ISLNK\n  return xstrdup (pathspec);\n#else\n  char buf[LT_PATHMAX];\n  struct stat s;\n  char *tmp_pathspec = xstrdup (pathspec);\n  char *p;\n  int has_symlinks = 0;\n  while (strlen (tmp_pathspec) && !has_symlinks)\n    {\n      lt_debugprintf (__FILE__, __LINE__,\n\t\t      \"checking path component for symlinks: %s\\n\",\n\t\t      tmp_pathspec);\n      if (lstat (tmp_pathspec, &s) == 0)\n\t{\n\t  if (S_ISLNK (s.st_mode) != 0)\n\t    {\n\t      has_symlinks = 1;\n\t      break;\n\t    }\n\n\t  /* search backwards for last DIR_SEPARATOR */\n\t  p = tmp_pathspec + strlen (tmp_pathspec) - 1;\n\t  while ((p > tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    p--;\n\t  if ((p == tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    {\n\t      /* no more DIR_SEPARATORS left */\n\t      break;\n\t    }\n\t  *p = '\\0';\n\t}\n      else\n\t{\n\t  lt_fatal (__FILE__, __LINE__,\n\t\t    \"error accessing file \\\"%s\\\": %s\",\n\t\t    tmp_pathspec, nonnull (strerror (errno)));\n\t}\n    }\n  XFREE (tmp_pathspec);\n\n  if (!has_symlinks)\n    {\n      return xstrdup (pathspec);\n    }\n\n  tmp_pathspec = realpath (pathspec, buf);\n  if (tmp_pathspec == 0)\n    {\n      lt_fatal (__FILE__, __LINE__,\n\t\t\"could not follow symlinks for %s\", pathspec);\n    }\n  return xstrdup (tmp_pathspec);\n#endif\n}\n\nchar *\nstrendzap (char *str, const char *pat)\n{\n  size_t len, patlen;\n\n  assert (str != NULL);\n  assert (pat != NULL);\n\n  len = strlen (str);\n  patlen = strlen (pat);\n\n  if (patlen <= len)\n    {\n      str += len - patlen;\n      if (STREQ (str, pat))\n\t*str = '\\0';\n    }\n  return str;\n}\n\nvoid\nlt_debugprintf (const char *file, int line, const char *fmt, ...)\n{\n  va_list args;\n  if (lt_debug)\n    {\n      (void) fprintf (stderr, \"%s:%s:%d: \", program_name, file, line);\n      va_start (args, fmt);\n      (void) vfprintf (stderr, fmt, args);\n      va_end (args);\n    }\n}\n\nstatic void\nlt_error_core (int exit_status, const char *file,\n\t       int line, const char *mode,\n\t       const char *message, va_list ap)\n{\n  fprintf (stderr, \"%s:%s:%d: %s: \", program_name, file, line, mode);\n  vfprintf (stderr, message, ap);\n  fprintf (stderr, \".\\n\");\n\n  if (exit_status >= 0)\n    exit (exit_status);\n}\n\nvoid\nlt_fatal (const char *file, int line, const char *message, ...)\n{\n  va_list ap;\n  va_start (ap, message);\n  lt_error_core (EXIT_FAILURE, file, line, \"FATAL\", message, ap);\n  va_end (ap);\n}\n\nstatic const char *\nnonnull (const char *s)\n{\n  return s ? s : \"(null)\";\n}\n\nstatic const char *\nnonempty (const char *s)\n{\n  return (s && !*s) ? \"(empty)\" : nonnull (s);\n}\n\nvoid\nlt_setenv (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_setenv) setting '%s' to '%s'\\n\",\n                  nonnull (name), nonnull (value));\n  {\n#ifdef HAVE_SETENV\n    /* always make a copy, for consistency with !HAVE_SETENV */\n    char *str = xstrdup (value);\n    setenv (name, str, 1);\n#else\n    size_t len = strlen (name) + 1 + strlen (value) + 1;\n    char *str = XMALLOC (char, len);\n    sprintf (str, \"%s=%s\", name, value);\n    if (putenv (str) != EXIT_SUCCESS)\n      {\n        XFREE (str);\n      }\n#endif\n  }\n}\n\nchar *\nlt_extend_str (const char *orig_value, const char *add, int to_end)\n{\n  char *new_value;\n  if (orig_value && *orig_value)\n    {\n      size_t orig_value_len = strlen (orig_value);\n      size_t add_len = strlen (add);\n      new_value = XMALLOC (char, add_len + orig_value_len + 1);\n      if (to_end)\n        {\n          strcpy (new_value, orig_value);\n          strcpy (new_value + orig_value_len, add);\n        }\n      else\n        {\n          strcpy (new_value, add);\n          strcpy (new_value + add_len, orig_value);\n        }\n    }\n  else\n    {\n      new_value = xstrdup (add);\n    }\n  return new_value;\n}\n\nvoid\nlt_update_exe_path (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_update_exe_path) modifying '%s' by prepending '%s'\\n\",\n                  nonnull (name), nonnull (value));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      /* some systems can't cope with a ':'-terminated path #' */\n      size_t len = strlen (new_value);\n      while ((len > 0) && IS_PATH_SEPARATOR (new_value[len-1]))\n        {\n          new_value[--len] = '\\0';\n        }\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nvoid\nlt_update_lib_path (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_update_lib_path) modifying '%s' by prepending '%s'\\n\",\n                  nonnull (name), nonnull (value));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nEOF\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n\n/* Prepares an argument vector before calling spawn().\n   Note that spawn() does not by itself call the command interpreter\n     (getenv (\"COMSPEC\") != NULL ? getenv (\"COMSPEC\") :\n      ({ OSVERSIONINFO v; v.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);\n         GetVersionEx(&v);\n         v.dwPlatformId == VER_PLATFORM_WIN32_NT;\n      }) ? \"cmd.exe\" : \"command.com\").\n   Instead it simply concatenates the arguments, separated by ' ', and calls\n   CreateProcess().  We must quote the arguments since Win32 CreateProcess()\n   interprets characters like ' ', '\\t', '\\\\', '\"' (but not '<' and '>') in a\n   special way:\n   - Space and tab are interpreted as delimiters. They are not treated as\n     delimiters if they are surrounded by double quotes: \"...\".\n   - Unescaped double quotes are removed from the input. Their only effect is\n     that within double quotes, space and tab are treated like normal\n     characters.\n   - Backslashes not followed by double quotes are not special.\n   - But 2*n+1 backslashes followed by a double quote become\n     n backslashes followed by a double quote (n >= 0):\n       \\\" -> \"\n       \\\\\\\" -> \\\"\n       \\\\\\\\\\\" -> \\\\\"\n */\n#define SHELL_SPECIAL_CHARS \"\\\"\\\\ \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\n#define SHELL_SPACE_CHARS \" \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\nchar **\nprepare_spawn (char **argv)\n{\n  size_t argc;\n  char **new_argv;\n  size_t i;\n\n  /* Count number of arguments.  */\n  for (argc = 0; argv[argc] != NULL; argc++)\n    ;\n\n  /* Allocate new argument vector.  */\n  new_argv = XMALLOC (char *, argc + 1);\n\n  /* Put quoted arguments into the new argument vector.  */\n  for (i = 0; i < argc; i++)\n    {\n      const char *string = argv[i];\n\n      if (string[0] == '\\0')\n\tnew_argv[i] = xstrdup (\"\\\"\\\"\");\n      else if (strpbrk (string, SHELL_SPECIAL_CHARS) != NULL)\n\t{\n\t  int quote_around = (strpbrk (string, SHELL_SPACE_CHARS) != NULL);\n\t  size_t length;\n\t  unsigned int backslashes;\n\t  const char *s;\n\t  char *quoted_string;\n\t  char *p;\n\n\t  length = 0;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    length++;\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\tlength += backslashes + 1;\n\t      length++;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    length += backslashes + 1;\n\n\t  quoted_string = XMALLOC (char, length + 1);\n\n\t  p = quoted_string;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    *p++ = '\"';\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\t{\n\t\t  unsigned int j;\n\t\t  for (j = backslashes + 1; j > 0; j--)\n\t\t    *p++ = '\\\\';\n\t\t}\n\t      *p++ = c;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    {\n\t      unsigned int j;\n\t      for (j = backslashes; j > 0; j--)\n\t\t*p++ = '\\\\';\n\t      *p++ = '\"';\n\t    }\n\t  *p = '\\0';\n\n\t  new_argv[i] = quoted_string;\n\t}\n      else\n\tnew_argv[i] = (char *) string;\n    }\n  new_argv[argc] = NULL;\n\n  return new_argv;\n}\nEOF\n\t\t;;\n\t    esac\n\n            cat <<\"EOF\"\nvoid lt_dump_script (FILE* f)\n{\nEOF\n\t    func_emit_wrapper yes |\n\t      $SED -n -e '\ns/^\\(.\\{79\\}\\)\\(..*\\)/\\1\\\n\\2/\nh\ns/\\([\\\\\"]\\)/\\\\\\1/g\ns/$/\\\\n/\ns/\\([^\\n]*\\).*/  fputs (\"\\1\", f);/p\ng\nD'\n            cat <<\"EOF\"\n}\nEOF\n}\n# end: func_emit_cwrapperexe_src\n\n# func_win32_import_lib_p ARG\n# True if ARG is an import lib, as indicated by $file_magic_cmd\nfunc_win32_import_lib_p ()\n{\n    $debug_cmd\n\n    case `eval $file_magic_cmd \\\"\\$1\\\" 2>/dev/null | $SED -e 10q` in\n    *import*) : ;;\n    *) false ;;\n    esac\n}\n\n# func_suncc_cstd_abi\n# !!ONLY CALL THIS FOR SUN CC AFTER $compile_command IS FULLY EXPANDED!!\n# Several compiler flags select an ABI that is incompatible with the\n# Cstd library. Avoid specifying it if any are in CXXFLAGS.\nfunc_suncc_cstd_abi ()\n{\n    $debug_cmd\n\n    case \" $compile_command \" in\n    *\" -compat=g \"*|*\\ -std=c++[0-9][0-9]\\ *|*\" -library=stdcxx4 \"*|*\" -library=stlport4 \"*)\n      suncc_use_cstd_abi=no\n      ;;\n    *)\n      suncc_use_cstd_abi=yes\n      ;;\n    esac\n}\n\n# func_mode_link arg...\nfunc_mode_link ()\n{\n    $debug_cmd\n\n    case $host in\n    *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n      # It is impossible to link a dll without this setting, and\n      # we shouldn't force the makefile maintainer to figure out\n      # what system we are compiling for in order to pass an extra\n      # flag for every libtool invocation.\n      # allow_undefined=no\n\n      # FIXME: Unfortunately, there are problems with the above when trying\n      # to make a dll that has undefined symbols, in which case not\n      # even a static library is built.  For now, we need to specify\n      # -no-undefined on the libtool link line when we can be certain\n      # that all symbols are satisfied, otherwise we get a static library.\n      allow_undefined=yes\n      ;;\n    *)\n      allow_undefined=yes\n      ;;\n    esac\n    libtool_args=$nonopt\n    base_compile=\"$nonopt $@\"\n    compile_command=$nonopt\n    finalize_command=$nonopt\n\n    compile_rpath=\n    finalize_rpath=\n    compile_shlibpath=\n    finalize_shlibpath=\n    convenience=\n    old_convenience=\n    deplibs=\n    old_deplibs=\n    compiler_flags=\n    linker_flags=\n    dllsearchpath=\n    lib_search_path=`pwd`\n    inst_prefix_dir=\n    new_inherited_linker_flags=\n\n    avoid_version=no\n    bindir=\n    dlfiles=\n    dlprefiles=\n    dlself=no\n    export_dynamic=no\n    export_symbols=\n    export_symbols_regex=\n    generated=\n    libobjs=\n    ltlibs=\n    module=no\n    no_install=no\n    objs=\n    os2dllname=\n    non_pic_objects=\n    precious_files_regex=\n    prefer_static_libs=no\n    preload=false\n    prev=\n    prevarg=\n    release=\n    rpath=\n    xrpath=\n    perm_rpath=\n    temp_rpath=\n    thread_safe=no\n    vinfo=\n    vinfo_number=no\n    weak_libs=\n    single_module=$wl-single_module\n    func_infer_tag $base_compile\n\n    # We need to know -static, to get the right output filenames.\n    for arg\n    do\n      case $arg in\n      -shared)\n\ttest yes != \"$build_libtool_libs\" \\\n\t  && func_fatal_configuration \"cannot build a shared library\"\n\tbuild_old_libs=no\n\tbreak\n\t;;\n      -all-static | -static | -static-libtool-libs)\n\tcase $arg in\n\t-all-static)\n\t  if test yes = \"$build_libtool_libs\" && test -z \"$link_static_flag\"; then\n\t    func_warning \"complete static linking is impossible in this configuration\"\n\t  fi\n\t  if test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\t-static)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=built\n\t  ;;\n\t-static-libtool-libs)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\tesac\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tbreak\n\t;;\n      esac\n    done\n\n    # See if our shared archives depend on static archives.\n    test -n \"$old_archive_from_new_cmds\" && build_old_libs=yes\n\n    # Go through the arguments, transforming them on the way.\n    while test \"$#\" -gt 0; do\n      arg=$1\n      shift\n      func_quote_for_eval \"$arg\"\n      qarg=$func_quote_for_eval_unquoted_result\n      func_append libtool_args \" $func_quote_for_eval_result\"\n\n      # If the previous option needs an argument, assign it.\n      if test -n \"$prev\"; then\n\tcase $prev in\n\toutput)\n\t  func_append compile_command \" @OUTPUT@\"\n\t  func_append finalize_command \" @OUTPUT@\"\n\t  ;;\n\tesac\n\n\tcase $prev in\n\tbindir)\n\t  bindir=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tdlfiles|dlprefiles)\n\t  $preload || {\n\t    # Add the symbol object into the linking commands.\n\t    func_append compile_command \" @SYMFILE@\"\n\t    func_append finalize_command \" @SYMFILE@\"\n\t    preload=:\n\t  }\n\t  case $arg in\n\t  *.la | *.lo) ;;  # We handle these cases below.\n\t  force)\n\t    if test no = \"$dlself\"; then\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  self)\n\t    if test dlprefiles = \"$prev\"; then\n\t      dlself=yes\n\t    elif test dlfiles = \"$prev\" && test yes != \"$dlopen_self\"; then\n\t      dlself=yes\n\t    else\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  *)\n\t    if test dlfiles = \"$prev\"; then\n\t      func_append dlfiles \" $arg\"\n\t    else\n\t      func_append dlprefiles \" $arg\"\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  esac\n\t  ;;\n\texpsyms)\n\t  export_symbols=$arg\n\t  test -f \"$arg\" \\\n\t    || func_fatal_error \"symbol file '$arg' does not exist\"\n\t  prev=\n\t  continue\n\t  ;;\n\texpsyms_regex)\n\t  export_symbols_regex=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tframework)\n\t  case $host in\n\t    *-*-darwin*)\n\t      case \"$deplibs \" in\n\t\t*\" $qarg.ltframework \"*) ;;\n\t\t*) func_append deplibs \" $qarg.ltframework\" # this is fixed later\n\t\t   ;;\n\t      esac\n\t      ;;\n\t  esac\n\t  prev=\n\t  continue\n\t  ;;\n\tinst_prefix)\n\t  inst_prefix_dir=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tmllvm)\n\t  # Clang does not use LLVM to link, so we can simply discard any\n\t  # '-mllvm $arg' options when doing the link step.\n\t  prev=\n\t  continue\n\t  ;;\n\tobjectlist)\n\t  if test -f \"$arg\"; then\n\t    save_arg=$arg\n\t    moreargs=\n\t    for fil in `cat \"$save_arg\"`\n\t    do\n#\t      func_append moreargs \" $fil\"\n\t      arg=$fil\n\t      # A libtool-controlled object.\n\n\t      # Check to see that this really is a libtool object.\n\t      if func_lalib_unsafe_p \"$arg\"; then\n\t\tpic_object=\n\t\tnon_pic_object=\n\n\t\t# Read the .lo file\n\t\tfunc_source \"$arg\"\n\n\t\tif test -z \"$pic_object\" ||\n\t\t   test -z \"$non_pic_object\" ||\n\t\t   test none = \"$pic_object\" &&\n\t\t   test none = \"$non_pic_object\"; then\n\t\t  func_fatal_error \"cannot find name of object for '$arg'\"\n\t\tfi\n\n\t\t# Extract subdirectory from the argument.\n\t\tfunc_dirname \"$arg\" \"/\" \"\"\n\t\txdir=$func_dirname_result\n\n\t\tif test none != \"$pic_object\"; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  pic_object=$xdir$pic_object\n\n\t\t  if test dlfiles = \"$prev\"; then\n\t\t    if test yes = \"$build_libtool_libs\" && test yes = \"$dlopen_support\"; then\n\t\t      func_append dlfiles \" $pic_object\"\n\t\t      prev=\n\t\t      continue\n\t\t    else\n\t\t      # If libtool objects are unsupported, then we need to preload.\n\t\t      prev=dlprefiles\n\t\t    fi\n\t\t  fi\n\n\t\t  # CHECK ME:  I think I busted this.  -Ossama\n\t\t  if test dlprefiles = \"$prev\"; then\n\t\t    # Preload the old-style object.\n\t\t    func_append dlprefiles \" $pic_object\"\n\t\t    prev=\n\t\t  fi\n\n\t\t  # A PIC object.\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  arg=$pic_object\n\t\tfi\n\n\t\t# Non-PIC object.\n\t\tif test none != \"$non_pic_object\"; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  non_pic_object=$xdir$non_pic_object\n\n\t\t  # A standard non-PIC object\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\t  if test -z \"$pic_object\" || test none = \"$pic_object\"; then\n\t\t    arg=$non_pic_object\n\t\t  fi\n\t\telse\n\t\t  # If the PIC object exists, use it instead.\n\t\t  # $xdir was prepended to $pic_object above.\n\t\t  non_pic_object=$pic_object\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\tfi\n\t      else\n\t\t# Only an error if not doing a dry-run.\n\t\tif $opt_dry_run; then\n\t\t  # Extract subdirectory from the argument.\n\t\t  func_dirname \"$arg\" \"/\" \"\"\n\t\t  xdir=$func_dirname_result\n\n\t\t  func_lo2o \"$arg\"\n\t\t  pic_object=$xdir$objdir/$func_lo2o_result\n\t\t  non_pic_object=$xdir$func_lo2o_result\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t        else\n\t\t  func_fatal_error \"'$arg' is not a valid libtool object\"\n\t\tfi\n\t      fi\n\t    done\n\t  else\n\t    func_fatal_error \"link input file '$arg' does not exist\"\n\t  fi\n\t  arg=$save_arg\n\t  prev=\n\t  continue\n\t  ;;\n\tos2dllname)\n\t  os2dllname=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tprecious_regex)\n\t  precious_files_regex=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\trelease)\n\t  release=-$arg\n\t  prev=\n\t  continue\n\t  ;;\n\trpath | xrpath)\n\t  # We need an absolute path.\n\t  case $arg in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t  *)\n\t    func_fatal_error \"only absolute run-paths are allowed\"\n\t    ;;\n\t  esac\n\t  if test rpath = \"$prev\"; then\n\t    case \"$rpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) func_append rpath \" $arg\" ;;\n\t    esac\n\t  else\n\t    case \"$xrpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) func_append xrpath \" $arg\" ;;\n\t    esac\n\t  fi\n\t  prev=\n\t  continue\n\t  ;;\n\tshrext)\n\t  shrext_cmds=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tweak)\n\t  func_append weak_libs \" $arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\txcclinker)\n\t  func_append linker_flags \" $qarg\"\n\t  func_append compiler_flags \" $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txcompiler)\n\t  func_append compiler_flags \" $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txlinker)\n\t  func_append linker_flags \" $qarg\"\n\t  func_append compiler_flags \" $wl$qarg\"\n\t  prev=\n\t  func_append compile_command \" $wl$qarg\"\n\t  func_append finalize_command \" $wl$qarg\"\n\t  continue\n\t  ;;\n\t*)\n\t  eval \"$prev=\\\"\\$arg\\\"\"\n\t  prev=\n\t  continue\n\t  ;;\n\tesac\n      fi # test -n \"$prev\"\n\n      prevarg=$arg\n\n      case $arg in\n      -all-static)\n\tif test -n \"$link_static_flag\"; then\n\t  # See comment for -static flag below, for more details.\n\t  func_append compile_command \" $link_static_flag\"\n\t  func_append finalize_command \" $link_static_flag\"\n\tfi\n\tcontinue\n\t;;\n\n      -allow-undefined)\n\t# FIXME: remove this flag sometime in the future.\n\tfunc_fatal_error \"'-allow-undefined' must not be used because it is the default\"\n\t;;\n\n      -avoid-version)\n\tavoid_version=yes\n\tcontinue\n\t;;\n\n      -bindir)\n\tprev=bindir\n\tcontinue\n\t;;\n\n      -dlopen)\n\tprev=dlfiles\n\tcontinue\n\t;;\n\n      -dlpreopen)\n\tprev=dlprefiles\n\tcontinue\n\t;;\n\n      -export-dynamic)\n\texport_dynamic=yes\n\tcontinue\n\t;;\n\n      -export-symbols | -export-symbols-regex)\n\tif test -n \"$export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t  func_fatal_error \"more than one -exported-symbols argument is not allowed\"\n\tfi\n\tif test X-export-symbols = \"X$arg\"; then\n\t  prev=expsyms\n\telse\n\t  prev=expsyms_regex\n\tfi\n\tcontinue\n\t;;\n\n      -framework)\n\tprev=framework\n\tcontinue\n\t;;\n\n      -inst-prefix-dir)\n\tprev=inst_prefix\n\tcontinue\n\t;;\n\n      # The native IRIX linker understands -LANG:*, -LIST:* and -LNO:*\n      # so, if we see these flags be careful not to treat them like -L\n      -L[A-Z][A-Z]*:*)\n\tcase $with_gcc/$host in\n\tno/*-*-irix* | /*-*-irix*)\n\t  func_append compile_command \" $arg\"\n\t  func_append finalize_command \" $arg\"\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -L*)\n\tfunc_stripname \"-L\" '' \"$arg\"\n\tif test -z \"$func_stripname_result\"; then\n\t  if test \"$#\" -gt 0; then\n\t    func_fatal_error \"require no space between '-L' and '$1'\"\n\t  else\n\t    func_fatal_error \"need path for '-L' option\"\n\t  fi\n\tfi\n\tfunc_resolve_sysroot \"$func_stripname_result\"\n\tdir=$func_resolve_sysroot_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  absdir=`cd \"$dir\" && pwd`\n\t  test -z \"$absdir\" && \\\n\t    func_fatal_error \"cannot determine absolute directory name of '$dir'\"\n\t  dir=$absdir\n\t  ;;\n\tesac\n\tcase \"$deplibs \" in\n\t*\" -L$dir \"* | *\" $arg \"*)\n\t  # Will only happen for absolute or sysroot arguments\n\t  ;;\n\t*)\n\t  # Preserve sysroot, but never include relative directories\n\t  case $dir in\n\t    [\\\\/]* | [A-Za-z]:[\\\\/]* | =*) func_append deplibs \" $arg\" ;;\n\t    *) func_append deplibs \" -L$dir\" ;;\n\t  esac\n\t  func_append lib_search_path \" $dir\"\n\t  ;;\n\tesac\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`$ECHO \"$dir\" | $SED 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$dir:\"*) ;;\n\t  ::) dllsearchpath=$dir;;\n\t  *) func_append dllsearchpath \":$dir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) func_append dllsearchpath \":$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -l*)\n\tif test X-lc = \"X$arg\" || test X-lm = \"X$arg\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # These systems don't actually have a C or math library (as such)\n\t    continue\n\t    ;;\n\t  *-*-os2*)\n\t    # These systems don't actually have a C library (as such)\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly* | *-*-bitrig*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C and math libraries are in the System framework\n\t    func_append deplibs \" System.ltframework\"\n\t    continue\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  esac\n\telif test X-lc_r = \"X$arg\"; then\n\t case $host in\n\t *-*-openbsd* | *-*-freebsd* | *-*-dragonfly* | *-*-bitrig*)\n\t   # Do not include libc_r directly, use -pthread flag.\n\t   continue\n\t   ;;\n\t esac\n\tfi\n\tfunc_append deplibs \" $arg\"\n\tcontinue\n\t;;\n\n      -mllvm)\n\tprev=mllvm\n\tcontinue\n\t;;\n\n      -module)\n\tmodule=yes\n\tcontinue\n\t;;\n\n      # Tru64 UNIX uses -model [arg] to determine the layout of C++\n      # classes, name mangling, and exception handling.\n      # Darwin uses the -arch flag to determine output architecture.\n      -model|-arch|-isysroot|--sysroot)\n\tfunc_append compiler_flags \" $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \\\n      |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)\n\tfunc_append compiler_flags \" $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tcase \"$new_inherited_linker_flags \" in\n\t    *\" $arg \"*) ;;\n\t    * ) func_append new_inherited_linker_flags \" $arg\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -multi_module)\n\tsingle_module=$wl-multi_module\n\tcontinue\n\t;;\n\n      -no-fast-install)\n\tfast_install=no\n\tcontinue\n\t;;\n\n      -no-install)\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-darwin* | *-cegcc*)\n\t  # The PATH hackery in wrapper scripts is required on Windows\n\t  # and Darwin in order for the loader to find any dlls it needs.\n\t  func_warning \"'-no-install' is ignored for $host\"\n\t  func_warning \"assuming '-no-fast-install' instead\"\n\t  fast_install=no\n\t  ;;\n\t*) no_install=yes ;;\n\tesac\n\tcontinue\n\t;;\n\n      -no-undefined)\n\tallow_undefined=no\n\tcontinue\n\t;;\n\n      -objectlist)\n\tprev=objectlist\n\tcontinue\n\t;;\n\n      -os2dllname)\n\tprev=os2dllname\n\tcontinue\n\t;;\n\n      -o) prev=output ;;\n\n      -precious-files-regex)\n\tprev=precious_regex\n\tcontinue\n\t;;\n\n      -release)\n\tprev=release\n\tcontinue\n\t;;\n\n      -rpath)\n\tprev=rpath\n\tcontinue\n\t;;\n\n      -R)\n\tprev=xrpath\n\tcontinue\n\t;;\n\n      -R*)\n\tfunc_stripname '-R' '' \"$arg\"\n\tdir=$func_stripname_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t=*)\n\t  func_stripname '=' '' \"$dir\"\n\t  dir=$lt_sysroot$func_stripname_result\n\t  ;;\n\t*)\n\t  func_fatal_error \"only absolute run-paths are allowed\"\n\t  ;;\n\tesac\n\tcase \"$xrpath \" in\n\t*\" $dir \"*) ;;\n\t*) func_append xrpath \" $dir\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -shared)\n\t# The effects of -shared are defined in a previous loop.\n\tcontinue\n\t;;\n\n      -shrext)\n\tprev=shrext\n\tcontinue\n\t;;\n\n      -static | -static-libtool-libs)\n\t# The effects of -static are defined in a previous loop.\n\t# We used to do the same as -all-static on platforms that\n\t# didn't have a PIC flag, but the assumption that the effects\n\t# would be equivalent was wrong.  It would break on at least\n\t# Digital Unix and AIX.\n\tcontinue\n\t;;\n\n      -thread-safe)\n\tthread_safe=yes\n\tcontinue\n\t;;\n\n      -version-info)\n\tprev=vinfo\n\tcontinue\n\t;;\n\n      -version-number)\n\tprev=vinfo\n\tvinfo_number=yes\n\tcontinue\n\t;;\n\n      -weak)\n        prev=weak\n\tcontinue\n\t;;\n\n      -Wc,*)\n\tfunc_stripname '-Wc,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=$IFS; IFS=,\n\tfor flag in $args; do\n\t  IFS=$save_ifs\n          func_quote_for_eval \"$flag\"\n\t  func_append arg \" $func_quote_for_eval_result\"\n\t  func_append compiler_flags \" $func_quote_for_eval_result\"\n\tdone\n\tIFS=$save_ifs\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Wl,*)\n\tfunc_stripname '-Wl,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=$IFS; IFS=,\n\tfor flag in $args; do\n\t  IFS=$save_ifs\n          func_quote_for_eval \"$flag\"\n\t  func_append arg \" $wl$func_quote_for_eval_result\"\n\t  func_append compiler_flags \" $wl$func_quote_for_eval_result\"\n\t  func_append linker_flags \" $func_quote_for_eval_result\"\n\tdone\n\tIFS=$save_ifs\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Xcompiler)\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -Xlinker)\n\tprev=xlinker\n\tcontinue\n\t;;\n\n      -XCClinker)\n\tprev=xcclinker\n\tcontinue\n\t;;\n\n      # -msg_* for osf cc\n      -msg_*)\n\tfunc_quote_for_eval \"$arg\"\n\targ=$func_quote_for_eval_result\n\t;;\n\n      # Flags to be passed through unchanged, with rationale:\n      # -64, -mips[0-9]      enable 64-bit mode for the SGI compiler\n      # -r[0-9][0-9]*        specify processor for the SGI compiler\n      # -xarch=*, -xtarget=* enable 64-bit mode for the Sun compiler\n      # +DA*, +DD*           enable 64-bit mode for the HP compiler\n      # -q*                  compiler args for the IBM compiler\n      # -m*, -t[45]*, -txscale* architecture-specific flags for GCC\n      # -F/path              path to uninstalled frameworks, gcc on darwin\n      # -p, -pg, --coverage, -fprofile-*  profiling flags for GCC\n      # -fstack-protector*   stack protector flags for GCC\n      # @file                GCC response files\n      # -tp=*                Portland pgcc target processor selection\n      # --sysroot=*          for sysroot support\n      # -O*, -g*, -flto*, -fwhopr*, -fuse-linker-plugin GCC link-time optimization\n      # -stdlib=*            select c++ std lib with clang\n      -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*| \\\n      -t[45]*|-txscale*|-p|-pg|--coverage|-fprofile-*|-F*|@*|-tp=*|--sysroot=*| \\\n      -O*|-g*|-flto*|-fwhopr*|-fuse-linker-plugin|-fstack-protector*|-stdlib=*)\n        func_quote_for_eval \"$arg\"\n\targ=$func_quote_for_eval_result\n        func_append compile_command \" $arg\"\n        func_append finalize_command \" $arg\"\n        func_append compiler_flags \" $arg\"\n        continue\n        ;;\n\n      -Z*)\n        if test os2 = \"`expr $host : '.*\\(os2\\)'`\"; then\n          # OS/2 uses -Zxxx to specify OS/2-specific options\n\t  compiler_flags=\"$compiler_flags $arg\"\n\t  func_append compile_command \" $arg\"\n\t  func_append finalize_command \" $arg\"\n\t  case $arg in\n\t  -Zlinker | -Zstack)\n\t    prev=xcompiler\n\t    ;;\n\t  esac\n\t  continue\n        else\n\t  # Otherwise treat like 'Some other compiler flag' below\n\t  func_quote_for_eval \"$arg\"\n\t  arg=$func_quote_for_eval_result\n        fi\n\t;;\n\n      # Some other compiler flag.\n      -* | +*)\n        func_quote_for_eval \"$arg\"\n\targ=$func_quote_for_eval_result\n\t;;\n\n      *.$objext)\n\t# A standard object.\n\tfunc_append objs \" $arg\"\n\t;;\n\n      *.lo)\n\t# A libtool-controlled object.\n\n\t# Check to see that this really is a libtool object.\n\tif func_lalib_unsafe_p \"$arg\"; then\n\t  pic_object=\n\t  non_pic_object=\n\n\t  # Read the .lo file\n\t  func_source \"$arg\"\n\n\t  if test -z \"$pic_object\" ||\n\t     test -z \"$non_pic_object\" ||\n\t     test none = \"$pic_object\" &&\n\t     test none = \"$non_pic_object\"; then\n\t    func_fatal_error \"cannot find name of object for '$arg'\"\n\t  fi\n\n\t  # Extract subdirectory from the argument.\n\t  func_dirname \"$arg\" \"/\" \"\"\n\t  xdir=$func_dirname_result\n\n\t  test none = \"$pic_object\" || {\n\t    # Prepend the subdirectory the object is found in.\n\t    pic_object=$xdir$pic_object\n\n\t    if test dlfiles = \"$prev\"; then\n\t      if test yes = \"$build_libtool_libs\" && test yes = \"$dlopen_support\"; then\n\t\tfunc_append dlfiles \" $pic_object\"\n\t\tprev=\n\t\tcontinue\n\t      else\n\t\t# If libtool objects are unsupported, then we need to preload.\n\t\tprev=dlprefiles\n\t      fi\n\t    fi\n\n\t    # CHECK ME:  I think I busted this.  -Ossama\n\t    if test dlprefiles = \"$prev\"; then\n\t      # Preload the old-style object.\n\t      func_append dlprefiles \" $pic_object\"\n\t      prev=\n\t    fi\n\n\t    # A PIC object.\n\t    func_append libobjs \" $pic_object\"\n\t    arg=$pic_object\n\t  }\n\n\t  # Non-PIC object.\n\t  if test none != \"$non_pic_object\"; then\n\t    # Prepend the subdirectory the object is found in.\n\t    non_pic_object=$xdir$non_pic_object\n\n\t    # A standard non-PIC object\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t    if test -z \"$pic_object\" || test none = \"$pic_object\"; then\n\t      arg=$non_pic_object\n\t    fi\n\t  else\n\t    # If the PIC object exists, use it instead.\n\t    # $xdir was prepended to $pic_object above.\n\t    non_pic_object=$pic_object\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  fi\n\telse\n\t  # Only an error if not doing a dry-run.\n\t  if $opt_dry_run; then\n\t    # Extract subdirectory from the argument.\n\t    func_dirname \"$arg\" \"/\" \"\"\n\t    xdir=$func_dirname_result\n\n\t    func_lo2o \"$arg\"\n\t    pic_object=$xdir$objdir/$func_lo2o_result\n\t    non_pic_object=$xdir$func_lo2o_result\n\t    func_append libobjs \" $pic_object\"\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  else\n\t    func_fatal_error \"'$arg' is not a valid libtool object\"\n\t  fi\n\tfi\n\t;;\n\n      *.$libext)\n\t# An archive.\n\tfunc_append deplibs \" $arg\"\n\tfunc_append old_deplibs \" $arg\"\n\tcontinue\n\t;;\n\n      *.la)\n\t# A libtool-controlled library.\n\n\tfunc_resolve_sysroot \"$arg\"\n\tif test dlfiles = \"$prev\"; then\n\t  # This library was specified with -dlopen.\n\t  func_append dlfiles \" $func_resolve_sysroot_result\"\n\t  prev=\n\telif test dlprefiles = \"$prev\"; then\n\t  # The library was specified with -dlpreopen.\n\t  func_append dlprefiles \" $func_resolve_sysroot_result\"\n\t  prev=\n\telse\n\t  func_append deplibs \" $func_resolve_sysroot_result\"\n\tfi\n\tcontinue\n\t;;\n\n      # Some other compiler argument.\n      *)\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\tfunc_quote_for_eval \"$arg\"\n\targ=$func_quote_for_eval_result\n\t;;\n      esac # arg\n\n      # Now actually substitute the argument into the commands.\n      if test -n \"$arg\"; then\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n      fi\n    done # argument parsing loop\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the '$prevarg' option requires an argument\"\n\n    if test yes = \"$export_dynamic\" && test -n \"$export_dynamic_flag_spec\"; then\n      eval arg=\\\"$export_dynamic_flag_spec\\\"\n      func_append compile_command \" $arg\"\n      func_append finalize_command \" $arg\"\n    fi\n\n    oldlibs=\n    # calculate the name of the file, without its directory\n    func_basename \"$output\"\n    outputname=$func_basename_result\n    libobjs_save=$libobjs\n\n    if test -n \"$shlibpath_var\"; then\n      # get the directories listed in $shlibpath_var\n      eval shlib_search_path=\\`\\$ECHO \\\"\\$$shlibpath_var\\\" \\| \\$SED \\'s/:/ /g\\'\\`\n    else\n      shlib_search_path=\n    fi\n    eval sys_lib_search_path=\\\"$sys_lib_search_path_spec\\\"\n    eval sys_lib_dlsearch_path=\\\"$sys_lib_dlsearch_path_spec\\\"\n\n    # Definition is injected by LT_CONFIG during libtool generation.\n    func_munge_path_list sys_lib_dlsearch_path \"$LT_SYS_LIBRARY_PATH\"\n\n    func_dirname \"$output\" \"/\" \"\"\n    output_objdir=$func_dirname_result$objdir\n    func_to_tool_file \"$output_objdir/\"\n    tool_output_objdir=$func_to_tool_file_result\n    # Create the object directory.\n    func_mkdir_p \"$output_objdir\"\n\n    # Determine the type of output\n    case $output in\n    \"\")\n      func_fatal_help \"you must specify an output file\"\n      ;;\n    *.$libext) linkmode=oldlib ;;\n    *.lo | *.$objext) linkmode=obj ;;\n    *.la) linkmode=lib ;;\n    *) linkmode=prog ;; # Anything else should be a program.\n    esac\n\n    specialdeplibs=\n\n    libs=\n    # Find all interdependent deplibs by searching for libraries\n    # that are linked more than once (e.g. -la -lb -la)\n    for deplib in $deplibs; do\n      if $opt_preserve_dup_deps; then\n\tcase \"$libs \" in\n\t*\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\tesac\n      fi\n      func_append libs \" $deplib\"\n    done\n\n    if test lib = \"$linkmode\"; then\n      libs=\"$predeps $libs $compiler_lib_search_path $postdeps\"\n\n      # Compute libraries that are listed more than once in $predeps\n      # $postdeps and mark them as special (i.e., whose duplicates are\n      # not to be eliminated).\n      pre_post_deps=\n      if $opt_duplicate_compiler_generated_deps; then\n\tfor pre_post_dep in $predeps $postdeps; do\n\t  case \"$pre_post_deps \" in\n\t  *\" $pre_post_dep \"*) func_append specialdeplibs \" $pre_post_deps\" ;;\n\t  esac\n\t  func_append pre_post_deps \" $pre_post_dep\"\n\tdone\n      fi\n      pre_post_deps=\n    fi\n\n    deplibs=\n    newdependency_libs=\n    newlib_search_path=\n    need_relink=no # whether we're linking any uninstalled libtool libraries\n    notinst_deplibs= # not-installed libtool libraries\n    notinst_path= # paths that contain not-installed libtool libraries\n\n    case $linkmode in\n    lib)\n\tpasses=\"conv dlpreopen link\"\n\tfor file in $dlfiles $dlprefiles; do\n\t  case $file in\n\t  *.la) ;;\n\t  *)\n\t    func_fatal_help \"libraries can '-dlopen' only libtool libraries: $file\"\n\t    ;;\n\t  esac\n\tdone\n\t;;\n    prog)\n\tcompile_deplibs=\n\tfinalize_deplibs=\n\talldeplibs=false\n\tnewdlfiles=\n\tnewdlprefiles=\n\tpasses=\"conv scan dlopen dlpreopen link\"\n\t;;\n    *)  passes=\"conv\"\n\t;;\n    esac\n\n    for pass in $passes; do\n      # The preopen pass in lib mode reverses $deplibs; put it back here\n      # so that -L comes before libs that need it for instance...\n      if test lib,link = \"$linkmode,$pass\"; then\n\t## FIXME: Find the place where the list is rebuilt in the wrong\n\t##        order, and fix it there properly\n        tmp_deplibs=\n\tfor deplib in $deplibs; do\n\t  tmp_deplibs=\"$deplib $tmp_deplibs\"\n\tdone\n\tdeplibs=$tmp_deplibs\n      fi\n\n      if test lib,link = \"$linkmode,$pass\" ||\n\t test prog,scan = \"$linkmode,$pass\"; then\n\tlibs=$deplibs\n\tdeplibs=\n      fi\n      if test prog = \"$linkmode\"; then\n\tcase $pass in\n\tdlopen) libs=$dlfiles ;;\n\tdlpreopen) libs=$dlprefiles ;;\n\tlink) libs=\"$deplibs %DEPLIBS% $dependency_libs\" ;;\n\tesac\n      fi\n      if test lib,dlpreopen = \"$linkmode,$pass\"; then\n\t# Collect and forward deplibs of preopened libtool libs\n\tfor lib in $dlprefiles; do\n\t  # Ignore non-libtool-libs\n\t  dependency_libs=\n\t  func_resolve_sysroot \"$lib\"\n\t  case $lib in\n\t  *.la)\tfunc_source \"$func_resolve_sysroot_result\" ;;\n\t  esac\n\n\t  # Collect preopened libtool deplibs, except any this library\n\t  # has declared as weak libs\n\t  for deplib in $dependency_libs; do\n\t    func_basename \"$deplib\"\n            deplib_base=$func_basename_result\n\t    case \" $weak_libs \" in\n\t    *\" $deplib_base \"*) ;;\n\t    *) func_append deplibs \" $deplib\" ;;\n\t    esac\n\t  done\n\tdone\n\tlibs=$dlprefiles\n      fi\n      if test dlopen = \"$pass\"; then\n\t# Collect dlpreopened libraries\n\tsave_deplibs=$deplibs\n\tdeplibs=\n      fi\n\n      for deplib in $libs; do\n\tlib=\n\tfound=false\n\tcase $deplib in\n\t-mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \\\n        |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)\n\t  if test prog,link = \"$linkmode,$pass\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    func_append compiler_flags \" $deplib\"\n\t    if test lib = \"$linkmode\"; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) func_append new_inherited_linker_flags \" $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-l*)\n\t  if test lib != \"$linkmode\" && test prog != \"$linkmode\"; then\n\t    func_warning \"'-l' is ignored for archives/objects\"\n\t    continue\n\t  fi\n\t  func_stripname '-l' '' \"$deplib\"\n\t  name=$func_stripname_result\n\t  if test lib = \"$linkmode\"; then\n\t    searchdirs=\"$newlib_search_path $lib_search_path $compiler_lib_search_dirs $sys_lib_search_path $shlib_search_path\"\n\t  else\n\t    searchdirs=\"$newlib_search_path $lib_search_path $sys_lib_search_path $shlib_search_path\"\n\t  fi\n\t  for searchdir in $searchdirs; do\n\t    for search_ext in .la $std_shrext .so .a; do\n\t      # Search the libtool library\n\t      lib=$searchdir/lib$name$search_ext\n\t      if test -f \"$lib\"; then\n\t\tif test .la = \"$search_ext\"; then\n\t\t  found=:\n\t\telse\n\t\t  found=false\n\t\tfi\n\t\tbreak 2\n\t      fi\n\t    done\n\t  done\n\t  if $found; then\n\t    # deplib is a libtool library\n\t    # If $allow_libtool_libs_with_static_runtimes && $deplib is a stdlib,\n\t    # We need to do some special things here, and not later.\n\t    if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t      case \" $predeps $postdeps \" in\n\t      *\" $deplib \"*)\n\t\tif func_lalib_p \"$lib\"; then\n\t\t  library_names=\n\t\t  old_library=\n\t\t  func_source \"$lib\"\n\t\t  for l in $old_library $library_names; do\n\t\t    ll=$l\n\t\t  done\n\t\t  if test \"X$ll\" = \"X$old_library\"; then # only static version available\n\t\t    found=false\n\t\t    func_dirname \"$lib\" \"\" \".\"\n\t\t    ladir=$func_dirname_result\n\t\t    lib=$ladir/$old_library\n\t\t    if test prog,link = \"$linkmode,$pass\"; then\n\t\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t\t    else\n\t\t      deplibs=\"$deplib $deplibs\"\n\t\t      test lib = \"$linkmode\" && newdependency_libs=\"$deplib $newdependency_libs\"\n\t\t    fi\n\t\t    continue\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *) ;;\n\t      esac\n\t    fi\n\t  else\n\t    # deplib doesn't seem to be a libtool library\n\t    if test prog,link = \"$linkmode,$pass\"; then\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      deplibs=\"$deplib $deplibs\"\n\t      test lib = \"$linkmode\" && newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    continue\n\t  fi\n\t  ;; # -l\n\t*.ltframework)\n\t  if test prog,link = \"$linkmode,$pass\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$deplib $deplibs\"\n\t    if test lib = \"$linkmode\"; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) func_append new_inherited_linker_flags \" $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-L*)\n\t  case $linkmode in\n\t  lib)\n\t    deplibs=\"$deplib $deplibs\"\n\t    test conv = \"$pass\" && continue\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    func_stripname '-L' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t    ;;\n\t  prog)\n\t    if test conv = \"$pass\"; then\n\t      deplibs=\"$deplib $deplibs\"\n\t      continue\n\t    fi\n\t    if test scan = \"$pass\"; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    func_stripname '-L' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t    ;;\n\t  *)\n\t    func_warning \"'-L' is ignored for archives/objects\"\n\t    ;;\n\t  esac # linkmode\n\t  continue\n\t  ;; # -L\n\t-R*)\n\t  if test link = \"$pass\"; then\n\t    func_stripname '-R' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    dir=$func_resolve_sysroot_result\n\t    # Make sure the xrpath contains only unique directories.\n\t    case \"$xrpath \" in\n\t    *\" $dir \"*) ;;\n\t    *) func_append xrpath \" $dir\" ;;\n\t    esac\n\t  fi\n\t  deplibs=\"$deplib $deplibs\"\n\t  continue\n\t  ;;\n\t*.la)\n\t  func_resolve_sysroot \"$deplib\"\n\t  lib=$func_resolve_sysroot_result\n\t  ;;\n\t*.$libext)\n\t  if test conv = \"$pass\"; then\n\t    deplibs=\"$deplib $deplibs\"\n\t    continue\n\t  fi\n\t  case $linkmode in\n\t  lib)\n\t    # Linking convenience modules into shared libraries is allowed,\n\t    # but linking other static libraries is non-portable.\n\t    case \" $dlpreconveniencelibs \" in\n\t    *\" $deplib \"*) ;;\n\t    *)\n\t      valid_a_lib=false\n\t      case $deplibs_check_method in\n\t\tmatch_pattern*)\n\t\t  set dummy $deplibs_check_method; shift\n\t\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t\t  if eval \"\\$ECHO \\\"$deplib\\\"\" 2>/dev/null | $SED 10q \\\n\t\t    | $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t    valid_a_lib=:\n\t\t  fi\n\t\t;;\n\t\tpass_all)\n\t\t  valid_a_lib=:\n\t\t;;\n\t      esac\n\t      if $valid_a_lib; then\n\t\techo\n\t\t$ECHO \"*** Warning: Linking the shared library $output against the\"\n\t\t$ECHO \"*** static library $deplib is not portable!\"\n\t\tdeplibs=\"$deplib $deplibs\"\n\t      else\n\t\techo\n\t\t$ECHO \"*** Warning: Trying to link with static lib archive $deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because the file extensions .$libext of this argument makes me believe\"\n\t\techo \"*** that it is just a static archive that I should not use here.\"\n\t      fi\n\t      ;;\n\t    esac\n\t    continue\n\t    ;;\n\t  prog)\n\t    if test link != \"$pass\"; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    continue\n\t    ;;\n\t  esac # linkmode\n\t  ;; # *.$libext\n\t*.lo | *.$objext)\n\t  if test conv = \"$pass\"; then\n\t    deplibs=\"$deplib $deplibs\"\n\t  elif test prog = \"$linkmode\"; then\n\t    if test dlpreopen = \"$pass\" || test yes != \"$dlopen_support\" || test no = \"$build_libtool_libs\"; then\n\t      # If there is no dlopen support or we're linking statically,\n\t      # we need to preload.\n\t      func_append newdlprefiles \" $deplib\"\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      func_append newdlfiles \" $deplib\"\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t%DEPLIBS%)\n\t  alldeplibs=:\n\t  continue\n\t  ;;\n\tesac # case $deplib\n\n\t$found || test -f \"$lib\" \\\n\t  || func_fatal_error \"cannot find the library '$lib' or unhandled argument '$deplib'\"\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$lib\" \\\n\t  || func_fatal_error \"'$lib' is not a valid libtool archive\"\n\n\tfunc_dirname \"$lib\" \"\" \".\"\n\tladir=$func_dirname_result\n\n\tdlname=\n\tdlopen=\n\tdlpreopen=\n\tlibdir=\n\tlibrary_names=\n\told_library=\n\tinherited_linker_flags=\n\t# If the library was installed with an old release of libtool,\n\t# it will not redefine variables installed, or shouldnotlink\n\tinstalled=yes\n\tshouldnotlink=no\n\tavoidtemprpath=\n\n\n\t# Read the .la file\n\tfunc_source \"$lib\"\n\n\t# Convert \"-framework foo\" to \"foo.ltframework\"\n\tif test -n \"$inherited_linker_flags\"; then\n\t  tmp_inherited_linker_flags=`$ECHO \"$inherited_linker_flags\" | $SED 's/-framework \\([^ $]*\\)/\\1.ltframework/g'`\n\t  for tmp_inherited_linker_flag in $tmp_inherited_linker_flags; do\n\t    case \" $new_inherited_linker_flags \" in\n\t      *\" $tmp_inherited_linker_flag \"*) ;;\n\t      *) func_append new_inherited_linker_flags \" $tmp_inherited_linker_flag\";;\n\t    esac\n\t  done\n\tfi\n\tdependency_libs=`$ECHO \" $dependency_libs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tif test lib,link = \"$linkmode,$pass\" ||\n\t   test prog,scan = \"$linkmode,$pass\" ||\n\t   { test prog != \"$linkmode\" && test lib != \"$linkmode\"; }; then\n\t  test -n \"$dlopen\" && func_append dlfiles \" $dlopen\"\n\t  test -n \"$dlpreopen\" && func_append dlprefiles \" $dlpreopen\"\n\tfi\n\n\tif test conv = \"$pass\"; then\n\t  # Only check for convenience libraries\n\t  deplibs=\"$lib $deplibs\"\n\t  if test -z \"$libdir\"; then\n\t    if test -z \"$old_library\"; then\n\t      func_fatal_error \"cannot find name of link library for '$lib'\"\n\t    fi\n\t    # It is a libtool convenience library, so add in its objects.\n\t    func_append convenience \" $ladir/$objdir/$old_library\"\n\t    func_append old_convenience \" $ladir/$objdir/$old_library\"\n\t  elif test prog != \"$linkmode\" && test lib != \"$linkmode\"; then\n\t    func_fatal_error \"'$lib' is not a convenience library\"\n\t  fi\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    deplibs=\"$deplib $deplibs\"\n\t    if $opt_preserve_dup_deps; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $deplib\"\n\t  done\n\t  continue\n\tfi # $pass = conv\n\n\n\t# Get the name of the library we link against.\n\tlinklib=\n\tif test -n \"$old_library\" &&\n\t   { test yes = \"$prefer_static_libs\" ||\n\t     test built,no = \"$prefer_static_libs,$installed\"; }; then\n\t  linklib=$old_library\n\telse\n\t  for l in $old_library $library_names; do\n\t    linklib=$l\n\t  done\n\tfi\n\tif test -z \"$linklib\"; then\n\t  func_fatal_error \"cannot find name of link library for '$lib'\"\n\tfi\n\n\t# This library was specified with -dlopen.\n\tif test dlopen = \"$pass\"; then\n\t  test -z \"$libdir\" \\\n\t    && func_fatal_error \"cannot -dlopen a convenience library: '$lib'\"\n\t  if test -z \"$dlname\" ||\n\t     test yes != \"$dlopen_support\" ||\n\t     test no = \"$build_libtool_libs\"\n\t  then\n\t    # If there is no dlname, no dlopen support or we're linking\n\t    # statically, we need to preload.  We also need to preload any\n\t    # dependent libraries so libltdl's deplib preloader doesn't\n\t    # bomb out in the load deplibs phase.\n\t    func_append dlprefiles \" $lib $dependency_libs\"\n\t  else\n\t    func_append newdlfiles \" $lib\"\n\t  fi\n\t  continue\n\tfi # $pass = dlopen\n\n\t# We need an absolute path.\n\tcase $ladir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs_ladir=$ladir ;;\n\t*)\n\t  abs_ladir=`cd \"$ladir\" && pwd`\n\t  if test -z \"$abs_ladir\"; then\n\t    func_warning \"cannot determine absolute directory name of '$ladir'\"\n\t    func_warning \"passing it literally to the linker, although it might fail\"\n\t    abs_ladir=$ladir\n\t  fi\n\t  ;;\n\tesac\n\tfunc_basename \"$lib\"\n\tlaname=$func_basename_result\n\n\t# Find the relevant object directory and library name.\n\tif test yes = \"$installed\"; then\n\t  if test ! -f \"$lt_sysroot$libdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    func_warning \"library '$lib' was moved.\"\n\t    dir=$ladir\n\t    absdir=$abs_ladir\n\t    libdir=$abs_ladir\n\t  else\n\t    dir=$lt_sysroot$libdir\n\t    absdir=$lt_sysroot$libdir\n\t  fi\n\t  test yes = \"$hardcode_automatic\" && avoidtemprpath=yes\n\telse\n\t  if test ! -f \"$ladir/$objdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    dir=$ladir\n\t    absdir=$abs_ladir\n\t    # Remove this search path later\n\t    func_append notinst_path \" $abs_ladir\"\n\t  else\n\t    dir=$ladir/$objdir\n\t    absdir=$abs_ladir/$objdir\n\t    # Remove this search path later\n\t    func_append notinst_path \" $abs_ladir\"\n\t  fi\n\tfi # $installed = yes\n\tfunc_stripname 'lib' '.la' \"$laname\"\n\tname=$func_stripname_result\n\n\t# This library was specified with -dlpreopen.\n\tif test dlpreopen = \"$pass\"; then\n\t  if test -z \"$libdir\" && test prog = \"$linkmode\"; then\n\t    func_fatal_error \"only libraries may -dlpreopen a convenience library: '$lib'\"\n\t  fi\n\t  case $host in\n\t    # special handling for platforms with PE-DLLs.\n\t    *cygwin* | *mingw* | *cegcc* )\n\t      # Linker will automatically link against shared library if both\n\t      # static and shared are present.  Therefore, ensure we extract\n\t      # symbols from the import library if a shared library is present\n\t      # (otherwise, the dlopen module name will be incorrect).  We do\n\t      # this by putting the import library name into $newdlprefiles.\n\t      # We recover the dlopen module name by 'saving' the la file\n\t      # name in a special purpose variable, and (later) extracting the\n\t      # dlname from the la file.\n\t      if test -n \"$dlname\"; then\n\t        func_tr_sh \"$dir/$linklib\"\n\t        eval \"libfile_$func_tr_sh_result=\\$abs_ladir/\\$laname\"\n\t        func_append newdlprefiles \" $dir/$linklib\"\n\t      else\n\t        func_append newdlprefiles \" $dir/$old_library\"\n\t        # Keep a list of preopened convenience libraries to check\n\t        # that they are being used correctly in the link pass.\n\t        test -z \"$libdir\" && \\\n\t          func_append dlpreconveniencelibs \" $dir/$old_library\"\n\t      fi\n\t    ;;\n\t    * )\n\t      # Prefer using a static library (so that no silly _DYNAMIC symbols\n\t      # are required to link).\n\t      if test -n \"$old_library\"; then\n\t        func_append newdlprefiles \" $dir/$old_library\"\n\t        # Keep a list of preopened convenience libraries to check\n\t        # that they are being used correctly in the link pass.\n\t        test -z \"$libdir\" && \\\n\t          func_append dlpreconveniencelibs \" $dir/$old_library\"\n\t      # Otherwise, use the dlname, so that lt_dlopen finds it.\n\t      elif test -n \"$dlname\"; then\n\t        func_append newdlprefiles \" $dir/$dlname\"\n\t      else\n\t        func_append newdlprefiles \" $dir/$linklib\"\n\t      fi\n\t    ;;\n\t  esac\n\tfi # $pass = dlpreopen\n\n\tif test -z \"$libdir\"; then\n\t  # Link the convenience library\n\t  if test lib = \"$linkmode\"; then\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t  elif test prog,link = \"$linkmode,$pass\"; then\n\t    compile_deplibs=\"$dir/$old_library $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$old_library $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$lib $deplibs\" # used for prog,scan pass\n\t  fi\n\t  continue\n\tfi\n\n\n\tif test prog = \"$linkmode\" && test link != \"$pass\"; then\n\t  func_append newlib_search_path \" $ladir\"\n\t  deplibs=\"$lib $deplibs\"\n\n\t  linkalldeplibs=false\n\t  if test no != \"$link_all_deplibs\" || test -z \"$library_names\" ||\n\t     test no = \"$build_libtool_libs\"; then\n\t    linkalldeplibs=:\n\t  fi\n\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    case $deplib in\n\t    -L*) func_stripname '-L' '' \"$deplib\"\n\t         func_resolve_sysroot \"$func_stripname_result\"\n\t         func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t\t ;;\n\t    esac\n\t    # Need to link against all dependency_libs?\n\t    if $linkalldeplibs; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      # Need to hardcode shared library paths\n\t      # or/and link against static libraries\n\t      newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    if $opt_preserve_dup_deps; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $deplib\"\n\t  done # for deplib\n\t  continue\n\tfi # $linkmode = prog...\n\n\tif test prog,link = \"$linkmode,$pass\"; then\n\t  if test -n \"$library_names\" &&\n\t     { { test no = \"$prefer_static_libs\" ||\n\t         test built,yes = \"$prefer_static_libs,$installed\"; } ||\n\t       test -z \"$old_library\"; }; then\n\t    # We need to hardcode the library path\n\t    if test -n \"$shlibpath_var\" && test -z \"$avoidtemprpath\"; then\n\t      # Make sure the rpath contains only unique directories.\n\t      case $temp_rpath: in\n\t      *\"$absdir:\"*) ;;\n\t      *) func_append temp_rpath \"$absdir:\" ;;\n\t      esac\n\t    fi\n\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) func_append compile_rpath \" $absdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append finalize_rpath \" $libdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t  fi # $linkmode,$pass = prog,link...\n\n\t  if $alldeplibs &&\n\t     { test pass_all = \"$deplibs_check_method\" ||\n\t       { test yes = \"$build_libtool_libs\" &&\n\t\t test -n \"$library_names\"; }; }; then\n\t    # We only need to search for static libraries\n\t    continue\n\t  fi\n\tfi\n\n\tlink_static=no # Whether the deplib will be linked statically\n\tuse_static_libs=$prefer_static_libs\n\tif test built = \"$use_static_libs\" && test yes = \"$installed\"; then\n\t  use_static_libs=no\n\tfi\n\tif test -n \"$library_names\" &&\n\t   { test no = \"$use_static_libs\" || test -z \"$old_library\"; }; then\n\t  case $host in\n\t  *cygwin* | *mingw* | *cegcc* | *os2*)\n\t      # No point in relinking DLLs because paths are not encoded\n\t      func_append notinst_deplibs \" $lib\"\n\t      need_relink=no\n\t    ;;\n\t  *)\n\t    if test no = \"$installed\"; then\n\t      func_append notinst_deplibs \" $lib\"\n\t      need_relink=yes\n\t    fi\n\t    ;;\n\t  esac\n\t  # This is a shared library\n\n\t  # Warn about portability, can't link against -module's on some\n\t  # systems (darwin).  Don't bleat about dlopened modules though!\n\t  dlopenmodule=\n\t  for dlpremoduletest in $dlprefiles; do\n\t    if test \"X$dlpremoduletest\" = \"X$lib\"; then\n\t      dlopenmodule=$dlpremoduletest\n\t      break\n\t    fi\n\t  done\n\t  if test -z \"$dlopenmodule\" && test yes = \"$shouldnotlink\" && test link = \"$pass\"; then\n\t    echo\n\t    if test prog = \"$linkmode\"; then\n\t      $ECHO \"*** Warning: Linking the executable $output against the loadable module\"\n\t    else\n\t      $ECHO \"*** Warning: Linking the shared library $output against the loadable module\"\n\t    fi\n\t    $ECHO \"*** $linklib is not portable!\"\n\t  fi\n\t  if test lib = \"$linkmode\" &&\n\t     test yes = \"$hardcode_into_libs\"; then\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) func_append compile_rpath \" $absdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append finalize_rpath \" $libdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t  fi\n\n\t  if test -n \"$old_archive_from_expsyms_cmds\"; then\n\t    # figure out the soname\n\t    set dummy $library_names\n\t    shift\n\t    realname=$1\n\t    shift\n\t    libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t    # use dlname if we got it. it's perfectly good, no?\n\t    if test -n \"$dlname\"; then\n\t      soname=$dlname\n\t    elif test -n \"$soname_spec\"; then\n\t      # bleh windows\n\t      case $host in\n\t      *cygwin* | mingw* | *cegcc* | *os2*)\n\t        func_arith $current - $age\n\t\tmajor=$func_arith_result\n\t\tversuffix=-$major\n\t\t;;\n\t      esac\n\t      eval soname=\\\"$soname_spec\\\"\n\t    else\n\t      soname=$realname\n\t    fi\n\n\t    # Make a new name for the extract_expsyms_cmds to use\n\t    soroot=$soname\n\t    func_basename \"$soroot\"\n\t    soname=$func_basename_result\n\t    func_stripname 'lib' '.dll' \"$soname\"\n\t    newlib=libimp-$func_stripname_result.a\n\n\t    # If the library has no export list, then create one now\n\t    if test -f \"$output_objdir/$soname-def\"; then :\n\t    else\n\t      func_verbose \"extracting exported symbol list from '$soname'\"\n\t      func_execute_cmds \"$extract_expsyms_cmds\" 'exit $?'\n\t    fi\n\n\t    # Create $newlib\n\t    if test -f \"$output_objdir/$newlib\"; then :; else\n\t      func_verbose \"generating import library for '$soname'\"\n\t      func_execute_cmds \"$old_archive_from_expsyms_cmds\" 'exit $?'\n\t    fi\n\t    # make sure the library variables are pointing to the new library\n\t    dir=$output_objdir\n\t    linklib=$newlib\n\t  fi # test -n \"$old_archive_from_expsyms_cmds\"\n\n\t  if test prog = \"$linkmode\" || test relink != \"$opt_mode\"; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    lib_linked=yes\n\t    case $hardcode_action in\n\t    immediate | unsupported)\n\t      if test no = \"$hardcode_direct\"; then\n\t\tadd=$dir/$linklib\n\t\tcase $host in\n\t\t  *-*-sco3.2v5.0.[024]*) add_dir=-L$dir ;;\n\t\t  *-*-sysv4*uw2*) add_dir=-L$dir ;;\n\t\t  *-*-sysv5OpenUNIX* | *-*-sysv5UnixWare7.[01].[10]* | \\\n\t\t    *-*-unixware7*) add_dir=-L$dir ;;\n\t\t  *-*-darwin* )\n\t\t    # if the lib is a (non-dlopened) module then we cannot\n\t\t    # link against it, someone is ignoring the earlier warnings\n\t\t    if /usr/bin/file -L $add 2> /dev/null |\n\t\t\t $GREP \": [^:]* bundle\" >/dev/null; then\n\t\t      if test \"X$dlopenmodule\" != \"X$lib\"; then\n\t\t\t$ECHO \"*** Warning: lib $linklib is a module, not a shared library\"\n\t\t\tif test -z \"$old_library\"; then\n\t\t\t  echo\n\t\t\t  echo \"*** And there doesn't seem to be a static archive available\"\n\t\t\t  echo \"*** The link will probably fail, sorry\"\n\t\t\telse\n\t\t\t  add=$dir/$old_library\n\t\t\tfi\n\t\t      elif test -n \"$old_library\"; then\n\t\t\tadd=$dir/$old_library\n\t\t      fi\n\t\t    fi\n\t\tesac\n\t      elif test no = \"$hardcode_minus_L\"; then\n\t\tcase $host in\n\t\t*-*-sunos*) add_shlibpath=$dir ;;\n\t\tesac\n\t\tadd_dir=-L$dir\n\t\tadd=-l$name\n\t      elif test no = \"$hardcode_shlibpath_var\"; then\n\t\tadd_shlibpath=$dir\n\t\tadd=-l$name\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    relink)\n\t      if test yes = \"$hardcode_direct\" &&\n\t         test no = \"$hardcode_direct_absolute\"; then\n\t\tadd=$dir/$linklib\n\t      elif test yes = \"$hardcode_minus_L\"; then\n\t\tadd_dir=-L$absdir\n\t\t# Try looking first in the location we're being installed to.\n\t\tif test -n \"$inst_prefix_dir\"; then\n\t\t  case $libdir in\n\t\t    [\\\\/]*)\n\t\t      func_append add_dir \" -L$inst_prefix_dir$libdir\"\n\t\t      ;;\n\t\t  esac\n\t\tfi\n\t\tadd=-l$name\n\t      elif test yes = \"$hardcode_shlibpath_var\"; then\n\t\tadd_shlibpath=$dir\n\t\tadd=-l$name\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    *) lib_linked=no ;;\n\t    esac\n\n\t    if test yes != \"$lib_linked\"; then\n\t      func_fatal_configuration \"unsupported hardcode properties\"\n\t    fi\n\n\t    if test -n \"$add_shlibpath\"; then\n\t      case :$compile_shlibpath: in\n\t      *\":$add_shlibpath:\"*) ;;\n\t      *) func_append compile_shlibpath \"$add_shlibpath:\" ;;\n\t      esac\n\t    fi\n\t    if test prog = \"$linkmode\"; then\n\t      test -n \"$add_dir\" && compile_deplibs=\"$add_dir $compile_deplibs\"\n\t      test -n \"$add\" && compile_deplibs=\"$add $compile_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t      if test yes != \"$hardcode_direct\" &&\n\t\t test yes != \"$hardcode_minus_L\" &&\n\t\t test yes = \"$hardcode_shlibpath_var\"; then\n\t\tcase :$finalize_shlibpath: in\n\t\t*\":$libdir:\"*) ;;\n\t\t*) func_append finalize_shlibpath \"$libdir:\" ;;\n\t\tesac\n\t      fi\n\t    fi\n\t  fi\n\n\t  if test prog = \"$linkmode\" || test relink = \"$opt_mode\"; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    # Finalize command for both is simple: just hardcode it.\n\t    if test yes = \"$hardcode_direct\" &&\n\t       test no = \"$hardcode_direct_absolute\"; then\n\t      add=$libdir/$linklib\n\t    elif test yes = \"$hardcode_minus_L\"; then\n\t      add_dir=-L$libdir\n\t      add=-l$name\n\t    elif test yes = \"$hardcode_shlibpath_var\"; then\n\t      case :$finalize_shlibpath: in\n\t      *\":$libdir:\"*) ;;\n\t      *) func_append finalize_shlibpath \"$libdir:\" ;;\n\t      esac\n\t      add=-l$name\n\t    elif test yes = \"$hardcode_automatic\"; then\n\t      if test -n \"$inst_prefix_dir\" &&\n\t\t test -f \"$inst_prefix_dir$libdir/$linklib\"; then\n\t\tadd=$inst_prefix_dir$libdir/$linklib\n\t      else\n\t\tadd=$libdir/$linklib\n\t      fi\n\t    else\n\t      # We cannot seem to hardcode it, guess we'll fake it.\n\t      add_dir=-L$libdir\n\t      # Try looking first in the location we're being installed to.\n\t      if test -n \"$inst_prefix_dir\"; then\n\t\tcase $libdir in\n\t\t  [\\\\/]*)\n\t\t    func_append add_dir \" -L$inst_prefix_dir$libdir\"\n\t\t    ;;\n\t\tesac\n\t      fi\n\t      add=-l$name\n\t    fi\n\n\t    if test prog = \"$linkmode\"; then\n\t      test -n \"$add_dir\" && finalize_deplibs=\"$add_dir $finalize_deplibs\"\n\t      test -n \"$add\" && finalize_deplibs=\"$add $finalize_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t    fi\n\t  fi\n\telif test prog = \"$linkmode\"; then\n\t  # Here we assume that one of hardcode_direct or hardcode_minus_L\n\t  # is not unsupported.  This is valid on all known static and\n\t  # shared platforms.\n\t  if test unsupported != \"$hardcode_direct\"; then\n\t    test -n \"$old_library\" && linklib=$old_library\n\t    compile_deplibs=\"$dir/$linklib $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$linklib $finalize_deplibs\"\n\t  else\n\t    compile_deplibs=\"-l$name -L$dir $compile_deplibs\"\n\t    finalize_deplibs=\"-l$name -L$dir $finalize_deplibs\"\n\t  fi\n\telif test yes = \"$build_libtool_libs\"; then\n\t  # Not a shared library\n\t  if test pass_all != \"$deplibs_check_method\"; then\n\t    # We're trying link a shared library against a static one\n\t    # but the system doesn't support it.\n\n\t    # Just print a warning and add the library to dependency_libs so\n\t    # that the program can be linked against the static library.\n\t    echo\n\t    $ECHO \"*** Warning: This system cannot link to static lib archive $lib.\"\n\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t    echo \"*** shared version of the library, which you do not appear to have.\"\n\t    if test yes = \"$module\"; then\n\t      echo \"*** But as you try to build a module library, libtool will still create \"\n\t      echo \"*** a static module, that should work as long as the dlopening application\"\n\t      echo \"*** is linked with the -dlopen flag to resolve symbols at runtime.\"\n\t      if test -z \"$global_symbol_pipe\"; then\n\t\techo\n\t\techo \"*** However, this would only work if libtool was able to extract symbol\"\n\t\techo \"*** lists from a program, using 'nm' or equivalent, but libtool could\"\n\t\techo \"*** not find such a program.  So, this module is probably useless.\"\n\t\techo \"*** 'nm' from GNU binutils and a full rebuild may help.\"\n\t      fi\n\t      if test no = \"$build_old_libs\"; then\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  else\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t    link_static=yes\n\t  fi\n\tfi # link shared/static library?\n\n\tif test lib = \"$linkmode\"; then\n\t  if test -n \"$dependency_libs\" &&\n\t     { test yes != \"$hardcode_into_libs\" ||\n\t       test yes = \"$build_old_libs\" ||\n\t       test yes = \"$link_static\"; }; then\n\t    # Extract -R from dependency_libs\n\t    temp_deplibs=\n\t    for libdir in $dependency_libs; do\n\t      case $libdir in\n\t      -R*) func_stripname '-R' '' \"$libdir\"\n\t           temp_xrpath=$func_stripname_result\n\t\t   case \" $xrpath \" in\n\t\t   *\" $temp_xrpath \"*) ;;\n\t\t   *) func_append xrpath \" $temp_xrpath\";;\n\t\t   esac;;\n\t      *) func_append temp_deplibs \" $libdir\";;\n\t      esac\n\t    done\n\t    dependency_libs=$temp_deplibs\n\t  fi\n\n\t  func_append newlib_search_path \" $absdir\"\n\t  # Link against this library\n\t  test no = \"$link_static\" && newdependency_libs=\"$abs_ladir/$laname $newdependency_libs\"\n\t  # ... and its dependency_libs\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    case $deplib in\n              -L*) func_stripname '-L' '' \"$deplib\"\n                   func_resolve_sysroot \"$func_stripname_result\";;\n              *) func_resolve_sysroot \"$deplib\" ;;\n            esac\n\t    if $opt_preserve_dup_deps; then\n\t      case \"$tmp_libs \" in\n\t      *\" $func_resolve_sysroot_result \"*)\n                func_append specialdeplibs \" $func_resolve_sysroot_result\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $func_resolve_sysroot_result\"\n\t  done\n\n\t  if test no != \"$link_all_deplibs\"; then\n\t    # Add the search paths of all dependency libraries\n\t    for deplib in $dependency_libs; do\n\t      path=\n\t      case $deplib in\n\t      -L*) path=$deplib ;;\n\t      *.la)\n\t        func_resolve_sysroot \"$deplib\"\n\t        deplib=$func_resolve_sysroot_result\n\t        func_dirname \"$deplib\" \"\" \".\"\n\t\tdir=$func_dirname_result\n\t\t# We need an absolute path.\n\t\tcase $dir in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) absdir=$dir ;;\n\t\t*)\n\t\t  absdir=`cd \"$dir\" && pwd`\n\t\t  if test -z \"$absdir\"; then\n\t\t    func_warning \"cannot determine absolute directory name of '$dir'\"\n\t\t    absdir=$dir\n\t\t  fi\n\t\t  ;;\n\t\tesac\n\t\tif $GREP \"^installed=no\" $deplib > /dev/null; then\n\t\tcase $host in\n\t\t*-*-darwin*)\n\t\t  depdepl=\n\t\t  eval deplibrary_names=`$SED -n -e 's/^library_names=\\(.*\\)$/\\1/p' $deplib`\n\t\t  if test -n \"$deplibrary_names\"; then\n\t\t    for tmp in $deplibrary_names; do\n\t\t      depdepl=$tmp\n\t\t    done\n\t\t    if test -f \"$absdir/$objdir/$depdepl\"; then\n\t\t      depdepl=$absdir/$objdir/$depdepl\n\t\t      darwin_install_name=`$OTOOL -L $depdepl | awk '{if (NR == 2) {print $1;exit}}'`\n                      if test -z \"$darwin_install_name\"; then\n                          darwin_install_name=`$OTOOL64 -L $depdepl  | awk '{if (NR == 2) {print $1;exit}}'`\n                      fi\n\t\t      func_append compiler_flags \" $wl-dylib_file $wl$darwin_install_name:$depdepl\"\n\t\t      func_append linker_flags \" -dylib_file $darwin_install_name:$depdepl\"\n\t\t      path=\n\t\t    fi\n\t\t  fi\n\t\t  ;;\n\t\t*)\n\t\t  path=-L$absdir/$objdir\n\t\t  ;;\n\t\tesac\n\t\telse\n\t\t  eval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $deplib`\n\t\t  test -z \"$libdir\" && \\\n\t\t    func_fatal_error \"'$deplib' is not a valid libtool archive\"\n\t\t  test \"$absdir\" != \"$libdir\" && \\\n\t\t    func_warning \"'$deplib' seems to be moved\"\n\n\t\t  path=-L$absdir\n\t\tfi\n\t\t;;\n\t      esac\n\t      case \" $deplibs \" in\n\t      *\" $path \"*) ;;\n\t      *) deplibs=\"$path $deplibs\" ;;\n\t      esac\n\t    done\n\t  fi # link_all_deplibs != no\n\tfi # linkmode = lib\n      done # for deplib in $libs\n      if test link = \"$pass\"; then\n\tif test prog = \"$linkmode\"; then\n\t  compile_deplibs=\"$new_inherited_linker_flags $compile_deplibs\"\n\t  finalize_deplibs=\"$new_inherited_linker_flags $finalize_deplibs\"\n\telse\n\t  compiler_flags=\"$compiler_flags \"`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfi\n      fi\n      dependency_libs=$newdependency_libs\n      if test dlpreopen = \"$pass\"; then\n\t# Link the dlpreopened libraries before other libraries\n\tfor deplib in $save_deplibs; do\n\t  deplibs=\"$deplib $deplibs\"\n\tdone\n      fi\n      if test dlopen != \"$pass\"; then\n\ttest conv = \"$pass\" || {\n\t  # Make sure lib_search_path contains only unique directories.\n\t  lib_search_path=\n\t  for dir in $newlib_search_path; do\n\t    case \"$lib_search_path \" in\n\t    *\" $dir \"*) ;;\n\t    *) func_append lib_search_path \" $dir\" ;;\n\t    esac\n\t  done\n\t  newlib_search_path=\n\t}\n\n\tif test prog,link = \"$linkmode,$pass\"; then\n\t  vars=\"compile_deplibs finalize_deplibs\"\n\telse\n\t  vars=deplibs\n\tfi\n\tfor var in $vars dependency_libs; do\n\t  # Add libraries to $var in reverse order\n\t  eval tmp_libs=\\\"\\$$var\\\"\n\t  new_libs=\n\t  for deplib in $tmp_libs; do\n\t    # FIXME: Pedantically, this is the right thing to do, so\n\t    #        that some nasty dependency loop isn't accidentally\n\t    #        broken:\n\t    #new_libs=\"$deplib $new_libs\"\n\t    # Pragmatically, this seems to cause very few problems in\n\t    # practice:\n\t    case $deplib in\n\t    -L*) new_libs=\"$deplib $new_libs\" ;;\n\t    -R*) ;;\n\t    *)\n\t      # And here is the reason: when a library appears more\n\t      # than once as an explicit dependence of a library, or\n\t      # is implicitly linked in more than once by the\n\t      # compiler, it is considered special, and multiple\n\t      # occurrences thereof are not removed.  Compare this\n\t      # with having the same library being listed as a\n\t      # dependency of multiple other libraries: in this case,\n\t      # we know (pedantically, we assume) the library does not\n\t      # need to be listed more than once, so we keep only the\n\t      # last copy.  This is not always right, but it is rare\n\t      # enough that we require users that really mean to play\n\t      # such unportable linking tricks to link the library\n\t      # using -Wl,-lname, so that libtool does not consider it\n\t      # for duplicate removal.\n\t      case \" $specialdeplibs \" in\n\t      *\" $deplib \"*) new_libs=\"$deplib $new_libs\" ;;\n\t      *)\n\t\tcase \" $new_libs \" in\n\t\t*\" $deplib \"*) ;;\n\t\t*) new_libs=\"$deplib $new_libs\" ;;\n\t\tesac\n\t\t;;\n\t      esac\n\t      ;;\n\t    esac\n\t  done\n\t  tmp_libs=\n\t  for deplib in $new_libs; do\n\t    case $deplib in\n\t    -L*)\n\t      case \" $tmp_libs \" in\n\t      *\" $deplib \"*) ;;\n\t      *) func_append tmp_libs \" $deplib\" ;;\n\t      esac\n\t      ;;\n\t    *) func_append tmp_libs \" $deplib\" ;;\n\t    esac\n\t  done\n\t  eval $var=\\\"$tmp_libs\\\"\n\tdone # for var\n      fi\n\n      # Add Sun CC postdeps if required:\n      test CXX = \"$tagname\" && {\n        case $host_os in\n        linux*)\n          case `$CC -V 2>&1 | sed 5q` in\n          *Sun\\ C*) # Sun C++ 5.9\n            func_suncc_cstd_abi\n\n            if test no != \"$suncc_use_cstd_abi\"; then\n              func_append postdeps ' -library=Cstd -library=Crun'\n            fi\n            ;;\n          esac\n          ;;\n\n        solaris*)\n          func_cc_basename \"$CC\"\n          case $func_cc_basename_result in\n          CC* | sunCC*)\n            func_suncc_cstd_abi\n\n            if test no != \"$suncc_use_cstd_abi\"; then\n              func_append postdeps ' -library=Cstd -library=Crun'\n            fi\n            ;;\n          esac\n          ;;\n        esac\n      }\n\n      # Last step: remove runtime libs from dependency_libs\n      # (they stay in deplibs)\n      tmp_libs=\n      for i in $dependency_libs; do\n\tcase \" $predeps $postdeps $compiler_lib_search_path \" in\n\t*\" $i \"*)\n\t  i=\n\t  ;;\n\tesac\n\tif test -n \"$i\"; then\n\t  func_append tmp_libs \" $i\"\n\tfi\n      done\n      dependency_libs=$tmp_libs\n    done # for pass\n    if test prog = \"$linkmode\"; then\n      dlfiles=$newdlfiles\n    fi\n    if test prog = \"$linkmode\" || test lib = \"$linkmode\"; then\n      dlprefiles=$newdlprefiles\n    fi\n\n    case $linkmode in\n    oldlib)\n      if test -n \"$dlfiles$dlprefiles\" || test no != \"$dlself\"; then\n\tfunc_warning \"'-dlopen' is ignored for archives\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"'-l' and '-L' are ignored for archives\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"'-rpath' is ignored for archives\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"'-R' is ignored for archives\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"'-version-info/-version-number' is ignored for archives\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"'-release' is ignored for archives\"\n\n      test -n \"$export_symbols$export_symbols_regex\" && \\\n\tfunc_warning \"'-export-symbols' is ignored for archives\"\n\n      # Now set the variables for building old libraries.\n      build_libtool_libs=no\n      oldlibs=$output\n      func_append objs \"$old_deplibs\"\n      ;;\n\n    lib)\n      # Make sure we only generate libraries of the form 'libNAME.la'.\n      case $outputname in\n      lib*)\n\tfunc_stripname 'lib' '.la' \"$outputname\"\n\tname=$func_stripname_result\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval libname=\\\"$libname_spec\\\"\n\t;;\n      *)\n\ttest no = \"$module\" \\\n\t  && func_fatal_help \"libtool library '$output' must begin with 'lib'\"\n\n\tif test no != \"$need_lib_prefix\"; then\n\t  # Add the \"lib\" prefix for modules if required\n\t  func_stripname '' '.la' \"$outputname\"\n\t  name=$func_stripname_result\n\t  eval shared_ext=\\\"$shrext_cmds\\\"\n\t  eval libname=\\\"$libname_spec\\\"\n\telse\n\t  func_stripname '' '.la' \"$outputname\"\n\t  libname=$func_stripname_result\n\tfi\n\t;;\n      esac\n\n      if test -n \"$objs\"; then\n\tif test pass_all != \"$deplibs_check_method\"; then\n\t  func_fatal_error \"cannot build libtool library '$output' from non-libtool objects on this host:$objs\"\n\telse\n\t  echo\n\t  $ECHO \"*** Warning: Linking the shared library $output against the non-libtool\"\n\t  $ECHO \"*** objects $objs is not portable!\"\n\t  func_append libobjs \" $objs\"\n\tfi\n      fi\n\n      test no = \"$dlself\" \\\n\t|| func_warning \"'-dlopen self' is ignored for libtool libraries\"\n\n      set dummy $rpath\n      shift\n      test 1 -lt \"$#\" \\\n\t&& func_warning \"ignoring multiple '-rpath's for a libtool library\"\n\n      install_libdir=$1\n\n      oldlibs=\n      if test -z \"$rpath\"; then\n\tif test yes = \"$build_libtool_libs\"; then\n\t  # Building a libtool convenience library.\n\t  # Some compilers have problems with a '.al' extension so\n\t  # convenience libraries should have the same extension an\n\t  # archive normally would.\n\t  oldlibs=\"$output_objdir/$libname.$libext $oldlibs\"\n\t  build_libtool_libs=convenience\n\t  build_old_libs=yes\n\tfi\n\n\ttest -n \"$vinfo\" && \\\n\t  func_warning \"'-version-info/-version-number' is ignored for convenience libraries\"\n\n\ttest -n \"$release\" && \\\n\t  func_warning \"'-release' is ignored for convenience libraries\"\n      else\n\n\t# Parse the version information argument.\n\tsave_ifs=$IFS; IFS=:\n\tset dummy $vinfo 0 0 0\n\tshift\n\tIFS=$save_ifs\n\n\ttest -n \"$7\" && \\\n\t  func_fatal_help \"too many parameters to '-version-info'\"\n\n\t# convert absolute version numbers to libtool ages\n\t# this retains compatibility with .la files and attempts\n\t# to make the code below a bit more comprehensible\n\n\tcase $vinfo_number in\n\tyes)\n\t  number_major=$1\n\t  number_minor=$2\n\t  number_revision=$3\n\t  #\n\t  # There are really only two kinds -- those that\n\t  # use the current revision as the major version\n\t  # and those that subtract age and use age as\n\t  # a minor version.  But, then there is irix\n\t  # that has an extra 1 added just for fun\n\t  #\n\t  case $version_type in\n\t  # correct linux to gnu/linux during the next big refactor\n\t  darwin|freebsd-elf|linux|osf|windows|none)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=$number_minor\n\t    revision=$number_revision\n\t    ;;\n\t  freebsd-aout|qnx|sunos)\n\t    current=$number_major\n\t    revision=$number_minor\n\t    age=0\n\t    ;;\n\t  irix|nonstopux)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=$number_minor\n\t    revision=$number_minor\n\t    lt_irix_increment=no\n\t    ;;\n\t  esac\n\t  ;;\n\tno)\n\t  current=$1\n\t  revision=$2\n\t  age=$3\n\t  ;;\n\tesac\n\n\t# Check that each of the things are valid numbers.\n\tcase $current in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"CURRENT '$current' must be a nonnegative integer\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $revision in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"REVISION '$revision' must be a nonnegative integer\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $age in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"AGE '$age' must be a nonnegative integer\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tif test \"$age\" -gt \"$current\"; then\n\t  func_error \"AGE '$age' is greater than the current interface number '$current'\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\tfi\n\n\t# Calculate the version variables.\n\tmajor=\n\tversuffix=\n\tverstring=\n\tcase $version_type in\n\tnone) ;;\n\n\tdarwin)\n\t  # Like Linux, but with the current version available in\n\t  # verstring for coding it into the library header\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=$major.$age.$revision\n\t  # Darwin ld doesn't like 0 for these options...\n\t  func_arith $current + 1\n\t  minor_current=$func_arith_result\n\t  xlcverstring=\"$wl-compatibility_version $wl$minor_current $wl-current_version $wl$minor_current.$revision\"\n\t  verstring=\"-compatibility_version $minor_current -current_version $minor_current.$revision\"\n          # On Darwin other compilers\n          case $CC in\n              nagfor*)\n                  verstring=\"$wl-compatibility_version $wl$minor_current $wl-current_version $wl$minor_current.$revision\"\n                  ;;\n              *)\n                  verstring=\"-compatibility_version $minor_current -current_version $minor_current.$revision\"\n                  ;;\n          esac\n\t  ;;\n\n\tfreebsd-aout)\n\t  major=.$current\n\t  versuffix=.$current.$revision\n\t  ;;\n\n\tfreebsd-elf)\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=$major.$age.$revision\n\t  ;;\n\n\tirix | nonstopux)\n\t  if test no = \"$lt_irix_increment\"; then\n\t    func_arith $current - $age\n\t  else\n\t    func_arith $current - $age + 1\n\t  fi\n\t  major=$func_arith_result\n\n\t  case $version_type in\n\t    nonstopux) verstring_prefix=nonstopux ;;\n\t    *)         verstring_prefix=sgi ;;\n\t  esac\n\t  verstring=$verstring_prefix$major.$revision\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$revision\n\t  while test 0 -ne \"$loop\"; do\n\t    func_arith $revision - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=$verstring_prefix$major.$iface:$verstring\n\t  done\n\n\t  # Before this point, $major must not contain '.'.\n\t  major=.$major\n\t  versuffix=$major.$revision\n\t  ;;\n\n\tlinux) # correct to gnu/linux during the next big refactor\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=$major.$age.$revision\n\t  ;;\n\n\tosf)\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=.$current.$age.$revision\n\t  verstring=$current.$age.$revision\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$age\n\t  while test 0 -ne \"$loop\"; do\n\t    func_arith $current - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=$verstring:$iface.0\n\t  done\n\n\t  # Make executables depend on our current version.\n\t  func_append verstring \":$current.0\"\n\t  ;;\n\n\tqnx)\n\t  major=.$current\n\t  versuffix=.$current\n\t  ;;\n\n\tsco)\n\t  major=.$current\n\t  versuffix=.$current\n\t  ;;\n\n\tsunos)\n\t  major=.$current\n\t  versuffix=.$current.$revision\n\t  ;;\n\n\twindows)\n\t  # Use '-' rather than '.', since we only want one\n\t  # extension on DOS 8.3 file systems.\n\t  func_arith $current - $age\n\t  major=$func_arith_result\n\t  versuffix=-$major\n\t  ;;\n\n\t*)\n\t  func_fatal_configuration \"unknown library version type '$version_type'\"\n\t  ;;\n\tesac\n\n\t# Clear the version info if we defaulted, and they specified a release.\n\tif test -z \"$vinfo\" && test -n \"$release\"; then\n\t  major=\n\t  case $version_type in\n\t  darwin)\n\t    # we can't check for \"0.0\" in archive_cmds due to quoting\n\t    # problems, so we reset it completely\n\t    verstring=\n\t    ;;\n\t  *)\n\t    verstring=0.0\n\t    ;;\n\t  esac\n\t  if test no = \"$need_version\"; then\n\t    versuffix=\n\t  else\n\t    versuffix=.0.0\n\t  fi\n\tfi\n\n\t# Remove version info from name if versioning should be avoided\n\tif test yes,no = \"$avoid_version,$need_version\"; then\n\t  major=\n\t  versuffix=\n\t  verstring=\n\tfi\n\n\t# Check to see if the archive will have undefined symbols.\n\tif test yes = \"$allow_undefined\"; then\n\t  if test unsupported = \"$allow_undefined_flag\"; then\n\t    if test yes = \"$build_old_libs\"; then\n\t      func_warning \"undefined symbols not allowed in $host shared libraries; building static only\"\n\t      build_libtool_libs=no\n\t    else\n\t      func_fatal_error \"can't build $host shared library unless -no-undefined is specified\"\n\t    fi\n\t  fi\n\telse\n\t  # Don't allow undefined symbols.\n\t  allow_undefined_flag=$no_undefined_flag\n\tfi\n\n      fi\n\n      func_generate_dlsyms \"$libname\" \"$libname\" :\n      func_append libobjs \" $symfileobj\"\n      test \" \" = \"$libobjs\" && libobjs=\n\n      if test relink != \"$opt_mode\"; then\n\t# Remove our outputs, but don't remove object files since they\n\t# may have been created when compiling PIC objects.\n\tremovelist=\n\ttempremovelist=`$ECHO \"$output_objdir/*\"`\n\tfor p in $tempremovelist; do\n\t  case $p in\n\t    *.$objext | *.gcno)\n\t       ;;\n\t    $output_objdir/$outputname | $output_objdir/$libname.* | $output_objdir/$libname$release.*)\n\t       if test -n \"$precious_files_regex\"; then\n\t\t if $ECHO \"$p\" | $EGREP -e \"$precious_files_regex\" >/dev/null 2>&1\n\t\t then\n\t\t   continue\n\t\t fi\n\t       fi\n\t       func_append removelist \" $p\"\n\t       ;;\n\t    *) ;;\n\t  esac\n\tdone\n\ttest -n \"$removelist\" && \\\n\t  func_show_eval \"${RM}r \\$removelist\"\n      fi\n\n      # Now set the variables for building old libraries.\n      if test yes = \"$build_old_libs\" && test convenience != \"$build_libtool_libs\"; then\n\tfunc_append oldlibs \" $output_objdir/$libname.$libext\"\n\n\t# Transform .lo files to .o files.\n\toldobjs=\"$objs \"`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.$libext$/d; $lo2o\" | $NL2SP`\n      fi\n\n      # Eliminate all temporary directories.\n      #for path in $notinst_path; do\n      #\tlib_search_path=`$ECHO \"$lib_search_path \" | $SED \"s% $path % %g\"`\n      #\tdeplibs=`$ECHO \"$deplibs \" | $SED \"s% -L$path % %g\"`\n      #\tdependency_libs=`$ECHO \"$dependency_libs \" | $SED \"s% -L$path % %g\"`\n      #done\n\n      if test -n \"$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\ttemp_xrpath=\n\tfor libdir in $xrpath; do\n\t  func_replace_sysroot \"$libdir\"\n\t  func_append temp_xrpath \" -R$func_replace_sysroot_result\"\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_rpath \" $libdir\" ;;\n\t  esac\n\tdone\n\tif test yes != \"$hardcode_into_libs\" || test yes = \"$build_old_libs\"; then\n\t  dependency_libs=\"$temp_xrpath $dependency_libs\"\n\tfi\n      fi\n\n      # Make sure dlfiles contains only unique files that won't be dlpreopened\n      old_dlfiles=$dlfiles\n      dlfiles=\n      for lib in $old_dlfiles; do\n\tcase \" $dlprefiles $dlfiles \" in\n\t*\" $lib \"*) ;;\n\t*) func_append dlfiles \" $lib\" ;;\n\tesac\n      done\n\n      # Make sure dlprefiles contains only unique files\n      old_dlprefiles=$dlprefiles\n      dlprefiles=\n      for lib in $old_dlprefiles; do\n\tcase \"$dlprefiles \" in\n\t*\" $lib \"*) ;;\n\t*) func_append dlprefiles \" $lib\" ;;\n\tesac\n      done\n\n      if test yes = \"$build_libtool_libs\"; then\n\tif test -n \"$rpath\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # these systems don't actually have a c library (as such)!\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C library is in the System framework\n\t    func_append deplibs \" System.ltframework\"\n\t    ;;\n\t  *-*-netbsd*)\n\t    # Don't link with libc until the a.out ld.so is fixed.\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    ;;\n\t  *)\n\t    # Add libc to deplibs on all other systems if necessary.\n\t    if test yes = \"$build_libtool_need_lc\"; then\n\t      func_append deplibs \" -lc\"\n\t    fi\n\t    ;;\n\t  esac\n\tfi\n\n\t# Transform deplibs into only deplibs that can be linked in shared.\n\tname_save=$name\n\tlibname_save=$libname\n\trelease_save=$release\n\tversuffix_save=$versuffix\n\tmajor_save=$major\n\t# I'm not sure if I'm treating the release correctly.  I think\n\t# release should show up in the -l (ie -lgmp5) so we don't want to\n\t# add it in twice.  Is that correct?\n\trelease=\n\tversuffix=\n\tmajor=\n\tnewdeplibs=\n\tdroppeddeps=no\n\tcase $deplibs_check_method in\n\tpass_all)\n\t  # Don't check for shared/static.  Everything works.\n\t  # This might be a little naive.  We might want to check\n\t  # whether the library exists or not.  But this is on\n\t  # osf3 & osf4 and I'm not really sure... Just\n\t  # implementing what was already the behavior.\n\t  newdeplibs=$deplibs\n\t  ;;\n\ttest_compile)\n\t  # This code stresses the \"libraries are programs\" paradigm to its\n\t  # limits. Maybe even breaks it.  We compile a program, linking it\n\t  # against the deplibs as a proxy for the library.  Then we can check\n\t  # whether they linked in statically or dynamically with ldd.\n\t  $opt_dry_run || $RM conftest.c\n\t  cat > conftest.c <<EOF\n\t  int main() { return 0; }\nEOF\n\t  $opt_dry_run || $RM conftest\n\t  if $LTCC $LTCFLAGS -o conftest conftest.c $deplibs; then\n\t    ldd_output=`ldd conftest`\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\tif test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\t  case \" $predeps $postdeps \" in\n\t\t  *\" $i \"*)\n\t\t    func_append newdeplibs \" $i\"\n\t\t    i=\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t\tif test -n \"$i\"; then\n\t\t  libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\t  deplib_matches=`eval \"\\\\$ECHO \\\"$library_names_spec\\\"\"`\n\t\t  set dummy $deplib_matches; shift\n\t\t  deplib_match=$1\n\t\t  if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0; then\n\t\t    func_append newdeplibs \" $i\"\n\t\t  else\n\t\t    droppeddeps=yes\n\t\t    echo\n\t\t    $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t    echo \"*** shared version of the library, which I believe you do not have\"\n\t\t    echo \"*** because a test_compile did reveal that the linker did not use it for\"\n\t\t    echo \"*** its dynamic dependency list that programs get resolved with at runtime.\"\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *)\n\t\tfunc_append newdeplibs \" $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  else\n\t    # Error occurred in the first compile.  Let's try to salvage\n\t    # the situation: Compile a separate program for each library.\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\t$opt_dry_run || $RM conftest\n\t\tif $LTCC $LTCFLAGS -o conftest conftest.c $i; then\n\t\t  ldd_output=`ldd conftest`\n\t\t  if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\t    case \" $predeps $postdeps \" in\n\t\t    *\" $i \"*)\n\t\t      func_append newdeplibs \" $i\"\n\t\t      i=\n\t\t      ;;\n\t\t    esac\n\t\t  fi\n\t\t  if test -n \"$i\"; then\n\t\t    libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\t    deplib_matches=`eval \"\\\\$ECHO \\\"$library_names_spec\\\"\"`\n\t\t    set dummy $deplib_matches; shift\n\t\t    deplib_match=$1\n\t\t    if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0; then\n\t\t      func_append newdeplibs \" $i\"\n\t\t    else\n\t\t      droppeddeps=yes\n\t\t      echo\n\t\t      $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t      echo \"*** I have the capability to make that library automatically link in when\"\n\t\t      echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t      echo \"*** shared version of the library, which you do not appear to have\"\n\t\t      echo \"*** because a test_compile did reveal that the linker did not use this one\"\n\t\t      echo \"*** as a dynamic dependency that programs can get resolved with at runtime.\"\n\t\t    fi\n\t\t  fi\n\t\telse\n\t\t  droppeddeps=yes\n\t\t  echo\n\t\t  $ECHO \"*** Warning!  Library $i is needed by this library but I was not able to\"\n\t\t  echo \"*** make it link in!  You will probably need to install it or some\"\n\t\t  echo \"*** library that it depends on before this library will be fully\"\n\t\t  echo \"*** functional.  Installing it before continuing would be even better.\"\n\t\tfi\n\t\t;;\n\t      *)\n\t\tfunc_append newdeplibs \" $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  fi\n\t  ;;\n\tfile_magic*)\n\t  set dummy $deplibs_check_method; shift\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  func_append newdeplibs \" $a_deplib\"\n\t\t  a_deplib=\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tlibname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\tif test -n \"$file_magic_glob\"; then\n\t\t  libnameglob=`func_echo_all \"$libname\" | $SED -e $file_magic_glob`\n\t\telse\n\t\t  libnameglob=$libname\n\t\tfi\n\t\ttest yes = \"$want_nocaseglob\" && nocaseglob=`shopt -p nocaseglob`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  if test yes = \"$want_nocaseglob\"; then\n\t\t    shopt -s nocaseglob\n\t\t    potential_libs=`ls $i/$libnameglob[.-]* 2>/dev/null`\n\t\t    $nocaseglob\n\t\t  else\n\t\t    potential_libs=`ls $i/$libnameglob[.-]* 2>/dev/null`\n\t\t  fi\n\t\t  for potent_lib in $potential_libs; do\n\t\t      # Follow soft links.\n\t\t      if ls -lLd \"$potent_lib\" 2>/dev/null |\n\t\t\t $GREP \" -> \" >/dev/null; then\n\t\t\tcontinue\n\t\t      fi\n\t\t      # The statement above tries to avoid entering an\n\t\t      # endless loop below, in case of cyclic links.\n\t\t      # We might still enter an endless loop, since a link\n\t\t      # loop can be closed while we follow links,\n\t\t      # but so what?\n\t\t      potlib=$potent_lib\n\t\t      while test -h \"$potlib\" 2>/dev/null; do\n\t\t\tpotliblink=`ls -ld $potlib | $SED 's/.* -> //'`\n\t\t\tcase $potliblink in\n\t\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) potlib=$potliblink;;\n\t\t\t*) potlib=`$ECHO \"$potlib\" | $SED 's|[^/]*$||'`\"$potliblink\";;\n\t\t\tesac\n\t\t      done\n\t\t      if eval $file_magic_cmd \\\"\\$potlib\\\" 2>/dev/null |\n\t\t\t $SED -e 10q |\n\t\t\t $EGREP \"$file_magic_regex\" > /dev/null; then\n\t\t\tfunc_append newdeplibs \" $a_deplib\"\n\t\t\ta_deplib=\n\t\t\tbreak 2\n\t\t      fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\"; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for file magic test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a file magic. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      func_append newdeplibs \" $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tmatch_pattern*)\n\t  set dummy $deplibs_check_method; shift\n\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  func_append newdeplibs \" $a_deplib\"\n\t\t  a_deplib=\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tlibname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t  for potent_lib in $potential_libs; do\n\t\t    potlib=$potent_lib # see symlink-check above in file_magic test\n\t\t    if eval \"\\$ECHO \\\"$potent_lib\\\"\" 2>/dev/null | $SED 10q | \\\n\t\t       $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t      func_append newdeplibs \" $a_deplib\"\n\t\t      a_deplib=\n\t\t      break 2\n\t\t    fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\"; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for regex pattern test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a regex pattern. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      func_append newdeplibs \" $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tnone | unknown | *)\n\t  newdeplibs=\n\t  tmp_deplibs=`$ECHO \" $deplibs\" | $SED 's/ -lc$//; s/ -[LR][^ ]*//g'`\n\t  if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t    for i in $predeps $postdeps; do\n\t      # can't use Xsed below, because $i might contain '/'\n\t      tmp_deplibs=`$ECHO \" $tmp_deplibs\" | $SED \"s|$i||\"`\n\t    done\n\t  fi\n\t  case $tmp_deplibs in\n\t  *[!\\\t\\ ]*)\n\t    echo\n\t    if test none = \"$deplibs_check_method\"; then\n\t      echo \"*** Warning: inter-library dependencies are not supported in this platform.\"\n\t    else\n\t      echo \"*** Warning: inter-library dependencies are not known to be supported.\"\n\t    fi\n\t    echo \"*** All declared inter-library dependencies are being dropped.\"\n\t    droppeddeps=yes\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tversuffix=$versuffix_save\n\tmajor=$major_save\n\trelease=$release_save\n\tlibname=$libname_save\n\tname=$name_save\n\n\tcase $host in\n\t*-*-rhapsody* | *-*-darwin1.[012])\n\t  # On Rhapsody replace the C library with the System framework\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t  ;;\n\tesac\n\n\tif test yes = \"$droppeddeps\"; then\n\t  if test yes = \"$module\"; then\n\t    echo\n\t    echo \"*** Warning: libtool could not satisfy all declared inter-library\"\n\t    $ECHO \"*** dependencies of module $libname.  Therefore, libtool will create\"\n\t    echo \"*** a static module, that should work as long as the dlopening\"\n\t    echo \"*** application is linked with the -dlopen flag.\"\n\t    if test -z \"$global_symbol_pipe\"; then\n\t      echo\n\t      echo \"*** However, this would only work if libtool was able to extract symbol\"\n\t      echo \"*** lists from a program, using 'nm' or equivalent, but libtool could\"\n\t      echo \"*** not find such a program.  So, this module is probably useless.\"\n\t      echo \"*** 'nm' from GNU binutils and a full rebuild may help.\"\n\t    fi\n\t    if test no = \"$build_old_libs\"; then\n\t      oldlibs=$output_objdir/$libname.$libext\n\t      build_libtool_libs=module\n\t      build_old_libs=yes\n\t    else\n\t      build_libtool_libs=no\n\t    fi\n\t  else\n\t    echo \"*** The inter-library dependencies that have been dropped here will be\"\n\t    echo \"*** automatically added whenever a program is linked with this library\"\n\t    echo \"*** or is declared to -dlopen it.\"\n\n\t    if test no = \"$allow_undefined\"; then\n\t      echo\n\t      echo \"*** Since this library must not contain undefined symbols,\"\n\t      echo \"*** because either the platform does not support them or\"\n\t      echo \"*** it was explicitly requested with -no-undefined,\"\n\t      echo \"*** libtool will only create a static version of it.\"\n\t      if test no = \"$build_old_libs\"; then\n\t\toldlibs=$output_objdir/$libname.$libext\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  fi\n\tfi\n\t# Done checking deplibs!\n\tdeplibs=$newdeplibs\n      fi\n      # Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n      case $host in\n\t*-*-darwin*)\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  new_inherited_linker_flags=`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  deplibs=`$ECHO \" $deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  ;;\n      esac\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    func_append new_libs \" -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) func_append new_libs \" $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) func_append new_libs \" $deplib\" ;;\n\tesac\n      done\n      deplibs=$new_libs\n\n      # All the library-specific variables (install_libdir is set above).\n      library_names=\n      old_library=\n      dlname=\n\n      # Test again, we may have decided not to build it any more\n      if test yes = \"$build_libtool_libs\"; then\n\t# Remove $wl instances when linking with ld.\n\t# FIXME: should test the right _cmds variable.\n\tcase $archive_cmds in\n\t  *\\$LD\\ *) wl= ;;\n        esac\n\tif test yes = \"$hardcode_into_libs\"; then\n\t  # Hardcode the library paths\n\t  hardcode_libdirs=\n\t  dep_rpath=\n\t  rpath=$finalize_rpath\n\t  test relink = \"$opt_mode\" || rpath=$compile_rpath$rpath\n\t  for libdir in $rpath; do\n\t    if test -n \"$hardcode_libdir_flag_spec\"; then\n\t      if test -n \"$hardcode_libdir_separator\"; then\n\t\tfunc_replace_sysroot \"$libdir\"\n\t\tlibdir=$func_replace_sysroot_result\n\t\tif test -z \"$hardcode_libdirs\"; then\n\t\t  hardcode_libdirs=$libdir\n\t\telse\n\t\t  # Just accumulate the unique libdirs.\n\t\t  case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t\t  *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t    ;;\n\t\t  *)\n\t\t    func_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t      else\n\t\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t\tfunc_append dep_rpath \" $flag\"\n\t      fi\n\t    elif test -n \"$runpath_var\"; then\n\t      case \"$perm_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append perm_rpath \" $libdir\" ;;\n\t      esac\n\t    fi\n\t  done\n\t  # Substitute the hardcoded libdirs into the rpath.\n\t  if test -n \"$hardcode_libdir_separator\" &&\n\t     test -n \"$hardcode_libdirs\"; then\n\t    libdir=$hardcode_libdirs\n\t    eval \"dep_rpath=\\\"$hardcode_libdir_flag_spec\\\"\"\n\t  fi\n\t  if test -n \"$runpath_var\" && test -n \"$perm_rpath\"; then\n\t    # We should set the runpath_var.\n\t    rpath=\n\t    for dir in $perm_rpath; do\n\t      func_append rpath \"$dir:\"\n\t    done\n\t    eval \"$runpath_var='$rpath\\$$runpath_var'; export $runpath_var\"\n\t  fi\n\t  test -n \"$dep_rpath\" && deplibs=\"$dep_rpath $deplibs\"\n\tfi\n\n\tshlibpath=$finalize_shlibpath\n\ttest relink = \"$opt_mode\" || shlibpath=$compile_shlibpath$shlibpath\n\tif test -n \"$shlibpath\"; then\n\t  eval \"$shlibpath_var='$shlibpath\\$$shlibpath_var'; export $shlibpath_var\"\n\tfi\n\n\t# Get the real and link names of the library.\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval library_names=\\\"$library_names_spec\\\"\n\tset dummy $library_names\n\tshift\n\trealname=$1\n\tshift\n\n\tif test -n \"$soname_spec\"; then\n\t  eval soname=\\\"$soname_spec\\\"\n\telse\n\t  soname=$realname\n\tfi\n\tif test -z \"$dlname\"; then\n\t  dlname=$soname\n\tfi\n\n\tlib=$output_objdir/$realname\n\tlinknames=\n\tfor link\n\tdo\n\t  func_append linknames \" $link\"\n\tdone\n\n\t# Use standard objects if they are pic\n\ttest -z \"$pic_flag\" && libobjs=`$ECHO \"$libobjs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\ttest \"X$libobjs\" = \"X \" && libobjs=\n\n\tdelfiles=\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  $opt_dry_run || cp \"$export_symbols\" \"$output_objdir/$libname.uexp\"\n\t  export_symbols=$output_objdir/$libname.uexp\n\t  func_append delfiles \" $export_symbols\"\n\tfi\n\n\torig_export_symbols=\n\tcase $host_os in\n\tcygwin* | mingw* | cegcc*)\n\t  if test -n \"$export_symbols\" && test -z \"$export_symbols_regex\"; then\n\t    # exporting using user supplied symfile\n\t    func_dll_def_p \"$export_symbols\" || {\n\t      # and it's NOT already a .def file. Must figure out\n\t      # which of the given symbols are data symbols and tag\n\t      # them as such. So, trigger use of export_symbols_cmds.\n\t      # export_symbols gets reassigned inside the \"prepare\n\t      # the list of exported symbols\" if statement, so the\n\t      # include_expsyms logic still works.\n\t      orig_export_symbols=$export_symbols\n\t      export_symbols=\n\t      always_export_symbols=yes\n\t    }\n\t  fi\n\t  ;;\n\tesac\n\n\t# Prepare the list of exported symbols\n\tif test -z \"$export_symbols\"; then\n\t  if test yes = \"$always_export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t    func_verbose \"generating symbol list for '$libname.la'\"\n\t    export_symbols=$output_objdir/$libname.exp\n\t    $opt_dry_run || $RM $export_symbols\n\t    cmds=$export_symbols_cmds\n\t    save_ifs=$IFS; IFS='~'\n\t    for cmd1 in $cmds; do\n\t      IFS=$save_ifs\n\t      # Take the normal branch if the nm_file_list_spec branch\n\t      # doesn't work or if tool conversion is not needed.\n\t      case $nm_file_list_spec~$to_tool_file_cmd in\n\t\t*~func_convert_file_noop | *~func_convert_file_msys_to_w32 | ~*)\n\t\t  try_normal_branch=yes\n\t\t  eval cmd=\\\"$cmd1\\\"\n\t\t  func_len \" $cmd\"\n\t\t  len=$func_len_result\n\t\t  ;;\n\t\t*)\n\t\t  try_normal_branch=no\n\t\t  ;;\n\t      esac\n\t      if test yes = \"$try_normal_branch\" \\\n\t\t && { test \"$len\" -lt \"$max_cmd_len\" \\\n\t\t      || test \"$max_cmd_len\" -le -1; }\n\t      then\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\tskipped_export=false\n\t      elif test -n \"$nm_file_list_spec\"; then\n\t\tfunc_basename \"$output\"\n\t\toutput_la=$func_basename_result\n\t\tsave_libobjs=$libobjs\n\t\tsave_output=$output\n\t\toutput=$output_objdir/$output_la.nm\n\t\tfunc_to_tool_file \"$output\"\n\t\tlibobjs=$nm_file_list_spec$func_to_tool_file_result\n\t\tfunc_append delfiles \" $output\"\n\t\tfunc_verbose \"creating $NM input file list: $output\"\n\t\tfor obj in $save_libobjs; do\n\t\t  func_to_tool_file \"$obj\"\n\t\t  $ECHO \"$func_to_tool_file_result\"\n\t\tdone > \"$output\"\n\t\teval cmd=\\\"$cmd1\\\"\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\toutput=$save_output\n\t\tlibobjs=$save_libobjs\n\t\tskipped_export=false\n\t      else\n\t\t# The command line is too long to execute in one step.\n\t\tfunc_verbose \"using reloadable object file for export list...\"\n\t\tskipped_export=:\n\t\t# Break out early, otherwise skipped_export may be\n\t\t# set to false by a later but shorter cmd.\n\t\tbreak\n\t      fi\n\t    done\n\t    IFS=$save_ifs\n\t    if test -n \"$export_symbols_regex\" && test : != \"$skipped_export\"; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  tmp_export_symbols=$export_symbols\n\t  test -n \"$orig_export_symbols\" && tmp_export_symbols=$orig_export_symbols\n\t  $opt_dry_run || eval '$ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"'\n\tfi\n\n\tif test : != \"$skipped_export\" && test -n \"$orig_export_symbols\"; then\n\t  # The given exports_symbols file has to be filtered, so filter it.\n\t  func_verbose \"filter symbol list for '$libname.la' to tag DATA exports\"\n\t  # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t  # 's' commands, which not all seds can handle. GNU sed should be fine\n\t  # though. Also, the filter scales superlinearly with the number of\n\t  # global variables. join(1) would be nice here, but unfortunately\n\t  # isn't a blessed tool.\n\t  $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t  func_append delfiles \" $export_symbols $output_objdir/$libname.filter\"\n\t  export_symbols=$output_objdir/$libname.def\n\t  $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\tfi\n\n\ttmp_deplibs=\n\tfor test_deplib in $deplibs; do\n\t  case \" $convenience \" in\n\t  *\" $test_deplib \"*) ;;\n\t  *)\n\t    func_append tmp_deplibs \" $test_deplib\"\n\t    ;;\n\t  esac\n\tdone\n\tdeplibs=$tmp_deplibs\n\n\tif test -n \"$convenience\"; then\n\t  if test -n \"$whole_archive_flag_spec\" &&\n\t    test yes = \"$compiler_needs_object\" &&\n\t    test -z \"$libobjs\"; then\n\t    # extract the archives, so we have objects to list.\n\t    # TODO: could optimize this to just extract one archive.\n\t    whole_archive_flag_spec=\n\t  fi\n\t  if test -n \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  else\n\t    gentop=$output_objdir/${outputname}x\n\t    func_append generated \" $gentop\"\n\n\t    func_extract_archives $gentop $convenience\n\t    func_append libobjs \" $func_extract_archives_result\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\tfi\n\n\tif test yes = \"$thread_safe\" && test -n \"$thread_safe_flag_spec\"; then\n\t  eval flag=\\\"$thread_safe_flag_spec\\\"\n\t  func_append linker_flags \" $flag\"\n\tfi\n\n\t# Make a backup of the uninstalled library when relinking\n\tif test relink = \"$opt_mode\"; then\n\t  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}U && $MV $realname ${realname}U)' || exit $?\n\tfi\n\n\t# Do each of the archive commands.\n\tif test yes = \"$module\" && test -n \"$module_cmds\"; then\n\t  if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$module_expsym_cmds\\\"\n\t    cmds=$module_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$module_cmds\\\"\n\t    cmds=$module_cmds\n\t  fi\n\telse\n\t  if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$archive_expsym_cmds\\\"\n\t    cmds=$archive_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$archive_cmds\\\"\n\t    cmds=$archive_cmds\n\t  fi\n\tfi\n\n\tif test : != \"$skipped_export\" &&\n\t   func_len \" $test_cmds\" &&\n\t   len=$func_len_result &&\n\t   test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  :\n\telse\n\t  # The command line is too long to link in one step, link piecewise\n\t  # or, if using GNU ld and skipped_export is not :, use a linker\n\t  # script.\n\n\t  # Save the value of $output and $libobjs because we want to\n\t  # use them later.  If we have whole_archive_flag_spec, we\n\t  # want to use save_libobjs as it was before\n\t  # whole_archive_flag_spec was expanded, because we can't\n\t  # assume the linker understands whole_archive_flag_spec.\n\t  # This may have to be revisited, in case too many\n\t  # convenience libraries get linked in and end up exceeding\n\t  # the spec.\n\t  if test -z \"$convenience\" || test -z \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t  fi\n\t  save_output=$output\n\t  func_basename \"$output\"\n\t  output_la=$func_basename_result\n\n\t  # Clear the reloadable object creation command queue and\n\t  # initialize k to one.\n\t  test_cmds=\n\t  concat_cmds=\n\t  objlist=\n\t  last_robj=\n\t  k=1\n\n\t  if test -n \"$save_libobjs\" && test : != \"$skipped_export\" && test yes = \"$with_gnu_ld\"; then\n\t    output=$output_objdir/$output_la.lnkscript\n\t    func_verbose \"creating GNU ld script: $output\"\n\t    echo 'INPUT (' > $output\n\t    for obj in $save_libobjs\n\t    do\n\t      func_to_tool_file \"$obj\"\n\t      $ECHO \"$func_to_tool_file_result\" >> $output\n\t    done\n\t    echo ')' >> $output\n\t    func_append delfiles \" $output\"\n\t    func_to_tool_file \"$output\"\n\t    output=$func_to_tool_file_result\n\t  elif test -n \"$save_libobjs\" && test : != \"$skipped_export\" && test -n \"$file_list_spec\"; then\n\t    output=$output_objdir/$output_la.lnk\n\t    func_verbose \"creating linker input file list: $output\"\n\t    : > $output\n\t    set x $save_libobjs\n\t    shift\n\t    firstobj=\n\t    if test yes = \"$compiler_needs_object\"; then\n\t      firstobj=\"$1 \"\n\t      shift\n\t    fi\n\t    for obj\n\t    do\n\t      func_to_tool_file \"$obj\"\n\t      $ECHO \"$func_to_tool_file_result\" >> $output\n\t    done\n\t    func_append delfiles \" $output\"\n\t    func_to_tool_file \"$output\"\n\t    output=$firstobj\\\"$file_list_spec$func_to_tool_file_result\\\"\n\t  else\n\t    if test -n \"$save_libobjs\"; then\n\t      func_verbose \"creating reloadable object files...\"\n\t      output=$output_objdir/$output_la-$k.$objext\n\t      eval test_cmds=\\\"$reload_cmds\\\"\n\t      func_len \" $test_cmds\"\n\t      len0=$func_len_result\n\t      len=$len0\n\n\t      # Loop over the list of objects to be linked.\n\t      for obj in $save_libobjs\n\t      do\n\t\tfunc_len \" $obj\"\n\t\tfunc_arith $len + $func_len_result\n\t\tlen=$func_arith_result\n\t\tif test -z \"$objlist\" ||\n\t\t   test \"$len\" -lt \"$max_cmd_len\"; then\n\t\t  func_append objlist \" $obj\"\n\t\telse\n\t\t  # The command $test_cmds is almost too long, add a\n\t\t  # command to the queue.\n\t\t  if test 1 -eq \"$k\"; then\n\t\t    # The first file doesn't have a previous command to add.\n\t\t    reload_objs=$objlist\n\t\t    eval concat_cmds=\\\"$reload_cmds\\\"\n\t\t  else\n\t\t    # All subsequent reloadable object files will link in\n\t\t    # the last one created.\n\t\t    reload_objs=\"$objlist $last_robj\"\n\t\t    eval concat_cmds=\\\"\\$concat_cmds~$reload_cmds~\\$RM $last_robj\\\"\n\t\t  fi\n\t\t  last_robj=$output_objdir/$output_la-$k.$objext\n\t\t  func_arith $k + 1\n\t\t  k=$func_arith_result\n\t\t  output=$output_objdir/$output_la-$k.$objext\n\t\t  objlist=\" $obj\"\n\t\t  func_len \" $last_robj\"\n\t\t  func_arith $len0 + $func_len_result\n\t\t  len=$func_arith_result\n\t\tfi\n\t      done\n\t      # Handle the remaining objects by creating one last\n\t      # reloadable object file.  All subsequent reloadable object\n\t      # files will link in the last one created.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      reload_objs=\"$objlist $last_robj\"\n\t      eval concat_cmds=\\\"\\$concat_cmds$reload_cmds\\\"\n\t      if test -n \"$last_robj\"; then\n\t        eval concat_cmds=\\\"\\$concat_cmds~\\$RM $last_robj\\\"\n\t      fi\n\t      func_append delfiles \" $output\"\n\n\t    else\n\t      output=\n\t    fi\n\n\t    ${skipped_export-false} && {\n\t      func_verbose \"generating symbol list for '$libname.la'\"\n\t      export_symbols=$output_objdir/$libname.exp\n\t      $opt_dry_run || $RM $export_symbols\n\t      libobjs=$output\n\t      # Append the command to create the export file.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\$concat_cmds$export_symbols_cmds\\\"\n\t      if test -n \"$last_robj\"; then\n\t\teval concat_cmds=\\\"\\$concat_cmds~\\$RM $last_robj\\\"\n\t      fi\n\t    }\n\n\t    test -n \"$save_libobjs\" &&\n\t      func_verbose \"creating a temporary reloadable object file: $output\"\n\n\t    # Loop through the commands generated above and execute them.\n\t    save_ifs=$IFS; IFS='~'\n\t    for cmd in $concat_cmds; do\n\t      IFS=$save_ifs\n\t      $opt_quiet || {\n\t\t  func_quote_for_expand \"$cmd\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t      }\n\t      $opt_dry_run || eval \"$cmd\" || {\n\t\tlt_exit=$?\n\n\t\t# Restore the uninstalled library and exit\n\t\tif test relink = \"$opt_mode\"; then\n\t\t  ( cd \"$output_objdir\" && \\\n\t\t    $RM \"${realname}T\" && \\\n\t\t    $MV \"${realname}U\" \"$realname\" )\n\t\tfi\n\n\t\texit $lt_exit\n\t      }\n\t    done\n\t    IFS=$save_ifs\n\n\t    if test -n \"$export_symbols_regex\" && ${skipped_export-false}; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\n          ${skipped_export-false} && {\n\t    if test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t      tmp_export_symbols=$export_symbols\n\t      test -n \"$orig_export_symbols\" && tmp_export_symbols=$orig_export_symbols\n\t      $opt_dry_run || eval '$ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"'\n\t    fi\n\n\t    if test -n \"$orig_export_symbols\"; then\n\t      # The given exports_symbols file has to be filtered, so filter it.\n\t      func_verbose \"filter symbol list for '$libname.la' to tag DATA exports\"\n\t      # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t      # 's' commands, which not all seds can handle. GNU sed should be fine\n\t      # though. Also, the filter scales superlinearly with the number of\n\t      # global variables. join(1) would be nice here, but unfortunately\n\t      # isn't a blessed tool.\n\t      $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t      func_append delfiles \" $export_symbols $output_objdir/$libname.filter\"\n\t      export_symbols=$output_objdir/$libname.def\n\t      $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\t    fi\n\t  }\n\n\t  libobjs=$output\n\t  # Restore the value of output.\n\t  output=$save_output\n\n\t  if test -n \"$convenience\" && test -n \"$whole_archive_flag_spec\"; then\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\t  # Expand the library linking commands again to reset the\n\t  # value of $libobjs for piecewise linking.\n\n\t  # Do each of the archive commands.\n\t  if test yes = \"$module\" && test -n \"$module_cmds\"; then\n\t    if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t      cmds=$module_expsym_cmds\n\t    else\n\t      cmds=$module_cmds\n\t    fi\n\t  else\n\t    if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t      cmds=$archive_expsym_cmds\n\t    else\n\t      cmds=$archive_cmds\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$delfiles\"; then\n\t  # Append the command to remove temporary files to $cmds.\n\t  eval cmds=\\\"\\$cmds~\\$RM $delfiles\\\"\n\tfi\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=$output_objdir/${outputname}x\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  func_append libobjs \" $func_extract_archives_result\"\n\t  test \"X$libobjs\" = \"X \" && libobjs=\n\tfi\n\n\tsave_ifs=$IFS; IFS='~'\n\tfor cmd in $cmds; do\n\t  IFS=$sp$nl\n\t  eval cmd=\\\"$cmd\\\"\n\t  IFS=$save_ifs\n\t  $opt_quiet || {\n\t    func_quote_for_expand \"$cmd\"\n\t    eval \"func_echo $func_quote_for_expand_result\"\n\t  }\n\t  $opt_dry_run || eval \"$cmd\" || {\n\t    lt_exit=$?\n\n\t    # Restore the uninstalled library and exit\n\t    if test relink = \"$opt_mode\"; then\n\t      ( cd \"$output_objdir\" && \\\n\t        $RM \"${realname}T\" && \\\n\t\t$MV \"${realname}U\" \"$realname\" )\n\t    fi\n\n\t    exit $lt_exit\n\t  }\n\tdone\n\tIFS=$save_ifs\n\n\t# Restore the uninstalled library and exit\n\tif test relink = \"$opt_mode\"; then\n\t  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}T && $MV $realname ${realname}T && $MV ${realname}U $realname)' || exit $?\n\n\t  if test -n \"$convenience\"; then\n\t    if test -z \"$whole_archive_flag_spec\"; then\n\t      func_show_eval '${RM}r \"$gentop\"'\n\t    fi\n\t  fi\n\n\t  exit $EXIT_SUCCESS\n\tfi\n\n\t# Create links to the real library.\n\tfor linkname in $linknames; do\n\t  if test \"$realname\" != \"$linkname\"; then\n\t    func_show_eval '(cd \"$output_objdir\" && $RM \"$linkname\" && $LN_S \"$realname\" \"$linkname\")' 'exit $?'\n\t  fi\n\tdone\n\n\t# If -module or -export-dynamic was specified, set the dlname.\n\tif test yes = \"$module\" || test yes = \"$export_dynamic\"; then\n\t  # On all known operating systems, these are identical.\n\t  dlname=$soname\n\tfi\n      fi\n      ;;\n\n    obj)\n      if test -n \"$dlfiles$dlprefiles\" || test no != \"$dlself\"; then\n\tfunc_warning \"'-dlopen' is ignored for objects\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"'-l' and '-L' are ignored for objects\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"'-rpath' is ignored for objects\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"'-R' is ignored for objects\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"'-version-info' is ignored for objects\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"'-release' is ignored for objects\"\n\n      case $output in\n      *.lo)\n\ttest -n \"$objs$old_deplibs\" && \\\n\t  func_fatal_error \"cannot build library object '$output' from non-libtool objects\"\n\n\tlibobj=$output\n\tfunc_lo2o \"$libobj\"\n\tobj=$func_lo2o_result\n\t;;\n      *)\n\tlibobj=\n\tobj=$output\n\t;;\n      esac\n\n      # Delete the old objects.\n      $opt_dry_run || $RM $obj $libobj\n\n      # Objects from convenience libraries.  This assumes\n      # single-version convenience libraries.  Whenever we create\n      # different ones for PIC/non-PIC, this we'll have to duplicate\n      # the extraction.\n      reload_conv_objs=\n      gentop=\n      # if reload_cmds runs $LD directly, get rid of -Wl from\n      # whole_archive_flag_spec and hope we can get by with turning comma\n      # into space.\n      case $reload_cmds in\n        *\\$LD[\\ \\$]*) wl= ;;\n      esac\n      if test -n \"$convenience\"; then\n\tif test -n \"$whole_archive_flag_spec\"; then\n\t  eval tmp_whole_archive_flags=\\\"$whole_archive_flag_spec\\\"\n\t  test -n \"$wl\" || tmp_whole_archive_flags=`$ECHO \"$tmp_whole_archive_flags\" | $SED 's|,| |g'`\n\t  reload_conv_objs=$reload_objs\\ $tmp_whole_archive_flags\n\telse\n\t  gentop=$output_objdir/${obj}x\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $convenience\n\t  reload_conv_objs=\"$reload_objs $func_extract_archives_result\"\n\tfi\n      fi\n\n      # If we're not building shared, we need to use non_pic_objs\n      test yes = \"$build_libtool_libs\" || libobjs=$non_pic_objects\n\n      # Create the old-style object.\n      reload_objs=$objs$old_deplibs' '`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.$libext$/d; /\\.lib$/d; $lo2o\" | $NL2SP`' '$reload_conv_objs\n\n      output=$obj\n      func_execute_cmds \"$reload_cmds\" 'exit $?'\n\n      # Exit if we aren't doing a library object file.\n      if test -z \"$libobj\"; then\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      test yes = \"$build_libtool_libs\" || {\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\t# Create an invalid libtool object if no PIC, so that we don't\n\t# accidentally link it into a program.\n\t# $show \"echo timestamp > $libobj\"\n\t# $opt_dry_run || eval \"echo timestamp > $libobj\" || exit $?\n\texit $EXIT_SUCCESS\n      }\n\n      if test -n \"$pic_flag\" || test default != \"$pic_mode\"; then\n\t# Only do commands if we really have different PIC objects.\n\treload_objs=\"$libobjs $reload_conv_objs\"\n\toutput=$libobj\n\tfunc_execute_cmds \"$reload_cmds\" 'exit $?'\n      fi\n\n      if test -n \"$gentop\"; then\n\tfunc_show_eval '${RM}r \"$gentop\"'\n      fi\n\n      exit $EXIT_SUCCESS\n      ;;\n\n    prog)\n      case $host in\n\t*cygwin*) func_stripname '' '.exe' \"$output\"\n\t          output=$func_stripname_result.exe;;\n      esac\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"'-version-info' is ignored for programs\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"'-release' is ignored for programs\"\n\n      $preload \\\n\t&& test unknown,unknown,unknown = \"$dlopen_support,$dlopen_self,$dlopen_self_static\" \\\n\t&& func_warning \"'LT_INIT([dlopen])' not used. Assuming no dlopen support.\"\n\n      case $host in\n      *-*-rhapsody* | *-*-darwin1.[012])\n\t# On Rhapsody replace the C library is the System framework\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t;;\n      esac\n\n      case $host in\n      *-*-darwin*)\n\t# Don't allow lazy linking, it breaks C++ global constructors\n\t# But is supposedly fixed on 10.4 or later (yay!).\n\tif test CXX = \"$tagname\"; then\n\t  case ${MACOSX_DEPLOYMENT_TARGET-10.0} in\n\t    10.[0123])\n\t      func_append compile_command \" $wl-bind_at_load\"\n\t      func_append finalize_command \" $wl-bind_at_load\"\n\t    ;;\n\t  esac\n\tfi\n\t# Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t;;\n      esac\n\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $compile_deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    func_append new_libs \" -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $compile_deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) func_append new_libs \" $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) func_append new_libs \" $deplib\" ;;\n\tesac\n      done\n      compile_deplibs=$new_libs\n\n\n      func_append compile_command \" $compile_deplibs\"\n      func_append finalize_command \" $finalize_deplibs\"\n\n      if test -n \"$rpath$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\tfor libdir in $rpath $xrpath; do\n\t  # This is the magic to use -rpath.\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_rpath \" $libdir\" ;;\n\t  esac\n\tdone\n      fi\n\n      # Now hardcode the library paths\n      rpath=\n      hardcode_libdirs=\n      for libdir in $compile_rpath $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=$libdir\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\tfunc_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    func_append rpath \" $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append perm_rpath \" $libdir\" ;;\n\t  esac\n\tfi\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`$ECHO \"$libdir\" | $SED -e 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$libdir:\"*) ;;\n\t  ::) dllsearchpath=$libdir;;\n\t  *) func_append dllsearchpath \":$libdir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) func_append dllsearchpath \":$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=$hardcode_libdirs\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      compile_rpath=$rpath\n\n      rpath=\n      hardcode_libdirs=\n      for libdir in $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=$libdir\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\tfunc_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    func_append rpath \" $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$finalize_perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_perm_rpath \" $libdir\" ;;\n\t  esac\n\tfi\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=$hardcode_libdirs\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      finalize_rpath=$rpath\n\n      if test -n \"$libobjs\" && test yes = \"$build_old_libs\"; then\n\t# Transform all the library objects into standard objects.\n\tcompile_command=`$ECHO \"$compile_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\tfinalize_command=`$ECHO \"$finalize_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n      fi\n\n      func_generate_dlsyms \"$outputname\" \"@PROGRAM@\" false\n\n      # template prelinking step\n      if test -n \"$prelink_cmds\"; then\n\tfunc_execute_cmds \"$prelink_cmds\" 'exit $?'\n      fi\n\n      wrappers_required=:\n      case $host in\n      *cegcc* | *mingw32ce*)\n        # Disable wrappers for cegcc and mingw32ce hosts, we are cross compiling anyway.\n        wrappers_required=false\n        ;;\n      *cygwin* | *mingw* )\n        test yes = \"$build_libtool_libs\" || wrappers_required=false\n        ;;\n      *)\n        if test no = \"$need_relink\" || test yes != \"$build_libtool_libs\"; then\n          wrappers_required=false\n        fi\n        ;;\n      esac\n      $wrappers_required || {\n\t# Replace the output file specification.\n\tcompile_command=`$ECHO \"$compile_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\tlink_command=$compile_command$compile_rpath\n\n\t# We have no uninstalled library dependencies, so finalize right now.\n\texit_status=0\n\tfunc_show_eval \"$link_command\" 'exit_status=$?'\n\n\tif test -n \"$postlink_cmds\"; then\n\t  func_to_tool_file \"$output\"\n\t  postlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\t  func_execute_cmds \"$postlink_cmds\" 'exit $?'\n\tfi\n\n\t# Delete the generated files.\n\tif test -f \"$output_objdir/${outputname}S.$objext\"; then\n\t  func_show_eval '$RM \"$output_objdir/${outputname}S.$objext\"'\n\tfi\n\n\texit $exit_status\n      }\n\n      if test -n \"$compile_shlibpath$finalize_shlibpath\"; then\n\tcompile_command=\"$shlibpath_var=\\\"$compile_shlibpath$finalize_shlibpath\\$$shlibpath_var\\\" $compile_command\"\n      fi\n      if test -n \"$finalize_shlibpath\"; then\n\tfinalize_command=\"$shlibpath_var=\\\"$finalize_shlibpath\\$$shlibpath_var\\\" $finalize_command\"\n      fi\n\n      compile_var=\n      finalize_var=\n      if test -n \"$runpath_var\"; then\n\tif test -n \"$perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $perm_rpath; do\n\t    func_append rpath \"$dir:\"\n\t  done\n\t  compile_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n\tif test -n \"$finalize_perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $finalize_perm_rpath; do\n\t    func_append rpath \"$dir:\"\n\t  done\n\t  finalize_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n      fi\n\n      if test yes = \"$no_install\"; then\n\t# We don't need to create a wrapper script.\n\tlink_command=$compile_var$compile_command$compile_rpath\n\t# Replace the output file specification.\n\tlink_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\t# Delete the old output file.\n\t$opt_dry_run || $RM $output\n\t# Link the executable and exit\n\tfunc_show_eval \"$link_command\" 'exit $?'\n\n\tif test -n \"$postlink_cmds\"; then\n\t  func_to_tool_file \"$output\"\n\t  postlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\t  func_execute_cmds \"$postlink_cmds\" 'exit $?'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      case $hardcode_action,$fast_install in\n        relink,*)\n\t  # Fast installation is not supported\n\t  link_command=$compile_var$compile_command$compile_rpath\n\t  relink_command=$finalize_var$finalize_command$finalize_rpath\n\n\t  func_warning \"this platform does not like uninstalled shared libraries\"\n\t  func_warning \"'$output' will be relinked during installation\"\n\t  ;;\n        *,yes)\n\t  link_command=$finalize_var$compile_command$finalize_rpath\n\t  relink_command=`$ECHO \"$compile_var$compile_command$compile_rpath\" | $SED 's%@OUTPUT@%\\$progdir/\\$file%g'`\n          ;;\n\t*,no)\n\t  link_command=$compile_var$compile_command$compile_rpath\n\t  relink_command=$finalize_var$finalize_command$finalize_rpath\n          ;;\n\t*,needless)\n\t  link_command=$finalize_var$compile_command$finalize_rpath\n\t  relink_command=\n          ;;\n      esac\n\n      # Replace the output file specification.\n      link_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g'`\n\n      # Delete the old output files.\n      $opt_dry_run || $RM $output $output_objdir/$outputname $output_objdir/lt-$outputname\n\n      func_show_eval \"$link_command\" 'exit $?'\n\n      if test -n \"$postlink_cmds\"; then\n\tfunc_to_tool_file \"$output_objdir/$outputname\"\n\tpostlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\tfunc_execute_cmds \"$postlink_cmds\" 'exit $?'\n      fi\n\n      # Now create the wrapper script.\n      func_verbose \"creating $output\"\n\n      # Quote the relink command for shipping.\n      if test -n \"$relink_command\"; then\n\t# Preserve any variables that may affect compiler behavior\n\tfor var in $variables_saved_for_relink; do\n\t  if eval test -z \\\"\\${$var+set}\\\"; then\n\t    relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\t  elif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t    relink_command=\"$var=; export $var; $relink_command\"\n\t  else\n\t    func_quote_for_eval \"$var_value\"\n\t    relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\t  fi\n\tdone\n\trelink_command=\"(cd `pwd`; $relink_command)\"\n\trelink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      fi\n\n      # Only actually do things if not in dry run mode.\n      $opt_dry_run || {\n\t# win32 will think the script is a binary if it has\n\t# a .exe suffix, so we strip it off here.\n\tcase $output in\n\t  *.exe) func_stripname '' '.exe' \"$output\"\n\t         output=$func_stripname_result ;;\n\tesac\n\t# test for cygwin because mv fails w/o .exe extensions\n\tcase $host in\n\t  *cygwin*)\n\t    exeext=.exe\n\t    func_stripname '' '.exe' \"$outputname\"\n\t    outputname=$func_stripname_result ;;\n\t  *) exeext= ;;\n\tesac\n\tcase $host in\n\t  *cygwin* | *mingw* )\n\t    func_dirname_and_basename \"$output\" \"\" \".\"\n\t    output_name=$func_basename_result\n\t    output_path=$func_dirname_result\n\t    cwrappersource=$output_path/$objdir/lt-$output_name.c\n\t    cwrapper=$output_path/$output_name.exe\n\t    $RM $cwrappersource $cwrapper\n\t    trap \"$RM $cwrappersource $cwrapper; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_cwrapperexe_src > $cwrappersource\n\n\t    # The wrapper executable is built using the $host compiler,\n\t    # because it contains $host paths and files. If cross-\n\t    # compiling, it, like the target executable, must be\n\t    # executed on the $host or under an emulation environment.\n\t    $opt_dry_run || {\n\t      $LTCC $LTCFLAGS -o $cwrapper $cwrappersource\n\t      $STRIP $cwrapper\n\t    }\n\n\t    # Now, create the wrapper script for func_source use:\n\t    func_ltwrapper_scriptname $cwrapper\n\t    $RM $func_ltwrapper_scriptname_result\n\t    trap \"$RM $func_ltwrapper_scriptname_result; exit $EXIT_FAILURE\" 1 2 15\n\t    $opt_dry_run || {\n\t      # note: this script will not be executed, so do not chmod.\n\t      if test \"x$build\" = \"x$host\"; then\n\t\t$cwrapper --lt-dump-script > $func_ltwrapper_scriptname_result\n\t      else\n\t\tfunc_emit_wrapper no > $func_ltwrapper_scriptname_result\n\t      fi\n\t    }\n\t  ;;\n\t  * )\n\t    $RM $output\n\t    trap \"$RM $output; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_wrapper no > $output\n\t    chmod +x $output\n\t  ;;\n\tesac\n      }\n      exit $EXIT_SUCCESS\n      ;;\n    esac\n\n    # See if we need to build an old-fashioned archive.\n    for oldlib in $oldlibs; do\n\n      case $build_libtool_libs in\n        convenience)\n\t  oldobjs=\"$libobjs_save $symfileobj\"\n\t  addlibs=$convenience\n\t  build_libtool_libs=no\n\t  ;;\n\tmodule)\n\t  oldobjs=$libobjs_save\n\t  addlibs=$old_convenience\n\t  build_libtool_libs=no\n          ;;\n\t*)\n\t  oldobjs=\"$old_deplibs $non_pic_objects\"\n\t  $preload && test -f \"$symfileobj\" \\\n\t    && func_append oldobjs \" $symfileobj\"\n\t  addlibs=$old_convenience\n\t  ;;\n      esac\n\n      if test -n \"$addlibs\"; then\n\tgentop=$output_objdir/${outputname}x\n\tfunc_append generated \" $gentop\"\n\n\tfunc_extract_archives $gentop $addlibs\n\tfunc_append oldobjs \" $func_extract_archives_result\"\n      fi\n\n      # Do each command in the archive commands.\n      if test -n \"$old_archive_from_new_cmds\" && test yes = \"$build_libtool_libs\"; then\n\tcmds=$old_archive_from_new_cmds\n      else\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=$output_objdir/${outputname}x\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  func_append oldobjs \" $func_extract_archives_result\"\n\tfi\n\n\t# POSIX demands no paths to be encoded in archives.  We have\n\t# to avoid creating archives with duplicate basenames if we\n\t# might have to extract them afterwards, e.g., when creating a\n\t# static archive out of a convenience library, or when linking\n\t# the entirety of a libtool archive into another (currently\n\t# not supported by libtool).\n\tif (for obj in $oldobjs\n\t    do\n\t      func_basename \"$obj\"\n\t      $ECHO \"$func_basename_result\"\n\t    done | sort | sort -uc >/dev/null 2>&1); then\n\t  :\n\telse\n\t  echo \"copying selected object files to avoid basename conflicts...\"\n\t  gentop=$output_objdir/${outputname}x\n\t  func_append generated \" $gentop\"\n\t  func_mkdir_p \"$gentop\"\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  counter=1\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_basename \"$obj\"\n\t    objbase=$func_basename_result\n\t    case \" $oldobjs \" in\n\t    \" \") oldobjs=$obj ;;\n\t    *[\\ /]\"$objbase \"*)\n\t      while :; do\n\t\t# Make sure we don't pick an alternate name that also\n\t\t# overlaps.\n\t\tnewobj=lt$counter-$objbase\n\t\tfunc_arith $counter + 1\n\t\tcounter=$func_arith_result\n\t\tcase \" $oldobjs \" in\n\t\t*[\\ /]\"$newobj \"*) ;;\n\t\t*) if test ! -f \"$gentop/$newobj\"; then break; fi ;;\n\t\tesac\n\t      done\n\t      func_show_eval \"ln $obj $gentop/$newobj || cp $obj $gentop/$newobj\"\n\t      func_append oldobjs \" $gentop/$newobj\"\n\t      ;;\n\t    *) func_append oldobjs \" $obj\" ;;\n\t    esac\n\t  done\n\tfi\n\tfunc_to_tool_file \"$oldlib\" func_convert_file_msys_to_w32\n\ttool_oldlib=$func_to_tool_file_result\n\teval cmds=\\\"$old_archive_cmds\\\"\n\n\tfunc_len \" $cmds\"\n\tlen=$func_len_result\n\tif test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  cmds=$old_archive_cmds\n\telif test -n \"$archiver_list_spec\"; then\n\t  func_verbose \"using command file archive linking...\"\n\t  for obj in $oldobjs\n\t  do\n\t    func_to_tool_file \"$obj\"\n\t    $ECHO \"$func_to_tool_file_result\"\n\t  done > $output_objdir/$libname.libcmd\n\t  func_to_tool_file \"$output_objdir/$libname.libcmd\"\n\t  oldobjs=\" $archiver_list_spec$func_to_tool_file_result\"\n\t  cmds=$old_archive_cmds\n\telse\n\t  # the command line is too long to link in one step, link in parts\n\t  func_verbose \"using piecewise archive linking...\"\n\t  save_RANLIB=$RANLIB\n\t  RANLIB=:\n\t  objlist=\n\t  concat_cmds=\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  # Is there a better way of finding the last object in the list?\n\t  for obj in $save_oldobjs\n\t  do\n\t    last_oldobj=$obj\n\t  done\n\t  eval test_cmds=\\\"$old_archive_cmds\\\"\n\t  func_len \" $test_cmds\"\n\t  len0=$func_len_result\n\t  len=$len0\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_len \" $obj\"\n\t    func_arith $len + $func_len_result\n\t    len=$func_arith_result\n\t    func_append objlist \" $obj\"\n\t    if test \"$len\" -lt \"$max_cmd_len\"; then\n\t      :\n\t    else\n\t      # the above command should be used before it gets too long\n\t      oldobjs=$objlist\n\t      if test \"$obj\" = \"$last_oldobj\"; then\n\t\tRANLIB=$save_RANLIB\n\t      fi\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\$concat_cmds$old_archive_cmds\\\"\n\t      objlist=\n\t      len=$len0\n\t    fi\n\t  done\n\t  RANLIB=$save_RANLIB\n\t  oldobjs=$objlist\n\t  if test -z \"$oldobjs\"; then\n\t    eval cmds=\\\"\\$concat_cmds\\\"\n\t  else\n\t    eval cmds=\\\"\\$concat_cmds~\\$old_archive_cmds\\\"\n\t  fi\n\tfi\n      fi\n      func_execute_cmds \"$cmds\" 'exit $?'\n    done\n\n    test -n \"$generated\" && \\\n      func_show_eval \"${RM}r$generated\"\n\n    # Now create the libtool archive.\n    case $output in\n    *.la)\n      old_library=\n      test yes = \"$build_old_libs\" && old_library=$libname.$libext\n      func_verbose \"creating $output\"\n\n      # Preserve any variables that may affect compiler behavior\n      for var in $variables_saved_for_relink; do\n\tif eval test -z \\\"\\${$var+set}\\\"; then\n\t  relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\telif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t  relink_command=\"$var=; export $var; $relink_command\"\n\telse\n\t  func_quote_for_eval \"$var_value\"\n\t  relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\tfi\n      done\n      # Quote the link command for shipping.\n      relink_command=\"(cd `pwd`; $SHELL \\\"$progpath\\\" $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)\"\n      relink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      if test yes = \"$hardcode_automatic\"; then\n\trelink_command=\n      fi\n\n      # Only create the output if not a dry run.\n      $opt_dry_run || {\n\tfor installed in no yes; do\n\t  if test yes = \"$installed\"; then\n\t    if test -z \"$install_libdir\"; then\n\t      break\n\t    fi\n\t    output=$output_objdir/${outputname}i\n\t    # Replace all uninstalled libtool libraries with the installed ones\n\t    newdependency_libs=\n\t    for deplib in $dependency_libs; do\n\t      case $deplib in\n\t      *.la)\n\t\tfunc_basename \"$deplib\"\n\t\tname=$func_basename_result\n\t\tfunc_resolve_sysroot \"$deplib\"\n\t\teval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $func_resolve_sysroot_result`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"'$deplib' is not a valid libtool archive\"\n\t\tfunc_append newdependency_libs \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      -L*)\n\t\tfunc_stripname -L '' \"$deplib\"\n\t\tfunc_replace_sysroot \"$func_stripname_result\"\n\t\tfunc_append newdependency_libs \" -L$func_replace_sysroot_result\"\n\t\t;;\n\t      -R*)\n\t\tfunc_stripname -R '' \"$deplib\"\n\t\tfunc_replace_sysroot \"$func_stripname_result\"\n\t\tfunc_append newdependency_libs \" -R$func_replace_sysroot_result\"\n\t\t;;\n\t      *) func_append newdependency_libs \" $deplib\" ;;\n\t      esac\n\t    done\n\t    dependency_libs=$newdependency_libs\n\t    newdlfiles=\n\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t      *.la)\n\t        func_basename \"$lib\"\n\t\tname=$func_basename_result\n\t\teval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"'$lib' is not a valid libtool archive\"\n\t\tfunc_append newdlfiles \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      *) func_append newdlfiles \" $lib\" ;;\n\t      esac\n\t    done\n\t    dlfiles=$newdlfiles\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t      *.la)\n\t\t# Only pass preopened files to the pseudo-archive (for\n\t\t# eventual linking with the app. that links it) if we\n\t\t# didn't already link the preopened objects directly into\n\t\t# the library:\n\t\tfunc_basename \"$lib\"\n\t\tname=$func_basename_result\n\t\teval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"'$lib' is not a valid libtool archive\"\n\t\tfunc_append newdlprefiles \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      esac\n\t    done\n\t    dlprefiles=$newdlprefiles\n\t  else\n\t    newdlfiles=\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=$lib ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      func_append newdlfiles \" $abs\"\n\t    done\n\t    dlfiles=$newdlfiles\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=$lib ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      func_append newdlprefiles \" $abs\"\n\t    done\n\t    dlprefiles=$newdlprefiles\n\t  fi\n\t  $RM $output\n\t  # place dlname in correct position for cygwin\n\t  # In fact, it would be nice if we could use this code for all target\n\t  # systems that can't hard-code library paths into their executables\n\t  # and that have no shared library path variable independent of PATH,\n\t  # but it turns out we can't easily determine that from inspecting\n\t  # libtool variables, so we have to hard-code the OSs to which it\n\t  # applies here; at the moment, that means platforms that use the PE\n\t  # object format with DLL files.  See the long comment at the top of\n\t  # tests/bindir.at for full details.\n\t  tdlname=$dlname\n\t  case $host,$output,$installed,$module,$dlname in\n\t    *cygwin*,*lai,yes,no,*.dll | *mingw*,*lai,yes,no,*.dll | *cegcc*,*lai,yes,no,*.dll)\n\t      # If a -bindir argument was supplied, place the dll there.\n\t      if test -n \"$bindir\"; then\n\t\tfunc_relative_path \"$install_libdir\" \"$bindir\"\n\t\ttdlname=$func_relative_path_result/$dlname\n\t      else\n\t\t# Otherwise fall back on heuristic.\n\t\ttdlname=../bin/$dlname\n\t      fi\n\t      ;;\n\t  esac\n\t  $ECHO > $output \"\\\n# $outputname - a libtool library file\n# Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# The name that we can dlopen(3).\ndlname='$tdlname'\n\n# Names of this library.\nlibrary_names='$library_names'\n\n# The name of the static archive.\nold_library='$old_library'\n\n# Linker flags that cannot go in dependency_libs.\ninherited_linker_flags='$new_inherited_linker_flags'\n\n# Libraries that this one depends upon.\ndependency_libs='$dependency_libs'\n\n# Names of additional weak libraries provided by this library\nweak_library_names='$weak_libs'\n\n# Version information for $libname.\ncurrent=$current\nage=$age\nrevision=$revision\n\n# Is this an already installed library?\ninstalled=$installed\n\n# Should we warn about portability when linking against -modules?\nshouldnotlink=$module\n\n# Files to dlopen/dlpreopen\ndlopen='$dlfiles'\ndlpreopen='$dlprefiles'\n\n# Directory that this library needs to be installed in:\nlibdir='$install_libdir'\"\n\t  if test no,yes = \"$installed,$need_relink\"; then\n\t    $ECHO >> $output \"\\\nrelink_command=\\\"$relink_command\\\"\"\n\t  fi\n\tdone\n      }\n\n      # Do a symbolic link so that the libtool archive can be found in\n      # LD_LIBRARY_PATH before the program is installed.\n      func_show_eval '( cd \"$output_objdir\" && $RM \"$outputname\" && $LN_S \"../$outputname\" \"$outputname\" )' 'exit $?'\n      ;;\n    esac\n    exit $EXIT_SUCCESS\n}\n\nif test link = \"$opt_mode\" || test relink = \"$opt_mode\"; then\n  func_mode_link ${1+\"$@\"}\nfi\n\n\n# func_mode_uninstall arg...\nfunc_mode_uninstall ()\n{\n    $debug_cmd\n\n    RM=$nonopt\n    files=\n    rmforce=false\n    exit_status=0\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=$magic\n\n    for arg\n    do\n      case $arg in\n      -f) func_append RM \" $arg\"; rmforce=: ;;\n      -*) func_append RM \" $arg\" ;;\n      *) func_append files \" $arg\" ;;\n      esac\n    done\n\n    test -z \"$RM\" && \\\n      func_fatal_help \"you must specify an RM program\"\n\n    rmdirs=\n\n    for file in $files; do\n      func_dirname \"$file\" \"\" \".\"\n      dir=$func_dirname_result\n      if test . = \"$dir\"; then\n\todir=$objdir\n      else\n\todir=$dir/$objdir\n      fi\n      func_basename \"$file\"\n      name=$func_basename_result\n      test uninstall = \"$opt_mode\" && odir=$dir\n\n      # Remember odir for removal later, being careful to avoid duplicates\n      if test clean = \"$opt_mode\"; then\n\tcase \" $rmdirs \" in\n\t  *\" $odir \"*) ;;\n\t  *) func_append rmdirs \" $odir\" ;;\n\tesac\n      fi\n\n      # Don't error if the file doesn't exist and rm -f was used.\n      if { test -L \"$file\"; } >/dev/null 2>&1 ||\n\t { test -h \"$file\"; } >/dev/null 2>&1 ||\n\t test -f \"$file\"; then\n\t:\n      elif test -d \"$file\"; then\n\texit_status=1\n\tcontinue\n      elif $rmforce; then\n\tcontinue\n      fi\n\n      rmfiles=$file\n\n      case $name in\n      *.la)\n\t# Possibly a libtool archive, so verify it.\n\tif func_lalib_p \"$file\"; then\n\t  func_source $dir/$name\n\n\t  # Delete the libtool libraries and symlinks.\n\t  for n in $library_names; do\n\t    func_append rmfiles \" $odir/$n\"\n\t  done\n\t  test -n \"$old_library\" && func_append rmfiles \" $odir/$old_library\"\n\n\t  case $opt_mode in\n\t  clean)\n\t    case \" $library_names \" in\n\t    *\" $dlname \"*) ;;\n\t    *) test -n \"$dlname\" && func_append rmfiles \" $odir/$dlname\" ;;\n\t    esac\n\t    test -n \"$libdir\" && func_append rmfiles \" $odir/$name $odir/${name}i\"\n\t    ;;\n\t  uninstall)\n\t    if test -n \"$library_names\"; then\n\t      # Do each command in the postuninstall commands.\n\t      func_execute_cmds \"$postuninstall_cmds\" '$rmforce || exit_status=1'\n\t    fi\n\n\t    if test -n \"$old_library\"; then\n\t      # Do each command in the old_postuninstall commands.\n\t      func_execute_cmds \"$old_postuninstall_cmds\" '$rmforce || exit_status=1'\n\t    fi\n\t    # FIXME: should reinstall the best remaining shared library.\n\t    ;;\n\t  esac\n\tfi\n\t;;\n\n      *.lo)\n\t# Possibly a libtool object, so verify it.\n\tif func_lalib_p \"$file\"; then\n\n\t  # Read the .lo file\n\t  func_source $dir/$name\n\n\t  # Add PIC object to the list of files to remove.\n\t  if test -n \"$pic_object\" && test none != \"$pic_object\"; then\n\t    func_append rmfiles \" $dir/$pic_object\"\n\t  fi\n\n\t  # Add non-PIC object to the list of files to remove.\n\t  if test -n \"$non_pic_object\" && test none != \"$non_pic_object\"; then\n\t    func_append rmfiles \" $dir/$non_pic_object\"\n\t  fi\n\tfi\n\t;;\n\n      *)\n\tif test clean = \"$opt_mode\"; then\n\t  noexename=$name\n\t  case $file in\n\t  *.exe)\n\t    func_stripname '' '.exe' \"$file\"\n\t    file=$func_stripname_result\n\t    func_stripname '' '.exe' \"$name\"\n\t    noexename=$func_stripname_result\n\t    # $file with .exe has already been added to rmfiles,\n\t    # add $file without .exe\n\t    func_append rmfiles \" $file\"\n\t    ;;\n\t  esac\n\t  # Do a test to see if this is a libtool program.\n\t  if func_ltwrapper_p \"$file\"; then\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      relink_command=\n\t      func_source $func_ltwrapper_scriptname_result\n\t      func_append rmfiles \" $func_ltwrapper_scriptname_result\"\n\t    else\n\t      relink_command=\n\t      func_source $dir/$noexename\n\t    fi\n\n\t    # note $name still contains .exe if it was in $file originally\n\t    # as does the version of $file that was added into $rmfiles\n\t    func_append rmfiles \" $odir/$name $odir/${name}S.$objext\"\n\t    if test yes = \"$fast_install\" && test -n \"$relink_command\"; then\n\t      func_append rmfiles \" $odir/lt-$name\"\n\t    fi\n\t    if test \"X$noexename\" != \"X$name\"; then\n\t      func_append rmfiles \" $odir/lt-$noexename.c\"\n\t    fi\n\t  fi\n\tfi\n\t;;\n      esac\n      func_show_eval \"$RM $rmfiles\" 'exit_status=1'\n    done\n\n    # Try to remove the $objdir's in the directories where we deleted files\n    for dir in $rmdirs; do\n      if test -d \"$dir\"; then\n\tfunc_show_eval \"rmdir $dir >/dev/null 2>&1\"\n      fi\n    done\n\n    exit $exit_status\n}\n\nif test uninstall = \"$opt_mode\" || test clean = \"$opt_mode\"; then\n  func_mode_uninstall ${1+\"$@\"}\nfi\n\ntest -z \"$opt_mode\" && {\n  help=$generic_help\n  func_fatal_help \"you must specify a MODE\"\n}\n\ntest -z \"$exec_cmd\" && \\\n  func_fatal_help \"invalid operation mode '$opt_mode'\"\n\nif test -n \"$exec_cmd\"; then\n  eval exec \"$exec_cmd\"\n  exit $EXIT_FAILURE\nfi\n\nexit $exit_status\n\n\n# The TAGs below are defined such that we never get into a situation\n# where we disable both kinds of libraries.  Given conflicting\n# choices, we go for a static library, that is the most portable,\n# since we can't tell whether shared libraries were disabled because\n# the user asked for that or because the platform doesn't support\n# them.  This is particularly important on AIX, because we don't\n# support having both static and shared libraries enabled at the same\n# time on that platform, so we default to a shared-only configuration.\n# If a disable-shared tag is given, we'll fallback to a static-only\n# configuration.  But we'll never go from static-only to shared-only.\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-shared\nbuild_libtool_libs=no\nbuild_old_libs=yes\n# ### END LIBTOOL TAG CONFIG: disable-shared\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-static\nbuild_old_libs=`case $build_libtool_libs in yes) echo no;; *) echo yes;; esac`\n# ### END LIBTOOL TAG CONFIG: disable-static\n\n# Local Variables:\n# mode:shell-script\n# sh-indentation:2\n# End:\n",
        "/tmp/vanessa/spack-stage/spack-stage-elpa-2019.11.001-qjdkuz3xp4qrmu3u6sou4k4e2c7p3m4b/spack-src/Makefile.am": "## Process this file with automake to produce Makefile.in\n\nACLOCAL_AMFLAGS = ${ACLOCAL_FLAGS} -I m4\n\nAM_FCFLAGS = $(SCALAPACK_FCFLAGS) $(FC_MODINC)modules\nAM_LDFLAGS = $(SCALAPACK_LDFLAGS)\n\nFCLD = @ACTUAL_FC@\n\n# libelpa\nlib_LTLIBRARIES = libelpa@SUFFIX@.la\nlibelpa@SUFFIX@_la_LINK = $(FCLINK) $(AM_LDFLAGS) -version-info $(ELPA_SO_VERSION)\nlibelpa@SUFFIX@_la_LIBADD = libelpa@SUFFIX@_public.la libelpa@SUFFIX@_private.la\nlibelpa@SUFFIX@_la_SOURCES =\n\n# parts with public interface\nnoinst_LTLIBRARIES = libelpa@SUFFIX@_public.la\nlibelpa@SUFFIX@_public_la_FCFLAGS = $(AM_FCFLAGS) $(FC_MODOUT)modules $(FC_MODINC)private_modules\nlibelpa@SUFFIX@_public_la_SOURCES = \\\n  src/elpa.F90 \\\n  src/elpa_api.F90 \\\n  src/elpa_constants.F90\n\n# internal parts\nnoinst_LTLIBRARIES += libelpa@SUFFIX@_private.la\nlibelpa@SUFFIX@_private_la_FCFLAGS = $(AM_FCFLAGS) $(FC_MODOUT)private_modules $(FC_MODINC)private_modules\nlibelpa@SUFFIX@_private_la_SOURCES = \\\n  src/elpa_impl.F90 \\\n  src/elpa_autotune_impl.F90 \\\n  src/elpa_abstract_impl.F90 \\\n  src/helpers/mod_precision.F90 \\\n  src/helpers/mod_blas_interfaces.F90 \\\n  src/helpers/mod_scalapack_interfaces.F90 \\\n  src/helpers/mod_mpi.F90 \\\n  src/helpers/mod_mpi_stubs.F90 \\\n  src/helpers/mod_omp.F90 \\\n  src/elpa_generated_fortran_interfaces.F90 \\\n  src/elpa2/mod_redist_band.F90 \\\n  src/elpa2/mod_pack_unpack_cpu.F90 \\\n  src/elpa2/mod_compute_hh_trafo.F90 \\\n  src/helpers/aligned_mem.F90 \\\n  src/elpa1/elpa1_compute_private.F90 \\\n  src/elpa1/elpa1_auxiliary.F90 \\\n  src/elpa2/elpa2_determine_workload.F90 \\\n  src/elpa2/elpa2_compute.F90 \\\n  src/elpa2/kernels/mod_single_hh_trafo_real.F90 \\\n  src/GPU/check_for_gpu.F90 \\\n  src/GPU/mod_cuda.F90 \\\n  src/elpa2/GPU/interface_c_kernel.F90 \\\n  src/elpa2/mod_pack_unpack_gpu.F90 \\\n  src/elpa2/qr/qr_utils.F90 \\\n  src/elpa2/qr/elpa_qrkernels.F90 \\\n  src/elpa2/qr/elpa_pdlarfb.F90 \\\n  src/elpa2/qr/elpa_pdgeqrf.F90 \\\n  src/elpa1/elpa1.F90 \\\n  src/elpa2/elpa2.F90 \\\n  src/elpa_generalized/cannon.c \\\n  src/helpers/matrix_plot.F90 \\\n  src/general/mod_elpa_skewsymmetric_blas.F90 \\\n  src/elpa_index.c\n\nlibelpa@SUFFIX@_private_la_SOURCES += src/elpa_c_interface.c \n\n\nlibelpa@SUFFIX@_private_la_SOURCES += \\\n  src/general/elpa_utilities.F90\n\nEXTRA_libelpa@SUFFIX@_private_la_DEPENDENCIES = \\\n  src/elpa1/elpa_reduce_add_vectors.F90 \\\n  src/elpa1/elpa_transpose_vectors.F90 \\\n  src/elpa_api_math_template.F90 \\\n  src/elpa_impl_math_template.F90 \\\n  src/elpa_impl_generalized_transform_template.F90 \\\n  src/elpa1/elpa1_compute_template.F90 \\\n  src/elpa2/elpa2_compute_real_template.F90 \\\n  src/elpa2/elpa2_compute_complex_template.F90 \\\n  src/elpa1/elpa1_template.F90 \\\n  src/elpa2/elpa2_template.F90 \\\n  src/elpa2/qr/qr_utils_template.F90 \\\n  src/elpa2/qr/elpa_pdlarfb_template.F90 \\\n  src/elpa2/qr/elpa_pdgeqrf_template.F90 \\\n  src/elpa2/elpa2_bandred_template.F90 \\\n  src/elpa2/elpa2_symm_matrix_allreduce_real_template.F90 \\\n  src/elpa2/elpa2_trans_ev_band_to_full_template.F90 \\\n  src/elpa2/elpa2_tridiag_band_template.F90 \\\n  src/elpa2/elpa2_trans_ev_tridi_to_band_template.F90 \\\n  src/elpa2/elpa2_herm_matrix_allreduce_complex_template.F90 \\\n  src/elpa2/kernels/real_template.F90 \\\n  src/elpa2/kernels/complex_template.F90 \\\n  src/elpa2/kernels/simple_template.F90 \\\n  src/elpa2/kernels/simple_block4_template.F90 \\\n  src/elpa2/kernels/simple_block6_template.F90 \\\n  src/elpa2/pack_unpack_cpu.F90 \\\n  src/elpa2/pack_unpack_gpu.F90 \\\n  src/elpa2/compute_hh_trafo.F90 \\\n  src/elpa2/redist_band.F90 \\\n  src/general/sanity.F90 \\\n  src/elpa1/elpa_cholesky_template.F90 \\\n  src/elpa1/elpa_invert_trm.F90 \\\n  src/elpa1/elpa_multiply_a_b.F90 \\\n  src/elpa1/elpa_solve_tridi_impl_public.F90 \\\n  src/general/elpa_ssr2_template.F90 \\\n  src/general/elpa_ssmv_template.F90 \\\n  src/general/precision_macros.h \\\n  src/general/precision_typedefs.h \\\n  src/general/precision_kinds.F90\n\nif HAVE_DETAILED_TIMINGS\nlibelpa@SUFFIX@_private_la_SOURCES += \\\n  src/ftimings/ftimings.F90 \\\n  src/ftimings/ftimings_type.F90 \\\n  src/ftimings/ftimings_value.F90 \\\n  src/ftimings/highwater_mark.c \\\n  src/ftimings/resident_set_size.c \\\n  src/ftimings/time.c \\\n  src/ftimings/virtual_memory.c \\\n  src/ftimings/papi.c\n\nelse\nlibelpa@SUFFIX@_private_la_SOURCES += \\\n  src/helpers/timer_dummy.F90\nendif\n\nif WITH_GPU_VERSION\n  libelpa@SUFFIX@_private_la_SOURCES +=  src/GPU/cudaFunctions.cu src/GPU/cuUtils.cu src/elpa2/GPU/ev_tridi_band_gpu_c_v2.cu\n  EXTRA_libelpa@SUFFIX@_private_la_DEPENDENCIES +=   src/elpa2/GPU/ev_tridi_band_gpu_c_v2_complex_template.cu src/elpa2/GPU/ev_tridi_band_gpu_c_v2_real_template.cu\nendif\n\nif !WITH_MPI\n  libelpa@SUFFIX@_private_la_SOURCES += src/helpers/mod_time_c.F90\nif !HAVE_DETAILED_TIMINGS\n  libelpa@SUFFIX@_private_la_SOURCES += src/ftimings/time.c\nendif\nendif\n\n\nif HAVE_HETEROGENOUS_CLUSTER_SUPPORT\n  libelpa@SUFFIX@_private_la_SOURCES +=  src/helpers/get_cpuid_set.c src/helpers/mod_simd_kernel.F90\nendif\n\nif WITH_REAL_GENERIC_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES +=  src/elpa2/kernels/real.F90\nendif\n\nif WITH_COMPLEX_GENERIC_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES +=  src/elpa2/kernels/complex.F90\nendif\n\nif WITH_REAL_GENERIC_SIMPLE_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_simple.F90\nendif\n\nif WITH_COMPLEX_GENERIC_SIMPLE_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_simple.F90\nendif\n\nif WITH_REAL_GENERIC_SIMPLE_BLOCK4_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_simple_block4.F90\nendif\n\nif WITH_REAL_GENERIC_SIMPLE_BLOCK6_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_simple_block6.F90\nendif\n\nif WITH_REAL_BGP_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_bgp.f90\nendif\n\nif WITH_REAL_BGQ_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_bgq.f90\nendif\n\nif WITH_REAL_SSE_ASSEMBLY_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/asm_x86_64_double_precision.s\nif WANT_SINGLE_PRECISION_REAL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/asm_x86_64_single_precision.s\nendif\n\nelse\nif WITH_COMPLEX_SSE_ASSEMBLY_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/asm_x86_64_double_precision.s\nif WANT_SINGLE_PRECISION_COMPLEX\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/asm_x86_64_single_precision.s\nendif\nendif\nendif\n\nif WITH_REAL_SPARC64_BLOCK2_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_sparc64_2hv_double_precision.c\n#if WANT_SINGLE_PRECISION_REAL\n#  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_sparc64_2hv_single_precision.c\n#endif\nendif\n\nif WITH_REAL_NEON_ARCH64_BLOCK2_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_neon_arch64_2hv_double_precision.c\nif WANT_SINGLE_PRECISION_REAL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_neon_arch64_2hv_single_precision.c\nendif\nendif\n\nif WITH_REAL_VSX_BLOCK2_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_vsx_2hv_double_precision.c\nif WANT_SINGLE_PRECISION_REAL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_vsx_2hv_single_precision.c\nendif\nendif\n\nif WITH_REAL_SSE_BLOCK2_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_sse_2hv_double_precision.c\nif WANT_SINGLE_PRECISION_REAL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_sse_2hv_single_precision.c\nendif\nendif\n\nif WITH_REAL_AVX_BLOCK2_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_avx-avx2_2hv_double_precision.c\nif WANT_SINGLE_PRECISION_REAL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_avx-avx2_2hv_single_precision.c\nendif\nelse\nif WITH_REAL_AVX2_BLOCK2_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_avx-avx2_2hv_double_precision.c\nif WANT_SINGLE_PRECISION_REAL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_avx-avx2_2hv_single_precision.c\nendif\nendif\nendif\n\nif WITH_REAL_AVX512_BLOCK2_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_avx512_2hv_double_precision.c\nif WANT_SINGLE_PRECISION_REAL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_avx512_2hv_single_precision.c\nendif\nendif\n\nif WITH_REAL_SPARC64_BLOCK4_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_sparc64_4hv_double_precision.c\n#if WANT_SINGLE_PRECISION_REAL\n#  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_sparc64_4hv_single_precision.c\n#endif\nendif\n\nif WITH_REAL_NEON_ARCH64_BLOCK4_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_neon_arch64_4hv_double_precision.c\nif WANT_SINGLE_PRECISION_REAL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_neon_arch64_4hv_single_precision.c\nendif\nendif\n\nif WITH_REAL_VSX_BLOCK4_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_vsx_4hv_double_precision.c\nif WANT_SINGLE_PRECISION_REAL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_vsx_4hv_single_precision.c\nendif\nendif\n\nif WITH_REAL_SSE_BLOCK4_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_sse_4hv_double_precision.c\nif WANT_SINGLE_PRECISION_REAL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_sse_4hv_single_precision.c\nendif\nendif\n\nif WITH_REAL_AVX_BLOCK4_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_avx-avx2_4hv_double_precision.c\nif WANT_SINGLE_PRECISION_REAL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_avx-avx2_4hv_single_precision.c\nendif\nelse\nif WITH_REAL_AVX2_BLOCK4_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_avx-avx2_4hv_double_precision.c\nif WANT_SINGLE_PRECISION_REAL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_avx-avx2_4hv_single_precision.c\nendif\nendif\nendif\n\nif WITH_REAL_AVX512_BLOCK4_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_avx512_4hv_double_precision.c\nif WANT_SINGLE_PRECISION_REAL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_avx512_4hv_single_precision.c\nendif\nendif\n\nif WITH_REAL_SPARC64_BLOCK6_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_sparc64_6hv_double_precision.c\n#if WANT_SINGLE_PRECISION_REAL\n#  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_sparc64_6hv_single_precision.c\n#endif\nendif\n\nif WITH_REAL_NEON_ARCH64_BLOCK6_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_neon_arch64_6hv_double_precision.c\nif WANT_SINGLE_PRECISION_REAL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_neon_arch64_6hv_single_precision.c\nendif\nendif\n\nif WITH_REAL_VSX_BLOCK6_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_vsx_6hv_double_precision.c\nif WANT_SINGLE_PRECISION_REAL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_vsx_6hv_single_precision.c\nendif\nendif\n\nif WITH_REAL_SSE_BLOCK6_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_sse_6hv_double_precision.c\nif WANT_SINGLE_PRECISION_REAL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_sse_6hv_single_precision.c\nendif\nendif\n\nif WITH_REAL_AVX_BLOCK6_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_avx-avx2_6hv_double_precision.c\nif WANT_SINGLE_PRECISION_REAL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_avx-avx2_6hv_single_precision.c\nendif\nelse\nif WITH_REAL_AVX2_BLOCK6_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_avx-avx2_6hv_double_precision.c\nif WANT_SINGLE_PRECISION_REAL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_avx-avx2_6hv_single_precision.c\nendif\nendif\nendif\n\nif WITH_REAL_AVX512_BLOCK6_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_avx512_6hv_double_precision.c\nif WANT_SINGLE_PRECISION_REAL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_avx512_6hv_single_precision.c\nendif\nendif\n\n#if WITH_COMPLEX_SPARC64_BLOCK1_KERNEL\n#  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_sparc64_1hv_double_precision.c\n#if WANT_SINGLE_PRECISION_COMPLEX\n#  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_sparc64_1hv_single_precision.c\n#endif\n#endif\n#\n#if WITH_COMPLEX_VSX_BLOCK1_KERNEL\n#  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_vsx_1hv_double_precision.c\n#if WANT_SINGLE_PRECISION_COMPLEX\n#  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_vsx_1hv_single_precision.c\n#endif\n#endif\n\nif WITH_COMPLEX_SSE_BLOCK1_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_sse_1hv_double_precision.c\nif WANT_SINGLE_PRECISION_COMPLEX\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_sse_1hv_single_precision.c\nendif\nendif\n\nif WITH_COMPLEX_AVX_BLOCK1_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_avx-avx2_1hv_double_precision.c\nif WANT_SINGLE_PRECISION_COMPLEX\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_avx-avx2_1hv_single_precision.c\nendif\nelse\nif WITH_COMPLEX_AVX2_BLOCK1_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_avx-avx2_1hv_double_precision.c\nif WANT_SINGLE_PRECISION_COMPLEX\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_avx-avx2_1hv_single_precision.c\nendif\nendif\nendif\n\n\nif WITH_COMPLEX_AVX512_BLOCK1_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_avx512_1hv_double_precision.c\nif WANT_SINGLE_PRECISION_COMPLEX\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_avx512_1hv_single_precision.c\nendif\nendif\n\n#if WITH_COMPLEX_SPARC64_BLOCK2_KERNEL\n#  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_sparc64_2hv_double_precision.c\n#if WANT_SINGLE_PRECISION_COMPLEX\n#  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_sparc64_2hv_single_precision.c\n#endif\n#endif\n#\n#if WITH_COMPLEX_VSX_BLOCK2_KERNEL\n#  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_vsx_2hv_double_precision.c\n#if WANT_SINGLE_PRECISION_COMPLEX\n#  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_vsx_2hv_single_precision.c\n#endif\n#endif\n\nif WITH_COMPLEX_SSE_BLOCK2_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_sse_2hv_double_precision.c\nif WANT_SINGLE_PRECISION_COMPLEX\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_sse_2hv_single_precision.c\nendif\nendif\n\nif WITH_COMPLEX_AVX_BLOCK2_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_avx-avx2_2hv_double_precision.c\nif WANT_SINGLE_PRECISION_COMPLEX\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_avx-avx2_2hv_single_precision.c\nendif\nelse\nif WITH_COMPLEX_AVX2_BLOCK2_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_avx-avx2_2hv_double_precision.c\nif WANT_SINGLE_PRECISION_COMPLEX\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_avx-avx2_2hv_single_precision.c\nendif\nendif\nendif\n\nif WITH_COMPLEX_AVX512_BLOCK2_KERNEL\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_avx512_2hv_double_precision.c\nif WANT_SINGLE_PRECISION_COMPLEX\n  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_avx512_2hv_single_precision.c\nendif\nendif\n\n\nif STORE_BUILD_CONFIG\n  libelpa@SUFFIX@_private_la_SOURCES += src/helpers/print_build_config.c\nendif\n\n\n# Cuda files\n.cu.lo:\n\tNVCC=\"$(NVCC)\" libtool --mode=compile --tag=CC $(top_srcdir)/nvcc_wrap $(NVCCFLAGS) $(LDFLAGS) -I$(top_builddir)/ -I$(top_srcdir)/  -c $< -o $@\n\n# Assembly files\nLTCCASCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=compile $(CCAS) $(AM_CCASFLAGS) \\\n\t$(CCASFLAGS)\n\ninclude generated_headers.am\nBUILT_SOURCES = $(generated_headers)\n\n# install public headers and Fortran modules files in the include/ dir\nelpa_includedir = $(includedir)/elpa@SUFFIX@-@PACKAGE_VERSION@\nnobase_elpa_include_HEADERS = \\\n  $(wildcard modules/*) \\\n  src/helpers/lapack_interfaces.h \\\n  src/helpers/scalapack_interfaces.h \\\n  elpa/elpa_simd_constants.h \\\n  elpa/elpa.h \\\n  elpa/elpa_generic.h\n\nnobase_nodist_elpa_include_HEADERS = \\\n  elpa/elpa_version.h \\\n  elpa/elpa_constants.h \\\n  elpa/elpa_generated.h \\\n  elpa/elpa_generated_c_api.h\n\ndist_man_MANS = \\\n  man/elpa2_print_kernels.1 \\\n  man/elpa_init.3 \\\n  man/elpa_allocate.3 \\\n  man/elpa_set.3 \\\n  man/elpa_setup.3 \\\n  man/elpa_eigenvalues.3 \\\n  man/elpa_eigenvectors.3 \\\n  man/elpa_skew_eigenvalues.3 \\\n  man/elpa_skew_eigenvectors.3 \\\n  man/elpa_generalized_eigenvectors.3 \\\n  man/elpa_generalized_eigenvalues.3 \\\n  man/elpa_cholesky.3 \\\n  man/elpa_invert_triangular.3 \\\n  man/elpa_solve_tridiagonal.3 \\\n  man/elpa_hermitian_multiply.3 \\\n  man/elpa_deallocate.3 \\\n  man/elpa_load_settings.3 \\\n  man/elpa_store_settings.3 \\\n  man/elpa_print_settings.3 \\\n  man/elpa_autotune_save_state.3 \\\n  man/elpa_autotune_load_state.3 \\\n  man/elpa_autotune_print_state.3 \\\n  man/elpa_autotune_setup.3 \\\n  man/elpa_autotune_step.3 \\\n  man/elpa_autotune_set_best.3 \\\n  man/elpa_autotune_deallocate.3 \\\n  man/elpa_uninit.3\n\ndist_doc_DATA = README.md USERS_GUIDE.md USERS_GUIDE_DEPRECATED_LEGACY_API.md INSTALL.md CONTRIBUTING.md LICENSE Changelog COPYING/COPYING COPYING/gpl.txt COPYING/lgpl.txt\n\n# pkg-config stuff\npkgconfigdir = $(libdir)/pkgconfig\npkgconfig_DATA = @PKG_CONFIG_FILE@\n\n# programs\nbin_PROGRAMS = \\\n  elpa2_print_kernels@SUFFIX@\n\nnoinst_PROGRAMS =\ncheck_SCRIPTS =\n\ntest_program_ldadd = libelpatest@SUFFIX@.la libelpa@SUFFIX@.la\ntest_program_fcflags = $(AM_FCFLAGS) $(FC_MODOUT)test_modules $(FC_MODINC)test_modules $(FC_MODINC)modules $(FC_MODINC)private_modules\n\n# library with shared sources for the test files\nnoinst_LTLIBRARIES += libelpatest@SUFFIX@.la\nlibelpatest@SUFFIX@_la_FCFLAGS = $(test_program_fcflags)\nlibelpatest@SUFFIX@_la_SOURCES = \\\n  test/shared/tests_variable_definitions.F90 \\\n  test/shared/mod_tests_scalapack_interfaces.F90 \\\n  test/shared/mod_tests_blas_interfaces.F90 \\\n  test/shared/test_util.F90 \\\n  test/shared/test_read_input_parameters.F90 \\\n  test/shared/test_check_correctness.F90 \\\n  test/shared/test_setup_mpi.F90 \\\n  test/shared/test_blacs_infrastructure.F90 \\\n  test/shared/test_prepare_matrix.F90 \\\n  test/shared/test_analytic.F90 \\\n  test/shared/test_output_type.F90\n\nif WITH_SCALAPACK_TESTS\nlibelpatest@SUFFIX@_la_SOURCES += \\\n  test/shared/test_scalapack.F90\nendif\n\nif HAVE_REDIRECT\nlibelpatest@SUFFIX@_la_SOURCES += \\\n  test/shared/test_redir.c \\\n  test/shared/test_redirect.F90\nendif\n\n\nelpa2_print_kernels@SUFFIX@_SOURCES = src/elpa2/elpa2_print_kernels.F90\nelpa2_print_kernels@SUFFIX@_LDADD = libelpa@SUFFIX@.la\nelpa2_print_kernels@SUFFIX@_FCFLAGS = $(AM_FCFLAGS) $(FC_MODINC)modules\n\ninclude test_programs.am\n\n#include test_programs_manual.am\n\nnoinst_PROGRAMS += validate_double_instance@SUFFIX@\ncheck_SCRIPTS += validate_double_instance@SUFFIX@_default.sh\nvalidate_double_instance@SUFFIX@_SOURCES = test/Fortran/elpa2/double_instance.F90\nvalidate_double_instance@SUFFIX@_LDADD = $(test_program_ldadd)\nvalidate_double_instance@SUFFIX@_FCFLAGS = $(AM_FCFLAGS) $(FC_MODINC)test_modules $(FC_MODINC)modules $(FC_MODINC)private_modules\n\nnoinst_PROGRAMS += validate_real_2stage_banded@SUFFIX@\ncheck_SCRIPTS += validate_real_2stage_banded@SUFFIX@_default.sh\nvalidate_real_2stage_banded@SUFFIX@_SOURCES = test/Fortran/elpa2/real_2stage_banded.F90 \nvalidate_real_2stage_banded@SUFFIX@_LDADD = $(test_program_ldadd)\nvalidate_real_2stage_banded@SUFFIX@_FCFLAGS = $(AM_FCFLAGS) $(FC_MODINC)test_modules $(FC_MODINC)modules $(FC_MODINC)private_modules\n\nnoinst_PROGRAMS += validate_complex_2stage_banded@SUFFIX@\ncheck_SCRIPTS += validate_complex_2stage_banded@SUFFIX@_default.sh\nvalidate_complex_2stage_banded@SUFFIX@_SOURCES = test/Fortran/elpa2/complex_2stage_banded.F90\nvalidate_complex_2stage_banded@SUFFIX@_LDADD = $(test_program_ldadd)\nvalidate_complex_2stage_banded@SUFFIX@_FCFLAGS = $(AM_FCFLAGS) $(FC_MODINC)test_modules $(FC_MODINC)modules $(FC_MODINC)private_modules\n\nif WANT_SINGLE_PRECISION_REAL\nnoinst_PROGRAMS += validate_single_real_2stage_banded@SUFFIX@\ncheck_SCRIPTS += validate_single_real_2stage_banded@SUFFIX@_default.sh\nvalidate_single_real_2stage_banded@SUFFIX@_SOURCES = test/Fortran/elpa2/single_real_2stage_banded.F90\nvalidate_single_real_2stage_banded@SUFFIX@_LDADD = $(test_program_ldadd)\nvalidate_single_real_2stage_banded@SUFFIX@_FCFLAGS = $(AM_FCFLAGS) $(FC_MODINC)test_modules $(FC_MODINC)modules $(FC_MODINC)private_modules\nendif\n\nif WANT_SINGLE_PRECISION_COMPLEX\nnoinst_PROGRAMS += validate_single_complex_2stage_banded@SUFFIX@\ncheck_SCRIPTS += validate_single_complex_2stage_banded@SUFFIX@_default.sh\nvalidate_single_complex_2stage_banded@SUFFIX@_SOURCES = test/Fortran/elpa2/single_complex_2stage_banded.F90\nvalidate_single_complex_2stage_banded@SUFFIX@_LDADD = $(test_program_ldadd)\nvalidate_single_complex_2stage_banded@SUFFIX@_FCFLAGS = $(AM_FCFLAGS) $(FC_MODINC)test_modules $(FC_MODINC)modules $(FC_MODINC)private_modules\nendif\n\n# python wrapper\npyelpadir = $(pythondir)/pyelpa\nif WITH_PYTHON\npyelpa_PYTHON = python/pyelpa/__init__.py python/pyelpa/distributedmatrix.py\npyelpa_LTLIBRARIES = wrapper.la\nelse\npyelpa_PYTHON =\npyelpa_LTLIBRARIES =\nendif\nnodist_wrapper_la_SOURCES = python/pyelpa/wrapper.c\nwrapper_la_LDFLAGS = -module -avoid-version -shared $(AM_LDFLAGS)\nwrapper_la_LIBADD = libelpa@SUFFIX@.la\nwrapper_la_CFLAGS = $(PYTHON_INCLUDE) $(NUMPY_INCLUDE) $(AM_CFLAGS)\n\npython/pyelpa/wrapper.c: python/pyelpa/wrapper.pyx\n\tcython $< -o $@\n# test scripts\nTASKS ?= 2\nif WITH_MPI\n  wrapper=$(MPI_BINARY) -n $${TASKS:-$(TASKS)}\nelse\n  wrapper=\nendif\nTESTS = $(check_SCRIPTS)\n%_extended.sh: %\n\t@echo \"#!/bin/bash\" > $@\n\t@echo 'if [ \"$$CHECK_LEVEL\" = \"extended\" ] ; then $(wrapper) ./$^ $$TEST_FLAGS ; else exit 77; fi' >> $@\n\t@chmod +x $@\n\n%_default.sh: %\n\t@echo \"#!/bin/bash\" > $@\n\t@echo '$(wrapper)' ./$^ '$$TEST_FLAGS' >> $@\n\t@chmod +x $@\n\nif WITH_PYTHON_TESTS\ncheck_SCRIPTS += test_python.sh\nendif\n\ntest_python.sh:\n\t@echo '#!/bin/bash' > $@\n# this is kind of hacky... is there a better way to get wrapper.so?\n\t@echo 'export PYTHONPATH=./python-copy:$$PYTHONPATH' >> $@\n\t@echo 'cp -r $(abs_top_srcdir)/python python-copy || exit 1' >> $@\n\t@echo 'chmod u+rwX -R python-copy || exit 1' >> $@\n\t@echo 'cp .libs/wrapper.so python-copy/pyelpa/ || exit 1' >> $@\n# the dlopen flags are needed for MKL to work properly...\n# only in os from python 3.3 on\n\t@echo \"$(wrapper) $(PYTHON) -c 'import sys, os; sys.setdlopenflags(os.RTLD_NOW | os.RTLD_GLOBAL); import pytest; sys.exit(pytest.main([\\\"./python-copy\\\", \\\"-p\\\", \\\"no:cacheprovider\\\"]))'\" >> $@\n\t@echo 'exit_code=$$?' >> $@\n\t@echo 'rm -rf python-copy || exit 1' >> $@\n\t@echo 'exit $$exit_code' >> $@\n\t@chmod +x $@\n\ninclude doxygen.am\n\nCLEANFILES = \\\n  elpa_generated.h \\\n  elpa_generated_c_api.h \\\n  elpa1_test* \\\n  elpa2_test*\\\n  elpa2_real* \\\n  elpa1_real* \\\n  elpa*.sh \\\n  test*.sh \\\n  single_real* \\\n  single_complex* \\\n  real* \\\n  complex* \\\n  double_instance* \\\n  *.i \\\n  python/pyelpa/wrapper.c \\\n  check_python.sh\n\nclean-local:\n\t-rm -rf modules/* private_modules/* test_modules/* .fortran_dependencies/*\n\t-rm -rf validate_*.sh\n\t-rm -rf real_2stage*.sh\n\t-rm -rf complex_2stage*.sh\n\t-rm -rf single_complex_2stage*.sh\n\t-rm -rf single_real_2stage*.sh\n\t-rm -rf double_instance_onenode*.sh\n\t-rm -rf $(generated_headers)\n\ndistclean-local:\n\t-rm -rf ./m4\n\t-rm -rf ./src\n\t-rm -rf ./test\n\t-rm -rf ./modules\n\t-rm -rf .fortran_dependencies\n\t-rm config-f90.h\n\t-rm -rf ./test/.deps\n\t-rm -rf elpa/elpa_generated_c_api.h\n\nEXTRA_DIST = \\\n  elpa.spec \\\n  elpa/elpa.h \\\n  elpa/elpa_generic.h \\\n  fdep/fortran_dependencies.mk \\\n  fdep/fortran_dependencies.pl \\\n  manual_cpp \\\n  nvcc_wrap \\\n  remove_xcompiler \\\n  src/helpers/fortran_blas_interfaces.F90 \\\n  src/helpers/fortran_scalapack_interfaces.F90 \\\n  src/GPU/cuUtils_template.cu \\\n  src/elpa_api_math_template.F90 \\\n  src/elpa_impl_math_template.F90 \\\n  src/elpa_impl_generalized_transform_template.F90 \\\n  src/elpa1/elpa1_compute_template.F90 \\\n  src/elpa1/elpa1_merge_systems_real_template.F90 \\\n  src/elpa1/elpa1_solve_tridi_real_template.F90 \\\n  src/elpa1/elpa1_template.F90 \\\n  src/elpa1/elpa1_tools_template.F90 \\\n  src/elpa1/elpa1_trans_ev_template.F90 \\\n  src/elpa1/elpa1_tridiag_template.F90 \\\n  src/elpa1/elpa_cholesky_template.F90 \\\n  src/elpa1/elpa_invert_trm.F90 \\\n  src/elpa1/elpa_multiply_a_b.F90 \\\n  src/elpa1/elpa_reduce_add_vectors.F90 \\\n  src/elpa1/elpa_solve_tridi_impl_public.F90 \\\n  src/elpa1/elpa_transpose_vectors.F90 \\\n  src/elpa2/GPU/ev_tridi_band_gpu_c_v2_complex_template.cu \\\n  src/elpa2/GPU/ev_tridi_band_gpu_c_v2_real_template.cu \\\n  src/elpa2/compute_hh_trafo.F90 \\\n  src/elpa2/elpa2_bandred_template.F90 \\\n  src/elpa2/elpa2_compute_complex_template.F90 \\\n  src/elpa2/elpa2_compute_real_template.F90 \\\n  src/elpa2/elpa2_herm_matrix_allreduce_complex_template.F90 \\\n  src/elpa2/elpa2_symm_matrix_allreduce_real_template.F90 \\\n  src/elpa2/elpa2_template.F90 \\\n  src/elpa2/elpa2_trans_ev_band_to_full_template.F90 \\\n  src/elpa2/elpa2_trans_ev_tridi_to_band_template.F90 \\\n  src/elpa2/elpa2_tridiag_band_template.F90 \\\n  src/elpa2/kernels/complex_128bit_256bit_512bit_BLOCK_template.c \\\n  src/elpa2/kernels/complex_template.F90 \\\n  src/elpa2/kernels/real_128bit_256bit_512bit_BLOCK_template.c \\\n  src/elpa2/kernels/real_template.F90 \\\n  src/elpa2/kernels/simple_template.F90 \\\n  src/elpa2/kernels/simple_block4_template.F90 \\\n  src/elpa2/kernels/simple_block6_template.F90 \\\n  src/elpa2/pack_unpack_cpu.F90 \\\n  src/elpa2/pack_unpack_gpu.F90 \\\n  src/elpa2/qr/elpa_pdgeqrf_template.F90 \\\n  src/elpa2/qr/elpa_pdlarfb_template.F90 \\\n  src/elpa2/qr/elpa_qrkernels_template.F90 \\\n  src/elpa2/qr/qr_utils_template.F90 \\\n  src/elpa2/redist_band.F90 \\\n  src/elpa_generalized/cannon_forw_template.c \\\n  src/elpa_generalized/cannon_back_template.c \\\n  src/elpa_index.h \\\n  src/fortran_constants.h \\\n  src/general/map_global_to_local.F90 \\\n  src/general/precision_macros.h \\\n  src/general/precision_typedefs.h \\\n  src/general/precision_kinds.F90 \\\n  test/shared/test_precision_kinds.F90 \\\n  src/general/prow_pcol.F90 \\\n  src/general/sanity.F90 \\\n  src/general/elpa_ssr2_template.F90 \\\n  src/general/elpa_ssmv_template.F90 \\\n  test/Fortran/assert.h \\\n  test/Fortran/elpa_print_headers.F90 \\\n  test/shared/test_check_correctness_template.F90 \\\n  test/shared/test_prepare_matrix_template.F90 \\\n  test/shared/test_analytic_template.F90 \\\n  test_project_1stage/Makefile.am \\\n  test_project_1stage/autogen.sh \\\n  test_project_1stage/configure.ac \\\n  test_project_1stage/fdep \\\n  test_project_1stage/m4 \\\n  test_project_1stage/src/test_real.F90 \\\n  test_project_2stage/Makefile.am \\\n  test_project_2stage/autogen.sh \\\n  test_project_2stage/configure.ac \\\n  test_project_2stage/fdep \\\n  test_project_2stage/m4 \\\n  test_project_2stage/src/test_real2.F90 \\\n  test_project_C/Makefile.am \\\n  test_project_C/autogen.sh \\\n  test_project_C/configure.ac \\\n  test_project_C/fdep \\\n  test_project_C/m4 \\\n  test_project_C/src/test_real.c \\\n  test_project_C/src/test_blacs_infrastructure.F90\n\nif WITH_SCALAPACK_TESTS\nEXTRA_DIST += \\\n  test/shared/test_scalapack_template.F90\nendif\n\n# python wrapper files\nEXTRA_DIST += python/pyelpa/__init__.py \\\n\t      python/pyelpa/distributedmatrix.py \\\n\t      python/pyelpa/wrapper.pyx \\\n\t      python/tests/test_elpa_import.py \\\n\t      python/tests/test_mpi4py.py \\\n\t      python/tests/test_numroc.py \\\n\t      python/tests/test_with_mpi.py\n\nLIBTOOL_DEPS = @LIBTOOL_DEPS@\nlibtool: $(LIBTOOL_DEPS)\n\t$(SHELL) ./config.status libtool\n\n\n@FORTRAN_MODULE_DEPS@\n\n# Fortran module dependencies only work within each target,\n# specify that the test programs need a finished library before\n# one can compile them\n\n# $1  Object name\ndefine require_elpa_lib\n$1: libelpa@SUFFIX@.la\n\nendef\n$(foreach p,$(bin_PROGRAMS) $(noinst_PROGRAMS),$(foreach o,$($p_OBJECTS),$(eval $(call require_elpa_lib,$o))))\n",
        "/tmp/vanessa/spack-stage/spack-stage-elpa-2019.11.001-qjdkuz3xp4qrmu3u6sou4k4e2c7p3m4b/spack-src/Makefile.in": "# Makefile.in generated by automake 1.16.1 from Makefile.am.\n# @configure_input@\n\n# Copyright (C) 1994-2018 Free Software Foundation, Inc.\n\n# This Makefile.in is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n# PARTICULAR PURPOSE.\n\n@SET_MAKE@\n\n\n\n\nVPATH = @srcdir@\nam__is_gnu_make = { \\\n  if test -z '$(MAKELEVEL)'; then \\\n    false; \\\n  elif test -n '$(MAKE_HOST)'; then \\\n    true; \\\n  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \\\n    true; \\\n  else \\\n    false; \\\n  fi; \\\n}\nam__make_running_with_option = \\\n  case $${target_option-} in \\\n      ?) ;; \\\n      *) echo \"am__make_running_with_option: internal error: invalid\" \\\n              \"target option '$${target_option-}' specified\" >&2; \\\n         exit 1;; \\\n  esac; \\\n  has_opt=no; \\\n  sane_makeflags=$$MAKEFLAGS; \\\n  if $(am__is_gnu_make); then \\\n    sane_makeflags=$$MFLAGS; \\\n  else \\\n    case $$MAKEFLAGS in \\\n      *\\\\[\\ \\\t]*) \\\n        bs=\\\\; \\\n        sane_makeflags=`printf '%s\\n' \"$$MAKEFLAGS\" \\\n          | sed \"s/$$bs$$bs[$$bs $$bs\t]*//g\"`;; \\\n    esac; \\\n  fi; \\\n  skip_next=no; \\\n  strip_trailopt () \\\n  { \\\n    flg=`printf '%s\\n' \"$$flg\" | sed \"s/$$1.*$$//\"`; \\\n  }; \\\n  for flg in $$sane_makeflags; do \\\n    test $$skip_next = yes && { skip_next=no; continue; }; \\\n    case $$flg in \\\n      *=*|--*) continue;; \\\n        -*I) strip_trailopt 'I'; skip_next=yes;; \\\n      -*I?*) strip_trailopt 'I';; \\\n        -*O) strip_trailopt 'O'; skip_next=yes;; \\\n      -*O?*) strip_trailopt 'O';; \\\n        -*l) strip_trailopt 'l'; skip_next=yes;; \\\n      -*l?*) strip_trailopt 'l';; \\\n      -[dEDm]) skip_next=yes;; \\\n      -[JT]) skip_next=yes;; \\\n    esac; \\\n    case $$flg in \\\n      *$$target_option*) has_opt=yes; break;; \\\n    esac; \\\n  done; \\\n  test $$has_opt = yes\nam__make_dryrun = (target_option=n; $(am__make_running_with_option))\nam__make_keepgoing = (target_option=k; $(am__make_running_with_option))\npkgdatadir = $(datadir)/@PACKAGE@\npkgincludedir = $(includedir)/@PACKAGE@\npkglibdir = $(libdir)/@PACKAGE@\npkglibexecdir = $(libexecdir)/@PACKAGE@\nam__cd = CDPATH=\"$${ZSH_VERSION+.}$(PATH_SEPARATOR)\" && cd\ninstall_sh_DATA = $(install_sh) -c -m 644\ninstall_sh_PROGRAM = $(install_sh) -c\ninstall_sh_SCRIPT = $(install_sh) -c\nINSTALL_HEADER = $(INSTALL_DATA)\ntransform = $(program_transform_name)\nNORMAL_INSTALL = :\nPRE_INSTALL = :\nPOST_INSTALL = :\nNORMAL_UNINSTALL = :\nPRE_UNINSTALL = :\nPOST_UNINSTALL = :\nbuild_triplet = @build@\nhost_triplet = @host@\n@HAVE_DETAILED_TIMINGS_TRUE@am__append_1 = \\\n@HAVE_DETAILED_TIMINGS_TRUE@  src/ftimings/ftimings.F90 \\\n@HAVE_DETAILED_TIMINGS_TRUE@  src/ftimings/ftimings_type.F90 \\\n@HAVE_DETAILED_TIMINGS_TRUE@  src/ftimings/ftimings_value.F90 \\\n@HAVE_DETAILED_TIMINGS_TRUE@  src/ftimings/highwater_mark.c \\\n@HAVE_DETAILED_TIMINGS_TRUE@  src/ftimings/resident_set_size.c \\\n@HAVE_DETAILED_TIMINGS_TRUE@  src/ftimings/time.c \\\n@HAVE_DETAILED_TIMINGS_TRUE@  src/ftimings/virtual_memory.c \\\n@HAVE_DETAILED_TIMINGS_TRUE@  src/ftimings/papi.c\n\n@HAVE_DETAILED_TIMINGS_FALSE@am__append_2 = \\\n@HAVE_DETAILED_TIMINGS_FALSE@  src/helpers/timer_dummy.F90\n\n@WITH_GPU_VERSION_TRUE@am__append_3 = src/GPU/cudaFunctions.cu src/GPU/cuUtils.cu src/elpa2/GPU/ev_tridi_band_gpu_c_v2.cu\n@WITH_GPU_VERSION_TRUE@am__append_4 = src/elpa2/GPU/ev_tridi_band_gpu_c_v2_complex_template.cu src/elpa2/GPU/ev_tridi_band_gpu_c_v2_real_template.cu\n@WITH_MPI_FALSE@am__append_5 = src/helpers/mod_time_c.F90\n@HAVE_DETAILED_TIMINGS_FALSE@@WITH_MPI_FALSE@am__append_6 = src/ftimings/time.c\n@HAVE_HETEROGENOUS_CLUSTER_SUPPORT_TRUE@am__append_7 = src/helpers/get_cpuid_set.c src/helpers/mod_simd_kernel.F90\n@WITH_REAL_GENERIC_KERNEL_TRUE@am__append_8 = src/elpa2/kernels/real.F90\n@WITH_COMPLEX_GENERIC_KERNEL_TRUE@am__append_9 = src/elpa2/kernels/complex.F90\n@WITH_REAL_GENERIC_SIMPLE_KERNEL_TRUE@am__append_10 = src/elpa2/kernels/real_simple.F90\n@WITH_COMPLEX_GENERIC_SIMPLE_KERNEL_TRUE@am__append_11 = src/elpa2/kernels/complex_simple.F90\n@WITH_REAL_GENERIC_SIMPLE_BLOCK4_KERNEL_TRUE@am__append_12 = src/elpa2/kernels/real_simple_block4.F90\n@WITH_REAL_GENERIC_SIMPLE_BLOCK6_KERNEL_TRUE@am__append_13 = src/elpa2/kernels/real_simple_block6.F90\n@WITH_REAL_BGP_KERNEL_TRUE@am__append_14 = src/elpa2/kernels/real_bgp.f90\n@WITH_REAL_BGQ_KERNEL_TRUE@am__append_15 = src/elpa2/kernels/real_bgq.f90\n@WITH_REAL_SSE_ASSEMBLY_KERNEL_TRUE@am__append_16 = src/elpa2/kernels/asm_x86_64_double_precision.s\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_SSE_ASSEMBLY_KERNEL_TRUE@am__append_17 = src/elpa2/kernels/asm_x86_64_single_precision.s\n@WITH_COMPLEX_SSE_ASSEMBLY_KERNEL_TRUE@@WITH_REAL_SSE_ASSEMBLY_KERNEL_FALSE@am__append_18 = src/elpa2/kernels/asm_x86_64_double_precision.s\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_COMPLEX_SSE_ASSEMBLY_KERNEL_TRUE@@WITH_REAL_SSE_ASSEMBLY_KERNEL_FALSE@am__append_19 = src/elpa2/kernels/asm_x86_64_single_precision.s\n@WITH_REAL_SPARC64_BLOCK2_KERNEL_TRUE@am__append_20 = src/elpa2/kernels/real_sparc64_2hv_double_precision.c\n#if WANT_SINGLE_PRECISION_REAL\n#  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_sparc64_2hv_single_precision.c\n#endif\n@WITH_REAL_NEON_ARCH64_BLOCK2_KERNEL_TRUE@am__append_21 = src/elpa2/kernels/real_neon_arch64_2hv_double_precision.c\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_NEON_ARCH64_BLOCK2_KERNEL_TRUE@am__append_22 = src/elpa2/kernels/real_neon_arch64_2hv_single_precision.c\n@WITH_REAL_VSX_BLOCK2_KERNEL_TRUE@am__append_23 = src/elpa2/kernels/real_vsx_2hv_double_precision.c\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_VSX_BLOCK2_KERNEL_TRUE@am__append_24 = src/elpa2/kernels/real_vsx_2hv_single_precision.c\n@WITH_REAL_SSE_BLOCK2_KERNEL_TRUE@am__append_25 = src/elpa2/kernels/real_sse_2hv_double_precision.c\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_SSE_BLOCK2_KERNEL_TRUE@am__append_26 = src/elpa2/kernels/real_sse_2hv_single_precision.c\n@WITH_REAL_AVX_BLOCK2_KERNEL_TRUE@am__append_27 = src/elpa2/kernels/real_avx-avx2_2hv_double_precision.c\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_AVX_BLOCK2_KERNEL_TRUE@am__append_28 = src/elpa2/kernels/real_avx-avx2_2hv_single_precision.c\n@WITH_REAL_AVX2_BLOCK2_KERNEL_TRUE@@WITH_REAL_AVX_BLOCK2_KERNEL_FALSE@am__append_29 = src/elpa2/kernels/real_avx-avx2_2hv_double_precision.c\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_AVX2_BLOCK2_KERNEL_TRUE@@WITH_REAL_AVX_BLOCK2_KERNEL_FALSE@am__append_30 = src/elpa2/kernels/real_avx-avx2_2hv_single_precision.c\n@WITH_REAL_AVX512_BLOCK2_KERNEL_TRUE@am__append_31 = src/elpa2/kernels/real_avx512_2hv_double_precision.c\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_AVX512_BLOCK2_KERNEL_TRUE@am__append_32 = src/elpa2/kernels/real_avx512_2hv_single_precision.c\n@WITH_REAL_SPARC64_BLOCK4_KERNEL_TRUE@am__append_33 = src/elpa2/kernels/real_sparc64_4hv_double_precision.c\n#if WANT_SINGLE_PRECISION_REAL\n#  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_sparc64_4hv_single_precision.c\n#endif\n@WITH_REAL_NEON_ARCH64_BLOCK4_KERNEL_TRUE@am__append_34 = src/elpa2/kernels/real_neon_arch64_4hv_double_precision.c\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_NEON_ARCH64_BLOCK4_KERNEL_TRUE@am__append_35 = src/elpa2/kernels/real_neon_arch64_4hv_single_precision.c\n@WITH_REAL_VSX_BLOCK4_KERNEL_TRUE@am__append_36 = src/elpa2/kernels/real_vsx_4hv_double_precision.c\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_VSX_BLOCK4_KERNEL_TRUE@am__append_37 = src/elpa2/kernels/real_vsx_4hv_single_precision.c\n@WITH_REAL_SSE_BLOCK4_KERNEL_TRUE@am__append_38 = src/elpa2/kernels/real_sse_4hv_double_precision.c\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_SSE_BLOCK4_KERNEL_TRUE@am__append_39 = src/elpa2/kernels/real_sse_4hv_single_precision.c\n@WITH_REAL_AVX_BLOCK4_KERNEL_TRUE@am__append_40 = src/elpa2/kernels/real_avx-avx2_4hv_double_precision.c\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_AVX_BLOCK4_KERNEL_TRUE@am__append_41 = src/elpa2/kernels/real_avx-avx2_4hv_single_precision.c\n@WITH_REAL_AVX2_BLOCK4_KERNEL_TRUE@@WITH_REAL_AVX_BLOCK4_KERNEL_FALSE@am__append_42 = src/elpa2/kernels/real_avx-avx2_4hv_double_precision.c\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_AVX2_BLOCK4_KERNEL_TRUE@@WITH_REAL_AVX_BLOCK4_KERNEL_FALSE@am__append_43 = src/elpa2/kernels/real_avx-avx2_4hv_single_precision.c\n@WITH_REAL_AVX512_BLOCK4_KERNEL_TRUE@am__append_44 = src/elpa2/kernels/real_avx512_4hv_double_precision.c\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_AVX512_BLOCK4_KERNEL_TRUE@am__append_45 = src/elpa2/kernels/real_avx512_4hv_single_precision.c\n@WITH_REAL_SPARC64_BLOCK6_KERNEL_TRUE@am__append_46 = src/elpa2/kernels/real_sparc64_6hv_double_precision.c\n#if WANT_SINGLE_PRECISION_REAL\n#  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/real_sparc64_6hv_single_precision.c\n#endif\n@WITH_REAL_NEON_ARCH64_BLOCK6_KERNEL_TRUE@am__append_47 = src/elpa2/kernels/real_neon_arch64_6hv_double_precision.c\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_NEON_ARCH64_BLOCK6_KERNEL_TRUE@am__append_48 = src/elpa2/kernels/real_neon_arch64_6hv_single_precision.c\n@WITH_REAL_VSX_BLOCK6_KERNEL_TRUE@am__append_49 = src/elpa2/kernels/real_vsx_6hv_double_precision.c\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_VSX_BLOCK6_KERNEL_TRUE@am__append_50 = src/elpa2/kernels/real_vsx_6hv_single_precision.c\n@WITH_REAL_SSE_BLOCK6_KERNEL_TRUE@am__append_51 = src/elpa2/kernels/real_sse_6hv_double_precision.c\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_SSE_BLOCK6_KERNEL_TRUE@am__append_52 = src/elpa2/kernels/real_sse_6hv_single_precision.c\n@WITH_REAL_AVX_BLOCK6_KERNEL_TRUE@am__append_53 = src/elpa2/kernels/real_avx-avx2_6hv_double_precision.c\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_AVX_BLOCK6_KERNEL_TRUE@am__append_54 = src/elpa2/kernels/real_avx-avx2_6hv_single_precision.c\n@WITH_REAL_AVX2_BLOCK6_KERNEL_TRUE@@WITH_REAL_AVX_BLOCK6_KERNEL_FALSE@am__append_55 = src/elpa2/kernels/real_avx-avx2_6hv_double_precision.c\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_AVX2_BLOCK6_KERNEL_TRUE@@WITH_REAL_AVX_BLOCK6_KERNEL_FALSE@am__append_56 = src/elpa2/kernels/real_avx-avx2_6hv_single_precision.c\n@WITH_REAL_AVX512_BLOCK6_KERNEL_TRUE@am__append_57 = src/elpa2/kernels/real_avx512_6hv_double_precision.c\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_AVX512_BLOCK6_KERNEL_TRUE@am__append_58 = src/elpa2/kernels/real_avx512_6hv_single_precision.c\n\n#if WITH_COMPLEX_SPARC64_BLOCK1_KERNEL\n#  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_sparc64_1hv_double_precision.c\n#if WANT_SINGLE_PRECISION_COMPLEX\n#  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_sparc64_1hv_single_precision.c\n#endif\n#endif\n#\n#if WITH_COMPLEX_VSX_BLOCK1_KERNEL\n#  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_vsx_1hv_double_precision.c\n#if WANT_SINGLE_PRECISION_COMPLEX\n#  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_vsx_1hv_single_precision.c\n#endif\n#endif\n@WITH_COMPLEX_SSE_BLOCK1_KERNEL_TRUE@am__append_59 = src/elpa2/kernels/complex_sse_1hv_double_precision.c\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_COMPLEX_SSE_BLOCK1_KERNEL_TRUE@am__append_60 = src/elpa2/kernels/complex_sse_1hv_single_precision.c\n@WITH_COMPLEX_AVX_BLOCK1_KERNEL_TRUE@am__append_61 = src/elpa2/kernels/complex_avx-avx2_1hv_double_precision.c\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_COMPLEX_AVX_BLOCK1_KERNEL_TRUE@am__append_62 = src/elpa2/kernels/complex_avx-avx2_1hv_single_precision.c\n@WITH_COMPLEX_AVX2_BLOCK1_KERNEL_TRUE@@WITH_COMPLEX_AVX_BLOCK1_KERNEL_FALSE@am__append_63 = src/elpa2/kernels/complex_avx-avx2_1hv_double_precision.c\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_COMPLEX_AVX2_BLOCK1_KERNEL_TRUE@@WITH_COMPLEX_AVX_BLOCK1_KERNEL_FALSE@am__append_64 = src/elpa2/kernels/complex_avx-avx2_1hv_single_precision.c\n@WITH_COMPLEX_AVX512_BLOCK1_KERNEL_TRUE@am__append_65 = src/elpa2/kernels/complex_avx512_1hv_double_precision.c\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_COMPLEX_AVX512_BLOCK1_KERNEL_TRUE@am__append_66 = src/elpa2/kernels/complex_avx512_1hv_single_precision.c\n\n#if WITH_COMPLEX_SPARC64_BLOCK2_KERNEL\n#  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_sparc64_2hv_double_precision.c\n#if WANT_SINGLE_PRECISION_COMPLEX\n#  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_sparc64_2hv_single_precision.c\n#endif\n#endif\n#\n#if WITH_COMPLEX_VSX_BLOCK2_KERNEL\n#  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_vsx_2hv_double_precision.c\n#if WANT_SINGLE_PRECISION_COMPLEX\n#  libelpa@SUFFIX@_private_la_SOURCES += src/elpa2/kernels/complex_vsx_2hv_single_precision.c\n#endif\n#endif\n@WITH_COMPLEX_SSE_BLOCK2_KERNEL_TRUE@am__append_67 = src/elpa2/kernels/complex_sse_2hv_double_precision.c\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_COMPLEX_SSE_BLOCK2_KERNEL_TRUE@am__append_68 = src/elpa2/kernels/complex_sse_2hv_single_precision.c\n@WITH_COMPLEX_AVX_BLOCK2_KERNEL_TRUE@am__append_69 = src/elpa2/kernels/complex_avx-avx2_2hv_double_precision.c\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_COMPLEX_AVX_BLOCK2_KERNEL_TRUE@am__append_70 = src/elpa2/kernels/complex_avx-avx2_2hv_single_precision.c\n@WITH_COMPLEX_AVX2_BLOCK2_KERNEL_TRUE@@WITH_COMPLEX_AVX_BLOCK2_KERNEL_FALSE@am__append_71 = src/elpa2/kernels/complex_avx-avx2_2hv_double_precision.c\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_COMPLEX_AVX2_BLOCK2_KERNEL_TRUE@@WITH_COMPLEX_AVX_BLOCK2_KERNEL_FALSE@am__append_72 = src/elpa2/kernels/complex_avx-avx2_2hv_single_precision.c\n@WITH_COMPLEX_AVX512_BLOCK2_KERNEL_TRUE@am__append_73 = src/elpa2/kernels/complex_avx512_2hv_double_precision.c\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_COMPLEX_AVX512_BLOCK2_KERNEL_TRUE@am__append_74 = src/elpa2/kernels/complex_avx512_2hv_single_precision.c\n@STORE_BUILD_CONFIG_TRUE@am__append_75 = src/helpers/print_build_config.c\nbin_PROGRAMS = elpa2_print_kernels@SUFFIX@$(EXEEXT) $(am__EXEEXT_1) \\\n\t$(am__EXEEXT_2) $(am__EXEEXT_3) $(am__EXEEXT_4) \\\n\t$(am__EXEEXT_5) $(am__EXEEXT_6) $(am__EXEEXT_7) \\\n\t$(am__EXEEXT_8) $(am__EXEEXT_9) $(am__EXEEXT_10) \\\n\t$(am__EXEEXT_11) $(am__EXEEXT_12) $(am__EXEEXT_13) \\\n\t$(am__EXEEXT_14) $(am__EXEEXT_15) $(am__EXEEXT_16) \\\n\t$(am__EXEEXT_17) $(am__EXEEXT_18) $(am__EXEEXT_19) \\\n\t$(am__EXEEXT_20) $(am__EXEEXT_21) $(am__EXEEXT_22) \\\n\t$(am__EXEEXT_23) $(am__EXEEXT_24) $(am__EXEEXT_25) \\\n\t$(am__EXEEXT_26) $(am__EXEEXT_27) $(am__EXEEXT_28) \\\n\t$(am__EXEEXT_29) $(am__EXEEXT_30) $(am__EXEEXT_31) \\\n\t$(am__EXEEXT_32) $(am__EXEEXT_33) $(am__EXEEXT_34) \\\n\t$(am__EXEEXT_35) $(am__EXEEXT_36) $(am__EXEEXT_37) \\\n\t$(am__EXEEXT_38) $(am__EXEEXT_39) $(am__EXEEXT_40) \\\n\t$(am__EXEEXT_41) $(am__EXEEXT_42) $(am__EXEEXT_43) \\\n\t$(am__EXEEXT_44) $(am__EXEEXT_45) $(am__EXEEXT_46) \\\n\t$(am__EXEEXT_47) $(am__EXEEXT_48) $(am__EXEEXT_49) \\\n\t$(am__EXEEXT_50) $(am__EXEEXT_51) $(am__EXEEXT_52) \\\n\t$(am__EXEEXT_53) $(am__EXEEXT_54) $(am__EXEEXT_55) \\\n\t$(am__EXEEXT_56) $(am__EXEEXT_57) $(am__EXEEXT_58) \\\n\t$(am__EXEEXT_59) $(am__EXEEXT_60) $(am__EXEEXT_61) \\\n\t$(am__EXEEXT_62) $(am__EXEEXT_63) $(am__EXEEXT_64) \\\n\t$(am__EXEEXT_65) $(am__EXEEXT_66) $(am__EXEEXT_67) \\\n\t$(am__EXEEXT_68) $(am__EXEEXT_69) $(am__EXEEXT_70) \\\n\t$(am__EXEEXT_71) $(am__EXEEXT_72) $(am__EXEEXT_73) \\\n\t$(am__EXEEXT_74) $(am__EXEEXT_75) $(am__EXEEXT_76) \\\n\t$(am__EXEEXT_77) $(am__EXEEXT_78) $(am__EXEEXT_79) \\\n\t$(am__EXEEXT_80) $(am__EXEEXT_81) $(am__EXEEXT_82) \\\n\t$(am__EXEEXT_83) $(am__EXEEXT_84) $(am__EXEEXT_85) \\\n\t$(am__EXEEXT_86) $(am__EXEEXT_87) $(am__EXEEXT_88) \\\n\t$(am__EXEEXT_89) $(am__EXEEXT_90) $(am__EXEEXT_91) \\\n\t$(am__EXEEXT_92) $(am__EXEEXT_93) $(am__EXEEXT_94) \\\n\t$(am__EXEEXT_95) $(am__EXEEXT_96) $(am__EXEEXT_97) \\\n\t$(am__EXEEXT_98) $(am__EXEEXT_99) $(am__EXEEXT_100) \\\n\t$(am__EXEEXT_101) $(am__EXEEXT_102) $(am__EXEEXT_103) \\\n\t$(am__EXEEXT_104) $(am__EXEEXT_105) $(am__EXEEXT_106) \\\n\t$(am__EXEEXT_107) $(am__EXEEXT_108) $(am__EXEEXT_109) \\\n\t$(am__EXEEXT_110) $(am__EXEEXT_111) $(am__EXEEXT_112) \\\n\t$(am__EXEEXT_113) $(am__EXEEXT_114) $(am__EXEEXT_115) \\\n\t$(am__EXEEXT_116) $(am__EXEEXT_117) $(am__EXEEXT_118) \\\n\t$(am__EXEEXT_119) $(am__EXEEXT_120) $(am__EXEEXT_121) \\\n\t$(am__EXEEXT_122) $(am__EXEEXT_123) $(am__EXEEXT_124) \\\n\t$(am__EXEEXT_125) $(am__EXEEXT_126) $(am__EXEEXT_127) \\\n\t$(am__EXEEXT_128) $(am__EXEEXT_129) $(am__EXEEXT_130) \\\n\t$(am__EXEEXT_131) $(am__EXEEXT_132) $(am__EXEEXT_133) \\\n\t$(am__EXEEXT_134) $(am__EXEEXT_135) $(am__EXEEXT_136) \\\n\t$(am__EXEEXT_137) $(am__EXEEXT_138) $(am__EXEEXT_139) \\\n\t$(am__EXEEXT_140) $(am__EXEEXT_141) $(am__EXEEXT_142) \\\n\t$(am__EXEEXT_143) $(am__EXEEXT_144) $(am__EXEEXT_145) \\\n\t$(am__EXEEXT_146) $(am__EXEEXT_147) $(am__EXEEXT_148) \\\n\t$(am__EXEEXT_149) $(am__EXEEXT_150) $(am__EXEEXT_151) \\\n\t$(am__EXEEXT_152) $(am__EXEEXT_153) $(am__EXEEXT_154) \\\n\t$(am__EXEEXT_155) $(am__EXEEXT_156) $(am__EXEEXT_157) \\\n\t$(am__EXEEXT_158) $(am__EXEEXT_159) $(am__EXEEXT_160) \\\n\t$(am__EXEEXT_161) $(am__EXEEXT_162) $(am__EXEEXT_163) \\\n\t$(am__EXEEXT_164) $(am__EXEEXT_165) $(am__EXEEXT_166) \\\n\t$(am__EXEEXT_167) $(am__EXEEXT_168) $(am__EXEEXT_169) \\\n\t$(am__EXEEXT_170) $(am__EXEEXT_171) $(am__EXEEXT_172) \\\n\t$(am__EXEEXT_173) $(am__EXEEXT_174) $(am__EXEEXT_175) \\\n\t$(am__EXEEXT_176) $(am__EXEEXT_177) $(am__EXEEXT_178) \\\n\t$(am__EXEEXT_179) $(am__EXEEXT_180) $(am__EXEEXT_181) \\\n\t$(am__EXEEXT_182) $(am__EXEEXT_183) $(am__EXEEXT_184) \\\n\t$(am__EXEEXT_185) $(am__EXEEXT_186) $(am__EXEEXT_187) \\\n\t$(am__EXEEXT_188) $(am__EXEEXT_189) $(am__EXEEXT_190) \\\n\t$(am__EXEEXT_191) $(am__EXEEXT_192) $(am__EXEEXT_193) \\\n\t$(am__EXEEXT_194) $(am__EXEEXT_195) $(am__EXEEXT_196) \\\n\t$(am__EXEEXT_197) $(am__EXEEXT_198) $(am__EXEEXT_199) \\\n\t$(am__EXEEXT_200) $(am__EXEEXT_201) $(am__EXEEXT_202) \\\n\t$(am__EXEEXT_203) $(am__EXEEXT_204) $(am__EXEEXT_205) \\\n\t$(am__EXEEXT_206) $(am__EXEEXT_207) $(am__EXEEXT_208) \\\n\t$(am__EXEEXT_209) $(am__EXEEXT_210) $(am__EXEEXT_211) \\\n\t$(am__EXEEXT_212) $(am__EXEEXT_213) $(am__EXEEXT_214) \\\n\t$(am__EXEEXT_215) $(am__EXEEXT_216) $(am__EXEEXT_217) \\\n\t$(am__EXEEXT_218) $(am__EXEEXT_219) $(am__EXEEXT_220) \\\n\t$(am__EXEEXT_221) $(am__EXEEXT_222) $(am__EXEEXT_223) \\\n\t$(am__EXEEXT_224) $(am__EXEEXT_225) $(am__EXEEXT_226) \\\n\t$(am__EXEEXT_227) $(am__EXEEXT_228) $(am__EXEEXT_229) \\\n\t$(am__EXEEXT_230) $(am__EXEEXT_231) $(am__EXEEXT_232) \\\n\t$(am__EXEEXT_233) $(am__EXEEXT_234) $(am__EXEEXT_235) \\\n\t$(am__EXEEXT_236) $(am__EXEEXT_237) $(am__EXEEXT_238) \\\n\t$(am__EXEEXT_239) $(am__EXEEXT_240) $(am__EXEEXT_241) \\\n\t$(am__EXEEXT_242) $(am__EXEEXT_243) $(am__EXEEXT_244) \\\n\t$(am__EXEEXT_245) $(am__EXEEXT_246) $(am__EXEEXT_247) \\\n\t$(am__EXEEXT_248) $(am__EXEEXT_249) $(am__EXEEXT_250) \\\n\t$(am__EXEEXT_251) $(am__EXEEXT_252) $(am__EXEEXT_253) \\\n\t$(am__EXEEXT_254)\nnoinst_PROGRAMS = $(am__EXEEXT_255) $(am__EXEEXT_256) \\\n\t$(am__EXEEXT_257) $(am__EXEEXT_258) $(am__EXEEXT_259) \\\n\t$(am__EXEEXT_260) $(am__EXEEXT_261) $(am__EXEEXT_262) \\\n\t$(am__EXEEXT_263) $(am__EXEEXT_264) $(am__EXEEXT_265) \\\n\t$(am__EXEEXT_266) $(am__EXEEXT_267) $(am__EXEEXT_268) \\\n\t$(am__EXEEXT_269) $(am__EXEEXT_270) $(am__EXEEXT_271) \\\n\t$(am__EXEEXT_272) $(am__EXEEXT_273) $(am__EXEEXT_274) \\\n\t$(am__EXEEXT_275) $(am__EXEEXT_276) $(am__EXEEXT_277) \\\n\t$(am__EXEEXT_278) $(am__EXEEXT_279) $(am__EXEEXT_280) \\\n\t$(am__EXEEXT_281) $(am__EXEEXT_282) $(am__EXEEXT_283) \\\n\t$(am__EXEEXT_284) $(am__EXEEXT_285) $(am__EXEEXT_286) \\\n\t$(am__EXEEXT_287) $(am__EXEEXT_288) $(am__EXEEXT_289) \\\n\t$(am__EXEEXT_290) $(am__EXEEXT_291) $(am__EXEEXT_292) \\\n\t$(am__EXEEXT_293) $(am__EXEEXT_294) $(am__EXEEXT_295) \\\n\t$(am__EXEEXT_296) $(am__EXEEXT_297) $(am__EXEEXT_298) \\\n\t$(am__EXEEXT_299) $(am__EXEEXT_300) $(am__EXEEXT_301) \\\n\t$(am__EXEEXT_302) $(am__EXEEXT_303) $(am__EXEEXT_304) \\\n\t$(am__EXEEXT_305) $(am__EXEEXT_306) $(am__EXEEXT_307) \\\n\t$(am__EXEEXT_308) $(am__EXEEXT_309) $(am__EXEEXT_310) \\\n\t$(am__EXEEXT_311) $(am__EXEEXT_312) $(am__EXEEXT_313) \\\n\t$(am__EXEEXT_314) $(am__EXEEXT_315) $(am__EXEEXT_316) \\\n\t$(am__EXEEXT_317) $(am__EXEEXT_318) $(am__EXEEXT_319) \\\n\t$(am__EXEEXT_320) $(am__EXEEXT_321) $(am__EXEEXT_322) \\\n\t$(am__EXEEXT_323) $(am__EXEEXT_324) $(am__EXEEXT_325) \\\n\t$(am__EXEEXT_326) $(am__EXEEXT_327) $(am__EXEEXT_328) \\\n\t$(am__EXEEXT_329) $(am__EXEEXT_330) $(am__EXEEXT_331) \\\n\t$(am__EXEEXT_332) $(am__EXEEXT_333) $(am__EXEEXT_334) \\\n\t$(am__EXEEXT_335) $(am__EXEEXT_336) $(am__EXEEXT_337) \\\n\t$(am__EXEEXT_338) $(am__EXEEXT_339) $(am__EXEEXT_340) \\\n\t$(am__EXEEXT_341) $(am__EXEEXT_342) $(am__EXEEXT_343) \\\n\t$(am__EXEEXT_344) $(am__EXEEXT_345) $(am__EXEEXT_346) \\\n\t$(am__EXEEXT_347) $(am__EXEEXT_348) $(am__EXEEXT_349) \\\n\t$(am__EXEEXT_350) $(am__EXEEXT_351) $(am__EXEEXT_352) \\\n\t$(am__EXEEXT_353) $(am__EXEEXT_354) $(am__EXEEXT_355) \\\n\t$(am__EXEEXT_356) $(am__EXEEXT_357) $(am__EXEEXT_358) \\\n\t$(am__EXEEXT_359) $(am__EXEEXT_360) $(am__EXEEXT_361) \\\n\t$(am__EXEEXT_362) $(am__EXEEXT_363) $(am__EXEEXT_364) \\\n\t$(am__EXEEXT_365) $(am__EXEEXT_366) $(am__EXEEXT_367) \\\n\t$(am__EXEEXT_368) $(am__EXEEXT_369) $(am__EXEEXT_370) \\\n\t$(am__EXEEXT_371) $(am__EXEEXT_372) $(am__EXEEXT_373) \\\n\t$(am__EXEEXT_374) $(am__EXEEXT_375) $(am__EXEEXT_376) \\\n\t$(am__EXEEXT_377) $(am__EXEEXT_378) $(am__EXEEXT_379) \\\n\t$(am__EXEEXT_380) $(am__EXEEXT_381) $(am__EXEEXT_382) \\\n\t$(am__EXEEXT_383) $(am__EXEEXT_384) $(am__EXEEXT_385) \\\n\t$(am__EXEEXT_386) $(am__EXEEXT_387) $(am__EXEEXT_388) \\\n\t$(am__EXEEXT_389) $(am__EXEEXT_390) $(am__EXEEXT_391) \\\n\t$(am__EXEEXT_392) $(am__EXEEXT_393) $(am__EXEEXT_394) \\\n\t$(am__EXEEXT_395) $(am__EXEEXT_396) $(am__EXEEXT_397) \\\n\t$(am__EXEEXT_398) $(am__EXEEXT_399) $(am__EXEEXT_400) \\\n\t$(am__EXEEXT_401) $(am__EXEEXT_402) $(am__EXEEXT_403) \\\n\t$(am__EXEEXT_404) $(am__EXEEXT_405) $(am__EXEEXT_406) \\\n\t$(am__EXEEXT_407) $(am__EXEEXT_408) $(am__EXEEXT_409) \\\n\t$(am__EXEEXT_410) $(am__EXEEXT_411) $(am__EXEEXT_412) \\\n\t$(am__EXEEXT_413) $(am__EXEEXT_414) $(am__EXEEXT_415) \\\n\t$(am__EXEEXT_416) $(am__EXEEXT_417) $(am__EXEEXT_418) \\\n\t$(am__EXEEXT_419) $(am__EXEEXT_420) $(am__EXEEXT_421) \\\n\t$(am__EXEEXT_422) $(am__EXEEXT_423) $(am__EXEEXT_424) \\\n\t$(am__EXEEXT_425) $(am__EXEEXT_426) $(am__EXEEXT_427) \\\n\t$(am__EXEEXT_428) $(am__EXEEXT_429) $(am__EXEEXT_430) \\\n\t$(am__EXEEXT_431) $(am__EXEEXT_432) $(am__EXEEXT_433) \\\n\t$(am__EXEEXT_434) $(am__EXEEXT_435) $(am__EXEEXT_436) \\\n\t$(am__EXEEXT_437) $(am__EXEEXT_438) $(am__EXEEXT_439) \\\n\t$(am__EXEEXT_440) $(am__EXEEXT_441) $(am__EXEEXT_442) \\\n\t$(am__EXEEXT_443) $(am__EXEEXT_444) $(am__EXEEXT_445) \\\n\t$(am__EXEEXT_446) $(am__EXEEXT_447) $(am__EXEEXT_448) \\\n\t$(am__EXEEXT_449) $(am__EXEEXT_450) $(am__EXEEXT_451) \\\n\t$(am__EXEEXT_452) $(am__EXEEXT_453) $(am__EXEEXT_454) \\\n\t$(am__EXEEXT_455) $(am__EXEEXT_456) $(am__EXEEXT_457) \\\n\t$(am__EXEEXT_458) $(am__EXEEXT_459) $(am__EXEEXT_460) \\\n\t$(am__EXEEXT_461) $(am__EXEEXT_462) $(am__EXEEXT_463) \\\n\t$(am__EXEEXT_464) $(am__EXEEXT_465) $(am__EXEEXT_466) \\\n\t$(am__EXEEXT_467) $(am__EXEEXT_468) $(am__EXEEXT_469) \\\n\t$(am__EXEEXT_470) $(am__EXEEXT_471) $(am__EXEEXT_472) \\\n\t$(am__EXEEXT_473) $(am__EXEEXT_474) $(am__EXEEXT_475) \\\n\t$(am__EXEEXT_476) $(am__EXEEXT_477) $(am__EXEEXT_478) \\\n\t$(am__EXEEXT_479) $(am__EXEEXT_480) $(am__EXEEXT_481) \\\n\t$(am__EXEEXT_482) $(am__EXEEXT_483) $(am__EXEEXT_484) \\\n\t$(am__EXEEXT_485) $(am__EXEEXT_486) $(am__EXEEXT_487) \\\n\t$(am__EXEEXT_488) $(am__EXEEXT_489) $(am__EXEEXT_490) \\\n\t$(am__EXEEXT_491) $(am__EXEEXT_492) $(am__EXEEXT_493) \\\n\t$(am__EXEEXT_494) $(am__EXEEXT_495) $(am__EXEEXT_496) \\\n\t$(am__EXEEXT_497) $(am__EXEEXT_498) $(am__EXEEXT_499) \\\n\t$(am__EXEEXT_500) $(am__EXEEXT_501) $(am__EXEEXT_502) \\\n\t$(am__EXEEXT_503) $(am__EXEEXT_504) $(am__EXEEXT_505) \\\n\t$(am__EXEEXT_506) $(am__EXEEXT_507) $(am__EXEEXT_508) \\\n\t$(am__EXEEXT_509) $(am__EXEEXT_510) $(am__EXEEXT_511) \\\n\t$(am__EXEEXT_512) $(am__EXEEXT_513) $(am__EXEEXT_514) \\\n\t$(am__EXEEXT_515) test_skewsymmetric_real_double$(EXEEXT) \\\n\t$(am__EXEEXT_516) $(am__EXEEXT_517) \\\n\tvalidate_split_comm_real_double$(EXEEXT) \\\n\tvalidate_double_instance@SUFFIX@$(EXEEXT) \\\n\tvalidate_real_2stage_banded@SUFFIX@$(EXEEXT) \\\n\tvalidate_complex_2stage_banded@SUFFIX@$(EXEEXT) \\\n\t$(am__EXEEXT_518) $(am__EXEEXT_519)\n@WITH_SCALAPACK_TESTS_TRUE@am__append_76 = \\\n@WITH_SCALAPACK_TESTS_TRUE@  test/shared/test_scalapack.F90\n\n@HAVE_REDIRECT_TRUE@am__append_77 = \\\n@HAVE_REDIRECT_TRUE@  test/shared/test_redir.c \\\n@HAVE_REDIRECT_TRUE@  test/shared/test_redirect.F90\n\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@am__append_78 = validate_c_version_complex_double_eigenvectors_1stage_random \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_complex_double_eigenvectors_2stage_default_kernel_random \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_real_double_eigenvectors_1stage_random \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_real_double_eigenvectors_2stage_default_kernel_random\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@am__append_79 = validate_c_version_complex_double_eigenvectors_1stage_random \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_complex_double_eigenvectors_2stage_default_kernel_random \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_real_double_eigenvectors_1stage_random \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_real_double_eigenvectors_2stage_default_kernel_random\n@ENABLE_C_TESTS_TRUE@am__append_80 = validate_c_version_complex_double_eigenvectors_1stage_random_default.sh \\\n@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_default.sh \\\n@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_real_double_eigenvectors_1stage_random_default.sh \\\n@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_real_double_eigenvectors_2stage_default_kernel_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_81 = validate_c_version_complex_single_eigenvectors_1stage_random \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\tvalidate_c_version_complex_single_eigenvectors_2stage_default_kernel_random\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_82 = validate_c_version_complex_single_eigenvectors_1stage_random \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\tvalidate_c_version_complex_single_eigenvectors_2stage_default_kernel_random\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_83 = validate_c_version_complex_single_eigenvectors_1stage_random_default.sh \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\tvalidate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_84 = validate_c_version_real_single_eigenvectors_1stage_random \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_c_version_real_single_eigenvectors_2stage_default_kernel_random\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_85 = validate_c_version_real_single_eigenvectors_1stage_random \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_c_version_real_single_eigenvectors_2stage_default_kernel_random\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_86 = validate_c_version_real_single_eigenvectors_1stage_random_default.sh \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_c_version_real_single_eigenvectors_2stage_default_kernel_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@am__append_87 = validate_c_version_complex_double_generalized_1stage_random \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_real_double_generalized_1stage_random\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@am__append_88 = validate_c_version_complex_double_generalized_1stage_random \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_real_double_generalized_1stage_random\n@ENABLE_C_TESTS_TRUE@am__append_89 = validate_c_version_complex_double_generalized_1stage_random_default.sh \\\n@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_real_double_generalized_1stage_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_90 = validate_c_version_complex_single_generalized_1stage_random\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_91 = validate_c_version_complex_single_generalized_1stage_random\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_92 = validate_c_version_complex_single_generalized_1stage_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_93 = validate_c_version_real_single_generalized_1stage_random\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_94 = validate_c_version_real_single_generalized_1stage_random\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_95 = validate_c_version_real_single_generalized_1stage_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@am__append_96 = validate_c_version_complex_double_generalized_decomp_1stage_random \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_real_double_generalized_decomp_1stage_random\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@am__append_97 = validate_c_version_complex_double_generalized_decomp_1stage_random \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_real_double_generalized_decomp_1stage_random\n@ENABLE_C_TESTS_TRUE@am__append_98 = validate_c_version_complex_double_generalized_decomp_1stage_random_default.sh \\\n@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_real_double_generalized_decomp_1stage_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_99 = validate_c_version_complex_single_generalized_decomp_1stage_random\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_100 = validate_c_version_complex_single_generalized_decomp_1stage_random\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_101 = validate_c_version_complex_single_generalized_decomp_1stage_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_102 = validate_c_version_real_single_generalized_decomp_1stage_random\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_103 = validate_c_version_real_single_generalized_decomp_1stage_random\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_104 = validate_c_version_real_single_generalized_decomp_1stage_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@am__append_105 = validate_c_version_complex_double_eigenvectors_1stage_gpu_random \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_double_eigenvectors_1stage_gpu_random \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@am__append_106 = validate_c_version_complex_double_eigenvectors_1stage_gpu_random \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_double_eigenvectors_1stage_gpu_random \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@am__append_107 = validate_c_version_complex_double_eigenvectors_1stage_gpu_random_default.sh \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_default.sh \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_double_eigenvectors_1stage_gpu_random_default.sh \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_108 = validate_c_version_complex_single_eigenvectors_1stage_gpu_random \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_109 = validate_c_version_complex_single_eigenvectors_1stage_gpu_random \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_110 = validate_c_version_complex_single_eigenvectors_1stage_gpu_random_default.sh \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_111 = validate_c_version_real_single_eigenvectors_1stage_gpu_random \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_112 = validate_c_version_real_single_eigenvectors_1stage_gpu_random \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_113 = validate_c_version_real_single_eigenvectors_1stage_gpu_random_default.sh \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@am__append_114 = validate_c_version_complex_double_generalized_1stage_gpu_random \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_double_generalized_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@am__append_115 = validate_c_version_complex_double_generalized_1stage_gpu_random \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_double_generalized_1stage_gpu_random\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@am__append_116 = validate_c_version_complex_double_generalized_1stage_gpu_random_default.sh \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_double_generalized_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_117 = validate_c_version_complex_single_generalized_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_118 = validate_c_version_complex_single_generalized_1stage_gpu_random\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_119 = validate_c_version_complex_single_generalized_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_120 = validate_c_version_real_single_generalized_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_121 = validate_c_version_real_single_generalized_1stage_gpu_random\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_122 = validate_c_version_real_single_generalized_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@am__append_123 = validate_c_version_complex_double_generalized_decomp_1stage_gpu_random \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_double_generalized_decomp_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@am__append_124 = validate_c_version_complex_double_generalized_decomp_1stage_gpu_random \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_double_generalized_decomp_1stage_gpu_random\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@am__append_125 = validate_c_version_complex_double_generalized_decomp_1stage_gpu_random_default.sh \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_double_generalized_decomp_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_126 = validate_c_version_complex_single_generalized_decomp_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_127 = validate_c_version_complex_single_generalized_decomp_1stage_gpu_random\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_128 = validate_c_version_complex_single_generalized_decomp_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_129 = validate_c_version_real_single_generalized_decomp_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_130 = validate_c_version_real_single_generalized_decomp_1stage_gpu_random\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_131 = validate_c_version_real_single_generalized_decomp_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_132 = validate_complex_double_eigenvectors_1stage_analytic_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_133 = validate_complex_double_eigenvectors_1stage_analytic_all_layouts\n@WITH_MPI_TRUE@am__append_134 = validate_complex_double_eigenvectors_1stage_analytic_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_135 = validate_complex_double_eigenvectors_1stage_analytic\n@BUILD_KCOMPUTER_FALSE@am__append_136 = validate_complex_double_eigenvectors_1stage_analytic\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_137 = validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts \\\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_138 = validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts \\\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts\n@WITH_MPI_TRUE@am__append_139 = validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_extended.sh \\\n@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_140 = validate_complex_double_eigenvectors_2stage_all_kernels_analytic \\\n@BUILD_KCOMPUTER_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_analytic\n@BUILD_KCOMPUTER_FALSE@am__append_141 = validate_complex_double_eigenvectors_2stage_all_kernels_analytic \\\n@BUILD_KCOMPUTER_FALSE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_analytic\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__append_142 = validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__append_143 = validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__append_144 = validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__append_145 = validate_complex_double_eigenvectors_scalapack_all_analytic\n@BUILD_KCOMPUTER_FALSE@@WITH_SCALAPACK_TESTS_TRUE@am__append_146 = validate_complex_double_eigenvectors_scalapack_all_analytic\n@WITH_SCALAPACK_TESTS_TRUE@am__append_147 = validate_complex_double_eigenvectors_scalapack_all_analytic_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__append_148 = validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__append_149 = validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__append_150 = validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__append_151 = validate_complex_double_eigenvectors_scalapack_part_analytic\n@BUILD_KCOMPUTER_FALSE@@WITH_SCALAPACK_TESTS_TRUE@am__append_152 = validate_complex_double_eigenvectors_scalapack_part_analytic\n@WITH_SCALAPACK_TESTS_TRUE@am__append_153 = validate_complex_double_eigenvectors_scalapack_part_analytic_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_154 = validate_real_double_eigenvectors_1stage_analytic_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_155 = validate_real_double_eigenvectors_1stage_analytic_all_layouts\n@WITH_MPI_TRUE@am__append_156 = validate_real_double_eigenvectors_1stage_analytic_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_157 = validate_real_double_eigenvectors_1stage_analytic\n@BUILD_KCOMPUTER_FALSE@am__append_158 = validate_real_double_eigenvectors_1stage_analytic\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_159 = validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts \\\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_160 = validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts \\\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts\n@WITH_MPI_TRUE@am__append_161 = validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_extended.sh \\\n@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_162 = validate_real_double_eigenvectors_2stage_all_kernels_analytic \\\n@BUILD_KCOMPUTER_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_analytic\n@BUILD_KCOMPUTER_FALSE@am__append_163 = validate_real_double_eigenvectors_2stage_all_kernels_analytic \\\n@BUILD_KCOMPUTER_FALSE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_analytic\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__append_164 = validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__append_165 = validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__append_166 = validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__append_167 = validate_real_double_eigenvectors_scalapack_all_analytic\n@BUILD_KCOMPUTER_FALSE@@WITH_SCALAPACK_TESTS_TRUE@am__append_168 = validate_real_double_eigenvectors_scalapack_all_analytic\n@WITH_SCALAPACK_TESTS_TRUE@am__append_169 = validate_real_double_eigenvectors_scalapack_all_analytic_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__append_170 = validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__append_171 = validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__append_172 = validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__append_173 = validate_real_double_eigenvectors_scalapack_part_analytic\n@BUILD_KCOMPUTER_FALSE@@WITH_SCALAPACK_TESTS_TRUE@am__append_174 = validate_real_double_eigenvectors_scalapack_part_analytic\n@WITH_SCALAPACK_TESTS_TRUE@am__append_175 = validate_real_double_eigenvectors_scalapack_part_analytic_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_176 = validate_complex_single_eigenvectors_1stage_analytic_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_177 = validate_complex_single_eigenvectors_1stage_analytic_all_layouts\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_178 = validate_complex_single_eigenvectors_1stage_analytic_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_179 = validate_complex_single_eigenvectors_1stage_analytic\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_180 = validate_complex_single_eigenvectors_1stage_analytic\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_181 = validate_complex_single_eigenvectors_1stage_analytic_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_182 = validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_183 = validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_184 = validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_extended.sh \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_185 = validate_complex_single_eigenvectors_2stage_all_kernels_analytic \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_analytic\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_186 = validate_complex_single_eigenvectors_2stage_all_kernels_analytic \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_analytic\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_187 = validate_complex_single_eigenvectors_2stage_all_kernels_analytic_extended.sh \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_analytic_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_188 = validate_real_single_eigenvectors_1stage_analytic_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_189 = validate_real_single_eigenvectors_1stage_analytic_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_190 = validate_real_single_eigenvectors_1stage_analytic_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_191 = validate_real_single_eigenvectors_1stage_analytic\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_192 = validate_real_single_eigenvectors_1stage_analytic\n@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_193 = validate_real_single_eigenvectors_1stage_analytic_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_194 = validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_195 = validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_196 = validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_extended.sh \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_197 = validate_real_single_eigenvectors_2stage_all_kernels_analytic \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_analytic\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_198 = validate_real_single_eigenvectors_2stage_all_kernels_analytic \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_analytic\n@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_199 = validate_real_single_eigenvectors_2stage_all_kernels_analytic_extended.sh \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_analytic_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_200 = validate_real_double_eigenvalues_1stage_frank_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_201 = validate_real_double_eigenvalues_1stage_frank_all_layouts\n@WITH_MPI_TRUE@am__append_202 = validate_real_double_eigenvalues_1stage_frank_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_203 = validate_real_double_eigenvalues_1stage_frank\n@BUILD_KCOMPUTER_FALSE@am__append_204 = validate_real_double_eigenvalues_1stage_frank\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_205 = validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_206 = validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts\n@WITH_MPI_TRUE@am__append_207 = validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_208 = validate_real_double_eigenvalues_2stage_default_kernel_frank\n@BUILD_KCOMPUTER_FALSE@am__append_209 = validate_real_double_eigenvalues_2stage_default_kernel_frank\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_210 = validate_real_double_eigenvectors_1stage_frank_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_211 = validate_real_double_eigenvectors_1stage_frank_all_layouts\n@WITH_MPI_TRUE@am__append_212 = validate_real_double_eigenvectors_1stage_frank_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_213 = validate_real_double_eigenvectors_1stage_frank\n@BUILD_KCOMPUTER_FALSE@am__append_214 = validate_real_double_eigenvectors_1stage_frank\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_215 = validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts \\\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_216 = validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts \\\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts\n@WITH_MPI_TRUE@am__append_217 = validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_extended.sh \\\n@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_218 = validate_real_double_eigenvectors_2stage_all_kernels_frank \\\n@BUILD_KCOMPUTER_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_frank\n@BUILD_KCOMPUTER_FALSE@am__append_219 = validate_real_double_eigenvectors_2stage_all_kernels_frank \\\n@BUILD_KCOMPUTER_FALSE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_frank\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_220 = validate_real_double_hermitian_multiply_1stage_frank_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_221 = validate_real_double_hermitian_multiply_1stage_frank_all_layouts\n@WITH_MPI_TRUE@am__append_222 = validate_real_double_hermitian_multiply_1stage_frank_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_223 = validate_real_double_hermitian_multiply_1stage_frank\n@BUILD_KCOMPUTER_FALSE@am__append_224 = validate_real_double_hermitian_multiply_1stage_frank\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_225 = validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_226 = validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_227 = validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_228 = validate_real_double_eigenvalues_1stage_gpu_frank\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_229 = validate_real_double_eigenvalues_1stage_gpu_frank\n@WITH_GPU_VERSION_TRUE@am__append_230 = validate_real_double_eigenvalues_1stage_gpu_frank_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_231 = validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_232 = validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_233 = validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_234 = validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_235 = validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank\n@WITH_GPU_VERSION_TRUE@am__append_236 = validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_237 = validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_238 = validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_239 = validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_240 = validate_real_double_eigenvectors_1stage_gpu_frank\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_241 = validate_real_double_eigenvectors_1stage_gpu_frank\n@WITH_GPU_VERSION_TRUE@am__append_242 = validate_real_double_eigenvectors_1stage_gpu_frank_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_243 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts \\\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_244 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts \\\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_245 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_extended.sh \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_246 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank \\\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_frank\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_247 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank \\\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_frank\n@WITH_GPU_VERSION_TRUE@am__append_248 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_extended.sh \\\n@WITH_GPU_VERSION_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_249 = validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_250 = validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_251 = validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_252 = validate_real_double_hermitian_multiply_1stage_gpu_frank\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_253 = validate_real_double_hermitian_multiply_1stage_gpu_frank\n@WITH_GPU_VERSION_TRUE@am__append_254 = validate_real_double_hermitian_multiply_1stage_gpu_frank_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_255 = validate_complex_double_cholesky_1stage_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_256 = validate_complex_double_cholesky_1stage_random_all_layouts\n@WITH_MPI_TRUE@am__append_257 = validate_complex_double_cholesky_1stage_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_258 = validate_complex_double_cholesky_1stage_random\n@BUILD_KCOMPUTER_FALSE@am__append_259 = validate_complex_double_cholesky_1stage_random\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_260 = validate_real_double_cholesky_1stage_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_261 = validate_real_double_cholesky_1stage_random_all_layouts\n@WITH_MPI_TRUE@am__append_262 = validate_real_double_cholesky_1stage_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_263 = validate_real_double_cholesky_1stage_random\n@BUILD_KCOMPUTER_FALSE@am__append_264 = validate_real_double_cholesky_1stage_random\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_265 = validate_real_double_cholesky_1stage_random_split_comm_myself\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_266 = validate_real_double_cholesky_1stage_random_split_comm_myself\n@WITH_MPI_TRUE@am__append_267 = validate_real_double_cholesky_1stage_random_split_comm_myself_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_268 = validate_complex_single_cholesky_1stage_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_269 = validate_complex_single_cholesky_1stage_random_all_layouts\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_270 = validate_complex_single_cholesky_1stage_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_271 = validate_complex_single_cholesky_1stage_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_272 = validate_complex_single_cholesky_1stage_random\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_273 = validate_complex_single_cholesky_1stage_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_274 = validate_real_single_cholesky_1stage_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_275 = validate_real_single_cholesky_1stage_random_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_276 = validate_real_single_cholesky_1stage_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_277 = validate_real_single_cholesky_1stage_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_278 = validate_real_single_cholesky_1stage_random\n@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_279 = validate_real_single_cholesky_1stage_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_280 = validate_complex_double_eigenvectors_1stage_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_281 = validate_complex_double_eigenvectors_1stage_random_all_layouts\n@WITH_MPI_TRUE@am__append_282 = validate_complex_double_eigenvectors_1stage_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_283 = validate_complex_double_eigenvectors_1stage_random\n@BUILD_KCOMPUTER_FALSE@am__append_284 = validate_complex_double_eigenvectors_1stage_random\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_285 = validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts \\\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_286 = validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts \\\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts\n@WITH_MPI_TRUE@am__append_287 = validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_extended.sh \\\n@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_288 = validate_complex_double_eigenvectors_2stage_all_kernels_random \\\n@BUILD_KCOMPUTER_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_random\n@BUILD_KCOMPUTER_FALSE@am__append_289 = validate_complex_double_eigenvectors_2stage_all_kernels_random \\\n@BUILD_KCOMPUTER_FALSE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_random\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_290 = validate_real_double_eigenvectors_1stage_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_291 = validate_real_double_eigenvectors_1stage_random_all_layouts\n@WITH_MPI_TRUE@am__append_292 = validate_real_double_eigenvectors_1stage_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_293 = validate_real_double_eigenvectors_1stage_random\n@BUILD_KCOMPUTER_FALSE@am__append_294 = validate_real_double_eigenvectors_1stage_random\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_295 = validate_real_double_eigenvectors_1stage_random_split_comm_myself \\\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts \\\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_296 = validate_real_double_eigenvectors_1stage_random_split_comm_myself \\\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts \\\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts\n@WITH_MPI_TRUE@am__append_297 = validate_real_double_eigenvectors_1stage_random_split_comm_myself_default.sh \\\n@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_extended.sh \\\n@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_298 = validate_real_double_eigenvectors_2stage_all_kernels_random \\\n@BUILD_KCOMPUTER_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_random\n@BUILD_KCOMPUTER_FALSE@am__append_299 = validate_real_double_eigenvectors_2stage_all_kernels_random \\\n@BUILD_KCOMPUTER_FALSE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_random\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_300 = validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_301 = validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself\n@WITH_MPI_TRUE@am__append_302 = validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_303 = validate_complex_single_eigenvectors_1stage_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_304 = validate_complex_single_eigenvectors_1stage_random_all_layouts\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_305 = validate_complex_single_eigenvectors_1stage_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_306 = validate_complex_single_eigenvectors_1stage_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_307 = validate_complex_single_eigenvectors_1stage_random\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_308 = validate_complex_single_eigenvectors_1stage_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_309 = validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_310 = validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_311 = validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_extended.sh \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_312 = validate_complex_single_eigenvectors_2stage_all_kernels_random \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_313 = validate_complex_single_eigenvectors_2stage_all_kernels_random \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_random\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_314 = validate_complex_single_eigenvectors_2stage_all_kernels_random_extended.sh \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_315 = validate_real_single_eigenvectors_1stage_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_316 = validate_real_single_eigenvectors_1stage_random_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_317 = validate_real_single_eigenvectors_1stage_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_318 = validate_real_single_eigenvectors_1stage_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_319 = validate_real_single_eigenvectors_1stage_random\n@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_320 = validate_real_single_eigenvectors_1stage_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_321 = validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_322 = validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_323 = validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_extended.sh \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_324 = validate_real_single_eigenvectors_2stage_all_kernels_random \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_325 = validate_real_single_eigenvectors_2stage_all_kernels_random \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_random\n@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_326 = validate_real_single_eigenvectors_2stage_all_kernels_random_extended.sh \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_327 = validate_complex_double_generalized_1stage_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_328 = validate_complex_double_generalized_1stage_random_all_layouts\n@WITH_MPI_TRUE@am__append_329 = validate_complex_double_generalized_1stage_random_all_layouts_default.sh\n@BUILD_KCOMPUTER_TRUE@am__append_330 = validate_complex_double_generalized_1stage_random\n@BUILD_KCOMPUTER_FALSE@am__append_331 = validate_complex_double_generalized_1stage_random\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_332 = validate_real_double_generalized_1stage_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_333 = validate_real_double_generalized_1stage_random_all_layouts\n@WITH_MPI_TRUE@am__append_334 = validate_real_double_generalized_1stage_random_all_layouts_default.sh\n@BUILD_KCOMPUTER_TRUE@am__append_335 = validate_real_double_generalized_1stage_random\n@BUILD_KCOMPUTER_FALSE@am__append_336 = validate_real_double_generalized_1stage_random\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_337 = validate_complex_single_generalized_1stage_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_338 = validate_complex_single_generalized_1stage_random_all_layouts\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_339 = validate_complex_single_generalized_1stage_random_all_layouts_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_340 = validate_complex_single_generalized_1stage_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_341 = validate_complex_single_generalized_1stage_random\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_342 = validate_complex_single_generalized_1stage_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_343 = validate_real_single_generalized_1stage_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_344 = validate_real_single_generalized_1stage_random_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_345 = validate_real_single_generalized_1stage_random_all_layouts_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_346 = validate_real_single_generalized_1stage_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_347 = validate_real_single_generalized_1stage_random\n@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_348 = validate_real_single_generalized_1stage_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_349 = validate_complex_double_generalized_decomp_1stage_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_350 = validate_complex_double_generalized_decomp_1stage_random_all_layouts\n@WITH_MPI_TRUE@am__append_351 = validate_complex_double_generalized_decomp_1stage_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_352 = validate_complex_double_generalized_decomp_1stage_random\n@BUILD_KCOMPUTER_FALSE@am__append_353 = validate_complex_double_generalized_decomp_1stage_random\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_354 = validate_real_double_generalized_decomp_1stage_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_355 = validate_real_double_generalized_decomp_1stage_random_all_layouts\n@WITH_MPI_TRUE@am__append_356 = validate_real_double_generalized_decomp_1stage_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_357 = validate_real_double_generalized_decomp_1stage_random\n@BUILD_KCOMPUTER_FALSE@am__append_358 = validate_real_double_generalized_decomp_1stage_random\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_359 = validate_complex_single_generalized_decomp_1stage_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_360 = validate_complex_single_generalized_decomp_1stage_random_all_layouts\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_361 = validate_complex_single_generalized_decomp_1stage_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_362 = validate_complex_single_generalized_decomp_1stage_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_363 = validate_complex_single_generalized_decomp_1stage_random\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_364 = validate_complex_single_generalized_decomp_1stage_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_365 = validate_real_single_generalized_decomp_1stage_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_366 = validate_real_single_generalized_decomp_1stage_random_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_367 = validate_real_single_generalized_decomp_1stage_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_368 = validate_real_single_generalized_decomp_1stage_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_369 = validate_real_single_generalized_decomp_1stage_random\n@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_370 = validate_real_single_generalized_decomp_1stage_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_371 = validate_complex_double_hermitian_multiply_1stage_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_372 = validate_complex_double_hermitian_multiply_1stage_random_all_layouts\n@WITH_MPI_TRUE@am__append_373 = validate_complex_double_hermitian_multiply_1stage_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_374 = validate_complex_double_hermitian_multiply_1stage_random\n@BUILD_KCOMPUTER_FALSE@am__append_375 = validate_complex_double_hermitian_multiply_1stage_random\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_376 = validate_real_double_hermitian_multiply_1stage_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_377 = validate_real_double_hermitian_multiply_1stage_random_all_layouts\n@WITH_MPI_TRUE@am__append_378 = validate_real_double_hermitian_multiply_1stage_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_379 = validate_real_double_hermitian_multiply_1stage_random\n@BUILD_KCOMPUTER_FALSE@am__append_380 = validate_real_double_hermitian_multiply_1stage_random\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_381 = validate_complex_single_hermitian_multiply_1stage_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_382 = validate_complex_single_hermitian_multiply_1stage_random_all_layouts\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_383 = validate_complex_single_hermitian_multiply_1stage_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_384 = validate_complex_single_hermitian_multiply_1stage_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_385 = validate_complex_single_hermitian_multiply_1stage_random\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_386 = validate_complex_single_hermitian_multiply_1stage_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_387 = validate_real_single_hermitian_multiply_1stage_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_388 = validate_real_single_hermitian_multiply_1stage_random_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_389 = validate_real_single_hermitian_multiply_1stage_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_390 = validate_real_single_hermitian_multiply_1stage_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_391 = validate_real_single_hermitian_multiply_1stage_random\n@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_392 = validate_real_single_hermitian_multiply_1stage_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_393 = validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts \\\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_394 = validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts \\\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts\n@WITH_MPI_TRUE@am__append_395 = validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_extended.sh \\\n@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_396 = validate_real_double_eigenvectors_2stage_all_kernels_qr_random \\\n@BUILD_KCOMPUTER_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_qr_random\n@BUILD_KCOMPUTER_FALSE@am__append_397 = validate_real_double_eigenvectors_2stage_all_kernels_qr_random \\\n@BUILD_KCOMPUTER_FALSE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_qr_random\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_398 = validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_399 = validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_400 = validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_extended.sh \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_401 = validate_real_single_eigenvectors_2stage_all_kernels_qr_random \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_qr_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_402 = validate_real_single_eigenvectors_2stage_all_kernels_qr_random \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_qr_random\n@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_403 = validate_real_single_eigenvectors_2stage_all_kernels_qr_random_extended.sh \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_qr_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_404 = validate_complex_double_cholesky_1stage_gpu_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_405 = validate_complex_double_cholesky_1stage_gpu_random_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_406 = validate_complex_double_cholesky_1stage_gpu_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_407 = validate_complex_double_cholesky_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_408 = validate_complex_double_cholesky_1stage_gpu_random\n@WITH_GPU_VERSION_TRUE@am__append_409 = validate_complex_double_cholesky_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_410 = validate_real_double_cholesky_1stage_gpu_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_411 = validate_real_double_cholesky_1stage_gpu_random_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_412 = validate_real_double_cholesky_1stage_gpu_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_413 = validate_real_double_cholesky_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_414 = validate_real_double_cholesky_1stage_gpu_random\n@WITH_GPU_VERSION_TRUE@am__append_415 = validate_real_double_cholesky_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_416 = validate_real_double_cholesky_1stage_gpu_random_split_comm_myself\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_417 = validate_real_double_cholesky_1stage_gpu_random_split_comm_myself\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_418 = validate_real_double_cholesky_1stage_gpu_random_split_comm_myself_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_419 = validate_complex_single_cholesky_1stage_gpu_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_420 = validate_complex_single_cholesky_1stage_gpu_random_all_layouts\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_421 = validate_complex_single_cholesky_1stage_gpu_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_422 = validate_complex_single_cholesky_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_423 = validate_complex_single_cholesky_1stage_gpu_random\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_424 = validate_complex_single_cholesky_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_425 = validate_real_single_cholesky_1stage_gpu_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_426 = validate_real_single_cholesky_1stage_gpu_random_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_427 = validate_real_single_cholesky_1stage_gpu_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_428 = validate_real_single_cholesky_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_429 = validate_real_single_cholesky_1stage_gpu_random\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_430 = validate_real_single_cholesky_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_431 = validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_432 = validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_433 = validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_434 = validate_complex_double_eigenvectors_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_435 = validate_complex_double_eigenvectors_1stage_gpu_random\n@WITH_GPU_VERSION_TRUE@am__append_436 = validate_complex_double_eigenvectors_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_437 = validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts \\\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_438 = validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts \\\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_439 = validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_extended.sh \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_440 = validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random \\\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_random\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_441 = validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random \\\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_random\n@WITH_GPU_VERSION_TRUE@am__append_442 = validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_extended.sh \\\n@WITH_GPU_VERSION_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_443 = validate_real_double_eigenvectors_1stage_gpu_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_444 = validate_real_double_eigenvectors_1stage_gpu_random_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_445 = validate_real_double_eigenvectors_1stage_gpu_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_446 = validate_real_double_eigenvectors_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_447 = validate_real_double_eigenvectors_1stage_gpu_random\n@WITH_GPU_VERSION_TRUE@am__append_448 = validate_real_double_eigenvectors_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_449 = validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself \\\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts \\\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_450 = validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself \\\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts \\\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_451 = validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_default.sh \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_extended.sh \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_452 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_random \\\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_random\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_453 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_random \\\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_random\n@WITH_GPU_VERSION_TRUE@am__append_454 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_extended.sh \\\n@WITH_GPU_VERSION_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_455 = validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_456 = validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_457 = validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_458 = validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_459 = validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_460 = validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_461 = validate_complex_single_eigenvectors_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_462 = validate_complex_single_eigenvectors_1stage_gpu_random\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_463 = validate_complex_single_eigenvectors_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_464 = validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_465 = validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_466 = validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_extended.sh \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_467 = validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_468 = validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_random\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_469 = validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_extended.sh \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_470 = validate_real_single_eigenvectors_1stage_gpu_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_471 = validate_real_single_eigenvectors_1stage_gpu_random_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_472 = validate_real_single_eigenvectors_1stage_gpu_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_473 = validate_real_single_eigenvectors_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_474 = validate_real_single_eigenvectors_1stage_gpu_random\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_475 = validate_real_single_eigenvectors_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_476 = validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_477 = validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_478 = validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_extended.sh \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_479 = validate_real_single_eigenvectors_2stage_all_kernels_gpu_random \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_480 = validate_real_single_eigenvectors_2stage_all_kernels_gpu_random \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_random\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_481 = validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_extended.sh \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_482 = validate_complex_double_generalized_1stage_gpu_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_483 = validate_complex_double_generalized_1stage_gpu_random_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_484 = validate_complex_double_generalized_1stage_gpu_random_all_layouts_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_485 = validate_complex_double_generalized_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_486 = validate_complex_double_generalized_1stage_gpu_random\n@WITH_GPU_VERSION_TRUE@am__append_487 = validate_complex_double_generalized_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_488 = validate_real_double_generalized_1stage_gpu_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_489 = validate_real_double_generalized_1stage_gpu_random_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_490 = validate_real_double_generalized_1stage_gpu_random_all_layouts_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_491 = validate_real_double_generalized_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_492 = validate_real_double_generalized_1stage_gpu_random\n@WITH_GPU_VERSION_TRUE@am__append_493 = validate_real_double_generalized_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_494 = validate_complex_single_generalized_1stage_gpu_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_495 = validate_complex_single_generalized_1stage_gpu_random_all_layouts\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_496 = validate_complex_single_generalized_1stage_gpu_random_all_layouts_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_497 = validate_complex_single_generalized_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_498 = validate_complex_single_generalized_1stage_gpu_random\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_499 = validate_complex_single_generalized_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_500 = validate_real_single_generalized_1stage_gpu_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_501 = validate_real_single_generalized_1stage_gpu_random_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_502 = validate_real_single_generalized_1stage_gpu_random_all_layouts_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_503 = validate_real_single_generalized_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_504 = validate_real_single_generalized_1stage_gpu_random\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_505 = validate_real_single_generalized_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_506 = validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_507 = validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_508 = validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_509 = validate_complex_double_generalized_decomp_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_510 = validate_complex_double_generalized_decomp_1stage_gpu_random\n@WITH_GPU_VERSION_TRUE@am__append_511 = validate_complex_double_generalized_decomp_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_512 = validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_513 = validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_514 = validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_515 = validate_real_double_generalized_decomp_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_516 = validate_real_double_generalized_decomp_1stage_gpu_random\n@WITH_GPU_VERSION_TRUE@am__append_517 = validate_real_double_generalized_decomp_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_518 = validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_519 = validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_520 = validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_521 = validate_complex_single_generalized_decomp_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_522 = validate_complex_single_generalized_decomp_1stage_gpu_random\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_523 = validate_complex_single_generalized_decomp_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_524 = validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_525 = validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_526 = validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_527 = validate_real_single_generalized_decomp_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_528 = validate_real_single_generalized_decomp_1stage_gpu_random\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_529 = validate_real_single_generalized_decomp_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_530 = validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_531 = validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_532 = validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_533 = validate_complex_double_hermitian_multiply_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_534 = validate_complex_double_hermitian_multiply_1stage_gpu_random\n@WITH_GPU_VERSION_TRUE@am__append_535 = validate_complex_double_hermitian_multiply_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_536 = validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_537 = validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_538 = validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_539 = validate_real_double_hermitian_multiply_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_540 = validate_real_double_hermitian_multiply_1stage_gpu_random\n@WITH_GPU_VERSION_TRUE@am__append_541 = validate_real_double_hermitian_multiply_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_542 = validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_543 = validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_544 = validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_545 = validate_complex_single_hermitian_multiply_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_546 = validate_complex_single_hermitian_multiply_1stage_gpu_random\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_547 = validate_complex_single_hermitian_multiply_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_548 = validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_549 = validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_550 = validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_551 = validate_real_single_hermitian_multiply_1stage_gpu_random\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_552 = validate_real_single_hermitian_multiply_1stage_gpu_random\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_553 = validate_real_single_hermitian_multiply_1stage_gpu_random_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_554 = validate_complex_double_cholesky_1stage_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_555 = validate_complex_double_cholesky_1stage_toeplitz_all_layouts\n@WITH_MPI_TRUE@am__append_556 = validate_complex_double_cholesky_1stage_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_557 = validate_complex_double_cholesky_1stage_toeplitz\n@BUILD_KCOMPUTER_FALSE@am__append_558 = validate_complex_double_cholesky_1stage_toeplitz\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_559 = validate_real_double_cholesky_1stage_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_560 = validate_real_double_cholesky_1stage_toeplitz_all_layouts\n@WITH_MPI_TRUE@am__append_561 = validate_real_double_cholesky_1stage_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_562 = validate_real_double_cholesky_1stage_toeplitz\n@BUILD_KCOMPUTER_FALSE@am__append_563 = validate_real_double_cholesky_1stage_toeplitz\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_564 = validate_complex_single_cholesky_1stage_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_565 = validate_complex_single_cholesky_1stage_toeplitz_all_layouts\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_566 = validate_complex_single_cholesky_1stage_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_567 = validate_complex_single_cholesky_1stage_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_568 = validate_complex_single_cholesky_1stage_toeplitz\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_569 = validate_complex_single_cholesky_1stage_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_570 = validate_real_single_cholesky_1stage_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_571 = validate_real_single_cholesky_1stage_toeplitz_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_572 = validate_real_single_cholesky_1stage_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_573 = validate_real_single_cholesky_1stage_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_574 = validate_real_single_cholesky_1stage_toeplitz\n@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_575 = validate_real_single_cholesky_1stage_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_576 = validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_577 = validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts\n@WITH_MPI_TRUE@am__append_578 = validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_579 = validate_complex_double_eigenvalues_1stage_toeplitz\n@BUILD_KCOMPUTER_FALSE@am__append_580 = validate_complex_double_eigenvalues_1stage_toeplitz\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_581 = validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_582 = validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts\n@WITH_MPI_TRUE@am__append_583 = validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_584 = validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz\n@BUILD_KCOMPUTER_FALSE@am__append_585 = validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_586 = validate_real_double_eigenvalues_1stage_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_587 = validate_real_double_eigenvalues_1stage_toeplitz_all_layouts\n@WITH_MPI_TRUE@am__append_588 = validate_real_double_eigenvalues_1stage_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_589 = validate_real_double_eigenvalues_1stage_toeplitz\n@BUILD_KCOMPUTER_FALSE@am__append_590 = validate_real_double_eigenvalues_1stage_toeplitz\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_591 = validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_592 = validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts\n@WITH_MPI_TRUE@am__append_593 = validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_594 = validate_real_double_eigenvalues_2stage_default_kernel_toeplitz\n@BUILD_KCOMPUTER_FALSE@am__append_595 = validate_real_double_eigenvalues_2stage_default_kernel_toeplitz\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_596 = validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_597 = validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_598 = validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_599 = validate_complex_single_eigenvalues_1stage_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_600 = validate_complex_single_eigenvalues_1stage_toeplitz\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_601 = validate_complex_single_eigenvalues_1stage_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_602 = validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_603 = validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_604 = validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_605 = validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_606 = validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_607 = validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_608 = validate_real_single_eigenvalues_1stage_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_609 = validate_real_single_eigenvalues_1stage_toeplitz_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_610 = validate_real_single_eigenvalues_1stage_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_611 = validate_real_single_eigenvalues_1stage_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_612 = validate_real_single_eigenvalues_1stage_toeplitz\n@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_613 = validate_real_single_eigenvalues_1stage_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_614 = validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_615 = validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_616 = validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_617 = validate_real_single_eigenvalues_2stage_default_kernel_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_618 = validate_real_single_eigenvalues_2stage_default_kernel_toeplitz\n@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_619 = validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_620 = validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_621 = validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts\n@WITH_MPI_TRUE@am__append_622 = validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_623 = validate_complex_double_eigenvectors_1stage_toeplitz\n@BUILD_KCOMPUTER_FALSE@am__append_624 = validate_complex_double_eigenvectors_1stage_toeplitz\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_625 = validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts \\\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_626 = validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts \\\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts\n@WITH_MPI_TRUE@am__append_627 = validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_extended.sh \\\n@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_628 = validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz \\\n@BUILD_KCOMPUTER_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_toeplitz\n@BUILD_KCOMPUTER_FALSE@am__append_629 = validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz \\\n@BUILD_KCOMPUTER_FALSE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_toeplitz\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_630 = validate_real_double_eigenvectors_1stage_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_631 = validate_real_double_eigenvectors_1stage_toeplitz_all_layouts\n@WITH_MPI_TRUE@am__append_632 = validate_real_double_eigenvectors_1stage_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_633 = validate_real_double_eigenvectors_1stage_toeplitz\n@BUILD_KCOMPUTER_FALSE@am__append_634 = validate_real_double_eigenvectors_1stage_toeplitz\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_635 = validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts \\\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_636 = validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts \\\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts\n@WITH_MPI_TRUE@am__append_637 = validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_extended.sh \\\n@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_638 = validate_real_double_eigenvectors_2stage_all_kernels_toeplitz \\\n@BUILD_KCOMPUTER_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_toeplitz\n@BUILD_KCOMPUTER_FALSE@am__append_639 = validate_real_double_eigenvectors_2stage_all_kernels_toeplitz \\\n@BUILD_KCOMPUTER_FALSE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_toeplitz\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_640 = validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_641 = validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_642 = validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_643 = validate_complex_single_eigenvectors_1stage_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_644 = validate_complex_single_eigenvectors_1stage_toeplitz\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_645 = validate_complex_single_eigenvectors_1stage_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_646 = validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_647 = validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__append_648 = validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_extended.sh \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_649 = validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_650 = validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_toeplitz\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_651 = validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_extended.sh \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_652 = validate_real_single_eigenvectors_1stage_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_653 = validate_real_single_eigenvectors_1stage_toeplitz_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_654 = validate_real_single_eigenvectors_1stage_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_655 = validate_real_single_eigenvectors_1stage_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_656 = validate_real_single_eigenvectors_1stage_toeplitz\n@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_657 = validate_real_single_eigenvectors_1stage_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_658 = validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_659 = validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_660 = validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_extended.sh \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_661 = validate_real_single_eigenvectors_2stage_all_kernels_toeplitz \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_662 = validate_real_single_eigenvectors_2stage_all_kernels_toeplitz \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_toeplitz\n@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_663 = validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_extended.sh \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__append_664 = validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__append_665 = validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts\n@WITH_MPI_TRUE@am__append_666 = validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@am__append_667 = validate_real_double_solve_tridiagonal_1stage_toeplitz\n@BUILD_KCOMPUTER_FALSE@am__append_668 = validate_real_double_solve_tridiagonal_1stage_toeplitz\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_669 = validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_670 = validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__append_671 = validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_672 = validate_real_single_solve_tridiagonal_1stage_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_673 = validate_real_single_solve_tridiagonal_1stage_toeplitz\n@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_674 = validate_real_single_solve_tridiagonal_1stage_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_675 = validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_676 = validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_677 = validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_678 = validate_complex_double_cholesky_1stage_gpu_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_679 = validate_complex_double_cholesky_1stage_gpu_toeplitz\n@WITH_GPU_VERSION_TRUE@am__append_680 = validate_complex_double_cholesky_1stage_gpu_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_681 = validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_682 = validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_683 = validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_684 = validate_real_double_cholesky_1stage_gpu_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_685 = validate_real_double_cholesky_1stage_gpu_toeplitz\n@WITH_GPU_VERSION_TRUE@am__append_686 = validate_real_double_cholesky_1stage_gpu_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_687 = validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_688 = validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_689 = validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_690 = validate_complex_single_cholesky_1stage_gpu_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_691 = validate_complex_single_cholesky_1stage_gpu_toeplitz\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_692 = validate_complex_single_cholesky_1stage_gpu_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_693 = validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_694 = validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_695 = validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_696 = validate_real_single_cholesky_1stage_gpu_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_697 = validate_real_single_cholesky_1stage_gpu_toeplitz\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_698 = validate_real_single_cholesky_1stage_gpu_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_699 = validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_700 = validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_701 = validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_702 = validate_complex_double_eigenvalues_1stage_gpu_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_703 = validate_complex_double_eigenvalues_1stage_gpu_toeplitz\n@WITH_GPU_VERSION_TRUE@am__append_704 = validate_complex_double_eigenvalues_1stage_gpu_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_705 = validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_706 = validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_707 = validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_708 = validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_709 = validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz\n@WITH_GPU_VERSION_TRUE@am__append_710 = validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_711 = validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_712 = validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_713 = validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_714 = validate_real_double_eigenvalues_1stage_gpu_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_715 = validate_real_double_eigenvalues_1stage_gpu_toeplitz\n@WITH_GPU_VERSION_TRUE@am__append_716 = validate_real_double_eigenvalues_1stage_gpu_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_717 = validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_718 = validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_719 = validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_720 = validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_721 = validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz\n@WITH_GPU_VERSION_TRUE@am__append_722 = validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_723 = validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_724 = validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_725 = validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_726 = validate_complex_single_eigenvalues_1stage_gpu_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_727 = validate_complex_single_eigenvalues_1stage_gpu_toeplitz\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_728 = validate_complex_single_eigenvalues_1stage_gpu_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_729 = validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_730 = validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_731 = validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_732 = validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_733 = validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_734 = validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_735 = validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_736 = validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_737 = validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_738 = validate_real_single_eigenvalues_1stage_gpu_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_739 = validate_real_single_eigenvalues_1stage_gpu_toeplitz\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_740 = validate_real_single_eigenvalues_1stage_gpu_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_741 = validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_742 = validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_743 = validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_744 = validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_745 = validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_746 = validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_747 = validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_748 = validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_749 = validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_750 = validate_complex_double_eigenvectors_1stage_gpu_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_751 = validate_complex_double_eigenvectors_1stage_gpu_toeplitz\n@WITH_GPU_VERSION_TRUE@am__append_752 = validate_complex_double_eigenvectors_1stage_gpu_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_753 = validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts \\\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_754 = validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts \\\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_755 = validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_extended.sh \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_756 = validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz \\\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_757 = validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz \\\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz\n@WITH_GPU_VERSION_TRUE@am__append_758 = validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_extended.sh \\\n@WITH_GPU_VERSION_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_759 = validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_760 = validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_761 = validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_762 = validate_real_double_eigenvectors_1stage_gpu_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_763 = validate_real_double_eigenvectors_1stage_gpu_toeplitz\n@WITH_GPU_VERSION_TRUE@am__append_764 = validate_real_double_eigenvectors_1stage_gpu_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_765 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts \\\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_766 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts \\\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_767 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_extended.sh \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_768 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz \\\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_769 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz \\\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz\n@WITH_GPU_VERSION_TRUE@am__append_770 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_extended.sh \\\n@WITH_GPU_VERSION_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_771 = validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_772 = validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_773 = validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_774 = validate_complex_single_eigenvectors_1stage_gpu_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_775 = validate_complex_single_eigenvectors_1stage_gpu_toeplitz\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_776 = validate_complex_single_eigenvectors_1stage_gpu_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_777 = validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_778 = validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_779 = validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_extended.sh \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_780 = validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_781 = validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__append_782 = validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_extended.sh \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_783 = validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_784 = validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_785 = validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_786 = validate_real_single_eigenvectors_1stage_gpu_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_787 = validate_real_single_eigenvectors_1stage_gpu_toeplitz\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_788 = validate_real_single_eigenvectors_1stage_gpu_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_789 = validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_790 = validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_791 = validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_extended.sh \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_792 = validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_793 = validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_794 = validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_extended.sh \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_795 = validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_796 = validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_797 = validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__append_798 = validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__append_799 = validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz\n@WITH_GPU_VERSION_TRUE@am__append_800 = validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_default.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_801 = validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_802 = validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__append_803 = validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_extended.sh\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_804 = validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_805 = validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__append_806 = validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_default.sh\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@am__append_807 = validate_autotune_c_version_complex_double_extended.sh \\\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@\tvalidate_autotune_c_version_real_double_extended.sh\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@am__append_808 = validate_autotune_c_version_complex_double \\\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@\tvalidate_autotune_c_version_real_double\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_809 = validate_autotune_c_version_complex_single_extended.sh\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_810 = validate_autotune_c_version_complex_single\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_811 = validate_autotune_c_version_real_single_extended.sh\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_812 = validate_autotune_c_version_real_single\n@ENABLE_AUTOTUNING_TRUE@am__append_813 = validate_autotune_complex_double_extended.sh \\\n@ENABLE_AUTOTUNING_TRUE@\tvalidate_autotune_real_double_extended.sh\n@ENABLE_AUTOTUNING_TRUE@am__append_814 =  \\\n@ENABLE_AUTOTUNING_TRUE@\tvalidate_autotune_complex_double \\\n@ENABLE_AUTOTUNING_TRUE@\tvalidate_autotune_real_double\n@ENABLE_AUTOTUNING_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_815 = validate_autotune_complex_single_extended.sh\n@ENABLE_AUTOTUNING_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_816 = validate_autotune_complex_single\n@ENABLE_AUTOTUNING_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_817 = validate_autotune_real_single_extended.sh\n@ENABLE_AUTOTUNING_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_818 = validate_autotune_real_single\n@ENABLE_AUTOTUNING_TRUE@am__append_819 = validate_multiple_objs_real_double_extended.sh\n@ENABLE_AUTOTUNING_TRUE@am__append_820 = validate_multiple_objs_real_double\n@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_821 = test_skewsymmetric_real_single_extended.sh\n@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_822 = test_skewsymmetric_real_single\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@am__append_823 = validate_multiple_objs_real_double_c_version_extended.sh\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@am__append_824 = validate_multiple_objs_real_double_c_version\n@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_825 = validate_single_real_2stage_banded@SUFFIX@\n@WANT_SINGLE_PRECISION_REAL_TRUE@am__append_826 = validate_single_real_2stage_banded@SUFFIX@_default.sh\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_827 = validate_single_complex_2stage_banded@SUFFIX@\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__append_828 = validate_single_complex_2stage_banded@SUFFIX@_default.sh\n@WITH_PYTHON_TESTS_TRUE@am__append_829 = test_python.sh\n@WITH_SCALAPACK_TESTS_TRUE@am__append_830 = \\\n@WITH_SCALAPACK_TESTS_TRUE@  test/shared/test_scalapack_template.F90\n\nsubdir = .\nACLOCAL_M4 = $(top_srcdir)/aclocal.m4\nam__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_gnu_make.m4 \\\n\t$(top_srcdir)/m4/ax_ext.m4 \\\n\t$(top_srcdir)/m4/ax_gcc_x86_avx_xgetbv.m4 \\\n\t$(top_srcdir)/m4/ax_gcc_x86_cpuid.m4 \\\n\t$(top_srcdir)/m4/ax_prog_cc_mpi.m4 \\\n\t$(top_srcdir)/m4/ax_prog_doxygen.m4 \\\n\t$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \\\n\t$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \\\n\t$(top_srcdir)/m4/lt~obsolete.m4 \\\n\t$(top_srcdir)/m4/m4_ax_check_compile_flag.m4 \\\n\t$(top_srcdir)/fdep/fortran_dependencies.m4 \\\n\t$(top_srcdir)/m4/ax_elpa_openmp.m4 \\\n\t$(top_srcdir)/m4/ax_prog_fc_mpi.m4 \\\n\t$(top_srcdir)/m4/ax_fc_check_define.m4 \\\n\t$(top_srcdir)/configure.ac\nam__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n\t$(ACLOCAL_M4)\nDIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \\\n\t$(am__configure_deps) $(am__pyelpa_PYTHON_DIST) \\\n\t$(dist_doc_DATA) $(nobase_elpa_include_HEADERS) \\\n\t$(am__DIST_COMMON)\nam__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n configure.lineno config.status.lineno\nmkinstalldirs = $(install_sh) -d\nCONFIG_HEADER = config.h\nCONFIG_CLEAN_FILES = Doxyfile ${PKG_CONFIG_FILE} elpa/elpa_constants.h \\\n\telpa/elpa_version.h elpa/elpa_build_config.h\nCONFIG_CLEAN_VPATH_FILES =\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@am__EXEEXT_1 = validate_c_version_complex_double_eigenvectors_1stage_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_complex_double_eigenvectors_2stage_default_kernel_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_real_double_eigenvectors_1stage_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_real_double_eigenvectors_2stage_default_kernel_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_2 = validate_c_version_complex_single_eigenvectors_1stage_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\tvalidate_c_version_complex_single_eigenvectors_2stage_default_kernel_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_3 = validate_c_version_real_single_eigenvectors_1stage_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_c_version_real_single_eigenvectors_2stage_default_kernel_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@am__EXEEXT_4 = validate_c_version_complex_double_generalized_1stage_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_real_double_generalized_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_5 = validate_c_version_complex_single_generalized_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_6 = validate_c_version_real_single_generalized_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@am__EXEEXT_7 = validate_c_version_complex_double_generalized_decomp_1stage_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_real_double_generalized_decomp_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_8 = validate_c_version_complex_single_generalized_decomp_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_9 = validate_c_version_real_single_generalized_decomp_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_10 = validate_c_version_complex_double_eigenvectors_1stage_gpu_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_double_eigenvectors_1stage_gpu_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_11 = validate_c_version_complex_single_eigenvectors_1stage_gpu_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_12 = validate_c_version_real_single_eigenvectors_1stage_gpu_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_13 = validate_c_version_complex_double_generalized_1stage_gpu_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_double_generalized_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_14 = validate_c_version_complex_single_generalized_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_15 = validate_c_version_real_single_generalized_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_16 = validate_c_version_complex_double_generalized_decomp_1stage_gpu_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_double_generalized_decomp_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_17 = validate_c_version_complex_single_generalized_decomp_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_18 = validate_c_version_real_single_generalized_decomp_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_19 = validate_complex_double_eigenvectors_1stage_analytic_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_20 = validate_complex_double_eigenvectors_1stage_analytic$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_21 = validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_22 = validate_complex_double_eigenvectors_2stage_all_kernels_analytic$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_analytic$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__EXEEXT_23 = validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__EXEEXT_24 = validate_complex_double_eigenvectors_scalapack_all_analytic$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__EXEEXT_25 = validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__EXEEXT_26 = validate_complex_double_eigenvectors_scalapack_part_analytic$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_27 = validate_real_double_eigenvectors_1stage_analytic_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_28 = validate_real_double_eigenvectors_1stage_analytic$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_29 = validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_30 = validate_real_double_eigenvectors_2stage_all_kernels_analytic$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_analytic$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__EXEEXT_31 = validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__EXEEXT_32 = validate_real_double_eigenvectors_scalapack_all_analytic$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__EXEEXT_33 = validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__EXEEXT_34 = validate_real_double_eigenvectors_scalapack_part_analytic$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_35 = validate_complex_single_eigenvectors_1stage_analytic_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_36 = validate_complex_single_eigenvectors_1stage_analytic$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_37 = validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_38 = validate_complex_single_eigenvectors_2stage_all_kernels_analytic$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_analytic$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_39 = validate_real_single_eigenvectors_1stage_analytic_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_40 = validate_real_single_eigenvectors_1stage_analytic$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_41 = validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_42 = validate_real_single_eigenvectors_2stage_all_kernels_analytic$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_analytic$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_43 = validate_real_double_eigenvalues_1stage_frank_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_44 = validate_real_double_eigenvalues_1stage_frank$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_45 = validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_46 = validate_real_double_eigenvalues_2stage_default_kernel_frank$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_47 = validate_real_double_eigenvectors_1stage_frank_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_48 = validate_real_double_eigenvectors_1stage_frank$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_49 = validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_50 = validate_real_double_eigenvectors_2stage_all_kernels_frank$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_frank$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_51 = validate_real_double_hermitian_multiply_1stage_frank_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_52 = validate_real_double_hermitian_multiply_1stage_frank$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_53 = validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_54 = validate_real_double_eigenvalues_1stage_gpu_frank$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_55 = validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_56 = validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_57 = validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_58 = validate_real_double_eigenvectors_1stage_gpu_frank$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_59 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_60 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_frank$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_61 = validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_62 = validate_real_double_hermitian_multiply_1stage_gpu_frank$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_63 = validate_complex_double_cholesky_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_64 = validate_complex_double_cholesky_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_65 = validate_real_double_cholesky_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_66 = validate_real_double_cholesky_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_67 = validate_real_double_cholesky_1stage_random_split_comm_myself$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_68 = validate_complex_single_cholesky_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_69 = validate_complex_single_cholesky_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_70 = validate_real_single_cholesky_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_71 = validate_real_single_cholesky_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_72 = validate_complex_double_eigenvectors_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_73 = validate_complex_double_eigenvectors_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_74 = validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_75 = validate_complex_double_eigenvectors_2stage_all_kernels_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_76 = validate_real_double_eigenvectors_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_77 = validate_real_double_eigenvectors_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_78 = validate_real_double_eigenvectors_1stage_random_split_comm_myself$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_79 = validate_real_double_eigenvectors_2stage_all_kernels_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_80 = validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_81 = validate_complex_single_eigenvectors_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_82 = validate_complex_single_eigenvectors_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_83 = validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_84 = validate_complex_single_eigenvectors_2stage_all_kernels_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_85 = validate_real_single_eigenvectors_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_86 = validate_real_single_eigenvectors_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_87 = validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_88 = validate_real_single_eigenvectors_2stage_all_kernels_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_89 = validate_complex_double_generalized_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_90 = validate_complex_double_generalized_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_91 = validate_real_double_generalized_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_92 = validate_real_double_generalized_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_93 = validate_complex_single_generalized_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_94 = validate_complex_single_generalized_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_95 = validate_real_single_generalized_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_96 = validate_real_single_generalized_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_97 = validate_complex_double_generalized_decomp_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_98 = validate_complex_double_generalized_decomp_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_99 = validate_real_double_generalized_decomp_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_100 = validate_real_double_generalized_decomp_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_101 = validate_complex_single_generalized_decomp_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_102 = validate_complex_single_generalized_decomp_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_103 = validate_real_single_generalized_decomp_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_104 = validate_real_single_generalized_decomp_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_105 = validate_complex_double_hermitian_multiply_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_106 = validate_complex_double_hermitian_multiply_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_107 = validate_real_double_hermitian_multiply_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_108 = validate_real_double_hermitian_multiply_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_109 = validate_complex_single_hermitian_multiply_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_110 = validate_complex_single_hermitian_multiply_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_111 = validate_real_single_hermitian_multiply_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_112 = validate_real_single_hermitian_multiply_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_113 = validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_114 = validate_real_double_eigenvectors_2stage_all_kernels_qr_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_qr_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_115 = validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_116 = validate_real_single_eigenvectors_2stage_all_kernels_qr_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_qr_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_117 = validate_complex_double_cholesky_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_118 = validate_complex_double_cholesky_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_119 = validate_real_double_cholesky_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_120 = validate_real_double_cholesky_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_121 = validate_real_double_cholesky_1stage_gpu_random_split_comm_myself$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_122 = validate_complex_single_cholesky_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_123 = validate_complex_single_cholesky_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_124 = validate_real_single_cholesky_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_125 = validate_real_single_cholesky_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_126 = validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_127 = validate_complex_double_eigenvectors_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_128 = validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_129 = validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_130 = validate_real_double_eigenvectors_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_131 = validate_real_double_eigenvectors_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_132 = validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_133 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_134 = validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_135 = validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_136 = validate_complex_single_eigenvectors_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_137 = validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_138 = validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_139 = validate_real_single_eigenvectors_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_140 = validate_real_single_eigenvectors_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_141 = validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_142 = validate_real_single_eigenvectors_2stage_all_kernels_gpu_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_143 = validate_complex_double_generalized_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_144 = validate_complex_double_generalized_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_145 = validate_real_double_generalized_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_146 = validate_real_double_generalized_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_147 = validate_complex_single_generalized_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_148 = validate_complex_single_generalized_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_149 = validate_real_single_generalized_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_150 = validate_real_single_generalized_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_151 = validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_152 = validate_complex_double_generalized_decomp_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_153 = validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_154 = validate_real_double_generalized_decomp_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_155 = validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_156 = validate_complex_single_generalized_decomp_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_157 = validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_158 = validate_real_single_generalized_decomp_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_159 = validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_160 = validate_complex_double_hermitian_multiply_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_161 = validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_162 = validate_real_double_hermitian_multiply_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_163 = validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_164 = validate_complex_single_hermitian_multiply_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_165 = validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_166 = validate_real_single_hermitian_multiply_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_167 = validate_complex_double_cholesky_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_168 = validate_complex_double_cholesky_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_169 = validate_real_double_cholesky_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_170 = validate_real_double_cholesky_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_171 = validate_complex_single_cholesky_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_172 = validate_complex_single_cholesky_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_173 = validate_real_single_cholesky_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_174 = validate_real_single_cholesky_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_175 = validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_176 = validate_complex_double_eigenvalues_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_177 = validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_178 = validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_179 = validate_real_double_eigenvalues_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_180 = validate_real_double_eigenvalues_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_181 = validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_182 = validate_real_double_eigenvalues_2stage_default_kernel_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_183 = validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_184 = validate_complex_single_eigenvalues_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_185 = validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_186 = validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_187 = validate_real_single_eigenvalues_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_188 = validate_real_single_eigenvalues_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_189 = validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_190 = validate_real_single_eigenvalues_2stage_default_kernel_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_191 = validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_192 = validate_complex_double_eigenvectors_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_193 = validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_194 = validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_195 = validate_real_double_eigenvectors_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_196 = validate_real_double_eigenvectors_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_197 = validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_198 = validate_real_double_eigenvectors_2stage_all_kernels_toeplitz$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_199 = validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_200 = validate_complex_single_eigenvectors_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_201 = validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_202 = validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_203 = validate_real_single_eigenvectors_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_204 = validate_real_single_eigenvectors_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_205 = validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_206 = validate_real_single_eigenvectors_2stage_all_kernels_toeplitz$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_MPI_TRUE@am__EXEEXT_207 = validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@am__EXEEXT_208 = validate_real_double_solve_tridiagonal_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_209 = validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_210 = validate_real_single_solve_tridiagonal_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_211 = validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_212 = validate_complex_double_cholesky_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_213 = validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_214 = validate_real_double_cholesky_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_215 = validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_216 = validate_complex_single_cholesky_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_217 = validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_218 = validate_real_single_cholesky_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_219 = validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_220 = validate_complex_double_eigenvalues_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_221 = validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_222 = validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_223 = validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_224 = validate_real_double_eigenvalues_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_225 = validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_226 = validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_227 = validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_228 = validate_complex_single_eigenvalues_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_229 = validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_230 = validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_231 = validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_232 = validate_real_single_eigenvalues_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_233 = validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_234 = validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_235 = validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_236 = validate_complex_double_eigenvectors_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_237 = validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_238 = validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_239 = validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_240 = validate_real_double_eigenvectors_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_241 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_242 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_243 = validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_244 = validate_complex_single_eigenvectors_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_245 = validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_246 = validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_247 = validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_248 = validate_real_single_eigenvectors_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_249 = validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_250 = validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz$(EXEEXT) \\\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_251 = validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_252 = validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_253 = validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_254 = validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz$(EXEEXT)\nam__installdirs = \"$(DESTDIR)$(bindir)\" \"$(DESTDIR)$(libdir)\" \\\n\t\"$(DESTDIR)$(pyelpadir)\" \"$(DESTDIR)$(pyelpadir)\" \\\n\t\"$(DESTDIR)$(man1dir)\" \"$(DESTDIR)$(man3dir)\" \\\n\t\"$(DESTDIR)$(docdir)\" \"$(DESTDIR)$(pkgconfigdir)\" \\\n\t\"$(DESTDIR)$(elpa_includedir)\" \"$(DESTDIR)$(elpa_includedir)\"\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@am__EXEEXT_255 = validate_c_version_complex_double_eigenvectors_1stage_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_complex_double_eigenvectors_2stage_default_kernel_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_real_double_eigenvectors_1stage_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_real_double_eigenvectors_2stage_default_kernel_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_256 = validate_c_version_complex_single_eigenvectors_1stage_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\tvalidate_c_version_complex_single_eigenvectors_2stage_default_kernel_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_257 = validate_c_version_real_single_eigenvectors_1stage_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_c_version_real_single_eigenvectors_2stage_default_kernel_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@am__EXEEXT_258 = validate_c_version_complex_double_generalized_1stage_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_real_double_generalized_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_259 = validate_c_version_complex_single_generalized_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_260 = validate_c_version_real_single_generalized_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@am__EXEEXT_261 = validate_c_version_complex_double_generalized_decomp_1stage_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@\tvalidate_c_version_real_double_generalized_decomp_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_262 = validate_c_version_complex_single_generalized_decomp_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_263 = validate_c_version_real_single_generalized_decomp_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_264 = validate_c_version_complex_double_eigenvectors_1stage_gpu_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_double_eigenvectors_1stage_gpu_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_265 = validate_c_version_complex_single_eigenvectors_1stage_gpu_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_266 = validate_c_version_real_single_eigenvectors_1stage_gpu_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_267 = validate_c_version_complex_double_generalized_1stage_gpu_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_double_generalized_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_268 = validate_c_version_complex_single_generalized_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_269 = validate_c_version_real_single_generalized_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_270 = validate_c_version_complex_double_generalized_decomp_1stage_gpu_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_c_version_real_double_generalized_decomp_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_271 = validate_c_version_complex_single_generalized_decomp_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_272 = validate_c_version_real_single_generalized_decomp_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_273 = validate_complex_double_eigenvectors_1stage_analytic_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_274 = validate_complex_double_eigenvectors_1stage_analytic$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_275 = validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_276 = validate_complex_double_eigenvectors_2stage_all_kernels_analytic$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_analytic$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__EXEEXT_277 = validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_SCALAPACK_TESTS_TRUE@am__EXEEXT_278 = validate_complex_double_eigenvectors_scalapack_all_analytic$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__EXEEXT_279 = validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_SCALAPACK_TESTS_TRUE@am__EXEEXT_280 = validate_complex_double_eigenvectors_scalapack_part_analytic$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_281 = validate_real_double_eigenvectors_1stage_analytic_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_282 = validate_real_double_eigenvectors_1stage_analytic$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_283 = validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_284 = validate_real_double_eigenvectors_2stage_all_kernels_analytic$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_analytic$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__EXEEXT_285 = validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_SCALAPACK_TESTS_TRUE@am__EXEEXT_286 = validate_real_double_eigenvectors_scalapack_all_analytic$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am__EXEEXT_287 = validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_SCALAPACK_TESTS_TRUE@am__EXEEXT_288 = validate_real_double_eigenvectors_scalapack_part_analytic$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_289 = validate_complex_single_eigenvectors_1stage_analytic_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_290 = validate_complex_single_eigenvectors_1stage_analytic$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_291 = validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_292 = validate_complex_single_eigenvectors_2stage_all_kernels_analytic$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_analytic$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_293 = validate_real_single_eigenvectors_1stage_analytic_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_294 = validate_real_single_eigenvectors_1stage_analytic$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_295 = validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_296 = validate_real_single_eigenvectors_2stage_all_kernels_analytic$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_analytic$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_297 = validate_real_double_eigenvalues_1stage_frank_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_298 = validate_real_double_eigenvalues_1stage_frank$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_299 = validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_300 = validate_real_double_eigenvalues_2stage_default_kernel_frank$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_301 = validate_real_double_eigenvectors_1stage_frank_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_302 = validate_real_double_eigenvectors_1stage_frank$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_303 = validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_304 = validate_real_double_eigenvectors_2stage_all_kernels_frank$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_frank$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_305 = validate_real_double_hermitian_multiply_1stage_frank_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_306 = validate_real_double_hermitian_multiply_1stage_frank$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_307 = validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_308 = validate_real_double_eigenvalues_1stage_gpu_frank$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_309 = validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_310 = validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_311 = validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_312 = validate_real_double_eigenvectors_1stage_gpu_frank$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_313 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_314 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_frank$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_315 = validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_316 = validate_real_double_hermitian_multiply_1stage_gpu_frank$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_317 = validate_complex_double_cholesky_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_318 = validate_complex_double_cholesky_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_319 = validate_real_double_cholesky_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_320 = validate_real_double_cholesky_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_321 = validate_real_double_cholesky_1stage_random_split_comm_myself$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_322 = validate_complex_single_cholesky_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_323 = validate_complex_single_cholesky_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_324 = validate_real_single_cholesky_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_325 = validate_real_single_cholesky_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_326 = validate_complex_double_eigenvectors_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_327 = validate_complex_double_eigenvectors_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_328 = validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_329 = validate_complex_double_eigenvectors_2stage_all_kernels_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_330 = validate_real_double_eigenvectors_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_331 = validate_real_double_eigenvectors_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_332 = validate_real_double_eigenvectors_1stage_random_split_comm_myself$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_333 = validate_real_double_eigenvectors_2stage_all_kernels_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_334 = validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_335 = validate_complex_single_eigenvectors_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_336 = validate_complex_single_eigenvectors_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_337 = validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_338 = validate_complex_single_eigenvectors_2stage_all_kernels_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_339 = validate_real_single_eigenvectors_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_340 = validate_real_single_eigenvectors_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_341 = validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_342 = validate_real_single_eigenvectors_2stage_all_kernels_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_343 = validate_complex_double_generalized_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_344 = validate_complex_double_generalized_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_345 = validate_real_double_generalized_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_346 = validate_real_double_generalized_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_347 = validate_complex_single_generalized_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_348 = validate_complex_single_generalized_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_349 = validate_real_single_generalized_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_350 = validate_real_single_generalized_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_351 = validate_complex_double_generalized_decomp_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_352 = validate_complex_double_generalized_decomp_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_353 = validate_real_double_generalized_decomp_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_354 = validate_real_double_generalized_decomp_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_355 = validate_complex_single_generalized_decomp_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_356 = validate_complex_single_generalized_decomp_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_357 = validate_real_single_generalized_decomp_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_358 = validate_real_single_generalized_decomp_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_359 = validate_complex_double_hermitian_multiply_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_360 = validate_complex_double_hermitian_multiply_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_361 = validate_real_double_hermitian_multiply_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_362 = validate_real_double_hermitian_multiply_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_363 = validate_complex_single_hermitian_multiply_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_364 = validate_complex_single_hermitian_multiply_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_365 = validate_real_single_hermitian_multiply_1stage_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_366 = validate_real_single_hermitian_multiply_1stage_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_367 = validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_368 = validate_real_double_eigenvectors_2stage_all_kernels_qr_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_qr_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_369 = validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_370 = validate_real_single_eigenvectors_2stage_all_kernels_qr_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_qr_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_371 = validate_complex_double_cholesky_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_372 = validate_complex_double_cholesky_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_373 = validate_real_double_cholesky_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_374 = validate_real_double_cholesky_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_375 = validate_real_double_cholesky_1stage_gpu_random_split_comm_myself$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_376 = validate_complex_single_cholesky_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_377 = validate_complex_single_cholesky_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_378 = validate_real_single_cholesky_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_379 = validate_real_single_cholesky_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_380 = validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_381 = validate_complex_double_eigenvectors_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_382 = validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_383 = validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_384 = validate_real_double_eigenvectors_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_385 = validate_real_double_eigenvectors_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_386 = validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_387 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_388 = validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_389 = validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_390 = validate_complex_single_eigenvectors_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_391 = validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_392 = validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_393 = validate_real_single_eigenvectors_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_394 = validate_real_single_eigenvectors_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_395 = validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_396 = validate_real_single_eigenvectors_2stage_all_kernels_gpu_random$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_397 = validate_complex_double_generalized_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_398 = validate_complex_double_generalized_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_399 = validate_real_double_generalized_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_400 = validate_real_double_generalized_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_401 = validate_complex_single_generalized_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_402 = validate_complex_single_generalized_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_403 = validate_real_single_generalized_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_404 = validate_real_single_generalized_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_405 = validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_406 = validate_complex_double_generalized_decomp_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_407 = validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_408 = validate_real_double_generalized_decomp_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_409 = validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_410 = validate_complex_single_generalized_decomp_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_411 = validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_412 = validate_real_single_generalized_decomp_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_413 = validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_414 = validate_complex_double_hermitian_multiply_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_415 = validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_416 = validate_real_double_hermitian_multiply_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_417 = validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_418 = validate_complex_single_hermitian_multiply_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_419 = validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_420 = validate_real_single_hermitian_multiply_1stage_gpu_random$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_421 = validate_complex_double_cholesky_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_422 = validate_complex_double_cholesky_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_423 = validate_real_double_cholesky_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_424 = validate_real_double_cholesky_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_425 = validate_complex_single_cholesky_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_426 = validate_complex_single_cholesky_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_427 = validate_real_single_cholesky_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_428 = validate_real_single_cholesky_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_429 = validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_430 = validate_complex_double_eigenvalues_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_431 = validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_432 = validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_433 = validate_real_double_eigenvalues_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_434 = validate_real_double_eigenvalues_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_435 = validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_436 = validate_real_double_eigenvalues_2stage_default_kernel_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_437 = validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_438 = validate_complex_single_eigenvalues_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_439 = validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_440 = validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_441 = validate_real_single_eigenvalues_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_442 = validate_real_single_eigenvalues_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_443 = validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_444 = validate_real_single_eigenvalues_2stage_default_kernel_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_445 = validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_446 = validate_complex_double_eigenvectors_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_447 = validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_448 = validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_449 = validate_real_double_eigenvectors_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_450 = validate_real_double_eigenvectors_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_451 = validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_452 = validate_real_double_eigenvectors_2stage_all_kernels_toeplitz$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_453 = validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_454 = validate_complex_single_eigenvectors_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am__EXEEXT_455 = validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_456 = validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_457 = validate_real_single_eigenvectors_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_458 = validate_real_single_eigenvectors_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_459 = validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_460 = validate_real_single_eigenvectors_2stage_all_kernels_toeplitz$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_MPI_TRUE@am__EXEEXT_461 = validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@am__EXEEXT_462 = validate_real_double_solve_tridiagonal_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am__EXEEXT_463 = validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_464 = validate_real_single_solve_tridiagonal_1stage_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_465 = validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_466 = validate_complex_double_cholesky_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_467 = validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_468 = validate_real_double_cholesky_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_469 = validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_470 = validate_complex_single_cholesky_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_471 = validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_472 = validate_real_single_cholesky_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_473 = validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_474 = validate_complex_double_eigenvalues_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_475 = validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_476 = validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_477 = validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_478 = validate_real_double_eigenvalues_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_479 = validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_480 = validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_481 = validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_482 = validate_complex_single_eigenvalues_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_483 = validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_484 = validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_485 = validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_486 = validate_real_single_eigenvalues_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_487 = validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_488 = validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_489 = validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_490 = validate_complex_double_eigenvectors_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_491 = validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_492 = validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@\tvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_493 = validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_494 = validate_real_double_eigenvectors_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_495 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_496 = validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@\tvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_497 = validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_498 = validate_complex_single_eigenvectors_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_499 = validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_500 = validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_501 = validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_502 = validate_real_single_eigenvectors_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_503 = validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_504 = validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz$(EXEEXT) \\\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@\tvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_505 = validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_506 = validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am__EXEEXT_507 = validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n@BUILD_KCOMPUTER_FALSE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am__EXEEXT_508 = validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz$(EXEEXT)\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@am__EXEEXT_509 = validate_autotune_c_version_complex_double$(EXEEXT) \\\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@\tvalidate_autotune_c_version_real_double$(EXEEXT)\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_510 = validate_autotune_c_version_complex_single$(EXEEXT)\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_511 = validate_autotune_c_version_real_single$(EXEEXT)\n@ENABLE_AUTOTUNING_TRUE@am__EXEEXT_512 = validate_autotune_complex_double$(EXEEXT) \\\n@ENABLE_AUTOTUNING_TRUE@\tvalidate_autotune_real_double$(EXEEXT)\n@ENABLE_AUTOTUNING_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_513 = validate_autotune_complex_single$(EXEEXT)\n@ENABLE_AUTOTUNING_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_514 = validate_autotune_real_single$(EXEEXT)\n@ENABLE_AUTOTUNING_TRUE@am__EXEEXT_515 = validate_multiple_objs_real_double$(EXEEXT)\n@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_516 = test_skewsymmetric_real_single$(EXEEXT)\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@am__EXEEXT_517 = validate_multiple_objs_real_double_c_version$(EXEEXT)\n@WANT_SINGLE_PRECISION_REAL_TRUE@am__EXEEXT_518 = validate_single_real_2stage_banded@SUFFIX@$(EXEEXT)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am__EXEEXT_519 = validate_single_complex_2stage_banded@SUFFIX@$(EXEEXT)\nPROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)\nam__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\nam__vpath_adj = case $$p in \\\n    $(srcdir)/*) f=`echo \"$$p\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n    *) f=$$p;; \\\n  esac;\nam__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\nam__install_max = 40\nam__nobase_strip_setup = \\\n  srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*|]/\\\\\\\\&/g'`\nam__nobase_strip = \\\n  for p in $$list; do echo \"$$p\"; done | sed -e \"s|$$srcdirstrip/||\"\nam__nobase_list = $(am__nobase_strip_setup); \\\n  for p in $$list; do echo \"$$p $$p\"; done | \\\n  sed \"s| $$srcdirstrip/| |;\"' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,' | \\\n  $(AWK) 'BEGIN { files[\".\"] = \"\" } { files[$$2] = files[$$2] \" \" $$1; \\\n    if (++n[$$2] == $(am__install_max)) \\\n      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = \"\" } } \\\n    END { for (dir in files) print dir, files[dir] }'\nam__base_list = \\\n  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\nam__uninstall_files_from_dir = { \\\n  test -z \"$$files\" \\\n    || { test ! -d \"$$dir\" && test ! -f \"$$dir\" && test ! -r \"$$dir\"; } \\\n    || { echo \" ( cd '$$dir' && rm -f\" $$files \")\"; \\\n         $(am__cd) \"$$dir\" && rm -f $$files; }; \\\n  }\nLTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES) \\\n\t$(pyelpa_LTLIBRARIES)\nlibelpa@SUFFIX@_la_DEPENDENCIES = libelpa@SUFFIX@_public.la \\\n\tlibelpa@SUFFIX@_private.la\nam_libelpa@SUFFIX@_la_OBJECTS =\nlibelpa@SUFFIX@_la_OBJECTS = $(am_libelpa@SUFFIX@_la_OBJECTS)\nlibelpa@SUFFIX@_private_la_LIBADD =\nam__libelpa@SUFFIX@_private_la_SOURCES_DIST = src/elpa_impl.F90 \\\n\tsrc/elpa_autotune_impl.F90 src/elpa_abstract_impl.F90 \\\n\tsrc/helpers/mod_precision.F90 \\\n\tsrc/helpers/mod_blas_interfaces.F90 \\\n\tsrc/helpers/mod_scalapack_interfaces.F90 \\\n\tsrc/helpers/mod_mpi.F90 src/helpers/mod_mpi_stubs.F90 \\\n\tsrc/helpers/mod_omp.F90 \\\n\tsrc/elpa_generated_fortran_interfaces.F90 \\\n\tsrc/elpa2/mod_redist_band.F90 \\\n\tsrc/elpa2/mod_pack_unpack_cpu.F90 \\\n\tsrc/elpa2/mod_compute_hh_trafo.F90 src/helpers/aligned_mem.F90 \\\n\tsrc/elpa1/elpa1_compute_private.F90 \\\n\tsrc/elpa1/elpa1_auxiliary.F90 \\\n\tsrc/elpa2/elpa2_determine_workload.F90 \\\n\tsrc/elpa2/elpa2_compute.F90 \\\n\tsrc/elpa2/kernels/mod_single_hh_trafo_real.F90 \\\n\tsrc/GPU/check_for_gpu.F90 src/GPU/mod_cuda.F90 \\\n\tsrc/elpa2/GPU/interface_c_kernel.F90 \\\n\tsrc/elpa2/mod_pack_unpack_gpu.F90 src/elpa2/qr/qr_utils.F90 \\\n\tsrc/elpa2/qr/elpa_qrkernels.F90 src/elpa2/qr/elpa_pdlarfb.F90 \\\n\tsrc/elpa2/qr/elpa_pdgeqrf.F90 src/elpa1/elpa1.F90 \\\n\tsrc/elpa2/elpa2.F90 src/elpa_generalized/cannon.c \\\n\tsrc/helpers/matrix_plot.F90 \\\n\tsrc/general/mod_elpa_skewsymmetric_blas.F90 src/elpa_index.c \\\n\tsrc/elpa_c_interface.c src/general/elpa_utilities.F90 \\\n\tsrc/ftimings/ftimings.F90 src/ftimings/ftimings_type.F90 \\\n\tsrc/ftimings/ftimings_value.F90 src/ftimings/highwater_mark.c \\\n\tsrc/ftimings/resident_set_size.c src/ftimings/time.c \\\n\tsrc/ftimings/virtual_memory.c src/ftimings/papi.c \\\n\tsrc/helpers/timer_dummy.F90 src/GPU/cudaFunctions.cu \\\n\tsrc/GPU/cuUtils.cu src/elpa2/GPU/ev_tridi_band_gpu_c_v2.cu \\\n\tsrc/helpers/mod_time_c.F90 src/helpers/get_cpuid_set.c \\\n\tsrc/helpers/mod_simd_kernel.F90 src/elpa2/kernels/real.F90 \\\n\tsrc/elpa2/kernels/complex.F90 \\\n\tsrc/elpa2/kernels/real_simple.F90 \\\n\tsrc/elpa2/kernels/complex_simple.F90 \\\n\tsrc/elpa2/kernels/real_simple_block4.F90 \\\n\tsrc/elpa2/kernels/real_simple_block6.F90 \\\n\tsrc/elpa2/kernels/real_bgp.f90 src/elpa2/kernels/real_bgq.f90 \\\n\tsrc/elpa2/kernels/asm_x86_64_double_precision.s \\\n\tsrc/elpa2/kernels/asm_x86_64_single_precision.s \\\n\tsrc/elpa2/kernels/real_sparc64_2hv_double_precision.c \\\n\tsrc/elpa2/kernels/real_neon_arch64_2hv_double_precision.c \\\n\tsrc/elpa2/kernels/real_neon_arch64_2hv_single_precision.c \\\n\tsrc/elpa2/kernels/real_vsx_2hv_double_precision.c \\\n\tsrc/elpa2/kernels/real_vsx_2hv_single_precision.c \\\n\tsrc/elpa2/kernels/real_sse_2hv_double_precision.c \\\n\tsrc/elpa2/kernels/real_sse_2hv_single_precision.c \\\n\tsrc/elpa2/kernels/real_avx-avx2_2hv_double_precision.c \\\n\tsrc/elpa2/kernels/real_avx-avx2_2hv_single_precision.c \\\n\tsrc/elpa2/kernels/real_avx512_2hv_double_precision.c \\\n\tsrc/elpa2/kernels/real_avx512_2hv_single_precision.c \\\n\tsrc/elpa2/kernels/real_sparc64_4hv_double_precision.c \\\n\tsrc/elpa2/kernels/real_neon_arch64_4hv_double_precision.c \\\n\tsrc/elpa2/kernels/real_neon_arch64_4hv_single_precision.c \\\n\tsrc/elpa2/kernels/real_vsx_4hv_double_precision.c \\\n\tsrc/elpa2/kernels/real_vsx_4hv_single_precision.c \\\n\tsrc/elpa2/kernels/real_sse_4hv_double_precision.c \\\n\tsrc/elpa2/kernels/real_sse_4hv_single_precision.c \\\n\tsrc/elpa2/kernels/real_avx-avx2_4hv_double_precision.c \\\n\tsrc/elpa2/kernels/real_avx-avx2_4hv_single_precision.c \\\n\tsrc/elpa2/kernels/real_avx512_4hv_double_precision.c \\\n\tsrc/elpa2/kernels/real_avx512_4hv_single_precision.c \\\n\tsrc/elpa2/kernels/real_sparc64_6hv_double_precision.c \\\n\tsrc/elpa2/kernels/real_neon_arch64_6hv_double_precision.c \\\n\tsrc/elpa2/kernels/real_neon_arch64_6hv_single_precision.c \\\n\tsrc/elpa2/kernels/real_vsx_6hv_double_precision.c \\\n\tsrc/elpa2/kernels/real_vsx_6hv_single_precision.c \\\n\tsrc/elpa2/kernels/real_sse_6hv_double_precision.c \\\n\tsrc/elpa2/kernels/real_sse_6hv_single_precision.c \\\n\tsrc/elpa2/kernels/real_avx-avx2_6hv_double_precision.c \\\n\tsrc/elpa2/kernels/real_avx-avx2_6hv_single_precision.c \\\n\tsrc/elpa2/kernels/real_avx512_6hv_double_precision.c \\\n\tsrc/elpa2/kernels/real_avx512_6hv_single_precision.c \\\n\tsrc/elpa2/kernels/complex_sse_1hv_double_precision.c \\\n\tsrc/elpa2/kernels/complex_sse_1hv_single_precision.c \\\n\tsrc/elpa2/kernels/complex_avx-avx2_1hv_double_precision.c \\\n\tsrc/elpa2/kernels/complex_avx-avx2_1hv_single_precision.c \\\n\tsrc/elpa2/kernels/complex_avx512_1hv_double_precision.c \\\n\tsrc/elpa2/kernels/complex_avx512_1hv_single_precision.c \\\n\tsrc/elpa2/kernels/complex_sse_2hv_double_precision.c \\\n\tsrc/elpa2/kernels/complex_sse_2hv_single_precision.c \\\n\tsrc/elpa2/kernels/complex_avx-avx2_2hv_double_precision.c \\\n\tsrc/elpa2/kernels/complex_avx-avx2_2hv_single_precision.c \\\n\tsrc/elpa2/kernels/complex_avx512_2hv_double_precision.c \\\n\tsrc/elpa2/kernels/complex_avx512_2hv_single_precision.c \\\n\tsrc/helpers/print_build_config.c\nam__dirstamp = $(am__leading_dot)dirstamp\n@HAVE_DETAILED_TIMINGS_TRUE@am__objects_1 = src/ftimings/libelpa@SUFFIX@_private_la-ftimings.lo \\\n@HAVE_DETAILED_TIMINGS_TRUE@\tsrc/ftimings/libelpa@SUFFIX@_private_la-ftimings_type.lo \\\n@HAVE_DETAILED_TIMINGS_TRUE@\tsrc/ftimings/libelpa@SUFFIX@_private_la-ftimings_value.lo \\\n@HAVE_DETAILED_TIMINGS_TRUE@\tsrc/ftimings/highwater_mark.lo \\\n@HAVE_DETAILED_TIMINGS_TRUE@\tsrc/ftimings/resident_set_size.lo \\\n@HAVE_DETAILED_TIMINGS_TRUE@\tsrc/ftimings/time.lo \\\n@HAVE_DETAILED_TIMINGS_TRUE@\tsrc/ftimings/virtual_memory.lo \\\n@HAVE_DETAILED_TIMINGS_TRUE@\tsrc/ftimings/papi.lo\n@HAVE_DETAILED_TIMINGS_FALSE@am__objects_2 = src/helpers/libelpa@SUFFIX@_private_la-timer_dummy.lo\n@WITH_GPU_VERSION_TRUE@am__objects_3 = src/GPU/cudaFunctions.lo \\\n@WITH_GPU_VERSION_TRUE@\tsrc/GPU/cuUtils.lo \\\n@WITH_GPU_VERSION_TRUE@\tsrc/elpa2/GPU/ev_tridi_band_gpu_c_v2.lo\n@WITH_MPI_FALSE@am__objects_4 = src/helpers/libelpa@SUFFIX@_private_la-mod_time_c.lo\n@HAVE_DETAILED_TIMINGS_FALSE@@WITH_MPI_FALSE@am__objects_5 = src/ftimings/time.lo\n@HAVE_HETEROGENOUS_CLUSTER_SUPPORT_TRUE@am__objects_6 = src/helpers/get_cpuid_set.lo \\\n@HAVE_HETEROGENOUS_CLUSTER_SUPPORT_TRUE@\tsrc/helpers/libelpa@SUFFIX@_private_la-mod_simd_kernel.lo\n@WITH_REAL_GENERIC_KERNEL_TRUE@am__objects_7 = src/elpa2/kernels/libelpa@SUFFIX@_private_la-real.lo\n@WITH_COMPLEX_GENERIC_KERNEL_TRUE@am__objects_8 = src/elpa2/kernels/libelpa@SUFFIX@_private_la-complex.lo\n@WITH_REAL_GENERIC_SIMPLE_KERNEL_TRUE@am__objects_9 = src/elpa2/kernels/libelpa@SUFFIX@_private_la-real_simple.lo\n@WITH_COMPLEX_GENERIC_SIMPLE_KERNEL_TRUE@am__objects_10 = src/elpa2/kernels/libelpa@SUFFIX@_private_la-complex_simple.lo\n@WITH_REAL_GENERIC_SIMPLE_BLOCK4_KERNEL_TRUE@am__objects_11 = src/elpa2/kernels/libelpa@SUFFIX@_private_la-real_simple_block4.lo\n@WITH_REAL_GENERIC_SIMPLE_BLOCK6_KERNEL_TRUE@am__objects_12 = src/elpa2/kernels/libelpa@SUFFIX@_private_la-real_simple_block6.lo\n@WITH_REAL_BGP_KERNEL_TRUE@am__objects_13 = src/elpa2/kernels/libelpa@SUFFIX@_private_la-real_bgp.lo\n@WITH_REAL_BGQ_KERNEL_TRUE@am__objects_14 = src/elpa2/kernels/libelpa@SUFFIX@_private_la-real_bgq.lo\n@WITH_REAL_SSE_ASSEMBLY_KERNEL_TRUE@am__objects_15 = src/elpa2/kernels/asm_x86_64_double_precision.lo\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_SSE_ASSEMBLY_KERNEL_TRUE@am__objects_16 = src/elpa2/kernels/asm_x86_64_single_precision.lo\n@WITH_COMPLEX_SSE_ASSEMBLY_KERNEL_TRUE@@WITH_REAL_SSE_ASSEMBLY_KERNEL_FALSE@am__objects_17 = src/elpa2/kernels/asm_x86_64_double_precision.lo\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_COMPLEX_SSE_ASSEMBLY_KERNEL_TRUE@@WITH_REAL_SSE_ASSEMBLY_KERNEL_FALSE@am__objects_18 = src/elpa2/kernels/asm_x86_64_single_precision.lo\n@WITH_REAL_SPARC64_BLOCK2_KERNEL_TRUE@am__objects_19 = src/elpa2/kernels/real_sparc64_2hv_double_precision.lo\n@WITH_REAL_NEON_ARCH64_BLOCK2_KERNEL_TRUE@am__objects_20 = src/elpa2/kernels/real_neon_arch64_2hv_double_precision.lo\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_NEON_ARCH64_BLOCK2_KERNEL_TRUE@am__objects_21 = src/elpa2/kernels/real_neon_arch64_2hv_single_precision.lo\n@WITH_REAL_VSX_BLOCK2_KERNEL_TRUE@am__objects_22 = src/elpa2/kernels/real_vsx_2hv_double_precision.lo\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_VSX_BLOCK2_KERNEL_TRUE@am__objects_23 = src/elpa2/kernels/real_vsx_2hv_single_precision.lo\n@WITH_REAL_SSE_BLOCK2_KERNEL_TRUE@am__objects_24 = src/elpa2/kernels/real_sse_2hv_double_precision.lo\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_SSE_BLOCK2_KERNEL_TRUE@am__objects_25 = src/elpa2/kernels/real_sse_2hv_single_precision.lo\n@WITH_REAL_AVX_BLOCK2_KERNEL_TRUE@am__objects_26 = src/elpa2/kernels/real_avx-avx2_2hv_double_precision.lo\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_AVX_BLOCK2_KERNEL_TRUE@am__objects_27 = src/elpa2/kernels/real_avx-avx2_2hv_single_precision.lo\n@WITH_REAL_AVX2_BLOCK2_KERNEL_TRUE@@WITH_REAL_AVX_BLOCK2_KERNEL_FALSE@am__objects_28 = src/elpa2/kernels/real_avx-avx2_2hv_double_precision.lo\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_AVX2_BLOCK2_KERNEL_TRUE@@WITH_REAL_AVX_BLOCK2_KERNEL_FALSE@am__objects_29 = src/elpa2/kernels/real_avx-avx2_2hv_single_precision.lo\n@WITH_REAL_AVX512_BLOCK2_KERNEL_TRUE@am__objects_30 = src/elpa2/kernels/real_avx512_2hv_double_precision.lo\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_AVX512_BLOCK2_KERNEL_TRUE@am__objects_31 = src/elpa2/kernels/real_avx512_2hv_single_precision.lo\n@WITH_REAL_SPARC64_BLOCK4_KERNEL_TRUE@am__objects_32 = src/elpa2/kernels/real_sparc64_4hv_double_precision.lo\n@WITH_REAL_NEON_ARCH64_BLOCK4_KERNEL_TRUE@am__objects_33 = src/elpa2/kernels/real_neon_arch64_4hv_double_precision.lo\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_NEON_ARCH64_BLOCK4_KERNEL_TRUE@am__objects_34 = src/elpa2/kernels/real_neon_arch64_4hv_single_precision.lo\n@WITH_REAL_VSX_BLOCK4_KERNEL_TRUE@am__objects_35 = src/elpa2/kernels/real_vsx_4hv_double_precision.lo\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_VSX_BLOCK4_KERNEL_TRUE@am__objects_36 = src/elpa2/kernels/real_vsx_4hv_single_precision.lo\n@WITH_REAL_SSE_BLOCK4_KERNEL_TRUE@am__objects_37 = src/elpa2/kernels/real_sse_4hv_double_precision.lo\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_SSE_BLOCK4_KERNEL_TRUE@am__objects_38 = src/elpa2/kernels/real_sse_4hv_single_precision.lo\n@WITH_REAL_AVX_BLOCK4_KERNEL_TRUE@am__objects_39 = src/elpa2/kernels/real_avx-avx2_4hv_double_precision.lo\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_AVX_BLOCK4_KERNEL_TRUE@am__objects_40 = src/elpa2/kernels/real_avx-avx2_4hv_single_precision.lo\n@WITH_REAL_AVX2_BLOCK4_KERNEL_TRUE@@WITH_REAL_AVX_BLOCK4_KERNEL_FALSE@am__objects_41 = src/elpa2/kernels/real_avx-avx2_4hv_double_precision.lo\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_AVX2_BLOCK4_KERNEL_TRUE@@WITH_REAL_AVX_BLOCK4_KERNEL_FALSE@am__objects_42 = src/elpa2/kernels/real_avx-avx2_4hv_single_precision.lo\n@WITH_REAL_AVX512_BLOCK4_KERNEL_TRUE@am__objects_43 = src/elpa2/kernels/real_avx512_4hv_double_precision.lo\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_AVX512_BLOCK4_KERNEL_TRUE@am__objects_44 = src/elpa2/kernels/real_avx512_4hv_single_precision.lo\n@WITH_REAL_SPARC64_BLOCK6_KERNEL_TRUE@am__objects_45 = src/elpa2/kernels/real_sparc64_6hv_double_precision.lo\n@WITH_REAL_NEON_ARCH64_BLOCK6_KERNEL_TRUE@am__objects_46 = src/elpa2/kernels/real_neon_arch64_6hv_double_precision.lo\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_NEON_ARCH64_BLOCK6_KERNEL_TRUE@am__objects_47 = src/elpa2/kernels/real_neon_arch64_6hv_single_precision.lo\n@WITH_REAL_VSX_BLOCK6_KERNEL_TRUE@am__objects_48 = src/elpa2/kernels/real_vsx_6hv_double_precision.lo\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_VSX_BLOCK6_KERNEL_TRUE@am__objects_49 = src/elpa2/kernels/real_vsx_6hv_single_precision.lo\n@WITH_REAL_SSE_BLOCK6_KERNEL_TRUE@am__objects_50 = src/elpa2/kernels/real_sse_6hv_double_precision.lo\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_SSE_BLOCK6_KERNEL_TRUE@am__objects_51 = src/elpa2/kernels/real_sse_6hv_single_precision.lo\n@WITH_REAL_AVX_BLOCK6_KERNEL_TRUE@am__objects_52 = src/elpa2/kernels/real_avx-avx2_6hv_double_precision.lo\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_AVX_BLOCK6_KERNEL_TRUE@am__objects_53 = src/elpa2/kernels/real_avx-avx2_6hv_single_precision.lo\n@WITH_REAL_AVX2_BLOCK6_KERNEL_TRUE@@WITH_REAL_AVX_BLOCK6_KERNEL_FALSE@am__objects_54 = src/elpa2/kernels/real_avx-avx2_6hv_double_precision.lo\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_AVX2_BLOCK6_KERNEL_TRUE@@WITH_REAL_AVX_BLOCK6_KERNEL_FALSE@am__objects_55 = src/elpa2/kernels/real_avx-avx2_6hv_single_precision.lo\n@WITH_REAL_AVX512_BLOCK6_KERNEL_TRUE@am__objects_56 = src/elpa2/kernels/real_avx512_6hv_double_precision.lo\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_REAL_AVX512_BLOCK6_KERNEL_TRUE@am__objects_57 = src/elpa2/kernels/real_avx512_6hv_single_precision.lo\n@WITH_COMPLEX_SSE_BLOCK1_KERNEL_TRUE@am__objects_58 = src/elpa2/kernels/complex_sse_1hv_double_precision.lo\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_COMPLEX_SSE_BLOCK1_KERNEL_TRUE@am__objects_59 = src/elpa2/kernels/complex_sse_1hv_single_precision.lo\n@WITH_COMPLEX_AVX_BLOCK1_KERNEL_TRUE@am__objects_60 = src/elpa2/kernels/complex_avx-avx2_1hv_double_precision.lo\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_COMPLEX_AVX_BLOCK1_KERNEL_TRUE@am__objects_61 = src/elpa2/kernels/complex_avx-avx2_1hv_single_precision.lo\n@WITH_COMPLEX_AVX2_BLOCK1_KERNEL_TRUE@@WITH_COMPLEX_AVX_BLOCK1_KERNEL_FALSE@am__objects_62 = src/elpa2/kernels/complex_avx-avx2_1hv_double_precision.lo\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_COMPLEX_AVX2_BLOCK1_KERNEL_TRUE@@WITH_COMPLEX_AVX_BLOCK1_KERNEL_FALSE@am__objects_63 = src/elpa2/kernels/complex_avx-avx2_1hv_single_precision.lo\n@WITH_COMPLEX_AVX512_BLOCK1_KERNEL_TRUE@am__objects_64 = src/elpa2/kernels/complex_avx512_1hv_double_precision.lo\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_COMPLEX_AVX512_BLOCK1_KERNEL_TRUE@am__objects_65 = src/elpa2/kernels/complex_avx512_1hv_single_precision.lo\n@WITH_COMPLEX_SSE_BLOCK2_KERNEL_TRUE@am__objects_66 = src/elpa2/kernels/complex_sse_2hv_double_precision.lo\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_COMPLEX_SSE_BLOCK2_KERNEL_TRUE@am__objects_67 = src/elpa2/kernels/complex_sse_2hv_single_precision.lo\n@WITH_COMPLEX_AVX_BLOCK2_KERNEL_TRUE@am__objects_68 = src/elpa2/kernels/complex_avx-avx2_2hv_double_precision.lo\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_COMPLEX_AVX_BLOCK2_KERNEL_TRUE@am__objects_69 = src/elpa2/kernels/complex_avx-avx2_2hv_single_precision.lo\n@WITH_COMPLEX_AVX2_BLOCK2_KERNEL_TRUE@@WITH_COMPLEX_AVX_BLOCK2_KERNEL_FALSE@am__objects_70 = src/elpa2/kernels/complex_avx-avx2_2hv_double_precision.lo\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_COMPLEX_AVX2_BLOCK2_KERNEL_TRUE@@WITH_COMPLEX_AVX_BLOCK2_KERNEL_FALSE@am__objects_71 = src/elpa2/kernels/complex_avx-avx2_2hv_single_precision.lo\n@WITH_COMPLEX_AVX512_BLOCK2_KERNEL_TRUE@am__objects_72 = src/elpa2/kernels/complex_avx512_2hv_double_precision.lo\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_COMPLEX_AVX512_BLOCK2_KERNEL_TRUE@am__objects_73 = src/elpa2/kernels/complex_avx512_2hv_single_precision.lo\n@STORE_BUILD_CONFIG_TRUE@am__objects_74 =  \\\n@STORE_BUILD_CONFIG_TRUE@\tsrc/helpers/print_build_config.lo\nam_libelpa@SUFFIX@_private_la_OBJECTS =  \\\n\tsrc/libelpa@SUFFIX@_private_la-elpa_impl.lo \\\n\tsrc/libelpa@SUFFIX@_private_la-elpa_autotune_impl.lo \\\n\tsrc/libelpa@SUFFIX@_private_la-elpa_abstract_impl.lo \\\n\tsrc/helpers/libelpa@SUFFIX@_private_la-mod_precision.lo \\\n\tsrc/helpers/libelpa@SUFFIX@_private_la-mod_blas_interfaces.lo \\\n\tsrc/helpers/libelpa@SUFFIX@_private_la-mod_scalapack_interfaces.lo \\\n\tsrc/helpers/libelpa@SUFFIX@_private_la-mod_mpi.lo \\\n\tsrc/helpers/libelpa@SUFFIX@_private_la-mod_mpi_stubs.lo \\\n\tsrc/helpers/libelpa@SUFFIX@_private_la-mod_omp.lo \\\n\tsrc/libelpa@SUFFIX@_private_la-elpa_generated_fortran_interfaces.lo \\\n\tsrc/elpa2/libelpa@SUFFIX@_private_la-mod_redist_band.lo \\\n\tsrc/elpa2/libelpa@SUFFIX@_private_la-mod_pack_unpack_cpu.lo \\\n\tsrc/elpa2/libelpa@SUFFIX@_private_la-mod_compute_hh_trafo.lo \\\n\tsrc/helpers/libelpa@SUFFIX@_private_la-aligned_mem.lo \\\n\tsrc/elpa1/libelpa@SUFFIX@_private_la-elpa1_compute_private.lo \\\n\tsrc/elpa1/libelpa@SUFFIX@_private_la-elpa1_auxiliary.lo \\\n\tsrc/elpa2/libelpa@SUFFIX@_private_la-elpa2_determine_workload.lo \\\n\tsrc/elpa2/libelpa@SUFFIX@_private_la-elpa2_compute.lo \\\n\tsrc/elpa2/kernels/libelpa@SUFFIX@_private_la-mod_single_hh_trafo_real.lo \\\n\tsrc/GPU/libelpa@SUFFIX@_private_la-check_for_gpu.lo \\\n\tsrc/GPU/libelpa@SUFFIX@_private_la-mod_cuda.lo \\\n\tsrc/elpa2/GPU/libelpa@SUFFIX@_private_la-interface_c_kernel.lo \\\n\tsrc/elpa2/libelpa@SUFFIX@_private_la-mod_pack_unpack_gpu.lo \\\n\tsrc/elpa2/qr/libelpa@SUFFIX@_private_la-qr_utils.lo \\\n\tsrc/elpa2/qr/libelpa@SUFFIX@_private_la-elpa_qrkernels.lo \\\n\tsrc/elpa2/qr/libelpa@SUFFIX@_private_la-elpa_pdlarfb.lo \\\n\tsrc/elpa2/qr/libelpa@SUFFIX@_private_la-elpa_pdgeqrf.lo \\\n\tsrc/elpa1/libelpa@SUFFIX@_private_la-elpa1.lo \\\n\tsrc/elpa2/libelpa@SUFFIX@_private_la-elpa2.lo \\\n\tsrc/elpa_generalized/cannon.lo \\\n\tsrc/helpers/libelpa@SUFFIX@_private_la-matrix_plot.lo \\\n\tsrc/general/libelpa@SUFFIX@_private_la-mod_elpa_skewsymmetric_blas.lo \\\n\tsrc/elpa_index.lo src/elpa_c_interface.lo \\\n\tsrc/general/libelpa@SUFFIX@_private_la-elpa_utilities.lo \\\n\t$(am__objects_1) $(am__objects_2) $(am__objects_3) \\\n\t$(am__objects_4) $(am__objects_5) $(am__objects_6) \\\n\t$(am__objects_7) $(am__objects_8) $(am__objects_9) \\\n\t$(am__objects_10) $(am__objects_11) $(am__objects_12) \\\n\t$(am__objects_13) $(am__objects_14) $(am__objects_15) \\\n\t$(am__objects_16) $(am__objects_17) $(am__objects_18) \\\n\t$(am__objects_19) $(am__objects_20) $(am__objects_21) \\\n\t$(am__objects_22) $(am__objects_23) $(am__objects_24) \\\n\t$(am__objects_25) $(am__objects_26) $(am__objects_27) \\\n\t$(am__objects_28) $(am__objects_29) $(am__objects_30) \\\n\t$(am__objects_31) $(am__objects_32) $(am__objects_33) \\\n\t$(am__objects_34) $(am__objects_35) $(am__objects_36) \\\n\t$(am__objects_37) $(am__objects_38) $(am__objects_39) \\\n\t$(am__objects_40) $(am__objects_41) $(am__objects_42) \\\n\t$(am__objects_43) $(am__objects_44) $(am__objects_45) \\\n\t$(am__objects_46) $(am__objects_47) $(am__objects_48) \\\n\t$(am__objects_49) $(am__objects_50) $(am__objects_51) \\\n\t$(am__objects_52) $(am__objects_53) $(am__objects_54) \\\n\t$(am__objects_55) $(am__objects_56) $(am__objects_57) \\\n\t$(am__objects_58) $(am__objects_59) $(am__objects_60) \\\n\t$(am__objects_61) $(am__objects_62) $(am__objects_63) \\\n\t$(am__objects_64) $(am__objects_65) $(am__objects_66) \\\n\t$(am__objects_67) $(am__objects_68) $(am__objects_69) \\\n\t$(am__objects_70) $(am__objects_71) $(am__objects_72) \\\n\t$(am__objects_73) $(am__objects_74)\nlibelpa@SUFFIX@_private_la_OBJECTS =  \\\n\t$(am_libelpa@SUFFIX@_private_la_OBJECTS)\nAM_V_lt = $(am__v_lt_@AM_V@)\nam__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)\nam__v_lt_0 = --silent\nam__v_lt_1 = \nlibelpa@SUFFIX@_private_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=FC \\\n\t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) $(AM_LDFLAGS) \\\n\t$(LDFLAGS) -o $@\nlibelpa@SUFFIX@_public_la_LIBADD =\nam_libelpa@SUFFIX@_public_la_OBJECTS =  \\\n\tsrc/libelpa@SUFFIX@_public_la-elpa.lo \\\n\tsrc/libelpa@SUFFIX@_public_la-elpa_api.lo \\\n\tsrc/libelpa@SUFFIX@_public_la-elpa_constants.lo\nlibelpa@SUFFIX@_public_la_OBJECTS =  \\\n\t$(am_libelpa@SUFFIX@_public_la_OBJECTS)\nlibelpa@SUFFIX@_public_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=FC \\\n\t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(libelpa@SUFFIX@_public_la_FCFLAGS) $(FCFLAGS) $(AM_LDFLAGS) \\\n\t$(LDFLAGS) -o $@\nlibelpatest@SUFFIX@_la_LIBADD =\nam__libelpatest@SUFFIX@_la_SOURCES_DIST =  \\\n\ttest/shared/tests_variable_definitions.F90 \\\n\ttest/shared/mod_tests_scalapack_interfaces.F90 \\\n\ttest/shared/mod_tests_blas_interfaces.F90 \\\n\ttest/shared/test_util.F90 \\\n\ttest/shared/test_read_input_parameters.F90 \\\n\ttest/shared/test_check_correctness.F90 \\\n\ttest/shared/test_setup_mpi.F90 \\\n\ttest/shared/test_blacs_infrastructure.F90 \\\n\ttest/shared/test_prepare_matrix.F90 \\\n\ttest/shared/test_analytic.F90 test/shared/test_output_type.F90 \\\n\ttest/shared/test_scalapack.F90 test/shared/test_redir.c \\\n\ttest/shared/test_redirect.F90\n@WITH_SCALAPACK_TESTS_TRUE@am__objects_75 = test/shared/libelpatest@SUFFIX@_la-test_scalapack.lo\n@HAVE_REDIRECT_TRUE@am__objects_76 = test/shared/test_redir.lo \\\n@HAVE_REDIRECT_TRUE@\ttest/shared/libelpatest@SUFFIX@_la-test_redirect.lo\nam_libelpatest@SUFFIX@_la_OBJECTS = test/shared/libelpatest@SUFFIX@_la-tests_variable_definitions.lo \\\n\ttest/shared/libelpatest@SUFFIX@_la-mod_tests_scalapack_interfaces.lo \\\n\ttest/shared/libelpatest@SUFFIX@_la-mod_tests_blas_interfaces.lo \\\n\ttest/shared/libelpatest@SUFFIX@_la-test_util.lo \\\n\ttest/shared/libelpatest@SUFFIX@_la-test_read_input_parameters.lo \\\n\ttest/shared/libelpatest@SUFFIX@_la-test_check_correctness.lo \\\n\ttest/shared/libelpatest@SUFFIX@_la-test_setup_mpi.lo \\\n\ttest/shared/libelpatest@SUFFIX@_la-test_blacs_infrastructure.lo \\\n\ttest/shared/libelpatest@SUFFIX@_la-test_prepare_matrix.lo \\\n\ttest/shared/libelpatest@SUFFIX@_la-test_analytic.lo \\\n\ttest/shared/libelpatest@SUFFIX@_la-test_output_type.lo \\\n\t$(am__objects_75) $(am__objects_76)\nlibelpatest@SUFFIX@_la_OBJECTS = $(am_libelpatest@SUFFIX@_la_OBJECTS)\nlibelpatest@SUFFIX@_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=FC \\\n\t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(libelpatest@SUFFIX@_la_FCFLAGS) $(FCFLAGS) $(AM_LDFLAGS) \\\n\t$(LDFLAGS) -o $@\nwrapper_la_DEPENDENCIES = libelpa@SUFFIX@.la\nnodist_wrapper_la_OBJECTS = python/pyelpa/wrapper_la-wrapper.lo\nwrapper_la_OBJECTS = $(nodist_wrapper_la_OBJECTS)\nwrapper_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(wrapper_la_CFLAGS) \\\n\t$(CFLAGS) $(wrapper_la_LDFLAGS) $(LDFLAGS) -o $@\n@WITH_PYTHON_TRUE@am_wrapper_la_rpath = -rpath $(pyelpadir)\nam_elpa2_print_kernels@SUFFIX@_OBJECTS = src/elpa2/elpa2_print_kernels@SUFFIX@-elpa2_print_kernels.$(OBJEXT)\nelpa2_print_kernels@SUFFIX@_OBJECTS =  \\\n\t$(am_elpa2_print_kernels@SUFFIX@_OBJECTS)\nelpa2_print_kernels@SUFFIX@_DEPENDENCIES = libelpa@SUFFIX@.la\nelpa2_print_kernels@SUFFIX@_LINK = $(LIBTOOL) $(AM_V_lt) --tag=FC \\\n\t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(elpa2_print_kernels@SUFFIX@_FCFLAGS) $(FCFLAGS) \\\n\t$(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_test_skewsymmetric_real_double_OBJECTS = test/Fortran/skewsymmetric_real_double-test_skewsymmetric.$(OBJEXT)\ntest_skewsymmetric_real_double_OBJECTS =  \\\n\t$(am_test_skewsymmetric_real_double_OBJECTS)\ntest_skewsymmetric_real_double_DEPENDENCIES = $(test_program_ldadd)\ntest_skewsymmetric_real_double_LINK = $(LIBTOOL) $(AM_V_lt) --tag=FC \\\n\t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(test_skewsymmetric_real_double_FCFLAGS) $(FCFLAGS) \\\n\t$(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__test_skewsymmetric_real_single_SOURCES_DIST =  \\\n\ttest/Fortran/test_skewsymmetric.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@am_test_skewsymmetric_real_single_OBJECTS = test/Fortran/skewsymmetric_real_single-test_skewsymmetric.$(OBJEXT)\ntest_skewsymmetric_real_single_OBJECTS =  \\\n\t$(am_test_skewsymmetric_real_single_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@test_skewsymmetric_real_single_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(test_program_ldadd)\ntest_skewsymmetric_real_single_LINK = $(LIBTOOL) $(AM_V_lt) --tag=FC \\\n\t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(test_skewsymmetric_real_single_FCFLAGS) $(FCFLAGS) \\\n\t$(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_autotune_c_version_complex_double_SOURCES_DIST =  \\\n\ttest/C/test_autotune.c\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@am_validate_autotune_c_version_complex_double_OBJECTS = test/C/validate_autotune_c_version_complex_double-test_autotune.$(OBJEXT)\nvalidate_autotune_c_version_complex_double_OBJECTS =  \\\n\t$(am_validate_autotune_c_version_complex_double_OBJECTS)\nam__DEPENDENCIES_1 =\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@validate_autotune_c_version_complex_double_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_autotune_c_version_complex_double_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(CCLD) \\\n\t$(validate_autotune_c_version_complex_double_CFLAGS) $(CFLAGS) \\\n\t$(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_autotune_c_version_complex_single_SOURCES_DIST =  \\\n\ttest/C/test_autotune.c\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am_validate_autotune_c_version_complex_single_OBJECTS = test/C/validate_autotune_c_version_complex_single-test_autotune.$(OBJEXT)\nvalidate_autotune_c_version_complex_single_OBJECTS =  \\\n\t$(am_validate_autotune_c_version_complex_single_OBJECTS)\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_autotune_c_version_complex_single_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_autotune_c_version_complex_single_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(CCLD) \\\n\t$(validate_autotune_c_version_complex_single_CFLAGS) $(CFLAGS) \\\n\t$(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_autotune_c_version_real_double_SOURCES_DIST =  \\\n\ttest/C/test_autotune.c\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@am_validate_autotune_c_version_real_double_OBJECTS = test/C/validate_autotune_c_version_real_double-test_autotune.$(OBJEXT)\nvalidate_autotune_c_version_real_double_OBJECTS =  \\\n\t$(am_validate_autotune_c_version_real_double_OBJECTS)\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@validate_autotune_c_version_real_double_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_autotune_c_version_real_double_LINK = $(LIBTOOL) $(AM_V_lt) \\\n\t--tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \\\n\t$(CCLD) $(validate_autotune_c_version_real_double_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_autotune_c_version_real_single_SOURCES_DIST =  \\\n\ttest/C/test_autotune.c\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_autotune_c_version_real_single_OBJECTS = test/C/validate_autotune_c_version_real_single-test_autotune.$(OBJEXT)\nvalidate_autotune_c_version_real_single_OBJECTS =  \\\n\t$(am_validate_autotune_c_version_real_single_OBJECTS)\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@validate_autotune_c_version_real_single_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_autotune_c_version_real_single_LINK = $(LIBTOOL) $(AM_V_lt) \\\n\t--tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \\\n\t$(CCLD) $(validate_autotune_c_version_real_single_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_autotune_complex_double_SOURCES_DIST =  \\\n\ttest/Fortran/test_autotune.F90\n@ENABLE_AUTOTUNING_TRUE@am_validate_autotune_complex_double_OBJECTS = test/Fortran/validate_autotune_complex_double-test_autotune.$(OBJEXT)\nvalidate_autotune_complex_double_OBJECTS =  \\\n\t$(am_validate_autotune_complex_double_OBJECTS)\n@ENABLE_AUTOTUNING_TRUE@validate_autotune_complex_double_DEPENDENCIES =  \\\n@ENABLE_AUTOTUNING_TRUE@\t$(test_program_ldadd)\nvalidate_autotune_complex_double_LINK = $(LIBTOOL) $(AM_V_lt) --tag=FC \\\n\t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_autotune_complex_double_FCFLAGS) $(FCFLAGS) \\\n\t$(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_autotune_complex_single_SOURCES_DIST =  \\\n\ttest/Fortran/test_autotune.F90\n@ENABLE_AUTOTUNING_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am_validate_autotune_complex_single_OBJECTS = test/Fortran/validate_autotune_complex_single-test_autotune.$(OBJEXT)\nvalidate_autotune_complex_single_OBJECTS =  \\\n\t$(am_validate_autotune_complex_single_OBJECTS)\n@ENABLE_AUTOTUNING_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_autotune_complex_single_DEPENDENCIES = $(test_program_ldadd)\nvalidate_autotune_complex_single_LINK = $(LIBTOOL) $(AM_V_lt) --tag=FC \\\n\t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_autotune_complex_single_FCFLAGS) $(FCFLAGS) \\\n\t$(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_autotune_real_double_SOURCES_DIST =  \\\n\ttest/Fortran/test_autotune.F90\n@ENABLE_AUTOTUNING_TRUE@am_validate_autotune_real_double_OBJECTS = test/Fortran/validate_autotune_real_double-test_autotune.$(OBJEXT)\nvalidate_autotune_real_double_OBJECTS =  \\\n\t$(am_validate_autotune_real_double_OBJECTS)\n@ENABLE_AUTOTUNING_TRUE@validate_autotune_real_double_DEPENDENCIES =  \\\n@ENABLE_AUTOTUNING_TRUE@\t$(test_program_ldadd)\nvalidate_autotune_real_double_LINK = $(LIBTOOL) $(AM_V_lt) --tag=FC \\\n\t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_autotune_real_double_FCFLAGS) $(FCFLAGS) \\\n\t$(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_autotune_real_single_SOURCES_DIST =  \\\n\ttest/Fortran/test_autotune.F90\n@ENABLE_AUTOTUNING_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_autotune_real_single_OBJECTS = test/Fortran/validate_autotune_real_single-test_autotune.$(OBJEXT)\nvalidate_autotune_real_single_OBJECTS =  \\\n\t$(am_validate_autotune_real_single_OBJECTS)\n@ENABLE_AUTOTUNING_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@validate_autotune_real_single_DEPENDENCIES = $(test_program_ldadd)\nvalidate_autotune_real_single_LINK = $(LIBTOOL) $(AM_V_lt) --tag=FC \\\n\t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_autotune_real_single_FCFLAGS) $(FCFLAGS) \\\n\t$(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_complex_double_eigenvectors_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_c_version_complex_double_eigenvectors_1stage_gpu_random_OBJECTS = test/C/validate_c_version_complex_double_eigenvectors_1stage_gpu_random-test.$(OBJEXT)\nvalidate_c_version_complex_double_eigenvectors_1stage_gpu_random_OBJECTS = $(am_validate_c_version_complex_double_eigenvectors_1stage_gpu_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_double_eigenvectors_1stage_gpu_random_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_complex_double_eigenvectors_1stage_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_complex_double_eigenvectors_1stage_gpu_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_complex_double_eigenvectors_1stage_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@am_validate_c_version_complex_double_eigenvectors_1stage_random_OBJECTS = test/C/validate_c_version_complex_double_eigenvectors_1stage_random-test.$(OBJEXT)\nvalidate_c_version_complex_double_eigenvectors_1stage_random_OBJECTS = $(am_validate_c_version_complex_double_eigenvectors_1stage_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@validate_c_version_complex_double_eigenvectors_1stage_random_DEPENDENCIES =  \\\n@ENABLE_C_TESTS_TRUE@\t$(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_complex_double_eigenvectors_1stage_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_complex_double_eigenvectors_1stage_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS = test/C/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.$(OBJEXT)\nvalidate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS = $(am_validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@am_validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_OBJECTS = test/C/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random-test.$(OBJEXT)\nvalidate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_OBJECTS = $(am_validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_DEPENDENCIES =  \\\n@ENABLE_C_TESTS_TRUE@\t$(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_complex_double_generalized_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_c_version_complex_double_generalized_1stage_gpu_random_OBJECTS = test/C/validate_c_version_complex_double_generalized_1stage_gpu_random-test.$(OBJEXT)\nvalidate_c_version_complex_double_generalized_1stage_gpu_random_OBJECTS = $(am_validate_c_version_complex_double_generalized_1stage_gpu_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_double_generalized_1stage_gpu_random_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_complex_double_generalized_1stage_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_complex_double_generalized_1stage_gpu_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_complex_double_generalized_1stage_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@am_validate_c_version_complex_double_generalized_1stage_random_OBJECTS = test/C/validate_c_version_complex_double_generalized_1stage_random-test.$(OBJEXT)\nvalidate_c_version_complex_double_generalized_1stage_random_OBJECTS = $(am_validate_c_version_complex_double_generalized_1stage_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@validate_c_version_complex_double_generalized_1stage_random_DEPENDENCIES =  \\\n@ENABLE_C_TESTS_TRUE@\t$(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_complex_double_generalized_1stage_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_complex_double_generalized_1stage_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_complex_double_generalized_decomp_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_c_version_complex_double_generalized_decomp_1stage_gpu_random_OBJECTS = test/C/validate_c_version_complex_double_generalized_decomp_1stage_gpu_random-test.$(OBJEXT)\nvalidate_c_version_complex_double_generalized_decomp_1stage_gpu_random_OBJECTS = $(am_validate_c_version_complex_double_generalized_decomp_1stage_gpu_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_double_generalized_decomp_1stage_gpu_random_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_complex_double_generalized_decomp_1stage_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_complex_double_generalized_decomp_1stage_gpu_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_complex_double_generalized_decomp_1stage_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@am_validate_c_version_complex_double_generalized_decomp_1stage_random_OBJECTS = test/C/validate_c_version_complex_double_generalized_decomp_1stage_random-test.$(OBJEXT)\nvalidate_c_version_complex_double_generalized_decomp_1stage_random_OBJECTS = $(am_validate_c_version_complex_double_generalized_decomp_1stage_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@validate_c_version_complex_double_generalized_decomp_1stage_random_DEPENDENCIES =  \\\n@ENABLE_C_TESTS_TRUE@\t$(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_complex_double_generalized_decomp_1stage_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_complex_double_generalized_decomp_1stage_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_complex_single_eigenvectors_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_c_version_complex_single_eigenvectors_1stage_gpu_random_OBJECTS = test/C/validate_c_version_complex_single_eigenvectors_1stage_gpu_random-test.$(OBJEXT)\nvalidate_c_version_complex_single_eigenvectors_1stage_gpu_random_OBJECTS = $(am_validate_c_version_complex_single_eigenvectors_1stage_gpu_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_single_eigenvectors_1stage_gpu_random_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_complex_single_eigenvectors_1stage_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_complex_single_eigenvectors_1stage_gpu_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_complex_single_eigenvectors_1stage_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am_validate_c_version_complex_single_eigenvectors_1stage_random_OBJECTS = test/C/validate_c_version_complex_single_eigenvectors_1stage_random-test.$(OBJEXT)\nvalidate_c_version_complex_single_eigenvectors_1stage_random_OBJECTS = $(am_validate_c_version_complex_single_eigenvectors_1stage_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_c_version_complex_single_eigenvectors_1stage_random_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_complex_single_eigenvectors_1stage_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_complex_single_eigenvectors_1stage_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS = test/C/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.$(OBJEXT)\nvalidate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS = $(am_validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am_validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_OBJECTS = test/C/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random-test.$(OBJEXT)\nvalidate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_OBJECTS = $(am_validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_complex_single_generalized_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_c_version_complex_single_generalized_1stage_gpu_random_OBJECTS = test/C/validate_c_version_complex_single_generalized_1stage_gpu_random-test.$(OBJEXT)\nvalidate_c_version_complex_single_generalized_1stage_gpu_random_OBJECTS = $(am_validate_c_version_complex_single_generalized_1stage_gpu_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_single_generalized_1stage_gpu_random_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_complex_single_generalized_1stage_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_complex_single_generalized_1stage_gpu_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_complex_single_generalized_1stage_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am_validate_c_version_complex_single_generalized_1stage_random_OBJECTS = test/C/validate_c_version_complex_single_generalized_1stage_random-test.$(OBJEXT)\nvalidate_c_version_complex_single_generalized_1stage_random_OBJECTS = $(am_validate_c_version_complex_single_generalized_1stage_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_c_version_complex_single_generalized_1stage_random_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_complex_single_generalized_1stage_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_complex_single_generalized_1stage_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_complex_single_generalized_decomp_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_c_version_complex_single_generalized_decomp_1stage_gpu_random_OBJECTS = test/C/validate_c_version_complex_single_generalized_decomp_1stage_gpu_random-test.$(OBJEXT)\nvalidate_c_version_complex_single_generalized_decomp_1stage_gpu_random_OBJECTS = $(am_validate_c_version_complex_single_generalized_decomp_1stage_gpu_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_single_generalized_decomp_1stage_gpu_random_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_complex_single_generalized_decomp_1stage_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_complex_single_generalized_decomp_1stage_gpu_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_complex_single_generalized_decomp_1stage_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am_validate_c_version_complex_single_generalized_decomp_1stage_random_OBJECTS = test/C/validate_c_version_complex_single_generalized_decomp_1stage_random-test.$(OBJEXT)\nvalidate_c_version_complex_single_generalized_decomp_1stage_random_OBJECTS = $(am_validate_c_version_complex_single_generalized_decomp_1stage_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_c_version_complex_single_generalized_decomp_1stage_random_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_complex_single_generalized_decomp_1stage_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_complex_single_generalized_decomp_1stage_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_real_double_eigenvectors_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_c_version_real_double_eigenvectors_1stage_gpu_random_OBJECTS = test/C/validate_c_version_real_double_eigenvectors_1stage_gpu_random-test.$(OBJEXT)\nvalidate_c_version_real_double_eigenvectors_1stage_gpu_random_OBJECTS = $(am_validate_c_version_real_double_eigenvectors_1stage_gpu_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_double_eigenvectors_1stage_gpu_random_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_real_double_eigenvectors_1stage_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_real_double_eigenvectors_1stage_gpu_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_real_double_eigenvectors_1stage_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@am_validate_c_version_real_double_eigenvectors_1stage_random_OBJECTS = test/C/validate_c_version_real_double_eigenvectors_1stage_random-test.$(OBJEXT)\nvalidate_c_version_real_double_eigenvectors_1stage_random_OBJECTS = $(am_validate_c_version_real_double_eigenvectors_1stage_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@validate_c_version_real_double_eigenvectors_1stage_random_DEPENDENCIES =  \\\n@ENABLE_C_TESTS_TRUE@\t$(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_real_double_eigenvectors_1stage_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_real_double_eigenvectors_1stage_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS = test/C/validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.$(OBJEXT)\nvalidate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS = $(am_validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_real_double_eigenvectors_2stage_default_kernel_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@am_validate_c_version_real_double_eigenvectors_2stage_default_kernel_random_OBJECTS = test/C/validate_c_version_real_double_eigenvectors_2stage_default_kernel_random-test.$(OBJEXT)\nvalidate_c_version_real_double_eigenvectors_2stage_default_kernel_random_OBJECTS = $(am_validate_c_version_real_double_eigenvectors_2stage_default_kernel_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@validate_c_version_real_double_eigenvectors_2stage_default_kernel_random_DEPENDENCIES =  \\\n@ENABLE_C_TESTS_TRUE@\t$(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_real_double_eigenvectors_2stage_default_kernel_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_real_double_eigenvectors_2stage_default_kernel_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_real_double_generalized_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_c_version_real_double_generalized_1stage_gpu_random_OBJECTS = test/C/validate_c_version_real_double_generalized_1stage_gpu_random-test.$(OBJEXT)\nvalidate_c_version_real_double_generalized_1stage_gpu_random_OBJECTS = $(am_validate_c_version_real_double_generalized_1stage_gpu_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_double_generalized_1stage_gpu_random_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_real_double_generalized_1stage_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_real_double_generalized_1stage_gpu_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_real_double_generalized_1stage_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@am_validate_c_version_real_double_generalized_1stage_random_OBJECTS = test/C/validate_c_version_real_double_generalized_1stage_random-test.$(OBJEXT)\nvalidate_c_version_real_double_generalized_1stage_random_OBJECTS = $(am_validate_c_version_real_double_generalized_1stage_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@validate_c_version_real_double_generalized_1stage_random_DEPENDENCIES =  \\\n@ENABLE_C_TESTS_TRUE@\t$(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_real_double_generalized_1stage_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_real_double_generalized_1stage_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_real_double_generalized_decomp_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_c_version_real_double_generalized_decomp_1stage_gpu_random_OBJECTS = test/C/validate_c_version_real_double_generalized_decomp_1stage_gpu_random-test.$(OBJEXT)\nvalidate_c_version_real_double_generalized_decomp_1stage_gpu_random_OBJECTS = $(am_validate_c_version_real_double_generalized_decomp_1stage_gpu_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_double_generalized_decomp_1stage_gpu_random_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_real_double_generalized_decomp_1stage_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_real_double_generalized_decomp_1stage_gpu_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_real_double_generalized_decomp_1stage_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@am_validate_c_version_real_double_generalized_decomp_1stage_random_OBJECTS = test/C/validate_c_version_real_double_generalized_decomp_1stage_random-test.$(OBJEXT)\nvalidate_c_version_real_double_generalized_decomp_1stage_random_OBJECTS = $(am_validate_c_version_real_double_generalized_decomp_1stage_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@validate_c_version_real_double_generalized_decomp_1stage_random_DEPENDENCIES =  \\\n@ENABLE_C_TESTS_TRUE@\t$(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_real_double_generalized_decomp_1stage_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_real_double_generalized_decomp_1stage_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_real_single_eigenvectors_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_c_version_real_single_eigenvectors_1stage_gpu_random_OBJECTS = test/C/validate_c_version_real_single_eigenvectors_1stage_gpu_random-test.$(OBJEXT)\nvalidate_c_version_real_single_eigenvectors_1stage_gpu_random_OBJECTS = $(am_validate_c_version_real_single_eigenvectors_1stage_gpu_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_single_eigenvectors_1stage_gpu_random_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_real_single_eigenvectors_1stage_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_real_single_eigenvectors_1stage_gpu_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_real_single_eigenvectors_1stage_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_c_version_real_single_eigenvectors_1stage_random_OBJECTS = test/C/validate_c_version_real_single_eigenvectors_1stage_random-test.$(OBJEXT)\nvalidate_c_version_real_single_eigenvectors_1stage_random_OBJECTS = $(am_validate_c_version_real_single_eigenvectors_1stage_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@validate_c_version_real_single_eigenvectors_1stage_random_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_real_single_eigenvectors_1stage_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_real_single_eigenvectors_1stage_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS = test/C/validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.$(OBJEXT)\nvalidate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS = $(am_validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_real_single_eigenvectors_2stage_default_kernel_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_c_version_real_single_eigenvectors_2stage_default_kernel_random_OBJECTS = test/C/validate_c_version_real_single_eigenvectors_2stage_default_kernel_random-test.$(OBJEXT)\nvalidate_c_version_real_single_eigenvectors_2stage_default_kernel_random_OBJECTS = $(am_validate_c_version_real_single_eigenvectors_2stage_default_kernel_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@validate_c_version_real_single_eigenvectors_2stage_default_kernel_random_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_real_single_eigenvectors_2stage_default_kernel_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_real_single_eigenvectors_2stage_default_kernel_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_real_single_generalized_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_c_version_real_single_generalized_1stage_gpu_random_OBJECTS = test/C/validate_c_version_real_single_generalized_1stage_gpu_random-test.$(OBJEXT)\nvalidate_c_version_real_single_generalized_1stage_gpu_random_OBJECTS = $(am_validate_c_version_real_single_generalized_1stage_gpu_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_single_generalized_1stage_gpu_random_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_real_single_generalized_1stage_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_real_single_generalized_1stage_gpu_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_real_single_generalized_1stage_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_c_version_real_single_generalized_1stage_random_OBJECTS = test/C/validate_c_version_real_single_generalized_1stage_random-test.$(OBJEXT)\nvalidate_c_version_real_single_generalized_1stage_random_OBJECTS = $(am_validate_c_version_real_single_generalized_1stage_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@validate_c_version_real_single_generalized_1stage_random_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_real_single_generalized_1stage_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_real_single_generalized_1stage_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_real_single_generalized_decomp_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_c_version_real_single_generalized_decomp_1stage_gpu_random_OBJECTS = test/C/validate_c_version_real_single_generalized_decomp_1stage_gpu_random-test.$(OBJEXT)\nvalidate_c_version_real_single_generalized_decomp_1stage_gpu_random_OBJECTS = $(am_validate_c_version_real_single_generalized_decomp_1stage_gpu_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_single_generalized_decomp_1stage_gpu_random_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_real_single_generalized_decomp_1stage_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_real_single_generalized_decomp_1stage_gpu_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_c_version_real_single_generalized_decomp_1stage_random_SOURCES_DIST =  \\\n\ttest/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_c_version_real_single_generalized_decomp_1stage_random_OBJECTS = test/C/validate_c_version_real_single_generalized_decomp_1stage_random-test.$(OBJEXT)\nvalidate_c_version_real_single_generalized_decomp_1stage_random_OBJECTS = $(am_validate_c_version_real_single_generalized_decomp_1stage_random_OBJECTS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@validate_c_version_real_single_generalized_decomp_1stage_random_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_c_version_real_single_generalized_decomp_1stage_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n\t$(validate_c_version_real_single_generalized_decomp_1stage_random_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_complex_2stage_banded@SUFFIX@_OBJECTS = test/Fortran/elpa2/validate_complex_2stage_banded@SUFFIX@-complex_2stage_banded.$(OBJEXT)\nvalidate_complex_2stage_banded@SUFFIX@_OBJECTS =  \\\n\t$(am_validate_complex_2stage_banded@SUFFIX@_OBJECTS)\nvalidate_complex_2stage_banded@SUFFIX@_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_complex_2stage_banded@SUFFIX@_LINK = $(LIBTOOL) $(AM_V_lt) \\\n\t--tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \\\n\t$(FCLD) $(validate_complex_2stage_banded@SUFFIX@_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_cholesky_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_complex_double_cholesky_1stage_gpu_random_OBJECTS = test/Fortran/validate_complex_double_cholesky_1stage_gpu_random-test.$(OBJEXT)\nvalidate_complex_double_cholesky_1stage_gpu_random_OBJECTS = $(am_validate_complex_double_cholesky_1stage_gpu_random_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_cholesky_1stage_gpu_random_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_cholesky_1stage_gpu_random_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_complex_double_cholesky_1stage_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_cholesky_1stage_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_double_cholesky_1stage_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_complex_double_cholesky_1stage_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_cholesky_1stage_gpu_random_all_layouts_OBJECTS = $(am_validate_complex_double_cholesky_1stage_gpu_random_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_cholesky_1stage_gpu_random_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_cholesky_1stage_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_cholesky_1stage_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_cholesky_1stage_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_complex_double_cholesky_1stage_gpu_toeplitz_OBJECTS = test/Fortran/validate_complex_double_cholesky_1stage_gpu_toeplitz-test.$(OBJEXT)\nvalidate_complex_double_cholesky_1stage_gpu_toeplitz_OBJECTS = $(am_validate_complex_double_cholesky_1stage_gpu_toeplitz_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_cholesky_1stage_gpu_toeplitz_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_cholesky_1stage_gpu_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_cholesky_1stage_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_complex_double_cholesky_1stage_random_OBJECTS = test/Fortran/validate_complex_double_cholesky_1stage_random-test.$(OBJEXT)\nvalidate_complex_double_cholesky_1stage_random_OBJECTS =  \\\n\t$(am_validate_complex_double_cholesky_1stage_random_OBJECTS)\nvalidate_complex_double_cholesky_1stage_random_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_complex_double_cholesky_1stage_random_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_complex_double_cholesky_1stage_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_cholesky_1stage_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_complex_double_cholesky_1stage_random_all_layouts_OBJECTS = test/Fortran/validate_complex_double_cholesky_1stage_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_cholesky_1stage_random_all_layouts_OBJECTS = $(am_validate_complex_double_cholesky_1stage_random_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_complex_double_cholesky_1stage_random_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_cholesky_1stage_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_cholesky_1stage_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_complex_double_cholesky_1stage_toeplitz_OBJECTS = test/Fortran/validate_complex_double_cholesky_1stage_toeplitz-test.$(OBJEXT)\nvalidate_complex_double_cholesky_1stage_toeplitz_OBJECTS = $(am_validate_complex_double_cholesky_1stage_toeplitz_OBJECTS)\nvalidate_complex_double_cholesky_1stage_toeplitz_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_complex_double_cholesky_1stage_toeplitz_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_complex_double_cholesky_1stage_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_cholesky_1stage_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_complex_double_cholesky_1stage_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_complex_double_cholesky_1stage_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_cholesky_1stage_toeplitz_all_layouts_OBJECTS = $(am_validate_complex_double_cholesky_1stage_toeplitz_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_complex_double_cholesky_1stage_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_cholesky_1stage_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_cholesky_1stage_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvalues_1stage_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_complex_double_eigenvalues_1stage_gpu_toeplitz_OBJECTS = test/Fortran/validate_complex_double_eigenvalues_1stage_gpu_toeplitz-test.$(OBJEXT)\nvalidate_complex_double_eigenvalues_1stage_gpu_toeplitz_OBJECTS = $(am_validate_complex_double_eigenvalues_1stage_gpu_toeplitz_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvalues_1stage_gpu_toeplitz_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvalues_1stage_gpu_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvalues_1stage_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_complex_double_eigenvalues_1stage_toeplitz_OBJECTS = test/Fortran/validate_complex_double_eigenvalues_1stage_toeplitz-test.$(OBJEXT)\nvalidate_complex_double_eigenvalues_1stage_toeplitz_OBJECTS = $(am_validate_complex_double_eigenvalues_1stage_toeplitz_OBJECTS)\nvalidate_complex_double_eigenvalues_1stage_toeplitz_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_complex_double_eigenvalues_1stage_toeplitz_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvalues_1stage_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_OBJECTS = $(am_validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_OBJECTS = test/Fortran/validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz-test.$(OBJEXT)\nvalidate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_OBJECTS = $(am_validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_OBJECTS = test/Fortran/validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz-test.$(OBJEXT)\nvalidate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_OBJECTS = $(am_validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_OBJECTS)\nvalidate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_OBJECTS = $(am_validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_complex_double_eigenvectors_1stage_analytic_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_1stage_analytic-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_1stage_analytic_OBJECTS = $(am_validate_complex_double_eigenvectors_1stage_analytic_OBJECTS)\nvalidate_complex_double_eigenvectors_1stage_analytic_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_1stage_analytic_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_1stage_analytic_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_1stage_analytic_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_complex_double_eigenvectors_1stage_analytic_all_layouts_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_1stage_analytic_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_1stage_analytic_all_layouts_OBJECTS = $(am_validate_complex_double_eigenvectors_1stage_analytic_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_1stage_analytic_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_1stage_analytic_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_1stage_analytic_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_complex_double_eigenvectors_1stage_gpu_random_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_1stage_gpu_random-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_1stage_gpu_random_OBJECTS = $(am_validate_complex_double_eigenvectors_1stage_gpu_random_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvectors_1stage_gpu_random_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_1stage_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_1stage_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_OBJECTS = $(am_validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_1stage_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_complex_double_eigenvectors_1stage_gpu_toeplitz_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_1stage_gpu_toeplitz-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_1stage_gpu_toeplitz_OBJECTS = $(am_validate_complex_double_eigenvectors_1stage_gpu_toeplitz_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvectors_1stage_gpu_toeplitz_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_1stage_gpu_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_1stage_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_complex_double_eigenvectors_1stage_random_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_1stage_random-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_1stage_random_OBJECTS = $(am_validate_complex_double_eigenvectors_1stage_random_OBJECTS)\nvalidate_complex_double_eigenvectors_1stage_random_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_1stage_random_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_1stage_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_1stage_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_complex_double_eigenvectors_1stage_random_all_layouts_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_1stage_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_1stage_random_all_layouts_OBJECTS = $(am_validate_complex_double_eigenvectors_1stage_random_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_1stage_random_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_1stage_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_1stage_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_complex_double_eigenvectors_1stage_toeplitz_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_1stage_toeplitz-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_1stage_toeplitz_OBJECTS = $(am_validate_complex_double_eigenvectors_1stage_toeplitz_OBJECTS)\nvalidate_complex_double_eigenvectors_1stage_toeplitz_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_1stage_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_1stage_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_OBJECTS = $(am_validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_complex_double_eigenvectors_2stage_all_kernels_analytic_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_analytic-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_analytic_OBJECTS = $(am_validate_complex_double_eigenvectors_2stage_all_kernels_analytic_OBJECTS)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_analytic_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_analytic_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_2stage_all_kernels_analytic_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_OBJECTS = $(am_validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_OBJECTS = $(am_validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_OBJECTS = $(am_validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_OBJECTS = $(am_validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_complex_double_eigenvectors_2stage_all_kernels_random_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_random-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_random_OBJECTS = $(am_validate_complex_double_eigenvectors_2stage_all_kernels_random_OBJECTS)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_random_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_2stage_all_kernels_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_OBJECTS = $(am_validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_OBJECTS = $(am_validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_OBJECTS)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_OBJECTS = $(am_validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_complex_double_eigenvectors_2stage_default_kernel_analytic_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_analytic-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_analytic_OBJECTS = $(am_validate_complex_double_eigenvectors_2stage_default_kernel_analytic_OBJECTS)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_analytic_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_analytic_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_2stage_default_kernel_analytic_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_OBJECTS = $(am_validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS = $(am_validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_OBJECTS = $(am_validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_OBJECTS = $(am_validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_complex_double_eigenvectors_2stage_default_kernel_random_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_random-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_random_OBJECTS = $(am_validate_complex_double_eigenvectors_2stage_default_kernel_random_OBJECTS)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_random_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_2stage_default_kernel_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_OBJECTS = $(am_validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_OBJECTS = $(am_validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_OBJECTS)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_OBJECTS = $(am_validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_scalapack_all_analytic_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_SCALAPACK_TESTS_TRUE@am_validate_complex_double_eigenvectors_scalapack_all_analytic_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_scalapack_all_analytic-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_scalapack_all_analytic_OBJECTS = $(am_validate_complex_double_eigenvectors_scalapack_all_analytic_OBJECTS)\n@WITH_SCALAPACK_TESTS_TRUE@validate_complex_double_eigenvectors_scalapack_all_analytic_DEPENDENCIES =  \\\n@WITH_SCALAPACK_TESTS_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_scalapack_all_analytic_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_scalapack_all_analytic_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am_validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_OBJECTS = $(am_validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_scalapack_part_analytic_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_SCALAPACK_TESTS_TRUE@am_validate_complex_double_eigenvectors_scalapack_part_analytic_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_scalapack_part_analytic-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_scalapack_part_analytic_OBJECTS = $(am_validate_complex_double_eigenvectors_scalapack_part_analytic_OBJECTS)\n@WITH_SCALAPACK_TESTS_TRUE@validate_complex_double_eigenvectors_scalapack_part_analytic_DEPENDENCIES =  \\\n@WITH_SCALAPACK_TESTS_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_eigenvectors_scalapack_part_analytic_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_scalapack_part_analytic_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am_validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_OBJECTS = test/Fortran/validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_OBJECTS = $(am_validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_generalized_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_complex_double_generalized_1stage_gpu_random_OBJECTS = test/Fortran/validate_complex_double_generalized_1stage_gpu_random-test.$(OBJEXT)\nvalidate_complex_double_generalized_1stage_gpu_random_OBJECTS = $(am_validate_complex_double_generalized_1stage_gpu_random_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_generalized_1stage_gpu_random_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_generalized_1stage_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_generalized_1stage_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_generalized_1stage_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_double_generalized_1stage_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_complex_double_generalized_1stage_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_generalized_1stage_gpu_random_all_layouts_OBJECTS = $(am_validate_complex_double_generalized_1stage_gpu_random_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_generalized_1stage_gpu_random_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_generalized_1stage_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_generalized_1stage_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_complex_double_generalized_1stage_random_OBJECTS = test/Fortran/validate_complex_double_generalized_1stage_random-test.$(OBJEXT)\nvalidate_complex_double_generalized_1stage_random_OBJECTS = $(am_validate_complex_double_generalized_1stage_random_OBJECTS)\nvalidate_complex_double_generalized_1stage_random_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_complex_double_generalized_1stage_random_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_complex_double_generalized_1stage_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_generalized_1stage_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_complex_double_generalized_1stage_random_all_layouts_OBJECTS = test/Fortran/validate_complex_double_generalized_1stage_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_generalized_1stage_random_all_layouts_OBJECTS = $(am_validate_complex_double_generalized_1stage_random_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_complex_double_generalized_1stage_random_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_generalized_1stage_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_generalized_1stage_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_generalized_decomp_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_complex_double_generalized_decomp_1stage_gpu_random_OBJECTS = test/Fortran/validate_complex_double_generalized_decomp_1stage_gpu_random-test.$(OBJEXT)\nvalidate_complex_double_generalized_decomp_1stage_gpu_random_OBJECTS = $(am_validate_complex_double_generalized_decomp_1stage_gpu_random_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_generalized_decomp_1stage_gpu_random_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_generalized_decomp_1stage_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_generalized_decomp_1stage_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_OBJECTS = $(am_validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_complex_double_generalized_decomp_1stage_random_OBJECTS = test/Fortran/validate_complex_double_generalized_decomp_1stage_random-test.$(OBJEXT)\nvalidate_complex_double_generalized_decomp_1stage_random_OBJECTS = $(am_validate_complex_double_generalized_decomp_1stage_random_OBJECTS)\nvalidate_complex_double_generalized_decomp_1stage_random_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_complex_double_generalized_decomp_1stage_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_generalized_decomp_1stage_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_generalized_decomp_1stage_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_complex_double_generalized_decomp_1stage_random_all_layouts_OBJECTS = test/Fortran/validate_complex_double_generalized_decomp_1stage_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_generalized_decomp_1stage_random_all_layouts_OBJECTS = $(am_validate_complex_double_generalized_decomp_1stage_random_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_complex_double_generalized_decomp_1stage_random_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_generalized_decomp_1stage_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_generalized_decomp_1stage_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_hermitian_multiply_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_complex_double_hermitian_multiply_1stage_gpu_random_OBJECTS = test/Fortran/validate_complex_double_hermitian_multiply_1stage_gpu_random-test.$(OBJEXT)\nvalidate_complex_double_hermitian_multiply_1stage_gpu_random_OBJECTS = $(am_validate_complex_double_hermitian_multiply_1stage_gpu_random_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_hermitian_multiply_1stage_gpu_random_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_hermitian_multiply_1stage_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_hermitian_multiply_1stage_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_OBJECTS = $(am_validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_complex_double_hermitian_multiply_1stage_random_OBJECTS = test/Fortran/validate_complex_double_hermitian_multiply_1stage_random-test.$(OBJEXT)\nvalidate_complex_double_hermitian_multiply_1stage_random_OBJECTS = $(am_validate_complex_double_hermitian_multiply_1stage_random_OBJECTS)\nvalidate_complex_double_hermitian_multiply_1stage_random_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_complex_double_hermitian_multiply_1stage_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_hermitian_multiply_1stage_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_double_hermitian_multiply_1stage_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_complex_double_hermitian_multiply_1stage_random_all_layouts_OBJECTS = test/Fortran/validate_complex_double_hermitian_multiply_1stage_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_double_hermitian_multiply_1stage_random_all_layouts_OBJECTS = $(am_validate_complex_double_hermitian_multiply_1stage_random_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_complex_double_hermitian_multiply_1stage_random_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_complex_double_hermitian_multiply_1stage_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_double_hermitian_multiply_1stage_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_cholesky_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_complex_single_cholesky_1stage_gpu_random_OBJECTS = test/Fortran/validate_complex_single_cholesky_1stage_gpu_random-test.$(OBJEXT)\nvalidate_complex_single_cholesky_1stage_gpu_random_OBJECTS = $(am_validate_complex_single_cholesky_1stage_gpu_random_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_cholesky_1stage_gpu_random_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_cholesky_1stage_gpu_random_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_complex_single_cholesky_1stage_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_cholesky_1stage_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_cholesky_1stage_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_complex_single_cholesky_1stage_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_cholesky_1stage_gpu_random_all_layouts_OBJECTS = $(am_validate_complex_single_cholesky_1stage_gpu_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_cholesky_1stage_gpu_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_cholesky_1stage_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_cholesky_1stage_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_cholesky_1stage_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_complex_single_cholesky_1stage_gpu_toeplitz_OBJECTS = test/Fortran/validate_complex_single_cholesky_1stage_gpu_toeplitz-test.$(OBJEXT)\nvalidate_complex_single_cholesky_1stage_gpu_toeplitz_OBJECTS = $(am_validate_complex_single_cholesky_1stage_gpu_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_cholesky_1stage_gpu_toeplitz_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_cholesky_1stage_gpu_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_cholesky_1stage_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_cholesky_1stage_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am_validate_complex_single_cholesky_1stage_random_OBJECTS = test/Fortran/validate_complex_single_cholesky_1stage_random-test.$(OBJEXT)\nvalidate_complex_single_cholesky_1stage_random_OBJECTS =  \\\n\t$(am_validate_complex_single_cholesky_1stage_random_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_cholesky_1stage_random_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\t$(test_program_ldadd)\nvalidate_complex_single_cholesky_1stage_random_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_complex_single_cholesky_1stage_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_cholesky_1stage_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_cholesky_1stage_random_all_layouts_OBJECTS = test/Fortran/validate_complex_single_cholesky_1stage_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_cholesky_1stage_random_all_layouts_OBJECTS = $(am_validate_complex_single_cholesky_1stage_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_cholesky_1stage_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_cholesky_1stage_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_cholesky_1stage_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_cholesky_1stage_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am_validate_complex_single_cholesky_1stage_toeplitz_OBJECTS = test/Fortran/validate_complex_single_cholesky_1stage_toeplitz-test.$(OBJEXT)\nvalidate_complex_single_cholesky_1stage_toeplitz_OBJECTS = $(am_validate_complex_single_cholesky_1stage_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_cholesky_1stage_toeplitz_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\t$(test_program_ldadd)\nvalidate_complex_single_cholesky_1stage_toeplitz_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_complex_single_cholesky_1stage_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_cholesky_1stage_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_cholesky_1stage_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_complex_single_cholesky_1stage_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_cholesky_1stage_toeplitz_all_layouts_OBJECTS = $(am_validate_complex_single_cholesky_1stage_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_cholesky_1stage_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_cholesky_1stage_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_cholesky_1stage_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvalues_1stage_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_complex_single_eigenvalues_1stage_gpu_toeplitz_OBJECTS = test/Fortran/validate_complex_single_eigenvalues_1stage_gpu_toeplitz-test.$(OBJEXT)\nvalidate_complex_single_eigenvalues_1stage_gpu_toeplitz_OBJECTS = $(am_validate_complex_single_eigenvalues_1stage_gpu_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvalues_1stage_gpu_toeplitz_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvalues_1stage_gpu_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvalues_1stage_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvalues_1stage_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am_validate_complex_single_eigenvalues_1stage_toeplitz_OBJECTS = test/Fortran/validate_complex_single_eigenvalues_1stage_toeplitz-test.$(OBJEXT)\nvalidate_complex_single_eigenvalues_1stage_toeplitz_OBJECTS = $(am_validate_complex_single_eigenvalues_1stage_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvalues_1stage_toeplitz_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\t$(test_program_ldadd)\nvalidate_complex_single_eigenvalues_1stage_toeplitz_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvalues_1stage_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_OBJECTS = $(am_validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_OBJECTS = test/Fortran/validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz-test.$(OBJEXT)\nvalidate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_OBJECTS = $(am_validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am_validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_OBJECTS = test/Fortran/validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz-test.$(OBJEXT)\nvalidate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_OBJECTS = $(am_validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\t$(test_program_ldadd)\nvalidate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_OBJECTS = $(am_validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_1stage_analytic_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am_validate_complex_single_eigenvectors_1stage_analytic_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_1stage_analytic-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_1stage_analytic_OBJECTS = $(am_validate_complex_single_eigenvectors_1stage_analytic_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_1stage_analytic_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\t$(test_program_ldadd)\nvalidate_complex_single_eigenvectors_1stage_analytic_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_1stage_analytic_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_1stage_analytic_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_eigenvectors_1stage_analytic_all_layouts_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_1stage_analytic_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_1stage_analytic_all_layouts_OBJECTS = $(am_validate_complex_single_eigenvectors_1stage_analytic_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_1stage_analytic_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvectors_1stage_analytic_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_1stage_analytic_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_complex_single_eigenvectors_1stage_gpu_random_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_1stage_gpu_random-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_1stage_gpu_random_OBJECTS = $(am_validate_complex_single_eigenvectors_1stage_gpu_random_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvectors_1stage_gpu_random_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvectors_1stage_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_1stage_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_OBJECTS = $(am_validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_1stage_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_complex_single_eigenvectors_1stage_gpu_toeplitz_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_1stage_gpu_toeplitz-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_1stage_gpu_toeplitz_OBJECTS = $(am_validate_complex_single_eigenvectors_1stage_gpu_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvectors_1stage_gpu_toeplitz_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvectors_1stage_gpu_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_1stage_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_1stage_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am_validate_complex_single_eigenvectors_1stage_random_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_1stage_random-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_1stage_random_OBJECTS = $(am_validate_complex_single_eigenvectors_1stage_random_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_1stage_random_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\t$(test_program_ldadd)\nvalidate_complex_single_eigenvectors_1stage_random_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_1stage_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_1stage_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_eigenvectors_1stage_random_all_layouts_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_1stage_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_1stage_random_all_layouts_OBJECTS = $(am_validate_complex_single_eigenvectors_1stage_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_1stage_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvectors_1stage_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_1stage_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_1stage_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am_validate_complex_single_eigenvectors_1stage_toeplitz_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_1stage_toeplitz-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_1stage_toeplitz_OBJECTS = $(am_validate_complex_single_eigenvectors_1stage_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_1stage_toeplitz_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\t$(test_program_ldadd)\nvalidate_complex_single_eigenvectors_1stage_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_1stage_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_OBJECTS = $(am_validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_2stage_all_kernels_analytic_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am_validate_complex_single_eigenvectors_2stage_all_kernels_analytic_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_analytic-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_analytic_OBJECTS = $(am_validate_complex_single_eigenvectors_2stage_all_kernels_analytic_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_analytic_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\t$(test_program_ldadd)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_analytic_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_2stage_all_kernels_analytic_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_OBJECTS = $(am_validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_OBJECTS = $(am_validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_OBJECTS = $(am_validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_OBJECTS = $(am_validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_2stage_all_kernels_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am_validate_complex_single_eigenvectors_2stage_all_kernels_random_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_random-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_random_OBJECTS = $(am_validate_complex_single_eigenvectors_2stage_all_kernels_random_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_random_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\t$(test_program_ldadd)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_2stage_all_kernels_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_OBJECTS = $(am_validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am_validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_OBJECTS = $(am_validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\t$(test_program_ldadd)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_OBJECTS = $(am_validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_2stage_default_kernel_analytic_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am_validate_complex_single_eigenvectors_2stage_default_kernel_analytic_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_analytic-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_analytic_OBJECTS = $(am_validate_complex_single_eigenvectors_2stage_default_kernel_analytic_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_analytic_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\t$(test_program_ldadd)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_analytic_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_2stage_default_kernel_analytic_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_OBJECTS = $(am_validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS = $(am_validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_OBJECTS = $(am_validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_OBJECTS = $(am_validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_2stage_default_kernel_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am_validate_complex_single_eigenvectors_2stage_default_kernel_random_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_random-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_random_OBJECTS = $(am_validate_complex_single_eigenvectors_2stage_default_kernel_random_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_random_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\t$(test_program_ldadd)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_2stage_default_kernel_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_OBJECTS = $(am_validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am_validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_OBJECTS = $(am_validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\t$(test_program_ldadd)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_OBJECTS = $(am_validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_generalized_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_complex_single_generalized_1stage_gpu_random_OBJECTS = test/Fortran/validate_complex_single_generalized_1stage_gpu_random-test.$(OBJEXT)\nvalidate_complex_single_generalized_1stage_gpu_random_OBJECTS = $(am_validate_complex_single_generalized_1stage_gpu_random_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_generalized_1stage_gpu_random_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_generalized_1stage_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_generalized_1stage_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_generalized_1stage_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_generalized_1stage_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_complex_single_generalized_1stage_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_generalized_1stage_gpu_random_all_layouts_OBJECTS = $(am_validate_complex_single_generalized_1stage_gpu_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_generalized_1stage_gpu_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_generalized_1stage_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_generalized_1stage_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_generalized_1stage_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am_validate_complex_single_generalized_1stage_random_OBJECTS = test/Fortran/validate_complex_single_generalized_1stage_random-test.$(OBJEXT)\nvalidate_complex_single_generalized_1stage_random_OBJECTS = $(am_validate_complex_single_generalized_1stage_random_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_generalized_1stage_random_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\t$(test_program_ldadd)\nvalidate_complex_single_generalized_1stage_random_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_complex_single_generalized_1stage_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_generalized_1stage_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_generalized_1stage_random_all_layouts_OBJECTS = test/Fortran/validate_complex_single_generalized_1stage_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_generalized_1stage_random_all_layouts_OBJECTS = $(am_validate_complex_single_generalized_1stage_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_generalized_1stage_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_generalized_1stage_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_generalized_1stage_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_generalized_decomp_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_complex_single_generalized_decomp_1stage_gpu_random_OBJECTS = test/Fortran/validate_complex_single_generalized_decomp_1stage_gpu_random-test.$(OBJEXT)\nvalidate_complex_single_generalized_decomp_1stage_gpu_random_OBJECTS = $(am_validate_complex_single_generalized_decomp_1stage_gpu_random_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_generalized_decomp_1stage_gpu_random_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_generalized_decomp_1stage_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_generalized_decomp_1stage_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_OBJECTS = $(am_validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_generalized_decomp_1stage_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am_validate_complex_single_generalized_decomp_1stage_random_OBJECTS = test/Fortran/validate_complex_single_generalized_decomp_1stage_random-test.$(OBJEXT)\nvalidate_complex_single_generalized_decomp_1stage_random_OBJECTS = $(am_validate_complex_single_generalized_decomp_1stage_random_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_generalized_decomp_1stage_random_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\t$(test_program_ldadd)\nvalidate_complex_single_generalized_decomp_1stage_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_generalized_decomp_1stage_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_generalized_decomp_1stage_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_generalized_decomp_1stage_random_all_layouts_OBJECTS = test/Fortran/validate_complex_single_generalized_decomp_1stage_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_generalized_decomp_1stage_random_all_layouts_OBJECTS = $(am_validate_complex_single_generalized_decomp_1stage_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_generalized_decomp_1stage_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_generalized_decomp_1stage_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_generalized_decomp_1stage_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_hermitian_multiply_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_complex_single_hermitian_multiply_1stage_gpu_random_OBJECTS = test/Fortran/validate_complex_single_hermitian_multiply_1stage_gpu_random-test.$(OBJEXT)\nvalidate_complex_single_hermitian_multiply_1stage_gpu_random_OBJECTS = $(am_validate_complex_single_hermitian_multiply_1stage_gpu_random_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_hermitian_multiply_1stage_gpu_random_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_hermitian_multiply_1stage_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_hermitian_multiply_1stage_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_OBJECTS = $(am_validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_hermitian_multiply_1stage_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am_validate_complex_single_hermitian_multiply_1stage_random_OBJECTS = test/Fortran/validate_complex_single_hermitian_multiply_1stage_random-test.$(OBJEXT)\nvalidate_complex_single_hermitian_multiply_1stage_random_OBJECTS = $(am_validate_complex_single_hermitian_multiply_1stage_random_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_hermitian_multiply_1stage_random_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\t$(test_program_ldadd)\nvalidate_complex_single_hermitian_multiply_1stage_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_hermitian_multiply_1stage_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_complex_single_hermitian_multiply_1stage_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@am_validate_complex_single_hermitian_multiply_1stage_random_all_layouts_OBJECTS = test/Fortran/validate_complex_single_hermitian_multiply_1stage_random_all_layouts-test.$(OBJEXT)\nvalidate_complex_single_hermitian_multiply_1stage_random_all_layouts_OBJECTS = $(am_validate_complex_single_hermitian_multiply_1stage_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_hermitian_multiply_1stage_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_complex_single_hermitian_multiply_1stage_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_complex_single_hermitian_multiply_1stage_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_double_instance@SUFFIX@_OBJECTS = test/Fortran/elpa2/validate_double_instance@SUFFIX@-double_instance.$(OBJEXT)\nvalidate_double_instance@SUFFIX@_OBJECTS =  \\\n\t$(am_validate_double_instance@SUFFIX@_OBJECTS)\nvalidate_double_instance@SUFFIX@_DEPENDENCIES = $(test_program_ldadd)\nvalidate_double_instance@SUFFIX@_LINK = $(LIBTOOL) $(AM_V_lt) --tag=FC \\\n\t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_double_instance@SUFFIX@_FCFLAGS) $(FCFLAGS) \\\n\t$(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_multiple_objs_real_double_SOURCES_DIST =  \\\n\ttest/Fortran/test_multiple_objs.F90\n@ENABLE_AUTOTUNING_TRUE@am_validate_multiple_objs_real_double_OBJECTS = test/Fortran/validate_multiple_objs_real_double-test_multiple_objs.$(OBJEXT)\nvalidate_multiple_objs_real_double_OBJECTS =  \\\n\t$(am_validate_multiple_objs_real_double_OBJECTS)\n@ENABLE_AUTOTUNING_TRUE@validate_multiple_objs_real_double_DEPENDENCIES =  \\\n@ENABLE_AUTOTUNING_TRUE@\t$(test_program_ldadd)\nvalidate_multiple_objs_real_double_LINK = $(LIBTOOL) $(AM_V_lt) \\\n\t--tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \\\n\t$(FCLD) $(validate_multiple_objs_real_double_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_multiple_objs_real_double_c_version_SOURCES_DIST =  \\\n\ttest/C/test_multiple_objs.c\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@am_validate_multiple_objs_real_double_c_version_OBJECTS = test/C/validate_multiple_objs_real_double_c_version-test_multiple_objs.$(OBJEXT)\nvalidate_multiple_objs_real_double_c_version_OBJECTS =  \\\n\t$(am_validate_multiple_objs_real_double_c_version_OBJECTS)\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@validate_multiple_objs_real_double_c_version_DEPENDENCIES = $(test_program_ldadd) \\\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@\t$(am__DEPENDENCIES_1)\nvalidate_multiple_objs_real_double_c_version_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(CCLD) \\\n\t$(validate_multiple_objs_real_double_c_version_CFLAGS) \\\n\t$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_2stage_banded@SUFFIX@_OBJECTS = test/Fortran/elpa2/validate_real_2stage_banded@SUFFIX@-real_2stage_banded.$(OBJEXT)\nvalidate_real_2stage_banded@SUFFIX@_OBJECTS =  \\\n\t$(am_validate_real_2stage_banded@SUFFIX@_OBJECTS)\nvalidate_real_2stage_banded@SUFFIX@_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_2stage_banded@SUFFIX@_LINK = $(LIBTOOL) $(AM_V_lt) \\\n\t--tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \\\n\t$(FCLD) $(validate_real_2stage_banded@SUFFIX@_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_cholesky_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_real_double_cholesky_1stage_gpu_random_OBJECTS = test/Fortran/validate_real_double_cholesky_1stage_gpu_random-test.$(OBJEXT)\nvalidate_real_double_cholesky_1stage_gpu_random_OBJECTS =  \\\n\t$(am_validate_real_double_cholesky_1stage_gpu_random_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_real_double_cholesky_1stage_gpu_random_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_cholesky_1stage_gpu_random_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_double_cholesky_1stage_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_cholesky_1stage_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_double_cholesky_1stage_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_real_double_cholesky_1stage_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_real_double_cholesky_1stage_gpu_random_all_layouts_OBJECTS = $(am_validate_real_double_cholesky_1stage_gpu_random_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_cholesky_1stage_gpu_random_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_cholesky_1stage_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_cholesky_1stage_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_cholesky_1stage_gpu_random_split_comm_myself_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_double_cholesky_1stage_gpu_random_split_comm_myself_OBJECTS = test/Fortran/validate_real_double_cholesky_1stage_gpu_random_split_comm_myself-test.$(OBJEXT)\nvalidate_real_double_cholesky_1stage_gpu_random_split_comm_myself_OBJECTS = $(am_validate_real_double_cholesky_1stage_gpu_random_split_comm_myself_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_cholesky_1stage_gpu_random_split_comm_myself_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_cholesky_1stage_gpu_random_split_comm_myself_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_cholesky_1stage_gpu_random_split_comm_myself_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_cholesky_1stage_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_real_double_cholesky_1stage_gpu_toeplitz_OBJECTS = test/Fortran/validate_real_double_cholesky_1stage_gpu_toeplitz-test.$(OBJEXT)\nvalidate_real_double_cholesky_1stage_gpu_toeplitz_OBJECTS = $(am_validate_real_double_cholesky_1stage_gpu_toeplitz_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_real_double_cholesky_1stage_gpu_toeplitz_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_cholesky_1stage_gpu_toeplitz_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_double_cholesky_1stage_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_cholesky_1stage_random_OBJECTS = test/Fortran/validate_real_double_cholesky_1stage_random-test.$(OBJEXT)\nvalidate_real_double_cholesky_1stage_random_OBJECTS =  \\\n\t$(am_validate_real_double_cholesky_1stage_random_OBJECTS)\nvalidate_real_double_cholesky_1stage_random_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_cholesky_1stage_random_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_double_cholesky_1stage_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_cholesky_1stage_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_cholesky_1stage_random_all_layouts_OBJECTS = test/Fortran/validate_real_double_cholesky_1stage_random_all_layouts-test.$(OBJEXT)\nvalidate_real_double_cholesky_1stage_random_all_layouts_OBJECTS = $(am_validate_real_double_cholesky_1stage_random_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_cholesky_1stage_random_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_cholesky_1stage_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_cholesky_1stage_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_cholesky_1stage_random_split_comm_myself_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_cholesky_1stage_random_split_comm_myself_OBJECTS = test/Fortran/validate_real_double_cholesky_1stage_random_split_comm_myself-test.$(OBJEXT)\nvalidate_real_double_cholesky_1stage_random_split_comm_myself_OBJECTS = $(am_validate_real_double_cholesky_1stage_random_split_comm_myself_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_cholesky_1stage_random_split_comm_myself_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_cholesky_1stage_random_split_comm_myself_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_cholesky_1stage_random_split_comm_myself_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_cholesky_1stage_toeplitz_OBJECTS = test/Fortran/validate_real_double_cholesky_1stage_toeplitz-test.$(OBJEXT)\nvalidate_real_double_cholesky_1stage_toeplitz_OBJECTS =  \\\n\t$(am_validate_real_double_cholesky_1stage_toeplitz_OBJECTS)\nvalidate_real_double_cholesky_1stage_toeplitz_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_cholesky_1stage_toeplitz_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_double_cholesky_1stage_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_cholesky_1stage_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_cholesky_1stage_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_double_cholesky_1stage_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_double_cholesky_1stage_toeplitz_all_layouts_OBJECTS = $(am_validate_real_double_cholesky_1stage_toeplitz_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_cholesky_1stage_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_cholesky_1stage_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_cholesky_1stage_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_eigenvalues_1stage_frank_OBJECTS = test/Fortran/validate_real_double_eigenvalues_1stage_frank-test.$(OBJEXT)\nvalidate_real_double_eigenvalues_1stage_frank_OBJECTS =  \\\n\t$(am_validate_real_double_eigenvalues_1stage_frank_OBJECTS)\nvalidate_real_double_eigenvalues_1stage_frank_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_eigenvalues_1stage_frank_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvalues_1stage_frank_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvalues_1stage_frank_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_eigenvalues_1stage_frank_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvalues_1stage_frank_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvalues_1stage_frank_all_layouts_OBJECTS = $(am_validate_real_double_eigenvalues_1stage_frank_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_eigenvalues_1stage_frank_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvalues_1stage_frank_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvalues_1stage_frank_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvalues_1stage_gpu_frank_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_real_double_eigenvalues_1stage_gpu_frank_OBJECTS = test/Fortran/validate_real_double_eigenvalues_1stage_gpu_frank-test.$(OBJEXT)\nvalidate_real_double_eigenvalues_1stage_gpu_frank_OBJECTS = $(am_validate_real_double_eigenvalues_1stage_gpu_frank_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvalues_1stage_gpu_frank_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvalues_1stage_gpu_frank_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvalues_1stage_gpu_frank_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_OBJECTS = $(am_validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvalues_1stage_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_real_double_eigenvalues_1stage_gpu_toeplitz_OBJECTS = test/Fortran/validate_real_double_eigenvalues_1stage_gpu_toeplitz-test.$(OBJEXT)\nvalidate_real_double_eigenvalues_1stage_gpu_toeplitz_OBJECTS = $(am_validate_real_double_eigenvalues_1stage_gpu_toeplitz_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvalues_1stage_gpu_toeplitz_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvalues_1stage_gpu_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvalues_1stage_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_eigenvalues_1stage_toeplitz_OBJECTS = test/Fortran/validate_real_double_eigenvalues_1stage_toeplitz-test.$(OBJEXT)\nvalidate_real_double_eigenvalues_1stage_toeplitz_OBJECTS = $(am_validate_real_double_eigenvalues_1stage_toeplitz_OBJECTS)\nvalidate_real_double_eigenvalues_1stage_toeplitz_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_eigenvalues_1stage_toeplitz_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvalues_1stage_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvalues_1stage_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_eigenvalues_1stage_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvalues_1stage_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvalues_1stage_toeplitz_all_layouts_OBJECTS = $(am_validate_real_double_eigenvalues_1stage_toeplitz_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_eigenvalues_1stage_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvalues_1stage_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvalues_1stage_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_eigenvalues_2stage_default_kernel_frank_OBJECTS = test/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_frank-test.$(OBJEXT)\nvalidate_real_double_eigenvalues_2stage_default_kernel_frank_OBJECTS = $(am_validate_real_double_eigenvalues_2stage_default_kernel_frank_OBJECTS)\nvalidate_real_double_eigenvalues_2stage_default_kernel_frank_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_eigenvalues_2stage_default_kernel_frank_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvalues_2stage_default_kernel_frank_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_OBJECTS = $(am_validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_OBJECTS = test/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank-test.$(OBJEXT)\nvalidate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_OBJECTS = $(am_validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_OBJECTS = $(am_validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_OBJECTS = test/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz-test.$(OBJEXT)\nvalidate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_OBJECTS = $(am_validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_OBJECTS = test/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_toeplitz-test.$(OBJEXT)\nvalidate_real_double_eigenvalues_2stage_default_kernel_toeplitz_OBJECTS = $(am_validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_OBJECTS)\nvalidate_real_double_eigenvalues_2stage_default_kernel_toeplitz_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_eigenvalues_2stage_default_kernel_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_OBJECTS = $(am_validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_eigenvectors_1stage_analytic_OBJECTS = test/Fortran/validate_real_double_eigenvectors_1stage_analytic-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_1stage_analytic_OBJECTS = $(am_validate_real_double_eigenvectors_1stage_analytic_OBJECTS)\nvalidate_real_double_eigenvectors_1stage_analytic_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_1stage_analytic_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_1stage_analytic_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_1stage_analytic_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_1stage_analytic_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_1stage_analytic_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_1stage_analytic_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_1stage_analytic_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_analytic_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_1stage_analytic_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_1stage_analytic_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_eigenvectors_1stage_frank_OBJECTS = test/Fortran/validate_real_double_eigenvectors_1stage_frank-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_1stage_frank_OBJECTS =  \\\n\t$(am_validate_real_double_eigenvectors_1stage_frank_OBJECTS)\nvalidate_real_double_eigenvectors_1stage_frank_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_1stage_frank_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_1stage_frank_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_1stage_frank_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_1stage_frank_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_1stage_frank_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_1stage_frank_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_1stage_frank_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_frank_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_1stage_frank_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_1stage_frank_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_1stage_gpu_frank_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_real_double_eigenvectors_1stage_gpu_frank_OBJECTS = test/Fortran/validate_real_double_eigenvectors_1stage_gpu_frank-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_1stage_gpu_frank_OBJECTS = $(am_validate_real_double_eigenvectors_1stage_gpu_frank_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_1stage_gpu_frank_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_1stage_gpu_frank_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_1stage_gpu_frank_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_real_double_eigenvectors_1stage_gpu_random_OBJECTS = test/Fortran/validate_real_double_eigenvectors_1stage_gpu_random-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_1stage_gpu_random_OBJECTS = $(am_validate_real_double_eigenvectors_1stage_gpu_random_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_1stage_gpu_random_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_1stage_gpu_random_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_1stage_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_1stage_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_1stage_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_1stage_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_1stage_gpu_random_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_1stage_gpu_random_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_gpu_random_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_1stage_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_1stage_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_OBJECTS = test/Fortran/validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_OBJECTS = $(am_validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_1stage_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_real_double_eigenvectors_1stage_gpu_toeplitz_OBJECTS = test/Fortran/validate_real_double_eigenvectors_1stage_gpu_toeplitz-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_1stage_gpu_toeplitz_OBJECTS = $(am_validate_real_double_eigenvectors_1stage_gpu_toeplitz_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_1stage_gpu_toeplitz_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_1stage_gpu_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_1stage_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_eigenvectors_1stage_random_OBJECTS = test/Fortran/validate_real_double_eigenvectors_1stage_random-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_1stage_random_OBJECTS =  \\\n\t$(am_validate_real_double_eigenvectors_1stage_random_OBJECTS)\nvalidate_real_double_eigenvectors_1stage_random_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_1stage_random_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_1stage_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_1stage_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_1stage_random_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_1stage_random_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_1stage_random_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_1stage_random_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_random_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_1stage_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_1stage_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_1stage_random_split_comm_myself_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_1stage_random_split_comm_myself_OBJECTS = test/Fortran/validate_real_double_eigenvectors_1stage_random_split_comm_myself-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_1stage_random_split_comm_myself_OBJECTS = $(am_validate_real_double_eigenvectors_1stage_random_split_comm_myself_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_random_split_comm_myself_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_1stage_random_split_comm_myself_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_1stage_random_split_comm_myself_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_eigenvectors_1stage_toeplitz_OBJECTS = test/Fortran/validate_real_double_eigenvectors_1stage_toeplitz-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_1stage_toeplitz_OBJECTS = $(am_validate_real_double_eigenvectors_1stage_toeplitz_OBJECTS)\nvalidate_real_double_eigenvectors_1stage_toeplitz_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_1stage_toeplitz_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_1stage_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_1stage_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_1stage_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_1stage_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_1stage_toeplitz_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_1stage_toeplitz_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_1stage_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_1stage_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_eigenvectors_2stage_all_kernels_analytic_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_analytic-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_analytic_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_all_kernels_analytic_OBJECTS)\nvalidate_real_double_eigenvectors_2stage_all_kernels_analytic_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_all_kernels_analytic_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_analytic_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_eigenvectors_2stage_all_kernels_frank_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_frank-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_frank_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_all_kernels_frank_OBJECTS)\nvalidate_real_double_eigenvectors_2stage_all_kernels_frank_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_all_kernels_frank_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_frank_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_random-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_random_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_eigenvectors_2stage_all_kernels_qr_random_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_qr_random-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_qr_random_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_all_kernels_qr_random_OBJECTS)\nvalidate_real_double_eigenvectors_2stage_all_kernels_qr_random_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_all_kernels_qr_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_qr_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_eigenvectors_2stage_all_kernels_random_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_random-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_random_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_all_kernels_random_OBJECTS)\nvalidate_real_double_eigenvectors_2stage_all_kernels_random_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_all_kernels_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_toeplitz-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_toeplitz_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_OBJECTS)\nvalidate_real_double_eigenvectors_2stage_all_kernels_toeplitz_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_all_kernels_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_eigenvectors_2stage_default_kernel_analytic_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_analytic-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_analytic_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_default_kernel_analytic_OBJECTS)\nvalidate_real_double_eigenvectors_2stage_default_kernel_analytic_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_default_kernel_analytic_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_analytic_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_eigenvectors_2stage_default_kernel_frank_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_frank-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_frank_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_default_kernel_frank_OBJECTS)\nvalidate_real_double_eigenvectors_2stage_default_kernel_frank_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_default_kernel_frank_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_frank_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_eigenvectors_2stage_default_kernel_qr_random_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_qr_random-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_qr_random_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_default_kernel_qr_random_OBJECTS)\nvalidate_real_double_eigenvectors_2stage_default_kernel_qr_random_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_default_kernel_qr_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_qr_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_eigenvectors_2stage_default_kernel_random_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_random-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_random_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_default_kernel_random_OBJECTS)\nvalidate_real_double_eigenvectors_2stage_default_kernel_random_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_default_kernel_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_toeplitz-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_toeplitz_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_OBJECTS)\nvalidate_real_double_eigenvectors_2stage_default_kernel_toeplitz_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_default_kernel_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_scalapack_all_analytic_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_SCALAPACK_TESTS_TRUE@am_validate_real_double_eigenvectors_scalapack_all_analytic_OBJECTS = test/Fortran/validate_real_double_eigenvectors_scalapack_all_analytic-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_scalapack_all_analytic_OBJECTS = $(am_validate_real_double_eigenvectors_scalapack_all_analytic_OBJECTS)\n@WITH_SCALAPACK_TESTS_TRUE@validate_real_double_eigenvectors_scalapack_all_analytic_DEPENDENCIES =  \\\n@WITH_SCALAPACK_TESTS_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_scalapack_all_analytic_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_scalapack_all_analytic_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am_validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_scalapack_part_analytic_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_SCALAPACK_TESTS_TRUE@am_validate_real_double_eigenvectors_scalapack_part_analytic_OBJECTS = test/Fortran/validate_real_double_eigenvectors_scalapack_part_analytic-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_scalapack_part_analytic_OBJECTS = $(am_validate_real_double_eigenvectors_scalapack_part_analytic_OBJECTS)\n@WITH_SCALAPACK_TESTS_TRUE@validate_real_double_eigenvectors_scalapack_part_analytic_DEPENDENCIES =  \\\n@WITH_SCALAPACK_TESTS_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_eigenvectors_scalapack_part_analytic_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_scalapack_part_analytic_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@am_validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_OBJECTS = test/Fortran/validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts-test.$(OBJEXT)\nvalidate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_OBJECTS = $(am_validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_generalized_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_real_double_generalized_1stage_gpu_random_OBJECTS = test/Fortran/validate_real_double_generalized_1stage_gpu_random-test.$(OBJEXT)\nvalidate_real_double_generalized_1stage_gpu_random_OBJECTS = $(am_validate_real_double_generalized_1stage_gpu_random_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_real_double_generalized_1stage_gpu_random_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_generalized_1stage_gpu_random_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_double_generalized_1stage_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_generalized_1stage_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_double_generalized_1stage_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_real_double_generalized_1stage_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_real_double_generalized_1stage_gpu_random_all_layouts_OBJECTS = $(am_validate_real_double_generalized_1stage_gpu_random_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_generalized_1stage_gpu_random_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_generalized_1stage_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_generalized_1stage_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_generalized_1stage_random_OBJECTS = test/Fortran/validate_real_double_generalized_1stage_random-test.$(OBJEXT)\nvalidate_real_double_generalized_1stage_random_OBJECTS =  \\\n\t$(am_validate_real_double_generalized_1stage_random_OBJECTS)\nvalidate_real_double_generalized_1stage_random_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_generalized_1stage_random_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_double_generalized_1stage_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_generalized_1stage_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_generalized_1stage_random_all_layouts_OBJECTS = test/Fortran/validate_real_double_generalized_1stage_random_all_layouts-test.$(OBJEXT)\nvalidate_real_double_generalized_1stage_random_all_layouts_OBJECTS = $(am_validate_real_double_generalized_1stage_random_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_generalized_1stage_random_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_generalized_1stage_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_generalized_1stage_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_generalized_decomp_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_real_double_generalized_decomp_1stage_gpu_random_OBJECTS = test/Fortran/validate_real_double_generalized_decomp_1stage_gpu_random-test.$(OBJEXT)\nvalidate_real_double_generalized_decomp_1stage_gpu_random_OBJECTS = $(am_validate_real_double_generalized_decomp_1stage_gpu_random_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_real_double_generalized_decomp_1stage_gpu_random_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_generalized_decomp_1stage_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_generalized_decomp_1stage_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_OBJECTS = $(am_validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_generalized_decomp_1stage_random_OBJECTS = test/Fortran/validate_real_double_generalized_decomp_1stage_random-test.$(OBJEXT)\nvalidate_real_double_generalized_decomp_1stage_random_OBJECTS = $(am_validate_real_double_generalized_decomp_1stage_random_OBJECTS)\nvalidate_real_double_generalized_decomp_1stage_random_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_generalized_decomp_1stage_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_generalized_decomp_1stage_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_generalized_decomp_1stage_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_generalized_decomp_1stage_random_all_layouts_OBJECTS = test/Fortran/validate_real_double_generalized_decomp_1stage_random_all_layouts-test.$(OBJEXT)\nvalidate_real_double_generalized_decomp_1stage_random_all_layouts_OBJECTS = $(am_validate_real_double_generalized_decomp_1stage_random_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_generalized_decomp_1stage_random_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_generalized_decomp_1stage_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_generalized_decomp_1stage_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_hermitian_multiply_1stage_frank_OBJECTS = test/Fortran/validate_real_double_hermitian_multiply_1stage_frank-test.$(OBJEXT)\nvalidate_real_double_hermitian_multiply_1stage_frank_OBJECTS = $(am_validate_real_double_hermitian_multiply_1stage_frank_OBJECTS)\nvalidate_real_double_hermitian_multiply_1stage_frank_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_hermitian_multiply_1stage_frank_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_hermitian_multiply_1stage_frank_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_hermitian_multiply_1stage_frank_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_hermitian_multiply_1stage_frank_all_layouts_OBJECTS = test/Fortran/validate_real_double_hermitian_multiply_1stage_frank_all_layouts-test.$(OBJEXT)\nvalidate_real_double_hermitian_multiply_1stage_frank_all_layouts_OBJECTS = $(am_validate_real_double_hermitian_multiply_1stage_frank_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_hermitian_multiply_1stage_frank_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_hermitian_multiply_1stage_frank_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_hermitian_multiply_1stage_frank_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_hermitian_multiply_1stage_gpu_frank_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_real_double_hermitian_multiply_1stage_gpu_frank_OBJECTS = test/Fortran/validate_real_double_hermitian_multiply_1stage_gpu_frank-test.$(OBJEXT)\nvalidate_real_double_hermitian_multiply_1stage_gpu_frank_OBJECTS = $(am_validate_real_double_hermitian_multiply_1stage_gpu_frank_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_real_double_hermitian_multiply_1stage_gpu_frank_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_hermitian_multiply_1stage_gpu_frank_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_hermitian_multiply_1stage_gpu_frank_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_OBJECTS = test/Fortran/validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts-test.$(OBJEXT)\nvalidate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_OBJECTS = $(am_validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_hermitian_multiply_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_real_double_hermitian_multiply_1stage_gpu_random_OBJECTS = test/Fortran/validate_real_double_hermitian_multiply_1stage_gpu_random-test.$(OBJEXT)\nvalidate_real_double_hermitian_multiply_1stage_gpu_random_OBJECTS = $(am_validate_real_double_hermitian_multiply_1stage_gpu_random_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_real_double_hermitian_multiply_1stage_gpu_random_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_hermitian_multiply_1stage_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_hermitian_multiply_1stage_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_OBJECTS = $(am_validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_hermitian_multiply_1stage_random_OBJECTS = test/Fortran/validate_real_double_hermitian_multiply_1stage_random-test.$(OBJEXT)\nvalidate_real_double_hermitian_multiply_1stage_random_OBJECTS = $(am_validate_real_double_hermitian_multiply_1stage_random_OBJECTS)\nvalidate_real_double_hermitian_multiply_1stage_random_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_hermitian_multiply_1stage_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_hermitian_multiply_1stage_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_hermitian_multiply_1stage_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_hermitian_multiply_1stage_random_all_layouts_OBJECTS = test/Fortran/validate_real_double_hermitian_multiply_1stage_random_all_layouts-test.$(OBJEXT)\nvalidate_real_double_hermitian_multiply_1stage_random_all_layouts_OBJECTS = $(am_validate_real_double_hermitian_multiply_1stage_random_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_hermitian_multiply_1stage_random_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_hermitian_multiply_1stage_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_hermitian_multiply_1stage_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@am_validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_OBJECTS = test/Fortran/validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz-test.$(OBJEXT)\nvalidate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_OBJECTS = $(am_validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_OBJECTS)\n@WITH_GPU_VERSION_TRUE@validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_OBJECTS)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_real_double_solve_tridiagonal_1stage_toeplitz_OBJECTS = test/Fortran/validate_real_double_solve_tridiagonal_1stage_toeplitz-test.$(OBJEXT)\nvalidate_real_double_solve_tridiagonal_1stage_toeplitz_OBJECTS = $(am_validate_real_double_solve_tridiagonal_1stage_toeplitz_OBJECTS)\nvalidate_real_double_solve_tridiagonal_1stage_toeplitz_DEPENDENCIES =  \\\n\t$(test_program_ldadd)\nvalidate_real_double_solve_tridiagonal_1stage_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_solve_tridiagonal_1stage_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WITH_MPI_TRUE@am_validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_OBJECTS = $(am_validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_OBJECTS)\n@WITH_MPI_TRUE@validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_DEPENDENCIES =  \\\n@WITH_MPI_TRUE@\t$(test_program_ldadd)\nvalidate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_cholesky_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_real_single_cholesky_1stage_gpu_random_OBJECTS = test/Fortran/validate_real_single_cholesky_1stage_gpu_random-test.$(OBJEXT)\nvalidate_real_single_cholesky_1stage_gpu_random_OBJECTS =  \\\n\t$(am_validate_real_single_cholesky_1stage_gpu_random_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_cholesky_1stage_gpu_random_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_cholesky_1stage_gpu_random_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_single_cholesky_1stage_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_cholesky_1stage_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_single_cholesky_1stage_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_real_single_cholesky_1stage_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_real_single_cholesky_1stage_gpu_random_all_layouts_OBJECTS = $(am_validate_real_single_cholesky_1stage_gpu_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_cholesky_1stage_gpu_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_cholesky_1stage_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_cholesky_1stage_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_cholesky_1stage_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_real_single_cholesky_1stage_gpu_toeplitz_OBJECTS = test/Fortran/validate_real_single_cholesky_1stage_gpu_toeplitz-test.$(OBJEXT)\nvalidate_real_single_cholesky_1stage_gpu_toeplitz_OBJECTS = $(am_validate_real_single_cholesky_1stage_gpu_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_cholesky_1stage_gpu_toeplitz_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_cholesky_1stage_gpu_toeplitz_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_single_cholesky_1stage_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_cholesky_1stage_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_real_single_cholesky_1stage_random_OBJECTS = test/Fortran/validate_real_single_cholesky_1stage_random-test.$(OBJEXT)\nvalidate_real_single_cholesky_1stage_random_OBJECTS =  \\\n\t$(am_validate_real_single_cholesky_1stage_random_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_cholesky_1stage_random_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(test_program_ldadd)\nvalidate_real_single_cholesky_1stage_random_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_single_cholesky_1stage_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_cholesky_1stage_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am_validate_real_single_cholesky_1stage_random_all_layouts_OBJECTS = test/Fortran/validate_real_single_cholesky_1stage_random_all_layouts-test.$(OBJEXT)\nvalidate_real_single_cholesky_1stage_random_all_layouts_OBJECTS = $(am_validate_real_single_cholesky_1stage_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_cholesky_1stage_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_cholesky_1stage_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_cholesky_1stage_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_cholesky_1stage_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_real_single_cholesky_1stage_toeplitz_OBJECTS = test/Fortran/validate_real_single_cholesky_1stage_toeplitz-test.$(OBJEXT)\nvalidate_real_single_cholesky_1stage_toeplitz_OBJECTS =  \\\n\t$(am_validate_real_single_cholesky_1stage_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_cholesky_1stage_toeplitz_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(test_program_ldadd)\nvalidate_real_single_cholesky_1stage_toeplitz_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_single_cholesky_1stage_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_cholesky_1stage_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am_validate_real_single_cholesky_1stage_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_single_cholesky_1stage_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_single_cholesky_1stage_toeplitz_all_layouts_OBJECTS = $(am_validate_real_single_cholesky_1stage_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_cholesky_1stage_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_cholesky_1stage_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_cholesky_1stage_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvalues_1stage_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_real_single_eigenvalues_1stage_gpu_toeplitz_OBJECTS = test/Fortran/validate_real_single_eigenvalues_1stage_gpu_toeplitz-test.$(OBJEXT)\nvalidate_real_single_eigenvalues_1stage_gpu_toeplitz_OBJECTS = $(am_validate_real_single_eigenvalues_1stage_gpu_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvalues_1stage_gpu_toeplitz_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvalues_1stage_gpu_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvalues_1stage_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvalues_1stage_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_real_single_eigenvalues_1stage_toeplitz_OBJECTS = test/Fortran/validate_real_single_eigenvalues_1stage_toeplitz-test.$(OBJEXT)\nvalidate_real_single_eigenvalues_1stage_toeplitz_OBJECTS = $(am_validate_real_single_eigenvalues_1stage_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvalues_1stage_toeplitz_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(test_program_ldadd)\nvalidate_real_single_eigenvalues_1stage_toeplitz_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvalues_1stage_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvalues_1stage_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am_validate_real_single_eigenvalues_1stage_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_single_eigenvalues_1stage_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_single_eigenvalues_1stage_toeplitz_all_layouts_OBJECTS = $(am_validate_real_single_eigenvalues_1stage_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvalues_1stage_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvalues_1stage_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvalues_1stage_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_OBJECTS = test/Fortran/validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz-test.$(OBJEXT)\nvalidate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_OBJECTS = $(am_validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_OBJECTS = test/Fortran/validate_real_single_eigenvalues_2stage_default_kernel_toeplitz-test.$(OBJEXT)\nvalidate_real_single_eigenvalues_2stage_default_kernel_toeplitz_OBJECTS = $(am_validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(test_program_ldadd)\nvalidate_real_single_eigenvalues_2stage_default_kernel_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am_validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_OBJECTS = $(am_validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_1stage_analytic_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_real_single_eigenvectors_1stage_analytic_OBJECTS = test/Fortran/validate_real_single_eigenvectors_1stage_analytic-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_1stage_analytic_OBJECTS = $(am_validate_real_single_eigenvectors_1stage_analytic_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_1stage_analytic_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(test_program_ldadd)\nvalidate_real_single_eigenvectors_1stage_analytic_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_1stage_analytic_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_1stage_analytic_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am_validate_real_single_eigenvectors_1stage_analytic_all_layouts_OBJECTS = test/Fortran/validate_real_single_eigenvectors_1stage_analytic_all_layouts-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_1stage_analytic_all_layouts_OBJECTS = $(am_validate_real_single_eigenvectors_1stage_analytic_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_1stage_analytic_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvectors_1stage_analytic_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_1stage_analytic_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_real_single_eigenvectors_1stage_gpu_random_OBJECTS = test/Fortran/validate_real_single_eigenvectors_1stage_gpu_random-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_1stage_gpu_random_OBJECTS = $(am_validate_real_single_eigenvectors_1stage_gpu_random_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvectors_1stage_gpu_random_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvectors_1stage_gpu_random_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_1stage_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_1stage_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_single_eigenvectors_1stage_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_real_single_eigenvectors_1stage_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_1stage_gpu_random_all_layouts_OBJECTS = $(am_validate_real_single_eigenvectors_1stage_gpu_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_1stage_gpu_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvectors_1stage_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_1stage_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_1stage_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_real_single_eigenvectors_1stage_gpu_toeplitz_OBJECTS = test/Fortran/validate_real_single_eigenvectors_1stage_gpu_toeplitz-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_1stage_gpu_toeplitz_OBJECTS = $(am_validate_real_single_eigenvectors_1stage_gpu_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvectors_1stage_gpu_toeplitz_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvectors_1stage_gpu_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_1stage_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_1stage_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_real_single_eigenvectors_1stage_random_OBJECTS = test/Fortran/validate_real_single_eigenvectors_1stage_random-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_1stage_random_OBJECTS =  \\\n\t$(am_validate_real_single_eigenvectors_1stage_random_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_1stage_random_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(test_program_ldadd)\nvalidate_real_single_eigenvectors_1stage_random_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_1stage_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_1stage_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am_validate_real_single_eigenvectors_1stage_random_all_layouts_OBJECTS = test/Fortran/validate_real_single_eigenvectors_1stage_random_all_layouts-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_1stage_random_all_layouts_OBJECTS = $(am_validate_real_single_eigenvectors_1stage_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_1stage_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvectors_1stage_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_1stage_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_1stage_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_real_single_eigenvectors_1stage_toeplitz_OBJECTS = test/Fortran/validate_real_single_eigenvectors_1stage_toeplitz-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_1stage_toeplitz_OBJECTS = $(am_validate_real_single_eigenvectors_1stage_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_1stage_toeplitz_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(test_program_ldadd)\nvalidate_real_single_eigenvectors_1stage_toeplitz_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_1stage_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_1stage_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am_validate_real_single_eigenvectors_1stage_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_single_eigenvectors_1stage_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_1stage_toeplitz_all_layouts_OBJECTS = $(am_validate_real_single_eigenvectors_1stage_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_1stage_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvectors_1stage_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_1stage_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_2stage_all_kernels_analytic_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_real_single_eigenvectors_2stage_all_kernels_analytic_OBJECTS = test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_analytic-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_2stage_all_kernels_analytic_OBJECTS = $(am_validate_real_single_eigenvectors_2stage_all_kernels_analytic_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_analytic_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(test_program_ldadd)\nvalidate_real_single_eigenvectors_2stage_all_kernels_analytic_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_2stage_all_kernels_analytic_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am_validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_OBJECTS = test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_OBJECTS = $(am_validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_OBJECTS = test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_gpu_random-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_2stage_all_kernels_gpu_random_OBJECTS = $(am_validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvectors_2stage_all_kernels_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_OBJECTS = $(am_validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_OBJECTS = test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_OBJECTS = $(am_validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_2stage_all_kernels_qr_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_real_single_eigenvectors_2stage_all_kernels_qr_random_OBJECTS = test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_qr_random-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_2stage_all_kernels_qr_random_OBJECTS = $(am_validate_real_single_eigenvectors_2stage_all_kernels_qr_random_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_qr_random_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(test_program_ldadd)\nvalidate_real_single_eigenvectors_2stage_all_kernels_qr_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_2stage_all_kernels_qr_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am_validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_OBJECTS = test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_OBJECTS = $(am_validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_2stage_all_kernels_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_real_single_eigenvectors_2stage_all_kernels_random_OBJECTS = test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_random-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_2stage_all_kernels_random_OBJECTS = $(am_validate_real_single_eigenvectors_2stage_all_kernels_random_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_random_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(test_program_ldadd)\nvalidate_real_single_eigenvectors_2stage_all_kernels_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_2stage_all_kernels_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am_validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_OBJECTS = test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_OBJECTS = $(am_validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_OBJECTS = test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_toeplitz-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_2stage_all_kernels_toeplitz_OBJECTS = $(am_validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(test_program_ldadd)\nvalidate_real_single_eigenvectors_2stage_all_kernels_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am_validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_OBJECTS = $(am_validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_2stage_default_kernel_analytic_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_real_single_eigenvectors_2stage_default_kernel_analytic_OBJECTS = test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_analytic-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_2stage_default_kernel_analytic_OBJECTS = $(am_validate_real_single_eigenvectors_2stage_default_kernel_analytic_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_analytic_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(test_program_ldadd)\nvalidate_real_single_eigenvectors_2stage_default_kernel_analytic_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_2stage_default_kernel_analytic_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am_validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_OBJECTS = test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_OBJECTS = $(am_validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS = test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS = $(am_validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_OBJECTS = $(am_validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_OBJECTS = test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_OBJECTS = $(am_validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_2stage_default_kernel_qr_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_real_single_eigenvectors_2stage_default_kernel_qr_random_OBJECTS = test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_qr_random-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_2stage_default_kernel_qr_random_OBJECTS = $(am_validate_real_single_eigenvectors_2stage_default_kernel_qr_random_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_qr_random_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(test_program_ldadd)\nvalidate_real_single_eigenvectors_2stage_default_kernel_qr_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_2stage_default_kernel_qr_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am_validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_OBJECTS = test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_OBJECTS = $(am_validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_2stage_default_kernel_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_real_single_eigenvectors_2stage_default_kernel_random_OBJECTS = test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_random-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_2stage_default_kernel_random_OBJECTS = $(am_validate_real_single_eigenvectors_2stage_default_kernel_random_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_random_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(test_program_ldadd)\nvalidate_real_single_eigenvectors_2stage_default_kernel_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_2stage_default_kernel_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am_validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_OBJECTS = test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_OBJECTS = $(am_validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_OBJECTS = test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_toeplitz-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_2stage_default_kernel_toeplitz_OBJECTS = $(am_validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(test_program_ldadd)\nvalidate_real_single_eigenvectors_2stage_default_kernel_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am_validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_OBJECTS = $(am_validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_generalized_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_real_single_generalized_1stage_gpu_random_OBJECTS = test/Fortran/validate_real_single_generalized_1stage_gpu_random-test.$(OBJEXT)\nvalidate_real_single_generalized_1stage_gpu_random_OBJECTS = $(am_validate_real_single_generalized_1stage_gpu_random_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_generalized_1stage_gpu_random_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_generalized_1stage_gpu_random_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_single_generalized_1stage_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_generalized_1stage_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_single_generalized_1stage_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_real_single_generalized_1stage_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_real_single_generalized_1stage_gpu_random_all_layouts_OBJECTS = $(am_validate_real_single_generalized_1stage_gpu_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_generalized_1stage_gpu_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_generalized_1stage_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_generalized_1stage_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_generalized_1stage_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_real_single_generalized_1stage_random_OBJECTS = test/Fortran/validate_real_single_generalized_1stage_random-test.$(OBJEXT)\nvalidate_real_single_generalized_1stage_random_OBJECTS =  \\\n\t$(am_validate_real_single_generalized_1stage_random_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_generalized_1stage_random_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(test_program_ldadd)\nvalidate_real_single_generalized_1stage_random_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_real_single_generalized_1stage_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_generalized_1stage_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am_validate_real_single_generalized_1stage_random_all_layouts_OBJECTS = test/Fortran/validate_real_single_generalized_1stage_random_all_layouts-test.$(OBJEXT)\nvalidate_real_single_generalized_1stage_random_all_layouts_OBJECTS = $(am_validate_real_single_generalized_1stage_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_generalized_1stage_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_generalized_1stage_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_generalized_1stage_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_generalized_decomp_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_real_single_generalized_decomp_1stage_gpu_random_OBJECTS = test/Fortran/validate_real_single_generalized_decomp_1stage_gpu_random-test.$(OBJEXT)\nvalidate_real_single_generalized_decomp_1stage_gpu_random_OBJECTS = $(am_validate_real_single_generalized_decomp_1stage_gpu_random_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_generalized_decomp_1stage_gpu_random_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_generalized_decomp_1stage_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_generalized_decomp_1stage_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_OBJECTS = $(am_validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_generalized_decomp_1stage_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_real_single_generalized_decomp_1stage_random_OBJECTS = test/Fortran/validate_real_single_generalized_decomp_1stage_random-test.$(OBJEXT)\nvalidate_real_single_generalized_decomp_1stage_random_OBJECTS = $(am_validate_real_single_generalized_decomp_1stage_random_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_generalized_decomp_1stage_random_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(test_program_ldadd)\nvalidate_real_single_generalized_decomp_1stage_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_generalized_decomp_1stage_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_generalized_decomp_1stage_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am_validate_real_single_generalized_decomp_1stage_random_all_layouts_OBJECTS = test/Fortran/validate_real_single_generalized_decomp_1stage_random_all_layouts-test.$(OBJEXT)\nvalidate_real_single_generalized_decomp_1stage_random_all_layouts_OBJECTS = $(am_validate_real_single_generalized_decomp_1stage_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_generalized_decomp_1stage_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_generalized_decomp_1stage_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_generalized_decomp_1stage_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_hermitian_multiply_1stage_gpu_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_real_single_hermitian_multiply_1stage_gpu_random_OBJECTS = test/Fortran/validate_real_single_hermitian_multiply_1stage_gpu_random-test.$(OBJEXT)\nvalidate_real_single_hermitian_multiply_1stage_gpu_random_OBJECTS = $(am_validate_real_single_hermitian_multiply_1stage_gpu_random_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_hermitian_multiply_1stage_gpu_random_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_hermitian_multiply_1stage_gpu_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_hermitian_multiply_1stage_gpu_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_OBJECTS = test/Fortran/validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts-test.$(OBJEXT)\nvalidate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_OBJECTS = $(am_validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_hermitian_multiply_1stage_random_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_real_single_hermitian_multiply_1stage_random_OBJECTS = test/Fortran/validate_real_single_hermitian_multiply_1stage_random-test.$(OBJEXT)\nvalidate_real_single_hermitian_multiply_1stage_random_OBJECTS = $(am_validate_real_single_hermitian_multiply_1stage_random_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_hermitian_multiply_1stage_random_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(test_program_ldadd)\nvalidate_real_single_hermitian_multiply_1stage_random_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_hermitian_multiply_1stage_random_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_hermitian_multiply_1stage_random_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am_validate_real_single_hermitian_multiply_1stage_random_all_layouts_OBJECTS = test/Fortran/validate_real_single_hermitian_multiply_1stage_random_all_layouts-test.$(OBJEXT)\nvalidate_real_single_hermitian_multiply_1stage_random_all_layouts_OBJECTS = $(am_validate_real_single_hermitian_multiply_1stage_random_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_hermitian_multiply_1stage_random_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_hermitian_multiply_1stage_random_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_hermitian_multiply_1stage_random_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@am_validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_OBJECTS = test/Fortran/validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz-test.$(OBJEXT)\nvalidate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_OBJECTS = $(am_validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@am_validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_OBJECTS = $(am_validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_solve_tridiagonal_1stage_toeplitz_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_real_single_solve_tridiagonal_1stage_toeplitz_OBJECTS = test/Fortran/validate_real_single_solve_tridiagonal_1stage_toeplitz-test.$(OBJEXT)\nvalidate_real_single_solve_tridiagonal_1stage_toeplitz_OBJECTS = $(am_validate_real_single_solve_tridiagonal_1stage_toeplitz_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_solve_tridiagonal_1stage_toeplitz_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(test_program_ldadd)\nvalidate_real_single_solve_tridiagonal_1stage_toeplitz_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_solve_tridiagonal_1stage_toeplitz_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_SOURCES_DIST =  \\\n\ttest/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@am_validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_OBJECTS = test/Fortran/validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts-test.$(OBJEXT)\nvalidate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_OBJECTS = $(am_validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_DEPENDENCIES = $(test_program_ldadd)\nvalidate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_LINK =  \\\n\t$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_single_complex_2stage_banded@SUFFIX@_SOURCES_DIST =  \\\n\ttest/Fortran/elpa2/single_complex_2stage_banded.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@am_validate_single_complex_2stage_banded@SUFFIX@_OBJECTS = test/Fortran/elpa2/validate_single_complex_2stage_banded@SUFFIX@-single_complex_2stage_banded.$(OBJEXT)\nvalidate_single_complex_2stage_banded@SUFFIX@_OBJECTS =  \\\n\t$(am_validate_single_complex_2stage_banded@SUFFIX@_OBJECTS)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_single_complex_2stage_banded@SUFFIX@_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@\t$(test_program_ldadd)\nvalidate_single_complex_2stage_banded@SUFFIX@_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_single_complex_2stage_banded@SUFFIX@_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam__validate_single_real_2stage_banded@SUFFIX@_SOURCES_DIST =  \\\n\ttest/Fortran/elpa2/single_real_2stage_banded.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@am_validate_single_real_2stage_banded@SUFFIX@_OBJECTS = test/Fortran/elpa2/validate_single_real_2stage_banded@SUFFIX@-single_real_2stage_banded.$(OBJEXT)\nvalidate_single_real_2stage_banded@SUFFIX@_OBJECTS =  \\\n\t$(am_validate_single_real_2stage_banded@SUFFIX@_OBJECTS)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_single_real_2stage_banded@SUFFIX@_DEPENDENCIES =  \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@\t$(test_program_ldadd)\nvalidate_single_real_2stage_banded@SUFFIX@_LINK = $(LIBTOOL) \\\n\t$(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n\t--mode=link $(FCLD) \\\n\t$(validate_single_real_2stage_banded@SUFFIX@_FCFLAGS) \\\n\t$(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\nam_validate_split_comm_real_double_OBJECTS = test/Fortran/validate_split_comm_real_double-test_split_comm.$(OBJEXT)\nvalidate_split_comm_real_double_OBJECTS =  \\\n\t$(am_validate_split_comm_real_double_OBJECTS)\nvalidate_split_comm_real_double_DEPENDENCIES = $(test_program_ldadd)\nvalidate_split_comm_real_double_LINK = $(LIBTOOL) $(AM_V_lt) --tag=FC \\\n\t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(FCLD) \\\n\t$(validate_split_comm_real_double_FCFLAGS) $(FCFLAGS) \\\n\t$(AM_LDFLAGS) $(LDFLAGS) -o $@\nAM_V_P = $(am__v_P_@AM_V@)\nam__v_P_ = $(am__v_P_@AM_DEFAULT_V@)\nam__v_P_0 = false\nam__v_P_1 = :\nAM_V_GEN = $(am__v_GEN_@AM_V@)\nam__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)\nam__v_GEN_0 = @echo \"  GEN     \" $@;\nam__v_GEN_1 = \nAM_V_at = $(am__v_at_@AM_V@)\nam__v_at_ = $(am__v_at_@AM_DEFAULT_V@)\nam__v_at_0 = @\nam__v_at_1 = \nDEFAULT_INCLUDES = -I.@am__isrc@\ndepcomp = $(SHELL) $(top_srcdir)/depcomp\nam__maybe_remake_depfiles = depfiles\nam__depfiles_remade = python/pyelpa/$(DEPDIR)/wrapper_la-wrapper.Plo \\\n\tsrc/$(DEPDIR)/elpa_c_interface.Plo \\\n\tsrc/$(DEPDIR)/elpa_index.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/complex_avx-avx2_1hv_double_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/complex_avx-avx2_1hv_single_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/complex_avx-avx2_2hv_double_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/complex_avx-avx2_2hv_single_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/complex_avx512_1hv_double_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/complex_avx512_1hv_single_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/complex_avx512_2hv_double_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/complex_avx512_2hv_single_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/complex_sse_1hv_double_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/complex_sse_1hv_single_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/complex_sse_2hv_double_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/complex_sse_2hv_single_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_avx-avx2_2hv_double_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_avx-avx2_2hv_single_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_avx-avx2_4hv_double_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_avx-avx2_4hv_single_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_avx-avx2_6hv_double_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_avx-avx2_6hv_single_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_avx512_2hv_double_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_avx512_2hv_single_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_avx512_4hv_double_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_avx512_4hv_single_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_avx512_6hv_double_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_avx512_6hv_single_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_neon_arch64_2hv_double_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_neon_arch64_2hv_single_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_neon_arch64_4hv_double_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_neon_arch64_4hv_single_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_neon_arch64_6hv_double_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_neon_arch64_6hv_single_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_sparc64_2hv_double_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_sparc64_4hv_double_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_sparc64_6hv_double_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_sse_2hv_double_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_sse_2hv_single_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_sse_4hv_double_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_sse_4hv_single_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_sse_6hv_double_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_sse_6hv_single_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_vsx_2hv_double_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_vsx_2hv_single_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_vsx_4hv_double_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_vsx_4hv_single_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_vsx_6hv_double_precision.Plo \\\n\tsrc/elpa2/kernels/$(DEPDIR)/real_vsx_6hv_single_precision.Plo \\\n\tsrc/elpa_generalized/$(DEPDIR)/cannon.Plo \\\n\tsrc/ftimings/$(DEPDIR)/highwater_mark.Plo \\\n\tsrc/ftimings/$(DEPDIR)/papi.Plo \\\n\tsrc/ftimings/$(DEPDIR)/resident_set_size.Plo \\\n\tsrc/ftimings/$(DEPDIR)/time.Plo \\\n\tsrc/ftimings/$(DEPDIR)/virtual_memory.Plo \\\n\tsrc/helpers/$(DEPDIR)/get_cpuid_set.Plo \\\n\tsrc/helpers/$(DEPDIR)/print_build_config.Plo \\\n\ttest/C/$(DEPDIR)/validate_autotune_c_version_complex_double-test_autotune.Po \\\n\ttest/C/$(DEPDIR)/validate_autotune_c_version_complex_single-test_autotune.Po \\\n\ttest/C/$(DEPDIR)/validate_autotune_c_version_real_double-test_autotune.Po \\\n\ttest/C/$(DEPDIR)/validate_autotune_c_version_real_single-test_autotune.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_1stage_gpu_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_1stage_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_complex_double_generalized_1stage_gpu_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_complex_double_generalized_1stage_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_complex_double_generalized_decomp_1stage_gpu_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_complex_double_generalized_decomp_1stage_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_1stage_gpu_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_1stage_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_complex_single_generalized_1stage_gpu_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_complex_single_generalized_1stage_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_complex_single_generalized_decomp_1stage_gpu_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_complex_single_generalized_decomp_1stage_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_1stage_gpu_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_1stage_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_2stage_default_kernel_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_real_double_generalized_1stage_gpu_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_real_double_generalized_1stage_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_real_double_generalized_decomp_1stage_gpu_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_real_double_generalized_decomp_1stage_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_1stage_gpu_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_1stage_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_2stage_default_kernel_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_real_single_generalized_1stage_gpu_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_real_single_generalized_1stage_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_real_single_generalized_decomp_1stage_gpu_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_c_version_real_single_generalized_decomp_1stage_random-test.Po \\\n\ttest/C/$(DEPDIR)/validate_multiple_objs_real_double_c_version-test_multiple_objs.Po \\\n\ttest/shared/$(DEPDIR)/test_redir.Plo\nam__mv = mv -f\nPPFCCOMPILE = $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n\t$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS)\nLTPPFCCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) \\\n\t$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \\\n\t$(AM_FCFLAGS) $(FCFLAGS)\nAM_V_PPFC = $(am__v_PPFC_@AM_V@)\nam__v_PPFC_ = $(am__v_PPFC_@AM_DEFAULT_V@)\nam__v_PPFC_0 = @echo \"  PPFC    \" $@;\nam__v_PPFC_1 = \nFCLINK = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) \\\n\t$(AM_LDFLAGS) $(LDFLAGS) -o $@\nAM_V_FCLD = $(am__v_FCLD_@AM_V@)\nam__v_FCLD_ = $(am__v_FCLD_@AM_DEFAULT_V@)\nam__v_FCLD_0 = @echo \"  FCLD    \" $@;\nam__v_FCLD_1 = \nCOMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n\t$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\nLTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \\\n\t$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \\\n\t$(AM_CFLAGS) $(CFLAGS)\nAM_V_CC = $(am__v_CC_@AM_V@)\nam__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)\nam__v_CC_0 = @echo \"  CC      \" $@;\nam__v_CC_1 = \nCCLD = $(CC)\nLINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\\n\t$(AM_LDFLAGS) $(LDFLAGS) -o $@\nAM_V_CCLD = $(am__v_CCLD_@AM_V@)\nam__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)\nam__v_CCLD_0 = @echo \"  CCLD    \" $@;\nam__v_CCLD_1 = \nFCCOMPILE = $(FC) $(AM_FCFLAGS) $(FCFLAGS)\nLTFCCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=compile $(FC) $(AM_FCFLAGS) $(FCFLAGS)\nAM_V_FC = $(am__v_FC_@AM_V@)\nam__v_FC_ = $(am__v_FC_@AM_DEFAULT_V@)\nam__v_FC_0 = @echo \"  FC      \" $@;\nam__v_FC_1 = \nCCASCOMPILE = $(CCAS) $(AM_CCASFLAGS) $(CCASFLAGS)\nAM_V_CCAS = $(am__v_CCAS_@AM_V@)\nam__v_CCAS_ = $(am__v_CCAS_@AM_DEFAULT_V@)\nam__v_CCAS_0 = @echo \"  CCAS    \" $@;\nam__v_CCAS_1 = \nSOURCES = $(libelpa@SUFFIX@_la_SOURCES) \\\n\t$(libelpa@SUFFIX@_private_la_SOURCES) \\\n\t$(libelpa@SUFFIX@_public_la_SOURCES) \\\n\t$(libelpatest@SUFFIX@_la_SOURCES) $(nodist_wrapper_la_SOURCES) \\\n\t$(elpa2_print_kernels@SUFFIX@_SOURCES) \\\n\t$(test_skewsymmetric_real_double_SOURCES) \\\n\t$(test_skewsymmetric_real_single_SOURCES) \\\n\t$(validate_autotune_c_version_complex_double_SOURCES) \\\n\t$(validate_autotune_c_version_complex_single_SOURCES) \\\n\t$(validate_autotune_c_version_real_double_SOURCES) \\\n\t$(validate_autotune_c_version_real_single_SOURCES) \\\n\t$(validate_autotune_complex_double_SOURCES) \\\n\t$(validate_autotune_complex_single_SOURCES) \\\n\t$(validate_autotune_real_double_SOURCES) \\\n\t$(validate_autotune_real_single_SOURCES) \\\n\t$(validate_c_version_complex_double_eigenvectors_1stage_gpu_random_SOURCES) \\\n\t$(validate_c_version_complex_double_eigenvectors_1stage_random_SOURCES) \\\n\t$(validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_SOURCES) \\\n\t$(validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_SOURCES) \\\n\t$(validate_c_version_complex_double_generalized_1stage_gpu_random_SOURCES) \\\n\t$(validate_c_version_complex_double_generalized_1stage_random_SOURCES) \\\n\t$(validate_c_version_complex_double_generalized_decomp_1stage_gpu_random_SOURCES) \\\n\t$(validate_c_version_complex_double_generalized_decomp_1stage_random_SOURCES) \\\n\t$(validate_c_version_complex_single_eigenvectors_1stage_gpu_random_SOURCES) \\\n\t$(validate_c_version_complex_single_eigenvectors_1stage_random_SOURCES) \\\n\t$(validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_SOURCES) \\\n\t$(validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_SOURCES) \\\n\t$(validate_c_version_complex_single_generalized_1stage_gpu_random_SOURCES) \\\n\t$(validate_c_version_complex_single_generalized_1stage_random_SOURCES) \\\n\t$(validate_c_version_complex_single_generalized_decomp_1stage_gpu_random_SOURCES) \\\n\t$(validate_c_version_complex_single_generalized_decomp_1stage_random_SOURCES) \\\n\t$(validate_c_version_real_double_eigenvectors_1stage_gpu_random_SOURCES) \\\n\t$(validate_c_version_real_double_eigenvectors_1stage_random_SOURCES) \\\n\t$(validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_SOURCES) \\\n\t$(validate_c_version_real_double_eigenvectors_2stage_default_kernel_random_SOURCES) \\\n\t$(validate_c_version_real_double_generalized_1stage_gpu_random_SOURCES) \\\n\t$(validate_c_version_real_double_generalized_1stage_random_SOURCES) \\\n\t$(validate_c_version_real_double_generalized_decomp_1stage_gpu_random_SOURCES) \\\n\t$(validate_c_version_real_double_generalized_decomp_1stage_random_SOURCES) \\\n\t$(validate_c_version_real_single_eigenvectors_1stage_gpu_random_SOURCES) \\\n\t$(validate_c_version_real_single_eigenvectors_1stage_random_SOURCES) \\\n\t$(validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_SOURCES) \\\n\t$(validate_c_version_real_single_eigenvectors_2stage_default_kernel_random_SOURCES) \\\n\t$(validate_c_version_real_single_generalized_1stage_gpu_random_SOURCES) \\\n\t$(validate_c_version_real_single_generalized_1stage_random_SOURCES) \\\n\t$(validate_c_version_real_single_generalized_decomp_1stage_gpu_random_SOURCES) \\\n\t$(validate_c_version_real_single_generalized_decomp_1stage_random_SOURCES) \\\n\t$(validate_complex_2stage_banded@SUFFIX@_SOURCES) \\\n\t$(validate_complex_double_cholesky_1stage_gpu_random_SOURCES) \\\n\t$(validate_complex_double_cholesky_1stage_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_complex_double_cholesky_1stage_gpu_toeplitz_SOURCES) \\\n\t$(validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_complex_double_cholesky_1stage_random_SOURCES) \\\n\t$(validate_complex_double_cholesky_1stage_random_all_layouts_SOURCES) \\\n\t$(validate_complex_double_cholesky_1stage_toeplitz_SOURCES) \\\n\t$(validate_complex_double_cholesky_1stage_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_complex_double_eigenvalues_1stage_gpu_toeplitz_SOURCES) \\\n\t$(validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_complex_double_eigenvalues_1stage_toeplitz_SOURCES) \\\n\t$(validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_SOURCES) \\\n\t$(validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_SOURCES) \\\n\t$(validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_1stage_analytic_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_1stage_analytic_all_layouts_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_1stage_gpu_random_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_1stage_gpu_toeplitz_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_1stage_random_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_1stage_random_all_layouts_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_1stage_toeplitz_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_2stage_all_kernels_analytic_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_2stage_all_kernels_random_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_2stage_default_kernel_analytic_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_2stage_default_kernel_random_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_scalapack_all_analytic_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_scalapack_part_analytic_SOURCES) \\\n\t$(validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_SOURCES) \\\n\t$(validate_complex_double_generalized_1stage_gpu_random_SOURCES) \\\n\t$(validate_complex_double_generalized_1stage_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_complex_double_generalized_1stage_random_SOURCES) \\\n\t$(validate_complex_double_generalized_1stage_random_all_layouts_SOURCES) \\\n\t$(validate_complex_double_generalized_decomp_1stage_gpu_random_SOURCES) \\\n\t$(validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_complex_double_generalized_decomp_1stage_random_SOURCES) \\\n\t$(validate_complex_double_generalized_decomp_1stage_random_all_layouts_SOURCES) \\\n\t$(validate_complex_double_hermitian_multiply_1stage_gpu_random_SOURCES) \\\n\t$(validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_complex_double_hermitian_multiply_1stage_random_SOURCES) \\\n\t$(validate_complex_double_hermitian_multiply_1stage_random_all_layouts_SOURCES) \\\n\t$(validate_complex_single_cholesky_1stage_gpu_random_SOURCES) \\\n\t$(validate_complex_single_cholesky_1stage_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_complex_single_cholesky_1stage_gpu_toeplitz_SOURCES) \\\n\t$(validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_complex_single_cholesky_1stage_random_SOURCES) \\\n\t$(validate_complex_single_cholesky_1stage_random_all_layouts_SOURCES) \\\n\t$(validate_complex_single_cholesky_1stage_toeplitz_SOURCES) \\\n\t$(validate_complex_single_cholesky_1stage_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_complex_single_eigenvalues_1stage_gpu_toeplitz_SOURCES) \\\n\t$(validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_complex_single_eigenvalues_1stage_toeplitz_SOURCES) \\\n\t$(validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_SOURCES) \\\n\t$(validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_SOURCES) \\\n\t$(validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_1stage_analytic_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_1stage_analytic_all_layouts_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_1stage_gpu_random_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_1stage_gpu_toeplitz_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_1stage_random_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_1stage_random_all_layouts_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_1stage_toeplitz_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_2stage_all_kernels_analytic_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_2stage_all_kernels_random_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_2stage_default_kernel_analytic_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_2stage_default_kernel_random_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_SOURCES) \\\n\t$(validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_complex_single_generalized_1stage_gpu_random_SOURCES) \\\n\t$(validate_complex_single_generalized_1stage_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_complex_single_generalized_1stage_random_SOURCES) \\\n\t$(validate_complex_single_generalized_1stage_random_all_layouts_SOURCES) \\\n\t$(validate_complex_single_generalized_decomp_1stage_gpu_random_SOURCES) \\\n\t$(validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_complex_single_generalized_decomp_1stage_random_SOURCES) \\\n\t$(validate_complex_single_generalized_decomp_1stage_random_all_layouts_SOURCES) \\\n\t$(validate_complex_single_hermitian_multiply_1stage_gpu_random_SOURCES) \\\n\t$(validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_complex_single_hermitian_multiply_1stage_random_SOURCES) \\\n\t$(validate_complex_single_hermitian_multiply_1stage_random_all_layouts_SOURCES) \\\n\t$(validate_double_instance@SUFFIX@_SOURCES) \\\n\t$(validate_multiple_objs_real_double_SOURCES) \\\n\t$(validate_multiple_objs_real_double_c_version_SOURCES) \\\n\t$(validate_real_2stage_banded@SUFFIX@_SOURCES) \\\n\t$(validate_real_double_cholesky_1stage_gpu_random_SOURCES) \\\n\t$(validate_real_double_cholesky_1stage_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_real_double_cholesky_1stage_gpu_random_split_comm_myself_SOURCES) \\\n\t$(validate_real_double_cholesky_1stage_gpu_toeplitz_SOURCES) \\\n\t$(validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_double_cholesky_1stage_random_SOURCES) \\\n\t$(validate_real_double_cholesky_1stage_random_all_layouts_SOURCES) \\\n\t$(validate_real_double_cholesky_1stage_random_split_comm_myself_SOURCES) \\\n\t$(validate_real_double_cholesky_1stage_toeplitz_SOURCES) \\\n\t$(validate_real_double_cholesky_1stage_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvalues_1stage_frank_SOURCES) \\\n\t$(validate_real_double_eigenvalues_1stage_frank_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvalues_1stage_gpu_frank_SOURCES) \\\n\t$(validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvalues_1stage_gpu_toeplitz_SOURCES) \\\n\t$(validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvalues_1stage_toeplitz_SOURCES) \\\n\t$(validate_real_double_eigenvalues_1stage_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvalues_2stage_default_kernel_frank_SOURCES) \\\n\t$(validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_SOURCES) \\\n\t$(validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_SOURCES) \\\n\t$(validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_SOURCES) \\\n\t$(validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_1stage_analytic_SOURCES) \\\n\t$(validate_real_double_eigenvectors_1stage_analytic_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_1stage_frank_SOURCES) \\\n\t$(validate_real_double_eigenvectors_1stage_frank_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_1stage_gpu_frank_SOURCES) \\\n\t$(validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_1stage_gpu_random_SOURCES) \\\n\t$(validate_real_double_eigenvectors_1stage_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_SOURCES) \\\n\t$(validate_real_double_eigenvectors_1stage_gpu_toeplitz_SOURCES) \\\n\t$(validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_1stage_random_SOURCES) \\\n\t$(validate_real_double_eigenvectors_1stage_random_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_1stage_random_split_comm_myself_SOURCES) \\\n\t$(validate_real_double_eigenvectors_1stage_toeplitz_SOURCES) \\\n\t$(validate_real_double_eigenvectors_1stage_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_analytic_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_frank_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_qr_random_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_random_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_analytic_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_frank_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_qr_random_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_random_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_SOURCES) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_scalapack_all_analytic_SOURCES) \\\n\t$(validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_SOURCES) \\\n\t$(validate_real_double_eigenvectors_scalapack_part_analytic_SOURCES) \\\n\t$(validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_SOURCES) \\\n\t$(validate_real_double_generalized_1stage_gpu_random_SOURCES) \\\n\t$(validate_real_double_generalized_1stage_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_real_double_generalized_1stage_random_SOURCES) \\\n\t$(validate_real_double_generalized_1stage_random_all_layouts_SOURCES) \\\n\t$(validate_real_double_generalized_decomp_1stage_gpu_random_SOURCES) \\\n\t$(validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_real_double_generalized_decomp_1stage_random_SOURCES) \\\n\t$(validate_real_double_generalized_decomp_1stage_random_all_layouts_SOURCES) \\\n\t$(validate_real_double_hermitian_multiply_1stage_frank_SOURCES) \\\n\t$(validate_real_double_hermitian_multiply_1stage_frank_all_layouts_SOURCES) \\\n\t$(validate_real_double_hermitian_multiply_1stage_gpu_frank_SOURCES) \\\n\t$(validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_SOURCES) \\\n\t$(validate_real_double_hermitian_multiply_1stage_gpu_random_SOURCES) \\\n\t$(validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_real_double_hermitian_multiply_1stage_random_SOURCES) \\\n\t$(validate_real_double_hermitian_multiply_1stage_random_all_layouts_SOURCES) \\\n\t$(validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_SOURCES) \\\n\t$(validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_double_solve_tridiagonal_1stage_toeplitz_SOURCES) \\\n\t$(validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_single_cholesky_1stage_gpu_random_SOURCES) \\\n\t$(validate_real_single_cholesky_1stage_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_real_single_cholesky_1stage_gpu_toeplitz_SOURCES) \\\n\t$(validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_single_cholesky_1stage_random_SOURCES) \\\n\t$(validate_real_single_cholesky_1stage_random_all_layouts_SOURCES) \\\n\t$(validate_real_single_cholesky_1stage_toeplitz_SOURCES) \\\n\t$(validate_real_single_cholesky_1stage_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_single_eigenvalues_1stage_gpu_toeplitz_SOURCES) \\\n\t$(validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_single_eigenvalues_1stage_toeplitz_SOURCES) \\\n\t$(validate_real_single_eigenvalues_1stage_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_SOURCES) \\\n\t$(validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_SOURCES) \\\n\t$(validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_single_eigenvectors_1stage_analytic_SOURCES) \\\n\t$(validate_real_single_eigenvectors_1stage_analytic_all_layouts_SOURCES) \\\n\t$(validate_real_single_eigenvectors_1stage_gpu_random_SOURCES) \\\n\t$(validate_real_single_eigenvectors_1stage_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_real_single_eigenvectors_1stage_gpu_toeplitz_SOURCES) \\\n\t$(validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_single_eigenvectors_1stage_random_SOURCES) \\\n\t$(validate_real_single_eigenvectors_1stage_random_all_layouts_SOURCES) \\\n\t$(validate_real_single_eigenvectors_1stage_toeplitz_SOURCES) \\\n\t$(validate_real_single_eigenvectors_1stage_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_single_eigenvectors_2stage_all_kernels_analytic_SOURCES) \\\n\t$(validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_SOURCES) \\\n\t$(validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_SOURCES) \\\n\t$(validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_SOURCES) \\\n\t$(validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_single_eigenvectors_2stage_all_kernels_qr_random_SOURCES) \\\n\t$(validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_SOURCES) \\\n\t$(validate_real_single_eigenvectors_2stage_all_kernels_random_SOURCES) \\\n\t$(validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_SOURCES) \\\n\t$(validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_SOURCES) \\\n\t$(validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_single_eigenvectors_2stage_default_kernel_analytic_SOURCES) \\\n\t$(validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_SOURCES) \\\n\t$(validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_SOURCES) \\\n\t$(validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_SOURCES) \\\n\t$(validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_single_eigenvectors_2stage_default_kernel_qr_random_SOURCES) \\\n\t$(validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_SOURCES) \\\n\t$(validate_real_single_eigenvectors_2stage_default_kernel_random_SOURCES) \\\n\t$(validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_SOURCES) \\\n\t$(validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_SOURCES) \\\n\t$(validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_single_generalized_1stage_gpu_random_SOURCES) \\\n\t$(validate_real_single_generalized_1stage_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_real_single_generalized_1stage_random_SOURCES) \\\n\t$(validate_real_single_generalized_1stage_random_all_layouts_SOURCES) \\\n\t$(validate_real_single_generalized_decomp_1stage_gpu_random_SOURCES) \\\n\t$(validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_real_single_generalized_decomp_1stage_random_SOURCES) \\\n\t$(validate_real_single_generalized_decomp_1stage_random_all_layouts_SOURCES) \\\n\t$(validate_real_single_hermitian_multiply_1stage_gpu_random_SOURCES) \\\n\t$(validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_SOURCES) \\\n\t$(validate_real_single_hermitian_multiply_1stage_random_SOURCES) \\\n\t$(validate_real_single_hermitian_multiply_1stage_random_all_layouts_SOURCES) \\\n\t$(validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_SOURCES) \\\n\t$(validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_real_single_solve_tridiagonal_1stage_toeplitz_SOURCES) \\\n\t$(validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_SOURCES) \\\n\t$(validate_single_complex_2stage_banded@SUFFIX@_SOURCES) \\\n\t$(validate_single_real_2stage_banded@SUFFIX@_SOURCES) \\\n\t$(validate_split_comm_real_double_SOURCES)\nDIST_SOURCES = $(libelpa@SUFFIX@_la_SOURCES) \\\n\t$(am__libelpa@SUFFIX@_private_la_SOURCES_DIST) \\\n\t$(libelpa@SUFFIX@_public_la_SOURCES) \\\n\t$(am__libelpatest@SUFFIX@_la_SOURCES_DIST) \\\n\t$(elpa2_print_kernels@SUFFIX@_SOURCES) \\\n\t$(test_skewsymmetric_real_double_SOURCES) \\\n\t$(am__test_skewsymmetric_real_single_SOURCES_DIST) \\\n\t$(am__validate_autotune_c_version_complex_double_SOURCES_DIST) \\\n\t$(am__validate_autotune_c_version_complex_single_SOURCES_DIST) \\\n\t$(am__validate_autotune_c_version_real_double_SOURCES_DIST) \\\n\t$(am__validate_autotune_c_version_real_single_SOURCES_DIST) \\\n\t$(am__validate_autotune_complex_double_SOURCES_DIST) \\\n\t$(am__validate_autotune_complex_single_SOURCES_DIST) \\\n\t$(am__validate_autotune_real_double_SOURCES_DIST) \\\n\t$(am__validate_autotune_real_single_SOURCES_DIST) \\\n\t$(am__validate_c_version_complex_double_eigenvectors_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_complex_double_eigenvectors_1stage_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_complex_double_generalized_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_complex_double_generalized_1stage_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_complex_double_generalized_decomp_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_complex_double_generalized_decomp_1stage_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_complex_single_eigenvectors_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_complex_single_eigenvectors_1stage_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_complex_single_generalized_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_complex_single_generalized_1stage_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_complex_single_generalized_decomp_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_complex_single_generalized_decomp_1stage_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_real_double_eigenvectors_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_real_double_eigenvectors_1stage_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_real_double_eigenvectors_2stage_default_kernel_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_real_double_generalized_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_real_double_generalized_1stage_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_real_double_generalized_decomp_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_real_double_generalized_decomp_1stage_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_real_single_eigenvectors_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_real_single_eigenvectors_1stage_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_real_single_eigenvectors_2stage_default_kernel_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_real_single_generalized_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_real_single_generalized_1stage_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_real_single_generalized_decomp_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_c_version_real_single_generalized_decomp_1stage_random_SOURCES_DIST) \\\n\t$(validate_complex_2stage_banded@SUFFIX@_SOURCES) \\\n\t$(am__validate_complex_double_cholesky_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_complex_double_cholesky_1stage_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_double_cholesky_1stage_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(validate_complex_double_cholesky_1stage_random_SOURCES) \\\n\t$(am__validate_complex_double_cholesky_1stage_random_all_layouts_SOURCES_DIST) \\\n\t$(validate_complex_double_cholesky_1stage_toeplitz_SOURCES) \\\n\t$(am__validate_complex_double_cholesky_1stage_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_double_eigenvalues_1stage_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(validate_complex_double_eigenvalues_1stage_toeplitz_SOURCES) \\\n\t$(am__validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_SOURCES) \\\n\t$(am__validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(validate_complex_double_eigenvectors_1stage_analytic_SOURCES) \\\n\t$(am__validate_complex_double_eigenvectors_1stage_analytic_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_double_eigenvectors_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_double_eigenvectors_1stage_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(validate_complex_double_eigenvectors_1stage_random_SOURCES) \\\n\t$(am__validate_complex_double_eigenvectors_1stage_random_all_layouts_SOURCES_DIST) \\\n\t$(validate_complex_double_eigenvectors_1stage_toeplitz_SOURCES) \\\n\t$(am__validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(validate_complex_double_eigenvectors_2stage_all_kernels_analytic_SOURCES) \\\n\t$(am__validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(validate_complex_double_eigenvectors_2stage_all_kernels_random_SOURCES) \\\n\t$(am__validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_SOURCES_DIST) \\\n\t$(validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_SOURCES) \\\n\t$(am__validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(validate_complex_double_eigenvectors_2stage_default_kernel_analytic_SOURCES) \\\n\t$(am__validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(validate_complex_double_eigenvectors_2stage_default_kernel_random_SOURCES) \\\n\t$(am__validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_SOURCES_DIST) \\\n\t$(validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_SOURCES) \\\n\t$(am__validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_double_eigenvectors_scalapack_all_analytic_SOURCES_DIST) \\\n\t$(am__validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_double_eigenvectors_scalapack_part_analytic_SOURCES_DIST) \\\n\t$(am__validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_double_generalized_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_complex_double_generalized_1stage_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(validate_complex_double_generalized_1stage_random_SOURCES) \\\n\t$(am__validate_complex_double_generalized_1stage_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_double_generalized_decomp_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(validate_complex_double_generalized_decomp_1stage_random_SOURCES) \\\n\t$(am__validate_complex_double_generalized_decomp_1stage_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_double_hermitian_multiply_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(validate_complex_double_hermitian_multiply_1stage_random_SOURCES) \\\n\t$(am__validate_complex_double_hermitian_multiply_1stage_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_cholesky_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_complex_single_cholesky_1stage_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_cholesky_1stage_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_cholesky_1stage_random_SOURCES_DIST) \\\n\t$(am__validate_complex_single_cholesky_1stage_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_cholesky_1stage_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_complex_single_cholesky_1stage_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvalues_1stage_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvalues_1stage_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_1stage_analytic_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_1stage_analytic_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_1stage_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_1stage_random_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_1stage_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_1stage_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_2stage_all_kernels_analytic_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_2stage_all_kernels_random_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_2stage_default_kernel_analytic_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_2stage_default_kernel_random_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_generalized_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_complex_single_generalized_1stage_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_generalized_1stage_random_SOURCES_DIST) \\\n\t$(am__validate_complex_single_generalized_1stage_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_generalized_decomp_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_generalized_decomp_1stage_random_SOURCES_DIST) \\\n\t$(am__validate_complex_single_generalized_decomp_1stage_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_hermitian_multiply_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_complex_single_hermitian_multiply_1stage_random_SOURCES_DIST) \\\n\t$(am__validate_complex_single_hermitian_multiply_1stage_random_all_layouts_SOURCES_DIST) \\\n\t$(validate_double_instance@SUFFIX@_SOURCES) \\\n\t$(am__validate_multiple_objs_real_double_SOURCES_DIST) \\\n\t$(am__validate_multiple_objs_real_double_c_version_SOURCES_DIST) \\\n\t$(validate_real_2stage_banded@SUFFIX@_SOURCES) \\\n\t$(am__validate_real_double_cholesky_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_real_double_cholesky_1stage_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_double_cholesky_1stage_gpu_random_split_comm_myself_SOURCES_DIST) \\\n\t$(am__validate_real_double_cholesky_1stage_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(validate_real_double_cholesky_1stage_random_SOURCES) \\\n\t$(am__validate_real_double_cholesky_1stage_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_double_cholesky_1stage_random_split_comm_myself_SOURCES_DIST) \\\n\t$(validate_real_double_cholesky_1stage_toeplitz_SOURCES) \\\n\t$(am__validate_real_double_cholesky_1stage_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(validate_real_double_eigenvalues_1stage_frank_SOURCES) \\\n\t$(am__validate_real_double_eigenvalues_1stage_frank_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvalues_1stage_gpu_frank_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvalues_1stage_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(validate_real_double_eigenvalues_1stage_toeplitz_SOURCES) \\\n\t$(am__validate_real_double_eigenvalues_1stage_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(validate_real_double_eigenvalues_2stage_default_kernel_frank_SOURCES) \\\n\t$(am__validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_SOURCES) \\\n\t$(am__validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(validate_real_double_eigenvectors_1stage_analytic_SOURCES) \\\n\t$(am__validate_real_double_eigenvectors_1stage_analytic_all_layouts_SOURCES_DIST) \\\n\t$(validate_real_double_eigenvectors_1stage_frank_SOURCES) \\\n\t$(am__validate_real_double_eigenvectors_1stage_frank_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_1stage_gpu_frank_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_1stage_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_1stage_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(validate_real_double_eigenvectors_1stage_random_SOURCES) \\\n\t$(am__validate_real_double_eigenvectors_1stage_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_1stage_random_split_comm_myself_SOURCES_DIST) \\\n\t$(validate_real_double_eigenvectors_1stage_toeplitz_SOURCES) \\\n\t$(am__validate_real_double_eigenvectors_1stage_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_analytic_SOURCES) \\\n\t$(am__validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_SOURCES_DIST) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_frank_SOURCES) \\\n\t$(am__validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_qr_random_SOURCES) \\\n\t$(am__validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_SOURCES_DIST) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_random_SOURCES) \\\n\t$(am__validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_SOURCES_DIST) \\\n\t$(validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_SOURCES) \\\n\t$(am__validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_analytic_SOURCES) \\\n\t$(am__validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_SOURCES_DIST) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_frank_SOURCES) \\\n\t$(am__validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_qr_random_SOURCES) \\\n\t$(am__validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_SOURCES_DIST) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_random_SOURCES) \\\n\t$(am__validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_SOURCES_DIST) \\\n\t$(validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_SOURCES) \\\n\t$(am__validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_scalapack_all_analytic_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_scalapack_part_analytic_SOURCES_DIST) \\\n\t$(am__validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_double_generalized_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_real_double_generalized_1stage_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(validate_real_double_generalized_1stage_random_SOURCES) \\\n\t$(am__validate_real_double_generalized_1stage_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_double_generalized_decomp_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(validate_real_double_generalized_decomp_1stage_random_SOURCES) \\\n\t$(am__validate_real_double_generalized_decomp_1stage_random_all_layouts_SOURCES_DIST) \\\n\t$(validate_real_double_hermitian_multiply_1stage_frank_SOURCES) \\\n\t$(am__validate_real_double_hermitian_multiply_1stage_frank_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_double_hermitian_multiply_1stage_gpu_frank_SOURCES_DIST) \\\n\t$(am__validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_double_hermitian_multiply_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(validate_real_double_hermitian_multiply_1stage_random_SOURCES) \\\n\t$(am__validate_real_double_hermitian_multiply_1stage_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(validate_real_double_solve_tridiagonal_1stage_toeplitz_SOURCES) \\\n\t$(am__validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_cholesky_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_real_single_cholesky_1stage_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_cholesky_1stage_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_cholesky_1stage_random_SOURCES_DIST) \\\n\t$(am__validate_real_single_cholesky_1stage_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_cholesky_1stage_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_real_single_cholesky_1stage_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvalues_1stage_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvalues_1stage_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvalues_1stage_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_1stage_analytic_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_1stage_analytic_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_1stage_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_1stage_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_1stage_random_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_1stage_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_1stage_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_1stage_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_2stage_all_kernels_analytic_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_2stage_all_kernels_qr_random_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_2stage_all_kernels_random_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_2stage_default_kernel_analytic_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_2stage_default_kernel_qr_random_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_2stage_default_kernel_random_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_generalized_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_real_single_generalized_1stage_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_generalized_1stage_random_SOURCES_DIST) \\\n\t$(am__validate_real_single_generalized_1stage_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_generalized_decomp_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_generalized_decomp_1stage_random_SOURCES_DIST) \\\n\t$(am__validate_real_single_generalized_decomp_1stage_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_hermitian_multiply_1stage_gpu_random_SOURCES_DIST) \\\n\t$(am__validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_hermitian_multiply_1stage_random_SOURCES_DIST) \\\n\t$(am__validate_real_single_hermitian_multiply_1stage_random_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_real_single_solve_tridiagonal_1stage_toeplitz_SOURCES_DIST) \\\n\t$(am__validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_SOURCES_DIST) \\\n\t$(am__validate_single_complex_2stage_banded@SUFFIX@_SOURCES_DIST) \\\n\t$(am__validate_single_real_2stage_banded@SUFFIX@_SOURCES_DIST) \\\n\t$(validate_split_comm_real_double_SOURCES)\nam__can_run_installinfo = \\\n  case $$AM_UPDATE_INFO_DIR in \\\n    n|no|NO) false;; \\\n    *) (install-info --version) >/dev/null 2>&1;; \\\n  esac\nam__pyelpa_PYTHON_DIST = python/pyelpa/__init__.py \\\n\tpython/pyelpa/distributedmatrix.py\nam__py_compile = PYTHON=$(PYTHON) $(SHELL) $(py_compile)\nam__pep3147_tweak = \\\n  sed -e 's|\\.py$$||' -e 's|[^/]*$$|&.*.pyc\\n&.*.pyo|'\npy_compile = $(top_srcdir)/py-compile\nman1dir = $(mandir)/man1\nman3dir = $(mandir)/man3\nNROFF = nroff\nMANS = $(dist_man_MANS)\nDATA = $(dist_doc_DATA) $(pkgconfig_DATA)\nHEADERS = $(nobase_elpa_include_HEADERS) \\\n\t$(nobase_nodist_elpa_include_HEADERS)\nam__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \\\n\t$(LISP)config.h.in\n# Read a list of newline-separated strings from the standard input,\n# and print each of them once, without duplicates.  Input order is\n# *not* preserved.\nam__uniquify_input = $(AWK) '\\\n  BEGIN { nonempty = 0; } \\\n  { items[$$0] = 1; nonempty = 1; } \\\n  END { if (nonempty) { for (i in items) print i; }; } \\\n'\n# Make sure the list of sources is unique.  This is necessary because,\n# e.g., the same source file might be shared among _SOURCES variables\n# for different programs/libraries.\nam__define_uniq_tagged_files = \\\n  list='$(am__tagged_files)'; \\\n  unique=`for i in $$list; do \\\n    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n  done | $(am__uniquify_input)`\nETAGS = etags\nCTAGS = ctags\nCSCOPE = cscope\nAM_RECURSIVE_TARGETS = cscope check recheck\nam__tty_colors_dummy = \\\n  mgn= red= grn= lgn= blu= brg= std=; \\\n  am__color_tests=no\nam__tty_colors = { \\\n  $(am__tty_colors_dummy); \\\n  if test \"X$(AM_COLOR_TESTS)\" = Xno; then \\\n    am__color_tests=no; \\\n  elif test \"X$(AM_COLOR_TESTS)\" = Xalways; then \\\n    am__color_tests=yes; \\\n  elif test \"X$$TERM\" != Xdumb && { test -t 1; } 2>/dev/null; then \\\n    am__color_tests=yes; \\\n  fi; \\\n  if test $$am__color_tests = yes; then \\\n    red='\u001b[0;31m'; \\\n    grn='\u001b[0;32m'; \\\n    lgn='\u001b[1;32m'; \\\n    blu='\u001b[1;34m'; \\\n    mgn='\u001b[0;35m'; \\\n    brg='\u001b[1m'; \\\n    std='\u001b[m'; \\\n  fi; \\\n}\nam__recheck_rx = ^[ \t]*:recheck:[ \t]*\nam__global_test_result_rx = ^[ \t]*:global-test-result:[ \t]*\nam__copy_in_global_log_rx = ^[ \t]*:copy-in-global-log:[ \t]*\n# A command that, given a newline-separated list of test names on the\n# standard input, print the name of the tests that are to be re-run\n# upon \"make recheck\".\nam__list_recheck_tests = $(AWK) '{ \\\n  recheck = 1; \\\n  while ((rc = (getline line < ($$0 \".trs\"))) != 0) \\\n    { \\\n      if (rc < 0) \\\n        { \\\n          if ((getline line2 < ($$0 \".log\")) < 0) \\\n\t    recheck = 0; \\\n          break; \\\n        } \\\n      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \\\n        { \\\n          recheck = 0; \\\n          break; \\\n        } \\\n      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \\\n        { \\\n          break; \\\n        } \\\n    }; \\\n  if (recheck) \\\n    print $$0; \\\n  close ($$0 \".trs\"); \\\n  close ($$0 \".log\"); \\\n}'\n# A command that, given a newline-separated list of test names on the\n# standard input, create the global log from their .trs and .log files.\nam__create_global_log = $(AWK) ' \\\nfunction fatal(msg) \\\n{ \\\n  print \"fatal: making $@: \" msg | \"cat >&2\"; \\\n  exit 1; \\\n} \\\nfunction rst_section(header) \\\n{ \\\n  print header; \\\n  len = length(header); \\\n  for (i = 1; i <= len; i = i + 1) \\\n    printf \"=\"; \\\n  printf \"\\n\\n\"; \\\n} \\\n{ \\\n  copy_in_global_log = 1; \\\n  global_test_result = \"RUN\"; \\\n  while ((rc = (getline line < ($$0 \".trs\"))) != 0) \\\n    { \\\n      if (rc < 0) \\\n         fatal(\"failed to read from \" $$0 \".trs\"); \\\n      if (line ~ /$(am__global_test_result_rx)/) \\\n        { \\\n          sub(\"$(am__global_test_result_rx)\", \"\", line); \\\n          sub(\"[ \t]*$$\", \"\", line); \\\n          global_test_result = line; \\\n        } \\\n      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \\\n        copy_in_global_log = 0; \\\n    }; \\\n  if (copy_in_global_log) \\\n    { \\\n      rst_section(global_test_result \": \" $$0); \\\n      while ((rc = (getline line < ($$0 \".log\"))) != 0) \\\n      { \\\n        if (rc < 0) \\\n          fatal(\"failed to read from \" $$0 \".log\"); \\\n        print line; \\\n      }; \\\n      printf \"\\n\"; \\\n    }; \\\n  close ($$0 \".trs\"); \\\n  close ($$0 \".log\"); \\\n}'\n# Restructured Text title.\nam__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }\n# Solaris 10 'make', and several other traditional 'make' implementations,\n# pass \"-e\" to $(SHELL), and POSIX 2008 even requires this.  Work around it\n# by disabling -e (using the XSI extension \"set +e\") if it's set.\nam__sh_e_setup = case $$- in *e*) set +e;; esac\n# Default flags passed to test drivers.\nam__common_driver_flags = \\\n  --color-tests \"$$am__color_tests\" \\\n  --enable-hard-errors \"$$am__enable_hard_errors\" \\\n  --expect-failure \"$$am__expect_failure\"\n# To be inserted before the command running the test.  Creates the\n# directory for the log if needed.  Stores in $dir the directory\n# containing $f, in $tst the test, in $log the log.  Executes the\n# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and\n# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that\n# will run the test scripts (or their associated LOG_COMPILER, if\n# thy have one).\nam__check_pre = \\\n$(am__sh_e_setup);\t\t\t\t\t\\\n$(am__vpath_adj_setup) $(am__vpath_adj)\t\t\t\\\n$(am__tty_colors);\t\t\t\t\t\\\nsrcdir=$(srcdir); export srcdir;\t\t\t\\\ncase \"$@\" in\t\t\t\t\t\t\\\n  */*) am__odir=`echo \"./$@\" | sed 's|/[^/]*$$||'`;;\t\\\n    *) am__odir=.;; \t\t\t\t\t\\\nesac;\t\t\t\t\t\t\t\\\ntest \"x$$am__odir\" = x\".\" || test -d \"$$am__odir\" \t\\\n  || $(MKDIR_P) \"$$am__odir\" || exit $$?;\t\t\\\nif test -f \"./$$f\"; then dir=./;\t\t\t\\\nelif test -f \"$$f\"; then dir=;\t\t\t\t\\\nelse dir=\"$(srcdir)/\"; fi;\t\t\t\t\\\ntst=$$dir$$f; log='$@'; \t\t\t\t\\\nif test -n '$(DISABLE_HARD_ERRORS)'; then\t\t\\\n  am__enable_hard_errors=no; \t\t\t\t\\\nelse\t\t\t\t\t\t\t\\\n  am__enable_hard_errors=yes; \t\t\t\t\\\nfi; \t\t\t\t\t\t\t\\\ncase \" $(XFAIL_TESTS) \" in\t\t\t\t\\\n  *[\\ \\\t]$$f[\\ \\\t]* | *[\\ \\\t]$$dir$$f[\\ \\\t]*) \\\n    am__expect_failure=yes;;\t\t\t\t\\\n  *)\t\t\t\t\t\t\t\\\n    am__expect_failure=no;;\t\t\t\t\\\nesac; \t\t\t\t\t\t\t\\\n$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)\n# A shell command to get the names of the tests scripts with any registered\n# extension removed (i.e., equivalently, the names of the test logs, with\n# the '.log' extension removed).  The result is saved in the shell variable\n# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,\n# we cannot use something simpler, involving e.g., \"$(TEST_LOGS:.log=)\",\n# since that might cause problem with VPATH rewrites for suffix-less tests.\n# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.\nam__set_TESTS_bases = \\\n  bases='$(TEST_LOGS)'; \\\n  bases=`for i in $$bases; do echo $$i; done | sed 's/\\.log$$//'`; \\\n  bases=`echo $$bases`\nRECHECK_LOGS = $(TEST_LOGS)\nTEST_SUITE_LOG = test-suite.log\nTEST_EXTENSIONS = @EXEEXT@ .test\nLOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver\nLOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)\nam__set_b = \\\n  case '$@' in \\\n    */*) \\\n      case '$*' in \\\n        */*) b='$*';; \\\n          *) b=`echo '$@' | sed 's/\\.log$$//'`; \\\n       esac;; \\\n    *) \\\n      b='$*';; \\\n  esac\nam__test_logs1 = $(TESTS:=.log)\nam__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)\nTEST_LOGS = $(am__test_logs2:.test.log=.log)\nTEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver\nTEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \\\n\t$(TEST_LOG_FLAGS)\nam__DIST_COMMON = $(dist_man_MANS) $(srcdir)/Doxyfile.in \\\n\t$(srcdir)/Makefile.in $(srcdir)/config.h.in \\\n\t$(srcdir)/doxygen.am $(srcdir)/elpa.pc.in \\\n\t$(srcdir)/generated_headers.am $(srcdir)/test_programs.am \\\n\t$(top_srcdir)/elpa/elpa_build_config.h.in \\\n\t$(top_srcdir)/elpa/elpa_constants.h.in \\\n\t$(top_srcdir)/elpa/elpa_version.h.in ar-lib compile \\\n\tconfig.guess config.sub depcomp install-sh ltmain.sh missing \\\n\tpy-compile test-driver\nDISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\ndistdir = $(PACKAGE)-$(VERSION)\ntop_distdir = $(distdir)\nam__remove_distdir = \\\n  if test -d \"$(distdir)\"; then \\\n    find \"$(distdir)\" -type d ! -perm -200 -exec chmod u+w {} ';' \\\n      && rm -rf \"$(distdir)\" \\\n      || { sleep 5 && rm -rf \"$(distdir)\"; }; \\\n  else :; fi\nam__post_remove_distdir = $(am__remove_distdir)\nDIST_ARCHIVES = $(distdir).tar.gz\nGZIP_ENV = --best\nDIST_TARGETS = dist-gzip\ndistuninstallcheck_listfiles = find . -type f -print\nam__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\\n  | sed 's|^\\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'\ndistcleancheck_listfiles = find . -type f -print\nACLOCAL = @ACLOCAL@\nACTUAL_FC = @ACTUAL_FC@\nAMTAR = @AMTAR@\nAM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@\nAR = @AR@\nAUTOCONF = @AUTOCONF@\nAUTOHEADER = @AUTOHEADER@\nAUTOMAKE = @AUTOMAKE@\nAWK = @AWK@\nCC = @CC@\nCCAS = @CCAS@\nCCASDEPMODE = @CCASDEPMODE@\nCCASFLAGS = @CCASFLAGS@\nCCDEPMODE = @CCDEPMODE@\nCFLAGS = @CFLAGS@\nCPP = @CPP@\nCPPFLAGS = @CPPFLAGS@\nCPUEXT_FLAGS = @CPUEXT_FLAGS@\nCURRENT_API_VERSION = @CURRENT_API_VERSION@\nCURRENT_AUTOTUNE_VERSION = @CURRENT_AUTOTUNE_VERSION@\nCYGPATH_W = @CYGPATH_W@\nDEFS = @DEFS@\nDEPDIR = @DEPDIR@\nDLLTOOL = @DLLTOOL@\nDOXYGEN_OUTPUT_DIR = @DOXYGEN_OUTPUT_DIR@\nDOXYGEN_PAPER_SIZE = @DOXYGEN_PAPER_SIZE@\nDSYMUTIL = @DSYMUTIL@\nDUMPBIN = @DUMPBIN@\nDX_CONFIG = @DX_CONFIG@\nDX_DOCDIR = @DX_DOCDIR@\nDX_DOT = @DX_DOT@\nDX_DOXYGEN = @DX_DOXYGEN@\nDX_DVIPS = @DX_DVIPS@\nDX_EGREP = @DX_EGREP@\nDX_ENV = @DX_ENV@\nDX_FLAG_chi = @DX_FLAG_chi@\nDX_FLAG_chm = @DX_FLAG_chm@\nDX_FLAG_doc = @DX_FLAG_doc@\nDX_FLAG_dot = @DX_FLAG_dot@\nDX_FLAG_html = @DX_FLAG_html@\nDX_FLAG_man = @DX_FLAG_man@\nDX_FLAG_pdf = @DX_FLAG_pdf@\nDX_FLAG_ps = @DX_FLAG_ps@\nDX_FLAG_rtf = @DX_FLAG_rtf@\nDX_FLAG_xml = @DX_FLAG_xml@\nDX_HHC = @DX_HHC@\nDX_LATEX = @DX_LATEX@\nDX_MAKEINDEX = @DX_MAKEINDEX@\nDX_PDFLATEX = @DX_PDFLATEX@\nDX_PERL = @DX_PERL@\nDX_PROJECT = @DX_PROJECT@\nECHO_C = @ECHO_C@\nECHO_N = @ECHO_N@\nECHO_T = @ECHO_T@\nEGREP = @EGREP@\nELPA_2STAGE_COMPLEX_AVX2_BLOCK1_COMPILED = @ELPA_2STAGE_COMPLEX_AVX2_BLOCK1_COMPILED@\nELPA_2STAGE_COMPLEX_AVX2_BLOCK2_COMPILED = @ELPA_2STAGE_COMPLEX_AVX2_BLOCK2_COMPILED@\nELPA_2STAGE_COMPLEX_AVX512_BLOCK1_COMPILED = @ELPA_2STAGE_COMPLEX_AVX512_BLOCK1_COMPILED@\nELPA_2STAGE_COMPLEX_AVX512_BLOCK2_COMPILED = @ELPA_2STAGE_COMPLEX_AVX512_BLOCK2_COMPILED@\nELPA_2STAGE_COMPLEX_AVX_BLOCK1_COMPILED = @ELPA_2STAGE_COMPLEX_AVX_BLOCK1_COMPILED@\nELPA_2STAGE_COMPLEX_AVX_BLOCK2_COMPILED = @ELPA_2STAGE_COMPLEX_AVX_BLOCK2_COMPILED@\nELPA_2STAGE_COMPLEX_BGP_COMPILED = @ELPA_2STAGE_COMPLEX_BGP_COMPILED@\nELPA_2STAGE_COMPLEX_BGQ_COMPILED = @ELPA_2STAGE_COMPLEX_BGQ_COMPILED@\nELPA_2STAGE_COMPLEX_DEFAULT = @ELPA_2STAGE_COMPLEX_DEFAULT@\nELPA_2STAGE_COMPLEX_GENERIC_COMPILED = @ELPA_2STAGE_COMPLEX_GENERIC_COMPILED@\nELPA_2STAGE_COMPLEX_GENERIC_SIMPLE_COMPILED = @ELPA_2STAGE_COMPLEX_GENERIC_SIMPLE_COMPILED@\nELPA_2STAGE_COMPLEX_GPU_COMPILED = @ELPA_2STAGE_COMPLEX_GPU_COMPILED@\nELPA_2STAGE_COMPLEX_SSE_ASSEMBLY_COMPILED = @ELPA_2STAGE_COMPLEX_SSE_ASSEMBLY_COMPILED@\nELPA_2STAGE_COMPLEX_SSE_BLOCK1_COMPILED = @ELPA_2STAGE_COMPLEX_SSE_BLOCK1_COMPILED@\nELPA_2STAGE_COMPLEX_SSE_BLOCK2_COMPILED = @ELPA_2STAGE_COMPLEX_SSE_BLOCK2_COMPILED@\nELPA_2STAGE_REAL_AVX2_BLOCK2_COMPILED = @ELPA_2STAGE_REAL_AVX2_BLOCK2_COMPILED@\nELPA_2STAGE_REAL_AVX2_BLOCK4_COMPILED = @ELPA_2STAGE_REAL_AVX2_BLOCK4_COMPILED@\nELPA_2STAGE_REAL_AVX2_BLOCK6_COMPILED = @ELPA_2STAGE_REAL_AVX2_BLOCK6_COMPILED@\nELPA_2STAGE_REAL_AVX512_BLOCK2_COMPILED = @ELPA_2STAGE_REAL_AVX512_BLOCK2_COMPILED@\nELPA_2STAGE_REAL_AVX512_BLOCK4_COMPILED = @ELPA_2STAGE_REAL_AVX512_BLOCK4_COMPILED@\nELPA_2STAGE_REAL_AVX512_BLOCK6_COMPILED = @ELPA_2STAGE_REAL_AVX512_BLOCK6_COMPILED@\nELPA_2STAGE_REAL_AVX_BLOCK2_COMPILED = @ELPA_2STAGE_REAL_AVX_BLOCK2_COMPILED@\nELPA_2STAGE_REAL_AVX_BLOCK4_COMPILED = @ELPA_2STAGE_REAL_AVX_BLOCK4_COMPILED@\nELPA_2STAGE_REAL_AVX_BLOCK6_COMPILED = @ELPA_2STAGE_REAL_AVX_BLOCK6_COMPILED@\nELPA_2STAGE_REAL_BGP_COMPILED = @ELPA_2STAGE_REAL_BGP_COMPILED@\nELPA_2STAGE_REAL_BGQ_COMPILED = @ELPA_2STAGE_REAL_BGQ_COMPILED@\nELPA_2STAGE_REAL_DEFAULT = @ELPA_2STAGE_REAL_DEFAULT@\nELPA_2STAGE_REAL_GENERIC_COMPILED = @ELPA_2STAGE_REAL_GENERIC_COMPILED@\nELPA_2STAGE_REAL_GENERIC_SIMPLE_BLOCK4_COMPILED = @ELPA_2STAGE_REAL_GENERIC_SIMPLE_BLOCK4_COMPILED@\nELPA_2STAGE_REAL_GENERIC_SIMPLE_BLOCK6_COMPILED = @ELPA_2STAGE_REAL_GENERIC_SIMPLE_BLOCK6_COMPILED@\nELPA_2STAGE_REAL_GENERIC_SIMPLE_COMPILED = @ELPA_2STAGE_REAL_GENERIC_SIMPLE_COMPILED@\nELPA_2STAGE_REAL_GPU_COMPILED = @ELPA_2STAGE_REAL_GPU_COMPILED@\nELPA_2STAGE_REAL_NEON_ARCH64_BLOCK2_COMPILED = @ELPA_2STAGE_REAL_NEON_ARCH64_BLOCK2_COMPILED@\nELPA_2STAGE_REAL_NEON_ARCH64_BLOCK4_COMPILED = @ELPA_2STAGE_REAL_NEON_ARCH64_BLOCK4_COMPILED@\nELPA_2STAGE_REAL_NEON_ARCH64_BLOCK6_COMPILED = @ELPA_2STAGE_REAL_NEON_ARCH64_BLOCK6_COMPILED@\nELPA_2STAGE_REAL_SPARC64_BLOCK2_COMPILED = @ELPA_2STAGE_REAL_SPARC64_BLOCK2_COMPILED@\nELPA_2STAGE_REAL_SPARC64_BLOCK4_COMPILED = @ELPA_2STAGE_REAL_SPARC64_BLOCK4_COMPILED@\nELPA_2STAGE_REAL_SPARC64_BLOCK6_COMPILED = @ELPA_2STAGE_REAL_SPARC64_BLOCK6_COMPILED@\nELPA_2STAGE_REAL_SSE_ASSEMBLY_COMPILED = @ELPA_2STAGE_REAL_SSE_ASSEMBLY_COMPILED@\nELPA_2STAGE_REAL_SSE_BLOCK2_COMPILED = @ELPA_2STAGE_REAL_SSE_BLOCK2_COMPILED@\nELPA_2STAGE_REAL_SSE_BLOCK4_COMPILED = @ELPA_2STAGE_REAL_SSE_BLOCK4_COMPILED@\nELPA_2STAGE_REAL_SSE_BLOCK6_COMPILED = @ELPA_2STAGE_REAL_SSE_BLOCK6_COMPILED@\nELPA_2STAGE_REAL_VSX_BLOCK2_COMPILED = @ELPA_2STAGE_REAL_VSX_BLOCK2_COMPILED@\nELPA_2STAGE_REAL_VSX_BLOCK4_COMPILED = @ELPA_2STAGE_REAL_VSX_BLOCK4_COMPILED@\nELPA_2STAGE_REAL_VSX_BLOCK6_COMPILED = @ELPA_2STAGE_REAL_VSX_BLOCK6_COMPILED@\nELPA_SO_VERSION = @ELPA_SO_VERSION@\nEXEEXT = @EXEEXT@\nFC = @FC@\nFCFLAGS = @FCFLAGS@\nFCFLAGS_F90 = @FCFLAGS_F90@\nFCLIBS = @FCLIBS@\nFC_MODINC = @FC_MODINC@\nFC_MODOUT = @FC_MODOUT@\nFGREP = @FGREP@\nGREP = @GREP@\nINSTALL = @INSTALL@\nINSTALL_DATA = @INSTALL_DATA@\nINSTALL_PROGRAM = @INSTALL_PROGRAM@\nINSTALL_SCRIPT = @INSTALL_SCRIPT@\nINSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\nLD = @LD@\nLDFLAGS = @LDFLAGS@\nLIBOBJS = @LIBOBJS@\nLIBS = @LIBS@\nLIBTOOL = @LIBTOOL@\nLIPO = @LIPO@\nLN_S = @LN_S@\nLTLIBOBJS = @LTLIBOBJS@\nLT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@\nMAKEINFO = @MAKEINFO@\nMANIFEST_TOOL = @MANIFEST_TOOL@\nMKDIR_P = @MKDIR_P@\nMPI_BINARY = @MPI_BINARY@\nNM = @NM@\nNMEDIT = @NMEDIT@\nNUMPY_INCLUDE = @NUMPY_INCLUDE@\nNVCC = @NVCC@\nNVCCFLAGS = @NVCCFLAGS@\nOBJDUMP = @OBJDUMP@\nOBJEXT = @OBJEXT@\nOPENMP_CFLAGS = @OPENMP_CFLAGS@\nOPENMP_FCFLAGS = @OPENMP_FCFLAGS@\nOPENMP_LDFLAGS = @OPENMP_LDFLAGS@\nOTOOL = @OTOOL@\nOTOOL64 = @OTOOL64@\nPACKAGE = @PACKAGE@\nPACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\nPACKAGE_NAME = @PACKAGE_NAME@\nPACKAGE_STRING = @PACKAGE_STRING@\nPACKAGE_TARNAME = @PACKAGE_TARNAME@\nPACKAGE_URL = @PACKAGE_URL@\nPACKAGE_VERSION = @PACKAGE_VERSION@\nPATH_SEPARATOR = @PATH_SEPARATOR@\nPKG_CONFIG_FILE = @PKG_CONFIG_FILE@\nPYTHON = @PYTHON@\nPYTHON_CONFIG = @PYTHON_CONFIG@\nPYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@\nPYTHON_INCLUDE = @PYTHON_INCLUDE@\nPYTHON_PLATFORM = @PYTHON_PLATFORM@\nPYTHON_PREFIX = @PYTHON_PREFIX@\nPYTHON_VERSION = @PYTHON_VERSION@\nRANLIB = @RANLIB@\nSCALAPACK_FCFLAGS = @SCALAPACK_FCFLAGS@\nSCALAPACK_LDFLAGS = @SCALAPACK_LDFLAGS@\nSED = @SED@\nSET_MAKE = @SET_MAKE@\nSHELL = @SHELL@\nSIMD_FLAGS = @SIMD_FLAGS@\nSTRIP = @STRIP@\nSUFFIX = @SUFFIX@\nVERSION = @VERSION@\nWITH_BLACS = @WITH_BLACS@\nWITH_MKL = @WITH_MKL@\nabs_builddir = @abs_builddir@\nabs_srcdir = @abs_srcdir@\nabs_top_builddir = @abs_top_builddir@\nabs_top_srcdir = @abs_top_srcdir@\nac_ct_AR = @ac_ct_AR@\nac_ct_CC = @ac_ct_CC@\nac_ct_DUMPBIN = @ac_ct_DUMPBIN@\nac_ct_FC = @ac_ct_FC@\nac_empty = @ac_empty@\nam__include = @am__include@\nam__leading_dot = @am__leading_dot@\nam__quote = @am__quote@\nam__tar = @am__tar@\nam__untar = @am__untar@\nbindir = @bindir@\nbuild = @build@\nbuild_alias = @build_alias@\nbuild_cpu = @build_cpu@\nbuild_os = @build_os@\nbuild_vendor = @build_vendor@\nbuilddir = @builddir@\ncython_found = @cython_found@\ndatadir = @datadir@\ndatarootdir = @datarootdir@\ndocdir = @docdir@\ndvidir = @dvidir@\nexec_prefix = @exec_prefix@\nhost = @host@\nhost_alias = @host_alias@\nhost_cpu = @host_cpu@\nhost_os = @host_os@\nhost_vendor = @host_vendor@\nhtmldir = @htmldir@\nifGNUmake = @ifGNUmake@\nincludedir = @includedir@\ninfodir = @infodir@\ninstall_sh = @install_sh@\nlibdir = @libdir@\nlibexecdir = @libexecdir@\nlocaledir = @localedir@\nlocalstatedir = @localstatedir@\nmandir = @mandir@\nmkdir_p = @mkdir_p@\nnvcc_found = @nvcc_found@\noldincludedir = @oldincludedir@\npdfdir = @pdfdir@\npkgpyexecdir = @pkgpyexecdir@\npkgpythondir = @pkgpythondir@\nprefix = @prefix@\nprogram_transform_name = @program_transform_name@\npsdir = @psdir@\npyexecdir = @pyexecdir@\npytest_found = @pytest_found@\npythondir = @pythondir@\nsbindir = @sbindir@\nsharedstatedir = @sharedstatedir@\nsrcdir = @srcdir@\nsysconfdir = @sysconfdir@\ntarget_alias = @target_alias@\ntop_build_prefix = @top_build_prefix@\ntop_builddir = @top_builddir@\ntop_srcdir = @top_srcdir@\nxxd_CHECK = @xxd_CHECK@\nACLOCAL_AMFLAGS = ${ACLOCAL_FLAGS} -I m4\nAM_FCFLAGS = $(SCALAPACK_FCFLAGS) $(FC_MODINC)modules\nAM_LDFLAGS = $(SCALAPACK_LDFLAGS)\nFCLD = @ACTUAL_FC@\n\n# libelpa\nlib_LTLIBRARIES = libelpa@SUFFIX@.la\nlibelpa@SUFFIX@_la_LINK = $(FCLINK) $(AM_LDFLAGS) -version-info $(ELPA_SO_VERSION)\nlibelpa@SUFFIX@_la_LIBADD = libelpa@SUFFIX@_public.la libelpa@SUFFIX@_private.la\nlibelpa@SUFFIX@_la_SOURCES = \n\n# parts with public interface\n\n# internal parts\n\n# library with shared sources for the test files\nnoinst_LTLIBRARIES = libelpa@SUFFIX@_public.la \\\n\tlibelpa@SUFFIX@_private.la libelpatest@SUFFIX@.la\nlibelpa@SUFFIX@_public_la_FCFLAGS = $(AM_FCFLAGS) $(FC_MODOUT)modules $(FC_MODINC)private_modules\nlibelpa@SUFFIX@_public_la_SOURCES = \\\n  src/elpa.F90 \\\n  src/elpa_api.F90 \\\n  src/elpa_constants.F90\n\nlibelpa@SUFFIX@_private_la_FCFLAGS = $(AM_FCFLAGS) $(FC_MODOUT)private_modules $(FC_MODINC)private_modules\nlibelpa@SUFFIX@_private_la_SOURCES = src/elpa_impl.F90 \\\n\tsrc/elpa_autotune_impl.F90 src/elpa_abstract_impl.F90 \\\n\tsrc/helpers/mod_precision.F90 \\\n\tsrc/helpers/mod_blas_interfaces.F90 \\\n\tsrc/helpers/mod_scalapack_interfaces.F90 \\\n\tsrc/helpers/mod_mpi.F90 src/helpers/mod_mpi_stubs.F90 \\\n\tsrc/helpers/mod_omp.F90 \\\n\tsrc/elpa_generated_fortran_interfaces.F90 \\\n\tsrc/elpa2/mod_redist_band.F90 \\\n\tsrc/elpa2/mod_pack_unpack_cpu.F90 \\\n\tsrc/elpa2/mod_compute_hh_trafo.F90 src/helpers/aligned_mem.F90 \\\n\tsrc/elpa1/elpa1_compute_private.F90 \\\n\tsrc/elpa1/elpa1_auxiliary.F90 \\\n\tsrc/elpa2/elpa2_determine_workload.F90 \\\n\tsrc/elpa2/elpa2_compute.F90 \\\n\tsrc/elpa2/kernels/mod_single_hh_trafo_real.F90 \\\n\tsrc/GPU/check_for_gpu.F90 src/GPU/mod_cuda.F90 \\\n\tsrc/elpa2/GPU/interface_c_kernel.F90 \\\n\tsrc/elpa2/mod_pack_unpack_gpu.F90 src/elpa2/qr/qr_utils.F90 \\\n\tsrc/elpa2/qr/elpa_qrkernels.F90 src/elpa2/qr/elpa_pdlarfb.F90 \\\n\tsrc/elpa2/qr/elpa_pdgeqrf.F90 src/elpa1/elpa1.F90 \\\n\tsrc/elpa2/elpa2.F90 src/elpa_generalized/cannon.c \\\n\tsrc/helpers/matrix_plot.F90 \\\n\tsrc/general/mod_elpa_skewsymmetric_blas.F90 src/elpa_index.c \\\n\tsrc/elpa_c_interface.c src/general/elpa_utilities.F90 \\\n\t$(am__append_1) $(am__append_2) $(am__append_3) \\\n\t$(am__append_5) $(am__append_6) $(am__append_7) \\\n\t$(am__append_8) $(am__append_9) $(am__append_10) \\\n\t$(am__append_11) $(am__append_12) $(am__append_13) \\\n\t$(am__append_14) $(am__append_15) $(am__append_16) \\\n\t$(am__append_17) $(am__append_18) $(am__append_19) \\\n\t$(am__append_20) $(am__append_21) $(am__append_22) \\\n\t$(am__append_23) $(am__append_24) $(am__append_25) \\\n\t$(am__append_26) $(am__append_27) $(am__append_28) \\\n\t$(am__append_29) $(am__append_30) $(am__append_31) \\\n\t$(am__append_32) $(am__append_33) $(am__append_34) \\\n\t$(am__append_35) $(am__append_36) $(am__append_37) \\\n\t$(am__append_38) $(am__append_39) $(am__append_40) \\\n\t$(am__append_41) $(am__append_42) $(am__append_43) \\\n\t$(am__append_44) $(am__append_45) $(am__append_46) \\\n\t$(am__append_47) $(am__append_48) $(am__append_49) \\\n\t$(am__append_50) $(am__append_51) $(am__append_52) \\\n\t$(am__append_53) $(am__append_54) $(am__append_55) \\\n\t$(am__append_56) $(am__append_57) $(am__append_58) \\\n\t$(am__append_59) $(am__append_60) $(am__append_61) \\\n\t$(am__append_62) $(am__append_63) $(am__append_64) \\\n\t$(am__append_65) $(am__append_66) $(am__append_67) \\\n\t$(am__append_68) $(am__append_69) $(am__append_70) \\\n\t$(am__append_71) $(am__append_72) $(am__append_73) \\\n\t$(am__append_74) $(am__append_75)\nEXTRA_libelpa@SUFFIX@_private_la_DEPENDENCIES =  \\\n\tsrc/elpa1/elpa_reduce_add_vectors.F90 \\\n\tsrc/elpa1/elpa_transpose_vectors.F90 \\\n\tsrc/elpa_api_math_template.F90 src/elpa_impl_math_template.F90 \\\n\tsrc/elpa_impl_generalized_transform_template.F90 \\\n\tsrc/elpa1/elpa1_compute_template.F90 \\\n\tsrc/elpa2/elpa2_compute_real_template.F90 \\\n\tsrc/elpa2/elpa2_compute_complex_template.F90 \\\n\tsrc/elpa1/elpa1_template.F90 src/elpa2/elpa2_template.F90 \\\n\tsrc/elpa2/qr/qr_utils_template.F90 \\\n\tsrc/elpa2/qr/elpa_pdlarfb_template.F90 \\\n\tsrc/elpa2/qr/elpa_pdgeqrf_template.F90 \\\n\tsrc/elpa2/elpa2_bandred_template.F90 \\\n\tsrc/elpa2/elpa2_symm_matrix_allreduce_real_template.F90 \\\n\tsrc/elpa2/elpa2_trans_ev_band_to_full_template.F90 \\\n\tsrc/elpa2/elpa2_tridiag_band_template.F90 \\\n\tsrc/elpa2/elpa2_trans_ev_tridi_to_band_template.F90 \\\n\tsrc/elpa2/elpa2_herm_matrix_allreduce_complex_template.F90 \\\n\tsrc/elpa2/kernels/real_template.F90 \\\n\tsrc/elpa2/kernels/complex_template.F90 \\\n\tsrc/elpa2/kernels/simple_template.F90 \\\n\tsrc/elpa2/kernels/simple_block4_template.F90 \\\n\tsrc/elpa2/kernels/simple_block6_template.F90 \\\n\tsrc/elpa2/pack_unpack_cpu.F90 src/elpa2/pack_unpack_gpu.F90 \\\n\tsrc/elpa2/compute_hh_trafo.F90 src/elpa2/redist_band.F90 \\\n\tsrc/general/sanity.F90 src/elpa1/elpa_cholesky_template.F90 \\\n\tsrc/elpa1/elpa_invert_trm.F90 src/elpa1/elpa_multiply_a_b.F90 \\\n\tsrc/elpa1/elpa_solve_tridi_impl_public.F90 \\\n\tsrc/general/elpa_ssr2_template.F90 \\\n\tsrc/general/elpa_ssmv_template.F90 \\\n\tsrc/general/precision_macros.h \\\n\tsrc/general/precision_typedefs.h \\\n\tsrc/general/precision_kinds.F90 $(am__append_4)\n\n# Assembly files\nLTCCASCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=compile $(CCAS) $(AM_CCASFLAGS) \\\n\t$(CCASFLAGS)\n\n\n#if OPTIONAL_C_ERROR_ARGUMENT\n#\n#elpa/elpa_generated.h: $(top_srcdir)/src/elpa_impl.F90 \\\n#                       $(top_srcdir)/src/elpa_impl_math_template.F90 \\\n#                       $(top_srcdir)/src/elpa_api.F90 | elpa\n#\t$(call extract_interface,!c_o>)\n#\n#else\n#elpa/elpa_generated.h: $(top_srcdir)/src/elpa_impl.F90 \\\n#                       $(top_srcdir)/src/elpa_impl_math_template.F90 \\\n#                       $(top_srcdir)/src/elpa_api.F90 | elpa\n#\t$(call extract_interface,!c_no>)\n#endif\ngenerated_headers = config-f90.h elpa/elpa_generated.h \\\n\ttest/shared/generated.h \\\n\tsrc/elpa_generated_fortran_interfaces.h \\\n\tsrc/elpa_generated_public_fortran_interfaces.h \\\n\tsrc/fortran_constants.F90\nBUILT_SOURCES = $(generated_headers)\n\n# install public headers and Fortran modules files in the include/ dir\nelpa_includedir = $(includedir)/elpa@SUFFIX@-@PACKAGE_VERSION@\nnobase_elpa_include_HEADERS = \\\n  $(wildcard modules/*) \\\n  src/helpers/lapack_interfaces.h \\\n  src/helpers/scalapack_interfaces.h \\\n  elpa/elpa_simd_constants.h \\\n  elpa/elpa.h \\\n  elpa/elpa_generic.h\n\nnobase_nodist_elpa_include_HEADERS = \\\n  elpa/elpa_version.h \\\n  elpa/elpa_constants.h \\\n  elpa/elpa_generated.h \\\n  elpa/elpa_generated_c_api.h\n\ndist_man_MANS = \\\n  man/elpa2_print_kernels.1 \\\n  man/elpa_init.3 \\\n  man/elpa_allocate.3 \\\n  man/elpa_set.3 \\\n  man/elpa_setup.3 \\\n  man/elpa_eigenvalues.3 \\\n  man/elpa_eigenvectors.3 \\\n  man/elpa_skew_eigenvalues.3 \\\n  man/elpa_skew_eigenvectors.3 \\\n  man/elpa_generalized_eigenvectors.3 \\\n  man/elpa_generalized_eigenvalues.3 \\\n  man/elpa_cholesky.3 \\\n  man/elpa_invert_triangular.3 \\\n  man/elpa_solve_tridiagonal.3 \\\n  man/elpa_hermitian_multiply.3 \\\n  man/elpa_deallocate.3 \\\n  man/elpa_load_settings.3 \\\n  man/elpa_store_settings.3 \\\n  man/elpa_print_settings.3 \\\n  man/elpa_autotune_save_state.3 \\\n  man/elpa_autotune_load_state.3 \\\n  man/elpa_autotune_print_state.3 \\\n  man/elpa_autotune_setup.3 \\\n  man/elpa_autotune_step.3 \\\n  man/elpa_autotune_set_best.3 \\\n  man/elpa_autotune_deallocate.3 \\\n  man/elpa_uninit.3\n\ndist_doc_DATA = README.md USERS_GUIDE.md USERS_GUIDE_DEPRECATED_LEGACY_API.md INSTALL.md CONTRIBUTING.md LICENSE Changelog COPYING/COPYING COPYING/gpl.txt COPYING/lgpl.txt\n\n# pkg-config stuff\npkgconfigdir = $(libdir)/pkgconfig\npkgconfig_DATA = @PKG_CONFIG_FILE@\ncheck_SCRIPTS = $(am__append_80) $(am__append_83) $(am__append_86) \\\n\t$(am__append_89) $(am__append_92) $(am__append_95) \\\n\t$(am__append_98) $(am__append_101) $(am__append_104) \\\n\t$(am__append_107) $(am__append_110) $(am__append_113) \\\n\t$(am__append_116) $(am__append_119) $(am__append_122) \\\n\t$(am__append_125) $(am__append_128) $(am__append_131) \\\n\t$(am__append_134) \\\n\tvalidate_complex_double_eigenvectors_1stage_analytic_default.sh \\\n\t$(am__append_139) \\\n\tvalidate_complex_double_eigenvectors_2stage_all_kernels_analytic_extended.sh \\\n\tvalidate_complex_double_eigenvectors_2stage_default_kernel_analytic_default.sh \\\n\t$(am__append_144) $(am__append_147) $(am__append_150) \\\n\t$(am__append_153) $(am__append_156) \\\n\tvalidate_real_double_eigenvectors_1stage_analytic_default.sh \\\n\t$(am__append_161) \\\n\tvalidate_real_double_eigenvectors_2stage_all_kernels_analytic_extended.sh \\\n\tvalidate_real_double_eigenvectors_2stage_default_kernel_analytic_default.sh \\\n\t$(am__append_166) $(am__append_169) $(am__append_172) \\\n\t$(am__append_175) $(am__append_178) $(am__append_181) \\\n\t$(am__append_184) $(am__append_187) $(am__append_190) \\\n\t$(am__append_193) $(am__append_196) $(am__append_199) \\\n\t$(am__append_202) \\\n\tvalidate_real_double_eigenvalues_1stage_frank_default.sh \\\n\t$(am__append_207) \\\n\tvalidate_real_double_eigenvalues_2stage_default_kernel_frank_default.sh \\\n\t$(am__append_212) \\\n\tvalidate_real_double_eigenvectors_1stage_frank_default.sh \\\n\t$(am__append_217) \\\n\tvalidate_real_double_eigenvectors_2stage_all_kernels_frank_extended.sh \\\n\tvalidate_real_double_eigenvectors_2stage_default_kernel_frank_default.sh \\\n\t$(am__append_222) \\\n\tvalidate_real_double_hermitian_multiply_1stage_frank_default.sh \\\n\t$(am__append_227) $(am__append_230) $(am__append_233) \\\n\t$(am__append_236) $(am__append_239) $(am__append_242) \\\n\t$(am__append_245) $(am__append_248) $(am__append_251) \\\n\t$(am__append_254) $(am__append_257) \\\n\tvalidate_complex_double_cholesky_1stage_random_default.sh \\\n\t$(am__append_262) \\\n\tvalidate_real_double_cholesky_1stage_random_default.sh \\\n\t$(am__append_267) $(am__append_270) $(am__append_273) \\\n\t$(am__append_276) $(am__append_279) $(am__append_282) \\\n\tvalidate_complex_double_eigenvectors_1stage_random_default.sh \\\n\t$(am__append_287) \\\n\tvalidate_complex_double_eigenvectors_2stage_all_kernels_random_extended.sh \\\n\tvalidate_complex_double_eigenvectors_2stage_default_kernel_random_default.sh \\\n\t$(am__append_292) \\\n\tvalidate_real_double_eigenvectors_1stage_random_default.sh \\\n\t$(am__append_297) \\\n\tvalidate_real_double_eigenvectors_2stage_all_kernels_random_extended.sh \\\n\tvalidate_real_double_eigenvectors_2stage_default_kernel_random_default.sh \\\n\t$(am__append_302) $(am__append_305) $(am__append_308) \\\n\t$(am__append_311) $(am__append_314) $(am__append_317) \\\n\t$(am__append_320) $(am__append_323) $(am__append_326) \\\n\t$(am__append_329) \\\n\tvalidate_complex_double_generalized_1stage_random_default.sh \\\n\t$(am__append_334) \\\n\tvalidate_real_double_generalized_1stage_random_default.sh \\\n\t$(am__append_339) $(am__append_342) $(am__append_345) \\\n\t$(am__append_348) $(am__append_351) \\\n\tvalidate_complex_double_generalized_decomp_1stage_random_default.sh \\\n\t$(am__append_356) \\\n\tvalidate_real_double_generalized_decomp_1stage_random_default.sh \\\n\t$(am__append_361) $(am__append_364) $(am__append_367) \\\n\t$(am__append_370) $(am__append_373) \\\n\tvalidate_complex_double_hermitian_multiply_1stage_random_default.sh \\\n\t$(am__append_378) \\\n\tvalidate_real_double_hermitian_multiply_1stage_random_default.sh \\\n\t$(am__append_383) $(am__append_386) $(am__append_389) \\\n\t$(am__append_392) $(am__append_395) \\\n\tvalidate_real_double_eigenvectors_2stage_all_kernels_qr_random_extended.sh \\\n\tvalidate_real_double_eigenvectors_2stage_default_kernel_qr_random_default.sh \\\n\t$(am__append_400) $(am__append_403) $(am__append_406) \\\n\t$(am__append_409) $(am__append_412) $(am__append_415) \\\n\t$(am__append_418) $(am__append_421) $(am__append_424) \\\n\t$(am__append_427) $(am__append_430) $(am__append_433) \\\n\t$(am__append_436) $(am__append_439) $(am__append_442) \\\n\t$(am__append_445) $(am__append_448) $(am__append_451) \\\n\t$(am__append_454) $(am__append_457) $(am__append_460) \\\n\t$(am__append_463) $(am__append_466) $(am__append_469) \\\n\t$(am__append_472) $(am__append_475) $(am__append_478) \\\n\t$(am__append_481) $(am__append_484) $(am__append_487) \\\n\t$(am__append_490) $(am__append_493) $(am__append_496) \\\n\t$(am__append_499) $(am__append_502) $(am__append_505) \\\n\t$(am__append_508) $(am__append_511) $(am__append_514) \\\n\t$(am__append_517) $(am__append_520) $(am__append_523) \\\n\t$(am__append_526) $(am__append_529) $(am__append_532) \\\n\t$(am__append_535) $(am__append_538) $(am__append_541) \\\n\t$(am__append_544) $(am__append_547) $(am__append_550) \\\n\t$(am__append_553) $(am__append_556) \\\n\tvalidate_complex_double_cholesky_1stage_toeplitz_default.sh \\\n\t$(am__append_561) \\\n\tvalidate_real_double_cholesky_1stage_toeplitz_default.sh \\\n\t$(am__append_566) $(am__append_569) $(am__append_572) \\\n\t$(am__append_575) $(am__append_578) \\\n\tvalidate_complex_double_eigenvalues_1stage_toeplitz_default.sh \\\n\t$(am__append_583) \\\n\tvalidate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_default.sh \\\n\t$(am__append_588) \\\n\tvalidate_real_double_eigenvalues_1stage_toeplitz_default.sh \\\n\t$(am__append_593) \\\n\tvalidate_real_double_eigenvalues_2stage_default_kernel_toeplitz_default.sh \\\n\t$(am__append_598) $(am__append_601) $(am__append_604) \\\n\t$(am__append_607) $(am__append_610) $(am__append_613) \\\n\t$(am__append_616) $(am__append_619) $(am__append_622) \\\n\tvalidate_complex_double_eigenvectors_1stage_toeplitz_default.sh \\\n\t$(am__append_627) \\\n\tvalidate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_extended.sh \\\n\tvalidate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_default.sh \\\n\t$(am__append_632) \\\n\tvalidate_real_double_eigenvectors_1stage_toeplitz_default.sh \\\n\t$(am__append_637) \\\n\tvalidate_real_double_eigenvectors_2stage_all_kernels_toeplitz_extended.sh \\\n\tvalidate_real_double_eigenvectors_2stage_default_kernel_toeplitz_default.sh \\\n\t$(am__append_642) $(am__append_645) $(am__append_648) \\\n\t$(am__append_651) $(am__append_654) $(am__append_657) \\\n\t$(am__append_660) $(am__append_663) $(am__append_666) \\\n\tvalidate_real_double_solve_tridiagonal_1stage_toeplitz_default.sh \\\n\t$(am__append_671) $(am__append_674) $(am__append_677) \\\n\t$(am__append_680) $(am__append_683) $(am__append_686) \\\n\t$(am__append_689) $(am__append_692) $(am__append_695) \\\n\t$(am__append_698) $(am__append_701) $(am__append_704) \\\n\t$(am__append_707) $(am__append_710) $(am__append_713) \\\n\t$(am__append_716) $(am__append_719) $(am__append_722) \\\n\t$(am__append_725) $(am__append_728) $(am__append_731) \\\n\t$(am__append_734) $(am__append_737) $(am__append_740) \\\n\t$(am__append_743) $(am__append_746) $(am__append_749) \\\n\t$(am__append_752) $(am__append_755) $(am__append_758) \\\n\t$(am__append_761) $(am__append_764) $(am__append_767) \\\n\t$(am__append_770) $(am__append_773) $(am__append_776) \\\n\t$(am__append_779) $(am__append_782) $(am__append_785) \\\n\t$(am__append_788) $(am__append_791) $(am__append_794) \\\n\t$(am__append_797) $(am__append_800) $(am__append_803) \\\n\t$(am__append_806) $(am__append_807) $(am__append_809) \\\n\t$(am__append_811) $(am__append_813) $(am__append_815) \\\n\t$(am__append_817) $(am__append_819) \\\n\ttest_skewsymmetric_real_double_extended.sh $(am__append_821) \\\n\t$(am__append_823) validate_split_comm_real_double_extended.sh \\\n\tvalidate_double_instance@SUFFIX@_default.sh \\\n\tvalidate_real_2stage_banded@SUFFIX@_default.sh \\\n\tvalidate_complex_2stage_banded@SUFFIX@_default.sh \\\n\t$(am__append_826) $(am__append_828) $(am__append_829)\ntest_program_ldadd = libelpatest@SUFFIX@.la libelpa@SUFFIX@.la\ntest_program_fcflags = $(AM_FCFLAGS) $(FC_MODOUT)test_modules $(FC_MODINC)test_modules $(FC_MODINC)modules $(FC_MODINC)private_modules\nlibelpatest@SUFFIX@_la_FCFLAGS = $(test_program_fcflags)\nlibelpatest@SUFFIX@_la_SOURCES =  \\\n\ttest/shared/tests_variable_definitions.F90 \\\n\ttest/shared/mod_tests_scalapack_interfaces.F90 \\\n\ttest/shared/mod_tests_blas_interfaces.F90 \\\n\ttest/shared/test_util.F90 \\\n\ttest/shared/test_read_input_parameters.F90 \\\n\ttest/shared/test_check_correctness.F90 \\\n\ttest/shared/test_setup_mpi.F90 \\\n\ttest/shared/test_blacs_infrastructure.F90 \\\n\ttest/shared/test_prepare_matrix.F90 \\\n\ttest/shared/test_analytic.F90 test/shared/test_output_type.F90 \\\n\t$(am__append_76) $(am__append_77)\nelpa2_print_kernels@SUFFIX@_SOURCES = src/elpa2/elpa2_print_kernels.F90\nelpa2_print_kernels@SUFFIX@_LDADD = libelpa@SUFFIX@.la\nelpa2_print_kernels@SUFFIX@_FCFLAGS = $(AM_FCFLAGS) $(FC_MODINC)modules\n@ENABLE_C_TESTS_TRUE@validate_c_version_complex_double_eigenvectors_1stage_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@validate_c_version_complex_double_eigenvectors_1stage_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@validate_c_version_complex_double_eigenvectors_1stage_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_CASE=\\\"validate_c_version_complex_double_eigenvectors_1stage_random\\\" \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_COMPLEX \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_DOUBLE \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_EIGENVECTORS \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_SOLVER_1STAGE \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_GPU=0 \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_MATRIX_RANDOM\n\n@ENABLE_C_TESTS_TRUE@validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_CASE=\\\"validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random\\\" \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_COMPLEX \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_DOUBLE \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_EIGENVECTORS \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_SOLVER_2STAGE \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_GPU=0 \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_MATRIX_RANDOM \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT\n\n@ENABLE_C_TESTS_TRUE@validate_c_version_real_double_eigenvectors_1stage_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@validate_c_version_real_double_eigenvectors_1stage_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@validate_c_version_real_double_eigenvectors_1stage_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_CASE=\\\"validate_c_version_real_double_eigenvectors_1stage_random\\\" \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_REAL \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_DOUBLE \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_EIGENVECTORS \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_SOLVER_1STAGE \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_GPU=0 \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_MATRIX_RANDOM\n\n@ENABLE_C_TESTS_TRUE@validate_c_version_real_double_eigenvectors_2stage_default_kernel_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@validate_c_version_real_double_eigenvectors_2stage_default_kernel_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@validate_c_version_real_double_eigenvectors_2stage_default_kernel_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_CASE=\\\"validate_c_version_real_double_eigenvectors_2stage_default_kernel_random\\\" \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_REAL \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_DOUBLE \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_EIGENVECTORS \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_SOLVER_2STAGE \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_GPU=0 \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_MATRIX_RANDOM \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT\n\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_c_version_complex_single_eigenvectors_1stage_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_c_version_complex_single_eigenvectors_1stage_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_c_version_complex_single_eigenvectors_1stage_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_CASE=\\\"validate_c_version_complex_single_eigenvectors_1stage_random\\\" \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_COMPLEX \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SINGLE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_EIGENVECTORS \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SOLVER_1STAGE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_GPU=0 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_MATRIX_RANDOM\n\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_CASE=\\\"validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random\\\" \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_COMPLEX \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SINGLE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_EIGENVECTORS \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SOLVER_2STAGE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_GPU=0 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_MATRIX_RANDOM \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT\n\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@validate_c_version_real_single_eigenvectors_1stage_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@validate_c_version_real_single_eigenvectors_1stage_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@validate_c_version_real_single_eigenvectors_1stage_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CASE=\\\"validate_c_version_real_single_eigenvectors_1stage_random\\\" \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_EIGENVECTORS \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SOLVER_1STAGE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GPU=0 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_MATRIX_RANDOM\n\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@validate_c_version_real_single_eigenvectors_2stage_default_kernel_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@validate_c_version_real_single_eigenvectors_2stage_default_kernel_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@validate_c_version_real_single_eigenvectors_2stage_default_kernel_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CASE=\\\"validate_c_version_real_single_eigenvectors_2stage_default_kernel_random\\\" \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_EIGENVECTORS \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SOLVER_2STAGE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GPU=0 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_MATRIX_RANDOM \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT\n\n@ENABLE_C_TESTS_TRUE@validate_c_version_complex_double_generalized_1stage_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@validate_c_version_complex_double_generalized_1stage_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@validate_c_version_complex_double_generalized_1stage_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_CASE=\\\"validate_c_version_complex_double_generalized_1stage_random\\\" \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_COMPLEX \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_DOUBLE \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_GENERALIZED_EIGENPROBLEM \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_SOLVER_1STAGE \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_GPU=0 \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_MATRIX_RANDOM\n\n@ENABLE_C_TESTS_TRUE@validate_c_version_real_double_generalized_1stage_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@validate_c_version_real_double_generalized_1stage_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@validate_c_version_real_double_generalized_1stage_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_CASE=\\\"validate_c_version_real_double_generalized_1stage_random\\\" \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_REAL \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_DOUBLE \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_GENERALIZED_EIGENPROBLEM \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_SOLVER_1STAGE \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_GPU=0 \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_MATRIX_RANDOM\n\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_c_version_complex_single_generalized_1stage_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_c_version_complex_single_generalized_1stage_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_c_version_complex_single_generalized_1stage_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_CASE=\\\"validate_c_version_complex_single_generalized_1stage_random\\\" \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_COMPLEX \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SINGLE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_GENERALIZED_EIGENPROBLEM \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SOLVER_1STAGE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_GPU=0 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_MATRIX_RANDOM\n\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@validate_c_version_real_single_generalized_1stage_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@validate_c_version_real_single_generalized_1stage_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@validate_c_version_real_single_generalized_1stage_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CASE=\\\"validate_c_version_real_single_generalized_1stage_random\\\" \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GENERALIZED_EIGENPROBLEM \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SOLVER_1STAGE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GPU=0 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_MATRIX_RANDOM\n\n@ENABLE_C_TESTS_TRUE@validate_c_version_complex_double_generalized_decomp_1stage_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@validate_c_version_complex_double_generalized_decomp_1stage_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@validate_c_version_complex_double_generalized_decomp_1stage_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_CASE=\\\"validate_c_version_complex_double_generalized_decomp_1stage_random\\\" \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_COMPLEX \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_DOUBLE \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_GENERALIZED_DECOMP_EIGENPROBLEM \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_SOLVER_1STAGE \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_GPU=0 \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_MATRIX_RANDOM\n\n@ENABLE_C_TESTS_TRUE@validate_c_version_real_double_generalized_decomp_1stage_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@validate_c_version_real_double_generalized_decomp_1stage_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@validate_c_version_real_double_generalized_decomp_1stage_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_CASE=\\\"validate_c_version_real_double_generalized_decomp_1stage_random\\\" \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_REAL \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_DOUBLE \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_GENERALIZED_DECOMP_EIGENPROBLEM \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_SOLVER_1STAGE \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_GPU=0 \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@  -DTEST_MATRIX_RANDOM\n\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_c_version_complex_single_generalized_decomp_1stage_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_c_version_complex_single_generalized_decomp_1stage_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_c_version_complex_single_generalized_decomp_1stage_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_CASE=\\\"validate_c_version_complex_single_generalized_decomp_1stage_random\\\" \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_COMPLEX \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SINGLE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_GENERALIZED_DECOMP_EIGENPROBLEM \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SOLVER_1STAGE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_GPU=0 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_MATRIX_RANDOM\n\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@validate_c_version_real_single_generalized_decomp_1stage_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@validate_c_version_real_single_generalized_decomp_1stage_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@validate_c_version_real_single_generalized_decomp_1stage_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CASE=\\\"validate_c_version_real_single_generalized_decomp_1stage_random\\\" \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GENERALIZED_DECOMP_EIGENPROBLEM \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SOLVER_1STAGE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GPU=0 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_MATRIX_RANDOM\n\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_double_eigenvectors_1stage_gpu_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_double_eigenvectors_1stage_gpu_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_double_eigenvectors_1stage_gpu_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_c_version_complex_double_eigenvectors_1stage_gpu_random\\\" \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random\\\" \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT\n\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_double_eigenvectors_1stage_gpu_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_double_eigenvectors_1stage_gpu_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_double_eigenvectors_1stage_gpu_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_c_version_real_double_eigenvectors_1stage_gpu_random\\\" \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random\\\" \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT\n\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_single_eigenvectors_1stage_gpu_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_single_eigenvectors_1stage_gpu_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_single_eigenvectors_1stage_gpu_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_c_version_complex_single_eigenvectors_1stage_gpu_random\\\" \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random\\\" \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT\n\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_single_eigenvectors_1stage_gpu_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_single_eigenvectors_1stage_gpu_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_single_eigenvectors_1stage_gpu_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_c_version_real_single_eigenvectors_1stage_gpu_random\\\" \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random\\\" \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT\n\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_double_generalized_1stage_gpu_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_double_generalized_1stage_gpu_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_double_generalized_1stage_gpu_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_c_version_complex_double_generalized_1stage_gpu_random\\\" \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GENERALIZED_EIGENPROBLEM \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_double_generalized_1stage_gpu_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_double_generalized_1stage_gpu_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_double_generalized_1stage_gpu_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_c_version_real_double_generalized_1stage_gpu_random\\\" \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GENERALIZED_EIGENPROBLEM \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_single_generalized_1stage_gpu_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_single_generalized_1stage_gpu_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_single_generalized_1stage_gpu_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_c_version_complex_single_generalized_1stage_gpu_random\\\" \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GENERALIZED_EIGENPROBLEM \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_single_generalized_1stage_gpu_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_single_generalized_1stage_gpu_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_single_generalized_1stage_gpu_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_c_version_real_single_generalized_1stage_gpu_random\\\" \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GENERALIZED_EIGENPROBLEM \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_double_generalized_decomp_1stage_gpu_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_double_generalized_decomp_1stage_gpu_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_double_generalized_decomp_1stage_gpu_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_c_version_complex_double_generalized_decomp_1stage_gpu_random\\\" \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GENERALIZED_DECOMP_EIGENPROBLEM \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_double_generalized_decomp_1stage_gpu_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_double_generalized_decomp_1stage_gpu_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_double_generalized_decomp_1stage_gpu_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_c_version_real_double_generalized_decomp_1stage_gpu_random\\\" \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GENERALIZED_DECOMP_EIGENPROBLEM \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_single_generalized_decomp_1stage_gpu_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_single_generalized_decomp_1stage_gpu_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_complex_single_generalized_decomp_1stage_gpu_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_c_version_complex_single_generalized_decomp_1stage_gpu_random\\\" \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GENERALIZED_DECOMP_EIGENPROBLEM \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_single_generalized_decomp_1stage_gpu_random_SOURCES = test/C/test.c\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_single_generalized_decomp_1stage_gpu_random_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_c_version_real_single_generalized_decomp_1stage_gpu_random_CFLAGS = $(test_program_cflags) \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_c_version_real_single_generalized_decomp_1stage_gpu_random\\\" \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GENERALIZED_DECOMP_EIGENPROBLEM \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_1stage_analytic_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_1stage_analytic_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_1stage_analytic_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_1stage_analytic_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_ANALYTIC \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_complex_double_eigenvectors_1stage_analytic_SOURCES = test/Fortran/test.F90\nvalidate_complex_double_eigenvectors_1stage_analytic_LDADD = $(test_program_ldadd)\nvalidate_complex_double_eigenvectors_1stage_analytic_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_1stage_analytic\\\" \\\n  -DTEST_COMPLEX \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVECTORS \\\n  -DTEST_SOLVER_1STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_ANALYTIC\n\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_ANALYTIC \\\n@WITH_MPI_TRUE@  -DTEST_ALL_KERNELS \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_ANALYTIC \\\n@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_complex_double_eigenvectors_2stage_all_kernels_analytic_SOURCES = test/Fortran/test.F90\nvalidate_complex_double_eigenvectors_2stage_all_kernels_analytic_LDADD = $(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_analytic_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_2stage_all_kernels_analytic\\\" \\\n  -DTEST_COMPLEX \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVECTORS \\\n  -DTEST_SOLVER_2STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_ANALYTIC \\\n  -DTEST_ALL_KERNELS\n\nvalidate_complex_double_eigenvectors_2stage_default_kernel_analytic_SOURCES = test/Fortran/test.F90\nvalidate_complex_double_eigenvectors_2stage_default_kernel_analytic_LDADD = $(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_analytic_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_2stage_default_kernel_analytic\\\" \\\n  -DTEST_COMPLEX \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVECTORS \\\n  -DTEST_SOLVER_2STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_ANALYTIC \\\n  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT\n\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts\\\" \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_COMPLEX \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_SCALAPACK_ALL \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_MATRIX_ANALYTIC \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_SCALAPACK_TESTS_TRUE@validate_complex_double_eigenvectors_scalapack_all_analytic_SOURCES = test/Fortran/test.F90\n@WITH_SCALAPACK_TESTS_TRUE@validate_complex_double_eigenvectors_scalapack_all_analytic_LDADD = $(test_program_ldadd)\n@WITH_SCALAPACK_TESTS_TRUE@validate_complex_double_eigenvectors_scalapack_all_analytic_FCFLAGS = $(test_program_fcflags) \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_scalapack_all_analytic\\\" \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_COMPLEX \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_DOUBLE \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_SCALAPACK_ALL \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_GPU=0 \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_MATRIX_ANALYTIC\n\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts\\\" \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_COMPLEX \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_SCALAPACK_PART \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_MATRIX_ANALYTIC \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_SCALAPACK_TESTS_TRUE@validate_complex_double_eigenvectors_scalapack_part_analytic_SOURCES = test/Fortran/test.F90\n@WITH_SCALAPACK_TESTS_TRUE@validate_complex_double_eigenvectors_scalapack_part_analytic_LDADD = $(test_program_ldadd)\n@WITH_SCALAPACK_TESTS_TRUE@validate_complex_double_eigenvectors_scalapack_part_analytic_FCFLAGS = $(test_program_fcflags) \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_scalapack_part_analytic\\\" \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_COMPLEX \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_DOUBLE \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_SCALAPACK_PART \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_GPU=0 \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_MATRIX_ANALYTIC\n\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_analytic_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_analytic_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_analytic_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_1stage_analytic_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_ANALYTIC \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_real_double_eigenvectors_1stage_analytic_SOURCES = test/Fortran/test.F90\nvalidate_real_double_eigenvectors_1stage_analytic_LDADD = $(test_program_ldadd)\nvalidate_real_double_eigenvectors_1stage_analytic_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_eigenvectors_1stage_analytic\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVECTORS \\\n  -DTEST_SOLVER_1STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_ANALYTIC\n\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_ANALYTIC \\\n@WITH_MPI_TRUE@  -DTEST_ALL_KERNELS \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_ANALYTIC \\\n@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_real_double_eigenvectors_2stage_all_kernels_analytic_SOURCES = test/Fortran/test.F90\nvalidate_real_double_eigenvectors_2stage_all_kernels_analytic_LDADD = $(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_all_kernels_analytic_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_all_kernels_analytic\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVECTORS \\\n  -DTEST_SOLVER_2STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_ANALYTIC \\\n  -DTEST_ALL_KERNELS\n\nvalidate_real_double_eigenvectors_2stage_default_kernel_analytic_SOURCES = test/Fortran/test.F90\nvalidate_real_double_eigenvectors_2stage_default_kernel_analytic_LDADD = $(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_default_kernel_analytic_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_default_kernel_analytic\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVECTORS \\\n  -DTEST_SOLVER_2STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_ANALYTIC \\\n  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT\n\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts\\\" \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_SCALAPACK_ALL \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_MATRIX_ANALYTIC \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_SCALAPACK_TESTS_TRUE@validate_real_double_eigenvectors_scalapack_all_analytic_SOURCES = test/Fortran/test.F90\n@WITH_SCALAPACK_TESTS_TRUE@validate_real_double_eigenvectors_scalapack_all_analytic_LDADD = $(test_program_ldadd)\n@WITH_SCALAPACK_TESTS_TRUE@validate_real_double_eigenvectors_scalapack_all_analytic_FCFLAGS = $(test_program_fcflags) \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_scalapack_all_analytic\\\" \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_REAL \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_DOUBLE \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_SCALAPACK_ALL \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_GPU=0 \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_MATRIX_ANALYTIC\n\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts\\\" \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_SCALAPACK_PART \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_MATRIX_ANALYTIC \\\n@WITH_MPI_TRUE@@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_SCALAPACK_TESTS_TRUE@validate_real_double_eigenvectors_scalapack_part_analytic_SOURCES = test/Fortran/test.F90\n@WITH_SCALAPACK_TESTS_TRUE@validate_real_double_eigenvectors_scalapack_part_analytic_LDADD = $(test_program_ldadd)\n@WITH_SCALAPACK_TESTS_TRUE@validate_real_double_eigenvectors_scalapack_part_analytic_FCFLAGS = $(test_program_fcflags) \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_scalapack_part_analytic\\\" \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_REAL \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_DOUBLE \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_SCALAPACK_PART \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_GPU=0 \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_SCALAPACK_TESTS_TRUE@  -DTEST_MATRIX_ANALYTIC\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_1stage_analytic_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_1stage_analytic_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_1stage_analytic_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_1stage_analytic_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_ANALYTIC \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_1stage_analytic_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_1stage_analytic_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_1stage_analytic_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_1stage_analytic\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_MATRIX_ANALYTIC\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_ANALYTIC \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_KERNELS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_ANALYTIC \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_analytic_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_analytic_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_analytic_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_2stage_all_kernels_analytic\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_MATRIX_ANALYTIC \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_ALL_KERNELS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_analytic_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_analytic_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_analytic_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_2stage_default_kernel_analytic\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_MATRIX_ANALYTIC \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_1stage_analytic_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_1stage_analytic_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_1stage_analytic_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_1stage_analytic_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_ANALYTIC \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_1stage_analytic_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_1stage_analytic_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_1stage_analytic_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_1stage_analytic\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_MATRIX_ANALYTIC\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_ANALYTIC \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_KERNELS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_ANALYTIC \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_analytic_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_analytic_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_analytic_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_2stage_all_kernels_analytic\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_MATRIX_ANALYTIC \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_ALL_KERNELS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_analytic_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_analytic_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_analytic_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_2stage_default_kernel_analytic\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_MATRIX_ANALYTIC \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT\n\n@WITH_MPI_TRUE@validate_real_double_eigenvalues_1stage_frank_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_eigenvalues_1stage_frank_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_eigenvalues_1stage_frank_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvalues_1stage_frank_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVALUES \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_FRANK \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_real_double_eigenvalues_1stage_frank_SOURCES = test/Fortran/test.F90\nvalidate_real_double_eigenvalues_1stage_frank_LDADD = $(test_program_ldadd)\nvalidate_real_double_eigenvalues_1stage_frank_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_eigenvalues_1stage_frank\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVALUES \\\n  -DTEST_SOLVER_1STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_FRANK\n\n@WITH_MPI_TRUE@validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVALUES \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_FRANK \\\n@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_real_double_eigenvalues_2stage_default_kernel_frank_SOURCES = test/Fortran/test.F90\nvalidate_real_double_eigenvalues_2stage_default_kernel_frank_LDADD = $(test_program_ldadd)\nvalidate_real_double_eigenvalues_2stage_default_kernel_frank_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_eigenvalues_2stage_default_kernel_frank\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVALUES \\\n  -DTEST_SOLVER_2STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_FRANK \\\n  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT\n\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_frank_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_frank_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_frank_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_1stage_frank_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_FRANK \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_real_double_eigenvectors_1stage_frank_SOURCES = test/Fortran/test.F90\nvalidate_real_double_eigenvectors_1stage_frank_LDADD = $(test_program_ldadd)\nvalidate_real_double_eigenvectors_1stage_frank_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_eigenvectors_1stage_frank\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVECTORS \\\n  -DTEST_SOLVER_1STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_FRANK\n\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_FRANK \\\n@WITH_MPI_TRUE@  -DTEST_ALL_KERNELS \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_FRANK \\\n@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_real_double_eigenvectors_2stage_all_kernels_frank_SOURCES = test/Fortran/test.F90\nvalidate_real_double_eigenvectors_2stage_all_kernels_frank_LDADD = $(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_all_kernels_frank_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_all_kernels_frank\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVECTORS \\\n  -DTEST_SOLVER_2STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_FRANK \\\n  -DTEST_ALL_KERNELS\n\nvalidate_real_double_eigenvectors_2stage_default_kernel_frank_SOURCES = test/Fortran/test.F90\nvalidate_real_double_eigenvectors_2stage_default_kernel_frank_LDADD = $(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_default_kernel_frank_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_default_kernel_frank\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVECTORS \\\n  -DTEST_SOLVER_2STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_FRANK \\\n  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT\n\n@WITH_MPI_TRUE@validate_real_double_hermitian_multiply_1stage_frank_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_hermitian_multiply_1stage_frank_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_hermitian_multiply_1stage_frank_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_hermitian_multiply_1stage_frank_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_HERMITIAN_MULTIPLY \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_FRANK \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_real_double_hermitian_multiply_1stage_frank_SOURCES = test/Fortran/test.F90\nvalidate_real_double_hermitian_multiply_1stage_frank_LDADD = $(test_program_ldadd)\nvalidate_real_double_hermitian_multiply_1stage_frank_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_hermitian_multiply_1stage_frank\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_HERMITIAN_MULTIPLY \\\n  -DTEST_SOLVER_1STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_FRANK\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVALUES \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_FRANK \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvalues_1stage_gpu_frank_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvalues_1stage_gpu_frank_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvalues_1stage_gpu_frank_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvalues_1stage_gpu_frank\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVALUES \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_FRANK\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVALUES \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_FRANK \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVALUES \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_FRANK \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_FRANK \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_1stage_gpu_frank_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_1stage_gpu_frank_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_1stage_gpu_frank_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_1stage_gpu_frank\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_FRANK\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_FRANK \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_KERNELS \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_FRANK \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_FRANK \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_ALL_KERNELS\n\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_FRANK \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_HERMITIAN_MULTIPLY \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_FRANK \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_real_double_hermitian_multiply_1stage_gpu_frank_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_real_double_hermitian_multiply_1stage_gpu_frank_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_real_double_hermitian_multiply_1stage_gpu_frank_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_double_hermitian_multiply_1stage_gpu_frank\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_HERMITIAN_MULTIPLY \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_FRANK\n\n@WITH_MPI_TRUE@validate_complex_double_cholesky_1stage_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_complex_double_cholesky_1stage_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_complex_double_cholesky_1stage_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_cholesky_1stage_random_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_CHOLESKY \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_complex_double_cholesky_1stage_random_SOURCES = test/Fortran/test.F90\nvalidate_complex_double_cholesky_1stage_random_LDADD = $(test_program_ldadd)\nvalidate_complex_double_cholesky_1stage_random_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_complex_double_cholesky_1stage_random\\\" \\\n  -DTEST_COMPLEX \\\n  -DTEST_DOUBLE \\\n  -DTEST_CHOLESKY \\\n  -DTEST_SOLVER_1STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_RANDOM\n\n@WITH_MPI_TRUE@validate_real_double_cholesky_1stage_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_cholesky_1stage_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_cholesky_1stage_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_cholesky_1stage_random_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_CHOLESKY \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_real_double_cholesky_1stage_random_SOURCES = test/Fortran/test.F90\nvalidate_real_double_cholesky_1stage_random_LDADD = $(test_program_ldadd)\nvalidate_real_double_cholesky_1stage_random_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_cholesky_1stage_random\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_CHOLESKY \\\n  -DTEST_SOLVER_1STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_RANDOM\n\n@WITH_MPI_TRUE@validate_real_double_cholesky_1stage_random_split_comm_myself_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_cholesky_1stage_random_split_comm_myself_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_cholesky_1stage_random_split_comm_myself_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_cholesky_1stage_random_split_comm_myself\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_CHOLESKY \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_MPI_TRUE@  -DSPLIT_COMM_MYSELF\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_cholesky_1stage_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_cholesky_1stage_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_cholesky_1stage_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_cholesky_1stage_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_CHOLESKY \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_cholesky_1stage_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_cholesky_1stage_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_cholesky_1stage_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_CASE=\\\"validate_complex_single_cholesky_1stage_random\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_CHOLESKY \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_cholesky_1stage_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_cholesky_1stage_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_cholesky_1stage_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_cholesky_1stage_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_CHOLESKY \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_cholesky_1stage_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_cholesky_1stage_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_cholesky_1stage_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CASE=\\\"validate_real_single_cholesky_1stage_random\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CHOLESKY \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_1stage_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_1stage_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_1stage_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_1stage_random_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_complex_double_eigenvectors_1stage_random_SOURCES = test/Fortran/test.F90\nvalidate_complex_double_eigenvectors_1stage_random_LDADD = $(test_program_ldadd)\nvalidate_complex_double_eigenvectors_1stage_random_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_1stage_random\\\" \\\n  -DTEST_COMPLEX \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVECTORS \\\n  -DTEST_SOLVER_1STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_RANDOM\n\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_MPI_TRUE@  -DTEST_ALL_KERNELS \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_complex_double_eigenvectors_2stage_all_kernels_random_SOURCES = test/Fortran/test.F90\nvalidate_complex_double_eigenvectors_2stage_all_kernels_random_LDADD = $(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_random_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_2stage_all_kernels_random\\\" \\\n  -DTEST_COMPLEX \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVECTORS \\\n  -DTEST_SOLVER_2STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_RANDOM \\\n  -DTEST_ALL_KERNELS\n\nvalidate_complex_double_eigenvectors_2stage_default_kernel_random_SOURCES = test/Fortran/test.F90\nvalidate_complex_double_eigenvectors_2stage_default_kernel_random_LDADD = $(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_random_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_2stage_default_kernel_random\\\" \\\n  -DTEST_COMPLEX \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVECTORS \\\n  -DTEST_SOLVER_2STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_RANDOM \\\n  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT\n\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_1stage_random_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_real_double_eigenvectors_1stage_random_SOURCES = test/Fortran/test.F90\nvalidate_real_double_eigenvectors_1stage_random_LDADD = $(test_program_ldadd)\nvalidate_real_double_eigenvectors_1stage_random_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_eigenvectors_1stage_random\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVECTORS \\\n  -DTEST_SOLVER_1STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_RANDOM\n\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_random_split_comm_myself_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_random_split_comm_myself_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_random_split_comm_myself_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_1stage_random_split_comm_myself\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_MPI_TRUE@  -DSPLIT_COMM_MYSELF\n\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_MPI_TRUE@  -DTEST_ALL_KERNELS \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_real_double_eigenvectors_2stage_all_kernels_random_SOURCES = test/Fortran/test.F90\nvalidate_real_double_eigenvectors_2stage_all_kernels_random_LDADD = $(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_all_kernels_random_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_all_kernels_random\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVECTORS \\\n  -DTEST_SOLVER_2STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_RANDOM \\\n  -DTEST_ALL_KERNELS\n\nvalidate_real_double_eigenvectors_2stage_default_kernel_random_SOURCES = test/Fortran/test.F90\nvalidate_real_double_eigenvectors_2stage_default_kernel_random_LDADD = $(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_default_kernel_random_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_default_kernel_random\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVECTORS \\\n  -DTEST_SOLVER_2STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_RANDOM \\\n  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT\n\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT \\\n@WITH_MPI_TRUE@  -DSPLIT_COMM_MYSELF\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_1stage_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_1stage_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_1stage_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_1stage_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_1stage_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_1stage_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_1stage_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_1stage_random\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_KERNELS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_2stage_all_kernels_random\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_ALL_KERNELS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_2stage_default_kernel_random\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_1stage_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_1stage_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_1stage_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_1stage_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_1stage_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_1stage_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_1stage_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_1stage_random\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_KERNELS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_2stage_all_kernels_random\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_ALL_KERNELS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_2stage_default_kernel_random\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT\n\n@WITH_MPI_TRUE@validate_complex_double_generalized_1stage_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_complex_double_generalized_1stage_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_complex_double_generalized_1stage_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_generalized_1stage_random_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_GENERALIZED_EIGENPROBLEM \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_complex_double_generalized_1stage_random_SOURCES = test/Fortran/test.F90\nvalidate_complex_double_generalized_1stage_random_LDADD = $(test_program_ldadd)\nvalidate_complex_double_generalized_1stage_random_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_complex_double_generalized_1stage_random\\\" \\\n  -DTEST_COMPLEX \\\n  -DTEST_DOUBLE \\\n  -DTEST_GENERALIZED_EIGENPROBLEM \\\n  -DTEST_SOLVER_1STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_RANDOM\n\n@WITH_MPI_TRUE@validate_real_double_generalized_1stage_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_generalized_1stage_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_generalized_1stage_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_generalized_1stage_random_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_GENERALIZED_EIGENPROBLEM \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_real_double_generalized_1stage_random_SOURCES = test/Fortran/test.F90\nvalidate_real_double_generalized_1stage_random_LDADD = $(test_program_ldadd)\nvalidate_real_double_generalized_1stage_random_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_generalized_1stage_random\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_GENERALIZED_EIGENPROBLEM \\\n  -DTEST_SOLVER_1STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_RANDOM\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_generalized_1stage_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_generalized_1stage_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_generalized_1stage_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_generalized_1stage_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_GENERALIZED_EIGENPROBLEM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_generalized_1stage_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_generalized_1stage_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_generalized_1stage_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_CASE=\\\"validate_complex_single_generalized_1stage_random\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_GENERALIZED_EIGENPROBLEM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_generalized_1stage_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_generalized_1stage_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_generalized_1stage_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_generalized_1stage_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_GENERALIZED_EIGENPROBLEM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_generalized_1stage_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_generalized_1stage_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_generalized_1stage_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CASE=\\\"validate_real_single_generalized_1stage_random\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GENERALIZED_EIGENPROBLEM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WITH_MPI_TRUE@validate_complex_double_generalized_decomp_1stage_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_complex_double_generalized_decomp_1stage_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_complex_double_generalized_decomp_1stage_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_generalized_decomp_1stage_random_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_GENERALIZED_DECOMP_EIGENPROBLEM \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_complex_double_generalized_decomp_1stage_random_SOURCES = test/Fortran/test.F90\nvalidate_complex_double_generalized_decomp_1stage_random_LDADD = $(test_program_ldadd)\nvalidate_complex_double_generalized_decomp_1stage_random_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_complex_double_generalized_decomp_1stage_random\\\" \\\n  -DTEST_COMPLEX \\\n  -DTEST_DOUBLE \\\n  -DTEST_GENERALIZED_DECOMP_EIGENPROBLEM \\\n  -DTEST_SOLVER_1STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_RANDOM\n\n@WITH_MPI_TRUE@validate_real_double_generalized_decomp_1stage_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_generalized_decomp_1stage_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_generalized_decomp_1stage_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_generalized_decomp_1stage_random_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_GENERALIZED_DECOMP_EIGENPROBLEM \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_real_double_generalized_decomp_1stage_random_SOURCES = test/Fortran/test.F90\nvalidate_real_double_generalized_decomp_1stage_random_LDADD = $(test_program_ldadd)\nvalidate_real_double_generalized_decomp_1stage_random_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_generalized_decomp_1stage_random\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_GENERALIZED_DECOMP_EIGENPROBLEM \\\n  -DTEST_SOLVER_1STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_RANDOM\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_generalized_decomp_1stage_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_generalized_decomp_1stage_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_generalized_decomp_1stage_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_generalized_decomp_1stage_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_GENERALIZED_DECOMP_EIGENPROBLEM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_generalized_decomp_1stage_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_generalized_decomp_1stage_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_generalized_decomp_1stage_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_CASE=\\\"validate_complex_single_generalized_decomp_1stage_random\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_GENERALIZED_DECOMP_EIGENPROBLEM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_generalized_decomp_1stage_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_generalized_decomp_1stage_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_generalized_decomp_1stage_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_generalized_decomp_1stage_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_GENERALIZED_DECOMP_EIGENPROBLEM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_generalized_decomp_1stage_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_generalized_decomp_1stage_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_generalized_decomp_1stage_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CASE=\\\"validate_real_single_generalized_decomp_1stage_random\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GENERALIZED_DECOMP_EIGENPROBLEM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WITH_MPI_TRUE@validate_complex_double_hermitian_multiply_1stage_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_complex_double_hermitian_multiply_1stage_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_complex_double_hermitian_multiply_1stage_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_hermitian_multiply_1stage_random_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_HERMITIAN_MULTIPLY \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_complex_double_hermitian_multiply_1stage_random_SOURCES = test/Fortran/test.F90\nvalidate_complex_double_hermitian_multiply_1stage_random_LDADD = $(test_program_ldadd)\nvalidate_complex_double_hermitian_multiply_1stage_random_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_complex_double_hermitian_multiply_1stage_random\\\" \\\n  -DTEST_COMPLEX \\\n  -DTEST_DOUBLE \\\n  -DTEST_HERMITIAN_MULTIPLY \\\n  -DTEST_SOLVER_1STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_RANDOM\n\n@WITH_MPI_TRUE@validate_real_double_hermitian_multiply_1stage_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_hermitian_multiply_1stage_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_hermitian_multiply_1stage_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_hermitian_multiply_1stage_random_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_HERMITIAN_MULTIPLY \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_real_double_hermitian_multiply_1stage_random_SOURCES = test/Fortran/test.F90\nvalidate_real_double_hermitian_multiply_1stage_random_LDADD = $(test_program_ldadd)\nvalidate_real_double_hermitian_multiply_1stage_random_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_hermitian_multiply_1stage_random\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_HERMITIAN_MULTIPLY \\\n  -DTEST_SOLVER_1STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_RANDOM\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_hermitian_multiply_1stage_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_hermitian_multiply_1stage_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_hermitian_multiply_1stage_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_hermitian_multiply_1stage_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_HERMITIAN_MULTIPLY \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_hermitian_multiply_1stage_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_hermitian_multiply_1stage_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_hermitian_multiply_1stage_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_CASE=\\\"validate_complex_single_hermitian_multiply_1stage_random\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_HERMITIAN_MULTIPLY \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_hermitian_multiply_1stage_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_hermitian_multiply_1stage_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_hermitian_multiply_1stage_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_hermitian_multiply_1stage_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_HERMITIAN_MULTIPLY \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_hermitian_multiply_1stage_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_hermitian_multiply_1stage_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_hermitian_multiply_1stage_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CASE=\\\"validate_real_single_hermitian_multiply_1stage_random\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_HERMITIAN_MULTIPLY \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=1 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_MPI_TRUE@  -DTEST_ALL_KERNELS \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=1 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_real_double_eigenvectors_2stage_all_kernels_qr_random_SOURCES = test/Fortran/test.F90\nvalidate_real_double_eigenvectors_2stage_all_kernels_qr_random_LDADD = $(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_all_kernels_qr_random_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_all_kernels_qr_random\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVECTORS \\\n  -DTEST_SOLVER_2STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=1 \\\n  -DTEST_MATRIX_RANDOM \\\n  -DTEST_ALL_KERNELS\n\nvalidate_real_double_eigenvectors_2stage_default_kernel_qr_random_SOURCES = test/Fortran/test.F90\nvalidate_real_double_eigenvectors_2stage_default_kernel_qr_random_LDADD = $(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_default_kernel_qr_random_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_default_kernel_qr_random\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVECTORS \\\n  -DTEST_SOLVER_2STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=1 \\\n  -DTEST_MATRIX_RANDOM \\\n  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_KERNELS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_qr_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_qr_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_qr_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_2stage_all_kernels_qr_random\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_QR_DECOMPOSITION=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_ALL_KERNELS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_qr_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_qr_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_qr_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_2stage_default_kernel_qr_random\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_QR_DECOMPOSITION=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_cholesky_1stage_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_cholesky_1stage_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_cholesky_1stage_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_cholesky_1stage_gpu_random_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CHOLESKY \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_complex_double_cholesky_1stage_gpu_random_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_complex_double_cholesky_1stage_gpu_random_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_cholesky_1stage_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_double_cholesky_1stage_gpu_random\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CHOLESKY \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_cholesky_1stage_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_cholesky_1stage_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_cholesky_1stage_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_cholesky_1stage_gpu_random_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CHOLESKY \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_real_double_cholesky_1stage_gpu_random_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_real_double_cholesky_1stage_gpu_random_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_real_double_cholesky_1stage_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_double_cholesky_1stage_gpu_random\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CHOLESKY \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_cholesky_1stage_gpu_random_split_comm_myself_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_cholesky_1stage_gpu_random_split_comm_myself_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_cholesky_1stage_gpu_random_split_comm_myself_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_cholesky_1stage_gpu_random_split_comm_myself\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CHOLESKY \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DSPLIT_COMM_MYSELF\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_cholesky_1stage_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_cholesky_1stage_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_cholesky_1stage_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_cholesky_1stage_gpu_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CHOLESKY \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_cholesky_1stage_gpu_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_cholesky_1stage_gpu_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_cholesky_1stage_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_single_cholesky_1stage_gpu_random\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CHOLESKY \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_cholesky_1stage_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_cholesky_1stage_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_cholesky_1stage_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_cholesky_1stage_gpu_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CHOLESKY \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_cholesky_1stage_gpu_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_cholesky_1stage_gpu_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_cholesky_1stage_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_single_cholesky_1stage_gpu_random\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CHOLESKY \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvectors_1stage_gpu_random_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvectors_1stage_gpu_random_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvectors_1stage_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_1stage_gpu_random\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_KERNELS \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_ALL_KERNELS\n\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_1stage_gpu_random_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_1stage_gpu_random_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_1stage_gpu_random_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_1stage_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_1stage_gpu_random\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DSPLIT_COMM_MYSELF\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_KERNELS \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_all_kernels_gpu_random\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_ALL_KERNELS\n\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_default_kernel_gpu_random\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DSPLIT_COMM_MYSELF\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvectors_1stage_gpu_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvectors_1stage_gpu_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvectors_1stage_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_1stage_gpu_random\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_KERNELS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_ALL_KERNELS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_1stage_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_1stage_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_1stage_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_1stage_gpu_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvectors_1stage_gpu_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvectors_1stage_gpu_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvectors_1stage_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_1stage_gpu_random\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_KERNELS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_2stage_all_kernels_gpu_random\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_ALL_KERNELS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_2stage_default_kernel_gpu_random\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_generalized_1stage_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_generalized_1stage_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_generalized_1stage_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_generalized_1stage_gpu_random_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GENERALIZED_EIGENPROBLEM \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_complex_double_generalized_1stage_gpu_random_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_complex_double_generalized_1stage_gpu_random_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_generalized_1stage_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_double_generalized_1stage_gpu_random\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GENERALIZED_EIGENPROBLEM \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_generalized_1stage_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_generalized_1stage_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_generalized_1stage_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_generalized_1stage_gpu_random_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GENERALIZED_EIGENPROBLEM \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_real_double_generalized_1stage_gpu_random_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_real_double_generalized_1stage_gpu_random_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_real_double_generalized_1stage_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_double_generalized_1stage_gpu_random\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GENERALIZED_EIGENPROBLEM \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_generalized_1stage_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_generalized_1stage_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_generalized_1stage_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_generalized_1stage_gpu_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GENERALIZED_EIGENPROBLEM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_generalized_1stage_gpu_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_generalized_1stage_gpu_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_generalized_1stage_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_single_generalized_1stage_gpu_random\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GENERALIZED_EIGENPROBLEM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_generalized_1stage_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_generalized_1stage_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_generalized_1stage_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_generalized_1stage_gpu_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GENERALIZED_EIGENPROBLEM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_generalized_1stage_gpu_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_generalized_1stage_gpu_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_generalized_1stage_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_single_generalized_1stage_gpu_random\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GENERALIZED_EIGENPROBLEM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GENERALIZED_DECOMP_EIGENPROBLEM \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_complex_double_generalized_decomp_1stage_gpu_random_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_complex_double_generalized_decomp_1stage_gpu_random_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_generalized_decomp_1stage_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_double_generalized_decomp_1stage_gpu_random\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GENERALIZED_DECOMP_EIGENPROBLEM \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GENERALIZED_DECOMP_EIGENPROBLEM \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_real_double_generalized_decomp_1stage_gpu_random_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_real_double_generalized_decomp_1stage_gpu_random_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_real_double_generalized_decomp_1stage_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_double_generalized_decomp_1stage_gpu_random\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GENERALIZED_DECOMP_EIGENPROBLEM \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GENERALIZED_DECOMP_EIGENPROBLEM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_generalized_decomp_1stage_gpu_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_generalized_decomp_1stage_gpu_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_generalized_decomp_1stage_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_single_generalized_decomp_1stage_gpu_random\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GENERALIZED_DECOMP_EIGENPROBLEM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GENERALIZED_DECOMP_EIGENPROBLEM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_generalized_decomp_1stage_gpu_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_generalized_decomp_1stage_gpu_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_generalized_decomp_1stage_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_single_generalized_decomp_1stage_gpu_random\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GENERALIZED_DECOMP_EIGENPROBLEM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_HERMITIAN_MULTIPLY \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_complex_double_hermitian_multiply_1stage_gpu_random_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_complex_double_hermitian_multiply_1stage_gpu_random_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_hermitian_multiply_1stage_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_double_hermitian_multiply_1stage_gpu_random\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_HERMITIAN_MULTIPLY \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_HERMITIAN_MULTIPLY \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_real_double_hermitian_multiply_1stage_gpu_random_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_real_double_hermitian_multiply_1stage_gpu_random_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_real_double_hermitian_multiply_1stage_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_double_hermitian_multiply_1stage_gpu_random\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_HERMITIAN_MULTIPLY \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_HERMITIAN_MULTIPLY \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_hermitian_multiply_1stage_gpu_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_hermitian_multiply_1stage_gpu_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_hermitian_multiply_1stage_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_single_hermitian_multiply_1stage_gpu_random\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_HERMITIAN_MULTIPLY \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_HERMITIAN_MULTIPLY \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_RANDOM \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_hermitian_multiply_1stage_gpu_random_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_hermitian_multiply_1stage_gpu_random_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_hermitian_multiply_1stage_gpu_random_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_single_hermitian_multiply_1stage_gpu_random\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_HERMITIAN_MULTIPLY \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_RANDOM\n\n@WITH_MPI_TRUE@validate_complex_double_cholesky_1stage_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_complex_double_cholesky_1stage_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_complex_double_cholesky_1stage_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_cholesky_1stage_toeplitz_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_CHOLESKY \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_complex_double_cholesky_1stage_toeplitz_SOURCES = test/Fortran/test.F90\nvalidate_complex_double_cholesky_1stage_toeplitz_LDADD = $(test_program_ldadd)\nvalidate_complex_double_cholesky_1stage_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_complex_double_cholesky_1stage_toeplitz\\\" \\\n  -DTEST_COMPLEX \\\n  -DTEST_DOUBLE \\\n  -DTEST_CHOLESKY \\\n  -DTEST_SOLVER_1STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_TOEPLITZ\n\n@WITH_MPI_TRUE@validate_real_double_cholesky_1stage_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_cholesky_1stage_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_cholesky_1stage_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_cholesky_1stage_toeplitz_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_CHOLESKY \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_real_double_cholesky_1stage_toeplitz_SOURCES = test/Fortran/test.F90\nvalidate_real_double_cholesky_1stage_toeplitz_LDADD = $(test_program_ldadd)\nvalidate_real_double_cholesky_1stage_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_cholesky_1stage_toeplitz\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_CHOLESKY \\\n  -DTEST_SOLVER_1STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_TOEPLITZ\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_cholesky_1stage_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_cholesky_1stage_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_cholesky_1stage_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_cholesky_1stage_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_CHOLESKY \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_cholesky_1stage_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_cholesky_1stage_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_cholesky_1stage_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_CASE=\\\"validate_complex_single_cholesky_1stage_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_CHOLESKY \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_MATRIX_TOEPLITZ\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_cholesky_1stage_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_cholesky_1stage_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_cholesky_1stage_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_cholesky_1stage_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_CHOLESKY \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_cholesky_1stage_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_cholesky_1stage_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_cholesky_1stage_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CASE=\\\"validate_real_single_cholesky_1stage_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CHOLESKY \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_MATRIX_TOEPLITZ\n\n@WITH_MPI_TRUE@validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVALUES \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_complex_double_eigenvalues_1stage_toeplitz_SOURCES = test/Fortran/test.F90\nvalidate_complex_double_eigenvalues_1stage_toeplitz_LDADD = $(test_program_ldadd)\nvalidate_complex_double_eigenvalues_1stage_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_complex_double_eigenvalues_1stage_toeplitz\\\" \\\n  -DTEST_COMPLEX \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVALUES \\\n  -DTEST_SOLVER_1STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_TOEPLITZ\n\n@WITH_MPI_TRUE@validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVALUES \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_SOURCES = test/Fortran/test.F90\nvalidate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_LDADD = $(test_program_ldadd)\nvalidate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz\\\" \\\n  -DTEST_COMPLEX \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVALUES \\\n  -DTEST_SOLVER_2STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_TOEPLITZ \\\n  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT\n\n@WITH_MPI_TRUE@validate_real_double_eigenvalues_1stage_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_eigenvalues_1stage_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_eigenvalues_1stage_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvalues_1stage_toeplitz_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVALUES \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_real_double_eigenvalues_1stage_toeplitz_SOURCES = test/Fortran/test.F90\nvalidate_real_double_eigenvalues_1stage_toeplitz_LDADD = $(test_program_ldadd)\nvalidate_real_double_eigenvalues_1stage_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_eigenvalues_1stage_toeplitz\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVALUES \\\n  -DTEST_SOLVER_1STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_TOEPLITZ\n\n@WITH_MPI_TRUE@validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVALUES \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_real_double_eigenvalues_2stage_default_kernel_toeplitz_SOURCES = test/Fortran/test.F90\nvalidate_real_double_eigenvalues_2stage_default_kernel_toeplitz_LDADD = $(test_program_ldadd)\nvalidate_real_double_eigenvalues_2stage_default_kernel_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_eigenvalues_2stage_default_kernel_toeplitz\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVALUES \\\n  -DTEST_SOLVER_2STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_TOEPLITZ \\\n  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVALUES \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvalues_1stage_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvalues_1stage_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvalues_1stage_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvalues_1stage_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_EIGENVALUES \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_MATRIX_TOEPLITZ\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVALUES \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_EIGENVALUES \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvalues_1stage_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvalues_1stage_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvalues_1stage_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvalues_1stage_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVALUES \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvalues_1stage_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvalues_1stage_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvalues_1stage_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvalues_1stage_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_EIGENVALUES \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_MATRIX_TOEPLITZ\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVALUES \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvalues_2stage_default_kernel_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_EIGENVALUES \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT\n\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_complex_double_eigenvectors_1stage_toeplitz_SOURCES = test/Fortran/test.F90\nvalidate_complex_double_eigenvectors_1stage_toeplitz_LDADD = $(test_program_ldadd)\nvalidate_complex_double_eigenvectors_1stage_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_1stage_toeplitz\\\" \\\n  -DTEST_COMPLEX \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVECTORS \\\n  -DTEST_SOLVER_1STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_TOEPLITZ\n\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_MPI_TRUE@  -DTEST_ALL_KERNELS \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_SOURCES = test/Fortran/test.F90\nvalidate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_LDADD = $(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz\\\" \\\n  -DTEST_COMPLEX \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVECTORS \\\n  -DTEST_SOLVER_2STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_TOEPLITZ \\\n  -DTEST_ALL_KERNELS\n\nvalidate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_SOURCES = test/Fortran/test.F90\nvalidate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_LDADD = $(test_program_ldadd)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz\\\" \\\n  -DTEST_COMPLEX \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVECTORS \\\n  -DTEST_SOLVER_2STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_TOEPLITZ \\\n  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT\n\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_1stage_toeplitz_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_real_double_eigenvectors_1stage_toeplitz_SOURCES = test/Fortran/test.F90\nvalidate_real_double_eigenvectors_1stage_toeplitz_LDADD = $(test_program_ldadd)\nvalidate_real_double_eigenvectors_1stage_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_eigenvectors_1stage_toeplitz\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVECTORS \\\n  -DTEST_SOLVER_1STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_TOEPLITZ\n\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_MPI_TRUE@  -DTEST_ALL_KERNELS \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_real_double_eigenvectors_2stage_all_kernels_toeplitz_SOURCES = test/Fortran/test.F90\nvalidate_real_double_eigenvectors_2stage_all_kernels_toeplitz_LDADD = $(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_all_kernels_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_all_kernels_toeplitz\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVECTORS \\\n  -DTEST_SOLVER_2STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_TOEPLITZ \\\n  -DTEST_ALL_KERNELS\n\nvalidate_real_double_eigenvectors_2stage_default_kernel_toeplitz_SOURCES = test/Fortran/test.F90\nvalidate_real_double_eigenvectors_2stage_default_kernel_toeplitz_LDADD = $(test_program_ldadd)\nvalidate_real_double_eigenvectors_2stage_default_kernel_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_default_kernel_toeplitz\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_EIGENVECTORS \\\n  -DTEST_SOLVER_2STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_TOEPLITZ \\\n  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_1stage_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_1stage_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_1stage_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_1stage_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_MATRIX_TOEPLITZ\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_KERNELS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_ALL_KERNELS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_1stage_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_1stage_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_1stage_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_1stage_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_1stage_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_1stage_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_1stage_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_1stage_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_MATRIX_TOEPLITZ\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_KERNELS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_2stage_all_kernels_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_ALL_KERNELS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_2stage_default_kernel_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT\n\n@WITH_MPI_TRUE@validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_MPI_TRUE@validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_MPI_TRUE@validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts\\\" \\\n@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_MPI_TRUE@  -DTEST_SOLVE_TRIDIAGONAL \\\n@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\nvalidate_real_double_solve_tridiagonal_1stage_toeplitz_SOURCES = test/Fortran/test.F90\nvalidate_real_double_solve_tridiagonal_1stage_toeplitz_LDADD = $(test_program_ldadd)\nvalidate_real_double_solve_tridiagonal_1stage_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_CASE=\\\"validate_real_double_solve_tridiagonal_1stage_toeplitz\\\" \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE \\\n  -DTEST_SOLVE_TRIDIAGONAL \\\n  -DTEST_SOLVER_1STAGE \\\n  -DTEST_GPU=0 \\\n  -DTEST_QR_DECOMPOSITION=0 \\\n  -DTEST_MATRIX_TOEPLITZ\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVE_TRIDIAGONAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_solve_tridiagonal_1stage_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_solve_tridiagonal_1stage_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_real_single_solve_tridiagonal_1stage_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_CASE=\\\"validate_real_single_solve_tridiagonal_1stage_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SOLVE_TRIDIAGONAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_GPU=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_MATRIX_TOEPLITZ\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CHOLESKY \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_complex_double_cholesky_1stage_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_complex_double_cholesky_1stage_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_cholesky_1stage_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_double_cholesky_1stage_gpu_toeplitz\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CHOLESKY \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CHOLESKY \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_real_double_cholesky_1stage_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_real_double_cholesky_1stage_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_real_double_cholesky_1stage_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_double_cholesky_1stage_gpu_toeplitz\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CHOLESKY \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CHOLESKY \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_cholesky_1stage_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_cholesky_1stage_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_cholesky_1stage_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_single_cholesky_1stage_gpu_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CHOLESKY \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CHOLESKY \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_cholesky_1stage_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_cholesky_1stage_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_cholesky_1stage_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_single_cholesky_1stage_gpu_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CHOLESKY \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVALUES \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvalues_1stage_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvalues_1stage_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvalues_1stage_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvalues_1stage_gpu_toeplitz\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVALUES \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVALUES \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVALUES \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVALUES \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvalues_1stage_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvalues_1stage_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvalues_1stage_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvalues_1stage_gpu_toeplitz\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVALUES \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVALUES \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVALUES \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVALUES \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvalues_1stage_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvalues_1stage_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvalues_1stage_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvalues_1stage_gpu_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVALUES \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVALUES \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVALUES \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVALUES \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvalues_1stage_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvalues_1stage_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvalues_1stage_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvalues_1stage_gpu_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVALUES \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVALUES \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVALUES \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvectors_1stage_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvectors_1stage_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvectors_1stage_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_1stage_gpu_toeplitz\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_KERNELS \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_ALL_KERNELS\n\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_1stage_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_1stage_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_1stage_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_1stage_gpu_toeplitz\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_KERNELS \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_ALL_KERNELS\n\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvectors_1stage_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvectors_1stage_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvectors_1stage_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_1stage_gpu_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_KERNELS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_ALL_KERNELS\n\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_COMPLEX \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_COMPLEX_DEFAULT\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvectors_1stage_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvectors_1stage_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvectors_1stage_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_1stage_gpu_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_KERNELS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_ALL_KERNELS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_EIGENVECTORS \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_2STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_KERNEL=ELPA_2STAGE_REAL_DEFAULT\n\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts\\\" \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVE_TRIDIAGONAL \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WITH_GPU_VERSION_TRUE@validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WITH_GPU_VERSION_TRUE@validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WITH_GPU_VERSION_TRUE@validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz\\\" \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_DOUBLE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVE_TRIDIAGONAL \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_CASE=\\\"validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVE_TRIDIAGONAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_MATRIX_TOEPLITZ \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@@WITH_MPI_TRUE@  -DTEST_ALL_LAYOUTS\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_SOURCES = test/Fortran/test.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_CASE=\\\"validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz\\\" \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SINGLE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVE_TRIDIAGONAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_SOLVER_1STAGE \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_GPU=1 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_QR_DECOMPOSITION=0 \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@@WITH_GPU_VERSION_TRUE@  -DTEST_MATRIX_TOEPLITZ\n\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@validate_autotune_c_version_complex_double_SOURCES = test/C/test_autotune.c\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@validate_autotune_c_version_complex_double_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@validate_autotune_c_version_complex_double_CFLAGS = $(test_program_cflags) \\\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@  -DTEST_COMPLEX \\\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@  -DTEST_DOUBLE\n\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@validate_autotune_c_version_real_double_SOURCES = test/C/test_autotune.c\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@validate_autotune_c_version_real_double_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@validate_autotune_c_version_real_double_CFLAGS = $(test_program_cflags) \\\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@  -DTEST_REAL \\\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@  -DTEST_DOUBLE\n\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_autotune_c_version_complex_single_SOURCES = test/C/test_autotune.c\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_autotune_c_version_complex_single_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_autotune_c_version_complex_single_CFLAGS = $(test_program_cflags) \\\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_COMPLEX \\\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SINGLE\n\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@validate_autotune_c_version_real_single_SOURCES = test/C/test_autotune.c\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@validate_autotune_c_version_real_single_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@validate_autotune_c_version_real_single_CFLAGS = $(test_program_cflags) \\\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE\n\n@ENABLE_AUTOTUNING_TRUE@validate_autotune_complex_double_SOURCES = test/Fortran/test_autotune.F90\n@ENABLE_AUTOTUNING_TRUE@validate_autotune_complex_double_LDADD = $(test_program_ldadd)\n@ENABLE_AUTOTUNING_TRUE@validate_autotune_complex_double_FCFLAGS = $(test_program_fcflags) \\\n@ENABLE_AUTOTUNING_TRUE@  -DTEST_COMPLEX \\\n@ENABLE_AUTOTUNING_TRUE@  -DTEST_DOUBLE\n\n@ENABLE_AUTOTUNING_TRUE@validate_autotune_real_double_SOURCES = test/Fortran/test_autotune.F90\n@ENABLE_AUTOTUNING_TRUE@validate_autotune_real_double_LDADD = $(test_program_ldadd)\n@ENABLE_AUTOTUNING_TRUE@validate_autotune_real_double_FCFLAGS = $(test_program_fcflags) \\\n@ENABLE_AUTOTUNING_TRUE@  -DTEST_REAL \\\n@ENABLE_AUTOTUNING_TRUE@  -DTEST_DOUBLE\n\n@ENABLE_AUTOTUNING_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_autotune_complex_single_SOURCES = test/Fortran/test_autotune.F90\n@ENABLE_AUTOTUNING_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_autotune_complex_single_LDADD = $(test_program_ldadd)\n@ENABLE_AUTOTUNING_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_autotune_complex_single_FCFLAGS = $(test_program_fcflags) \\\n@ENABLE_AUTOTUNING_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_COMPLEX \\\n@ENABLE_AUTOTUNING_TRUE@@WANT_SINGLE_PRECISION_COMPLEX_TRUE@  -DTEST_SINGLE\n\n@ENABLE_AUTOTUNING_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@validate_autotune_real_single_SOURCES = test/Fortran/test_autotune.F90\n@ENABLE_AUTOTUNING_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@validate_autotune_real_single_LDADD = $(test_program_ldadd)\n@ENABLE_AUTOTUNING_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@validate_autotune_real_single_FCFLAGS = $(test_program_fcflags) \\\n@ENABLE_AUTOTUNING_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@ENABLE_AUTOTUNING_TRUE@@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE\n\n@ENABLE_AUTOTUNING_TRUE@validate_multiple_objs_real_double_SOURCES = test/Fortran/test_multiple_objs.F90\n@ENABLE_AUTOTUNING_TRUE@validate_multiple_objs_real_double_LDADD = $(test_program_ldadd)\n@ENABLE_AUTOTUNING_TRUE@validate_multiple_objs_real_double_FCFLAGS = $(test_program_fcflags) \\\n@ENABLE_AUTOTUNING_TRUE@  -DTEST_REAL \\\n@ENABLE_AUTOTUNING_TRUE@  -DTEST_DOUBLE\n\ntest_skewsymmetric_real_double_SOURCES = test/Fortran/test_skewsymmetric.F90\ntest_skewsymmetric_real_double_LDADD = $(test_program_ldadd)\ntest_skewsymmetric_real_double_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE\n\n@WANT_SINGLE_PRECISION_REAL_TRUE@test_skewsymmetric_real_single_SOURCES = test/Fortran/test_skewsymmetric.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@test_skewsymmetric_real_single_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@test_skewsymmetric_real_single_FCFLAGS = $(test_program_fcflags) \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_REAL \\\n@WANT_SINGLE_PRECISION_REAL_TRUE@  -DTEST_SINGLE\n\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@validate_multiple_objs_real_double_c_version_SOURCES = test/C/test_multiple_objs.c\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@validate_multiple_objs_real_double_c_version_LDADD = $(test_program_ldadd) $(FCLIBS)\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@validate_multiple_objs_real_double_c_version_CFLAGS = $(test_program_cflags) \\\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@  -DTEST_REAL \\\n@ENABLE_AUTOTUNING_TRUE@@ENABLE_C_TESTS_TRUE@  -DTEST_DOUBLE\n\nvalidate_split_comm_real_double_SOURCES = test/Fortran/test_split_comm.F90\nvalidate_split_comm_real_double_LDADD = $(test_program_ldadd)\nvalidate_split_comm_real_double_FCFLAGS = $(test_program_fcflags) \\\n  -DTEST_REAL \\\n  -DTEST_DOUBLE\n\nvalidate_double_instance@SUFFIX@_SOURCES = test/Fortran/elpa2/double_instance.F90\nvalidate_double_instance@SUFFIX@_LDADD = $(test_program_ldadd)\nvalidate_double_instance@SUFFIX@_FCFLAGS = $(AM_FCFLAGS) $(FC_MODINC)test_modules $(FC_MODINC)modules $(FC_MODINC)private_modules\nvalidate_real_2stage_banded@SUFFIX@_SOURCES = test/Fortran/elpa2/real_2stage_banded.F90 \nvalidate_real_2stage_banded@SUFFIX@_LDADD = $(test_program_ldadd)\nvalidate_real_2stage_banded@SUFFIX@_FCFLAGS = $(AM_FCFLAGS) $(FC_MODINC)test_modules $(FC_MODINC)modules $(FC_MODINC)private_modules\nvalidate_complex_2stage_banded@SUFFIX@_SOURCES = test/Fortran/elpa2/complex_2stage_banded.F90\nvalidate_complex_2stage_banded@SUFFIX@_LDADD = $(test_program_ldadd)\nvalidate_complex_2stage_banded@SUFFIX@_FCFLAGS = $(AM_FCFLAGS) $(FC_MODINC)test_modules $(FC_MODINC)modules $(FC_MODINC)private_modules\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_single_real_2stage_banded@SUFFIX@_SOURCES = test/Fortran/elpa2/single_real_2stage_banded.F90\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_single_real_2stage_banded@SUFFIX@_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_REAL_TRUE@validate_single_real_2stage_banded@SUFFIX@_FCFLAGS = $(AM_FCFLAGS) $(FC_MODINC)test_modules $(FC_MODINC)modules $(FC_MODINC)private_modules\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_single_complex_2stage_banded@SUFFIX@_SOURCES = test/Fortran/elpa2/single_complex_2stage_banded.F90\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_single_complex_2stage_banded@SUFFIX@_LDADD = $(test_program_ldadd)\n@WANT_SINGLE_PRECISION_COMPLEX_TRUE@validate_single_complex_2stage_banded@SUFFIX@_FCFLAGS = $(AM_FCFLAGS) $(FC_MODINC)test_modules $(FC_MODINC)modules $(FC_MODINC)private_modules\n\n# python wrapper\npyelpadir = $(pythondir)/pyelpa\n@WITH_PYTHON_FALSE@pyelpa_PYTHON = \n@WITH_PYTHON_TRUE@pyelpa_PYTHON = python/pyelpa/__init__.py python/pyelpa/distributedmatrix.py\n@WITH_PYTHON_FALSE@pyelpa_LTLIBRARIES = \n@WITH_PYTHON_TRUE@pyelpa_LTLIBRARIES = wrapper.la\nnodist_wrapper_la_SOURCES = python/pyelpa/wrapper.c\nwrapper_la_LDFLAGS = -module -avoid-version -shared $(AM_LDFLAGS)\nwrapper_la_LIBADD = libelpa@SUFFIX@.la\nwrapper_la_CFLAGS = $(PYTHON_INCLUDE) $(NUMPY_INCLUDE) $(AM_CFLAGS)\n@WITH_MPI_FALSE@wrapper = \n@WITH_MPI_TRUE@wrapper = $(MPI_BINARY) -n $${TASKS:-$(TASKS)}\nTESTS = $(check_SCRIPTS)\n@DX_COND_doc_TRUE@@DX_COND_html_TRUE@DX_CLEAN_HTML = @DX_DOCDIR@/html\n@DX_COND_chm_TRUE@@DX_COND_doc_TRUE@DX_CLEAN_CHM = @DX_DOCDIR@/chm\n@DX_COND_chi_TRUE@@DX_COND_chm_TRUE@@DX_COND_doc_TRUE@DX_CLEAN_CHI = @DX_DOCDIR@/@PACKAGE@.chi\n@DX_COND_doc_TRUE@@DX_COND_man_TRUE@DX_CLEAN_MAN = @DX_DOCDIR@/man\n@DX_COND_doc_TRUE@@DX_COND_rtf_TRUE@DX_CLEAN_RTF = @DX_DOCDIR@/rtf\n@DX_COND_doc_TRUE@@DX_COND_xml_TRUE@DX_CLEAN_XML = @DX_DOCDIR@/xml\n@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@DX_CLEAN_PS = @DX_DOCDIR@/@PACKAGE@.ps\n@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@DX_PS_GOAL = doxygen-ps\n@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@DX_CLEAN_PDF = @DX_DOCDIR@/@PACKAGE@.pdf\n@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@DX_PDF_GOAL = doxygen-pdf\n@DX_COND_doc_TRUE@@DX_COND_latex_TRUE@DX_CLEAN_LATEX = @DX_DOCDIR@/latex\n@DX_COND_doc_TRUE@DX_CLEANFILES = \\\n@DX_COND_doc_TRUE@\t@DX_DOCDIR@/@PACKAGE@.tag \\\n@DX_COND_doc_TRUE@\t-r \\\n@DX_COND_doc_TRUE@\t$(DX_CLEAN_HTML) \\\n@DX_COND_doc_TRUE@\t$(DX_CLEAN_CHM) \\\n@DX_COND_doc_TRUE@\t$(DX_CLEAN_CHI) \\\n@DX_COND_doc_TRUE@\t$(DX_CLEAN_MAN) \\\n@DX_COND_doc_TRUE@\t$(DX_CLEAN_RTF) \\\n@DX_COND_doc_TRUE@\t$(DX_CLEAN_XML) \\\n@DX_COND_doc_TRUE@\t$(DX_CLEAN_PS) \\\n@DX_COND_doc_TRUE@\t$(DX_CLEAN_PDF) \\\n@DX_COND_doc_TRUE@\t$(DX_CLEAN_LATEX)\n\nCLEANFILES = \\\n  elpa_generated.h \\\n  elpa_generated_c_api.h \\\n  elpa1_test* \\\n  elpa2_test*\\\n  elpa2_real* \\\n  elpa1_real* \\\n  elpa*.sh \\\n  test*.sh \\\n  single_real* \\\n  single_complex* \\\n  real* \\\n  complex* \\\n  double_instance* \\\n  *.i \\\n  python/pyelpa/wrapper.c \\\n  check_python.sh\n\n\n# python wrapper files\nEXTRA_DIST = elpa.spec elpa/elpa.h elpa/elpa_generic.h \\\n\tfdep/fortran_dependencies.mk fdep/fortran_dependencies.pl \\\n\tmanual_cpp nvcc_wrap remove_xcompiler \\\n\tsrc/helpers/fortran_blas_interfaces.F90 \\\n\tsrc/helpers/fortran_scalapack_interfaces.F90 \\\n\tsrc/GPU/cuUtils_template.cu src/elpa_api_math_template.F90 \\\n\tsrc/elpa_impl_math_template.F90 \\\n\tsrc/elpa_impl_generalized_transform_template.F90 \\\n\tsrc/elpa1/elpa1_compute_template.F90 \\\n\tsrc/elpa1/elpa1_merge_systems_real_template.F90 \\\n\tsrc/elpa1/elpa1_solve_tridi_real_template.F90 \\\n\tsrc/elpa1/elpa1_template.F90 \\\n\tsrc/elpa1/elpa1_tools_template.F90 \\\n\tsrc/elpa1/elpa1_trans_ev_template.F90 \\\n\tsrc/elpa1/elpa1_tridiag_template.F90 \\\n\tsrc/elpa1/elpa_cholesky_template.F90 \\\n\tsrc/elpa1/elpa_invert_trm.F90 src/elpa1/elpa_multiply_a_b.F90 \\\n\tsrc/elpa1/elpa_reduce_add_vectors.F90 \\\n\tsrc/elpa1/elpa_solve_tridi_impl_public.F90 \\\n\tsrc/elpa1/elpa_transpose_vectors.F90 \\\n\tsrc/elpa2/GPU/ev_tridi_band_gpu_c_v2_complex_template.cu \\\n\tsrc/elpa2/GPU/ev_tridi_band_gpu_c_v2_real_template.cu \\\n\tsrc/elpa2/compute_hh_trafo.F90 \\\n\tsrc/elpa2/elpa2_bandred_template.F90 \\\n\tsrc/elpa2/elpa2_compute_complex_template.F90 \\\n\tsrc/elpa2/elpa2_compute_real_template.F90 \\\n\tsrc/elpa2/elpa2_herm_matrix_allreduce_complex_template.F90 \\\n\tsrc/elpa2/elpa2_symm_matrix_allreduce_real_template.F90 \\\n\tsrc/elpa2/elpa2_template.F90 \\\n\tsrc/elpa2/elpa2_trans_ev_band_to_full_template.F90 \\\n\tsrc/elpa2/elpa2_trans_ev_tridi_to_band_template.F90 \\\n\tsrc/elpa2/elpa2_tridiag_band_template.F90 \\\n\tsrc/elpa2/kernels/complex_128bit_256bit_512bit_BLOCK_template.c \\\n\tsrc/elpa2/kernels/complex_template.F90 \\\n\tsrc/elpa2/kernels/real_128bit_256bit_512bit_BLOCK_template.c \\\n\tsrc/elpa2/kernels/real_template.F90 \\\n\tsrc/elpa2/kernels/simple_template.F90 \\\n\tsrc/elpa2/kernels/simple_block4_template.F90 \\\n\tsrc/elpa2/kernels/simple_block6_template.F90 \\\n\tsrc/elpa2/pack_unpack_cpu.F90 src/elpa2/pack_unpack_gpu.F90 \\\n\tsrc/elpa2/qr/elpa_pdgeqrf_template.F90 \\\n\tsrc/elpa2/qr/elpa_pdlarfb_template.F90 \\\n\tsrc/elpa2/qr/elpa_qrkernels_template.F90 \\\n\tsrc/elpa2/qr/qr_utils_template.F90 src/elpa2/redist_band.F90 \\\n\tsrc/elpa_generalized/cannon_forw_template.c \\\n\tsrc/elpa_generalized/cannon_back_template.c src/elpa_index.h \\\n\tsrc/fortran_constants.h src/general/map_global_to_local.F90 \\\n\tsrc/general/precision_macros.h \\\n\tsrc/general/precision_typedefs.h \\\n\tsrc/general/precision_kinds.F90 \\\n\ttest/shared/test_precision_kinds.F90 src/general/prow_pcol.F90 \\\n\tsrc/general/sanity.F90 src/general/elpa_ssr2_template.F90 \\\n\tsrc/general/elpa_ssmv_template.F90 test/Fortran/assert.h \\\n\ttest/Fortran/elpa_print_headers.F90 \\\n\ttest/shared/test_check_correctness_template.F90 \\\n\ttest/shared/test_prepare_matrix_template.F90 \\\n\ttest/shared/test_analytic_template.F90 \\\n\ttest_project_1stage/Makefile.am test_project_1stage/autogen.sh \\\n\ttest_project_1stage/configure.ac test_project_1stage/fdep \\\n\ttest_project_1stage/m4 test_project_1stage/src/test_real.F90 \\\n\ttest_project_2stage/Makefile.am test_project_2stage/autogen.sh \\\n\ttest_project_2stage/configure.ac test_project_2stage/fdep \\\n\ttest_project_2stage/m4 test_project_2stage/src/test_real2.F90 \\\n\ttest_project_C/Makefile.am test_project_C/autogen.sh \\\n\ttest_project_C/configure.ac test_project_C/fdep \\\n\ttest_project_C/m4 test_project_C/src/test_real.c \\\n\ttest_project_C/src/test_blacs_infrastructure.F90 \\\n\t$(am__append_830) python/pyelpa/__init__.py \\\n\tpython/pyelpa/distributedmatrix.py python/pyelpa/wrapper.pyx \\\n\tpython/tests/test_elpa_import.py python/tests/test_mpi4py.py \\\n\tpython/tests/test_numroc.py python/tests/test_with_mpi.py\nLIBTOOL_DEPS = @LIBTOOL_DEPS@\nall: $(BUILT_SOURCES) config.h\n\t$(MAKE) $(AM_MAKEFLAGS) all-am\n\n.SUFFIXES:\n.SUFFIXES: .F90 .c .cu .f90 .lo .log .o .obj .s .test .test$(EXEEXT) .trs\nam--refresh: Makefile\n\t@:\n$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/generated_headers.am $(srcdir)/test_programs.am $(srcdir)/doxygen.am $(am__configure_deps)\n\t@for dep in $?; do \\\n\t  case '$(am__configure_deps)' in \\\n\t    *$$dep*) \\\n\t      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \\\n\t      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \\\n\t\t&& exit 0; \\\n\t      exit 1;; \\\n\t  esac; \\\n\tdone; \\\n\techo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \\\n\t$(am__cd) $(top_srcdir) && \\\n\t  $(AUTOMAKE) --foreign Makefile\nMakefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n\t@case '$?' in \\\n\t  *config.status*) \\\n\t    echo ' $(SHELL) ./config.status'; \\\n\t    $(SHELL) ./config.status;; \\\n\t  *) \\\n\t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles)'; \\\n\t    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles);; \\\n\tesac;\n$(srcdir)/generated_headers.am $(srcdir)/test_programs.am $(srcdir)/doxygen.am $(am__empty):\n\n$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n\t$(SHELL) ./config.status --recheck\n\n$(top_srcdir)/configure:  $(am__configure_deps)\n\t$(am__cd) $(srcdir) && $(AUTOCONF)\n$(ACLOCAL_M4):  $(am__aclocal_m4_deps)\n\t$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)\n$(am__aclocal_m4_deps):\n\nconfig.h: stamp-h1\n\t@test -f $@ || rm -f stamp-h1\n\t@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1\n\nstamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status\n\t@rm -f stamp-h1\n\tcd $(top_builddir) && $(SHELL) ./config.status config.h\n$(srcdir)/config.h.in:  $(am__configure_deps) \n\t($(am__cd) $(top_srcdir) && $(AUTOHEADER))\n\trm -f stamp-h1\n\ttouch $@\n\ndistclean-hdr:\n\t-rm -f config.h stamp-h1\nDoxyfile: $(top_builddir)/config.status $(srcdir)/Doxyfile.in\n\tcd $(top_builddir) && $(SHELL) ./config.status $@\n${PKG_CONFIG_FILE}: $(top_builddir)/config.status $(srcdir)/elpa.pc.in\n\tcd $(top_builddir) && $(SHELL) ./config.status $@\nelpa/elpa_constants.h: $(top_builddir)/config.status $(top_srcdir)/elpa/elpa_constants.h.in\n\tcd $(top_builddir) && $(SHELL) ./config.status $@\nelpa/elpa_version.h: $(top_builddir)/config.status $(top_srcdir)/elpa/elpa_version.h.in\n\tcd $(top_builddir) && $(SHELL) ./config.status $@\nelpa/elpa_build_config.h: $(top_builddir)/config.status $(top_srcdir)/elpa/elpa_build_config.h.in\n\tcd $(top_builddir) && $(SHELL) ./config.status $@\ninstall-binPROGRAMS: $(bin_PROGRAMS)\n\t@$(NORMAL_INSTALL)\n\t@list='$(bin_PROGRAMS)'; test -n \"$(bindir)\" || list=; \\\n\tif test -n \"$$list\"; then \\\n\t  echo \" $(MKDIR_P) '$(DESTDIR)$(bindir)'\"; \\\n\t  $(MKDIR_P) \"$(DESTDIR)$(bindir)\" || exit 1; \\\n\tfi; \\\n\tfor p in $$list; do echo \"$$p $$p\"; done | \\\n\tsed 's/$(EXEEXT)$$//' | \\\n\twhile read p p1; do if test -f $$p \\\n\t || test -f $$p1 \\\n\t  ; then echo \"$$p\"; echo \"$$p\"; else :; fi; \\\n\tdone | \\\n\tsed -e 'p;s,.*/,,;n;h' \\\n\t    -e 's|.*|.|' \\\n\t    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \\\n\tsed 'N;N;N;s,\\n, ,g' | \\\n\t$(AWK) 'BEGIN { files[\".\"] = \"\"; dirs[\".\"] = 1 } \\\n\t  { d=$$3; if (dirs[d] != 1) { print \"d\", d; dirs[d] = 1 } \\\n\t    if ($$2 == $$4) files[d] = files[d] \" \" $$1; \\\n\t    else { print \"f\", $$3 \"/\" $$4, $$1; } } \\\n\t  END { for (d in files) print \"f\", d, files[d] }' | \\\n\twhile read type dir files; do \\\n\t    if test \"$$dir\" = .; then dir=; else dir=/$$dir; fi; \\\n\t    test -z \"$$files\" || { \\\n\t    echo \" $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'\"; \\\n\t    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files \"$(DESTDIR)$(bindir)$$dir\" || exit $$?; \\\n\t    } \\\n\t; done\n\nuninstall-binPROGRAMS:\n\t@$(NORMAL_UNINSTALL)\n\t@list='$(bin_PROGRAMS)'; test -n \"$(bindir)\" || list=; \\\n\tfiles=`for p in $$list; do echo \"$$p\"; done | \\\n\t  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \\\n\t      -e 's/$$/$(EXEEXT)/' \\\n\t`; \\\n\ttest -n \"$$list\" || exit 0; \\\n\techo \" ( cd '$(DESTDIR)$(bindir)' && rm -f\" $$files \")\"; \\\n\tcd \"$(DESTDIR)$(bindir)\" && rm -f $$files\n\nclean-binPROGRAMS:\n\t@list='$(bin_PROGRAMS)'; test -n \"$$list\" || exit 0; \\\n\techo \" rm -f\" $$list; \\\n\trm -f $$list || exit $$?; \\\n\ttest -n \"$(EXEEXT)\" || exit 0; \\\n\tlist=`for p in $$list; do echo \"$$p\"; done | sed 's/$(EXEEXT)$$//'`; \\\n\techo \" rm -f\" $$list; \\\n\trm -f $$list\n\nclean-noinstPROGRAMS:\n\t@list='$(noinst_PROGRAMS)'; test -n \"$$list\" || exit 0; \\\n\techo \" rm -f\" $$list; \\\n\trm -f $$list || exit $$?; \\\n\ttest -n \"$(EXEEXT)\" || exit 0; \\\n\tlist=`for p in $$list; do echo \"$$p\"; done | sed 's/$(EXEEXT)$$//'`; \\\n\techo \" rm -f\" $$list; \\\n\trm -f $$list\n\ninstall-libLTLIBRARIES: $(lib_LTLIBRARIES)\n\t@$(NORMAL_INSTALL)\n\t@list='$(lib_LTLIBRARIES)'; test -n \"$(libdir)\" || list=; \\\n\tlist2=; for p in $$list; do \\\n\t  if test -f $$p; then \\\n\t    list2=\"$$list2 $$p\"; \\\n\t  else :; fi; \\\n\tdone; \\\n\ttest -z \"$$list2\" || { \\\n\t  echo \" $(MKDIR_P) '$(DESTDIR)$(libdir)'\"; \\\n\t  $(MKDIR_P) \"$(DESTDIR)$(libdir)\" || exit 1; \\\n\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'\"; \\\n\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 \"$(DESTDIR)$(libdir)\"; \\\n\t}\n\nuninstall-libLTLIBRARIES:\n\t@$(NORMAL_UNINSTALL)\n\t@list='$(lib_LTLIBRARIES)'; test -n \"$(libdir)\" || list=; \\\n\tfor p in $$list; do \\\n\t  $(am__strip_dir) \\\n\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'\"; \\\n\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f \"$(DESTDIR)$(libdir)/$$f\"; \\\n\tdone\n\nclean-libLTLIBRARIES:\n\t-test -z \"$(lib_LTLIBRARIES)\" || rm -f $(lib_LTLIBRARIES)\n\t@list='$(lib_LTLIBRARIES)'; \\\n\tlocs=`for p in $$list; do echo $$p; done | \\\n\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n\t      sort -u`; \\\n\ttest -z \"$$locs\" || { \\\n\t  echo rm -f $${locs}; \\\n\t  rm -f $${locs}; \\\n\t}\n\nclean-noinstLTLIBRARIES:\n\t-test -z \"$(noinst_LTLIBRARIES)\" || rm -f $(noinst_LTLIBRARIES)\n\t@list='$(noinst_LTLIBRARIES)'; \\\n\tlocs=`for p in $$list; do echo $$p; done | \\\n\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n\t      sort -u`; \\\n\ttest -z \"$$locs\" || { \\\n\t  echo rm -f $${locs}; \\\n\t  rm -f $${locs}; \\\n\t}\n\ninstall-pyelpaLTLIBRARIES: $(pyelpa_LTLIBRARIES)\n\t@$(NORMAL_INSTALL)\n\t@list='$(pyelpa_LTLIBRARIES)'; test -n \"$(pyelpadir)\" || list=; \\\n\tlist2=; for p in $$list; do \\\n\t  if test -f $$p; then \\\n\t    list2=\"$$list2 $$p\"; \\\n\t  else :; fi; \\\n\tdone; \\\n\ttest -z \"$$list2\" || { \\\n\t  echo \" $(MKDIR_P) '$(DESTDIR)$(pyelpadir)'\"; \\\n\t  $(MKDIR_P) \"$(DESTDIR)$(pyelpadir)\" || exit 1; \\\n\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(pyelpadir)'\"; \\\n\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 \"$(DESTDIR)$(pyelpadir)\"; \\\n\t}\n\nuninstall-pyelpaLTLIBRARIES:\n\t@$(NORMAL_UNINSTALL)\n\t@list='$(pyelpa_LTLIBRARIES)'; test -n \"$(pyelpadir)\" || list=; \\\n\tfor p in $$list; do \\\n\t  $(am__strip_dir) \\\n\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(pyelpadir)/$$f'\"; \\\n\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f \"$(DESTDIR)$(pyelpadir)/$$f\"; \\\n\tdone\n\nclean-pyelpaLTLIBRARIES:\n\t-test -z \"$(pyelpa_LTLIBRARIES)\" || rm -f $(pyelpa_LTLIBRARIES)\n\t@list='$(pyelpa_LTLIBRARIES)'; \\\n\tlocs=`for p in $$list; do echo $$p; done | \\\n\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n\t      sort -u`; \\\n\ttest -z \"$$locs\" || { \\\n\t  echo rm -f $${locs}; \\\n\t  rm -f $${locs}; \\\n\t}\n\nlibelpa@SUFFIX@.la: $(libelpa@SUFFIX@_la_OBJECTS) $(libelpa@SUFFIX@_la_DEPENDENCIES) $(EXTRA_libelpa@SUFFIX@_la_DEPENDENCIES) \n\t$(AM_V_GEN)$(libelpa@SUFFIX@_la_LINK) -rpath $(libdir) $(libelpa@SUFFIX@_la_OBJECTS) $(libelpa@SUFFIX@_la_LIBADD) $(LIBS)\nsrc/$(am__dirstamp):\n\t@$(MKDIR_P) src\n\t@: > src/$(am__dirstamp)\nsrc/$(DEPDIR)/$(am__dirstamp):\n\t@$(MKDIR_P) src/$(DEPDIR)\n\t@: > src/$(DEPDIR)/$(am__dirstamp)\nsrc/libelpa@SUFFIX@_private_la-elpa_impl.lo: src/$(am__dirstamp) \\\n\tsrc/$(DEPDIR)/$(am__dirstamp)\nsrc/libelpa@SUFFIX@_private_la-elpa_autotune_impl.lo:  \\\n\tsrc/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)\nsrc/libelpa@SUFFIX@_private_la-elpa_abstract_impl.lo:  \\\n\tsrc/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)\nsrc/helpers/$(am__dirstamp):\n\t@$(MKDIR_P) src/helpers\n\t@: > src/helpers/$(am__dirstamp)\nsrc/helpers/$(DEPDIR)/$(am__dirstamp):\n\t@$(MKDIR_P) src/helpers/$(DEPDIR)\n\t@: > src/helpers/$(DEPDIR)/$(am__dirstamp)\nsrc/helpers/libelpa@SUFFIX@_private_la-mod_precision.lo:  \\\n\tsrc/helpers/$(am__dirstamp) \\\n\tsrc/helpers/$(DEPDIR)/$(am__dirstamp)\nsrc/helpers/libelpa@SUFFIX@_private_la-mod_blas_interfaces.lo:  \\\n\tsrc/helpers/$(am__dirstamp) \\\n\tsrc/helpers/$(DEPDIR)/$(am__dirstamp)\nsrc/helpers/libelpa@SUFFIX@_private_la-mod_scalapack_interfaces.lo:  \\\n\tsrc/helpers/$(am__dirstamp) \\\n\tsrc/helpers/$(DEPDIR)/$(am__dirstamp)\nsrc/helpers/libelpa@SUFFIX@_private_la-mod_mpi.lo:  \\\n\tsrc/helpers/$(am__dirstamp) \\\n\tsrc/helpers/$(DEPDIR)/$(am__dirstamp)\nsrc/helpers/libelpa@SUFFIX@_private_la-mod_mpi_stubs.lo:  \\\n\tsrc/helpers/$(am__dirstamp) \\\n\tsrc/helpers/$(DEPDIR)/$(am__dirstamp)\nsrc/helpers/libelpa@SUFFIX@_private_la-mod_omp.lo:  \\\n\tsrc/helpers/$(am__dirstamp) \\\n\tsrc/helpers/$(DEPDIR)/$(am__dirstamp)\nsrc/libelpa@SUFFIX@_private_la-elpa_generated_fortran_interfaces.lo:  \\\n\tsrc/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/$(am__dirstamp):\n\t@$(MKDIR_P) src/elpa2\n\t@: > src/elpa2/$(am__dirstamp)\nsrc/elpa2/$(DEPDIR)/$(am__dirstamp):\n\t@$(MKDIR_P) src/elpa2/$(DEPDIR)\n\t@: > src/elpa2/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/libelpa@SUFFIX@_private_la-mod_redist_band.lo:  \\\n\tsrc/elpa2/$(am__dirstamp) src/elpa2/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/libelpa@SUFFIX@_private_la-mod_pack_unpack_cpu.lo:  \\\n\tsrc/elpa2/$(am__dirstamp) src/elpa2/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/libelpa@SUFFIX@_private_la-mod_compute_hh_trafo.lo:  \\\n\tsrc/elpa2/$(am__dirstamp) src/elpa2/$(DEPDIR)/$(am__dirstamp)\nsrc/helpers/libelpa@SUFFIX@_private_la-aligned_mem.lo:  \\\n\tsrc/helpers/$(am__dirstamp) \\\n\tsrc/helpers/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa1/$(am__dirstamp):\n\t@$(MKDIR_P) src/elpa1\n\t@: > src/elpa1/$(am__dirstamp)\nsrc/elpa1/$(DEPDIR)/$(am__dirstamp):\n\t@$(MKDIR_P) src/elpa1/$(DEPDIR)\n\t@: > src/elpa1/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa1/libelpa@SUFFIX@_private_la-elpa1_compute_private.lo:  \\\n\tsrc/elpa1/$(am__dirstamp) src/elpa1/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa1/libelpa@SUFFIX@_private_la-elpa1_auxiliary.lo:  \\\n\tsrc/elpa1/$(am__dirstamp) src/elpa1/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/libelpa@SUFFIX@_private_la-elpa2_determine_workload.lo:  \\\n\tsrc/elpa2/$(am__dirstamp) src/elpa2/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/libelpa@SUFFIX@_private_la-elpa2_compute.lo:  \\\n\tsrc/elpa2/$(am__dirstamp) src/elpa2/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/$(am__dirstamp):\n\t@$(MKDIR_P) src/elpa2/kernels\n\t@: > src/elpa2/kernels/$(am__dirstamp)\nsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp):\n\t@$(MKDIR_P) src/elpa2/kernels/$(DEPDIR)\n\t@: > src/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/libelpa@SUFFIX@_private_la-mod_single_hh_trafo_real.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/GPU/$(am__dirstamp):\n\t@$(MKDIR_P) src/GPU\n\t@: > src/GPU/$(am__dirstamp)\nsrc/GPU/$(DEPDIR)/$(am__dirstamp):\n\t@$(MKDIR_P) src/GPU/$(DEPDIR)\n\t@: > src/GPU/$(DEPDIR)/$(am__dirstamp)\nsrc/GPU/libelpa@SUFFIX@_private_la-check_for_gpu.lo:  \\\n\tsrc/GPU/$(am__dirstamp) src/GPU/$(DEPDIR)/$(am__dirstamp)\nsrc/GPU/libelpa@SUFFIX@_private_la-mod_cuda.lo:  \\\n\tsrc/GPU/$(am__dirstamp) src/GPU/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/GPU/$(am__dirstamp):\n\t@$(MKDIR_P) src/elpa2/GPU\n\t@: > src/elpa2/GPU/$(am__dirstamp)\nsrc/elpa2/GPU/$(DEPDIR)/$(am__dirstamp):\n\t@$(MKDIR_P) src/elpa2/GPU/$(DEPDIR)\n\t@: > src/elpa2/GPU/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/GPU/libelpa@SUFFIX@_private_la-interface_c_kernel.lo:  \\\n\tsrc/elpa2/GPU/$(am__dirstamp) \\\n\tsrc/elpa2/GPU/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/libelpa@SUFFIX@_private_la-mod_pack_unpack_gpu.lo:  \\\n\tsrc/elpa2/$(am__dirstamp) src/elpa2/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/qr/$(am__dirstamp):\n\t@$(MKDIR_P) src/elpa2/qr\n\t@: > src/elpa2/qr/$(am__dirstamp)\nsrc/elpa2/qr/$(DEPDIR)/$(am__dirstamp):\n\t@$(MKDIR_P) src/elpa2/qr/$(DEPDIR)\n\t@: > src/elpa2/qr/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/qr/libelpa@SUFFIX@_private_la-qr_utils.lo:  \\\n\tsrc/elpa2/qr/$(am__dirstamp) \\\n\tsrc/elpa2/qr/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/qr/libelpa@SUFFIX@_private_la-elpa_qrkernels.lo:  \\\n\tsrc/elpa2/qr/$(am__dirstamp) \\\n\tsrc/elpa2/qr/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/qr/libelpa@SUFFIX@_private_la-elpa_pdlarfb.lo:  \\\n\tsrc/elpa2/qr/$(am__dirstamp) \\\n\tsrc/elpa2/qr/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/qr/libelpa@SUFFIX@_private_la-elpa_pdgeqrf.lo:  \\\n\tsrc/elpa2/qr/$(am__dirstamp) \\\n\tsrc/elpa2/qr/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa1/libelpa@SUFFIX@_private_la-elpa1.lo:  \\\n\tsrc/elpa1/$(am__dirstamp) src/elpa1/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/libelpa@SUFFIX@_private_la-elpa2.lo:  \\\n\tsrc/elpa2/$(am__dirstamp) src/elpa2/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa_generalized/$(am__dirstamp):\n\t@$(MKDIR_P) src/elpa_generalized\n\t@: > src/elpa_generalized/$(am__dirstamp)\nsrc/elpa_generalized/$(DEPDIR)/$(am__dirstamp):\n\t@$(MKDIR_P) src/elpa_generalized/$(DEPDIR)\n\t@: > src/elpa_generalized/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa_generalized/cannon.lo: src/elpa_generalized/$(am__dirstamp) \\\n\tsrc/elpa_generalized/$(DEPDIR)/$(am__dirstamp)\nsrc/helpers/libelpa@SUFFIX@_private_la-matrix_plot.lo:  \\\n\tsrc/helpers/$(am__dirstamp) \\\n\tsrc/helpers/$(DEPDIR)/$(am__dirstamp)\nsrc/general/$(am__dirstamp):\n\t@$(MKDIR_P) src/general\n\t@: > src/general/$(am__dirstamp)\nsrc/general/$(DEPDIR)/$(am__dirstamp):\n\t@$(MKDIR_P) src/general/$(DEPDIR)\n\t@: > src/general/$(DEPDIR)/$(am__dirstamp)\nsrc/general/libelpa@SUFFIX@_private_la-mod_elpa_skewsymmetric_blas.lo:  \\\n\tsrc/general/$(am__dirstamp) \\\n\tsrc/general/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa_index.lo: src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa_c_interface.lo: src/$(am__dirstamp) \\\n\tsrc/$(DEPDIR)/$(am__dirstamp)\nsrc/general/libelpa@SUFFIX@_private_la-elpa_utilities.lo:  \\\n\tsrc/general/$(am__dirstamp) \\\n\tsrc/general/$(DEPDIR)/$(am__dirstamp)\nsrc/ftimings/$(am__dirstamp):\n\t@$(MKDIR_P) src/ftimings\n\t@: > src/ftimings/$(am__dirstamp)\nsrc/ftimings/$(DEPDIR)/$(am__dirstamp):\n\t@$(MKDIR_P) src/ftimings/$(DEPDIR)\n\t@: > src/ftimings/$(DEPDIR)/$(am__dirstamp)\nsrc/ftimings/libelpa@SUFFIX@_private_la-ftimings.lo:  \\\n\tsrc/ftimings/$(am__dirstamp) \\\n\tsrc/ftimings/$(DEPDIR)/$(am__dirstamp)\nsrc/ftimings/libelpa@SUFFIX@_private_la-ftimings_type.lo:  \\\n\tsrc/ftimings/$(am__dirstamp) \\\n\tsrc/ftimings/$(DEPDIR)/$(am__dirstamp)\nsrc/ftimings/libelpa@SUFFIX@_private_la-ftimings_value.lo:  \\\n\tsrc/ftimings/$(am__dirstamp) \\\n\tsrc/ftimings/$(DEPDIR)/$(am__dirstamp)\nsrc/ftimings/highwater_mark.lo: src/ftimings/$(am__dirstamp) \\\n\tsrc/ftimings/$(DEPDIR)/$(am__dirstamp)\nsrc/ftimings/resident_set_size.lo: src/ftimings/$(am__dirstamp) \\\n\tsrc/ftimings/$(DEPDIR)/$(am__dirstamp)\nsrc/ftimings/time.lo: src/ftimings/$(am__dirstamp) \\\n\tsrc/ftimings/$(DEPDIR)/$(am__dirstamp)\nsrc/ftimings/virtual_memory.lo: src/ftimings/$(am__dirstamp) \\\n\tsrc/ftimings/$(DEPDIR)/$(am__dirstamp)\nsrc/ftimings/papi.lo: src/ftimings/$(am__dirstamp) \\\n\tsrc/ftimings/$(DEPDIR)/$(am__dirstamp)\nsrc/helpers/libelpa@SUFFIX@_private_la-timer_dummy.lo:  \\\n\tsrc/helpers/$(am__dirstamp) \\\n\tsrc/helpers/$(DEPDIR)/$(am__dirstamp)\nsrc/GPU/cudaFunctions.lo: src/GPU/$(am__dirstamp) \\\n\tsrc/GPU/$(DEPDIR)/$(am__dirstamp)\nsrc/GPU/cuUtils.lo: src/GPU/$(am__dirstamp) \\\n\tsrc/GPU/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/GPU/ev_tridi_band_gpu_c_v2.lo:  \\\n\tsrc/elpa2/GPU/$(am__dirstamp) \\\n\tsrc/elpa2/GPU/$(DEPDIR)/$(am__dirstamp)\nsrc/helpers/libelpa@SUFFIX@_private_la-mod_time_c.lo:  \\\n\tsrc/helpers/$(am__dirstamp) \\\n\tsrc/helpers/$(DEPDIR)/$(am__dirstamp)\nsrc/helpers/get_cpuid_set.lo: src/helpers/$(am__dirstamp) \\\n\tsrc/helpers/$(DEPDIR)/$(am__dirstamp)\nsrc/helpers/libelpa@SUFFIX@_private_la-mod_simd_kernel.lo:  \\\n\tsrc/helpers/$(am__dirstamp) \\\n\tsrc/helpers/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/libelpa@SUFFIX@_private_la-real.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/libelpa@SUFFIX@_private_la-complex.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/libelpa@SUFFIX@_private_la-real_simple.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/libelpa@SUFFIX@_private_la-complex_simple.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/libelpa@SUFFIX@_private_la-real_simple_block4.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/libelpa@SUFFIX@_private_la-real_simple_block6.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/libelpa@SUFFIX@_private_la-real_bgp.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/libelpa@SUFFIX@_private_la-real_bgq.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/asm_x86_64_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/asm_x86_64_single_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_sparc64_2hv_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_neon_arch64_2hv_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_neon_arch64_2hv_single_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_vsx_2hv_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_vsx_2hv_single_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_sse_2hv_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_sse_2hv_single_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_avx-avx2_2hv_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_avx-avx2_2hv_single_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_avx512_2hv_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_avx512_2hv_single_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_sparc64_4hv_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_neon_arch64_4hv_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_neon_arch64_4hv_single_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_vsx_4hv_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_vsx_4hv_single_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_sse_4hv_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_sse_4hv_single_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_avx-avx2_4hv_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_avx-avx2_4hv_single_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_avx512_4hv_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_avx512_4hv_single_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_sparc64_6hv_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_neon_arch64_6hv_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_neon_arch64_6hv_single_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_vsx_6hv_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_vsx_6hv_single_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_sse_6hv_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_sse_6hv_single_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_avx-avx2_6hv_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_avx-avx2_6hv_single_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_avx512_6hv_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/real_avx512_6hv_single_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/complex_sse_1hv_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/complex_sse_1hv_single_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/complex_avx-avx2_1hv_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/complex_avx-avx2_1hv_single_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/complex_avx512_1hv_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/complex_avx512_1hv_single_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/complex_sse_2hv_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/complex_sse_2hv_single_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/complex_avx-avx2_2hv_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/complex_avx-avx2_2hv_single_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/complex_avx512_2hv_double_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/elpa2/kernels/complex_avx512_2hv_single_precision.lo:  \\\n\tsrc/elpa2/kernels/$(am__dirstamp) \\\n\tsrc/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\nsrc/helpers/print_build_config.lo: src/helpers/$(am__dirstamp) \\\n\tsrc/helpers/$(DEPDIR)/$(am__dirstamp)\n\nlibelpa@SUFFIX@_private.la: $(libelpa@SUFFIX@_private_la_OBJECTS) $(libelpa@SUFFIX@_private_la_DEPENDENCIES) $(EXTRA_libelpa@SUFFIX@_private_la_DEPENDENCIES) \n\t$(AM_V_FCLD)$(libelpa@SUFFIX@_private_la_LINK)  $(libelpa@SUFFIX@_private_la_OBJECTS) $(libelpa@SUFFIX@_private_la_LIBADD) $(LIBS)\nsrc/libelpa@SUFFIX@_public_la-elpa.lo: src/$(am__dirstamp) \\\n\tsrc/$(DEPDIR)/$(am__dirstamp)\nsrc/libelpa@SUFFIX@_public_la-elpa_api.lo: src/$(am__dirstamp) \\\n\tsrc/$(DEPDIR)/$(am__dirstamp)\nsrc/libelpa@SUFFIX@_public_la-elpa_constants.lo: src/$(am__dirstamp) \\\n\tsrc/$(DEPDIR)/$(am__dirstamp)\n\nlibelpa@SUFFIX@_public.la: $(libelpa@SUFFIX@_public_la_OBJECTS) $(libelpa@SUFFIX@_public_la_DEPENDENCIES) $(EXTRA_libelpa@SUFFIX@_public_la_DEPENDENCIES) \n\t$(AM_V_FCLD)$(libelpa@SUFFIX@_public_la_LINK)  $(libelpa@SUFFIX@_public_la_OBJECTS) $(libelpa@SUFFIX@_public_la_LIBADD) $(LIBS)\ntest/shared/$(am__dirstamp):\n\t@$(MKDIR_P) test/shared\n\t@: > test/shared/$(am__dirstamp)\ntest/shared/$(DEPDIR)/$(am__dirstamp):\n\t@$(MKDIR_P) test/shared/$(DEPDIR)\n\t@: > test/shared/$(DEPDIR)/$(am__dirstamp)\ntest/shared/libelpatest@SUFFIX@_la-tests_variable_definitions.lo:  \\\n\ttest/shared/$(am__dirstamp) \\\n\ttest/shared/$(DEPDIR)/$(am__dirstamp)\ntest/shared/libelpatest@SUFFIX@_la-mod_tests_scalapack_interfaces.lo:  \\\n\ttest/shared/$(am__dirstamp) \\\n\ttest/shared/$(DEPDIR)/$(am__dirstamp)\ntest/shared/libelpatest@SUFFIX@_la-mod_tests_blas_interfaces.lo:  \\\n\ttest/shared/$(am__dirstamp) \\\n\ttest/shared/$(DEPDIR)/$(am__dirstamp)\ntest/shared/libelpatest@SUFFIX@_la-test_util.lo:  \\\n\ttest/shared/$(am__dirstamp) \\\n\ttest/shared/$(DEPDIR)/$(am__dirstamp)\ntest/shared/libelpatest@SUFFIX@_la-test_read_input_parameters.lo:  \\\n\ttest/shared/$(am__dirstamp) \\\n\ttest/shared/$(DEPDIR)/$(am__dirstamp)\ntest/shared/libelpatest@SUFFIX@_la-test_check_correctness.lo:  \\\n\ttest/shared/$(am__dirstamp) \\\n\ttest/shared/$(DEPDIR)/$(am__dirstamp)\ntest/shared/libelpatest@SUFFIX@_la-test_setup_mpi.lo:  \\\n\ttest/shared/$(am__dirstamp) \\\n\ttest/shared/$(DEPDIR)/$(am__dirstamp)\ntest/shared/libelpatest@SUFFIX@_la-test_blacs_infrastructure.lo:  \\\n\ttest/shared/$(am__dirstamp) \\\n\ttest/shared/$(DEPDIR)/$(am__dirstamp)\ntest/shared/libelpatest@SUFFIX@_la-test_prepare_matrix.lo:  \\\n\ttest/shared/$(am__dirstamp) \\\n\ttest/shared/$(DEPDIR)/$(am__dirstamp)\ntest/shared/libelpatest@SUFFIX@_la-test_analytic.lo:  \\\n\ttest/shared/$(am__dirstamp) \\\n\ttest/shared/$(DEPDIR)/$(am__dirstamp)\ntest/shared/libelpatest@SUFFIX@_la-test_output_type.lo:  \\\n\ttest/shared/$(am__dirstamp) \\\n\ttest/shared/$(DEPDIR)/$(am__dirstamp)\ntest/shared/libelpatest@SUFFIX@_la-test_scalapack.lo:  \\\n\ttest/shared/$(am__dirstamp) \\\n\ttest/shared/$(DEPDIR)/$(am__dirstamp)\ntest/shared/test_redir.lo: test/shared/$(am__dirstamp) \\\n\ttest/shared/$(DEPDIR)/$(am__dirstamp)\ntest/shared/libelpatest@SUFFIX@_la-test_redirect.lo:  \\\n\ttest/shared/$(am__dirstamp) \\\n\ttest/shared/$(DEPDIR)/$(am__dirstamp)\n\nlibelpatest@SUFFIX@.la: $(libelpatest@SUFFIX@_la_OBJECTS) $(libelpatest@SUFFIX@_la_DEPENDENCIES) $(EXTRA_libelpatest@SUFFIX@_la_DEPENDENCIES) \n\t$(AM_V_FCLD)$(libelpatest@SUFFIX@_la_LINK)  $(libelpatest@SUFFIX@_la_OBJECTS) $(libelpatest@SUFFIX@_la_LIBADD) $(LIBS)\npython/pyelpa/$(am__dirstamp):\n\t@$(MKDIR_P) python/pyelpa\n\t@: > python/pyelpa/$(am__dirstamp)\npython/pyelpa/$(DEPDIR)/$(am__dirstamp):\n\t@$(MKDIR_P) python/pyelpa/$(DEPDIR)\n\t@: > python/pyelpa/$(DEPDIR)/$(am__dirstamp)\npython/pyelpa/wrapper_la-wrapper.lo: python/pyelpa/$(am__dirstamp) \\\n\tpython/pyelpa/$(DEPDIR)/$(am__dirstamp)\n\nwrapper.la: $(wrapper_la_OBJECTS) $(wrapper_la_DEPENDENCIES) $(EXTRA_wrapper_la_DEPENDENCIES) \n\t$(AM_V_CCLD)$(wrapper_la_LINK) $(am_wrapper_la_rpath) $(wrapper_la_OBJECTS) $(wrapper_la_LIBADD) $(LIBS)\nsrc/elpa2/elpa2_print_kernels@SUFFIX@-elpa2_print_kernels.$(OBJEXT):  \\\n\tsrc/elpa2/$(am__dirstamp) src/elpa2/$(DEPDIR)/$(am__dirstamp)\n\nelpa2_print_kernels@SUFFIX@$(EXEEXT): $(elpa2_print_kernels@SUFFIX@_OBJECTS) $(elpa2_print_kernels@SUFFIX@_DEPENDENCIES) $(EXTRA_elpa2_print_kernels@SUFFIX@_DEPENDENCIES) \n\t@rm -f elpa2_print_kernels@SUFFIX@$(EXEEXT)\n\t$(AM_V_FCLD)$(elpa2_print_kernels@SUFFIX@_LINK) $(elpa2_print_kernels@SUFFIX@_OBJECTS) $(elpa2_print_kernels@SUFFIX@_LDADD) $(LIBS)\ntest/Fortran/$(am__dirstamp):\n\t@$(MKDIR_P) test/Fortran\n\t@: > test/Fortran/$(am__dirstamp)\ntest/Fortran/$(DEPDIR)/$(am__dirstamp):\n\t@$(MKDIR_P) test/Fortran/$(DEPDIR)\n\t@: > test/Fortran/$(DEPDIR)/$(am__dirstamp)\ntest/Fortran/skewsymmetric_real_double-test_skewsymmetric.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\ntest_skewsymmetric_real_double$(EXEEXT): $(test_skewsymmetric_real_double_OBJECTS) $(test_skewsymmetric_real_double_DEPENDENCIES) $(EXTRA_test_skewsymmetric_real_double_DEPENDENCIES) \n\t@rm -f test_skewsymmetric_real_double$(EXEEXT)\n\t$(AM_V_FCLD)$(test_skewsymmetric_real_double_LINK) $(test_skewsymmetric_real_double_OBJECTS) $(test_skewsymmetric_real_double_LDADD) $(LIBS)\ntest/Fortran/skewsymmetric_real_single-test_skewsymmetric.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\ntest_skewsymmetric_real_single$(EXEEXT): $(test_skewsymmetric_real_single_OBJECTS) $(test_skewsymmetric_real_single_DEPENDENCIES) $(EXTRA_test_skewsymmetric_real_single_DEPENDENCIES) \n\t@rm -f test_skewsymmetric_real_single$(EXEEXT)\n\t$(AM_V_FCLD)$(test_skewsymmetric_real_single_LINK) $(test_skewsymmetric_real_single_OBJECTS) $(test_skewsymmetric_real_single_LDADD) $(LIBS)\ntest/C/$(am__dirstamp):\n\t@$(MKDIR_P) test/C\n\t@: > test/C/$(am__dirstamp)\ntest/C/$(DEPDIR)/$(am__dirstamp):\n\t@$(MKDIR_P) test/C/$(DEPDIR)\n\t@: > test/C/$(DEPDIR)/$(am__dirstamp)\ntest/C/validate_autotune_c_version_complex_double-test_autotune.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_autotune_c_version_complex_double$(EXEEXT): $(validate_autotune_c_version_complex_double_OBJECTS) $(validate_autotune_c_version_complex_double_DEPENDENCIES) $(EXTRA_validate_autotune_c_version_complex_double_DEPENDENCIES) \n\t@rm -f validate_autotune_c_version_complex_double$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_autotune_c_version_complex_double_LINK) $(validate_autotune_c_version_complex_double_OBJECTS) $(validate_autotune_c_version_complex_double_LDADD) $(LIBS)\ntest/C/validate_autotune_c_version_complex_single-test_autotune.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_autotune_c_version_complex_single$(EXEEXT): $(validate_autotune_c_version_complex_single_OBJECTS) $(validate_autotune_c_version_complex_single_DEPENDENCIES) $(EXTRA_validate_autotune_c_version_complex_single_DEPENDENCIES) \n\t@rm -f validate_autotune_c_version_complex_single$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_autotune_c_version_complex_single_LINK) $(validate_autotune_c_version_complex_single_OBJECTS) $(validate_autotune_c_version_complex_single_LDADD) $(LIBS)\ntest/C/validate_autotune_c_version_real_double-test_autotune.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_autotune_c_version_real_double$(EXEEXT): $(validate_autotune_c_version_real_double_OBJECTS) $(validate_autotune_c_version_real_double_DEPENDENCIES) $(EXTRA_validate_autotune_c_version_real_double_DEPENDENCIES) \n\t@rm -f validate_autotune_c_version_real_double$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_autotune_c_version_real_double_LINK) $(validate_autotune_c_version_real_double_OBJECTS) $(validate_autotune_c_version_real_double_LDADD) $(LIBS)\ntest/C/validate_autotune_c_version_real_single-test_autotune.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_autotune_c_version_real_single$(EXEEXT): $(validate_autotune_c_version_real_single_OBJECTS) $(validate_autotune_c_version_real_single_DEPENDENCIES) $(EXTRA_validate_autotune_c_version_real_single_DEPENDENCIES) \n\t@rm -f validate_autotune_c_version_real_single$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_autotune_c_version_real_single_LINK) $(validate_autotune_c_version_real_single_OBJECTS) $(validate_autotune_c_version_real_single_LDADD) $(LIBS)\ntest/Fortran/validate_autotune_complex_double-test_autotune.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_autotune_complex_double$(EXEEXT): $(validate_autotune_complex_double_OBJECTS) $(validate_autotune_complex_double_DEPENDENCIES) $(EXTRA_validate_autotune_complex_double_DEPENDENCIES) \n\t@rm -f validate_autotune_complex_double$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_autotune_complex_double_LINK) $(validate_autotune_complex_double_OBJECTS) $(validate_autotune_complex_double_LDADD) $(LIBS)\ntest/Fortran/validate_autotune_complex_single-test_autotune.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_autotune_complex_single$(EXEEXT): $(validate_autotune_complex_single_OBJECTS) $(validate_autotune_complex_single_DEPENDENCIES) $(EXTRA_validate_autotune_complex_single_DEPENDENCIES) \n\t@rm -f validate_autotune_complex_single$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_autotune_complex_single_LINK) $(validate_autotune_complex_single_OBJECTS) $(validate_autotune_complex_single_LDADD) $(LIBS)\ntest/Fortran/validate_autotune_real_double-test_autotune.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_autotune_real_double$(EXEEXT): $(validate_autotune_real_double_OBJECTS) $(validate_autotune_real_double_DEPENDENCIES) $(EXTRA_validate_autotune_real_double_DEPENDENCIES) \n\t@rm -f validate_autotune_real_double$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_autotune_real_double_LINK) $(validate_autotune_real_double_OBJECTS) $(validate_autotune_real_double_LDADD) $(LIBS)\ntest/Fortran/validate_autotune_real_single-test_autotune.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_autotune_real_single$(EXEEXT): $(validate_autotune_real_single_OBJECTS) $(validate_autotune_real_single_DEPENDENCIES) $(EXTRA_validate_autotune_real_single_DEPENDENCIES) \n\t@rm -f validate_autotune_real_single$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_autotune_real_single_LINK) $(validate_autotune_real_single_OBJECTS) $(validate_autotune_real_single_LDADD) $(LIBS)\ntest/C/validate_c_version_complex_double_eigenvectors_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_complex_double_eigenvectors_1stage_gpu_random$(EXEEXT): $(validate_c_version_complex_double_eigenvectors_1stage_gpu_random_OBJECTS) $(validate_c_version_complex_double_eigenvectors_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_c_version_complex_double_eigenvectors_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_c_version_complex_double_eigenvectors_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_complex_double_eigenvectors_1stage_gpu_random_LINK) $(validate_c_version_complex_double_eigenvectors_1stage_gpu_random_OBJECTS) $(validate_c_version_complex_double_eigenvectors_1stage_gpu_random_LDADD) $(LIBS)\ntest/C/validate_c_version_complex_double_eigenvectors_1stage_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_complex_double_eigenvectors_1stage_random$(EXEEXT): $(validate_c_version_complex_double_eigenvectors_1stage_random_OBJECTS) $(validate_c_version_complex_double_eigenvectors_1stage_random_DEPENDENCIES) $(EXTRA_validate_c_version_complex_double_eigenvectors_1stage_random_DEPENDENCIES) \n\t@rm -f validate_c_version_complex_double_eigenvectors_1stage_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_complex_double_eigenvectors_1stage_random_LINK) $(validate_c_version_complex_double_eigenvectors_1stage_random_OBJECTS) $(validate_c_version_complex_double_eigenvectors_1stage_random_LDADD) $(LIBS)\ntest/C/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT): $(validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS) $(validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_DEPENDENCIES) $(EXTRA_validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_DEPENDENCIES) \n\t@rm -f validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_LINK) $(validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS) $(validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_LDADD) $(LIBS)\ntest/C/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_complex_double_eigenvectors_2stage_default_kernel_random$(EXEEXT): $(validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_OBJECTS) $(validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_DEPENDENCIES) $(EXTRA_validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_DEPENDENCIES) \n\t@rm -f validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_LINK) $(validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_OBJECTS) $(validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_LDADD) $(LIBS)\ntest/C/validate_c_version_complex_double_generalized_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_complex_double_generalized_1stage_gpu_random$(EXEEXT): $(validate_c_version_complex_double_generalized_1stage_gpu_random_OBJECTS) $(validate_c_version_complex_double_generalized_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_c_version_complex_double_generalized_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_c_version_complex_double_generalized_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_complex_double_generalized_1stage_gpu_random_LINK) $(validate_c_version_complex_double_generalized_1stage_gpu_random_OBJECTS) $(validate_c_version_complex_double_generalized_1stage_gpu_random_LDADD) $(LIBS)\ntest/C/validate_c_version_complex_double_generalized_1stage_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_complex_double_generalized_1stage_random$(EXEEXT): $(validate_c_version_complex_double_generalized_1stage_random_OBJECTS) $(validate_c_version_complex_double_generalized_1stage_random_DEPENDENCIES) $(EXTRA_validate_c_version_complex_double_generalized_1stage_random_DEPENDENCIES) \n\t@rm -f validate_c_version_complex_double_generalized_1stage_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_complex_double_generalized_1stage_random_LINK) $(validate_c_version_complex_double_generalized_1stage_random_OBJECTS) $(validate_c_version_complex_double_generalized_1stage_random_LDADD) $(LIBS)\ntest/C/validate_c_version_complex_double_generalized_decomp_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_complex_double_generalized_decomp_1stage_gpu_random$(EXEEXT): $(validate_c_version_complex_double_generalized_decomp_1stage_gpu_random_OBJECTS) $(validate_c_version_complex_double_generalized_decomp_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_c_version_complex_double_generalized_decomp_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_c_version_complex_double_generalized_decomp_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_complex_double_generalized_decomp_1stage_gpu_random_LINK) $(validate_c_version_complex_double_generalized_decomp_1stage_gpu_random_OBJECTS) $(validate_c_version_complex_double_generalized_decomp_1stage_gpu_random_LDADD) $(LIBS)\ntest/C/validate_c_version_complex_double_generalized_decomp_1stage_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_complex_double_generalized_decomp_1stage_random$(EXEEXT): $(validate_c_version_complex_double_generalized_decomp_1stage_random_OBJECTS) $(validate_c_version_complex_double_generalized_decomp_1stage_random_DEPENDENCIES) $(EXTRA_validate_c_version_complex_double_generalized_decomp_1stage_random_DEPENDENCIES) \n\t@rm -f validate_c_version_complex_double_generalized_decomp_1stage_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_complex_double_generalized_decomp_1stage_random_LINK) $(validate_c_version_complex_double_generalized_decomp_1stage_random_OBJECTS) $(validate_c_version_complex_double_generalized_decomp_1stage_random_LDADD) $(LIBS)\ntest/C/validate_c_version_complex_single_eigenvectors_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_complex_single_eigenvectors_1stage_gpu_random$(EXEEXT): $(validate_c_version_complex_single_eigenvectors_1stage_gpu_random_OBJECTS) $(validate_c_version_complex_single_eigenvectors_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_c_version_complex_single_eigenvectors_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_c_version_complex_single_eigenvectors_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_complex_single_eigenvectors_1stage_gpu_random_LINK) $(validate_c_version_complex_single_eigenvectors_1stage_gpu_random_OBJECTS) $(validate_c_version_complex_single_eigenvectors_1stage_gpu_random_LDADD) $(LIBS)\ntest/C/validate_c_version_complex_single_eigenvectors_1stage_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_complex_single_eigenvectors_1stage_random$(EXEEXT): $(validate_c_version_complex_single_eigenvectors_1stage_random_OBJECTS) $(validate_c_version_complex_single_eigenvectors_1stage_random_DEPENDENCIES) $(EXTRA_validate_c_version_complex_single_eigenvectors_1stage_random_DEPENDENCIES) \n\t@rm -f validate_c_version_complex_single_eigenvectors_1stage_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_complex_single_eigenvectors_1stage_random_LINK) $(validate_c_version_complex_single_eigenvectors_1stage_random_OBJECTS) $(validate_c_version_complex_single_eigenvectors_1stage_random_LDADD) $(LIBS)\ntest/C/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT): $(validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS) $(validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_DEPENDENCIES) $(EXTRA_validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_DEPENDENCIES) \n\t@rm -f validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_LINK) $(validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS) $(validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_LDADD) $(LIBS)\ntest/C/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_complex_single_eigenvectors_2stage_default_kernel_random$(EXEEXT): $(validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_OBJECTS) $(validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_DEPENDENCIES) $(EXTRA_validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_DEPENDENCIES) \n\t@rm -f validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_LINK) $(validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_OBJECTS) $(validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_LDADD) $(LIBS)\ntest/C/validate_c_version_complex_single_generalized_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_complex_single_generalized_1stage_gpu_random$(EXEEXT): $(validate_c_version_complex_single_generalized_1stage_gpu_random_OBJECTS) $(validate_c_version_complex_single_generalized_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_c_version_complex_single_generalized_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_c_version_complex_single_generalized_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_complex_single_generalized_1stage_gpu_random_LINK) $(validate_c_version_complex_single_generalized_1stage_gpu_random_OBJECTS) $(validate_c_version_complex_single_generalized_1stage_gpu_random_LDADD) $(LIBS)\ntest/C/validate_c_version_complex_single_generalized_1stage_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_complex_single_generalized_1stage_random$(EXEEXT): $(validate_c_version_complex_single_generalized_1stage_random_OBJECTS) $(validate_c_version_complex_single_generalized_1stage_random_DEPENDENCIES) $(EXTRA_validate_c_version_complex_single_generalized_1stage_random_DEPENDENCIES) \n\t@rm -f validate_c_version_complex_single_generalized_1stage_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_complex_single_generalized_1stage_random_LINK) $(validate_c_version_complex_single_generalized_1stage_random_OBJECTS) $(validate_c_version_complex_single_generalized_1stage_random_LDADD) $(LIBS)\ntest/C/validate_c_version_complex_single_generalized_decomp_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_complex_single_generalized_decomp_1stage_gpu_random$(EXEEXT): $(validate_c_version_complex_single_generalized_decomp_1stage_gpu_random_OBJECTS) $(validate_c_version_complex_single_generalized_decomp_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_c_version_complex_single_generalized_decomp_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_c_version_complex_single_generalized_decomp_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_complex_single_generalized_decomp_1stage_gpu_random_LINK) $(validate_c_version_complex_single_generalized_decomp_1stage_gpu_random_OBJECTS) $(validate_c_version_complex_single_generalized_decomp_1stage_gpu_random_LDADD) $(LIBS)\ntest/C/validate_c_version_complex_single_generalized_decomp_1stage_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_complex_single_generalized_decomp_1stage_random$(EXEEXT): $(validate_c_version_complex_single_generalized_decomp_1stage_random_OBJECTS) $(validate_c_version_complex_single_generalized_decomp_1stage_random_DEPENDENCIES) $(EXTRA_validate_c_version_complex_single_generalized_decomp_1stage_random_DEPENDENCIES) \n\t@rm -f validate_c_version_complex_single_generalized_decomp_1stage_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_complex_single_generalized_decomp_1stage_random_LINK) $(validate_c_version_complex_single_generalized_decomp_1stage_random_OBJECTS) $(validate_c_version_complex_single_generalized_decomp_1stage_random_LDADD) $(LIBS)\ntest/C/validate_c_version_real_double_eigenvectors_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_real_double_eigenvectors_1stage_gpu_random$(EXEEXT): $(validate_c_version_real_double_eigenvectors_1stage_gpu_random_OBJECTS) $(validate_c_version_real_double_eigenvectors_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_c_version_real_double_eigenvectors_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_c_version_real_double_eigenvectors_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_real_double_eigenvectors_1stage_gpu_random_LINK) $(validate_c_version_real_double_eigenvectors_1stage_gpu_random_OBJECTS) $(validate_c_version_real_double_eigenvectors_1stage_gpu_random_LDADD) $(LIBS)\ntest/C/validate_c_version_real_double_eigenvectors_1stage_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_real_double_eigenvectors_1stage_random$(EXEEXT): $(validate_c_version_real_double_eigenvectors_1stage_random_OBJECTS) $(validate_c_version_real_double_eigenvectors_1stage_random_DEPENDENCIES) $(EXTRA_validate_c_version_real_double_eigenvectors_1stage_random_DEPENDENCIES) \n\t@rm -f validate_c_version_real_double_eigenvectors_1stage_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_real_double_eigenvectors_1stage_random_LINK) $(validate_c_version_real_double_eigenvectors_1stage_random_OBJECTS) $(validate_c_version_real_double_eigenvectors_1stage_random_LDADD) $(LIBS)\ntest/C/validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT): $(validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS) $(validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_DEPENDENCIES) $(EXTRA_validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_DEPENDENCIES) \n\t@rm -f validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_LINK) $(validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS) $(validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_LDADD) $(LIBS)\ntest/C/validate_c_version_real_double_eigenvectors_2stage_default_kernel_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_real_double_eigenvectors_2stage_default_kernel_random$(EXEEXT): $(validate_c_version_real_double_eigenvectors_2stage_default_kernel_random_OBJECTS) $(validate_c_version_real_double_eigenvectors_2stage_default_kernel_random_DEPENDENCIES) $(EXTRA_validate_c_version_real_double_eigenvectors_2stage_default_kernel_random_DEPENDENCIES) \n\t@rm -f validate_c_version_real_double_eigenvectors_2stage_default_kernel_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_real_double_eigenvectors_2stage_default_kernel_random_LINK) $(validate_c_version_real_double_eigenvectors_2stage_default_kernel_random_OBJECTS) $(validate_c_version_real_double_eigenvectors_2stage_default_kernel_random_LDADD) $(LIBS)\ntest/C/validate_c_version_real_double_generalized_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_real_double_generalized_1stage_gpu_random$(EXEEXT): $(validate_c_version_real_double_generalized_1stage_gpu_random_OBJECTS) $(validate_c_version_real_double_generalized_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_c_version_real_double_generalized_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_c_version_real_double_generalized_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_real_double_generalized_1stage_gpu_random_LINK) $(validate_c_version_real_double_generalized_1stage_gpu_random_OBJECTS) $(validate_c_version_real_double_generalized_1stage_gpu_random_LDADD) $(LIBS)\ntest/C/validate_c_version_real_double_generalized_1stage_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_real_double_generalized_1stage_random$(EXEEXT): $(validate_c_version_real_double_generalized_1stage_random_OBJECTS) $(validate_c_version_real_double_generalized_1stage_random_DEPENDENCIES) $(EXTRA_validate_c_version_real_double_generalized_1stage_random_DEPENDENCIES) \n\t@rm -f validate_c_version_real_double_generalized_1stage_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_real_double_generalized_1stage_random_LINK) $(validate_c_version_real_double_generalized_1stage_random_OBJECTS) $(validate_c_version_real_double_generalized_1stage_random_LDADD) $(LIBS)\ntest/C/validate_c_version_real_double_generalized_decomp_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_real_double_generalized_decomp_1stage_gpu_random$(EXEEXT): $(validate_c_version_real_double_generalized_decomp_1stage_gpu_random_OBJECTS) $(validate_c_version_real_double_generalized_decomp_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_c_version_real_double_generalized_decomp_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_c_version_real_double_generalized_decomp_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_real_double_generalized_decomp_1stage_gpu_random_LINK) $(validate_c_version_real_double_generalized_decomp_1stage_gpu_random_OBJECTS) $(validate_c_version_real_double_generalized_decomp_1stage_gpu_random_LDADD) $(LIBS)\ntest/C/validate_c_version_real_double_generalized_decomp_1stage_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_real_double_generalized_decomp_1stage_random$(EXEEXT): $(validate_c_version_real_double_generalized_decomp_1stage_random_OBJECTS) $(validate_c_version_real_double_generalized_decomp_1stage_random_DEPENDENCIES) $(EXTRA_validate_c_version_real_double_generalized_decomp_1stage_random_DEPENDENCIES) \n\t@rm -f validate_c_version_real_double_generalized_decomp_1stage_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_real_double_generalized_decomp_1stage_random_LINK) $(validate_c_version_real_double_generalized_decomp_1stage_random_OBJECTS) $(validate_c_version_real_double_generalized_decomp_1stage_random_LDADD) $(LIBS)\ntest/C/validate_c_version_real_single_eigenvectors_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_real_single_eigenvectors_1stage_gpu_random$(EXEEXT): $(validate_c_version_real_single_eigenvectors_1stage_gpu_random_OBJECTS) $(validate_c_version_real_single_eigenvectors_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_c_version_real_single_eigenvectors_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_c_version_real_single_eigenvectors_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_real_single_eigenvectors_1stage_gpu_random_LINK) $(validate_c_version_real_single_eigenvectors_1stage_gpu_random_OBJECTS) $(validate_c_version_real_single_eigenvectors_1stage_gpu_random_LDADD) $(LIBS)\ntest/C/validate_c_version_real_single_eigenvectors_1stage_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_real_single_eigenvectors_1stage_random$(EXEEXT): $(validate_c_version_real_single_eigenvectors_1stage_random_OBJECTS) $(validate_c_version_real_single_eigenvectors_1stage_random_DEPENDENCIES) $(EXTRA_validate_c_version_real_single_eigenvectors_1stage_random_DEPENDENCIES) \n\t@rm -f validate_c_version_real_single_eigenvectors_1stage_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_real_single_eigenvectors_1stage_random_LINK) $(validate_c_version_real_single_eigenvectors_1stage_random_OBJECTS) $(validate_c_version_real_single_eigenvectors_1stage_random_LDADD) $(LIBS)\ntest/C/validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT): $(validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS) $(validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_DEPENDENCIES) $(EXTRA_validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_DEPENDENCIES) \n\t@rm -f validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_LINK) $(validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS) $(validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_LDADD) $(LIBS)\ntest/C/validate_c_version_real_single_eigenvectors_2stage_default_kernel_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_real_single_eigenvectors_2stage_default_kernel_random$(EXEEXT): $(validate_c_version_real_single_eigenvectors_2stage_default_kernel_random_OBJECTS) $(validate_c_version_real_single_eigenvectors_2stage_default_kernel_random_DEPENDENCIES) $(EXTRA_validate_c_version_real_single_eigenvectors_2stage_default_kernel_random_DEPENDENCIES) \n\t@rm -f validate_c_version_real_single_eigenvectors_2stage_default_kernel_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_real_single_eigenvectors_2stage_default_kernel_random_LINK) $(validate_c_version_real_single_eigenvectors_2stage_default_kernel_random_OBJECTS) $(validate_c_version_real_single_eigenvectors_2stage_default_kernel_random_LDADD) $(LIBS)\ntest/C/validate_c_version_real_single_generalized_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_real_single_generalized_1stage_gpu_random$(EXEEXT): $(validate_c_version_real_single_generalized_1stage_gpu_random_OBJECTS) $(validate_c_version_real_single_generalized_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_c_version_real_single_generalized_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_c_version_real_single_generalized_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_real_single_generalized_1stage_gpu_random_LINK) $(validate_c_version_real_single_generalized_1stage_gpu_random_OBJECTS) $(validate_c_version_real_single_generalized_1stage_gpu_random_LDADD) $(LIBS)\ntest/C/validate_c_version_real_single_generalized_1stage_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_real_single_generalized_1stage_random$(EXEEXT): $(validate_c_version_real_single_generalized_1stage_random_OBJECTS) $(validate_c_version_real_single_generalized_1stage_random_DEPENDENCIES) $(EXTRA_validate_c_version_real_single_generalized_1stage_random_DEPENDENCIES) \n\t@rm -f validate_c_version_real_single_generalized_1stage_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_real_single_generalized_1stage_random_LINK) $(validate_c_version_real_single_generalized_1stage_random_OBJECTS) $(validate_c_version_real_single_generalized_1stage_random_LDADD) $(LIBS)\ntest/C/validate_c_version_real_single_generalized_decomp_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_real_single_generalized_decomp_1stage_gpu_random$(EXEEXT): $(validate_c_version_real_single_generalized_decomp_1stage_gpu_random_OBJECTS) $(validate_c_version_real_single_generalized_decomp_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_c_version_real_single_generalized_decomp_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_c_version_real_single_generalized_decomp_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_real_single_generalized_decomp_1stage_gpu_random_LINK) $(validate_c_version_real_single_generalized_decomp_1stage_gpu_random_OBJECTS) $(validate_c_version_real_single_generalized_decomp_1stage_gpu_random_LDADD) $(LIBS)\ntest/C/validate_c_version_real_single_generalized_decomp_1stage_random-test.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_c_version_real_single_generalized_decomp_1stage_random$(EXEEXT): $(validate_c_version_real_single_generalized_decomp_1stage_random_OBJECTS) $(validate_c_version_real_single_generalized_decomp_1stage_random_DEPENDENCIES) $(EXTRA_validate_c_version_real_single_generalized_decomp_1stage_random_DEPENDENCIES) \n\t@rm -f validate_c_version_real_single_generalized_decomp_1stage_random$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_c_version_real_single_generalized_decomp_1stage_random_LINK) $(validate_c_version_real_single_generalized_decomp_1stage_random_OBJECTS) $(validate_c_version_real_single_generalized_decomp_1stage_random_LDADD) $(LIBS)\ntest/Fortran/elpa2/$(am__dirstamp):\n\t@$(MKDIR_P) test/Fortran/elpa2\n\t@: > test/Fortran/elpa2/$(am__dirstamp)\ntest/Fortran/elpa2/$(DEPDIR)/$(am__dirstamp):\n\t@$(MKDIR_P) test/Fortran/elpa2/$(DEPDIR)\n\t@: > test/Fortran/elpa2/$(DEPDIR)/$(am__dirstamp)\ntest/Fortran/elpa2/validate_complex_2stage_banded@SUFFIX@-complex_2stage_banded.$(OBJEXT):  \\\n\ttest/Fortran/elpa2/$(am__dirstamp) \\\n\ttest/Fortran/elpa2/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_2stage_banded@SUFFIX@$(EXEEXT): $(validate_complex_2stage_banded@SUFFIX@_OBJECTS) $(validate_complex_2stage_banded@SUFFIX@_DEPENDENCIES) $(EXTRA_validate_complex_2stage_banded@SUFFIX@_DEPENDENCIES) \n\t@rm -f validate_complex_2stage_banded@SUFFIX@$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_2stage_banded@SUFFIX@_LINK) $(validate_complex_2stage_banded@SUFFIX@_OBJECTS) $(validate_complex_2stage_banded@SUFFIX@_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_cholesky_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_cholesky_1stage_gpu_random$(EXEEXT): $(validate_complex_double_cholesky_1stage_gpu_random_OBJECTS) $(validate_complex_double_cholesky_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_complex_double_cholesky_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_complex_double_cholesky_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_cholesky_1stage_gpu_random_LINK) $(validate_complex_double_cholesky_1stage_gpu_random_OBJECTS) $(validate_complex_double_cholesky_1stage_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_cholesky_1stage_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_cholesky_1stage_gpu_random_all_layouts$(EXEEXT): $(validate_complex_double_cholesky_1stage_gpu_random_all_layouts_OBJECTS) $(validate_complex_double_cholesky_1stage_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_cholesky_1stage_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_cholesky_1stage_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_cholesky_1stage_gpu_random_all_layouts_LINK) $(validate_complex_double_cholesky_1stage_gpu_random_all_layouts_OBJECTS) $(validate_complex_double_cholesky_1stage_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_cholesky_1stage_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_cholesky_1stage_gpu_toeplitz$(EXEEXT): $(validate_complex_double_cholesky_1stage_gpu_toeplitz_OBJECTS) $(validate_complex_double_cholesky_1stage_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_complex_double_cholesky_1stage_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_complex_double_cholesky_1stage_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_cholesky_1stage_gpu_toeplitz_LINK) $(validate_complex_double_cholesky_1stage_gpu_toeplitz_OBJECTS) $(validate_complex_double_cholesky_1stage_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_LINK) $(validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_cholesky_1stage_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_cholesky_1stage_random$(EXEEXT): $(validate_complex_double_cholesky_1stage_random_OBJECTS) $(validate_complex_double_cholesky_1stage_random_DEPENDENCIES) $(EXTRA_validate_complex_double_cholesky_1stage_random_DEPENDENCIES) \n\t@rm -f validate_complex_double_cholesky_1stage_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_cholesky_1stage_random_LINK) $(validate_complex_double_cholesky_1stage_random_OBJECTS) $(validate_complex_double_cholesky_1stage_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_cholesky_1stage_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_cholesky_1stage_random_all_layouts$(EXEEXT): $(validate_complex_double_cholesky_1stage_random_all_layouts_OBJECTS) $(validate_complex_double_cholesky_1stage_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_cholesky_1stage_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_cholesky_1stage_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_cholesky_1stage_random_all_layouts_LINK) $(validate_complex_double_cholesky_1stage_random_all_layouts_OBJECTS) $(validate_complex_double_cholesky_1stage_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_cholesky_1stage_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_cholesky_1stage_toeplitz$(EXEEXT): $(validate_complex_double_cholesky_1stage_toeplitz_OBJECTS) $(validate_complex_double_cholesky_1stage_toeplitz_DEPENDENCIES) $(EXTRA_validate_complex_double_cholesky_1stage_toeplitz_DEPENDENCIES) \n\t@rm -f validate_complex_double_cholesky_1stage_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_cholesky_1stage_toeplitz_LINK) $(validate_complex_double_cholesky_1stage_toeplitz_OBJECTS) $(validate_complex_double_cholesky_1stage_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_cholesky_1stage_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_cholesky_1stage_toeplitz_all_layouts$(EXEEXT): $(validate_complex_double_cholesky_1stage_toeplitz_all_layouts_OBJECTS) $(validate_complex_double_cholesky_1stage_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_cholesky_1stage_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_cholesky_1stage_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_cholesky_1stage_toeplitz_all_layouts_LINK) $(validate_complex_double_cholesky_1stage_toeplitz_all_layouts_OBJECTS) $(validate_complex_double_cholesky_1stage_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvalues_1stage_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvalues_1stage_gpu_toeplitz$(EXEEXT): $(validate_complex_double_eigenvalues_1stage_gpu_toeplitz_OBJECTS) $(validate_complex_double_eigenvalues_1stage_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvalues_1stage_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvalues_1stage_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvalues_1stage_gpu_toeplitz_LINK) $(validate_complex_double_eigenvalues_1stage_gpu_toeplitz_OBJECTS) $(validate_complex_double_eigenvalues_1stage_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_LINK) $(validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvalues_1stage_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvalues_1stage_toeplitz$(EXEEXT): $(validate_complex_double_eigenvalues_1stage_toeplitz_OBJECTS) $(validate_complex_double_eigenvalues_1stage_toeplitz_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvalues_1stage_toeplitz_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvalues_1stage_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvalues_1stage_toeplitz_LINK) $(validate_complex_double_eigenvalues_1stage_toeplitz_OBJECTS) $(validate_complex_double_eigenvalues_1stage_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvalues_1stage_toeplitz_all_layouts$(EXEEXT): $(validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_OBJECTS) $(validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_LINK) $(validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_OBJECTS) $(validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz$(EXEEXT): $(validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_OBJECTS) $(validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_LINK) $(validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_OBJECTS) $(validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS) $(validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_LINK) $(validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS) $(validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvalues_2stage_default_kernel_toeplitz$(EXEEXT): $(validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_OBJECTS) $(validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_LINK) $(validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_OBJECTS) $(validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT): $(validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_OBJECTS) $(validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_LINK) $(validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_OBJECTS) $(validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_1stage_analytic-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_1stage_analytic$(EXEEXT): $(validate_complex_double_eigenvectors_1stage_analytic_OBJECTS) $(validate_complex_double_eigenvectors_1stage_analytic_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_1stage_analytic_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_1stage_analytic$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_1stage_analytic_LINK) $(validate_complex_double_eigenvectors_1stage_analytic_OBJECTS) $(validate_complex_double_eigenvectors_1stage_analytic_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_1stage_analytic_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_1stage_analytic_all_layouts$(EXEEXT): $(validate_complex_double_eigenvectors_1stage_analytic_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_1stage_analytic_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_1stage_analytic_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_1stage_analytic_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_1stage_analytic_all_layouts_LINK) $(validate_complex_double_eigenvectors_1stage_analytic_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_1stage_analytic_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_1stage_gpu_random$(EXEEXT): $(validate_complex_double_eigenvectors_1stage_gpu_random_OBJECTS) $(validate_complex_double_eigenvectors_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_1stage_gpu_random_LINK) $(validate_complex_double_eigenvectors_1stage_gpu_random_OBJECTS) $(validate_complex_double_eigenvectors_1stage_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_1stage_gpu_random_all_layouts$(EXEEXT): $(validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_LINK) $(validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_1stage_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_1stage_gpu_toeplitz$(EXEEXT): $(validate_complex_double_eigenvectors_1stage_gpu_toeplitz_OBJECTS) $(validate_complex_double_eigenvectors_1stage_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_1stage_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_1stage_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_1stage_gpu_toeplitz_LINK) $(validate_complex_double_eigenvectors_1stage_gpu_toeplitz_OBJECTS) $(validate_complex_double_eigenvectors_1stage_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_LINK) $(validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_1stage_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_1stage_random$(EXEEXT): $(validate_complex_double_eigenvectors_1stage_random_OBJECTS) $(validate_complex_double_eigenvectors_1stage_random_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_1stage_random_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_1stage_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_1stage_random_LINK) $(validate_complex_double_eigenvectors_1stage_random_OBJECTS) $(validate_complex_double_eigenvectors_1stage_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_1stage_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_1stage_random_all_layouts$(EXEEXT): $(validate_complex_double_eigenvectors_1stage_random_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_1stage_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_1stage_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_1stage_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_1stage_random_all_layouts_LINK) $(validate_complex_double_eigenvectors_1stage_random_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_1stage_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_1stage_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_1stage_toeplitz$(EXEEXT): $(validate_complex_double_eigenvectors_1stage_toeplitz_OBJECTS) $(validate_complex_double_eigenvectors_1stage_toeplitz_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_1stage_toeplitz_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_1stage_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_1stage_toeplitz_LINK) $(validate_complex_double_eigenvectors_1stage_toeplitz_OBJECTS) $(validate_complex_double_eigenvectors_1stage_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_1stage_toeplitz_all_layouts$(EXEEXT): $(validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_LINK) $(validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_analytic-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_2stage_all_kernels_analytic$(EXEEXT): $(validate_complex_double_eigenvectors_2stage_all_kernels_analytic_OBJECTS) $(validate_complex_double_eigenvectors_2stage_all_kernels_analytic_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_2stage_all_kernels_analytic_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_2stage_all_kernels_analytic$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_2stage_all_kernels_analytic_LINK) $(validate_complex_double_eigenvectors_2stage_all_kernels_analytic_OBJECTS) $(validate_complex_double_eigenvectors_2stage_all_kernels_analytic_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts$(EXEEXT): $(validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_LINK) $(validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_2stage_all_kernels_gpu_random$(EXEEXT): $(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_OBJECTS) $(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_LINK) $(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_OBJECTS) $(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts$(EXEEXT): $(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_LINK) $(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz$(EXEEXT): $(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_OBJECTS) $(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_LINK) $(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_OBJECTS) $(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_LINK) $(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_2stage_all_kernels_random$(EXEEXT): $(validate_complex_double_eigenvectors_2stage_all_kernels_random_OBJECTS) $(validate_complex_double_eigenvectors_2stage_all_kernels_random_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_2stage_all_kernels_random_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_2stage_all_kernels_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_2stage_all_kernels_random_LINK) $(validate_complex_double_eigenvectors_2stage_all_kernels_random_OBJECTS) $(validate_complex_double_eigenvectors_2stage_all_kernels_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts$(EXEEXT): $(validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_LINK) $(validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_2stage_all_kernels_toeplitz$(EXEEXT): $(validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_OBJECTS) $(validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_LINK) $(validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_OBJECTS) $(validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts$(EXEEXT): $(validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_LINK) $(validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_analytic-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_2stage_default_kernel_analytic$(EXEEXT): $(validate_complex_double_eigenvectors_2stage_default_kernel_analytic_OBJECTS) $(validate_complex_double_eigenvectors_2stage_default_kernel_analytic_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_2stage_default_kernel_analytic_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_2stage_default_kernel_analytic$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_2stage_default_kernel_analytic_LINK) $(validate_complex_double_eigenvectors_2stage_default_kernel_analytic_OBJECTS) $(validate_complex_double_eigenvectors_2stage_default_kernel_analytic_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts$(EXEEXT): $(validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_LINK) $(validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT): $(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS) $(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_LINK) $(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS) $(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts$(EXEEXT): $(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_LINK) $(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz$(EXEEXT): $(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_OBJECTS) $(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_LINK) $(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_OBJECTS) $(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_LINK) $(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_2stage_default_kernel_random$(EXEEXT): $(validate_complex_double_eigenvectors_2stage_default_kernel_random_OBJECTS) $(validate_complex_double_eigenvectors_2stage_default_kernel_random_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_2stage_default_kernel_random_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_2stage_default_kernel_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_2stage_default_kernel_random_LINK) $(validate_complex_double_eigenvectors_2stage_default_kernel_random_OBJECTS) $(validate_complex_double_eigenvectors_2stage_default_kernel_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts$(EXEEXT): $(validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_LINK) $(validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_2stage_default_kernel_toeplitz$(EXEEXT): $(validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_OBJECTS) $(validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_LINK) $(validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_OBJECTS) $(validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT): $(validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_LINK) $(validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_scalapack_all_analytic-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_scalapack_all_analytic$(EXEEXT): $(validate_complex_double_eigenvectors_scalapack_all_analytic_OBJECTS) $(validate_complex_double_eigenvectors_scalapack_all_analytic_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_scalapack_all_analytic_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_scalapack_all_analytic$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_scalapack_all_analytic_LINK) $(validate_complex_double_eigenvectors_scalapack_all_analytic_OBJECTS) $(validate_complex_double_eigenvectors_scalapack_all_analytic_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts$(EXEEXT): $(validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_LINK) $(validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_scalapack_part_analytic-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_scalapack_part_analytic$(EXEEXT): $(validate_complex_double_eigenvectors_scalapack_part_analytic_OBJECTS) $(validate_complex_double_eigenvectors_scalapack_part_analytic_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_scalapack_part_analytic_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_scalapack_part_analytic$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_scalapack_part_analytic_LINK) $(validate_complex_double_eigenvectors_scalapack_part_analytic_OBJECTS) $(validate_complex_double_eigenvectors_scalapack_part_analytic_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts$(EXEEXT): $(validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_LINK) $(validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_OBJECTS) $(validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_generalized_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_generalized_1stage_gpu_random$(EXEEXT): $(validate_complex_double_generalized_1stage_gpu_random_OBJECTS) $(validate_complex_double_generalized_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_complex_double_generalized_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_complex_double_generalized_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_generalized_1stage_gpu_random_LINK) $(validate_complex_double_generalized_1stage_gpu_random_OBJECTS) $(validate_complex_double_generalized_1stage_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_generalized_1stage_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_generalized_1stage_gpu_random_all_layouts$(EXEEXT): $(validate_complex_double_generalized_1stage_gpu_random_all_layouts_OBJECTS) $(validate_complex_double_generalized_1stage_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_generalized_1stage_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_generalized_1stage_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_generalized_1stage_gpu_random_all_layouts_LINK) $(validate_complex_double_generalized_1stage_gpu_random_all_layouts_OBJECTS) $(validate_complex_double_generalized_1stage_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_generalized_1stage_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_generalized_1stage_random$(EXEEXT): $(validate_complex_double_generalized_1stage_random_OBJECTS) $(validate_complex_double_generalized_1stage_random_DEPENDENCIES) $(EXTRA_validate_complex_double_generalized_1stage_random_DEPENDENCIES) \n\t@rm -f validate_complex_double_generalized_1stage_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_generalized_1stage_random_LINK) $(validate_complex_double_generalized_1stage_random_OBJECTS) $(validate_complex_double_generalized_1stage_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_generalized_1stage_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_generalized_1stage_random_all_layouts$(EXEEXT): $(validate_complex_double_generalized_1stage_random_all_layouts_OBJECTS) $(validate_complex_double_generalized_1stage_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_generalized_1stage_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_generalized_1stage_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_generalized_1stage_random_all_layouts_LINK) $(validate_complex_double_generalized_1stage_random_all_layouts_OBJECTS) $(validate_complex_double_generalized_1stage_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_generalized_decomp_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_generalized_decomp_1stage_gpu_random$(EXEEXT): $(validate_complex_double_generalized_decomp_1stage_gpu_random_OBJECTS) $(validate_complex_double_generalized_decomp_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_complex_double_generalized_decomp_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_complex_double_generalized_decomp_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_generalized_decomp_1stage_gpu_random_LINK) $(validate_complex_double_generalized_decomp_1stage_gpu_random_OBJECTS) $(validate_complex_double_generalized_decomp_1stage_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts$(EXEEXT): $(validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_OBJECTS) $(validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_LINK) $(validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_OBJECTS) $(validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_generalized_decomp_1stage_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_generalized_decomp_1stage_random$(EXEEXT): $(validate_complex_double_generalized_decomp_1stage_random_OBJECTS) $(validate_complex_double_generalized_decomp_1stage_random_DEPENDENCIES) $(EXTRA_validate_complex_double_generalized_decomp_1stage_random_DEPENDENCIES) \n\t@rm -f validate_complex_double_generalized_decomp_1stage_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_generalized_decomp_1stage_random_LINK) $(validate_complex_double_generalized_decomp_1stage_random_OBJECTS) $(validate_complex_double_generalized_decomp_1stage_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_generalized_decomp_1stage_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_generalized_decomp_1stage_random_all_layouts$(EXEEXT): $(validate_complex_double_generalized_decomp_1stage_random_all_layouts_OBJECTS) $(validate_complex_double_generalized_decomp_1stage_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_generalized_decomp_1stage_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_generalized_decomp_1stage_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_generalized_decomp_1stage_random_all_layouts_LINK) $(validate_complex_double_generalized_decomp_1stage_random_all_layouts_OBJECTS) $(validate_complex_double_generalized_decomp_1stage_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_hermitian_multiply_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_hermitian_multiply_1stage_gpu_random$(EXEEXT): $(validate_complex_double_hermitian_multiply_1stage_gpu_random_OBJECTS) $(validate_complex_double_hermitian_multiply_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_complex_double_hermitian_multiply_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_complex_double_hermitian_multiply_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_hermitian_multiply_1stage_gpu_random_LINK) $(validate_complex_double_hermitian_multiply_1stage_gpu_random_OBJECTS) $(validate_complex_double_hermitian_multiply_1stage_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts$(EXEEXT): $(validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_OBJECTS) $(validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_LINK) $(validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_OBJECTS) $(validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_hermitian_multiply_1stage_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_hermitian_multiply_1stage_random$(EXEEXT): $(validate_complex_double_hermitian_multiply_1stage_random_OBJECTS) $(validate_complex_double_hermitian_multiply_1stage_random_DEPENDENCIES) $(EXTRA_validate_complex_double_hermitian_multiply_1stage_random_DEPENDENCIES) \n\t@rm -f validate_complex_double_hermitian_multiply_1stage_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_hermitian_multiply_1stage_random_LINK) $(validate_complex_double_hermitian_multiply_1stage_random_OBJECTS) $(validate_complex_double_hermitian_multiply_1stage_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_double_hermitian_multiply_1stage_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_double_hermitian_multiply_1stage_random_all_layouts$(EXEEXT): $(validate_complex_double_hermitian_multiply_1stage_random_all_layouts_OBJECTS) $(validate_complex_double_hermitian_multiply_1stage_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_double_hermitian_multiply_1stage_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_double_hermitian_multiply_1stage_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_double_hermitian_multiply_1stage_random_all_layouts_LINK) $(validate_complex_double_hermitian_multiply_1stage_random_all_layouts_OBJECTS) $(validate_complex_double_hermitian_multiply_1stage_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_cholesky_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_cholesky_1stage_gpu_random$(EXEEXT): $(validate_complex_single_cholesky_1stage_gpu_random_OBJECTS) $(validate_complex_single_cholesky_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_complex_single_cholesky_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_complex_single_cholesky_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_cholesky_1stage_gpu_random_LINK) $(validate_complex_single_cholesky_1stage_gpu_random_OBJECTS) $(validate_complex_single_cholesky_1stage_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_cholesky_1stage_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_cholesky_1stage_gpu_random_all_layouts$(EXEEXT): $(validate_complex_single_cholesky_1stage_gpu_random_all_layouts_OBJECTS) $(validate_complex_single_cholesky_1stage_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_cholesky_1stage_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_cholesky_1stage_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_cholesky_1stage_gpu_random_all_layouts_LINK) $(validate_complex_single_cholesky_1stage_gpu_random_all_layouts_OBJECTS) $(validate_complex_single_cholesky_1stage_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_cholesky_1stage_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_cholesky_1stage_gpu_toeplitz$(EXEEXT): $(validate_complex_single_cholesky_1stage_gpu_toeplitz_OBJECTS) $(validate_complex_single_cholesky_1stage_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_complex_single_cholesky_1stage_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_complex_single_cholesky_1stage_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_cholesky_1stage_gpu_toeplitz_LINK) $(validate_complex_single_cholesky_1stage_gpu_toeplitz_OBJECTS) $(validate_complex_single_cholesky_1stage_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_LINK) $(validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_cholesky_1stage_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_cholesky_1stage_random$(EXEEXT): $(validate_complex_single_cholesky_1stage_random_OBJECTS) $(validate_complex_single_cholesky_1stage_random_DEPENDENCIES) $(EXTRA_validate_complex_single_cholesky_1stage_random_DEPENDENCIES) \n\t@rm -f validate_complex_single_cholesky_1stage_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_cholesky_1stage_random_LINK) $(validate_complex_single_cholesky_1stage_random_OBJECTS) $(validate_complex_single_cholesky_1stage_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_cholesky_1stage_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_cholesky_1stage_random_all_layouts$(EXEEXT): $(validate_complex_single_cholesky_1stage_random_all_layouts_OBJECTS) $(validate_complex_single_cholesky_1stage_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_cholesky_1stage_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_cholesky_1stage_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_cholesky_1stage_random_all_layouts_LINK) $(validate_complex_single_cholesky_1stage_random_all_layouts_OBJECTS) $(validate_complex_single_cholesky_1stage_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_cholesky_1stage_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_cholesky_1stage_toeplitz$(EXEEXT): $(validate_complex_single_cholesky_1stage_toeplitz_OBJECTS) $(validate_complex_single_cholesky_1stage_toeplitz_DEPENDENCIES) $(EXTRA_validate_complex_single_cholesky_1stage_toeplitz_DEPENDENCIES) \n\t@rm -f validate_complex_single_cholesky_1stage_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_cholesky_1stage_toeplitz_LINK) $(validate_complex_single_cholesky_1stage_toeplitz_OBJECTS) $(validate_complex_single_cholesky_1stage_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_cholesky_1stage_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_cholesky_1stage_toeplitz_all_layouts$(EXEEXT): $(validate_complex_single_cholesky_1stage_toeplitz_all_layouts_OBJECTS) $(validate_complex_single_cholesky_1stage_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_cholesky_1stage_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_cholesky_1stage_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_cholesky_1stage_toeplitz_all_layouts_LINK) $(validate_complex_single_cholesky_1stage_toeplitz_all_layouts_OBJECTS) $(validate_complex_single_cholesky_1stage_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvalues_1stage_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvalues_1stage_gpu_toeplitz$(EXEEXT): $(validate_complex_single_eigenvalues_1stage_gpu_toeplitz_OBJECTS) $(validate_complex_single_eigenvalues_1stage_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvalues_1stage_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvalues_1stage_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvalues_1stage_gpu_toeplitz_LINK) $(validate_complex_single_eigenvalues_1stage_gpu_toeplitz_OBJECTS) $(validate_complex_single_eigenvalues_1stage_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_LINK) $(validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvalues_1stage_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvalues_1stage_toeplitz$(EXEEXT): $(validate_complex_single_eigenvalues_1stage_toeplitz_OBJECTS) $(validate_complex_single_eigenvalues_1stage_toeplitz_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvalues_1stage_toeplitz_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvalues_1stage_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvalues_1stage_toeplitz_LINK) $(validate_complex_single_eigenvalues_1stage_toeplitz_OBJECTS) $(validate_complex_single_eigenvalues_1stage_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvalues_1stage_toeplitz_all_layouts$(EXEEXT): $(validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_OBJECTS) $(validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_LINK) $(validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_OBJECTS) $(validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz$(EXEEXT): $(validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_OBJECTS) $(validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_LINK) $(validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_OBJECTS) $(validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS) $(validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_LINK) $(validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS) $(validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvalues_2stage_default_kernel_toeplitz$(EXEEXT): $(validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_OBJECTS) $(validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_LINK) $(validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_OBJECTS) $(validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT): $(validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_OBJECTS) $(validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_LINK) $(validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_OBJECTS) $(validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_1stage_analytic-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_1stage_analytic$(EXEEXT): $(validate_complex_single_eigenvectors_1stage_analytic_OBJECTS) $(validate_complex_single_eigenvectors_1stage_analytic_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_1stage_analytic_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_1stage_analytic$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_1stage_analytic_LINK) $(validate_complex_single_eigenvectors_1stage_analytic_OBJECTS) $(validate_complex_single_eigenvectors_1stage_analytic_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_1stage_analytic_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_1stage_analytic_all_layouts$(EXEEXT): $(validate_complex_single_eigenvectors_1stage_analytic_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_1stage_analytic_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_1stage_analytic_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_1stage_analytic_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_1stage_analytic_all_layouts_LINK) $(validate_complex_single_eigenvectors_1stage_analytic_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_1stage_analytic_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_1stage_gpu_random$(EXEEXT): $(validate_complex_single_eigenvectors_1stage_gpu_random_OBJECTS) $(validate_complex_single_eigenvectors_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_1stage_gpu_random_LINK) $(validate_complex_single_eigenvectors_1stage_gpu_random_OBJECTS) $(validate_complex_single_eigenvectors_1stage_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_1stage_gpu_random_all_layouts$(EXEEXT): $(validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_LINK) $(validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_1stage_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_1stage_gpu_toeplitz$(EXEEXT): $(validate_complex_single_eigenvectors_1stage_gpu_toeplitz_OBJECTS) $(validate_complex_single_eigenvectors_1stage_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_1stage_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_1stage_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_1stage_gpu_toeplitz_LINK) $(validate_complex_single_eigenvectors_1stage_gpu_toeplitz_OBJECTS) $(validate_complex_single_eigenvectors_1stage_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_LINK) $(validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_1stage_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_1stage_random$(EXEEXT): $(validate_complex_single_eigenvectors_1stage_random_OBJECTS) $(validate_complex_single_eigenvectors_1stage_random_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_1stage_random_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_1stage_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_1stage_random_LINK) $(validate_complex_single_eigenvectors_1stage_random_OBJECTS) $(validate_complex_single_eigenvectors_1stage_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_1stage_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_1stage_random_all_layouts$(EXEEXT): $(validate_complex_single_eigenvectors_1stage_random_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_1stage_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_1stage_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_1stage_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_1stage_random_all_layouts_LINK) $(validate_complex_single_eigenvectors_1stage_random_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_1stage_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_1stage_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_1stage_toeplitz$(EXEEXT): $(validate_complex_single_eigenvectors_1stage_toeplitz_OBJECTS) $(validate_complex_single_eigenvectors_1stage_toeplitz_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_1stage_toeplitz_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_1stage_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_1stage_toeplitz_LINK) $(validate_complex_single_eigenvectors_1stage_toeplitz_OBJECTS) $(validate_complex_single_eigenvectors_1stage_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_1stage_toeplitz_all_layouts$(EXEEXT): $(validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_LINK) $(validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_analytic-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_2stage_all_kernels_analytic$(EXEEXT): $(validate_complex_single_eigenvectors_2stage_all_kernels_analytic_OBJECTS) $(validate_complex_single_eigenvectors_2stage_all_kernels_analytic_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_2stage_all_kernels_analytic_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_2stage_all_kernels_analytic$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_2stage_all_kernels_analytic_LINK) $(validate_complex_single_eigenvectors_2stage_all_kernels_analytic_OBJECTS) $(validate_complex_single_eigenvectors_2stage_all_kernels_analytic_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts$(EXEEXT): $(validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_LINK) $(validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_2stage_all_kernels_gpu_random$(EXEEXT): $(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_OBJECTS) $(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_LINK) $(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_OBJECTS) $(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts$(EXEEXT): $(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_LINK) $(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz$(EXEEXT): $(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_OBJECTS) $(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_LINK) $(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_OBJECTS) $(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_LINK) $(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_2stage_all_kernels_random$(EXEEXT): $(validate_complex_single_eigenvectors_2stage_all_kernels_random_OBJECTS) $(validate_complex_single_eigenvectors_2stage_all_kernels_random_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_2stage_all_kernels_random_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_2stage_all_kernels_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_2stage_all_kernels_random_LINK) $(validate_complex_single_eigenvectors_2stage_all_kernels_random_OBJECTS) $(validate_complex_single_eigenvectors_2stage_all_kernels_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts$(EXEEXT): $(validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_LINK) $(validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_2stage_all_kernels_toeplitz$(EXEEXT): $(validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_OBJECTS) $(validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_LINK) $(validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_OBJECTS) $(validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts$(EXEEXT): $(validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_LINK) $(validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_analytic-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_2stage_default_kernel_analytic$(EXEEXT): $(validate_complex_single_eigenvectors_2stage_default_kernel_analytic_OBJECTS) $(validate_complex_single_eigenvectors_2stage_default_kernel_analytic_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_2stage_default_kernel_analytic_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_2stage_default_kernel_analytic$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_2stage_default_kernel_analytic_LINK) $(validate_complex_single_eigenvectors_2stage_default_kernel_analytic_OBJECTS) $(validate_complex_single_eigenvectors_2stage_default_kernel_analytic_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts$(EXEEXT): $(validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_LINK) $(validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT): $(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS) $(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_LINK) $(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS) $(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts$(EXEEXT): $(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_LINK) $(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz$(EXEEXT): $(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_OBJECTS) $(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_LINK) $(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_OBJECTS) $(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_LINK) $(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_2stage_default_kernel_random$(EXEEXT): $(validate_complex_single_eigenvectors_2stage_default_kernel_random_OBJECTS) $(validate_complex_single_eigenvectors_2stage_default_kernel_random_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_2stage_default_kernel_random_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_2stage_default_kernel_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_2stage_default_kernel_random_LINK) $(validate_complex_single_eigenvectors_2stage_default_kernel_random_OBJECTS) $(validate_complex_single_eigenvectors_2stage_default_kernel_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts$(EXEEXT): $(validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_LINK) $(validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_2stage_default_kernel_toeplitz$(EXEEXT): $(validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_OBJECTS) $(validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_LINK) $(validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_OBJECTS) $(validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT): $(validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_LINK) $(validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_OBJECTS) $(validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_generalized_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_generalized_1stage_gpu_random$(EXEEXT): $(validate_complex_single_generalized_1stage_gpu_random_OBJECTS) $(validate_complex_single_generalized_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_complex_single_generalized_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_complex_single_generalized_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_generalized_1stage_gpu_random_LINK) $(validate_complex_single_generalized_1stage_gpu_random_OBJECTS) $(validate_complex_single_generalized_1stage_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_generalized_1stage_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_generalized_1stage_gpu_random_all_layouts$(EXEEXT): $(validate_complex_single_generalized_1stage_gpu_random_all_layouts_OBJECTS) $(validate_complex_single_generalized_1stage_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_generalized_1stage_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_generalized_1stage_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_generalized_1stage_gpu_random_all_layouts_LINK) $(validate_complex_single_generalized_1stage_gpu_random_all_layouts_OBJECTS) $(validate_complex_single_generalized_1stage_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_generalized_1stage_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_generalized_1stage_random$(EXEEXT): $(validate_complex_single_generalized_1stage_random_OBJECTS) $(validate_complex_single_generalized_1stage_random_DEPENDENCIES) $(EXTRA_validate_complex_single_generalized_1stage_random_DEPENDENCIES) \n\t@rm -f validate_complex_single_generalized_1stage_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_generalized_1stage_random_LINK) $(validate_complex_single_generalized_1stage_random_OBJECTS) $(validate_complex_single_generalized_1stage_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_generalized_1stage_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_generalized_1stage_random_all_layouts$(EXEEXT): $(validate_complex_single_generalized_1stage_random_all_layouts_OBJECTS) $(validate_complex_single_generalized_1stage_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_generalized_1stage_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_generalized_1stage_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_generalized_1stage_random_all_layouts_LINK) $(validate_complex_single_generalized_1stage_random_all_layouts_OBJECTS) $(validate_complex_single_generalized_1stage_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_generalized_decomp_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_generalized_decomp_1stage_gpu_random$(EXEEXT): $(validate_complex_single_generalized_decomp_1stage_gpu_random_OBJECTS) $(validate_complex_single_generalized_decomp_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_complex_single_generalized_decomp_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_complex_single_generalized_decomp_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_generalized_decomp_1stage_gpu_random_LINK) $(validate_complex_single_generalized_decomp_1stage_gpu_random_OBJECTS) $(validate_complex_single_generalized_decomp_1stage_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts$(EXEEXT): $(validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_OBJECTS) $(validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_LINK) $(validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_OBJECTS) $(validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_generalized_decomp_1stage_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_generalized_decomp_1stage_random$(EXEEXT): $(validate_complex_single_generalized_decomp_1stage_random_OBJECTS) $(validate_complex_single_generalized_decomp_1stage_random_DEPENDENCIES) $(EXTRA_validate_complex_single_generalized_decomp_1stage_random_DEPENDENCIES) \n\t@rm -f validate_complex_single_generalized_decomp_1stage_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_generalized_decomp_1stage_random_LINK) $(validate_complex_single_generalized_decomp_1stage_random_OBJECTS) $(validate_complex_single_generalized_decomp_1stage_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_generalized_decomp_1stage_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_generalized_decomp_1stage_random_all_layouts$(EXEEXT): $(validate_complex_single_generalized_decomp_1stage_random_all_layouts_OBJECTS) $(validate_complex_single_generalized_decomp_1stage_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_generalized_decomp_1stage_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_generalized_decomp_1stage_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_generalized_decomp_1stage_random_all_layouts_LINK) $(validate_complex_single_generalized_decomp_1stage_random_all_layouts_OBJECTS) $(validate_complex_single_generalized_decomp_1stage_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_hermitian_multiply_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_hermitian_multiply_1stage_gpu_random$(EXEEXT): $(validate_complex_single_hermitian_multiply_1stage_gpu_random_OBJECTS) $(validate_complex_single_hermitian_multiply_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_complex_single_hermitian_multiply_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_complex_single_hermitian_multiply_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_hermitian_multiply_1stage_gpu_random_LINK) $(validate_complex_single_hermitian_multiply_1stage_gpu_random_OBJECTS) $(validate_complex_single_hermitian_multiply_1stage_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts$(EXEEXT): $(validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_OBJECTS) $(validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_LINK) $(validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_OBJECTS) $(validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_hermitian_multiply_1stage_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_hermitian_multiply_1stage_random$(EXEEXT): $(validate_complex_single_hermitian_multiply_1stage_random_OBJECTS) $(validate_complex_single_hermitian_multiply_1stage_random_DEPENDENCIES) $(EXTRA_validate_complex_single_hermitian_multiply_1stage_random_DEPENDENCIES) \n\t@rm -f validate_complex_single_hermitian_multiply_1stage_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_hermitian_multiply_1stage_random_LINK) $(validate_complex_single_hermitian_multiply_1stage_random_OBJECTS) $(validate_complex_single_hermitian_multiply_1stage_random_LDADD) $(LIBS)\ntest/Fortran/validate_complex_single_hermitian_multiply_1stage_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_complex_single_hermitian_multiply_1stage_random_all_layouts$(EXEEXT): $(validate_complex_single_hermitian_multiply_1stage_random_all_layouts_OBJECTS) $(validate_complex_single_hermitian_multiply_1stage_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_complex_single_hermitian_multiply_1stage_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_complex_single_hermitian_multiply_1stage_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_complex_single_hermitian_multiply_1stage_random_all_layouts_LINK) $(validate_complex_single_hermitian_multiply_1stage_random_all_layouts_OBJECTS) $(validate_complex_single_hermitian_multiply_1stage_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/elpa2/validate_double_instance@SUFFIX@-double_instance.$(OBJEXT):  \\\n\ttest/Fortran/elpa2/$(am__dirstamp) \\\n\ttest/Fortran/elpa2/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_double_instance@SUFFIX@$(EXEEXT): $(validate_double_instance@SUFFIX@_OBJECTS) $(validate_double_instance@SUFFIX@_DEPENDENCIES) $(EXTRA_validate_double_instance@SUFFIX@_DEPENDENCIES) \n\t@rm -f validate_double_instance@SUFFIX@$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_double_instance@SUFFIX@_LINK) $(validate_double_instance@SUFFIX@_OBJECTS) $(validate_double_instance@SUFFIX@_LDADD) $(LIBS)\ntest/Fortran/validate_multiple_objs_real_double-test_multiple_objs.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_multiple_objs_real_double$(EXEEXT): $(validate_multiple_objs_real_double_OBJECTS) $(validate_multiple_objs_real_double_DEPENDENCIES) $(EXTRA_validate_multiple_objs_real_double_DEPENDENCIES) \n\t@rm -f validate_multiple_objs_real_double$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_multiple_objs_real_double_LINK) $(validate_multiple_objs_real_double_OBJECTS) $(validate_multiple_objs_real_double_LDADD) $(LIBS)\ntest/C/validate_multiple_objs_real_double_c_version-test_multiple_objs.$(OBJEXT):  \\\n\ttest/C/$(am__dirstamp) test/C/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_multiple_objs_real_double_c_version$(EXEEXT): $(validate_multiple_objs_real_double_c_version_OBJECTS) $(validate_multiple_objs_real_double_c_version_DEPENDENCIES) $(EXTRA_validate_multiple_objs_real_double_c_version_DEPENDENCIES) \n\t@rm -f validate_multiple_objs_real_double_c_version$(EXEEXT)\n\t$(AM_V_CCLD)$(validate_multiple_objs_real_double_c_version_LINK) $(validate_multiple_objs_real_double_c_version_OBJECTS) $(validate_multiple_objs_real_double_c_version_LDADD) $(LIBS)\ntest/Fortran/elpa2/validate_real_2stage_banded@SUFFIX@-real_2stage_banded.$(OBJEXT):  \\\n\ttest/Fortran/elpa2/$(am__dirstamp) \\\n\ttest/Fortran/elpa2/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_2stage_banded@SUFFIX@$(EXEEXT): $(validate_real_2stage_banded@SUFFIX@_OBJECTS) $(validate_real_2stage_banded@SUFFIX@_DEPENDENCIES) $(EXTRA_validate_real_2stage_banded@SUFFIX@_DEPENDENCIES) \n\t@rm -f validate_real_2stage_banded@SUFFIX@$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_2stage_banded@SUFFIX@_LINK) $(validate_real_2stage_banded@SUFFIX@_OBJECTS) $(validate_real_2stage_banded@SUFFIX@_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_cholesky_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_cholesky_1stage_gpu_random$(EXEEXT): $(validate_real_double_cholesky_1stage_gpu_random_OBJECTS) $(validate_real_double_cholesky_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_real_double_cholesky_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_real_double_cholesky_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_cholesky_1stage_gpu_random_LINK) $(validate_real_double_cholesky_1stage_gpu_random_OBJECTS) $(validate_real_double_cholesky_1stage_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_cholesky_1stage_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_cholesky_1stage_gpu_random_all_layouts$(EXEEXT): $(validate_real_double_cholesky_1stage_gpu_random_all_layouts_OBJECTS) $(validate_real_double_cholesky_1stage_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_cholesky_1stage_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_cholesky_1stage_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_cholesky_1stage_gpu_random_all_layouts_LINK) $(validate_real_double_cholesky_1stage_gpu_random_all_layouts_OBJECTS) $(validate_real_double_cholesky_1stage_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_cholesky_1stage_gpu_random_split_comm_myself-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_cholesky_1stage_gpu_random_split_comm_myself$(EXEEXT): $(validate_real_double_cholesky_1stage_gpu_random_split_comm_myself_OBJECTS) $(validate_real_double_cholesky_1stage_gpu_random_split_comm_myself_DEPENDENCIES) $(EXTRA_validate_real_double_cholesky_1stage_gpu_random_split_comm_myself_DEPENDENCIES) \n\t@rm -f validate_real_double_cholesky_1stage_gpu_random_split_comm_myself$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_cholesky_1stage_gpu_random_split_comm_myself_LINK) $(validate_real_double_cholesky_1stage_gpu_random_split_comm_myself_OBJECTS) $(validate_real_double_cholesky_1stage_gpu_random_split_comm_myself_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_cholesky_1stage_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_cholesky_1stage_gpu_toeplitz$(EXEEXT): $(validate_real_double_cholesky_1stage_gpu_toeplitz_OBJECTS) $(validate_real_double_cholesky_1stage_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_double_cholesky_1stage_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_double_cholesky_1stage_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_cholesky_1stage_gpu_toeplitz_LINK) $(validate_real_double_cholesky_1stage_gpu_toeplitz_OBJECTS) $(validate_real_double_cholesky_1stage_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_LINK) $(validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_cholesky_1stage_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_cholesky_1stage_random$(EXEEXT): $(validate_real_double_cholesky_1stage_random_OBJECTS) $(validate_real_double_cholesky_1stage_random_DEPENDENCIES) $(EXTRA_validate_real_double_cholesky_1stage_random_DEPENDENCIES) \n\t@rm -f validate_real_double_cholesky_1stage_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_cholesky_1stage_random_LINK) $(validate_real_double_cholesky_1stage_random_OBJECTS) $(validate_real_double_cholesky_1stage_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_cholesky_1stage_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_cholesky_1stage_random_all_layouts$(EXEEXT): $(validate_real_double_cholesky_1stage_random_all_layouts_OBJECTS) $(validate_real_double_cholesky_1stage_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_cholesky_1stage_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_cholesky_1stage_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_cholesky_1stage_random_all_layouts_LINK) $(validate_real_double_cholesky_1stage_random_all_layouts_OBJECTS) $(validate_real_double_cholesky_1stage_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_cholesky_1stage_random_split_comm_myself-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_cholesky_1stage_random_split_comm_myself$(EXEEXT): $(validate_real_double_cholesky_1stage_random_split_comm_myself_OBJECTS) $(validate_real_double_cholesky_1stage_random_split_comm_myself_DEPENDENCIES) $(EXTRA_validate_real_double_cholesky_1stage_random_split_comm_myself_DEPENDENCIES) \n\t@rm -f validate_real_double_cholesky_1stage_random_split_comm_myself$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_cholesky_1stage_random_split_comm_myself_LINK) $(validate_real_double_cholesky_1stage_random_split_comm_myself_OBJECTS) $(validate_real_double_cholesky_1stage_random_split_comm_myself_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_cholesky_1stage_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_cholesky_1stage_toeplitz$(EXEEXT): $(validate_real_double_cholesky_1stage_toeplitz_OBJECTS) $(validate_real_double_cholesky_1stage_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_double_cholesky_1stage_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_double_cholesky_1stage_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_cholesky_1stage_toeplitz_LINK) $(validate_real_double_cholesky_1stage_toeplitz_OBJECTS) $(validate_real_double_cholesky_1stage_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_cholesky_1stage_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_cholesky_1stage_toeplitz_all_layouts$(EXEEXT): $(validate_real_double_cholesky_1stage_toeplitz_all_layouts_OBJECTS) $(validate_real_double_cholesky_1stage_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_cholesky_1stage_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_cholesky_1stage_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_cholesky_1stage_toeplitz_all_layouts_LINK) $(validate_real_double_cholesky_1stage_toeplitz_all_layouts_OBJECTS) $(validate_real_double_cholesky_1stage_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvalues_1stage_frank-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvalues_1stage_frank$(EXEEXT): $(validate_real_double_eigenvalues_1stage_frank_OBJECTS) $(validate_real_double_eigenvalues_1stage_frank_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvalues_1stage_frank_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvalues_1stage_frank$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvalues_1stage_frank_LINK) $(validate_real_double_eigenvalues_1stage_frank_OBJECTS) $(validate_real_double_eigenvalues_1stage_frank_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvalues_1stage_frank_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvalues_1stage_frank_all_layouts$(EXEEXT): $(validate_real_double_eigenvalues_1stage_frank_all_layouts_OBJECTS) $(validate_real_double_eigenvalues_1stage_frank_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvalues_1stage_frank_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvalues_1stage_frank_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvalues_1stage_frank_all_layouts_LINK) $(validate_real_double_eigenvalues_1stage_frank_all_layouts_OBJECTS) $(validate_real_double_eigenvalues_1stage_frank_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvalues_1stage_gpu_frank-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvalues_1stage_gpu_frank$(EXEEXT): $(validate_real_double_eigenvalues_1stage_gpu_frank_OBJECTS) $(validate_real_double_eigenvalues_1stage_gpu_frank_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvalues_1stage_gpu_frank_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvalues_1stage_gpu_frank$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvalues_1stage_gpu_frank_LINK) $(validate_real_double_eigenvalues_1stage_gpu_frank_OBJECTS) $(validate_real_double_eigenvalues_1stage_gpu_frank_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvalues_1stage_gpu_frank_all_layouts$(EXEEXT): $(validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_OBJECTS) $(validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_LINK) $(validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_OBJECTS) $(validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvalues_1stage_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvalues_1stage_gpu_toeplitz$(EXEEXT): $(validate_real_double_eigenvalues_1stage_gpu_toeplitz_OBJECTS) $(validate_real_double_eigenvalues_1stage_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvalues_1stage_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvalues_1stage_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvalues_1stage_gpu_toeplitz_LINK) $(validate_real_double_eigenvalues_1stage_gpu_toeplitz_OBJECTS) $(validate_real_double_eigenvalues_1stage_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_LINK) $(validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvalues_1stage_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvalues_1stage_toeplitz$(EXEEXT): $(validate_real_double_eigenvalues_1stage_toeplitz_OBJECTS) $(validate_real_double_eigenvalues_1stage_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvalues_1stage_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvalues_1stage_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvalues_1stage_toeplitz_LINK) $(validate_real_double_eigenvalues_1stage_toeplitz_OBJECTS) $(validate_real_double_eigenvalues_1stage_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvalues_1stage_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvalues_1stage_toeplitz_all_layouts$(EXEEXT): $(validate_real_double_eigenvalues_1stage_toeplitz_all_layouts_OBJECTS) $(validate_real_double_eigenvalues_1stage_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvalues_1stage_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvalues_1stage_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvalues_1stage_toeplitz_all_layouts_LINK) $(validate_real_double_eigenvalues_1stage_toeplitz_all_layouts_OBJECTS) $(validate_real_double_eigenvalues_1stage_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_frank-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvalues_2stage_default_kernel_frank$(EXEEXT): $(validate_real_double_eigenvalues_2stage_default_kernel_frank_OBJECTS) $(validate_real_double_eigenvalues_2stage_default_kernel_frank_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvalues_2stage_default_kernel_frank_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvalues_2stage_default_kernel_frank$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvalues_2stage_default_kernel_frank_LINK) $(validate_real_double_eigenvalues_2stage_default_kernel_frank_OBJECTS) $(validate_real_double_eigenvalues_2stage_default_kernel_frank_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts$(EXEEXT): $(validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_OBJECTS) $(validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_LINK) $(validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_OBJECTS) $(validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvalues_2stage_default_kernel_gpu_frank$(EXEEXT): $(validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_OBJECTS) $(validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_LINK) $(validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_OBJECTS) $(validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts$(EXEEXT): $(validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_OBJECTS) $(validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_LINK) $(validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_OBJECTS) $(validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz$(EXEEXT): $(validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_OBJECTS) $(validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_LINK) $(validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_OBJECTS) $(validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_LINK) $(validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvalues_2stage_default_kernel_toeplitz$(EXEEXT): $(validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_OBJECTS) $(validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvalues_2stage_default_kernel_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_LINK) $(validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_OBJECTS) $(validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT): $(validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_OBJECTS) $(validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_LINK) $(validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_OBJECTS) $(validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_1stage_analytic-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_1stage_analytic$(EXEEXT): $(validate_real_double_eigenvectors_1stage_analytic_OBJECTS) $(validate_real_double_eigenvectors_1stage_analytic_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_1stage_analytic_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_1stage_analytic$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_1stage_analytic_LINK) $(validate_real_double_eigenvectors_1stage_analytic_OBJECTS) $(validate_real_double_eigenvectors_1stage_analytic_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_1stage_analytic_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_1stage_analytic_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_1stage_analytic_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_1stage_analytic_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_1stage_analytic_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_1stage_analytic_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_1stage_analytic_all_layouts_LINK) $(validate_real_double_eigenvectors_1stage_analytic_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_1stage_analytic_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_1stage_frank-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_1stage_frank$(EXEEXT): $(validate_real_double_eigenvectors_1stage_frank_OBJECTS) $(validate_real_double_eigenvectors_1stage_frank_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_1stage_frank_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_1stage_frank$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_1stage_frank_LINK) $(validate_real_double_eigenvectors_1stage_frank_OBJECTS) $(validate_real_double_eigenvectors_1stage_frank_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_1stage_frank_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_1stage_frank_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_1stage_frank_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_1stage_frank_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_1stage_frank_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_1stage_frank_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_1stage_frank_all_layouts_LINK) $(validate_real_double_eigenvectors_1stage_frank_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_1stage_frank_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_1stage_gpu_frank-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_1stage_gpu_frank$(EXEEXT): $(validate_real_double_eigenvectors_1stage_gpu_frank_OBJECTS) $(validate_real_double_eigenvectors_1stage_gpu_frank_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_1stage_gpu_frank_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_1stage_gpu_frank$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_1stage_gpu_frank_LINK) $(validate_real_double_eigenvectors_1stage_gpu_frank_OBJECTS) $(validate_real_double_eigenvectors_1stage_gpu_frank_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_1stage_gpu_frank_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_LINK) $(validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_1stage_gpu_random$(EXEEXT): $(validate_real_double_eigenvectors_1stage_gpu_random_OBJECTS) $(validate_real_double_eigenvectors_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_1stage_gpu_random_LINK) $(validate_real_double_eigenvectors_1stage_gpu_random_OBJECTS) $(validate_real_double_eigenvectors_1stage_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_1stage_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_1stage_gpu_random_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_1stage_gpu_random_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_1stage_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_1stage_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_1stage_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_1stage_gpu_random_all_layouts_LINK) $(validate_real_double_eigenvectors_1stage_gpu_random_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_1stage_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself$(EXEEXT): $(validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_OBJECTS) $(validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_LINK) $(validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_OBJECTS) $(validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_1stage_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_1stage_gpu_toeplitz$(EXEEXT): $(validate_real_double_eigenvectors_1stage_gpu_toeplitz_OBJECTS) $(validate_real_double_eigenvectors_1stage_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_1stage_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_1stage_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_1stage_gpu_toeplitz_LINK) $(validate_real_double_eigenvectors_1stage_gpu_toeplitz_OBJECTS) $(validate_real_double_eigenvectors_1stage_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_LINK) $(validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_1stage_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_1stage_random$(EXEEXT): $(validate_real_double_eigenvectors_1stage_random_OBJECTS) $(validate_real_double_eigenvectors_1stage_random_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_1stage_random_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_1stage_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_1stage_random_LINK) $(validate_real_double_eigenvectors_1stage_random_OBJECTS) $(validate_real_double_eigenvectors_1stage_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_1stage_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_1stage_random_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_1stage_random_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_1stage_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_1stage_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_1stage_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_1stage_random_all_layouts_LINK) $(validate_real_double_eigenvectors_1stage_random_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_1stage_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_1stage_random_split_comm_myself-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_1stage_random_split_comm_myself$(EXEEXT): $(validate_real_double_eigenvectors_1stage_random_split_comm_myself_OBJECTS) $(validate_real_double_eigenvectors_1stage_random_split_comm_myself_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_1stage_random_split_comm_myself_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_1stage_random_split_comm_myself$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_1stage_random_split_comm_myself_LINK) $(validate_real_double_eigenvectors_1stage_random_split_comm_myself_OBJECTS) $(validate_real_double_eigenvectors_1stage_random_split_comm_myself_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_1stage_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_1stage_toeplitz$(EXEEXT): $(validate_real_double_eigenvectors_1stage_toeplitz_OBJECTS) $(validate_real_double_eigenvectors_1stage_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_1stage_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_1stage_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_1stage_toeplitz_LINK) $(validate_real_double_eigenvectors_1stage_toeplitz_OBJECTS) $(validate_real_double_eigenvectors_1stage_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_1stage_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_1stage_toeplitz_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_1stage_toeplitz_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_1stage_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_1stage_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_1stage_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_1stage_toeplitz_all_layouts_LINK) $(validate_real_double_eigenvectors_1stage_toeplitz_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_1stage_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_analytic-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_all_kernels_analytic$(EXEEXT): $(validate_real_double_eigenvectors_2stage_all_kernels_analytic_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_analytic_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_all_kernels_analytic_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_all_kernels_analytic$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_all_kernels_analytic_LINK) $(validate_real_double_eigenvectors_2stage_all_kernels_analytic_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_analytic_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_LINK) $(validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_frank-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_all_kernels_frank$(EXEEXT): $(validate_real_double_eigenvectors_2stage_all_kernels_frank_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_frank_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_all_kernels_frank_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_all_kernels_frank$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_all_kernels_frank_LINK) $(validate_real_double_eigenvectors_2stage_all_kernels_frank_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_frank_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_LINK) $(validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_frank$(EXEEXT): $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_LINK) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_LINK) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_random$(EXEEXT): $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_all_kernels_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_LINK) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_LINK) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz$(EXEEXT): $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_LINK) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_LINK) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_qr_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_all_kernels_qr_random$(EXEEXT): $(validate_real_double_eigenvectors_2stage_all_kernels_qr_random_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_qr_random_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_all_kernels_qr_random_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_all_kernels_qr_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_all_kernels_qr_random_LINK) $(validate_real_double_eigenvectors_2stage_all_kernels_qr_random_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_qr_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_LINK) $(validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_all_kernels_random$(EXEEXT): $(validate_real_double_eigenvectors_2stage_all_kernels_random_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_random_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_all_kernels_random_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_all_kernels_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_all_kernels_random_LINK) $(validate_real_double_eigenvectors_2stage_all_kernels_random_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_LINK) $(validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_all_kernels_toeplitz$(EXEEXT): $(validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_all_kernels_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_LINK) $(validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_LINK) $(validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_analytic-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_default_kernel_analytic$(EXEEXT): $(validate_real_double_eigenvectors_2stage_default_kernel_analytic_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_analytic_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_default_kernel_analytic_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_default_kernel_analytic$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_default_kernel_analytic_LINK) $(validate_real_double_eigenvectors_2stage_default_kernel_analytic_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_analytic_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_LINK) $(validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_frank-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_default_kernel_frank$(EXEEXT): $(validate_real_double_eigenvectors_2stage_default_kernel_frank_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_frank_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_default_kernel_frank_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_default_kernel_frank$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_default_kernel_frank_LINK) $(validate_real_double_eigenvectors_2stage_default_kernel_frank_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_frank_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_LINK) $(validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_frank$(EXEEXT): $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_LINK) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_LINK) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT): $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_LINK) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_LINK) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself$(EXEEXT): $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_LINK) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz$(EXEEXT): $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_LINK) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_LINK) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_qr_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_default_kernel_qr_random$(EXEEXT): $(validate_real_double_eigenvectors_2stage_default_kernel_qr_random_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_qr_random_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_default_kernel_qr_random_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_default_kernel_qr_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_default_kernel_qr_random_LINK) $(validate_real_double_eigenvectors_2stage_default_kernel_qr_random_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_qr_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_LINK) $(validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_default_kernel_random$(EXEEXT): $(validate_real_double_eigenvectors_2stage_default_kernel_random_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_random_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_default_kernel_random_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_default_kernel_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_default_kernel_random_LINK) $(validate_real_double_eigenvectors_2stage_default_kernel_random_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_LINK) $(validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself$(EXEEXT): $(validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_LINK) $(validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_default_kernel_toeplitz$(EXEEXT): $(validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_default_kernel_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_LINK) $(validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_LINK) $(validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_scalapack_all_analytic-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_scalapack_all_analytic$(EXEEXT): $(validate_real_double_eigenvectors_scalapack_all_analytic_OBJECTS) $(validate_real_double_eigenvectors_scalapack_all_analytic_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_scalapack_all_analytic_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_scalapack_all_analytic$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_scalapack_all_analytic_LINK) $(validate_real_double_eigenvectors_scalapack_all_analytic_OBJECTS) $(validate_real_double_eigenvectors_scalapack_all_analytic_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_scalapack_all_analytic_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_LINK) $(validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_scalapack_part_analytic-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_scalapack_part_analytic$(EXEEXT): $(validate_real_double_eigenvectors_scalapack_part_analytic_OBJECTS) $(validate_real_double_eigenvectors_scalapack_part_analytic_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_scalapack_part_analytic_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_scalapack_part_analytic$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_scalapack_part_analytic_LINK) $(validate_real_double_eigenvectors_scalapack_part_analytic_OBJECTS) $(validate_real_double_eigenvectors_scalapack_part_analytic_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_eigenvectors_scalapack_part_analytic_all_layouts$(EXEEXT): $(validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_LINK) $(validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_OBJECTS) $(validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_generalized_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_generalized_1stage_gpu_random$(EXEEXT): $(validate_real_double_generalized_1stage_gpu_random_OBJECTS) $(validate_real_double_generalized_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_real_double_generalized_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_real_double_generalized_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_generalized_1stage_gpu_random_LINK) $(validate_real_double_generalized_1stage_gpu_random_OBJECTS) $(validate_real_double_generalized_1stage_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_generalized_1stage_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_generalized_1stage_gpu_random_all_layouts$(EXEEXT): $(validate_real_double_generalized_1stage_gpu_random_all_layouts_OBJECTS) $(validate_real_double_generalized_1stage_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_generalized_1stage_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_generalized_1stage_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_generalized_1stage_gpu_random_all_layouts_LINK) $(validate_real_double_generalized_1stage_gpu_random_all_layouts_OBJECTS) $(validate_real_double_generalized_1stage_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_generalized_1stage_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_generalized_1stage_random$(EXEEXT): $(validate_real_double_generalized_1stage_random_OBJECTS) $(validate_real_double_generalized_1stage_random_DEPENDENCIES) $(EXTRA_validate_real_double_generalized_1stage_random_DEPENDENCIES) \n\t@rm -f validate_real_double_generalized_1stage_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_generalized_1stage_random_LINK) $(validate_real_double_generalized_1stage_random_OBJECTS) $(validate_real_double_generalized_1stage_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_generalized_1stage_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_generalized_1stage_random_all_layouts$(EXEEXT): $(validate_real_double_generalized_1stage_random_all_layouts_OBJECTS) $(validate_real_double_generalized_1stage_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_generalized_1stage_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_generalized_1stage_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_generalized_1stage_random_all_layouts_LINK) $(validate_real_double_generalized_1stage_random_all_layouts_OBJECTS) $(validate_real_double_generalized_1stage_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_generalized_decomp_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_generalized_decomp_1stage_gpu_random$(EXEEXT): $(validate_real_double_generalized_decomp_1stage_gpu_random_OBJECTS) $(validate_real_double_generalized_decomp_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_real_double_generalized_decomp_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_real_double_generalized_decomp_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_generalized_decomp_1stage_gpu_random_LINK) $(validate_real_double_generalized_decomp_1stage_gpu_random_OBJECTS) $(validate_real_double_generalized_decomp_1stage_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_generalized_decomp_1stage_gpu_random_all_layouts$(EXEEXT): $(validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_OBJECTS) $(validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_LINK) $(validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_OBJECTS) $(validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_generalized_decomp_1stage_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_generalized_decomp_1stage_random$(EXEEXT): $(validate_real_double_generalized_decomp_1stage_random_OBJECTS) $(validate_real_double_generalized_decomp_1stage_random_DEPENDENCIES) $(EXTRA_validate_real_double_generalized_decomp_1stage_random_DEPENDENCIES) \n\t@rm -f validate_real_double_generalized_decomp_1stage_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_generalized_decomp_1stage_random_LINK) $(validate_real_double_generalized_decomp_1stage_random_OBJECTS) $(validate_real_double_generalized_decomp_1stage_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_generalized_decomp_1stage_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_generalized_decomp_1stage_random_all_layouts$(EXEEXT): $(validate_real_double_generalized_decomp_1stage_random_all_layouts_OBJECTS) $(validate_real_double_generalized_decomp_1stage_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_generalized_decomp_1stage_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_generalized_decomp_1stage_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_generalized_decomp_1stage_random_all_layouts_LINK) $(validate_real_double_generalized_decomp_1stage_random_all_layouts_OBJECTS) $(validate_real_double_generalized_decomp_1stage_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_hermitian_multiply_1stage_frank-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_hermitian_multiply_1stage_frank$(EXEEXT): $(validate_real_double_hermitian_multiply_1stage_frank_OBJECTS) $(validate_real_double_hermitian_multiply_1stage_frank_DEPENDENCIES) $(EXTRA_validate_real_double_hermitian_multiply_1stage_frank_DEPENDENCIES) \n\t@rm -f validate_real_double_hermitian_multiply_1stage_frank$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_hermitian_multiply_1stage_frank_LINK) $(validate_real_double_hermitian_multiply_1stage_frank_OBJECTS) $(validate_real_double_hermitian_multiply_1stage_frank_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_hermitian_multiply_1stage_frank_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_hermitian_multiply_1stage_frank_all_layouts$(EXEEXT): $(validate_real_double_hermitian_multiply_1stage_frank_all_layouts_OBJECTS) $(validate_real_double_hermitian_multiply_1stage_frank_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_hermitian_multiply_1stage_frank_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_hermitian_multiply_1stage_frank_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_hermitian_multiply_1stage_frank_all_layouts_LINK) $(validate_real_double_hermitian_multiply_1stage_frank_all_layouts_OBJECTS) $(validate_real_double_hermitian_multiply_1stage_frank_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_hermitian_multiply_1stage_gpu_frank-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_hermitian_multiply_1stage_gpu_frank$(EXEEXT): $(validate_real_double_hermitian_multiply_1stage_gpu_frank_OBJECTS) $(validate_real_double_hermitian_multiply_1stage_gpu_frank_DEPENDENCIES) $(EXTRA_validate_real_double_hermitian_multiply_1stage_gpu_frank_DEPENDENCIES) \n\t@rm -f validate_real_double_hermitian_multiply_1stage_gpu_frank$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_hermitian_multiply_1stage_gpu_frank_LINK) $(validate_real_double_hermitian_multiply_1stage_gpu_frank_OBJECTS) $(validate_real_double_hermitian_multiply_1stage_gpu_frank_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts$(EXEEXT): $(validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_OBJECTS) $(validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_LINK) $(validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_OBJECTS) $(validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_hermitian_multiply_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_hermitian_multiply_1stage_gpu_random$(EXEEXT): $(validate_real_double_hermitian_multiply_1stage_gpu_random_OBJECTS) $(validate_real_double_hermitian_multiply_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_real_double_hermitian_multiply_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_real_double_hermitian_multiply_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_hermitian_multiply_1stage_gpu_random_LINK) $(validate_real_double_hermitian_multiply_1stage_gpu_random_OBJECTS) $(validate_real_double_hermitian_multiply_1stage_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts$(EXEEXT): $(validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_OBJECTS) $(validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_LINK) $(validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_OBJECTS) $(validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_hermitian_multiply_1stage_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_hermitian_multiply_1stage_random$(EXEEXT): $(validate_real_double_hermitian_multiply_1stage_random_OBJECTS) $(validate_real_double_hermitian_multiply_1stage_random_DEPENDENCIES) $(EXTRA_validate_real_double_hermitian_multiply_1stage_random_DEPENDENCIES) \n\t@rm -f validate_real_double_hermitian_multiply_1stage_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_hermitian_multiply_1stage_random_LINK) $(validate_real_double_hermitian_multiply_1stage_random_OBJECTS) $(validate_real_double_hermitian_multiply_1stage_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_hermitian_multiply_1stage_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_hermitian_multiply_1stage_random_all_layouts$(EXEEXT): $(validate_real_double_hermitian_multiply_1stage_random_all_layouts_OBJECTS) $(validate_real_double_hermitian_multiply_1stage_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_hermitian_multiply_1stage_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_hermitian_multiply_1stage_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_hermitian_multiply_1stage_random_all_layouts_LINK) $(validate_real_double_hermitian_multiply_1stage_random_all_layouts_OBJECTS) $(validate_real_double_hermitian_multiply_1stage_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_solve_tridiagonal_1stage_gpu_toeplitz$(EXEEXT): $(validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_OBJECTS) $(validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_LINK) $(validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_OBJECTS) $(validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_LINK) $(validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_solve_tridiagonal_1stage_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_solve_tridiagonal_1stage_toeplitz$(EXEEXT): $(validate_real_double_solve_tridiagonal_1stage_toeplitz_OBJECTS) $(validate_real_double_solve_tridiagonal_1stage_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_double_solve_tridiagonal_1stage_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_double_solve_tridiagonal_1stage_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_solve_tridiagonal_1stage_toeplitz_LINK) $(validate_real_double_solve_tridiagonal_1stage_toeplitz_OBJECTS) $(validate_real_double_solve_tridiagonal_1stage_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts$(EXEEXT): $(validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_OBJECTS) $(validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_LINK) $(validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_OBJECTS) $(validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_cholesky_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_cholesky_1stage_gpu_random$(EXEEXT): $(validate_real_single_cholesky_1stage_gpu_random_OBJECTS) $(validate_real_single_cholesky_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_real_single_cholesky_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_real_single_cholesky_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_cholesky_1stage_gpu_random_LINK) $(validate_real_single_cholesky_1stage_gpu_random_OBJECTS) $(validate_real_single_cholesky_1stage_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_cholesky_1stage_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_cholesky_1stage_gpu_random_all_layouts$(EXEEXT): $(validate_real_single_cholesky_1stage_gpu_random_all_layouts_OBJECTS) $(validate_real_single_cholesky_1stage_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_cholesky_1stage_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_cholesky_1stage_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_cholesky_1stage_gpu_random_all_layouts_LINK) $(validate_real_single_cholesky_1stage_gpu_random_all_layouts_OBJECTS) $(validate_real_single_cholesky_1stage_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_cholesky_1stage_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_cholesky_1stage_gpu_toeplitz$(EXEEXT): $(validate_real_single_cholesky_1stage_gpu_toeplitz_OBJECTS) $(validate_real_single_cholesky_1stage_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_single_cholesky_1stage_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_single_cholesky_1stage_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_cholesky_1stage_gpu_toeplitz_LINK) $(validate_real_single_cholesky_1stage_gpu_toeplitz_OBJECTS) $(validate_real_single_cholesky_1stage_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_LINK) $(validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_cholesky_1stage_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_cholesky_1stage_random$(EXEEXT): $(validate_real_single_cholesky_1stage_random_OBJECTS) $(validate_real_single_cholesky_1stage_random_DEPENDENCIES) $(EXTRA_validate_real_single_cholesky_1stage_random_DEPENDENCIES) \n\t@rm -f validate_real_single_cholesky_1stage_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_cholesky_1stage_random_LINK) $(validate_real_single_cholesky_1stage_random_OBJECTS) $(validate_real_single_cholesky_1stage_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_cholesky_1stage_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_cholesky_1stage_random_all_layouts$(EXEEXT): $(validate_real_single_cholesky_1stage_random_all_layouts_OBJECTS) $(validate_real_single_cholesky_1stage_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_cholesky_1stage_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_cholesky_1stage_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_cholesky_1stage_random_all_layouts_LINK) $(validate_real_single_cholesky_1stage_random_all_layouts_OBJECTS) $(validate_real_single_cholesky_1stage_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_cholesky_1stage_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_cholesky_1stage_toeplitz$(EXEEXT): $(validate_real_single_cholesky_1stage_toeplitz_OBJECTS) $(validate_real_single_cholesky_1stage_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_single_cholesky_1stage_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_single_cholesky_1stage_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_cholesky_1stage_toeplitz_LINK) $(validate_real_single_cholesky_1stage_toeplitz_OBJECTS) $(validate_real_single_cholesky_1stage_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_cholesky_1stage_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_cholesky_1stage_toeplitz_all_layouts$(EXEEXT): $(validate_real_single_cholesky_1stage_toeplitz_all_layouts_OBJECTS) $(validate_real_single_cholesky_1stage_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_cholesky_1stage_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_cholesky_1stage_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_cholesky_1stage_toeplitz_all_layouts_LINK) $(validate_real_single_cholesky_1stage_toeplitz_all_layouts_OBJECTS) $(validate_real_single_cholesky_1stage_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvalues_1stage_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvalues_1stage_gpu_toeplitz$(EXEEXT): $(validate_real_single_eigenvalues_1stage_gpu_toeplitz_OBJECTS) $(validate_real_single_eigenvalues_1stage_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvalues_1stage_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvalues_1stage_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvalues_1stage_gpu_toeplitz_LINK) $(validate_real_single_eigenvalues_1stage_gpu_toeplitz_OBJECTS) $(validate_real_single_eigenvalues_1stage_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_LINK) $(validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvalues_1stage_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvalues_1stage_toeplitz$(EXEEXT): $(validate_real_single_eigenvalues_1stage_toeplitz_OBJECTS) $(validate_real_single_eigenvalues_1stage_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvalues_1stage_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvalues_1stage_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvalues_1stage_toeplitz_LINK) $(validate_real_single_eigenvalues_1stage_toeplitz_OBJECTS) $(validate_real_single_eigenvalues_1stage_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvalues_1stage_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvalues_1stage_toeplitz_all_layouts$(EXEEXT): $(validate_real_single_eigenvalues_1stage_toeplitz_all_layouts_OBJECTS) $(validate_real_single_eigenvalues_1stage_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvalues_1stage_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvalues_1stage_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvalues_1stage_toeplitz_all_layouts_LINK) $(validate_real_single_eigenvalues_1stage_toeplitz_all_layouts_OBJECTS) $(validate_real_single_eigenvalues_1stage_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz$(EXEEXT): $(validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_OBJECTS) $(validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_LINK) $(validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_OBJECTS) $(validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_LINK) $(validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvalues_2stage_default_kernel_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvalues_2stage_default_kernel_toeplitz$(EXEEXT): $(validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_OBJECTS) $(validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvalues_2stage_default_kernel_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_LINK) $(validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_OBJECTS) $(validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT): $(validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_OBJECTS) $(validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_LINK) $(validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_OBJECTS) $(validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_1stage_analytic-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_1stage_analytic$(EXEEXT): $(validate_real_single_eigenvectors_1stage_analytic_OBJECTS) $(validate_real_single_eigenvectors_1stage_analytic_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_1stage_analytic_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_1stage_analytic$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_1stage_analytic_LINK) $(validate_real_single_eigenvectors_1stage_analytic_OBJECTS) $(validate_real_single_eigenvectors_1stage_analytic_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_1stage_analytic_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_1stage_analytic_all_layouts$(EXEEXT): $(validate_real_single_eigenvectors_1stage_analytic_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_1stage_analytic_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_1stage_analytic_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_1stage_analytic_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_1stage_analytic_all_layouts_LINK) $(validate_real_single_eigenvectors_1stage_analytic_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_1stage_analytic_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_1stage_gpu_random$(EXEEXT): $(validate_real_single_eigenvectors_1stage_gpu_random_OBJECTS) $(validate_real_single_eigenvectors_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_1stage_gpu_random_LINK) $(validate_real_single_eigenvectors_1stage_gpu_random_OBJECTS) $(validate_real_single_eigenvectors_1stage_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_1stage_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_1stage_gpu_random_all_layouts$(EXEEXT): $(validate_real_single_eigenvectors_1stage_gpu_random_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_1stage_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_1stage_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_1stage_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_1stage_gpu_random_all_layouts_LINK) $(validate_real_single_eigenvectors_1stage_gpu_random_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_1stage_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_1stage_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_1stage_gpu_toeplitz$(EXEEXT): $(validate_real_single_eigenvectors_1stage_gpu_toeplitz_OBJECTS) $(validate_real_single_eigenvectors_1stage_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_1stage_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_1stage_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_1stage_gpu_toeplitz_LINK) $(validate_real_single_eigenvectors_1stage_gpu_toeplitz_OBJECTS) $(validate_real_single_eigenvectors_1stage_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_LINK) $(validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_1stage_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_1stage_random$(EXEEXT): $(validate_real_single_eigenvectors_1stage_random_OBJECTS) $(validate_real_single_eigenvectors_1stage_random_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_1stage_random_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_1stage_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_1stage_random_LINK) $(validate_real_single_eigenvectors_1stage_random_OBJECTS) $(validate_real_single_eigenvectors_1stage_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_1stage_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_1stage_random_all_layouts$(EXEEXT): $(validate_real_single_eigenvectors_1stage_random_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_1stage_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_1stage_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_1stage_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_1stage_random_all_layouts_LINK) $(validate_real_single_eigenvectors_1stage_random_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_1stage_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_1stage_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_1stage_toeplitz$(EXEEXT): $(validate_real_single_eigenvectors_1stage_toeplitz_OBJECTS) $(validate_real_single_eigenvectors_1stage_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_1stage_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_1stage_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_1stage_toeplitz_LINK) $(validate_real_single_eigenvectors_1stage_toeplitz_OBJECTS) $(validate_real_single_eigenvectors_1stage_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_1stage_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_1stage_toeplitz_all_layouts$(EXEEXT): $(validate_real_single_eigenvectors_1stage_toeplitz_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_1stage_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_1stage_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_1stage_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_1stage_toeplitz_all_layouts_LINK) $(validate_real_single_eigenvectors_1stage_toeplitz_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_1stage_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_analytic-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_2stage_all_kernels_analytic$(EXEEXT): $(validate_real_single_eigenvectors_2stage_all_kernels_analytic_OBJECTS) $(validate_real_single_eigenvectors_2stage_all_kernels_analytic_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_2stage_all_kernels_analytic_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_2stage_all_kernels_analytic$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_2stage_all_kernels_analytic_LINK) $(validate_real_single_eigenvectors_2stage_all_kernels_analytic_OBJECTS) $(validate_real_single_eigenvectors_2stage_all_kernels_analytic_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts$(EXEEXT): $(validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_LINK) $(validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_2stage_all_kernels_gpu_random$(EXEEXT): $(validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_OBJECTS) $(validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_2stage_all_kernels_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_LINK) $(validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_OBJECTS) $(validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts$(EXEEXT): $(validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_LINK) $(validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz$(EXEEXT): $(validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_OBJECTS) $(validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_LINK) $(validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_OBJECTS) $(validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_LINK) $(validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_qr_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_2stage_all_kernels_qr_random$(EXEEXT): $(validate_real_single_eigenvectors_2stage_all_kernels_qr_random_OBJECTS) $(validate_real_single_eigenvectors_2stage_all_kernels_qr_random_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_2stage_all_kernels_qr_random_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_2stage_all_kernels_qr_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_2stage_all_kernels_qr_random_LINK) $(validate_real_single_eigenvectors_2stage_all_kernels_qr_random_OBJECTS) $(validate_real_single_eigenvectors_2stage_all_kernels_qr_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts$(EXEEXT): $(validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_LINK) $(validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_2stage_all_kernels_random$(EXEEXT): $(validate_real_single_eigenvectors_2stage_all_kernels_random_OBJECTS) $(validate_real_single_eigenvectors_2stage_all_kernels_random_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_2stage_all_kernels_random_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_2stage_all_kernels_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_2stage_all_kernels_random_LINK) $(validate_real_single_eigenvectors_2stage_all_kernels_random_OBJECTS) $(validate_real_single_eigenvectors_2stage_all_kernels_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts$(EXEEXT): $(validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_LINK) $(validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_2stage_all_kernels_toeplitz$(EXEEXT): $(validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_OBJECTS) $(validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_2stage_all_kernels_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_LINK) $(validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_OBJECTS) $(validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts$(EXEEXT): $(validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_LINK) $(validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_analytic-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_2stage_default_kernel_analytic$(EXEEXT): $(validate_real_single_eigenvectors_2stage_default_kernel_analytic_OBJECTS) $(validate_real_single_eigenvectors_2stage_default_kernel_analytic_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_2stage_default_kernel_analytic_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_2stage_default_kernel_analytic$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_2stage_default_kernel_analytic_LINK) $(validate_real_single_eigenvectors_2stage_default_kernel_analytic_OBJECTS) $(validate_real_single_eigenvectors_2stage_default_kernel_analytic_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts$(EXEEXT): $(validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_LINK) $(validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT): $(validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS) $(validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_2stage_default_kernel_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_LINK) $(validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_OBJECTS) $(validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts$(EXEEXT): $(validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_LINK) $(validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz$(EXEEXT): $(validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_OBJECTS) $(validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_LINK) $(validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_OBJECTS) $(validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_LINK) $(validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_qr_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_2stage_default_kernel_qr_random$(EXEEXT): $(validate_real_single_eigenvectors_2stage_default_kernel_qr_random_OBJECTS) $(validate_real_single_eigenvectors_2stage_default_kernel_qr_random_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_2stage_default_kernel_qr_random_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_2stage_default_kernel_qr_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_2stage_default_kernel_qr_random_LINK) $(validate_real_single_eigenvectors_2stage_default_kernel_qr_random_OBJECTS) $(validate_real_single_eigenvectors_2stage_default_kernel_qr_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts$(EXEEXT): $(validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_LINK) $(validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_2stage_default_kernel_random$(EXEEXT): $(validate_real_single_eigenvectors_2stage_default_kernel_random_OBJECTS) $(validate_real_single_eigenvectors_2stage_default_kernel_random_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_2stage_default_kernel_random_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_2stage_default_kernel_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_2stage_default_kernel_random_LINK) $(validate_real_single_eigenvectors_2stage_default_kernel_random_OBJECTS) $(validate_real_single_eigenvectors_2stage_default_kernel_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts$(EXEEXT): $(validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_LINK) $(validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_2stage_default_kernel_toeplitz$(EXEEXT): $(validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_OBJECTS) $(validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_2stage_default_kernel_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_LINK) $(validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_OBJECTS) $(validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT): $(validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_LINK) $(validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_OBJECTS) $(validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_generalized_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_generalized_1stage_gpu_random$(EXEEXT): $(validate_real_single_generalized_1stage_gpu_random_OBJECTS) $(validate_real_single_generalized_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_real_single_generalized_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_real_single_generalized_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_generalized_1stage_gpu_random_LINK) $(validate_real_single_generalized_1stage_gpu_random_OBJECTS) $(validate_real_single_generalized_1stage_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_generalized_1stage_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_generalized_1stage_gpu_random_all_layouts$(EXEEXT): $(validate_real_single_generalized_1stage_gpu_random_all_layouts_OBJECTS) $(validate_real_single_generalized_1stage_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_generalized_1stage_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_generalized_1stage_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_generalized_1stage_gpu_random_all_layouts_LINK) $(validate_real_single_generalized_1stage_gpu_random_all_layouts_OBJECTS) $(validate_real_single_generalized_1stage_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_generalized_1stage_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_generalized_1stage_random$(EXEEXT): $(validate_real_single_generalized_1stage_random_OBJECTS) $(validate_real_single_generalized_1stage_random_DEPENDENCIES) $(EXTRA_validate_real_single_generalized_1stage_random_DEPENDENCIES) \n\t@rm -f validate_real_single_generalized_1stage_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_generalized_1stage_random_LINK) $(validate_real_single_generalized_1stage_random_OBJECTS) $(validate_real_single_generalized_1stage_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_generalized_1stage_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_generalized_1stage_random_all_layouts$(EXEEXT): $(validate_real_single_generalized_1stage_random_all_layouts_OBJECTS) $(validate_real_single_generalized_1stage_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_generalized_1stage_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_generalized_1stage_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_generalized_1stage_random_all_layouts_LINK) $(validate_real_single_generalized_1stage_random_all_layouts_OBJECTS) $(validate_real_single_generalized_1stage_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_generalized_decomp_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_generalized_decomp_1stage_gpu_random$(EXEEXT): $(validate_real_single_generalized_decomp_1stage_gpu_random_OBJECTS) $(validate_real_single_generalized_decomp_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_real_single_generalized_decomp_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_real_single_generalized_decomp_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_generalized_decomp_1stage_gpu_random_LINK) $(validate_real_single_generalized_decomp_1stage_gpu_random_OBJECTS) $(validate_real_single_generalized_decomp_1stage_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_generalized_decomp_1stage_gpu_random_all_layouts$(EXEEXT): $(validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_OBJECTS) $(validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_LINK) $(validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_OBJECTS) $(validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_generalized_decomp_1stage_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_generalized_decomp_1stage_random$(EXEEXT): $(validate_real_single_generalized_decomp_1stage_random_OBJECTS) $(validate_real_single_generalized_decomp_1stage_random_DEPENDENCIES) $(EXTRA_validate_real_single_generalized_decomp_1stage_random_DEPENDENCIES) \n\t@rm -f validate_real_single_generalized_decomp_1stage_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_generalized_decomp_1stage_random_LINK) $(validate_real_single_generalized_decomp_1stage_random_OBJECTS) $(validate_real_single_generalized_decomp_1stage_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_generalized_decomp_1stage_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_generalized_decomp_1stage_random_all_layouts$(EXEEXT): $(validate_real_single_generalized_decomp_1stage_random_all_layouts_OBJECTS) $(validate_real_single_generalized_decomp_1stage_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_generalized_decomp_1stage_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_generalized_decomp_1stage_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_generalized_decomp_1stage_random_all_layouts_LINK) $(validate_real_single_generalized_decomp_1stage_random_all_layouts_OBJECTS) $(validate_real_single_generalized_decomp_1stage_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_hermitian_multiply_1stage_gpu_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_hermitian_multiply_1stage_gpu_random$(EXEEXT): $(validate_real_single_hermitian_multiply_1stage_gpu_random_OBJECTS) $(validate_real_single_hermitian_multiply_1stage_gpu_random_DEPENDENCIES) $(EXTRA_validate_real_single_hermitian_multiply_1stage_gpu_random_DEPENDENCIES) \n\t@rm -f validate_real_single_hermitian_multiply_1stage_gpu_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_hermitian_multiply_1stage_gpu_random_LINK) $(validate_real_single_hermitian_multiply_1stage_gpu_random_OBJECTS) $(validate_real_single_hermitian_multiply_1stage_gpu_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts$(EXEEXT): $(validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_OBJECTS) $(validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_LINK) $(validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_OBJECTS) $(validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_hermitian_multiply_1stage_random-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_hermitian_multiply_1stage_random$(EXEEXT): $(validate_real_single_hermitian_multiply_1stage_random_OBJECTS) $(validate_real_single_hermitian_multiply_1stage_random_DEPENDENCIES) $(EXTRA_validate_real_single_hermitian_multiply_1stage_random_DEPENDENCIES) \n\t@rm -f validate_real_single_hermitian_multiply_1stage_random$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_hermitian_multiply_1stage_random_LINK) $(validate_real_single_hermitian_multiply_1stage_random_OBJECTS) $(validate_real_single_hermitian_multiply_1stage_random_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_hermitian_multiply_1stage_random_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_hermitian_multiply_1stage_random_all_layouts$(EXEEXT): $(validate_real_single_hermitian_multiply_1stage_random_all_layouts_OBJECTS) $(validate_real_single_hermitian_multiply_1stage_random_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_hermitian_multiply_1stage_random_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_hermitian_multiply_1stage_random_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_hermitian_multiply_1stage_random_all_layouts_LINK) $(validate_real_single_hermitian_multiply_1stage_random_all_layouts_OBJECTS) $(validate_real_single_hermitian_multiply_1stage_random_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_solve_tridiagonal_1stage_gpu_toeplitz$(EXEEXT): $(validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_OBJECTS) $(validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_LINK) $(validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_OBJECTS) $(validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts$(EXEEXT): $(validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_LINK) $(validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_OBJECTS) $(validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_solve_tridiagonal_1stage_toeplitz-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_solve_tridiagonal_1stage_toeplitz$(EXEEXT): $(validate_real_single_solve_tridiagonal_1stage_toeplitz_OBJECTS) $(validate_real_single_solve_tridiagonal_1stage_toeplitz_DEPENDENCIES) $(EXTRA_validate_real_single_solve_tridiagonal_1stage_toeplitz_DEPENDENCIES) \n\t@rm -f validate_real_single_solve_tridiagonal_1stage_toeplitz$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_solve_tridiagonal_1stage_toeplitz_LINK) $(validate_real_single_solve_tridiagonal_1stage_toeplitz_OBJECTS) $(validate_real_single_solve_tridiagonal_1stage_toeplitz_LDADD) $(LIBS)\ntest/Fortran/validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts-test.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts$(EXEEXT): $(validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_OBJECTS) $(validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_DEPENDENCIES) $(EXTRA_validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_DEPENDENCIES) \n\t@rm -f validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_LINK) $(validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_OBJECTS) $(validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_LDADD) $(LIBS)\ntest/Fortran/elpa2/validate_single_complex_2stage_banded@SUFFIX@-single_complex_2stage_banded.$(OBJEXT):  \\\n\ttest/Fortran/elpa2/$(am__dirstamp) \\\n\ttest/Fortran/elpa2/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_single_complex_2stage_banded@SUFFIX@$(EXEEXT): $(validate_single_complex_2stage_banded@SUFFIX@_OBJECTS) $(validate_single_complex_2stage_banded@SUFFIX@_DEPENDENCIES) $(EXTRA_validate_single_complex_2stage_banded@SUFFIX@_DEPENDENCIES) \n\t@rm -f validate_single_complex_2stage_banded@SUFFIX@$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_single_complex_2stage_banded@SUFFIX@_LINK) $(validate_single_complex_2stage_banded@SUFFIX@_OBJECTS) $(validate_single_complex_2stage_banded@SUFFIX@_LDADD) $(LIBS)\ntest/Fortran/elpa2/validate_single_real_2stage_banded@SUFFIX@-single_real_2stage_banded.$(OBJEXT):  \\\n\ttest/Fortran/elpa2/$(am__dirstamp) \\\n\ttest/Fortran/elpa2/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_single_real_2stage_banded@SUFFIX@$(EXEEXT): $(validate_single_real_2stage_banded@SUFFIX@_OBJECTS) $(validate_single_real_2stage_banded@SUFFIX@_DEPENDENCIES) $(EXTRA_validate_single_real_2stage_banded@SUFFIX@_DEPENDENCIES) \n\t@rm -f validate_single_real_2stage_banded@SUFFIX@$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_single_real_2stage_banded@SUFFIX@_LINK) $(validate_single_real_2stage_banded@SUFFIX@_OBJECTS) $(validate_single_real_2stage_banded@SUFFIX@_LDADD) $(LIBS)\ntest/Fortran/validate_split_comm_real_double-test_split_comm.$(OBJEXT):  \\\n\ttest/Fortran/$(am__dirstamp) \\\n\ttest/Fortran/$(DEPDIR)/$(am__dirstamp)\n\nvalidate_split_comm_real_double$(EXEEXT): $(validate_split_comm_real_double_OBJECTS) $(validate_split_comm_real_double_DEPENDENCIES) $(EXTRA_validate_split_comm_real_double_DEPENDENCIES) \n\t@rm -f validate_split_comm_real_double$(EXEEXT)\n\t$(AM_V_FCLD)$(validate_split_comm_real_double_LINK) $(validate_split_comm_real_double_OBJECTS) $(validate_split_comm_real_double_LDADD) $(LIBS)\n\nmostlyclean-compile:\n\t-rm -f *.$(OBJEXT)\n\t-rm -f python/pyelpa/*.$(OBJEXT)\n\t-rm -f python/pyelpa/*.lo\n\t-rm -f src/*.$(OBJEXT)\n\t-rm -f src/*.lo\n\t-rm -f src/GPU/*.$(OBJEXT)\n\t-rm -f src/GPU/*.lo\n\t-rm -f src/elpa1/*.$(OBJEXT)\n\t-rm -f src/elpa1/*.lo\n\t-rm -f src/elpa2/*.$(OBJEXT)\n\t-rm -f src/elpa2/*.lo\n\t-rm -f src/elpa2/GPU/*.$(OBJEXT)\n\t-rm -f src/elpa2/GPU/*.lo\n\t-rm -f src/elpa2/kernels/*.$(OBJEXT)\n\t-rm -f src/elpa2/kernels/*.lo\n\t-rm -f src/elpa2/qr/*.$(OBJEXT)\n\t-rm -f src/elpa2/qr/*.lo\n\t-rm -f src/elpa_generalized/*.$(OBJEXT)\n\t-rm -f src/elpa_generalized/*.lo\n\t-rm -f src/ftimings/*.$(OBJEXT)\n\t-rm -f src/ftimings/*.lo\n\t-rm -f src/general/*.$(OBJEXT)\n\t-rm -f src/general/*.lo\n\t-rm -f src/helpers/*.$(OBJEXT)\n\t-rm -f src/helpers/*.lo\n\t-rm -f test/C/*.$(OBJEXT)\n\t-rm -f test/Fortran/*.$(OBJEXT)\n\t-rm -f test/Fortran/elpa2/*.$(OBJEXT)\n\t-rm -f test/shared/*.$(OBJEXT)\n\t-rm -f test/shared/*.lo\n\ndistclean-compile:\n\t-rm -f *.tab.c\n\n@AMDEP_TRUE@@am__include@ @am__quote@python/pyelpa/$(DEPDIR)/wrapper_la-wrapper.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/elpa_c_interface.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/elpa_index.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/complex_avx-avx2_1hv_double_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/complex_avx-avx2_1hv_single_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/complex_avx-avx2_2hv_double_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/complex_avx-avx2_2hv_single_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/complex_avx512_1hv_double_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/complex_avx512_1hv_single_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/complex_avx512_2hv_double_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/complex_avx512_2hv_single_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/complex_sse_1hv_double_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/complex_sse_1hv_single_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/complex_sse_2hv_double_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/complex_sse_2hv_single_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_avx-avx2_2hv_double_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_avx-avx2_2hv_single_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_avx-avx2_4hv_double_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_avx-avx2_4hv_single_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_avx-avx2_6hv_double_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_avx-avx2_6hv_single_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_avx512_2hv_double_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_avx512_2hv_single_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_avx512_4hv_double_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_avx512_4hv_single_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_avx512_6hv_double_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_avx512_6hv_single_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_neon_arch64_2hv_double_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_neon_arch64_2hv_single_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_neon_arch64_4hv_double_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_neon_arch64_4hv_single_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_neon_arch64_6hv_double_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_neon_arch64_6hv_single_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_sparc64_2hv_double_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_sparc64_4hv_double_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_sparc64_6hv_double_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_sse_2hv_double_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_sse_2hv_single_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_sse_4hv_double_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_sse_4hv_single_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_sse_6hv_double_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_sse_6hv_single_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_vsx_2hv_double_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_vsx_2hv_single_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_vsx_4hv_double_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_vsx_4hv_single_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_vsx_6hv_double_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa2/kernels/$(DEPDIR)/real_vsx_6hv_single_precision.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/elpa_generalized/$(DEPDIR)/cannon.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/ftimings/$(DEPDIR)/highwater_mark.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/ftimings/$(DEPDIR)/papi.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/ftimings/$(DEPDIR)/resident_set_size.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/ftimings/$(DEPDIR)/time.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/ftimings/$(DEPDIR)/virtual_memory.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/helpers/$(DEPDIR)/get_cpuid_set.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@src/helpers/$(DEPDIR)/print_build_config.Plo@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_autotune_c_version_complex_double-test_autotune.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_autotune_c_version_complex_single-test_autotune.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_autotune_c_version_real_double-test_autotune.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_autotune_c_version_real_single-test_autotune.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_1stage_gpu_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_1stage_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_1stage_gpu_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_1stage_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_decomp_1stage_gpu_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_decomp_1stage_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_1stage_gpu_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_1stage_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_1stage_gpu_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_1stage_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_decomp_1stage_gpu_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_decomp_1stage_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_1stage_gpu_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_1stage_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_2stage_default_kernel_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_real_double_generalized_1stage_gpu_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_real_double_generalized_1stage_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_real_double_generalized_decomp_1stage_gpu_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_real_double_generalized_decomp_1stage_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_1stage_gpu_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_1stage_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_2stage_default_kernel_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_real_single_generalized_1stage_gpu_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_real_single_generalized_1stage_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_real_single_generalized_decomp_1stage_gpu_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_c_version_real_single_generalized_decomp_1stage_random-test.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/C/$(DEPDIR)/validate_multiple_objs_real_double_c_version-test_multiple_objs.Po@am__quote@ # am--include-marker\n@AMDEP_TRUE@@am__include@ @am__quote@test/shared/$(DEPDIR)/test_redir.Plo@am__quote@ # am--include-marker\n\n$(am__depfiles_remade):\n\t@$(MKDIR_P) $(@D)\n\t@echo '# dummy' >$@-t && $(am__mv) $@-t $@\n\nam--depfiles: $(am__depfiles_remade)\n\n.F90.o:\n\t$(AM_V_PPFC)$(PPFCCOMPILE) -c -o $@ $<\n\n.F90.obj:\n\t$(AM_V_PPFC)$(PPFCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n\n.F90.lo:\n\t$(AM_V_PPFC)$(LTPPFCCOMPILE) -c -o $@ $<\n\nsrc/libelpa@SUFFIX@_private_la-elpa_impl.lo: src/elpa_impl.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/libelpa@SUFFIX@_private_la-elpa_impl.lo `test -f 'src/elpa_impl.F90' || echo '$(srcdir)/'`src/elpa_impl.F90\n\nsrc/libelpa@SUFFIX@_private_la-elpa_autotune_impl.lo: src/elpa_autotune_impl.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/libelpa@SUFFIX@_private_la-elpa_autotune_impl.lo `test -f 'src/elpa_autotune_impl.F90' || echo '$(srcdir)/'`src/elpa_autotune_impl.F90\n\nsrc/libelpa@SUFFIX@_private_la-elpa_abstract_impl.lo: src/elpa_abstract_impl.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/libelpa@SUFFIX@_private_la-elpa_abstract_impl.lo `test -f 'src/elpa_abstract_impl.F90' || echo '$(srcdir)/'`src/elpa_abstract_impl.F90\n\nsrc/helpers/libelpa@SUFFIX@_private_la-mod_precision.lo: src/helpers/mod_precision.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/helpers/libelpa@SUFFIX@_private_la-mod_precision.lo `test -f 'src/helpers/mod_precision.F90' || echo '$(srcdir)/'`src/helpers/mod_precision.F90\n\nsrc/helpers/libelpa@SUFFIX@_private_la-mod_blas_interfaces.lo: src/helpers/mod_blas_interfaces.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/helpers/libelpa@SUFFIX@_private_la-mod_blas_interfaces.lo `test -f 'src/helpers/mod_blas_interfaces.F90' || echo '$(srcdir)/'`src/helpers/mod_blas_interfaces.F90\n\nsrc/helpers/libelpa@SUFFIX@_private_la-mod_scalapack_interfaces.lo: src/helpers/mod_scalapack_interfaces.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/helpers/libelpa@SUFFIX@_private_la-mod_scalapack_interfaces.lo `test -f 'src/helpers/mod_scalapack_interfaces.F90' || echo '$(srcdir)/'`src/helpers/mod_scalapack_interfaces.F90\n\nsrc/helpers/libelpa@SUFFIX@_private_la-mod_mpi.lo: src/helpers/mod_mpi.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/helpers/libelpa@SUFFIX@_private_la-mod_mpi.lo `test -f 'src/helpers/mod_mpi.F90' || echo '$(srcdir)/'`src/helpers/mod_mpi.F90\n\nsrc/helpers/libelpa@SUFFIX@_private_la-mod_mpi_stubs.lo: src/helpers/mod_mpi_stubs.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/helpers/libelpa@SUFFIX@_private_la-mod_mpi_stubs.lo `test -f 'src/helpers/mod_mpi_stubs.F90' || echo '$(srcdir)/'`src/helpers/mod_mpi_stubs.F90\n\nsrc/helpers/libelpa@SUFFIX@_private_la-mod_omp.lo: src/helpers/mod_omp.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/helpers/libelpa@SUFFIX@_private_la-mod_omp.lo `test -f 'src/helpers/mod_omp.F90' || echo '$(srcdir)/'`src/helpers/mod_omp.F90\n\nsrc/libelpa@SUFFIX@_private_la-elpa_generated_fortran_interfaces.lo: src/elpa_generated_fortran_interfaces.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/libelpa@SUFFIX@_private_la-elpa_generated_fortran_interfaces.lo `test -f 'src/elpa_generated_fortran_interfaces.F90' || echo '$(srcdir)/'`src/elpa_generated_fortran_interfaces.F90\n\nsrc/elpa2/libelpa@SUFFIX@_private_la-mod_redist_band.lo: src/elpa2/mod_redist_band.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/elpa2/libelpa@SUFFIX@_private_la-mod_redist_band.lo `test -f 'src/elpa2/mod_redist_band.F90' || echo '$(srcdir)/'`src/elpa2/mod_redist_band.F90\n\nsrc/elpa2/libelpa@SUFFIX@_private_la-mod_pack_unpack_cpu.lo: src/elpa2/mod_pack_unpack_cpu.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/elpa2/libelpa@SUFFIX@_private_la-mod_pack_unpack_cpu.lo `test -f 'src/elpa2/mod_pack_unpack_cpu.F90' || echo '$(srcdir)/'`src/elpa2/mod_pack_unpack_cpu.F90\n\nsrc/elpa2/libelpa@SUFFIX@_private_la-mod_compute_hh_trafo.lo: src/elpa2/mod_compute_hh_trafo.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/elpa2/libelpa@SUFFIX@_private_la-mod_compute_hh_trafo.lo `test -f 'src/elpa2/mod_compute_hh_trafo.F90' || echo '$(srcdir)/'`src/elpa2/mod_compute_hh_trafo.F90\n\nsrc/helpers/libelpa@SUFFIX@_private_la-aligned_mem.lo: src/helpers/aligned_mem.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/helpers/libelpa@SUFFIX@_private_la-aligned_mem.lo `test -f 'src/helpers/aligned_mem.F90' || echo '$(srcdir)/'`src/helpers/aligned_mem.F90\n\nsrc/elpa1/libelpa@SUFFIX@_private_la-elpa1_compute_private.lo: src/elpa1/elpa1_compute_private.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/elpa1/libelpa@SUFFIX@_private_la-elpa1_compute_private.lo `test -f 'src/elpa1/elpa1_compute_private.F90' || echo '$(srcdir)/'`src/elpa1/elpa1_compute_private.F90\n\nsrc/elpa1/libelpa@SUFFIX@_private_la-elpa1_auxiliary.lo: src/elpa1/elpa1_auxiliary.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/elpa1/libelpa@SUFFIX@_private_la-elpa1_auxiliary.lo `test -f 'src/elpa1/elpa1_auxiliary.F90' || echo '$(srcdir)/'`src/elpa1/elpa1_auxiliary.F90\n\nsrc/elpa2/libelpa@SUFFIX@_private_la-elpa2_determine_workload.lo: src/elpa2/elpa2_determine_workload.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/elpa2/libelpa@SUFFIX@_private_la-elpa2_determine_workload.lo `test -f 'src/elpa2/elpa2_determine_workload.F90' || echo '$(srcdir)/'`src/elpa2/elpa2_determine_workload.F90\n\nsrc/elpa2/libelpa@SUFFIX@_private_la-elpa2_compute.lo: src/elpa2/elpa2_compute.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/elpa2/libelpa@SUFFIX@_private_la-elpa2_compute.lo `test -f 'src/elpa2/elpa2_compute.F90' || echo '$(srcdir)/'`src/elpa2/elpa2_compute.F90\n\nsrc/elpa2/kernels/libelpa@SUFFIX@_private_la-mod_single_hh_trafo_real.lo: src/elpa2/kernels/mod_single_hh_trafo_real.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/elpa2/kernels/libelpa@SUFFIX@_private_la-mod_single_hh_trafo_real.lo `test -f 'src/elpa2/kernels/mod_single_hh_trafo_real.F90' || echo '$(srcdir)/'`src/elpa2/kernels/mod_single_hh_trafo_real.F90\n\nsrc/GPU/libelpa@SUFFIX@_private_la-check_for_gpu.lo: src/GPU/check_for_gpu.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/GPU/libelpa@SUFFIX@_private_la-check_for_gpu.lo `test -f 'src/GPU/check_for_gpu.F90' || echo '$(srcdir)/'`src/GPU/check_for_gpu.F90\n\nsrc/GPU/libelpa@SUFFIX@_private_la-mod_cuda.lo: src/GPU/mod_cuda.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/GPU/libelpa@SUFFIX@_private_la-mod_cuda.lo `test -f 'src/GPU/mod_cuda.F90' || echo '$(srcdir)/'`src/GPU/mod_cuda.F90\n\nsrc/elpa2/GPU/libelpa@SUFFIX@_private_la-interface_c_kernel.lo: src/elpa2/GPU/interface_c_kernel.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/elpa2/GPU/libelpa@SUFFIX@_private_la-interface_c_kernel.lo `test -f 'src/elpa2/GPU/interface_c_kernel.F90' || echo '$(srcdir)/'`src/elpa2/GPU/interface_c_kernel.F90\n\nsrc/elpa2/libelpa@SUFFIX@_private_la-mod_pack_unpack_gpu.lo: src/elpa2/mod_pack_unpack_gpu.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/elpa2/libelpa@SUFFIX@_private_la-mod_pack_unpack_gpu.lo `test -f 'src/elpa2/mod_pack_unpack_gpu.F90' || echo '$(srcdir)/'`src/elpa2/mod_pack_unpack_gpu.F90\n\nsrc/elpa2/qr/libelpa@SUFFIX@_private_la-qr_utils.lo: src/elpa2/qr/qr_utils.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/elpa2/qr/libelpa@SUFFIX@_private_la-qr_utils.lo `test -f 'src/elpa2/qr/qr_utils.F90' || echo '$(srcdir)/'`src/elpa2/qr/qr_utils.F90\n\nsrc/elpa2/qr/libelpa@SUFFIX@_private_la-elpa_qrkernels.lo: src/elpa2/qr/elpa_qrkernels.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/elpa2/qr/libelpa@SUFFIX@_private_la-elpa_qrkernels.lo `test -f 'src/elpa2/qr/elpa_qrkernels.F90' || echo '$(srcdir)/'`src/elpa2/qr/elpa_qrkernels.F90\n\nsrc/elpa2/qr/libelpa@SUFFIX@_private_la-elpa_pdlarfb.lo: src/elpa2/qr/elpa_pdlarfb.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/elpa2/qr/libelpa@SUFFIX@_private_la-elpa_pdlarfb.lo `test -f 'src/elpa2/qr/elpa_pdlarfb.F90' || echo '$(srcdir)/'`src/elpa2/qr/elpa_pdlarfb.F90\n\nsrc/elpa2/qr/libelpa@SUFFIX@_private_la-elpa_pdgeqrf.lo: src/elpa2/qr/elpa_pdgeqrf.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/elpa2/qr/libelpa@SUFFIX@_private_la-elpa_pdgeqrf.lo `test -f 'src/elpa2/qr/elpa_pdgeqrf.F90' || echo '$(srcdir)/'`src/elpa2/qr/elpa_pdgeqrf.F90\n\nsrc/elpa1/libelpa@SUFFIX@_private_la-elpa1.lo: src/elpa1/elpa1.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/elpa1/libelpa@SUFFIX@_private_la-elpa1.lo `test -f 'src/elpa1/elpa1.F90' || echo '$(srcdir)/'`src/elpa1/elpa1.F90\n\nsrc/elpa2/libelpa@SUFFIX@_private_la-elpa2.lo: src/elpa2/elpa2.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/elpa2/libelpa@SUFFIX@_private_la-elpa2.lo `test -f 'src/elpa2/elpa2.F90' || echo '$(srcdir)/'`src/elpa2/elpa2.F90\n\nsrc/helpers/libelpa@SUFFIX@_private_la-matrix_plot.lo: src/helpers/matrix_plot.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/helpers/libelpa@SUFFIX@_private_la-matrix_plot.lo `test -f 'src/helpers/matrix_plot.F90' || echo '$(srcdir)/'`src/helpers/matrix_plot.F90\n\nsrc/general/libelpa@SUFFIX@_private_la-mod_elpa_skewsymmetric_blas.lo: src/general/mod_elpa_skewsymmetric_blas.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/general/libelpa@SUFFIX@_private_la-mod_elpa_skewsymmetric_blas.lo `test -f 'src/general/mod_elpa_skewsymmetric_blas.F90' || echo '$(srcdir)/'`src/general/mod_elpa_skewsymmetric_blas.F90\n\nsrc/general/libelpa@SUFFIX@_private_la-elpa_utilities.lo: src/general/elpa_utilities.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/general/libelpa@SUFFIX@_private_la-elpa_utilities.lo `test -f 'src/general/elpa_utilities.F90' || echo '$(srcdir)/'`src/general/elpa_utilities.F90\n\nsrc/ftimings/libelpa@SUFFIX@_private_la-ftimings.lo: src/ftimings/ftimings.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/ftimings/libelpa@SUFFIX@_private_la-ftimings.lo `test -f 'src/ftimings/ftimings.F90' || echo '$(srcdir)/'`src/ftimings/ftimings.F90\n\nsrc/ftimings/libelpa@SUFFIX@_private_la-ftimings_type.lo: src/ftimings/ftimings_type.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/ftimings/libelpa@SUFFIX@_private_la-ftimings_type.lo `test -f 'src/ftimings/ftimings_type.F90' || echo '$(srcdir)/'`src/ftimings/ftimings_type.F90\n\nsrc/ftimings/libelpa@SUFFIX@_private_la-ftimings_value.lo: src/ftimings/ftimings_value.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/ftimings/libelpa@SUFFIX@_private_la-ftimings_value.lo `test -f 'src/ftimings/ftimings_value.F90' || echo '$(srcdir)/'`src/ftimings/ftimings_value.F90\n\nsrc/helpers/libelpa@SUFFIX@_private_la-timer_dummy.lo: src/helpers/timer_dummy.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/helpers/libelpa@SUFFIX@_private_la-timer_dummy.lo `test -f 'src/helpers/timer_dummy.F90' || echo '$(srcdir)/'`src/helpers/timer_dummy.F90\n\nsrc/helpers/libelpa@SUFFIX@_private_la-mod_time_c.lo: src/helpers/mod_time_c.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/helpers/libelpa@SUFFIX@_private_la-mod_time_c.lo `test -f 'src/helpers/mod_time_c.F90' || echo '$(srcdir)/'`src/helpers/mod_time_c.F90\n\nsrc/helpers/libelpa@SUFFIX@_private_la-mod_simd_kernel.lo: src/helpers/mod_simd_kernel.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/helpers/libelpa@SUFFIX@_private_la-mod_simd_kernel.lo `test -f 'src/helpers/mod_simd_kernel.F90' || echo '$(srcdir)/'`src/helpers/mod_simd_kernel.F90\n\nsrc/elpa2/kernels/libelpa@SUFFIX@_private_la-real.lo: src/elpa2/kernels/real.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/elpa2/kernels/libelpa@SUFFIX@_private_la-real.lo `test -f 'src/elpa2/kernels/real.F90' || echo '$(srcdir)/'`src/elpa2/kernels/real.F90\n\nsrc/elpa2/kernels/libelpa@SUFFIX@_private_la-complex.lo: src/elpa2/kernels/complex.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/elpa2/kernels/libelpa@SUFFIX@_private_la-complex.lo `test -f 'src/elpa2/kernels/complex.F90' || echo '$(srcdir)/'`src/elpa2/kernels/complex.F90\n\nsrc/elpa2/kernels/libelpa@SUFFIX@_private_la-real_simple.lo: src/elpa2/kernels/real_simple.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/elpa2/kernels/libelpa@SUFFIX@_private_la-real_simple.lo `test -f 'src/elpa2/kernels/real_simple.F90' || echo '$(srcdir)/'`src/elpa2/kernels/real_simple.F90\n\nsrc/elpa2/kernels/libelpa@SUFFIX@_private_la-complex_simple.lo: src/elpa2/kernels/complex_simple.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/elpa2/kernels/libelpa@SUFFIX@_private_la-complex_simple.lo `test -f 'src/elpa2/kernels/complex_simple.F90' || echo '$(srcdir)/'`src/elpa2/kernels/complex_simple.F90\n\nsrc/elpa2/kernels/libelpa@SUFFIX@_private_la-real_simple_block4.lo: src/elpa2/kernels/real_simple_block4.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/elpa2/kernels/libelpa@SUFFIX@_private_la-real_simple_block4.lo `test -f 'src/elpa2/kernels/real_simple_block4.F90' || echo '$(srcdir)/'`src/elpa2/kernels/real_simple_block4.F90\n\nsrc/elpa2/kernels/libelpa@SUFFIX@_private_la-real_simple_block6.lo: src/elpa2/kernels/real_simple_block6.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/elpa2/kernels/libelpa@SUFFIX@_private_la-real_simple_block6.lo `test -f 'src/elpa2/kernels/real_simple_block6.F90' || echo '$(srcdir)/'`src/elpa2/kernels/real_simple_block6.F90\n\nsrc/libelpa@SUFFIX@_public_la-elpa.lo: src/elpa.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_public_la_FCFLAGS) $(FCFLAGS) -c -o src/libelpa@SUFFIX@_public_la-elpa.lo `test -f 'src/elpa.F90' || echo '$(srcdir)/'`src/elpa.F90\n\nsrc/libelpa@SUFFIX@_public_la-elpa_api.lo: src/elpa_api.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_public_la_FCFLAGS) $(FCFLAGS) -c -o src/libelpa@SUFFIX@_public_la-elpa_api.lo `test -f 'src/elpa_api.F90' || echo '$(srcdir)/'`src/elpa_api.F90\n\nsrc/libelpa@SUFFIX@_public_la-elpa_constants.lo: src/elpa_constants.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpa@SUFFIX@_public_la_FCFLAGS) $(FCFLAGS) -c -o src/libelpa@SUFFIX@_public_la-elpa_constants.lo `test -f 'src/elpa_constants.F90' || echo '$(srcdir)/'`src/elpa_constants.F90\n\ntest/shared/libelpatest@SUFFIX@_la-tests_variable_definitions.lo: test/shared/tests_variable_definitions.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpatest@SUFFIX@_la_FCFLAGS) $(FCFLAGS) -c -o test/shared/libelpatest@SUFFIX@_la-tests_variable_definitions.lo `test -f 'test/shared/tests_variable_definitions.F90' || echo '$(srcdir)/'`test/shared/tests_variable_definitions.F90\n\ntest/shared/libelpatest@SUFFIX@_la-mod_tests_scalapack_interfaces.lo: test/shared/mod_tests_scalapack_interfaces.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpatest@SUFFIX@_la_FCFLAGS) $(FCFLAGS) -c -o test/shared/libelpatest@SUFFIX@_la-mod_tests_scalapack_interfaces.lo `test -f 'test/shared/mod_tests_scalapack_interfaces.F90' || echo '$(srcdir)/'`test/shared/mod_tests_scalapack_interfaces.F90\n\ntest/shared/libelpatest@SUFFIX@_la-mod_tests_blas_interfaces.lo: test/shared/mod_tests_blas_interfaces.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpatest@SUFFIX@_la_FCFLAGS) $(FCFLAGS) -c -o test/shared/libelpatest@SUFFIX@_la-mod_tests_blas_interfaces.lo `test -f 'test/shared/mod_tests_blas_interfaces.F90' || echo '$(srcdir)/'`test/shared/mod_tests_blas_interfaces.F90\n\ntest/shared/libelpatest@SUFFIX@_la-test_util.lo: test/shared/test_util.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpatest@SUFFIX@_la_FCFLAGS) $(FCFLAGS) -c -o test/shared/libelpatest@SUFFIX@_la-test_util.lo `test -f 'test/shared/test_util.F90' || echo '$(srcdir)/'`test/shared/test_util.F90\n\ntest/shared/libelpatest@SUFFIX@_la-test_read_input_parameters.lo: test/shared/test_read_input_parameters.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpatest@SUFFIX@_la_FCFLAGS) $(FCFLAGS) -c -o test/shared/libelpatest@SUFFIX@_la-test_read_input_parameters.lo `test -f 'test/shared/test_read_input_parameters.F90' || echo '$(srcdir)/'`test/shared/test_read_input_parameters.F90\n\ntest/shared/libelpatest@SUFFIX@_la-test_check_correctness.lo: test/shared/test_check_correctness.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpatest@SUFFIX@_la_FCFLAGS) $(FCFLAGS) -c -o test/shared/libelpatest@SUFFIX@_la-test_check_correctness.lo `test -f 'test/shared/test_check_correctness.F90' || echo '$(srcdir)/'`test/shared/test_check_correctness.F90\n\ntest/shared/libelpatest@SUFFIX@_la-test_setup_mpi.lo: test/shared/test_setup_mpi.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpatest@SUFFIX@_la_FCFLAGS) $(FCFLAGS) -c -o test/shared/libelpatest@SUFFIX@_la-test_setup_mpi.lo `test -f 'test/shared/test_setup_mpi.F90' || echo '$(srcdir)/'`test/shared/test_setup_mpi.F90\n\ntest/shared/libelpatest@SUFFIX@_la-test_blacs_infrastructure.lo: test/shared/test_blacs_infrastructure.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpatest@SUFFIX@_la_FCFLAGS) $(FCFLAGS) -c -o test/shared/libelpatest@SUFFIX@_la-test_blacs_infrastructure.lo `test -f 'test/shared/test_blacs_infrastructure.F90' || echo '$(srcdir)/'`test/shared/test_blacs_infrastructure.F90\n\ntest/shared/libelpatest@SUFFIX@_la-test_prepare_matrix.lo: test/shared/test_prepare_matrix.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpatest@SUFFIX@_la_FCFLAGS) $(FCFLAGS) -c -o test/shared/libelpatest@SUFFIX@_la-test_prepare_matrix.lo `test -f 'test/shared/test_prepare_matrix.F90' || echo '$(srcdir)/'`test/shared/test_prepare_matrix.F90\n\ntest/shared/libelpatest@SUFFIX@_la-test_analytic.lo: test/shared/test_analytic.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpatest@SUFFIX@_la_FCFLAGS) $(FCFLAGS) -c -o test/shared/libelpatest@SUFFIX@_la-test_analytic.lo `test -f 'test/shared/test_analytic.F90' || echo '$(srcdir)/'`test/shared/test_analytic.F90\n\ntest/shared/libelpatest@SUFFIX@_la-test_output_type.lo: test/shared/test_output_type.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpatest@SUFFIX@_la_FCFLAGS) $(FCFLAGS) -c -o test/shared/libelpatest@SUFFIX@_la-test_output_type.lo `test -f 'test/shared/test_output_type.F90' || echo '$(srcdir)/'`test/shared/test_output_type.F90\n\ntest/shared/libelpatest@SUFFIX@_la-test_scalapack.lo: test/shared/test_scalapack.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpatest@SUFFIX@_la_FCFLAGS) $(FCFLAGS) -c -o test/shared/libelpatest@SUFFIX@_la-test_scalapack.lo `test -f 'test/shared/test_scalapack.F90' || echo '$(srcdir)/'`test/shared/test_scalapack.F90\n\ntest/shared/libelpatest@SUFFIX@_la-test_redirect.lo: test/shared/test_redirect.F90\n\t$(AM_V_PPFC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libelpatest@SUFFIX@_la_FCFLAGS) $(FCFLAGS) -c -o test/shared/libelpatest@SUFFIX@_la-test_redirect.lo `test -f 'test/shared/test_redirect.F90' || echo '$(srcdir)/'`test/shared/test_redirect.F90\n\nsrc/elpa2/elpa2_print_kernels@SUFFIX@-elpa2_print_kernels.o: src/elpa2/elpa2_print_kernels.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elpa2_print_kernels@SUFFIX@_FCFLAGS) $(FCFLAGS) -c -o src/elpa2/elpa2_print_kernels@SUFFIX@-elpa2_print_kernels.o `test -f 'src/elpa2/elpa2_print_kernels.F90' || echo '$(srcdir)/'`src/elpa2/elpa2_print_kernels.F90\n\nsrc/elpa2/elpa2_print_kernels@SUFFIX@-elpa2_print_kernels.obj: src/elpa2/elpa2_print_kernels.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elpa2_print_kernels@SUFFIX@_FCFLAGS) $(FCFLAGS) -c -o src/elpa2/elpa2_print_kernels@SUFFIX@-elpa2_print_kernels.obj `if test -f 'src/elpa2/elpa2_print_kernels.F90'; then $(CYGPATH_W) 'src/elpa2/elpa2_print_kernels.F90'; else $(CYGPATH_W) '$(srcdir)/src/elpa2/elpa2_print_kernels.F90'; fi`\n\ntest/Fortran/skewsymmetric_real_double-test_skewsymmetric.o: test/Fortran/test_skewsymmetric.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_skewsymmetric_real_double_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/skewsymmetric_real_double-test_skewsymmetric.o `test -f 'test/Fortran/test_skewsymmetric.F90' || echo '$(srcdir)/'`test/Fortran/test_skewsymmetric.F90\n\ntest/Fortran/skewsymmetric_real_double-test_skewsymmetric.obj: test/Fortran/test_skewsymmetric.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_skewsymmetric_real_double_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/skewsymmetric_real_double-test_skewsymmetric.obj `if test -f 'test/Fortran/test_skewsymmetric.F90'; then $(CYGPATH_W) 'test/Fortran/test_skewsymmetric.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test_skewsymmetric.F90'; fi`\n\ntest/Fortran/skewsymmetric_real_single-test_skewsymmetric.o: test/Fortran/test_skewsymmetric.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_skewsymmetric_real_single_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/skewsymmetric_real_single-test_skewsymmetric.o `test -f 'test/Fortran/test_skewsymmetric.F90' || echo '$(srcdir)/'`test/Fortran/test_skewsymmetric.F90\n\ntest/Fortran/skewsymmetric_real_single-test_skewsymmetric.obj: test/Fortran/test_skewsymmetric.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_skewsymmetric_real_single_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/skewsymmetric_real_single-test_skewsymmetric.obj `if test -f 'test/Fortran/test_skewsymmetric.F90'; then $(CYGPATH_W) 'test/Fortran/test_skewsymmetric.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test_skewsymmetric.F90'; fi`\n\ntest/Fortran/validate_autotune_complex_double-test_autotune.o: test/Fortran/test_autotune.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_autotune_complex_double_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_autotune_complex_double-test_autotune.o `test -f 'test/Fortran/test_autotune.F90' || echo '$(srcdir)/'`test/Fortran/test_autotune.F90\n\ntest/Fortran/validate_autotune_complex_double-test_autotune.obj: test/Fortran/test_autotune.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_autotune_complex_double_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_autotune_complex_double-test_autotune.obj `if test -f 'test/Fortran/test_autotune.F90'; then $(CYGPATH_W) 'test/Fortran/test_autotune.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test_autotune.F90'; fi`\n\ntest/Fortran/validate_autotune_complex_single-test_autotune.o: test/Fortran/test_autotune.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_autotune_complex_single_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_autotune_complex_single-test_autotune.o `test -f 'test/Fortran/test_autotune.F90' || echo '$(srcdir)/'`test/Fortran/test_autotune.F90\n\ntest/Fortran/validate_autotune_complex_single-test_autotune.obj: test/Fortran/test_autotune.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_autotune_complex_single_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_autotune_complex_single-test_autotune.obj `if test -f 'test/Fortran/test_autotune.F90'; then $(CYGPATH_W) 'test/Fortran/test_autotune.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test_autotune.F90'; fi`\n\ntest/Fortran/validate_autotune_real_double-test_autotune.o: test/Fortran/test_autotune.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_autotune_real_double_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_autotune_real_double-test_autotune.o `test -f 'test/Fortran/test_autotune.F90' || echo '$(srcdir)/'`test/Fortran/test_autotune.F90\n\ntest/Fortran/validate_autotune_real_double-test_autotune.obj: test/Fortran/test_autotune.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_autotune_real_double_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_autotune_real_double-test_autotune.obj `if test -f 'test/Fortran/test_autotune.F90'; then $(CYGPATH_W) 'test/Fortran/test_autotune.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test_autotune.F90'; fi`\n\ntest/Fortran/validate_autotune_real_single-test_autotune.o: test/Fortran/test_autotune.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_autotune_real_single_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_autotune_real_single-test_autotune.o `test -f 'test/Fortran/test_autotune.F90' || echo '$(srcdir)/'`test/Fortran/test_autotune.F90\n\ntest/Fortran/validate_autotune_real_single-test_autotune.obj: test/Fortran/test_autotune.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_autotune_real_single_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_autotune_real_single-test_autotune.obj `if test -f 'test/Fortran/test_autotune.F90'; then $(CYGPATH_W) 'test/Fortran/test_autotune.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test_autotune.F90'; fi`\n\ntest/Fortran/elpa2/validate_complex_2stage_banded@SUFFIX@-complex_2stage_banded.o: test/Fortran/elpa2/complex_2stage_banded.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_2stage_banded@SUFFIX@_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/elpa2/validate_complex_2stage_banded@SUFFIX@-complex_2stage_banded.o `test -f 'test/Fortran/elpa2/complex_2stage_banded.F90' || echo '$(srcdir)/'`test/Fortran/elpa2/complex_2stage_banded.F90\n\ntest/Fortran/elpa2/validate_complex_2stage_banded@SUFFIX@-complex_2stage_banded.obj: test/Fortran/elpa2/complex_2stage_banded.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_2stage_banded@SUFFIX@_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/elpa2/validate_complex_2stage_banded@SUFFIX@-complex_2stage_banded.obj `if test -f 'test/Fortran/elpa2/complex_2stage_banded.F90'; then $(CYGPATH_W) 'test/Fortran/elpa2/complex_2stage_banded.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/elpa2/complex_2stage_banded.F90'; fi`\n\ntest/Fortran/validate_complex_double_cholesky_1stage_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_cholesky_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_cholesky_1stage_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_cholesky_1stage_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_cholesky_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_cholesky_1stage_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_cholesky_1stage_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_cholesky_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_cholesky_1stage_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_cholesky_1stage_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_cholesky_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_cholesky_1stage_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_cholesky_1stage_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_cholesky_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_cholesky_1stage_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_cholesky_1stage_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_cholesky_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_cholesky_1stage_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_cholesky_1stage_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_cholesky_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_cholesky_1stage_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_cholesky_1stage_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_cholesky_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_cholesky_1stage_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_cholesky_1stage_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_cholesky_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_cholesky_1stage_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_cholesky_1stage_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_cholesky_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_cholesky_1stage_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_cholesky_1stage_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_cholesky_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_cholesky_1stage_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_cholesky_1stage_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_cholesky_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_cholesky_1stage_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_cholesky_1stage_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_cholesky_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_cholesky_1stage_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_cholesky_1stage_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_cholesky_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_cholesky_1stage_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvalues_1stage_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvalues_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvalues_1stage_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvalues_1stage_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvalues_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvalues_1stage_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvalues_1stage_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvalues_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvalues_1stage_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvalues_1stage_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvalues_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvalues_1stage_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_1stage_analytic-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_1stage_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_1stage_analytic-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_1stage_analytic-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_1stage_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_1stage_analytic-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_1stage_analytic_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_1stage_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_1stage_analytic_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_1stage_analytic_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_1stage_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_1stage_analytic_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_1stage_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_1stage_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_1stage_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_1stage_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_1stage_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_1stage_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_1stage_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_1stage_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_1stage_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_1stage_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_1stage_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_1stage_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_1stage_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_1stage_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_1stage_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_1stage_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_1stage_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_1stage_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_1stage_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_1stage_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_analytic-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_all_kernels_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_analytic-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_analytic-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_all_kernels_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_analytic-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_all_kernels_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_all_kernels_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_analytic-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_default_kernel_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_analytic-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_analytic-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_default_kernel_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_analytic-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_default_kernel_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_default_kernel_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_scalapack_all_analytic-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_scalapack_all_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_scalapack_all_analytic-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_scalapack_all_analytic-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_scalapack_all_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_scalapack_all_analytic-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_scalapack_part_analytic-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_scalapack_part_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_scalapack_part_analytic-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_scalapack_part_analytic-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_scalapack_part_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_scalapack_part_analytic-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_generalized_1stage_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_generalized_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_generalized_1stage_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_generalized_1stage_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_generalized_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_generalized_1stage_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_generalized_1stage_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_generalized_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_generalized_1stage_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_generalized_1stage_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_generalized_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_generalized_1stage_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_generalized_1stage_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_generalized_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_generalized_1stage_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_generalized_1stage_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_generalized_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_generalized_1stage_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_generalized_1stage_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_generalized_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_generalized_1stage_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_generalized_1stage_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_generalized_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_generalized_1stage_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_generalized_decomp_1stage_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_generalized_decomp_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_generalized_decomp_1stage_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_generalized_decomp_1stage_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_generalized_decomp_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_generalized_decomp_1stage_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_generalized_decomp_1stage_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_generalized_decomp_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_generalized_decomp_1stage_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_generalized_decomp_1stage_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_generalized_decomp_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_generalized_decomp_1stage_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_generalized_decomp_1stage_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_generalized_decomp_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_generalized_decomp_1stage_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_generalized_decomp_1stage_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_generalized_decomp_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_generalized_decomp_1stage_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_hermitian_multiply_1stage_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_hermitian_multiply_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_hermitian_multiply_1stage_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_hermitian_multiply_1stage_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_hermitian_multiply_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_hermitian_multiply_1stage_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_hermitian_multiply_1stage_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_hermitian_multiply_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_hermitian_multiply_1stage_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_hermitian_multiply_1stage_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_hermitian_multiply_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_hermitian_multiply_1stage_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_double_hermitian_multiply_1stage_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_hermitian_multiply_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_hermitian_multiply_1stage_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_double_hermitian_multiply_1stage_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_double_hermitian_multiply_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_double_hermitian_multiply_1stage_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_cholesky_1stage_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_cholesky_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_cholesky_1stage_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_cholesky_1stage_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_cholesky_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_cholesky_1stage_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_cholesky_1stage_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_cholesky_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_cholesky_1stage_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_cholesky_1stage_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_cholesky_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_cholesky_1stage_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_cholesky_1stage_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_cholesky_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_cholesky_1stage_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_cholesky_1stage_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_cholesky_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_cholesky_1stage_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_cholesky_1stage_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_cholesky_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_cholesky_1stage_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_cholesky_1stage_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_cholesky_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_cholesky_1stage_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_cholesky_1stage_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_cholesky_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_cholesky_1stage_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_cholesky_1stage_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_cholesky_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_cholesky_1stage_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_cholesky_1stage_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_cholesky_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_cholesky_1stage_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_cholesky_1stage_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_cholesky_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_cholesky_1stage_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_cholesky_1stage_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_cholesky_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_cholesky_1stage_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_cholesky_1stage_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_cholesky_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_cholesky_1stage_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvalues_1stage_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvalues_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvalues_1stage_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvalues_1stage_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvalues_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvalues_1stage_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvalues_1stage_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvalues_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvalues_1stage_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvalues_1stage_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvalues_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvalues_1stage_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_1stage_analytic-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_1stage_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_1stage_analytic-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_1stage_analytic-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_1stage_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_1stage_analytic-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_1stage_analytic_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_1stage_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_1stage_analytic_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_1stage_analytic_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_1stage_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_1stage_analytic_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_1stage_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_1stage_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_1stage_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_1stage_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_1stage_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_1stage_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_1stage_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_1stage_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_1stage_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_1stage_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_1stage_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_1stage_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_1stage_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_1stage_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_1stage_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_1stage_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_1stage_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_1stage_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_1stage_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_1stage_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_analytic-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_all_kernels_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_analytic-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_analytic-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_all_kernels_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_analytic-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_all_kernels_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_all_kernels_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_analytic-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_default_kernel_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_analytic-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_analytic-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_default_kernel_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_analytic-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_default_kernel_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_default_kernel_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_generalized_1stage_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_generalized_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_generalized_1stage_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_generalized_1stage_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_generalized_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_generalized_1stage_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_generalized_1stage_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_generalized_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_generalized_1stage_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_generalized_1stage_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_generalized_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_generalized_1stage_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_generalized_1stage_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_generalized_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_generalized_1stage_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_generalized_1stage_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_generalized_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_generalized_1stage_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_generalized_1stage_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_generalized_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_generalized_1stage_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_generalized_1stage_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_generalized_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_generalized_1stage_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_generalized_decomp_1stage_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_generalized_decomp_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_generalized_decomp_1stage_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_generalized_decomp_1stage_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_generalized_decomp_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_generalized_decomp_1stage_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_generalized_decomp_1stage_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_generalized_decomp_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_generalized_decomp_1stage_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_generalized_decomp_1stage_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_generalized_decomp_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_generalized_decomp_1stage_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_generalized_decomp_1stage_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_generalized_decomp_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_generalized_decomp_1stage_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_generalized_decomp_1stage_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_generalized_decomp_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_generalized_decomp_1stage_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_hermitian_multiply_1stage_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_hermitian_multiply_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_hermitian_multiply_1stage_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_hermitian_multiply_1stage_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_hermitian_multiply_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_hermitian_multiply_1stage_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_hermitian_multiply_1stage_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_hermitian_multiply_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_hermitian_multiply_1stage_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_hermitian_multiply_1stage_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_hermitian_multiply_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_hermitian_multiply_1stage_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_complex_single_hermitian_multiply_1stage_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_hermitian_multiply_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_hermitian_multiply_1stage_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_complex_single_hermitian_multiply_1stage_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_complex_single_hermitian_multiply_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_complex_single_hermitian_multiply_1stage_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/elpa2/validate_double_instance@SUFFIX@-double_instance.o: test/Fortran/elpa2/double_instance.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_double_instance@SUFFIX@_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/elpa2/validate_double_instance@SUFFIX@-double_instance.o `test -f 'test/Fortran/elpa2/double_instance.F90' || echo '$(srcdir)/'`test/Fortran/elpa2/double_instance.F90\n\ntest/Fortran/elpa2/validate_double_instance@SUFFIX@-double_instance.obj: test/Fortran/elpa2/double_instance.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_double_instance@SUFFIX@_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/elpa2/validate_double_instance@SUFFIX@-double_instance.obj `if test -f 'test/Fortran/elpa2/double_instance.F90'; then $(CYGPATH_W) 'test/Fortran/elpa2/double_instance.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/elpa2/double_instance.F90'; fi`\n\ntest/Fortran/validate_multiple_objs_real_double-test_multiple_objs.o: test/Fortran/test_multiple_objs.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_multiple_objs_real_double_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_multiple_objs_real_double-test_multiple_objs.o `test -f 'test/Fortran/test_multiple_objs.F90' || echo '$(srcdir)/'`test/Fortran/test_multiple_objs.F90\n\ntest/Fortran/validate_multiple_objs_real_double-test_multiple_objs.obj: test/Fortran/test_multiple_objs.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_multiple_objs_real_double_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_multiple_objs_real_double-test_multiple_objs.obj `if test -f 'test/Fortran/test_multiple_objs.F90'; then $(CYGPATH_W) 'test/Fortran/test_multiple_objs.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test_multiple_objs.F90'; fi`\n\ntest/Fortran/elpa2/validate_real_2stage_banded@SUFFIX@-real_2stage_banded.o: test/Fortran/elpa2/real_2stage_banded.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_2stage_banded@SUFFIX@_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/elpa2/validate_real_2stage_banded@SUFFIX@-real_2stage_banded.o `test -f 'test/Fortran/elpa2/real_2stage_banded.F90' || echo '$(srcdir)/'`test/Fortran/elpa2/real_2stage_banded.F90\n\ntest/Fortran/elpa2/validate_real_2stage_banded@SUFFIX@-real_2stage_banded.obj: test/Fortran/elpa2/real_2stage_banded.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_2stage_banded@SUFFIX@_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/elpa2/validate_real_2stage_banded@SUFFIX@-real_2stage_banded.obj `if test -f 'test/Fortran/elpa2/real_2stage_banded.F90'; then $(CYGPATH_W) 'test/Fortran/elpa2/real_2stage_banded.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/elpa2/real_2stage_banded.F90'; fi`\n\ntest/Fortran/validate_real_double_cholesky_1stage_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_cholesky_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_cholesky_1stage_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_cholesky_1stage_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_cholesky_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_cholesky_1stage_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_cholesky_1stage_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_cholesky_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_cholesky_1stage_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_cholesky_1stage_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_cholesky_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_cholesky_1stage_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_cholesky_1stage_gpu_random_split_comm_myself-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_cholesky_1stage_gpu_random_split_comm_myself_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_cholesky_1stage_gpu_random_split_comm_myself-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_cholesky_1stage_gpu_random_split_comm_myself-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_cholesky_1stage_gpu_random_split_comm_myself_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_cholesky_1stage_gpu_random_split_comm_myself-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_cholesky_1stage_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_cholesky_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_cholesky_1stage_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_cholesky_1stage_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_cholesky_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_cholesky_1stage_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_cholesky_1stage_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_cholesky_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_cholesky_1stage_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_cholesky_1stage_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_cholesky_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_cholesky_1stage_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_cholesky_1stage_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_cholesky_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_cholesky_1stage_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_cholesky_1stage_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_cholesky_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_cholesky_1stage_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_cholesky_1stage_random_split_comm_myself-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_cholesky_1stage_random_split_comm_myself_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_cholesky_1stage_random_split_comm_myself-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_cholesky_1stage_random_split_comm_myself-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_cholesky_1stage_random_split_comm_myself_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_cholesky_1stage_random_split_comm_myself-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_cholesky_1stage_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_cholesky_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_cholesky_1stage_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_cholesky_1stage_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_cholesky_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_cholesky_1stage_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_cholesky_1stage_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_cholesky_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_cholesky_1stage_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_cholesky_1stage_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_cholesky_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_cholesky_1stage_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvalues_1stage_frank-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_1stage_frank_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_1stage_frank-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvalues_1stage_frank-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_1stage_frank_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_1stage_frank-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvalues_1stage_frank_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_1stage_frank_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_1stage_frank_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvalues_1stage_frank_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_1stage_frank_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_1stage_frank_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvalues_1stage_gpu_frank-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_1stage_gpu_frank_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_1stage_gpu_frank-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvalues_1stage_gpu_frank-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_1stage_gpu_frank_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_1stage_gpu_frank-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvalues_1stage_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_1stage_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvalues_1stage_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_1stage_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvalues_1stage_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_1stage_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvalues_1stage_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_1stage_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvalues_1stage_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_1stage_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvalues_1stage_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_1stage_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_frank-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_2stage_default_kernel_frank_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_frank-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_frank-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_2stage_default_kernel_frank_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_frank-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_analytic-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_analytic-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_analytic-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_analytic-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_analytic_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_analytic_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_analytic_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_analytic_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_frank-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_frank_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_frank-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_frank-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_frank_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_frank-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_frank_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_frank_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_frank_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_frank_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_frank_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_frank_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_gpu_frank-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_gpu_frank_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_gpu_frank-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_gpu_frank-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_gpu_frank_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_gpu_frank-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_random_split_comm_myself-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_random_split_comm_myself_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_random_split_comm_myself-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_random_split_comm_myself-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_random_split_comm_myself_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_random_split_comm_myself-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_1stage_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_1stage_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_analytic-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_analytic-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_analytic-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_analytic-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_frank-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_frank_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_frank-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_frank-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_frank_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_frank-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_qr_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_qr_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_qr_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_qr_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_qr_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_qr_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_analytic-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_analytic-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_analytic-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_analytic-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_frank-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_frank_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_frank-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_frank-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_frank_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_frank-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_qr_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_qr_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_qr_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_qr_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_qr_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_qr_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_scalapack_all_analytic-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_scalapack_all_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_scalapack_all_analytic-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_scalapack_all_analytic-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_scalapack_all_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_scalapack_all_analytic-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_scalapack_part_analytic-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_scalapack_part_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_scalapack_part_analytic-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_scalapack_part_analytic-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_scalapack_part_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_scalapack_part_analytic-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_generalized_1stage_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_generalized_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_generalized_1stage_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_generalized_1stage_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_generalized_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_generalized_1stage_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_generalized_1stage_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_generalized_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_generalized_1stage_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_generalized_1stage_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_generalized_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_generalized_1stage_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_generalized_1stage_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_generalized_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_generalized_1stage_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_generalized_1stage_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_generalized_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_generalized_1stage_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_generalized_1stage_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_generalized_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_generalized_1stage_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_generalized_1stage_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_generalized_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_generalized_1stage_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_generalized_decomp_1stage_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_generalized_decomp_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_generalized_decomp_1stage_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_generalized_decomp_1stage_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_generalized_decomp_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_generalized_decomp_1stage_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_generalized_decomp_1stage_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_generalized_decomp_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_generalized_decomp_1stage_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_generalized_decomp_1stage_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_generalized_decomp_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_generalized_decomp_1stage_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_generalized_decomp_1stage_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_generalized_decomp_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_generalized_decomp_1stage_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_generalized_decomp_1stage_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_generalized_decomp_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_generalized_decomp_1stage_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_hermitian_multiply_1stage_frank-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_hermitian_multiply_1stage_frank_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_hermitian_multiply_1stage_frank-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_hermitian_multiply_1stage_frank-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_hermitian_multiply_1stage_frank_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_hermitian_multiply_1stage_frank-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_hermitian_multiply_1stage_frank_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_hermitian_multiply_1stage_frank_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_hermitian_multiply_1stage_frank_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_hermitian_multiply_1stage_frank_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_hermitian_multiply_1stage_frank_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_hermitian_multiply_1stage_frank_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_hermitian_multiply_1stage_gpu_frank-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_hermitian_multiply_1stage_gpu_frank_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_hermitian_multiply_1stage_gpu_frank-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_hermitian_multiply_1stage_gpu_frank-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_hermitian_multiply_1stage_gpu_frank_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_hermitian_multiply_1stage_gpu_frank-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_hermitian_multiply_1stage_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_hermitian_multiply_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_hermitian_multiply_1stage_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_hermitian_multiply_1stage_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_hermitian_multiply_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_hermitian_multiply_1stage_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_hermitian_multiply_1stage_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_hermitian_multiply_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_hermitian_multiply_1stage_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_hermitian_multiply_1stage_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_hermitian_multiply_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_hermitian_multiply_1stage_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_hermitian_multiply_1stage_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_hermitian_multiply_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_hermitian_multiply_1stage_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_hermitian_multiply_1stage_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_hermitian_multiply_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_hermitian_multiply_1stage_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_solve_tridiagonal_1stage_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_solve_tridiagonal_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_solve_tridiagonal_1stage_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_solve_tridiagonal_1stage_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_solve_tridiagonal_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_solve_tridiagonal_1stage_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_cholesky_1stage_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_cholesky_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_cholesky_1stage_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_cholesky_1stage_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_cholesky_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_cholesky_1stage_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_cholesky_1stage_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_cholesky_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_cholesky_1stage_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_cholesky_1stage_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_cholesky_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_cholesky_1stage_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_cholesky_1stage_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_cholesky_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_cholesky_1stage_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_cholesky_1stage_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_cholesky_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_cholesky_1stage_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_cholesky_1stage_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_cholesky_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_cholesky_1stage_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_cholesky_1stage_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_cholesky_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_cholesky_1stage_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_cholesky_1stage_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_cholesky_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_cholesky_1stage_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_cholesky_1stage_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_cholesky_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_cholesky_1stage_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_cholesky_1stage_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_cholesky_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_cholesky_1stage_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_cholesky_1stage_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_cholesky_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_cholesky_1stage_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_cholesky_1stage_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_cholesky_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_cholesky_1stage_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_cholesky_1stage_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_cholesky_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_cholesky_1stage_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvalues_1stage_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvalues_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvalues_1stage_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvalues_1stage_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvalues_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvalues_1stage_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvalues_1stage_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvalues_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvalues_1stage_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvalues_1stage_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvalues_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvalues_1stage_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvalues_1stage_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvalues_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvalues_1stage_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvalues_1stage_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvalues_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvalues_1stage_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvalues_2stage_default_kernel_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvalues_2stage_default_kernel_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvalues_2stage_default_kernel_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvalues_2stage_default_kernel_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_1stage_analytic-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_1stage_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_1stage_analytic-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_1stage_analytic-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_1stage_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_1stage_analytic-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_1stage_analytic_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_1stage_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_1stage_analytic_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_1stage_analytic_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_1stage_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_1stage_analytic_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_1stage_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_1stage_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_1stage_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_1stage_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_1stage_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_1stage_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_1stage_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_1stage_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_1stage_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_1stage_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_1stage_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_1stage_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_1stage_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_1stage_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_1stage_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_1stage_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_1stage_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_1stage_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_1stage_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_1stage_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_1stage_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_1stage_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_1stage_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_1stage_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_1stage_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_1stage_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_1stage_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_1stage_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_analytic-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_all_kernels_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_analytic-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_analytic-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_all_kernels_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_analytic-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_qr_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_all_kernels_qr_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_qr_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_qr_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_all_kernels_qr_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_qr_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_all_kernels_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_all_kernels_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_analytic-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_default_kernel_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_analytic-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_analytic-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_default_kernel_analytic_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_analytic-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_qr_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_default_kernel_qr_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_qr_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_qr_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_default_kernel_qr_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_qr_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_default_kernel_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_default_kernel_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_generalized_1stage_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_generalized_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_generalized_1stage_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_generalized_1stage_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_generalized_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_generalized_1stage_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_generalized_1stage_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_generalized_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_generalized_1stage_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_generalized_1stage_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_generalized_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_generalized_1stage_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_generalized_1stage_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_generalized_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_generalized_1stage_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_generalized_1stage_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_generalized_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_generalized_1stage_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_generalized_1stage_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_generalized_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_generalized_1stage_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_generalized_1stage_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_generalized_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_generalized_1stage_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_generalized_decomp_1stage_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_generalized_decomp_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_generalized_decomp_1stage_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_generalized_decomp_1stage_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_generalized_decomp_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_generalized_decomp_1stage_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_generalized_decomp_1stage_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_generalized_decomp_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_generalized_decomp_1stage_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_generalized_decomp_1stage_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_generalized_decomp_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_generalized_decomp_1stage_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_generalized_decomp_1stage_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_generalized_decomp_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_generalized_decomp_1stage_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_generalized_decomp_1stage_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_generalized_decomp_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_generalized_decomp_1stage_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_hermitian_multiply_1stage_gpu_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_hermitian_multiply_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_hermitian_multiply_1stage_gpu_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_hermitian_multiply_1stage_gpu_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_hermitian_multiply_1stage_gpu_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_hermitian_multiply_1stage_gpu_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_hermitian_multiply_1stage_random-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_hermitian_multiply_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_hermitian_multiply_1stage_random-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_hermitian_multiply_1stage_random-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_hermitian_multiply_1stage_random_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_hermitian_multiply_1stage_random-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_hermitian_multiply_1stage_random_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_hermitian_multiply_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_hermitian_multiply_1stage_random_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_hermitian_multiply_1stage_random_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_hermitian_multiply_1stage_random_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_hermitian_multiply_1stage_random_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_solve_tridiagonal_1stage_toeplitz-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_solve_tridiagonal_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_solve_tridiagonal_1stage_toeplitz-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_solve_tridiagonal_1stage_toeplitz-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_solve_tridiagonal_1stage_toeplitz_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_solve_tridiagonal_1stage_toeplitz-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts-test.o: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts-test.o `test -f 'test/Fortran/test.F90' || echo '$(srcdir)/'`test/Fortran/test.F90\n\ntest/Fortran/validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts-test.obj: test/Fortran/test.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts-test.obj `if test -f 'test/Fortran/test.F90'; then $(CYGPATH_W) 'test/Fortran/test.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test.F90'; fi`\n\ntest/Fortran/elpa2/validate_single_complex_2stage_banded@SUFFIX@-single_complex_2stage_banded.o: test/Fortran/elpa2/single_complex_2stage_banded.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_single_complex_2stage_banded@SUFFIX@_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/elpa2/validate_single_complex_2stage_banded@SUFFIX@-single_complex_2stage_banded.o `test -f 'test/Fortran/elpa2/single_complex_2stage_banded.F90' || echo '$(srcdir)/'`test/Fortran/elpa2/single_complex_2stage_banded.F90\n\ntest/Fortran/elpa2/validate_single_complex_2stage_banded@SUFFIX@-single_complex_2stage_banded.obj: test/Fortran/elpa2/single_complex_2stage_banded.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_single_complex_2stage_banded@SUFFIX@_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/elpa2/validate_single_complex_2stage_banded@SUFFIX@-single_complex_2stage_banded.obj `if test -f 'test/Fortran/elpa2/single_complex_2stage_banded.F90'; then $(CYGPATH_W) 'test/Fortran/elpa2/single_complex_2stage_banded.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/elpa2/single_complex_2stage_banded.F90'; fi`\n\ntest/Fortran/elpa2/validate_single_real_2stage_banded@SUFFIX@-single_real_2stage_banded.o: test/Fortran/elpa2/single_real_2stage_banded.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_single_real_2stage_banded@SUFFIX@_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/elpa2/validate_single_real_2stage_banded@SUFFIX@-single_real_2stage_banded.o `test -f 'test/Fortran/elpa2/single_real_2stage_banded.F90' || echo '$(srcdir)/'`test/Fortran/elpa2/single_real_2stage_banded.F90\n\ntest/Fortran/elpa2/validate_single_real_2stage_banded@SUFFIX@-single_real_2stage_banded.obj: test/Fortran/elpa2/single_real_2stage_banded.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_single_real_2stage_banded@SUFFIX@_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/elpa2/validate_single_real_2stage_banded@SUFFIX@-single_real_2stage_banded.obj `if test -f 'test/Fortran/elpa2/single_real_2stage_banded.F90'; then $(CYGPATH_W) 'test/Fortran/elpa2/single_real_2stage_banded.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/elpa2/single_real_2stage_banded.F90'; fi`\n\ntest/Fortran/validate_split_comm_real_double-test_split_comm.o: test/Fortran/test_split_comm.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_split_comm_real_double_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_split_comm_real_double-test_split_comm.o `test -f 'test/Fortran/test_split_comm.F90' || echo '$(srcdir)/'`test/Fortran/test_split_comm.F90\n\ntest/Fortran/validate_split_comm_real_double-test_split_comm.obj: test/Fortran/test_split_comm.F90\n\t$(AM_V_PPFC)$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_split_comm_real_double_FCFLAGS) $(FCFLAGS) -c -o test/Fortran/validate_split_comm_real_double-test_split_comm.obj `if test -f 'test/Fortran/test_split_comm.F90'; then $(CYGPATH_W) 'test/Fortran/test_split_comm.F90'; else $(CYGPATH_W) '$(srcdir)/test/Fortran/test_split_comm.F90'; fi`\n\n.c.o:\n@am__fastdepCC_TRUE@\t$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\\.o$$||'`;\\\n@am__fastdepCC_TRUE@\t$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\\\n@am__fastdepCC_TRUE@\t$(am__mv) $$depbase.Tpo $$depbase.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<\n\n.c.obj:\n@am__fastdepCC_TRUE@\t$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\\.obj$$||'`;\\\n@am__fastdepCC_TRUE@\t$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\\\n@am__fastdepCC_TRUE@\t$(am__mv) $$depbase.Tpo $$depbase.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n\n.c.lo:\n@am__fastdepCC_TRUE@\t$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\\.lo$$||'`;\\\n@am__fastdepCC_TRUE@\t$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\\\n@am__fastdepCC_TRUE@\t$(am__mv) $$depbase.Tpo $$depbase.Plo\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<\n\npython/pyelpa/wrapper_la-wrapper.lo: python/pyelpa/wrapper.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wrapper_la_CFLAGS) $(CFLAGS) -MT python/pyelpa/wrapper_la-wrapper.lo -MD -MP -MF python/pyelpa/$(DEPDIR)/wrapper_la-wrapper.Tpo -c -o python/pyelpa/wrapper_la-wrapper.lo `test -f 'python/pyelpa/wrapper.c' || echo '$(srcdir)/'`python/pyelpa/wrapper.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) python/pyelpa/$(DEPDIR)/wrapper_la-wrapper.Tpo python/pyelpa/$(DEPDIR)/wrapper_la-wrapper.Plo\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='python/pyelpa/wrapper.c' object='python/pyelpa/wrapper_la-wrapper.lo' libtool=yes @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(wrapper_la_CFLAGS) $(CFLAGS) -c -o python/pyelpa/wrapper_la-wrapper.lo `test -f 'python/pyelpa/wrapper.c' || echo '$(srcdir)/'`python/pyelpa/wrapper.c\n\ntest/C/validate_autotune_c_version_complex_double-test_autotune.o: test/C/test_autotune.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_autotune_c_version_complex_double_CFLAGS) $(CFLAGS) -MT test/C/validate_autotune_c_version_complex_double-test_autotune.o -MD -MP -MF test/C/$(DEPDIR)/validate_autotune_c_version_complex_double-test_autotune.Tpo -c -o test/C/validate_autotune_c_version_complex_double-test_autotune.o `test -f 'test/C/test_autotune.c' || echo '$(srcdir)/'`test/C/test_autotune.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_autotune_c_version_complex_double-test_autotune.Tpo test/C/$(DEPDIR)/validate_autotune_c_version_complex_double-test_autotune.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test_autotune.c' object='test/C/validate_autotune_c_version_complex_double-test_autotune.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_autotune_c_version_complex_double_CFLAGS) $(CFLAGS) -c -o test/C/validate_autotune_c_version_complex_double-test_autotune.o `test -f 'test/C/test_autotune.c' || echo '$(srcdir)/'`test/C/test_autotune.c\n\ntest/C/validate_autotune_c_version_complex_double-test_autotune.obj: test/C/test_autotune.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_autotune_c_version_complex_double_CFLAGS) $(CFLAGS) -MT test/C/validate_autotune_c_version_complex_double-test_autotune.obj -MD -MP -MF test/C/$(DEPDIR)/validate_autotune_c_version_complex_double-test_autotune.Tpo -c -o test/C/validate_autotune_c_version_complex_double-test_autotune.obj `if test -f 'test/C/test_autotune.c'; then $(CYGPATH_W) 'test/C/test_autotune.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test_autotune.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_autotune_c_version_complex_double-test_autotune.Tpo test/C/$(DEPDIR)/validate_autotune_c_version_complex_double-test_autotune.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test_autotune.c' object='test/C/validate_autotune_c_version_complex_double-test_autotune.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_autotune_c_version_complex_double_CFLAGS) $(CFLAGS) -c -o test/C/validate_autotune_c_version_complex_double-test_autotune.obj `if test -f 'test/C/test_autotune.c'; then $(CYGPATH_W) 'test/C/test_autotune.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test_autotune.c'; fi`\n\ntest/C/validate_autotune_c_version_complex_single-test_autotune.o: test/C/test_autotune.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_autotune_c_version_complex_single_CFLAGS) $(CFLAGS) -MT test/C/validate_autotune_c_version_complex_single-test_autotune.o -MD -MP -MF test/C/$(DEPDIR)/validate_autotune_c_version_complex_single-test_autotune.Tpo -c -o test/C/validate_autotune_c_version_complex_single-test_autotune.o `test -f 'test/C/test_autotune.c' || echo '$(srcdir)/'`test/C/test_autotune.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_autotune_c_version_complex_single-test_autotune.Tpo test/C/$(DEPDIR)/validate_autotune_c_version_complex_single-test_autotune.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test_autotune.c' object='test/C/validate_autotune_c_version_complex_single-test_autotune.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_autotune_c_version_complex_single_CFLAGS) $(CFLAGS) -c -o test/C/validate_autotune_c_version_complex_single-test_autotune.o `test -f 'test/C/test_autotune.c' || echo '$(srcdir)/'`test/C/test_autotune.c\n\ntest/C/validate_autotune_c_version_complex_single-test_autotune.obj: test/C/test_autotune.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_autotune_c_version_complex_single_CFLAGS) $(CFLAGS) -MT test/C/validate_autotune_c_version_complex_single-test_autotune.obj -MD -MP -MF test/C/$(DEPDIR)/validate_autotune_c_version_complex_single-test_autotune.Tpo -c -o test/C/validate_autotune_c_version_complex_single-test_autotune.obj `if test -f 'test/C/test_autotune.c'; then $(CYGPATH_W) 'test/C/test_autotune.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test_autotune.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_autotune_c_version_complex_single-test_autotune.Tpo test/C/$(DEPDIR)/validate_autotune_c_version_complex_single-test_autotune.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test_autotune.c' object='test/C/validate_autotune_c_version_complex_single-test_autotune.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_autotune_c_version_complex_single_CFLAGS) $(CFLAGS) -c -o test/C/validate_autotune_c_version_complex_single-test_autotune.obj `if test -f 'test/C/test_autotune.c'; then $(CYGPATH_W) 'test/C/test_autotune.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test_autotune.c'; fi`\n\ntest/C/validate_autotune_c_version_real_double-test_autotune.o: test/C/test_autotune.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_autotune_c_version_real_double_CFLAGS) $(CFLAGS) -MT test/C/validate_autotune_c_version_real_double-test_autotune.o -MD -MP -MF test/C/$(DEPDIR)/validate_autotune_c_version_real_double-test_autotune.Tpo -c -o test/C/validate_autotune_c_version_real_double-test_autotune.o `test -f 'test/C/test_autotune.c' || echo '$(srcdir)/'`test/C/test_autotune.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_autotune_c_version_real_double-test_autotune.Tpo test/C/$(DEPDIR)/validate_autotune_c_version_real_double-test_autotune.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test_autotune.c' object='test/C/validate_autotune_c_version_real_double-test_autotune.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_autotune_c_version_real_double_CFLAGS) $(CFLAGS) -c -o test/C/validate_autotune_c_version_real_double-test_autotune.o `test -f 'test/C/test_autotune.c' || echo '$(srcdir)/'`test/C/test_autotune.c\n\ntest/C/validate_autotune_c_version_real_double-test_autotune.obj: test/C/test_autotune.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_autotune_c_version_real_double_CFLAGS) $(CFLAGS) -MT test/C/validate_autotune_c_version_real_double-test_autotune.obj -MD -MP -MF test/C/$(DEPDIR)/validate_autotune_c_version_real_double-test_autotune.Tpo -c -o test/C/validate_autotune_c_version_real_double-test_autotune.obj `if test -f 'test/C/test_autotune.c'; then $(CYGPATH_W) 'test/C/test_autotune.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test_autotune.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_autotune_c_version_real_double-test_autotune.Tpo test/C/$(DEPDIR)/validate_autotune_c_version_real_double-test_autotune.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test_autotune.c' object='test/C/validate_autotune_c_version_real_double-test_autotune.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_autotune_c_version_real_double_CFLAGS) $(CFLAGS) -c -o test/C/validate_autotune_c_version_real_double-test_autotune.obj `if test -f 'test/C/test_autotune.c'; then $(CYGPATH_W) 'test/C/test_autotune.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test_autotune.c'; fi`\n\ntest/C/validate_autotune_c_version_real_single-test_autotune.o: test/C/test_autotune.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_autotune_c_version_real_single_CFLAGS) $(CFLAGS) -MT test/C/validate_autotune_c_version_real_single-test_autotune.o -MD -MP -MF test/C/$(DEPDIR)/validate_autotune_c_version_real_single-test_autotune.Tpo -c -o test/C/validate_autotune_c_version_real_single-test_autotune.o `test -f 'test/C/test_autotune.c' || echo '$(srcdir)/'`test/C/test_autotune.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_autotune_c_version_real_single-test_autotune.Tpo test/C/$(DEPDIR)/validate_autotune_c_version_real_single-test_autotune.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test_autotune.c' object='test/C/validate_autotune_c_version_real_single-test_autotune.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_autotune_c_version_real_single_CFLAGS) $(CFLAGS) -c -o test/C/validate_autotune_c_version_real_single-test_autotune.o `test -f 'test/C/test_autotune.c' || echo '$(srcdir)/'`test/C/test_autotune.c\n\ntest/C/validate_autotune_c_version_real_single-test_autotune.obj: test/C/test_autotune.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_autotune_c_version_real_single_CFLAGS) $(CFLAGS) -MT test/C/validate_autotune_c_version_real_single-test_autotune.obj -MD -MP -MF test/C/$(DEPDIR)/validate_autotune_c_version_real_single-test_autotune.Tpo -c -o test/C/validate_autotune_c_version_real_single-test_autotune.obj `if test -f 'test/C/test_autotune.c'; then $(CYGPATH_W) 'test/C/test_autotune.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test_autotune.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_autotune_c_version_real_single-test_autotune.Tpo test/C/$(DEPDIR)/validate_autotune_c_version_real_single-test_autotune.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test_autotune.c' object='test/C/validate_autotune_c_version_real_single-test_autotune.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_autotune_c_version_real_single_CFLAGS) $(CFLAGS) -c -o test/C/validate_autotune_c_version_real_single-test_autotune.obj `if test -f 'test/C/test_autotune.c'; then $(CYGPATH_W) 'test/C/test_autotune.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test_autotune.c'; fi`\n\ntest/C/validate_c_version_complex_double_eigenvectors_1stage_gpu_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_eigenvectors_1stage_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_double_eigenvectors_1stage_gpu_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_1stage_gpu_random-test.Tpo -c -o test/C/validate_c_version_complex_double_eigenvectors_1stage_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_1stage_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_1stage_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_double_eigenvectors_1stage_gpu_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_eigenvectors_1stage_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_double_eigenvectors_1stage_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_complex_double_eigenvectors_1stage_gpu_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_eigenvectors_1stage_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_double_eigenvectors_1stage_gpu_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_1stage_gpu_random-test.Tpo -c -o test/C/validate_c_version_complex_double_eigenvectors_1stage_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_1stage_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_1stage_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_double_eigenvectors_1stage_gpu_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_eigenvectors_1stage_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_double_eigenvectors_1stage_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_complex_double_eigenvectors_1stage_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_eigenvectors_1stage_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_double_eigenvectors_1stage_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_1stage_random-test.Tpo -c -o test/C/validate_c_version_complex_double_eigenvectors_1stage_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_1stage_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_1stage_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_double_eigenvectors_1stage_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_eigenvectors_1stage_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_double_eigenvectors_1stage_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_complex_double_eigenvectors_1stage_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_eigenvectors_1stage_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_double_eigenvectors_1stage_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_1stage_random-test.Tpo -c -o test/C/validate_c_version_complex_double_eigenvectors_1stage_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_1stage_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_1stage_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_double_eigenvectors_1stage_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_eigenvectors_1stage_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_double_eigenvectors_1stage_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.Tpo -c -o test/C/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.Tpo -c -o test/C/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random-test.Tpo -c -o test/C/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random-test.Tpo -c -o test/C/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_complex_double_generalized_1stage_gpu_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_generalized_1stage_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_double_generalized_1stage_gpu_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_1stage_gpu_random-test.Tpo -c -o test/C/validate_c_version_complex_double_generalized_1stage_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_1stage_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_1stage_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_double_generalized_1stage_gpu_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_generalized_1stage_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_double_generalized_1stage_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_complex_double_generalized_1stage_gpu_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_generalized_1stage_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_double_generalized_1stage_gpu_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_1stage_gpu_random-test.Tpo -c -o test/C/validate_c_version_complex_double_generalized_1stage_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_1stage_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_1stage_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_double_generalized_1stage_gpu_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_generalized_1stage_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_double_generalized_1stage_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_complex_double_generalized_1stage_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_generalized_1stage_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_double_generalized_1stage_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_1stage_random-test.Tpo -c -o test/C/validate_c_version_complex_double_generalized_1stage_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_1stage_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_1stage_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_double_generalized_1stage_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_generalized_1stage_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_double_generalized_1stage_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_complex_double_generalized_1stage_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_generalized_1stage_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_double_generalized_1stage_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_1stage_random-test.Tpo -c -o test/C/validate_c_version_complex_double_generalized_1stage_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_1stage_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_1stage_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_double_generalized_1stage_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_generalized_1stage_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_double_generalized_1stage_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_complex_double_generalized_decomp_1stage_gpu_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_generalized_decomp_1stage_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_double_generalized_decomp_1stage_gpu_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_decomp_1stage_gpu_random-test.Tpo -c -o test/C/validate_c_version_complex_double_generalized_decomp_1stage_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_decomp_1stage_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_decomp_1stage_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_double_generalized_decomp_1stage_gpu_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_generalized_decomp_1stage_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_double_generalized_decomp_1stage_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_complex_double_generalized_decomp_1stage_gpu_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_generalized_decomp_1stage_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_double_generalized_decomp_1stage_gpu_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_decomp_1stage_gpu_random-test.Tpo -c -o test/C/validate_c_version_complex_double_generalized_decomp_1stage_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_decomp_1stage_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_decomp_1stage_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_double_generalized_decomp_1stage_gpu_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_generalized_decomp_1stage_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_double_generalized_decomp_1stage_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_complex_double_generalized_decomp_1stage_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_generalized_decomp_1stage_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_double_generalized_decomp_1stage_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_decomp_1stage_random-test.Tpo -c -o test/C/validate_c_version_complex_double_generalized_decomp_1stage_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_decomp_1stage_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_decomp_1stage_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_double_generalized_decomp_1stage_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_generalized_decomp_1stage_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_double_generalized_decomp_1stage_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_complex_double_generalized_decomp_1stage_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_generalized_decomp_1stage_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_double_generalized_decomp_1stage_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_decomp_1stage_random-test.Tpo -c -o test/C/validate_c_version_complex_double_generalized_decomp_1stage_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_decomp_1stage_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_decomp_1stage_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_double_generalized_decomp_1stage_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_double_generalized_decomp_1stage_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_double_generalized_decomp_1stage_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_complex_single_eigenvectors_1stage_gpu_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_eigenvectors_1stage_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_single_eigenvectors_1stage_gpu_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_1stage_gpu_random-test.Tpo -c -o test/C/validate_c_version_complex_single_eigenvectors_1stage_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_1stage_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_1stage_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_single_eigenvectors_1stage_gpu_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_eigenvectors_1stage_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_single_eigenvectors_1stage_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_complex_single_eigenvectors_1stage_gpu_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_eigenvectors_1stage_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_single_eigenvectors_1stage_gpu_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_1stage_gpu_random-test.Tpo -c -o test/C/validate_c_version_complex_single_eigenvectors_1stage_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_1stage_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_1stage_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_single_eigenvectors_1stage_gpu_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_eigenvectors_1stage_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_single_eigenvectors_1stage_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_complex_single_eigenvectors_1stage_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_eigenvectors_1stage_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_single_eigenvectors_1stage_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_1stage_random-test.Tpo -c -o test/C/validate_c_version_complex_single_eigenvectors_1stage_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_1stage_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_1stage_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_single_eigenvectors_1stage_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_eigenvectors_1stage_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_single_eigenvectors_1stage_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_complex_single_eigenvectors_1stage_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_eigenvectors_1stage_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_single_eigenvectors_1stage_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_1stage_random-test.Tpo -c -o test/C/validate_c_version_complex_single_eigenvectors_1stage_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_1stage_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_1stage_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_single_eigenvectors_1stage_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_eigenvectors_1stage_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_single_eigenvectors_1stage_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.Tpo -c -o test/C/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.Tpo -c -o test/C/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random-test.Tpo -c -o test/C/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random-test.Tpo -c -o test/C/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_complex_single_generalized_1stage_gpu_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_generalized_1stage_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_single_generalized_1stage_gpu_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_1stage_gpu_random-test.Tpo -c -o test/C/validate_c_version_complex_single_generalized_1stage_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_1stage_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_1stage_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_single_generalized_1stage_gpu_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_generalized_1stage_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_single_generalized_1stage_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_complex_single_generalized_1stage_gpu_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_generalized_1stage_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_single_generalized_1stage_gpu_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_1stage_gpu_random-test.Tpo -c -o test/C/validate_c_version_complex_single_generalized_1stage_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_1stage_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_1stage_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_single_generalized_1stage_gpu_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_generalized_1stage_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_single_generalized_1stage_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_complex_single_generalized_1stage_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_generalized_1stage_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_single_generalized_1stage_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_1stage_random-test.Tpo -c -o test/C/validate_c_version_complex_single_generalized_1stage_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_1stage_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_1stage_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_single_generalized_1stage_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_generalized_1stage_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_single_generalized_1stage_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_complex_single_generalized_1stage_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_generalized_1stage_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_single_generalized_1stage_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_1stage_random-test.Tpo -c -o test/C/validate_c_version_complex_single_generalized_1stage_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_1stage_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_1stage_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_single_generalized_1stage_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_generalized_1stage_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_single_generalized_1stage_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_complex_single_generalized_decomp_1stage_gpu_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_generalized_decomp_1stage_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_single_generalized_decomp_1stage_gpu_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_decomp_1stage_gpu_random-test.Tpo -c -o test/C/validate_c_version_complex_single_generalized_decomp_1stage_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_decomp_1stage_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_decomp_1stage_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_single_generalized_decomp_1stage_gpu_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_generalized_decomp_1stage_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_single_generalized_decomp_1stage_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_complex_single_generalized_decomp_1stage_gpu_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_generalized_decomp_1stage_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_single_generalized_decomp_1stage_gpu_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_decomp_1stage_gpu_random-test.Tpo -c -o test/C/validate_c_version_complex_single_generalized_decomp_1stage_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_decomp_1stage_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_decomp_1stage_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_single_generalized_decomp_1stage_gpu_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_generalized_decomp_1stage_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_single_generalized_decomp_1stage_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_complex_single_generalized_decomp_1stage_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_generalized_decomp_1stage_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_single_generalized_decomp_1stage_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_decomp_1stage_random-test.Tpo -c -o test/C/validate_c_version_complex_single_generalized_decomp_1stage_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_decomp_1stage_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_decomp_1stage_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_single_generalized_decomp_1stage_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_generalized_decomp_1stage_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_single_generalized_decomp_1stage_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_complex_single_generalized_decomp_1stage_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_generalized_decomp_1stage_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_complex_single_generalized_decomp_1stage_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_decomp_1stage_random-test.Tpo -c -o test/C/validate_c_version_complex_single_generalized_decomp_1stage_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_decomp_1stage_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_decomp_1stage_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_complex_single_generalized_decomp_1stage_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_complex_single_generalized_decomp_1stage_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_complex_single_generalized_decomp_1stage_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_real_double_eigenvectors_1stage_gpu_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_eigenvectors_1stage_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_double_eigenvectors_1stage_gpu_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_1stage_gpu_random-test.Tpo -c -o test/C/validate_c_version_real_double_eigenvectors_1stage_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_1stage_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_1stage_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_double_eigenvectors_1stage_gpu_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_eigenvectors_1stage_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_double_eigenvectors_1stage_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_real_double_eigenvectors_1stage_gpu_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_eigenvectors_1stage_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_double_eigenvectors_1stage_gpu_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_1stage_gpu_random-test.Tpo -c -o test/C/validate_c_version_real_double_eigenvectors_1stage_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_1stage_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_1stage_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_double_eigenvectors_1stage_gpu_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_eigenvectors_1stage_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_double_eigenvectors_1stage_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_real_double_eigenvectors_1stage_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_eigenvectors_1stage_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_double_eigenvectors_1stage_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_1stage_random-test.Tpo -c -o test/C/validate_c_version_real_double_eigenvectors_1stage_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_1stage_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_1stage_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_double_eigenvectors_1stage_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_eigenvectors_1stage_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_double_eigenvectors_1stage_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_real_double_eigenvectors_1stage_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_eigenvectors_1stage_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_double_eigenvectors_1stage_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_1stage_random-test.Tpo -c -o test/C/validate_c_version_real_double_eigenvectors_1stage_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_1stage_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_1stage_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_double_eigenvectors_1stage_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_eigenvectors_1stage_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_double_eigenvectors_1stage_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.Tpo -c -o test/C/validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.Tpo -c -o test/C/validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_real_double_eigenvectors_2stage_default_kernel_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_eigenvectors_2stage_default_kernel_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_double_eigenvectors_2stage_default_kernel_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_2stage_default_kernel_random-test.Tpo -c -o test/C/validate_c_version_real_double_eigenvectors_2stage_default_kernel_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_2stage_default_kernel_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_2stage_default_kernel_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_double_eigenvectors_2stage_default_kernel_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_eigenvectors_2stage_default_kernel_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_double_eigenvectors_2stage_default_kernel_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_real_double_eigenvectors_2stage_default_kernel_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_eigenvectors_2stage_default_kernel_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_double_eigenvectors_2stage_default_kernel_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_2stage_default_kernel_random-test.Tpo -c -o test/C/validate_c_version_real_double_eigenvectors_2stage_default_kernel_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_2stage_default_kernel_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_2stage_default_kernel_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_double_eigenvectors_2stage_default_kernel_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_eigenvectors_2stage_default_kernel_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_double_eigenvectors_2stage_default_kernel_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_real_double_generalized_1stage_gpu_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_generalized_1stage_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_double_generalized_1stage_gpu_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_double_generalized_1stage_gpu_random-test.Tpo -c -o test/C/validate_c_version_real_double_generalized_1stage_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_double_generalized_1stage_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_double_generalized_1stage_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_double_generalized_1stage_gpu_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_generalized_1stage_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_double_generalized_1stage_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_real_double_generalized_1stage_gpu_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_generalized_1stage_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_double_generalized_1stage_gpu_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_double_generalized_1stage_gpu_random-test.Tpo -c -o test/C/validate_c_version_real_double_generalized_1stage_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_double_generalized_1stage_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_double_generalized_1stage_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_double_generalized_1stage_gpu_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_generalized_1stage_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_double_generalized_1stage_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_real_double_generalized_1stage_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_generalized_1stage_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_double_generalized_1stage_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_double_generalized_1stage_random-test.Tpo -c -o test/C/validate_c_version_real_double_generalized_1stage_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_double_generalized_1stage_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_double_generalized_1stage_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_double_generalized_1stage_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_generalized_1stage_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_double_generalized_1stage_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_real_double_generalized_1stage_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_generalized_1stage_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_double_generalized_1stage_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_double_generalized_1stage_random-test.Tpo -c -o test/C/validate_c_version_real_double_generalized_1stage_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_double_generalized_1stage_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_double_generalized_1stage_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_double_generalized_1stage_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_generalized_1stage_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_double_generalized_1stage_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_real_double_generalized_decomp_1stage_gpu_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_generalized_decomp_1stage_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_double_generalized_decomp_1stage_gpu_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_double_generalized_decomp_1stage_gpu_random-test.Tpo -c -o test/C/validate_c_version_real_double_generalized_decomp_1stage_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_double_generalized_decomp_1stage_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_double_generalized_decomp_1stage_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_double_generalized_decomp_1stage_gpu_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_generalized_decomp_1stage_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_double_generalized_decomp_1stage_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_real_double_generalized_decomp_1stage_gpu_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_generalized_decomp_1stage_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_double_generalized_decomp_1stage_gpu_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_double_generalized_decomp_1stage_gpu_random-test.Tpo -c -o test/C/validate_c_version_real_double_generalized_decomp_1stage_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_double_generalized_decomp_1stage_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_double_generalized_decomp_1stage_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_double_generalized_decomp_1stage_gpu_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_generalized_decomp_1stage_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_double_generalized_decomp_1stage_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_real_double_generalized_decomp_1stage_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_generalized_decomp_1stage_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_double_generalized_decomp_1stage_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_double_generalized_decomp_1stage_random-test.Tpo -c -o test/C/validate_c_version_real_double_generalized_decomp_1stage_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_double_generalized_decomp_1stage_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_double_generalized_decomp_1stage_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_double_generalized_decomp_1stage_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_generalized_decomp_1stage_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_double_generalized_decomp_1stage_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_real_double_generalized_decomp_1stage_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_generalized_decomp_1stage_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_double_generalized_decomp_1stage_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_double_generalized_decomp_1stage_random-test.Tpo -c -o test/C/validate_c_version_real_double_generalized_decomp_1stage_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_double_generalized_decomp_1stage_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_double_generalized_decomp_1stage_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_double_generalized_decomp_1stage_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_double_generalized_decomp_1stage_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_double_generalized_decomp_1stage_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_real_single_eigenvectors_1stage_gpu_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_eigenvectors_1stage_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_single_eigenvectors_1stage_gpu_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_1stage_gpu_random-test.Tpo -c -o test/C/validate_c_version_real_single_eigenvectors_1stage_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_1stage_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_1stage_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_single_eigenvectors_1stage_gpu_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_eigenvectors_1stage_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_single_eigenvectors_1stage_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_real_single_eigenvectors_1stage_gpu_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_eigenvectors_1stage_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_single_eigenvectors_1stage_gpu_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_1stage_gpu_random-test.Tpo -c -o test/C/validate_c_version_real_single_eigenvectors_1stage_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_1stage_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_1stage_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_single_eigenvectors_1stage_gpu_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_eigenvectors_1stage_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_single_eigenvectors_1stage_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_real_single_eigenvectors_1stage_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_eigenvectors_1stage_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_single_eigenvectors_1stage_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_1stage_random-test.Tpo -c -o test/C/validate_c_version_real_single_eigenvectors_1stage_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_1stage_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_1stage_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_single_eigenvectors_1stage_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_eigenvectors_1stage_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_single_eigenvectors_1stage_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_real_single_eigenvectors_1stage_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_eigenvectors_1stage_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_single_eigenvectors_1stage_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_1stage_random-test.Tpo -c -o test/C/validate_c_version_real_single_eigenvectors_1stage_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_1stage_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_1stage_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_single_eigenvectors_1stage_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_eigenvectors_1stage_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_single_eigenvectors_1stage_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.Tpo -c -o test/C/validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.Tpo -c -o test/C/validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_real_single_eigenvectors_2stage_default_kernel_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_eigenvectors_2stage_default_kernel_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_single_eigenvectors_2stage_default_kernel_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_2stage_default_kernel_random-test.Tpo -c -o test/C/validate_c_version_real_single_eigenvectors_2stage_default_kernel_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_2stage_default_kernel_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_2stage_default_kernel_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_single_eigenvectors_2stage_default_kernel_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_eigenvectors_2stage_default_kernel_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_single_eigenvectors_2stage_default_kernel_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_real_single_eigenvectors_2stage_default_kernel_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_eigenvectors_2stage_default_kernel_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_single_eigenvectors_2stage_default_kernel_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_2stage_default_kernel_random-test.Tpo -c -o test/C/validate_c_version_real_single_eigenvectors_2stage_default_kernel_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_2stage_default_kernel_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_2stage_default_kernel_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_single_eigenvectors_2stage_default_kernel_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_eigenvectors_2stage_default_kernel_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_single_eigenvectors_2stage_default_kernel_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_real_single_generalized_1stage_gpu_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_generalized_1stage_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_single_generalized_1stage_gpu_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_single_generalized_1stage_gpu_random-test.Tpo -c -o test/C/validate_c_version_real_single_generalized_1stage_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_single_generalized_1stage_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_single_generalized_1stage_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_single_generalized_1stage_gpu_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_generalized_1stage_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_single_generalized_1stage_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_real_single_generalized_1stage_gpu_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_generalized_1stage_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_single_generalized_1stage_gpu_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_single_generalized_1stage_gpu_random-test.Tpo -c -o test/C/validate_c_version_real_single_generalized_1stage_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_single_generalized_1stage_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_single_generalized_1stage_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_single_generalized_1stage_gpu_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_generalized_1stage_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_single_generalized_1stage_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_real_single_generalized_1stage_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_generalized_1stage_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_single_generalized_1stage_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_single_generalized_1stage_random-test.Tpo -c -o test/C/validate_c_version_real_single_generalized_1stage_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_single_generalized_1stage_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_single_generalized_1stage_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_single_generalized_1stage_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_generalized_1stage_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_single_generalized_1stage_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_real_single_generalized_1stage_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_generalized_1stage_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_single_generalized_1stage_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_single_generalized_1stage_random-test.Tpo -c -o test/C/validate_c_version_real_single_generalized_1stage_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_single_generalized_1stage_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_single_generalized_1stage_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_single_generalized_1stage_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_generalized_1stage_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_single_generalized_1stage_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_real_single_generalized_decomp_1stage_gpu_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_generalized_decomp_1stage_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_single_generalized_decomp_1stage_gpu_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_single_generalized_decomp_1stage_gpu_random-test.Tpo -c -o test/C/validate_c_version_real_single_generalized_decomp_1stage_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_single_generalized_decomp_1stage_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_single_generalized_decomp_1stage_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_single_generalized_decomp_1stage_gpu_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_generalized_decomp_1stage_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_single_generalized_decomp_1stage_gpu_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_real_single_generalized_decomp_1stage_gpu_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_generalized_decomp_1stage_gpu_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_single_generalized_decomp_1stage_gpu_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_single_generalized_decomp_1stage_gpu_random-test.Tpo -c -o test/C/validate_c_version_real_single_generalized_decomp_1stage_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_single_generalized_decomp_1stage_gpu_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_single_generalized_decomp_1stage_gpu_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_single_generalized_decomp_1stage_gpu_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_generalized_decomp_1stage_gpu_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_single_generalized_decomp_1stage_gpu_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_c_version_real_single_generalized_decomp_1stage_random-test.o: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_generalized_decomp_1stage_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_single_generalized_decomp_1stage_random-test.o -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_single_generalized_decomp_1stage_random-test.Tpo -c -o test/C/validate_c_version_real_single_generalized_decomp_1stage_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_single_generalized_decomp_1stage_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_single_generalized_decomp_1stage_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_single_generalized_decomp_1stage_random-test.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_generalized_decomp_1stage_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_single_generalized_decomp_1stage_random-test.o `test -f 'test/C/test.c' || echo '$(srcdir)/'`test/C/test.c\n\ntest/C/validate_c_version_real_single_generalized_decomp_1stage_random-test.obj: test/C/test.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_generalized_decomp_1stage_random_CFLAGS) $(CFLAGS) -MT test/C/validate_c_version_real_single_generalized_decomp_1stage_random-test.obj -MD -MP -MF test/C/$(DEPDIR)/validate_c_version_real_single_generalized_decomp_1stage_random-test.Tpo -c -o test/C/validate_c_version_real_single_generalized_decomp_1stage_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_c_version_real_single_generalized_decomp_1stage_random-test.Tpo test/C/$(DEPDIR)/validate_c_version_real_single_generalized_decomp_1stage_random-test.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test.c' object='test/C/validate_c_version_real_single_generalized_decomp_1stage_random-test.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_c_version_real_single_generalized_decomp_1stage_random_CFLAGS) $(CFLAGS) -c -o test/C/validate_c_version_real_single_generalized_decomp_1stage_random-test.obj `if test -f 'test/C/test.c'; then $(CYGPATH_W) 'test/C/test.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test.c'; fi`\n\ntest/C/validate_multiple_objs_real_double_c_version-test_multiple_objs.o: test/C/test_multiple_objs.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_multiple_objs_real_double_c_version_CFLAGS) $(CFLAGS) -MT test/C/validate_multiple_objs_real_double_c_version-test_multiple_objs.o -MD -MP -MF test/C/$(DEPDIR)/validate_multiple_objs_real_double_c_version-test_multiple_objs.Tpo -c -o test/C/validate_multiple_objs_real_double_c_version-test_multiple_objs.o `test -f 'test/C/test_multiple_objs.c' || echo '$(srcdir)/'`test/C/test_multiple_objs.c\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_multiple_objs_real_double_c_version-test_multiple_objs.Tpo test/C/$(DEPDIR)/validate_multiple_objs_real_double_c_version-test_multiple_objs.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test_multiple_objs.c' object='test/C/validate_multiple_objs_real_double_c_version-test_multiple_objs.o' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_multiple_objs_real_double_c_version_CFLAGS) $(CFLAGS) -c -o test/C/validate_multiple_objs_real_double_c_version-test_multiple_objs.o `test -f 'test/C/test_multiple_objs.c' || echo '$(srcdir)/'`test/C/test_multiple_objs.c\n\ntest/C/validate_multiple_objs_real_double_c_version-test_multiple_objs.obj: test/C/test_multiple_objs.c\n@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_multiple_objs_real_double_c_version_CFLAGS) $(CFLAGS) -MT test/C/validate_multiple_objs_real_double_c_version-test_multiple_objs.obj -MD -MP -MF test/C/$(DEPDIR)/validate_multiple_objs_real_double_c_version-test_multiple_objs.Tpo -c -o test/C/validate_multiple_objs_real_double_c_version-test_multiple_objs.obj `if test -f 'test/C/test_multiple_objs.c'; then $(CYGPATH_W) 'test/C/test_multiple_objs.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test_multiple_objs.c'; fi`\n@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) test/C/$(DEPDIR)/validate_multiple_objs_real_double_c_version-test_multiple_objs.Tpo test/C/$(DEPDIR)/validate_multiple_objs_real_double_c_version-test_multiple_objs.Po\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='test/C/test_multiple_objs.c' object='test/C/validate_multiple_objs_real_double_c_version-test_multiple_objs.obj' libtool=no @AMDEPBACKSLASH@\n@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(validate_multiple_objs_real_double_c_version_CFLAGS) $(CFLAGS) -c -o test/C/validate_multiple_objs_real_double_c_version-test_multiple_objs.obj `if test -f 'test/C/test_multiple_objs.c'; then $(CYGPATH_W) 'test/C/test_multiple_objs.c'; else $(CYGPATH_W) '$(srcdir)/test/C/test_multiple_objs.c'; fi`\n\n.f90.o:\n\t$(AM_V_FC)$(FCCOMPILE) -c -o $@ $<\n\n.f90.obj:\n\t$(AM_V_FC)$(FCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n\n.f90.lo:\n\t$(AM_V_FC)$(LTFCCOMPILE) -c -o $@ $<\n\nsrc/elpa2/kernels/libelpa@SUFFIX@_private_la-real_bgp.lo: src/elpa2/kernels/real_bgp.f90\n\t$(AM_V_FC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/elpa2/kernels/libelpa@SUFFIX@_private_la-real_bgp.lo `test -f 'src/elpa2/kernels/real_bgp.f90' || echo '$(srcdir)/'`src/elpa2/kernels/real_bgp.f90\n\nsrc/elpa2/kernels/libelpa@SUFFIX@_private_la-real_bgq.lo: src/elpa2/kernels/real_bgq.f90\n\t$(AM_V_FC)$(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(FC) $(libelpa@SUFFIX@_private_la_FCFLAGS) $(FCFLAGS) -c -o src/elpa2/kernels/libelpa@SUFFIX@_private_la-real_bgq.lo `test -f 'src/elpa2/kernels/real_bgq.f90' || echo '$(srcdir)/'`src/elpa2/kernels/real_bgq.f90\n\n.s.o:\n\t$(AM_V_CCAS)$(CCASCOMPILE) -c -o $@ $<\n\n.s.obj:\n\t$(AM_V_CCAS)$(CCASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n\n.s.lo:\n\t$(AM_V_CCAS)$(LTCCASCOMPILE) -c -o $@ $<\n\nmostlyclean-libtool:\n\t-rm -f *.lo\n\nclean-libtool:\n\t-rm -rf .libs _libs\n\t-rm -rf python/pyelpa/.libs python/pyelpa/_libs\n\t-rm -rf src/.libs src/_libs\n\t-rm -rf src/GPU/.libs src/GPU/_libs\n\t-rm -rf src/elpa1/.libs src/elpa1/_libs\n\t-rm -rf src/elpa2/.libs src/elpa2/_libs\n\t-rm -rf src/elpa2/GPU/.libs src/elpa2/GPU/_libs\n\t-rm -rf src/elpa2/kernels/.libs src/elpa2/kernels/_libs\n\t-rm -rf src/elpa2/qr/.libs src/elpa2/qr/_libs\n\t-rm -rf src/elpa_generalized/.libs src/elpa_generalized/_libs\n\t-rm -rf src/ftimings/.libs src/ftimings/_libs\n\t-rm -rf src/general/.libs src/general/_libs\n\t-rm -rf src/helpers/.libs src/helpers/_libs\n\t-rm -rf test/shared/.libs test/shared/_libs\n\ndistclean-libtool:\n\t-rm -f libtool config.lt\ninstall-pyelpaPYTHON: $(pyelpa_PYTHON)\n\t@$(NORMAL_INSTALL)\n\t@list='$(pyelpa_PYTHON)'; dlist=; list2=; test -n \"$(pyelpadir)\" || list=; \\\n\tif test -n \"$$list\"; then \\\n\t  echo \" $(MKDIR_P) '$(DESTDIR)$(pyelpadir)'\"; \\\n\t  $(MKDIR_P) \"$(DESTDIR)$(pyelpadir)\" || exit 1; \\\n\tfi; \\\n\tfor p in $$list; do \\\n\t  if test -f \"$$p\"; then b=; else b=\"$(srcdir)/\"; fi; \\\n\t  if test -f $$b$$p; then \\\n\t    $(am__strip_dir) \\\n\t    dlist=\"$$dlist $$f\"; \\\n\t    list2=\"$$list2 $$b$$p\"; \\\n\t  else :; fi; \\\n\tdone; \\\n\tfor file in $$list2; do echo $$file; done | $(am__base_list) | \\\n\twhile read files; do \\\n\t  echo \" $(INSTALL_DATA) $$files '$(DESTDIR)$(pyelpadir)'\"; \\\n\t  $(INSTALL_DATA) $$files \"$(DESTDIR)$(pyelpadir)\" || exit $$?; \\\n\tdone || exit $$?; \\\n\tif test -n \"$$dlist\"; then \\\n\t  $(am__py_compile) --destdir \"$(DESTDIR)\" \\\n\t                    --basedir \"$(pyelpadir)\" $$dlist; \\\n\telse :; fi\n\nuninstall-pyelpaPYTHON:\n\t@$(NORMAL_UNINSTALL)\n\t@list='$(pyelpa_PYTHON)'; test -n \"$(pyelpadir)\" || list=; \\\n\tpy_files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n\ttest -n \"$$py_files\" || exit 0; \\\n\tdir='$(DESTDIR)$(pyelpadir)'; \\\n\tpyc_files=`echo \"$$py_files\" | sed 's|$$|c|'`; \\\n\tpyo_files=`echo \"$$py_files\" | sed 's|$$|o|'`; \\\n\tst=0; \\\n\tfor files in \"$$py_files\" \"$$pyc_files\" \"$$pyo_files\"; do \\\n\t  $(am__uninstall_files_from_dir) || st=$$?; \\\n\tdone; \\\n\tdir='$(DESTDIR)$(pyelpadir)/__pycache__'; \\\n\techo \"$$py_files\" | $(am__pep3147_tweak) | $(am__base_list) | \\\n\t  while read files; do \\\n\t    $(am__uninstall_files_from_dir) || st=$$?; \\\n\t  done || exit $$?; \\\n\texit $$st\ninstall-man1: $(dist_man_MANS)\n\t@$(NORMAL_INSTALL)\n\t@list1=''; \\\n\tlist2='$(dist_man_MANS)'; \\\n\ttest -n \"$(man1dir)\" \\\n\t  && test -n \"`echo $$list1$$list2`\" \\\n\t  || exit 0; \\\n\techo \" $(MKDIR_P) '$(DESTDIR)$(man1dir)'\"; \\\n\t$(MKDIR_P) \"$(DESTDIR)$(man1dir)\" || exit 1; \\\n\t{ for i in $$list1; do echo \"$$i\"; done;  \\\n\tif test -n \"$$list2\"; then \\\n\t  for i in $$list2; do echo \"$$i\"; done \\\n\t    | sed -n '/\\.1[a-z]*$$/p'; \\\n\tfi; \\\n\t} | while read p; do \\\n\t  if test -f $$p; then d=; else d=\"$(srcdir)/\"; fi; \\\n\t  echo \"$$d$$p\"; echo \"$$p\"; \\\n\tdone | \\\n\tsed -e 'n;s,.*/,,;p;h;s,.*\\.,,;s,^[^1][0-9a-z]*$$,1,;x' \\\n\t      -e 's,\\.[0-9a-z]*$$,,;$(transform);G;s,\\n,.,' | \\\n\tsed 'N;N;s,\\n, ,g' | { \\\n\tlist=; while read file base inst; do \\\n\t  if test \"$$base\" = \"$$inst\"; then list=\"$$list $$file\"; else \\\n\t    echo \" $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'\"; \\\n\t    $(INSTALL_DATA) \"$$file\" \"$(DESTDIR)$(man1dir)/$$inst\" || exit $$?; \\\n\t  fi; \\\n\tdone; \\\n\tfor i in $$list; do echo \"$$i\"; done | $(am__base_list) | \\\n\twhile read files; do \\\n\t  test -z \"$$files\" || { \\\n\t    echo \" $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'\"; \\\n\t    $(INSTALL_DATA) $$files \"$(DESTDIR)$(man1dir)\" || exit $$?; }; \\\n\tdone; }\n\nuninstall-man1:\n\t@$(NORMAL_UNINSTALL)\n\t@list=''; test -n \"$(man1dir)\" || exit 0; \\\n\tfiles=`{ for i in $$list; do echo \"$$i\"; done; \\\n\tl2='$(dist_man_MANS)'; for i in $$l2; do echo \"$$i\"; done | \\\n\t  sed -n '/\\.1[a-z]*$$/p'; \\\n\t} | sed -e 's,.*/,,;h;s,.*\\.,,;s,^[^1][0-9a-z]*$$,1,;x' \\\n\t      -e 's,\\.[0-9a-z]*$$,,;$(transform);G;s,\\n,.,'`; \\\n\tdir='$(DESTDIR)$(man1dir)'; $(am__uninstall_files_from_dir)\ninstall-man3: $(dist_man_MANS)\n\t@$(NORMAL_INSTALL)\n\t@list1=''; \\\n\tlist2='$(dist_man_MANS)'; \\\n\ttest -n \"$(man3dir)\" \\\n\t  && test -n \"`echo $$list1$$list2`\" \\\n\t  || exit 0; \\\n\techo \" $(MKDIR_P) '$(DESTDIR)$(man3dir)'\"; \\\n\t$(MKDIR_P) \"$(DESTDIR)$(man3dir)\" || exit 1; \\\n\t{ for i in $$list1; do echo \"$$i\"; done;  \\\n\tif test -n \"$$list2\"; then \\\n\t  for i in $$list2; do echo \"$$i\"; done \\\n\t    | sed -n '/\\.3[a-z]*$$/p'; \\\n\tfi; \\\n\t} | while read p; do \\\n\t  if test -f $$p; then d=; else d=\"$(srcdir)/\"; fi; \\\n\t  echo \"$$d$$p\"; echo \"$$p\"; \\\n\tdone | \\\n\tsed -e 'n;s,.*/,,;p;h;s,.*\\.,,;s,^[^3][0-9a-z]*$$,3,;x' \\\n\t      -e 's,\\.[0-9a-z]*$$,,;$(transform);G;s,\\n,.,' | \\\n\tsed 'N;N;s,\\n, ,g' | { \\\n\tlist=; while read file base inst; do \\\n\t  if test \"$$base\" = \"$$inst\"; then list=\"$$list $$file\"; else \\\n\t    echo \" $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man3dir)/$$inst'\"; \\\n\t    $(INSTALL_DATA) \"$$file\" \"$(DESTDIR)$(man3dir)/$$inst\" || exit $$?; \\\n\t  fi; \\\n\tdone; \\\n\tfor i in $$list; do echo \"$$i\"; done | $(am__base_list) | \\\n\twhile read files; do \\\n\t  test -z \"$$files\" || { \\\n\t    echo \" $(INSTALL_DATA) $$files '$(DESTDIR)$(man3dir)'\"; \\\n\t    $(INSTALL_DATA) $$files \"$(DESTDIR)$(man3dir)\" || exit $$?; }; \\\n\tdone; }\n\nuninstall-man3:\n\t@$(NORMAL_UNINSTALL)\n\t@list=''; test -n \"$(man3dir)\" || exit 0; \\\n\tfiles=`{ for i in $$list; do echo \"$$i\"; done; \\\n\tl2='$(dist_man_MANS)'; for i in $$l2; do echo \"$$i\"; done | \\\n\t  sed -n '/\\.3[a-z]*$$/p'; \\\n\t} | sed -e 's,.*/,,;h;s,.*\\.,,;s,^[^3][0-9a-z]*$$,3,;x' \\\n\t      -e 's,\\.[0-9a-z]*$$,,;$(transform);G;s,\\n,.,'`; \\\n\tdir='$(DESTDIR)$(man3dir)'; $(am__uninstall_files_from_dir)\ninstall-dist_docDATA: $(dist_doc_DATA)\n\t@$(NORMAL_INSTALL)\n\t@list='$(dist_doc_DATA)'; test -n \"$(docdir)\" || list=; \\\n\tif test -n \"$$list\"; then \\\n\t  echo \" $(MKDIR_P) '$(DESTDIR)$(docdir)'\"; \\\n\t  $(MKDIR_P) \"$(DESTDIR)$(docdir)\" || exit 1; \\\n\tfi; \\\n\tfor p in $$list; do \\\n\t  if test -f \"$$p\"; then d=; else d=\"$(srcdir)/\"; fi; \\\n\t  echo \"$$d$$p\"; \\\n\tdone | $(am__base_list) | \\\n\twhile read files; do \\\n\t  echo \" $(INSTALL_DATA) $$files '$(DESTDIR)$(docdir)'\"; \\\n\t  $(INSTALL_DATA) $$files \"$(DESTDIR)$(docdir)\" || exit $$?; \\\n\tdone\n\nuninstall-dist_docDATA:\n\t@$(NORMAL_UNINSTALL)\n\t@list='$(dist_doc_DATA)'; test -n \"$(docdir)\" || list=; \\\n\tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n\tdir='$(DESTDIR)$(docdir)'; $(am__uninstall_files_from_dir)\ninstall-pkgconfigDATA: $(pkgconfig_DATA)\n\t@$(NORMAL_INSTALL)\n\t@list='$(pkgconfig_DATA)'; test -n \"$(pkgconfigdir)\" || list=; \\\n\tif test -n \"$$list\"; then \\\n\t  echo \" $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'\"; \\\n\t  $(MKDIR_P) \"$(DESTDIR)$(pkgconfigdir)\" || exit 1; \\\n\tfi; \\\n\tfor p in $$list; do \\\n\t  if test -f \"$$p\"; then d=; else d=\"$(srcdir)/\"; fi; \\\n\t  echo \"$$d$$p\"; \\\n\tdone | $(am__base_list) | \\\n\twhile read files; do \\\n\t  echo \" $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'\"; \\\n\t  $(INSTALL_DATA) $$files \"$(DESTDIR)$(pkgconfigdir)\" || exit $$?; \\\n\tdone\n\nuninstall-pkgconfigDATA:\n\t@$(NORMAL_UNINSTALL)\n\t@list='$(pkgconfig_DATA)'; test -n \"$(pkgconfigdir)\" || list=; \\\n\tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n\tdir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)\ninstall-nobase_elpa_includeHEADERS: $(nobase_elpa_include_HEADERS)\n\t@$(NORMAL_INSTALL)\n\t@list='$(nobase_elpa_include_HEADERS)'; test -n \"$(elpa_includedir)\" || list=; \\\n\tif test -n \"$$list\"; then \\\n\t  echo \" $(MKDIR_P) '$(DESTDIR)$(elpa_includedir)'\"; \\\n\t  $(MKDIR_P) \"$(DESTDIR)$(elpa_includedir)\" || exit 1; \\\n\tfi; \\\n\t$(am__nobase_list) | while read dir files; do \\\n\t  xfiles=; for file in $$files; do \\\n\t    if test -f \"$$file\"; then xfiles=\"$$xfiles $$file\"; \\\n\t    else xfiles=\"$$xfiles $(srcdir)/$$file\"; fi; done; \\\n\t  test -z \"$$xfiles\" || { \\\n\t    test \"x$$dir\" = x. || { \\\n\t      echo \" $(MKDIR_P) '$(DESTDIR)$(elpa_includedir)/$$dir'\"; \\\n\t      $(MKDIR_P) \"$(DESTDIR)$(elpa_includedir)/$$dir\"; }; \\\n\t    echo \" $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(elpa_includedir)/$$dir'\"; \\\n\t    $(INSTALL_HEADER) $$xfiles \"$(DESTDIR)$(elpa_includedir)/$$dir\" || exit $$?; }; \\\n\tdone\n\nuninstall-nobase_elpa_includeHEADERS:\n\t@$(NORMAL_UNINSTALL)\n\t@list='$(nobase_elpa_include_HEADERS)'; test -n \"$(elpa_includedir)\" || list=; \\\n\t$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \\\n\tdir='$(DESTDIR)$(elpa_includedir)'; $(am__uninstall_files_from_dir)\ninstall-nobase_nodist_elpa_includeHEADERS: $(nobase_nodist_elpa_include_HEADERS)\n\t@$(NORMAL_INSTALL)\n\t@list='$(nobase_nodist_elpa_include_HEADERS)'; test -n \"$(elpa_includedir)\" || list=; \\\n\tif test -n \"$$list\"; then \\\n\t  echo \" $(MKDIR_P) '$(DESTDIR)$(elpa_includedir)'\"; \\\n\t  $(MKDIR_P) \"$(DESTDIR)$(elpa_includedir)\" || exit 1; \\\n\tfi; \\\n\t$(am__nobase_list) | while read dir files; do \\\n\t  xfiles=; for file in $$files; do \\\n\t    if test -f \"$$file\"; then xfiles=\"$$xfiles $$file\"; \\\n\t    else xfiles=\"$$xfiles $(srcdir)/$$file\"; fi; done; \\\n\t  test -z \"$$xfiles\" || { \\\n\t    test \"x$$dir\" = x. || { \\\n\t      echo \" $(MKDIR_P) '$(DESTDIR)$(elpa_includedir)/$$dir'\"; \\\n\t      $(MKDIR_P) \"$(DESTDIR)$(elpa_includedir)/$$dir\"; }; \\\n\t    echo \" $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(elpa_includedir)/$$dir'\"; \\\n\t    $(INSTALL_HEADER) $$xfiles \"$(DESTDIR)$(elpa_includedir)/$$dir\" || exit $$?; }; \\\n\tdone\n\nuninstall-nobase_nodist_elpa_includeHEADERS:\n\t@$(NORMAL_UNINSTALL)\n\t@list='$(nobase_nodist_elpa_include_HEADERS)'; test -n \"$(elpa_includedir)\" || list=; \\\n\t$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \\\n\tdir='$(DESTDIR)$(elpa_includedir)'; $(am__uninstall_files_from_dir)\n\nID: $(am__tagged_files)\n\t$(am__define_uniq_tagged_files); mkid -fID $$unique\ntags: tags-am\nTAGS: tags\n\ntags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n\tset x; \\\n\there=`pwd`; \\\n\t$(am__define_uniq_tagged_files); \\\n\tshift; \\\n\tif test -z \"$(ETAGS_ARGS)$$*$$unique\"; then :; else \\\n\t  test -n \"$$unique\" || unique=$$empty_fix; \\\n\t  if test $$# -gt 0; then \\\n\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n\t      \"$$@\" $$unique; \\\n\t  else \\\n\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n\t      $$unique; \\\n\t  fi; \\\n\tfi\nctags: ctags-am\n\nCTAGS: ctags\nctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n\t$(am__define_uniq_tagged_files); \\\n\ttest -z \"$(CTAGS_ARGS)$$unique\" \\\n\t  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \\\n\t     $$unique\n\nGTAGS:\n\there=`$(am__cd) $(top_builddir) && pwd` \\\n\t  && $(am__cd) $(top_srcdir) \\\n\t  && gtags -i $(GTAGS_ARGS) \"$$here\"\ncscope: cscope.files\n\ttest ! -s cscope.files \\\n\t  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)\nclean-cscope:\n\t-rm -f cscope.files\ncscope.files: clean-cscope cscopelist\ncscopelist: cscopelist-am\n\ncscopelist-am: $(am__tagged_files)\n\tlist='$(am__tagged_files)'; \\\n\tcase \"$(srcdir)\" in \\\n\t  [\\\\/]* | ?:[\\\\/]*) sdir=\"$(srcdir)\" ;; \\\n\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n\tesac; \\\n\tfor i in $$list; do \\\n\t  if test -f \"$$i\"; then \\\n\t    echo \"$(subdir)/$$i\"; \\\n\t  else \\\n\t    echo \"$$sdir/$$i\"; \\\n\t  fi; \\\n\tdone >> $(top_builddir)/cscope.files\n\ndistclean-tags:\n\t-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags\n\t-rm -f cscope.out cscope.in.out cscope.po.out cscope.files\n\n# Recover from deleted '.trs' file; this should ensure that\n# \"rm -f foo.log; make foo.trs\" re-run 'foo.test', and re-create\n# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells\n# to avoid problems with \"make -n\".\n.log.trs:\n\trm -f $< $@\n\t$(MAKE) $(AM_MAKEFLAGS) $<\n\n# Leading 'am--fnord' is there to ensure the list of targets does not\n# expand to empty, as could happen e.g. with make check TESTS=''.\nam--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)\nam--force-recheck:\n\t@:\n\n$(TEST_SUITE_LOG): $(TEST_LOGS)\n\t@$(am__set_TESTS_bases); \\\n\tam__f_ok () { test -f \"$$1\" && test -r \"$$1\"; }; \\\n\tredo_bases=`for i in $$bases; do \\\n\t              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \\\n\t            done`; \\\n\tif test -n \"$$redo_bases\"; then \\\n\t  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \\\n\t  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \\\n\t  if $(am__make_dryrun); then :; else \\\n\t    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \\\n\t  fi; \\\n\tfi; \\\n\tif test -n \"$$am__remaking_logs\"; then \\\n\t  echo \"fatal: making $(TEST_SUITE_LOG): possible infinite\" \\\n\t       \"recursion detected\" >&2; \\\n\telif test -n \"$$redo_logs\"; then \\\n\t  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \\\n\tfi; \\\n\tif $(am__make_dryrun); then :; else \\\n\t  st=0;  \\\n\t  errmsg=\"fatal: making $(TEST_SUITE_LOG): failed to create\"; \\\n\t  for i in $$redo_bases; do \\\n\t    test -f $$i.trs && test -r $$i.trs \\\n\t      || { echo \"$$errmsg $$i.trs\" >&2; st=1; }; \\\n\t    test -f $$i.log && test -r $$i.log \\\n\t      || { echo \"$$errmsg $$i.log\" >&2; st=1; }; \\\n\t  done; \\\n\t  test $$st -eq 0 || exit 1; \\\n\tfi\n\t@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \\\n\tws='[ \t]'; \\\n\tresults=`for b in $$bases; do echo $$b.trs; done`; \\\n\ttest -n \"$$results\" || results=/dev/null; \\\n\tall=`  grep \"^$$ws*:test-result:\"           $$results | wc -l`; \\\n\tpass=` grep \"^$$ws*:test-result:$$ws*PASS\"  $$results | wc -l`; \\\n\tfail=` grep \"^$$ws*:test-result:$$ws*FAIL\"  $$results | wc -l`; \\\n\tskip=` grep \"^$$ws*:test-result:$$ws*SKIP\"  $$results | wc -l`; \\\n\txfail=`grep \"^$$ws*:test-result:$$ws*XFAIL\" $$results | wc -l`; \\\n\txpass=`grep \"^$$ws*:test-result:$$ws*XPASS\" $$results | wc -l`; \\\n\terror=`grep \"^$$ws*:test-result:$$ws*ERROR\" $$results | wc -l`; \\\n\tif test `expr $$fail + $$xpass + $$error` -eq 0; then \\\n\t  success=true; \\\n\telse \\\n\t  success=false; \\\n\tfi; \\\n\tbr='==================='; br=$$br$$br$$br$$br; \\\n\tresult_count () \\\n\t{ \\\n\t    if test x\"$$1\" = x\"--maybe-color\"; then \\\n\t      maybe_colorize=yes; \\\n\t    elif test x\"$$1\" = x\"--no-color\"; then \\\n\t      maybe_colorize=no; \\\n\t    else \\\n\t      echo \"$@: invalid 'result_count' usage\" >&2; exit 4; \\\n\t    fi; \\\n\t    shift; \\\n\t    desc=$$1 count=$$2; \\\n\t    if test $$maybe_colorize = yes && test $$count -gt 0; then \\\n\t      color_start=$$3 color_end=$$std; \\\n\t    else \\\n\t      color_start= color_end=; \\\n\t    fi; \\\n\t    echo \"$${color_start}# $$desc $$count$${color_end}\"; \\\n\t}; \\\n\tcreate_testsuite_report () \\\n\t{ \\\n\t  result_count $$1 \"TOTAL:\" $$all   \"$$brg\"; \\\n\t  result_count $$1 \"PASS: \" $$pass  \"$$grn\"; \\\n\t  result_count $$1 \"SKIP: \" $$skip  \"$$blu\"; \\\n\t  result_count $$1 \"XFAIL:\" $$xfail \"$$lgn\"; \\\n\t  result_count $$1 \"FAIL: \" $$fail  \"$$red\"; \\\n\t  result_count $$1 \"XPASS:\" $$xpass \"$$red\"; \\\n\t  result_count $$1 \"ERROR:\" $$error \"$$mgn\"; \\\n\t}; \\\n\t{\t\t\t\t\t\t\t\t\\\n\t  echo \"$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)\" |\t\\\n\t    $(am__rst_title);\t\t\t\t\t\t\\\n\t  create_testsuite_report --no-color;\t\t\t\t\\\n\t  echo;\t\t\t\t\t\t\t\t\\\n\t  echo \".. contents:: :depth: 2\";\t\t\t\t\\\n\t  echo;\t\t\t\t\t\t\t\t\\\n\t  for b in $$bases; do echo $$b; done\t\t\t\t\\\n\t    | $(am__create_global_log);\t\t\t\t\t\\\n\t} >$(TEST_SUITE_LOG).tmp || exit 1;\t\t\t\t\\\n\tmv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);\t\t\t\\\n\tif $$success; then\t\t\t\t\t\t\\\n\t  col=\"$$grn\";\t\t\t\t\t\t\t\\\n\t else\t\t\t\t\t\t\t\t\\\n\t  col=\"$$red\";\t\t\t\t\t\t\t\\\n\t  test x\"$$VERBOSE\" = x || cat $(TEST_SUITE_LOG);\t\t\\\n\tfi;\t\t\t\t\t\t\t\t\\\n\techo \"$${col}$$br$${std}\"; \t\t\t\t\t\\\n\techo \"$${col}Testsuite summary for $(PACKAGE_STRING)$${std}\";\t\\\n\techo \"$${col}$$br$${std}\"; \t\t\t\t\t\\\n\tcreate_testsuite_report --maybe-color;\t\t\t\t\\\n\techo \"$$col$$br$$std\";\t\t\t\t\t\t\\\n\tif $$success; then :; else\t\t\t\t\t\\\n\t  echo \"$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}\";\t\t\\\n\t  if test -n \"$(PACKAGE_BUGREPORT)\"; then\t\t\t\\\n\t    echo \"$${col}Please report to $(PACKAGE_BUGREPORT)$${std}\";\t\\\n\t  fi;\t\t\t\t\t\t\t\t\\\n\t  echo \"$$col$$br$$std\";\t\t\t\t\t\\\n\tfi;\t\t\t\t\t\t\t\t\\\n\t$$success || exit 1\n\ncheck-TESTS: $(check_SCRIPTS)\n\t@list='$(RECHECK_LOGS)';           test -z \"$$list\" || rm -f $$list\n\t@list='$(RECHECK_LOGS:.log=.trs)'; test -z \"$$list\" || rm -f $$list\n\t@test -z \"$(TEST_SUITE_LOG)\" || rm -f $(TEST_SUITE_LOG)\n\t@set +e; $(am__set_TESTS_bases); \\\n\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n\ttrs_list=`for i in $$bases; do echo $$i.trs; done`; \\\n\tlog_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \\\n\t$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS=\"$$log_list\"; \\\n\texit $$?;\nrecheck: all $(check_SCRIPTS)\n\t@test -z \"$(TEST_SUITE_LOG)\" || rm -f $(TEST_SUITE_LOG)\n\t@set +e; $(am__set_TESTS_bases); \\\n\tbases=`for i in $$bases; do echo $$i; done \\\n\t         | $(am__list_recheck_tests)` || exit 1; \\\n\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n\tlog_list=`echo $$log_list`; \\\n\t$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \\\n\t        am__force_recheck=am--force-recheck \\\n\t        TEST_LOGS=\"$$log_list\"; \\\n\texit $$?\nvalidate_c_version_complex_double_eigenvectors_1stage_random_default.sh.log: validate_c_version_complex_double_eigenvectors_1stage_random_default.sh\n\t@p='validate_c_version_complex_double_eigenvectors_1stage_random_default.sh'; \\\n\tb='validate_c_version_complex_double_eigenvectors_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_default.sh.log: validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_default.sh\n\t@p='validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_default.sh'; \\\n\tb='validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_real_double_eigenvectors_1stage_random_default.sh.log: validate_c_version_real_double_eigenvectors_1stage_random_default.sh\n\t@p='validate_c_version_real_double_eigenvectors_1stage_random_default.sh'; \\\n\tb='validate_c_version_real_double_eigenvectors_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_real_double_eigenvectors_2stage_default_kernel_random_default.sh.log: validate_c_version_real_double_eigenvectors_2stage_default_kernel_random_default.sh\n\t@p='validate_c_version_real_double_eigenvectors_2stage_default_kernel_random_default.sh'; \\\n\tb='validate_c_version_real_double_eigenvectors_2stage_default_kernel_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_complex_single_eigenvectors_1stage_random_default.sh.log: validate_c_version_complex_single_eigenvectors_1stage_random_default.sh\n\t@p='validate_c_version_complex_single_eigenvectors_1stage_random_default.sh'; \\\n\tb='validate_c_version_complex_single_eigenvectors_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_default.sh.log: validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_default.sh\n\t@p='validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_default.sh'; \\\n\tb='validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_real_single_eigenvectors_1stage_random_default.sh.log: validate_c_version_real_single_eigenvectors_1stage_random_default.sh\n\t@p='validate_c_version_real_single_eigenvectors_1stage_random_default.sh'; \\\n\tb='validate_c_version_real_single_eigenvectors_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_real_single_eigenvectors_2stage_default_kernel_random_default.sh.log: validate_c_version_real_single_eigenvectors_2stage_default_kernel_random_default.sh\n\t@p='validate_c_version_real_single_eigenvectors_2stage_default_kernel_random_default.sh'; \\\n\tb='validate_c_version_real_single_eigenvectors_2stage_default_kernel_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_complex_double_generalized_1stage_random_default.sh.log: validate_c_version_complex_double_generalized_1stage_random_default.sh\n\t@p='validate_c_version_complex_double_generalized_1stage_random_default.sh'; \\\n\tb='validate_c_version_complex_double_generalized_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_real_double_generalized_1stage_random_default.sh.log: validate_c_version_real_double_generalized_1stage_random_default.sh\n\t@p='validate_c_version_real_double_generalized_1stage_random_default.sh'; \\\n\tb='validate_c_version_real_double_generalized_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_complex_single_generalized_1stage_random_default.sh.log: validate_c_version_complex_single_generalized_1stage_random_default.sh\n\t@p='validate_c_version_complex_single_generalized_1stage_random_default.sh'; \\\n\tb='validate_c_version_complex_single_generalized_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_real_single_generalized_1stage_random_default.sh.log: validate_c_version_real_single_generalized_1stage_random_default.sh\n\t@p='validate_c_version_real_single_generalized_1stage_random_default.sh'; \\\n\tb='validate_c_version_real_single_generalized_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_complex_double_generalized_decomp_1stage_random_default.sh.log: validate_c_version_complex_double_generalized_decomp_1stage_random_default.sh\n\t@p='validate_c_version_complex_double_generalized_decomp_1stage_random_default.sh'; \\\n\tb='validate_c_version_complex_double_generalized_decomp_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_real_double_generalized_decomp_1stage_random_default.sh.log: validate_c_version_real_double_generalized_decomp_1stage_random_default.sh\n\t@p='validate_c_version_real_double_generalized_decomp_1stage_random_default.sh'; \\\n\tb='validate_c_version_real_double_generalized_decomp_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_complex_single_generalized_decomp_1stage_random_default.sh.log: validate_c_version_complex_single_generalized_decomp_1stage_random_default.sh\n\t@p='validate_c_version_complex_single_generalized_decomp_1stage_random_default.sh'; \\\n\tb='validate_c_version_complex_single_generalized_decomp_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_real_single_generalized_decomp_1stage_random_default.sh.log: validate_c_version_real_single_generalized_decomp_1stage_random_default.sh\n\t@p='validate_c_version_real_single_generalized_decomp_1stage_random_default.sh'; \\\n\tb='validate_c_version_real_single_generalized_decomp_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_complex_double_eigenvectors_1stage_gpu_random_default.sh.log: validate_c_version_complex_double_eigenvectors_1stage_gpu_random_default.sh\n\t@p='validate_c_version_complex_double_eigenvectors_1stage_gpu_random_default.sh'; \\\n\tb='validate_c_version_complex_double_eigenvectors_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_default.sh.log: validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_default.sh\n\t@p='validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_default.sh'; \\\n\tb='validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_real_double_eigenvectors_1stage_gpu_random_default.sh.log: validate_c_version_real_double_eigenvectors_1stage_gpu_random_default.sh\n\t@p='validate_c_version_real_double_eigenvectors_1stage_gpu_random_default.sh'; \\\n\tb='validate_c_version_real_double_eigenvectors_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_default.sh.log: validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_default.sh\n\t@p='validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_default.sh'; \\\n\tb='validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_complex_single_eigenvectors_1stage_gpu_random_default.sh.log: validate_c_version_complex_single_eigenvectors_1stage_gpu_random_default.sh\n\t@p='validate_c_version_complex_single_eigenvectors_1stage_gpu_random_default.sh'; \\\n\tb='validate_c_version_complex_single_eigenvectors_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_default.sh.log: validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_default.sh\n\t@p='validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_default.sh'; \\\n\tb='validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_real_single_eigenvectors_1stage_gpu_random_default.sh.log: validate_c_version_real_single_eigenvectors_1stage_gpu_random_default.sh\n\t@p='validate_c_version_real_single_eigenvectors_1stage_gpu_random_default.sh'; \\\n\tb='validate_c_version_real_single_eigenvectors_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_default.sh.log: validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_default.sh\n\t@p='validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_default.sh'; \\\n\tb='validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_complex_double_generalized_1stage_gpu_random_default.sh.log: validate_c_version_complex_double_generalized_1stage_gpu_random_default.sh\n\t@p='validate_c_version_complex_double_generalized_1stage_gpu_random_default.sh'; \\\n\tb='validate_c_version_complex_double_generalized_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_real_double_generalized_1stage_gpu_random_default.sh.log: validate_c_version_real_double_generalized_1stage_gpu_random_default.sh\n\t@p='validate_c_version_real_double_generalized_1stage_gpu_random_default.sh'; \\\n\tb='validate_c_version_real_double_generalized_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_complex_single_generalized_1stage_gpu_random_default.sh.log: validate_c_version_complex_single_generalized_1stage_gpu_random_default.sh\n\t@p='validate_c_version_complex_single_generalized_1stage_gpu_random_default.sh'; \\\n\tb='validate_c_version_complex_single_generalized_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_real_single_generalized_1stage_gpu_random_default.sh.log: validate_c_version_real_single_generalized_1stage_gpu_random_default.sh\n\t@p='validate_c_version_real_single_generalized_1stage_gpu_random_default.sh'; \\\n\tb='validate_c_version_real_single_generalized_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_complex_double_generalized_decomp_1stage_gpu_random_default.sh.log: validate_c_version_complex_double_generalized_decomp_1stage_gpu_random_default.sh\n\t@p='validate_c_version_complex_double_generalized_decomp_1stage_gpu_random_default.sh'; \\\n\tb='validate_c_version_complex_double_generalized_decomp_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_real_double_generalized_decomp_1stage_gpu_random_default.sh.log: validate_c_version_real_double_generalized_decomp_1stage_gpu_random_default.sh\n\t@p='validate_c_version_real_double_generalized_decomp_1stage_gpu_random_default.sh'; \\\n\tb='validate_c_version_real_double_generalized_decomp_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_complex_single_generalized_decomp_1stage_gpu_random_default.sh.log: validate_c_version_complex_single_generalized_decomp_1stage_gpu_random_default.sh\n\t@p='validate_c_version_complex_single_generalized_decomp_1stage_gpu_random_default.sh'; \\\n\tb='validate_c_version_complex_single_generalized_decomp_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_c_version_real_single_generalized_decomp_1stage_gpu_random_default.sh.log: validate_c_version_real_single_generalized_decomp_1stage_gpu_random_default.sh\n\t@p='validate_c_version_real_single_generalized_decomp_1stage_gpu_random_default.sh'; \\\n\tb='validate_c_version_real_single_generalized_decomp_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_1stage_analytic_all_layouts_extended.sh.log: validate_complex_double_eigenvectors_1stage_analytic_all_layouts_extended.sh\n\t@p='validate_complex_double_eigenvectors_1stage_analytic_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_eigenvectors_1stage_analytic_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_1stage_analytic_default.sh.log: validate_complex_double_eigenvectors_1stage_analytic_default.sh\n\t@p='validate_complex_double_eigenvectors_1stage_analytic_default.sh'; \\\n\tb='validate_complex_double_eigenvectors_1stage_analytic_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_extended.sh.log: validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_extended.sh\n\t@p='validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_extended.sh.log: validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_extended.sh\n\t@p='validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_analytic_extended.sh.log: validate_complex_double_eigenvectors_2stage_all_kernels_analytic_extended.sh\n\t@p='validate_complex_double_eigenvectors_2stage_all_kernels_analytic_extended.sh'; \\\n\tb='validate_complex_double_eigenvectors_2stage_all_kernels_analytic_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_analytic_default.sh.log: validate_complex_double_eigenvectors_2stage_default_kernel_analytic_default.sh\n\t@p='validate_complex_double_eigenvectors_2stage_default_kernel_analytic_default.sh'; \\\n\tb='validate_complex_double_eigenvectors_2stage_default_kernel_analytic_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_extended.sh.log: validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_extended.sh\n\t@p='validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_eigenvectors_scalapack_all_analytic_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_scalapack_all_analytic_default.sh.log: validate_complex_double_eigenvectors_scalapack_all_analytic_default.sh\n\t@p='validate_complex_double_eigenvectors_scalapack_all_analytic_default.sh'; \\\n\tb='validate_complex_double_eigenvectors_scalapack_all_analytic_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_extended.sh.log: validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_extended.sh\n\t@p='validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_eigenvectors_scalapack_part_analytic_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_scalapack_part_analytic_default.sh.log: validate_complex_double_eigenvectors_scalapack_part_analytic_default.sh\n\t@p='validate_complex_double_eigenvectors_scalapack_part_analytic_default.sh'; \\\n\tb='validate_complex_double_eigenvectors_scalapack_part_analytic_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_1stage_analytic_all_layouts_extended.sh.log: validate_real_double_eigenvectors_1stage_analytic_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_1stage_analytic_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_1stage_analytic_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_1stage_analytic_default.sh.log: validate_real_double_eigenvectors_1stage_analytic_default.sh\n\t@p='validate_real_double_eigenvectors_1stage_analytic_default.sh'; \\\n\tb='validate_real_double_eigenvectors_1stage_analytic_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_extended.sh.log: validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_all_kernels_analytic_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_extended.sh.log: validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_default_kernel_analytic_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_analytic_extended.sh.log: validate_real_double_eigenvectors_2stage_all_kernels_analytic_extended.sh\n\t@p='validate_real_double_eigenvectors_2stage_all_kernels_analytic_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_all_kernels_analytic_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_analytic_default.sh.log: validate_real_double_eigenvectors_2stage_default_kernel_analytic_default.sh\n\t@p='validate_real_double_eigenvectors_2stage_default_kernel_analytic_default.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_default_kernel_analytic_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_extended.sh.log: validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_scalapack_all_analytic_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_scalapack_all_analytic_default.sh.log: validate_real_double_eigenvectors_scalapack_all_analytic_default.sh\n\t@p='validate_real_double_eigenvectors_scalapack_all_analytic_default.sh'; \\\n\tb='validate_real_double_eigenvectors_scalapack_all_analytic_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_extended.sh.log: validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_scalapack_part_analytic_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_scalapack_part_analytic_default.sh.log: validate_real_double_eigenvectors_scalapack_part_analytic_default.sh\n\t@p='validate_real_double_eigenvectors_scalapack_part_analytic_default.sh'; \\\n\tb='validate_real_double_eigenvectors_scalapack_part_analytic_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_1stage_analytic_all_layouts_extended.sh.log: validate_complex_single_eigenvectors_1stage_analytic_all_layouts_extended.sh\n\t@p='validate_complex_single_eigenvectors_1stage_analytic_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_eigenvectors_1stage_analytic_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_1stage_analytic_default.sh.log: validate_complex_single_eigenvectors_1stage_analytic_default.sh\n\t@p='validate_complex_single_eigenvectors_1stage_analytic_default.sh'; \\\n\tb='validate_complex_single_eigenvectors_1stage_analytic_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_extended.sh.log: validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_extended.sh\n\t@p='validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_extended.sh.log: validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_extended.sh\n\t@p='validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_analytic_extended.sh.log: validate_complex_single_eigenvectors_2stage_all_kernels_analytic_extended.sh\n\t@p='validate_complex_single_eigenvectors_2stage_all_kernels_analytic_extended.sh'; \\\n\tb='validate_complex_single_eigenvectors_2stage_all_kernels_analytic_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_analytic_default.sh.log: validate_complex_single_eigenvectors_2stage_default_kernel_analytic_default.sh\n\t@p='validate_complex_single_eigenvectors_2stage_default_kernel_analytic_default.sh'; \\\n\tb='validate_complex_single_eigenvectors_2stage_default_kernel_analytic_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_1stage_analytic_all_layouts_extended.sh.log: validate_real_single_eigenvectors_1stage_analytic_all_layouts_extended.sh\n\t@p='validate_real_single_eigenvectors_1stage_analytic_all_layouts_extended.sh'; \\\n\tb='validate_real_single_eigenvectors_1stage_analytic_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_1stage_analytic_default.sh.log: validate_real_single_eigenvectors_1stage_analytic_default.sh\n\t@p='validate_real_single_eigenvectors_1stage_analytic_default.sh'; \\\n\tb='validate_real_single_eigenvectors_1stage_analytic_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_extended.sh.log: validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_extended.sh\n\t@p='validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_extended.sh'; \\\n\tb='validate_real_single_eigenvectors_2stage_all_kernels_analytic_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_extended.sh.log: validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_extended.sh\n\t@p='validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_extended.sh'; \\\n\tb='validate_real_single_eigenvectors_2stage_default_kernel_analytic_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_2stage_all_kernels_analytic_extended.sh.log: validate_real_single_eigenvectors_2stage_all_kernels_analytic_extended.sh\n\t@p='validate_real_single_eigenvectors_2stage_all_kernels_analytic_extended.sh'; \\\n\tb='validate_real_single_eigenvectors_2stage_all_kernels_analytic_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_2stage_default_kernel_analytic_default.sh.log: validate_real_single_eigenvectors_2stage_default_kernel_analytic_default.sh\n\t@p='validate_real_single_eigenvectors_2stage_default_kernel_analytic_default.sh'; \\\n\tb='validate_real_single_eigenvectors_2stage_default_kernel_analytic_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvalues_1stage_frank_all_layouts_extended.sh.log: validate_real_double_eigenvalues_1stage_frank_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvalues_1stage_frank_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvalues_1stage_frank_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvalues_1stage_frank_default.sh.log: validate_real_double_eigenvalues_1stage_frank_default.sh\n\t@p='validate_real_double_eigenvalues_1stage_frank_default.sh'; \\\n\tb='validate_real_double_eigenvalues_1stage_frank_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_extended.sh.log: validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvalues_2stage_default_kernel_frank_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvalues_2stage_default_kernel_frank_default.sh.log: validate_real_double_eigenvalues_2stage_default_kernel_frank_default.sh\n\t@p='validate_real_double_eigenvalues_2stage_default_kernel_frank_default.sh'; \\\n\tb='validate_real_double_eigenvalues_2stage_default_kernel_frank_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_1stage_frank_all_layouts_extended.sh.log: validate_real_double_eigenvectors_1stage_frank_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_1stage_frank_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_1stage_frank_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_1stage_frank_default.sh.log: validate_real_double_eigenvectors_1stage_frank_default.sh\n\t@p='validate_real_double_eigenvectors_1stage_frank_default.sh'; \\\n\tb='validate_real_double_eigenvectors_1stage_frank_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_extended.sh.log: validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_all_kernels_frank_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_extended.sh.log: validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_default_kernel_frank_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_frank_extended.sh.log: validate_real_double_eigenvectors_2stage_all_kernels_frank_extended.sh\n\t@p='validate_real_double_eigenvectors_2stage_all_kernels_frank_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_all_kernels_frank_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_frank_default.sh.log: validate_real_double_eigenvectors_2stage_default_kernel_frank_default.sh\n\t@p='validate_real_double_eigenvectors_2stage_default_kernel_frank_default.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_default_kernel_frank_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_hermitian_multiply_1stage_frank_all_layouts_extended.sh.log: validate_real_double_hermitian_multiply_1stage_frank_all_layouts_extended.sh\n\t@p='validate_real_double_hermitian_multiply_1stage_frank_all_layouts_extended.sh'; \\\n\tb='validate_real_double_hermitian_multiply_1stage_frank_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_hermitian_multiply_1stage_frank_default.sh.log: validate_real_double_hermitian_multiply_1stage_frank_default.sh\n\t@p='validate_real_double_hermitian_multiply_1stage_frank_default.sh'; \\\n\tb='validate_real_double_hermitian_multiply_1stage_frank_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_extended.sh.log: validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvalues_1stage_gpu_frank_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvalues_1stage_gpu_frank_default.sh.log: validate_real_double_eigenvalues_1stage_gpu_frank_default.sh\n\t@p='validate_real_double_eigenvalues_1stage_gpu_frank_default.sh'; \\\n\tb='validate_real_double_eigenvalues_1stage_gpu_frank_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_extended.sh.log: validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_default.sh.log: validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_default.sh\n\t@p='validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_default.sh'; \\\n\tb='validate_real_double_eigenvalues_2stage_default_kernel_gpu_frank_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_extended.sh.log: validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_1stage_gpu_frank_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_1stage_gpu_frank_default.sh.log: validate_real_double_eigenvectors_1stage_gpu_frank_default.sh\n\t@p='validate_real_double_eigenvectors_1stage_gpu_frank_default.sh'; \\\n\tb='validate_real_double_eigenvectors_1stage_gpu_frank_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_extended.sh.log: validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_extended.sh.log: validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_extended.sh.log: validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_extended.sh\n\t@p='validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_all_kernels_gpu_frank_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_default.sh.log: validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_default.sh\n\t@p='validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_default.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_default_kernel_gpu_frank_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_extended.sh.log: validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_extended.sh\n\t@p='validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_extended.sh'; \\\n\tb='validate_real_double_hermitian_multiply_1stage_gpu_frank_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_hermitian_multiply_1stage_gpu_frank_default.sh.log: validate_real_double_hermitian_multiply_1stage_gpu_frank_default.sh\n\t@p='validate_real_double_hermitian_multiply_1stage_gpu_frank_default.sh'; \\\n\tb='validate_real_double_hermitian_multiply_1stage_gpu_frank_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_cholesky_1stage_random_all_layouts_extended.sh.log: validate_complex_double_cholesky_1stage_random_all_layouts_extended.sh\n\t@p='validate_complex_double_cholesky_1stage_random_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_cholesky_1stage_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_cholesky_1stage_random_default.sh.log: validate_complex_double_cholesky_1stage_random_default.sh\n\t@p='validate_complex_double_cholesky_1stage_random_default.sh'; \\\n\tb='validate_complex_double_cholesky_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_cholesky_1stage_random_all_layouts_extended.sh.log: validate_real_double_cholesky_1stage_random_all_layouts_extended.sh\n\t@p='validate_real_double_cholesky_1stage_random_all_layouts_extended.sh'; \\\n\tb='validate_real_double_cholesky_1stage_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_cholesky_1stage_random_default.sh.log: validate_real_double_cholesky_1stage_random_default.sh\n\t@p='validate_real_double_cholesky_1stage_random_default.sh'; \\\n\tb='validate_real_double_cholesky_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_cholesky_1stage_random_split_comm_myself_default.sh.log: validate_real_double_cholesky_1stage_random_split_comm_myself_default.sh\n\t@p='validate_real_double_cholesky_1stage_random_split_comm_myself_default.sh'; \\\n\tb='validate_real_double_cholesky_1stage_random_split_comm_myself_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_cholesky_1stage_random_all_layouts_extended.sh.log: validate_complex_single_cholesky_1stage_random_all_layouts_extended.sh\n\t@p='validate_complex_single_cholesky_1stage_random_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_cholesky_1stage_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_cholesky_1stage_random_default.sh.log: validate_complex_single_cholesky_1stage_random_default.sh\n\t@p='validate_complex_single_cholesky_1stage_random_default.sh'; \\\n\tb='validate_complex_single_cholesky_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_cholesky_1stage_random_all_layouts_extended.sh.log: validate_real_single_cholesky_1stage_random_all_layouts_extended.sh\n\t@p='validate_real_single_cholesky_1stage_random_all_layouts_extended.sh'; \\\n\tb='validate_real_single_cholesky_1stage_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_cholesky_1stage_random_default.sh.log: validate_real_single_cholesky_1stage_random_default.sh\n\t@p='validate_real_single_cholesky_1stage_random_default.sh'; \\\n\tb='validate_real_single_cholesky_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_1stage_random_all_layouts_extended.sh.log: validate_complex_double_eigenvectors_1stage_random_all_layouts_extended.sh\n\t@p='validate_complex_double_eigenvectors_1stage_random_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_eigenvectors_1stage_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_1stage_random_default.sh.log: validate_complex_double_eigenvectors_1stage_random_default.sh\n\t@p='validate_complex_double_eigenvectors_1stage_random_default.sh'; \\\n\tb='validate_complex_double_eigenvectors_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_extended.sh.log: validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_extended.sh\n\t@p='validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_eigenvectors_2stage_all_kernels_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_extended.sh.log: validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_extended.sh\n\t@p='validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_eigenvectors_2stage_default_kernel_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_random_extended.sh.log: validate_complex_double_eigenvectors_2stage_all_kernels_random_extended.sh\n\t@p='validate_complex_double_eigenvectors_2stage_all_kernels_random_extended.sh'; \\\n\tb='validate_complex_double_eigenvectors_2stage_all_kernels_random_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_random_default.sh.log: validate_complex_double_eigenvectors_2stage_default_kernel_random_default.sh\n\t@p='validate_complex_double_eigenvectors_2stage_default_kernel_random_default.sh'; \\\n\tb='validate_complex_double_eigenvectors_2stage_default_kernel_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_1stage_random_all_layouts_extended.sh.log: validate_real_double_eigenvectors_1stage_random_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_1stage_random_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_1stage_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_1stage_random_default.sh.log: validate_real_double_eigenvectors_1stage_random_default.sh\n\t@p='validate_real_double_eigenvectors_1stage_random_default.sh'; \\\n\tb='validate_real_double_eigenvectors_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_1stage_random_split_comm_myself_default.sh.log: validate_real_double_eigenvectors_1stage_random_split_comm_myself_default.sh\n\t@p='validate_real_double_eigenvectors_1stage_random_split_comm_myself_default.sh'; \\\n\tb='validate_real_double_eigenvectors_1stage_random_split_comm_myself_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_extended.sh.log: validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_all_kernels_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_extended.sh.log: validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_default_kernel_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_random_extended.sh.log: validate_real_double_eigenvectors_2stage_all_kernels_random_extended.sh\n\t@p='validate_real_double_eigenvectors_2stage_all_kernels_random_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_all_kernels_random_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_random_default.sh.log: validate_real_double_eigenvectors_2stage_default_kernel_random_default.sh\n\t@p='validate_real_double_eigenvectors_2stage_default_kernel_random_default.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_default_kernel_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_default.sh.log: validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_default.sh\n\t@p='validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_default.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_default_kernel_random_split_comm_myself_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_1stage_random_all_layouts_extended.sh.log: validate_complex_single_eigenvectors_1stage_random_all_layouts_extended.sh\n\t@p='validate_complex_single_eigenvectors_1stage_random_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_eigenvectors_1stage_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_1stage_random_default.sh.log: validate_complex_single_eigenvectors_1stage_random_default.sh\n\t@p='validate_complex_single_eigenvectors_1stage_random_default.sh'; \\\n\tb='validate_complex_single_eigenvectors_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_extended.sh.log: validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_extended.sh\n\t@p='validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_eigenvectors_2stage_all_kernels_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_extended.sh.log: validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_extended.sh\n\t@p='validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_eigenvectors_2stage_default_kernel_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_random_extended.sh.log: validate_complex_single_eigenvectors_2stage_all_kernels_random_extended.sh\n\t@p='validate_complex_single_eigenvectors_2stage_all_kernels_random_extended.sh'; \\\n\tb='validate_complex_single_eigenvectors_2stage_all_kernels_random_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_random_default.sh.log: validate_complex_single_eigenvectors_2stage_default_kernel_random_default.sh\n\t@p='validate_complex_single_eigenvectors_2stage_default_kernel_random_default.sh'; \\\n\tb='validate_complex_single_eigenvectors_2stage_default_kernel_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_1stage_random_all_layouts_extended.sh.log: validate_real_single_eigenvectors_1stage_random_all_layouts_extended.sh\n\t@p='validate_real_single_eigenvectors_1stage_random_all_layouts_extended.sh'; \\\n\tb='validate_real_single_eigenvectors_1stage_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_1stage_random_default.sh.log: validate_real_single_eigenvectors_1stage_random_default.sh\n\t@p='validate_real_single_eigenvectors_1stage_random_default.sh'; \\\n\tb='validate_real_single_eigenvectors_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_extended.sh.log: validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_extended.sh\n\t@p='validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_extended.sh'; \\\n\tb='validate_real_single_eigenvectors_2stage_all_kernels_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_extended.sh.log: validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_extended.sh\n\t@p='validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_extended.sh'; \\\n\tb='validate_real_single_eigenvectors_2stage_default_kernel_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_2stage_all_kernels_random_extended.sh.log: validate_real_single_eigenvectors_2stage_all_kernels_random_extended.sh\n\t@p='validate_real_single_eigenvectors_2stage_all_kernels_random_extended.sh'; \\\n\tb='validate_real_single_eigenvectors_2stage_all_kernels_random_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_2stage_default_kernel_random_default.sh.log: validate_real_single_eigenvectors_2stage_default_kernel_random_default.sh\n\t@p='validate_real_single_eigenvectors_2stage_default_kernel_random_default.sh'; \\\n\tb='validate_real_single_eigenvectors_2stage_default_kernel_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_generalized_1stage_random_all_layouts_default.sh.log: validate_complex_double_generalized_1stage_random_all_layouts_default.sh\n\t@p='validate_complex_double_generalized_1stage_random_all_layouts_default.sh'; \\\n\tb='validate_complex_double_generalized_1stage_random_all_layouts_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_generalized_1stage_random_default.sh.log: validate_complex_double_generalized_1stage_random_default.sh\n\t@p='validate_complex_double_generalized_1stage_random_default.sh'; \\\n\tb='validate_complex_double_generalized_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_generalized_1stage_random_all_layouts_default.sh.log: validate_real_double_generalized_1stage_random_all_layouts_default.sh\n\t@p='validate_real_double_generalized_1stage_random_all_layouts_default.sh'; \\\n\tb='validate_real_double_generalized_1stage_random_all_layouts_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_generalized_1stage_random_default.sh.log: validate_real_double_generalized_1stage_random_default.sh\n\t@p='validate_real_double_generalized_1stage_random_default.sh'; \\\n\tb='validate_real_double_generalized_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_generalized_1stage_random_all_layouts_default.sh.log: validate_complex_single_generalized_1stage_random_all_layouts_default.sh\n\t@p='validate_complex_single_generalized_1stage_random_all_layouts_default.sh'; \\\n\tb='validate_complex_single_generalized_1stage_random_all_layouts_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_generalized_1stage_random_default.sh.log: validate_complex_single_generalized_1stage_random_default.sh\n\t@p='validate_complex_single_generalized_1stage_random_default.sh'; \\\n\tb='validate_complex_single_generalized_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_generalized_1stage_random_all_layouts_default.sh.log: validate_real_single_generalized_1stage_random_all_layouts_default.sh\n\t@p='validate_real_single_generalized_1stage_random_all_layouts_default.sh'; \\\n\tb='validate_real_single_generalized_1stage_random_all_layouts_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_generalized_1stage_random_default.sh.log: validate_real_single_generalized_1stage_random_default.sh\n\t@p='validate_real_single_generalized_1stage_random_default.sh'; \\\n\tb='validate_real_single_generalized_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_generalized_decomp_1stage_random_all_layouts_extended.sh.log: validate_complex_double_generalized_decomp_1stage_random_all_layouts_extended.sh\n\t@p='validate_complex_double_generalized_decomp_1stage_random_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_generalized_decomp_1stage_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_generalized_decomp_1stage_random_default.sh.log: validate_complex_double_generalized_decomp_1stage_random_default.sh\n\t@p='validate_complex_double_generalized_decomp_1stage_random_default.sh'; \\\n\tb='validate_complex_double_generalized_decomp_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_generalized_decomp_1stage_random_all_layouts_extended.sh.log: validate_real_double_generalized_decomp_1stage_random_all_layouts_extended.sh\n\t@p='validate_real_double_generalized_decomp_1stage_random_all_layouts_extended.sh'; \\\n\tb='validate_real_double_generalized_decomp_1stage_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_generalized_decomp_1stage_random_default.sh.log: validate_real_double_generalized_decomp_1stage_random_default.sh\n\t@p='validate_real_double_generalized_decomp_1stage_random_default.sh'; \\\n\tb='validate_real_double_generalized_decomp_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_generalized_decomp_1stage_random_all_layouts_extended.sh.log: validate_complex_single_generalized_decomp_1stage_random_all_layouts_extended.sh\n\t@p='validate_complex_single_generalized_decomp_1stage_random_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_generalized_decomp_1stage_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_generalized_decomp_1stage_random_default.sh.log: validate_complex_single_generalized_decomp_1stage_random_default.sh\n\t@p='validate_complex_single_generalized_decomp_1stage_random_default.sh'; \\\n\tb='validate_complex_single_generalized_decomp_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_generalized_decomp_1stage_random_all_layouts_extended.sh.log: validate_real_single_generalized_decomp_1stage_random_all_layouts_extended.sh\n\t@p='validate_real_single_generalized_decomp_1stage_random_all_layouts_extended.sh'; \\\n\tb='validate_real_single_generalized_decomp_1stage_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_generalized_decomp_1stage_random_default.sh.log: validate_real_single_generalized_decomp_1stage_random_default.sh\n\t@p='validate_real_single_generalized_decomp_1stage_random_default.sh'; \\\n\tb='validate_real_single_generalized_decomp_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_hermitian_multiply_1stage_random_all_layouts_extended.sh.log: validate_complex_double_hermitian_multiply_1stage_random_all_layouts_extended.sh\n\t@p='validate_complex_double_hermitian_multiply_1stage_random_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_hermitian_multiply_1stage_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_hermitian_multiply_1stage_random_default.sh.log: validate_complex_double_hermitian_multiply_1stage_random_default.sh\n\t@p='validate_complex_double_hermitian_multiply_1stage_random_default.sh'; \\\n\tb='validate_complex_double_hermitian_multiply_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_hermitian_multiply_1stage_random_all_layouts_extended.sh.log: validate_real_double_hermitian_multiply_1stage_random_all_layouts_extended.sh\n\t@p='validate_real_double_hermitian_multiply_1stage_random_all_layouts_extended.sh'; \\\n\tb='validate_real_double_hermitian_multiply_1stage_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_hermitian_multiply_1stage_random_default.sh.log: validate_real_double_hermitian_multiply_1stage_random_default.sh\n\t@p='validate_real_double_hermitian_multiply_1stage_random_default.sh'; \\\n\tb='validate_real_double_hermitian_multiply_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_hermitian_multiply_1stage_random_all_layouts_extended.sh.log: validate_complex_single_hermitian_multiply_1stage_random_all_layouts_extended.sh\n\t@p='validate_complex_single_hermitian_multiply_1stage_random_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_hermitian_multiply_1stage_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_hermitian_multiply_1stage_random_default.sh.log: validate_complex_single_hermitian_multiply_1stage_random_default.sh\n\t@p='validate_complex_single_hermitian_multiply_1stage_random_default.sh'; \\\n\tb='validate_complex_single_hermitian_multiply_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_hermitian_multiply_1stage_random_all_layouts_extended.sh.log: validate_real_single_hermitian_multiply_1stage_random_all_layouts_extended.sh\n\t@p='validate_real_single_hermitian_multiply_1stage_random_all_layouts_extended.sh'; \\\n\tb='validate_real_single_hermitian_multiply_1stage_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_hermitian_multiply_1stage_random_default.sh.log: validate_real_single_hermitian_multiply_1stage_random_default.sh\n\t@p='validate_real_single_hermitian_multiply_1stage_random_default.sh'; \\\n\tb='validate_real_single_hermitian_multiply_1stage_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_extended.sh.log: validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_all_kernels_qr_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_extended.sh.log: validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_default_kernel_qr_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_qr_random_extended.sh.log: validate_real_double_eigenvectors_2stage_all_kernels_qr_random_extended.sh\n\t@p='validate_real_double_eigenvectors_2stage_all_kernels_qr_random_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_all_kernels_qr_random_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_qr_random_default.sh.log: validate_real_double_eigenvectors_2stage_default_kernel_qr_random_default.sh\n\t@p='validate_real_double_eigenvectors_2stage_default_kernel_qr_random_default.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_default_kernel_qr_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_extended.sh.log: validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_extended.sh\n\t@p='validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_extended.sh'; \\\n\tb='validate_real_single_eigenvectors_2stage_all_kernels_qr_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_extended.sh.log: validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_extended.sh\n\t@p='validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_extended.sh'; \\\n\tb='validate_real_single_eigenvectors_2stage_default_kernel_qr_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_2stage_all_kernels_qr_random_extended.sh.log: validate_real_single_eigenvectors_2stage_all_kernels_qr_random_extended.sh\n\t@p='validate_real_single_eigenvectors_2stage_all_kernels_qr_random_extended.sh'; \\\n\tb='validate_real_single_eigenvectors_2stage_all_kernels_qr_random_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_2stage_default_kernel_qr_random_default.sh.log: validate_real_single_eigenvectors_2stage_default_kernel_qr_random_default.sh\n\t@p='validate_real_single_eigenvectors_2stage_default_kernel_qr_random_default.sh'; \\\n\tb='validate_real_single_eigenvectors_2stage_default_kernel_qr_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_cholesky_1stage_gpu_random_all_layouts_extended.sh.log: validate_complex_double_cholesky_1stage_gpu_random_all_layouts_extended.sh\n\t@p='validate_complex_double_cholesky_1stage_gpu_random_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_cholesky_1stage_gpu_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_cholesky_1stage_gpu_random_default.sh.log: validate_complex_double_cholesky_1stage_gpu_random_default.sh\n\t@p='validate_complex_double_cholesky_1stage_gpu_random_default.sh'; \\\n\tb='validate_complex_double_cholesky_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_cholesky_1stage_gpu_random_all_layouts_extended.sh.log: validate_real_double_cholesky_1stage_gpu_random_all_layouts_extended.sh\n\t@p='validate_real_double_cholesky_1stage_gpu_random_all_layouts_extended.sh'; \\\n\tb='validate_real_double_cholesky_1stage_gpu_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_cholesky_1stage_gpu_random_default.sh.log: validate_real_double_cholesky_1stage_gpu_random_default.sh\n\t@p='validate_real_double_cholesky_1stage_gpu_random_default.sh'; \\\n\tb='validate_real_double_cholesky_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_cholesky_1stage_gpu_random_split_comm_myself_default.sh.log: validate_real_double_cholesky_1stage_gpu_random_split_comm_myself_default.sh\n\t@p='validate_real_double_cholesky_1stage_gpu_random_split_comm_myself_default.sh'; \\\n\tb='validate_real_double_cholesky_1stage_gpu_random_split_comm_myself_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_cholesky_1stage_gpu_random_all_layouts_extended.sh.log: validate_complex_single_cholesky_1stage_gpu_random_all_layouts_extended.sh\n\t@p='validate_complex_single_cholesky_1stage_gpu_random_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_cholesky_1stage_gpu_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_cholesky_1stage_gpu_random_default.sh.log: validate_complex_single_cholesky_1stage_gpu_random_default.sh\n\t@p='validate_complex_single_cholesky_1stage_gpu_random_default.sh'; \\\n\tb='validate_complex_single_cholesky_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_cholesky_1stage_gpu_random_all_layouts_extended.sh.log: validate_real_single_cholesky_1stage_gpu_random_all_layouts_extended.sh\n\t@p='validate_real_single_cholesky_1stage_gpu_random_all_layouts_extended.sh'; \\\n\tb='validate_real_single_cholesky_1stage_gpu_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_cholesky_1stage_gpu_random_default.sh.log: validate_real_single_cholesky_1stage_gpu_random_default.sh\n\t@p='validate_real_single_cholesky_1stage_gpu_random_default.sh'; \\\n\tb='validate_real_single_cholesky_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_extended.sh.log: validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_extended.sh\n\t@p='validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_eigenvectors_1stage_gpu_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_1stage_gpu_random_default.sh.log: validate_complex_double_eigenvectors_1stage_gpu_random_default.sh\n\t@p='validate_complex_double_eigenvectors_1stage_gpu_random_default.sh'; \\\n\tb='validate_complex_double_eigenvectors_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_extended.sh.log: validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_extended.sh\n\t@p='validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_extended.sh.log: validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_extended.sh\n\t@p='validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_extended.sh.log: validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_extended.sh\n\t@p='validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_extended.sh'; \\\n\tb='validate_complex_double_eigenvectors_2stage_all_kernels_gpu_random_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_default.sh.log: validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_default.sh\n\t@p='validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_default.sh'; \\\n\tb='validate_complex_double_eigenvectors_2stage_default_kernel_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_1stage_gpu_random_all_layouts_extended.sh.log: validate_real_double_eigenvectors_1stage_gpu_random_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_1stage_gpu_random_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_1stage_gpu_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_1stage_gpu_random_default.sh.log: validate_real_double_eigenvectors_1stage_gpu_random_default.sh\n\t@p='validate_real_double_eigenvectors_1stage_gpu_random_default.sh'; \\\n\tb='validate_real_double_eigenvectors_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_default.sh.log: validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_default.sh\n\t@p='validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_default.sh'; \\\n\tb='validate_real_double_eigenvectors_1stage_gpu_random_split_comm_myself_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_extended.sh.log: validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_extended.sh.log: validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_random_extended.sh.log: validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_extended.sh\n\t@p='validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_all_kernels_gpu_random_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_random_default.sh.log: validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_default.sh\n\t@p='validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_default.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_default.sh.log: validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_default.sh\n\t@p='validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_default.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_default_kernel_gpu_random_split_comm_myself_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_extended.sh.log: validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_extended.sh\n\t@p='validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_eigenvectors_1stage_gpu_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_1stage_gpu_random_default.sh.log: validate_complex_single_eigenvectors_1stage_gpu_random_default.sh\n\t@p='validate_complex_single_eigenvectors_1stage_gpu_random_default.sh'; \\\n\tb='validate_complex_single_eigenvectors_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_extended.sh.log: validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_extended.sh\n\t@p='validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_extended.sh.log: validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_extended.sh\n\t@p='validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_extended.sh.log: validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_extended.sh\n\t@p='validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_extended.sh'; \\\n\tb='validate_complex_single_eigenvectors_2stage_all_kernels_gpu_random_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_default.sh.log: validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_default.sh\n\t@p='validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_default.sh'; \\\n\tb='validate_complex_single_eigenvectors_2stage_default_kernel_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_1stage_gpu_random_all_layouts_extended.sh.log: validate_real_single_eigenvectors_1stage_gpu_random_all_layouts_extended.sh\n\t@p='validate_real_single_eigenvectors_1stage_gpu_random_all_layouts_extended.sh'; \\\n\tb='validate_real_single_eigenvectors_1stage_gpu_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_1stage_gpu_random_default.sh.log: validate_real_single_eigenvectors_1stage_gpu_random_default.sh\n\t@p='validate_real_single_eigenvectors_1stage_gpu_random_default.sh'; \\\n\tb='validate_real_single_eigenvectors_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_extended.sh.log: validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_extended.sh\n\t@p='validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_extended.sh'; \\\n\tb='validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_extended.sh.log: validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_extended.sh\n\t@p='validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_extended.sh'; \\\n\tb='validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_2stage_all_kernels_gpu_random_extended.sh.log: validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_extended.sh\n\t@p='validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_extended.sh'; \\\n\tb='validate_real_single_eigenvectors_2stage_all_kernels_gpu_random_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_random_default.sh.log: validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_default.sh\n\t@p='validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_default.sh'; \\\n\tb='validate_real_single_eigenvectors_2stage_default_kernel_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_generalized_1stage_gpu_random_all_layouts_default.sh.log: validate_complex_double_generalized_1stage_gpu_random_all_layouts_default.sh\n\t@p='validate_complex_double_generalized_1stage_gpu_random_all_layouts_default.sh'; \\\n\tb='validate_complex_double_generalized_1stage_gpu_random_all_layouts_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_generalized_1stage_gpu_random_default.sh.log: validate_complex_double_generalized_1stage_gpu_random_default.sh\n\t@p='validate_complex_double_generalized_1stage_gpu_random_default.sh'; \\\n\tb='validate_complex_double_generalized_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_generalized_1stage_gpu_random_all_layouts_default.sh.log: validate_real_double_generalized_1stage_gpu_random_all_layouts_default.sh\n\t@p='validate_real_double_generalized_1stage_gpu_random_all_layouts_default.sh'; \\\n\tb='validate_real_double_generalized_1stage_gpu_random_all_layouts_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_generalized_1stage_gpu_random_default.sh.log: validate_real_double_generalized_1stage_gpu_random_default.sh\n\t@p='validate_real_double_generalized_1stage_gpu_random_default.sh'; \\\n\tb='validate_real_double_generalized_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_generalized_1stage_gpu_random_all_layouts_default.sh.log: validate_complex_single_generalized_1stage_gpu_random_all_layouts_default.sh\n\t@p='validate_complex_single_generalized_1stage_gpu_random_all_layouts_default.sh'; \\\n\tb='validate_complex_single_generalized_1stage_gpu_random_all_layouts_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_generalized_1stage_gpu_random_default.sh.log: validate_complex_single_generalized_1stage_gpu_random_default.sh\n\t@p='validate_complex_single_generalized_1stage_gpu_random_default.sh'; \\\n\tb='validate_complex_single_generalized_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_generalized_1stage_gpu_random_all_layouts_default.sh.log: validate_real_single_generalized_1stage_gpu_random_all_layouts_default.sh\n\t@p='validate_real_single_generalized_1stage_gpu_random_all_layouts_default.sh'; \\\n\tb='validate_real_single_generalized_1stage_gpu_random_all_layouts_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_generalized_1stage_gpu_random_default.sh.log: validate_real_single_generalized_1stage_gpu_random_default.sh\n\t@p='validate_real_single_generalized_1stage_gpu_random_default.sh'; \\\n\tb='validate_real_single_generalized_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_extended.sh.log: validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_extended.sh\n\t@p='validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_generalized_decomp_1stage_gpu_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_generalized_decomp_1stage_gpu_random_default.sh.log: validate_complex_double_generalized_decomp_1stage_gpu_random_default.sh\n\t@p='validate_complex_double_generalized_decomp_1stage_gpu_random_default.sh'; \\\n\tb='validate_complex_double_generalized_decomp_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_extended.sh.log: validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_extended.sh\n\t@p='validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_extended.sh'; \\\n\tb='validate_real_double_generalized_decomp_1stage_gpu_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_generalized_decomp_1stage_gpu_random_default.sh.log: validate_real_double_generalized_decomp_1stage_gpu_random_default.sh\n\t@p='validate_real_double_generalized_decomp_1stage_gpu_random_default.sh'; \\\n\tb='validate_real_double_generalized_decomp_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_extended.sh.log: validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_extended.sh\n\t@p='validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_generalized_decomp_1stage_gpu_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_generalized_decomp_1stage_gpu_random_default.sh.log: validate_complex_single_generalized_decomp_1stage_gpu_random_default.sh\n\t@p='validate_complex_single_generalized_decomp_1stage_gpu_random_default.sh'; \\\n\tb='validate_complex_single_generalized_decomp_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_extended.sh.log: validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_extended.sh\n\t@p='validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_extended.sh'; \\\n\tb='validate_real_single_generalized_decomp_1stage_gpu_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_generalized_decomp_1stage_gpu_random_default.sh.log: validate_real_single_generalized_decomp_1stage_gpu_random_default.sh\n\t@p='validate_real_single_generalized_decomp_1stage_gpu_random_default.sh'; \\\n\tb='validate_real_single_generalized_decomp_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_extended.sh.log: validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_extended.sh\n\t@p='validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_hermitian_multiply_1stage_gpu_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_hermitian_multiply_1stage_gpu_random_default.sh.log: validate_complex_double_hermitian_multiply_1stage_gpu_random_default.sh\n\t@p='validate_complex_double_hermitian_multiply_1stage_gpu_random_default.sh'; \\\n\tb='validate_complex_double_hermitian_multiply_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_extended.sh.log: validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_extended.sh\n\t@p='validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_extended.sh'; \\\n\tb='validate_real_double_hermitian_multiply_1stage_gpu_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_hermitian_multiply_1stage_gpu_random_default.sh.log: validate_real_double_hermitian_multiply_1stage_gpu_random_default.sh\n\t@p='validate_real_double_hermitian_multiply_1stage_gpu_random_default.sh'; \\\n\tb='validate_real_double_hermitian_multiply_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_extended.sh.log: validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_extended.sh\n\t@p='validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_hermitian_multiply_1stage_gpu_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_hermitian_multiply_1stage_gpu_random_default.sh.log: validate_complex_single_hermitian_multiply_1stage_gpu_random_default.sh\n\t@p='validate_complex_single_hermitian_multiply_1stage_gpu_random_default.sh'; \\\n\tb='validate_complex_single_hermitian_multiply_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_extended.sh.log: validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_extended.sh\n\t@p='validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_extended.sh'; \\\n\tb='validate_real_single_hermitian_multiply_1stage_gpu_random_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_hermitian_multiply_1stage_gpu_random_default.sh.log: validate_real_single_hermitian_multiply_1stage_gpu_random_default.sh\n\t@p='validate_real_single_hermitian_multiply_1stage_gpu_random_default.sh'; \\\n\tb='validate_real_single_hermitian_multiply_1stage_gpu_random_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_cholesky_1stage_toeplitz_all_layouts_extended.sh.log: validate_complex_double_cholesky_1stage_toeplitz_all_layouts_extended.sh\n\t@p='validate_complex_double_cholesky_1stage_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_cholesky_1stage_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_cholesky_1stage_toeplitz_default.sh.log: validate_complex_double_cholesky_1stage_toeplitz_default.sh\n\t@p='validate_complex_double_cholesky_1stage_toeplitz_default.sh'; \\\n\tb='validate_complex_double_cholesky_1stage_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_cholesky_1stage_toeplitz_all_layouts_extended.sh.log: validate_real_double_cholesky_1stage_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_double_cholesky_1stage_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_double_cholesky_1stage_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_cholesky_1stage_toeplitz_default.sh.log: validate_real_double_cholesky_1stage_toeplitz_default.sh\n\t@p='validate_real_double_cholesky_1stage_toeplitz_default.sh'; \\\n\tb='validate_real_double_cholesky_1stage_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_cholesky_1stage_toeplitz_all_layouts_extended.sh.log: validate_complex_single_cholesky_1stage_toeplitz_all_layouts_extended.sh\n\t@p='validate_complex_single_cholesky_1stage_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_cholesky_1stage_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_cholesky_1stage_toeplitz_default.sh.log: validate_complex_single_cholesky_1stage_toeplitz_default.sh\n\t@p='validate_complex_single_cholesky_1stage_toeplitz_default.sh'; \\\n\tb='validate_complex_single_cholesky_1stage_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_cholesky_1stage_toeplitz_all_layouts_extended.sh.log: validate_real_single_cholesky_1stage_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_single_cholesky_1stage_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_single_cholesky_1stage_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_cholesky_1stage_toeplitz_default.sh.log: validate_real_single_cholesky_1stage_toeplitz_default.sh\n\t@p='validate_real_single_cholesky_1stage_toeplitz_default.sh'; \\\n\tb='validate_real_single_cholesky_1stage_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_extended.sh.log: validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_extended.sh\n\t@p='validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_eigenvalues_1stage_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvalues_1stage_toeplitz_default.sh.log: validate_complex_double_eigenvalues_1stage_toeplitz_default.sh\n\t@p='validate_complex_double_eigenvalues_1stage_toeplitz_default.sh'; \\\n\tb='validate_complex_double_eigenvalues_1stage_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_extended.sh.log: validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_extended.sh\n\t@p='validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_default.sh.log: validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_default.sh\n\t@p='validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_default.sh'; \\\n\tb='validate_complex_double_eigenvalues_2stage_default_kernel_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvalues_1stage_toeplitz_all_layouts_extended.sh.log: validate_real_double_eigenvalues_1stage_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvalues_1stage_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvalues_1stage_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvalues_1stage_toeplitz_default.sh.log: validate_real_double_eigenvalues_1stage_toeplitz_default.sh\n\t@p='validate_real_double_eigenvalues_1stage_toeplitz_default.sh'; \\\n\tb='validate_real_double_eigenvalues_1stage_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_extended.sh.log: validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvalues_2stage_default_kernel_toeplitz_default.sh.log: validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_default.sh\n\t@p='validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_default.sh'; \\\n\tb='validate_real_double_eigenvalues_2stage_default_kernel_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_extended.sh.log: validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_extended.sh\n\t@p='validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_eigenvalues_1stage_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvalues_1stage_toeplitz_default.sh.log: validate_complex_single_eigenvalues_1stage_toeplitz_default.sh\n\t@p='validate_complex_single_eigenvalues_1stage_toeplitz_default.sh'; \\\n\tb='validate_complex_single_eigenvalues_1stage_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_extended.sh.log: validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_extended.sh\n\t@p='validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_default.sh.log: validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_default.sh\n\t@p='validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_default.sh'; \\\n\tb='validate_complex_single_eigenvalues_2stage_default_kernel_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvalues_1stage_toeplitz_all_layouts_extended.sh.log: validate_real_single_eigenvalues_1stage_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_single_eigenvalues_1stage_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_single_eigenvalues_1stage_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvalues_1stage_toeplitz_default.sh.log: validate_real_single_eigenvalues_1stage_toeplitz_default.sh\n\t@p='validate_real_single_eigenvalues_1stage_toeplitz_default.sh'; \\\n\tb='validate_real_single_eigenvalues_1stage_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_extended.sh.log: validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvalues_2stage_default_kernel_toeplitz_default.sh.log: validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_default.sh\n\t@p='validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_default.sh'; \\\n\tb='validate_real_single_eigenvalues_2stage_default_kernel_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_extended.sh.log: validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_extended.sh\n\t@p='validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_eigenvectors_1stage_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_1stage_toeplitz_default.sh.log: validate_complex_double_eigenvectors_1stage_toeplitz_default.sh\n\t@p='validate_complex_double_eigenvectors_1stage_toeplitz_default.sh'; \\\n\tb='validate_complex_double_eigenvectors_1stage_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_extended.sh.log: validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_extended.sh\n\t@p='validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_extended.sh.log: validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_extended.sh\n\t@p='validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_extended.sh.log: validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_extended.sh\n\t@p='validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_extended.sh'; \\\n\tb='validate_complex_double_eigenvectors_2stage_all_kernels_toeplitz_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_default.sh.log: validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_default.sh\n\t@p='validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_default.sh'; \\\n\tb='validate_complex_double_eigenvectors_2stage_default_kernel_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_1stage_toeplitz_all_layouts_extended.sh.log: validate_real_double_eigenvectors_1stage_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_1stage_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_1stage_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_1stage_toeplitz_default.sh.log: validate_real_double_eigenvectors_1stage_toeplitz_default.sh\n\t@p='validate_real_double_eigenvectors_1stage_toeplitz_default.sh'; \\\n\tb='validate_real_double_eigenvectors_1stage_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_extended.sh.log: validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_extended.sh.log: validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_toeplitz_extended.sh.log: validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_extended.sh\n\t@p='validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_all_kernels_toeplitz_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_toeplitz_default.sh.log: validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_default.sh\n\t@p='validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_default.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_default_kernel_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_extended.sh.log: validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_extended.sh\n\t@p='validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_eigenvectors_1stage_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_1stage_toeplitz_default.sh.log: validate_complex_single_eigenvectors_1stage_toeplitz_default.sh\n\t@p='validate_complex_single_eigenvectors_1stage_toeplitz_default.sh'; \\\n\tb='validate_complex_single_eigenvectors_1stage_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_extended.sh.log: validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_extended.sh\n\t@p='validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_extended.sh.log: validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_extended.sh\n\t@p='validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_extended.sh.log: validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_extended.sh\n\t@p='validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_extended.sh'; \\\n\tb='validate_complex_single_eigenvectors_2stage_all_kernels_toeplitz_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_default.sh.log: validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_default.sh\n\t@p='validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_default.sh'; \\\n\tb='validate_complex_single_eigenvectors_2stage_default_kernel_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_1stage_toeplitz_all_layouts_extended.sh.log: validate_real_single_eigenvectors_1stage_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_single_eigenvectors_1stage_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_single_eigenvectors_1stage_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_1stage_toeplitz_default.sh.log: validate_real_single_eigenvectors_1stage_toeplitz_default.sh\n\t@p='validate_real_single_eigenvectors_1stage_toeplitz_default.sh'; \\\n\tb='validate_real_single_eigenvectors_1stage_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_extended.sh.log: validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_extended.sh.log: validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_2stage_all_kernels_toeplitz_extended.sh.log: validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_extended.sh\n\t@p='validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_extended.sh'; \\\n\tb='validate_real_single_eigenvectors_2stage_all_kernels_toeplitz_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_2stage_default_kernel_toeplitz_default.sh.log: validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_default.sh\n\t@p='validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_default.sh'; \\\n\tb='validate_real_single_eigenvectors_2stage_default_kernel_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_extended.sh.log: validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_double_solve_tridiagonal_1stage_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_solve_tridiagonal_1stage_toeplitz_default.sh.log: validate_real_double_solve_tridiagonal_1stage_toeplitz_default.sh\n\t@p='validate_real_double_solve_tridiagonal_1stage_toeplitz_default.sh'; \\\n\tb='validate_real_double_solve_tridiagonal_1stage_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_extended.sh.log: validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_single_solve_tridiagonal_1stage_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_solve_tridiagonal_1stage_toeplitz_default.sh.log: validate_real_single_solve_tridiagonal_1stage_toeplitz_default.sh\n\t@p='validate_real_single_solve_tridiagonal_1stage_toeplitz_default.sh'; \\\n\tb='validate_real_single_solve_tridiagonal_1stage_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_extended.sh.log: validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_cholesky_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_cholesky_1stage_gpu_toeplitz_default.sh.log: validate_complex_double_cholesky_1stage_gpu_toeplitz_default.sh\n\t@p='validate_complex_double_cholesky_1stage_gpu_toeplitz_default.sh'; \\\n\tb='validate_complex_double_cholesky_1stage_gpu_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_extended.sh.log: validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_double_cholesky_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_cholesky_1stage_gpu_toeplitz_default.sh.log: validate_real_double_cholesky_1stage_gpu_toeplitz_default.sh\n\t@p='validate_real_double_cholesky_1stage_gpu_toeplitz_default.sh'; \\\n\tb='validate_real_double_cholesky_1stage_gpu_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_extended.sh.log: validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_cholesky_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_cholesky_1stage_gpu_toeplitz_default.sh.log: validate_complex_single_cholesky_1stage_gpu_toeplitz_default.sh\n\t@p='validate_complex_single_cholesky_1stage_gpu_toeplitz_default.sh'; \\\n\tb='validate_complex_single_cholesky_1stage_gpu_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_extended.sh.log: validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_single_cholesky_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_cholesky_1stage_gpu_toeplitz_default.sh.log: validate_real_single_cholesky_1stage_gpu_toeplitz_default.sh\n\t@p='validate_real_single_cholesky_1stage_gpu_toeplitz_default.sh'; \\\n\tb='validate_real_single_cholesky_1stage_gpu_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_extended.sh.log: validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvalues_1stage_gpu_toeplitz_default.sh.log: validate_complex_double_eigenvalues_1stage_gpu_toeplitz_default.sh\n\t@p='validate_complex_double_eigenvalues_1stage_gpu_toeplitz_default.sh'; \\\n\tb='validate_complex_double_eigenvalues_1stage_gpu_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh.log: validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_default.sh.log: validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_default.sh\n\t@p='validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_default.sh'; \\\n\tb='validate_complex_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_extended.sh.log: validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvalues_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvalues_1stage_gpu_toeplitz_default.sh.log: validate_real_double_eigenvalues_1stage_gpu_toeplitz_default.sh\n\t@p='validate_real_double_eigenvalues_1stage_gpu_toeplitz_default.sh'; \\\n\tb='validate_real_double_eigenvalues_1stage_gpu_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh.log: validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_default.sh.log: validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_default.sh\n\t@p='validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_default.sh'; \\\n\tb='validate_real_double_eigenvalues_2stage_default_kernel_gpu_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_extended.sh.log: validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvalues_1stage_gpu_toeplitz_default.sh.log: validate_complex_single_eigenvalues_1stage_gpu_toeplitz_default.sh\n\t@p='validate_complex_single_eigenvalues_1stage_gpu_toeplitz_default.sh'; \\\n\tb='validate_complex_single_eigenvalues_1stage_gpu_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh.log: validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_default.sh.log: validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_default.sh\n\t@p='validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_default.sh'; \\\n\tb='validate_complex_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_extended.sh.log: validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_single_eigenvalues_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvalues_1stage_gpu_toeplitz_default.sh.log: validate_real_single_eigenvalues_1stage_gpu_toeplitz_default.sh\n\t@p='validate_real_single_eigenvalues_1stage_gpu_toeplitz_default.sh'; \\\n\tb='validate_real_single_eigenvalues_1stage_gpu_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh.log: validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_default.sh.log: validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_default.sh\n\t@p='validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_default.sh'; \\\n\tb='validate_real_single_eigenvalues_2stage_default_kernel_gpu_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_extended.sh.log: validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_1stage_gpu_toeplitz_default.sh.log: validate_complex_double_eigenvectors_1stage_gpu_toeplitz_default.sh\n\t@p='validate_complex_double_eigenvectors_1stage_gpu_toeplitz_default.sh'; \\\n\tb='validate_complex_double_eigenvectors_1stage_gpu_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_extended.sh.log: validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh.log: validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_extended.sh.log: validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_extended.sh\n\t@p='validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_extended.sh'; \\\n\tb='validate_complex_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_default.sh.log: validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_default.sh\n\t@p='validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_default.sh'; \\\n\tb='validate_complex_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_extended.sh.log: validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_1stage_gpu_toeplitz_default.sh.log: validate_real_double_eigenvectors_1stage_gpu_toeplitz_default.sh\n\t@p='validate_real_double_eigenvectors_1stage_gpu_toeplitz_default.sh'; \\\n\tb='validate_real_double_eigenvectors_1stage_gpu_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_extended.sh.log: validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh.log: validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_extended.sh.log: validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_extended.sh\n\t@p='validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_extended.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_all_kernels_gpu_toeplitz_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_default.sh.log: validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_default.sh\n\t@p='validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_default.sh'; \\\n\tb='validate_real_double_eigenvectors_2stage_default_kernel_gpu_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_extended.sh.log: validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_1stage_gpu_toeplitz_default.sh.log: validate_complex_single_eigenvectors_1stage_gpu_toeplitz_default.sh\n\t@p='validate_complex_single_eigenvectors_1stage_gpu_toeplitz_default.sh'; \\\n\tb='validate_complex_single_eigenvectors_1stage_gpu_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_extended.sh.log: validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh.log: validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_extended.sh.log: validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_extended.sh\n\t@p='validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_extended.sh'; \\\n\tb='validate_complex_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_default.sh.log: validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_default.sh\n\t@p='validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_default.sh'; \\\n\tb='validate_complex_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_extended.sh.log: validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_single_eigenvectors_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_1stage_gpu_toeplitz_default.sh.log: validate_real_single_eigenvectors_1stage_gpu_toeplitz_default.sh\n\t@p='validate_real_single_eigenvectors_1stage_gpu_toeplitz_default.sh'; \\\n\tb='validate_real_single_eigenvectors_1stage_gpu_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_extended.sh.log: validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh.log: validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_extended.sh.log: validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_extended.sh\n\t@p='validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_extended.sh'; \\\n\tb='validate_real_single_eigenvectors_2stage_all_kernels_gpu_toeplitz_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_default.sh.log: validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_default.sh\n\t@p='validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_default.sh'; \\\n\tb='validate_real_single_eigenvectors_2stage_default_kernel_gpu_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_extended.sh.log: validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_default.sh.log: validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_default.sh\n\t@p='validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_default.sh'; \\\n\tb='validate_real_double_solve_tridiagonal_1stage_gpu_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_extended.sh.log: validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_extended.sh\n\t@p='validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\tb='validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_all_layouts_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_default.sh.log: validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_default.sh\n\t@p='validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_default.sh'; \\\n\tb='validate_real_single_solve_tridiagonal_1stage_gpu_toeplitz_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_autotune_c_version_complex_double_extended.sh.log: validate_autotune_c_version_complex_double_extended.sh\n\t@p='validate_autotune_c_version_complex_double_extended.sh'; \\\n\tb='validate_autotune_c_version_complex_double_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_autotune_c_version_real_double_extended.sh.log: validate_autotune_c_version_real_double_extended.sh\n\t@p='validate_autotune_c_version_real_double_extended.sh'; \\\n\tb='validate_autotune_c_version_real_double_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_autotune_c_version_complex_single_extended.sh.log: validate_autotune_c_version_complex_single_extended.sh\n\t@p='validate_autotune_c_version_complex_single_extended.sh'; \\\n\tb='validate_autotune_c_version_complex_single_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_autotune_c_version_real_single_extended.sh.log: validate_autotune_c_version_real_single_extended.sh\n\t@p='validate_autotune_c_version_real_single_extended.sh'; \\\n\tb='validate_autotune_c_version_real_single_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_autotune_complex_double_extended.sh.log: validate_autotune_complex_double_extended.sh\n\t@p='validate_autotune_complex_double_extended.sh'; \\\n\tb='validate_autotune_complex_double_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_autotune_real_double_extended.sh.log: validate_autotune_real_double_extended.sh\n\t@p='validate_autotune_real_double_extended.sh'; \\\n\tb='validate_autotune_real_double_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_autotune_complex_single_extended.sh.log: validate_autotune_complex_single_extended.sh\n\t@p='validate_autotune_complex_single_extended.sh'; \\\n\tb='validate_autotune_complex_single_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_autotune_real_single_extended.sh.log: validate_autotune_real_single_extended.sh\n\t@p='validate_autotune_real_single_extended.sh'; \\\n\tb='validate_autotune_real_single_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_multiple_objs_real_double_extended.sh.log: validate_multiple_objs_real_double_extended.sh\n\t@p='validate_multiple_objs_real_double_extended.sh'; \\\n\tb='validate_multiple_objs_real_double_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\ntest_skewsymmetric_real_double_extended.sh.log: test_skewsymmetric_real_double_extended.sh\n\t@p='test_skewsymmetric_real_double_extended.sh'; \\\n\tb='test_skewsymmetric_real_double_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\ntest_skewsymmetric_real_single_extended.sh.log: test_skewsymmetric_real_single_extended.sh\n\t@p='test_skewsymmetric_real_single_extended.sh'; \\\n\tb='test_skewsymmetric_real_single_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_multiple_objs_real_double_c_version_extended.sh.log: validate_multiple_objs_real_double_c_version_extended.sh\n\t@p='validate_multiple_objs_real_double_c_version_extended.sh'; \\\n\tb='validate_multiple_objs_real_double_c_version_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_split_comm_real_double_extended.sh.log: validate_split_comm_real_double_extended.sh\n\t@p='validate_split_comm_real_double_extended.sh'; \\\n\tb='validate_split_comm_real_double_extended.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_double_instance@SUFFIX@_default.sh.log: validate_double_instance@SUFFIX@_default.sh\n\t@p='validate_double_instance@SUFFIX@_default.sh'; \\\n\tb='validate_double_instance@SUFFIX@_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_real_2stage_banded@SUFFIX@_default.sh.log: validate_real_2stage_banded@SUFFIX@_default.sh\n\t@p='validate_real_2stage_banded@SUFFIX@_default.sh'; \\\n\tb='validate_real_2stage_banded@SUFFIX@_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_complex_2stage_banded@SUFFIX@_default.sh.log: validate_complex_2stage_banded@SUFFIX@_default.sh\n\t@p='validate_complex_2stage_banded@SUFFIX@_default.sh'; \\\n\tb='validate_complex_2stage_banded@SUFFIX@_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_single_real_2stage_banded@SUFFIX@_default.sh.log: validate_single_real_2stage_banded@SUFFIX@_default.sh\n\t@p='validate_single_real_2stage_banded@SUFFIX@_default.sh'; \\\n\tb='validate_single_real_2stage_banded@SUFFIX@_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\nvalidate_single_complex_2stage_banded@SUFFIX@_default.sh.log: validate_single_complex_2stage_banded@SUFFIX@_default.sh\n\t@p='validate_single_complex_2stage_banded@SUFFIX@_default.sh'; \\\n\tb='validate_single_complex_2stage_banded@SUFFIX@_default.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\ntest_python.sh.log: test_python.sh\n\t@p='test_python.sh'; \\\n\tb='test_python.sh'; \\\n\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n.test.log:\n\t@p='$<'; \\\n\t$(am__set_b); \\\n\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name \"$$f\" \\\n\t--log-file $$b.log --trs-file $$b.trs \\\n\t$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n@am__EXEEXT_TRUE@.test$(EXEEXT).log:\n@am__EXEEXT_TRUE@\t@p='$<'; \\\n@am__EXEEXT_TRUE@\t$(am__set_b); \\\n@am__EXEEXT_TRUE@\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name \"$$f\" \\\n@am__EXEEXT_TRUE@\t--log-file $$b.log --trs-file $$b.trs \\\n@am__EXEEXT_TRUE@\t$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n@am__EXEEXT_TRUE@\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n\ndistdir: $(BUILT_SOURCES)\n\t$(MAKE) $(AM_MAKEFLAGS) distdir-am\n\ndistdir-am: $(DISTFILES)\n\t$(am__remove_distdir)\n\ttest -d \"$(distdir)\" || mkdir \"$(distdir)\"\n\t@srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*]/\\\\\\\\&/g'`; \\\n\ttopsrcdirstrip=`echo \"$(top_srcdir)\" | sed 's/[].[^$$\\\\*]/\\\\\\\\&/g'`; \\\n\tlist='$(DISTFILES)'; \\\n\t  dist_files=`for file in $$list; do echo $$file; done | \\\n\t  sed -e \"s|^$$srcdirstrip/||;t\" \\\n\t      -e \"s|^$$topsrcdirstrip/|$(top_builddir)/|;t\"`; \\\n\tcase $$dist_files in \\\n\t  */*) $(MKDIR_P) `echo \"$$dist_files\" | \\\n\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n\t\t\t   sort -u` ;; \\\n\tesac; \\\n\tfor file in $$dist_files; do \\\n\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n\t  if test -d $$d/$$file; then \\\n\t    dir=`echo \"/$$file\" | sed -e 's,/[^/]*$$,,'`; \\\n\t    if test -d \"$(distdir)/$$file\"; then \\\n\t      find \"$(distdir)/$$file\" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n\t    fi; \\\n\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n\t      cp -fpR $(srcdir)/$$file \"$(distdir)$$dir\" || exit 1; \\\n\t      find \"$(distdir)/$$file\" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n\t    fi; \\\n\t    cp -fpR $$d/$$file \"$(distdir)$$dir\" || exit 1; \\\n\t  else \\\n\t    test -f \"$(distdir)/$$file\" \\\n\t    || cp -p $$d/$$file \"$(distdir)/$$file\" \\\n\t    || exit 1; \\\n\t  fi; \\\n\tdone\n\t-test -n \"$(am__skip_mode_fix)\" \\\n\t|| find \"$(distdir)\" -type d ! -perm -755 \\\n\t\t-exec chmod u+rwx,go+rx {} \\; -o \\\n\t  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \\; -o \\\n\t  ! -type d ! -perm -400 -exec chmod a+r {} \\; -o \\\n\t  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \\; \\\n\t|| chmod -R a+r \"$(distdir)\"\ndist-gzip: distdir\n\ttardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz\n\t$(am__post_remove_distdir)\n\ndist-bzip2: distdir\n\ttardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2\n\t$(am__post_remove_distdir)\n\ndist-lzip: distdir\n\ttardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz\n\t$(am__post_remove_distdir)\n\ndist-xz: distdir\n\ttardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz\n\t$(am__post_remove_distdir)\n\ndist-tarZ: distdir\n\t@echo WARNING: \"Support for distribution archives compressed with\" \\\n\t\t       \"legacy program 'compress' is deprecated.\" >&2\n\t@echo WARNING: \"It will be removed altogether in Automake 2.0\" >&2\n\ttardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z\n\t$(am__post_remove_distdir)\n\ndist-shar: distdir\n\t@echo WARNING: \"Support for shar distribution archives is\" \\\n\t               \"deprecated.\" >&2\n\t@echo WARNING: \"It will be removed altogether in Automake 2.0\" >&2\n\tshar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz\n\t$(am__post_remove_distdir)\n\ndist-zip: distdir\n\t-rm -f $(distdir).zip\n\tzip -rq $(distdir).zip $(distdir)\n\t$(am__post_remove_distdir)\n\ndist dist-all:\n\t$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'\n\t$(am__post_remove_distdir)\n\n# This target untars the dist file and tries a VPATH configuration.  Then\n# it guarantees that the distribution is self-contained by making another\n# tarfile.\ndistcheck: dist\n\tcase '$(DIST_ARCHIVES)' in \\\n\t*.tar.gz*) \\\n\t  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\\\n\t*.tar.bz2*) \\\n\t  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\\\n\t*.tar.lz*) \\\n\t  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\\\n\t*.tar.xz*) \\\n\t  xz -dc $(distdir).tar.xz | $(am__untar) ;;\\\n\t*.tar.Z*) \\\n\t  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\\\n\t*.shar.gz*) \\\n\t  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\\\n\t*.zip*) \\\n\t  unzip $(distdir).zip ;;\\\n\tesac\n\tchmod -R a-w $(distdir)\n\tchmod u+w $(distdir)\n\tmkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst\n\tchmod a-w $(distdir)\n\ttest -d $(distdir)/_build || exit 0; \\\n\tdc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\\\/]:[\\\\/],/,'` \\\n\t  && dc_destdir=\"$${TMPDIR-/tmp}/am-dc-$$$$/\" \\\n\t  && am__cwd=`pwd` \\\n\t  && $(am__cd) $(distdir)/_build/sub \\\n\t  && ../../configure \\\n\t    $(AM_DISTCHECK_CONFIGURE_FLAGS) \\\n\t    $(DISTCHECK_CONFIGURE_FLAGS) \\\n\t    --srcdir=../.. --prefix=\"$$dc_install_base\" \\\n\t  && $(MAKE) $(AM_MAKEFLAGS) \\\n\t  && $(MAKE) $(AM_MAKEFLAGS) dvi \\\n\t  && $(MAKE) $(AM_MAKEFLAGS) check \\\n\t  && $(MAKE) $(AM_MAKEFLAGS) install \\\n\t  && $(MAKE) $(AM_MAKEFLAGS) installcheck \\\n\t  && $(MAKE) $(AM_MAKEFLAGS) uninstall \\\n\t  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir=\"$$dc_install_base\" \\\n\t        distuninstallcheck \\\n\t  && chmod -R a-w \"$$dc_install_base\" \\\n\t  && ({ \\\n\t       (cd ../.. && umask 077 && mkdir \"$$dc_destdir\") \\\n\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" install \\\n\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" uninstall \\\n\t       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR=\"$$dc_destdir\" \\\n\t            distuninstallcheck_dir=\"$$dc_destdir\" distuninstallcheck; \\\n\t      } || { rm -rf \"$$dc_destdir\"; exit 1; }) \\\n\t  && rm -rf \"$$dc_destdir\" \\\n\t  && $(MAKE) $(AM_MAKEFLAGS) dist \\\n\t  && rm -rf $(DIST_ARCHIVES) \\\n\t  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \\\n\t  && cd \"$$am__cwd\" \\\n\t  || exit 1\n\t$(am__post_remove_distdir)\n\t@(echo \"$(distdir) archives ready for distribution: \"; \\\n\t  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \\\n\t  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'\ndistuninstallcheck:\n\t@test -n '$(distuninstallcheck_dir)' || { \\\n\t  echo 'ERROR: trying to run $@ with an empty' \\\n\t       '$$(distuninstallcheck_dir)' >&2; \\\n\t  exit 1; \\\n\t}; \\\n\t$(am__cd) '$(distuninstallcheck_dir)' || { \\\n\t  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \\\n\t  exit 1; \\\n\t}; \\\n\ttest `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \\\n\t   || { echo \"ERROR: files left after uninstall:\" ; \\\n\t        if test -n \"$(DESTDIR)\"; then \\\n\t          echo \"  (check DESTDIR support)\"; \\\n\t        fi ; \\\n\t        $(distuninstallcheck_listfiles) ; \\\n\t        exit 1; } >&2\ndistcleancheck: distclean\n\t@if test '$(srcdir)' = . ; then \\\n\t  echo \"ERROR: distcleancheck can only run from a VPATH build\" ; \\\n\t  exit 1 ; \\\n\tfi\n\t@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \\\n\t  || { echo \"ERROR: files left in build directory after distclean:\" ; \\\n\t       $(distcleancheck_listfiles) ; \\\n\t       exit 1; } >&2\ncheck-am: all-am\n\t$(MAKE) $(AM_MAKEFLAGS) $(check_SCRIPTS)\n\t$(MAKE) $(AM_MAKEFLAGS) check-TESTS\ncheck: $(BUILT_SOURCES)\n\t$(MAKE) $(AM_MAKEFLAGS) check-am\nall-am: Makefile $(PROGRAMS) $(LTLIBRARIES) $(MANS) $(DATA) $(HEADERS) \\\n\t\tconfig.h\ninstall-binPROGRAMS: install-libLTLIBRARIES\n\ninstalldirs:\n\tfor dir in \"$(DESTDIR)$(bindir)\" \"$(DESTDIR)$(libdir)\" \"$(DESTDIR)$(pyelpadir)\" \"$(DESTDIR)$(pyelpadir)\" \"$(DESTDIR)$(man1dir)\" \"$(DESTDIR)$(man3dir)\" \"$(DESTDIR)$(docdir)\" \"$(DESTDIR)$(pkgconfigdir)\" \"$(DESTDIR)$(elpa_includedir)\" \"$(DESTDIR)$(elpa_includedir)\"; do \\\n\t  test -z \"$$dir\" || $(MKDIR_P) \"$$dir\"; \\\n\tdone\ninstall: $(BUILT_SOURCES)\n\t$(MAKE) $(AM_MAKEFLAGS) install-am\ninstall-exec: install-exec-am\ninstall-data: install-data-am\nuninstall: uninstall-am\n\ninstall-am: all-am\n\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n\ninstallcheck: installcheck-am\ninstall-strip:\n\tif test -z '$(STRIP)'; then \\\n\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n\t      install; \\\n\telse \\\n\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n\t    install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n\t    \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\" install; \\\n\tfi\nmostlyclean-generic:\n\t-test -z \"$(TEST_LOGS)\" || rm -f $(TEST_LOGS)\n\t-test -z \"$(TEST_LOGS:.log=.trs)\" || rm -f $(TEST_LOGS:.log=.trs)\n\t-test -z \"$(TEST_SUITE_LOG)\" || rm -f $(TEST_SUITE_LOG)\n\nclean-generic:\n\t-test -z \"$(CLEANFILES)\" || rm -f $(CLEANFILES)\n\ndistclean-generic:\n\t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n\t-test . = \"$(srcdir)\" || test -z \"$(CONFIG_CLEAN_VPATH_FILES)\" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n\t-rm -f python/pyelpa/$(DEPDIR)/$(am__dirstamp)\n\t-rm -f python/pyelpa/$(am__dirstamp)\n\t-rm -f src/$(DEPDIR)/$(am__dirstamp)\n\t-rm -f src/$(am__dirstamp)\n\t-rm -f src/GPU/$(DEPDIR)/$(am__dirstamp)\n\t-rm -f src/GPU/$(am__dirstamp)\n\t-rm -f src/elpa1/$(DEPDIR)/$(am__dirstamp)\n\t-rm -f src/elpa1/$(am__dirstamp)\n\t-rm -f src/elpa2/$(DEPDIR)/$(am__dirstamp)\n\t-rm -f src/elpa2/$(am__dirstamp)\n\t-rm -f src/elpa2/GPU/$(DEPDIR)/$(am__dirstamp)\n\t-rm -f src/elpa2/GPU/$(am__dirstamp)\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/$(am__dirstamp)\n\t-rm -f src/elpa2/kernels/$(am__dirstamp)\n\t-rm -f src/elpa2/qr/$(DEPDIR)/$(am__dirstamp)\n\t-rm -f src/elpa2/qr/$(am__dirstamp)\n\t-rm -f src/elpa_generalized/$(DEPDIR)/$(am__dirstamp)\n\t-rm -f src/elpa_generalized/$(am__dirstamp)\n\t-rm -f src/ftimings/$(DEPDIR)/$(am__dirstamp)\n\t-rm -f src/ftimings/$(am__dirstamp)\n\t-rm -f src/general/$(DEPDIR)/$(am__dirstamp)\n\t-rm -f src/general/$(am__dirstamp)\n\t-rm -f src/helpers/$(DEPDIR)/$(am__dirstamp)\n\t-rm -f src/helpers/$(am__dirstamp)\n\t-rm -f test/C/$(DEPDIR)/$(am__dirstamp)\n\t-rm -f test/C/$(am__dirstamp)\n\t-rm -f test/Fortran/$(DEPDIR)/$(am__dirstamp)\n\t-rm -f test/Fortran/$(am__dirstamp)\n\t-rm -f test/Fortran/elpa2/$(DEPDIR)/$(am__dirstamp)\n\t-rm -f test/Fortran/elpa2/$(am__dirstamp)\n\t-rm -f test/shared/$(DEPDIR)/$(am__dirstamp)\n\t-rm -f test/shared/$(am__dirstamp)\n\nmaintainer-clean-generic:\n\t@echo \"This command is intended for maintainers to use\"\n\t@echo \"it deletes files that may require special tools to rebuild.\"\n\t-test -z \"$(BUILT_SOURCES)\" || rm -f $(BUILT_SOURCES)\nclean: clean-am\n\nclean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \\\n\tclean-libtool clean-local clean-noinstLTLIBRARIES \\\n\tclean-noinstPROGRAMS clean-pyelpaLTLIBRARIES mostlyclean-am\n\ndistclean: distclean-am\n\t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n\t\t-rm -f python/pyelpa/$(DEPDIR)/wrapper_la-wrapper.Plo\n\t-rm -f src/$(DEPDIR)/elpa_c_interface.Plo\n\t-rm -f src/$(DEPDIR)/elpa_index.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/complex_avx-avx2_1hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/complex_avx-avx2_1hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/complex_avx-avx2_2hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/complex_avx-avx2_2hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/complex_avx512_1hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/complex_avx512_1hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/complex_avx512_2hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/complex_avx512_2hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/complex_sse_1hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/complex_sse_1hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/complex_sse_2hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/complex_sse_2hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_avx-avx2_2hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_avx-avx2_2hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_avx-avx2_4hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_avx-avx2_4hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_avx-avx2_6hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_avx-avx2_6hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_avx512_2hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_avx512_2hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_avx512_4hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_avx512_4hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_avx512_6hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_avx512_6hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_neon_arch64_2hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_neon_arch64_2hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_neon_arch64_4hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_neon_arch64_4hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_neon_arch64_6hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_neon_arch64_6hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_sparc64_2hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_sparc64_4hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_sparc64_6hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_sse_2hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_sse_2hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_sse_4hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_sse_4hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_sse_6hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_sse_6hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_vsx_2hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_vsx_2hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_vsx_4hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_vsx_4hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_vsx_6hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_vsx_6hv_single_precision.Plo\n\t-rm -f src/elpa_generalized/$(DEPDIR)/cannon.Plo\n\t-rm -f src/ftimings/$(DEPDIR)/highwater_mark.Plo\n\t-rm -f src/ftimings/$(DEPDIR)/papi.Plo\n\t-rm -f src/ftimings/$(DEPDIR)/resident_set_size.Plo\n\t-rm -f src/ftimings/$(DEPDIR)/time.Plo\n\t-rm -f src/ftimings/$(DEPDIR)/virtual_memory.Plo\n\t-rm -f src/helpers/$(DEPDIR)/get_cpuid_set.Plo\n\t-rm -f src/helpers/$(DEPDIR)/print_build_config.Plo\n\t-rm -f test/C/$(DEPDIR)/validate_autotune_c_version_complex_double-test_autotune.Po\n\t-rm -f test/C/$(DEPDIR)/validate_autotune_c_version_complex_single-test_autotune.Po\n\t-rm -f test/C/$(DEPDIR)/validate_autotune_c_version_real_double-test_autotune.Po\n\t-rm -f test/C/$(DEPDIR)/validate_autotune_c_version_real_single-test_autotune.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_1stage_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_1stage_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_1stage_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_1stage_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_decomp_1stage_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_decomp_1stage_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_1stage_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_1stage_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_1stage_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_1stage_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_decomp_1stage_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_decomp_1stage_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_1stage_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_1stage_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_2stage_default_kernel_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_double_generalized_1stage_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_double_generalized_1stage_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_double_generalized_decomp_1stage_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_double_generalized_decomp_1stage_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_1stage_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_1stage_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_2stage_default_kernel_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_single_generalized_1stage_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_single_generalized_1stage_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_single_generalized_decomp_1stage_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_single_generalized_decomp_1stage_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_multiple_objs_real_double_c_version-test_multiple_objs.Po\n\t-rm -f test/shared/$(DEPDIR)/test_redir.Plo\n\t-rm -f Makefile\ndistclean-am: clean-am distclean-compile distclean-generic \\\n\tdistclean-hdr distclean-libtool distclean-local distclean-tags\n\ndvi: dvi-am\n\ndvi-am:\n\nhtml: html-am\n\nhtml-am:\n\ninfo: info-am\n\ninfo-am:\n\ninstall-data-am: install-dist_docDATA install-man \\\n\tinstall-nobase_elpa_includeHEADERS \\\n\tinstall-nobase_nodist_elpa_includeHEADERS \\\n\tinstall-pkgconfigDATA install-pyelpaLTLIBRARIES \\\n\tinstall-pyelpaPYTHON\n\ninstall-dvi: install-dvi-am\n\ninstall-dvi-am:\n\ninstall-exec-am: install-binPROGRAMS install-libLTLIBRARIES\n\ninstall-html: install-html-am\n\ninstall-html-am:\n\ninstall-info: install-info-am\n\ninstall-info-am:\n\ninstall-man: install-man1 install-man3\n\ninstall-pdf: install-pdf-am\n\ninstall-pdf-am:\n\ninstall-ps: install-ps-am\n\ninstall-ps-am:\n\ninstallcheck-am:\n\nmaintainer-clean: maintainer-clean-am\n\t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n\t-rm -rf $(top_srcdir)/autom4te.cache\n\t\t-rm -f python/pyelpa/$(DEPDIR)/wrapper_la-wrapper.Plo\n\t-rm -f src/$(DEPDIR)/elpa_c_interface.Plo\n\t-rm -f src/$(DEPDIR)/elpa_index.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/complex_avx-avx2_1hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/complex_avx-avx2_1hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/complex_avx-avx2_2hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/complex_avx-avx2_2hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/complex_avx512_1hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/complex_avx512_1hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/complex_avx512_2hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/complex_avx512_2hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/complex_sse_1hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/complex_sse_1hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/complex_sse_2hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/complex_sse_2hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_avx-avx2_2hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_avx-avx2_2hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_avx-avx2_4hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_avx-avx2_4hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_avx-avx2_6hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_avx-avx2_6hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_avx512_2hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_avx512_2hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_avx512_4hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_avx512_4hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_avx512_6hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_avx512_6hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_neon_arch64_2hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_neon_arch64_2hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_neon_arch64_4hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_neon_arch64_4hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_neon_arch64_6hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_neon_arch64_6hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_sparc64_2hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_sparc64_4hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_sparc64_6hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_sse_2hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_sse_2hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_sse_4hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_sse_4hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_sse_6hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_sse_6hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_vsx_2hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_vsx_2hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_vsx_4hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_vsx_4hv_single_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_vsx_6hv_double_precision.Plo\n\t-rm -f src/elpa2/kernels/$(DEPDIR)/real_vsx_6hv_single_precision.Plo\n\t-rm -f src/elpa_generalized/$(DEPDIR)/cannon.Plo\n\t-rm -f src/ftimings/$(DEPDIR)/highwater_mark.Plo\n\t-rm -f src/ftimings/$(DEPDIR)/papi.Plo\n\t-rm -f src/ftimings/$(DEPDIR)/resident_set_size.Plo\n\t-rm -f src/ftimings/$(DEPDIR)/time.Plo\n\t-rm -f src/ftimings/$(DEPDIR)/virtual_memory.Plo\n\t-rm -f src/helpers/$(DEPDIR)/get_cpuid_set.Plo\n\t-rm -f src/helpers/$(DEPDIR)/print_build_config.Plo\n\t-rm -f test/C/$(DEPDIR)/validate_autotune_c_version_complex_double-test_autotune.Po\n\t-rm -f test/C/$(DEPDIR)/validate_autotune_c_version_complex_single-test_autotune.Po\n\t-rm -f test/C/$(DEPDIR)/validate_autotune_c_version_real_double-test_autotune.Po\n\t-rm -f test/C/$(DEPDIR)/validate_autotune_c_version_real_single-test_autotune.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_1stage_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_1stage_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_double_eigenvectors_2stage_default_kernel_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_1stage_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_1stage_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_decomp_1stage_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_double_generalized_decomp_1stage_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_1stage_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_1stage_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_single_eigenvectors_2stage_default_kernel_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_1stage_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_1stage_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_decomp_1stage_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_complex_single_generalized_decomp_1stage_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_1stage_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_1stage_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_2stage_default_kernel_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_double_eigenvectors_2stage_default_kernel_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_double_generalized_1stage_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_double_generalized_1stage_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_double_generalized_decomp_1stage_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_double_generalized_decomp_1stage_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_1stage_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_1stage_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_2stage_default_kernel_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_single_eigenvectors_2stage_default_kernel_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_single_generalized_1stage_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_single_generalized_1stage_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_single_generalized_decomp_1stage_gpu_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_c_version_real_single_generalized_decomp_1stage_random-test.Po\n\t-rm -f test/C/$(DEPDIR)/validate_multiple_objs_real_double_c_version-test_multiple_objs.Po\n\t-rm -f test/shared/$(DEPDIR)/test_redir.Plo\n\t-rm -f Makefile\nmaintainer-clean-am: distclean-am maintainer-clean-generic\n\nmostlyclean: mostlyclean-am\n\nmostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n\tmostlyclean-libtool\n\npdf: pdf-am\n\npdf-am:\n\nps: ps-am\n\nps-am:\n\nuninstall-am: uninstall-binPROGRAMS uninstall-dist_docDATA \\\n\tuninstall-libLTLIBRARIES uninstall-man \\\n\tuninstall-nobase_elpa_includeHEADERS \\\n\tuninstall-nobase_nodist_elpa_includeHEADERS \\\n\tuninstall-pkgconfigDATA uninstall-pyelpaLTLIBRARIES \\\n\tuninstall-pyelpaPYTHON\n\nuninstall-man: uninstall-man1 uninstall-man3\n\n.MAKE: all check check-am install install-am install-strip\n\n.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles am--refresh check \\\n\tcheck-TESTS check-am clean clean-binPROGRAMS clean-cscope \\\n\tclean-generic clean-libLTLIBRARIES clean-libtool clean-local \\\n\tclean-noinstLTLIBRARIES clean-noinstPROGRAMS \\\n\tclean-pyelpaLTLIBRARIES cscope cscopelist-am ctags ctags-am \\\n\tdist dist-all dist-bzip2 dist-gzip dist-lzip dist-shar \\\n\tdist-tarZ dist-xz dist-zip distcheck distclean \\\n\tdistclean-compile distclean-generic distclean-hdr \\\n\tdistclean-libtool distclean-local distclean-tags \\\n\tdistcleancheck distdir distuninstallcheck dvi dvi-am html \\\n\thtml-am info info-am install install-am install-binPROGRAMS \\\n\tinstall-data install-data-am install-dist_docDATA install-dvi \\\n\tinstall-dvi-am install-exec install-exec-am install-html \\\n\tinstall-html-am install-info install-info-am \\\n\tinstall-libLTLIBRARIES install-man install-man1 install-man3 \\\n\tinstall-nobase_elpa_includeHEADERS \\\n\tinstall-nobase_nodist_elpa_includeHEADERS install-pdf \\\n\tinstall-pdf-am install-pkgconfigDATA install-ps install-ps-am \\\n\tinstall-pyelpaLTLIBRARIES install-pyelpaPYTHON install-strip \\\n\tinstallcheck installcheck-am installdirs maintainer-clean \\\n\tmaintainer-clean-generic mostlyclean mostlyclean-compile \\\n\tmostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \\\n\trecheck tags tags-am uninstall uninstall-am \\\n\tuninstall-binPROGRAMS uninstall-dist_docDATA \\\n\tuninstall-libLTLIBRARIES uninstall-man uninstall-man1 \\\n\tuninstall-man3 uninstall-nobase_elpa_includeHEADERS \\\n\tuninstall-nobase_nodist_elpa_includeHEADERS \\\n\tuninstall-pkgconfigDATA uninstall-pyelpaLTLIBRARIES \\\n\tuninstall-pyelpaPYTHON\n\n.PRECIOUS: Makefile\n\n\n# Cuda files\n.cu.lo:\n\tNVCC=\"$(NVCC)\" libtool --mode=compile --tag=CC $(top_srcdir)/nvcc_wrap $(NVCCFLAGS) $(LDFLAGS) -I$(top_builddir)/ -I$(top_srcdir)/  -c $< -o $@\ndefine extract_interface\n\t@echo \"Extracting interface marked with '$1' from $@...\";\n\t@grep -h \"^ *$1\" $^ | sed 's/^ *$1//;' >> $@ || { rm $@; exit 1; }\nendef\n\nelpa test src:\n\t@mkdir $@\n\ntest/shared: | test\n\t@mkdir $@\nconfig-f90.h: config.h\n\t@echo \"Generating $@...\";\n\t@grep \"^#define\" $^ > $@ || { rm $@; exit 1; }\nelpa/elpa_generated.h: $(top_srcdir)/src/elpa_impl.F90 \\\n                       $(top_srcdir)/src/elpa_impl_math_template.F90 \\\n                       $(top_srcdir)/src/elpa_api.F90 | elpa\n\t@rm -f $@\n\t$(call extract_interface,!c>)\n\t$(call extract_interface,!c_o>)\n\t$(call extract_interface,!c_no>)\ntest/shared/generated.h: $(wildcard $(top_srcdir)/test/shared/*.*90) | test/shared\n\t@rm -f $@\n\t$(call extract_interface,!c>)\nsrc/elpa_generated_fortran_interfaces.h: $(filter-out $(wildcard $(top_srcdir)/src/*generated*), $(wildcard $(top_srcdir)/src/helpers/*.c $(top_srcdir)/src/elpa2/kernels/*.c $(top_srcdir)/src/elpa2/kernels/*.s $(top_srcdir)/src/*.[ch] $(top_srcdir)/src/elpa_generalized/*.[ch])) | src\n\t@rm -f $@\n\t$(call extract_interface,!f>)\n\t$(call extract_interface,#!f>)\nsrc/elpa_generated_public_fortran_interfaces.h: $(filter-out $(wildcard $(top_srcdir)/src/*generated*), $(wildcard $(top_srcdir)/src/*.[ch])) | src\n\t@rm -f $@\n\t$(call extract_interface,!pf>)\nsrc/fortran_constants.F90: $(top_srcdir)/src/fortran_constants.h | src\n\t@$(CPP) $(CPPFLAGS) -I$(top_builddir)/ -I$(top_srcdir)/ -I. $< -o $@_ || { rm -f $@; exit 1; }\n\t@awk '/!ELPA_C_DEFINE/ {gsub(/!ELPA_C_DEFINE/, \"\\n\"); gsub(/NEWLINE/, \"\\n\"); print;}' < $@_ > $@ || { rm -f $@; exit 1; }\n\t@rm $@_\n\ngenerated-headers: $(generated_headers)\n\n# vim: syntax=make\n\npython/pyelpa/wrapper.c: python/pyelpa/wrapper.pyx\n\tcython $< -o $@\n# test scripts\nTASKS ?= 2\n%_extended.sh: %\n\t@echo \"#!/bin/bash\" > $@\n\t@echo 'if [ \"$$CHECK_LEVEL\" = \"extended\" ] ; then $(wrapper) ./$^ $$TEST_FLAGS ; else exit 77; fi' >> $@\n\t@chmod +x $@\n\n%_default.sh: %\n\t@echo \"#!/bin/bash\" > $@\n\t@echo '$(wrapper)' ./$^ '$$TEST_FLAGS' >> $@\n\t@chmod +x $@\n\ntest_python.sh:\n\t@echo '#!/bin/bash' > $@\n# this is kind of hacky... is there a better way to get wrapper.so?\n\t@echo 'export PYTHONPATH=./python-copy:$$PYTHONPATH' >> $@\n\t@echo 'cp -r $(abs_top_srcdir)/python python-copy || exit 1' >> $@\n\t@echo 'chmod u+rwX -R python-copy || exit 1' >> $@\n\t@echo 'cp .libs/wrapper.so python-copy/pyelpa/ || exit 1' >> $@\n# the dlopen flags are needed for MKL to work properly...\n# only in os from python 3.3 on\n\t@echo \"$(wrapper) $(PYTHON) -c 'import sys, os; sys.setdlopenflags(os.RTLD_NOW | os.RTLD_GLOBAL); import pytest; sys.exit(pytest.main([\\\"./python-copy\\\", \\\"-p\\\", \\\"no:cacheprovider\\\"]))'\" >> $@\n\t@echo 'exit_code=$$?' >> $@\n\t@echo 'rm -rf python-copy || exit 1' >> $@\n\t@echo 'exit $$exit_code' >> $@\n\t@chmod +x $@\n\n@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@doxygen-ps: @DX_DOCDIR@/@PACKAGE@.ps\n\n@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@@DX_DOCDIR@/@PACKAGE@.ps: @DX_DOCDIR@/@PACKAGE@.tag\n@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@\tcd @DX_DOCDIR@/latex; \\\n@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@\trm -f *.aux *.toc *.idx *.ind *.ilg *.log *.out; \\\n@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@\t$(DX_LATEX) refman.tex; \\\n@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@\t$(MAKEINDEX_PATH) refman.idx; \\\n@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@\t$(DX_LATEX) refman.tex; \\\n@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@\tcountdown=5; \\\n@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@\twhile $(DX_EGREP) 'Rerun (LaTeX|to get cross-references right)' \\\n@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@\t                  refman.log > /dev/null 2>&1 \\\n@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@\t   && test $$countdown -gt 0; do \\\n@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@\t    $(DX_LATEX) refman.tex; \\\n@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@\t    countdown=`expr $$countdown - 1`; \\\n@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@\tdone; \\\n@DX_COND_doc_TRUE@@DX_COND_ps_TRUE@\t$(DX_DVIPS) -o ../@PACKAGE@.ps refman.dvi\n\n@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@doxygen-pdf: @DX_DOCDIR@/@PACKAGE@.pdf\n\n@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@@DX_DOCDIR@/@PACKAGE@.pdf: @DX_DOCDIR@/@PACKAGE@.tag\n@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@\tcd @DX_DOCDIR@/latex; \\\n@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@\trm -f *.aux *.toc *.idx *.ind *.ilg *.log *.out; \\\n@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@\t$(DX_PDFLATEX) refman.tex; \\\n@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@\t$(DX_MAKEINDEX) refman.idx; \\\n@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@\t$(DX_PDFLATEX) refman.tex; \\\n@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@\tcountdown=5; \\\n@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@\twhile $(DX_EGREP) 'Rerun (LaTeX|to get cross-references right)' \\\n@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@\t                  refman.log > /dev/null 2>&1 \\\n@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@\t   && test $$countdown -gt 0; do \\\n@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@\t    $(DX_PDFLATEX) refman.tex; \\\n@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@\t    countdown=`expr $$countdown - 1`; \\\n@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@\tdone; \\\n@DX_COND_doc_TRUE@@DX_COND_pdf_TRUE@\tmv refman.pdf ../@PACKAGE@.pdf\n\n@DX_COND_doc_TRUE@.PHONY: doxygen-run doxygen-doc $(DX_PS_GOAL) $(DX_PDF_GOAL)\n\n@DX_COND_doc_TRUE@.INTERMEDIATE: doxygen-run $(DX_PS_GOAL) $(DX_PDF_GOAL)\n\n@DX_COND_doc_TRUE@doxygen-run: @DX_DOCDIR@/@PACKAGE@.tag\n\n@DX_COND_doc_TRUE@doxygen-doc: doxygen-run $(DX_PS_GOAL) $(DX_PDF_GOAL)\n\n@DX_COND_doc_TRUE@@DX_DOCDIR@/@PACKAGE@.tag: $(DX_CONFIG) $(pkginclude_HEADERS)\n@DX_COND_doc_TRUE@\trm -rf @DX_DOCDIR@\n@DX_COND_doc_TRUE@\t$(DX_ENV) $(DX_DOXYGEN) $(DX_CONFIG)\n\nclean-local:\n\t-rm -rf modules/* private_modules/* test_modules/* .fortran_dependencies/*\n\t-rm -rf validate_*.sh\n\t-rm -rf real_2stage*.sh\n\t-rm -rf complex_2stage*.sh\n\t-rm -rf single_complex_2stage*.sh\n\t-rm -rf single_real_2stage*.sh\n\t-rm -rf double_instance_onenode*.sh\n\t-rm -rf $(generated_headers)\n\ndistclean-local:\n\t-rm -rf ./m4\n\t-rm -rf ./src\n\t-rm -rf ./test\n\t-rm -rf ./modules\n\t-rm -rf .fortran_dependencies\n\t-rm config-f90.h\n\t-rm -rf ./test/.deps\n\t-rm -rf elpa/elpa_generated_c_api.h\nlibtool: $(LIBTOOL_DEPS)\n\t$(SHELL) ./config.status libtool\n\n@FORTRAN_MODULE_DEPS@\n\n# Fortran module dependencies only work within each target,\n# specify that the test programs need a finished library before\n# one can compile them\n\n# $1  Object name\ndefine require_elpa_lib\n$1: libelpa@SUFFIX@.la\n\nendef\n$(foreach p,$(bin_PROGRAMS) $(noinst_PROGRAMS),$(foreach o,$($p_OBJECTS),$(eval $(call require_elpa_lib,$o))))\n\n# Tell versions [3.59,3.63) of GNU make to not export all variables.\n# Otherwise a system limit (for SysV at least) may be exceeded.\n.NOEXPORT:\n",
        "/tmp/vanessa/spack-stage/spack-stage-elpa-2019.11.001-qjdkuz3xp4qrmu3u6sou4k4e2c7p3m4b/spack-src/m4/libtool.m4": "# libtool.m4 - Configure libtool for the host system. -*-Autoconf-*-\n#\n#   Copyright (C) 1996-2001, 2003-2015 Free Software Foundation, Inc.\n#   Written by Gordon Matzigkeit, 1996\n#\n# This file is free software; the Free Software Foundation gives\n# unlimited permission to copy and/or distribute it, with or without\n# modifications, as long as this notice is preserved.\n\nm4_define([_LT_COPYING], [dnl\n# Copyright (C) 2014 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# GNU Libtool is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of of the License, or\n# (at your option) any later version.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program or library that is built\n# using GNU Libtool, you may include this file under the  same\n# distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n])\n\n# serial 58 LT_INIT\n\n\n# LT_PREREQ(VERSION)\n# ------------------\n# Complain and exit if this libtool version is less that VERSION.\nm4_defun([LT_PREREQ],\n[m4_if(m4_version_compare(m4_defn([LT_PACKAGE_VERSION]), [$1]), -1,\n       [m4_default([$3],\n\t\t   [m4_fatal([Libtool version $1 or higher is required],\n\t\t             63)])],\n       [$2])])\n\n\n# _LT_CHECK_BUILDDIR\n# ------------------\n# Complain if the absolute build directory name contains unusual characters\nm4_defun([_LT_CHECK_BUILDDIR],\n[case `pwd` in\n  *\\ * | *\\\t*)\n    AC_MSG_WARN([Libtool does not cope well with whitespace in `pwd`]) ;;\nesac\n])\n\n\n# LT_INIT([OPTIONS])\n# ------------------\nAC_DEFUN([LT_INIT],\n[AC_PREREQ([2.62])dnl We use AC_PATH_PROGS_FEATURE_CHECK\nAC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl\nAC_BEFORE([$0], [LT_LANG])dnl\nAC_BEFORE([$0], [LT_OUTPUT])dnl\nAC_BEFORE([$0], [LTDL_INIT])dnl\nm4_require([_LT_CHECK_BUILDDIR])dnl\n\ndnl Autoconf doesn't catch unexpanded LT_ macros by default:\nm4_pattern_forbid([^_?LT_[A-Z_]+$])dnl\nm4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])dnl\ndnl aclocal doesn't pull ltoptions.m4, ltsugar.m4, or ltversion.m4\ndnl unless we require an AC_DEFUNed macro:\nAC_REQUIRE([LTOPTIONS_VERSION])dnl\nAC_REQUIRE([LTSUGAR_VERSION])dnl\nAC_REQUIRE([LTVERSION_VERSION])dnl\nAC_REQUIRE([LTOBSOLETE_VERSION])dnl\nm4_require([_LT_PROG_LTMAIN])dnl\n\n_LT_SHELL_INIT([SHELL=${CONFIG_SHELL-/bin/sh}])\n\ndnl Parse OPTIONS\n_LT_SET_OPTIONS([$0], [$1])\n\n# This can be used to rebuild libtool when needed\nLIBTOOL_DEPS=$ltmain\n\n# Always use our own libtool.\nLIBTOOL='$(SHELL) $(top_builddir)/libtool'\nAC_SUBST(LIBTOOL)dnl\n\n_LT_SETUP\n\n# Only expand once:\nm4_define([LT_INIT])\n])# LT_INIT\n\n# Old names:\nAU_ALIAS([AC_PROG_LIBTOOL], [LT_INIT])\nAU_ALIAS([AM_PROG_LIBTOOL], [LT_INIT])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_PROG_LIBTOOL], [])\ndnl AC_DEFUN([AM_PROG_LIBTOOL], [])\n\n\n# _LT_PREPARE_CC_BASENAME\n# -----------------------\nm4_defun([_LT_PREPARE_CC_BASENAME], [\n# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.\nfunc_cc_basename ()\n{\n    for cc_temp in @S|@*\"\"; do\n      case $cc_temp in\n        compile | *[[\\\\/]]compile | ccache | *[[\\\\/]]ccache ) ;;\n        distcc | *[[\\\\/]]distcc | purify | *[[\\\\/]]purify ) ;;\n        \\-*) ;;\n        *) break;;\n      esac\n    done\n    func_cc_basename_result=`$ECHO \"$cc_temp\" | $SED \"s%.*/%%; s%^$host_alias-%%\"`\n}\n])# _LT_PREPARE_CC_BASENAME\n\n\n# _LT_CC_BASENAME(CC)\n# -------------------\n# It would be clearer to call AC_REQUIREs from _LT_PREPARE_CC_BASENAME,\n# but that macro is also expanded into generated libtool script, which\n# arranges for $SED and $ECHO to be set by different means.\nm4_defun([_LT_CC_BASENAME],\n[m4_require([_LT_PREPARE_CC_BASENAME])dnl\nAC_REQUIRE([_LT_DECL_SED])dnl\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])dnl\nfunc_cc_basename $1\ncc_basename=$func_cc_basename_result\n])\n\n\n# _LT_FILEUTILS_DEFAULTS\n# ----------------------\n# It is okay to use these file commands and assume they have been set\n# sensibly after 'm4_require([_LT_FILEUTILS_DEFAULTS])'.\nm4_defun([_LT_FILEUTILS_DEFAULTS],\n[: ${CP=\"cp -f\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n])# _LT_FILEUTILS_DEFAULTS\n\n\n# _LT_SETUP\n# ---------\nm4_defun([_LT_SETUP],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_REQUIRE([_LT_PREPARE_SED_QUOTE_VARS])dnl\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])dnl\n\n_LT_DECL([], [PATH_SEPARATOR], [1], [The PATH separator for the build system])dnl\ndnl\n_LT_DECL([], [host_alias], [0], [The host system])dnl\n_LT_DECL([], [host], [0])dnl\n_LT_DECL([], [host_os], [0])dnl\ndnl\n_LT_DECL([], [build_alias], [0], [The build system])dnl\n_LT_DECL([], [build], [0])dnl\n_LT_DECL([], [build_os], [0])dnl\ndnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([LT_PATH_LD])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\ndnl\nAC_REQUIRE([AC_PROG_LN_S])dnl\ntest -z \"$LN_S\" && LN_S=\"ln -s\"\n_LT_DECL([], [LN_S], [1], [Whether we need soft or hard links])dnl\ndnl\nAC_REQUIRE([LT_CMD_MAX_LEN])dnl\n_LT_DECL([objext], [ac_objext], [0], [Object file suffix (normally \"o\")])dnl\n_LT_DECL([], [exeext], [0], [Executable file suffix (normally \"\")])dnl\ndnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_CHECK_SHELL_FEATURES])dnl\nm4_require([_LT_PATH_CONVERSION_FUNCTIONS])dnl\nm4_require([_LT_CMD_RELOAD])dnl\nm4_require([_LT_CHECK_MAGIC_METHOD])dnl\nm4_require([_LT_CHECK_SHAREDLIB_FROM_LINKLIB])dnl\nm4_require([_LT_CMD_OLD_ARCHIVE])dnl\nm4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nm4_require([_LT_WITH_SYSROOT])dnl\nm4_require([_LT_CMD_TRUNCATE])dnl\n\n_LT_CONFIG_LIBTOOL_INIT([\n# See if we are running on zsh, and set the options that allow our\n# commands through without removal of \\ escapes INIT.\nif test -n \"\\${ZSH_VERSION+set}\"; then\n   setopt NO_GLOB_SUBST\nfi\n])\nif test -n \"${ZSH_VERSION+set}\"; then\n   setopt NO_GLOB_SUBST\nfi\n\n_LT_CHECK_OBJDIR\n\nm4_require([_LT_TAG_COMPILER])dnl\n\ncase $host_os in\naix3*)\n  # AIX sometimes has problems with the GCC collect2 program.  For some\n  # reason, if we set the COLLECT_NAMES environment variable, the problems\n  # vanish in a puff of smoke.\n  if test set != \"${COLLECT_NAMES+set}\"; then\n    COLLECT_NAMES=\n    export COLLECT_NAMES\n  fi\n  ;;\nesac\n\n# Global variables:\nofile=libtool\ncan_build_shared=yes\n\n# All known linkers require a '.a' archive for static linking (except MSVC,\n# which needs '.lib').\nlibext=a\n\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n\nold_CC=$CC\nold_CFLAGS=$CFLAGS\n\n# Set sane defaults for various variables\ntest -z \"$CC\" && CC=cc\ntest -z \"$LTCC\" && LTCC=$CC\ntest -z \"$LTCFLAGS\" && LTCFLAGS=$CFLAGS\ntest -z \"$LD\" && LD=ld\ntest -z \"$ac_objext\" && ac_objext=o\n\n_LT_CC_BASENAME([$compiler])\n\n# Only perform the check for file, if the check method requires it\ntest -z \"$MAGIC_CMD\" && MAGIC_CMD=file\ncase $deplibs_check_method in\nfile_magic*)\n  if test \"$file_magic_cmd\" = '$MAGIC_CMD'; then\n    _LT_PATH_MAGIC\n  fi\n  ;;\nesac\n\n# Use C for the default configuration in the libtool script\nLT_SUPPORTED_TAG([CC])\n_LT_LANG_C_CONFIG\n_LT_LANG_DEFAULT_CONFIG\n_LT_CONFIG_COMMANDS\n])# _LT_SETUP\n\n\n# _LT_PREPARE_SED_QUOTE_VARS\n# --------------------------\n# Define a few sed substitution that help us do robust quoting.\nm4_defun([_LT_PREPARE_SED_QUOTE_VARS],\n[# Backslashify metacharacters that are still active within\n# double-quoted strings.\nsed_quote_subst='s/\\([[\"`$\\\\]]\\)/\\\\\\1/g'\n\n# Same as above, but do not quote variable references.\ndouble_quote_subst='s/\\([[\"`\\\\]]\\)/\\\\\\1/g'\n\n# Sed substitution to delay expansion of an escaped shell variable in a\n# double_quote_subst'ed string.\ndelay_variable_subst='s/\\\\\\\\\\\\\\\\\\\\\\$/\\\\\\\\\\\\$/g'\n\n# Sed substitution to delay expansion of an escaped single quote.\ndelay_single_quote_subst='s/'\\''/'\\'\\\\\\\\\\\\\\'\\''/g'\n\n# Sed substitution to avoid accidental globbing in evaled expressions\nno_glob_subst='s/\\*/\\\\\\*/g'\n])\n\n# _LT_PROG_LTMAIN\n# ---------------\n# Note that this code is called both from 'configure', and 'config.status'\n# now that we use AC_CONFIG_COMMANDS to generate libtool.  Notably,\n# 'config.status' has no value for ac_aux_dir unless we are using Automake,\n# so we pass a copy along to make sure it has a sensible value anyway.\nm4_defun([_LT_PROG_LTMAIN],\n[m4_ifdef([AC_REQUIRE_AUX_FILE], [AC_REQUIRE_AUX_FILE([ltmain.sh])])dnl\n_LT_CONFIG_LIBTOOL_INIT([ac_aux_dir='$ac_aux_dir'])\nltmain=$ac_aux_dir/ltmain.sh\n])# _LT_PROG_LTMAIN\n\n\n## ------------------------------------- ##\n## Accumulate code for creating libtool. ##\n## ------------------------------------- ##\n\n# So that we can recreate a full libtool script including additional\n# tags, we accumulate the chunks of code to send to AC_CONFIG_COMMANDS\n# in macros and then make a single call at the end using the 'libtool'\n# label.\n\n\n# _LT_CONFIG_LIBTOOL_INIT([INIT-COMMANDS])\n# ----------------------------------------\n# Register INIT-COMMANDS to be passed to AC_CONFIG_COMMANDS later.\nm4_define([_LT_CONFIG_LIBTOOL_INIT],\n[m4_ifval([$1],\n          [m4_append([_LT_OUTPUT_LIBTOOL_INIT],\n                     [$1\n])])])\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_INIT])\n\n\n# _LT_CONFIG_LIBTOOL([COMMANDS])\n# ------------------------------\n# Register COMMANDS to be passed to AC_CONFIG_COMMANDS later.\nm4_define([_LT_CONFIG_LIBTOOL],\n[m4_ifval([$1],\n          [m4_append([_LT_OUTPUT_LIBTOOL_COMMANDS],\n                     [$1\n])])])\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_COMMANDS])\n\n\n# _LT_CONFIG_SAVE_COMMANDS([COMMANDS], [INIT_COMMANDS])\n# -----------------------------------------------------\nm4_defun([_LT_CONFIG_SAVE_COMMANDS],\n[_LT_CONFIG_LIBTOOL([$1])\n_LT_CONFIG_LIBTOOL_INIT([$2])\n])\n\n\n# _LT_FORMAT_COMMENT([COMMENT])\n# -----------------------------\n# Add leading comment marks to the start of each line, and a trailing\n# full-stop to the whole comment if one is not present already.\nm4_define([_LT_FORMAT_COMMENT],\n[m4_ifval([$1], [\nm4_bpatsubst([m4_bpatsubst([$1], [^ *], [# ])],\n              [['`$\\]], [\\\\\\&])]m4_bmatch([$1], [[!?.]$], [], [.])\n)])\n\n\n\n## ------------------------ ##\n## FIXME: Eliminate VARNAME ##\n## ------------------------ ##\n\n\n# _LT_DECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION], [IS-TAGGED?])\n# -------------------------------------------------------------------\n# CONFIGNAME is the name given to the value in the libtool script.\n# VARNAME is the (base) name used in the configure script.\n# VALUE may be 0, 1 or 2 for a computed quote escaped value based on\n# VARNAME.  Any other value will be used directly.\nm4_define([_LT_DECL],\n[lt_if_append_uniq([lt_decl_varnames], [$2], [, ],\n    [lt_dict_add_subkey([lt_decl_dict], [$2], [libtool_name],\n\t[m4_ifval([$1], [$1], [$2])])\n    lt_dict_add_subkey([lt_decl_dict], [$2], [value], [$3])\n    m4_ifval([$4],\n\t[lt_dict_add_subkey([lt_decl_dict], [$2], [description], [$4])])\n    lt_dict_add_subkey([lt_decl_dict], [$2],\n\t[tagged?], [m4_ifval([$5], [yes], [no])])])\n])\n\n\n# _LT_TAGDECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION])\n# --------------------------------------------------------\nm4_define([_LT_TAGDECL], [_LT_DECL([$1], [$2], [$3], [$4], [yes])])\n\n\n# lt_decl_tag_varnames([SEPARATOR], [VARNAME1...])\n# ------------------------------------------------\nm4_define([lt_decl_tag_varnames],\n[_lt_decl_filter([tagged?], [yes], $@)])\n\n\n# _lt_decl_filter(SUBKEY, VALUE, [SEPARATOR], [VARNAME1..])\n# ---------------------------------------------------------\nm4_define([_lt_decl_filter],\n[m4_case([$#],\n  [0], [m4_fatal([$0: too few arguments: $#])],\n  [1], [m4_fatal([$0: too few arguments: $#: $1])],\n  [2], [lt_dict_filter([lt_decl_dict], [$1], [$2], [], lt_decl_varnames)],\n  [3], [lt_dict_filter([lt_decl_dict], [$1], [$2], [$3], lt_decl_varnames)],\n  [lt_dict_filter([lt_decl_dict], $@)])[]dnl\n])\n\n\n# lt_decl_quote_varnames([SEPARATOR], [VARNAME1...])\n# --------------------------------------------------\nm4_define([lt_decl_quote_varnames],\n[_lt_decl_filter([value], [1], $@)])\n\n\n# lt_decl_dquote_varnames([SEPARATOR], [VARNAME1...])\n# ---------------------------------------------------\nm4_define([lt_decl_dquote_varnames],\n[_lt_decl_filter([value], [2], $@)])\n\n\n# lt_decl_varnames_tagged([SEPARATOR], [VARNAME1...])\n# ---------------------------------------------------\nm4_define([lt_decl_varnames_tagged],\n[m4_assert([$# <= 2])dnl\n_$0(m4_quote(m4_default([$1], [[, ]])),\n    m4_ifval([$2], [[$2]], [m4_dquote(lt_decl_tag_varnames)]),\n    m4_split(m4_normalize(m4_quote(_LT_TAGS)), [ ]))])\nm4_define([_lt_decl_varnames_tagged],\n[m4_ifval([$3], [lt_combine([$1], [$2], [_], $3)])])\n\n\n# lt_decl_all_varnames([SEPARATOR], [VARNAME1...])\n# ------------------------------------------------\nm4_define([lt_decl_all_varnames],\n[_$0(m4_quote(m4_default([$1], [[, ]])),\n     m4_if([$2], [],\n\t   m4_quote(lt_decl_varnames),\n\tm4_quote(m4_shift($@))))[]dnl\n])\nm4_define([_lt_decl_all_varnames],\n[lt_join($@, lt_decl_varnames_tagged([$1],\n\t\t\tlt_decl_tag_varnames([[, ]], m4_shift($@))))dnl\n])\n\n\n# _LT_CONFIG_STATUS_DECLARE([VARNAME])\n# ------------------------------------\n# Quote a variable value, and forward it to 'config.status' so that its\n# declaration there will have the same value as in 'configure'.  VARNAME\n# must have a single quote delimited value for this to work.\nm4_define([_LT_CONFIG_STATUS_DECLARE],\n[$1='`$ECHO \"$][$1\" | $SED \"$delay_single_quote_subst\"`'])\n\n\n# _LT_CONFIG_STATUS_DECLARATIONS\n# ------------------------------\n# We delimit libtool config variables with single quotes, so when\n# we write them to config.status, we have to be sure to quote all\n# embedded single quotes properly.  In configure, this macro expands\n# each variable declared with _LT_DECL (and _LT_TAGDECL) into:\n#\n#    <var>='`$ECHO \"$<var>\" | $SED \"$delay_single_quote_subst\"`'\nm4_defun([_LT_CONFIG_STATUS_DECLARATIONS],\n[m4_foreach([_lt_var], m4_quote(lt_decl_all_varnames),\n    [m4_n([_LT_CONFIG_STATUS_DECLARE(_lt_var)])])])\n\n\n# _LT_LIBTOOL_TAGS\n# ----------------\n# Output comment and list of tags supported by the script\nm4_defun([_LT_LIBTOOL_TAGS],\n[_LT_FORMAT_COMMENT([The names of the tagged configurations supported by this script])dnl\navailable_tags='_LT_TAGS'dnl\n])\n\n\n# _LT_LIBTOOL_DECLARE(VARNAME, [TAG])\n# -----------------------------------\n# Extract the dictionary values for VARNAME (optionally with TAG) and\n# expand to a commented shell variable setting:\n#\n#    # Some comment about what VAR is for.\n#    visible_name=$lt_internal_name\nm4_define([_LT_LIBTOOL_DECLARE],\n[_LT_FORMAT_COMMENT(m4_quote(lt_dict_fetch([lt_decl_dict], [$1],\n\t\t\t\t\t   [description])))[]dnl\nm4_pushdef([_libtool_name],\n    m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [libtool_name])))[]dnl\nm4_case(m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [value])),\n    [0], [_libtool_name=[$]$1],\n    [1], [_libtool_name=$lt_[]$1],\n    [2], [_libtool_name=$lt_[]$1],\n    [_libtool_name=lt_dict_fetch([lt_decl_dict], [$1], [value])])[]dnl\nm4_ifval([$2], [_$2])[]m4_popdef([_libtool_name])[]dnl\n])\n\n\n# _LT_LIBTOOL_CONFIG_VARS\n# -----------------------\n# Produce commented declarations of non-tagged libtool config variables\n# suitable for insertion in the LIBTOOL CONFIG section of the 'libtool'\n# script.  Tagged libtool config variables (even for the LIBTOOL CONFIG\n# section) are produced by _LT_LIBTOOL_TAG_VARS.\nm4_defun([_LT_LIBTOOL_CONFIG_VARS],\n[m4_foreach([_lt_var],\n    m4_quote(_lt_decl_filter([tagged?], [no], [], lt_decl_varnames)),\n    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var)])])])\n\n\n# _LT_LIBTOOL_TAG_VARS(TAG)\n# -------------------------\nm4_define([_LT_LIBTOOL_TAG_VARS],\n[m4_foreach([_lt_var], m4_quote(lt_decl_tag_varnames),\n    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var, [$1])])])])\n\n\n# _LT_TAGVAR(VARNAME, [TAGNAME])\n# ------------------------------\nm4_define([_LT_TAGVAR], [m4_ifval([$2], [$1_$2], [$1])])\n\n\n# _LT_CONFIG_COMMANDS\n# -------------------\n# Send accumulated output to $CONFIG_STATUS.  Thanks to the lists of\n# variables for single and double quote escaping we saved from calls\n# to _LT_DECL, we can put quote escaped variables declarations\n# into 'config.status', and then the shell code to quote escape them in\n# for loops in 'config.status'.  Finally, any additional code accumulated\n# from calls to _LT_CONFIG_LIBTOOL_INIT is expanded.\nm4_defun([_LT_CONFIG_COMMANDS],\n[AC_PROVIDE_IFELSE([LT_OUTPUT],\n\tdnl If the libtool generation code has been placed in $CONFIG_LT,\n\tdnl instead of duplicating it all over again into config.status,\n\tdnl then we will have config.status run $CONFIG_LT later, so it\n\tdnl needs to know what name is stored there:\n        [AC_CONFIG_COMMANDS([libtool],\n            [$SHELL $CONFIG_LT || AS_EXIT(1)], [CONFIG_LT='$CONFIG_LT'])],\n    dnl If the libtool generation code is destined for config.status,\n    dnl expand the accumulated commands and init code now:\n    [AC_CONFIG_COMMANDS([libtool],\n        [_LT_OUTPUT_LIBTOOL_COMMANDS], [_LT_OUTPUT_LIBTOOL_COMMANDS_INIT])])\n])#_LT_CONFIG_COMMANDS\n\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_COMMANDS_INIT],\n[\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nsed_quote_subst='$sed_quote_subst'\ndouble_quote_subst='$double_quote_subst'\ndelay_variable_subst='$delay_variable_subst'\n_LT_CONFIG_STATUS_DECLARATIONS\nLTCC='$LTCC'\nLTCFLAGS='$LTCFLAGS'\ncompiler='$compiler_DEFAULT'\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$[]1\n_LTECHO_EOF'\n}\n\n# Quote evaled strings.\nfor var in lt_decl_all_varnames([[ \\\n]], lt_decl_quote_varnames); do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED \\\\\"\\\\\\$sed_quote_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\" ## exclude from sc_prohibit_nested_quotes\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n# Double-quote double-evaled strings.\nfor var in lt_decl_all_varnames([[ \\\n]], lt_decl_dquote_varnames); do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED -e \\\\\"\\\\\\$double_quote_subst\\\\\" -e \\\\\"\\\\\\$sed_quote_subst\\\\\" -e \\\\\"\\\\\\$delay_variable_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\" ## exclude from sc_prohibit_nested_quotes\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n_LT_OUTPUT_LIBTOOL_INIT\n])\n\n# _LT_GENERATED_FILE_INIT(FILE, [COMMENT])\n# ------------------------------------\n# Generate a child script FILE with all initialization necessary to\n# reuse the environment learned by the parent script, and make the\n# file executable.  If COMMENT is supplied, it is inserted after the\n# '#!' sequence but before initialization text begins.  After this\n# macro, additional text can be appended to FILE to form the body of\n# the child script.  The macro ends with non-zero status if the\n# file could not be fully written (such as if the disk is full).\nm4_ifdef([AS_INIT_GENERATED],\n[m4_defun([_LT_GENERATED_FILE_INIT],[AS_INIT_GENERATED($@)])],\n[m4_defun([_LT_GENERATED_FILE_INIT],\n[m4_require([AS_PREPARE])]dnl\n[m4_pushdef([AS_MESSAGE_LOG_FD])]dnl\n[lt_write_fail=0\ncat >$1 <<_ASEOF || lt_write_fail=1\n#! $SHELL\n# Generated by $as_me.\n$2\nSHELL=\\${CONFIG_SHELL-$SHELL}\nexport SHELL\n_ASEOF\ncat >>$1 <<\\_ASEOF || lt_write_fail=1\nAS_SHELL_SANITIZE\n_AS_PREPARE\nexec AS_MESSAGE_FD>&1\n_ASEOF\ntest 0 = \"$lt_write_fail\" && chmod +x $1[]dnl\nm4_popdef([AS_MESSAGE_LOG_FD])])])# _LT_GENERATED_FILE_INIT\n\n# LT_OUTPUT\n# ---------\n# This macro allows early generation of the libtool script (before\n# AC_OUTPUT is called), incase it is used in configure for compilation\n# tests.\nAC_DEFUN([LT_OUTPUT],\n[: ${CONFIG_LT=./config.lt}\nAC_MSG_NOTICE([creating $CONFIG_LT])\n_LT_GENERATED_FILE_INIT([\"$CONFIG_LT\"],\n[# Run this file to recreate a libtool stub with the current configuration.])\n\ncat >>\"$CONFIG_LT\" <<\\_LTEOF\nlt_cl_silent=false\nexec AS_MESSAGE_LOG_FD>>config.log\n{\n  echo\n  AS_BOX([Running $as_me.])\n} >&AS_MESSAGE_LOG_FD\n\nlt_cl_help=\"\\\n'$as_me' creates a local libtool stub from the current configuration,\nfor use in further configure time tests before the real libtool is\ngenerated.\n\nUsage: $[0] [[OPTIONS]]\n\n  -h, --help      print this help, then exit\n  -V, --version   print version number, then exit\n  -q, --quiet     do not print progress messages\n  -d, --debug     don't remove temporary files\n\nReport bugs to <bug-libtool@gnu.org>.\"\n\nlt_cl_version=\"\\\nm4_ifset([AC_PACKAGE_NAME], [AC_PACKAGE_NAME ])config.lt[]dnl\nm4_ifset([AC_PACKAGE_VERSION], [ AC_PACKAGE_VERSION])\nconfigured by $[0], generated by m4_PACKAGE_STRING.\n\nCopyright (C) 2011 Free Software Foundation, Inc.\nThis config.lt script is free software; the Free Software Foundation\ngives unlimited permision to copy, distribute and modify it.\"\n\nwhile test 0 != $[#]\ndo\n  case $[1] in\n    --version | --v* | -V )\n      echo \"$lt_cl_version\"; exit 0 ;;\n    --help | --h* | -h )\n      echo \"$lt_cl_help\"; exit 0 ;;\n    --debug | --d* | -d )\n      debug=: ;;\n    --quiet | --q* | --silent | --s* | -q )\n      lt_cl_silent=: ;;\n\n    -*) AC_MSG_ERROR([unrecognized option: $[1]\nTry '$[0] --help' for more information.]) ;;\n\n    *) AC_MSG_ERROR([unrecognized argument: $[1]\nTry '$[0] --help' for more information.]) ;;\n  esac\n  shift\ndone\n\nif $lt_cl_silent; then\n  exec AS_MESSAGE_FD>/dev/null\nfi\n_LTEOF\n\ncat >>\"$CONFIG_LT\" <<_LTEOF\n_LT_OUTPUT_LIBTOOL_COMMANDS_INIT\n_LTEOF\n\ncat >>\"$CONFIG_LT\" <<\\_LTEOF\nAC_MSG_NOTICE([creating $ofile])\n_LT_OUTPUT_LIBTOOL_COMMANDS\nAS_EXIT(0)\n_LTEOF\nchmod +x \"$CONFIG_LT\"\n\n# configure is writing to config.log, but config.lt does its own redirection,\n# appending to config.log, which fails on DOS, as config.log is still kept\n# open by configure.  Here we exec the FD to /dev/null, effectively closing\n# config.log, so it can be properly (re)opened and appended to by config.lt.\nlt_cl_success=:\ntest yes = \"$silent\" &&\n  lt_config_lt_args=\"$lt_config_lt_args --quiet\"\nexec AS_MESSAGE_LOG_FD>/dev/null\n$SHELL \"$CONFIG_LT\" $lt_config_lt_args || lt_cl_success=false\nexec AS_MESSAGE_LOG_FD>>config.log\n$lt_cl_success || AS_EXIT(1)\n])# LT_OUTPUT\n\n\n# _LT_CONFIG(TAG)\n# ---------------\n# If TAG is the built-in tag, create an initial libtool script with a\n# default configuration from the untagged config vars.  Otherwise add code\n# to config.status for appending the configuration named by TAG from the\n# matching tagged config vars.\nm4_defun([_LT_CONFIG],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\n_LT_CONFIG_SAVE_COMMANDS([\n  m4_define([_LT_TAG], m4_if([$1], [], [C], [$1]))dnl\n  m4_if(_LT_TAG, [C], [\n    # See if we are running on zsh, and set the options that allow our\n    # commands through without removal of \\ escapes.\n    if test -n \"${ZSH_VERSION+set}\"; then\n      setopt NO_GLOB_SUBST\n    fi\n\n    cfgfile=${ofile}T\n    trap \"$RM \\\"$cfgfile\\\"; exit 1\" 1 2 15\n    $RM \"$cfgfile\"\n\n    cat <<_LT_EOF >> \"$cfgfile\"\n#! $SHELL\n# Generated automatically by $as_me ($PACKAGE) $VERSION\n# NOTE: Changes made to this file will be lost: look at ltmain.sh.\n\n# Provide generalized library-building support services.\n# Written by Gordon Matzigkeit, 1996\n\n_LT_COPYING\n_LT_LIBTOOL_TAGS\n\n# Configured defaults for sys_lib_dlsearch_path munging.\n: \\${LT_SYS_LIBRARY_PATH=\"$configure_time_lt_sys_library_path\"}\n\n# ### BEGIN LIBTOOL CONFIG\n_LT_LIBTOOL_CONFIG_VARS\n_LT_LIBTOOL_TAG_VARS\n# ### END LIBTOOL CONFIG\n\n_LT_EOF\n\n    cat <<'_LT_EOF' >> \"$cfgfile\"\n\n# ### BEGIN FUNCTIONS SHARED WITH CONFIGURE\n\n_LT_PREPARE_MUNGE_PATH_LIST\n_LT_PREPARE_CC_BASENAME\n\n# ### END FUNCTIONS SHARED WITH CONFIGURE\n\n_LT_EOF\n\n  case $host_os in\n  aix3*)\n    cat <<\\_LT_EOF >> \"$cfgfile\"\n# AIX sometimes has problems with the GCC collect2 program.  For some\n# reason, if we set the COLLECT_NAMES environment variable, the problems\n# vanish in a puff of smoke.\nif test set != \"${COLLECT_NAMES+set}\"; then\n  COLLECT_NAMES=\n  export COLLECT_NAMES\nfi\n_LT_EOF\n    ;;\n  esac\n\n  _LT_PROG_LTMAIN\n\n  # We use sed instead of cat because bash on DJGPP gets confused if\n  # if finds mixed CR/LF and LF-only lines.  Since sed operates in\n  # text mode, it properly converts lines to CR/LF.  This bash problem\n  # is reportedly fixed, but why not run on old versions too?\n  sed '$q' \"$ltmain\" >> \"$cfgfile\" \\\n     || (rm -f \"$cfgfile\"; exit 1)\n\n   mv -f \"$cfgfile\" \"$ofile\" ||\n    (rm -f \"$ofile\" && cp \"$cfgfile\" \"$ofile\" && rm -f \"$cfgfile\")\n  chmod +x \"$ofile\"\n],\n[cat <<_LT_EOF >> \"$ofile\"\n\ndnl Unfortunately we have to use $1 here, since _LT_TAG is not expanded\ndnl in a comment (ie after a #).\n# ### BEGIN LIBTOOL TAG CONFIG: $1\n_LT_LIBTOOL_TAG_VARS(_LT_TAG)\n# ### END LIBTOOL TAG CONFIG: $1\n_LT_EOF\n])dnl /m4_if\n],\n[m4_if([$1], [], [\n    PACKAGE='$PACKAGE'\n    VERSION='$VERSION'\n    RM='$RM'\n    ofile='$ofile'], [])\n])dnl /_LT_CONFIG_SAVE_COMMANDS\n])# _LT_CONFIG\n\n\n# LT_SUPPORTED_TAG(TAG)\n# ---------------------\n# Trace this macro to discover what tags are supported by the libtool\n# --tag option, using:\n#    autoconf --trace 'LT_SUPPORTED_TAG:$1'\nAC_DEFUN([LT_SUPPORTED_TAG], [])\n\n\n# C support is built-in for now\nm4_define([_LT_LANG_C_enabled], [])\nm4_define([_LT_TAGS], [])\n\n\n# LT_LANG(LANG)\n# -------------\n# Enable libtool support for the given language if not already enabled.\nAC_DEFUN([LT_LANG],\n[AC_BEFORE([$0], [LT_OUTPUT])dnl\nm4_case([$1],\n  [C],\t\t\t[_LT_LANG(C)],\n  [C++],\t\t[_LT_LANG(CXX)],\n  [Go],\t\t\t[_LT_LANG(GO)],\n  [Java],\t\t[_LT_LANG(GCJ)],\n  [Fortran 77],\t\t[_LT_LANG(F77)],\n  [Fortran],\t\t[_LT_LANG(FC)],\n  [Windows Resource],\t[_LT_LANG(RC)],\n  [m4_ifdef([_LT_LANG_]$1[_CONFIG],\n    [_LT_LANG($1)],\n    [m4_fatal([$0: unsupported language: \"$1\"])])])dnl\n])# LT_LANG\n\n\n# _LT_LANG(LANGNAME)\n# ------------------\nm4_defun([_LT_LANG],\n[m4_ifdef([_LT_LANG_]$1[_enabled], [],\n  [LT_SUPPORTED_TAG([$1])dnl\n  m4_append([_LT_TAGS], [$1 ])dnl\n  m4_define([_LT_LANG_]$1[_enabled], [])dnl\n  _LT_LANG_$1_CONFIG($1)])dnl\n])# _LT_LANG\n\n\nm4_ifndef([AC_PROG_GO], [\n############################################################\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_GO.  When it is available in    #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\n############################################################\nm4_defun([AC_PROG_GO],\n[AC_LANG_PUSH(Go)dnl\nAC_ARG_VAR([GOC],     [Go compiler command])dnl\nAC_ARG_VAR([GOFLAGS], [Go compiler flags])dnl\n_AC_ARG_VAR_LDFLAGS()dnl\nAC_CHECK_TOOL(GOC, gccgo)\nif test -z \"$GOC\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    AC_CHECK_PROG(GOC, [${ac_tool_prefix}gccgo], [${ac_tool_prefix}gccgo])\n  fi\nfi\nif test -z \"$GOC\"; then\n  AC_CHECK_PROG(GOC, gccgo, gccgo, false)\nfi\n])#m4_defun\n])#m4_ifndef\n\n\n# _LT_LANG_DEFAULT_CONFIG\n# -----------------------\nm4_defun([_LT_LANG_DEFAULT_CONFIG],\n[AC_PROVIDE_IFELSE([AC_PROG_CXX],\n  [LT_LANG(CXX)],\n  [m4_define([AC_PROG_CXX], defn([AC_PROG_CXX])[LT_LANG(CXX)])])\n\nAC_PROVIDE_IFELSE([AC_PROG_F77],\n  [LT_LANG(F77)],\n  [m4_define([AC_PROG_F77], defn([AC_PROG_F77])[LT_LANG(F77)])])\n\nAC_PROVIDE_IFELSE([AC_PROG_FC],\n  [LT_LANG(FC)],\n  [m4_define([AC_PROG_FC], defn([AC_PROG_FC])[LT_LANG(FC)])])\n\ndnl The call to [A][M_PROG_GCJ] is quoted like that to stop aclocal\ndnl pulling things in needlessly.\nAC_PROVIDE_IFELSE([AC_PROG_GCJ],\n  [LT_LANG(GCJ)],\n  [AC_PROVIDE_IFELSE([A][M_PROG_GCJ],\n    [LT_LANG(GCJ)],\n    [AC_PROVIDE_IFELSE([LT_PROG_GCJ],\n      [LT_LANG(GCJ)],\n      [m4_ifdef([AC_PROG_GCJ],\n\t[m4_define([AC_PROG_GCJ], defn([AC_PROG_GCJ])[LT_LANG(GCJ)])])\n       m4_ifdef([A][M_PROG_GCJ],\n\t[m4_define([A][M_PROG_GCJ], defn([A][M_PROG_GCJ])[LT_LANG(GCJ)])])\n       m4_ifdef([LT_PROG_GCJ],\n\t[m4_define([LT_PROG_GCJ], defn([LT_PROG_GCJ])[LT_LANG(GCJ)])])])])])\n\nAC_PROVIDE_IFELSE([AC_PROG_GO],\n  [LT_LANG(GO)],\n  [m4_define([AC_PROG_GO], defn([AC_PROG_GO])[LT_LANG(GO)])])\n\nAC_PROVIDE_IFELSE([LT_PROG_RC],\n  [LT_LANG(RC)],\n  [m4_define([LT_PROG_RC], defn([LT_PROG_RC])[LT_LANG(RC)])])\n])# _LT_LANG_DEFAULT_CONFIG\n\n# Obsolete macros:\nAU_DEFUN([AC_LIBTOOL_CXX], [LT_LANG(C++)])\nAU_DEFUN([AC_LIBTOOL_F77], [LT_LANG(Fortran 77)])\nAU_DEFUN([AC_LIBTOOL_FC], [LT_LANG(Fortran)])\nAU_DEFUN([AC_LIBTOOL_GCJ], [LT_LANG(Java)])\nAU_DEFUN([AC_LIBTOOL_RC], [LT_LANG(Windows Resource)])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_CXX], [])\ndnl AC_DEFUN([AC_LIBTOOL_F77], [])\ndnl AC_DEFUN([AC_LIBTOOL_FC], [])\ndnl AC_DEFUN([AC_LIBTOOL_GCJ], [])\ndnl AC_DEFUN([AC_LIBTOOL_RC], [])\n\n\n# _LT_TAG_COMPILER\n# ----------------\nm4_defun([_LT_TAG_COMPILER],\n[AC_REQUIRE([AC_PROG_CC])dnl\n\n_LT_DECL([LTCC], [CC], [1], [A C compiler])dnl\n_LT_DECL([LTCFLAGS], [CFLAGS], [1], [LTCC compiler flags])dnl\n_LT_TAGDECL([CC], [compiler], [1], [A language specific compiler])dnl\n_LT_TAGDECL([with_gcc], [GCC], [0], [Is the compiler the GNU compiler?])dnl\n\n# If no C compiler was specified, use CC.\nLTCC=${LTCC-\"$CC\"}\n\n# If no C compiler flags were specified, use CFLAGS.\nLTCFLAGS=${LTCFLAGS-\"$CFLAGS\"}\n\n# Allow CC to be a program name with arguments.\ncompiler=$CC\n])# _LT_TAG_COMPILER\n\n\n# _LT_COMPILER_BOILERPLATE\n# ------------------------\n# Check for compiler boilerplate output or warnings with\n# the simple compiler test code.\nm4_defun([_LT_COMPILER_BOILERPLATE],\n[m4_require([_LT_DECL_SED])dnl\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_compile_test_code\" >conftest.$ac_ext\neval \"$ac_compile\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_compiler_boilerplate=`cat conftest.err`\n$RM conftest*\n])# _LT_COMPILER_BOILERPLATE\n\n\n# _LT_LINKER_BOILERPLATE\n# ----------------------\n# Check for linker boilerplate output or warnings with\n# the simple link test code.\nm4_defun([_LT_LINKER_BOILERPLATE],\n[m4_require([_LT_DECL_SED])dnl\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_link_test_code\" >conftest.$ac_ext\neval \"$ac_link\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_linker_boilerplate=`cat conftest.err`\n$RM -r conftest*\n])# _LT_LINKER_BOILERPLATE\n\n# _LT_REQUIRED_DARWIN_CHECKS\n# -------------------------\nm4_defun_once([_LT_REQUIRED_DARWIN_CHECKS],[\n  case $host_os in\n    rhapsody* | darwin*)\n    AC_CHECK_TOOL([DSYMUTIL], [dsymutil], [:])\n    AC_CHECK_TOOL([NMEDIT], [nmedit], [:])\n    AC_CHECK_TOOL([LIPO], [lipo], [:])\n    AC_CHECK_TOOL([OTOOL], [otool], [:])\n    AC_CHECK_TOOL([OTOOL64], [otool64], [:])\n    _LT_DECL([], [DSYMUTIL], [1],\n      [Tool to manipulate archived DWARF debug symbol files on Mac OS X])\n    _LT_DECL([], [NMEDIT], [1],\n      [Tool to change global to local symbols on Mac OS X])\n    _LT_DECL([], [LIPO], [1],\n      [Tool to manipulate fat objects and archives on Mac OS X])\n    _LT_DECL([], [OTOOL], [1],\n      [ldd/readelf like tool for Mach-O binaries on Mac OS X])\n    _LT_DECL([], [OTOOL64], [1],\n      [ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4])\n\n    AC_CACHE_CHECK([for -single_module linker flag],[lt_cv_apple_cc_single_mod],\n      [lt_cv_apple_cc_single_mod=no\n      if test -z \"$LT_MULTI_MODULE\"; then\n\t# By default we will add the -single_module flag. You can override\n\t# by either setting the environment variable LT_MULTI_MODULE\n\t# non-empty at configure time, or by adding -multi_module to the\n\t# link flags.\n\trm -rf libconftest.dylib*\n\techo \"int foo(void){return 1;}\" > conftest.c\n\techo \"$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n-dynamiclib -Wl,-single_module conftest.c\" >&AS_MESSAGE_LOG_FD\n\t$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n\t  -dynamiclib -Wl,-single_module conftest.c 2>conftest.err\n        _lt_result=$?\n\t# If there is a non-empty error log, and \"single_module\"\n\t# appears in it, assume the flag caused a linker warning\n        if test -s conftest.err && $GREP single_module conftest.err; then\n\t  cat conftest.err >&AS_MESSAGE_LOG_FD\n\t# Otherwise, if the output was created with a 0 exit code from\n\t# the compiler, it worked.\n\telif test -f libconftest.dylib && test 0 = \"$_lt_result\"; then\n\t  lt_cv_apple_cc_single_mod=yes\n\telse\n\t  cat conftest.err >&AS_MESSAGE_LOG_FD\n\tfi\n\trm -rf libconftest.dylib*\n\trm -f conftest.*\n      fi])\n\n    AC_CACHE_CHECK([for -exported_symbols_list linker flag],\n      [lt_cv_ld_exported_symbols_list],\n      [lt_cv_ld_exported_symbols_list=no\n      save_LDFLAGS=$LDFLAGS\n      echo \"_main\" > conftest.sym\n      LDFLAGS=\"$LDFLAGS -Wl,-exported_symbols_list,conftest.sym\"\n      AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],\n\t[lt_cv_ld_exported_symbols_list=yes],\n\t[lt_cv_ld_exported_symbols_list=no])\n\tLDFLAGS=$save_LDFLAGS\n    ])\n\n    AC_CACHE_CHECK([for -force_load linker flag],[lt_cv_ld_force_load],\n      [lt_cv_ld_force_load=no\n      cat > conftest.c << _LT_EOF\nint forced_loaded() { return 2;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS -c -o conftest.o conftest.c\" >&AS_MESSAGE_LOG_FD\n      $LTCC $LTCFLAGS -c -o conftest.o conftest.c 2>&AS_MESSAGE_LOG_FD\n      echo \"$AR cru libconftest.a conftest.o\" >&AS_MESSAGE_LOG_FD\n      $AR cru libconftest.a conftest.o 2>&AS_MESSAGE_LOG_FD\n      echo \"$RANLIB libconftest.a\" >&AS_MESSAGE_LOG_FD\n      $RANLIB libconftest.a 2>&AS_MESSAGE_LOG_FD\n      cat > conftest.c << _LT_EOF\nint main() { return 0;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a\" >&AS_MESSAGE_LOG_FD\n      $LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a 2>conftest.err\n      _lt_result=$?\n      if test -s conftest.err && $GREP force_load conftest.err; then\n\tcat conftest.err >&AS_MESSAGE_LOG_FD\n      elif test -f conftest && test 0 = \"$_lt_result\" && $GREP forced_load conftest >/dev/null 2>&1; then\n\tlt_cv_ld_force_load=yes\n      else\n\tcat conftest.err >&AS_MESSAGE_LOG_FD\n      fi\n        rm -f conftest.err libconftest.a conftest conftest.c\n        rm -rf conftest.dSYM\n    ])\n    case $host_os in\n    rhapsody* | darwin1.[[012]])\n      _lt_dar_allow_undefined='$wl-undefined ${wl}suppress' ;;\n    darwin1.*)\n      _lt_dar_allow_undefined='$wl-flat_namespace $wl-undefined ${wl}suppress' ;;\n    darwin*) # darwin 5.x on\n      # if running on 10.5 or later, the deployment target defaults\n      # to the OS version, if on x86, and 10.4, the deployment\n      # target defaults to 10.4. Don't you love it?\n      case ${MACOSX_DEPLOYMENT_TARGET-10.0},$host in\n\t10.0,*86*-darwin8*|10.0,*-darwin[[91]]*)\n\t  _lt_dar_allow_undefined='$wl-undefined ${wl}dynamic_lookup' ;;\n\t10.[[012]][[,.]]*)\n\t  _lt_dar_allow_undefined='$wl-flat_namespace $wl-undefined ${wl}suppress' ;;\n\t10.*)\n\t  _lt_dar_allow_undefined='$wl-undefined ${wl}dynamic_lookup' ;;\n      esac\n    ;;\n  esac\n    if test yes = \"$lt_cv_apple_cc_single_mod\"; then\n      _lt_dar_single_mod='$single_module'\n    fi\n    if test yes = \"$lt_cv_ld_exported_symbols_list\"; then\n      _lt_dar_export_syms=' $wl-exported_symbols_list,$output_objdir/$libname-symbols.expsym'\n    else\n      _lt_dar_export_syms='~$NMEDIT -s $output_objdir/$libname-symbols.expsym $lib'\n    fi\n    if test : != \"$DSYMUTIL\" && test no = \"$lt_cv_ld_force_load\"; then\n      _lt_dsymutil='~$DSYMUTIL $lib || :'\n    else\n      _lt_dsymutil=\n    fi\n    ;;\n  esac\n])\n\n\n# _LT_DARWIN_LINKER_FEATURES([TAG])\n# ---------------------------------\n# Checks for linker and compiler features on darwin\nm4_defun([_LT_DARWIN_LINKER_FEATURES],\n[\n  m4_require([_LT_REQUIRED_DARWIN_CHECKS])\n  _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n  _LT_TAGVAR(hardcode_direct, $1)=no\n  _LT_TAGVAR(hardcode_automatic, $1)=yes\n  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  if test yes = \"$lt_cv_ld_force_load\"; then\n    _LT_TAGVAR(whole_archive_flag_spec, $1)='`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience $wl-force_load,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"`'\n    m4_case([$1], [F77], [_LT_TAGVAR(compiler_needs_object, $1)=yes],\n                  [FC],  [_LT_TAGVAR(compiler_needs_object, $1)=yes])\n  else\n    _LT_TAGVAR(whole_archive_flag_spec, $1)=''\n  fi\n  _LT_TAGVAR(link_all_deplibs, $1)=yes\n  _LT_TAGVAR(allow_undefined_flag, $1)=$_lt_dar_allow_undefined\n  case $cc_basename in\n     ifort*|nagfor*) _lt_dar_can_shared=yes ;;\n     *) _lt_dar_can_shared=$GCC ;;\n  esac\n  if test yes = \"$_lt_dar_can_shared\"; then\n    output_verbose_link_cmd=func_echo_all\n    _LT_TAGVAR(archive_cmds, $1)=\"\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod$_lt_dsymutil\"\n    _LT_TAGVAR(module_cmds, $1)=\"\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags$_lt_dsymutil\"\n    _LT_TAGVAR(archive_expsym_cmds, $1)=\"sed 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod$_lt_dar_export_syms$_lt_dsymutil\"\n    _LT_TAGVAR(module_expsym_cmds, $1)=\"sed -e 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags$_lt_dar_export_syms$_lt_dsymutil\"\n    m4_if([$1], [CXX],\n[   if test yes != \"$lt_cv_apple_cc_single_mod\"; then\n      _LT_TAGVAR(archive_cmds, $1)=\"\\$CC -r -keep_private_externs -nostdlib -o \\$lib-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$lib-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring$_lt_dsymutil\"\n      _LT_TAGVAR(archive_expsym_cmds, $1)=\"sed 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC -r -keep_private_externs -nostdlib -o \\$lib-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$lib-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring$_lt_dar_export_syms$_lt_dsymutil\"\n    fi\n],[])\n  else\n  _LT_TAGVAR(ld_shlibs, $1)=no\n  fi\n])\n\n# _LT_SYS_MODULE_PATH_AIX([TAGNAME])\n# ----------------------------------\n# Links a minimal program and checks the executable\n# for the system default hardcoded library path. In most cases,\n# this is /usr/lib:/lib, but when the MPI compilers are used\n# the location of the communication and MPI libs are included too.\n# If we don't find anything, use the default library path according\n# to the aix ld manual.\n# Store the results from the different compilers for each TAGNAME.\n# Allow to override them for all tags through lt_cv_aix_libpath.\nm4_defun([_LT_SYS_MODULE_PATH_AIX],\n[m4_require([_LT_DECL_SED])dnl\nif test set = \"${lt_cv_aix_libpath+set}\"; then\n  aix_libpath=$lt_cv_aix_libpath\nelse\n  AC_CACHE_VAL([_LT_TAGVAR([lt_cv_aix_libpath_], [$1])],\n  [AC_LINK_IFELSE([AC_LANG_PROGRAM],[\n  lt_aix_libpath_sed='[\n      /Import File Strings/,/^$/ {\n\t  /^0/ {\n\t      s/^0  *\\([^ ]*\\) *$/\\1/\n\t      p\n\t  }\n      }]'\n  _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  # Check for a 64-bit object if we didn't find anything.\n  if test -z \"$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\"; then\n    _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  fi],[])\n  if test -z \"$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\"; then\n    _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=/usr/lib:/lib\n  fi\n  ])\n  aix_libpath=$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\nfi\n])# _LT_SYS_MODULE_PATH_AIX\n\n\n# _LT_SHELL_INIT(ARG)\n# -------------------\nm4_define([_LT_SHELL_INIT],\n[m4_divert_text([M4SH-INIT], [$1\n])])# _LT_SHELL_INIT\n\n\n\n# _LT_PROG_ECHO_BACKSLASH\n# -----------------------\n# Find how we can fake an echo command that does not interpret backslash.\n# In particular, with Autoconf 2.60 or later we add some code to the start\n# of the generated configure script that will find a shell with a builtin\n# printf (that we can use as an echo command).\nm4_defun([_LT_PROG_ECHO_BACKSLASH],\n[ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n\nAC_MSG_CHECKING([how to print strings])\n# Test print first, because it will be a builtin if present.\nif test \"X`( print -r -- -n ) 2>/dev/null`\" = X-n && \\\n   test \"X`print -r -- $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='print -r --'\nelif test \"X`printf %s $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='printf %s\\n'\nelse\n  # Use this function as a fallback that always works.\n  func_fallback_echo ()\n  {\n    eval 'cat <<_LTECHO_EOF\n$[]1\n_LTECHO_EOF'\n  }\n  ECHO='func_fallback_echo'\nfi\n\n# func_echo_all arg...\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"$*\"\n}\n\ncase $ECHO in\n  printf*) AC_MSG_RESULT([printf]) ;;\n  print*) AC_MSG_RESULT([print -r]) ;;\n  *) AC_MSG_RESULT([cat]) ;;\nesac\n\nm4_ifdef([_AS_DETECT_SUGGESTED],\n[_AS_DETECT_SUGGESTED([\n  test -n \"${ZSH_VERSION+set}${BASH_VERSION+set}\" || (\n    ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\n    ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\n    ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n    PATH=/empty FPATH=/empty; export PATH FPATH\n    test \"X`printf %s $ECHO`\" = \"X$ECHO\" \\\n      || test \"X`print -r -- $ECHO`\" = \"X$ECHO\" )])])\n\n_LT_DECL([], [SHELL], [1], [Shell to use when invoking shell scripts])\n_LT_DECL([], [ECHO], [1], [An echo program that protects backslashes])\n])# _LT_PROG_ECHO_BACKSLASH\n\n\n# _LT_WITH_SYSROOT\n# ----------------\nAC_DEFUN([_LT_WITH_SYSROOT],\n[AC_MSG_CHECKING([for sysroot])\nAC_ARG_WITH([sysroot],\n[AS_HELP_STRING([--with-sysroot@<:@=DIR@:>@],\n  [Search for dependent libraries within DIR (or the compiler's sysroot\n   if not specified).])],\n[], [with_sysroot=no])\n\ndnl lt_sysroot will always be passed unquoted.  We quote it here\ndnl in case the user passed a directory name.\nlt_sysroot=\ncase $with_sysroot in #(\n yes)\n   if test yes = \"$GCC\"; then\n     lt_sysroot=`$CC --print-sysroot 2>/dev/null`\n   fi\n   ;; #(\n /*)\n   lt_sysroot=`echo \"$with_sysroot\" | sed -e \"$sed_quote_subst\"`\n   ;; #(\n no|'')\n   ;; #(\n *)\n   AC_MSG_RESULT([$with_sysroot])\n   AC_MSG_ERROR([The sysroot must be an absolute path.])\n   ;;\nesac\n\n AC_MSG_RESULT([${lt_sysroot:-no}])\n_LT_DECL([], [lt_sysroot], [0], [The root where to search for ]dnl\n[dependent libraries, and where our libraries should be installed.])])\n\n# _LT_ENABLE_LOCK\n# ---------------\nm4_defun([_LT_ENABLE_LOCK],\n[AC_ARG_ENABLE([libtool-lock],\n  [AS_HELP_STRING([--disable-libtool-lock],\n    [avoid locking (might break parallel builds)])])\ntest no = \"$enable_libtool_lock\" || enable_libtool_lock=yes\n\n# Some flags need to be propagated to the compiler or linker for good\n# libtool support.\ncase $host in\nia64-*-hpux*)\n  # Find out what ABI is being produced by ac_compile, and set mode\n  # options accordingly.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.$ac_objext` in\n      *ELF-32*)\n\tHPUX_IA64_MODE=32\n\t;;\n      *ELF-64*)\n\tHPUX_IA64_MODE=64\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n*-*-irix6*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo '[#]line '$LINENO' \"configure\"' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    if test yes = \"$lt_cv_prog_gnu_ld\"; then\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -melf32bsmip\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -melf32bmipn32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -melf64bmip\"\n\t;;\n      esac\n    else\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -32\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -n32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -64\"\n\t  ;;\n      esac\n    fi\n  fi\n  rm -rf conftest*\n  ;;\n\nmips64*-*linux*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo '[#]line '$LINENO' \"configure\"' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    emul=elf\n    case `/usr/bin/file conftest.$ac_objext` in\n      *32-bit*)\n\temul=\"${emul}32\"\n\t;;\n      *64-bit*)\n\temul=\"${emul}64\"\n\t;;\n    esac\n    case `/usr/bin/file conftest.$ac_objext` in\n      *MSB*)\n\temul=\"${emul}btsmip\"\n\t;;\n      *LSB*)\n\temul=\"${emul}ltsmip\"\n\t;;\n    esac\n    case `/usr/bin/file conftest.$ac_objext` in\n      *N32*)\n\temul=\"${emul}n32\"\n\t;;\n    esac\n    LD=\"${LD-ld} -m $emul\"\n  fi\n  rm -rf conftest*\n  ;;\n\nx86_64-*kfreebsd*-gnu|x86_64-*linux*|powerpc*-*linux*| \\\ns390*-*linux*|s390*-*tpf*|sparc*-*linux*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.  Note that the listed cases only cover the\n  # situations where additional linker options are needed (such as when\n  # doing 32-bit compilation for a host where ld defaults to 64-bit, or\n  # vice versa); the common cases where no linker options are needed do\n  # not appear in the list.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n      *32-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_i386_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    case `/usr/bin/file conftest.o` in\n\t      *x86-64*)\n\t\tLD=\"${LD-ld} -m elf32_x86_64\"\n\t\t;;\n\t      *)\n\t\tLD=\"${LD-ld} -m elf_i386\"\n\t\t;;\n\t    esac\n\t    ;;\n\t  powerpc64le-*linux*)\n\t    LD=\"${LD-ld} -m elf32lppclinux\"\n\t    ;;\n\t  powerpc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32ppclinux\"\n\t    ;;\n\t  s390x-*linux*)\n\t    LD=\"${LD-ld} -m elf_s390\"\n\t    ;;\n\t  sparc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32_sparc\"\n\t    ;;\n\tesac\n\t;;\n      *64-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_x86_64_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    LD=\"${LD-ld} -m elf_x86_64\"\n\t    ;;\n\t  powerpcle-*linux*)\n\t    LD=\"${LD-ld} -m elf64lppc\"\n\t    ;;\n\t  powerpc-*linux*)\n\t    LD=\"${LD-ld} -m elf64ppc\"\n\t    ;;\n\t  s390*-*linux*|s390*-*tpf*)\n\t    LD=\"${LD-ld} -m elf64_s390\"\n\t    ;;\n\t  sparc*-*linux*)\n\t    LD=\"${LD-ld} -m elf64_sparc\"\n\t    ;;\n\tesac\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n\n*-*-sco3.2v5*)\n  # On SCO OpenServer 5, we need -belf to get full-featured binaries.\n  SAVE_CFLAGS=$CFLAGS\n  CFLAGS=\"$CFLAGS -belf\"\n  AC_CACHE_CHECK([whether the C compiler needs -belf], lt_cv_cc_needs_belf,\n    [AC_LANG_PUSH(C)\n     AC_LINK_IFELSE([AC_LANG_PROGRAM([[]],[[]])],[lt_cv_cc_needs_belf=yes],[lt_cv_cc_needs_belf=no])\n     AC_LANG_POP])\n  if test yes != \"$lt_cv_cc_needs_belf\"; then\n    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf\n    CFLAGS=$SAVE_CFLAGS\n  fi\n  ;;\n*-*solaris*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n    *64-bit*)\n      case $lt_cv_prog_gnu_ld in\n      yes*)\n        case $host in\n        i?86-*-solaris*|x86_64-*-solaris*)\n          LD=\"${LD-ld} -m elf_x86_64\"\n          ;;\n        sparc*-*-solaris*)\n          LD=\"${LD-ld} -m elf64_sparc\"\n          ;;\n        esac\n        # GNU ld 2.21 introduced _sol2 emulations.  Use them if available.\n        if ${LD-ld} -V | grep _sol2 >/dev/null 2>&1; then\n          LD=${LD-ld}_sol2\n        fi\n        ;;\n      *)\n\tif ${LD-ld} -64 -r -o conftest2.o conftest.o >/dev/null 2>&1; then\n\t  LD=\"${LD-ld} -64\"\n\tfi\n\t;;\n      esac\n      ;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\nesac\n\nneed_locks=$enable_libtool_lock\n])# _LT_ENABLE_LOCK\n\n\n# _LT_PROG_AR\n# -----------\nm4_defun([_LT_PROG_AR],\n[AC_CHECK_TOOLS(AR, [ar], false)\n: ${AR=ar}\n: ${AR_FLAGS=cru}\n_LT_DECL([], [AR], [1], [The archiver])\n_LT_DECL([], [AR_FLAGS], [1], [Flags to create an archive])\n\nAC_CACHE_CHECK([for archiver @FILE support], [lt_cv_ar_at_file],\n  [lt_cv_ar_at_file=no\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM],\n     [echo conftest.$ac_objext > conftest.lst\n      lt_ar_try='$AR $AR_FLAGS libconftest.a @conftest.lst >&AS_MESSAGE_LOG_FD'\n      AC_TRY_EVAL([lt_ar_try])\n      if test 0 -eq \"$ac_status\"; then\n\t# Ensure the archiver fails upon bogus file names.\n\trm -f conftest.$ac_objext libconftest.a\n\tAC_TRY_EVAL([lt_ar_try])\n\tif test 0 -ne \"$ac_status\"; then\n          lt_cv_ar_at_file=@\n        fi\n      fi\n      rm -f conftest.* libconftest.a\n     ])\n  ])\n\nif test no = \"$lt_cv_ar_at_file\"; then\n  archiver_list_spec=\nelse\n  archiver_list_spec=$lt_cv_ar_at_file\nfi\n_LT_DECL([], [archiver_list_spec], [1],\n  [How to feed a file listing to the archiver])\n])# _LT_PROG_AR\n\n\n# _LT_CMD_OLD_ARCHIVE\n# -------------------\nm4_defun([_LT_CMD_OLD_ARCHIVE],\n[_LT_PROG_AR\n\nAC_CHECK_TOOL(STRIP, strip, :)\ntest -z \"$STRIP\" && STRIP=:\n_LT_DECL([], [STRIP], [1], [A symbol stripping program])\n\nAC_CHECK_TOOL(RANLIB, ranlib, :)\ntest -z \"$RANLIB\" && RANLIB=:\n_LT_DECL([], [RANLIB], [1],\n    [Commands used to install an old-style archive])\n\n# Determine commands to create old-style static archives.\nold_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs'\nold_postinstall_cmds='chmod 644 $oldlib'\nold_postuninstall_cmds=\n\nif test -n \"$RANLIB\"; then\n  case $host_os in\n  bitrig* | openbsd*)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB -t \\$tool_oldlib\"\n    ;;\n  *)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB \\$tool_oldlib\"\n    ;;\n  esac\n  old_archive_cmds=\"$old_archive_cmds~\\$RANLIB \\$tool_oldlib\"\nfi\n\ncase $host_os in\n  darwin*)\n    lock_old_archive_extraction=yes ;;\n  *)\n    lock_old_archive_extraction=no ;;\nesac\n_LT_DECL([], [old_postinstall_cmds], [2])\n_LT_DECL([], [old_postuninstall_cmds], [2])\n_LT_TAGDECL([], [old_archive_cmds], [2],\n    [Commands used to build an old-style archive])\n_LT_DECL([], [lock_old_archive_extraction], [0],\n    [Whether to use a lock for old archive extraction])\n])# _LT_CMD_OLD_ARCHIVE\n\n\n# _LT_COMPILER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#\t\t[OUTPUT-FILE], [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------------------\n# Check whether the given compiler option works\nAC_DEFUN([_LT_COMPILER_OPTION],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_SED])dnl\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   m4_if([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n   lt_compiler_flag=\"$3\"  ## exclude from sc_useless_quotes_in_assignment\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   # The option is referenced via a variable to avoid confusing sed.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>conftest.err)\n   ac_status=$?\n   cat conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s \"$ac_outfile\"; then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings other than the usual output.\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' >conftest.exp\n     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then\n       $2=yes\n     fi\n   fi\n   $RM conftest*\n])\n\nif test yes = \"[$]$2\"; then\n    m4_if([$5], , :, [$5])\nelse\n    m4_if([$6], , :, [$6])\nfi\n])# _LT_COMPILER_OPTION\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_COMPILER_OPTION], [_LT_COMPILER_OPTION])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [])\n\n\n# _LT_LINKER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#                  [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------\n# Check whether the given linker option works\nAC_DEFUN([_LT_LINKER_OPTION],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_SED])dnl\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   save_LDFLAGS=$LDFLAGS\n   LDFLAGS=\"$LDFLAGS $3\"\n   echo \"$lt_simple_link_test_code\" > conftest.$ac_ext\n   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then\n     # The linker can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     if test -s conftest.err; then\n       # Append any errors to the config.log.\n       cat conftest.err 1>&AS_MESSAGE_LOG_FD\n       $ECHO \"$_lt_linker_boilerplate\" | $SED '/^$/d' > conftest.exp\n       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n       if diff conftest.exp conftest.er2 >/dev/null; then\n         $2=yes\n       fi\n     else\n       $2=yes\n     fi\n   fi\n   $RM -r conftest*\n   LDFLAGS=$save_LDFLAGS\n])\n\nif test yes = \"[$]$2\"; then\n    m4_if([$4], , :, [$4])\nelse\n    m4_if([$5], , :, [$5])\nfi\n])# _LT_LINKER_OPTION\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_LINKER_OPTION], [_LT_LINKER_OPTION])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_LINKER_OPTION], [])\n\n\n# LT_CMD_MAX_LEN\n#---------------\nAC_DEFUN([LT_CMD_MAX_LEN],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\n# find the maximum length of command line arguments\nAC_MSG_CHECKING([the maximum length of command line arguments])\nAC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl\n  i=0\n  teststring=ABCD\n\n  case $build_os in\n  msdosdjgpp*)\n    # On DJGPP, this test can blow up pretty badly due to problems in libc\n    # (any single argument exceeding 2000 bytes causes a buffer overrun\n    # during glob expansion).  Even if it were fixed, the result of this\n    # check would be larger than it should be.\n    lt_cv_sys_max_cmd_len=12288;    # 12K is about right\n    ;;\n\n  gnu*)\n    # Under GNU Hurd, this test is not required because there is\n    # no limit to the length of command line arguments.\n    # Libtool will interpret -1 as no limit whatsoever\n    lt_cv_sys_max_cmd_len=-1;\n    ;;\n\n  cygwin* | mingw* | cegcc*)\n    # On Win9x/ME, this test blows up -- it succeeds, but takes\n    # about 5 minutes as the teststring grows exponentially.\n    # Worse, since 9x/ME are not pre-emptively multitasking,\n    # you end up with a \"frozen\" computer, even though with patience\n    # the test eventually succeeds (with a max line length of 256k).\n    # Instead, let's just punt: use the minimum linelength reported by\n    # all of the supported platforms: 8192 (on NT/2K/XP).\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  mint*)\n    # On MiNT this can take a long time and run out of memory.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  amigaos*)\n    # On AmigaOS with pdksh, this test takes hours, literally.\n    # So we just punt and use a minimum line length of 8192.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  bitrig* | darwin* | dragonfly* | freebsd* | netbsd* | openbsd*)\n    # This has been around since 386BSD, at least.  Likely further.\n    if test -x /sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`\n    elif test -x /usr/sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`\n    else\n      lt_cv_sys_max_cmd_len=65536\t# usable default for all BSDs\n    fi\n    # And add a safety zone\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    ;;\n\n  interix*)\n    # We know the value 262144 and hardcode it with a safety zone (like BSD)\n    lt_cv_sys_max_cmd_len=196608\n    ;;\n\n  os2*)\n    # The test takes a long time on OS/2.\n    lt_cv_sys_max_cmd_len=8192\n    ;;\n\n  osf*)\n    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure\n    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not\n    # nice to cause kernel panics so lets avoid the loop below.\n    # First set a reasonable default.\n    lt_cv_sys_max_cmd_len=16384\n    #\n    if test -x /sbin/sysconfig; then\n      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in\n        *1*) lt_cv_sys_max_cmd_len=-1 ;;\n      esac\n    fi\n    ;;\n  sco3.2v5*)\n    lt_cv_sys_max_cmd_len=102400\n    ;;\n  sysv5* | sco5v6* | sysv4.2uw2*)\n    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`\n    if test -n \"$kargmax\"; then\n      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[[\t ]]//'`\n    else\n      lt_cv_sys_max_cmd_len=32768\n    fi\n    ;;\n  *)\n    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`\n    if test -n \"$lt_cv_sys_max_cmd_len\" && \\\n       test undefined != \"$lt_cv_sys_max_cmd_len\"; then\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    else\n      # Make teststring a little bigger before we do anything with it.\n      # a 1K string should be a reasonable start.\n      for i in 1 2 3 4 5 6 7 8; do\n        teststring=$teststring$teststring\n      done\n      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}\n      # If test is not a shell built-in, we'll probably end up computing a\n      # maximum length that is only half of the actual maximum length, but\n      # we can't tell.\n      while { test X`env echo \"$teststring$teststring\" 2>/dev/null` \\\n\t         = \"X$teststring$teststring\"; } >/dev/null 2>&1 &&\n\t      test 17 != \"$i\" # 1/2 MB should be enough\n      do\n        i=`expr $i + 1`\n        teststring=$teststring$teststring\n      done\n      # Only check the string length outside the loop.\n      lt_cv_sys_max_cmd_len=`expr \"X$teststring\" : \".*\" 2>&1`\n      teststring=\n      # Add a significant safety factor because C++ compilers can tack on\n      # massive amounts of additional arguments before passing them to the\n      # linker.  It appears as though 1/2 is a usable value.\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 2`\n    fi\n    ;;\n  esac\n])\nif test -n \"$lt_cv_sys_max_cmd_len\"; then\n  AC_MSG_RESULT($lt_cv_sys_max_cmd_len)\nelse\n  AC_MSG_RESULT(none)\nfi\nmax_cmd_len=$lt_cv_sys_max_cmd_len\n_LT_DECL([], [max_cmd_len], [0],\n    [What is the maximum length of a command?])\n])# LT_CMD_MAX_LEN\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_SYS_MAX_CMD_LEN], [LT_CMD_MAX_LEN])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [])\n\n\n# _LT_HEADER_DLFCN\n# ----------------\nm4_defun([_LT_HEADER_DLFCN],\n[AC_CHECK_HEADERS([dlfcn.h], [], [], [AC_INCLUDES_DEFAULT])dnl\n])# _LT_HEADER_DLFCN\n\n\n# _LT_TRY_DLOPEN_SELF (ACTION-IF-TRUE, ACTION-IF-TRUE-W-USCORE,\n#                      ACTION-IF-FALSE, ACTION-IF-CROSS-COMPILING)\n# ----------------------------------------------------------------\nm4_defun([_LT_TRY_DLOPEN_SELF],\n[m4_require([_LT_HEADER_DLFCN])dnl\nif test yes = \"$cross_compiling\"; then :\n  [$4]\nelse\n  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n  lt_status=$lt_dlunknown\n  cat > conftest.$ac_ext <<_LT_EOF\n[#line $LINENO \"configure\"\n#include \"confdefs.h\"\n\n#if HAVE_DLFCN_H\n#include <dlfcn.h>\n#endif\n\n#include <stdio.h>\n\n#ifdef RTLD_GLOBAL\n#  define LT_DLGLOBAL\t\tRTLD_GLOBAL\n#else\n#  ifdef DL_GLOBAL\n#    define LT_DLGLOBAL\t\tDL_GLOBAL\n#  else\n#    define LT_DLGLOBAL\t\t0\n#  endif\n#endif\n\n/* We may have to define LT_DLLAZY_OR_NOW in the command line if we\n   find out it does not work in some platform. */\n#ifndef LT_DLLAZY_OR_NOW\n#  ifdef RTLD_LAZY\n#    define LT_DLLAZY_OR_NOW\t\tRTLD_LAZY\n#  else\n#    ifdef DL_LAZY\n#      define LT_DLLAZY_OR_NOW\t\tDL_LAZY\n#    else\n#      ifdef RTLD_NOW\n#        define LT_DLLAZY_OR_NOW\tRTLD_NOW\n#      else\n#        ifdef DL_NOW\n#          define LT_DLLAZY_OR_NOW\tDL_NOW\n#        else\n#          define LT_DLLAZY_OR_NOW\t0\n#        endif\n#      endif\n#    endif\n#  endif\n#endif\n\n/* When -fvisibility=hidden is used, assume the code has been annotated\n   correspondingly for the symbols needed.  */\n#if defined __GNUC__ && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))\nint fnord () __attribute__((visibility(\"default\")));\n#endif\n\nint fnord () { return 42; }\nint main ()\n{\n  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);\n  int status = $lt_dlunknown;\n\n  if (self)\n    {\n      if (dlsym (self,\"fnord\"))       status = $lt_dlno_uscore;\n      else\n        {\n\t  if (dlsym( self,\"_fnord\"))  status = $lt_dlneed_uscore;\n          else puts (dlerror ());\n\t}\n      /* dlclose (self); */\n    }\n  else\n    puts (dlerror ());\n\n  return status;\n}]\n_LT_EOF\n  if AC_TRY_EVAL(ac_link) && test -s \"conftest$ac_exeext\" 2>/dev/null; then\n    (./conftest; exit; ) >&AS_MESSAGE_LOG_FD 2>/dev/null\n    lt_status=$?\n    case x$lt_status in\n      x$lt_dlno_uscore) $1 ;;\n      x$lt_dlneed_uscore) $2 ;;\n      x$lt_dlunknown|x*) $3 ;;\n    esac\n  else :\n    # compilation failed\n    $3\n  fi\nfi\nrm -fr conftest*\n])# _LT_TRY_DLOPEN_SELF\n\n\n# LT_SYS_DLOPEN_SELF\n# ------------------\nAC_DEFUN([LT_SYS_DLOPEN_SELF],\n[m4_require([_LT_HEADER_DLFCN])dnl\nif test yes != \"$enable_dlopen\"; then\n  enable_dlopen=unknown\n  enable_dlopen_self=unknown\n  enable_dlopen_self_static=unknown\nelse\n  lt_cv_dlopen=no\n  lt_cv_dlopen_libs=\n\n  case $host_os in\n  beos*)\n    lt_cv_dlopen=load_add_on\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ;;\n\n  mingw* | pw32* | cegcc*)\n    lt_cv_dlopen=LoadLibrary\n    lt_cv_dlopen_libs=\n    ;;\n\n  cygwin*)\n    lt_cv_dlopen=dlopen\n    lt_cv_dlopen_libs=\n    ;;\n\n  darwin*)\n    # if libdl is installed we need to link against it\n    AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl],[\n    lt_cv_dlopen=dyld\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ])\n    ;;\n\n  tpf*)\n    # Don't try to run any link tests for TPF.  We know it's impossible\n    # because TPF is a cross-compiler, and we know how we open DSOs.\n    lt_cv_dlopen=dlopen\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=no\n    ;;\n\n  *)\n    AC_CHECK_FUNC([shl_load],\n\t  [lt_cv_dlopen=shl_load],\n      [AC_CHECK_LIB([dld], [shl_load],\n\t    [lt_cv_dlopen=shl_load lt_cv_dlopen_libs=-ldld],\n\t[AC_CHECK_FUNC([dlopen],\n\t      [lt_cv_dlopen=dlopen],\n\t  [AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl],\n\t    [AC_CHECK_LIB([svld], [dlopen],\n\t\t  [lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-lsvld],\n\t      [AC_CHECK_LIB([dld], [dld_link],\n\t\t    [lt_cv_dlopen=dld_link lt_cv_dlopen_libs=-ldld])\n\t      ])\n\t    ])\n\t  ])\n\t])\n      ])\n    ;;\n  esac\n\n  if test no = \"$lt_cv_dlopen\"; then\n    enable_dlopen=no\n  else\n    enable_dlopen=yes\n  fi\n\n  case $lt_cv_dlopen in\n  dlopen)\n    save_CPPFLAGS=$CPPFLAGS\n    test yes = \"$ac_cv_header_dlfcn_h\" && CPPFLAGS=\"$CPPFLAGS -DHAVE_DLFCN_H\"\n\n    save_LDFLAGS=$LDFLAGS\n    wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $export_dynamic_flag_spec\\\"\n\n    save_LIBS=$LIBS\n    LIBS=\"$lt_cv_dlopen_libs $LIBS\"\n\n    AC_CACHE_CHECK([whether a program can dlopen itself],\n\t  lt_cv_dlopen_self, [dnl\n\t  _LT_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self=yes, lt_cv_dlopen_self=yes,\n\t    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)\n    ])\n\n    if test yes = \"$lt_cv_dlopen_self\"; then\n      wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $lt_prog_compiler_static\\\"\n      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],\n\t  lt_cv_dlopen_self_static, [dnl\n\t  _LT_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self_static=yes, lt_cv_dlopen_self_static=yes,\n\t    lt_cv_dlopen_self_static=no,  lt_cv_dlopen_self_static=cross)\n      ])\n    fi\n\n    CPPFLAGS=$save_CPPFLAGS\n    LDFLAGS=$save_LDFLAGS\n    LIBS=$save_LIBS\n    ;;\n  esac\n\n  case $lt_cv_dlopen_self in\n  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;\n  *) enable_dlopen_self=unknown ;;\n  esac\n\n  case $lt_cv_dlopen_self_static in\n  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;\n  *) enable_dlopen_self_static=unknown ;;\n  esac\nfi\n_LT_DECL([dlopen_support], [enable_dlopen], [0],\n\t [Whether dlopen is supported])\n_LT_DECL([dlopen_self], [enable_dlopen_self], [0],\n\t [Whether dlopen of programs is supported])\n_LT_DECL([dlopen_self_static], [enable_dlopen_self_static], [0],\n\t [Whether dlopen of statically linked programs is supported])\n])# LT_SYS_DLOPEN_SELF\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [])\n\n\n# _LT_COMPILER_C_O([TAGNAME])\n# ---------------------------\n# Check to see if options -c and -o are simultaneously supported by compiler.\n# This macro does not hard code the compiler like AC_PROG_CC_C_O.\nm4_defun([_LT_COMPILER_C_O],\n[m4_require([_LT_DECL_SED])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_TAG_COMPILER])dnl\nAC_CACHE_CHECK([if $compiler supports -c -o file.$ac_objext],\n  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)],\n  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=no\n   $RM -r conftest 2>/dev/null\n   mkdir conftest\n   cd conftest\n   mkdir out\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n   lt_compiler_flag=\"-o out/conftest2.$ac_objext\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>out/conftest.err)\n   ac_status=$?\n   cat out/conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s out/conftest2.$ac_objext\n   then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' > out/conftest.exp\n     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2\n     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then\n       _LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n     fi\n   fi\n   chmod u+w . 2>&AS_MESSAGE_LOG_FD\n   $RM conftest*\n   # SGI C++ compiler will create directory out/ii_files/ for\n   # template instantiation\n   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files\n   $RM out/* && rmdir out\n   cd ..\n   $RM -r conftest\n   $RM conftest*\n])\n_LT_TAGDECL([compiler_c_o], [lt_cv_prog_compiler_c_o], [1],\n\t[Does compiler simultaneously support -c and -o options?])\n])# _LT_COMPILER_C_O\n\n\n# _LT_COMPILER_FILE_LOCKS([TAGNAME])\n# ----------------------------------\n# Check to see if we can do hard links to lock some files if needed\nm4_defun([_LT_COMPILER_FILE_LOCKS],\n[m4_require([_LT_ENABLE_LOCK])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\n_LT_COMPILER_C_O([$1])\n\nhard_links=nottested\nif test no = \"$_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)\" && test no != \"$need_locks\"; then\n  # do not overwrite the value of need_locks provided by the user\n  AC_MSG_CHECKING([if we can lock with hard links])\n  hard_links=yes\n  $RM conftest*\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  touch conftest.a\n  ln conftest.a conftest.b 2>&5 || hard_links=no\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  AC_MSG_RESULT([$hard_links])\n  if test no = \"$hard_links\"; then\n    AC_MSG_WARN(['$CC' does not support '-c -o', so 'make -j' may be unsafe])\n    need_locks=warn\n  fi\nelse\n  need_locks=no\nfi\n_LT_DECL([], [need_locks], [1], [Must we lock files when doing compilation?])\n])# _LT_COMPILER_FILE_LOCKS\n\n\n# _LT_CHECK_OBJDIR\n# ----------------\nm4_defun([_LT_CHECK_OBJDIR],\n[AC_CACHE_CHECK([for objdir], [lt_cv_objdir],\n[rm -f .libs 2>/dev/null\nmkdir .libs 2>/dev/null\nif test -d .libs; then\n  lt_cv_objdir=.libs\nelse\n  # MS-DOS does not allow filenames that begin with a dot.\n  lt_cv_objdir=_libs\nfi\nrmdir .libs 2>/dev/null])\nobjdir=$lt_cv_objdir\n_LT_DECL([], [objdir], [0],\n         [The name of the directory that contains temporary libtool files])dnl\nm4_pattern_allow([LT_OBJDIR])dnl\nAC_DEFINE_UNQUOTED([LT_OBJDIR], \"$lt_cv_objdir/\",\n  [Define to the sub-directory where libtool stores uninstalled libraries.])\n])# _LT_CHECK_OBJDIR\n\n\n# _LT_LINKER_HARDCODE_LIBPATH([TAGNAME])\n# --------------------------------------\n# Check hardcoding attributes.\nm4_defun([_LT_LINKER_HARDCODE_LIBPATH],\n[AC_MSG_CHECKING([how to hardcode library paths into programs])\n_LT_TAGVAR(hardcode_action, $1)=\nif test -n \"$_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\" ||\n   test -n \"$_LT_TAGVAR(runpath_var, $1)\" ||\n   test yes = \"$_LT_TAGVAR(hardcode_automatic, $1)\"; then\n\n  # We can hardcode non-existent directories.\n  if test no != \"$_LT_TAGVAR(hardcode_direct, $1)\" &&\n     # If the only mechanism to avoid hardcoding is shlibpath_var, we\n     # have to relink, otherwise we might link with an installed library\n     # when we should be linking with a yet-to-be-installed one\n     ## test no != \"$_LT_TAGVAR(hardcode_shlibpath_var, $1)\" &&\n     test no != \"$_LT_TAGVAR(hardcode_minus_L, $1)\"; then\n    # Linking always hardcodes the temporary library directory.\n    _LT_TAGVAR(hardcode_action, $1)=relink\n  else\n    # We can link without hardcoding, and we can hardcode nonexisting dirs.\n    _LT_TAGVAR(hardcode_action, $1)=immediate\n  fi\nelse\n  # We cannot hardcode anything, or else we can only hardcode existing\n  # directories.\n  _LT_TAGVAR(hardcode_action, $1)=unsupported\nfi\nAC_MSG_RESULT([$_LT_TAGVAR(hardcode_action, $1)])\n\nif test relink = \"$_LT_TAGVAR(hardcode_action, $1)\" ||\n   test yes = \"$_LT_TAGVAR(inherit_rpath, $1)\"; then\n  # Fast installation is not supported\n  enable_fast_install=no\nelif test yes = \"$shlibpath_overrides_runpath\" ||\n     test no = \"$enable_shared\"; then\n  # Fast installation is not necessary\n  enable_fast_install=needless\nfi\n_LT_TAGDECL([], [hardcode_action], [0],\n    [How to hardcode a shared library path into an executable])\n])# _LT_LINKER_HARDCODE_LIBPATH\n\n\n# _LT_CMD_STRIPLIB\n# ----------------\nm4_defun([_LT_CMD_STRIPLIB],\n[m4_require([_LT_DECL_EGREP])\nstriplib=\nold_striplib=\nAC_MSG_CHECKING([whether stripping libraries is possible])\nif test -n \"$STRIP\" && $STRIP -V 2>&1 | $GREP \"GNU strip\" >/dev/null; then\n  test -z \"$old_striplib\" && old_striplib=\"$STRIP --strip-debug\"\n  test -z \"$striplib\" && striplib=\"$STRIP --strip-unneeded\"\n  AC_MSG_RESULT([yes])\nelse\n# FIXME - insert some real tests, host_os isn't really good enough\n  case $host_os in\n  darwin*)\n    if test -n \"$STRIP\"; then\n      striplib=\"$STRIP -x\"\n      old_striplib=\"$STRIP -S\"\n      AC_MSG_RESULT([yes])\n    else\n      AC_MSG_RESULT([no])\n    fi\n    ;;\n  *)\n    AC_MSG_RESULT([no])\n    ;;\n  esac\nfi\n_LT_DECL([], [old_striplib], [1], [Commands to strip libraries])\n_LT_DECL([], [striplib], [1])\n])# _LT_CMD_STRIPLIB\n\n\n# _LT_PREPARE_MUNGE_PATH_LIST\n# ---------------------------\n# Make sure func_munge_path_list() is defined correctly.\nm4_defun([_LT_PREPARE_MUNGE_PATH_LIST],\n[[# func_munge_path_list VARIABLE PATH\n# -----------------------------------\n# VARIABLE is name of variable containing _space_ separated list of\n# directories to be munged by the contents of PATH, which is string\n# having a format:\n# \"DIR[:DIR]:\"\n#       string \"DIR[ DIR]\" will be prepended to VARIABLE\n# \":DIR[:DIR]\"\n#       string \"DIR[ DIR]\" will be appended to VARIABLE\n# \"DIRP[:DIRP]::[DIRA:]DIRA\"\n#       string \"DIRP[ DIRP]\" will be prepended to VARIABLE and string\n#       \"DIRA[ DIRA]\" will be appended to VARIABLE\n# \"DIR[:DIR]\"\n#       VARIABLE will be replaced by \"DIR[ DIR]\"\nfunc_munge_path_list ()\n{\n    case x@S|@2 in\n    x)\n        ;;\n    *:)\n        eval @S|@1=\\\"`$ECHO @S|@2 | $SED 's/:/ /g'` \\@S|@@S|@1\\\"\n        ;;\n    x:*)\n        eval @S|@1=\\\"\\@S|@@S|@1 `$ECHO @S|@2 | $SED 's/:/ /g'`\\\"\n        ;;\n    *::*)\n        eval @S|@1=\\\"\\@S|@@S|@1\\ `$ECHO @S|@2 | $SED -e 's/.*:://' -e 's/:/ /g'`\\\"\n        eval @S|@1=\\\"`$ECHO @S|@2 | $SED -e 's/::.*//' -e 's/:/ /g'`\\ \\@S|@@S|@1\\\"\n        ;;\n    *)\n        eval @S|@1=\\\"`$ECHO @S|@2 | $SED 's/:/ /g'`\\\"\n        ;;\n    esac\n}\n]])# _LT_PREPARE_PATH_LIST\n\n\n# _LT_SYS_DYNAMIC_LINKER([TAG])\n# -----------------------------\n# PORTME Fill in your ld.so characteristics\nm4_defun([_LT_SYS_DYNAMIC_LINKER],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_OBJDUMP])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_CHECK_SHELL_FEATURES])dnl\nm4_require([_LT_PREPARE_MUNGE_PATH_LIST])dnl\nAC_MSG_CHECKING([dynamic linker characteristics])\nm4_if([$1],\n\t[], [\nif test yes = \"$GCC\"; then\n  case $host_os in\n    darwin*) lt_awk_arg='/^libraries:/,/LR/' ;;\n    *) lt_awk_arg='/^libraries:/' ;;\n  esac\n  case $host_os in\n    mingw* | cegcc*) lt_sed_strip_eq='s|=\\([[A-Za-z]]:\\)|\\1|g' ;;\n    *) lt_sed_strip_eq='s|=/|/|g' ;;\n  esac\n  lt_search_path_spec=`$CC -print-search-dirs | awk $lt_awk_arg | $SED -e \"s/^libraries://\" -e $lt_sed_strip_eq`\n  case $lt_search_path_spec in\n  *\\;*)\n    # if the path contains \";\" then we assume it to be the separator\n    # otherwise default to the standard path separator (i.e. \":\") - it is\n    # assumed that no part of a normal pathname contains \";\" but that should\n    # okay in the real world where \";\" in dirpaths is itself problematic.\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED 's/;/ /g'`\n    ;;\n  *)\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED \"s/$PATH_SEPARATOR/ /g\"`\n    ;;\n  esac\n  # Ok, now we have the path, separated by spaces, we can step through it\n  # and add multilib dir if necessary...\n  lt_tmp_lt_search_path_spec=\n  lt_multi_os_dir=/`$CC $CPPFLAGS $CFLAGS $LDFLAGS -print-multi-os-directory 2>/dev/null`\n  # ...but if some path component already ends with the multilib dir we assume\n  # that all is fine and trust -print-search-dirs as is (GCC 4.2? or newer).\n  case \"$lt_multi_os_dir; $lt_search_path_spec \" in\n  \"/; \"* | \"/.; \"* | \"/./; \"* | *\"$lt_multi_os_dir \"* | *\"$lt_multi_os_dir/ \"*)\n    lt_multi_os_dir=\n    ;;\n  esac\n  for lt_sys_path in $lt_search_path_spec; do\n    if test -d \"$lt_sys_path$lt_multi_os_dir\"; then\n      lt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path$lt_multi_os_dir\"\n    elif test -n \"$lt_multi_os_dir\"; then\n      test -d \"$lt_sys_path\" && \\\n\tlt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path\"\n    fi\n  done\n  lt_search_path_spec=`$ECHO \"$lt_tmp_lt_search_path_spec\" | awk '\nBEGIN {RS = \" \"; FS = \"/|\\n\";} {\n  lt_foo = \"\";\n  lt_count = 0;\n  for (lt_i = NF; lt_i > 0; lt_i--) {\n    if ($lt_i != \"\" && $lt_i != \".\") {\n      if ($lt_i == \"..\") {\n        lt_count++;\n      } else {\n        if (lt_count == 0) {\n          lt_foo = \"/\" $lt_i lt_foo;\n        } else {\n          lt_count--;\n        }\n      }\n    }\n  }\n  if (lt_foo != \"\") { lt_freq[[lt_foo]]++; }\n  if (lt_freq[[lt_foo]] == 1) { print lt_foo; }\n}'`\n  # AWK program above erroneously prepends '/' to C:/dos/paths\n  # for these hosts.\n  case $host_os in\n    mingw* | cegcc*) lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" |\\\n      $SED 's|/\\([[A-Za-z]]:\\)|\\1|g'` ;;\n  esac\n  sys_lib_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $lt_NL2SP`\nelse\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\nfi])\nlibrary_names_spec=\nlibname_spec='lib$name'\nsoname_spec=\nshrext_cmds=.so\npostinstall_cmds=\npostuninstall_cmds=\nfinish_cmds=\nfinish_eval=\nshlibpath_var=\nshlibpath_overrides_runpath=unknown\nversion_type=none\ndynamic_linker=\"$host_os ld.so\"\nsys_lib_dlsearch_path_spec=\"/lib /usr/lib\"\nneed_lib_prefix=unknown\nhardcode_into_libs=no\n\n# when you set need_version to no, make sure it does not cause -set_version\n# flags to be left without arguments\nneed_version=unknown\n\nAC_ARG_VAR([LT_SYS_LIBRARY_PATH],\n[User-defined run-time library search path.])\n\ncase $host_os in\naix3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname.a'\n  shlibpath_var=LIBPATH\n\n  # AIX 3 has no versioning support, so we append a major version to the name.\n  soname_spec='$libname$release$shared_ext$major'\n  ;;\n\naix[[4-9]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  hardcode_into_libs=yes\n  if test ia64 = \"$host_cpu\"; then\n    # AIX 5 supports IA64\n    library_names_spec='$libname$release$shared_ext$major $libname$release$shared_ext$versuffix $libname$shared_ext'\n    shlibpath_var=LD_LIBRARY_PATH\n  else\n    # With GCC up to 2.95.x, collect2 would create an import file\n    # for dependence libraries.  The import file would start with\n    # the line '#! .'.  This would cause the generated library to\n    # depend on '.', always an invalid library.  This was fixed in\n    # development snapshots of GCC prior to 3.0.\n    case $host_os in\n      aix4 | aix4.[[01]] | aix4.[[01]].*)\n      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'\n\t   echo ' yes '\n\t   echo '#endif'; } | $CC -E - | $GREP yes > /dev/null; then\n\t:\n      else\n\tcan_build_shared=no\n      fi\n      ;;\n    esac\n    # Using Import Files as archive members, it is possible to support\n    # filename-based versioning of shared library archives on AIX. While\n    # this would work for both with and without runtime linking, it will\n    # prevent static linking of such archives. So we do filename-based\n    # shared library versioning with .so extension only, which is used\n    # when both runtime linking and shared linking is enabled.\n    # Unfortunately, runtime linking may impact performance, so we do\n    # not want this to be the default eventually. Also, we use the\n    # versioned .so libs for executables only if there is the -brtl\n    # linker flag in LDFLAGS as well, or --with-aix-soname=svr4 only.\n    # To allow for filename-based versioning support, we need to create\n    # libNAME.so.V as an archive file, containing:\n    # *) an Import File, referring to the versioned filename of the\n    #    archive as well as the shared archive member, telling the\n    #    bitwidth (32 or 64) of that shared object, and providing the\n    #    list of exported symbols of that shared object, eventually\n    #    decorated with the 'weak' keyword\n    # *) the shared object with the F_LOADONLY flag set, to really avoid\n    #    it being seen by the linker.\n    # At run time we better use the real file rather than another symlink,\n    # but for link time we create the symlink libNAME.so -> libNAME.so.V\n\n    case $with_aix_soname,$aix_use_runtimelinking in\n    # AIX (on Power*) has no versioning support, so currently we cannot hardcode correct\n    # soname into executable. Probably we can add versioning support to\n    # collect2, so additional links can be useful in future.\n    aix,yes) # traditional libtool\n      dynamic_linker='AIX unversionable lib.so'\n      # If using run time linking (on AIX 4.2 or later) use lib<name>.so\n      # instead of lib<name>.a to let people know that these are not\n      # typical AIX shared libraries.\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n      ;;\n    aix,no) # traditional AIX only\n      dynamic_linker='AIX lib.a[(]lib.so.V[)]'\n      # We preserve .a as extension for shared libraries through AIX4.2\n      # and later when we are not doing run time linking.\n      library_names_spec='$libname$release.a $libname.a'\n      soname_spec='$libname$release$shared_ext$major'\n      ;;\n    svr4,*) # full svr4 only\n      dynamic_linker=\"AIX lib.so.V[(]$shared_archive_member_spec.o[)]\"\n      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'\n      # We do not specify a path in Import Files, so LIBPATH fires.\n      shlibpath_overrides_runpath=yes\n      ;;\n    *,yes) # both, prefer svr4\n      dynamic_linker=\"AIX lib.so.V[(]$shared_archive_member_spec.o[)], lib.a[(]lib.so.V[)]\"\n      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'\n      # unpreferred sharedlib libNAME.a needs extra handling\n      postinstall_cmds='test -n \"$linkname\" || linkname=\"$realname\"~func_stripname \"\" \".so\" \"$linkname\"~$install_shared_prog \"$dir/$func_stripname_result.$libext\" \"$destdir/$func_stripname_result.$libext\"~test -z \"$tstripme\" || test -z \"$striplib\" || $striplib \"$destdir/$func_stripname_result.$libext\"'\n      postuninstall_cmds='for n in $library_names $old_library; do :; done~func_stripname \"\" \".so\" \"$n\"~test \"$func_stripname_result\" = \"$n\" || func_append rmfiles \" $odir/$func_stripname_result.$libext\"'\n      # We do not specify a path in Import Files, so LIBPATH fires.\n      shlibpath_overrides_runpath=yes\n      ;;\n    *,no) # both, prefer aix\n      dynamic_linker=\"AIX lib.a[(]lib.so.V[)], lib.so.V[(]$shared_archive_member_spec.o[)]\"\n      library_names_spec='$libname$release.a $libname.a'\n      soname_spec='$libname$release$shared_ext$major'\n      # unpreferred sharedlib libNAME.so.V and symlink libNAME.so need extra handling\n      postinstall_cmds='test -z \"$dlname\" || $install_shared_prog $dir/$dlname $destdir/$dlname~test -z \"$tstripme\" || test -z \"$striplib\" || $striplib $destdir/$dlname~test -n \"$linkname\" || linkname=$realname~func_stripname \"\" \".a\" \"$linkname\"~(cd \"$destdir\" && $LN_S -f $dlname $func_stripname_result.so)'\n      postuninstall_cmds='test -z \"$dlname\" || func_append rmfiles \" $odir/$dlname\"~for n in $old_library $library_names; do :; done~func_stripname \"\" \".a\" \"$n\"~func_append rmfiles \" $odir/$func_stripname_result.so\"'\n      ;;\n    esac\n    shlibpath_var=LIBPATH\n  fi\n  ;;\n\namigaos*)\n  case $host_cpu in\n  powerpc)\n    # Since July 2007 AmigaOS4 officially supports .so libraries.\n    # When compiling the executable, add -use-dynld -Lsobjs: to the compileline.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    ;;\n  m68k)\n    library_names_spec='$libname.ixlibrary $libname.a'\n    # Create ${libname}_ixlibrary.a entries in /sys/libs.\n    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`func_echo_all \"$lib\" | $SED '\\''s%^.*/\\([[^/]]*\\)\\.ixlibrary$%\\1%'\\''`; $RM /sys/libs/${libname}_ixlibrary.a; $show \"cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a\"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'\n    ;;\n  esac\n  ;;\n\nbeos*)\n  library_names_spec='$libname$shared_ext'\n  dynamic_linker=\"$host_os ld.so\"\n  shlibpath_var=LIBRARY_PATH\n  ;;\n\nbsdi[[45]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=\"/shlib /usr/lib /usr/local/lib\"\n  # the default ld.so.conf also contains /usr/contrib/lib and\n  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow\n  # libtool to hard-code these into programs\n  ;;\n\ncygwin* | mingw* | pw32* | cegcc*)\n  version_type=windows\n  shrext_cmds=.dll\n  need_version=no\n  need_lib_prefix=no\n\n  case $GCC,$cc_basename in\n  yes,*)\n    # gcc\n    library_names_spec='$libname.dll.a'\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\$file`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname~\n      chmod a+x \\$dldir/$dlname~\n      if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n        eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n      fi'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n\n    case $host_os in\n    cygwin*)\n      # Cygwin DLLs use 'cyg' prefix rather than 'lib'\n      soname_spec='`echo $libname | sed -e 's/^lib/cyg/'``echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\nm4_if([$1], [],[\n      sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/lib/w32api\"])\n      ;;\n    mingw* | cegcc*)\n      # MinGW DLLs use traditional 'lib' prefix\n      soname_spec='$libname`echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\n      ;;\n    pw32*)\n      # pw32 DLLs use 'pw' prefix rather than 'lib'\n      library_names_spec='`echo $libname | sed -e 's/^lib/pw/'``echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\n      ;;\n    esac\n    dynamic_linker='Win32 ld.exe'\n    ;;\n\n  *,cl*)\n    # Native MSVC\n    libname_spec='$name'\n    soname_spec='$libname`echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\n    library_names_spec='$libname.dll.lib'\n\n    case $build_os in\n    mingw*)\n      sys_lib_search_path_spec=\n      lt_save_ifs=$IFS\n      IFS=';'\n      for lt_path in $LIB\n      do\n        IFS=$lt_save_ifs\n        # Let DOS variable expansion print the short 8.3 style file name.\n        lt_path=`cd \"$lt_path\" 2>/dev/null && cmd //C \"for %i in (\".\") do @echo %~si\"`\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec $lt_path\"\n      done\n      IFS=$lt_save_ifs\n      # Convert to MSYS style.\n      sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | sed -e 's|\\\\\\\\|/|g' -e 's| \\\\([[a-zA-Z]]\\\\):| /\\\\1|g' -e 's|^ ||'`\n      ;;\n    cygwin*)\n      # Convert to unix form, then to dos form, then back to unix form\n      # but this time dos style (no spaces!) so that the unix form looks\n      # like /cygdrive/c/PROGRA~1:/cygdr...\n      sys_lib_search_path_spec=`cygpath --path --unix \"$LIB\"`\n      sys_lib_search_path_spec=`cygpath --path --dos \"$sys_lib_search_path_spec\" 2>/dev/null`\n      sys_lib_search_path_spec=`cygpath --path --unix \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      ;;\n    *)\n      sys_lib_search_path_spec=$LIB\n      if $ECHO \"$sys_lib_search_path_spec\" | [$GREP ';[c-zC-Z]:/' >/dev/null]; then\n        # It is most probably a Windows format PATH.\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e 's/;/ /g'`\n      else\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      fi\n      # FIXME: find the short name or the path components, as spaces are\n      # common. (e.g. \"Program Files\" -> \"PROGRA~1\")\n      ;;\n    esac\n\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\$file`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n    dynamic_linker='Win32 link.exe'\n    ;;\n\n  *)\n    # Assume MSVC wrapper\n    library_names_spec='$libname`echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext $libname.lib'\n    dynamic_linker='Win32 ld.exe'\n    ;;\n  esac\n  # FIXME: first we should search . and the directory the executable is in\n  shlibpath_var=PATH\n  ;;\n\ndarwin* | rhapsody*)\n  dynamic_linker=\"$host_os dyld\"\n  version_type=darwin\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$major$shared_ext $libname$shared_ext'\n  soname_spec='$libname$release$major$shared_ext'\n  shlibpath_overrides_runpath=yes\n  shlibpath_var=DYLD_LIBRARY_PATH\n  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'\nm4_if([$1], [],[\n  sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/local/lib\"])\n  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'\n  ;;\n\ndgux*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\nfreebsd* | dragonfly*)\n  # DragonFly does not have aout.  When/if they implement a new\n  # versioning mechanism, adjust this.\n  if test -x /usr/bin/objformat; then\n    objformat=`/usr/bin/objformat`\n  else\n    case $host_os in\n    freebsd[[23]].*) objformat=aout ;;\n    *) objformat=elf ;;\n    esac\n  fi\n  version_type=freebsd-$objformat\n  case $version_type in\n    freebsd-elf*)\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n      soname_spec='$libname$release$shared_ext$major'\n      need_version=no\n      need_lib_prefix=no\n      ;;\n    freebsd-*)\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n      need_version=yes\n      ;;\n  esac\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_os in\n  freebsd2.*)\n    shlibpath_overrides_runpath=yes\n    ;;\n  freebsd3.[[01]]* | freebsdelf3.[[01]]*)\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  freebsd3.[[2-9]]* | freebsdelf3.[[2-9]]* | \\\n  freebsd4.[[0-5]] | freebsdelf4.[[0-5]] | freebsd4.1.1 | freebsdelf4.1.1)\n    shlibpath_overrides_runpath=no\n    hardcode_into_libs=yes\n    ;;\n  *) # from 4.6 on, and DragonFly\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  esac\n  ;;\n\nhaiku*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  dynamic_linker=\"$host_os runtime_loader\"\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_dlsearch_path_spec='/boot/home/config/lib /boot/common/lib /boot/system/lib'\n  hardcode_into_libs=yes\n  ;;\n\nhpux9* | hpux10* | hpux11*)\n  # Give a soname corresponding to the major version so that dld.sl refuses to\n  # link against other versions.\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  case $host_cpu in\n  ia64*)\n    shrext_cmds='.so'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.so\"\n    shlibpath_var=LD_LIBRARY_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    if test 32 = \"$HPUX_IA64_MODE\"; then\n      sys_lib_search_path_spec=\"/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib\"\n      sys_lib_dlsearch_path_spec=/usr/lib/hpux32\n    else\n      sys_lib_search_path_spec=\"/usr/lib/hpux64 /usr/local/lib/hpux64\"\n      sys_lib_dlsearch_path_spec=/usr/lib/hpux64\n    fi\n    ;;\n  hppa*64*)\n    shrext_cmds='.sl'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    sys_lib_search_path_spec=\"/usr/lib/pa20_64 /usr/ccs/lib/pa20_64\"\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n  *)\n    shrext_cmds='.sl'\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=SHLIB_PATH\n    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    ;;\n  esac\n  # HP-UX runs *really* slowly unless shared libraries are mode 555, ...\n  postinstall_cmds='chmod 555 $lib'\n  # or fails outright, so override atomically:\n  install_override_mode=555\n  ;;\n\ninterix[[3-9]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $host_os in\n    nonstopux*) version_type=nonstopux ;;\n    *)\n\tif test yes = \"$lt_cv_prog_gnu_ld\"; then\n\t\tversion_type=linux # correct to gnu/linux during the next big refactor\n\telse\n\t\tversion_type=irix\n\tfi ;;\n  esac\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='$libname$release$shared_ext$major'\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$release$shared_ext $libname$shared_ext'\n  case $host_os in\n  irix5* | nonstopux*)\n    libsuff= shlibsuff=\n    ;;\n  *)\n    case $LD in # libtool.m4 will add one of these switches to LD\n    *-32|*\"-32 \"|*-melf32bsmip|*\"-melf32bsmip \")\n      libsuff= shlibsuff= libmagic=32-bit;;\n    *-n32|*\"-n32 \"|*-melf32bmipn32|*\"-melf32bmipn32 \")\n      libsuff=32 shlibsuff=N32 libmagic=N32;;\n    *-64|*\"-64 \"|*-melf64bmip|*\"-melf64bmip \")\n      libsuff=64 shlibsuff=64 libmagic=64-bit;;\n    *) libsuff= shlibsuff= libmagic=never-match;;\n    esac\n    ;;\n  esac\n  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_search_path_spec=\"/usr/lib$libsuff /lib$libsuff /usr/local/lib$libsuff\"\n  sys_lib_dlsearch_path_spec=\"/usr/lib$libsuff /lib$libsuff\"\n  hardcode_into_libs=yes\n  ;;\n\n# No shared lib support for Linux oldld, aout, or coff.\nlinux*oldld* | linux*aout* | linux*coff*)\n  dynamic_linker=no\n  ;;\n\nlinux*android*)\n  version_type=none # Android doesn't support versioned libraries.\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext'\n  soname_spec='$libname$release$shared_ext'\n  finish_cmds=\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  dynamic_linker='Android linker'\n  # Don't embed -rpath directories since the linker doesn't support them.\n  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -n $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n\n  # Some binutils ld are patched to set DT_RUNPATH\n  AC_CACHE_VAL([lt_cv_shlibpath_overrides_runpath],\n    [lt_cv_shlibpath_overrides_runpath=no\n    save_LDFLAGS=$LDFLAGS\n    save_libdir=$libdir\n    eval \"libdir=/foo; wl=\\\"$_LT_TAGVAR(lt_prog_compiler_wl, $1)\\\"; \\\n\t LDFLAGS=\\\"\\$LDFLAGS $_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\\\"\"\n    AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],\n      [AS_IF([ ($OBJDUMP -p conftest$ac_exeext) 2>/dev/null | grep \"RUNPATH.*$libdir\" >/dev/null],\n\t [lt_cv_shlibpath_overrides_runpath=yes])])\n    LDFLAGS=$save_LDFLAGS\n    libdir=$save_libdir\n    ])\n  shlibpath_overrides_runpath=$lt_cv_shlibpath_overrides_runpath\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  # Ideally, we could use ldconfig to report *all* directores which are\n  # searched for libraries, however this is still not possible.  Aside from not\n  # being certain /sbin/ldconfig is available, command\n  # 'ldconfig -N -X -v | grep ^/' on 64bit Fedora does not report /usr/lib64,\n  # even though it is searched at run-time.  Try to do the best guess by\n  # appending ld.so.conf contents (and includes) to the search path.\n  if test -f /etc/ld.so.conf; then\n    lt_ld_extra=`awk '/^include / { system(sprintf(\"cd /etc; cat %s 2>/dev/null\", \\[$]2)); skip = 1; } { if (!skip) print \\[$]0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;/^[\t ]*hwcap[\t ]/d;s/[:,\t]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;s/\"//g;/^$/d' | tr '\\n' ' '`\n    sys_lib_dlsearch_path_spec=\"/lib /usr/lib $lt_ld_extra\"\n  fi\n\n  # We used to test for /lib/ld.so.1 and disable shared libraries on\n  # powerpc, because MkLinux only supported shared libraries with the\n  # GNU dynamic linker.  Since this was broken with cross compilers,\n  # most powerpc-linux boxes support dynamic linking these days and\n  # people can always --disable-shared, the test was removed, and we\n  # assume the GNU/Linux dynamic linker is in use.\n  dynamic_linker='GNU/Linux ld.so'\n  ;;\n\nnetbsd*)\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n    finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n    dynamic_linker='NetBSD (a.out) ld.so'\n  else\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    dynamic_linker='NetBSD ld.elf_so'\n  fi\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  ;;\n\nnewsos6)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\n*nto* | *qnx*)\n  version_type=qnx\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='ldqnx.so'\n  ;;\n\nopenbsd* | bitrig*)\n  version_type=sunos\n  sys_lib_dlsearch_path_spec=/usr/lib\n  need_lib_prefix=no\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n    need_version=no\n  else\n    need_version=yes\n  fi\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\nos2*)\n  libname_spec='$name'\n  version_type=windows\n  shrext_cmds=.dll\n  need_version=no\n  need_lib_prefix=no\n  # OS/2 can only load a DLL with a base name of 8 characters or less.\n  soname_spec='`test -n \"$os2dllname\" && libname=\"$os2dllname\";\n    v=$($ECHO $release$versuffix | tr -d .-);\n    n=$($ECHO $libname | cut -b -$((8 - ${#v})) | tr . _);\n    $ECHO $n$v`$shared_ext'\n  library_names_spec='${libname}_dll.$libext'\n  dynamic_linker='OS/2 ld.exe'\n  shlibpath_var=BEGINLIBPATH\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n  postinstall_cmds='base_file=`basename \\$file`~\n    dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; $ECHO \\$dlname'\\''`~\n    dldir=$destdir/`dirname \\$dlpath`~\n    test -d \\$dldir || mkdir -p \\$dldir~\n    $install_prog $dir/$dlname \\$dldir/$dlname~\n    chmod a+x \\$dldir/$dlname~\n    if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n      eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n    fi'\n  postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; $ECHO \\$dlname'\\''`~\n    dlpath=$dir/\\$dldll~\n    $RM \\$dlpath'\n  ;;\n\nosf3* | osf4* | osf5*)\n  version_type=osf\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='$libname$release$shared_ext$major'\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib\"\n  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n  ;;\n\nrdos*)\n  dynamic_linker=no\n  ;;\n\nsolaris*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  # ldd complains unless libraries are executable\n  postinstall_cmds='chmod +x $lib'\n  ;;\n\nsunos4*)\n  version_type=sunos\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/usr/etc\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  if test yes = \"$with_gnu_ld\"; then\n    need_lib_prefix=no\n  fi\n  need_version=yes\n  ;;\n\nsysv4 | sysv4.3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_vendor in\n    sni)\n      shlibpath_overrides_runpath=no\n      need_lib_prefix=no\n      runpath_var=LD_RUN_PATH\n      ;;\n    siemens)\n      need_lib_prefix=no\n      ;;\n    motorola)\n      need_lib_prefix=no\n      need_version=no\n      shlibpath_overrides_runpath=no\n      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'\n      ;;\n  esac\n  ;;\n\nsysv4*MP*)\n  if test -d /usr/nec; then\n    version_type=linux # correct to gnu/linux during the next big refactor\n    library_names_spec='$libname$shared_ext.$versuffix $libname$shared_ext.$major $libname$shared_ext'\n    soname_spec='$libname$shared_ext.$major'\n    shlibpath_var=LD_LIBRARY_PATH\n  fi\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  version_type=sco\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  if test yes = \"$with_gnu_ld\"; then\n    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'\n  else\n    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'\n    case $host_os in\n      sco3.2v5*)\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec /lib\"\n\t;;\n    esac\n  fi\n  sys_lib_dlsearch_path_spec='/usr/lib'\n  ;;\n\ntpf*)\n  # TPF is a cross-target only.  Preferred cross-host = GNU/Linux.\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nuts4*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\n*)\n  dynamic_linker=no\n  ;;\nesac\nAC_MSG_RESULT([$dynamic_linker])\ntest no = \"$dynamic_linker\" && can_build_shared=no\n\nvariables_saved_for_relink=\"PATH $shlibpath_var $runpath_var\"\nif test yes = \"$GCC\"; then\n  variables_saved_for_relink=\"$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH\"\nfi\n\nif test set = \"${lt_cv_sys_lib_search_path_spec+set}\"; then\n  sys_lib_search_path_spec=$lt_cv_sys_lib_search_path_spec\nfi\n\nif test set = \"${lt_cv_sys_lib_dlsearch_path_spec+set}\"; then\n  sys_lib_dlsearch_path_spec=$lt_cv_sys_lib_dlsearch_path_spec\nfi\n\n# remember unaugmented sys_lib_dlsearch_path content for libtool script decls...\nconfigure_time_dlsearch_path=$sys_lib_dlsearch_path_spec\n\n# ... but it needs LT_SYS_LIBRARY_PATH munging for other configure-time code\nfunc_munge_path_list sys_lib_dlsearch_path_spec \"$LT_SYS_LIBRARY_PATH\"\n\n# to be used as default LT_SYS_LIBRARY_PATH value in generated libtool\nconfigure_time_lt_sys_library_path=$LT_SYS_LIBRARY_PATH\n\n_LT_DECL([], [variables_saved_for_relink], [1],\n    [Variables whose values should be saved in libtool wrapper scripts and\n    restored at link time])\n_LT_DECL([], [need_lib_prefix], [0],\n    [Do we need the \"lib\" prefix for modules?])\n_LT_DECL([], [need_version], [0], [Do we need a version for libraries?])\n_LT_DECL([], [version_type], [0], [Library versioning type])\n_LT_DECL([], [runpath_var], [0],  [Shared library runtime path variable])\n_LT_DECL([], [shlibpath_var], [0],[Shared library path variable])\n_LT_DECL([], [shlibpath_overrides_runpath], [0],\n    [Is shlibpath searched before the hard-coded library search path?])\n_LT_DECL([], [libname_spec], [1], [Format of library name prefix])\n_LT_DECL([], [library_names_spec], [1],\n    [[List of archive names.  First name is the real one, the rest are links.\n    The last name is the one that the linker finds with -lNAME]])\n_LT_DECL([], [soname_spec], [1],\n    [[The coded name of the library, if different from the real name]])\n_LT_DECL([], [install_override_mode], [1],\n    [Permission mode override for installation of shared libraries])\n_LT_DECL([], [postinstall_cmds], [2],\n    [Command to use after installation of a shared archive])\n_LT_DECL([], [postuninstall_cmds], [2],\n    [Command to use after uninstallation of a shared archive])\n_LT_DECL([], [finish_cmds], [2],\n    [Commands used to finish a libtool library installation in a directory])\n_LT_DECL([], [finish_eval], [1],\n    [[As \"finish_cmds\", except a single script fragment to be evaled but\n    not shown]])\n_LT_DECL([], [hardcode_into_libs], [0],\n    [Whether we should hardcode library paths into libraries])\n_LT_DECL([], [sys_lib_search_path_spec], [2],\n    [Compile-time system search path for libraries])\n_LT_DECL([sys_lib_dlsearch_path_spec], [configure_time_dlsearch_path], [2],\n    [Detected run-time system search path for libraries])\n_LT_DECL([], [configure_time_lt_sys_library_path], [2],\n    [Explicit LT_SYS_LIBRARY_PATH set during ./configure time])\n])# _LT_SYS_DYNAMIC_LINKER\n\n\n# _LT_PATH_TOOL_PREFIX(TOOL)\n# --------------------------\n# find a file program that can recognize shared library\nAC_DEFUN([_LT_PATH_TOOL_PREFIX],\n[m4_require([_LT_DECL_EGREP])dnl\nAC_MSG_CHECKING([for $1])\nAC_CACHE_VAL(lt_cv_path_MAGIC_CMD,\n[case $MAGIC_CMD in\n[[\\\\/*] |  ?:[\\\\/]*])\n  lt_cv_path_MAGIC_CMD=$MAGIC_CMD # Let the user override the test with a path.\n  ;;\n*)\n  lt_save_MAGIC_CMD=$MAGIC_CMD\n  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\ndnl $ac_dummy forces splitting on constant user-supplied paths.\ndnl POSIX.2 word splitting is done only on the output of word expansions,\ndnl not every word.  This closes a longstanding sh security hole.\n  ac_dummy=\"m4_if([$2], , $PATH, [$2])\"\n  for ac_dir in $ac_dummy; do\n    IFS=$lt_save_ifs\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$1\"; then\n      lt_cv_path_MAGIC_CMD=$ac_dir/\"$1\"\n      if test -n \"$file_magic_test_file\"; then\n\tcase $deplibs_check_method in\n\t\"file_magic \"*)\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"file_magic \\(.*\\)\"`\n\t  MAGIC_CMD=$lt_cv_path_MAGIC_CMD\n\t  if eval $file_magic_cmd \\$file_magic_test_file 2> /dev/null |\n\t    $EGREP \"$file_magic_regex\" > /dev/null; then\n\t    :\n\t  else\n\t    cat <<_LT_EOF 1>&2\n\n*** Warning: the command libtool uses to detect shared libraries,\n*** $file_magic_cmd, produces output that libtool cannot recognize.\n*** The result is that libtool may fail to recognize shared libraries\n*** as such.  This will affect the creation of libtool libraries that\n*** depend on shared libraries, but programs linked with such libtool\n*** libraries will work regardless of this problem.  Nevertheless, you\n*** may want to report the problem to your system manager and/or to\n*** bug-libtool@gnu.org\n\n_LT_EOF\n\t  fi ;;\n\tesac\n      fi\n      break\n    fi\n  done\n  IFS=$lt_save_ifs\n  MAGIC_CMD=$lt_save_MAGIC_CMD\n  ;;\nesac])\nMAGIC_CMD=$lt_cv_path_MAGIC_CMD\nif test -n \"$MAGIC_CMD\"; then\n  AC_MSG_RESULT($MAGIC_CMD)\nelse\n  AC_MSG_RESULT(no)\nfi\n_LT_DECL([], [MAGIC_CMD], [0],\n\t [Used to examine libraries when file_magic_cmd begins with \"file\"])dnl\n])# _LT_PATH_TOOL_PREFIX\n\n# Old name:\nAU_ALIAS([AC_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_PATH_TOOL_PREFIX], [])\n\n\n# _LT_PATH_MAGIC\n# --------------\n# find a file program that can recognize a shared library\nm4_defun([_LT_PATH_MAGIC],\n[_LT_PATH_TOOL_PREFIX(${ac_tool_prefix}file, /usr/bin$PATH_SEPARATOR$PATH)\nif test -z \"$lt_cv_path_MAGIC_CMD\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    _LT_PATH_TOOL_PREFIX(file, /usr/bin$PATH_SEPARATOR$PATH)\n  else\n    MAGIC_CMD=:\n  fi\nfi\n])# _LT_PATH_MAGIC\n\n\n# LT_PATH_LD\n# ----------\n# find the pathname to the GNU or non-GNU linker\nAC_DEFUN([LT_PATH_LD],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_PROG_ECHO_BACKSLASH])dnl\n\nAC_ARG_WITH([gnu-ld],\n    [AS_HELP_STRING([--with-gnu-ld],\n\t[assume the C compiler uses GNU ld @<:@default=no@:>@])],\n    [test no = \"$withval\" || with_gnu_ld=yes],\n    [with_gnu_ld=no])dnl\n\nac_prog=ld\nif test yes = \"$GCC\"; then\n  # Check if gcc -print-prog-name=ld gives a path.\n  AC_MSG_CHECKING([for ld used by $CC])\n  case $host in\n  *-*-mingw*)\n    # gcc leaves a trailing carriage return, which upsets mingw\n    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\\015'` ;;\n  *)\n    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;\n  esac\n  case $ac_prog in\n    # Accept absolute paths.\n    [[\\\\/]]* | ?:[[\\\\/]]*)\n      re_direlt='/[[^/]][[^/]]*/\\.\\./'\n      # Canonicalize the pathname of ld\n      ac_prog=`$ECHO \"$ac_prog\"| $SED 's%\\\\\\\\%/%g'`\n      while $ECHO \"$ac_prog\" | $GREP \"$re_direlt\" > /dev/null 2>&1; do\n\tac_prog=`$ECHO $ac_prog| $SED \"s%$re_direlt%/%\"`\n      done\n      test -z \"$LD\" && LD=$ac_prog\n      ;;\n  \"\")\n    # If it fails, then pretend we aren't using GCC.\n    ac_prog=ld\n    ;;\n  *)\n    # If it is relative, then search for the first ld in PATH.\n    with_gnu_ld=unknown\n    ;;\n  esac\nelif test yes = \"$with_gnu_ld\"; then\n  AC_MSG_CHECKING([for GNU ld])\nelse\n  AC_MSG_CHECKING([for non-GNU ld])\nfi\nAC_CACHE_VAL(lt_cv_path_LD,\n[if test -z \"$LD\"; then\n  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\n  for ac_dir in $PATH; do\n    IFS=$lt_save_ifs\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$ac_prog\" || test -f \"$ac_dir/$ac_prog$ac_exeext\"; then\n      lt_cv_path_LD=$ac_dir/$ac_prog\n      # Check to see if the program is GNU ld.  I'd rather use --version,\n      # but apparently some variants of GNU ld only accept -v.\n      # Break only if it was the GNU/non-GNU ld that we prefer.\n      case `\"$lt_cv_path_LD\" -v 2>&1 </dev/null` in\n      *GNU* | *'with BFD'*)\n\ttest no != \"$with_gnu_ld\" && break\n\t;;\n      *)\n\ttest yes != \"$with_gnu_ld\" && break\n\t;;\n      esac\n    fi\n  done\n  IFS=$lt_save_ifs\nelse\n  lt_cv_path_LD=$LD # Let the user override the test with a path.\nfi])\nLD=$lt_cv_path_LD\nif test -n \"$LD\"; then\n  AC_MSG_RESULT($LD)\nelse\n  AC_MSG_RESULT(no)\nfi\ntest -z \"$LD\" && AC_MSG_ERROR([no acceptable ld found in \\$PATH])\n_LT_PATH_LD_GNU\nAC_SUBST([LD])\n\n_LT_TAGDECL([], [LD], [1], [The linker used to build libraries])\n])# LT_PATH_LD\n\n# Old names:\nAU_ALIAS([AM_PROG_LD], [LT_PATH_LD])\nAU_ALIAS([AC_PROG_LD], [LT_PATH_LD])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_PROG_LD], [])\ndnl AC_DEFUN([AC_PROG_LD], [])\n\n\n# _LT_PATH_LD_GNU\n#- --------------\nm4_defun([_LT_PATH_LD_GNU],\n[AC_CACHE_CHECK([if the linker ($LD) is GNU ld], lt_cv_prog_gnu_ld,\n[# I'd rather use --version here, but apparently some GNU lds only accept -v.\ncase `$LD -v 2>&1 </dev/null` in\n*GNU* | *'with BFD'*)\n  lt_cv_prog_gnu_ld=yes\n  ;;\n*)\n  lt_cv_prog_gnu_ld=no\n  ;;\nesac])\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n])# _LT_PATH_LD_GNU\n\n\n# _LT_CMD_RELOAD\n# --------------\n# find reload flag for linker\n#   -- PORTME Some linkers may need a different reload flag.\nm4_defun([_LT_CMD_RELOAD],\n[AC_CACHE_CHECK([for $LD option to reload object files],\n  lt_cv_ld_reload_flag,\n  [lt_cv_ld_reload_flag='-r'])\nreload_flag=$lt_cv_ld_reload_flag\ncase $reload_flag in\n\"\" | \" \"*) ;;\n*) reload_flag=\" $reload_flag\" ;;\nesac\nreload_cmds='$LD$reload_flag -o $output$reload_objs'\ncase $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    if test yes != \"$GCC\"; then\n      reload_cmds=false\n    fi\n    ;;\n  darwin*)\n    if test yes = \"$GCC\"; then\n      reload_cmds='$LTCC $LTCFLAGS -nostdlib $wl-r -o $output$reload_objs'\n    else\n      reload_cmds='$LD$reload_flag -o $output$reload_objs'\n    fi\n    ;;\nesac\n_LT_TAGDECL([], [reload_flag], [1], [How to create reloadable object files])dnl\n_LT_TAGDECL([], [reload_cmds], [2])dnl\n])# _LT_CMD_RELOAD\n\n\n# _LT_PATH_DD\n# -----------\n# find a working dd\nm4_defun([_LT_PATH_DD],\n[AC_CACHE_CHECK([for a working dd], [ac_cv_path_lt_DD],\n[printf 0123456789abcdef0123456789abcdef >conftest.i\ncat conftest.i conftest.i >conftest2.i\n: ${lt_DD:=$DD}\nAC_PATH_PROGS_FEATURE_CHECK([lt_DD], [dd],\n[if \"$ac_path_lt_DD\" bs=32 count=1 <conftest2.i >conftest.out 2>/dev/null; then\n  cmp -s conftest.i conftest.out \\\n  && ac_cv_path_lt_DD=\"$ac_path_lt_DD\" ac_path_lt_DD_found=:\nfi])\nrm -f conftest.i conftest2.i conftest.out])\n])# _LT_PATH_DD\n\n\n# _LT_CMD_TRUNCATE\n# ----------------\n# find command to truncate a binary pipe\nm4_defun([_LT_CMD_TRUNCATE],\n[m4_require([_LT_PATH_DD])\nAC_CACHE_CHECK([how to truncate binary pipes], [lt_cv_truncate_bin],\n[printf 0123456789abcdef0123456789abcdef >conftest.i\ncat conftest.i conftest.i >conftest2.i\nlt_cv_truncate_bin=\nif \"$ac_cv_path_lt_DD\" bs=32 count=1 <conftest2.i >conftest.out 2>/dev/null; then\n  cmp -s conftest.i conftest.out \\\n  && lt_cv_truncate_bin=\"$ac_cv_path_lt_DD bs=4096 count=1\"\nfi\nrm -f conftest.i conftest2.i conftest.out\ntest -z \"$lt_cv_truncate_bin\" && lt_cv_truncate_bin=\"$SED -e 4q\"])\n_LT_DECL([lt_truncate_bin], [lt_cv_truncate_bin], [1],\n  [Command to truncate a binary pipe])\n])# _LT_CMD_TRUNCATE\n\n\n# _LT_CHECK_MAGIC_METHOD\n# ----------------------\n# how to check for library dependencies\n#  -- PORTME fill in with the dynamic library characteristics\nm4_defun([_LT_CHECK_MAGIC_METHOD],\n[m4_require([_LT_DECL_EGREP])\nm4_require([_LT_DECL_OBJDUMP])\nAC_CACHE_CHECK([how to recognize dependent libraries],\nlt_cv_deplibs_check_method,\n[lt_cv_file_magic_cmd='$MAGIC_CMD'\nlt_cv_file_magic_test_file=\nlt_cv_deplibs_check_method='unknown'\n# Need to set the preceding variable on all platforms that support\n# interlibrary dependencies.\n# 'none' -- dependencies not supported.\n# 'unknown' -- same as none, but documents that we really don't know.\n# 'pass_all' -- all dependencies passed with no checks.\n# 'test_compile' -- check by making test program.\n# 'file_magic [[regex]]' -- check by looking for files in library path\n# that responds to the $file_magic_cmd with a given extended regex.\n# If you have 'file' or equivalent on your system and you're not sure\n# whether 'pass_all' will *always* work, you probably want this one.\n\ncase $host_os in\naix[[4-9]]*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbeos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbsdi[[45]]*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib)'\n  lt_cv_file_magic_cmd='/usr/bin/file -L'\n  lt_cv_file_magic_test_file=/shlib/libc.so\n  ;;\n\ncygwin*)\n  # func_win32_libid is a shell function defined in ltmain.sh\n  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n  lt_cv_file_magic_cmd='func_win32_libid'\n  ;;\n\nmingw* | pw32*)\n  # Base MSYS/MinGW do not provide the 'file' command needed by\n  # func_win32_libid shell function, so use a weaker test based on 'objdump',\n  # unless we find 'file', for example because we are cross-compiling.\n  if ( file / ) >/dev/null 2>&1; then\n    lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n    lt_cv_file_magic_cmd='func_win32_libid'\n  else\n    # Keep this pattern in sync with the one in func_win32_libid.\n    lt_cv_deplibs_check_method='file_magic file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)'\n    lt_cv_file_magic_cmd='$OBJDUMP -f'\n  fi\n  ;;\n\ncegcc*)\n  # use the weaker test based on 'objdump'. See mingw*.\n  lt_cv_deplibs_check_method='file_magic file format pe-arm-.*little(.*architecture: arm)?'\n  lt_cv_file_magic_cmd='$OBJDUMP -f'\n  ;;\n\ndarwin* | rhapsody*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nfreebsd* | dragonfly*)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    case $host_cpu in\n    i*86 )\n      # Not sure whether the presence of OpenBSD here was a mistake.\n      # Let's accept both of them until this is cleared up.\n      lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD|DragonFly)/i[[3-9]]86 (compact )?demand paged shared library'\n      lt_cv_file_magic_cmd=/usr/bin/file\n      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`\n      ;;\n    esac\n  else\n    lt_cv_deplibs_check_method=pass_all\n  fi\n  ;;\n\nhaiku*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nhpux10.20* | hpux11*)\n  lt_cv_file_magic_cmd=/usr/bin/file\n  case $host_cpu in\n  ia64*)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|ELF-[[0-9]][[0-9]]) shared object file - IA64'\n    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so\n    ;;\n  hppa*64*)\n    [lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF[ -][0-9][0-9])(-bit)?( [LM]SB)? shared object( file)?[, -]* PA-RISC [0-9]\\.[0-9]']\n    lt_cv_file_magic_test_file=/usr/lib/pa20_64/libc.sl\n    ;;\n  *)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|PA-RISC[[0-9]]\\.[[0-9]]) shared library'\n    lt_cv_file_magic_test_file=/usr/lib/libc.sl\n    ;;\n  esac\n  ;;\n\ninterix[[3-9]]*)\n  # PIC code is broken on Interix 3.x, that's why |\\.a not |_pic\\.a here\n  lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|\\.a)$'\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $LD in\n  *-32|*\"-32 \") libmagic=32-bit;;\n  *-n32|*\"-n32 \") libmagic=N32;;\n  *-64|*\"-64 \") libmagic=64-bit;;\n  *) libmagic=never-match;;\n  esac\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nnetbsd*)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|_pic\\.a)$'\n  fi\n  ;;\n\nnewos6*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (executable|dynamic lib)'\n  lt_cv_file_magic_cmd=/usr/bin/file\n  lt_cv_file_magic_test_file=/usr/lib/libnls.so\n  ;;\n\n*nto* | *qnx*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nopenbsd* | bitrig*)\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|\\.so|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  fi\n  ;;\n\nosf3* | osf4* | osf5*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nrdos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsolaris*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv4 | sysv4.3*)\n  case $host_vendor in\n  motorola)\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib) M[[0-9]][[0-9]]* Version [[0-9]]'\n    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`\n    ;;\n  ncr)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  sequent)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB (shared object|dynamic lib )'\n    ;;\n  sni)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method=\"file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB dynamic lib\"\n    lt_cv_file_magic_test_file=/lib/libc.so\n    ;;\n  siemens)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  pc)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  esac\n  ;;\n\ntpf*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nos2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nesac\n])\n\nfile_magic_glob=\nwant_nocaseglob=no\nif test \"$build\" = \"$host\"; then\n  case $host_os in\n  mingw* | pw32*)\n    if ( shopt | grep nocaseglob ) >/dev/null 2>&1; then\n      want_nocaseglob=yes\n    else\n      file_magic_glob=`echo aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ | $SED -e \"s/\\(..\\)/s\\/[[\\1]]\\/[[\\1]]\\/g;/g\"`\n    fi\n    ;;\n  esac\nfi\n\nfile_magic_cmd=$lt_cv_file_magic_cmd\ndeplibs_check_method=$lt_cv_deplibs_check_method\ntest -z \"$deplibs_check_method\" && deplibs_check_method=unknown\n\n_LT_DECL([], [deplibs_check_method], [1],\n    [Method to check whether dependent libraries are shared objects])\n_LT_DECL([], [file_magic_cmd], [1],\n    [Command to use when deplibs_check_method = \"file_magic\"])\n_LT_DECL([], [file_magic_glob], [1],\n    [How to find potential files when deplibs_check_method = \"file_magic\"])\n_LT_DECL([], [want_nocaseglob], [1],\n    [Find potential files using nocaseglob when deplibs_check_method = \"file_magic\"])\n])# _LT_CHECK_MAGIC_METHOD\n\n\n# LT_PATH_NM\n# ----------\n# find the pathname to a BSD- or MS-compatible name lister\nAC_DEFUN([LT_PATH_NM],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_CACHE_CHECK([for BSD- or MS-compatible name lister (nm)], lt_cv_path_NM,\n[if test -n \"$NM\"; then\n  # Let the user override the test.\n  lt_cv_path_NM=$NM\nelse\n  lt_nm_to_check=${ac_tool_prefix}nm\n  if test -n \"$ac_tool_prefix\" && test \"$build\" = \"$host\"; then\n    lt_nm_to_check=\"$lt_nm_to_check nm\"\n  fi\n  for lt_tmp_nm in $lt_nm_to_check; do\n    lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\n    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do\n      IFS=$lt_save_ifs\n      test -z \"$ac_dir\" && ac_dir=.\n      tmp_nm=$ac_dir/$lt_tmp_nm\n      if test -f \"$tmp_nm\" || test -f \"$tmp_nm$ac_exeext\"; then\n\t# Check to see if the nm accepts a BSD-compat flag.\n\t# Adding the 'sed 1q' prevents false positives on HP-UX, which says:\n\t#   nm: unknown option \"B\" ignored\n\t# Tru64's nm complains that /dev/null is an invalid object file\n\t# MSYS converts /dev/null to NUL, MinGW nm treats NUL as empty\n\tcase $build_os in\n\tmingw*) lt_bad_file=conftest.nm/nofile ;;\n\t*) lt_bad_file=/dev/null ;;\n\tesac\n\tcase `\"$tmp_nm\" -B $lt_bad_file 2>&1 | sed '1q'` in\n\t*$lt_bad_file* | *'Invalid file or object type'*)\n\t  lt_cv_path_NM=\"$tmp_nm -B\"\n\t  break 2\n\t  ;;\n\t*)\n\t  case `\"$tmp_nm\" -p /dev/null 2>&1 | sed '1q'` in\n\t  */dev/null*)\n\t    lt_cv_path_NM=\"$tmp_nm -p\"\n\t    break 2\n\t    ;;\n\t  *)\n\t    lt_cv_path_NM=${lt_cv_path_NM=\"$tmp_nm\"} # keep the first match, but\n\t    continue # so that we can try to find one that supports BSD flags\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n      fi\n    done\n    IFS=$lt_save_ifs\n  done\n  : ${lt_cv_path_NM=no}\nfi])\nif test no != \"$lt_cv_path_NM\"; then\n  NM=$lt_cv_path_NM\nelse\n  # Didn't find any BSD compatible name lister, look for dumpbin.\n  if test -n \"$DUMPBIN\"; then :\n    # Let the user override the test.\n  else\n    AC_CHECK_TOOLS(DUMPBIN, [dumpbin \"link -dump\"], :)\n    case `$DUMPBIN -symbols -headers /dev/null 2>&1 | sed '1q'` in\n    *COFF*)\n      DUMPBIN=\"$DUMPBIN -symbols -headers\"\n      ;;\n    *)\n      DUMPBIN=:\n      ;;\n    esac\n  fi\n  AC_SUBST([DUMPBIN])\n  if test : != \"$DUMPBIN\"; then\n    NM=$DUMPBIN\n  fi\nfi\ntest -z \"$NM\" && NM=nm\nAC_SUBST([NM])\n_LT_DECL([], [NM], [1], [A BSD- or MS-compatible name lister])dnl\n\nAC_CACHE_CHECK([the name lister ($NM) interface], [lt_cv_nm_interface],\n  [lt_cv_nm_interface=\"BSD nm\"\n  echo \"int some_variable = 0;\" > conftest.$ac_ext\n  (eval echo \"\\\"\\$as_me:$LINENO: $ac_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n  (eval \"$ac_compile\" 2>conftest.err)\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  (eval echo \"\\\"\\$as_me:$LINENO: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&AS_MESSAGE_LOG_FD)\n  (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  (eval echo \"\\\"\\$as_me:$LINENO: output\\\"\" >&AS_MESSAGE_LOG_FD)\n  cat conftest.out >&AS_MESSAGE_LOG_FD\n  if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n    lt_cv_nm_interface=\"MS dumpbin\"\n  fi\n  rm -f conftest*])\n])# LT_PATH_NM\n\n# Old names:\nAU_ALIAS([AM_PROG_NM], [LT_PATH_NM])\nAU_ALIAS([AC_PROG_NM], [LT_PATH_NM])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_PROG_NM], [])\ndnl AC_DEFUN([AC_PROG_NM], [])\n\n# _LT_CHECK_SHAREDLIB_FROM_LINKLIB\n# --------------------------------\n# how to determine the name of the shared library\n# associated with a specific link library.\n#  -- PORTME fill in with the dynamic library characteristics\nm4_defun([_LT_CHECK_SHAREDLIB_FROM_LINKLIB],\n[m4_require([_LT_DECL_EGREP])\nm4_require([_LT_DECL_OBJDUMP])\nm4_require([_LT_DECL_DLLTOOL])\nAC_CACHE_CHECK([how to associate runtime and link libraries],\nlt_cv_sharedlib_from_linklib_cmd,\n[lt_cv_sharedlib_from_linklib_cmd='unknown'\n\ncase $host_os in\ncygwin* | mingw* | pw32* | cegcc*)\n  # two different shell functions defined in ltmain.sh;\n  # decide which one to use based on capabilities of $DLLTOOL\n  case `$DLLTOOL --help 2>&1` in\n  *--identify-strict*)\n    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib\n    ;;\n  *)\n    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib_fallback\n    ;;\n  esac\n  ;;\n*)\n  # fallback: assume linklib IS sharedlib\n  lt_cv_sharedlib_from_linklib_cmd=$ECHO\n  ;;\nesac\n])\nsharedlib_from_linklib_cmd=$lt_cv_sharedlib_from_linklib_cmd\ntest -z \"$sharedlib_from_linklib_cmd\" && sharedlib_from_linklib_cmd=$ECHO\n\n_LT_DECL([], [sharedlib_from_linklib_cmd], [1],\n    [Command to associate shared and link libraries])\n])# _LT_CHECK_SHAREDLIB_FROM_LINKLIB\n\n\n# _LT_PATH_MANIFEST_TOOL\n# ----------------------\n# locate the manifest tool\nm4_defun([_LT_PATH_MANIFEST_TOOL],\n[AC_CHECK_TOOL(MANIFEST_TOOL, mt, :)\ntest -z \"$MANIFEST_TOOL\" && MANIFEST_TOOL=mt\nAC_CACHE_CHECK([if $MANIFEST_TOOL is a manifest tool], [lt_cv_path_mainfest_tool],\n  [lt_cv_path_mainfest_tool=no\n  echo \"$as_me:$LINENO: $MANIFEST_TOOL '-?'\" >&AS_MESSAGE_LOG_FD\n  $MANIFEST_TOOL '-?' 2>conftest.err > conftest.out\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  if $GREP 'Manifest Tool' conftest.out > /dev/null; then\n    lt_cv_path_mainfest_tool=yes\n  fi\n  rm -f conftest*])\nif test yes != \"$lt_cv_path_mainfest_tool\"; then\n  MANIFEST_TOOL=:\nfi\n_LT_DECL([], [MANIFEST_TOOL], [1], [Manifest tool])dnl\n])# _LT_PATH_MANIFEST_TOOL\n\n\n# _LT_DLL_DEF_P([FILE])\n# ---------------------\n# True iff FILE is a Windows DLL '.def' file.\n# Keep in sync with func_dll_def_p in the libtool script\nAC_DEFUN([_LT_DLL_DEF_P],\n[dnl\n  test DEF = \"`$SED -n dnl\n    -e '\\''s/^[[\t ]]*//'\\'' dnl Strip leading whitespace\n    -e '\\''/^\\(;.*\\)*$/d'\\'' dnl      Delete empty lines and comments\n    -e '\\''s/^\\(EXPORTS\\|LIBRARY\\)\\([[\t ]].*\\)*$/DEF/p'\\'' dnl\n    -e q dnl                          Only consider the first \"real\" line\n    $1`\" dnl\n])# _LT_DLL_DEF_P\n\n\n# LT_LIB_M\n# --------\n# check for math library\nAC_DEFUN([LT_LIB_M],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nLIBM=\ncase $host in\n*-*-beos* | *-*-cegcc* | *-*-cygwin* | *-*-haiku* | *-*-pw32* | *-*-darwin*)\n  # These system don't have libm, or don't need it\n  ;;\n*-ncr-sysv4.3*)\n  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM=-lmw)\n  AC_CHECK_LIB(m, cos, LIBM=\"$LIBM -lm\")\n  ;;\n*)\n  AC_CHECK_LIB(m, cos, LIBM=-lm)\n  ;;\nesac\nAC_SUBST([LIBM])\n])# LT_LIB_M\n\n# Old name:\nAU_ALIAS([AC_CHECK_LIBM], [LT_LIB_M])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_CHECK_LIBM], [])\n\n\n# _LT_COMPILER_NO_RTTI([TAGNAME])\n# -------------------------------\nm4_defun([_LT_COMPILER_NO_RTTI],\n[m4_require([_LT_TAG_COMPILER])dnl\n\n_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n\nif test yes = \"$GCC\"; then\n  case $cc_basename in\n  nvcc*)\n    _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -Xcompiler -fno-builtin' ;;\n  *)\n    _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin' ;;\n  esac\n\n  _LT_COMPILER_OPTION([if $compiler supports -fno-rtti -fno-exceptions],\n    lt_cv_prog_compiler_rtti_exceptions,\n    [-fno-rtti -fno-exceptions], [],\n    [_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\"$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1) -fno-rtti -fno-exceptions\"])\nfi\n_LT_TAGDECL([no_builtin_flag], [lt_prog_compiler_no_builtin_flag], [1],\n\t[Compiler flag to turn off builtin functions])\n])# _LT_COMPILER_NO_RTTI\n\n\n# _LT_CMD_GLOBAL_SYMBOLS\n# ----------------------\nm4_defun([_LT_CMD_GLOBAL_SYMBOLS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_PROG_AWK])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\nAC_REQUIRE([LT_PATH_LD])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_TAG_COMPILER])dnl\n\n# Check for command to grab the raw symbol name followed by C symbol from nm.\nAC_MSG_CHECKING([command to parse $NM output from $compiler object])\nAC_CACHE_VAL([lt_cv_sys_global_symbol_pipe],\n[\n# These are sane defaults that work on at least a few old systems.\n# [They come from Ultrix.  What could be older than Ultrix?!! ;)]\n\n# Character class describing NM global symbol codes.\nsymcode='[[BCDEGRST]]'\n\n# Regexp to match symbols that can be accessed directly from C.\nsympat='\\([[_A-Za-z]][[_A-Za-z0-9]]*\\)'\n\n# Define system-specific variables.\ncase $host_os in\naix*)\n  symcode='[[BCDT]]'\n  ;;\ncygwin* | mingw* | pw32* | cegcc*)\n  symcode='[[ABCDGISTW]]'\n  ;;\nhpux*)\n  if test ia64 = \"$host_cpu\"; then\n    symcode='[[ABCDEGRST]]'\n  fi\n  ;;\nirix* | nonstopux*)\n  symcode='[[BCDEGRST]]'\n  ;;\nosf*)\n  symcode='[[BCDEGQRST]]'\n  ;;\nsolaris*)\n  symcode='[[BDRT]]'\n  ;;\nsco3.2v5*)\n  symcode='[[DT]]'\n  ;;\nsysv4.2uw2*)\n  symcode='[[DT]]'\n  ;;\nsysv5* | sco5v6* | unixware* | OpenUNIX*)\n  symcode='[[ABDT]]'\n  ;;\nsysv4)\n  symcode='[[DFNSTU]]'\n  ;;\nesac\n\n# If we're using GNU nm, then use its standard symbol codes.\ncase `$NM -V 2>&1` in\n*GNU* | *'with BFD'*)\n  symcode='[[ABCDGIRSTW]]' ;;\nesac\n\nif test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n  # Gets list of data symbols to import.\n  lt_cv_sys_global_symbol_to_import=\"sed -n -e 's/^I .* \\(.*\\)$/\\1/p'\"\n  # Adjust the below global symbol transforms to fixup imported variables.\n  lt_cdecl_hook=\" -e 's/^I .* \\(.*\\)$/extern __declspec(dllimport) char \\1;/p'\"\n  lt_c_name_hook=\" -e 's/^I .* \\(.*\\)$/  {\\\"\\1\\\", (void *) 0},/p'\"\n  lt_c_name_lib_hook=\"\\\n  -e 's/^I .* \\(lib.*\\)$/  {\\\"\\1\\\", (void *) 0},/p'\\\n  -e 's/^I .* \\(.*\\)$/  {\\\"lib\\1\\\", (void *) 0},/p'\"\nelse\n  # Disable hooks by default.\n  lt_cv_sys_global_symbol_to_import=\n  lt_cdecl_hook=\n  lt_c_name_hook=\n  lt_c_name_lib_hook=\nfi\n\n# Transform an extracted symbol line into a proper C declaration.\n# Some systems (esp. on ia64) link data and code symbols differently,\n# so use this general approach.\nlt_cv_sys_global_symbol_to_cdecl=\"sed -n\"\\\n$lt_cdecl_hook\\\n\" -e 's/^T .* \\(.*\\)$/extern int \\1();/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/extern char \\1;/p'\"\n\n# Transform an extracted symbol line into symbol name and symbol address\nlt_cv_sys_global_symbol_to_c_name_address=\"sed -n\"\\\n$lt_c_name_hook\\\n\" -e 's/^: \\(.*\\) .*$/  {\\\"\\1\\\", (void *) 0},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/p'\"\n\n# Transform an extracted symbol line into symbol name with lib prefix and\n# symbol address.\nlt_cv_sys_global_symbol_to_c_name_address_lib_prefix=\"sed -n\"\\\n$lt_c_name_lib_hook\\\n\" -e 's/^: \\(.*\\) .*$/  {\\\"\\1\\\", (void *) 0},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(lib.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/  {\\\"lib\\1\\\", (void *) \\&\\1},/p'\"\n\n# Handle CRLF in mingw tool chain\nopt_cr=\ncase $build_os in\nmingw*)\n  opt_cr=`$ECHO 'x\\{0,1\\}' | tr x '\\015'` # option cr in regexp\n  ;;\nesac\n\n# Try without a prefix underscore, then with it.\nfor ac_symprfx in \"\" \"_\"; do\n\n  # Transform symcode, sympat, and symprfx into a raw symbol and a C symbol.\n  symxfrm=\"\\\\1 $ac_symprfx\\\\2 \\\\2\"\n\n  # Write the raw and C identifiers.\n  if test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n    # Fake it for dumpbin and say T for any non-static function,\n    # D for any global variable and I for any imported variable.\n    # Also find C++ and __fastcall symbols from MSVC++,\n    # which start with @ or ?.\n    lt_cv_sys_global_symbol_pipe=\"$AWK ['\"\\\n\"     {last_section=section; section=\\$ 3};\"\\\n\"     /^COFF SYMBOL TABLE/{for(i in hide) delete hide[i]};\"\\\n\"     /Section length .*#relocs.*(pick any)/{hide[last_section]=1};\"\\\n\"     /^ *Symbol name *: /{split(\\$ 0,sn,\\\":\\\"); si=substr(sn[2],2)};\"\\\n\"     /^ *Type *: code/{print \\\"T\\\",si,substr(si,length(prfx))};\"\\\n\"     /^ *Type *: data/{print \\\"I\\\",si,substr(si,length(prfx))};\"\\\n\"     \\$ 0!~/External *\\|/{next};\"\\\n\"     / 0+ UNDEF /{next}; / UNDEF \\([^|]\\)*()/{next};\"\\\n\"     {if(hide[section]) next};\"\\\n\"     {f=\\\"D\\\"}; \\$ 0~/\\(\\).*\\|/{f=\\\"T\\\"};\"\\\n\"     {split(\\$ 0,a,/\\||\\r/); split(a[2],s)};\"\\\n\"     s[1]~/^[@?]/{print f,s[1],s[1]; next};\"\\\n\"     s[1]~prfx {split(s[1],t,\\\"@\\\"); print f,t[1],substr(t[1],length(prfx))}\"\\\n\"     ' prfx=^$ac_symprfx]\"\n  else\n    lt_cv_sys_global_symbol_pipe=\"sed -n -e 's/^.*[[\t ]]\\($symcode$symcode*\\)[[\t ]][[\t ]]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'\"\n  fi\n  lt_cv_sys_global_symbol_pipe=\"$lt_cv_sys_global_symbol_pipe | sed '/ __gnu_lto/d'\"\n\n  # Check to see that the pipe works correctly.\n  pipe_works=no\n\n  rm -f conftest*\n  cat > conftest.$ac_ext <<_LT_EOF\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nchar nm_test_var;\nvoid nm_test_func(void);\nvoid nm_test_func(void){}\n#ifdef __cplusplus\n}\n#endif\nint main(){nm_test_var='a';nm_test_func();return(0);}\n_LT_EOF\n\n  if AC_TRY_EVAL(ac_compile); then\n    # Now try to grab the symbols.\n    nlist=conftest.nm\n    if AC_TRY_EVAL(NM conftest.$ac_objext \\| \"$lt_cv_sys_global_symbol_pipe\" \\> $nlist) && test -s \"$nlist\"; then\n      # Try sorting and uniquifying the output.\n      if sort \"$nlist\" | uniq > \"$nlist\"T; then\n\tmv -f \"$nlist\"T \"$nlist\"\n      else\n\trm -f \"$nlist\"T\n      fi\n\n      # Make sure that we snagged all the symbols we need.\n      if $GREP ' nm_test_var$' \"$nlist\" >/dev/null; then\n\tif $GREP ' nm_test_func$' \"$nlist\" >/dev/null; then\n\t  cat <<_LT_EOF > conftest.$ac_ext\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined _WIN32 || defined __CYGWIN__ || defined _WIN32_WCE\n/* DATA imports from DLLs on WIN32 can't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT@&t@_DLSYM_CONST\n#elif defined __osf__\n/* This system does not cope well with relocations in const data.  */\n# define LT@&t@_DLSYM_CONST\n#else\n# define LT@&t@_DLSYM_CONST const\n#endif\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n_LT_EOF\n\t  # Now generate the symbol file.\n\t  eval \"$lt_cv_sys_global_symbol_to_cdecl\"' < \"$nlist\" | $GREP -v main >> conftest.$ac_ext'\n\n\t  cat <<_LT_EOF >> conftest.$ac_ext\n\n/* The mapping between symbol names and symbols.  */\nLT@&t@_DLSYM_CONST struct {\n  const char *name;\n  void       *address;\n}\nlt__PROGRAM__LTX_preloaded_symbols[[]] =\n{\n  { \"@PROGRAM@\", (void *) 0 },\n_LT_EOF\n\t  $SED \"s/^$symcode$symcode* .* \\(.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/\" < \"$nlist\" | $GREP -v main >> conftest.$ac_ext\n\t  cat <<\\_LT_EOF >> conftest.$ac_ext\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt__PROGRAM__LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\n_LT_EOF\n\t  # Now try linking the two files.\n\t  mv conftest.$ac_objext conftstm.$ac_objext\n\t  lt_globsym_save_LIBS=$LIBS\n\t  lt_globsym_save_CFLAGS=$CFLAGS\n\t  LIBS=conftstm.$ac_objext\n\t  CFLAGS=\"$CFLAGS$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)\"\n\t  if AC_TRY_EVAL(ac_link) && test -s conftest$ac_exeext; then\n\t    pipe_works=yes\n\t  fi\n\t  LIBS=$lt_globsym_save_LIBS\n\t  CFLAGS=$lt_globsym_save_CFLAGS\n\telse\n\t  echo \"cannot find nm_test_func in $nlist\" >&AS_MESSAGE_LOG_FD\n\tfi\n      else\n\techo \"cannot find nm_test_var in $nlist\" >&AS_MESSAGE_LOG_FD\n      fi\n    else\n      echo \"cannot run $lt_cv_sys_global_symbol_pipe\" >&AS_MESSAGE_LOG_FD\n    fi\n  else\n    echo \"$progname: failed program was:\" >&AS_MESSAGE_LOG_FD\n    cat conftest.$ac_ext >&5\n  fi\n  rm -rf conftest* conftst*\n\n  # Do not use the global_symbol_pipe unless it works.\n  if test yes = \"$pipe_works\"; then\n    break\n  else\n    lt_cv_sys_global_symbol_pipe=\n  fi\ndone\n])\nif test -z \"$lt_cv_sys_global_symbol_pipe\"; then\n  lt_cv_sys_global_symbol_to_cdecl=\nfi\nif test -z \"$lt_cv_sys_global_symbol_pipe$lt_cv_sys_global_symbol_to_cdecl\"; then\n  AC_MSG_RESULT(failed)\nelse\n  AC_MSG_RESULT(ok)\nfi\n\n# Response file support.\nif test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n  nm_file_list_spec='@'\nelif $NM --help 2>/dev/null | grep '[[@]]FILE' >/dev/null; then\n  nm_file_list_spec='@'\nfi\n\n_LT_DECL([global_symbol_pipe], [lt_cv_sys_global_symbol_pipe], [1],\n    [Take the output of nm and produce a listing of raw symbols and C names])\n_LT_DECL([global_symbol_to_cdecl], [lt_cv_sys_global_symbol_to_cdecl], [1],\n    [Transform the output of nm in a proper C declaration])\n_LT_DECL([global_symbol_to_import], [lt_cv_sys_global_symbol_to_import], [1],\n    [Transform the output of nm into a list of symbols to manually relocate])\n_LT_DECL([global_symbol_to_c_name_address],\n    [lt_cv_sys_global_symbol_to_c_name_address], [1],\n    [Transform the output of nm in a C name address pair])\n_LT_DECL([global_symbol_to_c_name_address_lib_prefix],\n    [lt_cv_sys_global_symbol_to_c_name_address_lib_prefix], [1],\n    [Transform the output of nm in a C name address pair when lib prefix is needed])\n_LT_DECL([nm_interface], [lt_cv_nm_interface], [1],\n    [The name lister interface])\n_LT_DECL([], [nm_file_list_spec], [1],\n    [Specify filename containing input files for $NM])\n]) # _LT_CMD_GLOBAL_SYMBOLS\n\n\n# _LT_COMPILER_PIC([TAGNAME])\n# ---------------------------\nm4_defun([_LT_COMPILER_PIC],\n[m4_require([_LT_TAG_COMPILER])dnl\n_LT_TAGVAR(lt_prog_compiler_wl, $1)=\n_LT_TAGVAR(lt_prog_compiler_pic, $1)=\n_LT_TAGVAR(lt_prog_compiler_static, $1)=\n\nm4_if([$1], [CXX], [\n  # C++ specific cases for pic, static, wl, etc.\n  if test yes = \"$GXX\"; then\n    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n    aix*)\n      # All AIX code is PIC.\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the '-m68020' flag to GCC prevents building anything better,\n            # like '-m68040'.\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n    mingw* | cygwin* | os2* | pw32* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      case $host_os in\n      os2*)\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-static'\n\t;;\n      esac\n      ;;\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n    *djgpp*)\n      # DJGPP does not support shared libraries at all\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n      ;;\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)=\n      ;;\n    interix[[3-9]]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n    *qnx* | *nto*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n    *)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n  else\n    case $host_os in\n      aix[[4-9]]*)\n\t# All AIX code is PIC.\n\tif test ia64 = \"$host_cpu\"; then\n\t  # AIX 5 now supports IA64 processor\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\telse\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n\tfi\n\t;;\n      chorus*)\n\tcase $cc_basename in\n\tcxch68*)\n\t  # Green Hills C++ Compiler\n\t  # _LT_TAGVAR(lt_prog_compiler_static, $1)=\"--no_auto_instantiation -u __main -u __premain -u _abort -r $COOL_DIR/lib/libOrb.a $MVME_DIR/lib/CC/libC.a $MVME_DIR/lib/classix/libcx.s.a\"\n\t  ;;\n\tesac\n\t;;\n      mingw* | cygwin* | os2* | pw32* | cegcc*)\n\t# This hack is so that the source file can tell whether it is being\n\t# built for inclusion in a dll (and should export symbols for example).\n\tm4_if([$1], [GCJ], [],\n\t  [_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n\t;;\n      dgux*)\n\tcase $cc_basename in\n\t  ec++*)\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  ghcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      freebsd* | dragonfly*)\n\t# FreeBSD uses GNU C++\n\t;;\n      hpux9* | hpux10* | hpux11*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-a ${wl}archive'\n\t    if test ia64 != \"$host_cpu\"; then\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t    fi\n\t    ;;\n\t  aCC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-a ${wl}archive'\n\t    case $host_cpu in\n\t    hppa*64*|ia64*)\n\t      # +Z the default\n\t      ;;\n\t    *)\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t      ;;\n\t    esac\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      interix*)\n\t# This is c89, which is MS Visual C++ (no shared libs)\n\t# Anyone wants to do a port?\n\t;;\n      irix5* | irix6* | nonstopux*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    # CC pic flag -KPIC is the default.\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    # KAI C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    ;;\n\t  ecpc* )\n\t    # old Intel C++ for x86_64, which still supported -KPIC.\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  icpc* )\n\t    # Intel C++, used to be incompatible with GCC.\n\t    # ICC 10 doesn't accept -KPIC any more.\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  pgCC* | pgcpp*)\n\t    # Portland Group C++ compiler\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  xlc* | xlC* | bgxl[[cC]]* | mpixl[[cC]]*)\n\t    # IBM XL 8.0, 9.0 on PPC and BlueGene\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n      lynxos*)\n\t;;\n      m88k*)\n\t;;\n      mvs*)\n\tcase $cc_basename in\n\t  cxx*)\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-W c,exportall'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      netbsd*)\n\t;;\n      *qnx* | *nto*)\n        # QNX uses GNU C++, but need to define -shared option too, otherwise\n        # it will coredump.\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n        ;;\n      osf3* | osf4* | osf5*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    ;;\n\t  RCC*)\n\t    # Rational C++ 2.4.1\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  cxx*)\n\t    # Digital/Compaq C++\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      psos*)\n\t;;\n      solaris*)\n\tcase $cc_basename in\n\t  CC* | sunCC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t    ;;\n\t  gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sunos4*)\n\tcase $cc_basename in\n\t  CC*)\n\t    # Sun C++ 4.x\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  lcc*)\n\t    # Lucid\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\tesac\n\t;;\n      tandem*)\n\tcase $cc_basename in\n\t  NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      vxworks*)\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n\t;;\n    esac\n  fi\n],\n[\n  if test yes = \"$GCC\"; then\n    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n      aix*)\n      # All AIX code is PIC.\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the '-m68020' flag to GCC prevents building anything better,\n            # like '-m68040'.\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      case $host_os in\n      os2*)\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-static'\n\t;;\n      esac\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)=\n      ;;\n\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n\n    interix[[3-9]]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n\n    msdosdjgpp*)\n      # Just because we use GCC doesn't mean we suddenly get shared libraries\n      # on systems that don't support them.\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      enable_shared=no\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n\n    *)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n\n    case $cc_basename in\n    nvcc*) # Cuda Compiler Driver 2.2\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Xlinker '\n      if test -n \"$_LT_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)=\"-Xcompiler $_LT_TAGVAR(lt_prog_compiler_pic, $1)\"\n      fi\n      ;;\n    esac\n  else\n    # PORTME Check for flag to pass linker flags through the system compiler.\n    case $host_os in\n    aix*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      else\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n      fi\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      case $cc_basename in\n      nagfor*)\n        # NAG Fortran compiler\n        _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,-Wl,,'\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n        _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n        ;;\n      esac\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      case $host_os in\n      os2*)\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-static'\n\t;;\n      esac\n      ;;\n\n    hpux9* | hpux10* | hpux11*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but\n      # not for PA HP-UX.\n      case $host_cpu in\n      hppa*64*|ia64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t;;\n      esac\n      # Is there a better lt_prog_compiler_static that works with the bundled CC?\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-a ${wl}archive'\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC (with -KPIC) is the default.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n      case $cc_basename in\n      # old Intel for x86_64, which still supported -KPIC.\n      ecc*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      # icc used to be incompatible with GCC.\n      # ICC 10 doesn't accept -KPIC any more.\n      icc* | ifort*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      # Lahey Fortran 8.1.\n      lf95*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='--shared'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='--static'\n\t;;\n      nagfor*)\n\t# NAG Fortran compiler\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,-Wl,,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t;;\n      tcc*)\n\t# Fabrice Bellard et al's Tiny C Compiler\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t;;\n      pgcc* | pgf77* | pgf90* | pgf95* | pgfortran*)\n        # Portland Group compilers (*not* the Pentium gcc compiler,\n\t# which looks to be a dead project)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n        ;;\n      ccc*)\n        _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n        # All Alpha code is PIC.\n        _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n        ;;\n      xl* | bgxl* | bgf* | mpixl*)\n\t# IBM XL C 8.0/Fortran 10.1, 11.1 on PPC and BlueGene\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'\n\t;;\n      *)\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ Ceres\\ Fortran* | *Sun*Fortran*\\ [[1-7]].* | *Sun*Fortran*\\ 8.[[0-3]]*)\n\t  # Sun Fortran 8.3 passes all unrecognized flags to the linker\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)=''\n\t  ;;\n\t*Sun\\ F* | *Sun*Fortran*)\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t  ;;\n\t*Sun\\ C*)\n\t  # Sun C 5.9\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  ;;\n        *Intel*\\ [[CF]]*Compiler*)\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t  ;;\n\t*Portland\\ Group*)\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  ;;\n\tesac\n\t;;\n      esac\n      ;;\n\n    newsos6)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n\n    osf3* | osf4* | osf5*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # All OSF/1 code is PIC.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    rdos*)\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    solaris*)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      case $cc_basename in\n      f77* | f90* | f95* | sunf77* | sunf90* | sunf95*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld ';;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,';;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4 | sysv4.2uw2* | sysv4.3*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-Kconform_pic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    unicos*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n\n    uts4*)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *)\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n    esac\n  fi\n])\ncase $host_os in\n  # For platforms that do not support PIC, -DPIC is meaningless:\n  *djgpp*)\n    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n    ;;\n  *)\n    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\"$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])\"\n    ;;\nesac\n\nAC_CACHE_CHECK([for $compiler option to produce PIC],\n  [_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)],\n  [_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)=$_LT_TAGVAR(lt_prog_compiler_pic, $1)])\n_LT_TAGVAR(lt_prog_compiler_pic, $1)=$_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)\n\n#\n# Check to make sure the PIC flag actually works.\n#\nif test -n \"$_LT_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n  _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, $1) works],\n    [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, $1)],\n    [$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])], [],\n    [case $_LT_TAGVAR(lt_prog_compiler_pic, $1) in\n     \"\" | \" \"*) ;;\n     *) _LT_TAGVAR(lt_prog_compiler_pic, $1)=\" $_LT_TAGVAR(lt_prog_compiler_pic, $1)\" ;;\n     esac],\n    [_LT_TAGVAR(lt_prog_compiler_pic, $1)=\n     _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no])\nfi\n_LT_TAGDECL([pic_flag], [lt_prog_compiler_pic], [1],\n\t[Additional compiler flags for building library objects])\n\n_LT_TAGDECL([wl], [lt_prog_compiler_wl], [1],\n\t[How to pass a linker flag through the compiler])\n#\n# Check to make sure the static flag actually works.\n#\nwl=$_LT_TAGVAR(lt_prog_compiler_wl, $1) eval lt_tmp_static_flag=\\\"$_LT_TAGVAR(lt_prog_compiler_static, $1)\\\"\n_LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works],\n  _LT_TAGVAR(lt_cv_prog_compiler_static_works, $1),\n  $lt_tmp_static_flag,\n  [],\n  [_LT_TAGVAR(lt_prog_compiler_static, $1)=])\n_LT_TAGDECL([link_static_flag], [lt_prog_compiler_static], [1],\n\t[Compiler flag to prevent dynamic linking])\n])# _LT_COMPILER_PIC\n\n\n# _LT_LINKER_SHLIBS([TAGNAME])\n# ----------------------------\n# See if the linker supports building shared libraries.\nm4_defun([_LT_LINKER_SHLIBS],\n[AC_REQUIRE([LT_PATH_LD])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\nm4_require([_LT_PATH_MANIFEST_TOOL])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nm4_require([_LT_TAG_COMPILER])dnl\nAC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\nm4_if([$1], [CXX], [\n  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']\n  case $host_os in\n  aix[[4-9]]*)\n    # If we're using GNU nm, then we don't want the \"-C\" option.\n    # -C means demangle to GNU nm, but means don't demangle to AIX nm.\n    # Without the \"-l\" option, or with the \"-B\" option, AIX nm treats\n    # weak defined symbols like other global defined symbols, whereas\n    # GNU nm marks them as \"W\".\n    # While the 'weak' keyword is ignored in the Export File, we need\n    # it in the Import File for the 'aix-soname' feature, so we have\n    # to replace the \"-B\" option with \"-P\" for AIX nm.\n    if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && ([substr](\\$ 3,1,1) != \".\")) { if (\\$ 2 == \"W\") { print \\$ 3 \" weak\" } else { print \\$ 3 } } }'\\'' | sort -u > $export_symbols'\n    else\n      _LT_TAGVAR(export_symbols_cmds, $1)='`func_echo_all $NM | $SED -e '\\''s/B\\([[^B]]*\\)$/P\\1/'\\''` -PCpgl $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) && ([substr](\\$ 1,1,1) != \".\")) { if ((\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) { print \\$ 1 \" weak\" } else { print \\$ 1 } } }'\\'' | sort -u > $export_symbols'\n    fi\n    ;;\n  pw32*)\n    _LT_TAGVAR(export_symbols_cmds, $1)=$ltdll_cmds\n    ;;\n  cygwin* | mingw* | cegcc*)\n    case $cc_basename in\n    cl*)\n      _LT_TAGVAR(exclude_expsyms, $1)='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'\n      ;;\n    *)\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1 DATA/;s/^.*[[ ]]__nm__\\([[^ ]]*\\)[[ ]][[^ ]]*/\\1 DATA/;/^I[[ ]]/d;/^[[AITW]][[ ]]/s/.* //'\\'' | sort | uniq > $export_symbols'\n      _LT_TAGVAR(exclude_expsyms, $1)=['[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname']\n      ;;\n    esac\n    ;;\n  *)\n    _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n    ;;\n  esac\n], [\n  runpath_var=\n  _LT_TAGVAR(allow_undefined_flag, $1)=\n  _LT_TAGVAR(always_export_symbols, $1)=no\n  _LT_TAGVAR(archive_cmds, $1)=\n  _LT_TAGVAR(archive_expsym_cmds, $1)=\n  _LT_TAGVAR(compiler_needs_object, $1)=no\n  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n  _LT_TAGVAR(export_dynamic_flag_spec, $1)=\n  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  _LT_TAGVAR(hardcode_automatic, $1)=no\n  _LT_TAGVAR(hardcode_direct, $1)=no\n  _LT_TAGVAR(hardcode_direct_absolute, $1)=no\n  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n  _LT_TAGVAR(hardcode_libdir_separator, $1)=\n  _LT_TAGVAR(hardcode_minus_L, $1)=no\n  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  _LT_TAGVAR(inherit_rpath, $1)=no\n  _LT_TAGVAR(link_all_deplibs, $1)=unknown\n  _LT_TAGVAR(module_cmds, $1)=\n  _LT_TAGVAR(module_expsym_cmds, $1)=\n  _LT_TAGVAR(old_archive_from_new_cmds, $1)=\n  _LT_TAGVAR(old_archive_from_expsyms_cmds, $1)=\n  _LT_TAGVAR(thread_safe_flag_spec, $1)=\n  _LT_TAGVAR(whole_archive_flag_spec, $1)=\n  # include_expsyms should be a list of space-separated symbols to be *always*\n  # included in the symbol list\n  _LT_TAGVAR(include_expsyms, $1)=\n  # exclude_expsyms can be an extended regexp of symbols to exclude\n  # it will be wrapped by ' (' and ')$', so one must not match beginning or\n  # end of line.  Example: 'a|bc|.*d.*' will exclude the symbols 'a' and 'bc',\n  # as well as any symbol that contains 'd'.\n  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']\n  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out\n  # platforms (ab)use it in PIC code, but their linkers get confused if\n  # the symbol is explicitly referenced.  Since portable code cannot\n  # rely on this symbol name, it's probably fine to never include it in\n  # preloaded symbol tables.\n  # Exclude shared library initialization/finalization symbols.\ndnl Note also adjust exclude_expsyms for C++ above.\n  extract_expsyms_cmds=\n\n  case $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    # FIXME: the MSVC++ port hasn't been tested in a loooong time\n    # When not using gcc, we currently assume that we are using\n    # Microsoft Visual C++.\n    if test yes != \"$GCC\"; then\n      with_gnu_ld=no\n    fi\n    ;;\n  interix*)\n    # we just hope/assume this is gcc and not c89 (= MSVC++)\n    with_gnu_ld=yes\n    ;;\n  openbsd* | bitrig*)\n    with_gnu_ld=no\n    ;;\n  esac\n\n  _LT_TAGVAR(ld_shlibs, $1)=yes\n\n  # On some targets, GNU ld is compatible enough with the native linker\n  # that we're better off using the native interface for both.\n  lt_use_gnu_ld_interface=no\n  if test yes = \"$with_gnu_ld\"; then\n    case $host_os in\n      aix*)\n\t# The AIX port of GNU ld has always aspired to compatibility\n\t# with the native linker.  However, as the warning in the GNU ld\n\t# block says, versions before 2.19.5* couldn't really create working\n\t# shared libraries, regardless of the interface used.\n\tcase `$LD -v 2>&1` in\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.19.5*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.[[2-9]]*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ [[3-9]]*) ;;\n\t  *)\n\t    lt_use_gnu_ld_interface=yes\n\t    ;;\n\tesac\n\t;;\n      *)\n\tlt_use_gnu_ld_interface=yes\n\t;;\n    esac\n  fi\n\n  if test yes = \"$lt_use_gnu_ld_interface\"; then\n    # If archive_cmds runs LD, not CC, wlarc should be empty\n    wlarc='$wl'\n\n    # Set some defaults for GNU ld with shared library support. These\n    # are reset later if shared libraries are not supported. Putting them\n    # here allows them to be overridden if necessary.\n    runpath_var=LD_RUN_PATH\n    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n    # ancient GNU ld didn't support --whole-archive et. al.\n    if $LD --help 2>&1 | $GREP 'no-whole-archive' > /dev/null; then\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n    else\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n    supports_anon_versioning=no\n    case `$LD -v | $SED -e 's/([^)]\\+)\\s\\+//' 2>&1` in\n      *GNU\\ gold*) supports_anon_versioning=yes ;;\n      *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.10.*) ;; # catch versions < 2.11\n      *\\ 2.11.93.0.2\\ *) supports_anon_versioning=yes ;; # RH7.3 ...\n      *\\ 2.11.92.0.12\\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...\n      *\\ 2.11.*) ;; # other 2.11 versions\n      *) supports_anon_versioning=yes ;;\n    esac\n\n    # See if GNU ld supports shared libraries.\n    case $host_os in\n    aix[[3-9]]*)\n      # On AIX/PPC, the GNU linker is very broken\n      if test ia64 != \"$host_cpu\"; then\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: the GNU linker, at least up to release 2.19, is reported\n*** to be unable to reliably create shared libraries on AIX.\n*** Therefore, libtool is disabling shared libraries support.  If you\n*** really care for shared libraries, you may want to install binutils\n*** 2.20 or above, or modify your PATH so that a non-GNU linker is found.\n*** You will then need to restart the configuration process.\n\n_LT_EOF\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n            _LT_TAGVAR(archive_expsym_cmds, $1)=''\n        ;;\n      m68k)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes\n        ;;\n      esac\n      ;;\n\n    beos*)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t# support --undefined.  This deserves some investigation.  FIXME\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n      # as there is no search path for DLLs.\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-all-symbols'\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(always_export_symbols, $1)=no\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1 DATA/;s/^.*[[ ]]__nm__\\([[^ ]]*\\)[[ ]][[^ ]]*/\\1 DATA/;/^I[[ ]]/d;/^[[AITW]][[ ]]/s/.* //'\\'' | sort | uniq > $export_symbols'\n      _LT_TAGVAR(exclude_expsyms, $1)=['[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname']\n\n      if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t# If the export-symbols file already is a .def file, use it as\n\t# is; otherwise, prepend EXPORTS...\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n          cp $export_symbols $output_objdir/$soname.def;\n        else\n          echo EXPORTS > $output_objdir/$soname.def;\n          cat $export_symbols >> $output_objdir/$soname.def;\n        fi~\n        $CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    haiku*)\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    os2*)\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      shrext_cmds=.dll\n      _LT_TAGVAR(archive_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\temxexp $libobjs | $SED /\"_DLL_InitTerm\"/d >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      _LT_TAGVAR(archive_expsym_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\tprefix_cmds=\"$SED\"~\n\tif test EXPORTS = \"`$SED 1q $export_symbols`\"; then\n\t  prefix_cmds=\"$prefix_cmds -e 1d\";\n\tfi~\n\tprefix_cmds=\"$prefix_cmds -e \\\"s/^\\(.*\\)$/_\\1/g\\\"\"~\n\tcat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      _LT_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      ;;\n\n    interix[[3-9]]*)\n      _LT_TAGVAR(hardcode_direct, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n      # Instead, shared libraries are loaded at an image base (0x10000000 by\n      # default) and relocated if they conflict, which is a slow very memory\n      # consuming and fragmenting process.  To avoid this, we pick a random,\n      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      _LT_TAGVAR(archive_expsym_cmds, $1)='sed \"s|^|_|\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--retain-symbols-file,$output_objdir/$soname.expsym $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      ;;\n\n    gnu* | linux* | tpf* | k*bsd*-gnu | kopensolaris*-gnu)\n      tmp_diet=no\n      if test linux-dietlibc = \"$host_os\"; then\n\tcase $cc_basename in\n\t  diet\\ *) tmp_diet=yes;;\t# linux-dietlibc with static linking (!diet-dyn)\n\tesac\n      fi\n      if $LD --help 2>&1 | $EGREP ': supported targets:.* elf' > /dev/null \\\n\t && test no = \"$tmp_diet\"\n      then\n\ttmp_addflag=' $pic_flag'\n\ttmp_sharedflag='-shared'\n\tcase $cc_basename,$host_cpu in\n        pgcc*)\t\t\t\t# Portland Group C compiler\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  tmp_addflag=' $pic_flag'\n\t  ;;\n\tpgf77* | pgf90* | pgf95* | pgfortran*)\n\t\t\t\t\t# Portland Group f77 and f90 compilers\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  tmp_addflag=' $pic_flag -Mnomain' ;;\n\tecc*,ia64* | icc*,ia64*)\t# Intel C compiler on ia64\n\t  tmp_addflag=' -i_dynamic' ;;\n\tefc*,ia64* | ifort*,ia64*)\t# Intel Fortran compiler on ia64\n\t  tmp_addflag=' -i_dynamic -nofor_main' ;;\n\tifc* | ifort*)\t\t\t# Intel Fortran compiler\n\t  tmp_addflag=' -nofor_main' ;;\n\tlf95*)\t\t\t\t# Lahey Fortran 8.1\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)=\n\t  tmp_sharedflag='--shared' ;;\n        nagfor*)                        # NAGFOR 5.3\n          tmp_sharedflag='-Wl,-shared' ;;\n\txl[[cC]]* | bgxl[[cC]]* | mpixl[[cC]]*) # IBM XL C 8.0 on PPC (deal with xlf below)\n\t  tmp_sharedflag='-qmkshrobj'\n\t  tmp_addflag= ;;\n\tnvcc*)\t# Cuda Compiler Driver 2.2\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  _LT_TAGVAR(compiler_needs_object, $1)=yes\n\t  ;;\n\tesac\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ C*)\t\t\t# Sun C 5.9\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  _LT_TAGVAR(compiler_needs_object, $1)=yes\n\t  tmp_sharedflag='-G' ;;\n\t*Sun\\ F*)\t\t\t# Sun Fortran 8.3\n\t  tmp_sharedflag='-G' ;;\n\tesac\n\t_LT_TAGVAR(archive_cmds, $1)='$CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\n        if test yes = \"$supports_anon_versioning\"; then\n          _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n            cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n            echo \"local: *; };\" >> $output_objdir/$libname.ver~\n            $CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'\n        fi\n\n\tcase $cc_basename in\n\ttcc*)\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='-rdynamic'\n\t  ;;\n\txlf* | bgf* | bgxlf* | mpixlf*)\n\t  # IBM XL Fortran 10.1 on PPC cannot create shared libs itself\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='--whole-archive$convenience --no-whole-archive'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -shared $libobjs $deplibs $linker_flags -soname $soname -o $lib'\n\t  if test yes = \"$supports_anon_versioning\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n              cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n              echo \"local: *; };\" >> $output_objdir/$libname.ver~\n              $LD -shared $libobjs $deplibs $linker_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'\n\t  fi\n\t  ;;\n\tesac\n      else\n        _LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'\n\twlarc=\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      fi\n      ;;\n\n    solaris*)\n      if $LD -v 2>&1 | $GREP 'BFD 2\\.8' > /dev/null; then\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: The releases 2.8.* of the GNU linker cannot reliably\n*** create shared libraries on Solaris systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.9.1 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n      elif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)\n      case `$LD -v 2>&1` in\n        *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.1[[0-5]].*)\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 cannot\n*** reliably create shared libraries on SCO systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n\t;;\n\t*)\n\t  # For security reasons, it is highly recommended that you always\n\t  # use absolute paths for naming shared libraries, and exclude the\n\t  # DT_RUNPATH tag from executables and libraries.  But doing so\n\t  # requires that you compile everything twice, which is a pain.\n\t  if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t  else\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t  fi\n\t;;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      wlarc=\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n    esac\n\n    if test no = \"$_LT_TAGVAR(ld_shlibs, $1)\"; then\n      runpath_var=\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)=\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n  else\n    # PORTME fill in a description of your system's linker (not GNU ld)\n    case $host_os in\n    aix3*)\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(always_export_symbols, $1)=yes\n      _LT_TAGVAR(archive_expsym_cmds, $1)='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'\n      # Note: this linker hardcodes the directories in LIBPATH if there\n      # are no directories specified by -L.\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      if test yes = \"$GCC\" && test -z \"$lt_prog_compiler_static\"; then\n\t# Neither direct hardcoding nor static linking is supported with a\n\t# broken collect2.\n\t_LT_TAGVAR(hardcode_direct, $1)=unsupported\n      fi\n      ;;\n\n    aix[[4-9]]*)\n      if test ia64 = \"$host_cpu\"; then\n\t# On IA64, the linker does run time linking by default, so we don't\n\t# have to do anything special.\n\taix_use_runtimelinking=no\n\texp_sym_flag='-Bexport'\n\tno_entry_flag=\n      else\n\t# If we're using GNU nm, then we don't want the \"-C\" option.\n\t# -C means demangle to GNU nm, but means don't demangle to AIX nm.\n\t# Without the \"-l\" option, or with the \"-B\" option, AIX nm treats\n\t# weak defined symbols like other global defined symbols, whereas\n\t# GNU nm marks them as \"W\".\n\t# While the 'weak' keyword is ignored in the Export File, we need\n\t# it in the Import File for the 'aix-soname' feature, so we have\n\t# to replace the \"-B\" option with \"-P\" for AIX nm.\n\tif $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n\t  _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && ([substr](\\$ 3,1,1) != \".\")) { if (\\$ 2 == \"W\") { print \\$ 3 \" weak\" } else { print \\$ 3 } } }'\\'' | sort -u > $export_symbols'\n\telse\n\t  _LT_TAGVAR(export_symbols_cmds, $1)='`func_echo_all $NM | $SED -e '\\''s/B\\([[^B]]*\\)$/P\\1/'\\''` -PCpgl $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) && ([substr](\\$ 1,1,1) != \".\")) { if ((\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) { print \\$ 1 \" weak\" } else { print \\$ 1 } } }'\\'' | sort -u > $export_symbols'\n\tfi\n\taix_use_runtimelinking=no\n\n\t# Test if we are trying to use run time linking or normal\n\t# AIX style linking. If -brtl is somewhere in LDFLAGS, we\n\t# have runtime linking enabled, and use it for executables.\n\t# For shared libraries, we enable/disable runtime linking\n\t# depending on the kind of the shared library created -\n\t# when \"with_aix_soname,aix_use_runtimelinking\" is:\n\t# \"aix,no\"   lib.a(lib.so.V) shared, rtl:no,  for executables\n\t# \"aix,yes\"  lib.so          shared, rtl:yes, for executables\n\t#            lib.a           static archive\n\t# \"both,no\"  lib.so.V(shr.o) shared, rtl:yes\n\t#            lib.a(lib.so.V) shared, rtl:no,  for executables\n\t# \"both,yes\" lib.so.V(shr.o) shared, rtl:yes, for executables\n\t#            lib.a(lib.so.V) shared, rtl:no\n\t# \"svr4,*\"   lib.so.V(shr.o) shared, rtl:yes, for executables\n\t#            lib.a           static archive\n\tcase $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)\n\t  for ld_flag in $LDFLAGS; do\n\t  if (test x-brtl = \"x$ld_flag\" || test x-Wl,-brtl = \"x$ld_flag\"); then\n\t    aix_use_runtimelinking=yes\n\t    break\n\t  fi\n\t  done\n\t  if test svr4,no = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n\t    # With aix-soname=svr4, we create the lib.so.V shared archives only,\n\t    # so we don't have lib.a shared libs to link our executables.\n\t    # We have to force runtime linking in this case.\n\t    aix_use_runtimelinking=yes\n\t    LDFLAGS=\"$LDFLAGS -Wl,-brtl\"\n\t  fi\n\t  ;;\n\tesac\n\n\texp_sym_flag='-bexport'\n\tno_entry_flag='-bnoentry'\n      fi\n\n      # When large executables or shared objects are built, AIX ld can\n      # have problems creating the table of contents.  If linking a library\n      # or program results in \"error TOC overflow\" add -mminimal-toc to\n      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n      _LT_TAGVAR(archive_cmds, $1)=''\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_TAGVAR(file_list_spec, $1)='$wl-f,'\n      case $with_aix_soname,$aix_use_runtimelinking in\n      aix,*) ;; # traditional, no import file\n      svr4,* | *,yes) # use import file\n\t# The Import File defines what to hardcode.\n\t_LT_TAGVAR(hardcode_direct, $1)=no\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n\t;;\n      esac\n\n      if test yes = \"$GCC\"; then\n\tcase $host_os in aix4.[[012]]|aix4.[[012]].*)\n\t# We only want to do this on AIX 4.2 and lower, the check\n\t# below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`$CC -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t   strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t  # We have reworked collect2\n\t  :\n\t  else\n\t  # We have old collect2\n\t  _LT_TAGVAR(hardcode_direct, $1)=unsupported\n\t  # It fails to find uninstalled libraries when the uninstalled\n\t  # path is not listed in the libpath.  Setting hardcode_minus_L\n\t  # to unsupported forces relinking\n\t  _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n\t  ;;\n\tesac\n\tshared_flag='-shared'\n\tif test yes = \"$aix_use_runtimelinking\"; then\n\t  shared_flag=\"$shared_flag \"'$wl-G'\n\tfi\n\t# Need to ensure runtime linking is disabled for the traditional\n\t# shared library, or the linker may eventually find shared libraries\n\t# /with/ Import File - we do not want to mix them.\n\tshared_flag_aix='-shared'\n\tshared_flag_svr4='-shared $wl-G'\n      else\n\t# not using gcc\n\tif test ia64 = \"$host_cpu\"; then\n\t# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t# chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n\telse\n\t  if test yes = \"$aix_use_runtimelinking\"; then\n\t    shared_flag='$wl-G'\n\t  else\n\t    shared_flag='$wl-bM:SRE'\n\t  fi\n\t  shared_flag_aix='$wl-bM:SRE'\n\t  shared_flag_svr4='$wl-G'\n\tfi\n      fi\n\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-bexpall'\n      # It seems that -bexpall does not export symbols beginning with\n      # underscore (_), so it is better to generate a list of symbols to export.\n      _LT_TAGVAR(always_export_symbols, $1)=yes\n      if test aix,yes = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n\t# Warning - without using the other runtime loading flags (-brtl),\n\t# -berok will link without error, but may produce a broken library.\n\t_LT_TAGVAR(allow_undefined_flag, $1)='-berok'\n        # Determine the default libpath from the value encoded in an\n        # empty executable.\n        _LT_SYS_MODULE_PATH_AIX([$1])\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs $wl'$no_entry_flag' $compiler_flags `if test -n \"$allow_undefined_flag\"; then func_echo_all \"$wl$allow_undefined_flag\"; else :; fi` $wl'$exp_sym_flag:\\$export_symbols' '$shared_flag\n      else\n\tif test ia64 = \"$host_cpu\"; then\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R $libdir:/usr/lib:/lib'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\$wl$no_entry_flag\"' $compiler_flags $wl$allow_undefined_flag '\"\\$wl$exp_sym_flag:\\$export_symbols\"\n\telse\n\t # Determine the default libpath from the value encoded in an\n\t # empty executable.\n\t _LT_SYS_MODULE_PATH_AIX([$1])\n\t _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\t  # Warning - without using the other run time loading flags,\n\t  # -berok will link without error, but may produce a broken library.\n\t  _LT_TAGVAR(no_undefined_flag, $1)=' $wl-bernotok'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-berok'\n\t  if test yes = \"$with_gnu_ld\"; then\n\t    # We only use this code for GNU lds that support --whole-archive.\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t  else\n\t    # Exported symbols can be pulled into shared objects from archives\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t  fi\n\t  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$RM -r $output_objdir/$realname.d~$MKDIR $output_objdir/$realname.d'\n\t  # -brtl affects multiple linker settings, -berok does not and is overridden later\n\t  compiler_flags_filtered='`func_echo_all \"$compiler_flags \" | $SED -e \"s%-brtl\\\\([[, ]]\\\\)%-berok\\\\1%g\"`'\n\t  if test svr4 != \"$with_aix_soname\"; then\n\t    # This is similar to how AIX traditionally builds its shared libraries.\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$CC '$shared_flag_aix' -o $output_objdir/$realname.d/$soname $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$realname.d/$soname'\n\t  fi\n\t  if test aix != \"$with_aix_soname\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$CC '$shared_flag_svr4' -o $output_objdir/$realname.d/$shared_archive_member_spec.o $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$STRIP -e $output_objdir/$realname.d/$shared_archive_member_spec.o~( func_echo_all \"#! $soname($shared_archive_member_spec.o)\"; if test shr_64 = \"$shared_archive_member_spec\"; then func_echo_all \"# 64\"; else func_echo_all \"# 32\"; fi; cat $export_symbols ) > $output_objdir/$realname.d/$shared_archive_member_spec.imp~$AR $AR_FLAGS $output_objdir/$soname $output_objdir/$realname.d/$shared_archive_member_spec.o $output_objdir/$realname.d/$shared_archive_member_spec.imp'\n\t  else\n\t    # used by -dlpreopen to get the symbols\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$MV  $output_objdir/$realname.d/$soname $output_objdir'\n\t  fi\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$RM -r $output_objdir/$realname.d'\n\tfi\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n            _LT_TAGVAR(archive_expsym_cmds, $1)=''\n        ;;\n      m68k)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes\n        ;;\n      esac\n      ;;\n\n    bsdi[[45]]*)\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)=-rdynamic\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # When not using gcc, we currently assume that we are using\n      # Microsoft Visual C++.\n      # hardcode_libdir_flag_spec is actually meaningless, as there is\n      # no search path for DLLs.\n      case $cc_basename in\n      cl*)\n\t# Native MSVC\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t_LT_TAGVAR(always_export_symbols, $1)=yes\n\t_LT_TAGVAR(file_list_spec, $1)='@'\n\t# Tell ltmain to make .lib files, not .a files.\n\tlibext=lib\n\t# Tell ltmain to make .dll files, not .so files.\n\tshrext_cmds=.dll\n\t# FIXME: Setting linknames here is a bad hack.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~linknames='\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n            cp \"$export_symbols\" \"$output_objdir/$soname.def\";\n            echo \"$tool_output_objdir$soname.def\" > \"$output_objdir/$soname.exp\";\n          else\n            $SED -e '\\''s/^/-link -EXPORT:/'\\'' < $export_symbols > $output_objdir/$soname.exp;\n          fi~\n          $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs \"@$tool_output_objdir$soname.exp\" -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~\n          linknames='\n\t# The linker will not automatically build a static lib if we build a DLL.\n\t# _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t_LT_TAGVAR(exclude_expsyms, $1)='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'\n\t_LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1,DATA/'\\'' | $SED -e '\\''/^[[AITW]][[ ]]/s/.*[[ ]]//'\\'' | sort | uniq > $export_symbols'\n\t# Don't use ranlib\n\t_LT_TAGVAR(old_postinstall_cmds, $1)='chmod 644 $oldlib'\n\t_LT_TAGVAR(postlink_cmds, $1)='lt_outputfile=\"@OUTPUT@\"~\n          lt_tool_outputfile=\"@TOOL_OUTPUT@\"~\n          case $lt_outputfile in\n            *.exe|*.EXE) ;;\n            *)\n              lt_outputfile=$lt_outputfile.exe\n              lt_tool_outputfile=$lt_tool_outputfile.exe\n              ;;\n          esac~\n          if test : != \"$MANIFEST_TOOL\" && test -f \"$lt_outputfile.manifest\"; then\n            $MANIFEST_TOOL -manifest \"$lt_tool_outputfile.manifest\" -outputresource:\"$lt_tool_outputfile\" || exit 1;\n            $RM \"$lt_outputfile.manifest\";\n          fi'\n\t;;\n      *)\n\t# Assume MSVC wrapper\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Tell ltmain to make .lib files, not .a files.\n\tlibext=lib\n\t# Tell ltmain to make .dll files, not .so files.\n\tshrext_cmds=.dll\n\t# FIXME: Setting linknames here is a bad hack.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -o $lib $libobjs $compiler_flags `func_echo_all \"$deplibs\" | $SED '\\''s/ -lc$//'\\''` -link -dll~linknames='\n\t# The linker will automatically build a .lib file if we build a DLL.\n\t_LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t# FIXME: Should let the user specify the lib program.\n\t_LT_TAGVAR(old_archive_cmds, $1)='lib -OUT:$oldlib$oldobjs$old_deplibs'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t;;\n      esac\n      ;;\n\n    darwin* | rhapsody*)\n      _LT_DARWIN_LINKER_FEATURES($1)\n      ;;\n\n    dgux*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor\n    # support.  Future versions do this automatically, but an explicit c++rt0.o\n    # does not break anything, and helps significantly (at the cost of a little\n    # extra space).\n    freebsd2.2*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # Unfortunately, older versions of FreeBSD 2 do not have this feature.\n    freebsd2.*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.\n    freebsd* | dragonfly*)\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    hpux9*)\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared $pic_flag $wl+b $wl$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n\n      # hardcode_minus_L: Not really in the search PATH,\n      # but as the default location of the library.\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n      ;;\n\n    hpux10*)\n      if test yes,no = \"$GCC,$with_gnu_ld\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      if test no = \"$with_gnu_ld\"; then\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\t_LT_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\t# hardcode_minus_L: Not really in the search PATH,\n\t# but as the default location of the library.\n\t_LT_TAGVAR(hardcode_minus_L, $1)=yes\n      fi\n      ;;\n\n    hpux11*)\n      if test yes,no = \"$GCC,$with_gnu_ld\"; then\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl+h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl+h $wl$soname $wl+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tesac\n      else\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\tm4_if($1, [], [\n\t  # Older versions of the 11.00 compiler do not understand -b yet\n\t  # (HP92453-01 A.11.01.20 doesn't, HP92453-01 B.11.X.35175-35176.GP does)\n\t  _LT_LINKER_OPTION([if $CC understands -b],\n\t    _LT_TAGVAR(lt_cv_prog_compiler__b, $1), [-b],\n\t    [_LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'],\n\t    [_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'])],\n\t  [_LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'])\n\t  ;;\n\tesac\n      fi\n      if test no = \"$with_gnu_ld\"; then\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\tcase $host_cpu in\n\thppa*64*|ia64*)\n\t  _LT_TAGVAR(hardcode_direct, $1)=no\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\n\t  # hardcode_minus_L: Not really in the search PATH,\n\t  # but as the default location of the library.\n\t  _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t  ;;\n\tesac\n      fi\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t# Try to use the -exported_symbol ld option, if it does not\n\t# work, assume that -exports_file does not work either and\n\t# implicitly export all symbols.\n\t# This should be the same for all languages, so no per-tag cache variable.\n\tAC_CACHE_CHECK([whether the $host_os linker accepts -exported_symbol],\n\t  [lt_cv_irix_exported_symbol],\n\t  [save_LDFLAGS=$LDFLAGS\n\t   LDFLAGS=\"$LDFLAGS -shared $wl-exported_symbol ${wl}foo $wl-update_registry $wl/dev/null\"\n\t   AC_LINK_IFELSE(\n\t     [AC_LANG_SOURCE(\n\t        [AC_LANG_CASE([C], [[int foo (void) { return 0; }]],\n\t\t\t      [C++], [[int foo (void) { return 0; }]],\n\t\t\t      [Fortran 77], [[\n      subroutine foo\n      end]],\n\t\t\t      [Fortran], [[\n      subroutine foo\n      end]])])],\n\t      [lt_cv_irix_exported_symbol=yes],\n\t      [lt_cv_irix_exported_symbol=no])\n           LDFLAGS=$save_LDFLAGS])\n\tif test yes = \"$lt_cv_irix_exported_symbol\"; then\n          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations $wl-exports_file $wl$export_symbols -o $lib'\n\tfi\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -exports_file $export_symbols -o $lib'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(inherit_rpath, $1)=yes\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    linux*)\n      case $cc_basename in\n      tcc*)\n\t# Fabrice Bellard et al's Tiny C Compiler\n\t_LT_TAGVAR(ld_shlibs, $1)=yes\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t;;\n      esac\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    newsos6)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *nto* | *qnx*)\n      ;;\n\n    openbsd* | bitrig*)\n      if test -f /usr/libexec/ld.so; then\n\t_LT_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\tif test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags $wl-retain-symbols-file,$export_symbols'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\telse\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\tfi\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    os2*)\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      shrext_cmds=.dll\n      _LT_TAGVAR(archive_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\temxexp $libobjs | $SED /\"_DLL_InitTerm\"/d >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      _LT_TAGVAR(archive_expsym_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\tprefix_cmds=\"$SED\"~\n\tif test EXPORTS = \"`$SED 1q $export_symbols`\"; then\n\t  prefix_cmds=\"$prefix_cmds -e 1d\";\n\tfi~\n\tprefix_cmds=\"$prefix_cmds -e \\\"s/^\\(.*\\)$/_\\1/g\\\"\"~\n\tcat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      _LT_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      ;;\n\n    osf3*)\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n      else\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    osf4* | osf5*)\t# as osf3* with the addition of -msym flag\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $pic_flag $libobjs $deplibs $compiler_flags $wl-msym $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      else\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done; printf \"%s\\\\n\" \"-hidden\">> $lib.exp~\n          $CC -shared$allow_undefined_flag $wl-input $wl$lib.exp $compiler_flags $libobjs $deplibs -soname $soname `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib~$RM $lib.exp'\n\n\t# Both c and cxx compiler support -rpath directly\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    solaris*)\n      _LT_TAGVAR(no_undefined_flag, $1)=' -z defs'\n      if test yes = \"$GCC\"; then\n\twlarc='$wl'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl-z ${wl}text $wl-h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n          $CC -shared $pic_flag $wl-z ${wl}text $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n      else\n\tcase `$CC -V 2>&1` in\n\t*\"Compilers 5.0\"*)\n\t  wlarc=''\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G$allow_undefined_flag -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n            $LD -G$allow_undefined_flag -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'\n\t  ;;\n\t*)\n\t  wlarc='$wl'\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -G$allow_undefined_flag -h $soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n            $CC -G$allow_undefined_flag -M $lib.exp -h $soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n\t  ;;\n\tesac\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      case $host_os in\n      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n      *)\n\t# The compiler driver will combine and reorder linker options,\n\t# but understands '-z linker_flag'.  GCC discards it without '$wl',\n\t# but is careful enough not to reorder.\n\t# Supported since Solaris 2.6 (maybe 2.5.1?)\n\tif test yes = \"$GCC\"; then\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl-z ${wl}allextract$convenience $wl-z ${wl}defaultextract'\n\telse\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'\n\tfi\n\t;;\n      esac\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    sunos4*)\n      if test sequent = \"$host_vendor\"; then\n\t# Use $CC to link under sequent, because it throws in some extra .o\n\t# files that make .init and .fini sections work.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h $soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4)\n      case $host_vendor in\n\tsni)\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes # is this really true???\n\t;;\n\tsiemens)\n\t  ## LD is ld it makes a PLAMLIB\n\t  ## CC just makes a GrossModule.\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(reload_cmds, $1)='$CC -r -o $output$reload_objs'\n\t  _LT_TAGVAR(hardcode_direct, $1)=no\n        ;;\n\tmotorola)\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(hardcode_direct, $1)=no #Motorola manual says yes, but my tests say they lie\n\t;;\n      esac\n      runpath_var='LD_RUN_PATH'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4.3*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='-Bexport'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\trunpath_var=LD_RUN_PATH\n\thardcode_runpath_var=yes\n\t_LT_TAGVAR(ld_shlibs, $1)=yes\n      fi\n      ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n      _LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6*)\n      # Note: We CANNOT use -z defs as we might desire, because we do not\n      # link with -lc, and that would cause any symbols used from libc to\n      # always be unresolved, which means just about no library would\n      # ever link correctly.  If we're not using GNU ld we use -z text\n      # though, which does catch some bad symbols but isn't as heavy-handed\n      # as -z defs.\n      _LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n      _LT_TAGVAR(allow_undefined_flag, $1)='$wl-z,nodefs'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R,$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-Bexport'\n      runpath_var='LD_RUN_PATH'\n\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    uts4*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      _LT_TAGVAR(ld_shlibs, $1)=no\n      ;;\n    esac\n\n    if test sni = \"$host_vendor\"; then\n      case $host in\n      sysv4 | sysv4.2uw2* | sysv4.3* | sysv5*)\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-Blargedynsym'\n\t;;\n      esac\n    fi\n  fi\n])\nAC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])\ntest no = \"$_LT_TAGVAR(ld_shlibs, $1)\" && can_build_shared=no\n\n_LT_TAGVAR(with_gnu_ld, $1)=$with_gnu_ld\n\n_LT_DECL([], [libext], [0], [Old archive suffix (normally \"a\")])dnl\n_LT_DECL([], [shrext_cmds], [1], [Shared library suffix (normally \".so\")])dnl\n_LT_DECL([], [extract_expsyms_cmds], [2],\n    [The commands to extract the exported symbol list from a shared archive])\n\n#\n# Do we need to explicitly link libc?\n#\ncase \"x$_LT_TAGVAR(archive_cmds_need_lc, $1)\" in\nx|xyes)\n  # Assume -lc should be added\n  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\n  if test yes,yes = \"$GCC,$enable_shared\"; then\n    case $_LT_TAGVAR(archive_cmds, $1) in\n    *'~'*)\n      # FIXME: we may have to deal with multi-command sequences.\n      ;;\n    '$CC '*)\n      # Test whether the compiler implicitly links with -lc since on some\n      # systems, -lgcc has to come before -lc. If gcc already passes -lc\n      # to ld, don't add -lc before -lgcc.\n      AC_CACHE_CHECK([whether -lc should be explicitly linked in],\n\t[lt_cv_]_LT_TAGVAR(archive_cmds_need_lc, $1),\n\t[$RM conftest*\n\techo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n\tif AC_TRY_EVAL(ac_compile) 2>conftest.err; then\n\t  soname=conftest\n\t  lib=conftest\n\t  libobjs=conftest.$ac_objext\n\t  deplibs=\n\t  wl=$_LT_TAGVAR(lt_prog_compiler_wl, $1)\n\t  pic_flag=$_LT_TAGVAR(lt_prog_compiler_pic, $1)\n\t  compiler_flags=-v\n\t  linker_flags=-v\n\t  verstring=\n\t  output_objdir=.\n\t  libname=conftest\n\t  lt_save_allow_undefined_flag=$_LT_TAGVAR(allow_undefined_flag, $1)\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=\n\t  if AC_TRY_EVAL(_LT_TAGVAR(archive_cmds, $1) 2\\>\\&1 \\| $GREP \\\" -lc \\\" \\>/dev/null 2\\>\\&1)\n\t  then\n\t    lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t  else\n\t    lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  fi\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=$lt_save_allow_undefined_flag\n\telse\n\t  cat conftest.err 1>&5\n\tfi\n\t$RM conftest*\n\t])\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=$lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)\n      ;;\n    esac\n  fi\n  ;;\nesac\n\n_LT_TAGDECL([build_libtool_need_lc], [archive_cmds_need_lc], [0],\n    [Whether or not to add -lc for building shared libraries])\n_LT_TAGDECL([allow_libtool_libs_with_static_runtimes],\n    [enable_shared_with_static_runtimes], [0],\n    [Whether or not to disallow shared libs when runtime libs are static])\n_LT_TAGDECL([], [export_dynamic_flag_spec], [1],\n    [Compiler flag to allow reflexive dlopens])\n_LT_TAGDECL([], [whole_archive_flag_spec], [1],\n    [Compiler flag to generate shared objects directly from archives])\n_LT_TAGDECL([], [compiler_needs_object], [1],\n    [Whether the compiler copes with passing no objects directly])\n_LT_TAGDECL([], [old_archive_from_new_cmds], [2],\n    [Create an old-style archive from a shared archive])\n_LT_TAGDECL([], [old_archive_from_expsyms_cmds], [2],\n    [Create a temporary old-style archive to link instead of a shared archive])\n_LT_TAGDECL([], [archive_cmds], [2], [Commands used to build a shared archive])\n_LT_TAGDECL([], [archive_expsym_cmds], [2])\n_LT_TAGDECL([], [module_cmds], [2],\n    [Commands used to build a loadable module if different from building\n    a shared archive.])\n_LT_TAGDECL([], [module_expsym_cmds], [2])\n_LT_TAGDECL([], [with_gnu_ld], [1],\n    [Whether we are building with GNU ld or not])\n_LT_TAGDECL([], [allow_undefined_flag], [1],\n    [Flag that allows shared libraries with undefined symbols to be built])\n_LT_TAGDECL([], [no_undefined_flag], [1],\n    [Flag that enforces no undefined symbols])\n_LT_TAGDECL([], [hardcode_libdir_flag_spec], [1],\n    [Flag to hardcode $libdir into a binary during linking.\n    This must work even if $libdir does not exist])\n_LT_TAGDECL([], [hardcode_libdir_separator], [1],\n    [Whether we need a single \"-rpath\" flag with a separated argument])\n_LT_TAGDECL([], [hardcode_direct], [0],\n    [Set to \"yes\" if using DIR/libNAME$shared_ext during linking hardcodes\n    DIR into the resulting binary])\n_LT_TAGDECL([], [hardcode_direct_absolute], [0],\n    [Set to \"yes\" if using DIR/libNAME$shared_ext during linking hardcodes\n    DIR into the resulting binary and the resulting library dependency is\n    \"absolute\", i.e impossible to change by setting $shlibpath_var if the\n    library is relocated])\n_LT_TAGDECL([], [hardcode_minus_L], [0],\n    [Set to \"yes\" if using the -LDIR flag during linking hardcodes DIR\n    into the resulting binary])\n_LT_TAGDECL([], [hardcode_shlibpath_var], [0],\n    [Set to \"yes\" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR\n    into the resulting binary])\n_LT_TAGDECL([], [hardcode_automatic], [0],\n    [Set to \"yes\" if building a shared library automatically hardcodes DIR\n    into the library and all subsequent libraries and executables linked\n    against it])\n_LT_TAGDECL([], [inherit_rpath], [0],\n    [Set to yes if linker adds runtime paths of dependent libraries\n    to runtime path list])\n_LT_TAGDECL([], [link_all_deplibs], [0],\n    [Whether libtool must link a program against all its dependency libraries])\n_LT_TAGDECL([], [always_export_symbols], [0],\n    [Set to \"yes\" if exported symbols are required])\n_LT_TAGDECL([], [export_symbols_cmds], [2],\n    [The commands to list exported symbols])\n_LT_TAGDECL([], [exclude_expsyms], [1],\n    [Symbols that should not be listed in the preloaded symbols])\n_LT_TAGDECL([], [include_expsyms], [1],\n    [Symbols that must always be exported])\n_LT_TAGDECL([], [prelink_cmds], [2],\n    [Commands necessary for linking programs (against libraries) with templates])\n_LT_TAGDECL([], [postlink_cmds], [2],\n    [Commands necessary for finishing linking programs])\n_LT_TAGDECL([], [file_list_spec], [1],\n    [Specify filename containing input files])\ndnl FIXME: Not yet implemented\ndnl _LT_TAGDECL([], [thread_safe_flag_spec], [1],\ndnl    [Compiler flag to generate thread safe objects])\n])# _LT_LINKER_SHLIBS\n\n\n# _LT_LANG_C_CONFIG([TAG])\n# ------------------------\n# Ensure that the configuration variables for a C compiler are suitably\n# defined.  These variables are subsequently used by _LT_CONFIG to write\n# the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_C_CONFIG],\n[m4_require([_LT_DECL_EGREP])dnl\nlt_save_CC=$CC\nAC_LANG_PUSH(C)\n\n# Source file extension for C test sources.\nac_ext=c\n\n# Object file extension for compiled C test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"int some_variable = 0;\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='int main(){return(0);}'\n\n_LT_TAG_COMPILER\n# Save the default compiler, since it gets overwritten when the other\n# tags are being tested, and _LT_TAGVAR(compiler, []) is a NOP.\ncompiler_DEFAULT=$CC\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_SYS_DYNAMIC_LINKER($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n  LT_SYS_DLOPEN_SELF\n  _LT_CMD_STRIPLIB\n\n  # Report what library types will actually be built\n  AC_MSG_CHECKING([if libtool supports shared libraries])\n  AC_MSG_RESULT([$can_build_shared])\n\n  AC_MSG_CHECKING([whether to build shared libraries])\n  test no = \"$can_build_shared\" && enable_shared=no\n\n  # On AIX, shared libraries and static libraries use the same namespace, and\n  # are all built from PIC.\n  case $host_os in\n  aix3*)\n    test yes = \"$enable_shared\" && enable_static=no\n    if test -n \"$RANLIB\"; then\n      archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n      postinstall_cmds='$RANLIB $lib'\n    fi\n    ;;\n\n  aix[[4-9]]*)\n    if test ia64 != \"$host_cpu\"; then\n      case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in\n      yes,aix,yes) ;;\t\t\t# shared object as lib.so file only\n      yes,svr4,*) ;;\t\t\t# shared object as lib.so archive member only\n      yes,*) enable_static=no ;;\t# shared object in lib.a archive as well\n      esac\n    fi\n    ;;\n  esac\n  AC_MSG_RESULT([$enable_shared])\n\n  AC_MSG_CHECKING([whether to build static libraries])\n  # Make sure either enable_shared or enable_static is yes.\n  test yes = \"$enable_shared\" || enable_static=yes\n  AC_MSG_RESULT([$enable_static])\n\n  _LT_CONFIG($1)\nfi\nAC_LANG_POP\nCC=$lt_save_CC\n])# _LT_LANG_C_CONFIG\n\n\n# _LT_LANG_CXX_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for a C++ compiler are suitably\n# defined.  These variables are subsequently used by _LT_CONFIG to write\n# the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_CXX_CONFIG],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_PATH_MANIFEST_TOOL])dnl\nif test -n \"$CXX\" && ( test no != \"$CXX\" &&\n    ( (test g++ = \"$CXX\" && `g++ -v >/dev/null 2>&1` ) ||\n    (test g++ != \"$CXX\"))); then\n  AC_PROG_CXXCPP\nelse\n  _lt_caught_CXX_error=yes\nfi\n\nAC_LANG_PUSH(C++)\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(compiler_needs_object, $1)=no\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for C++ test sources.\nac_ext=cpp\n\n# Object file extension for compiled C++ test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the CXX compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test yes != \"$_lt_caught_CXX_error\"; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"int some_variable = 0;\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code='int main(int, char *[[]]) { return(0); }'\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_CFLAGS=$CFLAGS\n  lt_save_LD=$LD\n  lt_save_GCC=$GCC\n  GCC=$GXX\n  lt_save_with_gnu_ld=$with_gnu_ld\n  lt_save_path_LD=$lt_cv_path_LD\n  if test -n \"${lt_cv_prog_gnu_ldcxx+set}\"; then\n    lt_cv_prog_gnu_ld=$lt_cv_prog_gnu_ldcxx\n  else\n    $as_unset lt_cv_prog_gnu_ld\n  fi\n  if test -n \"${lt_cv_path_LDCXX+set}\"; then\n    lt_cv_path_LD=$lt_cv_path_LDCXX\n  else\n    $as_unset lt_cv_path_LD\n  fi\n  test -z \"${LDCXX+set}\" || LD=$LDCXX\n  CC=${CXX-\"c++\"}\n  CFLAGS=$CXXFLAGS\n  compiler=$CC\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n\n  if test -n \"$compiler\"; then\n    # We don't want -fno-exception when compiling C++ code, so set the\n    # no_builtin_flag separately\n    if test yes = \"$GXX\"; then\n      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin'\n    else\n      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n    fi\n\n    if test yes = \"$GXX\"; then\n      # Set up default GNU C++ configuration\n\n      LT_PATH_LD\n\n      # Check if GNU C++ uses GNU ld as the underlying linker, since the\n      # archiving commands below assume that GNU ld is being used.\n      if test yes = \"$with_gnu_ld\"; then\n        _LT_TAGVAR(archive_cmds, $1)='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\n        # If archive_cmds runs LD, not CC, wlarc should be empty\n        # XXX I think wlarc can be eliminated in ltcf-cxx, but I need to\n        #     investigate it a little bit more. (MM)\n        wlarc='$wl'\n\n        # ancient GNU ld didn't support --whole-archive et. al.\n        if eval \"`$CC -print-prog-name=ld` --help 2>&1\" |\n\t  $GREP 'no-whole-archive' > /dev/null; then\n          _LT_TAGVAR(whole_archive_flag_spec, $1)=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n        else\n          _LT_TAGVAR(whole_archive_flag_spec, $1)=\n        fi\n      else\n        with_gnu_ld=no\n        wlarc=\n\n        # A generic and very simple default shared library creation\n        # command for GNU C++ for the case where it uses the native\n        # linker, instead of GNU ld.  If possible, this setting should\n        # overridden to take advantage of the native linker features on\n        # the platform it is being used on.\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n      fi\n\n      # Commands to make compiler produce verbose output that lists\n      # what \"hidden\" libraries, object files and flags are used when\n      # linking a shared library.\n      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\n    else\n      GXX=no\n      with_gnu_ld=no\n      wlarc=\n    fi\n\n    # PORTME: fill in a description of your system's C++ link characteristics\n    AC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\n    _LT_TAGVAR(ld_shlibs, $1)=yes\n    case $host_os in\n      aix3*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n      aix[[4-9]]*)\n        if test ia64 = \"$host_cpu\"; then\n          # On IA64, the linker does run time linking by default, so we don't\n          # have to do anything special.\n          aix_use_runtimelinking=no\n          exp_sym_flag='-Bexport'\n          no_entry_flag=\n        else\n          aix_use_runtimelinking=no\n\n          # Test if we are trying to use run time linking or normal\n          # AIX style linking. If -brtl is somewhere in LDFLAGS, we\n          # have runtime linking enabled, and use it for executables.\n          # For shared libraries, we enable/disable runtime linking\n          # depending on the kind of the shared library created -\n          # when \"with_aix_soname,aix_use_runtimelinking\" is:\n          # \"aix,no\"   lib.a(lib.so.V) shared, rtl:no,  for executables\n          # \"aix,yes\"  lib.so          shared, rtl:yes, for executables\n          #            lib.a           static archive\n          # \"both,no\"  lib.so.V(shr.o) shared, rtl:yes\n          #            lib.a(lib.so.V) shared, rtl:no,  for executables\n          # \"both,yes\" lib.so.V(shr.o) shared, rtl:yes, for executables\n          #            lib.a(lib.so.V) shared, rtl:no\n          # \"svr4,*\"   lib.so.V(shr.o) shared, rtl:yes, for executables\n          #            lib.a           static archive\n          case $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)\n\t    for ld_flag in $LDFLAGS; do\n\t      case $ld_flag in\n\t      *-brtl*)\n\t        aix_use_runtimelinking=yes\n\t        break\n\t        ;;\n\t      esac\n\t    done\n\t    if test svr4,no = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n\t      # With aix-soname=svr4, we create the lib.so.V shared archives only,\n\t      # so we don't have lib.a shared libs to link our executables.\n\t      # We have to force runtime linking in this case.\n\t      aix_use_runtimelinking=yes\n\t      LDFLAGS=\"$LDFLAGS -Wl,-brtl\"\n\t    fi\n\t    ;;\n          esac\n\n          exp_sym_flag='-bexport'\n          no_entry_flag='-bnoentry'\n        fi\n\n        # When large executables or shared objects are built, AIX ld can\n        # have problems creating the table of contents.  If linking a library\n        # or program results in \"error TOC overflow\" add -mminimal-toc to\n        # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n        # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n        _LT_TAGVAR(archive_cmds, $1)=''\n        _LT_TAGVAR(hardcode_direct, $1)=yes\n        _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n        _LT_TAGVAR(link_all_deplibs, $1)=yes\n        _LT_TAGVAR(file_list_spec, $1)='$wl-f,'\n        case $with_aix_soname,$aix_use_runtimelinking in\n        aix,*) ;;\t# no import file\n        svr4,* | *,yes) # use import file\n          # The Import File defines what to hardcode.\n          _LT_TAGVAR(hardcode_direct, $1)=no\n          _LT_TAGVAR(hardcode_direct_absolute, $1)=no\n          ;;\n        esac\n\n        if test yes = \"$GXX\"; then\n          case $host_os in aix4.[[012]]|aix4.[[012]].*)\n          # We only want to do this on AIX 4.2 and lower, the check\n          # below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`$CC -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t     strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t    # We have reworked collect2\n\t    :\n\t  else\n\t    # We have old collect2\n\t    _LT_TAGVAR(hardcode_direct, $1)=unsupported\n\t    # It fails to find uninstalled libraries when the uninstalled\n\t    # path is not listed in the libpath.  Setting hardcode_minus_L\n\t    # to unsupported forces relinking\n\t    _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n          esac\n          shared_flag='-shared'\n\t  if test yes = \"$aix_use_runtimelinking\"; then\n\t    shared_flag=$shared_flag' $wl-G'\n\t  fi\n\t  # Need to ensure runtime linking is disabled for the traditional\n\t  # shared library, or the linker may eventually find shared libraries\n\t  # /with/ Import File - we do not want to mix them.\n\t  shared_flag_aix='-shared'\n\t  shared_flag_svr4='-shared $wl-G'\n        else\n          # not using gcc\n          if test ia64 = \"$host_cpu\"; then\n\t  # VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t  # chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n          else\n\t    if test yes = \"$aix_use_runtimelinking\"; then\n\t      shared_flag='$wl-G'\n\t    else\n\t      shared_flag='$wl-bM:SRE'\n\t    fi\n\t    shared_flag_aix='$wl-bM:SRE'\n\t    shared_flag_svr4='$wl-G'\n          fi\n        fi\n\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-bexpall'\n        # It seems that -bexpall does not export symbols beginning with\n        # underscore (_), so it is better to generate a list of symbols to\n\t# export.\n        _LT_TAGVAR(always_export_symbols, $1)=yes\n\tif test aix,yes = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n          # Warning - without using the other runtime loading flags (-brtl),\n          # -berok will link without error, but may produce a broken library.\n          # The \"-G\" linker flag allows undefined symbols.\n          _LT_TAGVAR(no_undefined_flag, $1)='-bernotok'\n          # Determine the default libpath from the value encoded in an empty\n          # executable.\n          _LT_SYS_MODULE_PATH_AIX([$1])\n          _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\n          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs $wl'$no_entry_flag' $compiler_flags `if test -n \"$allow_undefined_flag\"; then func_echo_all \"$wl$allow_undefined_flag\"; else :; fi` $wl'$exp_sym_flag:\\$export_symbols' '$shared_flag\n        else\n          if test ia64 = \"$host_cpu\"; then\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R $libdir:/usr/lib:/lib'\n\t    _LT_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\$wl$no_entry_flag\"' $compiler_flags $wl$allow_undefined_flag '\"\\$wl$exp_sym_flag:\\$export_symbols\"\n          else\n\t    # Determine the default libpath from the value encoded in an\n\t    # empty executable.\n\t    _LT_SYS_MODULE_PATH_AIX([$1])\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\t    # Warning - without using the other run time loading flags,\n\t    # -berok will link without error, but may produce a broken library.\n\t    _LT_TAGVAR(no_undefined_flag, $1)=' $wl-bernotok'\n\t    _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-berok'\n\t    if test yes = \"$with_gnu_ld\"; then\n\t      # We only use this code for GNU lds that support --whole-archive.\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t    else\n\t      # Exported symbols can be pulled into shared objects from archives\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t    fi\n\t    _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$RM -r $output_objdir/$realname.d~$MKDIR $output_objdir/$realname.d'\n\t    # -brtl affects multiple linker settings, -berok does not and is overridden later\n\t    compiler_flags_filtered='`func_echo_all \"$compiler_flags \" | $SED -e \"s%-brtl\\\\([[, ]]\\\\)%-berok\\\\1%g\"`'\n\t    if test svr4 != \"$with_aix_soname\"; then\n\t      # This is similar to how AIX traditionally builds its shared\n\t      # libraries. Need -bnortl late, we may have -brtl in LDFLAGS.\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$CC '$shared_flag_aix' -o $output_objdir/$realname.d/$soname $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$realname.d/$soname'\n\t    fi\n\t    if test aix != \"$with_aix_soname\"; then\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$CC '$shared_flag_svr4' -o $output_objdir/$realname.d/$shared_archive_member_spec.o $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$STRIP -e $output_objdir/$realname.d/$shared_archive_member_spec.o~( func_echo_all \"#! $soname($shared_archive_member_spec.o)\"; if test shr_64 = \"$shared_archive_member_spec\"; then func_echo_all \"# 64\"; else func_echo_all \"# 32\"; fi; cat $export_symbols ) > $output_objdir/$realname.d/$shared_archive_member_spec.imp~$AR $AR_FLAGS $output_objdir/$soname $output_objdir/$realname.d/$shared_archive_member_spec.o $output_objdir/$realname.d/$shared_archive_member_spec.imp'\n\t    else\n\t      # used by -dlpreopen to get the symbols\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$MV  $output_objdir/$realname.d/$soname $output_objdir'\n\t    fi\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$RM -r $output_objdir/$realname.d'\n          fi\n        fi\n        ;;\n\n      beos*)\n\tif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  # Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t  # support --undefined.  This deserves some investigation.  FIXME\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\telse\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n\n      chorus*)\n        case $cc_basename in\n          *)\n\t  # FIXME: insert proper C++ library support\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\t  ;;\n        esac\n        ;;\n\n      cygwin* | mingw* | pw32* | cegcc*)\n\tcase $GXX,$cc_basename in\n\t,cl* | no,cl*)\n\t  # Native MSVC\n\t  # hardcode_libdir_flag_spec is actually meaningless, as there is\n\t  # no search path for DLLs.\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  _LT_TAGVAR(always_export_symbols, $1)=yes\n\t  _LT_TAGVAR(file_list_spec, $1)='@'\n\t  # Tell ltmain to make .lib files, not .a files.\n\t  libext=lib\n\t  # Tell ltmain to make .dll files, not .so files.\n\t  shrext_cmds=.dll\n\t  # FIXME: Setting linknames here is a bad hack.\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~linknames='\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n              cp \"$export_symbols\" \"$output_objdir/$soname.def\";\n              echo \"$tool_output_objdir$soname.def\" > \"$output_objdir/$soname.exp\";\n            else\n              $SED -e '\\''s/^/-link -EXPORT:/'\\'' < $export_symbols > $output_objdir/$soname.exp;\n            fi~\n            $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs \"@$tool_output_objdir$soname.exp\" -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~\n            linknames='\n\t  # The linker will not automatically build a static lib if we build a DLL.\n\t  # _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t  # Don't use ranlib\n\t  _LT_TAGVAR(old_postinstall_cmds, $1)='chmod 644 $oldlib'\n\t  _LT_TAGVAR(postlink_cmds, $1)='lt_outputfile=\"@OUTPUT@\"~\n            lt_tool_outputfile=\"@TOOL_OUTPUT@\"~\n            case $lt_outputfile in\n              *.exe|*.EXE) ;;\n              *)\n                lt_outputfile=$lt_outputfile.exe\n                lt_tool_outputfile=$lt_tool_outputfile.exe\n                ;;\n            esac~\n            func_to_tool_file \"$lt_outputfile\"~\n            if test : != \"$MANIFEST_TOOL\" && test -f \"$lt_outputfile.manifest\"; then\n              $MANIFEST_TOOL -manifest \"$lt_tool_outputfile.manifest\" -outputresource:\"$lt_tool_outputfile\" || exit 1;\n              $RM \"$lt_outputfile.manifest\";\n            fi'\n\t  ;;\n\t*)\n\t  # g++\n\t  # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n\t  # as there is no search path for DLLs.\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-all-symbols'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  _LT_TAGVAR(always_export_symbols, $1)=no\n\t  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\n\t  if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t    # If the export-symbols file already is a .def file, use it as\n\t    # is; otherwise, prepend EXPORTS...\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n              cp $export_symbols $output_objdir/$soname.def;\n            else\n              echo EXPORTS > $output_objdir/$soname.def;\n              cat $export_symbols >> $output_objdir/$soname.def;\n            fi~\n            $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t  else\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t  fi\n\t  ;;\n\tesac\n\t;;\n      darwin* | rhapsody*)\n        _LT_DARWIN_LINKER_FEATURES($1)\n\t;;\n\n      os2*)\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t_LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\tshrext_cmds=.dll\n\t_LT_TAGVAR(archive_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t  $ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t  $ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t  $ECHO EXPORTS >> $output_objdir/$libname.def~\n\t  emxexp $libobjs | $SED /\"_DLL_InitTerm\"/d >> $output_objdir/$libname.def~\n\t  $CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\t  emximp -o $lib $output_objdir/$libname.def'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t  $ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t  $ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t  $ECHO EXPORTS >> $output_objdir/$libname.def~\n\t  prefix_cmds=\"$SED\"~\n\t  if test EXPORTS = \"`$SED 1q $export_symbols`\"; then\n\t    prefix_cmds=\"$prefix_cmds -e 1d\";\n\t  fi~\n\t  prefix_cmds=\"$prefix_cmds -e \\\"s/^\\(.*\\)$/_\\1/g\\\"\"~\n\t  cat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~\n\t  $CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\t  emximp -o $lib $output_objdir/$libname.def'\n\t_LT_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t;;\n\n      dgux*)\n        case $cc_basename in\n          ec++*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          ghcx*)\n\t    # Green Hills C++ Compiler\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      freebsd2.*)\n        # C++ shared libraries reported to be fairly broken before\n\t# switch to ELF\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      freebsd-elf*)\n        _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n        ;;\n\n      freebsd* | dragonfly*)\n        # FreeBSD 3 and later use GNU C++ and GNU ld with standard ELF\n        # conventions\n        _LT_TAGVAR(ld_shlibs, $1)=yes\n        ;;\n\n      haiku*)\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n        _LT_TAGVAR(link_all_deplibs, $1)=yes\n        ;;\n\n      hpux9*)\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n        _LT_TAGVAR(hardcode_direct, $1)=yes\n        _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t             # but as the default\n\t\t\t\t             # location of the library.\n\n        case $cc_basename in\n          CC*)\n            # FIXME: insert proper C++ library support\n            _LT_TAGVAR(ld_shlibs, $1)=no\n            ;;\n          aCC*)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -b $wl+b $wl$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n            # Commands to make compiler produce verbose output that lists\n            # what \"hidden\" libraries, object files and flags are used when\n            # linking a shared library.\n            #\n            # There doesn't appear to be a way to prevent this compiler from\n            # explicitly linking system object files so we need to strip them\n            # from the output so that they don't get included in the library\n            # dependencies.\n            output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $EGREP \"\\-L\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n            ;;\n          *)\n            if test yes = \"$GXX\"; then\n              _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared -nostdlib $pic_flag $wl+b $wl$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n            else\n              # FIXME: insert proper C++ library support\n              _LT_TAGVAR(ld_shlibs, $1)=no\n            fi\n            ;;\n        esac\n        ;;\n\n      hpux10*|hpux11*)\n        if test no = \"$with_gnu_ld\"; then\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n\t  _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n          case $host_cpu in\n            hppa*64*|ia64*)\n              ;;\n            *)\n\t      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n              ;;\n          esac\n        fi\n        case $host_cpu in\n          hppa*64*|ia64*)\n            _LT_TAGVAR(hardcode_direct, $1)=no\n            _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n            ;;\n          *)\n            _LT_TAGVAR(hardcode_direct, $1)=yes\n            _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t\t         # but as the default\n\t\t\t\t\t         # location of the library.\n            ;;\n        esac\n\n        case $cc_basename in\n          CC*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          aCC*)\n\t    case $host_cpu in\n\t      hppa*64*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      ia64*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      *)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t    esac\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $GREP \"\\-L\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n          *)\n\t    if test yes = \"$GXX\"; then\n\t      if test no = \"$with_gnu_ld\"; then\n\t        case $host_cpu in\n\t          hppa*64*)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC $wl+h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          ia64*)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $pic_flag $wl+h $wl$soname $wl+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          *)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t        esac\n\t      fi\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      _LT_TAGVAR(ld_shlibs, $1)=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      interix[[3-9]]*)\n\t_LT_TAGVAR(hardcode_direct, $1)=no\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\t# Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n\t# Instead, shared libraries are loaded at an image base (0x10000000 by\n\t# default) and relocated if they conflict, which is a slow very memory\n\t# consuming and fragmenting process.  To avoid this, we pick a random,\n\t# 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n\t# time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='sed \"s|^|_|\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--retain-symbols-file,$output_objdir/$soname.expsym $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t;;\n      irix5* | irix6*)\n        case $cc_basename in\n          CC*)\n\t    # SGI C++\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -all -multigot $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -ar\", where \"CC\" is the IRIX C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -ar -WR,-u -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    if test yes = \"$GXX\"; then\n\t      if test no = \"$with_gnu_ld\"; then\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t      else\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` -o $lib'\n\t      fi\n\t    fi\n\t    _LT_TAGVAR(link_all_deplibs, $1)=yes\n\t    ;;\n        esac\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n        _LT_TAGVAR(inherit_rpath, $1)=yes\n        ;;\n\n      linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib $wl-retain-symbols-file,$export_symbols; mv \\$templib $lib'\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1 | $GREP \"ld\"`; rm -f libconftest$shared_ext; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -Bstatic\", where \"CC\" is the KAI C++ compiler.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs'\n\t    ;;\n\t  icpc* | ecpc* )\n\t    # Intel C++\n\t    with_gnu_ld=yes\n\t    # version 8.0 and above of icpc choke on multiply defined symbols\n\t    # if we add $predep_objects and $postdep_objects, however 7.1 and\n\t    # earlier do not add the objects themselves.\n\t    case `$CC -V 2>&1` in\n\t      *\"Version 7.\"*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t      *)  # Version 8.0 or newer\n\t        tmp_idyn=\n\t        case $host_cpu in\n\t\t  ia64*) tmp_idyn=' -i_dynamic';;\n\t\tesac\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t    esac\n\t    _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t    ;;\n          pgCC* | pgcpp*)\n            # Portland Group C++ compiler\n\t    case `$CC -V` in\n\t    *pgCC\\ [[1-5]].* | *pgcpp\\ [[1-5]].*)\n\t      _LT_TAGVAR(prelink_cmds, $1)='tpldir=Template.dir~\n               rm -rf $tpldir~\n               $CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n               compile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n\t      _LT_TAGVAR(old_archive_cmds, $1)='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n                $AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n                $RANLIB $oldlib'\n\t      _LT_TAGVAR(archive_cmds, $1)='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n                $CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n                $CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t      ;;\n\t    *) # Version 6 and above use weak symbols\n\t      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t      ;;\n\t    esac\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl--rpath $wl$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n            ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname  -o $lib $wl-retain-symbols-file $wl$export_symbols'\n\n\t    runpath_var=LD_RUN_PATH\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld .*$\\)/\\1/\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"X$list\" | $Xsed'\n\t    ;;\n\t  xl* | mpixl* | bgxl*)\n\t    # IBM XL 8.0 on PPC, with GNU ld\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -qmkshrobj $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    if test yes = \"$supports_anon_versioning\"; then\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n                cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n                echo \"local: *; };\" >> $output_objdir/$libname.ver~\n                $CC -qmkshrobj $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'\n\t    fi\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t      _LT_TAGVAR(archive_cmds, $1)='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-retain-symbols-file $wl$export_symbols'\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t      _LT_TAGVAR(compiler_needs_object, $1)=yes\n\n\t      # Not sure whether something based on\n\t      # $CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1\n\t      # would be better.\n\t      output_verbose_link_cmd='func_echo_all'\n\n\t      # Archives containing C++ object files must be created using\n\t      # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t      # necessary to make sure instantiated templates are included\n\t      # in the archive.\n\t      _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n\n      lynxos*)\n        # FIXME: insert proper C++ library support\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      m88k*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      mvs*)\n        case $cc_basename in\n          cxx*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n\t  *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n\tesac\n\t;;\n\n      netbsd*)\n        if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable  -o $lib $predep_objects $libobjs $deplibs $postdep_objects $linker_flags'\n\t  wlarc=\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\tfi\n\t# Workaround some broken pre-1.5 toolchains\n\toutput_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP conftest.$objext | $SED -e \"s:-lgcc -lc -lgcc::\"'\n\t;;\n\n      *nto* | *qnx*)\n        _LT_TAGVAR(ld_shlibs, $1)=yes\n\t;;\n\n      openbsd* | bitrig*)\n\tif test -f /usr/libexec/ld.so; then\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t  if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-retain-symbols-file,$export_symbols -o $lib'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n\t  fi\n\t  output_verbose_link_cmd=func_echo_all\n\telse\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n\n      osf3* | osf4* | osf5*)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo \"$lib\" | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Archives containing C++ object files must be created using\n\t    # the KAI C++ compiler.\n\t    case $host in\n\t      osf3*) _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs' ;;\n\t      *) _LT_TAGVAR(old_archive_cmds, $1)='$CC -o $oldlib $oldobjs' ;;\n\t    esac\n\t    ;;\n          RCC*)\n\t    # Rational C++ 2.4.1\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          cxx*)\n\t    case $host in\n\t      osf3*)\n\t        _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t\t;;\n\t      *)\n\t        _LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done~\n                  echo \"-hidden\">> $lib.exp~\n                  $CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname $wl-input $wl$lib.exp  `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib~\n                  $RM $lib.exp'\n\t        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t\t;;\n\t    esac\n\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\" | $GREP -v \"ld:\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld.*$\\)/\\1/\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n\t  *)\n\t    if test yes,no = \"$GXX,$with_gnu_ld\"; then\n\t      _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t      case $host in\n\t        osf3*)\n\t          _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t\t  ;;\n\t        *)\n\t          _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-msym $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t\t  ;;\n\t      esac\n\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t      # Commands to make compiler produce verbose output that lists\n\t      # what \"hidden\" libraries, object files and flags are used when\n\t      # linking a shared library.\n\t      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      _LT_TAGVAR(ld_shlibs, $1)=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      psos*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      sunos4*)\n        case $cc_basename in\n          CC*)\n\t    # Sun C++ 4.x\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          lcc*)\n\t    # Lucid\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      solaris*)\n        case $cc_basename in\n          CC* | sunCC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n            _LT_TAGVAR(archive_cmds_need_lc,$1)=yes\n\t    _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n              $CC -G$allow_undefined_flag $wl-M $wl$lib.exp -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t    _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t    case $host_os in\n\t      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t      *)\n\t\t# The compiler driver will combine and reorder linker options,\n\t\t# but understands '-z linker_flag'.\n\t        # Supported since Solaris 2.6 (maybe 2.5.1?)\n\t\t_LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'\n\t        ;;\n\t    esac\n\t    _LT_TAGVAR(link_all_deplibs, $1)=yes\n\n\t    output_verbose_link_cmd='func_echo_all'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t    ;;\n          gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\n\t    # The C++ compiler must be used to create the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC $LDFLAGS -archive -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    # GNU C++ compiler with Solaris linker\n\t    if test yes,no = \"$GXX,$with_gnu_ld\"; then\n\t      _LT_TAGVAR(no_undefined_flag, $1)=' $wl-z ${wl}defs'\n\t      if $CC --version | $GREP -v '^2\\.7' > /dev/null; then\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n                  $CC -shared $pic_flag -nostdlib $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\t      else\n\t        # g++ 2.7 appears to require '-G' NOT '-shared' on this\n\t        # platform.\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -G -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n                  $CC -G -nostdlib $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -G $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\t      fi\n\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R $wl$libdir'\n\t      case $host_os in\n\t\tsolaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t\t*)\n\t\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl-z ${wl}allextract$convenience $wl-z ${wl}defaultextract'\n\t\t  ;;\n\t      esac\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n      _LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      case $cc_basename in\n        CC*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n      esac\n      ;;\n\n      sysv5* | sco3.2v5* | sco5v6*)\n\t# Note: We CANNOT use -z defs as we might desire, because we do not\n\t# link with -lc, and that would cause any symbols used from libc to\n\t# always be unresolved, which means just about no library would\n\t# ever link correctly.  If we're not using GNU ld we use -z text\n\t# though, which does catch some bad symbols but isn't as heavy-handed\n\t# as -z defs.\n\t_LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n\t_LT_TAGVAR(allow_undefined_flag, $1)='$wl-z,nodefs'\n\t_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R,$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n\t_LT_TAGVAR(link_all_deplibs, $1)=yes\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-Bexport'\n\trunpath_var='LD_RUN_PATH'\n\n\tcase $cc_basename in\n          CC*)\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Tprelink_objects $oldobjs~\n              '\"$_LT_TAGVAR(old_archive_cmds, $1)\"\n\t    _LT_TAGVAR(reload_cmds, $1)='$CC -Tprelink_objects $reload_objs~\n              '\"$_LT_TAGVAR(reload_cmds, $1)\"\n\t    ;;\n\t  *)\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    ;;\n\tesac\n      ;;\n\n      tandem*)\n        case $cc_basename in\n          NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      vxworks*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      *)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n    esac\n\n    AC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])\n    test no = \"$_LT_TAGVAR(ld_shlibs, $1)\" && can_build_shared=no\n\n    _LT_TAGVAR(GCC, $1)=$GXX\n    _LT_TAGVAR(LD, $1)=$LD\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_SYS_HIDDEN_LIBDEPS($1)\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\n  LDCXX=$LD\n  LD=$lt_save_LD\n  GCC=$lt_save_GCC\n  with_gnu_ld=$lt_save_with_gnu_ld\n  lt_cv_path_LDCXX=$lt_cv_path_LD\n  lt_cv_path_LD=$lt_save_path_LD\n  lt_cv_prog_gnu_ldcxx=$lt_cv_prog_gnu_ld\n  lt_cv_prog_gnu_ld=$lt_save_with_gnu_ld\nfi # test yes != \"$_lt_caught_CXX_error\"\n\nAC_LANG_POP\n])# _LT_LANG_CXX_CONFIG\n\n\n# _LT_FUNC_STRIPNAME_CNF\n# ----------------------\n# func_stripname_cnf prefix suffix name\n# strip PREFIX and SUFFIX off of NAME.\n# PREFIX and SUFFIX must not contain globbing or regex special\n# characters, hashes, percent signs, but SUFFIX may contain a leading\n# dot (in which case that matches only a dot).\n#\n# This function is identical to the (non-XSI) version of func_stripname,\n# except this one can be used by m4 code that may be executed by configure,\n# rather than the libtool script.\nm4_defun([_LT_FUNC_STRIPNAME_CNF],[dnl\nAC_REQUIRE([_LT_DECL_SED])\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])\nfunc_stripname_cnf ()\n{\n  case @S|@2 in\n  .*) func_stripname_result=`$ECHO \"@S|@3\" | $SED \"s%^@S|@1%%; s%\\\\\\\\@S|@2\\$%%\"`;;\n  *)  func_stripname_result=`$ECHO \"@S|@3\" | $SED \"s%^@S|@1%%; s%@S|@2\\$%%\"`;;\n  esac\n} # func_stripname_cnf\n])# _LT_FUNC_STRIPNAME_CNF\n\n\n# _LT_SYS_HIDDEN_LIBDEPS([TAGNAME])\n# ---------------------------------\n# Figure out \"hidden\" library dependencies from verbose\n# compiler output when linking a shared library.\n# Parse the compiler output and extract the necessary\n# objects, libraries and library flags.\nm4_defun([_LT_SYS_HIDDEN_LIBDEPS],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nAC_REQUIRE([_LT_FUNC_STRIPNAME_CNF])dnl\n# Dependencies to place before and after the object being linked:\n_LT_TAGVAR(predep_objects, $1)=\n_LT_TAGVAR(postdep_objects, $1)=\n_LT_TAGVAR(predeps, $1)=\n_LT_TAGVAR(postdeps, $1)=\n_LT_TAGVAR(compiler_lib_search_path, $1)=\n\ndnl we can't use the lt_simple_compile_test_code here,\ndnl because it contains code intended for an executable,\ndnl not a library.  It's possible we should let each\ndnl tag define a new lt_????_link_test_code variable,\ndnl but it's only used here...\nm4_if([$1], [], [cat > conftest.$ac_ext <<_LT_EOF\nint a;\nvoid foo (void) { a = 0; }\n_LT_EOF\n], [$1], [CXX], [cat > conftest.$ac_ext <<_LT_EOF\nclass Foo\n{\npublic:\n  Foo (void) { a = 0; }\nprivate:\n  int a;\n};\n_LT_EOF\n], [$1], [F77], [cat > conftest.$ac_ext <<_LT_EOF\n      subroutine foo\n      implicit none\n      integer*4 a\n      a=0\n      return\n      end\n_LT_EOF\n], [$1], [FC], [cat > conftest.$ac_ext <<_LT_EOF\n      subroutine foo\n      implicit none\n      integer a\n      a=0\n      return\n      end\n_LT_EOF\n], [$1], [GCJ], [cat > conftest.$ac_ext <<_LT_EOF\npublic class foo {\n  private int a;\n  public void bar (void) {\n    a = 0;\n  }\n};\n_LT_EOF\n], [$1], [GO], [cat > conftest.$ac_ext <<_LT_EOF\npackage foo\nfunc foo() {\n}\n_LT_EOF\n])\n\n_lt_libdeps_save_CFLAGS=$CFLAGS\ncase \"$CC $CFLAGS \" in #(\n*\\ -flto*\\ *) CFLAGS=\"$CFLAGS -fno-lto\" ;;\n*\\ -fwhopr*\\ *) CFLAGS=\"$CFLAGS -fno-whopr\" ;;\n*\\ -fuse-linker-plugin*\\ *) CFLAGS=\"$CFLAGS -fno-use-linker-plugin\" ;;\nesac\n\ndnl Parse the compiler output and extract the necessary\ndnl objects, libraries and library flags.\nif AC_TRY_EVAL(ac_compile); then\n  # Parse the compiler output and extract the necessary\n  # objects, libraries and library flags.\n\n  # Sentinel used to keep track of whether or not we are before\n  # the conftest object file.\n  pre_test_object_deps_done=no\n\n  for p in `eval \"$output_verbose_link_cmd\"`; do\n    case $prev$p in\n\n    -L* | -R* | -l*)\n       # Some compilers place space between \"-{L,R}\" and the path.\n       # Remove the space.\n       if test x-L = \"$p\" ||\n          test x-R = \"$p\"; then\n\t prev=$p\n\t continue\n       fi\n\n       # Expand the sysroot to ease extracting the directories later.\n       if test -z \"$prev\"; then\n         case $p in\n         -L*) func_stripname_cnf '-L' '' \"$p\"; prev=-L; p=$func_stripname_result ;;\n         -R*) func_stripname_cnf '-R' '' \"$p\"; prev=-R; p=$func_stripname_result ;;\n         -l*) func_stripname_cnf '-l' '' \"$p\"; prev=-l; p=$func_stripname_result ;;\n         esac\n       fi\n       case $p in\n       =*) func_stripname_cnf '=' '' \"$p\"; p=$lt_sysroot$func_stripname_result ;;\n       esac\n       if test no = \"$pre_test_object_deps_done\"; then\n\t case $prev in\n\t -L | -R)\n\t   # Internal compiler library paths should come after those\n\t   # provided the user.  The postdeps already come after the\n\t   # user supplied libs so there is no need to process them.\n\t   if test -z \"$_LT_TAGVAR(compiler_lib_search_path, $1)\"; then\n\t     _LT_TAGVAR(compiler_lib_search_path, $1)=$prev$p\n\t   else\n\t     _LT_TAGVAR(compiler_lib_search_path, $1)=\"${_LT_TAGVAR(compiler_lib_search_path, $1)} $prev$p\"\n\t   fi\n\t   ;;\n\t # The \"-l\" case would never come before the object being\n\t # linked, so don't bother handling this case.\n\t esac\n       else\n\t if test -z \"$_LT_TAGVAR(postdeps, $1)\"; then\n\t   _LT_TAGVAR(postdeps, $1)=$prev$p\n\t else\n\t   _LT_TAGVAR(postdeps, $1)=\"${_LT_TAGVAR(postdeps, $1)} $prev$p\"\n\t fi\n       fi\n       prev=\n       ;;\n\n    *.lto.$objext) ;; # Ignore GCC LTO objects\n    *.$objext)\n       # This assumes that the test object file only shows up\n       # once in the compiler output.\n       if test \"$p\" = \"conftest.$objext\"; then\n\t pre_test_object_deps_done=yes\n\t continue\n       fi\n\n       if test no = \"$pre_test_object_deps_done\"; then\n\t if test -z \"$_LT_TAGVAR(predep_objects, $1)\"; then\n\t   _LT_TAGVAR(predep_objects, $1)=$p\n\t else\n\t   _LT_TAGVAR(predep_objects, $1)=\"$_LT_TAGVAR(predep_objects, $1) $p\"\n\t fi\n       else\n\t if test -z \"$_LT_TAGVAR(postdep_objects, $1)\"; then\n\t   _LT_TAGVAR(postdep_objects, $1)=$p\n\t else\n\t   _LT_TAGVAR(postdep_objects, $1)=\"$_LT_TAGVAR(postdep_objects, $1) $p\"\n\t fi\n       fi\n       ;;\n\n    *) ;; # Ignore the rest.\n\n    esac\n  done\n\n  # Clean up.\n  rm -f a.out a.exe\nelse\n  echo \"libtool.m4: error: problem compiling $1 test program\"\nfi\n\n$RM -f confest.$objext\nCFLAGS=$_lt_libdeps_save_CFLAGS\n\n# PORTME: override above test on systems where it is broken\nm4_if([$1], [CXX],\n[case $host_os in\ninterix[[3-9]]*)\n  # Interix 3.5 installs completely hosed .la files for C++, so rather than\n  # hack all around it, let's just trust \"g++\" to DTRT.\n  _LT_TAGVAR(predep_objects,$1)=\n  _LT_TAGVAR(postdep_objects,$1)=\n  _LT_TAGVAR(postdeps,$1)=\n  ;;\nesac\n])\n\ncase \" $_LT_TAGVAR(postdeps, $1) \" in\n*\" -lc \"*) _LT_TAGVAR(archive_cmds_need_lc, $1)=no ;;\nesac\n _LT_TAGVAR(compiler_lib_search_dirs, $1)=\nif test -n \"${_LT_TAGVAR(compiler_lib_search_path, $1)}\"; then\n _LT_TAGVAR(compiler_lib_search_dirs, $1)=`echo \" ${_LT_TAGVAR(compiler_lib_search_path, $1)}\" | $SED -e 's! -L! !g' -e 's!^ !!'`\nfi\n_LT_TAGDECL([], [compiler_lib_search_dirs], [1],\n    [The directories searched by this compiler when creating a shared library])\n_LT_TAGDECL([], [predep_objects], [1],\n    [Dependencies to place before and after the objects being linked to\n    create a shared library])\n_LT_TAGDECL([], [postdep_objects], [1])\n_LT_TAGDECL([], [predeps], [1])\n_LT_TAGDECL([], [postdeps], [1])\n_LT_TAGDECL([], [compiler_lib_search_path], [1],\n    [The library search path used internally by the compiler when linking\n    a shared library])\n])# _LT_SYS_HIDDEN_LIBDEPS\n\n\n# _LT_LANG_F77_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for a Fortran 77 compiler are\n# suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_F77_CONFIG],\n[AC_LANG_PUSH(Fortran 77)\nif test -z \"$F77\" || test no = \"$F77\"; then\n  _lt_disable_F77=yes\nfi\n\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for f77 test sources.\nac_ext=f\n\n# Object file extension for compiled f77 test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the F77 compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test yes != \"$_lt_disable_F77\"; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"\\\n      subroutine t\n      return\n      end\n\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code=\"\\\n      program t\n      end\n\"\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_GCC=$GCC\n  lt_save_CFLAGS=$CFLAGS\n  CC=${F77-\"f77\"}\n  CFLAGS=$FFLAGS\n  compiler=$CC\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n  GCC=$G77\n  if test -n \"$compiler\"; then\n    AC_MSG_CHECKING([if libtool supports shared libraries])\n    AC_MSG_RESULT([$can_build_shared])\n\n    AC_MSG_CHECKING([whether to build shared libraries])\n    test no = \"$can_build_shared\" && enable_shared=no\n\n    # On AIX, shared libraries and static libraries use the same namespace, and\n    # are all built from PIC.\n    case $host_os in\n      aix3*)\n        test yes = \"$enable_shared\" && enable_static=no\n        if test -n \"$RANLIB\"; then\n          archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n          postinstall_cmds='$RANLIB $lib'\n        fi\n        ;;\n      aix[[4-9]]*)\n\tif test ia64 != \"$host_cpu\"; then\n\t  case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in\n\t  yes,aix,yes) ;;\t\t# shared object as lib.so file only\n\t  yes,svr4,*) ;;\t\t# shared object as lib.so archive member only\n\t  yes,*) enable_static=no ;;\t# shared object in lib.a archive as well\n\t  esac\n\tfi\n        ;;\n    esac\n    AC_MSG_RESULT([$enable_shared])\n\n    AC_MSG_CHECKING([whether to build static libraries])\n    # Make sure either enable_shared or enable_static is yes.\n    test yes = \"$enable_shared\" || enable_static=yes\n    AC_MSG_RESULT([$enable_static])\n\n    _LT_TAGVAR(GCC, $1)=$G77\n    _LT_TAGVAR(LD, $1)=$LD\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  GCC=$lt_save_GCC\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\nfi # test yes != \"$_lt_disable_F77\"\n\nAC_LANG_POP\n])# _LT_LANG_F77_CONFIG\n\n\n# _LT_LANG_FC_CONFIG([TAG])\n# -------------------------\n# Ensure that the configuration variables for a Fortran compiler are\n# suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_FC_CONFIG],\n[AC_LANG_PUSH(Fortran)\n\nif test -z \"$FC\" || test no = \"$FC\"; then\n  _lt_disable_FC=yes\nfi\n\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for fc test sources.\nac_ext=${ac_fc_srcext-f}\n\n# Object file extension for compiled fc test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the FC compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test yes != \"$_lt_disable_FC\"; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"\\\n      subroutine t\n      return\n      end\n\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code=\"\\\n      program t\n      end\n\"\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_GCC=$GCC\n  lt_save_CFLAGS=$CFLAGS\n  CC=${FC-\"f95\"}\n  CFLAGS=$FCFLAGS\n  compiler=$CC\n  GCC=$ac_cv_fc_compiler_gnu\n\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n\n  if test -n \"$compiler\"; then\n    AC_MSG_CHECKING([if libtool supports shared libraries])\n    AC_MSG_RESULT([$can_build_shared])\n\n    AC_MSG_CHECKING([whether to build shared libraries])\n    test no = \"$can_build_shared\" && enable_shared=no\n\n    # On AIX, shared libraries and static libraries use the same namespace, and\n    # are all built from PIC.\n    case $host_os in\n      aix3*)\n        test yes = \"$enable_shared\" && enable_static=no\n        if test -n \"$RANLIB\"; then\n          archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n          postinstall_cmds='$RANLIB $lib'\n        fi\n        ;;\n      aix[[4-9]]*)\n\tif test ia64 != \"$host_cpu\"; then\n\t  case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in\n\t  yes,aix,yes) ;;\t\t# shared object as lib.so file only\n\t  yes,svr4,*) ;;\t\t# shared object as lib.so archive member only\n\t  yes,*) enable_static=no ;;\t# shared object in lib.a archive as well\n\t  esac\n\tfi\n        ;;\n    esac\n    AC_MSG_RESULT([$enable_shared])\n\n    AC_MSG_CHECKING([whether to build static libraries])\n    # Make sure either enable_shared or enable_static is yes.\n    test yes = \"$enable_shared\" || enable_static=yes\n    AC_MSG_RESULT([$enable_static])\n\n    _LT_TAGVAR(GCC, $1)=$ac_cv_fc_compiler_gnu\n    _LT_TAGVAR(LD, $1)=$LD\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_SYS_HIDDEN_LIBDEPS($1)\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  GCC=$lt_save_GCC\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\nfi # test yes != \"$_lt_disable_FC\"\n\nAC_LANG_POP\n])# _LT_LANG_FC_CONFIG\n\n\n# _LT_LANG_GCJ_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for the GNU Java Compiler compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_GCJ_CONFIG],\n[AC_REQUIRE([LT_PROG_GCJ])dnl\nAC_LANG_SAVE\n\n# Source file extension for Java test sources.\nac_ext=java\n\n# Object file extension for compiled Java test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"class foo {}\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='public class conftest { public static void main(String[[]] argv) {}; }'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=yes\nCC=${GCJ-\"gcj\"}\nCFLAGS=$GCJFLAGS\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_TAGVAR(LD, $1)=$LD\n_LT_CC_BASENAME([$compiler])\n\n# GCJ did not exist at the time GCC didn't implicitly link libc in.\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n\n  _LT_CONFIG($1)\nfi\n\nAC_LANG_RESTORE\n\nGCC=$lt_save_GCC\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_GCJ_CONFIG\n\n\n# _LT_LANG_GO_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for the GNU Go compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_GO_CONFIG],\n[AC_REQUIRE([LT_PROG_GO])dnl\nAC_LANG_SAVE\n\n# Source file extension for Go test sources.\nac_ext=go\n\n# Object file extension for compiled Go test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"package main; func main() { }\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='package main; func main() { }'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=yes\nCC=${GOC-\"gccgo\"}\nCFLAGS=$GOFLAGS\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_TAGVAR(LD, $1)=$LD\n_LT_CC_BASENAME([$compiler])\n\n# Go did not exist at the time GCC didn't implicitly link libc in.\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n\n  _LT_CONFIG($1)\nfi\n\nAC_LANG_RESTORE\n\nGCC=$lt_save_GCC\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_GO_CONFIG\n\n\n# _LT_LANG_RC_CONFIG([TAG])\n# -------------------------\n# Ensure that the configuration variables for the Windows resource compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_RC_CONFIG],\n[AC_REQUIRE([LT_PROG_RC])dnl\nAC_LANG_SAVE\n\n# Source file extension for RC test sources.\nac_ext=rc\n\n# Object file extension for compiled RC test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code='sample MENU { MENUITEM \"&Soup\", 100, CHECKED }'\n\n# Code to be used in simple link tests\nlt_simple_link_test_code=$lt_simple_compile_test_code\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=\nCC=${RC-\"windres\"}\nCFLAGS=\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_CC_BASENAME([$compiler])\n_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n\nif test -n \"$compiler\"; then\n  :\n  _LT_CONFIG($1)\nfi\n\nGCC=$lt_save_GCC\nAC_LANG_RESTORE\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_RC_CONFIG\n\n\n# LT_PROG_GCJ\n# -----------\nAC_DEFUN([LT_PROG_GCJ],\n[m4_ifdef([AC_PROG_GCJ], [AC_PROG_GCJ],\n  [m4_ifdef([A][M_PROG_GCJ], [A][M_PROG_GCJ],\n    [AC_CHECK_TOOL(GCJ, gcj,)\n      test set = \"${GCJFLAGS+set}\" || GCJFLAGS=\"-g -O2\"\n      AC_SUBST(GCJFLAGS)])])[]dnl\n])\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_GCJ], [LT_PROG_GCJ])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_GCJ], [])\n\n\n# LT_PROG_GO\n# ----------\nAC_DEFUN([LT_PROG_GO],\n[AC_CHECK_TOOL(GOC, gccgo,)\n])\n\n\n# LT_PROG_RC\n# ----------\nAC_DEFUN([LT_PROG_RC],\n[AC_CHECK_TOOL(RC, windres,)\n])\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_RC], [LT_PROG_RC])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_RC], [])\n\n\n# _LT_DECL_EGREP\n# --------------\n# If we don't have a new enough Autoconf to choose the best grep\n# available, choose the one first in the user's PATH.\nm4_defun([_LT_DECL_EGREP],\n[AC_REQUIRE([AC_PROG_EGREP])dnl\nAC_REQUIRE([AC_PROG_FGREP])dnl\ntest -z \"$GREP\" && GREP=grep\n_LT_DECL([], [GREP], [1], [A grep program that handles long lines])\n_LT_DECL([], [EGREP], [1], [An ERE matcher])\n_LT_DECL([], [FGREP], [1], [A literal string matcher])\ndnl Non-bleeding-edge autoconf doesn't subst GREP, so do it here too\nAC_SUBST([GREP])\n])\n\n\n# _LT_DECL_OBJDUMP\n# --------------\n# If we don't have a new enough Autoconf to choose the best objdump\n# available, choose the one first in the user's PATH.\nm4_defun([_LT_DECL_OBJDUMP],\n[AC_CHECK_TOOL(OBJDUMP, objdump, false)\ntest -z \"$OBJDUMP\" && OBJDUMP=objdump\n_LT_DECL([], [OBJDUMP], [1], [An object symbol dumper])\nAC_SUBST([OBJDUMP])\n])\n\n# _LT_DECL_DLLTOOL\n# ----------------\n# Ensure DLLTOOL variable is set.\nm4_defun([_LT_DECL_DLLTOOL],\n[AC_CHECK_TOOL(DLLTOOL, dlltool, false)\ntest -z \"$DLLTOOL\" && DLLTOOL=dlltool\n_LT_DECL([], [DLLTOOL], [1], [DLL creation program])\nAC_SUBST([DLLTOOL])\n])\n\n# _LT_DECL_SED\n# ------------\n# Check for a fully-functional sed program, that truncates\n# as few characters as possible.  Prefer GNU sed if found.\nm4_defun([_LT_DECL_SED],\n[AC_PROG_SED\ntest -z \"$SED\" && SED=sed\nXsed=\"$SED -e 1s/^X//\"\n_LT_DECL([], [SED], [1], [A sed program that does not truncate output])\n_LT_DECL([], [Xsed], [\"\\$SED -e 1s/^X//\"],\n    [Sed that helps us avoid accidentally triggering echo(1) options like -n])\n])# _LT_DECL_SED\n\nm4_ifndef([AC_PROG_SED], [\n############################################################\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_SED.  When it is available in   #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\n############################################################\n\nm4_defun([AC_PROG_SED],\n[AC_MSG_CHECKING([for a sed that does not truncate output])\nAC_CACHE_VAL(lt_cv_path_SED,\n[# Loop through the user's path and test for sed and gsed.\n# Then use that list of sed's as ones to test for truncation.\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n  for lt_ac_prog in sed gsed; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      if $as_executable_p \"$as_dir/$lt_ac_prog$ac_exec_ext\"; then\n        lt_ac_sed_list=\"$lt_ac_sed_list $as_dir/$lt_ac_prog$ac_exec_ext\"\n      fi\n    done\n  done\ndone\nIFS=$as_save_IFS\nlt_ac_max=0\nlt_ac_count=0\n# Add /usr/xpg4/bin/sed as it is typically found on Solaris\n# along with /bin/sed that truncates output.\nfor lt_ac_sed in $lt_ac_sed_list /usr/xpg4/bin/sed; do\n  test ! -f \"$lt_ac_sed\" && continue\n  cat /dev/null > conftest.in\n  lt_ac_count=0\n  echo $ECHO_N \"0123456789$ECHO_C\" >conftest.in\n  # Check for GNU sed and select it if it is found.\n  if \"$lt_ac_sed\" --version 2>&1 < /dev/null | grep 'GNU' > /dev/null; then\n    lt_cv_path_SED=$lt_ac_sed\n    break\n  fi\n  while true; do\n    cat conftest.in conftest.in >conftest.tmp\n    mv conftest.tmp conftest.in\n    cp conftest.in conftest.nl\n    echo >>conftest.nl\n    $lt_ac_sed -e 's/a$//' < conftest.nl >conftest.out || break\n    cmp -s conftest.out conftest.nl || break\n    # 10000 chars as input seems more than enough\n    test 10 -lt \"$lt_ac_count\" && break\n    lt_ac_count=`expr $lt_ac_count + 1`\n    if test \"$lt_ac_count\" -gt \"$lt_ac_max\"; then\n      lt_ac_max=$lt_ac_count\n      lt_cv_path_SED=$lt_ac_sed\n    fi\n  done\ndone\n])\nSED=$lt_cv_path_SED\nAC_SUBST([SED])\nAC_MSG_RESULT([$SED])\n])#AC_PROG_SED\n])#m4_ifndef\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_SED], [AC_PROG_SED])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_SED], [])\n\n\n# _LT_CHECK_SHELL_FEATURES\n# ------------------------\n# Find out whether the shell is Bourne or XSI compatible,\n# or has some other useful features.\nm4_defun([_LT_CHECK_SHELL_FEATURES],\n[if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then\n  lt_unset=unset\nelse\n  lt_unset=false\nfi\n_LT_DECL([], [lt_unset], [0], [whether the shell understands \"unset\"])dnl\n\n# test EBCDIC or ASCII\ncase `echo X|tr X '\\101'` in\n A) # ASCII based system\n    # \\n is not interpreted correctly by Solaris 8 /usr/ucb/tr\n  lt_SP2NL='tr \\040 \\012'\n  lt_NL2SP='tr \\015\\012 \\040\\040'\n  ;;\n *) # EBCDIC based system\n  lt_SP2NL='tr \\100 \\n'\n  lt_NL2SP='tr \\r\\n \\100\\100'\n  ;;\nesac\n_LT_DECL([SP2NL], [lt_SP2NL], [1], [turn spaces into newlines])dnl\n_LT_DECL([NL2SP], [lt_NL2SP], [1], [turn newlines into spaces])dnl\n])# _LT_CHECK_SHELL_FEATURES\n\n\n# _LT_PATH_CONVERSION_FUNCTIONS\n# -----------------------------\n# Determine what file name conversion functions should be used by\n# func_to_host_file (and, implicitly, by func_to_host_path).  These are needed\n# for certain cross-compile configurations and native mingw.\nm4_defun([_LT_PATH_CONVERSION_FUNCTIONS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_MSG_CHECKING([how to convert $build file names to $host format])\nAC_CACHE_VAL(lt_cv_to_host_file_cmd,\n[case $host in\n  *-*-mingw* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_host_file_cmd=func_convert_file_msys_to_w32\n        ;;\n      *-*-cygwin* )\n        lt_cv_to_host_file_cmd=func_convert_file_cygwin_to_w32\n        ;;\n      * ) # otherwise, assume *nix\n        lt_cv_to_host_file_cmd=func_convert_file_nix_to_w32\n        ;;\n    esac\n    ;;\n  *-*-cygwin* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_host_file_cmd=func_convert_file_msys_to_cygwin\n        ;;\n      *-*-cygwin* )\n        lt_cv_to_host_file_cmd=func_convert_file_noop\n        ;;\n      * ) # otherwise, assume *nix\n        lt_cv_to_host_file_cmd=func_convert_file_nix_to_cygwin\n        ;;\n    esac\n    ;;\n  * ) # unhandled hosts (and \"normal\" native builds)\n    lt_cv_to_host_file_cmd=func_convert_file_noop\n    ;;\nesac\n])\nto_host_file_cmd=$lt_cv_to_host_file_cmd\nAC_MSG_RESULT([$lt_cv_to_host_file_cmd])\n_LT_DECL([to_host_file_cmd], [lt_cv_to_host_file_cmd],\n         [0], [convert $build file names to $host format])dnl\n\nAC_MSG_CHECKING([how to convert $build file names to toolchain format])\nAC_CACHE_VAL(lt_cv_to_tool_file_cmd,\n[#assume ordinary cross tools, or native build.\nlt_cv_to_tool_file_cmd=func_convert_file_noop\ncase $host in\n  *-*-mingw* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_tool_file_cmd=func_convert_file_msys_to_w32\n        ;;\n    esac\n    ;;\nesac\n])\nto_tool_file_cmd=$lt_cv_to_tool_file_cmd\nAC_MSG_RESULT([$lt_cv_to_tool_file_cmd])\n_LT_DECL([to_tool_file_cmd], [lt_cv_to_tool_file_cmd],\n         [0], [convert $build files to toolchain format])dnl\n])# _LT_PATH_CONVERSION_FUNCTIONS\n",
        "/tmp/vanessa/spack-stage/spack-stage-elpa-2019.11.001-qjdkuz3xp4qrmu3u6sou4k4e2c7p3m4b/spack-src/m4/ltoptions.m4": "# Helper functions for option handling.                    -*- Autoconf -*-\n#\n#   Copyright (C) 2004-2005, 2007-2009, 2011-2015 Free Software\n#   Foundation, Inc.\n#   Written by Gary V. Vaughan, 2004\n#\n# This file is free software; the Free Software Foundation gives\n# unlimited permission to copy and/or distribute it, with or without\n# modifications, as long as this notice is preserved.\n\n# serial 8 ltoptions.m4\n\n# This is to help aclocal find these macros, as it can't see m4_define.\nAC_DEFUN([LTOPTIONS_VERSION], [m4_if([1])])\n\n\n# _LT_MANGLE_OPTION(MACRO-NAME, OPTION-NAME)\n# ------------------------------------------\nm4_define([_LT_MANGLE_OPTION],\n[[_LT_OPTION_]m4_bpatsubst($1__$2, [[^a-zA-Z0-9_]], [_])])\n\n\n# _LT_SET_OPTION(MACRO-NAME, OPTION-NAME)\n# ---------------------------------------\n# Set option OPTION-NAME for macro MACRO-NAME, and if there is a\n# matching handler defined, dispatch to it.  Other OPTION-NAMEs are\n# saved as a flag.\nm4_define([_LT_SET_OPTION],\n[m4_define(_LT_MANGLE_OPTION([$1], [$2]))dnl\nm4_ifdef(_LT_MANGLE_DEFUN([$1], [$2]),\n        _LT_MANGLE_DEFUN([$1], [$2]),\n    [m4_warning([Unknown $1 option '$2'])])[]dnl\n])\n\n\n# _LT_IF_OPTION(MACRO-NAME, OPTION-NAME, IF-SET, [IF-NOT-SET])\n# ------------------------------------------------------------\n# Execute IF-SET if OPTION is set, IF-NOT-SET otherwise.\nm4_define([_LT_IF_OPTION],\n[m4_ifdef(_LT_MANGLE_OPTION([$1], [$2]), [$3], [$4])])\n\n\n# _LT_UNLESS_OPTIONS(MACRO-NAME, OPTION-LIST, IF-NOT-SET)\n# -------------------------------------------------------\n# Execute IF-NOT-SET unless all options in OPTION-LIST for MACRO-NAME\n# are set.\nm4_define([_LT_UNLESS_OPTIONS],\n[m4_foreach([_LT_Option], m4_split(m4_normalize([$2])),\n\t    [m4_ifdef(_LT_MANGLE_OPTION([$1], _LT_Option),\n\t\t      [m4_define([$0_found])])])[]dnl\nm4_ifdef([$0_found], [m4_undefine([$0_found])], [$3\n])[]dnl\n])\n\n\n# _LT_SET_OPTIONS(MACRO-NAME, OPTION-LIST)\n# ----------------------------------------\n# OPTION-LIST is a space-separated list of Libtool options associated\n# with MACRO-NAME.  If any OPTION has a matching handler declared with\n# LT_OPTION_DEFINE, dispatch to that macro; otherwise complain about\n# the unknown option and exit.\nm4_defun([_LT_SET_OPTIONS],\n[# Set options\nm4_foreach([_LT_Option], m4_split(m4_normalize([$2])),\n    [_LT_SET_OPTION([$1], _LT_Option)])\n\nm4_if([$1],[LT_INIT],[\n  dnl\n  dnl Simply set some default values (i.e off) if boolean options were not\n  dnl specified:\n  _LT_UNLESS_OPTIONS([LT_INIT], [dlopen], [enable_dlopen=no\n  ])\n  _LT_UNLESS_OPTIONS([LT_INIT], [win32-dll], [enable_win32_dll=no\n  ])\n  dnl\n  dnl If no reference was made to various pairs of opposing options, then\n  dnl we run the default mode handler for the pair.  For example, if neither\n  dnl 'shared' nor 'disable-shared' was passed, we enable building of shared\n  dnl archives by default:\n  _LT_UNLESS_OPTIONS([LT_INIT], [shared disable-shared], [_LT_ENABLE_SHARED])\n  _LT_UNLESS_OPTIONS([LT_INIT], [static disable-static], [_LT_ENABLE_STATIC])\n  _LT_UNLESS_OPTIONS([LT_INIT], [pic-only no-pic], [_LT_WITH_PIC])\n  _LT_UNLESS_OPTIONS([LT_INIT], [fast-install disable-fast-install],\n\t\t   [_LT_ENABLE_FAST_INSTALL])\n  _LT_UNLESS_OPTIONS([LT_INIT], [aix-soname=aix aix-soname=both aix-soname=svr4],\n\t\t   [_LT_WITH_AIX_SONAME([aix])])\n  ])\n])# _LT_SET_OPTIONS\n\n\n## --------------------------------- ##\n## Macros to handle LT_INIT options. ##\n## --------------------------------- ##\n\n# _LT_MANGLE_DEFUN(MACRO-NAME, OPTION-NAME)\n# -----------------------------------------\nm4_define([_LT_MANGLE_DEFUN],\n[[_LT_OPTION_DEFUN_]m4_bpatsubst(m4_toupper([$1__$2]), [[^A-Z0-9_]], [_])])\n\n\n# LT_OPTION_DEFINE(MACRO-NAME, OPTION-NAME, CODE)\n# -----------------------------------------------\nm4_define([LT_OPTION_DEFINE],\n[m4_define(_LT_MANGLE_DEFUN([$1], [$2]), [$3])[]dnl\n])# LT_OPTION_DEFINE\n\n\n# dlopen\n# ------\nLT_OPTION_DEFINE([LT_INIT], [dlopen], [enable_dlopen=yes\n])\n\nAU_DEFUN([AC_LIBTOOL_DLOPEN],\n[_LT_SET_OPTION([LT_INIT], [dlopen])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you\nput the 'dlopen' option into LT_INIT's first parameter.])\n])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_DLOPEN], [])\n\n\n# win32-dll\n# ---------\n# Declare package support for building win32 dll's.\nLT_OPTION_DEFINE([LT_INIT], [win32-dll],\n[enable_win32_dll=yes\n\ncase $host in\n*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-cegcc*)\n  AC_CHECK_TOOL(AS, as, false)\n  AC_CHECK_TOOL(DLLTOOL, dlltool, false)\n  AC_CHECK_TOOL(OBJDUMP, objdump, false)\n  ;;\nesac\n\ntest -z \"$AS\" && AS=as\n_LT_DECL([], [AS],      [1], [Assembler program])dnl\n\ntest -z \"$DLLTOOL\" && DLLTOOL=dlltool\n_LT_DECL([], [DLLTOOL], [1], [DLL creation program])dnl\n\ntest -z \"$OBJDUMP\" && OBJDUMP=objdump\n_LT_DECL([], [OBJDUMP], [1], [Object dumper program])dnl\n])# win32-dll\n\nAU_DEFUN([AC_LIBTOOL_WIN32_DLL],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\n_LT_SET_OPTION([LT_INIT], [win32-dll])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you\nput the 'win32-dll' option into LT_INIT's first parameter.])\n])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_WIN32_DLL], [])\n\n\n# _LT_ENABLE_SHARED([DEFAULT])\n# ----------------------------\n# implement the --enable-shared flag, and supports the 'shared' and\n# 'disable-shared' LT_INIT options.\n# DEFAULT is either 'yes' or 'no'.  If omitted, it defaults to 'yes'.\nm4_define([_LT_ENABLE_SHARED],\n[m4_define([_LT_ENABLE_SHARED_DEFAULT], [m4_if($1, no, no, yes)])dnl\nAC_ARG_ENABLE([shared],\n    [AS_HELP_STRING([--enable-shared@<:@=PKGS@:>@],\n\t[build shared libraries @<:@default=]_LT_ENABLE_SHARED_DEFAULT[@:>@])],\n    [p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_shared=yes ;;\n    no) enable_shared=no ;;\n    *)\n      enable_shared=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,\n      for pkg in $enableval; do\n\tIFS=$lt_save_ifs\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_shared=yes\n\tfi\n      done\n      IFS=$lt_save_ifs\n      ;;\n    esac],\n    [enable_shared=]_LT_ENABLE_SHARED_DEFAULT)\n\n    _LT_DECL([build_libtool_libs], [enable_shared], [0],\n\t[Whether or not to build shared libraries])\n])# _LT_ENABLE_SHARED\n\nLT_OPTION_DEFINE([LT_INIT], [shared], [_LT_ENABLE_SHARED([yes])])\nLT_OPTION_DEFINE([LT_INIT], [disable-shared], [_LT_ENABLE_SHARED([no])])\n\n# Old names:\nAC_DEFUN([AC_ENABLE_SHARED],\n[_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[shared])\n])\n\nAC_DEFUN([AC_DISABLE_SHARED],\n[_LT_SET_OPTION([LT_INIT], [disable-shared])\n])\n\nAU_DEFUN([AM_ENABLE_SHARED], [AC_ENABLE_SHARED($@)])\nAU_DEFUN([AM_DISABLE_SHARED], [AC_DISABLE_SHARED($@)])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_ENABLE_SHARED], [])\ndnl AC_DEFUN([AM_DISABLE_SHARED], [])\n\n\n\n# _LT_ENABLE_STATIC([DEFAULT])\n# ----------------------------\n# implement the --enable-static flag, and support the 'static' and\n# 'disable-static' LT_INIT options.\n# DEFAULT is either 'yes' or 'no'.  If omitted, it defaults to 'yes'.\nm4_define([_LT_ENABLE_STATIC],\n[m4_define([_LT_ENABLE_STATIC_DEFAULT], [m4_if($1, no, no, yes)])dnl\nAC_ARG_ENABLE([static],\n    [AS_HELP_STRING([--enable-static@<:@=PKGS@:>@],\n\t[build static libraries @<:@default=]_LT_ENABLE_STATIC_DEFAULT[@:>@])],\n    [p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_static=yes ;;\n    no) enable_static=no ;;\n    *)\n     enable_static=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,\n      for pkg in $enableval; do\n\tIFS=$lt_save_ifs\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_static=yes\n\tfi\n      done\n      IFS=$lt_save_ifs\n      ;;\n    esac],\n    [enable_static=]_LT_ENABLE_STATIC_DEFAULT)\n\n    _LT_DECL([build_old_libs], [enable_static], [0],\n\t[Whether or not to build static libraries])\n])# _LT_ENABLE_STATIC\n\nLT_OPTION_DEFINE([LT_INIT], [static], [_LT_ENABLE_STATIC([yes])])\nLT_OPTION_DEFINE([LT_INIT], [disable-static], [_LT_ENABLE_STATIC([no])])\n\n# Old names:\nAC_DEFUN([AC_ENABLE_STATIC],\n[_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[static])\n])\n\nAC_DEFUN([AC_DISABLE_STATIC],\n[_LT_SET_OPTION([LT_INIT], [disable-static])\n])\n\nAU_DEFUN([AM_ENABLE_STATIC], [AC_ENABLE_STATIC($@)])\nAU_DEFUN([AM_DISABLE_STATIC], [AC_DISABLE_STATIC($@)])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_ENABLE_STATIC], [])\ndnl AC_DEFUN([AM_DISABLE_STATIC], [])\n\n\n\n# _LT_ENABLE_FAST_INSTALL([DEFAULT])\n# ----------------------------------\n# implement the --enable-fast-install flag, and support the 'fast-install'\n# and 'disable-fast-install' LT_INIT options.\n# DEFAULT is either 'yes' or 'no'.  If omitted, it defaults to 'yes'.\nm4_define([_LT_ENABLE_FAST_INSTALL],\n[m4_define([_LT_ENABLE_FAST_INSTALL_DEFAULT], [m4_if($1, no, no, yes)])dnl\nAC_ARG_ENABLE([fast-install],\n    [AS_HELP_STRING([--enable-fast-install@<:@=PKGS@:>@],\n    [optimize for fast installation @<:@default=]_LT_ENABLE_FAST_INSTALL_DEFAULT[@:>@])],\n    [p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_fast_install=yes ;;\n    no) enable_fast_install=no ;;\n    *)\n      enable_fast_install=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,\n      for pkg in $enableval; do\n\tIFS=$lt_save_ifs\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_fast_install=yes\n\tfi\n      done\n      IFS=$lt_save_ifs\n      ;;\n    esac],\n    [enable_fast_install=]_LT_ENABLE_FAST_INSTALL_DEFAULT)\n\n_LT_DECL([fast_install], [enable_fast_install], [0],\n\t [Whether or not to optimize for fast installation])dnl\n])# _LT_ENABLE_FAST_INSTALL\n\nLT_OPTION_DEFINE([LT_INIT], [fast-install], [_LT_ENABLE_FAST_INSTALL([yes])])\nLT_OPTION_DEFINE([LT_INIT], [disable-fast-install], [_LT_ENABLE_FAST_INSTALL([no])])\n\n# Old names:\nAU_DEFUN([AC_ENABLE_FAST_INSTALL],\n[_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[fast-install])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you put\nthe 'fast-install' option into LT_INIT's first parameter.])\n])\n\nAU_DEFUN([AC_DISABLE_FAST_INSTALL],\n[_LT_SET_OPTION([LT_INIT], [disable-fast-install])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you put\nthe 'disable-fast-install' option into LT_INIT's first parameter.])\n])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_ENABLE_FAST_INSTALL], [])\ndnl AC_DEFUN([AM_DISABLE_FAST_INSTALL], [])\n\n\n# _LT_WITH_AIX_SONAME([DEFAULT])\n# ----------------------------------\n# implement the --with-aix-soname flag, and support the `aix-soname=aix'\n# and `aix-soname=both' and `aix-soname=svr4' LT_INIT options. DEFAULT\n# is either `aix', `both' or `svr4'.  If omitted, it defaults to `aix'.\nm4_define([_LT_WITH_AIX_SONAME],\n[m4_define([_LT_WITH_AIX_SONAME_DEFAULT], [m4_if($1, svr4, svr4, m4_if($1, both, both, aix))])dnl\nshared_archive_member_spec=\ncase $host,$enable_shared in\npower*-*-aix[[5-9]]*,yes)\n  AC_MSG_CHECKING([which variant of shared library versioning to provide])\n  AC_ARG_WITH([aix-soname],\n    [AS_HELP_STRING([--with-aix-soname=aix|svr4|both],\n      [shared library versioning (aka \"SONAME\") variant to provide on AIX, @<:@default=]_LT_WITH_AIX_SONAME_DEFAULT[@:>@.])],\n    [case $withval in\n    aix|svr4|both)\n      ;;\n    *)\n      AC_MSG_ERROR([Unknown argument to --with-aix-soname])\n      ;;\n    esac\n    lt_cv_with_aix_soname=$with_aix_soname],\n    [AC_CACHE_VAL([lt_cv_with_aix_soname],\n      [lt_cv_with_aix_soname=]_LT_WITH_AIX_SONAME_DEFAULT)\n    with_aix_soname=$lt_cv_with_aix_soname])\n  AC_MSG_RESULT([$with_aix_soname])\n  if test aix != \"$with_aix_soname\"; then\n    # For the AIX way of multilib, we name the shared archive member\n    # based on the bitwidth used, traditionally 'shr.o' or 'shr_64.o',\n    # and 'shr.imp' or 'shr_64.imp', respectively, for the Import File.\n    # Even when GNU compilers ignore OBJECT_MODE but need '-maix64' flag,\n    # the AIX toolchain works better with OBJECT_MODE set (default 32).\n    if test 64 = \"${OBJECT_MODE-32}\"; then\n      shared_archive_member_spec=shr_64\n    else\n      shared_archive_member_spec=shr\n    fi\n  fi\n  ;;\n*)\n  with_aix_soname=aix\n  ;;\nesac\n\n_LT_DECL([], [shared_archive_member_spec], [0],\n    [Shared archive member basename, for filename based shared library versioning on AIX])dnl\n])# _LT_WITH_AIX_SONAME\n\nLT_OPTION_DEFINE([LT_INIT], [aix-soname=aix], [_LT_WITH_AIX_SONAME([aix])])\nLT_OPTION_DEFINE([LT_INIT], [aix-soname=both], [_LT_WITH_AIX_SONAME([both])])\nLT_OPTION_DEFINE([LT_INIT], [aix-soname=svr4], [_LT_WITH_AIX_SONAME([svr4])])\n\n\n# _LT_WITH_PIC([MODE])\n# --------------------\n# implement the --with-pic flag, and support the 'pic-only' and 'no-pic'\n# LT_INIT options.\n# MODE is either 'yes' or 'no'.  If omitted, it defaults to 'both'.\nm4_define([_LT_WITH_PIC],\n[AC_ARG_WITH([pic],\n    [AS_HELP_STRING([--with-pic@<:@=PKGS@:>@],\n\t[try to use only PIC/non-PIC objects @<:@default=use both@:>@])],\n    [lt_p=${PACKAGE-default}\n    case $withval in\n    yes|no) pic_mode=$withval ;;\n    *)\n      pic_mode=default\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,\n      for lt_pkg in $withval; do\n\tIFS=$lt_save_ifs\n\tif test \"X$lt_pkg\" = \"X$lt_p\"; then\n\t  pic_mode=yes\n\tfi\n      done\n      IFS=$lt_save_ifs\n      ;;\n    esac],\n    [pic_mode=m4_default([$1], [default])])\n\n_LT_DECL([], [pic_mode], [0], [What type of objects to build])dnl\n])# _LT_WITH_PIC\n\nLT_OPTION_DEFINE([LT_INIT], [pic-only], [_LT_WITH_PIC([yes])])\nLT_OPTION_DEFINE([LT_INIT], [no-pic], [_LT_WITH_PIC([no])])\n\n# Old name:\nAU_DEFUN([AC_LIBTOOL_PICMODE],\n[_LT_SET_OPTION([LT_INIT], [pic-only])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you\nput the 'pic-only' option into LT_INIT's first parameter.])\n])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_PICMODE], [])\n\n## ----------------- ##\n## LTDL_INIT Options ##\n## ----------------- ##\n\nm4_define([_LTDL_MODE], [])\nLT_OPTION_DEFINE([LTDL_INIT], [nonrecursive],\n\t\t [m4_define([_LTDL_MODE], [nonrecursive])])\nLT_OPTION_DEFINE([LTDL_INIT], [recursive],\n\t\t [m4_define([_LTDL_MODE], [recursive])])\nLT_OPTION_DEFINE([LTDL_INIT], [subproject],\n\t\t [m4_define([_LTDL_MODE], [subproject])])\n\nm4_define([_LTDL_TYPE], [])\nLT_OPTION_DEFINE([LTDL_INIT], [installable],\n\t\t [m4_define([_LTDL_TYPE], [installable])])\nLT_OPTION_DEFINE([LTDL_INIT], [convenience],\n\t\t [m4_define([_LTDL_TYPE], [convenience])])\n"
    },
    "skipped": [],
    "total_files": 306
}