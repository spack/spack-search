{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/ChangeLog.pre-1.10": "commit cb0bc64c16b3a38cbf0c622830c18ac9ea6e2ffe\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Sep 6 17:15:51 2010 +0100\n\n    version: 1.10.0 *release*\n    \n    /me faints with excitement.\n\n cairo-version.h |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 87fad104645c481ab027afbc9fa45c54cacbc9a7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Sep 6 17:14:41 2010 +0100\n\n    NEWS: Sum up 2 years of development for 1.10.0 in 60 lines\n\n NEWS |   61 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 61 insertions(+)\n\ncommit 04623ef9df7274d411a3b7f03129bf43e53e7086\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Sep 6 13:15:55 2010 +0100\n\n    test: Add subsurface-outside-target refs to REFERENCE_IMAGES\n\n test/Makefile.am |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit d5b2c2a12ebea33f4d108d4deec2e9111c8c7e12\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Sep 6 13:10:08 2010 +0100\n\n    test: Rename clip-fill-*-unbounded.image16 ref to match REFERENCE_IMAGES\n\n test/clip-fill-eo-unbounded.image16.ref.png       |  Bin 0 -> 2887 bytes\n test/clip-fill-eo-unbounded.image16.rgb24.ref.png |  Bin 2887 -> 0 bytes\n test/clip-fill-nz-unbounded.image16.ref.png       |  Bin 0 -> 2887 bytes\n test/clip-fill-nz-unbounded.image16.rgb24.ref.png |  Bin 2887 -> 0 bytes\n 4 files changed, 0 insertions(+), 0 deletions(-)\n\ncommit cab9682f9dc4c99dcd51ddb66abd756e2ac7a63c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Sep 6 12:24:47 2010 +0100\n\n    check: Ignore the documentation errors.\n    \n    Currently it is complaining about having documentation for\n    unconfigured sections, ignore it for now.\n\n doc/public/check-doc-coverage.sh |    6 +++++-\n 1 file changed, 5 insertions(+), 1 deletion(-)\n\ncommit 8127f1f5d52bb716dbd70efe096894f2a542f4a9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Sep 6 12:24:14 2010 +0100\n\n    Bump pixman requirements to 0.18.4 for assorted fixes.\n\n README       |    2 +-\n configure.ac |    2 +-\n 2 files changed, 2 insertions(+), 2 deletions(-)\n\ncommit 21a2f90cdef3d592c1d1614852fe3929ed2aa765\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Sep 2 13:19:26 2010 +0100\n\n    check: Make the actual error stand out\n\n doc/public/check-doc-coverage.sh |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit 8258532794d0579f6c1b825b8cfb9c8f7ced4369\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Sep 2 13:15:07 2010 +0100\n\n    Reduce the cairo_device_type_t to only hold the used entries.\n    \n    This should help clarify the documentation by not mentioning non-existent\n    devices and prevent any assumed coupling between surface-type values and\n    devices.\n\n src/cairo.h                              |   49 +++++-------------------------\n util/cairo-gobject/cairo-gobject-enums.c |   24 +++------------\n 2 files changed, 12 insertions(+), 61 deletions(-)\n\ncommit e3afbc1875d618c6d7e893971372be8f9889fc8b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Sep 2 13:07:53 2010 +0100\n\n    check: Fix for link-time-optimisation\n\n src/check-def.sh |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit a9e055ff481303428cd9684dca826bc3f5d868c5\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Thu Sep 2 14:51:30 2010 +0100\n\n    freelist: Separate freelist inlines from the datatype in headers.\n    \n    The cairo-freelist-private.h header has a number of static inline\n    functions which call hidden functions in libcairo.  This poses\n    a problem on Solaris where the native compiler compiles inline\n    functions whether they are used or not, thereby adding the\n    link time requirements on hidden functions from whatever code\n    that includes cairo-freelist-private.h.  Unfortunately the\n    boilerplate code includes cairo-private headers and indirectly\n    the freelist header, so linking the boilerplate helper library\n    fails on Solaris.\n    \n    This patch separates the structure definitions from the function\n    prototypes and static inlines in cairo-freelist-private.h by moving\n    the datatypes to a new cairo-freelist-type-private.h.\n\n src/Makefile.sources              |    1 +\n src/cairo-freelist-private.h      |   28 +------------------\n src/cairo-freelist-type-private.h |   54 +++++++++++++++++++++++++++++++++++++\n src/cairo-xlib-display.c          |    2 +-\n src/cairo-xlib-private.h          |    2 +-\n 5 files changed, 58 insertions(+), 29 deletions(-)\n\ncommit f5632d641c44a143386ca3b413e90ed3b1a85f89\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Thu Sep 2 13:55:55 2010 +0300\n\n    build: Remove stray backslash.\n    \n    A stray backslash bwetween two assignment lines apparently\n    invokes a GNU make extension for conditional assignments.\n    This patch fixes the build when using the native Solaris make.\n\n src/Makefile.sources |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 3a8b8fcc2a8a48cef49211c45723862f9fa8db23\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Sep 1 21:14:40 2010 +0200\n\n    gobject: Fix header defines\n\n util/cairo-gobject/cairo-gobject.h |   64 ++++++++++++++++++------------------\n 1 file changed, 32 insertions(+), 32 deletions(-)\n\ncommit 54a651564cdd2510d0a66f6720c4a45733ff3285\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Sep 1 18:47:16 2010 +0200\n\n    build: Work around caching not reevaluating uncached variables\n    \n    This is a somewhat crude hack to ensure that GOBJECT_CFLAGS/LIBS are\n    properly cached.\n\n configure.ac |    4 ++++\n 1 file changed, 4 insertions(+)\n\ncommit 28ba78a9716f3c105cdfb5f7519f2435dd9cb271\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Sep 1 18:46:46 2010 +0200\n\n    gobject: Fix pkgconfig file variable\n    \n    I confused % and $. I blame it on spec files.\n\n configure.ac |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 61a1835e40d0b6d786951143779077d16ed2486e\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Sep 1 03:17:12 2010 +0200\n\n    subsurface: Fix acquire_source_surface for out-of-bounds surfaces\n    \n    See subsurface-outside-target test.\n\n src/cairo-surface-subsurface.c |   41 ++++++++++++++++++++++------------------\n 1 file changed, 23 insertions(+), 18 deletions(-)\n\ncommit f54c51e75c7abe872127d559e029bf4383439bca\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Sep 1 02:10:51 2010 +0200\n\n    test: Add subsurface-outside-target\n    \n    This test defines the behavior of subsurfaces when they are created to\n    be bigger than their target.\n\n test/Makefile.sources                         |    1 +\n test/subsurface-outside-target.argb32.ref.png |  Bin 0 -> 2063 bytes\n test/subsurface-outside-target.c              |  178 +++++++++++++++++++++++++\n test/subsurface-outside-target.rgb24.ref.png  |  Bin 0 -> 1648 bytes\n 4 files changed, 179 insertions(+)\n\ncommit 6eab5ee10c111cf87dcf62e3f639f44cfd1e5cf6\nAuthor: Maarten Bosmans <mkbosmans@gmail.com>\nDate:   Sat Aug 28 13:39:21 2010 +0200\n\n    build: prefer libpng14 over older versions\n    \n    Also move libpng to the front of the list, so that the default\n    version of the system is first checked.\n\n configure.ac |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 9f98ec6eb915204d59820cf57d32f347f9933517\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Aug 29 00:05:51 2010 +0300\n\n    device: Refer the user to per-backend docs about devices.\n    \n    The exact semantics of the device API can't be spelled out\n    out in the device API docs since the effects are so tied\n    to the specific backend.  To use a particular device in\n    practice the user should refer to the backend docs.\n\n src/cairo-device.c |    6 ++++++\n 1 file changed, 6 insertions(+)\n\ncommit b0f65054b810d432238ff4986bee3f63e1fc46df\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Aug 29 00:03:07 2010 +0300\n\n    subsurface: Add a note to the docs about usage restrictions.\n    \n    Make our assumptions about constructed subsurfaces explicit\n    while we work out the correct semantics for the edge cases.\n\n src/cairo-surface-subsurface.c |    7 +++++++\n 1 file changed, 7 insertions(+)\n\ncommit 92fe2d370d120f4d9bc95e92209d1c1cec7e900b\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sat Aug 28 17:12:45 2010 +0200\n\n    surface-offset: Use right variable in mask\n    \n    Use source/mask instead of their copies. The copies only get initialized\n    if we actually need to translate things.\n\n src/cairo-surface-offset.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit df4b23ff74f3d22fb306f59cdba4dce6b0857cd2\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Fri Aug 27 20:26:06 2010 +0300\n\n    subsurface: Fix crash when acquiring a source image.\n    \n    The code is passing in the extra info received from\n    the target surface's acquire_source() method to\n    _cairo_surface_get_extents() rather than the acquired\n    source surface itself.\n\n src/cairo-surface-subsurface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 2d146867dc4d4e17da2fd1e4776f62aaa999d90f\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Thu Aug 26 14:50:34 2010 +0200\n\n    subsurface: Correct cloning condition\n    \n    72644c6df2c2da1d77ca10a755dbb44bbd960c0d was using the wrong (inverted)\n    condition to check if the subsurface extents are contained in the\n    target extents.\n\n src/cairo-surface-subsurface.c |   10 +++++-----\n 1 file changed, 5 insertions(+), 5 deletions(-)\n\ncommit 72644c6df2c2da1d77ca10a755dbb44bbd960c0d\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Thu Aug 26 14:24:17 2010 +0200\n\n    subsurface: Avoid invalid accesses\n    \n    Whenever subsurface extents are not contained in the target extents,\n    using the source image given by the target (with origin corrected by\n    using an appropriate offset in the data pointer) is not a valid\n    operation. Fallback to cloning in that case.\n\n src/cairo-surface-subsurface.c |   12 +++++++++++-\n 1 file changed, 11 insertions(+), 1 deletion(-)\n\ncommit df4465bdd11e25a1ed942bc0fc8e7dc5d43f951f\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Thu Aug 26 14:23:04 2010 +0200\n\n    subsurface: Silence compiler warnings\n    \n    Commit d1c35f5e65d53f6b8b9060455335424ca0f44bd0 introduced two\n    unused variable warnings.\n\n src/cairo-surface-subsurface.c |    2 --\n 1 file changed, 2 deletions(-)\n\ncommit d1c35f5e65d53f6b8b9060455335424ca0f44bd0\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Aug 26 13:55:02 2010 +0200\n\n    subsurface: Don't clip size to target size\n    \n    This clipping would modify the origin of the subsurface and then the\n    creator has no easy way to figure this out.\n\n src/cairo-surface-subsurface.c |    3 ---\n 1 file changed, 3 deletions(-)\n\ncommit 174fb5f16f93887e2f319edd5b46efae3e7e93ad\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Aug 26 13:21:04 2010 +0200\n\n    subsurface: Don't apply device transform twice for source/mask\n\n src/cairo-surface-offset.c |   12 ------------\n 1 file changed, 12 deletions(-)\n\ncommit e79acf47a57b60c83d1f9491aac354161986b29b\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Aug 26 12:54:25 2010 +0200\n\n    subsurface: Make CAIRO_SURFACE_TYPE_SUBSURFACE public\n\n src/cairo-analysis-surface.c    |    2 +-\n src/cairo-image-surface.c       |    2 +-\n src/cairo-pdf-surface.c         |    4 ++--\n src/cairo-ps-surface.c          |    4 ++--\n src/cairo-script-surface.c      |    2 +-\n src/cairo-surface-subsurface.c  |    4 ++--\n src/cairo-types-private.h       |    3 +--\n src/cairo-xcb-surface-render.c  |    4 ++--\n src/cairo-xlib-surface.c        |    2 +-\n src/cairo.h                     |    7 ++++++-\n src/drm/cairo-drm-i915-shader.c |    6 +++---\n src/drm/cairo-drm-i965-shader.c |    6 +++---\n 12 files changed, 25 insertions(+), 21 deletions(-)\n\ncommit 40459dacb52587cc784faf2635e54797d3989408\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Aug 26 11:45:28 2010 +0200\n\n    subsurface: Don't crash when the device transform isn't integer\n    \n    Apply the transform before rounding to integer coordinates, so we can\n    handle doubles easily.\n\n src/cairo-surface-subsurface.c |   10 ++++------\n 1 file changed, 4 insertions(+), 6 deletions(-)\n\ncommit e19b213e84ab8b8ead5e0c700e5b906590e22aa1\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Aug 26 11:18:29 2010 +0200\n\n    subsurface: Make subsurfaces their own type\n    \n    Do not try to hide being a subsurface.\n    This would cause confusion when users where calling surface-type\n    specific getters on subsurfaces.\n    \n    FIXME: We still need public API to access a subsurface's target though.\n\n src/cairo-surface-subsurface.c |    1 -\n 1 file changed, 1 deletion(-)\n\ncommit e65bf64c4a6e2c7ff673449b8459b3150e438e21\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Aug 26 11:17:06 2010 +0200\n\n    subsurface: Properly account for device offsets in the target\n\n src/cairo-surface-subsurface.c |   10 +++++-----\n 1 file changed, 5 insertions(+), 5 deletions(-)\n\ncommit 8e9c4ea5890a4df3f463e592dc3aa429bb423608\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Aug 11 12:18:53 2010 +0100\n\n    Mark the context as invalid on the final cairo_destroy()\n    \n    We initialise the context to a non-error state upon creation, but after\n    destroy there is a window of opportunity where the object is kept alive\n    inside the context pool and the user could mistakenly keep on passing\n    the zombie context into cairo functions. As all entry points need to\n    check error status, flagging the context as an error object upon the\n    final unreference prevents such misuse (until such as time as the\n    context is reallocated).\n\n src/cairo.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit cd52378ae60ab2075d7e9ec7335e990b2f46059e\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Tue Aug 10 19:38:59 2010 +0200\n\n    test: Update linear-gradient-large ref image\n    \n    Make linear-gradient-large ref image match xlib gradients (both on nvidia\n    and on macosx) and pixman gradients (when patched to compute the linear\n    gradients using floating point math).\n\n test/linear-gradient-large.ref.png |  Bin 3753 -> 4079 bytes\n 1 file changed, 0 insertions(+), 0 deletions(-)\n\ncommit a7762e3d6570a6981d8fb74ecc6ae30391c39b89\nAuthor: Krzysztof Kosi\u0144ski <tweenk.pl@gmail.com>\nDate:   Tue Aug 10 17:55:03 2010 +0200\n\n    tests: Add linear-gradient-large test\n    \n    Shows large rounding errors in Pixman when computing gradients. Added as\n    a test to Cairo to catch similar issues in other backends.\n    \n    https://bugs.freedesktop.org/show_bug.cgi?id=29470\n\n test/Makefile.am                   |    5 +--\n test/Makefile.sources              |    1 +\n test/linear-gradient-large.c       |   67 ++++++++++++++++++++++++++++++++++++\n test/linear-gradient-large.ref.png |  Bin 0 -> 3753 bytes\n 4 files changed, 71 insertions(+), 2 deletions(-)\n\ncommit 56ea51fdcc273531b5e86b921aad19237a1c9415\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Mon Aug 9 20:23:50 2010 +0200\n\n    Replace insertion sort with mergesort in the scan converter\n    \n    Insertion sort can take up to O(n^2), mergesort is guaranteed to run\n    in O(n*log(n)).\n    An example showing bad performance for insertion sort is:\n       https://bugs.freedesktop.org/show_bug.cgi?id=28067\n    \n    The mergesort has been engineered to be fast even when working on\n    cases where the insertion sort would have performed well and as\n    expected it shows no changes in the benchmark cairo traces.\n\n src/cairo-tor-scan-converter.c |  138 ++++++++++++++++++++++++++++++----------\n 1 file changed, 103 insertions(+), 35 deletions(-)\n\ncommit a150371a5d10e03d6c0d781c6fac950a9ac6be18\nAuthor: Nicolaus L Hepler <nlhepler@gmail.com>\nDate:   Tue Aug 10 09:34:39 2010 +0200\n\n    ft-font: Make alpha mapping consistent\n    \n    Vertical RGB mapping previously forced opaque pixels.\n    To be consistent with horizontal RGB/BGR and vertical BGR it\n    should use an alpha equal to the mid channel (green).\n\n src/cairo-ft-font.c |    7 -------\n 1 file changed, 7 deletions(-)\n\ncommit 73470862cbc5895147d5c58ca2647f539e8fe67c\nAuthor: David Schleef <ds@schleef.org>\nDate:   Tue Aug 10 02:37:38 2010 +0200\n\n    perf: Fix README to say cairo-perf-micro\n\n perf/README |   12 ++++++------\n 1 file changed, 6 insertions(+), 6 deletions(-)\n\ncommit df8f96423429915ef1648310fce8b5aed0917c0a\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue Aug 10 01:24:30 2010 +0200\n\n    build: Fudge the build system some more so it handles extra libs\n    \n    Add NONPKGCONFIG_EXTRA_LIBS that are only put into the generated pc file\n    but not used when linking. This is now used to add -lcairo-gobject to\n    the cairo-gobject.pc file.\n\n build/configure.ac.features          |    3 +++\n configure.ac                         |    2 +-\n src/cairo-features-uninstalled.pc.in |    2 +-\n src/cairo-features.pc.in             |    2 +-\n 4 files changed, 6 insertions(+), 3 deletions(-)\n\ncommit 01325ad767acf6213135a0bad895de233324f745\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue Aug 10 00:11:25 2010 +0200\n\n    gobject: Include the extra library in the pkgconfig file\n\n configure.ac |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 8fb91dc3f6b691f91c322cec4b1d0ee4dbebd69c\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Tue Aug 10 00:53:53 2010 +0300\n\n    script: Fix script backend build.\n    \n    The flight data recorders were missing an include\n    of cairo-tee.h ever since cairo-tee.h became an optional\n    backend.\n\n util/cairo-fdr/fdr.c    |    1 +\n util/cairo-sphinx/fdr.c |    1 +\n 2 files changed, 2 insertions(+)\n\ncommit 766832364904dbf5b8a67ebc1600d2ec45d2734f\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Mon Aug 9 18:47:13 2010 +0200\n\n    perf: Improve calibration\n    \n    Make the loops count depend on the actual calibration_loops/calibration_time\n    instead of calibration_loops/calibration_max_time.\n    This avoids having some tests take much less/more than the wanted time per iteration\n    (I was having some tests taking about 1 second, other taking about 7 seconds when\n    the ms_per_iteration was 2000)\n    \n    Spend 0.5-1 times the time wanted for each iteration in calibration, increase the\n    accuracy of loops count. Just making the loops count be the correct ratio doesn't\n    guarantee that the iteration time is accurate. By actually measuring iteration\n    times until it gets greater than 1/4 of the wanted time, the total sum is bound\n    to be <= the wanted iteration time and last calibration time is between 1/4 and\n    1/2 of the wanted time, so it should give a very accurate loop count.\n\n perf/cairo-perf-micro.c |   17 ++++++++---------\n 1 file changed, 8 insertions(+), 9 deletions(-)\n\ncommit 046b642db0782ab5e2a5c82988b21e05afe8e716\nAuthor: Rich Walsh <DragText@E-vertise.Com>\nDate:   Sat Aug 7 16:30:59 2010 +0300\n\n    os2: Restore surface type checking in the get_extents method.\n\n src/cairo-os2-surface.c |   10 +++++++++-\n 1 file changed, 9 insertions(+), 1 deletion(-)\n\ncommit 78bdd87b7545f8e85632ac301a69da145727fcec\nAuthor: Rich Walsh <DragText@E-vertise.Com>\nDate:   Sat Aug 7 16:22:26 2010 +0300\n\n    os2: Fix clipping to bounds when blitting pixels.\n    \n    The bounds checks on the rectangle to blit were done\n    after converting target/source to inclusive/noninclusive\n    coordinates rather than before, potentially causing an\n    off-by-one in the sizes, since the same logic was applied\n    to both inclusive and non-inclusive coordinates.  This\n    patch enforces bounds up front.\n    \n    Thread \"OS/2 surface fixes\" on cairo-l:\n    http://lists.cairographics.org/archives/cairo/2010-July/020343.html\n\n src/cairo-os2-surface.c |   62 +++++++++++++++++++++--------------------------\n 1 file changed, 27 insertions(+), 35 deletions(-)\n\ncommit d0284687b32161212d6bc52309e2d5bb516dc3e8\nAuthor: Rich Walsh <DragText@E-vertise.Com>\nDate:   Sat Aug 7 03:53:24 2010 +0300\n\n    os2: Tweak an inline declaration.\n    \n    C99 and cairo prefers \"static inline <return type>\" rather\n    than \"static <return type> inline\".\n    \n    Thread \"OS/2 surface fixes\" on cairo-l:\n    http://lists.cairographics.org/archives/cairo/2010-July/020343.html\n\n src/cairo-os2-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit cb30340064a2ff24dc408e185c5a309a14f6c78c\nAuthor: Rich Walsh <DragText@E-vertise.Com>\nDate:   Sat Aug 7 03:33:10 2010 +0300\n\n    os2: Consolidate error paths of cairo_os2_surface_create().\n    \n    Use a single code path to release the resources acquired\n    for a surface that's been partially constructed, rather than\n    have multiple error exits which each release the resources\n    acquired so far.\n    \n    Thread \"OS/2 surface fixes\" on cairo-l:\n    http://lists.cairographics.org/archives/cairo/2010-July/020343.html\n\n src/cairo-os2-surface.c |  120 +++++++++++++++++++++++------------------------\n 1 file changed, 60 insertions(+), 60 deletions(-)\n\ncommit 66e3d650fe90754c811195c75579ac7a3512b7be\nAuthor: Rich Walsh <DragText@E-vertise.Com>\nDate:   Sat Aug 7 03:12:12 2010 +0300\n\n    os2: Document ownership of OS/2 objects passed to surfaces.\n    \n    Clarify the documentation for cairo_os2_surface_create()\n    and cairo_os2_surface_set_hwnd() to note that the ownership\n    of the presentation space and window respectively\n    remains with the caller.\n    \n    Thread \"OS/2 surface fixes\" on cairo-l:\n    http://lists.cairographics.org/archives/cairo/2010-July/020343.html\n\n src/cairo-os2-surface.c |   23 ++++++++++++-----------\n 1 file changed, 12 insertions(+), 11 deletions(-)\n\ncommit 01525271544d5b88f87027e470fa85038d59bf8d\nAuthor: Rich Walsh <DragText@E-vertise.Com>\nDate:   Sat Aug 7 03:08:21 2010 +0300\n\n    os2: Don't fake an Anchor Block when one isn't needed.\n    \n    The code was being tricky about passing in a HAB to\n    DevOpenDC() even though one isn't needed at all under\n    OS/2.  Pass in NULL instead.\n    \n    Thread \"OS/2 surface fixes\" on cairo-l:\n    http://lists.cairographics.org/archives/cairo/2010-July/020343.html\n\n src/cairo-os2-surface.c |   16 +++-------------\n 1 file changed, 3 insertions(+), 13 deletions(-)\n\ncommit 883d9725e0f844e7d5cc4c50c75a812b5435702b\nAuthor: Rich Walsh <DragText@E-vertise.Com>\nDate:   Sat Aug 7 03:01:56 2010 +0300\n\n    os2: Fix buffer allocator behaviour on arithmetic overflow.\n    \n    On arithmetic overflow the buffer allocator would attempt\n    to allocate zero bytes instead of failing the allocation.\n    Depending on the implementation of the underlying allocator\n    being proxied, this may result in an allocation of a zero\n    length buffer, causing all kinds of grief.  This patch\n    causes arithmetic overflows to explicitly fail the allocation.\n    \n    Thread \"OS/2 surface fixes\" on cairo-l:\n    http://lists.cairographics.org/archives/cairo/2010-July/020343.html\n\n src/cairo-os2-surface.c |   54 ++++++++++++++++++++---------------------------\n 1 file changed, 23 insertions(+), 31 deletions(-)\n\ncommit b54037828c5b338b2f1dcbe48201225b258c1e1e\nAuthor: Rich Walsh <DragText@E-vertise.Com>\nDate:   Sat Aug 7 02:40:20 2010 +0300\n\n    os2: Fix blitting 24 bpp pixel data.\n    \n    There's a format mismatch between cairo's pixel formats\n    and OS/2 24 bpp data: the individual pixels in OS/2 take\n    only three bytes per pixel, but there needs to be padding\n    between lines to make the start of a line always be aligned\n    at a DWORD boundary.\n    \n    This patch fixes the format conversion code to include\n    the required padding between rows.\n    \n    Thread \"OS/2 surface fixes\" on cairo-l:\n    http://lists.cairographics.org/archives/cairo/2010-July/020343.html\n\n src/cairo-os2-private.h |    1 +\n src/cairo-os2-surface.c |  116 +++++++++++++++++++++++++++--------------------\n 2 files changed, 68 insertions(+), 49 deletions(-)\n\ncommit 5aadecb3ac03d379c2c8113566fa8062843df42e\nAuthor: Rich Walsh <DragText@E-vertise.Com>\nDate:   Sat Aug 7 02:30:01 2010 +0300\n\n    os2: New API to create surfaces without a persistent HPS.\n    \n    It's not always necessary to create a presentation space (HPS) for\n    surface tied to a window, as the user may have one already.  This patch\n    introduces three new functions to create a surface without an HPS\n    and let the user manage an HPS associated with the surface.\n    \n    Thread \"OS/2 surface fixes\" on cairo-l:\n    http://lists.cairographics.org/archives/cairo/2010-July/020343.html\n    \n    Mozilla Bugzilla:\n    https://bugzilla.mozilla.org/show_bug.cgi?id=557159\n\n src/cairo-os2-surface.c |  142 ++++++++++++++++++++++++++++++++++++++++++++++-\n src/cairo-os2.h         |   14 +++++\n 2 files changed, 153 insertions(+), 3 deletions(-)\n\ncommit 9669faa936fe38da3615d7831e423befa5ecdfad\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sun Aug 8 17:23:05 2010 +0200\n\n    gl: Handle errors from _cairo_gl_gradient_render()\n    \n    Thanks Andrea for finding this.\n\n src/cairo-gl-gradient.c |    9 ++++++++-\n 1 file changed, 8 insertions(+), 1 deletion(-)\n\ncommit e31b56e020df806aa6180cd2efa0a34e55e5adaf\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sun Aug 8 14:45:24 2010 +0200\n\n    configure: Fix gobject handling\n    \n    1) Explicitly depend on glib, too.\n    2) Don't link gobject into libcairo proper (thanks Joonas for noticing).\n\n configure.ac |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit ae2b7b13cd5fdeaee44496056bb99f497346e262\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Wed Aug 4 14:22:23 2010 +0200\n\n    pattern: Simplify degenerate linear pattern to solid colors\n    \n    Degenerate linear patterns are considered clear if they have\n    EXTEND_NONE, the average of the first and the last stop if they are\n    EXTEND_PAD, the weighted average of the stops (based on the size of\n    the interpolation range in which they are active, just like integrating\n    over the whole interpolation range and taking the average) if they are\n    EXTEND_REPEAT or EXTEND_REFLECT.\n    \n    Fixes degenerate-linear-gradient\n\n src/cairo-pattern.c                     |  119 ++++++++++++++++++++++++++++++-\n test/degenerate-linear-gradient.ref.png |  Bin 232 -> 322 bytes\n 2 files changed, 117 insertions(+), 2 deletions(-)\n\ncommit d54a5a9fc90857448954d6cbe725d4665efa3d45\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Wed Aug 4 14:16:34 2010 +0200\n\n    pattern: Add gradient degeneracy testing functions\n    \n    Introduce two new (private) functions for testing the degeneracy of linear\n    and radial gradients and use them instead of verbose (and error-prone) tests.\n\n src/cairo-pattern.c |   21 +++++++++++++++++----\n 1 file changed, 17 insertions(+), 4 deletions(-)\n\ncommit 63434bc43819e2c7d4db568e82f5a9a7dfb0418d\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Wed Aug 4 14:22:01 2010 +0200\n\n    gstate: Correct comment\n\n src/cairo-gstate.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 28cd511fb974f886ae65e588413afcfc220a1a7c\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Sat Aug 7 22:55:46 2010 +0200\n\n    Correct color stops comparison function\n    \n    Two clear stops with different \"underlying\" colors must be considered\n    different, since when interpolated with non-clear colors they will\n    produce different results.\n\n src/cairo-color.c |   25 ++++---------------------\n 1 file changed, 4 insertions(+), 21 deletions(-)\n\ncommit f71a618bd2604c8f0beaf4816a38a54f6f271bd9\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Sat Aug 7 21:32:09 2010 +0200\n\n    Fix configuration if gobject is absent\n    \n    Autodetect gobject and only use it if present.\n    Its absence is not to be considered a failure since it's not required.\n\n build/Makefile.win32.features |    2 +-\n configure.ac                  |    2 +-\n 2 files changed, 2 insertions(+), 2 deletions(-)\n\ncommit 661f4859cdbc0394ed0a9db34ced0f4e2bbe78ff\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sat Aug 7 20:05:42 2010 +0200\n\n    Add cairo-gobject library\n    \n    This library is supposed to contain GType declarations for Cairo types.\n    It is also meant to support gobject-introspection binding creation.\n\n boilerplate/Makefile.win32.features        |   12 +\n build/Makefile.win32.features              |    1 +\n build/Makefile.win32.features-h            |    3 +\n configure.ac                               |   10 +\n src/Makefile.win32.features                |   16 +\n util/Makefile.am                           |    4 +\n util/cairo-gobject/Makefile.am             |   15 +\n util/cairo-gobject/cairo-gobject-enums.c   |  519 ++++++++++++++++++++++++++++\n util/cairo-gobject/cairo-gobject-structs.c |   87 +++++\n util/cairo-gobject/cairo-gobject.h         |  186 ++++++++++\n 10 files changed, 853 insertions(+)\n\ncommit fc4e8f036326da1839ec5320eba60823e7efc2db\nAuthor: S\u00f8ren Sandmann Pedersen <ssp@redhat.com>\nDate:   Sat Aug 7 12:10:49 2010 -0400\n\n    Update documentation to reflect that rgb565 is no longer deprecated.\n\n src/cairo.h |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit de606af5d673df193fc07fbd047ba2cec82d2f1c\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Tue Jul 27 18:04:36 2010 +0200\n\n    quartz: improve backend detection\n    \n    Quartz previously crashed with NULL backends and didn't check for\n    the backend type when getting a CGContext from a quartz surface,\n    returning meaningless data for subsurfaces.\n\n src/cairo-quartz-surface.c |   24 +++++++++++++++---------\n 1 file changed, 15 insertions(+), 9 deletions(-)\n\ncommit 056ce165c4377e9cf93fd7a06b6b0d5d4d98cb8c\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Tue Jul 27 18:50:55 2010 +0200\n\n    quartz: fix solid masking fallback\n    \n    Falling back when painting would ignore the alpha value (which is\n    needed to have the correct mask opacity).\n    _cairo_quartz_surface_paint_cg doesn't fallback, so the usual mask\n    fallback path is now taken, as expected.\n\n src/cairo-quartz-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit bdeade14ea86fb5f3ff17accd71711d2c40b1b33\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Wed Jul 28 19:33:53 2010 +0200\n\n    quartz: fix stroking with unbounded operators\n    \n    Self-intersecting strokes were drawn incorrectly when an unbounded\n    operator was used, since the fixup operation also cleared the\n    intersection.\n    \n    Fixes clip-stroke-unbounded.\n\n src/cairo-quartz-surface.c |   14 ++++++++------\n 1 file changed, 8 insertions(+), 6 deletions(-)\n\ncommit 8f38d2aa29bc0d69690cbf542c4a2b497b7a0c0a\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Thu Jul 29 10:45:59 2010 +0200\n\n    test: improve clip-*-unbounded tests\n    \n    Merge clip-*-unbounded tests and add self-intersections to the paths\n    that are drawn. This exposes a bug in the unbounded fixup code in quartz.\n    \n    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>\n\n test/Makefile.am                                   |   35 ++--\n test/Makefile.sources                              |    3 +-\n test/clip-draw-unbounded.c                         |  184 ++++++++++++++++++++\n test/clip-fill-eo-unbounded.argb32.ref.png         |  Bin 0 -> 3668 bytes\n test/clip-fill-eo-unbounded.image16.rgb24.ref.png  |  Bin 0 -> 2887 bytes\n test/clip-fill-eo-unbounded.quartz.argb32.ref.png  |  Bin 0 -> 3366 bytes\n test/clip-fill-eo-unbounded.quartz.rgb24.ref.png   |  Bin 0 -> 3061 bytes\n test/clip-fill-eo-unbounded.rgb24.ref.png          |  Bin 0 -> 3201 bytes\n test/clip-fill-eo-unbounded.svg12.rgb24.xfail.png  |  Bin 0 -> 3636 bytes\n ...p-fill-eo-unbounded.xlib-fallback.rgb24.ref.png |  Bin 0 -> 3208 bytes\n test/clip-fill-eo-unbounded.xlib.argb32.ref.png    |  Bin 0 -> 3693 bytes\n test/clip-fill-eo-unbounded.xlib.rgb24.ref.png     |  Bin 0 -> 3198 bytes\n test/clip-fill-nz-unbounded.argb32.ref.png         |  Bin 0 -> 3668 bytes\n test/clip-fill-nz-unbounded.image16.rgb24.ref.png  |  Bin 0 -> 2887 bytes\n test/clip-fill-nz-unbounded.quartz.argb32.ref.png  |  Bin 0 -> 3366 bytes\n test/clip-fill-nz-unbounded.quartz.rgb24.ref.png   |  Bin 0 -> 3061 bytes\n test/clip-fill-nz-unbounded.rgb24.ref.png          |  Bin 0 -> 3201 bytes\n test/clip-fill-nz-unbounded.svg12.rgb24.xfail.png  |  Bin 0 -> 3636 bytes\n ...p-fill-nz-unbounded.xlib-fallback.rgb24.ref.png |  Bin 0 -> 3208 bytes\n test/clip-fill-nz-unbounded.xlib.argb32.ref.png    |  Bin 0 -> 3693 bytes\n test/clip-fill-nz-unbounded.xlib.rgb24.ref.png     |  Bin 0 -> 3198 bytes\n test/clip-fill-unbounded.argb32.ref.png            |  Bin 1607 -> 0 bytes\n test/clip-fill-unbounded.c                         |  105 -----------\n test/clip-fill-unbounded.image16.ref.png           |  Bin 1204 -> 0 bytes\n test/clip-fill-unbounded.pdf.argb32.ref.png        |  Bin 1244 -> 0 bytes\n test/clip-fill-unbounded.ps.argb32.xfail.png       |  Bin 1244 -> 0 bytes\n test/clip-fill-unbounded.quartz.argb32.ref.png     |  Bin 1436 -> 0 bytes\n test/clip-fill-unbounded.quartz.rgb24.ref.png      |  Bin 1368 -> 0 bytes\n test/clip-fill-unbounded.rgb24.ref.png             |  Bin 1304 -> 0 bytes\n test/clip-fill-unbounded.svg12.argb32.xfail.png    |  Bin 1601 -> 0 bytes\n test/clip-fill-unbounded.svg12.rgb24.xfail.png     |  Bin 1601 -> 0 bytes\n ...clip-fill-unbounded.xlib-fallback.rgb24.ref.png |  Bin 1438 -> 0 bytes\n test/clip-fill-unbounded.xlib.argb32.ref.png       |  Bin 1759 -> 0 bytes\n test/clip-fill-unbounded.xlib.rgb24.ref.png        |  Bin 1430 -> 0 bytes\n test/clip-stroke-unbounded.argb32.ref.png          |  Bin 1694 -> 3545 bytes\n test/clip-stroke-unbounded.c                       |  102 -----------\n test/clip-stroke-unbounded.image16.ref.png         |  Bin 1255 -> 0 bytes\n test/clip-stroke-unbounded.image16.rgb24.ref.png   |  Bin 0 -> 2778 bytes\n test/clip-stroke-unbounded.pdf.argb32.xfail.png    |  Bin 1351 -> 0 bytes\n test/clip-stroke-unbounded.ps.argb32.ref.png       |  Bin 1351 -> 0 bytes\n test/clip-stroke-unbounded.quartz.argb32.ref.png   |  Bin 1493 -> 3362 bytes\n test/clip-stroke-unbounded.quartz.rgb24.ref.png    |  Bin 1356 -> 3061 bytes\n test/clip-stroke-unbounded.rgb24.ref.png           |  Bin 1372 -> 3063 bytes\n test/clip-stroke-unbounded.svg12.argb32.xfail.png  |  Bin 1697 -> 0 bytes\n test/clip-stroke-unbounded.svg12.rgb24.xfail.png   |  Bin 1697 -> 3569 bytes\n ...ip-stroke-unbounded.xlib-fallback.rgb24.ref.png |  Bin 1437 -> 3123 bytes\n test/clip-stroke-unbounded.xlib.argb32.ref.png     |  Bin 1785 -> 3620 bytes\n test/clip-stroke-unbounded.xlib.rgb24.ref.png      |  Bin 1442 -> 3109 bytes\n 48 files changed, 204 insertions(+), 225 deletions(-)\n\ncommit 142df6f9638e10d0712e092d902f7670965a88f9\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jul 30 22:04:44 2010 +0200\n\n    configure: Disable xml backend by default\n    \n    We don't want to enable it by default when nobody uses it.\n\n boilerplate/Makefile.win32.features |    2 +-\n build/Makefile.win32.features       |    2 +-\n configure.ac                        |    2 +-\n src/Makefile.win32.features         |    2 +-\n 4 files changed, 4 insertions(+), 4 deletions(-)\n\ncommit 9f33f8453b4949cfdc63169d3acd7238f89379c2\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jul 30 21:48:14 2010 +0200\n\n    configure: Disable tee backend by default\n    \n    We don't want to enable it by default when nobody uses it.\n\n boilerplate/Makefile.win32.features |    4 +++-\n build/Makefile.win32.features       |    1 +\n build/Makefile.win32.features-h     |    2 ++\n configure.ac                        |    2 +-\n src/Makefile.win32.features         |    8 +++++++-\n src/cairo-surface.c                 |    4 ++++\n test/api-special-cases.c            |    6 ++++++\n 7 files changed, 24 insertions(+), 3 deletions(-)\n\ncommit 9f4d677e2a6dd0bfbbbe20de39f92177bfdfc0e8\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jul 30 22:15:55 2010 +0200\n\n    tee: Move definitions into separate header\n\n src/Makefile.sources     |    6 +++--\n src/cairo-tee-surface.c  |    2 ++\n src/cairo-tee.h          |   66 ++++++++++++++++++++++++++++++++++++++++++++++\n src/cairo.h              |   17 ------------\n test/api-special-cases.c |    3 +++\n 5 files changed, 75 insertions(+), 19 deletions(-)\n\ncommit 14639e6b8525ada2cb93abb1d70dde827b7bf9e0\nAuthor: Kristian H\u00f8gsberg <krh@bitplanet.net>\nDate:   Thu Jun 17 18:29:48 2010 -0400\n\n    egl: Use EGL_KHR_surfaceless_opengl extension when available\n    \n    This lets us avoid creating a throwaway pbuffer just to make the\n    context current.\n\n src/cairo-egl-context.c |   58 +++++++++++++++++++++++++++++++----------------\n 1 file changed, 38 insertions(+), 20 deletions(-)\n\ncommit b6fd673d37e1c8962d15c0e0e59322a2002fc399\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 26 13:15:38 2010 +0100\n\n    version: 1.9.15 post-snapshot bump\n\n cairo-version.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit ed8c6f42540f03a62fd64ad83b7c397528092232\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 26 12:53:44 2010 +0100\n\n    version: 1.9.14 snapshot\n\n cairo-version.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 81094cf4622302ebaa9b3f328f5d2a56a1c07a64\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 26 12:52:56 2010 +0100\n\n    NEWS: 1.9.14\n\n NEWS |   27 +++++++++++++++++++++++++++\n 1 file changed, 27 insertions(+)\n\ncommit c1fcbd0322f86327ddd89c2eef2facbc74045629\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Mon Jul 26 11:21:48 2010 +0200\n\n    quartz: fix REFLECT radial gradients\n    \n    The interpolation range of repeating radial gradients can safely be\n    reflected around any integer (previously 0), but for reflect-extended\n    radial gradients can only be reflected around odd integers if the\n    appearance is to be the same, thus reflecting around 1 is correct for both.\n    \n    Fixes radial-gradient.\n\n src/cairo-quartz-surface.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 3898e46d1de19848efeddb442dcf7f7663530256\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 23 09:41:48 2010 +0100\n\n    image: Compensate mask origins for glyph clipping\n    \n    Fixes the regression in bitmap-font and large-font pointed out by Andrea\n    Canciani since ef067933.\n\n src/cairo-image-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 53fcfc781eeee949abc03cf90048a2228f7e0a63\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Wed Jul 21 22:39:40 2010 +0300\n\n    build: Typos in comments.\n    \n    Fix inline \"dnl\" strings left over from a string\n    substitution \"--\" -> \"dnl\".\n\n build/configure.ac.pthread |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit fd1e731c9d0af307ebde4d888866c95bd6ebe66d\nAuthor: Hib Eris <hib@hiberis.nl>\nDate:   Wed Jul 21 22:34:05 2010 +0300\n\n    build: Fix pthread detection code when there isn't one.\n    \n    The code was testing the output variable $use_pthread rather than\n    the input variable $enable_pthread when checking that pthreads\n    were actually found when requested.\n\n build/configure.ac.pthread |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 108b1c7825116ed3f93aa57384bbd3290cdc9181\nAuthor: Karl Tomlinson <karlt+@karlt.net>\nDate:   Sat Jul 17 13:08:53 2010 +1200\n\n    clip: consider gstate target extents in _cairo_gstate_copy_clip_rectangle_list\n    \n    Fixes https://bugs.freedesktop.org/show_bug.cgi?id=29125\n    \n    To be consistent with _cairo_gstate_clip_extents, the context's clip\n    should be intersected with the target surface extents (instead of only\n    using them when there is no clip).\n    \n    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>\n\n src/cairo-clip.c   |   72 +++++++++++++++++++---------------------------------\n src/cairo-gstate.c |   14 +++++++++-\n test/get-clip.c    |   16 ++++++++++++\n 3 files changed, 55 insertions(+), 47 deletions(-)\n\ncommit b79ea8a6cab8bd28aebecf6e1e8229d5ac017264\nAuthor: Karl Tomlinson <karlt+@karlt.net>\nDate:   Sat Jul 17 11:46:25 2010 +1200\n\n    clip: consider all_clipped in _cairo_clip_get_extents\n    \n    If the gstate clip in _cairo_gstate_int_clip_extents() has all_clipped\n    set (and path NULL), then it returns the gstate target extents instead of\n    an empty rectangle.  If the target is infinite, then it says the clip is\n    unbounded.\n    \n    Fixes https://bugs.freedesktop.org/show_bug.cgi?id=29124\n    Tested-by test/get-clip\n    \n    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>\n\n src/cairo-clip.c |    5 +++++\n test/get-clip.c  |    5 ++++-\n 2 files changed, 9 insertions(+), 1 deletion(-)\n\ncommit 6a5115901381fe9c81a8a311e267c2a00e2a1d04\nAuthor: Karl Tomlinson <karlt+@karlt.net>\nDate:   Sat Jul 17 10:47:42 2010 +1200\n\n    test: return CAIRO_TEST_FAILURE from get-clip preamble on failure\n    \n    https://bugs.freedesktop.org/show_bug.cgi?id=29120\n\n test/get-clip.c |    5 +++++\n 1 file changed, 5 insertions(+)\n\ncommit f2fa15680ec3ac95cb68d4957557f06561a7dc55\nAuthor: Karl Tomlinson <karlt+@karlt.net>\nDate:   Sat Jul 17 10:39:50 2010 +1200\n\n    clip: return empty clip from _cairo_clip_copy_rectangle_list when all_clipped\n    \n    Fixes https://bugs.freedesktop.org/show_bug.cgi?id=29122\n    Tested by test/get-clip\n    \n    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>\n\n src/cairo-clip.c |    5 ++++-\n 1 file changed, 4 insertions(+), 1 deletion(-)\n\ncommit 33ac2035876aeb9215ca0bdaaeea5265fcee61f8\nAuthor: Karl Tomlinson <karlt+@karlt.net>\nDate:   Sat Jul 17 10:13:22 2010 +1200\n\n    test: use the surface size expected in get-clip phase \"No clip set\"\n    \n    https://bugs.freedesktop.org/show_bug.cgi?id=29121\n\n test/get-clip.c |    8 +++++---\n 1 file changed, 5 insertions(+), 3 deletions(-)\n\ncommit bac5c28a18af5d43c96f0b64d1c7235da3f02779\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jul 17 10:09:14 2010 +0100\n\n    boilerplate: Offset the xlib window\n    \n    An idea courtesy of Benjamin Otte is to stress the drivers a bit more by\n    not rendering to 0,0. Under various circumstances rendering to a Window\n    is mapped onto the Screen root Window with a collection of offsets and\n    clips by X. It is easy for the driver to make a mistake and misrender...\n\n boilerplate/cairo-boilerplate-xlib.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 51b0c21f02a8f0f5d7f44da05e49d7f8f3bf8bc7\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jul 16 19:49:53 2010 +0200\n\n    build: Add explicit dependcy to cxx lib\n    \n    Otherwise the build will fail because it doesn't add the dependency\n    manually.\n    \n    https://bugs.freedesktop.org/show_bug.cgi?id=29114\n\n boilerplate/Makefile.am |    3 +++\n src/Makefile.am         |    2 +-\n 2 files changed, 4 insertions(+), 1 deletion(-)\n\ncommit 6b92d5a0f9fce28f99b07177454da00f984fdb43\nAuthor: Oleg Romashin <romaxa@gmail.com>\nDate:   Fri Jul 16 09:47:23 2010 +0100\n\n    qt: Use native glyph rendering.\n    \n    Remove the hack of using the xlib surface to do glyph rendering and use\n    the new interface introduced with Qt4.7, or else fallback to image\n    rendering with freetype.\n    \n    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>\n    [2 files changed, 35 insertions(+), 140 deletions(-) \\o/]\n\n src/cairo-qt-surface.cpp |  169 ++++++++++------------------------------------\n src/cairo-xlib-surface.c |    6 --\n 2 files changed, 35 insertions(+), 140 deletions(-)\n\ncommit f53f072a223c3fbdeba315f5cba755cba498e121\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 12 18:53:29 2010 +0100\n\n    clip: Do the NULL check before the dereference.\n    \n    Breakage introduced in the commit earlier today.\n\n src/cairo-clip.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit ef0679333da881bd83b0bb4db546ea9c68f81f89\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 12 16:07:27 2010 +0100\n\n    image: Manually clip against bounds when rendering directly\n    \n    This is path is slightly peculiar in that it explicitly avoid the\n    intermediate mask and the geometry is not pre-clipped.\n    \n    This in conjunction with the previous commit fixes:\n    \n      Clip doesn't work for text\n      https://bugs.freedesktop.org/show_bug.cgi?id=29008\n    \n    which is captured in test/partial-clip-text.\n\n src/cairo-image-surface.c |   23 +++++++++++++++++++----\n 1 file changed, 19 insertions(+), 4 deletions(-)\n\ncommit 679e5a600bd7dae6cbde83070fb1f7355f8025a7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 12 16:06:32 2010 +0100\n\n    Differentiate between reducing clip to composite extents and a rectangle\n    \n    This is required for handling glyphs when rendering directly to the\n    surface.\n\n src/cairo-clip-private.h         |    4 ++++\n src/cairo-clip.c                 |   22 +++++++++++++++-------\n src/cairo-gl-surface.c           |    4 ++--\n src/cairo-image-surface.c        |   10 +++++-----\n src/cairo-surface-fallback.c     |   10 +++++-----\n src/cairo-xcb-surface-render.c   |   10 +++++-----\n src/drm/cairo-drm-i915-glyphs.c  |    2 +-\n src/drm/cairo-drm-i915-surface.c |    8 ++++----\n src/drm/cairo-drm-i965-glyphs.c  |    2 +-\n src/drm/cairo-drm-i965-surface.c |    8 ++++----\n 10 files changed, 46 insertions(+), 34 deletions(-)\n\ncommit 8546a877889bfafc056c867bc9aea25e9fdcdef0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 12 16:27:29 2010 +0100\n\n    test: Add partial-clip-text\n    \n    This exercises a bug found by Igor Nikitin:\n    \n      https://bugs.freedesktop.org/show_bug.cgi?id=29008\n\n test/Makefile.am                   |    3 +++\n test/Makefile.sources              |    1 +\n test/partial-clip-text.c           |   50 ++++++++++++++++++++++++++++++++++++\n test/partial-clip-text.ps.ref.png  |  Bin 0 -> 107 bytes\n test/partial-clip-text.ref.png     |  Bin 0 -> 175 bytes\n test/partial-clip-text.svg.ref.png |  Bin 0 -> 173 bytes\n 6 files changed, 54 insertions(+)\n\ncommit 53ee897449dca497d6a3d6dc90b87fea8027cc44\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 12 12:37:31 2010 +0100\n\n    version: Post-snapshot bump to 1.9.13\n\n cairo-version.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit aa4cd8287f47b4538e765e1b48dcbac19813a8a2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 12 12:12:12 2010 +0100\n\n    version: 1.9.12 snapshot\n\n cairo-version.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 53b129dd8aecf4e2bd8b7d2cd27b91370c6705e9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 12 12:11:42 2010 +0100\n\n    NEWS for 1.9.12.\n\n NEWS |   56 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 56 insertions(+)\n\ncommit 01380f3a56b28a388d2876780f33516ecd16ee16\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 12 11:49:53 2010 +0100\n\n    test: Missing REFERENCE_IMAGES\n\n test/Makefile.am |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 459b8ae660eb49a87ffb9da31f305718a2b4f11f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 12 11:05:57 2010 +0100\n\n    Make distcheck happy.\n\n src/cairo-fontconfig-private.h |    2 ++\n src/cairo-skia.h               |    2 +-\n src/glew/GL/glew.h             |    2 ++\n src/glew/GL/glxew.h            |    2 ++\n test/api-special-cases.c       |    5 +++--\n 5 files changed, 10 insertions(+), 3 deletions(-)\n\ncommit d56b1718025f8b2354b5b1eb99af41df70a6c590\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Mon Jul 12 10:36:24 2010 +0200\n\n    test: Add halo quartz reference images\n    \n    When quartz-font is enabled, halo and halo-transform fonts have a\n    different shape.\n\n test/halo-transform.quartz.ref.png |  Bin 0 -> 14360 bytes\n test/halo.quartz.ref.png           |  Bin 0 -> 8601 bytes\n 2 files changed, 0 insertions(+), 0 deletions(-)\n\ncommit 9107895789fc721ee6ea2ccb2ce3ab99fb978caa\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Mon Jul 12 11:03:15 2010 +0300\n\n    test: Add comments explaining the bug in bug-seams.\n    \n    Where two rasterization methods meet, havoc occurs.\n\n test/bug-seams.c |   22 ++++++++++++++++++++++\n 1 file changed, 22 insertions(+)\n\ncommit 0152db263b9b12547fadb5d080913fcbb696d34e\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Mon Jul 12 10:36:00 2010 +0300\n\n    build: Sync up autogenerated win32 build files.\n\n boilerplate/Makefile.win32.features |    9 +++++++++\n build/Makefile.win32.features       |    1 +\n build/Makefile.win32.features-h     |    3 +++\n src/Makefile.win32.features         |    9 +++++++++\n 4 files changed, 22 insertions(+)\n\ncommit 06ffb7df716652baba96960cd59e1a59f4bd1ac1\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Sat Jul 10 14:19:50 2010 -0700\n\n    gl: Only use a mat3 for the transformation for gradients coordinates.\n    \n    No point in passing in a column of zeroes that we multiply by zero, or\n    the row that we drop on the floor.  We could do even better by just\n    passing in a 3x2, at the expense of adding a language version\n    dependency (or just pass in 2 vectors).\n    \n    No significant performance difference.\n\n src/cairo-gl-shaders.c |   28 +++++++++++++---------------\n 1 file changed, 13 insertions(+), 15 deletions(-)\n\ncommit 1e7485f8e5b6fd9b26f06838d8e7a35e073c394b\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Mon Jul 12 00:23:11 2010 +0300\n\n    trace: Avoid stdbool.h C99ism.\n    \n    There is no <stdbool.h> on old Solaris without invoking\n    c99 mode explicitly.\n\n util/cairo-trace/trace.c |  184 +++++++++++++++++++++++-----------------------\n 1 file changed, 94 insertions(+), 90 deletions(-)\n\ncommit 97529a3713d899468fb3ca7a1c3f75a09bd1b215\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Jul 11 23:54:21 2010 +0300\n\n    build: Avoid shifting shell parameters that aren't there.\n    \n    The shift primitive of the Solaris 9 Bourne shell doesn't like\n    it if we try to shift more formal arguments than are there.\n    This causes the compare_versions function in autogen.sh to croak when\n    the actual and compared versions differ in the number of\n    components.\n\n autogen.sh |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit dd6026b613aa5414a128727995f2a4f79284072a\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sun Jul 11 20:44:40 2010 +0200\n\n    doc: Make the necessity of flush/mark_dirty more obvious\n\n src/cairo-surface.c |   32 ++++++++++++++++++++++++++++++++\n 1 file changed, 32 insertions(+)\n\ncommit 8a1944f45b9c9056088246d4f2e72d60a59fd5c4\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sun Jul 11 19:11:15 2010 +0200\n\n    check: Allow unprefix type names in the title\n    \n    Some documentation sections use the type name as the title, and we don't\n    want to use that title as a link.\n\n src/check-doc-syntax.sh |    4 +---\n 1 file changed, 1 insertion(+), 3 deletions(-)\n\ncommit f0466ecf7db859a80b779b7fb4381e3c9409c39b\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Jul 11 21:57:40 2010 +0300\n\n    build: Fix typo in pthread test program.\n    \n    Missing a semicolon after pthread_cleanup_push.  Incredibly\n    only openbsd 4.5 minded.\n\n build/configure.ac.pthread |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 3f1d7de8e1620ad385930477b63454107dd8ffd3\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Jul 11 17:29:07 2010 +0300\n\n    build: Fix regression provoked by newer autoconf and dodgy configuring.\n    \n    We're not supposed to be redefining PACKAGE_VERSION, PACKAGE_...\n    from the configure generated confdefs.h.  This patch rudely adds\n    paper over the problem.  The compiler warnings are a problem for\n    us since our checking of various compiler flags assumes that\n    no news is good news, and that any warning messages are due\n    to the flags under test.  The regression appears when using\n    an autoconf >= 2.64, at least, but not with 2.61.\n    \n    The same issue appears in the pthread test because our conftest\n    unconditionally #defines _GNU_SOURCE, but autoconf ends up doing\n    that in the confdefs.h.\n\n build/configure.ac.noversion |   13 ++++++++++++-\n build/configure.ac.pthread   |    2 ++\n 2 files changed, 14 insertions(+), 1 deletion(-)\n\ncommit fca8977219b857e2e61dd86ac39ae9f40086f306\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Jun 27 03:03:17 2010 +0300\n\n    build: Rework pthread detection.\n    \n    Use two levels of pthread support: a minimal level used to\n    build cairo itself, and a full level to build threaded apps\n    which want to use cairo.  The minimal level tries to use\n    pthread stubs from libc if possible, but falls back to the\n    full level if that's not possible.  We use CFLAGS=-D_REENTRANT\n    LIBS=-lpthread to find a real pthread library since that seems\n    to work on every unix-like test box we can get our hands on.\n\n build/ax-pthread.m4           |  283 -----------------------------------------\n build/configure.ac.pthread    |  251 ++++++++++++++++++++++++++++++++++++\n configure.ac                  |   47 +++----\n test/Makefile.am              |   16 +--\n test/cairo-test-trace.c       |   10 +-\n test/cairo-test.c             |    6 +-\n util/cairo-sphinx/Makefile.am |    3 +-\n util/cairo-sphinx/sphinx.c    |    4 +\n util/cairo-trace/Makefile.am  |    4 +-\n 9 files changed, 291 insertions(+), 333 deletions(-)\n\ncommit 47c35e5e86a3c99fc39afe2e13a7c92d5247ee1e\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Jun 27 01:14:03 2010 +0300\n\n    build: Purge CAIRO_CC_TRY_LINK_FLAG.\n    \n    Use CAIRO_CC_TRY_FLAG instead in the one place where we used\n    CAIRO_CC_TRY_LINK_FLAG and make the build system one macro\n    smaller.\n\n build/aclocal.cairo.m4      |   21 ---------------------\n build/configure.ac.warnings |    2 +-\n 2 files changed, 1 insertion(+), 22 deletions(-)\n\ncommit d2f5592e0e0d316cfc40ec676ee6e7f4e2a699fb\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Jun 27 01:11:13 2010 +0300\n\n    build: Factor out a more pliable CAIRO_CC_TRY_LINK_WITH_ENV_SILENT.\n    \n    Introduce a new CAIRO_CC_TRY_LINK_WITH_ENV_SILENT macro for running\n    generic link tests with arbitrary CFLAGS/LIBS/LDFLAGS and no muttering\n    of autoconf messages.  Rewrite the previous CAIRO_CC_TRY_FLAG in terms\n    of it.\n\n build/aclocal.cairo.m4 |   31 +++++++++++++++++++++++++------\n 1 file changed, 25 insertions(+), 6 deletions(-)\n\ncommit 120b78ada7eed6424f07a688854657d0c3ad68f8\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sun Jul 11 18:48:38 2010 +0200\n\n    build: Split boilerplate lib generation into two so's\n    \n    Same thing as what was previously done for libcairo.so: Build an\n    intermediate lib for the (potential) C++ stuff.\n\n boilerplate/Makefile.am      |   31 ++++++++++++++++++++++++-------\n boilerplate/Makefile.sources |    7 ++-----\n 2 files changed, 26 insertions(+), 12 deletions(-)\n\ncommit d6362a0d76753cb6f85f0dbd567a3ec7b7b08696\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sun Jul 11 16:01:44 2010 +0200\n\n    qt: Define cairo-qt's API as C symbols\n    \n    That way, the C linker doesn't mess up when linking libcairo.so.\n\n src/cairo-qt.h |   12 ++++--------\n 1 file changed, 4 insertions(+), 8 deletions(-)\n\ncommit 5d4a4775c8b091b947b52cc8f7e1e48a5eaea007\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sun Jul 11 15:41:56 2010 +0200\n\n    build: Fix typo that makes C++ libs not build\n\n src/Makefile.am |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 9b9952ab4f64a476bbadfd3e6cf1e66c1137ccd7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jul 10 11:13:07 2010 +0100\n\n    Convert mime data length to use unsigned long\n    \n    What we want to use is size_t, but we don't want the implied POSIX\n    dependency. However, POSIX does say that size_t is an unsigned integer\n    that is no longer than a long, so it would appear safe to use an\n    unsigned long as a replacement. Safer at least than unsigned int.\n\n src/cairo-image-info-private.h     |    6 +++---\n src/cairo-image-info.c             |    4 ++--\n src/cairo-output-stream-private.h  |    2 +-\n src/cairo-output-stream.c          |    2 +-\n src/cairo-pdf-surface.c            |   18 +++++++++---------\n src/cairo-png.c                    |    2 +-\n src/cairo-ps-surface.c             |    2 +-\n src/cairo-script-surface.c         |    6 +++---\n src/cairo-surface.c                |    4 ++--\n src/cairo-svg-surface.c            |    6 +++---\n src/cairo-types-private.h          |    2 +-\n src/cairo-win32-printing-surface.c |   10 +++++-----\n src/cairo.h                        |    4 ++--\n util/cairo-trace/trace.c           |    6 +++---\n 14 files changed, 37 insertions(+), 37 deletions(-)\n\ncommit eb85ab998b606144daf025285968a5d6031b9aa6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jul 10 10:43:40 2010 +0100\n\n    subsurface: Don't assume we ever own the target.\n    \n    Andrea pointed out that snapshots can be shared, and so the subsurface\n    should not be calling finish even on a snapshot.\n\n src/cairo-surface-subsurface-private.h |    1 -\n src/cairo-surface-subsurface.c         |   17 ++++++++---------\n 2 files changed, 8 insertions(+), 10 deletions(-)\n\ncommit 59c83117d77f58e9cb64aaa6b572fab62fb31c6b\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jul 9 18:55:11 2010 +0200\n\n    build: Commit new versions of autogenerate Windows build files\n    \n    The recent commits to the build system changed a bunch of stuff in\n    there, so update the files.\n\n boilerplate/Makefile.win32.features |   92 +++++++++++++++++++++++++++++++----\n build/Makefile.win32.features-h     |    1 -\n src/Makefile.win32.features         |   92 +++++++++++++++++++++++++++++++----\n 3 files changed, 164 insertions(+), 21 deletions(-)\n\ncommit bf117e4ea7c89dadcb5a358bb47c0f213cc67461\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jul 9 18:43:38 2010 +0200\n\n    build: fix glew include\n    \n    Currently wether internal glew is built is dependant on wether the\n    tarball in use was built with internal glew or not. And that's not how\n    it should be.\n\n configure.ac         |    8 ++++----\n src/Makefile.sources |   11 +++++++----\n 2 files changed, 11 insertions(+), 8 deletions(-)\n\ncommit 0bd704bd1e92b274209aeda6de88c7e75ffa81be\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jul 9 17:15:02 2010 +0200\n\n    build: Remove wrong flags from libcairo_cxx.la\n    \n    They're useful for the final so, but not for an intermediate noinst lib.\n\n src/Makefile.am |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit faceffd5beb4297299175945660522d8f1f5f2cb\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jul 9 16:58:18 2010 +0200\n\n    build: copy/paste failure: Don't build libcxx.la\n\n src/Makefile.am |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit dbb386d3c0aa9e7534d333cf3dbcfc2aaeac05d3\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jul 9 12:49:10 2010 +0200\n\n    gl: Use unsigned int instead of GLuint\n    \n    GLuint is not defined in cairo-gl.h. If unsigned int is not compatible\n    enough to GLuint, we might consider to use #include <GL/gl.h> instead.\n\n src/cairo-gl-surface.c |    2 +-\n src/cairo-gl.h         |    3 ++-\n 2 files changed, 3 insertions(+), 2 deletions(-)\n\ncommit f7fc8569a797356d5e93ad67aae4eca31e6835cd\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jul 9 12:29:35 2010 +0200\n\n    build: Fix C++ issues with automake\n    \n    This is an attempt to fix the broken situation we've been in where\n    automake links libcairo.la with c++ because it might potentially maybe\n    include C++ files.\n    \n    Those potential files only exist in Chris' throwaway backends (skia, qt)\n    and the BeOS backend, so for 99.99% of cases, these backends are not\n    needed and linking with c++ is overkill. Also, no one wants to have\n    libcairo.so link to libstdc++.\n    \n    This patch fixes that in mutliple steps:\n    1) Add build infrastructure to distinguish between C and C++ backends.\n       This is done by allowing to specify backend_sources as well as\n       backend_cxx_sources variables in Makefile.sources.\n    2) Optionally build a libcairo_cxx.la noinst library\n       This intermediate library is built for C++ backends only and therefor\n       linked using c++. It is then linked into the final libcairo.la. This\n       does not require c++, so the linking of libcairo.la is done with cc.\n    \n    This also works around various weirdnesses that the current build system\n    exposes, where it assumes cisms when in fact using c++ semantics, like\n    not detecting c++ properly or:\n    https://bugzilla.redhat.com/show_bug.cgi?id=606523\n\n build/configure.ac.features |    7 ++++++-\n configure.ac                |   10 ++++++++++\n src/Makefile.am             |   20 +++++++++++++++++++-\n src/Makefile.am.analysis    |    4 ++--\n src/Makefile.sources        |    6 +++---\n 5 files changed, 40 insertions(+), 7 deletions(-)\n\ncommit df6d49f6eaf334d5a2de8bdd90919278071ab868\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jul 9 10:29:30 2010 +0200\n\n    build: Get rid of $(foo_files) Makefile.am variables\n    \n    They're unused, and less variables make the build system easier to\n    understand.\n\n build/configure.ac.features |    1 -\n src/Makefile.am             |    1 -\n 2 files changed, 2 deletions(-)\n\ncommit ce530b2802683fe6c5289367ef03018f4081a2da\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jul 9 04:24:51 2010 +0200\n\n    doc: Add \"@Since: 1.10\" tags to device docs\n\n src/cairo-device.c |   14 ++++++++++++++\n src/cairo.h        |    2 ++\n 2 files changed, 16 insertions(+)\n\ncommit c1fed693020c96126cdc697ddd22567398369b04\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jul 9 04:20:42 2010 +0200\n\n    gl: Remove double ** from some comments\n    \n    gtk-doc doesn't like that unless it's a real gtk-doc comment.\n    And it wasn't.\n\n src/cairo-gl-composite.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 5c73b371ae31f230210987941eec2db49d2e02be\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jul 9 04:20:06 2010 +0200\n\n    doc: Document remaining cairo-device functions\n\n src/cairo-device.c |   32 ++++++++++++++++++++++++++++++++\n 1 file changed, 32 insertions(+)\n\ncommit 9877c1932a44f7e5300d6fcd99c19748aa5a4828\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jul 9 03:52:45 2010 +0200\n\n    doc: Add more documentation for devices\n    \n    Add general docs and document acquire/release. I'm not happy with the\n    documentation yet. In particular, I have 2 issues:\n    1) The threading guarantees Cairo provides are missing.\n    2) There's no docs on which Cairo functions do acquire devices.\n    \n    I guess I'll have to fix them later.\n\n src/cairo-device.c |   86 ++++++++++++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 86 insertions(+)\n\ncommit 739d6e35fa5632b80b888d6475f2fdb6be6054a6\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jul 9 03:04:27 2010 +0200\n\n    doc: Clarify that cairo_surface_get_device() can return NULL\n\n src/cairo-surface.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit 65d0590b041835fb466f4a7073910ef1383d9e77\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jul 9 02:23:13 2010 +0200\n\n    doc: Copy docs for standard device APIs\n    \n    Copied from the surface equivalents\n\n src/cairo-device.c |   42 ++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 42 insertions(+)\n\ncommit 8a08b6fa5288f376688730c66ae9219d01180f42\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jul 9 02:21:00 2010 +0200\n\n    doc: Remove the <TITLE> declarations\n    \n    This information was duplicated. It exists as the \"@Title\" of the\n    SECTION inline documentation already.\n\n doc/public/cairo-sections.txt |   28 ----------------------------\n 1 file changed, 28 deletions(-)\n\ncommit 5e76bc6deb9fd4dc7a0f9181d3941ba55ce89c56\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jul 9 01:10:24 2010 +0200\n\n    doc: Add missing region documentation\n\n src/cairo-region.c |   25 +++++++++++++++++++++++++\n src/cairo.h        |   13 +++++++++++++\n 2 files changed, 38 insertions(+)\n\ncommit 57da730d286f643c8f68b445907f7cdd1f53e5de\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Jul 8 23:44:35 2010 +0200\n\n    doc: Fix a syntax issue in quartz-font gtkdoc\n    \n    A missing empty line caused the long description to be part of\n    @See_Also. Ooops.\n\n src/cairo-quartz-font.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit fb03eba44f1ae7dd76dd3db82bfb55b06b0932ae\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Thu Jul 8 20:06:08 2010 +0200\n\n    test: Add quartz functions to api-special-cases test\n\n test/api-special-cases.c |   19 +++++++++++++++++++\n 1 file changed, 19 insertions(+)\n\ncommit 59aab0bdc24838252850034cee36ed756f3c3e2a\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Thu Jul 8 20:05:13 2010 +0200\n\n    test: fix typo\n\n test/api-special-cases.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit b870cc030d8e0eb6309695e5a101c802f688cf40\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Jul 8 13:05:18 2010 +0200\n\n    doc: Move tmpl/ docs to inline docs\n    \n    I did this manually so I could review the docs at the same time.\n    If anyone finds typos or other mistakes I did, please complain to me (or\n    better: fix them).\n\n doc/public/cairo-sections.txt           |    4 +-\n doc/public/tmpl/.gitignore              |    3 -\n doc/public/tmpl/cairo-atsui.sgml        |   21 -\n doc/public/tmpl/cairo-beos.sgml         |   22 -\n doc/public/tmpl/cairo-font-face.sgml    |  116 ------\n doc/public/tmpl/cairo-font-options.sgml |  199 ---------\n doc/public/tmpl/cairo-ft.sgml           |   87 ----\n doc/public/tmpl/cairo-image.sgml        |  127 ------\n doc/public/tmpl/cairo-matrix.sgml       |  169 --------\n doc/public/tmpl/cairo-paths.sgml        |  263 ------------\n doc/public/tmpl/cairo-pattern.sgml      |  350 ----------------\n doc/public/tmpl/cairo-pdf.sgml          |  101 -----\n doc/public/tmpl/cairo-png.sgml          |   96 -----\n doc/public/tmpl/cairo-ps.sgml           |  144 -------\n doc/public/tmpl/cairo-quartz-fonts.sgml |   52 ---\n doc/public/tmpl/cairo-quartz.sgml       |   64 ---\n doc/public/tmpl/cairo-scaled-font.sgml  |  227 -----------\n doc/public/tmpl/cairo-status.sgml       |   98 -----\n doc/public/tmpl/cairo-surface.sgml      |  326 ---------------\n doc/public/tmpl/cairo-svg.sgml          |   91 -----\n doc/public/tmpl/cairo-text.sgml         |  319 ---------------\n doc/public/tmpl/cairo-transforms.sgml   |  132 ------\n doc/public/tmpl/cairo-types.sgml        |   43 --\n doc/public/tmpl/cairo-user-fonts.sgml   |  169 --------\n doc/public/tmpl/cairo-version.sgml      |  205 ----------\n doc/public/tmpl/cairo-win32-fonts.sgml  |  106 -----\n doc/public/tmpl/cairo-win32.sgml        |  101 -----\n doc/public/tmpl/cairo-xcb-xrender.sgml  |   26 --\n doc/public/tmpl/cairo-xcb.sgml          |   26 --\n doc/public/tmpl/cairo-xlib-xrender.sgml |   60 ---\n doc/public/tmpl/cairo-xlib.sgml         |  147 -------\n doc/public/tmpl/cairo.sgml              |  674 -------------------------------\n src/cairo-beos-surface.cpp              |   10 +\n src/cairo-font-face.c                   |   17 +\n src/cairo-font-options.c                |   12 +\n src/cairo-ft-font.c                     |   25 ++\n src/cairo-image-surface.c               |   21 +\n src/cairo-matrix.c                      |   23 ++\n src/cairo-misc.c                        |   20 +\n src/cairo-path.c                        |    9 +\n src/cairo-pattern.c                     |   17 +\n src/cairo-pdf-surface.c                 |   17 +\n src/cairo-png.c                         |   18 +\n src/cairo-ps-surface.c                  |   17 +\n src/cairo-quartz-font.c                 |   17 +\n src/cairo-quartz-surface.c              |   17 +\n src/cairo-scaled-font.c                 |   10 +\n src/cairo-surface.c                     |   47 +++\n src/cairo-svg-surface.c                 |   17 +\n src/cairo-types-private.h               |    8 +\n src/cairo-user-font.c                   |   22 +\n src/cairo-version.c                     |  156 +++++++\n src/cairo-win32-font.c                  |   17 +\n src/cairo-win32-surface.c               |   24 ++\n src/cairo-xcb-surface-render.c          |   13 +\n src/cairo-xcb-surface.c                 |   13 +\n src/cairo-xlib-surface.c                |   40 ++\n src/cairo.c                             |   57 +++\n 58 files changed, 666 insertions(+), 4566 deletions(-)\n\ncommit 65a1e351330106ee0af9f6f0df06b82954341ee6\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Jul 8 03:28:05 2010 +0200\n\n    doc: Remove CAIRO_FORMAT_RGB16_565 from hidden symbols list\n    \n    It's part of the cairo_format_t documentation now.\n\n doc/public/cairo-sections.txt |    1 -\n 1 file changed, 1 deletion(-)\n\ncommit e7594aebce6007bfa2027ba2655875db6c036e73\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Jul 8 03:21:45 2010 +0200\n\n    doc: Fix some consistency issues that confuse gtk-doc\n\n src/cairo-region.c |   16 +++++++++++++---\n src/cairo.h        |   16 ++++++++++++++--\n 2 files changed, 27 insertions(+), 5 deletions(-)\n\ncommit da2663a0aa1e3f0a6b2f6ae2e9952ac27dec3f5d\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Jul 8 03:14:42 2010 +0200\n\n    doc: Add list of new symbol in Cairo 1.10\n\n doc/public/cairo-docs.xml |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit a106aa86a3267b4886f7eabdc4b07bb394e11531\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Jul 8 03:13:20 2010 +0200\n\n    doc: add --name-space option to gtkdoc-mkdb\n    \n    This sorts function names in new symbols lists way better.\n\n doc/public/Makefile.am |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 71d17e4b1f1cb83bc605d72d8419d4bfb824c828\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Jul 8 02:42:39 2010 +0200\n\n    drm: Fix Makefile for drm_xr\n    \n    Use cairo_drm_xr_sources/headers for the drm_xr stuff. This makes it\n    work correctly in gtk-doc instead of conditionally adding it to\n    cairo_drm_sources/headers.\n\n src/Makefile.sources |   10 ++++------\n 1 file changed, 4 insertions(+), 6 deletions(-)\n\ncommit 4b3e488cebeeace02eae1164ed12caa93d7c5847\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Jul 8 02:42:06 2010 +0200\n\n    skia: Add cairo-skia.h as a public header\n\n src/Makefile.sources |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 2a546286da5fe7203846d99a4a3d732c73e62db5\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Jul 8 02:20:17 2010 +0200\n\n    doc: Add a section about regions\n\n doc/public/cairo-docs.xml     |    1 +\n doc/public/cairo-sections.txt |   30 ++++++++++++++++++++++++++++++\n 2 files changed, 31 insertions(+)\n\ncommit ab1f6d1af7c0e47077013edd58e93fa9fc6f2b5c\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Jul 8 01:41:27 2010 +0200\n\n    doc: Add missing surface APIs\n\n doc/public/cairo-sections.txt |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 90bf273a38856d178e90721168b8b076f79fbf38\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Jul 8 01:39:37 2010 +0200\n\n    doc: Add a section for cairo_device_t\n\n doc/public/cairo-docs.xml     |    1 +\n doc/public/cairo-sections.txt |   18 ++++++++++++++++++\n 2 files changed, 19 insertions(+)\n\ncommit 60e4f28d091df8ac6b898448eb52fae9ca920d5d\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Jul 8 01:39:07 2010 +0200\n\n    doc: Add cairo_in_clip() to cairo_t section\n\n doc/public/cairo-sections.txt |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 6843186b729b20acddccd36184d2c5a7b5525d2e\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Jul 8 01:38:43 2010 +0200\n\n    doc: Add cairo_rectangle_int_t to the general types list\n\n doc/public/cairo-sections.txt |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit c54dff82d3055529b7663dcff7a970cae919a9e0\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Jul 8 01:33:42 2010 +0200\n\n    glew: The headers are private, not public\n\n src/Makefile.sources |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 4252e3b8f915fc23611f1a667bf7bc1bb6a21dfd\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Jul 8 01:32:25 2010 +0200\n\n    doc: Add drm and glew to the ignored directories\n    \n    This reduces the number of unused symbols to a reasonable size. ;)\n\n doc/public/Makefile.am |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 729d00341c26d46d82359014df97472a469e49a4\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Jul 8 13:57:43 2010 +0200\n\n    gl: Fix compile error after rebase failure\n\n src/cairo-gl-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 292423c73376a7f9b84c9e3e578c242f486e921b\nAuthor: Colin Walters <walters@verbum.org>\nDate:   Wed Jul 7 15:46:33 2010 -0400\n\n    Support NOCONFIGURE environment variable\n    \n    This is taken from gnome-common; it can be convenient for builders\n    to separate the autogen from the configure stage.\n\n autogen.sh |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 9e6c151af810886e94372ac8e4878915059c6c14\nAuthor: Kristian H\u00f8gsberg <krh@bitplanet.net>\nDate:   Thu Jun 17 18:19:39 2010 -0400\n\n    gl: Add new cairo-gl surface constructor to create surface for texture\n\n src/cairo-gl-private.h |    2 +\n src/cairo-gl-surface.c |  111 ++++++++++++++++++++++++++++++++++++++++++------\n src/cairo-gl.h         |    4 ++\n 3 files changed, 105 insertions(+), 12 deletions(-)\n\ncommit 4c91bb9a221bc8e3d65a96365bbd1157b3f4e612\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue Jul 6 17:27:18 2010 +0200\n\n    region: Add cairo_region_xor() and cairo_region_xor_rectangle()\n    \n    gdk_region_xor() was a quite often used function in GDK and now that\n    GDKe uses cairo regions, it seems like a worthwhile addition to Cairo.\n\n src/cairo-region.c |   80 ++++++++++++++++++++++++++++++++++++++++++++++++++++\n src/cairo.h        |    6 ++++\n src/cairoint.h     |    2 ++\n 3 files changed, 88 insertions(+)\n\ncommit 82de6336d88be43de759b94634e87b9e4a8391b1\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue Jul 6 00:48:36 2010 +0200\n\n    test: Add note about how to fix failures to api-special-cases\n\n test/api-special-cases.c |    6 ++++++\n 1 file changed, 6 insertions(+)\n\ncommit 75f269b14e1e4cdadd8c08566a07b2460ae3364b\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue Jul 6 00:41:12 2010 +0200\n\n    test: Add documentation to the api-special-cases test\n    \n    Hopefully people add other backend APIs to the testsuite.\n\n test/api-special-cases.c |   27 +++++++++++++++++++++++++++\n 1 file changed, 27 insertions(+)\n\ncommit 398870e64a18f32f1854cb19f64c34e2b1987140\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue Jul 6 00:21:38 2010 +0200\n\n    xlib: Setters should set finished surfaces into an error status\n    \n    Caught by api-special-cases test\n\n src/cairo-xlib-surface.c |   18 ++++++++++++++----\n 1 file changed, 14 insertions(+), 4 deletions(-)\n\ncommit 6e562d1448eb70b7269f8f2f280719aa2aeb3ce7\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue Jul 6 00:20:57 2010 +0200\n\n    xcb: Setters should set finished surfaces into an error status\n    \n    Caught by api-special-cases test\n\n src/cairo-xcb-surface.c |   10 ++++++++--\n 1 file changed, 8 insertions(+), 2 deletions(-)\n\ncommit fa070704966f10e7264778a3ffb401054a68e8f7\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue Jul 6 00:20:36 2010 +0200\n\n    test: Add xcb and xlib functions to api-special-cases test\n\n test/api-special-cases.c |   91 ++++++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 91 insertions(+)\n\ncommit c4068fe9414bad663f77c030ac96fa4b4cba87ba\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jul 5 23:14:33 2010 +0200\n\n    test: Add ps, pdf and svg to the api-special-cases test\n\n test/api-special-cases.c |  103 ++++++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 103 insertions(+)\n\ncommit 3e008e8ab0a1c5254bd1d8a58c9e9a89846fe7ac\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jul 5 23:14:19 2010 +0200\n\n    svg: Set error when extracting from finished surface\n    \n    Caught by api-special-cases test\n\n src/cairo-svg-surface.c |   10 ++++++++++\n 1 file changed, 10 insertions(+)\n\ncommit 2e66cbaee2efc4a8eb2117f945d68e2816349cfe\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jul 5 23:10:12 2010 +0200\n\n    ps: Allow specifying if errors on extract_surface should be set\n    \n    Getters should not set errors on passed in input. So we don't.\n    \n    Caught by api-special-cases test\n\n src/cairo-ps-surface.c |   39 ++++++++++++++++++++++-----------------\n 1 file changed, 22 insertions(+), 17 deletions(-)\n\ncommit f5dfc3ce6eab3bf836f2d7f7cf72d2834c42d72f\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jul 5 23:08:08 2010 +0200\n\n    ps: Set error when extracting from finished surface\n    \n    Caught by api-special-cases test\n\n src/cairo-ps-surface.c |   10 ++++++++++\n 1 file changed, 10 insertions(+)\n\ncommit 106357f6e28467f6db02e8d69c4aea459aca781c\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jul 5 23:07:24 2010 +0200\n\n    pdf: Set error when extracting from finished surface\n    \n    Caught by api-special-cases test\n\n src/cairo-pdf-surface.c |   10 ++++++++++\n 1 file changed, 10 insertions(+)\n\ncommit 702aa19fdae8bd511c4374f580dde6503afd3341\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jul 5 22:50:44 2010 +0200\n\n    gl: Fail properly when called with finished functions\n    \n    Caught by api-special-cases test\n\n src/cairo-gl-surface.c |   12 +++++++++++-\n 1 file changed, 11 insertions(+), 1 deletion(-)\n\ncommit b87be76bdfcbd329c79a9f11b24d22010ad15dde\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jul 5 22:50:18 2010 +0200\n\n    test: Add gl functions to the tests\n\n test/api-special-cases.c |   39 ++++++++++++++++++++++++++++++++++++++-\n 1 file changed, 38 insertions(+), 1 deletion(-)\n\ncommit 448653e7b9938100c3f2e30e026fbc4d9de7d0d5\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jul 5 22:41:43 2010 +0200\n\n    Call _cairo_error() when setting the FINISHED error on surfaces\n\n src/cairo-surface-subsurface.c |    2 +-\n src/cairo-surface.c            |   12 ++++++------\n 2 files changed, 7 insertions(+), 7 deletions(-)\n\ncommit 19da8e138d317c1770d8bbd21a49c657d954f126\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jul 5 22:40:54 2010 +0200\n\n    tee: Add proper error handling\n    \n    Caught by api-special-cases\n\n src/cairo-tee-surface.c |   15 +++++++++++++++\n 1 file changed, 15 insertions(+)\n\ncommit a9f30fc1f0c3e50715468b09707477973bf5268b\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jul 5 22:30:55 2010 +0200\n\n    test: Add recording and tee surface functions to api-special-cases\n\n test/api-special-cases.c |   44 ++++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 44 insertions(+)\n\ncommit 41abc0ca37855751ed06051a30c0d866977ed2bd\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jul 5 22:19:05 2010 +0200\n\n    test: add PNG functions\n\n test/api-special-cases.c |   36 ++++++++++++++++++++++++++++++++++++\n 1 file changed, 36 insertions(+)\n\ncommit 897eaa3e97f865ad2c28442c26efaf4ba391cf03\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jul 5 22:11:23 2010 +0200\n\n    test: Add a non-error surface check\n    \n    In that check, we call functions that require a specific surface type\n    with surfaces of a different type and check that they don't crash and\n    set the correct error.\n\n test/api-special-cases.c |   36 ++++++++++++++++++++++++++++++++++++\n 1 file changed, 36 insertions(+)\n\ncommit 986ddf565215dc01065eade46921abe8a4b7912e\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jul 5 22:03:42 2010 +0200\n\n    test: add image surface functions to api-special-cases test\n\n test/api-special-cases.c |   90 +++++++++++++++++++++++++++++++++-------------\n 1 file changed, 66 insertions(+), 24 deletions(-)\n\ncommit 72878d70ea75be03f47fa9d53f8305e76162054e\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jul 5 20:47:19 2010 +0200\n\n    test: Add a new test variant to api-special-cases test\n    \n    This variant tests a (hopefully) inert error surface.\n\n test/api-special-cases.c |   35 +++++++++++++++++++++++++++++++++++\n 1 file changed, 35 insertions(+)\n\ncommit 9de25a0297c141a0776835920168afaa3ca77a87\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jul 5 18:33:40 2010 +0200\n\n    configure: remove dolt\n    \n    libtool should be fast by now\n\n Makefile.am           |    5 +-\n build/aclocal.dolt.m4 |  178 -------------------------------------------------\n configure.ac          |    1 -\n 3 files changed, 2 insertions(+), 182 deletions(-)\n\ncommit 6744b78de17930285569da2158a334763e2bd333\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jul 5 18:25:31 2010 +0200\n\n    subsurface: Fail if created from a finished surface\n    \n    Caught by api-special-cases test\n\n src/cairo-surface-subsurface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 8fd1ecea12f15c2bda710065909a14415ba92bd8\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jul 5 18:25:16 2010 +0200\n\n    surface: Fail if set_mime_data() is called on a finished surface\n    \n    Caught by api-special-cases test\n\n src/cairo-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit e388ff1ae732970d6166780817ec121cf58ccd0e\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jul 5 18:24:23 2010 +0200\n\n    surface: Fail early if create_similar() is called on a finished surface\n    \n    Caught by api-special-cases test\n\n src/cairo-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit c1689ef6f27f99c36e1a5f4de658363ca0aad25a\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jul 5 18:23:37 2010 +0200\n\n    surface: don't call begin_modification on finished surfaces\n    \n    Fixes https://bugs.launchpad.net/ubuntu/+source/cairo/+bug/600622\n    \n    Caught by api-special-cases test\n\n src/cairo-surface.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit cf0245c1201d4884ff19e881e9c118784fa14884\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jul 5 18:17:09 2010 +0200\n\n    tests: Add a testcase that checks APIs work consistently\n    \n    In particular, it checks that finished and surfaces in an error state do\n    not do bad things, like cause crashes.\n    So far this test only checks surface APIs, but it should be extended to\n    cover all APIs.\n    \n    Please update this test when new APIs get added.\n    \n    Motivated by https://bugs.launchpad.net/ubuntu/+source/cairo/+bug/600622\n\n test/Makefile.sources          |    1 +\n test/api-special-cases.c       |  360 ++++++++++++++++++++++++++++++++++++++++\n test/api-special-cases.ref.png |  Bin 0 -> 95 bytes\n 3 files changed, 361 insertions(+)\n\ncommit eb63284fc3ae9377003ca312be58ae8f5dbbfdbd\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jul 5 00:37:10 2010 +0200\n\n    configure: Use automake silent rules\n    \n    This replaces shave usage.\n    If silent rules are not available, don't use them.\n\n configure.ac |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 68bbb6b4a0a3b9bc923ccf130b1ca4221a5e54bd\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jul 5 00:35:39 2010 +0200\n\n    configure: remove shave\n\n build/.gitignore       |    2 --\n build/aclocal.shave.m4 |   77 ---------------------------------------------\n build/shave-libtool.in |   69 ----------------------------------------\n build/shave.in         |   82 ------------------------------------------------\n configure.ac           |    4 ---\n 5 files changed, 234 deletions(-)\n\ncommit 9ce87c67ff64083ec48edfefe83a1df3756c364c\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sat Jul 3 02:54:55 2010 +0200\n\n    perf: print comment describing backend\n    \n    Use the descibe string to output information about the backend we're\n    testing.\n\n perf/cairo-perf-trace.c |   31 ++++++++++++++++++++++++++++++-\n 1 file changed, 30 insertions(+), 1 deletion(-)\n\ncommit fcfe7c67248ea171dc40c0dbd861e489a2df5941\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sat Jul 3 02:54:28 2010 +0200\n\n    boilerplate: Add describe string\n    \n    Print the pixman version we're using\n\n boilerplate/cairo-boilerplate.c |   21 ++++++++++++++++++---\n 1 file changed, 18 insertions(+), 3 deletions(-)\n\ncommit 0a7135148a634ea6692a4edd83193870a5d526b3\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sat Jul 3 02:54:08 2010 +0200\n\n    gl: Add describe string\n\n boilerplate/cairo-boilerplate-glx.c |   29 +++++++++++++++++++++++++----\n 1 file changed, 25 insertions(+), 4 deletions(-)\n\ncommit a1c4b001a548611b7d77e9280fdb5a82da275830\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Jun 30 18:27:54 2010 +0200\n\n    boilerplate: Add a describe vfunc\n    \n    This function is supposed to describe the backend in use. The describe\n    function is optional - and therefore initialized as NULL everywhere.\n    Note:\n    It is well known that the xlib backend uses X. What is not known is what\n    version the server supports or what graphics card it is running on. That\n    is the information the describe vfunc is supposed to provide.\n\n boilerplate/Makefile.win32.features            |    8 ++++++++\n boilerplate/cairo-boilerplate-directfb.c       |    4 ++--\n boilerplate/cairo-boilerplate-drm.c            |    2 ++\n boilerplate/cairo-boilerplate-egl.c            |    1 +\n boilerplate/cairo-boilerplate-glx.c            |    4 ++++\n boilerplate/cairo-boilerplate-pdf.c            |    4 ++--\n boilerplate/cairo-boilerplate-ps.c             |    8 ++++----\n boilerplate/cairo-boilerplate-quartz.c         |    5 +++--\n boilerplate/cairo-boilerplate-script.c         |    2 +-\n boilerplate/cairo-boilerplate-skia.c           |    4 ++--\n boilerplate/cairo-boilerplate-svg.c            |    8 ++++----\n boilerplate/cairo-boilerplate-test-surfaces.c  |   16 ++++++++--------\n boilerplate/cairo-boilerplate-vg.c             |    4 ++++\n boilerplate/cairo-boilerplate-wgl.c            |    2 ++\n boilerplate/cairo-boilerplate-win32-printing.c |    4 ++--\n boilerplate/cairo-boilerplate-win32.c          |    4 ++--\n boilerplate/cairo-boilerplate-xcb.c            |    7 +++++++\n boilerplate/cairo-boilerplate-xlib.c           |    4 ++++\n boilerplate/cairo-boilerplate.c                |   10 +++++-----\n boilerplate/cairo-boilerplate.h                |    4 ++++\n build/Makefile.win32.features-h                |    1 +\n src/Makefile.win32.features                    |    8 ++++++++\n 22 files changed, 80 insertions(+), 34 deletions(-)\n\ncommit 4c039b1cdfac5b5d6aa0c38f0779213fd14ec7de\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 2 17:01:12 2010 +0100\n\n    user-font: Check the status before destroying the context\n\n src/cairo-user-font.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 1f84f5682c6ff246b3d28c75c8731504f31c1ee1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 2 13:19:17 2010 +0100\n\n    xlib: Apply translation to image surface upload.\n    \n    Fixes:\n    \n      Bug 28888 - cairo_paint with rgb images does not work correctly\n      https://bugs.freedesktop.org/show_bug.cgi?id=28888\n\n src/cairo-xlib-surface.c |   13 ++++++++-----\n 1 file changed, 8 insertions(+), 5 deletions(-)\n\ncommit d2d6c96c24501d888422ea42d3c90d3c8f3647a0\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Tue Jun 29 09:58:54 2010 +0200\n\n    user-font: correct handling of size 0 text\n    \n    Text with size 0 has a singular scale matrix, thus requires special\n    handling to avoid invalidating the context where it is used.\n    \n    Fixes pthread-show-text and text-zero-len (they failed with assertion\n    when ran using the user font backend).\n\n src/cairo-matrix.c      |    9 +++++++\n src/cairo-scaled-font.c |    5 ++--\n src/cairo-user-font.c   |   60 ++++++++++++++++++++++++++++-------------------\n src/cairoint.h          |    3 +++\n 4 files changed, 50 insertions(+), 27 deletions(-)\n\ncommit 6db247e13c6fa61879029b335c6fa649d810c11b\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Tue Jun 29 09:28:04 2010 +0200\n\n    user-font: ignore translation in scale matrix\n    \n    Currently the translation component of the scaled_font scale matrix\n    is applied by gstate and only linear components should be applied in\n    font backends.\n    \n    Fixes font-matrix-translation (when using user-font as font backend).\n\n src/cairo-user-font.c |    6 +++++-\n 1 file changed, 5 insertions(+), 1 deletion(-)\n\ncommit 549431e98ed0be17b80f24f0e0c167c7ad632f4f\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Mon Jun 28 22:40:28 2010 +0200\n\n    ft-font: fix typo\n\n src/cairo-ft-font.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 97a88c5adb08a3181bad1f63a7bbdfe5784b4207\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jun 28 17:10:59 2010 +0100\n\n    xlib: Compile without fontconfig\n    \n    Create a cairo-fontconfig-private.h where we can add the missing defines\n    in a common location rather than in the body of the code.\n\n src/Makefile.sources           |    1 +\n src/cairo-fontconfig-private.h |   76 ++++++++++++++++++++++++++++++++++++++++\n src/cairo-ft-font.c            |    5 +--\n src/cairo-surface-subsurface.c |    1 +\n src/cairo-xlib-screen.c        |   20 +----------\n 5 files changed, 80 insertions(+), 23 deletions(-)\n\ncommit 7d6910014310344e5d16c97ffd1f1c9fbc01b143\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Mon Jun 28 17:12:41 2010 +0200\n\n    quartz: remove unused declarations\n\n src/cairo-quartz-surface.c |   17 -----------------\n 1 file changed, 17 deletions(-)\n\ncommit bd4c14b94eeb386b30439929e8e54a5d9b5d5fca\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Thu Jun 24 23:20:41 2010 +0200\n\n    quartz: remove unused os version info\n    \n    It was previously used to activate a workaround for text transformation\n    whenrunning on some os versions. Now the workaround is not needed anymore.\n\n src/cairo-quartz-surface.c |    7 -------\n 1 file changed, 7 deletions(-)\n\ncommit aa7e9c43b6381930455a68258dcc3e14dce2b0e4\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Thu Jun 24 14:18:02 2010 +0200\n\n    quartz-font: correct and explain matrix computations\n    \n    glyph_path was taking into account the translation (which currently\n    is already applied in gstate) and the sign of the elements of the\n    matrices was not explained.\n\n src/cairo-quartz-font.c |   13 ++++++-------\n 1 file changed, 6 insertions(+), 7 deletions(-)\n\ncommit b26f72fef99e9869a62cbb8e44a82837f87cf2c6\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Thu Jun 24 22:34:36 2010 +0200\n\n    quartz: check return status\n    \n    If the font backend is unable to tell the extents of the operation,\n    consider it unbound.\n\n src/cairo-quartz-surface.c |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit 9c0d761bfcdd28d52c83d74f46dd3c709ae0fa69\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Thu Jun 24 15:26:03 2010 +0200\n\n    quartz: improve text transform handling\n    \n    Use scale instead of manually compositing font_matrix and ctm and\n    composite it with the context ctm, so that no workaround for clipping\n    is needed anymore.\n\n src/cairo-quartz-surface.c |   46 ++++++++++++--------------------------------\n 1 file changed, 12 insertions(+), 34 deletions(-)\n\ncommit 9068b5768b8560fbf095f1c0eecb5c805232f794\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Thu Jun 24 15:15:37 2010 +0200\n\n    quartz-font: silence compiler warnings\n    \n    Remove an unused function, explicitly ignore or check return values,\n    don't define unused variables.\n\n src/cairo-quartz-font.c |   84 +++++++++++++++++------------------------------\n 1 file changed, 30 insertions(+), 54 deletions(-)\n\ncommit ca161a585a7ce09cfcd468ea7591c5959077a907\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 26 14:50:57 2010 +0100\n\n    version: 1.9.9\n    \n    Post-snapshot bump.\n\n cairo-version.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 0f1ff0daab7259ec16076f788760da4f35cb0cdc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 26 14:20:25 2010 +0100\n\n    test: Missing ref image.\n\n test/Makefile.am |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 45d1f461ce2d2e3af16a5a90ffd8980bffc5eaa8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 26 14:17:23 2010 +0100\n\n    version: 1.9.10\n\n cairo-version.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 7a68a7bfd550b5e4b6635495e7de49fe306fbad4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 26 14:16:27 2010 +0100\n\n    NEWS for 1.9.10 snapshot\n\n NEWS |   28 ++++++++++++++++++++++++++++\n 1 file changed, 28 insertions(+)\n\ncommit 8df41361196c7ba1b8d272507cc3d523cdcf5632\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 26 09:52:11 2010 +0100\n\n    Regenerate default win32 headers.\n\n boilerplate/Makefile.win32.features |    8 --------\n build/Makefile.win32.features-h     |    1 -\n src/Makefile.win32.features         |    8 --------\n 3 files changed, 17 deletions(-)\n\ncommit 1373675ef7602363aeca0d9ec12be79719ea066d\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jun 25 14:10:12 2010 +0200\n\n    pop-group: Translate existing path properly\n    \n    This fixes the reverse case of the push_group case fixed a few commits\n    ago.\n\n src/cairo.c |    8 +++++---\n 1 file changed, 5 insertions(+), 3 deletions(-)\n\ncommit 59076776674e3ae47099f20e1d86064fbd856008\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jun 25 14:08:49 2010 +0200\n\n    test: improve push-group-path-offset to also catch the pop_group() case\n    \n    cairo_pop_group() also trasnforms the path wrong, so we use cairo_fill()\n    to copy data instead of cairo_paint().\n    \n    (Also, unbust the testcase.)\n\n test/push-group-path-offset.c |   45 +++++++++++++++--------------------------\n 1 file changed, 16 insertions(+), 29 deletions(-)\n\ncommit 2e8571d95ca36f8ad9e20796990cdc0b3f763082\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jun 25 13:41:22 2010 +0200\n\n    push-group: Fix path translation when pushing a group with device offsets\n    \n    With the previous code, the parent's device offset wasn't undone before\n    applying the new device offset.\n    Tested by push-group-path-offset test.\n\n src/cairo.c |    5 +++--\n 1 file changed, 3 insertions(+), 2 deletions(-)\n\ncommit a9b8d1a94ea624ea8b12a125bdf70c6f248e7ca7\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jun 25 13:38:40 2010 +0200\n\n    test: Add a new test for a bug with device-offset tests\n    \n    All the credit for this one goes to make distcheck\n\n test/Makefile.sources               |    1 +\n test/push-group-path-offset.c       |   90 +++++++++++++++++++++++++++++++++++\n test/push-group-path-offset.ref.png |  Bin 0 -> 186 bytes\n 3 files changed, 91 insertions(+)\n\ncommit 1099a3515b6a69e2ff360d8e6b1df71e3ea5c213\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 24 17:22:34 2010 +0100\n\n    drm/intel: Fix common off-by-one by rewriting the [XY]MAX macro.\n    \n    Many rectangles in the command stream are specified as inclusive rects,\n    i.e. the max values are (width-1, height-1), which is easy to neglect.\n\n src/drm/cairo-drm-i915-private.h          |    2 +-\n src/drm/cairo-drm-i915-surface.c          |   24 ++++++------------------\n src/drm/cairo-drm-i965-shader.c           |   12 ++++++------\n src/drm/cairo-drm-intel-command-private.h |    4 ++--\n 4 files changed, 15 insertions(+), 27 deletions(-)\n\ncommit fb6a00571c818c738d66bc04dc75e79491878f78\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jun 14 10:19:37 2010 +0100\n\n    drm: _cairo_color_get_content() compilation fixes\n\n src/drm/cairo-drm-i915-shader.c |    2 +-\n src/drm/cairo-drm-i965-shader.c |    5 +----\n src/drm/cairo-drm-intel.c       |    3 +--\n 3 files changed, 3 insertions(+), 7 deletions(-)\n\ncommit 42956b46436b9704be7619e1b61ab222923376d0\nAuthor: Zoxc <zoxc32@gmail.com>\nDate:   Sun Jun 20 21:07:57 2010 +0000\n\n    build: Added cairo deflate stream as a requirement for the script surface.\n\n src/Makefile.sources |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit b036a09972a19e63a85a4661a457525e2abe4026\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Thu Jun 24 14:59:18 2010 +0300\n\n    whitespace: Fixup formal arguments and tabs in boilerplate/ and perf/.\n    \n    Ran a script to align the formal parameters of functions and\n    collapse spaces to tabs in code.\n\n boilerplate/cairo-boilerplate-beos.cpp         |   42 +++++-----\n boilerplate/cairo-boilerplate-directfb.c       |   86 ++++++++++----------\n boilerplate/cairo-boilerplate-drm.c            |    2 +-\n boilerplate/cairo-boilerplate-egl.c            |   20 ++---\n boilerplate/cairo-boilerplate-getopt.c         |   12 +--\n boilerplate/cairo-boilerplate-glx.c            |   60 +++++++-------\n boilerplate/cairo-boilerplate-pdf.c            |   24 +++---\n boilerplate/cairo-boilerplate-private.h        |    2 +-\n boilerplate/cairo-boilerplate-ps.c             |   49 ++++++------\n boilerplate/cairo-boilerplate-qt.cpp           |   18 ++---\n boilerplate/cairo-boilerplate-quartz.c         |   18 ++---\n boilerplate/cairo-boilerplate-scaled-font.h    |    2 +-\n boilerplate/cairo-boilerplate-script.c         |   30 +++----\n boilerplate/cairo-boilerplate-skia.c           |   18 ++---\n boilerplate/cairo-boilerplate-svg.c            |   59 +++++++-------\n boilerplate/cairo-boilerplate-system.c         |   10 ++-\n boilerplate/cairo-boilerplate-system.h         |   10 ++-\n boilerplate/cairo-boilerplate-test-surfaces.c  |  100 +++++++++++------------\n boilerplate/cairo-boilerplate-vg.c             |   36 ++++-----\n boilerplate/cairo-boilerplate-wgl.c            |   58 +++++++-------\n boilerplate/cairo-boilerplate-win32-printing.c |   29 +++----\n boilerplate/cairo-boilerplate-win32.c          |   18 ++---\n boilerplate/cairo-boilerplate-xcb.c            |   85 ++++++++++----------\n boilerplate/cairo-boilerplate-xlib.c           |   90 ++++++++++-----------\n boilerplate/cairo-boilerplate.c                |  102 ++++++++++++------------\n boilerplate/cairo-boilerplate.h                |   44 +++++-----\n perf/cairo-perf-chart.c                        |   38 ++++++---\n perf/cairo-perf-compare-backends.c             |   30 ++++---\n perf/cairo-perf-diff-files.c                   |   37 +++++----\n perf/cairo-perf-graph-files.c                  |   73 ++++++++++-------\n perf/cairo-perf-graph-widget.c                 |   60 ++++++++------\n perf/cairo-perf-graph.h                        |    8 +-\n perf/cairo-perf-micro.c                        |   82 ++++++++++---------\n perf/cairo-perf-os2.c                          |   10 +--\n perf/cairo-perf-posix.c                        |   24 +++---\n perf/cairo-perf-print.c                        |    5 +-\n perf/cairo-perf-report.c                       |   62 ++++++++------\n perf/cairo-perf-trace.c                        |   82 ++++++++++---------\n perf/cairo-perf-win32.c                        |    6 +-\n perf/cairo-perf.h                              |   38 ++++-----\n perf/cairo-stats.c                             |   11 +--\n perf/cairo-stats.h                             |    6 +-\n 42 files changed, 850 insertions(+), 746 deletions(-)\n\ncommit 616e35d1fae703dc118ce503d25d4f57cfd16dfd\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Thu Jun 24 09:44:07 2010 +0300\n\n    boilerplate: Remove the xlib-window target from Renderless builds.\n    \n    I don't know why _cairo_boilerplate_xlib_window_create_surface()\n    is in the Render-only section of the code, but since it is, this\n    patch makes the boilerplate at least compile if we don't have\n    Render support built in.\n\n boilerplate/cairo-boilerplate-xlib.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit aed744008dbaab49f28f9c54ad0850074ece5d66\nAuthor: S\u00f8ren Sandmann Pedersen <sandmann@daimi.au.dk>\nDate:   Thu Jun 24 05:38:14 2010 -0400\n\n    test: Fix typo in copyright statement\n\n test/bug-seams.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 5c7e1dd690af21943435676bfac320cfe863cf55\nAuthor: Soeren Sandmann <sandmann@daimi.au.dk>\nDate:   Thu Jun 24 10:11:48 2010 +0100\n\n    test: Add an example of seams.\n    \n    A pair of perfectly conjoint quads should not produce a seam when\n    accumulating into a temporary mask. Yet here is an example of where they\n    do!\n\n test/Makefile.am                     |    3 ++\n test/Makefile.sources                |    1 +\n test/bug-seams.c                     |   98 ++++++++++++++++++++++++++++++++++\n test/bug-seams.ref.png               |  Bin 0 -> 1604 bytes\n test/bug-seams.xlib-fallback.ref.png |  Bin 0 -> 2133 bytes\n test/bug-seams.xlib.ref.png          |  Bin 0 -> 1606 bytes\n 6 files changed, 102 insertions(+)\n\ncommit 413ec4b708a511eb2f3866165a35d3a8d97bd326\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue Jun 22 23:19:32 2010 +0200\n\n    gl: Return a surface from _cairo_surface_create_in_error()\n    \n    On error, surface creation functions should always return a surface\n    created with _cairo_surface_create_in_error() instead of a new surface\n    in an error state. This simplifies internal code as no refcounting has\n    to be done.\n\n src/cairo-gl-surface.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit a4e292507cf7c2f960d040edd57b56a976c73da6\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue Jun 22 22:01:25 2010 +0200\n\n    gl: Propagate surface creation error instead of crashing\n\n src/cairo-gl-glyphs.c |   22 ++++++++++++++++------\n 1 file changed, 16 insertions(+), 6 deletions(-)\n\ncommit faa4e6761c8f74a1acaa7ccc5bc8bb23b2f5cdb1\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jun 21 14:01:34 2010 +0200\n\n    egl: Copy glx code to detect the proper surface in acquire\n\n src/cairo-egl-context.c |    9 +++++++++\n 1 file changed, 9 insertions(+)\n\ncommit 76a721f7e94fb040f106b200c09c1a7b9ae83d36\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jun 21 13:30:06 2010 +0200\n\n    egl: Remove unused prev_foo usage\n\n src/cairo-egl-context.c |    7 -------\n 1 file changed, 7 deletions(-)\n\ncommit b8051ee985ed46c69f5fba1216ead1ebacecfd44\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 19 18:09:27 2010 +0100\n\n    script: Pass the buffer length back to freetype.\n    \n    After querying the required size, inform the backend of the allocated\n    size of the buffer.\n\n src/cairo-script-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 8ac9a9df24eefc5f1125db87eb8eda2e94f54070\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 19 13:23:50 2010 +0100\n\n    xcb: Return the status upon flushing the device.\n    \n    The vfunc was updated to expect the status return, so supply it.\n\n src/cairo-xcb-connection.c |    5 +++--\n 1 file changed, 3 insertions(+), 2 deletions(-)\n\ncommit 9fffc0e120df8947c34d9e423c69ab66b763d875\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 19 11:15:13 2010 +0100\n\n    xlib: Precise and Imprecise were reversed.\n    \n    The intention was to switch to imprecise mode by default, using the\n    exact rendering mode only upon request.\n\n src/cairo-xlib-surface.c |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit b322b2e61984c2e9e00fb44343ebe5e423246445\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 19 10:26:05 2010 +0100\n\n    xlib: Perform image uploads inplace.\n    \n    Under the restrictive conditions where we are doing an untransformed\n    contained upload of an image into a matching surface, perform it in\n    place. The drivers will attempt to stream such uploads efficiently, far\n    more so than our code.\n\n src/cairo-xlib-surface.c |  112 ++++++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 112 insertions(+)\n\ncommit c3eb95bf6670bbc06ef908481da95f3504c7dc4d\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jun 18 19:26:07 2010 +0200\n\n    egl: Fail properly if no configs are available instead of crashing\n\n boilerplate/cairo-boilerplate-egl.c |    4 ++++\n 1 file changed, 4 insertions(+)\n\ncommit 3908d80f57bc0abef47721a5b8b9afd5041118e3\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jun 18 16:11:20 2010 +0200\n\n    glx: Remove useless optimization trying to avoid glXMakeCurrent()\n    \n    The optimization is not performance-relevant. And having less code is\n    always a good idea.\n\n src/cairo-glx-context.c |   19 ++-----------------\n 1 file changed, 2 insertions(+), 17 deletions(-)\n\ncommit 64f90322f73c37ac5667292949bb45b0279239d9\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jun 18 12:40:48 2010 +0200\n\n    gl: Refactor status handling in _cairo_gl_context_release()\n    \n    Previously, the code returned a status and required the caller to mangle\n    this status with his own status. Now, the function takes the previous\n    status ass an argument and does the mangling itself.\n    \n    Also contains fixes for all the callers to actually check the return\n    value - which is now rather trivial as it just requires passing through\n    the status variable.\n\n src/cairo-gl-composite.c |    6 ++----\n src/cairo-gl-device.c    |    2 +-\n src/cairo-gl-glyphs.c    |   14 +++++---------\n src/cairo-gl-gradient.c  |    3 ++-\n src/cairo-gl-private.h   |   14 ++++++++------\n src/cairo-gl-surface.c   |   47 ++++++++++++++++++++++++----------------------\n 6 files changed, 43 insertions(+), 43 deletions(-)\n\ncommit fc3d521c121da237974e486f1b7735009764b441\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jun 18 12:23:37 2010 +0200\n\n    gl: Inline the check_error() function\n\n src/cairo-gl-private.h |   23 +++++++----------------\n 1 file changed, 7 insertions(+), 16 deletions(-)\n\ncommit 9d7fa289132650261e546b39af2371c262f46d3c\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jun 18 12:18:05 2010 +0200\n\n    gl: Don't assert if there used to be a GL error\n    \n    When acquiring the GL context, do not assert that the GL context is not\n    in an error state. Do not even call _cairo_error(). Handling GL errors\n    in other code is not Cairo's responsibility.\n    \n    Instead just clear all previous errors so we don't accidentally set\n    surfaces into error states to unrelated errors.\n\n src/cairo-gl-private.h |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit 0f9a8cd18f14b1f23aaefe14db3b5ad07c84cff7\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jun 18 12:17:36 2010 +0200\n\n    gl: Add a custom glGetError() function\n    \n    This function clears all errors and returns the first one that happened.\n\n src/cairo-gl-private.h |   19 ++++++++++++++++---\n 1 file changed, 16 insertions(+), 3 deletions(-)\n\ncommit 8048d3aa0a11ab1c054887682b8b2a899a87da0e\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jun 18 10:50:21 2010 +0200\n\n    gl: Remove custom fprintf fudging on GL errors\n    \n    Now that we probably call _cairo_error() on every GL error, there is no\n    need to use custom methods to catch those errors. The usual breakpoint\n    is enough.\n\n src/cairo-gl-private.h |    7 +------\n src/cairo-gl-surface.c |   20 --------------------\n 2 files changed, 1 insertion(+), 26 deletions(-)\n\ncommit f4da5048bf87df0651ec83ca3f1ad6a5af7eb16d\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jun 18 10:44:15 2010 +0200\n\n    gl: cairo_warn about return value from cairo_gl_context_release()\n\n src/cairo-gl-private.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit d9179f480a43c7171806e2c33804aaae70a2cfa6\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jun 18 00:43:09 2010 +0200\n\n    boilerplate: Reinstate glFinish() for wgl\n    \n    It was accidentally disabled.\n\n boilerplate/cairo-boilerplate-wgl.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 67e84d61230a2012c18d8bff60e8835aaa57be07\nAuthor: Kristian H\u00f8gsberg <krh@bitplanet.net>\nDate:   Thu Jun 17 17:38:00 2010 -0400\n\n    egl: Implement acquire and release for EGL backend\n\n src/cairo-egl-context.c |   46 +++++++++++++++++++++++++++++++++++++---------\n 1 file changed, 37 insertions(+), 9 deletions(-)\n\ncommit 7ab9ce1b9130dcd63b2b2b2516b77ef1ae531144\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 17 15:47:04 2010 +0100\n\n    image: Make a local copy of the trap coordinates as the boxes alias.\n    \n    As we transform the array of trapezoids into an array of boxes in-place,\n    we must take local copies of the coordinates before writing into the\n    boxes otherwise we may inadvertently modify the trapezoidal coordinates.\n    \n    Fixes test/a1-bug.\n\n src/cairo-image-surface.c |   15 +++++++++++----\n 1 file changed, 11 insertions(+), 4 deletions(-)\n\ncommit f2645fa361003636d1da6ca38c3b61fef1b1ce4d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 17 15:38:53 2010 +0100\n\n    test: Add a1-bug\n    \n    Capture a bug report from \"cairouser\" where a1 rasterisation is now\n    broken.\n\n test/Makefile.am            |    3 +++\n test/Makefile.sources       |    1 +\n test/a1-bug.c               |   61 +++++++++++++++++++++++++++++++++++++++++++\n test/a1-bug.image16.ref.png |  Bin 0 -> 3329 bytes\n test/a1-bug.ref.png         |  Bin 0 -> 3736 bytes\n test/a1-bug.xlib.ref.png    |  Bin 0 -> 3362 bytes\n 6 files changed, 65 insertions(+)\n\ncommit 800e977c2ea1e097c4b7332b18a5fc03089603c1\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Thu Jun 17 14:27:13 2010 +0300\n\n    perf: Allow comparing perf reports with only one difference.\n    \n    The cairo-perf-diff-files tool would ignore perf reports with\n    just one test for no apparent reason.  The traces take so long\n    that it's useful to be able to compare runs with just one trace.\n\n perf/cairo-perf-diff-files.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 29b8cfd2b6cf590fcfe64e5ba5b4479c2748ac06\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 17 10:11:31 2010 +0100\n\n    test/halo: Remove copied code.\n    \n    How did that get there? I obviously ran the test to generate the output,\n    so where did it spring as it is the old version of the function?\n    \n    From 16364768d79570e7201a87f0a985c65acaff5560.\n    \n    Mysteries will never cease.\n\n test/halo.c |   36 ------------------------------------\n 1 file changed, 36 deletions(-)\n\ncommit a9a22649e2ffa1cd3720c8555dc3c6aff2040e3d\nAuthor: Zoxc <zoxc32@gmail.com>\nDate:   Wed Jun 16 21:33:30 2010 +0200\n\n    wgl: Only reset GL context on the dummy window.\n    \n    This changes the WGL context destruction code to only reset the GL\n    context for the dummy window, since doing it on <nothing> is an\n    invalid operation.\n\n src/cairo-wgl-context.c |    6 ++----\n 1 file changed, 2 insertions(+), 4 deletions(-)\n\ncommit ca35e09ece5107c3ebc9f111d4a3d96d69aa3d03\nAuthor: Zoxc <zoxc32@gmail.com>\nDate:   Mon Jun 14 20:34:52 2010 +0200\n\n    gl: Added wgl boilerplate and moved the glx and egl boilerplates into their own files.\n\n boilerplate/Makefile.sources        |    4 +-\n boilerplate/Makefile.win32.features |    8 +\n boilerplate/cairo-boilerplate-egl.c |  141 ++++++++++\n boilerplate/cairo-boilerplate-gl.c  |  492 -----------------------------------\n boilerplate/cairo-boilerplate-glx.c |  401 ++++++++++++++++++++++++++++\n boilerplate/cairo-boilerplate-wgl.c |  236 +++++++++++++++++\n build/Makefile.win32.features-h     |    1 +\n src/Makefile.win32.features         |    8 +\n 8 files changed, 798 insertions(+), 493 deletions(-)\n\ncommit 2af3262895d74492a0f856f049d1524a527257bb\nAuthor: Zoxc <zoxc32@gmail.com>\nDate:   Mon Jun 14 20:33:17 2010 +0200\n\n    wgl: Renamed hwnd field to wnd.\n\n src/cairo-wgl-context.c |   12 ++++++------\n 1 file changed, 6 insertions(+), 6 deletions(-)\n\ncommit 7a023a62f7517ad0d54f4d59c99909fadcc05e82\nAuthor: Nicolaus L Helper <nlhepler@gmail.com>\nDate:   Thu Jun 17 08:56:30 2010 +0100\n\n    ft,fc,xlib: LCD filtering patch.\n    \n    This adds internal API to retrieve the LCD filtering parameters from\n    fontconfig, or as set on the Screen, and feed them to FreeType when\n    rendering the glyph.\n    \n    References:\n      Bug 10301 - LCD filtering patch\n      https://bugs.freedesktop.org/show_bug.cgi?id=10301\n    \n    Tested-by: Brandon Wright <bearoso@gmail.com>\n    Forward-ported-by: Robert Hooker <sarvatt@gmail.cm>\n    \n    ickle: The API is clearly not ready for public consumption, the enum are\n    poorly named, however this stands by itself as enabling system wide\n    properties.\n\n src/cairo-font-options.c  |   51 +++-\n src/cairo-ft-font.c       |  675 ++++++++++++++++++++++++++++++++-------------\n src/cairo-surface.c       |    1 +\n src/cairo-types-private.h |   25 ++\n src/cairo-xlib-screen.c   |   28 ++\n src/cairoint.h            |    7 +\n 6 files changed, 597 insertions(+), 190 deletions(-)\n\ncommit 36b4b0631cc220d01c411b596a4eef839338cd7c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 17 08:50:31 2010 +0100\n\n    image: Use consistent rounding modes for a1 rasterisation.\n    \n    When checking if the traps are equivalent to a set of rectangles, we\n    need to use the same rounding mode as when converting the traps to a set\n    of boxes and then filling them. Failure to do leads to a situation where\n    (-127,-128) was thought to be equivalent to (0,0) but we attempted to\n    fill from 0 to -1 instead.\n    \n    References:\n      http://lists.cairographics.org/archives/cairo/2010-June/020115.html\n\n src/cairo-image-surface.c |   58 +++++++++++++++++++++++++++------------------\n 1 file changed, 35 insertions(+), 23 deletions(-)\n\ncommit 3306bcb1d91265d60c460aa64d3ee4a4acb430a1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 17 08:47:48 2010 +0100\n\n    fixed: Refactor code to use more inlines and less duplication of logic.\n    \n    This also has the side-effect of fixing the types in the problematic\n    functions which hid Andrea's true fix for the unsigned FRAC_MASK.\n\n src/cairo-fixed-private.h |   18 +++++++++++++++---\n 1 file changed, 15 insertions(+), 3 deletions(-)\n\ncommit c0dee7964c4394b7963041f246855fd3b01f4ebb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jun 16 18:49:58 2010 +0100\n\n    test: Add a1-rasterisation\n    \n    Check the rounding criteria when rasterising.\n\n test/Makefile.am                         |    2 +\n test/Makefile.sources                    |    1 +\n test/a1-rasterisation-rectangles.ref.png |  Bin 0 -> 1729 bytes\n test/a1-rasterisation-triangles.ref.png  |  Bin 0 -> 1729 bytes\n test/a1-rasterisation.c                  |  101 ++++++++++++++++++++++++++++++\n 5 files changed, 104 insertions(+)\n\ncommit 16364768d79570e7201a87f0a985c65acaff5560\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jun 16 15:09:22 2010 +0100\n\n    test/halo: Transformation seems key to the bug...\n\n test/halo.c |   36 ++++++++++++++++++++++++++++++++++++\n 1 file changed, 36 insertions(+)\n\ncommit cb28e0bfeb47a72f14ee42f161ebf6b5eb61e76b\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Thu Jun 17 08:42:39 2010 +0200\n\n    test: correct options in getopt call\n    \n    'k' was missing and 't' was present but unhandled. Options have been\n    reordered according to the \"USAGE\" ordering.\n\n test/cairo-test-runner.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 3cd07559328b60e3da85debb805cb4a3fc4abc22\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Wed Jun 16 22:54:08 2010 +0200\n\n    correct rounding computation\n    \n    cairo_fixed_integer_round[_down] were adding an unsigned mask value\n    before shifting its result, causing the shift to be computed as\n    logical (unsigned) right shift, thus producing incorrect values for\n    negative inputs. Making the mask value signed fixes this issue.\n    \n    Bug report by cu:\n    http://lists.cairographics.org/archives/cairo/2010-June/020115.html\n\n src/cairo-fixed-private.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 8689d75caaa9c6ee42976873d21684fa9f48834f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jun 16 15:09:22 2010 +0100\n\n    test/halo: Transformation seems key to the bug...\n    \n    Only it is actually transformation of the result that is required in\n    order to magnify the effect to a detectable level.\n\n test/Makefile.am                    |    5 +++\n test/halo-transform.image16.ref.png |  Bin 0 -> 10983 bytes\n test/halo-transform.ps.ref.png      |  Bin 0 -> 8691 bytes\n test/halo-transform.ref.png         |  Bin 0 -> 15086 bytes\n test/halo-transform.xlib.ref.png    |  Bin 0 -> 15346 bytes\n test/halo.c                         |   64 +++++++++++++++++++++++++++++++++--\n test/halo.image16.ref.png           |  Bin 5328 -> 6172 bytes\n test/halo.ps.ref.png                |  Bin 0 -> 5220 bytes\n test/halo.ref.png                   |  Bin 7524 -> 8839 bytes\n test/halo.xlib.ref.png              |  Bin 7404 -> 8835 bytes\n 10 files changed, 67 insertions(+), 2 deletions(-)\n\ncommit 71936a1f414807a51c68de111362c2d5499bdfa7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jun 15 21:36:15 2010 +0100\n\n    test/aliasing: Add a few more colour combinations.\n    \n    In particular, compare red against its inverse, cyan. Etc.\n\n test/aliasing.c               |    6 +++++-\n test/aliasing.image16.ref.png |  Bin 20810 -> 97251 bytes\n test/aliasing.ref.png         |  Bin 22980 -> 104672 bytes\n test/aliasing.xlib.ref.png    |  Bin 24018 -> 104315 bytes\n 4 files changed, 5 insertions(+), 1 deletion(-)\n\ncommit e2220a1f3a7b483e615f5bb993a014d20b0f788a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jun 15 11:45:54 2010 +0100\n\n    configure: Try an alternate name for system glew.\n\n configure.ac |   10 ++++++----\n 1 file changed, 6 insertions(+), 4 deletions(-)\n\ncommit 25ec0c1e9b5af2ba68200b79b252de5c1b371d0a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jun 15 10:59:01 2010 +0100\n\n    build: Enable system GLEW on non-UNIX platforms\n\n configure.ac |   12 +++++++++---\n 1 file changed, 9 insertions(+), 3 deletions(-)\n\ncommit 52624446636bb5941ca2180afa2c0be275414cec\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jun 15 10:40:36 2010 +0100\n\n    glew: Define NULL\n\n src/glew/glew.c |    4 ++++\n 1 file changed, 4 insertions(+)\n\ncommit 56d06b088b9c355ca76a38191717a8e03aa5f59a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jun 14 22:58:38 2010 +0100\n\n    test: Add an aliasing test case.\n    \n    Just a simple test in drawing neighbouring edges and looking for the\n    effects of aliasing.\n\n test/Makefile.am              |    3 ++\n test/Makefile.sources         |    1 +\n test/aliasing.c               |   98 +++++++++++++++++++++++++++++++++++++++++\n test/aliasing.image16.ref.png |  Bin 0 -> 20810 bytes\n test/aliasing.ref.png         |  Bin 0 -> 22980 bytes\n test/aliasing.xlib.ref.png    |  Bin 0 -> 24018 bytes\n 6 files changed, 102 insertions(+)\n\ncommit 4b39f02bf7e8b4921518db4a2d8564514cb323a9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jun 14 20:38:26 2010 +0100\n\n    test: Add halo\n    \n    halo uses text_path + stroke + (fill | show_text)  to generate a \"halo\"\n    around the string. This is to try to replicate a bug described by Ian\n    Britten in the PDF backend where the rendering of the show_text looked\n    distorted compared to the stroke.\n\n test/Makefile.am          |    3 ++\n test/Makefile.sources     |    1 +\n test/halo.c               |   98 +++++++++++++++++++++++++++++++++++++++++++++\n test/halo.image16.ref.png |  Bin 0 -> 5328 bytes\n test/halo.ref.png         |  Bin 0 -> 7524 bytes\n test/halo.xlib.ref.png    |  Bin 0 -> 7404 bytes\n 6 files changed, 102 insertions(+)\n\ncommit 072a200ec502bf5ac3e62702e6f14ed18171b1e0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jun 14 16:05:14 2010 +0100\n\n    build: Add wgl to Makefile.sources and regenerate features.\n\n boilerplate/Makefile.win32.features |   10 ++++++++++\n build/Makefile.win32.features       |    1 +\n build/Makefile.win32.features-h     |    3 +++\n src/Makefile.sources                |    6 ++++--\n src/Makefile.win32.features         |   14 ++++++++++++++\n 5 files changed, 32 insertions(+), 2 deletions(-)\n\ncommit 4a0bd91ff77c8afddde6d09495bc9ca7242f953d\nAuthor: Dmitri Vorobiev <dmitri.vorobiev@movial.com>\nDate:   Mon Jun 14 16:40:39 2010 +0300\n\n    scaled-font: fine-tune caching\n    \n    This patch implements the ideas outlined by Behdad Esfahbod in the following\n    mailing list message:\n    \n    http://lists.cairographics.org/archives/cairo/2010-June/020065.html\n    \n    Specifically, two things have been adjusted. First, the size of the look-up\n    table was reduced to 64. Second, cache codepath is now bypassed for strings\n    that are shorter than 16, not only for one-character strings. This allowed\n    us to reduce the LUT initialization overhead while still retaining the\n    advantage of caching for common-case string sizes.\n    \n    We have experimented with different LUT sizes, and it came out that the size\n    of 64 is the best one in view of speed, at least for our language-neutral\n    benchmark, which generated random strings of printable ASCII characters.\n    \n    Below is a table presenting benchmark results for different values of LUT\n    size:\n    \n    ===============================================================================\n     Benchmark\t\t| [1]\t| [2]\t| [3]\t| [4]\t| [5]\t| [6]\t| [7]\n    ===============================================================================\n    8px text, 1 chars\t| 0.41\t| 0.41\t| 0\t| 0.41\t| 0\t| 0.41\t| 0\n    8px text, 10 chars\t| 2.13\t| 2.21\t| 3.76\t| 2.19\t| 2.82\t| 2.09\t| -1.88\n    8px text, 20 chars\t| 2.97\t| 3.04\t| 2.36\t| 3.01\t| 1.35\t| 2.98\t| 0.34\n    12px text, 1 chars\t| 0.94\t| 0.94\t| 0\t| 0.95\t| 1.06\t| 0.94\t| 0\n    12px text, 10 chars\t| 4.73\t| 4.89\t| 3.38\t| 4.9\t| 3.59\t| 4.82\t| 1.9\n    12px text, 20 chars\t| 6.32\t| 6.42\t| 1.58\t| 6.46\t| 2.22\t| 6.32\t| 0\n    16px text, 1 chars\t| 1.75\t| 1.76\t| 0.57\t| 1.77\t| 1.14\t| 1.76\t| 0.57\n    16px text, 10 chars\t| 8.13\t| 8.45\t| 3.94\t| 8.43\t| 3.69\t| 8.44\t| 3.81\n    16px text, 20 chars\t| 10.41\t| 10.69\t| 2.69\t| 10.64\t| 2.21\t| 10.65\t| 2.31\n    24px text, 1 chars\t| 3.3\t| 3.3\t| 0\t| 3.32\t| 0.61\t| 3.3\t| 0\n    24px text, 10 chars\t| 14.68\t| 14.97\t| 1.98\t| 14.97\t| 1.98\t| 14.87\t| 1.29\n    24px text, 20 chars\t| 17.93\t| 18.01\t| 0.45\t| 18.06\t| 0.73\t| 17.81\t| -0.67\n    96px text, 1 chars\t| 23.65\t| 23.38\t| -1.14\t| 23.74\t| 0.38\t| 23.65\t| 0\n    96px text, 5 chars\t| 50.52\t| 51.34\t| 1.62\t| 51.48\t| 1.9\t| 51.41\t| 1.76\n    96px text, 10 chars\t| 57.5\t| 58.11\t| 1.06\t| 58.27\t| 1.34\t| 58.04\t| 0.94\n    ===============================================================================\n    \n    [1]: Git head, Mpix/s\n    [2]: {GLYPH_LUT_SIZE = 32, CACHING_THRESHOLD = 16}\n    [3]: Gain of {32, 16} w.r.t. Git head\n    [4]: {GLYPH_LUT_SIZE = 64, CACHING_THRESHOLD = 16}\n    [5]: Gain of {64, 16} w.r.t. Git head\n    [6]: {GLYPH_LUT_SIZE = 128, CACHING_THRESHOLD = 16}\n    [7]: Gain of {128, 16} w.r.t. Git head\n    \n    The benchmark itself can be found from this mailing list message:\n    \n    http://lists.cairographics.org/archives/cairo/2010-June/020064.html\n\n src/cairo-scaled-font.c |   61 ++++++++++++++++++++++++++++++++++-------------\n 1 file changed, 45 insertions(+), 16 deletions(-)\n\ncommit 505a0456d2498112155db7e7f275a14dc98f643e\nAuthor: Zoxc <zoxc32@gmail.com>\nDate:   Mon Jun 14 01:20:54 2010 +0200\n\n    gl: Added WGL context and surface.\n\n build/configure.ac.features |    1 +\n configure.ac                |    9 ++\n src/cairo-gl.h              |   16 +++\n src/cairo-wgl-context.c     |  253 +++++++++++++++++++++++++++++++++++++++++++\n 4 files changed, 279 insertions(+)\n\ncommit fd6c38b9e006feefa20ce4f54d3108dad51c828d\nAuthor: Zoxc <zoxc32@gmail.com>\nDate:   Mon Jun 14 01:04:10 2010 +0200\n\n    win32: Fixed compile errors in Windows backend.\n\n src/cairo-win32-printing-surface.c |    9 ++++-----\n src/cairo-win32-surface.c          |    4 ++--\n 2 files changed, 6 insertions(+), 7 deletions(-)\n\ncommit 5f10139cd92383c657e328ffad41874c4f668551\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jun 13 12:33:10 2010 +0100\n\n    NEWS: A couple more tweaks\n    \n    I only spotted these in the release announcement.\n\n NEWS |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit 4932aaa3173799c8f3ac30e4c9a594c20c83a121\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jun 13 12:02:53 2010 +0100\n\n    version: 1.9.9\n    \n    Post-snapshot bump.\n\n cairo-version.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 3a20b10cd0d94406fbd5fe3bb3d4820a95364537\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jun 13 10:27:03 2010 +0100\n\n    version: 1.9.8\n    \n    Snapshot time!\n\n cairo-version.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit b612a230865a1a62f9cdcb051de9b57b509646b2\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Sun Jun 13 12:29:24 2010 +0200\n\n    test: update quartz ref images in makefile\n\n test/Makefile.am |  143 +++++++++++++++++++++++++++++++++++++++++-------------\n 1 file changed, 109 insertions(+), 34 deletions(-)\n\ncommit 0693af2328606a4c7e4c888d2a1cd346e6bef405\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jun 13 10:22:37 2010 +0100\n\n    test: Move all output below test/output/\n    \n    make distcheck complains of remanents being left under test/ after a\n    clean, notably the files used to check the capabilities of a similar\n    surface and the fallback-resolution output.\n\n test/cairo-test.c          |   53 +++++++++++++++++++++++++-------------------\n test/fallback-resolution.c |   30 +++++++++++++++++++++----\n 2 files changed, 56 insertions(+), 27 deletions(-)\n\ncommit ffc3a39c95e918fa2fcd14c1b1063b9a9acceebf\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 12 20:04:36 2010 +0100\n\n    NEWS: Minor tweaks.\n\n NEWS |   46 +++++++++++++++++++++++-----------------------\n 1 file changed, 23 insertions(+), 23 deletions(-)\n\ncommit b6e16b8d2950cdadf2e2b14b0e7502d4a9ebdc09\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Sat Jun 12 10:33:35 2010 +0200\n\n    test: quartz ref image refresh\n\n test/a1-image-sample.quartz.xfail.png              |  Bin 0 -> 972 bytes\n test/a1-mask-sample.quartz.xfail.png               |  Bin 0 -> 972 bytes\n test/a1-traps-sample.quartz.xfail.png              |  Bin 0 -> 122 bytes\n test/big-line.quartz.ref.png                       |  Bin 0 -> 993 bytes\n test/caps-joins-curve.quartz.ref.png               |  Bin 0 -> 5199 bytes\n test/clear.quartz.argb32.ref.png                   |  Bin 0 -> 691 bytes\n test/clear.quartz.rgb24.ref.png                    |  Bin 0 -> 606 bytes\n test/clip-disjoint.quartz.ref.png                  |  Bin 0 -> 5476 bytes\n test/clip-fill-rule.quartz.rgb24.ref.png           |  Bin 0 -> 363 bytes\n test/clip-fill-unbounded.quartz.argb32.ref.png     |  Bin 0 -> 1436 bytes\n test/clip-fill-unbounded.quartz.rgb24.ref.png      |  Bin 0 -> 1368 bytes\n test/clip-fill.quartz.ref.png                      |  Bin 0 -> 875 bytes\n test/clip-group-shapes-circles.quartz.ref.png      |  Bin 0 -> 1518 bytes\n test/clip-nesting.quartz.argb32.ref.png            |  Bin 0 -> 1048 bytes\n test/clip-nesting.quartz.ref.png                   |  Bin 1067 -> 0 bytes\n test/clip-nesting.quartz.rgb24.ref.png             |  Bin 956 -> 937 bytes\n test/clip-operator.quartz.argb32.ref.png           |  Bin 0 -> 9586 bytes\n test/clip-operator.quartz.ref.png                  |  Bin 9539 -> 0 bytes\n test/clip-operator.quartz.rgb24.ref.png            |  Bin 4412 -> 4104 bytes\n test/clip-push-group.quartz.ref.png                |  Bin 203 -> 166 bytes\n test/clip-shape.quartz.ref.png                     |  Bin 0 -> 3229 bytes\n test/clip-stroke-unbounded.quartz.argb32.ref.png   |  Bin 0 -> 1493 bytes\n test/clip-stroke-unbounded.quartz.rgb24.ref.png    |  Bin 0 -> 1356 bytes\n test/clip-stroke.quartz.ref.png                    |  Bin 0 -> 1305 bytes\n test/clip-text.quartz.ref.png                      |  Bin 0 -> 854 bytes\n test/clip-twice.quartz.argb32.ref.png              |  Bin 0 -> 1171 bytes\n test/clip-twice.quartz.ref.png                     |  Bin 1171 -> 0 bytes\n test/clip-twice.quartz.rgb24.ref.png               |  Bin 1111 -> 1095 bytes\n test/clipped-group.quartz.ref.png                  |  Bin 0 -> 308 bytes\n test/culled-glyphs.quartz.ref.png                  |  Bin 0 -> 493 bytes\n test/dash-caps-joins.quartz.ref.png                |  Bin 4727 -> 0 bytes\n test/dash-caps-joins.quartz.xfail.png              |  Bin 0 -> 4446 bytes\n test/dash-curve.quartz.ref.png                     |  Bin 47965 -> 0 bytes\n test/dash-curve.quartz.xfail.png                   |  Bin 0 -> 42238 bytes\n test/dash-scale.quartz.ref.png                     |  Bin 8079 -> 7614 bytes\n test/dash-state.quartz.ref.png                     |  Bin 8698 -> 0 bytes\n test/dash-state.quartz.xfail.png                   |  Bin 0 -> 6957 bytes\n test/degenerate-arc.quartz.ref.png                 |  Bin 0 -> 552 bytes\n test/degenerate-curve-to.quartz.ref.png            |  Bin 0 -> 247 bytes\n test/degenerate-dash.quartz.xfail.png              |  Bin 0 -> 1560 bytes\n test/degenerate-path.quartz.argb32.xfail.png       |  Bin 0 -> 200 bytes\n test/degenerate-path.quartz.ref.png                |  Bin 232 -> 0 bytes\n test/degenerate-path.quartz.rgb24.ref.png          |  Bin 198 -> 0 bytes\n test/degenerate-path.quartz.rgb24.xfail.png        |  Bin 0 -> 172 bytes\n test/degenerate-pen.quartz.ref.png                 |  Bin 1144 -> 0 bytes\n test/degenerate-rel-curve-to.quartz.ref.png        |  Bin 0 -> 246 bytes\n test/extend-pad-border.quartz.ref.png              |  Bin 0 -> 432 bytes\n test/extend-pad-similar.quartz.xfail.png           |  Bin 0 -> 270 bytes\n test/extend-pad.quartz.xfail.png                   |  Bin 0 -> 270 bytes\n test/fill-alpha-pattern.quartz.ref.png             |  Bin 0 -> 7943 bytes\n test/fill-alpha.quartz.ref.png                     |  Bin 0 -> 2704 bytes\n test/fill-and-stroke-alpha-add.quartz.ref.png      |  Bin 603 -> 542 bytes\n test/fill-and-stroke-alpha.quartz.ref.png          |  Bin 550 -> 0 bytes\n test/fill-and-stroke.quartz.argb32.ref.png         |  Bin 0 -> 273 bytes\n test/fill-and-stroke.quartz.ref.png                |  Bin 286 -> 0 bytes\n test/fill-and-stroke.quartz.rgb24.ref.png          |  Bin 264 -> 249 bytes\n ...ill-degenerate-sort-order.quartz.argb32.ref.png |  Bin 0 -> 2451 bytes\n test/fill-degenerate-sort-order.quartz.ref.png     |  Bin 2470 -> 0 bytes\n ...fill-degenerate-sort-order.quartz.rgb24.ref.png |  Bin 2098 -> 2079 bytes\n test/fill-image.quartz.ref.png                     |  Bin 0 -> 1297 bytes\n test/fill-rule.quartz.argb32.ref.png               |  Bin 0 -> 2060 bytes\n test/fill-rule.quartz.ref.png                      |  Bin 2079 -> 0 bytes\n test/fill-rule.quartz.rgb24.ref.png                |  Bin 1790 -> 1771 bytes\n test/filter-bilinear-extents.quartz.xfail.png      |  Bin 0 -> 308 bytes\n test/filter-nearest-offset.quartz.xfail.png        |  Bin 0 -> 2130 bytes\n test/filter-nearest-transformed.quartz.xfail.png   |  Bin 0 -> 534 bytes\n test/finer-grained-fallbacks.quartz.argb32.ref.png |  Bin 0 -> 988 bytes\n test/finer-grained-fallbacks.quartz.rgb24.ref.png  |  Bin 0 -> 763 bytes\n test/font-matrix-translation.quartz.ref.png        |  Bin 1090 -> 996 bytes\n test/ft-show-glyphs-table.quartz.xfail.png         |  Bin 0 -> 827 bytes\n .../ft-text-vertical-layout-type1.quartz.xfail.png |  Bin 0 -> 3635 bytes\n test/ft-text-vertical-layout-type3.quartz.ref.png  |  Bin 0 -> 3573 bytes\n test/glyph-cache-pressure.quartz.ref.png           |  Bin 3654 -> 3284 bytes\n test/gradient-constant-alpha.quartz.argb32.ref.png |  Bin 0 -> 214 bytes\n test/group-unaligned.quartz.ref.png                |  Bin 0 -> 363 bytes\n test/huge-radial.quartz.ref.png                    |  Bin 0 -> 84690 bytes\n test/inverse-text.quartz.ref.png                   |  Bin 0 -> 2565 bytes\n test/joins.quartz.ref.png                          |  Bin 0 -> 5833 bytes\n test/leaky-dash.quartz.ref.png                     |  Bin 241 -> 195 bytes\n test/leaky-dashed-rectangle.quartz.ref.png         |  Bin 0 -> 339 bytes\n test/leaky-dashed-stroke.quartz.ref.png            |  Bin 0 -> 9229 bytes\n test/line-width-scale.quartz.ref.png               |  Bin 6434 -> 5623 bytes\n test/linear-gradient-reflect.quartz.ref.png        |  Bin 878 -> 780 bytes\n test/linear-gradient-subset.quartz.ref.png         |  Bin 0 -> 887 bytes\n test/linear-gradient.quartz.ref.png                |  Bin 1164 -> 1060 bytes\n test/long-dashed-lines.quartz.ref.png              |  Bin 2313 -> 2068 bytes\n test/mask-alpha.quartz.argb32.ref.png              |  Bin 641 -> 622 bytes\n test/mask-transformed-image.quartz.ref.png         |  Bin 0 -> 3909 bytes\n test/mask-transformed-similar.quartz.ref.png       |  Bin 0 -> 3909 bytes\n test/mask.quartz.argb32.ref.png                    |  Bin 0 -> 10575 bytes\n test/mask.quartz.ref.png                           |  Bin 10682 -> 0 bytes\n test/mask.quartz.rgb24.ref.png                     |  Bin 8418 -> 8354 bytes\n test/new-sub-path.quartz.ref.png                   |  Bin 383 -> 370 bytes\n test/new-sub-path.quartz.rgb24.ref.png             |  Bin 357 -> 0 bytes\n test/operator-clear.quartz.argb32.ref.png          |  Bin 0 -> 1228 bytes\n test/operator-clear.quartz.ref.png                 |  Bin 1459 -> 0 bytes\n test/operator-clear.quartz.rgb24.ref.png           |  Bin 1293 -> 1096 bytes\n test/operator-source.quartz.argb32.ref.png         |  Bin 0 -> 4754 bytes\n test/operator-source.quartz.ref.png                |  Bin 4637 -> 0 bytes\n test/operator-source.quartz.rgb24.ref.png          |  Bin 3533 -> 3535 bytes\n test/over-above-source.quartz.argb32.ref.png       |  Bin 0 -> 511 bytes\n test/over-above-source.quartz.ref.png              |  Bin 530 -> 0 bytes\n test/over-above-source.quartz.rgb24.ref.png        |  Bin 456 -> 437 bytes\n test/over-around-source.quartz.argb32.ref.png      |  Bin 0 -> 593 bytes\n test/over-around-source.quartz.ref.png             |  Bin 612 -> 0 bytes\n test/over-around-source.quartz.rgb24.ref.png       |  Bin 491 -> 0 bytes\n test/over-between-source.quartz.argb32.ref.png     |  Bin 0 -> 551 bytes\n test/over-between-source.quartz.ref.png            |  Bin 570 -> 0 bytes\n test/over-between-source.quartz.rgb24.ref.png      |  Bin 467 -> 0 bytes\n test/path-append.quartz.ref.png                    |  Bin 0 -> 6395 bytes\n test/pthread-same-source.quartz.xfail.png          |  Bin 0 -> 957 bytes\n test/pthread-show-text.quartz.ref.png              |  Bin 0 -> 42996 bytes\n test/push-group-color.quartz.ref.png               |  Bin 0 -> 3127 bytes\n test/push-group.quartz.argb32.ref.png              |  Bin 0 -> 3932 bytes\n test/push-group.quartz.rgb24.ref.png               |  Bin 0 -> 3659 bytes\n test/radial-gradient.quartz.ref.png                |  Bin 92334 -> 0 bytes\n test/random-intersections-curves-eo.quartz.ref.png |  Bin 0 -> 326366 bytes\n test/random-intersections-curves-nz.quartz.ref.png |  Bin 0 -> 324940 bytes\n test/random-intersections-eo.quartz.ref.png        |  Bin 197778 -> 179179 bytes\n test/random-intersections-nonzero.quartz.ref.png   |  Bin 0 -> 180871 bytes\n ...recording-surface-pattern.quartz.argb32.ref.png |  Bin 0 -> 4570 bytes\n test/recording-surface-pattern.quartz.ref.png      |  Bin 4572 -> 0 bytes\n .../recording-surface-pattern.quartz.rgb24.ref.png |  Bin 4063 -> 4058 bytes\n test/rectilinear-dash.quartz.xfail.png             |  Bin 0 -> 494 bytes\n test/rectilinear-stroke.quartz.xfail.png           |  Bin 0 -> 209 bytes\n test/reflected-stroke.quartz.ref.png               |  Bin 5293 -> 0 bytes\n test/rel-path.quartz.ref.png                       |  Bin 212 -> 0 bytes\n test/rel-path.quartz.rgb24.ref.png                 |  Bin 228 -> 0 bytes\n test/rotate-image-surface-paint.quartz.ref.png     |  Bin 257 -> 356 bytes\n test/rotated-clip.quartz.ref.png                   |  Bin 0 -> 3923 bytes\n test/rounded-rectangle-fill.quartz.ref.png         |  Bin 0 -> 684 bytes\n test/scale-offset-image.quartz.ref.png             |  Bin 0 -> 9054 bytes\n test/scale-offset-similar.quartz.ref.png           |  Bin 0 -> 9054 bytes\n test/select-font-face.quartz.ref.png               |  Bin 2970 -> 2645 bytes\n test/self-intersecting.quartz.xfail.png            |  Bin 0 -> 233 bytes\n test/show-text-current-point.quartz.ref.png        |  Bin 3093 -> 2773 bytes\n test/smask-fill.quartz.ref.png                     |  Bin 0 -> 2076 bytes\n test/smask-mask.quartz.ref.png                     |  Bin 0 -> 3357 bytes\n test/smask-paint.quartz.ref.png                    |  Bin 0 -> 3499 bytes\n test/smask-stroke.quartz.ref.png                   |  Bin 0 -> 1697 bytes\n test/smask-text.quartz.ref.png                     |  Bin 0 -> 1904 bytes\n test/smask.quartz.ref.png                          |  Bin 0 -> 4067 bytes\n test/source-clip-scale.quartz.ref.png              |  Bin 148 -> 126 bytes\n test/spline-decomposition.quartz.xfail.png         |  Bin 0 -> 19560 bytes\n test/stroke-ctm-caps.quartz.ref.png                |  Bin 1109 -> 899 bytes\n test/stroke-image.quartz.ref.png                   |  Bin 1802 -> 1350 bytes\n test/subsurface-pad.quartz.xfail.png               |  Bin 0 -> 197 bytes\n test/surface-pattern-big-scale-down.quartz.ref.png |  Bin 0 -> 258 bytes\n ...urface-pattern-operator.quartz.argb32.xfail.png |  Bin 0 -> 5917 bytes\n ...surface-pattern-operator.quartz.rgb24.xfail.png |  Bin 0 -> 2546 bytes\n ...e-pattern-scale-down-extend-none.quartz.ref.png |  Bin 0 -> 391 bytes\n ...-pattern-scale-down-extend-pad.quartz.xfail.png |  Bin 0 -> 397 bytes\n ...attern-scale-down-extend-reflect.quartz.ref.png |  Bin 0 -> 475 bytes\n ...pattern-scale-down-extend-repeat.quartz.ref.png |  Bin 0 -> 397 bytes\n test/surface-pattern-scale-down.quartz.ref.png     |  Bin 3188 -> 2276 bytes\n test/surface-pattern-scale-up.quartz.xfail.png     |  Bin 0 -> 3294 bytes\n test/surface-pattern.quartz.xfail.png              |  Bin 0 -> 9216 bytes\n test/text-antialias-gray.quartz.ref.png            |  Bin 1041 -> 956 bytes\n test/text-antialias-none.quartz.ref.png            |  Bin 300 -> 270 bytes\n test/text-antialias-subpixel.quartz.ref.png        |  Bin 1065 -> 949 bytes\n test/text-glyph-range.quartz.ref.png               |  Bin 0 -> 2191 bytes\n test/text-pattern.quartz.argb32.ref.png            |  Bin 0 -> 2148 bytes\n test/text-pattern.quartz.ref.png                   |  Bin 2158 -> 0 bytes\n test/text-pattern.quartz.rgb24.ref.png             |  Bin 1874 -> 1867 bytes\n test/text-rotate.quartz.ref.png                    |  Bin 17820 -> 16655 bytes\n test/trap-clip.quartz.argb32.ref.png               |  Bin 0 -> 6060 bytes\n test/trap-clip.quartz.ref.png                      |  Bin 6041 -> 0 bytes\n test/trap-clip.quartz.rgb24.ref.png                |  Bin 5385 -> 5694 bytes\n test/unantialiased-shapes.quartz.ref.png           |  Bin 4394 -> 3868 bytes\n test/unbounded-operator.quartz.ref.png             |  Bin 4066 -> 0 bytes\n test/unbounded-operator.quartz.rgb24.ref.png       |  Bin 1918 -> 0 bytes\n test/user-font-proxy.quartz.ref.png                |  Bin 0 -> 19795 bytes\n test/user-font-rescale.quartz.ref.png              |  Bin 0 -> 15982 bytes\n test/user-font.quartz.ref.png                      |  Bin 0 -> 5960 bytes\n test/xcomposite-projection.quartz.ref.png          |  Bin 0 -> 639 bytes\n 175 files changed, 0 insertions(+), 0 deletions(-)\n\ncommit 0d5a15f23812575c80db44ca23075293cc0dbfad\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 12 20:00:24 2010 +0100\n\n    check: Disable running cairo-perf-micro\n    \n    Since this takes days to run now and should not find any bugs that are\n    not covered by the test-suite it seems like a pointless exercise.\n    Especially as I am trying to make a release!\n\n perf/Makefile.am |   15 ++++-----------\n 1 file changed, 4 insertions(+), 11 deletions(-)\n\ncommit e9fb39daee9ef3f80e4aedbda68027b36ce94fe3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 12 19:40:42 2010 +0100\n\n    NEWS: take two.\n\n NEWS |   81 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-----\n 1 file changed, 75 insertions(+), 6 deletions(-)\n\ncommit 62899e5e23a798bb3e9b60c9e793555e973b7823\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 12 18:51:31 2010 +0100\n\n    NEWS: Boring stub for 1.9.10.\n\n NEWS |   19 +++++++++++++++++++\n 1 file changed, 19 insertions(+)\n\ncommit fc372b1d9dea1ed4cb4229eaaad62a2d8e112a03\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 12 16:50:30 2010 +0100\n\n    test: Missing ref images\n\n test/Makefile.am                       |    8 ++++----\n test/coverage-triangles.xlib.xfail.png |  Bin 0 -> 15859 bytes\n 2 files changed, 4 insertions(+), 4 deletions(-)\n\ncommit 8737bc8b17ff0c437bb57df018bb7c540a394a7c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 12 16:49:46 2010 +0100\n\n    gl: start returning the failure status aftern an invalid GL op.\n\n src/cairo-gl-composite.c |    1 +\n src/cairo-gl-device.c    |   26 +++++++++++++++++++-------\n src/cairo-gl-glyphs.c    |   10 +++++++---\n src/cairo-gl-private.h   |   45 ++++++++++++++++++++++++++++++++++-----------\n src/cairo-gl-surface.c   |   40 +++++++++++++++++++++++++---------------\n 5 files changed, 86 insertions(+), 36 deletions(-)\n\ncommit 5b2f90bf532184e46829de4b2e2f9d0b10c1ff81\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 12 16:49:11 2010 +0100\n\n    test: Forgotten ref image.\n\n test/clipped-group.xlib-fallback.ref.png |  Bin 0 -> 344 bytes\n 1 file changed, 0 insertions(+), 0 deletions(-)\n\ncommit cdd6f11716e3fbe579d68161caec220c7852fdff\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 12 15:44:29 2010 +0100\n\n    test: Record the expected failure mode for partial-coverage-intersecting-quads\n    \n    As the diagonals of the quad intersect below the limits of Cairo's fixed\n    point, we fail to take heed of the intersection.\n\n test/Makefile.am                                   |    1 +\n test/partial-coverage-intersecting-quads.xfail.png |  Bin 0 -> 262 bytes\n 2 files changed, 1 insertion(+)\n\ncommit 3d72b4aa70d106b5da093e6405c7e3890fa343cf\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 12 15:32:31 2010 +0100\n\n    test/coverage: The comment was still wrong.\n    \n    Writing comments is hard. I give in.\n\n test/coverage.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit e6d1b3a8ce0b516aed7715b57d9ca5ab4fad6c2f\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Sat Jun 12 16:22:54 2010 +0200\n\n    test: update font family name\n    \n    Update the name of the test font family to DejaVu, so that backends\n    unable to rely on fontconfig to match font names can find the correct\n    font anyway.\n\n test/README       |   10 +++++-----\n test/cairo-test.h |    2 +-\n 2 files changed, 6 insertions(+), 6 deletions(-)\n\ncommit 3cb882d01b53cb3cec9be62d678dd4ef7ea2c1fd\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Sat Jun 12 16:20:37 2010 +0200\n\n    test: make test font family a define\n    \n    In order to make it easier to change the test font family, add it\n    as a define in the global header and always reference the macro in\n    the tests.\n\n test/cairo-test.h                    |    2 ++\n test/clip-all.c                      |    2 +-\n test/clip-empty-save.c               |    2 +-\n test/clip-empty.c                    |    2 +-\n test/clip-operator.c                 |    2 +-\n test/font-face-get-type.c            |    2 +-\n test/font-matrix-translation.c       |    2 +-\n test/ft-show-glyphs-positioning.c    |    2 +-\n test/ft-show-glyphs-table.c          |    2 +-\n test/ft-text-antialias-none.c        |    2 +-\n test/ft-text-vertical-layout-type3.c |    2 +-\n test/get-path-extents.c              |    2 +-\n test/glyph-cache-pressure.c          |    2 +-\n test/inverse-text.c                  |    6 +++---\n test/large-font.c                    |    2 +-\n test/operator-clear.c                |    2 +-\n test/operator-source.c               |    2 +-\n test/overlapping-glyphs.c            |    2 +-\n test/pdf-features.c                  |    2 +-\n test/ps-features.c                   |    2 +-\n test/select-font-face.c              |    6 +++---\n test/select-font-no-show-text.c      |    2 +-\n test/show-text-current-point.c       |    2 +-\n test/smask-text.c                    |    2 +-\n test/smask.c                         |    2 +-\n test/text-antialias-gray.c           |    2 +-\n test/text-antialias-none.c           |    2 +-\n test/text-antialias-subpixel.c       |    2 +-\n test/text-glyph-range.c              |    2 +-\n test/text-pattern.c                  |    2 +-\n test/text-rotate.c                   |    2 +-\n test/text-transform.c                |    2 +-\n test/text-zero-len.c                 |    2 +-\n test/unbounded-operator.c            |    2 +-\n test/user-font-rescale.c             |    6 +++---\n 35 files changed, 42 insertions(+), 40 deletions(-)\n\ncommit b1e4df928fb59ee295830d5c0fa26330714f88f2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 12 15:28:28 2010 +0100\n\n    test/coverage: Refine comments\n    \n    Joonas didn't like me putting incorrect labels in my comments. Said they\n    were misleading and worse than useless. Harsh.\n\n test/coverage.c |   20 +++++++++++++-------\n 1 file changed, 13 insertions(+), 7 deletions(-)\n\ncommit 968374b6335199cbf02c8c4733537388da2a45f5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 12 15:14:17 2010 +0100\n\n    test/coverage: Add a comment describing the column_triangle geometry()\n\n test/coverage.c |   20 ++++++++++++++++++++\n 1 file changed, 20 insertions(+)\n\ncommit 299263f8c912d3468d51ed22bcb6ab96275709f0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 12 13:48:12 2010 +0100\n\n    test: Disable tests that are too slow to run by default.\n    \n    Introduce a slow mode [-s] to the runner, and add \"slow\" to the\n    requirements for the very long running tests like the coverage stress\n    tests.\n\n test/cairo-test-runner.c |   17 +++++++++++++++--\n test/coverage.c          |   12 ++++++------\n test/half-coverage.c     |    4 ++--\n test/mask-glyphs.c       |    2 +-\n test/partial-coverage.c  |   16 ++++++++--------\n 5 files changed, 32 insertions(+), 19 deletions(-)\n\ncommit 53139261c7ba1a4cc0b869cb48c136b0362a3b0c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 12 13:40:17 2010 +0100\n\n    test: Use exact matching on test names by default.\n    \n    Specifying individual tests to run is more common than using a group\n    chosen from a keyword, so change the default matching mode and introduce\n    '-k' to select by keyword.\n\n test/cairo-test-runner.c |   45 ++++++++++++++++++++++-----------------------\n 1 file changed, 22 insertions(+), 23 deletions(-)\n\ncommit 97288b0859bae6cea1e3bff84b632e00f1d10917\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 12 13:34:27 2010 +0100\n\n    test: More minute geometry exercised by partial-coverage.\n    \n    Moving beyond the capabilities of cairo...\n\n test/Makefile.am                                   |    2 +\n test/partial-coverage-intersecting-quads.ref.png   |  Bin 0 -> 189 bytes\n ...partial-coverage-intersecting-triangles.ref.png |  Bin 0 -> 202 bytes\n test/partial-coverage.c                            |  131 ++++++++++++++++++++\n 4 files changed, 133 insertions(+)\n\ncommit 4e3ef57bc892b0b046c486390adc7164a1de64de\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 12 13:18:42 2010 +0100\n\n    test: More coverage coverage.\n    \n    A couple of different shapes that aim to test the tessellation side of\n    the rasterisers more... And worryingly there does seem to be an\n    unexpected systematic error.\n\n test/Makefile.am                                   |    8 +\n test/coverage-column-triangles.ref.png             |  Bin 0 -> 208 bytes\n test/coverage-column-triangles.xlib.xfail.png      |  Bin 0 -> 12745 bytes\n test/coverage-intersecting-quads.ref.png           |  Bin 0 -> 253 bytes\n test/coverage-intersecting-quads.xlib.xfail.png    |  Bin 0 -> 15296 bytes\n test/coverage-intersecting-triangles.ref.png       |  Bin 0 -> 209 bytes\n .../coverage-intersecting-triangles.xlib.xfail.png |  Bin 0 -> 16728 bytes\n test/coverage-row-triangles.ref.png                |  Bin 0 -> 208 bytes\n test/coverage-row-triangles.xlib.xfail.png         |  Bin 0 -> 12671 bytes\n test/coverage.c                                    |  249 +++++++++++++++++++-\n 10 files changed, 251 insertions(+), 6 deletions(-)\n\ncommit 9b7cc7641b691a3b9e3d5edd51053c9a095d9c5a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 12 10:41:09 2010 +0100\n\n    cairo: Create error objects for cairo_t\n    \n    Perform an early check for error status and prevent creation of a full\n    object. This means that we do not pass down error objects to the\n    initialisation routines and so can survive without paranoia inside the\n    library. It also has brings consistency that like the other\n    constructors, no object is created in error and we can skip the\n    cairo_destroy() if we choose (and we don't waste one of the precious\n    zero-alloc context slots.\n    \n    Fixes crash in test/a8-mask introduced by 1a544361e845.\n\n src/cairo-debug.c              |    2 ++\n src/cairo-mutex-list-private.h |    1 +\n src/cairo.c                    |   76 ++++++++++++++++++++++++++++++++++------\n src/cairoint.h                 |    3 ++\n 4 files changed, 71 insertions(+), 11 deletions(-)\n\ncommit 9b6617a3b3b31d52e6646400b16ec56c754bfebd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 11 21:58:34 2010 +0100\n\n    image: Apply component alpha to composite masks.\n    \n    If we need to pattern requires component alpha, then we must take a\n    copy of the image and enable component alpha for pixman.\n    \n    Fixes test/text-antialias-subpixel on xlib-fallback -- i.e. we will\n    finally render subpixel antialiased text on ancient XServers.\n\n src/cairo-image-surface.c |   40 ++++++++++++++++++++++++----------------\n 1 file changed, 24 insertions(+), 16 deletions(-)\n\ncommit 7440fc07f77b112b00957f5459129dba23a5683f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 11 21:29:02 2010 +0100\n\n    test: xlib ref image refresh\n\n test/Makefile.am                                   |   26 ++++++++++++++------\n ...clip-fill-unbounded.xlib-fallback.rgb24.ref.png |  Bin 1429 -> 1438 bytes\n test/clip-fill-unbounded.xlib.argb32.ref.png       |  Bin 1758 -> 1759 bytes\n test/clip-fill-unbounded.xlib.rgb24.ref.png        |  Bin 1426 -> 1430 bytes\n test/clip-group-shapes-circles.xlib.ref.png        |  Bin 0 -> 1534 bytes\n ...-group-shapes-unaligned-rectangles.xlib.ref.png |  Bin 0 -> 431 bytes\n ...ip-stroke-unbounded.xlib-fallback.rgb24.ref.png |  Bin 1429 -> 1437 bytes\n test/clip-stroke-unbounded.xlib.argb32.ref.png     |  Bin 1792 -> 1785 bytes\n test/clip-stroke-unbounded.xlib.rgb24.ref.png      |  Bin 1426 -> 1442 bytes\n test/clip-stroke.xlib-fallback.ref.png             |  Bin 1490 -> 1491 bytes\n test/clip-stroke.xlib.ref.png                      |  Bin 1490 -> 1491 bytes\n test/clipped-group.xlib.ref.png                    |  Bin 0 -> 289 bytes\n test/coverage-rectangles.xlib.xfail.png            |  Bin 0 -> 15981 bytes\n test/finer-grained-fallbacks.xlib-fallback.ref.png |  Bin 0 -> 919 bytes\n test/finer-grained-fallbacks.xlib.ref.png          |  Bin 1111 -> 1110 bytes\n test/finer-grained-fallbacks.xlib.rgb24.ref.png    |  Bin 1114 -> 856 bytes\n test/ft-text-vertical-layout-type1.xlib.ref.png    |  Bin 3639 -> 3625 bytes\n test/ft-text-vertical-layout-type3.xlib.ref.png    |  Bin 3605 -> 3597 bytes\n test/leaky-dashed-rectangle.xlib.ref.png           |  Bin 347 -> 344 bytes\n test/linear-gradient-subset.xlib.ref.png           |  Bin 0 -> 782 bytes\n test/pthread-show-text.xlib-fallback.ref.png       |  Bin 0 -> 42073 bytes\n ...m-intersections-curves-nz.xlib-fallback.ref.png |  Bin 264288 -> 264277 bytes\n test/random-intersections-curves-nz.xlib.ref.png   |  Bin 264288 -> 264277 bytes\n test/recording-surface-pattern.xlib.argb32.ref.png |  Bin 0 -> 3055 bytes\n test/recording-surface-pattern.xlib.rgb24.ref.png  |  Bin 0 -> 3124 bytes\n test/scale-offset-image.xlib-fallback.xfail.png    |  Bin 8706 -> 8686 bytes\n test/scale-offset-image.xlib.ref.png               |  Bin 0 -> 9136 bytes\n test/scale-offset-image.xlib.xfail.png             |  Bin 9132 -> 0 bytes\n test/scale-offset-similar.xlib-fallback.xfail.png  |  Bin 8706 -> 8686 bytes\n test/scale-offset-similar.xlib.xfail.png           |  Bin 8696 -> 8698 bytes\n test/self-intersecting.xlib.ref.png                |  Bin 252 -> 208 bytes\n test/smask-text.xlib-fallback.ref.png              |  Bin 0 -> 1874 bytes\n test/smask.xlib-fallback.ref.png                   |  Bin 0 -> 3423 bytes\n test/subsurface.xlib.ref.png                       |  Bin 0 -> 1782 bytes\n test/text-rotate.xlib-fallback.ref.png             |  Bin 0 -> 16592 bytes\n 35 files changed, 19 insertions(+), 7 deletions(-)\n\ncommit a049889c64131b170b66ed8906309f6adee80fa5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 11 21:26:26 2010 +0100\n\n    pattern: Remove incorrect optimisations from _cairo_pattern_aquire_surface()\n    \n    Safe reduction of patterns is performed in gstate, so not only are the\n    extra checks in _cairo_pattern_acquire_surface redundant there are also\n    unsafe. Simply remove them.\n    \n    Fixes test/radial-gradient-extend [xlib-fallback]\n\n src/cairo-pattern.c |  110 ++++++++-------------------------------------------\n 1 file changed, 17 insertions(+), 93 deletions(-)\n\ncommit 00bc1d1578dc2640db64315270b00073697fb9fa\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 11 20:31:29 2010 +0100\n\n    pattern: Remove extraordinary _cairo_pattern_fini_snapshot().\n    \n    Miraculously the circular references from self-copy have disappeared and\n    the forced finish within _cairo_pattern_fini_snapshot() now quite\n    explosive. By replacing them with an ordinary _cairo_pattern_fini() the\n    crash from test/smask-image-mask disappear along and valgrind remains\n    happy.\n    \n    Fixes test/smask-image-mask and similar.\n\n src/cairo-pattern.c           |   17 -----------------\n src/cairo-recording-surface.c |   24 ++++++++++++------------\n src/cairoint.h                |    3 ---\n 3 files changed, 12 insertions(+), 32 deletions(-)\n\ncommit 1098e203dc21529f138bfabfa7558f61b8427ea0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 11 18:07:28 2010 +0100\n\n    test: pdf ref image refresh\n\n test/Makefile.am                                   |   11 +++++++++++\n test/clear-source.pdf.xfail.png                    |  Bin 0 -> 974 bytes\n test/clip-fill-unbounded.pdf.argb32.ref.png        |  Bin 0 -> 1244 bytes\n test/clip-stroke-unbounded.pdf.argb32.xfail.png    |  Bin 0 -> 1351 bytes\n test/clip-unbounded.pdf.argb32.xfail.png           |  Bin 0 -> 95 bytes\n test/clip-unbounded.pdf.rgb24.xfail.png            |  Bin 0 -> 95 bytes\n test/filter-nearest-offset.pdf.xfail.png           |  Bin 2152 -> 4522 bytes\n test/filter-nearest-transformed.pdf.xfail.png      |  Bin 532 -> 532 bytes\n test/pthread-show-text.pdf.ref.png                 |  Bin 0 -> 47015 bytes\n test/radial-gradient-source.pdf.argb32.ref.png     |  Bin 0 -> 235290 bytes\n test/rotate-image-surface-paint.pdf.xfail.png      |  Bin 358 -> 442 bytes\n ...scale-source-surface-paint.pdf.argb32.xfail.png |  Bin 0 -> 157 bytes\n .../scale-source-surface-paint.pdf.rgb24.xfail.png |  Bin 0 -> 152 bytes\n test/surface-pattern-operator.pdf.argb32.xfail.png |  Bin 0 -> 5485 bytes\n test/surface-pattern-operator.pdf.rgb24.xfail.png  |  Bin 0 -> 2095 bytes\n 15 files changed, 11 insertions(+)\n\ncommit 1c91d019c54afde0edb022312491b086588ce6c4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 11 17:47:08 2010 +0100\n\n    test: ps ref image refresh.\n    \n    Update to gs-8.71 and some additional reference images for the new tests.\n\n test/Makefile.am                                   |  116 +++++++++++---------\n test/README                                        |    2 +-\n test/big-line.ps.ref.png                           |  Bin 0 -> 946 bytes\n test/bug-bo-rectangular.ps.xfail.png               |  Bin 0 -> 945 bytes\n test/caps-joins-curve.ps.ref.png                   |  Bin 3728 -> 3715 bytes\n test/caps-joins.ps.ref.png                         |  Bin 2282 -> 2268 bytes\n test/caps-sub-paths.ps.ref.png                     |  Bin 0 -> 163 bytes\n test/caps.ps.ref.png                               |  Bin 1466 -> 1478 bytes\n test/clear-source.ps.xfail.png                     |  Bin 0 -> 552 bytes\n test/clip-disjoint.ps.ref.png                      |  Bin 0 -> 4680 bytes\n test/clip-fill-rule.ps.argb32.ref.png              |  Bin 0 -> 251 bytes\n test/clip-fill-rule.ps.rgb24.ref.png               |  Bin 0 -> 234 bytes\n test/clip-fill-rule.ps2.argb32.ref.png             |  Bin 310 -> 0 bytes\n test/clip-fill-rule.ps2.rgb24.ref.png              |  Bin 302 -> 0 bytes\n test/clip-fill-rule.ps3.argb32.ref.png             |  Bin 310 -> 0 bytes\n test/clip-fill-rule.ps3.rgb24.ref.png              |  Bin 302 -> 0 bytes\n test/clip-fill-unbounded.ps.argb32.xfail.png       |  Bin 0 -> 1244 bytes\n test/clip-image.ps.ref.png                         |  Bin 0 -> 2498 bytes\n test/clip-nesting.ps.argb32.ref.png                |  Bin 0 -> 441 bytes\n test/clip-nesting.ps.rgb24.ref.png                 |  Bin 0 -> 492 bytes\n test/clip-nesting.ps2.argb32.ref.png               |  Bin 651 -> 0 bytes\n test/clip-nesting.ps2.rgb24.ref.png                |  Bin 636 -> 0 bytes\n test/clip-nesting.ps3.argb32.ref.png               |  Bin 651 -> 0 bytes\n test/clip-nesting.ps3.rgb24.ref.png                |  Bin 636 -> 0 bytes\n test/clip-push-group.ps.ref.png                    |  Bin 0 -> 120 bytes\n test/clip-push-group.ps2.argb32.ref.png            |  Bin 179 -> 0 bytes\n test/clip-push-group.ps2.rgb24.ref.png             |  Bin 179 -> 0 bytes\n test/clip-push-group.ps3.argb32.ref.png            |  Bin 179 -> 0 bytes\n test/clip-push-group.ps3.rgb24.ref.png             |  Bin 179 -> 0 bytes\n test/clip-stroke-unbounded.ps.argb32.ref.png       |  Bin 0 -> 1351 bytes\n test/clip-stroke.ps.xfail.png                      |  Bin 0 -> 662 bytes\n test/clip-twice.ps.argb32.ref.png                  |  Bin 0 -> 492 bytes\n test/clip-twice.ps.rgb24.ref.png                   |  Bin 0 -> 409 bytes\n test/clip-twice.ps2.argb32.ref.png                 |  Bin 575 -> 0 bytes\n test/clip-twice.ps2.rgb24.ref.png                  |  Bin 541 -> 0 bytes\n test/clip-twice.ps3.argb32.ref.png                 |  Bin 575 -> 0 bytes\n test/clip-twice.ps3.rgb24.ref.png                  |  Bin 541 -> 0 bytes\n test/clipped-group.ps2.ref.png                     |  Bin 343 -> 214 bytes\n test/clipped-group.ps3.ref.png                     |  Bin 343 -> 214 bytes\n test/copy-path.ps.ref.png                          |  Bin 0 -> 379 bytes\n test/copy-path.ps2.ref.png                         |  Bin 474 -> 0 bytes\n test/copy-path.ps3.ref.png                         |  Bin 474 -> 0 bytes\n test/dash-caps-joins.ps.ref.png                    |  Bin 0 -> 3669 bytes\n test/dash-caps-joins.ps2.argb32.ref.png            |  Bin 3870 -> 0 bytes\n test/dash-caps-joins.ps2.rgb24.ref.png             |  Bin 3870 -> 0 bytes\n test/dash-caps-joins.ps3.argb32.ref.png            |  Bin 3870 -> 0 bytes\n test/dash-caps-joins.ps3.rgb24.ref.png             |  Bin 3870 -> 0 bytes\n test/dash-curve.ps2.ref.png                        |  Bin 27293 -> 24355 bytes\n test/dash-curve.ps3.ref.png                        |  Bin 27293 -> 24355 bytes\n test/dash-infinite-loop.ps.ref.png                 |  Bin 0 -> 617 bytes\n test/dash-scale.ps.ref.png                         |  Bin 0 -> 5965 bytes\n test/dash-scale.ps2.argb32.ref.png                 |  Bin 6318 -> 0 bytes\n test/dash-scale.ps2.rgb24.ref.png                  |  Bin 6316 -> 0 bytes\n test/dash-scale.ps3.argb32.ref.png                 |  Bin 6318 -> 0 bytes\n test/dash-scale.ps3.rgb24.ref.png                  |  Bin 6316 -> 0 bytes\n test/dash-state.ps2.ref.png                        |  Bin 10219 -> 8740 bytes\n test/dash-state.ps3.ref.png                        |  Bin 10219 -> 8740 bytes\n test/degenerate-arc.ps2.ref.png                    |  Bin 585 -> 509 bytes\n test/degenerate-arc.ps3.ref.png                    |  Bin 585 -> 509 bytes\n test/degenerate-curve-to.ps.xfail.png              |  Bin 202 -> 221 bytes\n test/degenerate-dash.ps.xfail.png                  |  Bin 1835 -> 1837 bytes\n test/degenerate-path.ps.argb32.xfail.png           |  Bin 236 -> 234 bytes\n test/degenerate-path.ps.rgb24.xfail.png            |  Bin 186 -> 184 bytes\n test/degenerate-pen.ps.ref.png                     |  Bin 0 -> 759 bytes\n test/degenerate-pen.ps2.ref.png                    |  Bin 865 -> 0 bytes\n test/degenerate-pen.ps3.ref.png                    |  Bin 865 -> 0 bytes\n test/degenerate-rel-curve-to.ps.ref.png            |  Bin 0 -> 225 bytes\n test/degenerate-rel-curve-to.ps.xfail.png          |  Bin 202 -> 0 bytes\n test/fill-and-stroke.ps.argb32.ref.png             |  Bin 0 -> 257 bytes\n test/fill-and-stroke.ps.rgb24.ref.png              |  Bin 0 -> 225 bytes\n test/fill-and-stroke.ps2.argb32.ref.png            |  Bin 310 -> 0 bytes\n test/fill-and-stroke.ps2.rgb24.ref.png             |  Bin 319 -> 0 bytes\n test/fill-and-stroke.ps3.argb32.ref.png            |  Bin 310 -> 0 bytes\n test/fill-and-stroke.ps3.rgb24.ref.png             |  Bin 319 -> 0 bytes\n .../fill-degenerate-sort-order.ps.argb32.xfail.png |  Bin 1901 -> 1903 bytes\n test/fill-degenerate-sort-order.ps.rgb24.xfail.png |  Bin 1645 -> 1638 bytes\n test/fill-image.ps.ref.png                         |  Bin 1799 -> 1645 bytes\n test/fill-rule.ps2.argb32.ref.png                  |  Bin 2253 -> 1878 bytes\n test/fill-rule.ps2.rgb24.ref.png                   |  Bin 2031 -> 1524 bytes\n test/fill-rule.ps3.argb32.ref.png                  |  Bin 2253 -> 1878 bytes\n test/fill-rule.ps3.rgb24.ref.png                   |  Bin 2031 -> 1524 bytes\n test/finer-grained-fallbacks.ps2.argb32.ref.png    |  Bin 1173 -> 1168 bytes\n test/finer-grained-fallbacks.ps2.rgb24.ref.png     |  Bin 1154 -> 936 bytes\n test/finer-grained-fallbacks.ps3.argb32.ref.png    |  Bin 1173 -> 1168 bytes\n test/finer-grained-fallbacks.ps3.rgb24.ref.png     |  Bin 1154 -> 936 bytes\n test/ft-text-vertical-layout-type1.ps.ref.png      |  Bin 1634 -> 2088 bytes\n test/ft-text-vertical-layout-type3.ps.ref.png      |  Bin 1636 -> 2134 bytes\n test/group-unaligned.ps.ref.png                    |  Bin 332 -> 321 bytes\n test/group-unaligned.ps.rgb24.xfail.png            |  Bin 0 -> 371 bytes\n test/implicit-close.ps.ref.png                     |  Bin 0 -> 252 bytes\n test/joins.ps.ref.png                              |  Bin 5496 -> 4230 bytes\n test/leaky-dashed-rectangle.ps.ref.png             |  Bin 444 -> 358 bytes\n test/leaky-dashed-stroke.ps.ref.png                |  Bin 0 -> 5293 bytes\n test/leaky-dashed-stroke.ps2.ref.png               |  Bin 5511 -> 0 bytes\n test/leaky-dashed-stroke.ps3.ref.png               |  Bin 5511 -> 0 bytes\n test/leaky-polygon.ps.ref.png                      |  Bin 0 -> 289 bytes\n test/leaky-polygon.ps2.ref.png                     |  Bin 354 -> 0 bytes\n test/leaky-polygon.ps3.ref.png                     |  Bin 354 -> 0 bytes\n test/line-width-scale.ps2.ref.png                  |  Bin 3911 -> 3431 bytes\n test/line-width-scale.ps3.ref.png                  |  Bin 3911 -> 3431 bytes\n test/linear-gradient-subset.ps3.ref.png            |  Bin 0 -> 619 bytes\n test/long-dashed-lines.ps2.ref.png                 |  Bin 1516 -> 1329 bytes\n test/long-dashed-lines.ps3.ref.png                 |  Bin 1516 -> 1329 bytes\n test/new-sub-path.ps2.argb32.ref.png               |  Bin 556 -> 398 bytes\n test/new-sub-path.ps3.argb32.ref.png               |  Bin 556 -> 398 bytes\n test/operator-alpha-alpha.ps.xfail.png             |  Bin 1338 -> 3429 bytes\n test/over-around-source.ps2.argb32.ref.png         |  Bin 522 -> 508 bytes\n test/over-around-source.ps3.argb32.ref.png         |  Bin 522 -> 508 bytes\n test/over-below-source.ps2.argb32.ref.png          |  Bin 503 -> 368 bytes\n test/over-below-source.ps2.rgb24.ref.png           |  Bin 0 -> 362 bytes\n test/over-below-source.ps3.argb32.ref.png          |  Bin 503 -> 368 bytes\n test/over-below-source.ps3.rgb24.ref.png           |  Bin 0 -> 362 bytes\n test/path-append.ps.ref.png                        |  Bin 4516 -> 4525 bytes\n test/pixman-rotate.ps.argb32.ref.png               |  Bin 0 -> 355 bytes\n test/push-group-color.ps3.ref.png                  |  Bin 0 -> 2561 bytes\n test/random-intersections-curves-eo.ps.ref.png     |  Bin 151676 -> 151668 bytes\n test/random-intersections-curves-nz.ps.ref.png     |  Bin 134732 -> 134746 bytes\n test/random-intersections-eo.ps.ref.png            |  Bin 78806 -> 78037 bytes\n test/random-intersections-nonzero.ps.ref.png       |  Bin 77299 -> 76450 bytes\n test/recording-surface-pattern.ps.argb32.ref.png   |  Bin 0 -> 3064 bytes\n test/recording-surface-pattern.ps.rgb24.ref.png    |  Bin 0 -> 3147 bytes\n test/recording-surface-pattern.ps2.argb32.ref.png  |  Bin 3257 -> 0 bytes\n test/recording-surface-pattern.ps2.rgb24.ref.png   |  Bin 3873 -> 0 bytes\n test/recording-surface-pattern.ps3.argb32.ref.png  |  Bin 3257 -> 0 bytes\n test/recording-surface-pattern.ps3.rgb24.ref.png   |  Bin 3873 -> 0 bytes\n test/reflected-stroke.ps.ref.png                   |  Bin 0 -> 3368 bytes\n test/reflected-stroke.ps2.ref.png                  |  Bin 3898 -> 0 bytes\n test/reflected-stroke.ps3.ref.png                  |  Bin 3898 -> 0 bytes\n test/rounded-rectangle-fill.ps.ref.png             |  Bin 0 -> 551 bytes\n test/rounded-rectangle-stroke.ps.ref.png           |  Bin 0 -> 568 bytes\n test/scale-offset-image.ps.ref.png                 |  Bin 7289 -> 7697 bytes\n test/spline-decomposition.ps.ref.png               |  Bin 9028 -> 8939 bytes\n test/stroke-image.ps.ref.png                       |  Bin 1641 -> 1682 bytes\n test/subsurface.ps.ref.png                         |  Bin 0 -> 1651 bytes\n test/surface-pattern-big-scale-down.ps.ref.png     |  Bin 0 -> 235 bytes\n test/surface-pattern-big-scale-down.ps.xfail.png   |  Bin 238 -> 0 bytes\n test/text-glyph-range.ps.ref.png                   |  Bin 0 -> 1253 bytes\n test/text-glyph-range.ps2.ref.png                  |  Bin 1389 -> 0 bytes\n test/text-glyph-range.ps3.ref.png                  |  Bin 1389 -> 0 bytes\n test/text-rotate.ps.ref.png                        |  Bin 0 -> 8765 bytes\n test/text-rotate.ps2.ref.png                       |  Bin 6851 -> 0 bytes\n test/text-rotate.ps3.ref.png                       |  Bin 6851 -> 0 bytes\n test/text-transform.ps.ref.png                     |  Bin 0 -> 3430 bytes\n test/text-transform.ps2.ref.png                    |  Bin 4154 -> 0 bytes\n test/text-transform.ps3.ref.png                    |  Bin 4154 -> 0 bytes\n test/trap-clip.ps2.argb32.ref.png                  |  Bin 4849 -> 4839 bytes\n test/trap-clip.ps2.rgb24.ref.png                   |  Bin 5617 -> 4729 bytes\n test/trap-clip.ps3.argb32.ref.png                  |  Bin 5591 -> 4751 bytes\n test/trap-clip.ps3.rgb24.ref.png                   |  Bin 5512 -> 4553 bytes\n test/twin.ps.ref.png                               |  Bin 2142 -> 2136 bytes\n test/user-font-proxy.ps.ref.png                    |  Bin 7766 -> 7837 bytes\n test/user-font-rescale.ps.ref.png                  |  Bin 0 -> 6781 bytes\n test/user-font-rescale.ps2.ref.png                 |  Bin 8041 -> 0 bytes\n test/user-font-rescale.ps3.ref.png                 |  Bin 8041 -> 0 bytes\n test/xlib-expose-event.ps.ref.png                  |  Bin 0 -> 39035 bytes\n 155 files changed, 65 insertions(+), 53 deletions(-)\n\ncommit 1a544361e845e4881990624a597f9dc2b82d1c73\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 11 16:04:41 2010 +0100\n\n    gstate: Update cached matrix state after device transform changes on the target\n    \n    Commit 8d67186cb291cb877e52b987e2ac18c2a1175a57 caches whether the device\n    transform is identity on context creation. However, the api is quite lax\n    and allows the user to modify the device transform *after* he has\n    started to use the surface in a context, as apparently WebKit does.\n    Since this is not the only instance where we may need to invalidate\n    caches if the user modifies state, introduce a simple mechanism for\n    hooking into notifications of property changes.\n    \n    Fixes test/clip-device-offset.\n\n src/Makefile.sources        |    1 +\n src/cairo-gstate-private.h  |    3 +++\n src/cairo-gstate.c          |   28 ++++++++++++++++++++----\n src/cairo-observer.c        |   50 +++++++++++++++++++++++++++++++++++++++++++\n src/cairo-surface-private.h |    1 +\n src/cairo-surface.c         |    6 ++++++\n src/cairo-types-private.h   |    6 ++++++\n src/cairoint.h              |    5 +++++\n 8 files changed, 96 insertions(+), 4 deletions(-)\n\ncommit f74b11415a1f7682dd50c222baa8815ef93681dc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 11 14:06:15 2010 +0100\n\n    test: Use a group to render PDF correctly using poppler.\n    \n    In order to support blend modes, we need to use a clear background\n    whilst rendering the PDF, which inspired the use of DEST_OVER to avoid\n    having to render to an intermediate surface. However, the adjunct of\n    using subpixel text means that we cannot simply using the alpha channel\n    as the sole mask and so need to render to an intermediate and paint it\n    over an opaque background.\n\n test/any2ppm.c |    9 ++++++---\n test/pdf2png.c |    9 ++++++---\n 2 files changed, 12 insertions(+), 6 deletions(-)\n\ncommit 7f227ec8d3f981dbbf2ca1914bf7fd29d9cdfd05\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 11 12:54:15 2010 +0100\n\n    Revert \"test/pdf2png: Don't use DEST_OVER as poppler starts using subpixel text.\"\n    \n    This reverts commit 506b2ebe714d61a64972b607a42a55e48d1c722a.\n    \n    We have conflicting requirements here. In order to support extended\n    blend modes correctly we need to use DEST_OVER, at the expense of\n    supporting subpixel text. More thought required.\n\n test/any2ppm.c |    9 +++++----\n test/pdf2png.c |   10 +++++-----\n 2 files changed, 10 insertions(+), 9 deletions(-)\n\ncommit c761e0c5bb55e8869521ad5b4a2447ea9abcb4d1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 11 12:40:36 2010 +0100\n\n    test: Restrict the coverage tests to raster targets.\n    \n    Typo inside the requirements failed to prevent the tests running on the\n    vector backends.\n\n test/coverage.c         |    4 ++--\n test/half-coverage.c    |    4 ++--\n test/partial-coverage.c |   18 +++++++++---------\n 3 files changed, 13 insertions(+), 13 deletions(-)\n\ncommit b49c944fe4abb9f3c70fac02a71061bf8d07259a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 11 12:38:17 2010 +0100\n\n    test: Add a convenience script to disable the screensaver when testing\n    \n    If the screensaver activates, it can cause failures when attempting to\n    render into an xlib window, so inhibit if we know how.\n\n test/Makefile.am             |    2 +-\n test/run-cairo-test-suite.sh |   18 ++++++++++++++++++\n 2 files changed, 19 insertions(+), 1 deletion(-)\n\ncommit 4e4724d48c63d0cd4ec507ce72dcc55fb6e5f584\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 11 12:19:56 2010 +0100\n\n    gl: make check insists \"cairoint.h\" is first.\n\n src/cairo-gl-gradient.c |    5 ++---\n 1 file changed, 2 insertions(+), 3 deletions(-)\n\ncommit 4edbcf1b1d046c9c626a0c0ad10d3c71f17984f2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 11 12:17:19 2010 +0100\n\n    color: Mark _cairo_color_get_content() as private.\n\n src/cairoint.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 506b2ebe714d61a64972b607a42a55e48d1c722a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 11 12:04:39 2010 +0100\n\n    test/pdf2png: Don't use DEST_OVER as poppler starts using subpixel text.\n    \n    Using DEST_OVER in this form to paint the background white fails in the\n    presence of subpixel geometry (particular text), so remove the hack and\n    simply paint the background white prior to passing the surface to\n    poppler. KISS.\n\n test/any2ppm.c |    9 ++++-----\n test/pdf2png.c |   10 +++++-----\n 2 files changed, 9 insertions(+), 10 deletions(-)\n\ncommit edb73b6dcf1adce40d6c10c492e3f78556e22b85\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 11 11:16:42 2010 +0100\n\n    xlib: Adjust trapezoid precision based on antialias.\n    \n    Render supports two modes of precision when rendering trapezoids.\n    Precise specifies points sampling on a 15x17 grid, ala pixman. Imprecise\n    allows the driver more freedom in the methods used, which may be more\n    amenable to acceleration. Choose to use the imprecise mode by default,\n    but still allow users to force the more rigidly specified precision by\n    changing the antialias mode.\n\n src/cairo-xlib-surface-private.h |    1 +\n src/cairo-xlib-surface.c         |   31 +++++++++++++++++++++++++++++++\n 2 files changed, 32 insertions(+)\n\ncommit 290749bdb5c634c030db81722214661c34344403\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 11 10:59:17 2010 +0100\n\n    polygon: Reorder conditionals based on likelihood.\n    \n    The vast majority of edges will be unclipped, so process those first.\n\n src/cairo-polygon.c |   30 +++++++++++++++---------------\n 1 file changed, 15 insertions(+), 15 deletions(-)\n\ncommit 55037bfb2454a671332d961e061c712ab5471580\nAuthor: Karl Tomlinson <karlt+@karlt.net>\nDate:   Fri Jun 11 10:35:43 2010 +0100\n\n    xlib: Find matching Visual for XRenderFormat\n    \n    Not only is this useful for users to know which Visual matches any\n    particular Cairo surface, it should also close a few obscure bugs of not\n    converting images correctly on upload.\n    \n    Fixes:\n    \n      Bug 28492 - cairo_xlib_surface_create_with_xrender_format does not\n                  create visual for resulting surface\n      https://bugs.freedesktop.org/show_bug.cgi?id=28492\n    \n      Mozilla Bug 567065 - Try to create offscreen Xlib surface from existing\n                           visual if possible\n      https://bugzilla.mozilla.org/show_bug.cgi?id=567065\n    \n      Mozilla Bug 445250 - cairo_draw_with_xlib should provide a non-NULL visual\n                           to callback\n      https://bugzilla.mozilla.org/show_bug.cgi?id=445250\n    \n    Reported-by: Oleg Romashin <romaxa@gmail.com>\n\n src/cairo-xlib-surface.c |   74 ++++++++++++++++++++++++++++++++++++++++------\n 1 file changed, 65 insertions(+), 9 deletions(-)\n\ncommit cf426bce8ebd3aff5d50c6a54bbd731132b3d312\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 11 10:05:09 2010 +0100\n\n    test: Add a simple coverage test.\n    \n    This test case should be much clearer than half-coverage over what it\n    purports to actually test. In each pixel, it draws a single geometric\n    primitive that coverages a known percentage of the pixel and then we\n    measure how close the rasterisers are to that ideal.\n\n test/Makefile.am                 |    2 +\n test/Makefile.sources            |    1 +\n test/coverage-rectangles.ref.png |  Bin 0 -> 259 bytes\n test/coverage-triangles.ref.png  |  Bin 0 -> 253 bytes\n test/coverage.c                  |  135 ++++++++++++++++++++++++++++++++++++++\n 5 files changed, 138 insertions(+)\n\ncommit bd3d9ef3d1dbc5364e79e6afb47d9e124cb61ca4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 11 09:12:16 2010 +0100\n\n    test: Distinguish tests that throw an error from a normal fail.\n    \n    Hitting an error in a test case is almost as bad as crashing, and the\n    severity may be lost amidst \"normal\" failures. So introduce a new class\n    of ERROR so that we can immediately spot these during a test run, and\n    appropriately log them afterwards.\n\n test/cairo-test-runner.c |   89 ++++++++++++++++++++++++++++++++++++++++++++--\n test/cairo-test.c        |   20 ++++++++++-\n test/cairo-test.h        |    1 +\n 3 files changed, 107 insertions(+), 3 deletions(-)\n\ncommit eeafeebd2ec8ad8a9e7053aaaa0f845b58563b3b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 11 09:06:20 2010 +0100\n\n    path: Exponentially grow buffer based on populated points and ops.\n    \n    Instead of simply doubling the buffer size every time we overflow a point\n    or an op, enlarge the buffer to fit twice the number of used points and\n    ops.  We expect paths to be fairly consistent in the mix of operations,\n    and this allows the buffer size to tune itself to actual usage and reduce\n    wastage.\n\n src/cairo-path-fixed-private.h |    3 ++-\n src/cairo-path-fixed.c         |   39 +++++++++++++++++++--------------------\n 2 files changed, 21 insertions(+), 21 deletions(-)\n\ncommit b0056a86b4f6c92fa7eb89baf8483a46979c8cf1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 10 18:27:22 2010 +0100\n\n    test: Exercise partial coverage some more.\n    \n    Add some overlapping triangles (coarse enough for them to be resolved\n    using Cairo's 24.8 fixed point without loss of precision) to exercise\n    handling of overlapping subpixel geometry.\n\n test/Makefile.am                                   |    4 +\n ...tial-coverage-overlap-half-triangles-eo.ref.png |  Bin 0 -> 189 bytes\n ...partial-coverage-overlap-half-triangles.ref.png |  Bin 0 -> 189 bytes\n ...overage-overlap-three-quarter-triangles.ref.png |  Bin 0 -> 186 bytes\n ...artial-coverage-three-quarter-reference.ref.png |  Bin 0 -> 186 bytes\n test/partial-coverage.c                            |  284 ++++++++++++++++++--\n 6 files changed, 269 insertions(+), 19 deletions(-)\n\ncommit 836f6166597eaa687b10e5f26fe71e099c434aa1\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Wed Jun 9 19:09:22 2010 +0200\n\n    gl: support single stop gradients\n\n src/cairo-gl-gradient-private.h |    2 +-\n src/cairo-gl-gradient.c         |    3 +--\n 2 files changed, 2 insertions(+), 3 deletions(-)\n\ncommit d17e2c5e23eac302b7463a08205088147da1172a\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Thu Jun 10 10:52:16 2010 +0200\n\n    ps: support single stop gradients\n\n src/cairo-ps-surface.c |    9 ++++-----\n 1 file changed, 4 insertions(+), 5 deletions(-)\n\ncommit eb7fc351156bd66921ac3b3ffbd1fba6ba743ffb\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Thu Jun 10 10:51:50 2010 +0200\n\n    pdf: support single stop gradients\n\n src/cairo-pdf-surface.c |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit e2660a0eac5f6081bf052db16b8bd85c814d19d8\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Wed Jun 9 16:59:29 2010 +0200\n\n    pattern: improve single stop gradients handling\n    \n    None-extended single stop gradients are now explicitly made clear.\n\n src/cairo-pattern.c |    9 ++++++++-\n 1 file changed, 8 insertions(+), 1 deletion(-)\n\ncommit 7a024bc206aae790c7357be83474126037335ab1\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Wed Jun 9 17:59:47 2010 +0200\n\n    test: exercise ps crash with single stop gradients\n    \n    PS crashes only when using the source operator, as it will otherwise\n    fallback to rasterization of the gradients.\n\n test/linear-gradient-one-stop.argb32.ref.png |  Bin 0 -> 225 bytes\n test/linear-gradient-one-stop.c              |    2 +-\n test/linear-gradient-one-stop.ref.png        |  Bin 344 -> 0 bytes\n test/linear-gradient-one-stop.rgb24.ref.png  |  Bin 0 -> 174 bytes\n test/radial-gradient-one-stop.argb32.ref.png |  Bin 0 -> 1392 bytes\n test/radial-gradient-one-stop.c              |    2 +-\n test/radial-gradient-one-stop.ref.png        |  Bin 1422 -> 0 bytes\n test/radial-gradient-one-stop.rgb24.ref.png  |  Bin 0 -> 1153 bytes\n 8 files changed, 2 insertions(+), 2 deletions(-)\n\ncommit a0f8cfe64660c0043db15f9b9cbf1298bf1838d1\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Tue Jun 8 17:04:00 2010 +0200\n\n    pattern: improve degenerate gradients handling\n    \n    Degenerate radial gradients are now considered clear.\n\n src/cairo-pattern.c |   35 +++++++++++++++++++++++++----------\n 1 file changed, 25 insertions(+), 10 deletions(-)\n\ncommit bccd89b4177b5f5bd05def9bee5f0927a9f25e4a\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Tue Jun 8 15:45:09 2010 +0200\n\n    gstate: correct optimizations\n    \n    Gradient were previously hand-optimized (without properly checking\n    for extend modes). By properly using _cairo_pattern functions we\n    avoid code duplication and bugs.\n    \n    Fixes linear-gradient-extend, radial-gradient-extend.\n\n src/cairo-gstate.c |   85 +++++++++++-----------------------------------------\n 1 file changed, 17 insertions(+), 68 deletions(-)\n\ncommit 06c6207ad4205f211be70e324c6d32ea7d28dca8\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Tue Jun 1 19:40:14 2010 +0200\n\n    pattern: add gradient_is_solid function\n    \n    It contains in a single place the logic needed to check if a gradient\n    pattern is solid (within a specified region).\n\n src/cairo-pattern.c |   53 +++++++++++++++++++++++++++++++++++++++++++++++++++\n src/cairoint.h      |    5 +++++\n 2 files changed, 58 insertions(+)\n\ncommit 561625ee3bd2732457eaaf28937edf557ee7661d\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Tue Jun 1 19:39:02 2010 +0200\n\n    pattern: improve clear/opaque check functions\n    \n    _cairo_pattern_is_opaque was missing some checks about the extend type.\n    Conversely _cairo_pattern_is_clear was being too strict about gradients.\n\n src/cairo-pattern.c |  112 +++++++++++++++++++++++++++++++++++++++++++++++----\n src/cairoint.h      |    4 ++\n 2 files changed, 108 insertions(+), 8 deletions(-)\n\ncommit baaf312e047a9bea6f54e63cd6534c2ed7448523\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Mon Apr 19 09:53:00 2010 +0200\n\n    pattern: remove content field from solid patterns\n    \n    The content field in solid patterns had ill-defined semantic (or no\n    semantic at all), thus it can be removed.\n\n src/cairo-color.c          |   16 ++++++++++++++++\n src/cairo-gl-surface.c     |    2 +-\n src/cairo-gstate.c         |   14 +++++---------\n src/cairo-pattern.c        |   37 ++++++++++---------------------------\n src/cairo-script-surface.c |    9 +++------\n src/cairo-surface.c        |    4 ++--\n src/cairo-types-private.h  |    1 -\n src/cairo-xlib-surface.c   |    6 +++---\n src/cairo.c                |    4 ++--\n src/cairoint.h             |    9 +++++----\n 10 files changed, 47 insertions(+), 55 deletions(-)\n\ncommit 7461947eb1a5f002a5931303843a5a2deca0e383\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Mon Apr 19 09:51:26 2010 +0200\n\n    surface: remove content argument from is_similar\n    \n    The content argument was basically unuses.\n    \n    Xlib change extracted from ickle's wip/compositor branch.\n\n src/cairo-directfb-surface.c |    2 +-\n src/cairo-pattern.c          |    5 ++---\n src/cairo-surface.c          |    5 ++---\n src/cairo-win32-surface.c    |    3 +--\n src/cairo-xlib-surface.c     |   30 ++----------------------------\n src/cairoint.h               |    6 ++----\n 6 files changed, 10 insertions(+), 41 deletions(-)\n\ncommit ef5f9b5c61750207947587173d21b46e2d299f33\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 10 14:13:53 2010 +0100\n\n    test: Update partial coverage.\n    \n    Gah, no wonder the output looked wrong for the triangles, they only\n    covered half the pixel. So separate triangles into two cases.\n\n test/Makefile.am                             |    2 +\n test/partial-coverage-half-reference.ref.png |  Bin 0 -> 189 bytes\n test/partial-coverage-half-triangles.ref.png |  Bin 0 -> 189 bytes\n test/partial-coverage.c                      |   98 ++++++++++++++++++++++++--\n 4 files changed, 96 insertions(+), 4 deletions(-)\n\ncommit 8d67186cb291cb877e52b987e2ac18c2a1175a57\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 10 11:36:58 2010 +0100\n\n    gstate: Track whether the combination of ctm * device is identity.\n    \n    In the fairly common condition that both the ctm and the device\n    transforms are identity, the function overhead of calling the matrix\n    multiplication on the point overwhelmingly dominates.\n\n src/cairo-clip.c           |    1 +\n src/cairo-gstate-private.h |  310 ++++++++++++++++++++++++++++++++++++++++++++\n src/cairo-gstate.c         |   18 ++-\n src/cairoint.h             |  295 -----------------------------------------\n 4 files changed, 327 insertions(+), 297 deletions(-)\n\ncommit 1349728d1ef63ed562a3fd0ee3c0a89aaba77616\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 10 11:26:12 2010 +0100\n\n    test: Add partial coverage.\n    \n    Another experiment in measuring consistency of rasterisation stratagems\n    across the backends.\n\n test/Makefile.am                         |    3 +\n test/Makefile.sources                    |    1 +\n test/partial-coverage-rectangles.ref.png |  Bin 0 -> 202 bytes\n test/partial-coverage-reference.ref.png  |  Bin 0 -> 202 bytes\n test/partial-coverage-triangles.ref.png  |  Bin 0 -> 202 bytes\n test/partial-coverage.c                  |  213 ++++++++++++++++++++++++++++++\n 6 files changed, 217 insertions(+)\n\ncommit 486118361ad0c2e68fa9f6b44ddb10e84d237eca\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 10 11:28:26 2010 +0100\n\n    test: Fix half-coverage colouration.\n    \n    Hmm, red over red makes the test pointless. The test still remains of\n    highly dubious quality, as it primarily serves as a rendercheck more\n    than a test of Cairo. The best hope for this test is that it inspires a\n    better one.\n    \n    And incorporate the notes made by Joonas.\n\n test/half-coverage.c |   28 +++++++++++++++++++++++++++-\n 1 file changed, 27 insertions(+), 1 deletion(-)\n\ncommit 5cb764850f7c405085739647bac2809045e7cdf3\nAuthor: Dmitri Vorobiev <dmitri.vorobiev@movial.com>\nDate:   Wed Jun 9 19:20:27 2010 +0300\n\n    scaled-font: optimize cairo_scaled_font_text_to_glyphs()\n    \n    This patch serves two purposes. First, it factors out the heavy part\n    of the cairo_scaled_font_text_to_glyphs() routine thus allowing GCC\n    to better optimize the cache cleanup loop. Keeping the look-up table\n    indices in a separate array speeds up array initialization even further.\n    \n    Second, this patch introduces a shortcut for the case when the string\n    to be rendered consists of a single character. In this case, caching is\n    not necessary at all.\n    \n    We have a benchmark that uses Cairo to render a large amount of random\n    strings of consisting of printable ASCII characters. Below are Oprofile\n    results collected while running this benchmark. It is easy to see that\n    the heavy part becomes noticeably lighter.\n    \n    Before:\n    \n    Profiling through timer interrupt\n    samples  %        app name                 symbol name\n    198755   13.5580  libcairo.so.2.10907.0    cairo_scaled_font_text_to_glyphs\n    88580     6.0424  libcairo.so.2.10907.0    _cairo_scaled_glyph_lookup\n    81127     5.5340  libcairo.so.2.10907.0    _cairo_hash_table_lookup\n    68186     4.6513  libcairo.so.2.10907.0    cairo_scaled_font_glyph_extents\n    47145     3.2160  libcairo.so.2.10907.0    _composite_glyphs_via_mask\n    46327     3.1602  libcairo.so.2.10907.0    _cairo_scaled_font_glyph_device_extents\n    44817     3.0572  libcairo.so.2.10907.0    _composite_glyphs\n    40431     2.7580  libcairo.so.2.10907.0    .plt\n    \n    After (note that cairo_scaled_font_text_to_glyphs_internal_single() was inlined):\n    \n    Profiling through timer interrupt\n    samples  %        app name                 symbol name\n    107264    7.6406  libcairo.so.2.10907.0    cairo_scaled_font_text_to_glyphs_internal_multiple\n    87888     6.2604  libcairo.so.2.10907.0    _cairo_scaled_glyph_lookup\n    79011     5.6281  libcairo.so.2.10907.0    _cairo_hash_table_lookup\n    71723     5.1090  libcairo.so.2.10907.0    cairo_scaled_font_glyph_extents\n    48084     3.4251  libcairo.so.2.10907.0    _composite_glyphs_via_mask\n    46636     3.3220  libcairo.so.2.10907.0    _cairo_scaled_font_glyph_device_extents\n    44740     3.1869  libcairo.so.2.10907.0    _composite_glyphs\n    42472     3.0254  libc-2.8.so              _int_malloc\n    39194     2.7919  libcairo.so.2.10907.0    _cairo_gstate_transform_glyphs_to_backend\n    38614     2.7506  libcairo.so.2.10907.0    .plt\n    37063     2.6401  libcairo.so.2.10907.0    _cairo_ft_ucs4_to_index\n    36856     2.6253  libc-2.8.so              random\n    36376     2.5911  libcairo.so.2.10907.0    _cairo_scaled_glyphs_equal\n    34545     2.4607  libcairo.so.2.10907.0    cairo_matrix_transform_point\n    31690     2.2573  libc-2.8.so              malloc\n    29395     2.0939  libcairo.so.2.10907.0    _cairo_matrix_is_identity\n    26142     1.8621  libcairo.so.2.10907.0    _cairo_utf8_to_ucs4\n    24406     1.7385  libc-2.8.so              free\n    24059     1.7138  libcairo.so.2.10907.0    cairo_scaled_font_text_to_glyphs\n    \n    [ickle: slightly amended for stylistic consistency.]\n\n src/cairo-scaled-font.c |  168 ++++++++++++++++++++++++++++++++---------------\n 1 file changed, 114 insertions(+), 54 deletions(-)\n\ncommit c43399fa68696aa62599fb71752850dd46c15c82\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Wed Jun 9 17:53:09 2010 +0200\n\n    gl: fix compilation on MacOS X\n    \n    MacOS X uses different defines to avoid multiple inclusion of GL\n    header files. Adding them to glew.h fixes the compilation when GL is\n    enabled.\n\n src/glew/GL/glew.h |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit 6eb5f859f1d38783dc43541e7e87b0c5f91691d8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jun 9 10:40:32 2010 +0100\n\n    bo: And disable DEBUG_TRAPS again.\n    \n    Meh. I'm going back to bed. Thanks Joonas for catching this.\n\n src/cairo-bentley-ottmann.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 85af0ec37456b4eb47c39326b24370a9ccc43092\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jun 9 10:33:29 2010 +0100\n\n    test: Add half-coverage to exercise the rasteriser with subpixel geometry.\n\n test/Makefile.sources |    1 +\n test/half-coverage.c  |  129 +++++++++++++++++++++++++++++++++++++++++++++++++\n 2 files changed, 130 insertions(+)\n\ncommit 56c081bdc6d29df932e6993109586ff275d8de12\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jun 9 10:33:01 2010 +0100\n\n    bo: Fix debugging for changes in internal traps api.\n\n src/cairo-bentley-ottmann.c |   10 +++++++---\n 1 file changed, 7 insertions(+), 3 deletions(-)\n\ncommit a946d39555136adc4eff3b68a62ba37f6d9a6299\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue Jun 8 21:09:51 2010 +0200\n\n    gl: Add support for clip regions to the span renderer\n    \n    Clip surface support is still missing, but i suppose that'd need a tiny\n    bit more code...\n\n src/cairo-gl-surface.c |   16 +++++++++++++---\n 1 file changed, 13 insertions(+), 3 deletions(-)\n\ncommit f61b3f25aff454800a9d6013012d41633139d896\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue Jun 8 12:03:36 2010 +0200\n\n    gl: Add an assertion that we always have a texture\n    \n    When painting, the sources must be textures and not windows, and we did\n    that wrong previously. This assertion makes sure that never happens\n    again.\n\n src/cairo-gl-composite.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit c6c9a24a1df1826cab78bd8ef1c5a1074bafa0d7\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue Jun 8 04:11:33 2010 +0200\n\n    gl: Use CAIRO_COLOR_BLACK\n    \n    ... instead of creating black on our own - and wrong, too.\n\n src/cairo-gl-surface.c |    8 +-------\n 1 file changed, 1 insertion(+), 7 deletions(-)\n\ncommit 19bc6793d1d9b209d5a03a727288504b1e71f7c4\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue Jun 8 04:00:02 2010 +0200\n\n    gl: Only clone texture surfaces\n    \n    Using non-texture surfaces as source or mask will fail, so we need to\n    fallback.\n    Caught by the subsurface-modify-child test.\n\n src/cairo-gl-surface.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 44483d843e4fe1f5db5cf213f76913d683265bb4\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue Jun 8 03:59:10 2010 +0200\n\n    gl: Fix argument order\n    \n    oops...\n\n src/cairo-gl-surface.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 72bf1a536775138d79787729994ec9cfe2193be7\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue Jun 8 01:50:12 2010 +0200\n\n    Update my copyright notices to preferred version\n    \n    No more copyright headers containing my name.\n\n test/clear-source.c          |   35 ++++++++++++++++++-----------------\n test/clip-fill-no-op.c       |   35 ++++++++++++++++++-----------------\n test/clip-stroke-no-op.c     |   35 ++++++++++++++++++-----------------\n test/pthread-same-source.c   |   35 ++++++++++++++++++-----------------\n test/pthread-similar.c       |   35 ++++++++++++++++++-----------------\n test/xcomposite-projection.c |   35 ++++++++++++++++++-----------------\n test/zero-mask.c             |   35 ++++++++++++++++++-----------------\n 7 files changed, 126 insertions(+), 119 deletions(-)\n\ncommit 10d95c7020ca94903d474beb9c8ede89c186cbe3\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Tue Jun 8 20:48:25 2010 +0200\n\n    test: add/update reference images\n    \n    Add missing reference images and update one-stop references according\n    to current subset policy (outside the defined range, the gradient\n    is clear).\n\n test/degenerate-linear-gradient.ref.png |  Bin 0 -> 232 bytes\n test/degenerate-radial-gradient.ref.png |  Bin 0 -> 428 bytes\n test/linear-gradient-one-stop.ref.png   |  Bin 468 -> 344 bytes\n test/radial-gradient-one-stop.ref.png   |  Bin 3772 -> 1422 bytes\n 4 files changed, 0 insertions(+), 0 deletions(-)\n\ncommit dd0f8872711d9896416cca2027f578f7d58d228f\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Mon Jun 7 17:34:12 2010 +0200\n\n    test: fix typo\n\n test/linear-gradient-extend.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 9b88b5dce5327cbd13ea05de949c502fe41f91f7\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Tue Jun 8 10:45:06 2010 +0200\n\n    test: add degenerate gradient and single stop tests\n    \n    Add tests for degeneratate linear gradients (with start point equal\n    to the end point), degenerate radial gradients (start radius and end\n    radius equal to zero, same start and end circle) and gradients (both\n    linear and radial) with just a single stop.\n\n test/Makefile.sources                 |    6 +-\n test/degenerate-linear-gradient.c     |   81 +++++++++++++++++++++++++\n test/degenerate-radial-gradient.c     |   93 ++++++++++++++++++++++++++++\n test/linear-gradient-one-stop.c       |   90 +++++++++++++++++++++++++++\n test/linear-gradient-one-stop.ref.png |  Bin 0 -> 468 bytes\n test/radial-gradient-one-stop.c       |  107 +++++++++++++++++++++++++++++++++\n test/radial-gradient-one-stop.ref.png |  Bin 0 -> 3772 bytes\n 7 files changed, 376 insertions(+), 1 deletion(-)\n\ncommit 7d8359721b581845260c0442a174e48b061484a7\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jun 7 16:46:46 2010 +0200\n\n    gl: Fix span renderer doing bad stuff for CLEAR and SOURCE\n    \n    SOURCE will fallback now, CLEAR is identical to DEST_OUT with white.\n\n src/cairo-gl-surface.c |    7 +++++++\n 1 file changed, 7 insertions(+)\n\ncommit ef8fd1355ea03b8566ef31642b32133d3543e4e8\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jun 7 15:03:37 2010 +0200\n\n    gl: Fix span renderer for unbounded spans\n    \n    The span renderer used to not output rects for the top and bottom rows\n    when they didn't contain any spans.\n\n src/cairo-gl-surface.c |   72 ++++++++++++++++++++++++++++++++----------------\n 1 file changed, 49 insertions(+), 23 deletions(-)\n\ncommit 1d11af083f5368c88032a33ff40d0e21c139db18\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sat Jun 5 15:22:44 2010 +0200\n\n    gl: Add a simple spans renderer for stroke/fill\n    \n    It's very simple as clipped polygons or ANTIALIAS_NONE still return\n    UNSUPPORTED. Also, no optimizations are done, so even pixel-aligned\n    rectangles use the full span rendering.\n    \n    Still, there are no performance regressions in the benchmark traces and\n    firefox-talos-svg and swfdec-giant-steps both got ~15% faster.\n\n src/cairo-gl-surface.c |  178 +++++++++++++++++++++++++++++++++++++++++++++++-\n 1 file changed, 175 insertions(+), 3 deletions(-)\n\ncommit 550335efeddf813c1bec493513254fdbd34a9ace\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sat Jun 5 15:19:44 2010 +0200\n\n    Remove _cairo_surface_composite_trapezoids_as_polygon()\n    \n    The function computed the composite rectangles wrong and was only used\n    in a gl fallback anyway. So instead of trying to fix it, just remove it\n    and make sure gl doesn't fallback.\n\n src/cairo-gl-surface.c    |   14 ---------\n src/cairo-spans-private.h |   12 --------\n src/cairo-spans.c         |   75 ---------------------------------------------\n src/cairoint.h            |   12 --------\n 4 files changed, 113 deletions(-)\n\ncommit 1e003fce8f7239aaf4608747d63287e0c715ee51\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sat Jun 5 14:58:32 2010 +0200\n\n    gl: Fix vertex size changes not causing updates of the operands\n    \n    Check vertex size stays identical when setting up vertices.\n\n src/cairo-gl-composite.c |   17 ++++++++++-------\n 1 file changed, 10 insertions(+), 7 deletions(-)\n\ncommit 39143400ddd0d4e63a72ce91c423f764e466e405\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Jun 4 12:25:52 2010 +0200\n\n    gl: Add a gradient texture cache\n    \n    For firefox-planet-gnome, 19135 times a gradient gets rendered using\n    only 10 different gradients. So we get a 100% hit rate in the cache.\n    Unfortunately, texture upload is not the biggest problem of this test,\n    as the performance increase is only moderate - at least on i965:\n    34.3s => 33.5s\n\n src/cairo-gl-device.c           |   12 +++++++-\n src/cairo-gl-gradient-private.h |   18 ++++++++----\n src/cairo-gl-gradient.c         |   58 +++++++++++++++++++++++++++++++++++++--\n src/cairo-gl-private.h          |    2 ++\n 4 files changed, 81 insertions(+), 9 deletions(-)\n\ncommit 932ab2641ea3183171c3b5699c96c4709fc6bd49\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Jun 3 18:54:18 2010 +0200\n\n    device: flush before setting finished\n    \n    Otherwise APIs critical for flushing - in particular acquiring the\n    device - do not work.\n\n src/cairo-device.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 35e219d08f1c202399655db183ca0105a1c2166f\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Jun 3 17:50:59 2010 +0200\n\n    gl: Make gradient textures a separate object\n    \n    This is necessary so we can do proper refcounting and don't delete the\n    gradient texture prematurely.\n\n src/Makefile.sources            |    4 +-\n src/cairo-gl-composite.c        |  156 +++------------------------\n src/cairo-gl-gradient-private.h |   80 ++++++++++++++\n src/cairo-gl-gradient.c         |  223 +++++++++++++++++++++++++++++++++++++++\n src/cairo-gl-private.h          |    9 +-\n 5 files changed, 327 insertions(+), 145 deletions(-)\n\ncommit 9c17a477d29f633a4850ef8b458cbca82a19afc4\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Jun 3 17:40:56 2010 +0200\n\n    gl: Use the generic functions for filter/extend in gradients\n\n src/cairo-gl-composite.c |   26 ++++++++------------------\n src/cairo-gl-private.h   |    2 ++\n 2 files changed, 10 insertions(+), 18 deletions(-)\n\ncommit df93802765afcf883abef5549bd5dff3465e2d79\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Jun 3 17:38:28 2010 +0200\n\n    gl: Create separate functions for setting extend and filter\n\n src/cairo-gl-composite.c |   47 +++++++++++++++++++++++++++-------------------\n 1 file changed, 28 insertions(+), 19 deletions(-)\n\ncommit 10e71806d2e1929aa127642a397fa6ccef434b5b\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Jun 2 20:04:57 2010 +0200\n\n    gl: Switch to deferred rendering\n    \n    1) call _cairo_gl_composite_flush() or cairo_surface_flush() where\n       needed\n    2) Destroy texture operands when necessary\n    3) get rid of _cairo_gl_composite_end()\n    \n    With this patch, vertices are not flushed immediately anymore, but only\n    when needed or when a new set of vertices is emitted that requires an\n    incompatible setup. This improves performance a lot in particular for\n    text. (gnome-terminal-vim gets 10x faster)\n\n src/cairo-gl-composite.c |   40 ++++++++++++++++++++++------------------\n src/cairo-gl-glyphs.c    |    4 ----\n src/cairo-gl-private.h   |    4 ----\n src/cairo-gl-surface.c   |   12 ++++++------\n 4 files changed, 28 insertions(+), 32 deletions(-)\n\ncommit f2f79ca1b3455000df4138ab500ae03b6584250c\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Jun 2 19:57:47 2010 +0200\n\n    gl: Make using shaders an explicit argument\n    \n    This is preparation for a followup patch\n\n src/cairo-gl-composite.c |   15 ++++++++-------\n 1 file changed, 8 insertions(+), 7 deletions(-)\n\ncommit 19c1d8316e22fc37c7cdaf6c3e56519c06d10561\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Jun 2 18:14:28 2010 +0200\n\n    gl: Special case blend mode for CAIRO_CONTENT_COLOR\n    \n    This ensures that alpha stays at 1 for RGB in all cases.\n\n src/cairo-gl-composite.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 1f249064cc5c19a39ffe0faaa8825c8f8b6a2175\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Jun 2 18:11:04 2010 +0200\n\n    gl: rework _cairo_gl_set_operator()\n    \n    1) store the current operator. This will be useful later to check if the\n       operator changed.\n    2) pass the context instead of the destination as first argument. The\n       destination is known to be the current target.\n\n src/cairo-gl-composite.c |   16 +++++++++-------\n src/cairo-gl-device.c    |    3 +++\n src/cairo-gl-private.h   |    1 +\n 3 files changed, 13 insertions(+), 7 deletions(-)\n\ncommit f66500d8b052251ea3ce06f06d2fa4c8dec2ff3b\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Jun 2 15:53:48 2010 +0200\n\n    gl: Only resetup textures if we need to\n\n src/cairo-gl-composite.c |   45 +++++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 45 insertions(+)\n\ncommit d9dcafd61ad6aeecb4538e9fd44e3443a8a50bf1\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Jun 2 15:26:45 2010 +0200\n\n    gl: Do not reset the current target on release\n    \n    This now also requires a call to cairo_device_flush().\n\n src/cairo-gl-device.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit ce36be5c67fa5b574eb11eb98cdd8c9cd7e09335\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Jun 2 15:23:57 2010 +0200\n\n    glx: When acquiring device, use the correct drawable\n\n src/cairo-glx-context.c |   16 +++++++++++++---\n 1 file changed, 13 insertions(+), 3 deletions(-)\n\ncommit 5819bb07eb7ac64f0e2fbe6a46cc3db0de1d92ce\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Jun 2 15:23:08 2010 +0200\n\n    gl: Store the vertex offset in the operand\n\n src/cairo-gl-composite.c |    1 +\n src/cairo-gl-private.h   |    1 +\n 2 files changed, 2 insertions(+)\n\ncommit c75460c54d88ce9a50ac59c15a10684043ca4b0e\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sun May 30 22:01:10 2010 +0200\n\n    gl: Introduce a temporary texture unit\n    \n    ...and use it for image uploads. This makes sure that the texture units\n    used for SOURCE and MASK get not clobbered when images get uploaded to\n    textures.\n\n src/cairo-gl-composite.c |    2 ++\n src/cairo-gl-device.c    |   17 +++++++++++++++++\n src/cairo-gl-private.h   |    8 +++++++-\n src/cairo-gl-surface.c   |    2 ++\n 4 files changed, 28 insertions(+), 1 deletion(-)\n\ncommit 1ddff8aba35466fe6689536bc5f2d7eeefaea02c\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sun May 30 21:25:20 2010 +0200\n\n    gl: Only allocate a framebuffer if we need one\n    \n    This way, we don't clobber the current target when creating textures for\n    image surfaces.\n\n src/cairo-gl-device.c  |   26 ++++++++++++++++++++++++++\n src/cairo-gl-private.h |    2 +-\n src/cairo-gl-surface.c |   20 ++------------------\n 3 files changed, 29 insertions(+), 19 deletions(-)\n\ncommit 1c15510c3d00553aba9ec4fd4e6764da3cdb0a41\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sun May 30 20:12:31 2010 +0200\n\n    Call cairo_surface_flush() before setting finished\n    \n    With the current code, the surface will never be flushed as the flush\n    function checks if the surface is finished, and if so, doesn't call the\n    vfunc. Ooops.\n\n src/cairo-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 467d5e7f90b9edfb62ca71e67608704424a10aca\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri May 28 21:56:57 2010 +0200\n\n    gl: Flush properly in set_destination\n\n src/cairo-gl-device.c |   33 +++++++++++++++++----------------\n 1 file changed, 17 insertions(+), 16 deletions(-)\n\ncommit e15348d8d0bbff6968b1f640e63315d159f143f5\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri May 28 21:55:26 2010 +0200\n\n    gl: Don't reset vertex size\n\n src/cairo-gl-composite.c |   10 ++++++----\n src/cairo-gl-device.c    |    1 +\n 2 files changed, 7 insertions(+), 4 deletions(-)\n\ncommit a8d6ac1efc3f1f5ff4f92f4e7a3492e62518f3f7\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri May 28 21:51:08 2010 +0200\n\n    gl: Remove check if we're between begin/end\n    \n    This will be useless soon, because we will keep the current state alive as\n    long as possible.\n\n src/cairo-gl-composite.c |    1 -\n src/cairo-gl-private.h   |    7 -------\n 2 files changed, 8 deletions(-)\n\ncommit 8f675fb801f7864aa52778d4d53d7ab68f4e664b\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri May 28 21:46:52 2010 +0200\n\n    gl: Stop disabling the vertex array and the array buffer\n\n src/cairo-gl-composite.c |   12 ++++--------\n src/cairo-gl-device.c    |    4 ++++\n 2 files changed, 8 insertions(+), 8 deletions(-)\n\ncommit bef0b541497eb5a621df0b5528e08adb0beff961\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri May 28 21:08:17 2010 +0200\n\n    gl: Do not reset shaders on _end()\n    \n    Instead, keep the shader around until cairo_device_flush() is called.\n\n src/cairo-gl-composite.c |   35 ++++++++++++++++++++++-------------\n src/cairo-gl-device.c    |    3 +++\n src/cairo-gl-private.h   |    6 ++++++\n 3 files changed, 31 insertions(+), 13 deletions(-)\n\ncommit 534c14729921cbc2f8e24575eb792de9ddb96e23\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri May 28 21:06:58 2010 +0200\n\n    region: clarify docs of cairo_region_equal()\n\n src/cairo-region.c |    9 +++++----\n 1 file changed, 5 insertions(+), 4 deletions(-)\n\ncommit 0fc6f08981604ffdd0109362dcbbd9773501cd9a\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri May 28 20:45:52 2010 +0200\n\n    gl: Make _shader_by_type() a getter\n    \n    And refactor code to do the current_shader assigning itself.\n\n src/cairo-gl-composite.c |   16 +++++++++++-----\n src/cairo-gl-private.h   |    5 +++--\n src/cairo-gl-shaders.c   |   13 ++++++++-----\n 3 files changed, 22 insertions(+), 12 deletions(-)\n\ncommit 2971ca049881298cd171cf27cd3beb49d2c0572f\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri May 28 20:39:22 2010 +0200\n\n    gl: bind all shader variables at the same place\n    \n    Avoids the need to bind the shader when creating it.\n\n src/cairo-gl-composite.c |   26 ++++++++++++++++++++------\n src/cairo-gl-shaders.c   |   11 -----------\n 2 files changed, 20 insertions(+), 17 deletions(-)\n\ncommit e11d8370e0503f085beaa355d85fa6991cd497da\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri May 28 17:37:19 2010 +0200\n\n    gl: Set GL_BLEND and GL_SCISSOR_TEST globally\n    \n    Note that we do set them unconditionally in _begin() because a flush\n    might have cleared them.\n\n src/cairo-gl-composite.c |   11 +++--------\n src/cairo-gl-device.c    |    8 ++++++++\n src/cairo-gl-surface.c   |    1 +\n 3 files changed, 12 insertions(+), 8 deletions(-)\n\ncommit 7747f6d9146c19419fdc4fbbdf72eed42dfa731d\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri May 28 17:19:56 2010 +0200\n\n    gl: Introduce flush functions\n    \n    The flush functions will clear the state that will in the future be kep\n    unconditionally.\n\n src/cairo-gl-composite.c |    6 +++---\n src/cairo-gl-device.c    |   22 +++++++++++++++++++++-\n src/cairo-gl-private.h   |    4 ++++\n src/cairo-gl-surface.c   |   36 ++++++++++++++++++++++++++++++++----\n 4 files changed, 60 insertions(+), 8 deletions(-)\n\ncommit 5c74beaaa5dedd82f891f1cc109142f7b6e222a8\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri May 28 17:19:45 2010 +0200\n\n    docs: fix typo\n\n src/cairo-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 92d7b1eee96e6b1448aaf3c95a44238fa0eeff48\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri May 28 16:19:12 2010 +0200\n\n    device: Make flush vfunc return a cairo_status_t\n    \n    Mirror the behavior of the surface flush vfunc: Make it return a status\n    and if it's an error set it on the device.\n\n src/cairo-device-private.h |    2 +-\n src/cairo-device.c         |    9 +++++++--\n src/cairo-xml-surface.c    |    4 +++-\n 3 files changed, 11 insertions(+), 4 deletions(-)\n\ncommit 63e3cf3888d5b55295a04c4af28e876c04245b85\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri May 28 15:09:23 2010 +0200\n\n    gl: Move unsetting the state into the operand destroy function\n\n src/cairo-gl-composite.c |   43 +++++++++++++++++++++++++++++--------------\n 1 file changed, 29 insertions(+), 14 deletions(-)\n\ncommit b9b85dbf3706fe9e50f40b5fda655e71931c2d7f\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri May 28 13:42:11 2010 +0200\n\n    gl: get rid of the operand's pattern variable\n    \n    Now someone just needs to teach cairo-gl to not use\n    cairo_pattern_acquire_surface() and we could avoid the nasty hack in\n    cairo_gl_operand_destroy().\n\n src/cairo-gl-composite.c |   21 ++++++++++-----------\n src/cairo-gl-private.h   |    2 --\n 2 files changed, 10 insertions(+), 13 deletions(-)\n\ncommit ae9517a39fdddec389553a64116140e222970ef0\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri May 28 13:18:28 2010 +0200\n\n    gl: Check mask's attributes for component alpha\n    \n    ... and don't duplicate that information into the cairo_gl_composite_t\n\n src/cairo-gl-composite.c |   14 ++++++++------\n src/cairo-gl-private.h   |    1 -\n 2 files changed, 8 insertions(+), 7 deletions(-)\n\ncommit f72afc09d0b99030f5766e7bbbb05f6db606e195\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri May 28 13:14:09 2010 +0200\n\n    gl: Merge fixed function setup into general texture setup\n\n src/cairo-gl-composite.c |   84 +++++++++++++++++++---------------------------\n 1 file changed, 34 insertions(+), 50 deletions(-)\n\ncommit dd1faaf02e2a75ca8b9c484abd15726f5c6d3ac4\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri May 28 12:54:54 2010 +0200\n\n    gl: Move function\n    \n    I wanna use it elsewhere and keep the diff small.\n\n src/cairo-gl-composite.c |   58 +++++++++++++++++++++++-----------------------\n 1 file changed, 29 insertions(+), 29 deletions(-)\n\ncommit d03800313623fb2b9e7d15c6a659ceaaee2882e8\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri May 28 12:51:08 2010 +0200\n\n    gl: Simplify mask operand setup code\n    \n    Component alpha just has one different value\n\n src/cairo-gl-composite.c |   40 +++++++---------------------------------\n 1 file changed, 7 insertions(+), 33 deletions(-)\n\ncommit e20261dddaa194ab4e980da8681e9378d7fd7ef1\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri May 28 12:48:59 2010 +0200\n\n    gl: Get rid of operand argument to emit functions\n\n src/cairo-gl-composite.c |   34 +++++++++++++++-------------------\n src/cairo-gl-glyphs.c    |    2 +-\n src/cairo-gl-private.h   |    2 --\n src/cairo-gl-surface.c   |   11 +++--------\n 4 files changed, 19 insertions(+), 30 deletions(-)\n\ncommit 8062fb352e6cd1d961f0fbc660779f4ad94c7508\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri May 28 11:03:09 2010 +0200\n\n    gl: Add an enum for tex units\n    \n    Instead of hardcoding 0 for source and 1 for mask, use an enum. It's\n    also clearer when functions take a cairo_gl_tex_t argument instead of a\n    GLuint.\n\n src/cairo-gl-composite.c |   20 ++++++++++----------\n src/cairo-gl-private.h   |    5 +++++\n src/cairo-gl-shaders.c   |   34 ++++++++++++----------------------\n 3 files changed, 27 insertions(+), 32 deletions(-)\n\ncommit 5db362dd6792af20282e0e9a2805ee6f1b921e44\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri May 28 10:24:33 2010 +0200\n\n    gl: Keep a copy of the current operand in the context\n    \n    Note that they are currently only valid as long as the\n    cairo_gl_composite_t exists, but that will be changed soon.\n\n src/cairo-gl-composite.c |   20 ++++++++++++++++----\n src/cairo-gl-private.h   |    2 ++\n 2 files changed, 18 insertions(+), 4 deletions(-)\n\ncommit a05f062c806ac014d0daffa1d74bdb0dd90a8a26\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 26 19:23:18 2010 +0200\n\n    gl: Move struct definitions in header\n\n src/cairo-gl-private.h |   66 ++++++++++++++++++++++++------------------------\n 1 file changed, 33 insertions(+), 33 deletions(-)\n\ncommit 85d4c6c55b85c52d8f86247f00659e37354abd49\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 26 21:23:40 2010 +0200\n\n    gl: operand->texture.surface cannot be NULL\n\n src/cairo-gl-composite.c |   10 +++-------\n 1 file changed, 3 insertions(+), 7 deletions(-)\n\ncommit 9486ad5fbdad047b5194f6bed68a08bb4c594610\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 26 19:16:41 2010 +0200\n\n    gl: Remove composite_t argument from _flush() function\n\n src/cairo-gl-composite.c |   17 +++++++----------\n src/cairo-gl-glyphs.c    |    2 +-\n src/cairo-gl-private.h   |    3 +--\n 3 files changed, 9 insertions(+), 13 deletions(-)\n\ncommit 16e420b4dca5325ab295a27103299a916f334b05\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 26 19:13:53 2010 +0200\n\n    gl: Remove dependency on composite_t in draw function\n\n src/cairo-gl-composite.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit e46215ec6b94355b741acf5dfdd264d6396b4bc8\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 26 18:44:20 2010 +0200\n\n    gl: Remove unneeded and broken workaround\n    \n    We now ensure the values are properly zeroed when setting the operator.\n\n src/cairo-gl-composite.c |   14 +-------------\n 1 file changed, 1 insertion(+), 13 deletions(-)\n\ncommit b2d709b5c7e463437189b8e4a2c53a3317437825\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 26 17:41:01 2010 +0200\n\n    gl: Switch src alpha handling to a tiny on/off function\n    \n    Instead of doing setup every time, we just set this one flag. Much\n    nicer.\n\n src/cairo-gl-composite.c |   22 +++++++---------------\n 1 file changed, 7 insertions(+), 15 deletions(-)\n\ncommit 53fd451f85974d2ed0d6f29a0a0549fd4c7035fe\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 26 17:32:14 2010 +0200\n\n    gl: Avoid redundant mask setup\n    \n    The mask doesn't change, so no need to set it up twice\n\n src/cairo-gl-composite.c |    2 --\n 1 file changed, 2 deletions(-)\n\ncommit 1b3675fc4b9c7f6ad4d9edd9b27bee10c2502b81\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 26 17:28:05 2010 +0200\n\n    gl: Split fixed-function operand setup into own function\n\n src/cairo-gl-composite.c |  151 +++++++++++++---------------------------------\n 1 file changed, 42 insertions(+), 109 deletions(-)\n\ncommit 02da871050f6be02ba0231e545d6613a42c3a7e6\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 26 17:02:29 2010 +0200\n\n    gl: Unify fixed function setup code\n\n src/cairo-gl-composite.c |   15 ++++-----------\n 1 file changed, 4 insertions(+), 11 deletions(-)\n\ncommit 74f9094162fba54c29859e25ad5be085604aa0b6\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 26 15:46:39 2010 +0200\n\n    gl: switch OPERAND0 and OPERAND1 in the fixed function path\n    \n    This should not change anything as we multiply the values.\n    But it allows unifying parts of the code, which will happen in another\n    patch.\n\n src/cairo-gl-composite.c |   42 +++++++++++++++++++++---------------------\n 1 file changed, 21 insertions(+), 21 deletions(-)\n\ncommit c6aac5d0134f1473d3867c1b6a4b40753700ffcb\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 26 15:42:56 2010 +0200\n\n    gl: Move the pre shader to the context, too\n    \n    It's required when flushing, too.\n\n src/cairo-gl-composite.c |   10 +++++-----\n src/cairo-gl-private.h   |    2 +-\n 2 files changed, 6 insertions(+), 6 deletions(-)\n\ncommit 61bc3067ca5fa4aeaef537c397c37826facc7621\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 26 15:28:32 2010 +0200\n\n    gl: Store the clip region in the context\n    \n    This is necessary because we want to get rid of keeping the composite\n    stuff around.\n\n src/cairo-gl-composite.c |   15 ++++++++++-----\n src/cairo-gl-device.c    |    2 ++\n src/cairo-gl-private.h   |    1 +\n 3 files changed, 13 insertions(+), 5 deletions(-)\n\ncommit db79880d9a836d50e9202caa5c73e22a2b6b97b3\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 26 13:03:12 2010 +0200\n\n    gl: Make gl_composite_begin() acquire the context\n    \n    Also remove the previous places for context acquisition. This completes\n    fixing the potential ABBA deadlock I talked about a few commits ago.\n\n src/cairo-gl-composite.c |   21 +++++++++++++++++----\n src/cairo-gl-glyphs.c    |    7 ++++++-\n src/cairo-gl-private.h   |    4 ++--\n src/cairo-gl-surface.c   |   26 +++++---------------------\n 4 files changed, 30 insertions(+), 28 deletions(-)\n\ncommit 1320a168fa5b73fd42438040a4bf8ee9ad222a0e\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 26 12:26:49 2010 +0200\n\n    gl: Remove unused code\n    \n    We don't need to acquire/release the context, we're not using it.\n\n src/cairo-gl-glyphs.c |   11 +----------\n 1 file changed, 1 insertion(+), 10 deletions(-)\n\ncommit 8f5c3b706b5bad6b0851a3e27752f7d1a3ca8a72\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 26 12:16:01 2010 +0200\n\n    gl: Make composite_set_clip_region not require the context\n\n src/cairo-gl-composite.c |    3 +--\n src/cairo-gl-glyphs.c    |    2 +-\n src/cairo-gl-private.h   |    3 +--\n src/cairo-gl-surface.c   |    2 +-\n 4 files changed, 4 insertions(+), 6 deletions(-)\n\ncommit ac6abcbac7f79e5717c44e251135dcba8ab00b27\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 26 12:14:24 2010 +0200\n\n    gl: Make composite_set_source/mask/mask_spans not require a context\n\n src/cairo-gl-composite.c |   77 ++++++++++++++++++++++++----------------------\n src/cairo-gl-glyphs.c    |    5 ++-\n src/cairo-gl-private.h   |    9 ++----\n src/cairo-gl-surface.c   |   13 ++++----\n 4 files changed, 51 insertions(+), 53 deletions(-)\n\ncommit 88a70d66fcdbca7e489baa48cd145bb69c3e28e0\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 26 11:59:36 2010 +0200\n\n    gl: Add API for querying if we need GL_TEXTURE_RECTANGLE_EXT\n    \n    We need to do that querying outside of taking the lock, so we want to be\n    able to query the device, not the context.\n\n src/cairo-gl-composite.c |   11 +++++------\n src/cairo-gl-glyphs.c    |    2 +-\n src/cairo-gl-private.h   |    6 ++++++\n 3 files changed, 12 insertions(+), 7 deletions(-)\n\ncommit 9c6e1338a1c7d61b4cc84bcdc5c38573a34cd561\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 26 11:36:22 2010 +0200\n\n    gl: Make cairo_gl_composite_t not require a gl context anymore\n    \n    First patch in a series.\n    \n    The idea is to make all gl operations in Cairo work like this:\n    1) prepare cairo_gl_composite_t\n    2) acquire device\n    3) begin composite operation\n    4) emit vertexes\n    5) end operation\n    6) release device\n    7) cleanup composite operation\n    \n    This both reduces the time required with the device locked, cleans the\n    API and more importantly avoids ABBA deadlocks, as we currently call\n    acquire_pattern() with the device lock held.\n\n src/cairo-gl-composite.c |    6 ++----\n src/cairo-gl-glyphs.c    |    7 +++----\n src/cairo-gl-private.h   |    6 ++----\n src/cairo-gl-surface.c   |   19 ++++++++-----------\n 4 files changed, 15 insertions(+), 23 deletions(-)\n\ncommit 60f0cb9c60556f94af903dd6f9da0628a05a1f7f\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sat May 22 18:42:44 2010 +0200\n\n    gl: Flush surface at the right times\n\n src/cairo-gl-composite.c |    2 ++\n src/cairo-gl-device.c    |    2 ++\n src/cairo-gl-surface.c   |    2 ++\n 3 files changed, 6 insertions(+)\n\ncommit ffeeae462ea0f8c7af326f3bcc66b88881bd8fdd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jun 6 16:50:34 2010 +0100\n\n    Revert \"gstate: reduce a couple more operators\"\n    \n    This reverts commit a85c6c1e36273d534f01ade0714b0592b6bed5ab.\n    \n    Soeren found that this introduced a regression when displaying pages in\n    evince, and since I'm not overly enthralled at the added complexity here\n    for very little gain, remove the reduction and leave it clear for a more\n    complete solution in the future.\n\n src/cairo-gstate.c |   15 +--------------\n 1 file changed, 1 insertion(+), 14 deletions(-)\n\ncommit 44e628a6f4e6b9b21ad67b08869186a779d0db5a\nAuthor: Makoto Kato <m_kato@ga2.so-net.ne.jp>\nDate:   Mon May 31 18:22:40 2010 +0900\n\n    openvg: fix build break\n\n src/cairo-vg-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit cc080a1e2731a42045709d789587070da944145c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 27 20:51:55 2010 +0100\n\n    gl: Unmap the vertex buffer prior to using in DaawArrays()\n    \n    \"It is an INVALID_OPERTION error to source data from a buffer object\n    that is currently mapped.\"\n    \n    mesa is currently lax in this regard, but the Nvidia libGL conforms to\n    the spec and thus was causing failures.\n\n src/cairo-gl-composite.c |   23 ++++++++++++-----------\n 1 file changed, 12 insertions(+), 11 deletions(-)\n\ncommit b3e15bd5c307352065555c6c3ae5f0bd15b9a791\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 27 18:43:03 2010 +0100\n\n    gl: _cairo_set_shader_by_type() cannot return UNSUPPORTED\n    \n    So remove the superfuous test.\n\n src/cairo-gl-composite.c |    7 ++++---\n 1 file changed, 4 insertions(+), 3 deletions(-)\n\ncommit 59bd34e6a3661483f60bb01be8b406a5c38e1131\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 27 18:35:40 2010 +0100\n\n    gl: Check for an error device when creating surfaces.\n\n src/cairo-gl-surface.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 53f086105975c1c2bd4c43a1b0613ebde3580e95\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 27 18:27:53 2010 +0100\n\n    gl: Make _cairo_gl_shader_(init|compile) static\n    \n    Only used within _cairo_gl_shaders.c, so remove the private symbol.\n\n src/cairo-gl-private.h |   10 ----------\n src/cairo-gl-shaders.c |   41 +++++++++++++++++++++++++----------------\n 2 files changed, 25 insertions(+), 26 deletions(-)\n\ncommit dd0866cdc878a0be438a117051ccc64f12f81970\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 27 17:52:11 2010 +0100\n\n    boilerplate: Exercise RENDER capable windows.\n    \n    Ensure that the drivers actually work when rendering to a normal window.\n\n boilerplate/cairo-boilerplate-xlib.c |  107 ++++++++++++++++++++++++++++++++++\n 1 file changed, 107 insertions(+)\n\ncommit 2dc42af9422a15f902934a53c074e4194991a9e4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon May 17 16:32:20 2010 +0100\n\n    script: Update csi-exec to match new interface.\n\n util/cairo-script/csi-exec.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit 2f0f4ed0e2ae5657dedfe180b7be3a2496753ba8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 20 21:54:51 2010 +0100\n\n    freed-pool: Don't access beyond the end of the array.\n    \n    Argh. This bug has been here for quite some time and only showed itself\n    with a corrupt pointer on ppc32. Since the erroneous write is inside the\n    block, it remained undetected by valgrind.\n\n src/cairo-freed-pool-private.h |    8 +++++---\n src/cairo-freed-pool.c         |    4 +++-\n 2 files changed, 8 insertions(+), 4 deletions(-)\n\ncommit 97b4aeba44e5f4b23b3ed417b991570b46d4736e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 20 21:54:16 2010 +0100\n\n    atomic: Add memory barriers if required for intel primitives\n\n src/cairo-atomic-private.h |   16 ++++++++++++++++\n 1 file changed, 16 insertions(+)\n\ncommit 24e684c267404528b40fa49b55272d73bd44167d\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Thu May 20 22:37:18 2010 +0200\n\n    gl: spans need the dummy texture\n    \n    Thanks Eric. That took me half a day.\n\n src/cairo-gl-composite.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit d7a564d8eed32b4417fdb4c8c5d91467e4ae1019\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu May 20 22:10:06 2010 +0200\n\n    gl: Don't set is_clear\n    \n    1) It's wrong.\n    2) The core functions set the flag correctly already.\n\n src/cairo-gl-surface.c |    2 --\n 1 file changed, 2 deletions(-)\n\ncommit f9cf07b126293d00df085d4fbfa337e1132e0258\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu May 20 16:08:38 2010 +0200\n\n    gl: Fix coverage passing for spans not being endian safe.\n\n src/cairo-gl-composite.c |   29 ++++++++++++++++-------------\n src/cairo-gl-private.h   |    2 +-\n src/cairo-gl-surface.c   |    4 ++--\n 3 files changed, 19 insertions(+), 16 deletions(-)\n\ncommit 2a0f34c6da2eb4f10b198d04894fc1413352e041\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu May 20 11:23:18 2010 +0200\n\n    gl: Allow NONE and SPANS sampler for source, too\n\n src/cairo-gl-shaders.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 1586f7740ad436447ac75c6b869da7446172a63c\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Thu May 20 13:17:52 2010 +0200\n\n    gl: Refactor fixed function setup code\n    \n    In particular get rid of the _cairo_gl_set_tex_combine_constant_color()\n    function by inlining it and move common glTexEnv calls out of the\n    switch statement.\n\n src/cairo-gl-composite.c |  130 ++++++++++++++++------------------------------\n 1 file changed, 46 insertions(+), 84 deletions(-)\n\ncommit 4889090c76bdab5e4eb887593caf5d5a34f90864\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Thu May 20 12:13:43 2010 +0200\n\n    gl: set the active texture before fiddling with with glTexEnv\n    \n    fixes the fixed function pipeline\n\n src/cairo-gl-composite.c |    8 ++++++++\n 1 file changed, 8 insertions(+)\n\ncommit 3cff2da912150868390bf4b9df166c88b3dfcf2e\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Thu May 20 12:03:18 2010 +0200\n\n    gl: Remove unused variables\n\n src/cairo-gl-composite.c |    9 ---------\n 1 file changed, 9 deletions(-)\n\ncommit 4c7dd1be4526c85b47f1fe1d4663e7fbec0926b1\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 19 22:03:18 2010 +0200\n\n    gl: Move vertex array setup code into the texture setup code\n\n src/cairo-gl-composite.c |   35 ++++++++++++++---------------------\n 1 file changed, 14 insertions(+), 21 deletions(-)\n\ncommit d9d5976bdf333a5a7ea7707bc3076696f3c079d2\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 19 21:54:32 2010 +0200\n\n    gl: Add an assertion that a context cannot call _begin() twice\n    \n    Evert _begin() call must be followed by an _end() call to avoid any\n    nastiness. Just like GL. :)\n\n src/cairo-gl-composite.c |    2 ++\n src/cairo-gl-private.h   |    7 +++++++\n 2 files changed, 9 insertions(+)\n\ncommit 5b8b1fe1cb692530b40db330c3040cd85a8b6bd7\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 19 21:10:26 2010 +0200\n\n    gl: Move vertex buffer handling from setup into context\n    \n    We can only emit one vertex buffer at a time anyway.\n\n src/cairo-gl-composite.c |   34 ++++++++++++++++++----------------\n src/cairo-gl-private.h   |    8 ++++----\n 2 files changed, 22 insertions(+), 20 deletions(-)\n\ncommit 0d5f2eab77f055b063538dcd345a1e0db480f3bc\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 19 20:49:49 2010 +0200\n\n    gl: Actuall do fall back to fixed function paths.\n    \n    Previously we were just returning UNSUPPORTED all the time. I guess that\n    explains why my code got so slow...\n\n src/cairo-gl-composite.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit bb7ca71c1af416ca084f03089f5fe762403635dd\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 19 20:47:31 2010 +0200\n\n    gl: Don't store the shader in the composite_t anymore\n    \n    Now that we have ctx->current_shader, there's no need to keep it in the\n    composite setup code.\n\n src/cairo-gl-composite.c |   30 ++++++++++++++----------------\n src/cairo-gl-private.h   |   10 ++++------\n src/cairo-gl-shaders.c   |   16 ++++++----------\n 3 files changed, 24 insertions(+), 32 deletions(-)\n\ncommit 6c477b4a945a8f8b866bb2f5e125d4a0328d05f4\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 19 20:10:19 2010 +0200\n\n    gl: Move shader checking in the TexEnv setup code\n    \n    As the previously generic setup code only contains non-shader code now,\n    we can check in advance that no shader is in use and do all the other\n    stuff without checks.\n\n src/cairo-gl-composite.c |  208 ++++++++++++++++++++++------------------------\n 1 file changed, 101 insertions(+), 107 deletions(-)\n\ncommit 73262edd8201de8ab8a01e01f83af5b5d6470f9e\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 19 19:25:03 2010 +0200\n\n    gl: Move texture setup code into its own file\n    \n    This ensures textures don't need to be (re)set when doing component\n    alpha and running 2 shaders.\n\n src/cairo-gl-composite.c |  208 ++++++++++++++++++++--------------------------\n 1 file changed, 92 insertions(+), 116 deletions(-)\n\ncommit 970c879dd897019f90b0c8ff5a18781be4935c55\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 19 18:34:00 2010 +0200\n\n    gl: Binding variables only works for the current shader\n    \n    So make the code reflect that.\n\n src/cairo-gl-composite.c |   27 ++++++++++++---------------\n src/cairo-gl-private.h   |    6 ------\n src/cairo-gl-shaders.c   |   22 ++++++++--------------\n 3 files changed, 20 insertions(+), 35 deletions(-)\n\ncommit 065969d78f23c634ebcb2b931cbb1fe184f2cedf\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 19 18:21:06 2010 +0200\n\n    gl: Separate binding to shaders from setting operands\n    \n    That way we only need to bind to shaders when creating them, but not\n    everytime we switch shaders on text output.\n\n src/cairo-gl-composite.c |  156 +++++++++++++++++++++++-----------------------\n src/cairo-gl-shaders.c   |    2 +-\n 2 files changed, 79 insertions(+), 79 deletions(-)\n\ncommit c53f7778bcf274f64f801ef9ee1641a088842f60\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 19 16:50:57 2010 +0200\n\n    gl: Use the mask, not the source\n    \n    Not that we'd ever have constant color component-alpha masks, but that's\n    an entirely different topic.\n\n src/cairo-gl-composite.c |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit 26e8e506b66022910c262da0618ef5be8c5a080e\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 19 13:19:56 2010 +0200\n\n    gl: Add _cairo_gl_surface_is_texture()\n    \n    It's more explicit then just checking surface->fb != 0\n    Also, it makes improving that check easier.\n\n src/cairo-gl-device.c  |    4 ++--\n src/cairo-gl-private.h |    6 ++++++\n src/cairo-gl-surface.c |   11 ++++++-----\n 3 files changed, 14 insertions(+), 7 deletions(-)\n\ncommit e4cb46b50015f792b0e8c7b49f3b42f2c3c0ad00\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 19 12:10:10 2010 +0200\n\n    gl: Implement texture upload to window with composite()\n    \n    Instead of custom code that does basically the same thing, use\n    a temporary surface and _cairo_gl_surface_composite() to upload images.\n\n src/cairo-gl-shaders.c |    2 +-\n src/cairo-gl-surface.c |  129 ++++++++++++++++++------------------------------\n 2 files changed, 48 insertions(+), 83 deletions(-)\n\ncommit 7c8759e279f51ea722c07e4b0c70f4a49f34393d\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 19 11:46:12 2010 +0200\n\n    gl: cache the current shader in the context\n\n src/cairo-gl-private.h |    4 +++-\n src/cairo-gl-shaders.c |    7 +++++++\n 2 files changed, 10 insertions(+), 1 deletion(-)\n\ncommit 6864ca6c25aa8147a562d7f693a95025dde807a8\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 19 11:10:11 2010 +0200\n\n    gl: Move _cairo_gl_set_operator() to the file it's used in\n    \n    Also make it a private function.\n\n src/cairo-gl-composite.c |   57 ++++++++++++++++++++++++++++++++++++++++++++++\n src/cairo-gl-private.h   |    4 ----\n src/cairo-gl-surface.c   |   57 ----------------------------------------------\n 3 files changed, 57 insertions(+), 61 deletions(-)\n\ncommit 0d2d4c59026c31da084e6797d109a230341b396d\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue May 18 21:56:55 2010 +0200\n\n    gl: Detect color-pattern clears of surfaces\n    \n    ... and use glClear() there.\n    \n    The common case here is a solid color and OPERATOR_OVER.\n\n src/cairo-gl-private.h |    3 ---\n src/cairo-gl-surface.c |   38 +++++++++++++++++++++++++++++---------\n 2 files changed, 29 insertions(+), 12 deletions(-)\n\ncommit b70eb275c4aa54f7c90a985b5de67da12ac08a30\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue May 18 21:56:18 2010 +0200\n\n    gl: detect image uploads and fast-path them\n\n src/cairo-gl-surface.c |   23 +++++++++++++++++++++++\n 1 file changed, 23 insertions(+)\n\ncommit 8adbf3aa19fd9fb8200973ecd72cdebfd9a5364d\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue May 18 20:12:44 2010 +0200\n\n    gl: Use _cairo_gl_surface_draw_image() when caching glyphs\n\n src/cairo-gl-glyphs.c |   47 ++++++++---------------------------------------\n 1 file changed, 8 insertions(+), 39 deletions(-)\n\ncommit 915aa64ef077fe3b6094d0f1c8bd87ab5acc4868\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue May 18 13:01:30 2010 +0200\n\n    gl: Actually check errors for _cairo_gl_composite_begin()\n\n src/cairo-gl-glyphs.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 0222cc7d76b0dc724630b660687f98a2460eb0b9\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue May 18 13:00:34 2010 +0200\n\n    gl: Get rid of _cairo_gl_composite_set_mask_texture()\n    \n    Now that the glyph cache contains real surfaces, there's no longer a\n    need to have a special function for it.\n\n src/cairo-gl-composite.c |   16 ----------------\n src/cairo-gl-glyphs.c    |   15 ++++++++-------\n src/cairo-gl-private.h   |    6 ------\n 3 files changed, 8 insertions(+), 29 deletions(-)\n\ncommit 208d9f2a7e1f66ff2764c41fe67f65e27279b2ab\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue May 18 12:49:59 2010 +0200\n\n    gl: Make glyph cache a real surface\n    \n    This has the huge advantage that we can use real surface functions on\n    it.\n\n src/cairo-gl-glyphs.c  |   67 ++++++++++++++++++------------------------------\n src/cairo-gl-private.h |    3 +--\n 2 files changed, 26 insertions(+), 44 deletions(-)\n\ncommit 050117996339cfe35add1f2cd44d0e5578d4a981\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue May 18 12:02:54 2010 +0200\n\n    surface: Add _cairo_surface_release_device_reference() API\n    \n    See the API documentation for that function about its intended purpose.\n\n src/cairo-surface-private.h |    1 +\n src/cairo-surface.c         |   26 +++++++++++++++++++++++++-\n src/cairoint.h              |    3 +++\n 3 files changed, 29 insertions(+), 1 deletion(-)\n\ncommit c489f67d1d1d6079f9b58b726ed42beea1dfc44e\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon May 17 20:45:42 2010 +0200\n\n    gl: Make a bunch of functions static\n    \n    They are no longer used outside of cairo_gl_composite_t.\n\n src/cairo-gl-composite.c |    8 ++++----\n src/cairo-gl-private.h   |   16 ----------------\n 2 files changed, 4 insertions(+), 20 deletions(-)\n\ncommit c8008e118a54d62690d6555c9ffabf734c39e69f\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon May 17 19:16:20 2010 +0200\n\n    gl: Don't name the union in cairo_gl_operand_t\n    \n    Gets rid of ultra-long variable names.\n\n src/cairo-gl-composite.c |  152 +++++++++++++++++++++++-----------------------\n src/cairo-gl-private.h   |    2 +-\n 2 files changed, 77 insertions(+), 77 deletions(-)\n\ncommit 53260148ea9abacdc510826765c1d63f486add6c\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Fri May 14 21:04:22 2010 +0200\n\n    quartz: fix repeating radial gradients on 64 bits\n    \n    Quartz API uses the type CGFloat, which is double on 64 bits,\n    float on 32 bits architectures\n\n src/cairo-quartz-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 0104976dc853b60de14080a749a6f729852f1b22\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Fri May 14 21:03:19 2010 +0200\n\n    quartz: silence compiler warnings\n    \n    All the possible enum values have to be explicitly handled in switch statements.\n\n src/cairo-quartz-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit ac94a00a4d3acb36f011330b78d1311534fe90e0\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Fri May 14 19:33:15 2010 +0200\n\n    quartz: fallback for A1 images on little endian archs\n    \n    Quartz uses a bit ordering that is consistent with cairo on big\n    endian architectures, but isn't on little endian architectures.\n    \n    Fixes a1-mask and large-source-roi (on little endian)\n\n src/cairo-quartz-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit f40e3b09a130a9ccbe310120fd5cfc7ad7828a4d\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Thu May 13 12:15:19 2010 +0200\n\n    quartz-font: Silence 0x0 CGContext warning\n    \n    Silence Quartz complaints about operations on empty contexts:\n    <Error>: CGContextSetFont: invalid context 0x0\n    <Error>: CGContextSetFontSize: invalid context 0x0\n    <Error>: CGContextSetTextMatrix: invalid context 0x0\n    <Error>: CGContextSetAlpha: invalid context 0x0\n    <Error>: CGContextShowGlyphsAtPoint: invalid context 0x0\n\n src/cairo-quartz-font.c |   77 ++++++++++++++++++++++++++---------------------\n 1 file changed, 42 insertions(+), 35 deletions(-)\n\ncommit 1687e6169463947554f5476674a577e67e2c543b\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Thu May 13 11:54:32 2010 +0200\n\n    quartz-font: Conform context and antialias handling to quartz-surface\n    \n    A8 surfaces are now kAlphaOnly surfaces in quartz-font too.\n    Subpixel font smoothing can be enabled.\n\n src/cairo-quartz-font.c |   38 ++++++++++++++++++++++++++++----------\n 1 file changed, 28 insertions(+), 10 deletions(-)\n\ncommit d68bbc0fe5706634e4c025bdcb311905b7f008e4\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Mon May 17 20:57:08 2010 +0200\n\n    gl: Add missing NULL-check in non-shader code\n\n src/cairo-gl-composite.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 7f22372edf10f5eab53ea132d9226f6d5b49eb9a\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon May 17 14:20:17 2010 +0200\n\n    gl: Get rid of src and mask argument to composite_init()\n    \n    This was thought of as a way to detect self-painting, but it's better to\n    check that later in _begin() - when we check it.\n\n src/cairo-gl-composite.c |    2 --\n src/cairo-gl-glyphs.c    |    2 +-\n src/cairo-gl-private.h   |    2 --\n src/cairo-gl-surface.c   |    9 ++++-----\n 4 files changed, 5 insertions(+), 10 deletions(-)\n\ncommit 75f15babed8409fb1eaae514411de01d57072c80\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon May 17 14:17:47 2010 +0200\n\n    gl: Implement fill_rectangles with composite\n    \n    Tiny performance improvement, but a lot less code.\n\n src/cairo-gl-surface.c |  204 ++++++++++--------------------------------------\n 1 file changed, 41 insertions(+), 163 deletions(-)\n\ncommit e7c5b4f79fa24b75026c93bc9244115d2ee23930\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon May 17 13:56:22 2010 +0200\n\n    gl: make _set_mask() accept NULL\n    \n    That way, it can be used to unset the mask.\n\n src/cairo-gl-composite.c |    3 +++\n src/cairo-gl-surface.c   |   14 ++++++--------\n 2 files changed, 9 insertions(+), 8 deletions(-)\n\ncommit 145db7a427e594f1d68a6c0f4afe5e365e219cf0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon May 17 12:37:46 2010 +0100\n\n    gl: Check status after composite_begin\n    \n    Skip the unnecessary work in _cairo_gl_surface_composite() if we fail\n    to setup the GL composite operation.\n\n src/cairo-gl-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 8695c41e80ce932fd5dd434307b92f323a937c7c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon May 17 12:36:54 2010 +0100\n\n    gl: Throw a _cairo_error when detecting a GLerror\n    \n    This allows us to easily set an breakpoint and inspect cairo's state\n    when we do something illegal.\n\n src/cairo-gl-private.h |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 1c18ab02c8d41be8e5886cbb34aeda5099189fef\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon May 17 11:42:26 2010 +0100\n\n    gl: Rename cairo_gl_shader_program_t to cairo_gl_shader_t\n    \n    And complete the move of the shaders into the cairo_gl_shader namespace.\n    Of particular note, the bind_*_to_shader become\n    _cairo_gl_shader_bind_*() and have proper types.\n\n src/cairo-gl-composite.c |  138 ++++++-------\n src/cairo-gl-device.c    |   14 +-\n src/cairo-gl-private.h   |   93 +++++----\n src/cairo-gl-shaders.c   |  508 +++++++++++++++++++++++++---------------------\n src/cairo-gl-surface.c   |   54 ++---\n 5 files changed, 424 insertions(+), 383 deletions(-)\n\ncommit 2325d755b03958d8ead9a995c0d1d03e4f93af0c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon May 17 10:33:46 2010 +0100\n\n    gl: Pretty print the error GLenum.\n\n src/cairo-gl-private.h |    3 ++-\n src/cairo-gl-surface.c |   19 +++++++++++++++++++\n 2 files changed, 21 insertions(+), 1 deletion(-)\n\ncommit 7ef1bd22ded512f4fad3959796d7f40c4ddc5824\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon May 17 01:12:34 2010 +0200\n\n    gl: Update copyright statements\n    \n    - add 2010 Red Hat copyright for my code\n    - include myself as author\n    - update contributors list\n\n src/cairo-gl-composite.c |    5 ++++-\n src/cairo-gl-device.c    |    5 ++++-\n src/cairo-gl-glyphs.c    |    5 +++++\n src/cairo-gl-private.h   |    6 ++++--\n src/cairo-gl-shaders.c   |    8 +++++++-\n src/cairo-gl-surface.c   |    5 ++++-\n 6 files changed, 28 insertions(+), 6 deletions(-)\n\ncommit 0b69e51b526a609a2dc5f1d2fb9c49f240feb57b\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon May 17 00:56:21 2010 +0200\n\n    gl: Assert that binding values to shaders never fails\n    \n    As that would  be a programming error, we can use an assert and get rid\n    of return values that we weren't checking anyway.\n\n src/cairo-gl-composite.c |  129 +++++++++++++++++++---------------------------\n src/cairo-gl-private.h   |   12 ++---\n src/cairo-gl-shaders.c   |  114 ++++++++++++++++------------------------\n src/cairo-gl-surface.c   |   15 +++---\n 4 files changed, 111 insertions(+), 159 deletions(-)\n\ncommit 0bb11e8f5bcdc8a6f8384197b39c2ad48eaab1cd\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon May 17 00:49:01 2010 +0200\n\n    gl: Use GL_TRIANGLES instead of GL_QUADS\n    \n    It seems to increase performance by 1-2% on average and up to 30% in\n    some cases (on i965).\n\n src/cairo-gl-composite.c |   16 +++++++++++-----\n 1 file changed, 11 insertions(+), 5 deletions(-)\n\ncommit 2b771da47a87f86f378314bfe8033874d9444914\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sun May 16 23:58:47 2010 +0200\n\n    xlib: ensure variable isn't uninitialized\n\n src/cairo-xlib-surface.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit b768a33a602942825e5ec651ae7bafd6d5fc33ac\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sun May 16 21:10:45 2010 +0200\n\n    gl: Set composite->has_component_alpha based on mask\n    \n    Previously it was set when initing the composite structure, but that\n    doesn't allow resetting it when a new mask is used.\n\n src/cairo-gl-composite.c |    7 ++++---\n 1 file changed, 4 insertions(+), 3 deletions(-)\n\ncommit 1cde4601df8a3689450e2a0e15888c53aff12983\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sun May 16 21:05:16 2010 +0200\n\n    gl: Replace _cairo_gl_operand_init() with setters for src/mask\n    \n    Now cairo_gl_operand_t is no longer exposed outside of\n    cairo-gl-composite.c\n\n src/cairo-gl-composite.c |   34 +++++++++++++++++++++++++++++++++-\n src/cairo-gl-glyphs.c    |   10 +++++-----\n src/cairo-gl-private.h   |   25 ++++++++++++++++---------\n src/cairo-gl-surface.c   |   26 +++++++++++++-------------\n 4 files changed, 67 insertions(+), 28 deletions(-)\n\ncommit 6575cb7a95e109ab39eda58603ed6a76581a41b0\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sun May 16 20:39:00 2010 +0200\n\n    gl: Convert glyphs path to use cairo_gl_composite_t\n\n src/cairo-gl-composite.c |  122 ++++++++++++-----\n src/cairo-gl-glyphs.c    |  331 ++++++----------------------------------------\n src/cairo-gl-private.h   |   22 +++\n 3 files changed, 150 insertions(+), 325 deletions(-)\n\ncommit 8937f2b4b5e4bcb8ada1e478df6a7329c0b80a5a\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sun May 16 13:19:48 2010 +0200\n\n    gl: Require ARB_vertex_buffer_object extension unconditionally\n    \n    <anholt> we shouldn't bother with non-vbo support. there's no\n    justification for a driver not supporting it.\n\n src/cairo-gl-composite.c |    1 -\n src/cairo-gl-device.c    |    5 +++--\n src/cairo-gl-glyphs.c    |    3 ---\n src/cairo-gl-private.h   |    7 -------\n src/cairo-gl-surface.c   |   12 ++++--------\n 5 files changed, 7 insertions(+), 21 deletions(-)\n\ncommit 29dfd5b488e16ec8be879b2415635df93b874afc\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sun May 16 03:36:05 2010 +0200\n\n    gl: Remove unused variables\n\n src/cairo-gl-surface.c |    7 +------\n 1 file changed, 1 insertion(+), 6 deletions(-)\n\ncommit 4144488f516214b675d25d48add8cbd83fd17025\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sun May 16 03:29:04 2010 +0200\n\n    gl: Convert span renderer to use cairo_gl_composite_begin/end()\n    \n    Adds two new APIs to the composite API:\n    - _cairo_gl_composite_set_mask_spans()\n      Tells the composite renderer to use the color values for spans.\n    - _cairo_gl_composite_set_clip_region()\n      Tells the composite renderer to use GL_SCISSORS_TEST to clip when\n      drawing. This function is very unperformant, so if it can be avoided,\n      it probably shouldn't be used.\n\n src/cairo-gl-composite.c |   72 +++++++++++++-\n src/cairo-gl-private.h   |   10 ++\n src/cairo-gl-surface.c   |  247 ++++++----------------------------------------\n 3 files changed, 110 insertions(+), 219 deletions(-)\n\ncommit 6e81d85e3682f14e1c5dbe97dda2cc1fcd32df3a\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sun May 16 03:27:28 2010 +0200\n\n    gl: Change _cairo_gl_composite_emit_rect()\n    \n    Two changes:\n    - The function now takes x1/y1,x2/y2 instead of x,y,width,height\n    - The function takes a color uint32_t. This will be used by spans.\n\n src/cairo-gl-composite.c |   27 +++++++++++++++------------\n src/cairo-gl-private.h   |    9 +++++----\n src/cairo-gl-surface.c   |   10 ++++++----\n 3 files changed, 26 insertions(+), 20 deletions(-)\n\ncommit f8398cc2d83eb9ac37874f71d4f8805dbf0df412\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sun May 16 02:34:18 2010 +0200\n\n    gl: remove unused variables from span renderer\n\n src/cairo-gl-surface.c |    7 -------\n 1 file changed, 7 deletions(-)\n\ncommit f5c5077def47b91b57dfbc8c2622b4aaf5ca8fbb\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sun May 16 02:06:43 2010 +0200\n\n    gl: Support component alpha in gl_composite_t\n    \n    Use that to get rid of cairo_gl_surface_composite_component_alpha()\n\n src/cairo-gl-composite.c |  165 +++++++++++++++++++++++++--\n src/cairo-gl-glyphs.c    |    2 +-\n src/cairo-gl-private.h   |    4 +\n src/cairo-gl-surface.c   |  280 +---------------------------------------------\n 4 files changed, 167 insertions(+), 284 deletions(-)\n\ncommit 88c118f891ca9ba472b8acff33829de845bb507c\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sun May 16 00:24:17 2010 +0200\n\n    gl: Implement _composite_emit_rect() and _composite_end()\n    \n    And use it in cairo_gl_surface_composite()\n\n src/cairo-gl-composite.c |  164 ++++++++++++++++++++++++++++++++++++++++++++++\n src/cairo-gl-private.h   |   19 ++++++\n src/cairo-gl-surface.c   |  107 +++---------------------------\n 3 files changed, 192 insertions(+), 98 deletions(-)\n\ncommit b96735f7b465a16182c4c8555878ba16b947e8f9\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sat May 15 22:12:12 2010 +0200\n\n    gl: Add _cairo_gl_composite_begin() function\n    \n    This is the first step at adding the following function set:\n    _cairo_gl_composite_begin()\n    _cairo_gl_composite_emit_*()\n    _cairo_gl_composite_end()\n    which will take care of proiding a unified model for emitting vertexes\n    using vbos instead of the 5 different methods we currently have.\n\n src/cairo-gl-composite.c |   30 ++++++++++++++++++++++++++++++\n src/cairo-gl-private.h   |    6 ++++++\n src/cairo-gl-surface.c   |   22 +---------------------\n 3 files changed, 37 insertions(+), 21 deletions(-)\n\ncommit 211a8b8234d24dd8e00332cb0b0e625ac1ffef58\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sat May 15 21:27:58 2010 +0200\n\n    gl: make _cairo_operand_destroy private\n\n src/cairo-gl-composite.c |    2 +-\n src/cairo-gl-private.h   |    3 ---\n 2 files changed, 1 insertion(+), 4 deletions(-)\n\ncommit bf1060252abaa97eb5ce149f8b99055b42096c67\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sat May 15 21:26:55 2010 +0200\n\n    gl: make show_glyphs use the cairo_composite_t API\n\n src/cairo-gl-glyphs.c |   17 ++++++++++-------\n 1 file changed, 10 insertions(+), 7 deletions(-)\n\ncommit 948290de12c5f451d361903f0f52e0cde5527180\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sat May 15 20:33:00 2010 +0200\n\n    gl: Make the span renderer use the new composite APIs\n\n src/cairo-gl-surface.c |   32 ++++++++++++++++++++------------\n 1 file changed, 20 insertions(+), 12 deletions(-)\n\ncommit 7ad8c3b45691ce0c8a86180bb3c1117b9a9980c0\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sat May 15 20:07:44 2010 +0200\n\n    gl: Move composite code into own file\n    \n    This allows designing a cleaner interface for cairo_composite_t as there\n    will not be static functions that get called outside of the \"published\"\n    interfaces.\n\n src/Makefile.sources     |    3 +-\n src/cairo-gl-composite.c |  898 ++++++++++++++++++++++++++++++++++++++++++++++\n src/cairo-gl-private.h   |    8 +\n src/cairo-gl-surface.c   |  851 +------------------------------------------\n 4 files changed, 910 insertions(+), 850 deletions(-)\n\ncommit 3ff32b00f0f85a853163c20b101ac5dd6a07da77\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sat May 15 18:20:56 2010 +0200\n\n    gl: cairo_gl_compsite_setup_t => cairo_gl_composite_t\n\n src/cairo-gl-glyphs.c  |    4 ++--\n src/cairo-gl-private.h |   26 +++++++++++++-------------\n src/cairo-gl-surface.c |   46 +++++++++++++++++++++++-----------------------\n 3 files changed, 38 insertions(+), 38 deletions(-)\n\ncommit c16edee26fb9f1669ee0ce1a61f0c54d802c6c7b\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sat May 15 17:33:24 2010 +0200\n\n    gl: use glBlendFuncSeparate()\n    \n    This way we can treat alpha-only textures correctly and don't have to\n    emit different shaders for it. Also gets rid of\n    GL_OPERAND_TEXTURE_ALPHA.\n\n src/cairo-gl-glyphs.c  |    9 +++------\n src/cairo-gl-private.h |    1 -\n src/cairo-gl-shaders.c |   37 -------------------------------------\n src/cairo-gl-surface.c |   37 +++++++++++++------------------------\n 4 files changed, 16 insertions(+), 68 deletions(-)\n\ncommit 4f5221a834a883262cce607d247f607d6c200363\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 12 21:12:37 2010 +0200\n\n    gl: acquire device manually in finish, as the default way will error\n    \n    We'll get CAIRO_STATUS_DEVICE_FINISHED, d'oh\n\n src/cairo-gl-device.c |   16 ++++++++--------\n 1 file changed, 8 insertions(+), 8 deletions(-)\n\ncommit 3f6300444928d12bf4a6e2f6f2c5fec1de7dba8e\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 12 20:53:20 2010 +0200\n\n    gl: Put shaders into a cache\n    \n    This allows to grow the complexity of the shaders without enlarging the\n    static array to unreasonable sizes.\n    \n    The cache size of 64 is essentially random.\n\n src/cairo-gl-device.c  |    2 +\n src/cairo-gl-private.h |    8 ++--\n src/cairo-gl-shaders.c |  111 ++++++++++++++++++++++++++++++++++++++++--------\n 3 files changed, 100 insertions(+), 21 deletions(-)\n\ncommit 08b04caf52518f1672694341355b5f5418008e78\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 12 18:10:04 2010 +0200\n\n    gl: Add cairo_gl_composite_setup_init/fini() functions\n    \n    Simplifies the main code paths, and can be extended to do dest copies.\n\n src/cairo-gl-private.h |   13 +++++++\n src/cairo-gl-surface.c |   91 +++++++++++++++++++++++++++---------------------\n 2 files changed, 65 insertions(+), 39 deletions(-)\n\ncommit aa14df0db5e4f236a9668ceda4e148e7d3ba0e9f\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 12 17:01:47 2010 +0200\n\n    gl: move operator check\n    \n    component alpha compositing checks the operator itself\n\n src/cairo-gl-surface.c |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit a3ee0a7f113ed38df66580ff7e38a79759b0c933\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 12 16:57:32 2010 +0200\n\n    gl: Programmatically generate fragment shaders\n\n src/cairo-gl-shaders.c |  428 +++++++++++++++++++++---------------------------\n src/cairo-gl-surface.c |    6 +-\n 2 files changed, 186 insertions(+), 248 deletions(-)\n\ncommit fe43b13052f7063f880aeeebda1880a6a2097922\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 12 13:57:06 2010 +0200\n\n    gl: Automatically generate the vertex shader source\n    \n    The idea is being able to generate shaders from the given input\n    on-demand. This allows creating more advanced shaders, such as those\n    that include the destination (for self-painting and\n    unsupported-by-blending operator) or painting images in weird formats\n    (extra translation step in shader, think YUV).\n\n src/cairo-gl-device.c  |    2 +-\n src/cairo-gl-private.h |   21 +++---\n src/cairo-gl-shaders.c |  195 +++++++++++++++++++++++++++++-------------------\n src/cairo-gl-surface.c |    3 +-\n 4 files changed, 132 insertions(+), 89 deletions(-)\n\ncommit 405eee07ad9a5bc325b339b8588facb905fb28f5\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 12 00:02:28 2010 +0200\n\n    gl: Get rid of cairo_gl_shader_source/mask_t\n    \n    Use the cairo_gl_operand_type_t instead. Those enums are pretty much\n    identical.\n\n src/cairo-gl-glyphs.c  |   13 ++--\n src/cairo-gl-private.h |   67 ++++++++-------------\n src/cairo-gl-shaders.c |   60 ++++++++++---------\n src/cairo-gl-surface.c |  153 +++++++++++++++++++++++++++++-------------------\n 4 files changed, 157 insertions(+), 136 deletions(-)\n\ncommit 5149bb87d7b547766ce6ff4976217454adbab562\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue May 11 21:35:13 2010 +0200\n\n    gl: s/_cairo_gl_set_destination/_cairo_gl_context_set_destination/\n    \n    It's an operation on the context, so name it accordingly\n\n src/cairo-gl-device.c  |    2 +-\n src/cairo-gl-glyphs.c  |    2 +-\n src/cairo-gl-private.h |    2 +-\n src/cairo-gl-surface.c |   16 ++++++++--------\n 4 files changed, 11 insertions(+), 11 deletions(-)\n\ncommit 9f34e403f38192d711304fbde4dedbaa8e15fd6e\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue May 11 13:15:16 2010 +0200\n\n    gl: Share vertex shaders\n    \n    Previously, we created a new vertex shader for every shader program we\n    used. Now the code shares identical vertex shaders between programs.\n\n src/cairo-gl-device.c  |   17 ++++-\n src/cairo-gl-private.h |   27 ++++++--\n src/cairo-gl-shaders.c |  179 ++++++++++++++++++++++++++++--------------------\n src/cairo-gl-surface.c |    7 +-\n 4 files changed, 142 insertions(+), 88 deletions(-)\n\ncommit 562c323ae8689907d7a62a7c2f5c10fb8d055608\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun May 16 17:47:13 2010 +0930\n\n    cff: Use correct glyph advance when subsetting cff fonts\n    \n    Previously the glyph advance in font units was used for the widths in\n    the PDF font dictionary. This only works for cff fonts that use a\n    [0.001 0 0 0.001 0 0] font matrix.\n\n src/cairo-cff-subset.c                  |   38 +++++++++++++++++--------------\n src/cairo-pdf-surface.c                 |   19 ++++++++--------\n src/cairo-scaled-font-subsets-private.h |    6 ++---\n 3 files changed, 34 insertions(+), 29 deletions(-)\n\ncommit edcefa87ed0a8ff59b54ef9251182ce68f9158ba\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Wed May 12 23:12:55 2010 +0930\n\n    type1: Use correct glyph advance when subsetting type 1 fonts\n    \n    Previously the glyph advance in font units was used for the widths in\n    the PDF font dictionary. This only works for Type 1 fonts that use a\n    [0.001 0 0 0.001 0 0] font matrix.\n    \n    https://bugs.freedesktop.org/show_bug.cgi?id=28061\n\n src/cairo-pdf-surface.c                 |   23 ++++++++++++-----------\n src/cairo-scaled-font-subsets-private.h |    6 +++---\n src/cairo-type1-fallback.c              |   18 +++++++++---------\n src/cairo-type1-subset.c                |    6 +++---\n 4 files changed, 27 insertions(+), 26 deletions(-)\n\ncommit 34fd094b3be54138c20ea5c4aab1d9597d056f35\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun May 16 10:23:30 2010 +0100\n\n    rtree: Actually pin the node when pinning.\n    \n    How embarrassing.\n\n src/cairo-rtree-private.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 63062511f6755af9ddd2985250465f94ebc5a3e8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun May 16 10:15:42 2010 +0100\n\n    boilerplate: Exercise manual double-buffering to a window\n    \n    Shouldn't possibly go wrong, but the mix of fbo and Window might prove\n    interesting.\n\n boilerplate/cairo-boilerplate-gl.c |  117 ++++++++++++++++++++++++++++++++++++\n 1 file changed, 117 insertions(+)\n\ncommit 605be3182308ec7dfe15e9d89890c33800b1eea9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun May 16 10:11:02 2010 +0100\n\n    cairo: Missing private markup for _cairo_format_to_pixman_format\n\n src/cairoint.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 14d6c3e054da89e47fc82ea29a708290eefe1357\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun May 16 10:07:07 2010 +0100\n\n    configure: Include PTHREAD_CFLAGS in CAIRO_LDFLAGS\n    \n    Required for successful linking of our programs. I am not sure what the\n    impact this has upon other users of Cairo yet, I think we need to export\n    the PTHREAD_CFLAGS via cairo.pc as well.\n\n configure.ac |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit c3df7e6d58364f883d91567757ed999ea88e10ca\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun May 16 09:54:04 2010 +0100\n\n    rtree: Replace undeclared TRUE/FALSE with 1/0\n\n src/cairo-rtree-private.h |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 465ceb330eada9937945f5c4d156169167d4bf8c\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Sun May 16 09:41:12 2010 +0200\n\n    test: improve copyright notices\n    \n    Conform copyright notices to a1-image-sample.c\n\n test/dash-offset.c              |   48 ++++++++++++++++-----------------------\n test/linear-gradient-extend.c   |   36 +++++++++++++++--------------\n test/radial-gradient-extend.c   |   36 +++++++++++++++--------------\n test/surface-pattern-operator.c |   36 +++++++++++++++--------------\n 4 files changed, 76 insertions(+), 80 deletions(-)\n\ncommit e8bc25fdb21340b0a5a25f7193fd0bc5de540a50\nAuthor: Andrea Canciani <ranma42@valium.area51.sns.it>\nDate:   Fri May 14 21:40:13 2010 +0200\n\n    test: add linear-gradient-extend and radial-gradient-extend\n    \n    Check that constant gradient to solid color optimization are only\n    applied if the extents permit it.\n\n test/Makefile.sources               |    2 +\n test/linear-gradient-extend.c       |   90 +++++++++++++++++++++++++++++++++++\n test/linear-gradient-extend.ref.png |  Bin 0 -> 371 bytes\n test/radial-gradient-extend.c       |   90 +++++++++++++++++++++++++++++++++++\n test/radial-gradient-extend.ref.png |  Bin 0 -> 466 bytes\n 5 files changed, 182 insertions(+)\n\ncommit a9d821b7a0f582b3d1b0175adee3350c81061a94\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri May 14 21:06:18 2010 +0200\n\n    gl: gl surfaces are only similar when they share the same device\n    \n    Fixes gl-surface-source test for gl target\n\n src/cairo-gl-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 435329a70f172c8cec72831dd7a2b2cfc0496342\nAuthor: Richard Procter <richard.n.procter@gmail.com>\nDate:   Fri May 14 14:48:46 2010 -0400\n\n    Bug 28100 - Font option CAIRO_HINT_METRICS_OFF unhonoured on win32\n    \n    Fix typo.  Ouch!\n\n src/cairo-win32-font.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 3a550eb2253588372b2c071b3c3152d5271c1aa2\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu May 13 21:17:19 2010 +0200\n\n    gl: Remove gradient optimizations\n    \n    These optimizations are done in cairo-gstate.c these days.\n\n src/cairo-gl-surface.c |   31 -------------------------------\n 1 file changed, 31 deletions(-)\n\ncommit 3b1c0a4bd66660780095e6016e3db451f34503a3\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri May 14 15:56:17 2010 +0200\n\n    fallback: Remove span renderer paths\n    \n    Those paths were broken, as they didn't properly translate the polygon\n    to the destination size. And rather than adding lots of code that allows\n    translation, it's easier to just delete this code.\n    \n    Note that the only user of the code was the GL backend anyway.\n\n src/cairo-surface-fallback.c |   67 ------------------------------------------\n 1 file changed, 67 deletions(-)\n\ncommit e3b2212bc5c4884eab356ae263b8318e10c379ac\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu May 13 15:14:29 2010 +0200\n\n    build: Fix pthread detection\n    \n    Incorporate the pthread detection code from the autoconf archive. Should\n    fix build on obscure archs that pretend to be UNIXy - like Mac OS X\n    Tiger.\n    \n    http://www.gnu.org/software/autoconf-archive/\n    http://www.gnu.org/software/autoconf-archive/ax_pthread.html\n\n build/ax-pthread.m4           |  283 +++++++++++++++++++++++++++++++++++++++++\n build/configure.ac.system     |   11 --\n configure.ac                  |   14 +-\n util/cairo-sphinx/Makefile.am |    5 +-\n util/cairo-trace/Makefile.am  |    2 +-\n 5 files changed, 292 insertions(+), 23 deletions(-)\n\ncommit acfbf95a0c7620359fd917224b5b391702740190\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu May 13 14:21:21 2010 +0200\n\n    test: Make global variables in new test static\n    \n    It seems there's no gcc flag that warns about this.\n\n test/zero-mask.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit c69143e3f9c95ab3937a7efb8e4de170c4edb648\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 12 21:14:36 2010 +0200\n\n    gl: Don't keep a temporary surface in the device\n    \n    We get circular references that way.\n    If it turns out later such a cache is critical, we'll need to invent a\n    way to avoid circling references. For now, just pretend it's not\n    important.\n\n src/cairo-gl-glyphs.c  |   36 ++++++++----------------------------\n src/cairo-gl-private.h |    1 -\n 2 files changed, 8 insertions(+), 29 deletions(-)\n\ncommit ec1ca17b71b41159ea8754d42954863b62623536\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu May 13 12:07:53 2010 +0200\n\n    gl: Don't create 0x0 surfaces\n    \n    We get a very annoyed libGL if we try to create 0x0 textures, so we\n    return an image surface instead.\n    \n    Tested by the zero-mask test.\n\n src/cairo-gl-surface.c |    4 ++++\n 1 file changed, 4 insertions(+)\n\ncommit 108e3f5031fc16843197382af78af299b19ef290\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu May 13 12:01:39 2010 +0200\n\n    Use a solid color for 0xN and Nx0 surfaces\n    \n    This gets around the need to check for 0-sized surfaces in the backends.\n\n src/cairo-gstate.c |   15 +++++++++++++++\n 1 file changed, 15 insertions(+)\n\ncommit 18c963824ebbb0e7054e682ecb5664a282a58552\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu May 13 11:56:22 2010 +0200\n\n    Make _cairo_color_equal() work for unmultiplied colors, too\n    \n    Color stop colors are unmultiplied, and we use it there.\n\n src/cairo-color.c |   10 ++++++++--\n 1 file changed, 8 insertions(+), 2 deletions(-)\n\ncommit 7bd8d0db1f4ac448c93d6d342726f64a0d6300e3\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu May 13 11:23:33 2010 +0200\n\n    image: Fix wholly unbounded fixup\n    \n    Tested by zero-mask test.\n\n src/cairo-image-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 8aa50b5a7873b8317d0593105497607dbb2fae1d\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu May 13 10:27:37 2010 +0200\n\n    cairo_paint_with_alpha(cr, 0.0) is only a noop when bounded by mask\n\n src/cairo.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit ee32dfb3de035e73cb8c2073c0826daf244e3845\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu May 13 10:04:49 2010 +0200\n\n    test: Add a test for various zero mask operations\n\n test/Makefile.sources        |    3 +-\n test/zero-mask.c             |  199 ++++++++++++++++++++++++++++++++++++++++++\n test/zero-mask.ref.png       |  Bin 0 -> 402 bytes\n test/zero-mask.rgb24.ref.png |  Bin 0 -> 382 bytes\n 4 files changed, 201 insertions(+), 1 deletion(-)\n\ncommit 986ae4232067d4f33931d98fb6324871a1025633\nAuthor: Owen W. Taylor <otaylor@fishsoup.net>\nDate:   Thu Feb 25 15:18:22 2010 -0500\n\n    language bindings guide: clarify mapping for cairo_pattern_create_rgb[a]\n    \n    Clarify that cairo_pattern_create_rgb() and cairo_pattern_create_rgba()\n    should be be overloaded as a single constructor for SolidPattern, but\n    instead should be static methods.\n\n doc/public/language-bindings.xml |    9 +++++++--\n 1 file changed, 7 insertions(+), 2 deletions(-)\n\ncommit 18b48a6ebc044c07f08bafd0abcb68c595c5746c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 13 10:00:18 2010 +0100\n\n    Make cairo_color_stop_t a unique type.\n    \n    Hopefully reduce the occurrence of the confusion between the\n    premultiplied shorts in cairo_color_t and the non-premultiplied shorts\n    in cairo_color_stop_t.\n    \n    The existence of the two separate types is debatable and open for\n    review.\n\n src/cairo-color.c         |    4 ++--\n src/cairo-gstate.c        |    2 +-\n src/cairo-pattern.c       |    2 +-\n src/cairo-pdf-surface.c   |    9 ---------\n src/cairo-ps-surface.c    |   32 ++------------------------------\n src/cairo-svg-surface.c   |    4 ++--\n src/cairo-types-private.h |   17 ++++++++++++++++-\n src/cairoint.h            |    4 ++--\n 8 files changed, 26 insertions(+), 48 deletions(-)\n\ncommit dfa2544f158930b002df74e676f3ef7aeeee1bd4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 13 09:52:39 2010 +0100\n\n    color: Special case comparing color stops.\n    \n    color stops are not premultiplied so we need to handle them carefully\n    when comparing. The next step will be to make cairo_color_stop_t a\n    unique type to prevent this mistake again.\n\n src/cairo-color.c         |   30 ++++++++++++++++++++++++++++++\n src/cairo-gl-surface.c    |    4 ++--\n src/cairo-gstate.c        |    4 ++--\n src/cairo-pattern.c       |    6 +++---\n src/cairoint.h            |    4 ++++\n src/drm/cairo-drm-intel.c |    2 +-\n 6 files changed, 42 insertions(+), 8 deletions(-)\n\ncommit 4741d33cf67409a6fddbc32a5d0c8d68224cd939\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 13 09:31:10 2010 +0100\n\n    gstate: Don't reduce solid source and mask for SOURCE and CLEAR\n    \n    Not all operators are created equal, and this optimization breaks for\n    SOURCE and CLEAR where the mask operates on the clip and not the source.\n\n src/cairo-gstate.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit ee871940ffe229ed285e618566e45c7d28c5857c\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Thu May 13 01:54:39 2010 +0200\n\n    Revert bd672d080ca0036ef1b88d26583e6af36f541461\n    on src/cairo-composite-rectangles.c\n    \n    The extent of the operation can be larger than the source if\n    the operator is not bounded by the source.\n    \n    Fixes clip-unbounded, operator-source, surface-pattern-operator\n\n src/cairo-composite-rectangles.c |    7 +++----\n 1 file changed, 3 insertions(+), 4 deletions(-)\n\ncommit 0870c6fb5b39dcc04fa376123848adde2d06d2ce\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Apr 15 20:31:24 2010 +0100\n\n    gcc-4.5 warnings and optimisation flags.\n\n build/configure.ac.warnings |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit cf0933a05aedb66b5d8999c84b935349b25dd974\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Apr 12 10:42:14 2010 +0100\n\n    gallium: Refresh.\n    \n    Catch up with changes in APIs, still no substance and the integration\n    with winsys handles needs review.\n\n boilerplate/Makefile.win32.features |    8 -\n build/Makefile.win32.features-h     |    1 -\n src/Makefile.win32.features         |    8 -\n src/drm/cairo-drm-gallium-surface.c |  514 +++++++++++++++++++++--------------\n 4 files changed, 317 insertions(+), 214 deletions(-)\n\ncommit bd672d080ca0036ef1b88d26583e6af36f541461\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Mar 26 19:37:08 2010 +0000\n\n    drm: code dump, sorry.\n    \n    Lots upon lots of tiny fixes mixed in with experimental code. :(\n\n boilerplate/Makefile.win32.features     |   18 +\n boilerplate/cairo-boilerplate-drm.c     |   12 +-\n build/Makefile.win32.features           |    1 +\n build/Makefile.win32.features-h         |    4 +\n build/configure.ac.features             |    1 +\n configure.ac                            |   13 +\n src/Makefile.sources                    |    7 +\n src/Makefile.win32.features             |   22 +\n src/cairo-boxes-private.h               |    4 +\n src/cairo-boxes.c                       |   31 +\n src/cairo-composite-rectangles.c        |    7 +-\n src/cairo-drm-xr.h                      |   66 +\n src/cairo-drm.h                         |    4 +-\n src/cairo-fixed-private.h               |   18 +-\n src/cairo-freelist-private.h            |    1 -\n src/cairo-freelist.c                    |    7 +-\n src/cairo-image-surface.c               |    2 +-\n src/cairo-list-private.h                |   31 +-\n src/cairoint.h                          |    7 +\n src/drm/cairo-drm-i915-glyphs.c         |   82 +-\n src/drm/cairo-drm-i915-private.h        |  153 +-\n src/drm/cairo-drm-i915-shader.c         |  866 ++++++-----\n src/drm/cairo-drm-i915-spans.c          |  146 +-\n src/drm/cairo-drm-i915-surface.c        | 1884 ++++++++++++++++++------\n src/drm/cairo-drm-i965-glyphs.c         |   36 +-\n src/drm/cairo-drm-i965-private.h        |    2 +-\n src/drm/cairo-drm-i965-shader.c         |   11 +-\n src/drm/cairo-drm-i965-spans.c          |   16 +-\n src/drm/cairo-drm-i965-surface.c        |  146 +-\n src/drm/cairo-drm-intel-debug.c         |    1 +\n src/drm/cairo-drm-intel-ioctl-private.h |   25 +\n src/drm/cairo-drm-intel-private.h       |   92 +-\n src/drm/cairo-drm-intel-surface.c       |   90 +-\n src/drm/cairo-drm-intel.c               |  530 ++++---\n src/drm/cairo-drm-private.h             |   10 +-\n src/drm/cairo-drm-radeon-surface.c      |   60 +-\n src/drm/cairo-drm-surface.c             |   37 +-\n src/drm/cairo-drm-xr.c                  | 2377 +++++++++++++++++++++++++++++++\n 38 files changed, 5416 insertions(+), 1404 deletions(-)\n\ncommit c8fba4960339797521afbf8068fcbe62d064f5dc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Apr 3 15:38:04 2010 +0100\n\n    rtree: Remove the unused evict hook.\n\n src/cairo-gl-glyphs.c            |    3 +--\n src/cairo-rtree-private.h        |    4 +---\n src/cairo-rtree.c                |   13 +------------\n src/drm/cairo-drm-i915-surface.c |    3 +--\n src/drm/cairo-drm-intel.c        |    2 +-\n 5 files changed, 5 insertions(+), 20 deletions(-)\n\ncommit 2a0726337368462046ef84d9be4cf59734b39806\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Apr 3 15:30:18 2010 +0100\n\n    rtree: defer propagating pinned nodes until eviction.\n    \n    Only during infrequent eviction do we require absolute knowledge of\n    which graph of nodes are in use and thus pinned. So during the common\n    use of querying the glyph cache, we just mark the leaf as used. Then we\n    need to make space for a new glyph, we move the parents of the left\n    nodes from the evictable list to the pinned list.\n\n src/cairo-rtree-private.h |   12 ++++++++++--\n src/cairo-rtree.c         |   33 +++++++++++----------------------\n 2 files changed, 21 insertions(+), 24 deletions(-)\n\ncommit cbe8fd0794adaccdf3eb15eef780a030e3d51784\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Apr 3 14:56:25 2010 +0100\n\n    script: Avoid the expensive of the redundant memset.\n    \n    As we are about to immediately fill the entire image, allocate the\n    memory ourselves to avoid the redundant memset performed by pixman.\n\n util/cairo-script/cairo-script-operators.c |   39 ++++++++++++++++++----------\n 1 file changed, 26 insertions(+), 13 deletions(-)\n\ncommit b9f7a4b5261b6d4e7bdbb5cc56d78d50ad1bd4a7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Apr 3 14:48:36 2010 +0100\n\n    script: Don't hash the entire image.\n    \n    The reuse hit rate is very small, and most images are quickly\n    distinguished in the first few bytes... Though perhaps not for video as\n    in the swfdec-youtube case...\n\n util/cairo-script/cairo-script-operators.c |   35 +++++++++++++++++++---------\n 1 file changed, 24 insertions(+), 11 deletions(-)\n\ncommit a85c6c1e36273d534f01ade0714b0592b6bed5ab\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Apr 3 14:09:56 2010 +0100\n\n    gstate: reduce a couple more operators\n\n src/cairo-gstate.c |   15 ++++++++++++++-\n 1 file changed, 14 insertions(+), 1 deletion(-)\n\ncommit a3cb52e4037db9e565d32f85d69c364b606555e9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Apr 3 13:36:18 2010 +0100\n\n    simplify pattern extents for translation matrices\n\n src/cairo-pattern.c |   22 ++++++++++++++--------\n 1 file changed, 14 insertions(+), 8 deletions(-)\n\ncommit d45c7dc62d6b036bbbe85c3c1951807e055930d9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Apr 1 17:09:11 2010 +0100\n\n    xcb: discard glyph mask and use dst directly when possible.\n\n boilerplate/cairo-boilerplate-xcb.c |   12 +++--\n src/cairo-gstate.c                  |   18 ++++++--\n src/cairo-pattern.c                 |    2 +-\n src/cairo-xcb-surface-render.c      |   85 ++++++++++++++++++++++++++++-------\n 4 files changed, 92 insertions(+), 25 deletions(-)\n\ncommit a8b611ea8eb90f190ee3a9e7999e08e2d865ac43\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Mar 27 08:23:10 2010 +0000\n\n    clip: Fill instead of creating intermediate surfaces.\n\n src/cairo-clip.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit fb53d05a69d0291fe68dfe8669b5c1f7636ede1a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed May 12 20:06:34 2010 +0100\n\n    test: Remove pthread_yield()\n    \n    I accidentally pushed this debugging left-over from when I was tracking\n    down a race in memfault. Remove it so that the test suite compiles on\n    more minimal pthread setups.\n\n test/pthread-same-source.c |    2 --\n test/pthread-show-text.c   |    2 --\n test/pthread-similar.c     |    2 --\n 3 files changed, 6 deletions(-)\n\ncommit cdd98dba6a62360071aebb6dbbb6be2ab6be368f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed May 12 19:35:15 2010 +0100\n\n    win32-printing: compile fix.\n    \n    Missing arg for _cairo_recording_surface_replay_region().\n\n src/cairo-win32-printing-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 35307fc66f649cc042ec07b7b79277d7ee5987f3\nAuthor: Jonathan Kew <jfkthame@gmail.com>\nDate:   Tue May 11 15:12:01 2010 -0400\n\n    win32: Grow glyph extents to account for ClearType\n    \n    Add extra pixel on each side of the glyph's black box returned by\n    GetGlyphOutlineW, to avoid clipping ClearType pixels.\n    \n    From https://bugzilla.mozilla.org/show_bug.cgi?id=445087\n\n src/cairo-win32-font.c |   13 +++++++++++++\n 1 file changed, 13 insertions(+)\n\ncommit d65e8064c0bd3f2d5ad200493bfefb89aefbba55\nAuthor: Robert O'Callahan <robert@ocallahan.org>\nDate:   Tue May 11 13:59:58 2010 -0400\n\n    Ensure the quartz backend returns the first stop for negative positions on the gradient line of a nonrepeating linear gradient.\n    \n    I discovered a small bug in cairo-quartz gradients. If you have multiple stops\n    at position 0, then cairo-quartz pads with the *last* stop at position 0,\n    instead of the first stop at position 0. This patch fixes that.\n    \n    From https://bugzilla.mozilla.org/show_bug.cgi?id=513395\n\n src/cairo-quartz-surface.c |   24 ++++++++++++++++++++++--\n 1 file changed, 22 insertions(+), 2 deletions(-)\n\ncommit ce27db9a558cbf4065b18aed55cc706fc0a6d128\nAuthor: Robert O'Callahan <robert@ocallahan.org>\nDate:   Tue May 11 13:59:52 2010 -0400\n\n    Don't repeat a Quartz gradient more times than necessary, to avoid Quartz quality problems when there are lots of repeated color stops.\n    \n    -- Add a parameter to _cairo_quartz_setup_source so we can pass down the\n    extents of the object we're drawing\n    -- Compute fill/stroke/glyph extents and pass them down in the cases we need to\n    (repeating/reflecting gradients)\n    -- Pass those extents on down to where we set up the gradients\n    -- Make _cairo_quartz_setup_linear_source fall back to pixman for the\n    degenerate case where the linear gradient vector has no length\n    -- In CreateRepeatingRadialGradientFunction and\n    CreateRepeatingLinearGradientFunction, use the object extents (or surface\n    extents, for the paint() case) instead of the clip box to calculate the\n    parameters for the gradient\n    -- I've changed the way CreateRepeatingLinearGradientFunction calculates the\n    repetition count. The new approach gives much more precise bounds on the number\n    of repetitions needed (and is very similar to what we do for radial gradients).\n    This is important because if we specify a much larger input range than we\n    really need for our gradient color function, Quartz samples it too coarsely\n    over the range we actually care about, and the gradients look bad.\n    \n    For example, suppose start = (5,0), end = (6,10), the CTM is identity and the\n    bounds we want to cover is (0,0)-(10,10). I think the current approach sets up\n    the gradient to be repeated 10 times. In fact only 3 repetitions are needed.\n    \n    Also, using 'width' here didn't look right:\n    -       y_rep_end = (int) ceil((surface->extents.width - MAX(mstart.y, mend.y))\n    / dy\n    \n    From https://bugzilla.mozilla.org/show_bug.cgi?id=508730\n\n src/cairo-quartz-surface.c |  261 ++++++++++++++++++++++++++++++--------------\n 1 file changed, 179 insertions(+), 82 deletions(-)\n\ncommit 7b4e63d5b8bda8e9ea1f6455d779070f64f07f6f\nAuthor: Robert O'Callahan <robert@ocallahan.org>\nDate:   Tue May 11 13:59:43 2010 -0400\n\n    Clean up Quartz gradient code by moving some local variables to static const globals.\n    \n    From https://bugzilla.mozilla.org/show_bug.cgi?id=508730\n\n src/cairo-quartz-surface.c |   31 +++++++++++++------------------\n 1 file changed, 13 insertions(+), 18 deletions(-)\n\ncommit 8302952dcff20a1d2de194152ace810c7056f994\nAuthor: Robert O'Callahan <robert@ocallahan.org>\nDate:   Tue May 11 13:58:10 2010 -0400\n\n    quartz: Don't fallback to pixman for repeating radial gradients.\n    \n    Figuring out where the outer circle should move to is tricky. I hope the\n    algebra in there is understandable.\n    \n    This is a nice performance improvement, probably because we avoid painting the\n    gradient over the entire clipBox (which is usually the entire surface).\n    \n    I tried to write reftests that compared a repeating radial gradient to a\n    non-repeating gradient with manually repeated stops, but it didn't work because\n    the rasterization was slightly different --- I'm not sure why.\n    \n    This patch also forces us to use pixman for all degenerate cases where the\n    circles intersect. This at least makes us consistent across platforms.\n    \n    From https://bugzilla.mozilla.org/show_bug.cgi?id=508227\n\n src/cairo-quartz-surface.c |  203 +++++++++++++++++++++++++++++++++++++++-----\n 1 file changed, 180 insertions(+), 23 deletions(-)\n\ncommit 1bda2334b32394a821e6286fbc76617e68da3895\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 11 13:51:38 2010 +0100\n\n    trace: And for the bonus round... Make it compile.\n\n util/cairo-trace/trace.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit b23f3bd20450aae764f9f9362c560b00bf68636b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 11 13:54:08 2010 +0100\n\n    trace: Try wrapping FT_Open_Face()\n    \n    We have to be careful to disambuigate an internal call by FreeType from\n    the application.\n\n util/cairo-trace/trace.c |   38 ++++++++++++++++++++++++++------------\n 1 file changed, 26 insertions(+), 12 deletions(-)\n\ncommit ee446910aa1db0ca0b54791a2ef3bb24b277c9a4\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Mon May 10 15:06:25 2010 -0400\n\n    Add an additional set parantheses around the container_of macro\n    \n    The non-__GNUC__ version of the container_of macro would do wrong\n    when used like container_of(...)-> because '->' binds tighter\n    than the cast in the container_of macro. Adding an additional\n    set of parantheses fixes this.\n\n src/cairoint.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit e540d040bddc717f17e0e2510cffc0bc3cb41ccd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon May 10 13:36:53 2010 +0100\n\n    xcb: trivial memfault fixes.\n    \n    The first fixes required to kick-start memfault testing of the xcb\n    backend.\n\n boilerplate/cairo-boilerplate-xcb.c |   22 +++++++++++---\n src/cairo-xcb-connection-render.c   |   35 +++++++++++++++------\n src/cairo-xcb-connection.c          |   57 ++++++++++++++++++++++++-----------\n src/cairo-xcb-private.h             |    2 +-\n src/cairo-xcb-screen.c              |   15 ++++-----\n src/cairo-xcb-surface-core.c        |    1 -\n src/cairo-xcb-surface-render.c      |   32 +++++++++++++++++---\n src/cairo-xcb-surface.c             |    5 +--\n src/cairo-xlib-xcb-surface.c        |    1 -\n 9 files changed, 123 insertions(+), 47 deletions(-)\n\ncommit 8b486db9a9d74b40df296382eb1833bc40ae791a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon May 10 12:45:31 2010 +0100\n\n    region: _cairo_region_create_in_error()\n    \n    Avoid leaks when reporting memfault associated with constructing\n    regions.\n\n src/cairo-path-fill.c      |    7 ++---\n src/cairo-region-private.h |    3 +++\n src/cairo-region.c         |   63 ++++++++++++++++++++++++++++++++++++++------\n 3 files changed, 60 insertions(+), 13 deletions(-)\n\ncommit 9d863cd3942c3086c24d67305f7a5892604d0eeb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat May 8 18:20:11 2010 +0100\n\n    xcb: Find the correct xcb_screen_t for faking Screen\n    \n    When choosing the xcb_screen_t to use for the xlib-xcb backing surface,\n    it helps if it matches the screen used to generate similar surfaces and\n    snapshots - otherwise we end up pulling the image back from the XServer\n    every time we want to use the Picture.\n\n src/cairo-xlib-xcb-surface.c |   23 +++++++++++++++++++++--\n 1 file changed, 21 insertions(+), 2 deletions(-)\n\ncommit 448d3571088463fc61641badcdfdc8c0002ae12a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat May 8 09:59:54 2010 +0100\n\n    xcb: Upload images in place.\n    \n    A common operation is to store an image in a similar surface, so\n    construct a fast path to avoid the allocation and double-blit through a\n    temporary pixmap.\n\n src/cairo-xcb-private.h        |    5 ++\n src/cairo-xcb-surface-render.c |  169 +++++++++++++++++++++++++++++++++++++++-\n src/cairo-xcb-surface.c        |   31 ++++----\n 3 files changed, 189 insertions(+), 16 deletions(-)\n\ncommit e48cbd3b47a6e4f7c1f66b3085df41546460e477\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat May 8 09:56:46 2010 +0100\n\n    xcb: Reset picture after failed snapshot.\n    \n    Clear the local picture variable if we cannot use the snapshot so that\n    we are forced to create a new and valid picture.\n\n src/cairo-xcb-surface-render.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 4e3c19833ef8631c1f1cd54870c0a86d88252886\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri May 7 21:30:13 2010 +0100\n\n    test: Force cairo-test-suite to return SUCCESS\n    \n    Set the CAIRO_TEST_FORCE_PASS environment variable to run through the\n    test suite and ignore errors. Useful for forcing distcheck to continue\n    past a broken test suite.\n\n test/cairo-test-runner.c |   10 ++++++++++\n 1 file changed, 10 insertions(+)\n\ncommit ad8abc01105f02a05497969b6b5ec2c8742daeb2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri May 7 21:28:58 2010 +0100\n\n    subsurface: Don't double apply device offset for deep subsurfaces.\n    \n    If we have a subsurface of a subsurface then the device offset has\n    already been applied to the extents that we use to offset the new\n    subsurface.\n\n src/cairo-surface-subsurface.c |   10 +++++-----\n 1 file changed, 5 insertions(+), 5 deletions(-)\n\ncommit d2a250ad33dcd1a3960b07d2f0270266a3f3f106\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri May 7 20:36:33 2010 +0200\n\n    gl: Make the shader implementation per-context, not global\n\n src/cairo-gl-device.c  |    8 +---\n src/cairo-gl-glyphs.c  |    4 +-\n src/cairo-gl-private.h |   37 ++++++++++++-----\n src/cairo-gl-shaders.c |  105 +++++++++++++++++++++++++-----------------------\n src/cairo-gl-surface.c |   89 +++++++++++++++++++++-------------------\n 5 files changed, 131 insertions(+), 112 deletions(-)\n\ncommit 4571055c46e82cbb6d3ab47860d63e400b338238\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 5 19:36:46 2010 +0200\n\n    gl: Print GL errors when releasing the device\n    \n    Don't scatter calls to error printing around everywhere, instead do it\n    in the one place where it matters.\n    \n    Also, convert the functions to macros, so we can use __FILE__ and\n    __LINE__ when printing a warning\n\n src/cairo-gl-private.h |   15 ++++++++++-----\n src/cairo-gl-surface.c |   22 +---------------------\n 2 files changed, 11 insertions(+), 26 deletions(-)\n\ncommit 59b31aeed9b3ec2a1ac6da188ef5e86d20626662\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sat May 8 15:09:39 2010 +0200\n\n    gl: Make check_span_renderer() call not require a device lock\n    \n    Note that we didn't lock the device previously, so the function was\n    broken.\n\n src/cairo-gl-device.c  |    1 +\n src/cairo-gl-private.h |    7 +++++++\n src/cairo-gl-surface.c |    5 +++--\n 3 files changed, 11 insertions(+), 2 deletions(-)\n\ncommit 81f4dd65a32efae645b826b84e8382f7bf7a9b2d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri May 7 22:35:18 2010 +0100\n\n    cairo: Special case cairo_t with NULL_POINTER\n    \n    Avoid allocation for the potential user error of attempting to use\n    cairo_create(NULL).\n\n src/cairo.c |   24 +++++++++++++++++++++++-\n 1 file changed, 23 insertions(+), 1 deletion(-)\n\ncommit a61570a55e70040ffcf8ff3cb2c7943e71a5e2a0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri May 7 22:18:52 2010 +0100\n\n    test/copy-path: memfault status checks.\n\n test/copy-path.c |   61 ++++++++++++++++++++++++++++++++++--------------------\n 1 file changed, 38 insertions(+), 23 deletions(-)\n\ncommit e6180d1d5e29a91f1bfc20956bb017ab74fb8b8e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri May 7 22:18:10 2010 +0100\n\n    surface-fallback: Only destroy the clip after it has been initialized.\n    \n    More memfault detected error path errors.\n\n src/cairo-surface-fallback.c |    7 ++++---\n 1 file changed, 4 insertions(+), 3 deletions(-)\n\ncommit 01a208f7e3785254dc101f09a73943ec7cfb1d6e\nAuthor: timeless <timeless@bemail.org>\nDate:   Fri May 7 10:24:49 2010 -0400\n\n    Remove useless null checks of a and b in _cairo_path_fixed_equal\n    \n    'a' and 'b' are dereferenced before being checked for null.\n    \n    From https://bugzilla.mozilla.org/show_bug.cgi?id=555706\n\n src/cairo-path-fixed.c |   22 ++++++++--------------\n 1 file changed, 8 insertions(+), 14 deletions(-)\n\ncommit 0068d9b5cd09a7aa0c5a2ab4da97ca181934ff56\nAuthor: Jonathan Kew <jfkthame@gmail.com>\nDate:   Fri May 7 10:16:32 2010 -0400\n\n    quartz: Work around bad glyph extents returned by CoreGraphics for empty glyphs in Al Bayan font\n    \n    This resolves the problem by checking for the crazy glyph bbox result from\n    CoreGraphics, and replacing it with an empty rect.\n    \n    From https://bugzilla.mozilla.org/show_bug.cgi?id=534260\n\n src/cairo-quartz-font.c |   10 ++++++++++\n 1 file changed, 10 insertions(+)\n\ncommit c5d9643417690380c102bf0b6ad195cb264d3feb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri May 7 11:24:28 2010 +0100\n\n    doc: regen\n\n doc/public/tmpl/cairo-font-face.sgml    |    3 +++\n doc/public/tmpl/cairo-font-options.sgml |    4 ++++\n doc/public/tmpl/cairo-ft.sgml           |    3 +++\n doc/public/tmpl/cairo-image.sgml        |    5 +++++\n doc/public/tmpl/cairo-matrix.sgml       |    3 +++\n doc/public/tmpl/cairo-paths.sgml        |    3 +++\n doc/public/tmpl/cairo-pattern.sgml      |    3 +++\n doc/public/tmpl/cairo-pdf.sgml          |    3 +++\n doc/public/tmpl/cairo-png.sgml          |    3 +++\n doc/public/tmpl/cairo-ps.sgml           |    3 +++\n doc/public/tmpl/cairo-quartz-fonts.sgml |    3 +++\n doc/public/tmpl/cairo-quartz.sgml       |    3 +++\n doc/public/tmpl/cairo-scaled-font.sgml  |    3 +++\n doc/public/tmpl/cairo-status.sgml       |    6 ++++++\n doc/public/tmpl/cairo-surface.sgml      |    9 +++++++++\n doc/public/tmpl/cairo-svg.sgml          |    3 +++\n doc/public/tmpl/cairo-text.sgml         |    3 +++\n doc/public/tmpl/cairo-transforms.sgml   |    3 +++\n doc/public/tmpl/cairo-types.sgml        |    3 +++\n doc/public/tmpl/cairo-user-fonts.sgml   |    4 ++++\n doc/public/tmpl/cairo-version.sgml      |    5 +++++\n doc/public/tmpl/cairo-win32-fonts.sgml  |    3 +++\n doc/public/tmpl/cairo-win32.sgml        |    3 +++\n doc/public/tmpl/cairo-xlib-xrender.sgml |    3 +++\n doc/public/tmpl/cairo-xlib.sgml         |    3 +++\n doc/public/tmpl/cairo.sgml              |    3 +++\n 26 files changed, 93 insertions(+)\n\ncommit b9e9ff59348412a1f1f2c57d6185c84f77874c26\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri May 7 11:21:50 2010 +0100\n\n    subsurface: Include device offset in extents\n    \n    Adjust the subsurface extents so that the user specifies the extents in\n    world space rather than device space.\n\n src/cairo-surface-subsurface.c |   10 ++++++++--\n 1 file changed, 8 insertions(+), 2 deletions(-)\n\ncommit 5e3b28ffeac3fc7239c7ada6992e4794a27b0818\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Thu May 6 22:27:09 2010 -0400\n\n    Remove comma from the end of the CAIRO_PATTERN_ACQUIRE enum\n\n src/cairoint.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit cc8442514ab15f08708ecb26f499c764a7d171f4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 6 21:50:16 2010 +0100\n\n    gl: Enable fixed-function without glsl.\n    \n    Through a very simple mistake we were triggering fallbacks after\n    detecting we were not able to perform the composite using GLSL -- we\n    were just returning the UNSUPPORTED status instead of enabling the\n    fixed-function path.\n\n src/cairo-gl-surface.c |   56 +++++++++++++++++++++++++++---------------------\n 1 file changed, 31 insertions(+), 25 deletions(-)\n\ncommit 30d358e098353af24f16cdb7efe41f10f276f559\nAuthor: Metal Sonic <kidlinux96@gmail.com>\nDate:   Thu May 6 16:07:43 2010 -0400\n\n    Update license blocks to use \"Mozilla Foundation\" instead of \"Mozilla Corporation\"\n    \n    From https://bugzilla.mozilla.org/show_bug.cgi?id=507387\n\n src/cairo-fixed-private.h        |    2 +-\n src/cairo-fixed-type-private.h   |    2 +-\n src/cairo-malloc-private.h       |    2 +-\n src/cairo-quartz-font.c          |    2 +-\n src/cairo-quartz-image-surface.c |    2 +-\n src/cairo-quartz-image.h         |    2 +-\n src/cairo-quartz-surface.c       |    2 +-\n src/cairo-quartz.h               |    2 +-\n 8 files changed, 8 insertions(+), 8 deletions(-)\n\ncommit 506636e19edcdb656c94f61c915c9d49829dade8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 6 17:21:59 2010 +0100\n\n    cairo: stash a number of contexts for use with NO_MUTEX\n    \n    The implementation is the same as the atomic one (bar the use of atomic\n    primitives to manipulate the occupancy!).\n    \n    Patch based on the original by Jeff Muizelaar.\n\n src/cairo.c |   33 ++++++++++++++++++++++++++++++++-\n 1 file changed, 32 insertions(+), 1 deletion(-)\n\ncommit 91dfee420c3e9d85e5cd4f2cec6dc708c0e471a2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 6 17:03:56 2010 +0100\n\n    device: Reorder finalization so that user data is destroyed last.\n    \n    As the user is likely to attach the underlying resources to the device\n    for automatic collection upon finalization, it is important that the\n    user data is then destroy last (so that those resources are still\n    available in the surface and device cleanup routines).\n\n src/cairo-device.c  |    9 +++++++--\n src/cairo-surface.c |    4 ++--\n 2 files changed, 9 insertions(+), 4 deletions(-)\n\ncommit 2658d7ef5f8f7e06929f4b1cae64e5312db24ec4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 6 17:02:39 2010 +0100\n\n    test/gl-surface-source: Attach GLXContext to device user data.\n    \n    As we actually use the GLXContext to create the device, we only want to\n    free those resources upon the final unreference of the device (and not\n    the initial surface).\n\n test/gl-surface-source.c |   26 +++++++++++---------------\n 1 file changed, 11 insertions(+), 15 deletions(-)\n\ncommit f5167dc2e1a13d8c4e5d66d7178a24b9b5e7ac7a\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Thu May 6 11:43:52 2010 -0400\n\n    Add an implementation of ffs() for MSVC\n\n src/cairo-compiler-private.h |   15 +++++++++++++++\n 1 file changed, 15 insertions(+)\n\ncommit a2a2bd62ff37e2642f671ca7ebf26954e1856abe\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 6 14:39:30 2010 +0100\n\n    surface-fallback: Handle memfaults during clipping.\n    \n    Don't be lazy, propagate the error rather than asserting.\n\n src/cairo-surface-fallback.c |   26 +++++++++++++++-----------\n 1 file changed, 15 insertions(+), 11 deletions(-)\n\ncommit 2e3acee410ff127d4557ca8191625338cd225313\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 6 14:38:55 2010 +0100\n\n    test: Add gl-surface-source\n    \n    Exercise using GL sources.\n\n test/Makefile.am                       |    7 ++\n test/Makefile.sources                  |    3 +\n test/gl-surface-source.argb32.ref.png  |  Bin 0 -> 377 bytes\n test/gl-surface-source.c               |  115 ++++++++++++++++++++++++++++++++\n test/gl-surface-source.image16.ref.png |  Bin 0 -> 305 bytes\n test/gl-surface-source.rgb24.ref.png   |  Bin 0 -> 301 bytes\n 6 files changed, 125 insertions(+)\n\ncommit 75d8550891b8b2c09200aaaa812c6c9332161cd7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 6 13:50:27 2010 +0100\n\n    test/clip-contexts: Free secondary context\n\n test/clip-contexts.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit bf83bf00a75343f7d1dcd15dc4eeec1b1a4b9428\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 6 10:53:48 2010 +0100\n\n    test: Add subsurface-image-repeat\n    \n    Test handling of source clipping with an image - principally to check\n    handling of mime types and zero-copy image snapshotting in the vector\n    surfaces and ensure that they work with subsurface patterns as well.\n\n test/Makefile.am                             |    2 +\n test/Makefile.sources                        |    1 +\n test/subsurface-image-repeat.c               |   70 ++++++++++++++++++++++++++\n test/subsurface-image-repeat.image16.ref.png |  Bin 0 -> 776 bytes\n test/subsurface-image-repeat.ref.png         |  Bin 0 -> 915 bytes\n 5 files changed, 73 insertions(+)\n\ncommit 88986fdbef795c61cd60231046663d3cd80b4947\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 6 10:46:49 2010 +0100\n\n    xlib: Remove reference counting for cairo_xlib_screen_t\n    \n    The screen is owned by the cairo_xlib_display_t device, so we can\n    simplify and close the refleak by removing the surplus reference\n    counting.\n\n src/cairo-xlib-display.c |   84 +++++++++++-----------------------------------\n src/cairo-xlib-private.h |   22 +++---------\n src/cairo-xlib-screen.c  |   47 ++++++--------------------\n src/cairo-xlib-surface.c |   38 ++++++---------------\n src/cairo-xlib-visual.c  |    2 +-\n 5 files changed, 46 insertions(+), 147 deletions(-)\n\ncommit 632fabc77d89254e2e6915148fa870f23c2a5722\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 6 10:10:38 2010 +0100\n\n    xlib: Convert visual array to a cairo_list_t\n    \n    It's simpler and more memory efficient.\n\n src/cairo-xlib-private.h |    4 ++-\n src/cairo-xlib-screen.c  |   76 ++++++++++++++--------------------------------\n 2 files changed, 26 insertions(+), 54 deletions(-)\n\ncommit 20d75bdadc897be238ceb4d2d02f079e469144e4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 6 10:03:36 2010 +0100\n\n    xlib: Remove screen->has_render\n    \n    Use the info from the display instead.\n\n src/cairo-xlib-private.h |    1 -\n src/cairo-xlib-screen.c  |   17 ++++-------------\n 2 files changed, 4 insertions(+), 14 deletions(-)\n\ncommit 9e0b716ecf1b27d74e63f25a055d8120d8d53309\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 6 09:58:46 2010 +0100\n\n    xlib: Remove obsolete comment, there is no race anymore\n    \n    The display lock is now held for the duration of the screen creation, so\n    there is no race. Remove the false comment.\n\n src/cairo-xlib-screen.c |    4 ----\n 1 file changed, 4 deletions(-)\n\ncommit 62346c500a7421e30b3054fdcc07fc78a18da96e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 6 09:37:02 2010 +0100\n\n    xlib: Ensure the global display mutex is initialized before use.\n\n src/cairo-xlib-display.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit fb6caf08ae5ccf8f8c2c251d32fd98aacbcebdcc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 6 09:30:41 2010 +0100\n\n    image: Propagate error instead of asserting.\n    \n    Apparently we can get to this point without evaluating the clip surface,\n    so return the error status rather than assert.\n\n src/cairo-image-surface.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit 5e95c62bbb0cb28ee22af8f97267ce2da72cf47a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 6 09:09:22 2010 +0100\n\n    clip: Propagate failure from retrieving the previous clip surface.\n\n src/cairo-clip.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit a6ee7aea8ac11a9e5a9b58e17e881db9666a2b24\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed May 5 10:52:39 2010 +0100\n\n    test: Add xlib-expose-event.image16.ref.png\n\n test/Makefile.am                       |    1 +\n test/xlib-expose-event.image16.ref.png |  Bin 0 -> 30332 bytes\n 2 files changed, 1 insertion(+)\n\ncommit ded2dc8faaa3a48c84a31422a31c64595a6eaf8a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed May 5 14:44:55 2010 +0100\n\n    scaled-font: Pluck last glyph from the most recent page.\n    \n    In converting to cairo_list_t, it helps to preserve the semantics of\n    appending the page to the end of the list where it is expected to be\n    plucked in the event of an allocation failure.\n\n src/cairo-scaled-font.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit fa937913e06bc295750538be45aa83eb42332fb4\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Wed May 5 21:35:11 2010 +0930\n\n    PS: Add missing 'q' when resetting clip path\n\n src/cairo-ps-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 9c594d8b405eba09b07c0a438f5311f5c5e40313\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 5 12:28:59 2010 +0200\n\n    gl: Get rid of ctx variable\n    \n    The code used renderer->ctx and ctx interchangably, that was confusing.\n\n src/cairo-gl-surface.c |   12 ++++++------\n 1 file changed, 6 insertions(+), 6 deletions(-)\n\ncommit a354f1f92a17378f42d0b703482ae2b8168c7f68\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 5 12:28:24 2010 +0200\n\n    gl: Another case of proper device acquiring\n    \n    This patch isn't strictly necessary, but it cleans up the code.\n\n src/cairo-gl-surface.c |   15 +++++++++------\n 1 file changed, 9 insertions(+), 6 deletions(-)\n\ncommit 36210ee51444979271f7ba1cc0ac452cd30df0af\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 5 12:24:43 2010 +0200\n\n    gl: Get rid of another cast to cairo_gl_context_t\n\n src/cairo-gl-surface.c |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit 58b03691d379979b50d74740748b8b8523e0cd0d\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 5 12:21:23 2010 +0200\n\n    gl: Introduce _cairo_gl_device_has_glsl() function\n    \n    The function takes a cairo_device_t argument as it can be called on an\n    unacquired device.\n    \n    This is the first patch in a process to try to rid cairo-gl-surface.c of\n    casts from cairo_device_t to cairo_gl_context_t. As its members should\n    usually only be accessed when the device is locked, the only way the\n    cairo_gl_context_t should be acquired is using\n    _cairo_gl_context_acquire().\n\n src/cairo-gl-glyphs.c  |    2 +-\n src/cairo-gl-private.h |    6 ++++++\n src/cairo-gl-surface.c |    9 ++++-----\n 3 files changed, 11 insertions(+), 6 deletions(-)\n\ncommit 5223b654230d3074d0bc31eb74c415e50eced365\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 5 12:07:49 2010 +0200\n\n    gl: Get rid of cairo_gl_surface_glfinish() from public API\n    \n    This is now done explicitly in the boilerplate code. It was not a useful\n    public API to begin with.\n\n boilerplate/cairo-boilerplate-gl.c |   17 +++++++----------\n src/cairo-gl-surface.c             |    9 ---------\n src/cairo-gl.h                     |    3 ---\n 3 files changed, 7 insertions(+), 22 deletions(-)\n\ncommit e071fa2c4f62b5ead39c6c6401f39360ea4dee1f\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 5 12:03:13 2010 +0200\n\n    gl: Remove unused member variable\n\n src/cairo-gl-private.h |    1 -\n 1 file changed, 1 deletion(-)\n\ncommit 90c64f60d853f1a6ea5febd362ef3528cc9d914b\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 5 12:01:59 2010 +0200\n\n    gl: Move device-specific code into cairo-gl-device.c\n\n src/Makefile.sources   |    6 +-\n src/cairo-gl-device.c  |  205 ++++++++++++++++++++++++++++++++++++++++++++++++\n src/cairo-gl-surface.c |  162 --------------------------------------\n 3 files changed, 210 insertions(+), 163 deletions(-)\n\ncommit 0ff5a18fd5623b57c7493e6b67a6b1c75af82fb3\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 5 11:52:40 2010 +0200\n\n    gl: Make _gl_set_destination() take the context as an argument\n    \n    Keeping with the API introduced for Xlib, functions that require an\n    acquired context take this context as the first argument.\n\n src/cairo-gl-glyphs.c  |    2 +-\n src/cairo-gl-private.h |    2 +-\n src/cairo-gl-surface.c |   20 +++++++++-----------\n 3 files changed, 11 insertions(+), 13 deletions(-)\n\ncommit e8c5b6b1c2099fc6a49d0a082f5e884d3fbd89df\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed May 5 10:05:30 2010 +0200\n\n    Fix typo in docs\n\n src/cairo-array.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 53508e6e3047b4dac6d69d5d3ff2208178998fd4\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue May 4 19:28:45 2010 +0200\n\n    gl: Acquire the context before destroying it.\n\n src/cairo-gl-surface.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit c46aec489722bf09cd10c52d70bb4975eb1546d9\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue May 4 19:28:22 2010 +0200\n\n    gl: acquire/release context during surface_finish()\n\n src/cairo-gl-surface.c |    9 ++++++++-\n 1 file changed, 8 insertions(+), 1 deletion(-)\n\ncommit 88801aabb34328746a53d3d59d036dada7ced756\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue May 4 19:23:08 2010 +0200\n\n    gl: Acquire context when initing/destroying gl operands\n\n src/cairo-gl-glyphs.c  |   17 +++++-----\n src/cairo-gl-private.h |    3 +-\n src/cairo-gl-surface.c |   80 +++++++++++++++++++++++++-----------------------\n 3 files changed, 54 insertions(+), 46 deletions(-)\n\ncommit c6d7d054ca44f3849ee1ab76de9032a4eaa210fe\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed May 5 10:39:49 2010 +0100\n\n    test: Add radial-gradient-mask\n    \n    Exercise using radial gradients as a mask.\n\n test/Makefile.am                                 |    6 ++\n test/Makefile.sources                            |    2 +\n test/radial-gradient-mask-source.argb32.ref.png  |  Bin 0 -> 116311 bytes\n test/radial-gradient-mask-source.c               |  111 ++++++++++++++++++++++\n test/radial-gradient-mask-source.image16.ref.png |  Bin 0 -> 82800 bytes\n test/radial-gradient-mask-source.rgb24.ref.png   |  Bin 0 -> 129093 bytes\n test/radial-gradient-mask.argb32.ref.png         |  Bin 0 -> 116311 bytes\n test/radial-gradient-mask.c                      |  110 +++++++++++++++++++++\n test/radial-gradient-mask.image16.ref.png        |  Bin 0 -> 82800 bytes\n test/radial-gradient-mask.rgb24.ref.png          |  Bin 0 -> 129093 bytes\n 10 files changed, 229 insertions(+)\n\ncommit 5f878f917980cde145d4c385b0c0b66336c0f454\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed May 5 10:24:14 2010 +0100\n\n    clip: Trivial compiler warning\n    \n    cairo-clip.c: In function \u2018_cairo_clip_path_reapply_clip_path_translate\u2019:\n    cairo-clip.c:446: warning: suggest parentheses around assignment used as\n    truth value\n\n src/cairo-clip.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit 840dad765febf7b807bbb75e401c159a8c5c4dfe\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed May 5 09:46:03 2010 +0100\n\n    test/mask-glyphs: Check for memfault\n\n test/mask-glyphs.c |   32 +++++++++++++++++++++++---------\n 1 file changed, 23 insertions(+), 9 deletions(-)\n\ncommit ad541a1ec62e18bcaf74994affbdb0503e277f9c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed May 5 09:33:36 2010 +0100\n\n    clip: Propagate memfault from translating clip region\n\n src/cairo-clip.c |    6 ++++++\n 1 file changed, 6 insertions(+)\n\ncommit 4bc54643f5cdeddf2145d28c317b55ca6b5949a5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 4 21:36:03 2010 +0100\n\n    image: Propagate failure from pixman_image_set_clip_region()\n\n src/cairo-image-surface.c |    9 ++++++++-\n 1 file changed, 8 insertions(+), 1 deletion(-)\n\ncommit 9ef33a1d8c0476f4f1eeba4f26523fdeb6f7d809\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 4 21:35:51 2010 +0100\n\n    test/bitmap-font: Destroy FcPattern\n\n test/bitmap-font.c |    8 ++------\n 1 file changed, 2 insertions(+), 6 deletions(-)\n\ncommit fba4cf1d94b3ab676e0b62ae3574bf1ee4e69de0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed May 5 09:22:03 2010 +0100\n\n    recording: Mark an empty recording surface as clear.\n\n src/cairo-recording-surface.c |    6 ++++++\n 1 file changed, 6 insertions(+)\n\ncommit e5329805394c94c915e43a0040b51d5019b4a90e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed May 5 09:17:51 2010 +0100\n\n    recording: Avoid refcycles by always copying the command array.\n    \n    Short-term solution to avoid the refleaks and to make the test suite\n    happy. A more elegant solution would be to track the references and\n    avoid the substantial memory overhead of copying the recording surfaces.\n    \n    Thanks to Benjamin Otte for pointing out the solution to avoiding\n    refcycles.\n\n src/cairo-recording-surface-private.h |    1 -\n src/cairo-recording-surface.c         |   23 ++++++++++++-----------\n 2 files changed, 12 insertions(+), 12 deletions(-)\n\ncommit 6a06e0ef7b534355d0f3b4885159ffc37dbc3867\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed May 5 09:17:33 2010 +0100\n\n    test/subsurface-modify-parent: Free region.\n    \n    Minor refleak.\n\n test/subsurface-modify-parent.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 4a46c715564c886e7434d65625fb84b5d87c0970\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 4 18:51:30 2010 +0100\n\n    type3: Minor tweaks to remove a redundant check.\n\n src/cairo-type3-glyph-surface.c |    8 ++------\n 1 file changed, 2 insertions(+), 6 deletions(-)\n\ncommit 11531b90a2317bb1113b187d6aa9c5083f5ecaa1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 4 18:50:58 2010 +0100\n\n    ps: Force finish of the type3 glyph surfaces.\n\n src/cairo-ps-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 5155ebeaa25815124124db2599336ab2ddbe7413\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 4 18:50:27 2010 +0100\n\n    pdf: Assert that no other error can occur for an invertible matrix.\n\n src/cairo-pdf-operators.c |    3 +--\n 1 file changed, 1 insertion(+), 2 deletions(-)\n\ncommit d9259bd06822c871a4c653f395cfc1f933caaeb7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 4 18:49:55 2010 +0100\n\n    paginated: Mark as clear initially.\n\n src/cairo-paginated-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit bc14e0e953630d47a65e701a377631e406eb080c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon May 3 14:18:33 2010 +0100\n\n    scaled-font: Convert to cairo_list_t\n    \n    Convert the open-coded doubly-linked list of glyph pages for a font into\n    the common cairo_list_t.\n\n src/cairo-scaled-font-private.h |    2 +-\n src/cairo-scaled-font.c         |   46 +++++++++++++++++++--------------------\n 2 files changed, 23 insertions(+), 25 deletions(-)\n\ncommit 627527693c38c328fdb79058f5299609c0031029\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon May 3 13:41:41 2010 +0100\n\n    ps: Remove the fill stroke command\n    \n    This is not supported by PostScript, so eliminate it from the prologue.\n\n src/cairo-ps-surface.c |    2 --\n 1 file changed, 2 deletions(-)\n\ncommit 4dd92ef2bc877eb197f096c3eb8fe74cb2e7b099\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun May 2 14:35:59 2010 +0100\n\n    test: Add subsurface-pad\n    \n    Round out the subsurface tests with PAD.\n\n test/Makefile.am            |    1 +\n test/Makefile.sources       |    1 +\n test/subsurface-pad.c       |   76 +++++++++++++++++++++++++++++++++++++++++++\n test/subsurface-pad.ref.png |  Bin 0 -> 181 bytes\n 4 files changed, 78 insertions(+)\n\ncommit 85e3cffde164a5af444639dfd182fde2448809ee\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Apr 30 21:09:01 2010 +0100\n\n    test: Add subsurface-modify-{child,parent}\n    \n    Add tests to ensure that modifications to the subsurface via the\n    original surface are tracked by the subsurface, i.e. that any snapshots\n    are detached upon modification of the parent as well as modification of\n    itself and vice versa.\n\n test/Makefile.am                      |    2 +\n test/Makefile.sources                 |    2 +\n test/subsurface-modify-child.c        |   98 +++++++++++++++++++++++++++++++++\n test/subsurface-modify-child.ref.png  |  Bin 0 -> 197 bytes\n test/subsurface-modify-parent.c       |   77 ++++++++++++++++++++++++++\n test/subsurface-modify-parent.ref.png |  Bin 0 -> 197 bytes\n 6 files changed, 179 insertions(+)\n\ncommit 19ac81f50ba353400934bf112523b4257ad9de2f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 4 18:25:23 2010 +0100\n\n    scaled-font: Remove MRU cache upon detection of error.\n\n src/cairo-scaled-font.c |   15 ++++++++++++++-\n 1 file changed, 14 insertions(+), 1 deletion(-)\n\ncommit 6f2d4f5b2aba9344fee9375614dfd0c6236bfd7c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 4 18:09:11 2010 +0100\n\n    image: Propagate failure from pixman_image_fill_boxes().\n\n src/cairo-image-surface.c |   55 ++++++++++++++++++++++++---------------------\n 1 file changed, 30 insertions(+), 25 deletions(-)\n\ncommit ded7be0b9ce12f8d4a84c8c9dd622d92fe347a34\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 4 17:01:35 2010 +0100\n\n    test/user-font-rescale: Use after free and check for memfault.\n\n test/user-font-rescale.c |   16 +++++++++++-----\n 1 file changed, 11 insertions(+), 5 deletions(-)\n\ncommit b0052c52153376400a30dca1d67f4aca9735cc09\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 4 17:01:17 2010 +0100\n\n    test/bitmap-font: Propagate memfault\n\n test/bitmap-font.c |   13 ++++++++++---\n 1 file changed, 10 insertions(+), 3 deletions(-)\n\ncommit 9187c7532755dda8d2677ec792162c71029fb37d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 4 13:18:09 2010 +0100\n\n    test/bitmap-font: Check for memfault error\n\n test/bitmap-font.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 0fced9279227614ede6964e94ede9de49a3a3388\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 4 13:17:38 2010 +0100\n\n    test/user-font-proxy: Check we install user data on the scaled font\n\n test/user-font-proxy.c |   14 ++++++++++----\n 1 file changed, 10 insertions(+), 4 deletions(-)\n\ncommit 38188961b996c97d344195749b7bec8c93f9bad7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 4 13:17:07 2010 +0100\n\n    image: Check for pixman image allocation failure during glyphs\n\n src/cairo-image-surface.c |    8 +++-----\n 1 file changed, 3 insertions(+), 5 deletions(-)\n\ncommit 4a181ebac416ec35e412ddbe9ed1392fb8b74ab7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 4 10:26:30 2010 +0100\n\n    pdf: Cleanup local reference to source on error paths.\n\n src/cairo-pdf-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit ba48edcd86ee1bca06b25587e56abcd2c1b19d79\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 4 10:26:13 2010 +0100\n\n    ps: Always cleanup used font subsets.\n\n src/cairo-ps-surface.c |   19 ++++++++-----------\n 1 file changed, 8 insertions(+), 11 deletions(-)\n\ncommit 9a0958be012e097c239260fac0dec0b1e5679028\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 4 10:25:48 2010 +0100\n\n    test: Cleanup after failed pthread_join().\n\n test/pthread-same-source.c |   17 +++++++++--------\n test/pthread-show-text.c   |   17 +++++++++--------\n test/pthread-similar.c     |   17 +++++++++--------\n 3 files changed, 27 insertions(+), 24 deletions(-)\n\ncommit 08b9984da9f2119cd4ed03bbd656a349b49d1f12\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 4 08:19:41 2010 +0100\n\n    image: Replace assert with error return\n    \n    It is possible to encounter an allocation failure here since we may have\n    tweaked the clip since the last evaluation of the clip region.\n\n src/cairo-image-surface.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit 2c68fcace4ad47ad09e9699e45afb514be1381f9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon May 3 20:39:34 2010 +0100\n\n    test: Embed the list pointer into cairo_test_t\n    \n    Reduce the amount of output printed by leak-detectors when a test\n    crashes.\n\n test/cairo-test-runner.c |   31 +++++++++++++++----------------\n test/cairo-test.h        |    7 ++++---\n 2 files changed, 19 insertions(+), 19 deletions(-)\n\ncommit 7002b824729885a9d579f677ecc665b620847480\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 4 13:52:09 2010 +0200\n\n    xlib: Don't delete gradients in unbounded fixup code\n    \n    The fix is ugly, but for now it works.\n\n src/cairo-xlib-surface.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit af26560f258d93cc78782ddd0208128756874c11\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon May 3 19:21:59 2010 +0100\n\n    test: Improve memfault behaviour.\n    \n    Various minor tweaks to convert asserts into error returns and to\n    improve error checking on intermediate surfaces.\n\n boilerplate/cairo-boilerplate-svg.c |    2 +-\n test/cairo-test.c                   |   21 ++++++++++++---\n test/png.c                          |   34 +++++++++++++++--------\n test/pthread-same-source.c          |    7 +++++\n test/surface-source.c               |   11 ++++++--\n test/toy-font-face.c                |   16 ++++++++---\n test/user-data.c                    |   51 ++++++++++++++++++++++++-----------\n test/xlib-surface-source.c          |    7 ++++-\n 8 files changed, 112 insertions(+), 37 deletions(-)\n\ncommit c549203c8d69474be4362037f702e4fb59c9929e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon May 3 19:21:18 2010 +0100\n\n    scaled-font: Check for an error return when retrieving the implementation\n\n src/cairo-scaled-font.c |    8 ++++++++\n 1 file changed, 8 insertions(+)\n\ncommit c93e6f014d9678b1aea34fd7a30a1fc2f51c6347\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon May 3 19:20:42 2010 +0100\n\n    paginated: propagate malloc failures more cleanly.\n\n src/cairo-paginated-surface.c |   26 +++++++++++++-------------\n 1 file changed, 13 insertions(+), 13 deletions(-)\n\ncommit 8e9fd9c01732c3102c27c7dee50f6e494ba7cdd8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon May 3 19:20:07 2010 +0100\n\n    image: A few missing tests for malloc failure\n\n src/cairo-image-surface.c |   12 +++++++++++-\n 1 file changed, 11 insertions(+), 1 deletion(-)\n\ncommit 87781ffbd914bca29b4d744fb48678ab06a07108\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon May 3 19:18:49 2010 +0100\n\n    ft: Convert an assert into an unlikely error return.\n    \n    The assert depends upon good behaviour from fontconfig, which is no\n    guaranteed under memfault, so return an error instead.\n\n src/cairo-ft-font.c |    4 +---\n 1 file changed, 1 insertion(+), 3 deletions(-)\n\ncommit 5672b7a18a34456862977a1cf678bf6575dcc3f4\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon May 3 13:13:27 2010 +0200\n\n    fallback: get src_x/y variables right when compositing traps\n\n src/cairo-image-surface.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit c10a5a9fb0463f254fb607a2260b540256f888cc\nAuthor: Dave Yeo <daveryeo@telus.net>\nDate:   Mon May 3 10:20:51 2010 +0200\n\n    os2: Fix get_extents() segfaulting.\n    \n    bed2701e1c89095878d549cbca8f22d84f3dda3c removed one line too much.\n\n src/cairo-os2-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 9df81fe4d3f0ccc5632d0e84e920fe1c448bd531\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sun May 2 19:59:26 2010 +0200\n\n    boilerplate: don't compile pdf test code when pdf is not tested\n    \n    Avoids gcc warnings when libpoppler version isn't good enough.\n\n boilerplate/cairo-boilerplate-pdf.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 358f57c8765f823f8e6db7629ea6ca48fcd392b8\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Apr 30 23:29:24 2010 +0200\n\n    image: remove useless optimization\n    \n    The optimization is done way smarter inside\n    _cairo_matrix_transform_bounding_box()\n\n src/cairo-image-surface.c |   11 +++--------\n 1 file changed, 3 insertions(+), 8 deletions(-)\n\ncommit 94aa6d24b6d5ab4528a0b0a9b1b0c6eb7218f861\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Apr 30 23:24:41 2010 +0200\n\n    fallback: Create pixman image for correct rectangle\n    \n    This was most prominently shown by the a1-image-sample test, but\n    multiple tests exposed the problem with the xlib-fallback code.\n\n src/cairo-image-surface.c |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit 41fecf8e662c9ad2fe063754db8302f349a223ef\nAuthor: Carlos Garcia Campos <carlosgc@gnome.org>\nDate:   Fri Apr 30 21:18:52 2010 +0200\n\n    [configure] Bump poppler dependency to 0.13.3\n\n configure.ac |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 3294daf423e88b55aa13841dfa7c557ee9833f92\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Apr 30 20:14:54 2010 +0200\n\n    Create cleared surface instead of a scratch surface in clone_similar()\n    \n    A cleared surface is needed when playing back a recording surface that\n    has semi-transparent operations.\n    As this only affects surface types where scratch surfaces aren't already\n    cleared (ie it affected xlib but not image), the effect was only visible\n    for those backends.\n    This should not cause any performance regressions as the other backends\n    set surface->clear = TRUE when creating the scratch surface, so the\n    clear operation is effectively a no-op.\n    \n    Covered by the existing pdf-surface-source and svg-surface-source tests.\n\n src/cairo-surface.c |    9 +++++----\n 1 file changed, 5 insertions(+), 4 deletions(-)\n\ncommit 0aeb612d2f822e8cda1f509b6a4f2995e24053fc\nAuthor: Carlos Garcia Campos <carlosgc@gnome.org>\nDate:   Fri Apr 30 16:18:57 2010 +0200\n\n    [test] Update pdf reference image for text-rotate\n\n test/text-rotate.pdf.ref.png |  Bin 16757 -> 16744 bytes\n 1 file changed, 0 insertions(+), 0 deletions(-)\n\ncommit fe2844464721644b837816aa4dad4ead508f0b89\nAuthor: Carlos Garcia Campos <carlosgc@gnome.org>\nDate:   Fri Apr 30 16:16:23 2010 +0200\n\n    [test] Update pdf reference image for surface-pattern-scale-down\n\n test/surface-pattern-scale-down.pdf.ref.png |  Bin 1603 -> 2189 bytes\n 1 file changed, 0 insertions(+), 0 deletions(-)\n\ncommit dba6f23318005a4cdbe7566519ce896278ea184a\nAuthor: Carlos Garcia Campos <carlosgc@gnome.org>\nDate:   Fri Apr 30 16:11:52 2010 +0200\n\n    [test] Update pdf reference image for leaky-dashed-rectangle\n\n test/leaky-dashed-rectangle.pdf.ref.png |  Bin 380 -> 377 bytes\n 1 file changed, 0 insertions(+), 0 deletions(-)\n\ncommit 6b81187ac4870311a10c024af9f30c366be785cd\nAuthor: Carlos Garcia Campos <carlosgc@gnome.org>\nDate:   Fri Apr 30 16:05:21 2010 +0200\n\n    [test] Update pdf reference images for clip-operator\n\n test/clip-operator.pdf.argb32.ref.png |  Bin 9266 -> 9437 bytes\n test/clip-operator.pdf.rgb24.ref.png  |  Bin 5166 -> 5391 bytes\n 2 files changed, 0 insertions(+), 0 deletions(-)\n\ncommit b485ae5b90bf72cde0c30c2350e03d1369ca6dcd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Apr 30 14:14:01 2010 +0100\n\n    atomic: Add Andrea's copyright notice\n    \n    Note Andrea's copyright for his contribution of platform agnostic\n    fallbacks and the implementation for MacOS/X.\n\n src/cairo-atomic-private.h |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 4ee5119a3467ea086efccef2907b0c576d600b79\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Apr 30 13:00:05 2010 +0100\n\n    test: Expand pthread-show-text to cover all surfaces.\n    \n    In a similar fashion to pthread-same-source and pthread-similar, check\n    that the texting handling is thread-safe for all surface and font\n    backends.\n\n test/Makefile.am                       |    3 +\n test/pthread-show-text.c               |  118 ++++++++++++++++++++------------\n test/pthread-show-text.image16.ref.png |  Bin 0 -> 22167 bytes\n test/pthread-show-text.ps.ref.png      |  Bin 0 -> 16558 bytes\n test/pthread-show-text.ref.png         |  Bin 0 -> 29885 bytes\n 5 files changed, 77 insertions(+), 44 deletions(-)\n\ncommit c6dc8ad7dc46d03899cd37fff40bd7f3a60339e2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Apr 30 12:38:25 2010 +0100\n\n    Revert \"paginated: Call surface finish explicitly on recording surface\"\n    \n    This reverts commit 5fc04bba9fa8ddda8cf7d7a97015f21a21429172.\n    \n    Whilst this fixes the self-referential reference leak, it however\n    introduces use-after-finish into normal behaviour. Close, but not quite.\n\n src/cairo-paginated-surface.c |    1 -\n 1 file changed, 1 deletion(-)\n\ncommit b972669c9ac87d1c2ca922e12024ef5da394aa6b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Apr 30 12:37:16 2010 +0100\n\n    boilerplate: Fix use after free from 3ae5723\n    \n    If we want to access the surface during the cleanup, we must hold our\n    own reference to it. Make it so for the forced finish of the recording\n    surface.\n\n boilerplate/cairo-boilerplate.c |   13 ++++++++++---\n 1 file changed, 10 insertions(+), 3 deletions(-)\n\ncommit 905c345df1f828551af2ab0b751388428e4dfaf6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Apr 30 10:31:50 2010 +0100\n\n    recording: Check that we do not use a finished recording surface.\n    \n    User paranoia - as the replay is exposed to the user it is convenient to\n    add the finish check in the core replay function so that we gain a\n    paranoia check for the internal paths as well.\n\n src/cairo-recording-surface.c |    5 ++++-\n 1 file changed, 4 insertions(+), 1 deletion(-)\n\ncommit 5fe7c5842f3589efce765b3869c1dd55367a5aba\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Apr 30 10:13:09 2010 +0100\n\n    pdf; Emit subsurface patterns natively.\n    \n    Encode subsurface patterns into the PDF stream natively (when possible),\n    similar to the cairo-ps backend.\n\n src/cairo-pdf-surface.c |  113 +++++++++++++++++++++++++++++++++++++++--------\n 1 file changed, 94 insertions(+), 19 deletions(-)\n\ncommit 8ded35fd69ed0bbb07359c0278071a25af66571c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 28 14:26:21 2010 +0100\n\n    ps: Enable native encoding of subsurface patterns.\n    \n    Carefully handle subsurfaces of a recording surface through the analysis\n    and paginated surfaces so that we can generate a native pattern for the\n    vector backends, demonstrated by the PostScript backend.\n    \n    Nothing remarkable, just a lot of bookkeeping to track the wrapped\n    surface types and to apply the correct offsets when generating the\n    subsurface pattern.\n\n src/cairo-analysis-surface.c           |   13 +-\n src/cairo-paginated-surface.c          |    1 +\n src/cairo-pdf-surface.c                |    4 +-\n src/cairo-ps-surface.c                 |  121 ++++++++++--\n src/cairo-recording-surface-private.h  |    1 +\n src/cairo-recording-surface.c          |   12 +-\n src/cairo-surface-private.h            |    4 +-\n src/cairo-surface-subsurface-private.h |    4 +-\n src/cairo-surface-subsurface.c         |  101 ++++++----\n src/cairo-surface-wrapper-private.h    |    7 +-\n src/cairo-surface-wrapper.c            |  314 ++++++++++++++++++++++++++------\n src/cairo-surface.c                    |   13 +-\n test/Makefile.am                       |    1 +\n test/Makefile.sources                  |    1 +\n test/subsurface-reflect.c              |   76 ++++++++\n test/subsurface-reflect.ref.png        |  Bin 0 -> 210 bytes\n test/subsurface-repeat.c               |    8 +-\n test/subsurface-similar-repeat.c       |    3 +\n test/subsurface.c                      |    7 +-\n test/subsurface.image16.ref.png        |  Bin 1430 -> 1643 bytes\n test/subsurface.ref.png                |  Bin 1597 -> 1811 bytes\n 21 files changed, 565 insertions(+), 126 deletions(-)\n\ncommit 5fc04bba9fa8ddda8cf7d7a97015f21a21429172\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Apr 29 21:51:29 2010 +0100\n\n    paginated: Call surface finish explicitly on recording surface\n    \n    During show_page() when we destroy the recording surface after emitting\n    the page, ensure that we actually call cairo_surface_finish() to dispose\n    of any self-referential reference leaks.\n\n src/cairo-paginated-surface.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 3ae57234644c3756785c551beffe584f837b0273\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Apr 29 21:50:22 2010 +0100\n\n    boilerplate: Ensure that the recording surfaces are finished.\n    \n    Be paranoid and explicitly call finish to cleanup self-referential leaks\n    when using paginated/recording surfaces.\n\n boilerplate/cairo-boilerplate-pdf.c |    5 ++++-\n boilerplate/cairo-boilerplate-ps.c  |    5 ++++-\n boilerplate/cairo-boilerplate-svg.c |    5 ++++-\n boilerplate/cairo-boilerplate.c     |   10 +++++-----\n 4 files changed, 17 insertions(+), 8 deletions(-)\n\ncommit f08cc311af1248b39c3e757ef192515ed8506862\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Apr 29 20:34:56 2010 +0100\n\n    boilerplate: Destroy the redundant image reference\n    \n    When using a script surface to record the recording surface, we replace\n    the local reference to the image surface.\n\n boilerplate/cairo-boilerplate.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit ab2776c9a16134c50b48fd202263421ec0f466e7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Apr 29 18:50:32 2010 +0100\n\n    snapshot: Attach the backend generated snapshot to the target\n    \n    Cache the result of snapshotting using the backend vfunc in the normal\n    manner by attaching the snapshot to the target. This should reduce\n    resource usage in these cases.\n\n src/cairo-surface-snapshot.c |   21 ++++++++++++++++++++-\n 1 file changed, 20 insertions(+), 1 deletion(-)\n\ncommit 07122f37d11eabe62bc9c81ccbf71bbe8b7a1005\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Apr 29 15:19:18 2010 +0100\n\n    surface: Convert snapshots from an array to a double-linked list.\n    \n    Saves the memory allocation for the array, and the overhead of\n    maintaining the area for both insertions and more importantly deletes.\n\n src/cairo-recording-surface.c      |    6 +-\n src/cairo-surface-private.h        |    5 +-\n src/cairo-surface-snapshot.c       |   10 +--\n src/cairo-surface.c                |  130 +++++++++++++-----------------------\n src/cairo-vg-surface.c             |    8 +--\n src/cairo-xcb-surface-core.c       |    6 +-\n src/cairo-xcb-surface-render.c     |   10 +--\n src/cairo-xcb-surface.c            |   12 ++--\n src/cairoint.h                     |    2 +-\n src/drm/cairo-drm-i915-shader.c    |   11 ++-\n src/drm/cairo-drm-i965-shader.c    |   11 ++-\n src/drm/cairo-drm-intel-surface.c  |    8 +--\n src/drm/cairo-drm-radeon-surface.c |    8 +--\n 13 files changed, 77 insertions(+), 150 deletions(-)\n\ncommit 4cb733c28551f4a34cd4a225b8d797a55bf9b977\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Apr 29 12:04:44 2010 +0100\n\n    image: Simplify translation of pattern matrix for composite_trapezoids()\n\n src/cairo-image-surface.c |    4 +---\n 1 file changed, 1 insertion(+), 3 deletions(-)\n\ncommit 3940b0e91c274de0cf2fca4b34d4025b92965c19\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Apr 29 17:29:13 2010 +0100\n\n    subsurface: s/region/rectangle/\n    \n    After a renewed discussion, it was pointed out that the API in Cairo was\n    not restrictive and by using doubles we would be consisted with the rest\n    of the API. Thus prompting the name change to\n    \n      cairo_surface_create_for_rectangle()\n    \n    similar to cairo_rectangle().\n    \n    And document the public API.\n\n src/cairo-surface-subsurface.c             |   39 +++++++++++++++++++++++-----\n src/cairo.h                                |   10 +++----\n test/subsurface-repeat.c                   |    4 +--\n test/subsurface-similar-repeat.c           |    2 +-\n test/subsurface.c                          |    4 +--\n util/cairo-script/cairo-script-operators.c |   12 ++++-----\n util/cairo-trace/trace.c                   |   10 +++----\n 7 files changed, 53 insertions(+), 28 deletions(-)\n\ncommit 4b6fa8d5a78731aca80f3c8c6320e7edc845c5b5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Apr 30 09:47:51 2010 +0100\n\n    test: Remove group-unaligned.*new.png\n    \n    Entirely misleading, looks like PDF is behaving the same as image and\n    this remnant was thus giving the wrong impression.\n\n test/Makefile.am                 |    1 -\n test/group-unaligned.pdf.new.png |  Bin 427 -> 0 bytes\n 2 files changed, 1 deletion(-)\n\ncommit e3f990d84131f7bd1e64e54d02bac780b1e9f85e\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Apr 29 22:34:35 2010 +0200\n\n    test: Update reference images for last checkin\n    \n    Both tests now pas on all backends I tested: test, image, xlib and\n    recording\n\n test/a1-traps-sample.ref.png      |  Bin 148 -> 120 bytes\n test/unantialiased-shapes.ref.png |  Bin 3969 -> 3968 bytes\n 2 files changed, 0 insertions(+), 0 deletions(-)\n\ncommit 6d36f06751377459e35afe1ac26c59d33b16c730\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Apr 29 22:12:02 2010 +0200\n\n    image: Round down when rendering antialiased boxes\n    \n    Matches Pixman's output when going via pixman_rasterize_trapezoid()\n\n src/cairo-fixed-private.h |    6 ++++++\n src/cairo-image-surface.c |    9 +++++----\n 2 files changed, 11 insertions(+), 4 deletions(-)\n\ncommit 95179a5de91b5c6f99dbccc3b6c950df58d4f2a7\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Apr 29 20:45:23 2010 +0200\n\n    Remove excessive semicolons\n    \n    s/;;/;/ basically\n\n src/cairo-image-surface.c       |    2 +-\n src/cairo-wideint.c             |    2 +-\n src/drm/cairo-drm-i965-shader.c |    2 +-\n 3 files changed, 3 insertions(+), 3 deletions(-)\n\ncommit 5d07307b691afccccbb15f773d5231669ba44f5a\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Apr 29 18:20:59 2010 +0200\n\n    xlib: Don't modify variables that are needed later\n    \n    In the XCopyArea region code, don't modify src_x/y when they are later\n    used in the unbounded fixup code.\n    \n    Exposed by composite-integer-translate-source test.\n\n src/cairo-xlib-surface.c |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit 90160deb2a84f787dff46243471e37600b24799b\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Apr 29 18:20:44 2010 +0200\n\n    xlib: Constify some function arguments\n\n src/cairo-xlib-surface.c |   12 ++++++------\n 1 file changed, 6 insertions(+), 6 deletions(-)\n\ncommit 4da71d1a01c4d4cc84b5e31cc89dd7f297b23359\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Apr 29 18:11:54 2010 +0200\n\n    xlib: remove unused code\n\n src/cairo-xlib-surface.c |   12 ------------\n 1 file changed, 12 deletions(-)\n\ncommit 758ffadcb1d0a0478d43ca40775687a37e5920a4\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Apr 29 16:54:09 2010 +0200\n\n    fallback: Only do _fill/compsoite_rectangles on bounded source\n    \n    For unbounded sources, these optimizations fail to take into account the\n    regions outside the source.\n\n src/cairo-surface-fallback.c |   16 +++++++++-------\n 1 file changed, 9 insertions(+), 7 deletions(-)\n\ncommit 6288ad719da898c4a75cdc6527f5a41d4c900e57\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Apr 29 15:37:32 2010 +0200\n\n    fallback: translate extents regions properly\n    \n    The extents clip regions that were created for unbounded operators were\n    not translated properly. This has been changed now.\n    \n    This is a followup to 9ce8bef9d6e6d773dd1f4b184916ed5c96c3541d.\n\n src/cairo-surface-fallback.c |   17 ++++++++++-------\n 1 file changed, 10 insertions(+), 7 deletions(-)\n\ncommit b0760826f30f63637561b353e7eed1913036da2d\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Apr 29 12:11:48 2010 +0200\n\n    test: Set have_result for image matches\n    \n    Causes the log to contain information about the reference imagery used.\n\n test/cairo-test.c |   16 +++++++++++++---\n 1 file changed, 13 insertions(+), 3 deletions(-)\n\ncommit 8f85c2d77cc2ca7984f9771c0096fbad798dbde8\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Apr 29 12:09:31 2010 +0200\n\n    image: translate source pattern in composite_trapezoids()\n    \n    Fixes xlib fallback paths as exposed by the clip-push-group test.\n\n src/cairo-image-surface.c |    8 +++++++-\n 1 file changed, 7 insertions(+), 1 deletion(-)\n\ncommit aa495eac5a2db9b396eb1953eb112c733d0ababc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Apr 29 10:04:18 2010 +0100\n\n    atomic: Tweak for compilation x86.\n    \n    Missing definition of _cairo_atomic_ptr_get() used in the fallbacks.\n\n src/cairo-atomic-private.h |   27 ++++++++++++++++++++-------\n src/cairo-atomic.c         |   16 ++++++++--------\n 2 files changed, 28 insertions(+), 15 deletions(-)\n\ncommit 248af38b3efa3f96225eea43f4ba5b94baff34a6\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Wed Apr 28 17:23:47 2010 +0200\n\n    atomic: Add MacOSX atomic implementation\n    \n    Enable atomic operation on MacOS X, using the functions provided by\n    libkern/OSAtomic.h\n    \n    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>\n\n build/aclocal.cairo.m4     |   10 ++++++++++\n src/cairo-atomic-private.h |   30 ++++++++++++++++++++++++++++++\n 2 files changed, 40 insertions(+)\n\ncommit 56a367a1626b2b7ec3d9e64e74f016867f294a34\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Wed Apr 28 19:17:10 2010 +0200\n\n    atomic: Correct implementation of _atomic_fetch ()\n    \n    _atomic_fetch() was expected to replace the content of a slot with\n    NULL and return the old content, but it incorrectly returned the\n    previous content even if it was unable to perform the exchange\n    (because of conflicts with other threads accessing the pool).\n    \n    Fix suggested by Chris Wilson <chris@chris-wilson.co.uk>\n\n src/cairo-freed-pool-private.h |    8 +++++++-\n 1 file changed, 7 insertions(+), 1 deletion(-)\n\ncommit d66b1ca1cfda64088521581bc2bd494bff9f5d23\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Wed Apr 28 16:23:15 2010 +0200\n\n    atomic: Separate bool and old-value compare-and-exchange\n    \n    Some implementations only offer one version of compare-and-exchange,\n    thus we expose both through cairo-atomic, implementing what is missing\n    through appropriate fallbacks.\n    *_cmpxchg() now return a boolean (this unbreaks _cairo_atomic_uint_cmpxchg)\n    *_cmpxchg_return_old() return the old value\n    Code is updated everywhere to reflect this, by using *_cmpxchg()\n    wherever the returned value was only tested to check if the exchange\n    had really taken place.\n    \n    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>\n\n src/cairo-atomic-private.h     |   68 ++++++++++++++++++++++++++++++++++++----\n src/cairo-atomic.c             |    4 +--\n src/cairo-freed-pool-private.h |    4 +--\n src/cairo-image-surface.c      |    6 ++--\n src/cairo.c                    |    4 +--\n src/drm/cairo-drm.c            |    2 +-\n 6 files changed, 72 insertions(+), 16 deletions(-)\n\ncommit a0bf424b820b404947671b56f357a2cef71640fb\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Wed Apr 28 15:29:32 2010 +0200\n\n    atomic: Remove unused function _cairo_atomic_int_set()\n    \n    _cairo_atomic_int_set() was only used in the definition of\n    CAIRO_REFERENCE_SET_VALUE, which was never used.\n    \n    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>\n\n src/cairo-atomic-private.h          |   10 ----------\n src/cairo-atomic.c                  |    8 --------\n src/cairo-reference-count-private.h |    1 -\n 3 files changed, 19 deletions(-)\n\ncommit 9ce8bef9d6e6d773dd1f4b184916ed5c96c3541d\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Apr 28 18:34:20 2010 +0200\n\n    fallback: Propagate extents properly\n    \n    Otherwise unbounded operators will clear the full surface.\n    Improves the score for the unbounded-operator test, in particular the\n    output for the test-fallback case.\n\n src/cairo-surface-fallback.c |  112 +++++++++++++++++++++++++++++-------------\n 1 file changed, 78 insertions(+), 34 deletions(-)\n\ncommit 91fd97ae7c4de23c61d481c98c9352f0639d76dd\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Apr 28 20:21:37 2010 +0200\n\n    fallback: Pass the correct extents for unbounbded operations\n\n src/cairo-surface-fallback.c |   20 +++++++++++++-------\n 1 file changed, 13 insertions(+), 7 deletions(-)\n\ncommit 06e9caf86199e8261a07db6d4774628fa147728d\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Apr 28 20:05:13 2010 +0200\n\n    image: pixman_image_fill_rectangles() => pixman_image_fill_boxes()\n\n src/cairo-image-surface.c |   32 ++++++++++++++++----------------\n 1 file changed, 16 insertions(+), 16 deletions(-)\n\ncommit bc49df322770b3bd1797c0e153b97f1f296fbd1e\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Apr 28 19:56:36 2010 +0200\n\n    pixman_image_composite => pixman_image_composite32\n    \n    Fix up the remaining callers\n\n src/cairo-gl-surface.c    |   12 ++++++------\n src/cairo-image-surface.c |   12 ++++++------\n 2 files changed, 12 insertions(+), 12 deletions(-)\n\ncommit 393da364a7f26e696141c58d4fb6fdefb2ea245a\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Apr 28 18:18:15 2010 +0200\n\n    fallback: Sanitize code that queries surface extents\n    \n    The previous code was setting extents.is_bounded, but that value has a\n    completely different meaning.\n\n src/cairo-surface-fallback.c |   20 ++++++++++----------\n 1 file changed, 10 insertions(+), 10 deletions(-)\n\ncommit 13914039567d5e8269fc29c51018ce172a40f2e9\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Apr 28 13:05:28 2010 +0200\n\n    test: run xlib-expose-event test unconditionally\n\n test/Makefile.sources |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 2ce1afa3222145e9c4f8c74a0034e0da9e93b70b\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Apr 28 12:54:54 2010 +0200\n\n    test-suite: add image_diff_is_failure() function\n    \n    This cleans the code and fixes a boolean logic error where this check\n    was done manually.\n\n test/buffer-diff.c         |    8 ++++++++\n test/buffer-diff.h         |    4 ++++\n test/cairo-test-trace.c    |    3 +--\n test/cairo-test.c          |    9 +++------\n test/fallback-resolution.c |    3 +--\n test/xlib-surface.c        |    4 ++--\n 6 files changed, 19 insertions(+), 12 deletions(-)\n\ncommit 2a91d425088cb8a93de76f2f91f32a7f23f0aecd\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Apr 28 12:26:29 2010 +0200\n\n    fallback: Fix clip_region handling in mask creation\n    \n    Fixes the xlib-expose-event test.\n\n src/cairo-surface-fallback.c |   16 +++++++++++++++-\n 1 file changed, 15 insertions(+), 1 deletion(-)\n\ncommit bb853916f3581af13cc1abff185ef5e0218f9f1e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 28 11:37:59 2010 +0100\n\n    image: Generate clear/white/black images when !HAS_ATOMIC_OPS\n    \n    Andrea reported that b74cc0f broke compilation without atomic ops.\n\n src/cairo-image-surface.c |   10 ++++++++++\n 1 file changed, 10 insertions(+)\n\ncommit 45d4c6e0b2fe62a3c6f1fdb7f359c9771111b470\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 28 10:01:06 2010 +0100\n\n    script: Replace the missing \" \" after pop\n    \n    I accidentally deleted the whitespace after popping the recording\n    surface, thus causing the scripts to be broken.\n\n src/cairo-script-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 6a99e83c50d715ba1e47aa5c7be714a423568e57\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 28 09:55:20 2010 +0100\n\n    subsurface: Mark the image as !clear after copying.\n\n src/cairo-surface-subsurface.c |   22 ++++++++++++----------\n 1 file changed, 12 insertions(+), 10 deletions(-)\n\ncommit ca3df75e8f876991f2dc9e85c9daa3fd96e826d2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 28 09:54:56 2010 +0100\n\n    script: Reconstruct subsurfaces.\n\n src/cairo-script-surface.c |   84 ++++++++++++++++++++++++++++++--------------\n 1 file changed, 58 insertions(+), 26 deletions(-)\n\ncommit 0f0d349a400e097856e6d9863e66c0a041e65c35\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 28 09:54:37 2010 +0100\n\n    trace: Wrap cairo_surface_create_for_region()\n\n util/cairo-script/cairo-script-operators.c |   33 +++++++++++++++++++++++++\n util/cairo-trace/trace.c                   |   36 ++++++++++++++++++++++++++++\n 2 files changed, 69 insertions(+)\n\ncommit 80fc2a8e49aa6ab4646b14eed9a4cf348a9149b4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 28 09:50:49 2010 +0100\n\n    test: Expand xlib-expose-event to cover all backends\n    \n    Use a similar surface to create an equivalent backing surface for\n    any backend, thus enabling the test to run against any target.\n    \n    The comment about forcing fallbacks has long since been false.\n\n test/xlib-expose-event.c |   76 ++++++----------------------------------------\n 1 file changed, 9 insertions(+), 67 deletions(-)\n\ncommit d3c4349730be991db0c85094103c744fc2d94836\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Apr 27 21:04:52 2010 +0100\n\n    test: Mark surfaces as finished if the data goes out of scope.\n    \n    The issue being that as the on-stack data is being referenced via a\n    zero-copy snapshot outside of the functions scope as the surface is only\n    finished and the source written long after the draw() returns. The\n    correct procedure is that the user must call cairo_surface_finish()\n    prior to any surface becoming inaccessible. In this case, this triggers\n    the snapshot to preserve a copy of the data whilst it is still valid.\n\n test/bilevel-image.c                   |    4 +++-\n test/filter-nearest-offset.c           |    1 +\n test/mask-ctm.c                        |    4 +++-\n test/mask-surface-ctm.c                |    1 +\n test/move-to-show-surface.c            |    2 ++\n test/paint-repeat.c                    |    1 +\n test/paint-source-alpha.c              |    1 +\n test/paint-with-alpha.c                |    1 +\n test/rgb24-ignore-alpha.c              |    1 +\n test/scale-down-source-surface-paint.c |    1 +\n test/scale-source-surface-paint.c      |    1 +\n test/set-source.c                      |    1 +\n test/smask-image-mask.c                |    4 +++-\n test/smask.c                           |    4 +++-\n test/source-surface-scale-paint.c      |    1 +\n test/translate-show-surface.c          |    1 +\n test/zero-alpha.c                      |    1 +\n 17 files changed, 26 insertions(+), 4 deletions(-)\n\ncommit a5f54e48e3136076f3c8c60fc068f6a2105d9a33\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Apr 27 21:05:22 2010 +0100\n\n    snapshot: The snapshot masquerades as the target surface type.\n    \n    Not wholly convinced this is a good idea, but it matches the behaviour\n    of the other internal surface types.\n\n src/cairo-surface-snapshot.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 4a678afdf73d6f7b2b8a532ac7024976702c8aac\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Apr 27 18:57:56 2010 +0100\n\n    snapshot: Simply memcpy if the cloned image matches the original.\n\n src/cairo-surface-snapshot.c |   16 ++++++++++------\n 1 file changed, 10 insertions(+), 6 deletions(-)\n\ncommit b74cc0f6d5b71295c70d4c29e24ab252175f9a5b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Apr 27 18:57:00 2010 +0100\n\n    image: Convert 1x1 samples into solid colors.\n    \n    If the sampled extents of the operation on an image surface is just a\n    single pixel, we can safely convert to a solid color.\n\n src/cairo-image-surface.c |  161 ++++++++++++++++++++++++++++++++++++++-------\n 1 file changed, 136 insertions(+), 25 deletions(-)\n\ncommit f5cf131a9d8984bd6b3403396beed2ffbc26bded\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Apr 27 18:56:23 2010 +0100\n\n    surface: skip OVER is the source is clear.\n    \n    If the source has no alpha, the OVER operation becomes DST, i.e. a\n    no-op.\n\n src/cairo-surface.c |   24 ++++++++++++++++++++++++\n 1 file changed, 24 insertions(+)\n\ncommit 453b1cba11f71694cfe0c3d934ac1f5aabda67fd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Apr 27 16:47:31 2010 +0100\n\n    test: Update image ref images, and used fonts in README\n\n test/Makefile.am                            |    2 +-\n test/README                                 |    6 +++---\n test/finer-grained-fallbacks.argb32.ref.png |  Bin 0 -> 1068 bytes\n test/finer-grained-fallbacks.ref.png        |  Bin 1070 -> 0 bytes\n test/finer-grained-fallbacks.rgb24.ref.png  |  Bin 839 -> 837 bytes\n test/ft-text-vertical-layout-type1.ref.png  |  Bin 3644 -> 3591 bytes\n test/ft-text-vertical-layout-type3.ref.png  |  Bin 3608 -> 3616 bytes\n test/mask-glyphs.ref.png                    |  Bin 1189352 -> 1189351 bytes\n test/smask-text.ref.png                     |  Bin 1874 -> 1672 bytes\n test/smask.ref.png                          |  Bin 3423 -> 3396 bytes\n 10 files changed, 4 insertions(+), 4 deletions(-)\n\ncommit 70656bba81e01eaf7b48817b2ca16fdf6d0b4bd5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Apr 27 14:19:22 2010 +0100\n\n    test: Add image16 refs\n\n test/Makefile.am                                   |  144 ++++++++++++++++++++\n test/big-line.image16.ref.png                      |  Bin 0 -> 988 bytes\n test/bug-bo-rectangular.image16.ref.png            |  Bin 0 -> 955 bytes\n test/caps-joins-alpha.image16.ref.png              |  Bin 0 -> 2268 bytes\n test/caps-joins-curve.image16.ref.png              |  Bin 0 -> 4928 bytes\n test/caps-joins.image16.ref.png                    |  Bin 0 -> 2587 bytes\n test/caps-sub-paths.image16.ref.png                |  Bin 0 -> 171 bytes\n test/caps.image16.ref.png                          |  Bin 0 -> 1936 bytes\n test/clear-source.image16.ref.png                  |  Bin 0 -> 909 bytes\n test/clip-disjoint.image16.ref.png                 |  Bin 0 -> 3886 bytes\n test/clip-fill-no-op.image16.ref.png               |  Bin 0 -> 153 bytes\n test/clip-fill-rule.image16.ref.png                |  Bin 0 -> 356 bytes\n test/clip-fill-unbounded.image16.ref.png           |  Bin 0 -> 1204 bytes\n test/clip-fill.image16.ref.png                     |  Bin 0 -> 904 bytes\n test/clip-image.image16.ref.png                    |  Bin 0 -> 2032 bytes\n test/clip-operator.image16.ref.png                 |  Bin 0 -> 3131 bytes\n test/clip-push-group.image16.ref.png               |  Bin 0 -> 159 bytes\n test/clip-shape.image16.ref.png                    |  Bin 0 -> 2488 bytes\n test/clip-stroke-no-op.image16.ref.png             |  Bin 0 -> 153 bytes\n test/clip-stroke-unbounded.image16.ref.png         |  Bin 0 -> 1255 bytes\n test/clip-stroke.image16.ref.png                   |  Bin 0 -> 1308 bytes\n test/clip-text.image16.ref.png                     |  Bin 0 -> 811 bytes\n test/clip-twice.image16.ref.png                    |  Bin 0 -> 1069 bytes\n test/clipped-group.image16.ref.png                 |  Bin 0 -> 281 bytes\n test/clipped-surface.image16.ref.png               |  Bin 0 -> 296 bytes\n test/close-path-current-point.image16.ref.png      |  Bin 0 -> 1804 bytes\n ...omposite-integer-translate-over.image16.ref.png |  Bin 0 -> 11570 bytes\n ...posite-integer-translate-source.image16.ref.png |  Bin 0 -> 11570 bytes\n test/copy-path.image16.ref.png                     |  Bin 0 -> 556 bytes\n test/culled-glyphs.image16.ref.png                 |  Bin 0 -> 426 bytes\n test/dash-caps-joins.image16.ref.png               |  Bin 0 -> 4491 bytes\n test/dash-curve.image16.ref.png                    |  Bin 0 -> 32445 bytes\n test/dash-scale.image16.ref.png                    |  Bin 0 -> 7748 bytes\n test/dash-state.image16.ref.png                    |  Bin 0 -> 7910 bytes\n test/degenerate-arc.image16.ref.png                |  Bin 0 -> 592 bytes\n test/degenerate-arcs.image16.ref.png               |  Bin 0 -> 120 bytes\n test/degenerate-curve-to.image16.ref.png           |  Bin 0 -> 278 bytes\n test/degenerate-pen.image16.ref.png                |  Bin 0 -> 954 bytes\n test/degenerate-rel-curve-to.image16.ref.png       |  Bin 0 -> 279 bytes\n test/extend-pad-border.image16.ref.png             |  Bin 0 -> 446 bytes\n test/extend-reflect-similar.image16.ref.png        |  Bin 0 -> 99786 bytes\n test/extend-reflect.image16.ref.png                |  Bin 0 -> 99786 bytes\n test/extend-repeat-similar.image16.ref.png         |  Bin 0 -> 83738 bytes\n test/extend-repeat.image16.ref.png                 |  Bin 0 -> 83738 bytes\n test/extended-blend-alpha.image16.ref.png          |  Bin 0 -> 4626 bytes\n test/extended-blend.image16.ref.png                |  Bin 0 -> 4145 bytes\n test/fill-alpha-pattern.image16.ref.png            |  Bin 0 -> 3380 bytes\n test/fill-alpha.image16.ref.png                    |  Bin 0 -> 2145 bytes\n test/fill-and-stroke-alpha-add.image16.ref.png     |  Bin 0 -> 536 bytes\n test/fill-and-stroke-alpha.image16.ref.png         |  Bin 0 -> 470 bytes\n test/fill-and-stroke.image16.ref.png               |  Bin 0 -> 251 bytes\n test/fill-degenerate-sort-order.image16.ref.png    |  Bin 0 -> 1753 bytes\n test/fill-image.image16.ref.png                    |  Bin 0 -> 1163 bytes\n test/fill-rule.image16.ref.png                     |  Bin 0 -> 1625 bytes\n test/filter-bilinear-extents.image16.ref.png       |  Bin 0 -> 895 bytes\n test/filter-nearest-transformed.image16.ref.png    |  Bin 0 -> 418 bytes\n test/finer-grained-fallbacks.image16.ref.png       |  Bin 0 -> 862 bytes\n test/font-matrix-translation.image16.ref.png       |  Bin 0 -> 852 bytes\n test/ft-show-glyphs-positioning.image16.ref.png    |  Bin 0 -> 2772 bytes\n test/ft-show-glyphs-table.image16.ref.png          |  Bin 0 -> 8052 bytes\n test/ft-text-vertical-layout-type1.image16.ref.png |  Bin 0 -> 3072 bytes\n test/ft-text-vertical-layout-type3.image16.ref.png |  Bin 0 -> 3141 bytes\n test/glyph-cache-pressure.image16.ref.png          |  Bin 0 -> 2453 bytes\n test/group-clip.image16.ref.png                    |  Bin 0 -> 193 bytes\n test/group-unaligned.image16.ref.png               |  Bin 0 -> 395 bytes\n test/huge-linear.image16.ref.png                   |  Bin 0 -> 1542 bytes\n test/huge-radial.image16.ref.png                   |  Bin 0 -> 17893 bytes\n test/image-surface-source.image16.ref.png          |  Bin 0 -> 305 bytes\n test/joins.image16.ref.png                         |  Bin 0 -> 5858 bytes\n test/large-font.image16.ref.png                    |  Bin 0 -> 5713 bytes\n test/large-twin-antialias-mixed.image16.ref.png    |  Bin 0 -> 14398 bytes\n test/leaky-dashed-rectangle.image16.ref.png        |  Bin 0 -> 367 bytes\n test/leaky-dashed-stroke.image16.ref.png           |  Bin 0 -> 8089 bytes\n test/leaky-polygon.image16.ref.png                 |  Bin 0 -> 329 bytes\n test/line-width-scale.image16.ref.png              |  Bin 0 -> 4721 bytes\n test/linear-gradient-reflect.image16.ref.png       |  Bin 0 -> 190 bytes\n test/linear-gradient-subset.image16.ref.png        |  Bin 0 -> 791 bytes\n test/linear-gradient.image16.ref.png               |  Bin 0 -> 941 bytes\n test/linear-uniform.image16.ref.png                |  Bin 0 -> 131 bytes\n test/long-dashed-lines.image16.ref.png             |  Bin 0 -> 1974 bytes\n test/mask-alpha.image16.ref.png                    |  Bin 0 -> 560 bytes\n test/mask-glyphs.image16.ref.png                   |  Bin 0 -> 1053144 bytes\n test/mask-transformed-image.image16.ref.png        |  Bin 0 -> 2748 bytes\n test/mask-transformed-similar.image16.ref.png      |  Bin 0 -> 2748 bytes\n test/mask.image16.ref.png                          |  Bin 0 -> 5533 bytes\n test/operator-alpha-alpha.image16.ref.png          |  Bin 0 -> 4140 bytes\n test/operator-source.image16.ref.png               |  Bin 0 -> 2756 bytes\n test/over-around-source.image16.ref.png            |  Bin 0 -> 491 bytes\n test/paint-source-alpha.image16.ref.png            |  Bin 0 -> 253 bytes\n test/paint-with-alpha.image16.ref.png              |  Bin 0 -> 253 bytes\n test/path-append.image16.ref.png                   |  Bin 0 -> 5252 bytes\n test/path-stroke-twice.image16.ref.png             |  Bin 0 -> 210 bytes\n test/pdf-surface-source.image16.ref.png            |  Bin 0 -> 305 bytes\n test/ps-surface-source.image16.ref.png             |  Bin 0 -> 305 bytes\n test/pthread-same-source.image16.ref.png           |  Bin 0 -> 1007 bytes\n test/push-group-color.image16.ref.png              |  Bin 0 -> 2277 bytes\n test/push-group.image16.ref.png                    |  Bin 0 -> 2286 bytes\n test/radial-gradient-source.image16.ref.png        |  Bin 0 -> 132037 bytes\n test/radial-gradient.image16.ref.png               |  Bin 0 -> 202415 bytes\n .../random-intersections-curves-eo.image16.ref.png |  Bin 0 -> 181565 bytes\n .../random-intersections-curves-nz.image16.ref.png |  Bin 0 -> 204090 bytes\n test/random-intersections-eo.image16.ref.png       |  Bin 0 -> 97747 bytes\n test/random-intersections-nonzero.image16.ref.png  |  Bin 0 -> 107644 bytes\n test/recording-surface-pattern.image16.ref.png     |  Bin 0 -> 2856 bytes\n test/reflected-stroke.image16.ref.png              |  Bin 0 -> 4254 bytes\n test/rotated-clip.image16.ref.png                  |  Bin 0 -> 3336 bytes\n test/rounded-rectangle-fill.image16.ref.png        |  Bin 0 -> 730 bytes\n test/rounded-rectangle-stroke.image16.ref.png      |  Bin 0 -> 732 bytes\n test/scale-offset-image.image16.ref.png            |  Bin 0 -> 7793 bytes\n test/scale-offset-similar.image16.ref.png          |  Bin 0 -> 7793 bytes\n test/select-font-face.image16.ref.png              |  Bin 0 -> 1962 bytes\n test/show-text-current-point.image16.ref.png       |  Bin 0 -> 1932 bytes\n test/smask-fill.image16.ref.png                    |  Bin 0 -> 925 bytes\n test/smask-mask.image16.ref.png                    |  Bin 0 -> 1358 bytes\n test/smask-paint.image16.ref.png                   |  Bin 0 -> 1469 bytes\n test/smask-stroke.image16.ref.png                  |  Bin 0 -> 1330 bytes\n test/smask-text.image16.ref.png                    |  Bin 0 -> 1206 bytes\n test/smask.image16.ref.png                         |  Bin 0 -> 2213 bytes\n test/spline-decomposition.image16.ref.png          |  Bin 0 -> 14064 bytes\n test/stroke-ctm-caps.image16.ref.png               |  Bin 0 -> 908 bytes\n test/stroke-image.image16.ref.png                  |  Bin 0 -> 1167 bytes\n test/subsurface.image16.ref.png                    |  Bin 0 -> 1430 bytes\n test/surface-pattern-operator.image16.ref.png      |  Bin 0 -> 1977 bytes\n test/surface-pattern-scale-down.image16.ref.png    |  Bin 0 -> 1313 bytes\n test/surface-pattern-scale-up.image16.ref.png      |  Bin 0 -> 3864 bytes\n test/surface-pattern.image16.ref.png               |  Bin 0 -> 11870 bytes\n test/svg-surface-source.image16.ref.png            |  Bin 0 -> 305 bytes\n test/text-antialias-gray.image16.ref.png           |  Bin 0 -> 895 bytes\n test/text-antialias-subpixel.image16.ref.png       |  Bin 0 -> 866 bytes\n test/text-glyph-range.image16.ref.png              |  Bin 0 -> 1731 bytes\n test/text-rotate.image16.ref.png                   |  Bin 0 -> 12599 bytes\n test/text-transform.image16.ref.png                |  Bin 0 -> 4469 bytes\n test/transforms.image16.ref.png                    |  Bin 0 -> 326 bytes\n test/trap-clip.image16.ref.png                     |  Bin 0 -> 4344 bytes\n test/twin-antialias-gray.image16.ref.png           |  Bin 0 -> 3005 bytes\n test/twin-antialias-mixed.image16.ref.png          |  Bin 0 -> 2049 bytes\n test/twin-antialias-subpixel.image16.ref.png       |  Bin 0 -> 3005 bytes\n test/twin.image16.ref.png                          |  Bin 0 -> 3005 bytes\n test/unbounded-operator.image16.ref.png            |  Bin 0 -> 1276 bytes\n test/user-font-mask.image16.ref.png                |  Bin 0 -> 4948 bytes\n test/user-font-proxy.image16.ref.png               |  Bin 0 -> 14460 bytes\n test/user-font-rescale.image16.ref.png             |  Bin 0 -> 12590 bytes\n test/user-font.image16.ref.png                     |  Bin 0 -> 5814 bytes\n test/xcomposite-projection.image16.ref.png         |  Bin 0 -> 1000 bytes\n test/xlib-surface-source.image16.ref.png           |  Bin 0 -> 305 bytes\n 145 files changed, 144 insertions(+)\n\ncommit ebe6f2ac6988991afde0d685bea9f207ed3360d8\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Tue Apr 27 10:59:09 2010 +0200\n\n    quartz: Assert success of path creation\n    \n    Path creation can only fail because of the callbacks, but in quartz\n    they all return CAIRO_STATUS_SUCCESS. Therefore we can just assert\n    that path creation was successful and simplify calling functions\n    (as they don't have to handle potential errors anymore).\n\n src/cairo-quartz-surface.c |   35 +++++++++++++++--------------------\n 1 file changed, 15 insertions(+), 20 deletions(-)\n\ncommit f67b6009278ef3dfe91ddbffb989dcfeed174352\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Sun Apr 4 11:50:41 2010 +0200\n\n    quartz: Simplify path creation\n    \n    If paths are created before changing the ctm (when stroking) no\n    multiplication is needed in the path construction code.\n\n src/cairo-quartz-surface.c |   60 ++++++++------------------------------------\n 1 file changed, 10 insertions(+), 50 deletions(-)\n\ncommit 3b2ceff0502ba409c161e497ebe015e0a0a88847\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Wed Apr 7 18:34:25 2010 +0200\n\n    quartz: Stroke without ctm_inverse multiplication\n    \n    If the CTM is not changed before creating the path, no multiplication\n    needs to be made between points and the inverse of the CTM.\n\n src/cairo-quartz-surface.c |   10 +++++-----\n 1 file changed, 5 insertions(+), 5 deletions(-)\n\ncommit 514d366cde689f8200b049834bebbd421d5d8bcb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Apr 27 11:07:09 2010 +0100\n\n    snapshot: propagate status on finish\n\n src/cairo-surface-snapshot.c |   11 ++++++++---\n 1 file changed, 8 insertions(+), 3 deletions(-)\n\ncommit a505104013a1db0c8b1092c8a1848d7f0b02e6bc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Apr 26 20:22:13 2010 +0100\n\n    image: Compute sample extents\n    \n    In order to reuse the original image as the pixman pattern, then the\n    entire operation must be wholly contained within the extents of the\n    image (including subsurfaces) and be reducible to an untransformed\n    REPEAT_NONE.\n\n src/cairo-image-surface.c |   72 +++++++++++++++++++++++++++++----------------\n src/cairo-pattern.c       |    2 +-\n src/cairoint.h            |    4 +++\n 3 files changed, 52 insertions(+), 26 deletions(-)\n\ncommit b8a7f8621a84083735d0e2c8748f5fa2b7f4b36a\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Tue Apr 27 10:17:23 2010 +0200\n\n    Update FSF address\n    \n    I updated the Free Software Foundation address using the following script.\n    \n    for i in $(git grep Temple | cut -d: -f1 )\n    do\n      sed -e 's/59 Temple Place[, -]* Suite 330, Boston, MA *02111-1307[, ]* USA/51 Franklin Street, Suite 500, Boston, MA 02110-1335, USA/' -i \"$i\"\n    done\n    \n    Fixes http://bugs.freedesktop.org/show_bug.cgi?id=21356\n\n COPYING-LGPL-2.1                               |    4 ++--\n boilerplate/cairo-boilerplate-drm.c            |    2 +-\n boilerplate/cairo-boilerplate-gl.c             |    2 +-\n boilerplate/cairo-boilerplate-qt.cpp           |    2 +-\n boilerplate/cairo-boilerplate-vg.c             |    2 +-\n build/aclocal.pkg.m4                           |    2 +-\n doc/tutorial/src/include/cairo-tutorial-gtk.h  |    2 +-\n doc/tutorial/src/include/cairo-tutorial-pdf.h  |    2 +-\n doc/tutorial/src/include/cairo-tutorial-png.h  |    2 +-\n doc/tutorial/src/include/cairo-tutorial-xlib.h |    2 +-\n doc/tutorial/src/include/cairo-tutorial.h      |    2 +-\n src/cairo-analysis-surface-private.h           |    2 +-\n src/cairo-analysis-surface.c                   |    2 +-\n src/cairo-arc-private.h                        |    2 +-\n src/cairo-arc.c                                |    2 +-\n src/cairo-array.c                              |    2 +-\n src/cairo-atomic-private.h                     |    2 +-\n src/cairo-atomic.c                             |    2 +-\n src/cairo-base64-stream.c                      |    2 +-\n src/cairo-base85-stream.c                      |    2 +-\n src/cairo-bentley-ottmann-rectangular.c        |    2 +-\n src/cairo-bentley-ottmann-rectilinear.c        |    2 +-\n src/cairo-bentley-ottmann.c                    |    2 +-\n src/cairo-beos-surface.cpp                     |    2 +-\n src/cairo-beos.h                               |    2 +-\n src/cairo-botor-scan-converter.c               |    2 +-\n src/cairo-boxes-private.h                      |    2 +-\n src/cairo-boxes.c                              |    2 +-\n src/cairo-cache-private.h                      |    2 +-\n src/cairo-cache.c                              |    2 +-\n src/cairo-cff-subset.c                         |    2 +-\n src/cairo-clip-private.h                       |    2 +-\n src/cairo-clip.c                               |    2 +-\n src/cairo-color.c                              |    2 +-\n src/cairo-combsort-private.h                   |    2 +-\n src/cairo-compiler-private.h                   |    2 +-\n src/cairo-composite-rectangles-private.h       |    2 +-\n src/cairo-composite-rectangles.c               |    2 +-\n src/cairo-debug.c                              |    2 +-\n src/cairo-deflate-stream.c                     |    2 +-\n src/cairo-deprecated.h                         |    2 +-\n src/cairo-device-private.h                     |    2 +-\n src/cairo-device.c                             |    2 +-\n src/cairo-directfb-surface.c                   |    2 +-\n src/cairo-directfb.h                           |    2 +-\n src/cairo-drm.h                                |    2 +-\n src/cairo-egl-context.c                        |    2 +-\n src/cairo-error-private.h                      |    2 +-\n src/cairo-fixed-private.h                      |    2 +-\n src/cairo-fixed-type-private.h                 |    2 +-\n src/cairo-fixed.c                              |    2 +-\n src/cairo-font-face-twin.c                     |    2 +-\n src/cairo-font-face.c                          |    2 +-\n src/cairo-font-options.c                       |    2 +-\n src/cairo-freed-pool-private.h                 |    2 +-\n src/cairo-freed-pool.c                         |    2 +-\n src/cairo-ft-font.c                            |    2 +-\n src/cairo-ft-private.h                         |    2 +-\n src/cairo-ft.h                                 |    2 +-\n src/cairo-gl-glyphs.c                          |    2 +-\n src/cairo-gl-private.h                         |    2 +-\n src/cairo-gl-shaders.c                         |    2 +-\n src/cairo-gl-surface.c                         |    2 +-\n src/cairo-gl.h                                 |    2 +-\n src/cairo-glx-context.c                        |    2 +-\n src/cairo-gstate-private.h                     |    2 +-\n src/cairo-gstate.c                             |    2 +-\n src/cairo-hash-private.h                       |    2 +-\n src/cairo-hash.c                               |    2 +-\n src/cairo-hull.c                               |    2 +-\n src/cairo-image-info-private.h                 |    2 +-\n src/cairo-image-info.c                         |    2 +-\n src/cairo-image-surface.c                      |    2 +-\n src/cairo-list-private.h                       |    2 +-\n src/cairo-lzw.c                                |    2 +-\n src/cairo-malloc-private.h                     |    2 +-\n src/cairo-matrix.c                             |    2 +-\n src/cairo-misc.c                               |    2 +-\n src/cairo-mutex-impl-private.h                 |    2 +-\n src/cairo-mutex-list-private.h                 |    2 +-\n src/cairo-mutex-private.h                      |    2 +-\n src/cairo-mutex-type-private.h                 |    2 +-\n src/cairo-mutex.c                              |    2 +-\n src/cairo-os2-private.h                        |    2 +-\n src/cairo-os2-surface.c                        |    2 +-\n src/cairo-os2.h                                |    2 +-\n src/cairo-output-stream-private.h              |    2 +-\n src/cairo-output-stream.c                      |    2 +-\n src/cairo-paginated-private.h                  |    2 +-\n src/cairo-paginated-surface-private.h          |    2 +-\n src/cairo-paginated-surface.c                  |    2 +-\n src/cairo-path-bounds.c                        |    2 +-\n src/cairo-path-fill.c                          |    2 +-\n src/cairo-path-fixed-private.h                 |    2 +-\n src/cairo-path-fixed.c                         |    2 +-\n src/cairo-path-in-fill.c                       |    2 +-\n src/cairo-path-private.h                       |    2 +-\n src/cairo-path-stroke.c                        |    2 +-\n src/cairo-path.c                               |    2 +-\n src/cairo-pdf-operators-private.h              |    2 +-\n src/cairo-pdf-operators.c                      |    2 +-\n src/cairo-pdf-surface-private.h                |    2 +-\n src/cairo-pdf-surface.c                        |    2 +-\n src/cairo-pdf.h                                |    2 +-\n src/cairo-pen.c                                |    2 +-\n src/cairo-png.c                                |    2 +-\n src/cairo-polygon.c                            |    2 +-\n src/cairo-private.h                            |    2 +-\n src/cairo-ps-surface-private.h                 |    2 +-\n src/cairo-ps-surface.c                         |    2 +-\n src/cairo-ps.h                                 |    2 +-\n src/cairo-qt-surface.cpp                       |    2 +-\n src/cairo-qt.h                                 |    2 +-\n src/cairo-quartz-font.c                        |    2 +-\n src/cairo-quartz-image-surface.c               |    2 +-\n src/cairo-quartz-image.h                       |    2 +-\n src/cairo-quartz-private.h                     |    2 +-\n src/cairo-quartz-surface.c                     |    2 +-\n src/cairo-quartz.h                             |    2 +-\n src/cairo-recording-surface-private.h          |    2 +-\n src/cairo-recording-surface.c                  |    2 +-\n src/cairo-rectangle.c                          |    2 +-\n src/cairo-rectangular-scan-converter.c         |    2 +-\n src/cairo-reference-count-private.h            |    2 +-\n src/cairo-region-private.h                     |    2 +-\n src/cairo-region.c                             |    2 +-\n src/cairo-rtree-private.h                      |    2 +-\n src/cairo-rtree.c                              |    2 +-\n src/cairo-scaled-font-private.h                |    2 +-\n src/cairo-scaled-font-subsets-private.h        |    2 +-\n src/cairo-scaled-font-subsets.c                |    2 +-\n src/cairo-scaled-font.c                        |    2 +-\n src/cairo-script-surface.c                     |    2 +-\n src/cairo-script.h                             |    2 +-\n src/cairo-skia-surface.cpp                     |    2 +-\n src/cairo-skia.h                               |    2 +-\n src/cairo-slope-private.h                      |    2 +-\n src/cairo-slope.c                              |    2 +-\n src/cairo-spline.c                             |    2 +-\n src/cairo-stroke-style.c                       |    2 +-\n src/cairo-surface-clipper-private.h            |    2 +-\n src/cairo-surface-clipper.c                    |    2 +-\n src/cairo-surface-fallback-private.h           |    2 +-\n src/cairo-surface-fallback.c                   |    2 +-\n src/cairo-surface-offset-private.h             |    2 +-\n src/cairo-surface-offset.c                     |    2 +-\n src/cairo-surface-private.h                    |    2 +-\n src/cairo-surface-snapshot-private.h           |    2 +-\n src/cairo-surface-snapshot.c                   |    2 +-\n src/cairo-surface-subsurface-private.h         |    2 +-\n src/cairo-surface-subsurface.c                 |    2 +-\n src/cairo-surface-wrapper-private.h            |    2 +-\n src/cairo-surface-wrapper.c                    |    2 +-\n src/cairo-surface.c                            |    2 +-\n src/cairo-svg-surface-private.h                |    2 +-\n src/cairo-svg-surface.c                        |    2 +-\n src/cairo-svg.h                                |    2 +-\n src/cairo-system.c                             |    2 +-\n src/cairo-tee-surface-private.h                |    2 +-\n src/cairo-tee-surface.c                        |    2 +-\n src/cairo-toy-font-face.c                      |    2 +-\n src/cairo-traps.c                              |    2 +-\n src/cairo-truetype-subset-private.h            |    2 +-\n src/cairo-truetype-subset.c                    |    2 +-\n src/cairo-type1-fallback.c                     |    2 +-\n src/cairo-type1-private.h                      |    2 +-\n src/cairo-type1-subset.c                       |    2 +-\n src/cairo-type3-glyph-surface-private.h        |    2 +-\n src/cairo-type3-glyph-surface.c                |    2 +-\n src/cairo-types-private.h                      |    2 +-\n src/cairo-unicode.c                            |    2 +-\n src/cairo-user-font-private.h                  |    2 +-\n src/cairo-user-font.c                          |    2 +-\n src/cairo-version.c                            |    2 +-\n src/cairo-vg-surface.c                         |    2 +-\n src/cairo-vg.h                                 |    2 +-\n src/cairo-wideint-private.h                    |    2 +-\n src/cairo-wideint-type-private.h               |    2 +-\n src/cairo-wideint.c                            |    2 +-\n src/cairo-win32-font.c                         |    2 +-\n src/cairo-win32-printing-surface.c             |    2 +-\n src/cairo-win32-private.h                      |    2 +-\n src/cairo-win32-surface.c                      |    2 +-\n src/cairo-win32.h                              |    2 +-\n src/cairo-xcb-connection-core.c                |    2 +-\n src/cairo-xcb-connection-render.c              |    2 +-\n src/cairo-xcb-connection-shm.c                 |    2 +-\n src/cairo-xcb-connection.c                     |    2 +-\n src/cairo-xcb-private.h                        |    2 +-\n src/cairo-xcb-screen.c                         |    2 +-\n src/cairo-xcb-shm.c                            |    2 +-\n src/cairo-xcb-surface-cairo.c                  |    2 +-\n src/cairo-xcb-surface-core.c                   |    2 +-\n src/cairo-xcb-surface-private.h                |    2 +-\n src/cairo-xcb-surface-render.c                 |    2 +-\n src/cairo-xcb-surface.c                        |    2 +-\n src/cairo-xcb.h                                |    2 +-\n src/cairo-xlib-display.c                       |    2 +-\n src/cairo-xlib-private.h                       |    2 +-\n src/cairo-xlib-screen.c                        |    2 +-\n src/cairo-xlib-surface-private.h               |    2 +-\n src/cairo-xlib-surface.c                       |    2 +-\n src/cairo-xlib-visual.c                        |    2 +-\n src/cairo-xlib-xcb-surface.c                   |    2 +-\n src/cairo-xlib-xrender-private.h               |    2 +-\n src/cairo-xlib-xrender.h                       |    2 +-\n src/cairo-xlib.h                               |    2 +-\n src/cairo-xml-surface.c                        |    2 +-\n src/cairo-xml.h                                |    2 +-\n src/cairo.c                                    |    2 +-\n src/cairo.h                                    |    2 +-\n src/cairoint.h                                 |    2 +-\n src/drm/cairo-drm-bo.c                         |    2 +-\n src/drm/cairo-drm-gallium-surface.c            |    2 +-\n src/drm/cairo-drm-i915-glyphs.c                |    2 +-\n src/drm/cairo-drm-i915-shader.c                |    2 +-\n src/drm/cairo-drm-i915-spans.c                 |    2 +-\n src/drm/cairo-drm-i915-surface.c               |    2 +-\n src/drm/cairo-drm-i965-glyphs.c                |    2 +-\n src/drm/cairo-drm-i965-shader.c                |    2 +-\n src/drm/cairo-drm-i965-spans.c                 |    2 +-\n src/drm/cairo-drm-i965-surface.c               |    2 +-\n src/drm/cairo-drm-intel-ioctl-private.h        |    2 +-\n src/drm/cairo-drm-intel-private.h              |    2 +-\n src/drm/cairo-drm-intel-surface.c              |    2 +-\n src/drm/cairo-drm-intel.c                      |    2 +-\n src/drm/cairo-drm-private.h                    |    2 +-\n src/drm/cairo-drm-radeon-private.h             |    2 +-\n src/drm/cairo-drm-radeon-surface.c             |    2 +-\n src/drm/cairo-drm-radeon.c                     |    2 +-\n src/drm/cairo-drm-surface.c                    |    2 +-\n src/drm/cairo-drm.c                            |    2 +-\n src/test-fallback-surface.c                    |    2 +-\n src/test-fallback-surface.h                    |    2 +-\n src/test-fallback16-surface.c                  |    2 +-\n src/test-fallback16-surface.h                  |    2 +-\n src/test-null-surface.c                        |    2 +-\n src/test-null-surface.h                        |    2 +-\n src/test-paginated-surface.c                   |    2 +-\n src/test-paginated-surface.h                   |    2 +-\n src/test-wrapping-surface.c                    |    2 +-\n src/test-wrapping-surface.h                    |    2 +-\n test/dash-offset.c                             |    2 +-\n test/miter-precision.c                         |    2 +-\n test/operator-alpha-alpha.c                    |    2 +-\n test/pdiff/args.c                              |    2 +-\n test/pdiff/args.h                              |    2 +-\n test/pdiff/lpyramid.c                          |    2 +-\n test/pdiff/lpyramid.h                          |    2 +-\n test/pdiff/pdiff.c                             |    2 +-\n test/pdiff/pdiff.h                             |    2 +-\n test/pdiff/perceptualdiff.c                    |    2 +-\n util/backtrace-symbols.c                       |    2 +-\n util/cairo-script/cairo-script-file.c          |    2 +-\n util/cairo-script/cairo-script-hash.c          |    2 +-\n util/cairo-script/cairo-script-interpreter.c   |    2 +-\n util/cairo-script/cairo-script-interpreter.h   |    2 +-\n util/cairo-script/cairo-script-objects.c       |    2 +-\n util/cairo-script/cairo-script-operators.c     |    2 +-\n util/cairo-script/cairo-script-private.h       |    2 +-\n util/cairo-script/cairo-script-scanner.c       |    2 +-\n util/cairo-script/cairo-script-stack.c         |    2 +-\n 262 files changed, 263 insertions(+), 263 deletions(-)\n\ncommit 9672aab6b7c3f1efc065a6e5eb69443a1ecaa723\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Apr 26 21:28:53 2010 +0200\n\n    tests: Integrate xlib-expose-event test into usual tests\n    \n    Previously the test was using the preamble vfunc and generating output\n    itself. Now it uses the draw function and ignores any but the xlib\n    backends.\n\n test/xlib-expose-event.c |   63 +++++++++++-----------------------------------\n 1 file changed, 15 insertions(+), 48 deletions(-)\n\ncommit 36e0a3d3a01f9962d97386ea2d3c60020e937a81\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Apr 26 18:18:27 2010 +0100\n\n    trace: Remove unused functions\n    \n    trace.c:1154: warning: \u2018_has_font_face_id\u2019 defined but not used\n    trace.c:1196: warning: \u2018_get_pattern_id\u2019 defined but not used\n    trace.c:1870: warning: \u2018_emit_font_face\u2019 defined but not used\n    trace.c:1882: warning: \u2018_emit_scaled_font\u2019 defined but not used\n\n util/cairo-trace/trace.c |   24 ------------------------\n 1 file changed, 24 deletions(-)\n\ncommit 3a2d9ffe0333090bb31ff01048ed506595f20cf9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Apr 26 18:17:49 2010 +0100\n\n    trace: Check return value to suppress compiler warning\n    \n    trace.c: In function \u2018get_prog_name\u2019:\n    trace.c:741: warning: ignoring return value of \u2018fgets\u2019, declared with\n    attribute warn_unused_result\n\n util/cairo-trace/trace.c |    5 ++++-\n 1 file changed, 4 insertions(+), 1 deletion(-)\n\ncommit 37be183412eb35abc11e602857602aee05839fc7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Apr 26 18:12:05 2010 +0100\n\n    trace: Trivial compiler warning fix\n    \n    trace.c:1665: warning: initialization from incompatible pointer type\n\n util/cairo-trace/trace.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 3c9e5d9792e101cfbd5a1116f06579539ed7b585\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Apr 26 18:13:36 2010 +0100\n\n    region: Cast to remove const to suppress compiler warnings.\n    \n    airo-region.c: In function \u2018cairo_region_intersect\u2019:\n    cairo-region.c:503: warning: passing argument 3 of\n    \u2018pixman_region32_intersect\u2019 discards qualifiers from pointer target type\n    /usr/local/include/pixman-1/pixman.h:518: note: expected \u2018struct\n    pixman_region32_t *\u2019 but argument is of type \u2018const struct pixman_region32_t *\u2019\n    \n    cairo-region.c: In function \u2018cairo_region_union\u2019:\n    cairo-region.c:566: warning: passing argument 3 of\n    \u2018pixman_region32_union\u2019 discards qualifiers from pointer target type\n    /usr/local/include/pixman-1/pixman.h:521: note: expected \u2018struct\n    pixman_region32_t *\u2019 but argument is of type \u2018const struct pixman_region32_t *\u2019\n\n src/cairo-region.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 8c72122df51a10a32b56cdf20e5a1037ee59a958\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Apr 25 10:30:12 2010 +0100\n\n    clip: Skip combining with solid pixel aligned boxes.\n\n src/cairo-clip.c |    6 ++++++\n 1 file changed, 6 insertions(+)\n\ncommit 240ebaf81a42c24c4d4267879c5ef8102e97017e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Apr 25 09:44:18 2010 +0100\n\n    clip: Fix sign reverse when combining with the clip surface.\n    \n    Finally, found the reversed sign in the clipping code, thanks cu!\n    \n    Fixes: test/clip-shape\n\n src/cairo-clip.c |   24 ++----------------------\n 1 file changed, 2 insertions(+), 22 deletions(-)\n\ncommit 4d3632761b928c14fb1ce257af077f45658d8537\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Apr 25 09:42:13 2010 +0100\n\n    clip: Report the surface offset when retrieving the clip mask\n    \n    Stop the callers from guessing the origin of the clip surface by\n    reporting it explicitly! This enables the clip to bypass any rectangles\n    overlaid on top of the clip surface, which is common when the backends\n    limit the clip to the extents of the operation -- but irrelevant to the\n    actual content of the clip mask\n\n src/cairo-clip-private.h        |    2 +-\n src/cairo-clip.c                |   26 ++++++++++++++++++++------\n src/cairo-image-surface.c       |   39 +++++++++++++++++++++------------------\n src/cairo-surface-fallback.c    |   20 ++++++++++----------\n src/cairo-xcb-surface-render.c  |   31 +++++++++++++++----------------\n src/drm/cairo-drm-i915-shader.c |    9 ++++-----\n src/drm/cairo-drm-i965-shader.c |    7 ++++---\n 7 files changed, 75 insertions(+), 59 deletions(-)\n\ncommit 241ce933f8fa44210015dcdc4a66b3f9d8ac56e8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Apr 25 09:37:50 2010 +0100\n\n    test: Add clip-shape\n    \n    cu found a bug when using clipping and fills with the image backend, but\n    it turns out to be the lost sign bug afflicting everything...\n    \n    To trigger the bug requires evaluating the clip surface prior to using\n    in with _cairo_clip_combine_with_surface(). Which is taken along a\n    particular path when using a clip mask with non-pixel geometry on image,\n    but more easily hit by the fallback code.\n    \n    Reported-by: <cairouser@yahoo.com>\n\n test/Makefile.am                      |    4 ++\n test/Makefile.sources                 |    1 +\n test/clip-shape.c                     |   86 +++++++++++++++++++++++++++++++++\n test/clip-shape.ps.ref.png            |  Bin 0 -> 1797 bytes\n test/clip-shape.ref.png               |  Bin 0 -> 2935 bytes\n test/clip-shape.xlib-fallback.ref.png |  Bin 0 -> 2916 bytes\n test/clip-shape.xlib.ref.png          |  Bin 0 -> 2944 bytes\n 7 files changed, 91 insertions(+)\n\ncommit 1687c7b7d3074de8eeea1a5c339df9a12cc38da2\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Apr 23 22:22:28 2010 +0200\n\n    xlib: Fix display closing to work properly\n    \n    Previously we free()'d the cairo_device's memory which was not good at\n    all. Now the code causes cairo_device_finish() instead.\n\n src/cairo-xlib-display.c |   37 +++++++++++++++++++++++--------------\n 1 file changed, 23 insertions(+), 14 deletions(-)\n\ncommit 637564c562de21c17c36d192d3ab1b3fe069754b\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Apr 23 22:10:32 2010 +0200\n\n    xlib: Fix screen device handling\n    \n    Add a _cairo_xlib_device_create() function that could easily be exported\n    as a replacement for _cairo_xlib_display_get(). This function returns a\n    cairo_device_t instead of a cairo_xlib_display_t because the display\n    isn't acquired.\n\n src/cairo-xlib-display.c |   33 ++++++++++++++++++---------------\n src/cairo-xlib-private.h |    4 ++--\n src/cairo-xlib-screen.c  |   23 ++++++++++++++++-------\n 3 files changed, 36 insertions(+), 24 deletions(-)\n\ncommit 49b52a8946cbd5f785f71069313e4a204358887b\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Apr 22 21:56:31 2010 +0200\n\n    gl: Make drawing to windows work again\n    \n    The correct MIN/MAG_FILTER wasn't set.\n\n src/cairo-gl-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 3efbc0c5c850d0cb5c5af5bcabbc7293670ea355\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue Apr 20 21:58:59 2010 +0200\n\n    gl: Only unref a surface if it exists\n    \n    Note: This will likely work for NULL clones, but I prefer not\n    dereferencing NULLs. That gives people a wrong understanding of the code\n    (i.e. me).\n\n src/cairo-gl-surface.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit 64662be4ef3851d21658e5fdb2efb6806b45eba8\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Apr 22 22:05:03 2010 +0200\n\n    gl: Use GLfloat instead of float in gl*Array() functions\n\n src/cairo-gl-surface.c |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit e4f84f97b2f5d37bc1fb7dd510df733053ffe624\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue Apr 20 21:33:50 2010 +0200\n\n    gl: Don't acquire the gl context twice\n\n src/cairo-gl-surface.c |    7 -------\n 1 file changed, 7 deletions(-)\n\ncommit e40a2d1f5eeea139e29c27e38495b9c0bf9e39a1\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Apr 22 22:03:29 2010 +0200\n\n    gl: Use correct type when uploading images\n\n src/cairo-gl-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 55cf323f963bbcc11bcc290eaf71656e1ba91efd\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Apr 22 21:58:01 2010 +0200\n\n    gl: fix typo in comment\n\n src/cairo-gl-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 887d43578c3acc7d45c8b2e3ade5da29be804eeb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Apr 23 20:14:03 2010 +0100\n\n    xlib: Simply release the ref, not destroy, from CloseDisplay.\n    \n    Do not call the destroy function directly, but rely on the reference\n    counting to call the notifier upon the last reference. Instead, simply\n    release the reference we were holding for the cache and CloseDisplay\n    callback.\n\n src/cairo-xlib-display.c |   22 ++++++++++++----------\n 1 file changed, 12 insertions(+), 10 deletions(-)\n\ncommit c63e3490a5fc2836837e7adcb5ecad62bdfd18ab\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Apr 22 20:33:06 2010 +0100\n\n    cairo: Handle the all-clipped state in cairo_push_group()\n    \n    Yet another bug reported by Jeff Muizelaar, thanks!\n    \n    Fixes: test/clip-empty-group\n\n src/cairo.c |   81 +++++++++++++++++++++++++++++++++--------------------------\n 1 file changed, 46 insertions(+), 35 deletions(-)\n\ncommit 567e485f28716d7b72cbf864a0c573148be91cd8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Apr 23 14:37:43 2010 +0100\n\n    test: Add clip-empty-group\n    \n    Exercise a bug reported by Jeff Muizelaar whereby cairo_push_group() was\n    broken by everything being clipped out.\n\n test/Makefile.am              |    1 +\n test/Makefile.sources         |    1 +\n test/clip-empty-group.c       |   65 +++++++++++++++++++++++++++++++++++++++++\n test/clip-empty-group.ref.png |  Bin 0 -> 103 bytes\n 4 files changed, 67 insertions(+)\n\ncommit 4438cc6a49e7e902dce045706f7125a2c3e2174b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Apr 3 18:10:57 2010 +0100\n\n    cairo: Use explicit device flushing.\n    \n    Now with the concept of a cairo_device_t and the ability to flush it,\n    we now longer require the heuristic of automatically flushing on behalf\n    of the user at the end of every context.\n\n src/cairo.c |   11 -----------\n 1 file changed, 11 deletions(-)\n\ncommit 0fc140abc3c848e72b1b2b959026355fdbd6a941\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 21 12:01:49 2010 +0100\n\n    pdf: Suppress compiler warning.\n\n src/cairo-pdf-operators.c |   12 ++++++------\n 1 file changed, 6 insertions(+), 6 deletions(-)\n\ncommit 1923a33a7277009b2898840d671fdc8f8d1b3922\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 21 11:59:33 2010 +0100\n\n    cairoint.h: Change ASSERT_NOT_REACHED to remove compiler warning\n\n src/cairoint.h |    3 +--\n 1 file changed, 1 insertion(+), 2 deletions(-)\n\ncommit d366da7d8c46b08673b9e36dd130608a311ded4b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Apr 23 14:38:42 2010 +0100\n\n    Win32 features update\n\n boilerplate/Makefile.win32.features |    8 --------\n src/Makefile.win32.features         |    8 --------\n 2 files changed, 16 deletions(-)\n\ncommit c1e51a0264d204716f7706fbc66c2a7786b7947c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Apr 23 14:33:53 2010 +0100\n\n    build: Spelling correction\n\n build/Makefile.win32.features-h |    1 -\n build/configure.ac.features     |    2 +-\n 2 files changed, 1 insertion(+), 2 deletions(-)\n\ncommit e0306da1d73509e2cfd0fce81a1b4259e5e3fcef\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 21 22:51:53 2010 +0100\n\n    configure: typo in check for xcb-shm\n\n configure.ac |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit b7fbda276df52de6a5ac67397a8d49657233fcfa\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Sun Apr 18 23:16:07 2010 +0200\n\n    Revert \"script: Another RGB16_565 warning.\"\n    \n    This reverts commit a9f506493371ac91494488e5ca38e57ceb5a10cb.\n    \n    The change was already applied in bdf8f50adae67498d5fe36727ed2cd34c0206509.\n\n src/cairo-script-surface.c |    6 ------\n 1 file changed, 6 deletions(-)\n\ncommit f74ad37e66bbdcc4d727ed6d931dde870d84c2f4\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Sun Apr 18 23:20:02 2010 +0200\n\n    xlib: Make display a cairo_device_t\n    \n    The code now uses the locking of the cairo_device_t instead of its own\n    mutexes.\n    \n    The code was modified so that cairo_surface_t does no longer reference\n    the display directly. Instead, it calls _cairo_xlib_display_acquire().\n    If a function assumes an already acquired display, it now requires the\n    caller to provide a cairo_xlib_display_t parameter. Functions that do\n    not require an acquired display will not require the display parameter\n    or they will take the cairo_device_t instead.\n\n src/cairo-xlib-display.c         |  234 +++++++---------\n src/cairo-xlib-private.h         |   66 +++--\n src/cairo-xlib-screen.c          |  161 +++--------\n src/cairo-xlib-surface-private.h |    2 -\n src/cairo-xlib-surface.c         |  557 ++++++++++++++++++++++----------------\n 5 files changed, 494 insertions(+), 526 deletions(-)\n\ncommit 2bffa2467ed67517419e425fc34fb5b8294a9e96\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Jan 27 10:56:22 2010 +0100\n\n    Use pixman_image_composite32()\n    \n    Replace all occurences of pixman_image_composite()\n\n src/cairo-directfb-surface.c   |   16 +-\n src/cairo-image-surface.c      |  352 ++++++++++++++++++++--------------------\n src/cairo-pattern.c            |   16 +-\n src/cairo-surface-snapshot.c   |   12 +-\n src/cairo-surface-subsurface.c |   24 +--\n src/cairo-xlib-surface.c       |   16 +-\n src/drm/cairo-drm-intel.c      |   12 +-\n 7 files changed, 224 insertions(+), 224 deletions(-)\n\ncommit 567923d66a375259a6a8083aa4ef1051097a60c5\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Jan 27 09:39:20 2010 +0100\n\n    image: Make unbounded fixup code not use pixman_fill()\n    \n    The new pixman_image_fill_boxes() does proper fallbacks for weird pixman\n    formats.\n\n src/cairo-image-surface.c |  123 +++++++++++++++++----------------------------\n 1 file changed, 47 insertions(+), 76 deletions(-)\n\ncommit b648365cfa2d808b34b924a6b105718e0673bb9b\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Jan 27 09:21:41 2010 +0100\n\n    Require pixman 0.17.5\n    \n    We want pixman_image_composite32() and pixman_image_fill_boxes()\n\n configure.ac |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 0a19ad7c104cd81fa2b93aaf7ef9302f50b3f369\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Apr 15 17:58:16 2010 +0200\n\n    gl: Get rid of \"return value not checked\" warnings\n    \n    Assert that those functions only return successfully.\n\n src/cairo-gl-surface.c |   42 ++++++++++++++++++++++++------------------\n 1 file changed, 24 insertions(+), 18 deletions(-)\n\ncommit 7745ea21e104d0a5eec1814f19bacb7334f42185\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Apr 14 15:59:36 2010 +0200\n\n    gl: acquire/release properly in _cairo_gl_draw_image()\n    \n    Fixes various testsuite failures, in particular ones related to masks.\n\n src/cairo-gl-surface.c |   16 ++++++++++++++--\n 1 file changed, 14 insertions(+), 2 deletions(-)\n\ncommit 596d3017a1b11cb9844e69330cdece7441929725\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue Apr 13 20:53:47 2010 +0200\n\n    gl: acquire/release context when getting images\n    \n    Avoids Mesa complaining about no current context.\n\n src/cairo-gl-surface.c |    7 +++++++\n 1 file changed, 7 insertions(+)\n\ncommit 46ef05c3d73af2b222602954b986832e77355a12\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Mar 29 12:58:18 2010 +0200\n\n    glx: Add getters for device's Display and GLXContext\n\n src/cairo-gl.h          |    6 ++++++\n src/cairo-glx-context.c |   30 ++++++++++++++++++++++++++++++\n 2 files changed, 36 insertions(+)\n\ncommit 712919223d08f8b4c43f828322fdc285560c137f\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Mar 26 15:50:10 2010 +0100\n\n    gl: Make code safe for multithreaded access\n    \n    The code callss the gl device's acquire/release in\n    cairo_device_acquire/release(). This way, external APIs can use these\n    functions to prepare for rendering GL.\n    \n    Also adds code to unset the glx context if it wasn't set when acquiring\n    the device. This allows multithreaded apps to work fine with just using\n    cairo APIs, but might introduce penalties in single-threaded\n    applications.\n\n src/cairo-egl-context.c |    2 ++\n src/cairo-gl-private.h  |    5 ++++-\n src/cairo-gl-surface.c  |   20 +++++++++++++++++++-\n src/cairo-glx-context.c |   37 +++++++++++++++++++++++++++++++++++--\n 4 files changed, 60 insertions(+), 4 deletions(-)\n\ncommit 8f2e82cea3405fa9a6591911c0d42ea3dd0c6180\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Thu Apr 15 17:48:24 2010 +0200\n\n    xcb: Make code not complain about every new format\n\n src/cairo-xcb-surface-render.c |   46 ++++++++++++++++------------------------\n 1 file changed, 18 insertions(+), 28 deletions(-)\n\ncommit 1d753b2f4d724c5ac3e452848ca4dda5891816a6\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue Feb 23 21:53:31 2010 +0100\n\n    xlib: Make code not complain about every new format\n\n src/cairo-xlib-surface.c |   46 ++++++++++++++++++----------------------------\n 1 file changed, 18 insertions(+), 28 deletions(-)\n\ncommit ebc9cc46fe7740c6d97e02edc66bae383413764b\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Fri Mar 5 15:08:34 2010 +0100\n\n    gl: Use right format\n    \n    The internal format should always be GL_RGBA.\n\n src/cairo-gl-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 4142f0836d6719dd136a5fc6ac1adaddd681a3f2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Apr 15 09:09:31 2010 +0100\n\n    gl: Handle component-alpha ADD\n    \n    A simple extension to the component-alpha OVER [as ca-ADD is just the\n    second pass in ca-OVER] to support amalgamation of glyph masks. This\n    speeds up firefox-36 by ~5% on g45.\n    \n    Before:\n      firefox-36-20090611   76.185\n    After:\n      firefox-36-20090611   72.863\n\n src/cairo-gl-surface.c |   16 +++++++++-------\n 1 file changed, 9 insertions(+), 7 deletions(-)\n\ncommit a4bae1956bee0be98a5a22bd82d417192776e7f0\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Apr 14 22:46:34 2010 +0200\n\n    gl: Really don't write error status to the inert object.\n\n src/cairo-gl-surface.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 5fed41ee2bb3097c1446c1cf2038c912d5932692\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Apr 14 22:43:29 2010 +0200\n\n    test: Add test checking that all setters properly check surface->status\n    \n    In particular, make sure that the setters when called on a const nil\n    surface don't try to set surface->status.\n\n test/Makefile.sources |    1 +\n test/error-setters.c  |  109 +++++++++++++++++++++++++++++++++++++++++++++++++\n 2 files changed, 110 insertions(+)\n\ncommit 6826f020014fff566678a1ff92014211e2a21d4c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 14 19:33:34 2010 +0100\n\n    gl: Don't write error status to the inert object.\n    \n    Reported-by: Benjamin Otte <otte@redhat.com>\n\n src/cairo-gl-surface.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 3814855a649ffca695ce31d97c291496e32d2e26\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 14 20:22:14 2010 +0100\n\n    script: Flush prior to modifying the image data.\n\n util/cairo-script/cairo-script-operators.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 03f7bfc351c27ab9d0b764a21bdcf2304e8c2e81\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 14 20:14:39 2010 +0100\n\n    rtree: Remove the false assert upon collapse.\n\n src/cairo-rtree.c |    2 --\n 1 file changed, 2 deletions(-)\n\ncommit b0383d0cd2b40185b1676d9c88d3647cecc1d7fd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 14 19:33:34 2010 +0100\n\n    svg: Don't write error status to the inert object.\n    \n    Reported-by: Benjamin Otte <otte@redhat.com>\n\n src/cairo-svg-surface.c |   37 +++++++++++++++++++++----------------\n 1 file changed, 21 insertions(+), 16 deletions(-)\n\ncommit 5274b63adb9ad808f94e6ea04707991ec1192694\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 14 19:33:34 2010 +0100\n\n    ps: Don't write error status to the inert object.\n    \n    Reported-by: Benjamin Otte <otte@redhat.com>\n\n src/cairo-pdf-surface.c |    2 --\n src/cairo-ps-surface.c  |   74 +++++++++++++++++------------------------------\n 2 files changed, 27 insertions(+), 49 deletions(-)\n\ncommit 45d23b8a791d5845025a1a4d93f99030ec9e0115\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 14 19:33:34 2010 +0100\n\n    pdf: Don't write error status to the inert object.\n    \n    Reported-by: Benjamin Otte <otte@redhat.com>\n\n src/cairo-pdf-surface.c |   41 ++++++++++++++++++++++-------------------\n 1 file changed, 22 insertions(+), 19 deletions(-)\n\ncommit 4351304b5110200b77e6851995cf533a929ba17e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 14 19:29:07 2010 +0100\n\n    Win32 features update.\n\n boilerplate/Makefile.win32.features |    8 ++++++++\n build/Makefile.win32.features-h     |    1 +\n 2 files changed, 9 insertions(+)\n\ncommit bd17b898b1c249aa0dc443bc303bad4fea8690bc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 14 19:11:15 2010 +0100\n\n    surface: Propagate the error status to _cairo_surface_get_device()\n    \n    If the surface is in error, the appropriate action is report the error\n    using an inert error cairo_device_t.\n    \n    Reported-by: Benjamin Otte <otte@redhat.com>\n\n src/cairo-surface.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 005596907fc9b62fa4bf72ec35e0d1a1a242ef93\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 14 19:05:09 2010 +0100\n\n    xlib: Don't operate on an error object inside setters.\n    \n    Fixes: https://bugzilla.gnome.org/show_bug.cgi?id=599574\n    \n    The backend API manipulated the surface prior to checking whether it was\n    an inert error surface - and in the event of an error surface, tried to\n    overwrite it's error status.\n\n src/Makefile.win32.features  |    8 ++++++++\n src/cairo-xcb-surface.c      |    3 +++\n src/cairo-xlib-surface.c     |    6 ++++++\n src/cairo-xlib-xcb-surface.c |    6 ++++++\n 4 files changed, 23 insertions(+)\n\ncommit 8afd4e4c3db53159d1e5b6f13d3355cb5fb1750b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Apr 13 17:52:19 2010 +0100\n\n    hull: _cairo_hull_vertex_compare() return 0 for identical elements\n    \n    Andreas Falkenhahn reported a bizarre situation with some\n    implementations of qsort that actually compare the same elements and\n    require the comparator to return 0. So be it.\n    \n    Reported-by: Andreas Falkenhahn <andreas@airsoftsoftwair.de>\n\n src/cairo-hull.c |    7 +++++++\n 1 file changed, 7 insertions(+)\n\ncommit d95037db9915033ef1eee24c2fc05e8a95af5457\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Apr 11 21:04:29 2010 +0100\n\n    cache: Tidy _cairo_cache_shrink_to_accommodate()\n    \n    There is no need to shrink the cache if we add an entry of size 0, so\n    don't by moving the guards in _cairo_cache_shrink_to_accommodate() to the\n    callers.\n\n src/cairo-cache.c |   10 +++-------\n 1 file changed, 3 insertions(+), 7 deletions(-)\n\ncommit e6309c6307179388c5de938bffdb44b83b694f28\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Apr 11 21:03:00 2010 +0100\n\n    xcb: Use normal finish to decouple from surface cache.\n    \n    Hook into the standard finishing process for a more robust cache removal\n    mechanism. firefox was able to trigger some double free asserts\n    otherwise.\n\n src/cairo-xcb-screen.c         |    4 ++-\n src/cairo-xcb-surface-render.c |   57 +++++++++++++++++++---------------------\n 2 files changed, 30 insertions(+), 31 deletions(-)\n\ncommit e425c44e9c4c1796ccc3557a0368cf3b3a685a31\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Fri Apr 9 08:32:22 2010 +0200\n\n    boilerplate: Compile xlib without xrender\n    \n    cairo_boilerplate_xlib_surface_disable_render() is not defined when\n    compiling without XRender, but it was used nonetheless. Replace it\n    with an empty stub when XRender is not available.\n\n boilerplate/cairo-boilerplate-xlib.c |    6 ++++++\n 1 file changed, 6 insertions(+)\n\ncommit 061ea78ad2838450b20d5550a7285823e0d24e1b\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Fri Apr 9 08:28:33 2010 +0200\n\n    perf: Correct cairo-perf-diff syntax\n    \n    { cmd-list; } seems to literally be the required syntax. Blanks and\n    ';' are both mandatory.\n\n perf/cairo-perf-diff |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 6986970ea5197685274b1fd809d72fbd771c0bab\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Apr 10 17:05:38 2010 +0100\n\n    clip: Compile fix for previous clip.\n    \n    PEBKAC.\n\n src/cairo-clip.c |    3 ---\n 1 file changed, 3 deletions(-)\n\ncommit 0899852c974099da9f8c5e493fa89b8d022646c5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Apr 10 16:00:45 2010 +0100\n\n    clip: Compare the whole clip when testing for equality.\n    \n    Should fix test/clip-contexts\n\n src/cairo-clip-private.h    |    4 ++++\n src/cairo-clip.c            |   40 +++++++++++++++++++++++++++++++++++++---\n src/cairo-surface-clipper.c |    5 +----\n 3 files changed, 42 insertions(+), 7 deletions(-)\n\ncommit 557016a86a5a4487aeb6ab6392795eb709ee8bb5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Apr 10 15:59:13 2010 +0100\n\n    test: Add clip-contexts\n    \n    This should exercise a bug found by Jeff Muizelaar that\n    cairo-surface-clipper was mistakenly thinking that clip operations on a\n    second context was a no-op as the topmost clip path matched that of the\n    previous context.\n\n test/Makefile.am           |    1 +\n test/Makefile.sources      |    1 +\n test/clip-contexts.c       |   73 ++++++++++++++++++++++++++++++++++++++++++++\n test/clip-contexts.ref.png |  Bin 0 -> 98 bytes\n 4 files changed, 75 insertions(+)\n\ncommit a9f506493371ac91494488e5ca38e57ceb5a10cb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 7 22:44:02 2010 +0100\n\n    script: Another RGB16_565 warning.\n\n src/cairo-script-surface.c |    6 ++++++\n 1 file changed, 6 insertions(+)\n\ncommit 42b5cac7668625c9761113ff72b47af5cfd10377\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Wed Apr 7 19:10:15 2010 +0930\n\n    PDF-operators: ensure text operations flushed before emitting clip\n\n src/cairo-pdf-operators.c |    6 ++++++\n 1 file changed, 6 insertions(+)\n\ncommit c004800fae362ae907ef9d1f822d02c598572161\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 7 22:46:38 2010 +0100\n\n    script: Compile without FT_FONT\n\n src/cairo-script-surface.c |    9 ++++++++-\n 1 file changed, 8 insertions(+), 1 deletion(-)\n\ncommit bdf8f50adae67498d5fe36727ed2cd34c0206509\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 7 22:44:02 2010 +0100\n\n    script: Another RGB16_565 warning.\n\n src/cairo-script-surface.c |    6 ++++++\n 1 file changed, 6 insertions(+)\n\ncommit f5f64317874a3faa4f47688848a499b1e8836cf6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 7 21:57:22 2010 +0100\n\n    perf: Switch between micro and trace benchmarks for cairo-perf-diff\n\n perf/cairo-perf-diff |   10 ++++------\n 1 file changed, 4 insertions(+), 6 deletions(-)\n\ncommit 70ca0040fda77b6865c20c94c1b7deaa6e63c481\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Wed Apr 7 22:54:57 2010 +0200\n\n    Actually check for memory allocation failure\n    \n    Clang static analyzer signals \"Dereference of null pointer\" in case\n    the malloc returns NULL, as the code is checking the wrong pointer.\n\n src/cairo-boxes.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit d7f71ac5c209376bacb45199a0eaa3b1937172e9\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Apr 7 21:57:38 2010 +0200\n\n    region: Make the 2nd argument to intersect and union const\n\n src/cairo-region.c |    4 ++--\n src/cairo.h        |    4 ++--\n 2 files changed, 4 insertions(+), 4 deletions(-)\n\ncommit ded3a9639b33b1e637e99250a463bc227c9e60f4\nAuthor: Kristian Rietveld <kris@gtk.org>\nDate:   Tue Dec 29 08:47:09 2009 +0100\n\n    quartz: Define cairo_quartz_float_t and use instead of float\n    \n    On Mac OS 10.6 and newer cairo_quartz_float_t is defined to be a\n    CGFloat, resolving issues with the 64-bit builds.\n    \n    Fixes https://bugs.freedesktop.org/show_bug.cgi?id=25814\n\n src/cairo-quartz-private.h |    6 ++++++\n src/cairo-quartz-surface.c |   40 +++++++++++++++++++++-------------------\n 2 files changed, 27 insertions(+), 19 deletions(-)\n\ncommit 7c2c3f621f9b009b97c5f269bf313be926cc51c7\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Sat Apr 3 22:54:57 2010 +0200\n\n    Correct masking optimization\n    \n    In _cairo_surface_mask() there was an invaild optimization (it failed\n    for surfaces without alpha content). Using _cairo_pattern_is_clear()\n    is the correct way to evaluate if a pattern is clear.\n    \n    Fixes clear-source\n\n src/cairo-surface.c |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit 24fc36c10f5c1c34e3059a8334178743052d7ad2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Apr 2 08:44:45 2010 +0100\n\n    script: Fix endian encoding of '<|' length.\n    \n    Andrea found and fixed (and updated all the traces!) an endian bug where\n    we were encoding a 32bit length inside the compressed string stream.\n    However, this one inside the script backed escaped his notice.\n\n src/cairo-script-surface.c |    9 ++++++++-\n 1 file changed, 8 insertions(+), 1 deletion(-)\n\ncommit 697094488c652ad351301696bba9a384cc70002c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Apr 2 08:40:28 2010 +0100\n\n    test: Add inverse text\n    \n    This is exercising a bug that I have introduced either in the xcb\n    backend or in the driver in my experimental branches. So simple, yet so\n    wrong.\n\n test/Makefile.am                  |    1 +\n test/Makefile.sources             |    1 +\n test/inverse-text.c               |   67 +++++++++++++++++++++++++++++++++++++\n test/inverse-text.image16.ref.png |  Bin 0 -> 1863 bytes\n test/inverse-text.ps.ref.png      |  Bin 0 -> 776 bytes\n test/inverse-text.ref.png         |  Bin 0 -> 2150 bytes\n 6 files changed, 69 insertions(+)\n\ncommit fe610d559c70ab67f782b122437908ac80788611\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 31 09:33:30 2010 +0100\n\n    perf/micro: Show megapixel fill rate during paint.\n\n perf/micro/paint-with-alpha.c |    9 ++++++++-\n perf/micro/paint.c            |    8 +++++++-\n 2 files changed, 15 insertions(+), 2 deletions(-)\n\ncommit 8f7078eba71dcd2aa70bf97c03ed7b4341260143\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Apr 1 20:42:44 2010 +0100\n\n    boilerplate: Allox xlib-fallback to build without RENDER\n    \n    This surface doesn't use RENDER and should produce the same results\n    when cairo-xlib is compiled without any support for RENDER.\n\n boilerplate/cairo-boilerplate-xlib.c |   72 ++--------------------------------\n 1 file changed, 4 insertions(+), 68 deletions(-)\n\ncommit d209b40c64bddeb0d830678bc2f84e1016fed879\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Apr 1 20:36:15 2010 +0100\n\n    xlib: Rearrange xrender stubs to restore compilation without xrender.h\n\n boilerplate/Makefile.win32.features |    8 --------\n build/Makefile.win32.features-h     |    1 -\n src/Makefile.win32.features         |    8 --------\n src/cairo-xlib-xrender-private.h    |   14 +++++++-------\n 4 files changed, 7 insertions(+), 24 deletions(-)\n\ncommit db4dbb38340e93da616319f00e0f4327d1c1d815\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Thu Apr 1 01:53:22 2010 -0400\n\n    Improve doc syntax check to allow inline macro docs\n\n src/check-doc-syntax.sh |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 00101fa71614fb48de436d6618e26353cf44ef95\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 31 16:19:02 2010 +0100\n\n    configure: check -lrt for shm_open()\n    \n    OS/X includes shm_open() in libc, and fails to link if -lrt is\n    specified. So perform the appropriate configure time magic.\n\n configure.ac                  |    5 +++++\n util/cairo-sphinx/Makefile.am |    2 +-\n 2 files changed, 6 insertions(+), 1 deletion(-)\n\ncommit a81d347c2484e60ceec1d9dc81e1b88724496eaf\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Fri Feb 5 22:34:51 2010 +0100\n\n    perf: Fix timestamp computation on MacOS X\n    \n    The OIL routines don't work as expected on MacOS X. The operating\n    system gives access to the timestamp counter through the function\n    mach_absolute_time.\n    \n    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>\n\n perf/cairo-perf-posix.c |    7 +++++++\n 1 file changed, 7 insertions(+)\n\ncommit 55ce0b774869e9fa614c6f9fec7905f7205cb5ff\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Fri Feb 5 22:30:05 2010 +0100\n\n    script: Fix script scanner endianness\n    \n    The script interpreter was reading the length of compressed data as\n    an host-endian uint32_t, thus making cairo-script able to correctly\n    read traces that were produced on the same endianness as the one they\n    ran upon, but unsuitable for portabile cairo-scripts.\n    \n    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>\n\n util/cairo-script/cairo-script-scanner.c |   30 +++++++++++++++---------------\n 1 file changed, 15 insertions(+), 15 deletions(-)\n\ncommit 4f617eaf77540ba2140086bd5a19fe6d62503d62\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Fri Feb 5 22:27:28 2010 +0100\n\n    trace: Fix trace endianness\n    \n    Trace files were using host-endian to represent the length of\n    compressed data, making the trace format not portable.\n    \n    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>\n\n util/cairo-trace/trace.c |   15 +++++++++++++++\n 1 file changed, 15 insertions(+)\n\ncommit 35f19bc084792bbad42b86a399103ebfbf407d05\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Wed Mar 31 12:18:01 2010 +0200\n\n    pattern: Fix _gradient_is_opaque() for zero stops\n    \n    _gradient_is_opaque() previously returned TRUE for gradient with\n    no stops, triggering a false optimization in _cairo_gstate_mask().\n    \n    Fixes test/gradient-zero-stops-mask\n    \n    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>\n\n src/cairo-pattern.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 01e182194224e0eb7493b2ae3c8367ed455cfd54\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Wed Mar 31 12:14:25 2010 +0200\n\n    test: Add gradient-zero-stops-mask\n    \n    Add a test to check that gradient with no stops are not considered\n    opaque by gstate (and thus masking with them is not optimized to\n    paint).\n\n test/Makefile.am                             |    2 +\n test/Makefile.sources                        |    1 +\n test/gradient-zero-stops-mask.argb32.ref.png |  Bin 0 -> 86 bytes\n test/gradient-zero-stops-mask.c              |   59 ++++++++++++++++++++++++++\n test/gradient-zero-stops-mask.rgb24.ref.png  |  Bin 0 -> 86 bytes\n 5 files changed, 62 insertions(+)\n\ncommit ce3ad6f41edf86ed6914f4d7f364111eba42ca65\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 31 08:21:17 2010 +0100\n\n    xlib: Avoid multiple evaluations inside bswap_*() macro.\n    \n    Fixes:\n      Fonts are not readable if remote display to a machine with different\n      endian.\n      https://bugzilla.mozilla.org/show_bug.cgi?id=526977\n    \n    Reported-and-tested-by: Ginn Chen <Ginn.Chen@Sun.COM>\n\n src/cairo-xlib-surface.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit be4ffa9df275513de3175415ee889b7323499a37\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Mar 28 19:40:54 2010 +0100\n\n    doc: Fix some missing '%' in gtk-doc comments\n\n src/cairo-surface.c     |    4 ++--\n src/cairo-svg-surface.c |   10 +++++-----\n 2 files changed, 7 insertions(+), 7 deletions(-)\n\ncommit 7ab350378e8597e9872dbe390b8454d0a63bff28\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Mar 28 19:38:24 2010 +0100\n\n    Silence enumeration warnings following addition of RGB16_565\n\n src/cairo-debug.c                          |    3 +++\n src/cairo-gl-glyphs.c                      |    2 ++\n src/cairo-png.c                            |    1 +\n src/cairo-qt-surface.cpp                   |    2 ++\n src/cairo-scaled-font.c                    |    1 +\n src/cairo-script-surface.c                 |   15 ++++++++++++\n src/cairo-xcb-surface-render.c             |    5 ++++\n src/cairo-xlib-surface.c                   |    5 ++++\n src/cairo-xml-surface.c                    |    1 +\n src/drm/cairo-drm-i915-surface.c           |    3 +++\n src/drm/cairo-drm-i965-shader.c            |    4 ++++\n src/drm/cairo-drm-i965-surface.c           |    1 +\n src/drm/cairo-drm-intel-surface.c          |    1 +\n src/drm/cairo-drm-intel.c                  |   12 ++++++++--\n src/drm/cairo-drm-radeon-surface.c         |    1 +\n util/cairo-script/cairo-script-operators.c |   35 ++++++++++++++++++++++++++++\n util/cairo-sphinx/sphinx.c                 |    1 +\n util/cairo-trace/trace.c                   |   25 +++++++++++++++++---\n 18 files changed, 113 insertions(+), 5 deletions(-)\n\ncommit d901692a5550c51fd3eefd307609fb800ef02a95\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 30 15:31:32 2010 +0100\n\n    scaled-glyph: Allow removal info fields.\n    \n    Pushed a fraction of a second too soon... Update the\n    scaled_glyph->has_info if the backend clears any field as well.\n\n src/cairo-scaled-font.c |   19 ++++++++++++++++---\n 1 file changed, 16 insertions(+), 3 deletions(-)\n\ncommit 5c4b6d520bc7ce7d5193a89bbda44b91f5eb0d4d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 30 15:26:42 2010 +0100\n\n    xcb: Cache whether we have already check a glyph for size.\n    \n    Avoid repeated cairo_scaled_glyph_lookup() and checking of sizes if we\n    have already seen this glyph in this run.\n\n src/cairo-xcb-surface-render.c |   10 ++++++++++\n 1 file changed, 10 insertions(+)\n\ncommit 1c76e3e9ad1437662bf91ed1d21c4bda8fd50fb4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 30 15:24:08 2010 +0100\n\n    scaled-font: Optimize cairo_scaled_font_lookup()\n    \n    By tracking which fields of information are already available on the\n    scaled_glyph we can more efficiently determine if we already have the\n    requested fields. This reduces from about 6 conditionals to one, and\n    reduces the function overhead by ~20% -- which has a measurable\n    improvement on glyph benchmarks.\n\n src/cairo-scaled-font.c   |   73 +++++++++++++--------------------------------\n src/cairo-types-private.h |    1 +\n 2 files changed, 21 insertions(+), 53 deletions(-)\n\ncommit d2ec151e490b227e7f3d6879bf7a893577dfefa5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 30 15:23:18 2010 +0100\n\n    perf/micro: Exercise different sizes and antialising modes with glyphs\n\n perf/micro/glyphs.c |   85 ++++++++++++++++++++++++++++++++++++++++++++++-----\n 1 file changed, 77 insertions(+), 8 deletions(-)\n\ncommit 72481acf0d1e8648c5d03ce51f84c639132475a9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 30 04:10:28 2010 +0100\n\n    perf: Compute ops per second\n    \n    Provide a hook for the test to be able to compute the number of ops per\n    second. For instance, the glyphs test uses it to report the number of\n    kiloglyph per second Cairo is able to render.\n\n perf/cairo-perf-micro.c            |   47 +++++++++++++++++++++++-------------\n perf/cairo-perf.h                  |    9 +++++--\n perf/micro/box-outline.c           |    4 +--\n perf/micro/cairo-perf-cover.c      |    5 ++--\n perf/micro/composite-checker.c     |    2 +-\n perf/micro/dragon.c                |   10 ++++----\n perf/micro/fill.c                  |    6 ++---\n perf/micro/glyphs.c                |   35 +++++++++++++++++++++++++--\n perf/micro/intersections.c         |    8 +++---\n perf/micro/long-dashed-lines.c     |    2 +-\n perf/micro/long-lines.c            |    8 +++---\n perf/micro/mask.c                  |   18 +++++++-------\n perf/micro/mosaic.c                |    8 +++---\n perf/micro/paint-with-alpha.c      |    2 +-\n perf/micro/paint.c                 |    2 +-\n perf/micro/pattern_create_radial.c |    2 +-\n perf/micro/pythagoras-tree.c       |    2 +-\n perf/micro/rectangles.c            |    6 ++---\n perf/micro/rounded-rectangles.c    |    6 ++---\n perf/micro/spiral.c                |   28 ++++++++++-----------\n perf/micro/stroke.c                |    4 +--\n perf/micro/subimage_copy.c         |    2 +-\n perf/micro/tessellate.c            |    6 ++---\n perf/micro/text.c                  |    2 +-\n perf/micro/twin.c                  |    2 +-\n perf/micro/unaligned-clip.c        |    2 +-\n perf/micro/world-map.c             |    2 +-\n perf/micro/zrusin.c                |    4 +--\n 28 files changed, 142 insertions(+), 92 deletions(-)\n\ncommit 2a98d0586c19fbb2b555f471895d73f253c4943b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 15 18:23:23 2010 +0000\n\n    drm/i915: Avoid using another unpreserved temporary\n    \n    As we may load from a sampler, we can not use on of the unpreserved\n    temporaries to store the intermediate colour result.\n\n src/drm/cairo-drm-i915-shader.c |   26 +++++++++++++++-----------\n 1 file changed, 15 insertions(+), 11 deletions(-)\n\ncommit 26f963557bf065fd25b9c4f6652a252735a0fb74\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 15 18:22:06 2010 +0000\n\n    drm/i915: Normalize spans opacity value\n    \n    On the generic path I forgot to rescale the alpha value into [0,1].\n\n src/drm/cairo-drm-i915-spans.c |    7 ++++---\n 1 file changed, 4 insertions(+), 3 deletions(-)\n\ncommit 97f8c20727eaeb2dfddb0d4796192cc042eb14fa\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Mar 27 21:52:16 2010 +0000\n\n    boilerplate: Create an image16 target\n    \n    In order to exercise the newly restored r5g6g5 support, we need to\n    create an appropriate surface and feed it through the test and\n    performance suites.\n\n boilerplate/cairo-boilerplate-directfb.c       |    6 ++-\n boilerplate/cairo-boilerplate-drm.c            |    6 ++-\n boilerplate/cairo-boilerplate-gl.c             |   12 +++--\n boilerplate/cairo-boilerplate-pdf.c            |    4 +-\n boilerplate/cairo-boilerplate-ps.c             |    8 +--\n boilerplate/cairo-boilerplate-quartz.c         |    3 ++\n boilerplate/cairo-boilerplate-script.c         |    2 +-\n boilerplate/cairo-boilerplate-skia.c           |    6 ++-\n boilerplate/cairo-boilerplate-svg.c            |    8 +--\n boilerplate/cairo-boilerplate-test-surfaces.c  |   21 ++++----\n boilerplate/cairo-boilerplate-vg.c             |   12 +++--\n boilerplate/cairo-boilerplate-win32-printing.c |    4 +-\n boilerplate/cairo-boilerplate-win32.c          |    6 ++-\n boilerplate/cairo-boilerplate-xcb.c            |   21 +++++---\n boilerplate/cairo-boilerplate-xlib.c           |   12 +++--\n boilerplate/cairo-boilerplate.c                |   39 ++++++++++++--\n boilerplate/cairo-boilerplate.h                |    1 +\n perf/cairo-perf-micro.c                        |   59 +--------------------\n perf/cairo-perf-trace.c                        |   67 +-----------------------\n 19 files changed, 120 insertions(+), 177 deletions(-)\n\ncommit 022291be1cbddf4f6722f0bf76ebda6922780276\nAuthor: Oleg Romashin <romaxa@gmail.com>\nDate:   Wed Mar 24 13:12:25 2010 -0400\n\n    Add back support for CAIRO_FORMAT_RGB16_565\n    \n    Due to slow memory speed, 16bpp color depth is still very popular on mobile\n    devices. Maemo5 is also using 16bpp color depth.\n\n src/cairo-deprecated.h    |   14 --------------\n src/cairo-image-surface.c |   16 +++++++++++++++-\n src/cairo-xlib-display.c  |   28 +++++++++++++++++++++++++---\n src/cairo.h               |    7 ++-----\n src/cairoint.h            |    2 +-\n 5 files changed, 43 insertions(+), 24 deletions(-)\n\ncommit 36e12b1952f9bdc52491c5a9bdf8ce155865c362\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 24 12:14:20 2010 +0000\n\n    subsurface: Ignore return from _cairo_clip_init_copy()\n    \n    The return is just a hint that the clip is empty, however we are about\n    to immediately apply the surface clip and so do not care for an\n    'optimised' path.\n\n src/cairo-surface-subsurface.c |   15 ++++++++++-----\n 1 file changed, 10 insertions(+), 5 deletions(-)\n\ncommit e356e5d18b923d9b0ff83e9460582710f9e515d9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 24 11:38:19 2010 +0000\n\n    recording: Fix leak of clip from snapshots of recording surfaces.\n\n src/cairo-recording-surface.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 5b4885f693c0d800da7160770b341166e3bdea61\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 24 11:25:29 2010 +0000\n\n    clip: propagate the no-clip through the copy.\n\n src/cairo-clip.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit b3e0393161904c2fea62b0198dea551a77201c19\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 24 11:21:36 2010 +0000\n\n    clip: Don't reduce all-clip to no-clip.\n\n src/cairo-clip.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit b12114f296e4e8db3207ab593a431fd0ca2ee67c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 24 11:08:38 2010 +0000\n\n    snapshot: Finish the clone.\n    \n    Kill ref cycles from snapshots patterns by explicitly calling finish on\n    the cloned surface.\n\n src/cairo-surface-snapshot.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit db913d731e50505892697bdc919f9fe146eea6ab\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 24 10:16:58 2010 +0000\n\n    xcb: Ensure that we own the glyph cache before use.\n    \n    Sigh. One day, I will enable multiple glyph caches to be attached to a\n    scaled font, but for today, simply avoid the crash.\n\n src/cairo-xcb-surface-render.c |   38 +++++++++++++++++++++++++++++---------\n 1 file changed, 29 insertions(+), 9 deletions(-)\n\ncommit 6da3cea3564bd8c5de37bf2244a2dd656202e4ec\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 23 20:53:11 2010 +0000\n\n    scaled-font: Destroy the old surface when replacing scaled_glyph->recording\n\n src/cairo-scaled-font.c |   11 ++++++++---\n 1 file changed, 8 insertions(+), 3 deletions(-)\n\ncommit 548092fe8c9af1423a10e9566cbc4315d2f28efc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 23 20:08:04 2010 +0000\n\n    script: Free the surface/font bitmaps.\n\n src/cairo-script-surface.c |   13 +++++++++++++\n 1 file changed, 13 insertions(+)\n\ncommit 83d1bd9f37da93fbdc586788b6891d0eccdb7cee\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 23 20:04:10 2010 +0000\n\n    script: Manually unlink font entries upon destruction\n    \n    As the device is already finished, we can not lock it without raising an\n    error, so we have to open code the destruction of the font entries.\n    Fortunately we can make several simplifying assumptions about the\n    required cleanup as we know the device is also being destroyed.\n\n src/cairo-script-surface.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit cccf6753ab68b0795351da2626f9e4ecd60c2a2e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 23 19:45:35 2010 +0000\n\n    script: More acquire device fixes.\n    \n    We also need to acquire the device upon finish, similar surface creation\n    and the pagination functions, i.e. the other times outside of the\n    drawing ops that must modify the shared context/device.\n\n src/cairo-script-surface.c |   69 ++++++++++++++++++++++++++++++++++----------\n 1 file changed, 54 insertions(+), 15 deletions(-)\n\ncommit 25a77b263d170265a9acf1697793cbbfa07dd852\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 23 16:49:21 2010 +0000\n\n    boilerplate: Cleanup the list of backends upon shutdown.\n\n boilerplate/cairo-boilerplate.c |   13 +++++++++++++\n boilerplate/cairo-boilerplate.h |    3 +++\n perf/cairo-perf-micro.c         |    2 ++\n perf/cairo-perf-trace.c         |    2 ++\n test/cairo-test.c               |    2 ++\n 5 files changed, 22 insertions(+)\n\ncommit 1ddcd5cf31bb47e9ff18ddf94d0a4648fa70a617\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 23 16:43:39 2010 +0000\n\n    clip: Remove the redundant _cairo_clip_init_rectangle()\n    \n    As _cairo_clip_init_rectangle() is equivalent and more importantly more\n    clearly written as:\n      _cairo_clip_init(&clip);\n      if (status = _cairo_clip_rectangle(&clip, &rect)) {\n         _cairo_clip_fini(&fini);\n         return status;\n      }\n    perform the transformation and in the process catch a few mistakes along\n    error paths.\n\n src/cairo-clip-private.h      |    4 ----\n src/cairo-clip.c              |   30 +++++++++++-------------------\n src/cairo-paginated-surface.c |   18 +++++++++---------\n src/cairo-recording-surface.c |   11 +++++------\n src/cairo-surface-wrapper.c   |   14 +++++---------\n 5 files changed, 30 insertions(+), 47 deletions(-)\n\ncommit 61ad28fe7d334c63197ae3881d5edd074d63cfec\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 23 10:44:16 2010 +0000\n\n    device: Add language binding interfaces.\n    \n    Damien Carbonne reported that cairo_device_t lacked the language binding\n    hooks normally associated with cairo objects. So add the missing\n    get_reference_count, get_user_data and set_user_data.\n\n src/cairo-device-private.h |    1 +\n src/cairo-device.c         |   78 ++++++++++++++++++++++++++++++++++++++++++++\n src/cairo.h                |   14 ++++++++\n 3 files changed, 93 insertions(+)\n\ncommit 8a8c2f6c282c1822dc1a638c2258c8449b1d678b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 23 10:34:06 2010 +0000\n\n    cairo: Typos in docs.\n    \n    A couple of typos reported by Damien Carbonne.\n\n src/cairo-recording-surface.c |   10 ++++------\n src/cairo.h                   |    4 ++--\n 2 files changed, 6 insertions(+), 8 deletions(-)\n\ncommit 4c55c87478a2595569f9c1f13657c3d309f31407\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 23 10:05:35 2010 +0000\n\n    image: Free traps after conversion from boxes.\n\n src/cairo-image-surface.c |    9 ++++++---\n 1 file changed, 6 insertions(+), 3 deletions(-)\n\ncommit 07f7bddc30157fed8f9dced00fef44a2307b4b01\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 23 10:05:35 2010 +0000\n\n    xcb: Free traps after conversion from boxes.\n\n src/cairo-xcb-surface-render.c |    9 ++++++---\n 1 file changed, 6 insertions(+), 3 deletions(-)\n\ncommit 181403fb534d0216123043bcd3ee6cff60e1e6fd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 23 09:38:59 2010 +0000\n\n    test/clear-source: Free source after use.\n\n test/clear-source.c |   38 ++++++++++++++++++++++----------------\n 1 file changed, 22 insertions(+), 16 deletions(-)\n\ncommit 35432e37c264e1ace764b4a1393d9b8579eb52c0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 23 09:35:51 2010 +0000\n\n    xcb: Destroy reference to clip surface after use.\n\n src/cairo-xcb-surface-render.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 98e3dfbb899f0228fc9987a56af93b012989a27a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 23 09:35:31 2010 +0000\n\n    xcb: Relinquish the xcb connection on finish.\n\n src/cairo-xcb-connection.c |    7 +++++++\n 1 file changed, 7 insertions(+)\n\ncommit 638cae3bdeaf0b10d1fd59a519f5d7a05c5b179c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 23 08:25:13 2010 +0000\n\n    xcb: Fix leak of clip rectangle during show-glyphs.\n\n src/cairo-xcb-surface-render.c |   15 ++++++---------\n 1 file changed, 6 insertions(+), 9 deletions(-)\n\ncommit 1d4ad787747b5c92c3b062afde5b98c72ac4cc95\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 23 08:20:49 2010 +0000\n\n    test/pthread-same-source: Free source after use.\n\n test/pthread-same-source.c |    6 ++++++\n 1 file changed, 6 insertions(+)\n\ncommit bfc027ac6d05f489d0d26110c225d2871be0971c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 23 08:16:57 2010 +0000\n\n    test/clip-image: Free image after use.\n\n test/clip-image.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit e214f09d633093ce9b2ca0bffce10bc68a6e30b0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 22 22:20:58 2010 +0000\n\n    xcb: Consume the implicit reference for the cached connection on finish\n\n src/cairo-xcb-connection.c |    5 +++++\n 1 file changed, 5 insertions(+)\n\ncommit c235543bdfd8b1495cb7ae8f2a82b6267c4d9b84\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 22 22:15:44 2010 +0000\n\n    xcb: Destroy reference to local source picture in show-glyphs.\n\n src/cairo-xcb-surface-render.c |   14 +++++++++++---\n 1 file changed, 11 insertions(+), 3 deletions(-)\n\ncommit c42cdd2c9d883ef359ac57b65eba4ed15441181d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 22 20:14:09 2010 +0000\n\n    xcb: Gracefully destroy any lingering fallback during finish.\n    \n    A fallback should never persist beyond the flush into the finish, but\n    yet one remains in test/clip-shapes-unaligned-rectangles. For the time\n    been, simply clean up the rogue surface.\n\n src/cairo-xcb-surface.c |   19 ++++++++++++-------\n 1 file changed, 12 insertions(+), 7 deletions(-)\n\ncommit fd96aa3de2218dcc6671636f35a24738e3cae996\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 22 19:07:31 2010 +0000\n\n    gl: Hook in glyph cache finalisation.\n\n src/cairo-gl-glyphs.c  |   23 ++++++++++++-----------\n src/cairo-gl-private.h |    7 ++++---\n src/cairo-gl-surface.c |    4 ++++\n 3 files changed, 20 insertions(+), 14 deletions(-)\n\ncommit c7511fa7ad932675c8cebba504d3c538ead3c44c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 22 17:21:38 2010 +0000\n\n    drm/intel: Revoke glyph caches on device finish\n\n src/drm/cairo-drm-i915-glyphs.c   |    2 +-\n src/drm/cairo-drm-i965-glyphs.c   |    2 +-\n src/drm/cairo-drm-intel-private.h |    1 +\n src/drm/cairo-drm-intel.c         |   18 ++++++++++++------\n 4 files changed, 15 insertions(+), 8 deletions(-)\n\ncommit 9ba73bdfc451d205f411e3dbc8073ae10d58b4f3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 22 17:17:08 2010 +0000\n\n    gl: Decouple cache from scaled-font on context destruction\n\n src/cairo-gl-glyphs.c           |    8 +++++++-\n src/cairo-gl-private.h          |    4 ++++\n src/cairo-gl-surface.c          |   14 +++++++++++++-\n src/cairo-scaled-font-private.h |    2 ++\n src/cairo-scaled-font.c         |    1 +\n 5 files changed, 27 insertions(+), 2 deletions(-)\n\ncommit 7812d095ab7657400be470af8fdc7f20eaedd6c5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 22 16:46:58 2010 +0000\n\n    drm/intel: Replace open-coding of _cairo_rtree_node_remove()\n\n src/drm/cairo-drm-intel.c |   17 +++--------------\n 1 file changed, 3 insertions(+), 14 deletions(-)\n\ncommit 48d847162558dc09388942a96ff443c253068d68\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 22 13:05:23 2010 +0000\n\n    recording: Cleanup the clip on error.\n    \n    Whilst recording the commands, remember to cleanup the local clip after\n    detecting an error.\n\n src/cairo-recording-surface.c |    5 +++++\n src/cairo-surface-snapshot.c  |    2 ++\n 2 files changed, 7 insertions(+)\n\ncommit c87737c2bf983a8555b08c526050423a5eab5642\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 22 13:04:19 2010 +0000\n\n    ps: Skip surface emission if in error state.\n    \n    During finish, if we encountered an error during the construction of the\n    surface, simply proceed to cleanup rather than emit the incomplete and\n    potentially subtly broken output.\n\n src/cairo-ps-surface.c |    4 ++++\n 1 file changed, 4 insertions(+)\n\ncommit e961cdf568f4551bbd6bca6b7505fc9f9b0805f9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 22 10:48:48 2010 +0000\n\n    image: Special case wholly unbounded fixups.\n    \n    In the event of an empty bounded rectangle, the computation of the\n    unbounded - bounded rectangles leads to negative areas, integer overflow\n    and death.\n    \n    [And similarly for the derived surfaces.]\n\n src/cairo-image-surface.c        |   24 ++++++++++\n src/cairo-xcb-surface-render.c   |   62 ++++++++++++++-----------\n src/drm/cairo-drm-i915-surface.c |   62 ++++++++++++++-----------\n src/drm/cairo-drm-i965-surface.c |   93 ++++++++++++++++++++------------------\n 4 files changed, 144 insertions(+), 97 deletions(-)\n\ncommit 844d8ea57d69c9a68fbec64f4438953850f7657f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 22 10:37:18 2010 +0000\n\n    surface: Check pattern for error status.\n    \n    Ensure that the error status from patterns is propagated when used by\n    doing so in the surface layer. Similarly check that a surface pattern\n    has not been finished.\n\n src/cairo-surface.c |   59 +++++++++++++++++++++++++++++++++++++++++++++++----\n 1 file changed, 55 insertions(+), 4 deletions(-)\n\ncommit 213093f43770d078dd146d5a10b9a5803097b8a8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 22 10:36:47 2010 +0000\n\n    ps: Free page on error path.\n\n src/cairo-ps-surface.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit c8a8e57d6af7261d70103ddd46f8da409896b5e7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Mar 21 20:42:34 2010 +0000\n\n    script: Use a stack to push/pop recursed line numbers.\n    \n    Still not entirely helpful in the event of recursive parsing without a\n    reference to the file as well as the line number in the event of an\n    exception.\n\n util/cairo-script/cairo-script-scanner.c |    8 ++++++--\n 1 file changed, 6 insertions(+), 2 deletions(-)\n\ncommit 4b4de940ee6e76ec9677b5468ebf709c6d2db982\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Mar 21 20:41:18 2010 +0000\n\n    script: Remove the version check.\n    \n    When compiling we can depend on whatever version of cairo we need, but\n    we should be wary of checking for runtime compatibility when building\n    standalone.\n\n util/cairo-script/cairo-script-operators.c |    2 --\n 1 file changed, 2 deletions(-)\n\ncommit a7cb314b060f6ada855ec75b283ef64bf835824a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Mar 21 20:40:54 2010 +0000\n\n    test/any2ppm: Check for errors after executing script.\n\n test/any2ppm.c |    9 ++++++---\n 1 file changed, 6 insertions(+), 3 deletions(-)\n\ncommit b73a33b89e43d63a437035a05cf91df5c3b4d186\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Mar 21 20:40:19 2010 +0000\n\n    script: Make the test suite run again!\n\n src/cairo-script-surface.c |  194 +++++++++++++++++++++++---------------------\n 1 file changed, 103 insertions(+), 91 deletions(-)\n\ncommit 2a59f0af6aab5fe0ebb19195d4c018fc5221016c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Mar 21 20:38:27 2010 +0000\n\n    wrapper: Apply device transform inverse as appropriate.\n    \n    Fixes many failures of the paginated surfaces as they replayed through\n    the recording surfaces.\n\n src/cairo-surface-wrapper.c |   89 +++++++++++++++----------------------------\n 1 file changed, 31 insertions(+), 58 deletions(-)\n\ncommit 5720fff827e5149b201a9366179db93ce258b120\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Mar 21 20:37:38 2010 +0000\n\n    ps: Destroy the local surface on error.\n    \n    Minor leak of the intermediate surface when converting to an opaque\n    source following an error.\n\n src/cairo-ps-surface.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 35f318a59cde9c635036cc14c90878400528882d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Mar 21 20:36:26 2010 +0000\n\n    paginated: Use common is_clear.\n    \n    As equivalent processing to the page_is_blank optimisation done inside\n    the paginated surface is applied by the gstate, remove the redundant\n    code.\n\n src/cairo-paginated-surface-private.h |    1 -\n src/cairo-paginated-surface.c         |   34 +--------------------------------\n 2 files changed, 1 insertion(+), 34 deletions(-)\n\ncommit b101c7dab8cdbf7b9321355a8d2311b2f863f011\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Mar 11 01:48:43 2010 +0000\n\n    gl: Add EGL interface\n    \n    Enable the EGL backend for GL.\n\n boilerplate/Makefile.win32.features |    8 ++\n boilerplate/cairo-boilerplate-gl.c  |   98 ++++++++++++++++++++\n build/Makefile.win32.features-h     |    1 +\n configure.ac                        |   52 ++++++-----\n src/Makefile.sources                |    1 +\n src/Makefile.win32.features         |    8 ++\n src/cairo-egl-context.c             |  168 +++++++++++++++++++++++++++++++++++\n src/cairo-gl.h                      |   14 +++\n 8 files changed, 327 insertions(+), 23 deletions(-)\n\ncommit ca6e4e1f91e0a90666551d2fa74cfc04484d4e80\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Mar 11 01:48:08 2010 +0000\n\n    spans: Initialise rects->is_bounded for polygon compat.\n\n src/cairo-spans.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 6754f1db1716a6570c82e207e21b09a10de120ba\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 10 15:13:00 2010 +0000\n\n    gstate: Account for undropped non-transformed glyphs.\n    \n    In the simplest case of pass-through glyphs we made a mistake in\n    propagating the number of glyphs.\n    \n    Reported-by: Christophe de Dinechin <christophe@taodyne.com>\n\n src/cairo-gstate.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 5fb36fe5ab2a2b30da213557936122a829493906\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 8 15:32:15 2010 +0000\n\n    drm/i965: Acquire device around commit.\n\n src/drm/cairo-drm-i915-surface.c |    4 +-\n src/drm/cairo-drm-i965-shader.c  |   13 +++--\n src/drm/cairo-drm-i965-surface.c |  106 ++++++++++++++++++++++++++------------\n 3 files changed, 82 insertions(+), 41 deletions(-)\n\ncommit 4083f40fbd085dc2039fe62592cf1239373c7fca\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Mar 7 16:59:57 2010 +0000\n\n    glew: don't pull in GL/glu.h\n\n src/glew/GL/glew.h |   10 ----------\n 1 file changed, 10 deletions(-)\n\ncommit 473e006ad6ef0959c8a7059aba0689a16a937732\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Mar 6 18:12:36 2010 +0000\n\n    test: Add a1-mask-sample\n    \n    Test sampling positions with a NEAREST mask.\n\n test/Makefile.am            |    1 +\n test/Makefile.sources       |    1 +\n test/a1-mask-sample.c       |   83 +++++++++++++++++++++++++++++++++++++++++++\n test/a1-mask-sample.ref.png |  Bin 0 -> 148 bytes\n 4 files changed, 85 insertions(+)\n\ncommit f79b2ceea4722b5059563be1eb55de617fecc004\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Mar 4 19:52:58 2010 +0000\n\n    drm/i915: Discard redundant solitary clips during fill\n\n src/drm/cairo-drm-i915-surface.c |   10 ++++++++++\n 1 file changed, 10 insertions(+)\n\ncommit 7cea9ae290ba24e4d2f87cef4228cce5fcb3181b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Mar 4 17:23:55 2010 +0000\n\n    drm/i915: Apply more micro-optimisations when targetting CONTENT_ALPHA\n\n src/drm/cairo-drm-i915-shader.c |   51 ++++++++++++++++++++++++++++-----------\n 1 file changed, 37 insertions(+), 14 deletions(-)\n\ncommit dce8b028cd5b249054e8197a536c29f6ba4110da\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Mar 4 17:13:53 2010 +0000\n\n    drm/i915: Adjust clip matrix for clip origin.\n\n src/drm/cairo-drm-i915-shader.c |    8 +++-----\n 1 file changed, 3 insertions(+), 5 deletions(-)\n\ncommit 8e702044b3816002011488c56f1ec9c6b9682eee\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Mar 4 17:13:02 2010 +0000\n\n    drm/i915: Handle clip/combine coords for spans.\n\n src/drm/cairo-drm-i915-spans.c |   71 ++++++++++++++++++++++++----------------\n 1 file changed, 43 insertions(+), 28 deletions(-)\n\ncommit e1f0c2e73fa8cda9e38ab182288201fa27a3b363\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Mar 4 17:11:58 2010 +0000\n\n    perf: Check for and include unistd.h\n    \n    isatty() and access() require unistd.h, so include it!\n\n perf/cairo-perf-trace.c |    8 ++++++++\n 1 file changed, 8 insertions(+)\n\ncommit 271752b944ef0898b5d1be57f26de83c8e40ae3a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Mar 4 08:24:08 2010 +0000\n\n    gl: Pad the gradient texture.\n    \n    Fixes test/linear-gradient-subset\n\n src/cairo-gl-surface.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit afe6f4f0519606c4bc7e9b705b0cae75692d7af2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 3 23:06:43 2010 +0000\n\n    drm/i915: Use a preserved temporary to store the radial texcoord.\n\n src/drm/cairo-drm-i915-shader.c |   12 ++++++------\n 1 file changed, 6 insertions(+), 6 deletions(-)\n\ncommit 4b2e0478822cb8415be4bac21950dbf03c0f01c8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 3 21:45:31 2010 +0000\n\n    drm/i915: Eliminate redundant radial vertex shader.\n    \n    It is always equivalent to a simple texture transformation, so reduce it\n    to the texture shader.\n\n src/drm/cairo-drm-i915-glyphs.c  |   13 ------------\n src/drm/cairo-drm-i915-private.h |    1 -\n src/drm/cairo-drm-i915-shader.c  |    8 +-------\n src/drm/cairo-drm-i915-spans.c   |   42 ++------------------------------------\n 4 files changed, 3 insertions(+), 61 deletions(-)\n\ncommit 51610517982a4cf70ca8d396d0ad4c58a477c5e9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 3 21:56:56 2010 +0000\n\n    drm/i915: Fix encoding of negated operand channels\n    \n    Long ago when converting the pixel shader structs into macros and\n    reducing the code size by ~100k (the inlines were too depth for constant\n    propagation and CSE), I broke the encoding of negated channels. So\n    instead use a single bit to indicate a negation rather than 2s\n    complement (with sign extension into neighbouring channels, oops). The\n    disadvantage is that expressing the negated channel is a little more\n    ugly.\n\n src/drm/cairo-drm-i915-private.h |   22 ++++++++++++++--------\n src/drm/cairo-drm-i915-shader.c  |   16 ++++++++--------\n 2 files changed, 22 insertions(+), 16 deletions(-)\n\ncommit 5b973c670807bda2bb355c90ea817e2a2f092f0b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 3 21:25:11 2010 +0000\n\n    drm/i915: Fix crash with linear-step-function\n    \n    Avoid the potential divide by zero by falling back to pixman rendered\n    gradient textures for such troublesome input.\n\n src/drm/cairo-drm-i915-shader.c |   17 +++++++++++------\n 1 file changed, 11 insertions(+), 6 deletions(-)\n\ncommit 404ead7eebafa7ca077e1d012dde0a598b64245a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 3 21:01:49 2010 +0000\n\n    drm/i915: Ensure simple alpha is written to green on alpha-only surfaces.\n    \n    The intricacies of h/w make convoluted s/w.\n\n src/drm/cairo-drm-i915-shader.c |   20 ++++++++++++++------\n 1 file changed, 14 insertions(+), 6 deletions(-)\n\ncommit 1f2daf652480ef768f847467d9171b5e4a7f01a3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 3 20:06:08 2010 +0000\n\n    drm/i915: Avoid double multiplication of linear alpha.\n\n src/drm/cairo-drm-i915-shader.c |    8 ++------\n 1 file changed, 2 insertions(+), 6 deletions(-)\n\ncommit cdaef58c19a191632473fcbbe688e6231c02b9b2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 3 18:52:40 2010 +0000\n\n    drm/i915: Acquire device before shader commit.\n\n src/drm/cairo-drm-i915-shader.c  |    2 +\n src/drm/cairo-drm-i915-surface.c |  111 +++++++++++++++++++++++++-------------\n 2 files changed, 77 insertions(+), 36 deletions(-)\n\ncommit dd6f96dd4aeb48262d5af8a3006e6404521c151b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 3 16:06:25 2010 +0000\n\n    drm/i965: Ignore flushing on device finish.\n\n src/drm/cairo-drm-i965-surface.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 3692597567f62dd300e8ce8c43d43ac449616041\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 3 13:56:48 2010 +0000\n\n    drm/i965: Merge the constants into the surface stream.\n    \n    As we can use an offset from the surface base for the constant buffers,\n    we need to fold the constants into the surface stream.\n\n src/drm/cairo-drm-i965-private.h |   11 ++----\n src/drm/cairo-drm-i965-shader.c  |   26 ++++----------\n src/drm/cairo-drm-i965-surface.c |   70 +++-----------------------------------\n 3 files changed, 14 insertions(+), 93 deletions(-)\n\ncommit cc585947574f6e17d299a5987ee69162f63d5a52\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 3 23:06:23 2010 +0000\n\n    drm/intel: Set the 1D gradient texture to be untiled.\n\n src/drm/cairo-drm-intel.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 543cf073643b259096ee2a95d91b9067395a7e09\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 3 21:19:41 2010 +0000\n\n    drm/intel: Set default extend mode for rendering gradient subsets.\n\n src/drm/cairo-drm-intel.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 521d1c1d2c51bca07db1aed3c7f62d860cece3f4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 3 20:25:54 2010 +0000\n\n    surface: Simplify is_clear logic.\n    \n    As we pre-check whether the operation is a no-op on an already cleared\n    surface, then for all but a paint with CLEAR and no clip, the result is\n    a non-clear surface.\n\n src/cairo-surface.c |   22 ++++++++--------------\n 1 file changed, 8 insertions(+), 14 deletions(-)\n\ncommit 017db956644fa1da22033653490f362d1e3e47e0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 3 20:06:30 2010 +0000\n\n    gstate: Use _cairo_pattern_clear for CLEAR.\n\n src/cairo-gstate.c |  100 ++++++++++++++++++++++++++++++++--------------------\n 1 file changed, 62 insertions(+), 38 deletions(-)\n\ncommit 70412bba0e9fd0ac6e7343d7aebe953355207aab\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 3 17:34:39 2010 +0000\n\n    test: Avoid derefencing a NULL xcb connection\n\n test/xcb-surface-source.c |   23 ++++++++++++++---------\n 1 file changed, 14 insertions(+), 9 deletions(-)\n\ncommit 5bfea8447b1b2333218295f51a9474d061192d49\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 3 21:32:13 2010 +0000\n\n    test: Add references for rounded-rectangle-{fill,stroke}\n\n test/Makefile.am                      |    2 ++\n test/rounded-rectangle-fill.ref.png   |  Bin 0 -> 787 bytes\n test/rounded-rectangle-stroke.ref.png |  Bin 0 -> 871 bytes\n 3 files changed, 2 insertions(+)\n\ncommit 4126d580d8b9db9217ed17aadcce20b14e77a00b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 2 14:38:36 2010 +0000\n\n    surface-fallback: Free traps on composite_trapezoids() error\n\n src/cairo-surface-fallback.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit 8a59522bbdc61d5c90f1ae55111b5408865755b3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 2 14:36:16 2010 +0000\n\n    surface-fallback: Propagate NOTHING_TO_DO\n    \n    NOTHING_TO_DO is converted to SUCCESS by the surface layer, so clean up\n    the code slightly by reducing the number of checks and conversions.\n\n src/cairo-surface-fallback.c |   15 +++------------\n 1 file changed, 3 insertions(+), 12 deletions(-)\n\ncommit f07195860620959c27d43080a7b987e28222735a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 2 13:57:02 2010 +0000\n\n    xlib: Handle a1 image uploads through converter\n    \n    Fixes test/large-source [xlib]\n\n src/cairo-xlib-surface.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit f979dd22d8f48e6ac7c50372c7d180c3b590dc74\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 2 11:20:11 2010 +0000\n\n    image: Don't rely on clip regions being clipped to surface extents.\n    \n    Fixes a crash in test/clip-fill-unbounded [xlib-fallback].\n\n src/cairo-image-surface.c |   32 ++++++++++++++++++++------------\n 1 file changed, 20 insertions(+), 12 deletions(-)\n\ncommit 15d9c5fcd8881b4593ec23633450a4f629b6d42b\nAuthor: Alexander Shulgin <alex.shulgin@gmail.com>\nDate:   Sat Feb 20 20:59:32 2010 +0200\n\n    Added new MIME type CAIRO_MIME_TYPE_URI and it's support in SVG backend\n    \n    The rationale behind this change is that when someone is trying to\n    draw on a SVG surface using image surface patterns, the resulting SVG\n    file can take up to ridiculous 20 megabytes for 3-4 typical\n    photographic images in a single SVG file.  This also can take\n    significant amount of CPU time to complete.\n    \n    The reason for this behaviour is that currently whenever SVG backend\n    needs to emit an image tag for a surface pattern it takes a snapshot\n    of the subject surface, encodes it in PNG, then Base64-encodes and\n    emits the (huge) resulting string.  With use of\n    cairo_surface_set_mime_data API this can be somewhat improved by\n    associating JPEG image contents with the corresponding surfaces.\n    Still this doesn't allow for post-processing of involved photographic\n    images without regenerating the SVG file.\n    \n    As SVG specification allows URIs in the image tag's xlink:href\n    attribute, it is possible instead of embedding encoded image data to\n    simply link image files residing physically on the same medium as the\n    generated SVG file: files on disk under common directory, files on a\n    web server at common base URI, etc.\n    \n    To make this happen we add new (unofficial) MIME type \"text/x-uri\" and\n    let users associate URIs with surfaces through\n    cairo_surface_set_mime_data() API.  When SVG backend needs to emit\n    surface contents and it sees \"text/x-uri\" attached to the surface, it\n    emits this data instead of taking snapshot.  The URI data is emitted\n    as is, so correctness check is left solely to the client code.\n\n doc/public/cairo-sections.txt      |    1 +\n doc/public/tmpl/cairo-surface.sgml |    7 ++++\n src/cairo-surface.c                |   16 +++++++-\n src/cairo-svg-surface.c            |   72 ++++++++++++++++++++++++++++++++++--\n src/cairo.h                        |    1 +\n 5 files changed, 92 insertions(+), 5 deletions(-)\n\ncommit d91bab565c54205f8dd7aa8a9de819dc4bc3551c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 2 08:12:52 2010 +0000\n\n    test: Remove the double-clip from clip-group-shapes\n    \n    A push/pop is an implicit save/restore, so a clip applied inside the\n    group is temporary, whereas a clip applied outside affects both the\n    geometry inside *and* the application of the group when painted. So\n    reset the clip afterwards to get the desired behaviour.\n\n test/clip-group-shapes.c |    5 +++--\n 1 file changed, 3 insertions(+), 2 deletions(-)\n\ncommit e8c819c5227d29dfdf503022339276eb725a3e97\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 1 10:25:01 2010 +0000\n\n    Warnings cleanup for CAIRO_FORMAT_INVALID.\n    \n    A few more fixes required case statements to handle the addition of\n    CAIRO_FORMAT_INVALID.\n\n src/cairo-qt-surface.cpp           |    2 ++\n src/drm/cairo-drm-i915-surface.c   |    2 ++\n src/drm/cairo-drm-i965-shader.c    |    2 ++\n src/drm/cairo-drm-i965-surface.c   |    1 +\n src/drm/cairo-drm-intel-surface.c  |    1 +\n src/drm/cairo-drm-intel.c          |    3 +++\n src/drm/cairo-drm-radeon-surface.c |    1 +\n 7 files changed, 12 insertions(+)\n\ncommit 1a7ba1a8061c373cd66d15b3a1c8dfada92745ef\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Mon Mar 1 01:23:17 2010 +0200\n\n    xcb: Update minimum required versions of libxcb.\n    \n    The new xcb surface uses xcb_writev() and xcb_take_socket()\n    which were introduced in libxcb 1.1.92.  The boilerplate\n    in turn uses the major_code and minor_code fields in\n    xcb_generic_error_t, which were introduced in 1.4.\n\n boilerplate/cairo-boilerplate-xcb.c |    6 ++++++\n configure.ac                        |    5 ++++-\n 2 files changed, 10 insertions(+), 1 deletion(-)\n\ncommit 5b7f4bb241f3191c1589cd714f373719efded56e\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Feb 28 23:31:06 2010 +0200\n\n    api: Introduce CAIRO_FORMAT_INVALID formally in the API.\n    \n    We were exposing the actual value of CAIRO_FORMAT_INVALID\n    through API functions already, so it makes sense to just\n    go ahead and put it in the cairo_format_t enum.\n\n boilerplate/cairo-boilerplate.c            |    2 +-\n src/cairo-debug.c                          |    1 +\n src/cairo-gl-glyphs.c                      |    6 ++++++\n src/cairo-image-surface.c                  |    6 +++++-\n src/cairo-png.c                            |    1 +\n src/cairo-scaled-font.c                    |    1 +\n src/cairo-script-surface.c                 |   22 ++++++++++++++--------\n src/cairo-win32-surface.c                  |    6 ++++++\n src/cairo-xcb-surface-render.c             |    3 +++\n src/cairo-xlib-display.c                   |    1 +\n src/cairo-xlib-surface.c                   |    3 +++\n src/cairo-xml-surface.c                    |   28 +++++++++-------------------\n src/cairo.h                                |   10 ++++++----\n src/cairoint.h                             |    4 ++--\n src/drm/cairo-drm-gallium-surface.c        |    1 +\n src/drm/cairo-drm-i915-surface.c           |    1 +\n src/drm/cairo-drm-intel-surface.c          |    2 +-\n src/drm/cairo-drm-intel.c                  |   11 ++++++++---\n src/drm/cairo-drm-radeon-surface.c         |    2 +-\n test/any2ppm.c                             |    1 +\n test/png.c                                 |    1 +\n util/cairo-script/cairo-script-operators.c |    5 +++++\n util/cairo-sphinx/sphinx.c                 |    9 ++++++---\n util/cairo-trace/trace.c                   |    4 ++++\n 24 files changed, 88 insertions(+), 43 deletions(-)\n\ncommit 620cd9c2be4a6bef790e6818652470a5c53d578d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Feb 28 09:09:20 2010 +0000\n\n    image: Allow reduction of repeat modes for unity scaled patterns.\n\n src/cairo-image-surface.c |    9 +++++----\n 1 file changed, 5 insertions(+), 4 deletions(-)\n\ncommit 9ecb0f3cec491264041d0d3718595ad95164980a\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Feb 28 01:42:10 2010 +0200\n\n    image: Fix bug optimizing surface pattern extend modes.\n    \n    The image surface tries to convert surface pattern's extend\n    modes to EXTEND_NONE, if it can, when converting a cairo_pattern_t\n    to a pixman_image_t. The check was not taking into account the\n    transformation matrix on the pattern, so it was possible to\n    trick it into using EXTEND_NONE by downscaling the source\n    pattern enough.  This patch changes the optimization to only\n    take if the pattern has no transformation.\n    \n    Fixes surface-pattern-scale-down-extend-{pad,reflect,repeat}\n    failures in the test suite for the image backend.\n\n src/cairo-image-surface.c |    4 ++++\n 1 file changed, 4 insertions(+)\n\ncommit 260d7f8ace9dea8ff6b3a70f481e433cf399a3d2\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sat Feb 27 17:41:28 2010 +0200\n\n    test: Test downscaling and extending a surface pattern.\n    \n    Franz Schmid reported a regression in 1.9.6 when downscaling\n    and using EXTEND_REPEAT for an image surface pattern.  This\n    patch adds such tests for every extend mode.\n\n test/Makefile.sources                              |    1 +\n .../surface-pattern-scale-down-extend-none.ref.png |  Bin 0 -> 329 bytes\n test/surface-pattern-scale-down-extend-pad.ref.png |  Bin 0 -> 320 bytes\n ...rface-pattern-scale-down-extend-reflect.ref.png |  Bin 0 -> 328 bytes\n ...urface-pattern-scale-down-extend-repeat.ref.png |  Bin 0 -> 330 bytes\n test/surface-pattern-scale-down-extend.c           |  107 ++++++++++++++++++++\n 6 files changed, 108 insertions(+)\n\ncommit ebadc2ed0810d9941a2f44586016073fea90115b\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sat Feb 27 03:24:55 2010 +0200\n\n    test: Add tests covering more clip fast paths in groups.\n    \n    The clip-group-shapes-* tests check that it doesn't\n    matter whether the clip path is set before or after\n    pushing a group using specific types of clip paths\n    (aligned/unaligned rectangles and general paths.)\n\n test/Makefile.sources                              |    1 +\n test/clip-group-shapes-aligned-rectangles.ref.png  |  Bin 0 -> 378 bytes\n test/clip-group-shapes-circles.ref.png             |  Bin 0 -> 1510 bytes\n .../clip-group-shapes-unaligned-rectangles.ref.png |  Bin 0 -> 415 bytes\n test/clip-group-shapes.c                           |  189 ++++++++++++++++++++\n 5 files changed, 190 insertions(+)\n\ncommit e8d0b4fb39eba799e8649df6dd609f6100efb95e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Feb 26 10:28:23 2010 +0000\n\n    gl: Markup internal functions with cairo_private\n\n src/cairo-gl-private.h |   22 +++++++++++-----------\n 1 file changed, 11 insertions(+), 11 deletions(-)\n\ncommit ef807119ff8ee23c0444f1197f92b06a5caf6024\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Thu Feb 25 13:58:53 2010 +0200\n\n    compiler: Explain the slim hidden macros.\n    \n    The slim_hidden_* macro definitions are rather cryptic at first\n    sight and I keep needing to rederive how they work just find out\n    what they're supposed to do.  This patch adds a comment explaining\n    how they're used and work.\n\n src/cairo-compiler-private.h |   30 ++++++++++++++++++++++++++++++\n 1 file changed, 30 insertions(+)\n\ncommit dcf897967d54f579c737bbcc10af7fa295b586e5\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Feb 21 01:45:30 2010 +0200\n\n    test: Fix a wrongly typed return value in scaled-font-zero-matrix.\n    \n    The test was returning a cairo_status_t, but should be returning\n    a cairo_test_status_t instead.  When the test failed it was\n    being reported as having crashed, rather than merely failed,\n    because the enum value of CAIRO_TEST_CRASHED happened to be\n    same as the cairo_status_t value of the cairo context at\n    the end of the failing test.\n\n test/scaled-font-zero-matrix.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 8bb06915ed6628c6d8978b6c2fec474bbf08d7e9\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Tue Feb 23 21:01:13 2010 +0100\n\n    image: split cairo_image_surface_coerce()\n    \n    Split into a general cairo_image_surface_coerce() that coerces to one of\n    the 3 supported formats (ARGB32, RGB24, A8) based on content and the\n    more general cairo_image_surface_coerce_to_format() that coerces to a\n    specified format.\n\n src/cairo-gl-glyphs.c           |    3 +--\n src/cairo-gl-surface.c          |    3 +--\n src/cairo-image-surface.c       |   14 ++++++++++++--\n src/cairo-png.c                 |    3 +--\n src/cairo-scaled-font.c         |    2 +-\n src/cairo-script-surface.c      |    4 +---\n src/cairo-svg-surface.c         |    4 ++--\n src/cairo-type3-glyph-surface.c |    2 +-\n src/cairo-xcb-surface-render.c  |   21 ++++-----------------\n src/cairoint.h                  |    8 ++++++--\n 10 files changed, 30 insertions(+), 34 deletions(-)\n\ncommit b7c42b6aaa2dba09ed3ff9ae85eae27bec268713\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Feb 23 19:27:16 2010 +0000\n\n    drm: Add missing private headers\n    \n    Reported by: Thomas Jones <thomas.jones@utoronto.ca>\n\n src/Makefile.sources |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 6ab5f89571b0252496d58242ed3060a9486d68d4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Feb 23 08:54:58 2010 +0000\n\n    bo-rectangular: Fix incorrect skipping of colinear eo edges\n    \n    Fixes test/bug-bo-rectangular\n    \n    After skipping edges, we need to bd careful to only terminate the box on\n    a closing edge.\n\n src/cairo-bentley-ottmann-rectangular.c |   31 ++++++++++++++-----------------\n 1 file changed, 14 insertions(+), 17 deletions(-)\n\ncommit 1897156d96d77ff28f585794c1eb1baffa105488\nAuthor: Benjamin Otte <otte@gnome.com>\nDate:   Tue Feb 23 08:41:27 2010 +0000\n\n    test: Add bug-bo-rectangular\n    \n    Exercises a bug found in the special case rectangular tessellator with\n    colinear eo edges.\n\n test/Makefile.am                |    1 +\n test/Makefile.sources           |    1 +\n test/bug-bo-rectangular.c       |   67 +++++++++++++++++++++++++++++++++++++++\n test/bug-bo-rectangular.ref.png |  Bin 0 -> 950 bytes\n 4 files changed, 69 insertions(+)\n\ncommit 21b2457aabf7df2a9f040751cd48e396443262f1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Feb 22 15:26:37 2010 +0000\n\n    fallback: Initialize rects.is_bounded for span renderer.\n\n src/cairo-surface-fallback.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit 6dd22b767808f721de5d00fe384711ffaa269453\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Feb 22 15:24:08 2010 +0000\n\n    gl: Initialise glyphs mask to ensure allocation in absence of stash.\n\n src/cairo-gl-glyphs.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 668ac047e6c790b0f8f58c52f169c688caa81678\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Feb 22 14:57:01 2010 +0000\n\n    gl: Avoid attempting to create a program on GLSL-incapable h/w for spans\n\n src/cairo-gl-shaders.c |   17 ++++++++++++-----\n src/cairo-gl-surface.c |    6 ++++++\n 2 files changed, 18 insertions(+), 5 deletions(-)\n\ncommit 29df5c91d02276211962a083284feb9a424f0d97\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Feb 22 14:46:18 2010 +0000\n\n    gl: Return unsupported for h/w that cannot handle shaders.\n    \n    Remove the ASSERT_NOT_REACHED and propagate the unsupported status so\n    that we fallback to fixed-function gracefully.\n\n src/cairo-gl-shaders.c |   28 +++++++++++++++-------------\n 1 file changed, 15 insertions(+), 13 deletions(-)\n\ncommit 9f46bad301eff967dc0790fc271d872f8a45cedb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Feb 22 14:20:34 2010 +0000\n\n    bo-rectangular: Prevent invalid read during edge traversal\n    \n    Benjamin Otte tracked down an invalid read triggered by WebKit. The\n    cause is that we attempt to dereference the list_head as an edge as we\n    failed to check that during the skipping of colinear edges we advanced\n    to the end, under the false assumption that there would always\n    be a closing edge in a rectangle. This assumption is broken if the tail\n    rectangles having colinear right edges.\n\n src/cairo-bentley-ottmann-rectangular.c |    6 ++++++\n 1 file changed, 6 insertions(+)\n\ncommit 75db4f0ece194b7aa0455509785a300784778ec4\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Mon Feb 22 02:26:47 2010 +0200\n\n    text: Fix assert failure from compositing by SOURCE with a mask internally.\n    \n    Change the operator used to upgrade the format of a glyph mask from\n    CAIRO_OPERATOR_SOURCE to CAIRO_OPERATOR_ADD.\n    \n    The _cairo_scaled_font_show_glyphs() function upgrades the pixel\n    format of a glyph mask by calling _cairo_surface_composite() to copy\n    the mask to an image surface of the upgraded destination.  The way it\n    was doing it however was to use CAIRO_OPERATOR_SOURCE, a white source\n    pattern and the glyph's rasterised glyph as the mask pattern.  This\n    combination isn't supported by _cairo_surface_composite(), which\n    asserts that no mask is present when the operator is SOURCE or CLEAR.\n    \n    Reported by Mikael Magnusson to #cairo on irc.freenode.net.\n\n src/cairo-scaled-font.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 20f8f17f0e494a57a6b413be76f9333b42d88014\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Sat Feb 20 21:42:23 2010 +0100\n\n    xcb: Fix compilation without dri2\n    \n    XCB should be able to compile without xcb-drm. To do so it\n    can include xcb/dri2.h only if xcb-drm is enabled.\n\n src/cairo-xcb-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit fc7be0014d91c8536db8a15ae98b5e78c354c160\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Fri Feb 19 17:39:50 2010 -0800\n\n    Update version to 1.9.7.\n    \n    Following the 1.9.6 snapshot.\n\n cairo-version.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit cb090136b2b0b89bde69d9575f2f592b46e144e8\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Fri Feb 19 17:28:29 2010 -0800\n\n    Update REFERENCE_IMAGES list for \"make distcheck\".\n    \n    As usual, \"make distcheck\" does not work until we update this list.\n\n test/Makefile.am |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 20cf7c92b332a5fd28227f0cdaa50e3f1080c038\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Fri Feb 19 17:24:33 2010 -0800\n\n    Update version to 1.9.6\n    \n    For a new cairo 1.9.6 snapshot.\n\n cairo-version.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 1c3d417c30bd60c51512d23440896a6a7f51bf23\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Fri Feb 19 17:23:16 2010 -0800\n\n    NEWS: Add notes for the 1.9.6 snapshot.\n    \n    Based on a very brief reading of the git log. There's certainly\n    a lot of interesting stuff missing here.\n\n NEWS |  114 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++--\n 1 file changed, 112 insertions(+), 2 deletions(-)\n\ncommit 9057c4b6be5f5cc6f8905e017dde534402ddedda\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Wed Feb 17 12:37:07 2010 -0800\n\n    test: Add an option to explicitly specify a test name to the runner.\n\n test/cairo-test-runner.c |   14 +++++++++++---\n 1 file changed, 11 insertions(+), 3 deletions(-)\n\ncommit e0a948bd2ff3504f5d8b3b3f2136cd9b86cf8ec6\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Wed Feb 17 11:48:41 2010 -0800\n\n    gl: Be sure to do linear interpolation on gradients.\n\n src/cairo-gl-surface.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit f1e794956f60a935bfc38ae1c2c2d51d37aadee3\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Wed Feb 17 11:03:52 2010 -0800\n\n    gl: Stop trying to handle first/last stop offset in the gradient shaders.\n    \n    Since moving to pixman for the gradient textures, first=0 and last=1,\n    so there's no need to rescale to 0,1 any more.  Shaves 6 Gen4 ISA\n    instructions, including 2 inverses, in the radial fragment shader.\n\n src/cairo-gl-private.h |    4 ----\n src/cairo-gl-shaders.c |   12 ------------\n src/cairo-gl-surface.c |   51 +++---------------------------------------------\n 3 files changed, 3 insertions(+), 64 deletions(-)\n\ncommit f813a0243b90ea4151f60f3d13bb6c84d21270df\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Wed Feb 17 10:58:16 2010 -0800\n\n    gl: Remove the old unused radial/linear gradients shaders.\n    \n    They're dynamically generated now for source/mask.\n\n src/cairo-gl-private.h |    6 ---\n src/cairo-gl-shaders.c |  117 ------------------------------------------------\n 2 files changed, 123 deletions(-)\n\ncommit 8da843e996bda7152abb217b3f461a8091dbc880\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Wed Feb 17 10:54:39 2010 -0800\n\n    gl: Reduce complexity of radial fragment shaders.\n    \n    This shaves 1 Mesa IR instruction, and 6 Gen4 ISA instructions.\n\n src/cairo-gl-shaders.c |   10 ++--------\n 1 file changed, 2 insertions(+), 8 deletions(-)\n\ncommit 89bdc2f8d55d951e15b77e6737c57b208d984b0a\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Thu Feb 4 23:17:59 2010 -0800\n\n    gl: Implement draw_image for window targets.\n    \n    Creates a texture and draws with it instead of doing TexSubImage.\n    Open question is whether this wouldn't be better in general.  Fixes\n    several failures with ARB_texture_rectangle path due to fallbacks to\n    window drawing.\n\n src/cairo-gl-surface.c |  157 ++++++++++++++++++++++++++++++++++++++----------\n 1 file changed, 124 insertions(+), 33 deletions(-)\n\ncommit fcd29473ff71b74bf541199293a966df2232fd63\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Tue Feb 16 13:47:41 2010 -0800\n\n    gl: Fix glyphs texture coordinates for ARB_texture_rectangle.\n    \n    Fixes most of the text testcases to match the\n    ARB_texture_non_power_of_two results.\n\n src/cairo-gl-glyphs.c |   16 ++++++++++------\n 1 file changed, 10 insertions(+), 6 deletions(-)\n\ncommit e845450905f373e4fcb9ae4717cfd2c3e6472423\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Tue Feb 16 13:18:33 2010 -0800\n\n    gl: Add GLSL support for ARB_texture_rectangle, and repeat/reflect fallbacks.\n    \n    Most testcases are now passing like the ARB_texture_non_power_of_two\n    case.  EXT_texture_rectangle support is dropped in favor of\n    ARB_texture_non_power_of_two.  If we have issues with drivers not\n    having that but having EXT (which just lacks the GLSL part of the\n    spec), we can split it out.  Right now non-GLSL support in cairo-gl is\n    probably in bad shape anyway and will require someone that cares for\n    it in order to get fixed up.\n\n src/cairo-gl-shaders.c |   44 ++++++++++++++++++++++++++++++++++++++++++++\n src/cairo-gl-surface.c |   21 +++++++++++++++------\n 2 files changed, 59 insertions(+), 6 deletions(-)\n\ncommit 40294377cb26fab7bcf17ee98b8e4f5bf9778ca2\nAuthor: Dave Airlie <airlied@redhat.com>\nDate:   Sat Jan 30 19:24:31 2010 +1000\n\n    gl: initial support for EXT_texture_rectangle extension\n    \n    The only issue is the repeat modes aren't supported for rectangular\n    textures. In any case even with ARB_npot radeon's pre-r600 lie and\n    fail to do repeats anyway.\n\n src/cairo-gl-glyphs.c  |   25 +++++-----\n src/cairo-gl-private.h |    1 +\n src/cairo-gl-surface.c |  124 +++++++++++++++++++++++++++++-------------------\n 3 files changed, 89 insertions(+), 61 deletions(-)\n\ncommit 6542a515f04d52d10fdc89ee9abc76e54282a2d8\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Sun Feb 7 20:26:56 2010 +0100\n\n    gl: Reduce the size of the gradient texture for small numbers of stops.\n    \n    This code is stolen straight from cairo-drm-intel.c.  This saves a\n    bunch of time calculating interpolated points when we just do\n    interpolation between points at sampling time anyway.  Reduces\n    firefox-talos-svg from 47 seconds back to the 42 it was at before the\n    pixman change.\n    \n    This regresses the reported result of huge-radial, but there's no\n    visible difference.\n\n src/cairo-gl-surface.c |   63 ++++++++++++++++++++++++++++++++++--------------\n 1 file changed, 45 insertions(+), 18 deletions(-)\n\ncommit 3b678a88b0d026bb765fd9cdff92fe7235e19848\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Feb 12 16:44:25 2010 +0000\n\n    drm/i915: Set a source for unbounded fixups.\n\n src/drm/cairo-drm-i915-surface.c |   52 ++++++++++++++++++++++++++++++--------\n 1 file changed, 41 insertions(+), 11 deletions(-)\n\ncommit 45a275ee29095b69c620ece868411885f4574be9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Feb 12 14:12:24 2010 +0000\n\n    drm/i915: Use correct linear mode for mask.\n\n src/drm/cairo-drm-i915-shader.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 37dbf157f354234d04cd4f0c5d069ff0d535e862\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Feb 12 14:08:32 2010 +0000\n\n    clip: Avoiding derefencing NULL clip_region\n\n src/cairo-image-surface.c      |   26 ++++++++++++++------------\n src/cairo-xcb-surface-render.c |   26 ++++++++++++++------------\n 2 files changed, 28 insertions(+), 24 deletions(-)\n\ncommit 6995e1d982a3ad84a1b74730ce557840745fcd8e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Feb 12 14:08:14 2010 +0000\n\n    boilerplate: Include X11.h for GL/GLX\n\n boilerplate/cairo-boilerplate-gl.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 5390df961f6dff8e25e5aac21062026a81710d88\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Feb 12 12:20:35 2010 +0000\n\n    clip: Restrict composite extents to clip extents\n    \n    Fixes test/clip-rectangle-twice.\n\n src/cairo-clip-private.h         |    6 +++\n src/cairo-clip.c                 |   84 ++++++++++++++++++++++++++++++++++++++\n src/cairo-image-surface.c        |   74 ++++++++-------------------------\n src/cairo-surface-fallback.c     |   71 ++------------------------------\n src/cairo-xcb-surface-render.c   |   78 +++++++++--------------------------\n src/drm/cairo-drm-i915-surface.c |   47 ++-------------------\n src/drm/cairo-drm-i965-surface.c |   47 ++-------------------\n 7 files changed, 137 insertions(+), 270 deletions(-)\n\ncommit 51047483f462a905567b42275ae061ead4df0a07\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Feb 12 12:18:30 2010 +0000\n\n    test: Add clip-twice-rectangle\n    \n    Jeff Muizeelar found another bug with clipping whereby the clip was\n    been incorrectly discarded.\n\n test/Makefile.am                  |    1 +\n test/Makefile.sources             |    1 +\n test/clip-twice-rectangle.c       |   70 +++++++++++++++++++++++++++++++++++++\n test/clip-twice-rectangle.ref.png |  Bin 0 -> 323 bytes\n 4 files changed, 72 insertions(+)\n\ncommit 22b5f78c1c1ae7d289a99a3c52354bba3b9e817f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Feb 11 10:38:51 2010 +0000\n\n    gl: Remove eagle support\n    \n    Eagle is no more, Kristian has superseded it with true EGL support. He\n    is so happy...\n\n boilerplate/Makefile.win32.features |   10 --\n build/Makefile.win32.features       |    1 -\n build/Makefile.win32.features-h     |    3 -\n build/configure.ac.features         |    1 -\n configure.ac                        |   12 ---\n src/Makefile.sources                |    2 -\n src/Makefile.win32.features         |   14 ---\n src/cairo-eagle-context.c           |  185 -----------------------------------\n src/cairo-gl.h                      |   12 ---\n 9 files changed, 240 deletions(-)\n\ncommit ed4a30b38311e4ce0730ecd6026432f4a1e8ddf7\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Feb 10 22:10:23 2010 +0100\n\n    build: Add -Wdeclaration-after-statement\n    \n    ... and fix the compile errors from it I get on my build.\n    \n    It's Cairo style to put declarations before the code, so better warn\n    about it.\n    Besides, it eases porting to old compilers like MSVC.\n\n build/configure.ac.warnings  |    2 +-\n src/cairo-gl-shaders.c       |    8 ++++----\n src/cairo-gl-surface.c       |    3 ++-\n src/cairo-xcb-surface-core.c |    3 ++-\n 4 files changed, 9 insertions(+), 7 deletions(-)\n\ncommit 4113e455a317785b83324215a6b0156995665989\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Feb 10 21:09:56 2010 +0000\n\n    drm/i965: fix use of uninitialized variable whilst dumping errors\n    \n    Cut'n'paste bug from i915 error path.\n\n src/drm/cairo-drm-i965-surface.c |    6 ++----\n 1 file changed, 2 insertions(+), 4 deletions(-)\n\ncommit 5d34902c0cb9712179292112fbdb0f06be327fd8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Feb 10 12:10:16 2010 +0000\n\n    script: Compile without mmap\n    \n    Should fix:\n      Bug 26509 - Cairo fails to compile without mmap\n      http://bugs.freedesktop.org/show_bug.cgi?id=26509\n    \n    As reported by Hib Eris, Cairo files to compile under a mingw32\n    cross-compiler as we use a structure only defined if HAVE_MMAP\n    unconditionally.\n\n util/cairo-script/cairo-script-operators.c |    5 +++--\n 1 file changed, 3 insertions(+), 2 deletions(-)\n\ncommit fb5af4ae407044d1c0d0144ec13f5951075426a3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Feb 10 12:00:59 2010 +0000\n\n    drm/intel: An interrupted SET_TILING modifies the input parameters\n    \n    If a signal interrupts the SET_TILING ioctl, the tiling and stride\n    values are updated to reflect the current condition of the buffer, so we\n    need to restore those to the desired values before repeating the ioctl.\n\n src/drm/cairo-drm-intel.c |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit 3c66c721d1bb1db6052acf722f609dcbe56431f5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Feb 9 08:48:42 2010 +0000\n\n    qt: Fix compile error.\n    \n    Update after prototype changed for create_similar(), as pointed out by\n    augzilla.\n\n src/cairo-qt-surface.cpp |    1 -\n 1 file changed, 1 deletion(-)\n\ncommit a1e5b07fa834819b8d9df9fa56758639a08262d7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Feb 7 20:26:27 2010 +0000\n\n    ps: Initialise page bbox to page size\n\n src/cairo-ps-surface.c |    5 +++++\n 1 file changed, 5 insertions(+)\n\ncommit 44b6370cb04d27e1ae3e50558a9085d318990938\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Feb 7 19:36:29 2010 +0000\n\n    ps: Propagate NOTHING_TO_DO\n    \n    The upper layers should know what to do if there is nothing to be done,\n    so pass on that knowledge.\n\n src/cairo-ps-surface.c |   36 ++++--------------------------------\n 1 file changed, 4 insertions(+), 32 deletions(-)\n\ncommit a4793d1331845b85a9c1810035119dfbcffa5082\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Feb 7 19:27:32 2010 +0000\n\n    test: Add linear-gradient-subset\n    \n    It was observed that we never actually test the condition that the\n    gradient is only defined for a portion of its range, i.e. the starting\n    offset is >0 and the ending offset is <0. By definition the colour\n    between 0 and start offset is the start color, so check that this\n    behaviour is followed by all backends.\n\n test/Makefile.am                    |    1 +\n test/Makefile.sources               |    1 +\n test/linear-gradient-subset.c       |  127 +++++++++++++++++++++++++++++++++++\n test/linear-gradient-subset.ref.png |  Bin 0 -> 825 bytes\n 4 files changed, 129 insertions(+)\n\ncommit 0f99303cd6d68df79070200a843194a20ad1c597\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Feb 7 12:40:19 2010 +0000\n\n    gl: Use pixman to create the gradient texture\n    \n    This is just for consistency as we know that pixman has to handle all\n    the corner cases anyway...\n\n src/cairo-gl-surface.c |  145 ++++++++++++++++++++++++++----------------------\n 1 file changed, 80 insertions(+), 65 deletions(-)\n\ncommit b028d287e6effe30833963f4df40db3846e7f4da\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Fri Feb 5 07:25:04 2010 -0800\n\n    [gl] Make the VBO once at startup instead of recreating per glyphs/spans.\n    \n    This shaves 2% off of firefox-talos-gfx.\n\n src/cairo-gl-glyphs.c  |   10 ++--------\n src/cairo-gl-private.h |    1 +\n src/cairo-gl-surface.c |    8 +++-----\n 3 files changed, 6 insertions(+), 13 deletions(-)\n\ncommit 696a715702ed18bbe3f7d8b97654a055fa37444e\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Wed Feb 3 21:34:24 2010 -0800\n\n    [gl] Add radial gradients acceleration.\n    \n    This is significantly cribbed from Zach Laine's work, but reworked so\n    that gradients can be plugged in as either source or mask operands for\n    any of the paths.\n\n src/cairo-gl-private.h |   13 +++++\n src/cairo-gl-shaders.c |   77 +++++++++++++++++++++++++++--\n src/cairo-gl-surface.c |  129 ++++++++++++++++++++++++++++++++++++++++++++++++\n 3 files changed, 216 insertions(+), 3 deletions(-)\n\ncommit 297b0ab47fa63ef99e65b6834b731c260ea3e941\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Thu Feb 4 23:57:43 2010 -0800\n\n    [gl] When making a boilerplate GLX window, ensure it has alpha.\n    \n    cairo_gl_surface_create_for_window assumes CONTENT_COLOR_ALPHA, so\n    make sure the fbconfig we choose is good enough.  Fixes gl-window\n    testcase results to basically match the non-window testcases.\n\n boilerplate/cairo-boilerplate-gl.c |   17 +++++++++--------\n 1 file changed, 9 insertions(+), 8 deletions(-)\n\ncommit 6708bc0593a649d083ede429ae73f06691edc018\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Thu Feb 4 23:47:33 2010 -0800\n\n    [gl] When filling a gradient texture, multiply alpha after interpolating.\n    \n    Fixes gradient-alpha testcase.\n\n src/cairo-gl-surface.c |   20 +++++++++-----------\n 1 file changed, 9 insertions(+), 11 deletions(-)\n\ncommit e426cdd56973ff1114dac5e8b1130180d43631b0\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Wed Feb 3 16:03:52 2010 -0800\n\n    [gl] Implement linear gradients acceleration.\n    \n    This is significantly cribbed from Zach Laine's work, but reworked so\n    that gradients can be plugged in as either source or mask operands for\n    any of the paths.\n    \n    This cuts the runtime of firefox-talos-svg in half on my GM45, at the\n    expense of gradient-alpha.  surface-pattern-operator also now fails\n    due to small rasterization differences.\n\n src/cairo-gl-glyphs.c  |    1 +\n src/cairo-gl-private.h |   11 ++++\n src/cairo-gl-shaders.c |   39 ++++++++++++--\n src/cairo-gl-surface.c |  139 ++++++++++++++++++++++++++++++++++++++++++++----\n 4 files changed, 176 insertions(+), 14 deletions(-)\n\ncommit 05b18fc09af0e0887c652bd482d68f00bec6d4d7\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Thu Feb 4 00:12:58 2010 -0800\n\n    [gl] Fix create_gradient_texture to premultiply alpha.\n\n src/cairo-gl-surface.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 31e706454b7f0fa510047f582250a7a2db24dd31\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Wed Feb 3 15:48:40 2010 -0800\n\n    [gl] Pull the gradient operand setup out to its own function.\n    \n    Hopefully this clarifies what's going on, including the fallthrough to\n    texture setup on failure.\n\n src/cairo-gl-surface.c |   77 +++++++++++++++++++++++++++---------------------\n 1 file changed, 43 insertions(+), 34 deletions(-)\n\ncommit 745f263c1c2d263f7c5e78964bf7181f650301cc\nAuthor: T. Zachary Laine <whatwasthataddress@gmail.com>\nDate:   Wed Feb 3 15:38:02 2010 -0800\n\n    [gl] Add function for creating a 1D texture to use for gradient lookups.\n    \n    Rather than have fragment shaders try to walk a variable-length set of\n    stops and try to compute the interpolation between the nearest stops\n    per fragment, we make a little texture representing the gradient along\n    a line and have the shaders compute texture coordinates along the line\n    and sample.  This should be a good tradeoff between CPU work and GPU\n    work.\n    \n    [anholt: I pulled this set of code out of Zach Laine's tree to use for\n    gradient acceleration, and wanted to make sure attribution was\n    appropriate.  I applied only minor tweaking]\n\n src/cairo-gl-private.h |    1 +\n src/cairo-gl-surface.c |  117 ++++++++++++++++++++++++++++++++++++++++++++++++\n 2 files changed, 118 insertions(+)\n\ncommit 88c8304e9072e5a46890a0eb32fcdbc857eb1a12\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Wed Feb 3 17:06:45 2010 -0800\n\n    [gl] Sanity check the sampler uniform binding.\n\n src/cairo-gl-shaders.c |    6 ++++--\n 1 file changed, 4 insertions(+), 2 deletions(-)\n\ncommit 42597170f2303475bb0507f4c6e948eead28c7bd\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Wed Feb 3 16:55:45 2010 -0800\n\n    [gl] Convert the spans code to using GLSL when available.\n\n src/cairo-gl-private.h |    1 +\n src/cairo-gl-shaders.c |   35 +++++++++++++++++++++++++++++---\n src/cairo-gl-surface.c |   52 +++++++++++++++++++++++++++++-------------------\n 3 files changed, 65 insertions(+), 23 deletions(-)\n\ncommit 8d16fb10ea9940c0c9f311ff08c51d572c068c17\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Wed Feb 3 15:31:57 2010 -0800\n\n    [gl] Test for required EXT_bgra and explain what it's used for.\n\n src/cairo-gl-surface.c |    9 ++++++++-\n 1 file changed, 8 insertions(+), 1 deletion(-)\n\ncommit b2d8c9cbf2faec570450d163da140c54e64bbdc8\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Wed Feb 3 15:25:47 2010 -0800\n\n    [gl] Use the shader source choice from operand setup instead of DIY.\n\n src/cairo-gl-glyphs.c |   15 +--------------\n 1 file changed, 1 insertion(+), 14 deletions(-)\n\ncommit 0fceac4d52d4b574b9c1f911b83d15dc7e01691d\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Wed Feb 3 12:24:41 2010 -0800\n\n    [gl] Move the component alpha composite to using GLSL when available.\n\n src/cairo-gl-surface.c |  165 +++++++++++++++++++++++++++++++-----------------\n 1 file changed, 108 insertions(+), 57 deletions(-)\n\ncommit 8357336ed7be91ad359d205b1f223486d13215f2\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Wed Feb 3 11:54:24 2010 -0800\n\n    [gl] Move normal composites to using GLSL when available.\n\n src/cairo-gl-private.h |    2 ++\n src/cairo-gl-surface.c |   55 +++++++++++++++++++++++++++++++++++-------------\n 2 files changed, 42 insertions(+), 15 deletions(-)\n\ncommit 106bc158bafa4eecfd7f79422fc19d267c20dcdb\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Wed Feb 3 15:15:02 2010 -0800\n\n    [gl] Move the glyphs shader construction to a more general location.\n\n src/cairo-gl-glyphs.c  |  213 ++++++++++--------------------------------------\n src/cairo-gl-private.h |   48 +++++++----\n src/cairo-gl-shaders.c |  200 +++++++++++++++++++++++++++++++++++++++++++++\n 3 files changed, 273 insertions(+), 188 deletions(-)\n\ncommit f475351f75a3ec079628a2eb2643ebc09f0e5cc8\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Tue Feb 2 19:23:17 2010 -0800\n\n    [gl] Use GLSL when available for glyph rendering.\n    \n    This reduces the CPU work in translating fixed function state to\n    shaders, but currently is a slight cost on GM45 because we end up\n    changing shaders more frequently since other parts of the pipeline are\n    doing fixed function still.\n\n src/cairo-gl-glyphs.c  |  189 +++++++++++++++++++++++++++++++++++++++++++++---\n src/cairo-gl-private.h |   19 +++++\n src/cairo-gl-shaders.c |   10 ++-\n src/cairo-gl-surface.c |   56 ++++++++------\n 4 files changed, 239 insertions(+), 35 deletions(-)\n\ncommit 672973caa0c3877b3b9f1c5f5966449ce0d7e239\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Tue Feb 2 11:17:43 2010 -0800\n\n    [gl] Convert fill_rectangles to the new GLSL core/arb wrapper.\n\n src/cairo-gl-private.h |   12 +++---\n src/cairo-gl-shaders.c |  106 +++++++++++-------------------------------------\n src/cairo-gl-surface.c |   39 +++++++++---------\n 3 files changed, 48 insertions(+), 109 deletions(-)\n\ncommit 416273db34a715a6fa180f52ddfd11b82b6e8b6c\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Tue Feb 2 10:37:42 2010 -0800\n\n    [gl] Cut out the abstraction of GL_VERTEX_SHADER vs GL_VERTEX_SHADER_ARB.\n    \n    They're the same number, so just use the core 2.0 name.\n\n src/cairo-gl-shaders.c |   38 ++------------------------------------\n 1 file changed, 2 insertions(+), 36 deletions(-)\n\ncommit 48a5a6eefc923db47c35ad7da3b635d205736716\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Tue Feb 2 10:36:16 2010 -0800\n\n    [gl] Avoid macro obfuscation of the shader impl structures.\n\n src/cairo-gl-shaders.c |   52 +++++++++++++++++++++++++++++-------------------\n 1 file changed, 31 insertions(+), 21 deletions(-)\n\ncommit 25ccc5dcb036554430b66fb1bf5f74766daa5612\nAuthor: Zach Laine <whatwasthataddress@gmail.com>\nDate:   Thu Jan 14 11:49:04 2010 -0600\n\n    [gl] Add shader support code for GL versions < 3.0.\n    \n    Adds cairo_gl_shader_program_t, and functions to manipulate same.  Multiple GL\n    entry points for shaders are provided -- one for the pre-GL 2.0 extenstions\n    entry points, and one for GL 2.0.  This code is well tested, but currently\n    unused in the GL backend.\n\n src/cairo-gl-private.h |   49 ++++\n src/cairo-gl-shaders.c |  623 +++++++++++++++++++++++++++++++++++++++++++++++-\n 2 files changed, 671 insertions(+), 1 deletion(-)\n\ncommit a6897ad3867611bd74f8ab7de4b1e8d8d1c12c71\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Tue Feb 2 11:24:36 2010 -0800\n\n    [gl] Check for GLSL support once at context init instead of per draw.\n\n src/cairo-gl-private.h |    1 +\n src/cairo-gl-surface.c |   11 ++++++++++-\n 2 files changed, 11 insertions(+), 1 deletion(-)\n\ncommit b1829a47bff2b03a850d4049f228d2a41e14d6bd\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Wed Feb 3 11:19:26 2010 +0100\n\n    [quartz] Unbreak mask fallback path\n    \n    _cairo_quartz_surface_paint will never fail as it falls back to image\n    when CoreGraphics can't handle the requested operation. This means that\n    upon fallback the ClipImage set by the masking code gets ignored, thus\n    the mask fallback path is broken. Using the _cg function ensures that\n    masking is either completely done by CoreGraphics, or the fallback path\n    passes the mask operation to image.\n\n src/cairo-quartz-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 597dd24ddcc763281c82790b7677e54dc2db8f92\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Feb 3 08:53:44 2010 +0000\n\n    drm/i915: Free potential leak of cloned textures.\n\n src/drm/cairo-drm-i915-shader.c |    6 ++++++\n 1 file changed, 6 insertions(+)\n\ncommit 913a31494ec4bd000dfa303e362d8273b6857cfe\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Feb 2 17:49:09 2010 +0000\n\n    drm/i915: Increase batch buffer space.\n\n src/drm/cairo-drm-i915-private.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 1315323b20398c7c4efa68e4e1c7f6fd6c1d8d91\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Feb 2 17:38:06 2010 +0000\n\n    drm/i915: check for batch buffer overflow.\n    \n    Oops, the check for sufficient batch space mysteriously disappeared\n    during the rearrangement.\n\n src/drm/cairo-drm-i915-private.h |    3 ---\n src/drm/cairo-drm-i915-shader.c  |   44 ++++++++++++++++++++++++++++++++++++++\n src/drm/cairo-drm-i915-surface.c |   35 ------------------------------\n 3 files changed, 44 insertions(+), 38 deletions(-)\n\ncommit e2be50c722347734801468d7d9568a18dbbaaa17\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Fri Jan 29 12:06:13 2010 +0100\n\n    [quartz] Fix UNSUPPORTED operations\n    \n    The fallback path shouldn't be used anymore, thus fallbacks are now\n    handled by passing unsupported ops to the image backend.\n    \n    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>\n\n src/cairo-quartz-surface.c |  234 +++++++++++++++++++++++++++++++++++++-------\n 1 file changed, 198 insertions(+), 36 deletions(-)\n\ncommit 3e69c38fe642be467fee0cad166b83006741d55c\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Sun Jan 24 21:59:32 2010 +0100\n\n    [quartz] Fix surface to CGImage conversion\n    \n    Snapshotting a surface doesn't produce a cairo_image_surface_t.\n    Acquiring (and later releasing) the surface is needed to access\n    its image data.\n\n src/cairo-quartz-surface.c |   75 ++++++++++++++++++++++----------------------\n 1 file changed, 38 insertions(+), 37 deletions(-)\n\ncommit 7aba47e9d87bf09a5fa7e41a3c76c775f28b08f3\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Mon Jan 25 15:09:51 2010 +0100\n\n    [quartz] Silence compiler warnings\n\n src/cairo-quartz-surface.c |   16 ++++++++--------\n 1 file changed, 8 insertions(+), 8 deletions(-)\n\ncommit e9b07d194630f3f5e31eef3606f8e4c188a01d5f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Feb 2 16:28:30 2010 +0000\n\n    drm/i915: Don't tile page sized bo.\n    \n    Minor tweak from < to <= so that a page sized bo is also not tiled for\n    those 32x32 pixmaps...\n\n src/drm/cairo-drm-i915-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 70ca9dd170ce1cf8941311ec1f3dc117aef141b6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Feb 2 16:28:09 2010 +0000\n\n    drm/i915: Pass the correct length to dump the batchbuffer.\n\n src/drm/cairo-drm-i915-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 3266a1a72be9c0a6b6c0014c4b64098507b6d385\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Feb 2 16:27:52 2010 +0000\n\n    drm: Handle absence of PCI_ID\n\n src/drm/cairo-drm.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 1ecefc53a1d370d9fffb323952dcabeef5b872c6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Feb 2 16:26:54 2010 +0000\n\n    pattern: Zero-length gradients are not necessary empty\n    \n    Fixes: test/linear-step-function\n    \n    If the extend mode is unbounded, then the gradient is also unbound.\n\n src/cairo-pattern.c |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit 2a59220aa448cd7416f1851c4c62ca6ac396302d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Feb 2 16:24:30 2010 +0000\n\n    test: Add linear-step-function\n    \n    Another bug identified by Jeff Muizelaar was that the bounds for a\n    zero-length (i.e. it started and stopped at the same point) were\n    miscomputed. This test case exercises that bug.\n    \n    Note: I believe the output is wrong here when padding a zero-length\n    gradient. On the left it should be red, and on the right it should be\n    blue.\n\n test/Makefile.am                    |    1 +\n test/Makefile.sources               |    1 +\n test/linear-step-function.c         |   60 +++++++++++++++++++++++++++++++++++\n test/linear-step-function.xfail.png |  Bin 0 -> 116 bytes\n 4 files changed, 62 insertions(+)\n\ncommit 7b37ba8a49dca39a42b5395e0715d3d0a5a89972\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Feb 2 16:17:13 2010 +0000\n\n    clip: Propagate all-clipped when copying\n    \n    Fixes test/clip-empty-save.\n    \n    The all-clipped flag was not being copied to the new clip, which occurs\n    for instance when an empty clip is pushed via a gstate save.\n\n src/cairo-clip.c |    7 ++-----\n 1 file changed, 2 insertions(+), 5 deletions(-)\n\ncommit 7dc464bb2bd64d1469b7b03afaf2191ee6d9e28b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Feb 2 16:15:32 2010 +0000\n\n    test: Add clip-empty-save\n    \n    Jeff Muizelaar found a bug in _cairo_clip_init_copy() which was not\n    correctly propagating the all-clipped status when an empty clip was\n    saved in the gstate. This test case exercises that bug.\n\n test/Makefile.am             |    1 +\n test/Makefile.sources        |    1 +\n test/clip-empty-save.c       |   68 ++++++++++++++++++++++++++++++++++++++++++\n test/clip-empty-save.ref.png |  Bin 0 -> 118 bytes\n 4 files changed, 70 insertions(+)\n\ncommit ab3dc7bb31f7f8b8c4d87c1ae62bd946b260c77e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jan 31 16:59:07 2010 +0000\n\n    csi-replay: compile fix\n\n util/cairo-script/csi-replay.c |   32 +++++++++++++++++++++-----------\n 1 file changed, 21 insertions(+), 11 deletions(-)\n\ncommit ab605214d151098ad153e8bf74ae0ca71a34c963\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Mon Feb 1 09:27:16 2010 +0100\n\n    Partially revert \"Improve stroking of densely dashed styles\"\n    \n    This reverts commit 26e9f149063b9e1fdb54fc54fccbefdf04a68190 on\n    cairo-path-stroke.\n    The changes in cairo-path-stroke are not needed anymore since dash\n    pattern approximation is now done in gstate before passing the dash\n    pattern to the backend.\n\n src/cairo-path-stroke.c |   24 ++++++------------------\n 1 file changed, 6 insertions(+), 18 deletions(-)\n\ncommit 8ffe0fc3825f0f6bc4d06607f6819ea8c2c2040b\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Sat Jan 30 09:29:48 2010 +0100\n\n    Revert \"[quartz] Approximate dense dashing patterns\"\n    \n    This reverts commit 27701ed8447d4c21b7bf9709a2fc21690b3cdc96.\n    Approximation is now done in gstate.\n\n src/cairo-quartz-surface.c |   32 +++++++++++---------------------\n 1 file changed, 11 insertions(+), 21 deletions(-)\n\ncommit 2e91648bcba06832dfa92bd742c32b2f5c1ad989\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Fri Jan 15 15:46:20 2010 +0100\n\n    Approximate dash patterns in gstate\n    \n    Since approximation is only done when the pattern is sub-tolerance,\n    it is acceptable to apply it even for vector backends.\n    By doing it once and for all backends, backends are guaranteed to have\n    non-degenerate input.\n    Acked-by: Adrian Johnson <ajohnson@redneon.com>\n\n src/cairo-gstate.c |   13 ++++++++++++-\n 1 file changed, 12 insertions(+), 1 deletion(-)\n\ncommit 67f666896cbfd0ac2728c7aa1325a7d0b2c8282d\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Sun Jan 24 22:17:18 2010 +0100\n\n    Improve comments style consistency\n    \n    Each line of a multi-line comment should begin with '*'.\n\n src/cairo-stroke-style.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 45c795a1820e0317b123e7782cefed6ade8996d7\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Fri Jan 15 10:44:58 2010 +0100\n\n    Improve dash pattern approximation\n    \n    Dash pattern approximation was taking the caps style into account\n    only for coverage computation, but not when computing the new\n    pattern, thus the computed approximation had a higher coverage if\n    the caps style was SQUARE or ROUND.\n    \n    Reviewed-by: M. Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\n\n src/cairo-stroke-style.c |   56 ++++++++++++++++++++++++++++++++++++++++++++--\n 1 file changed, 54 insertions(+), 2 deletions(-)\n\ncommit 8d7841048b079ce2a582ff17c90e82e0081e5f42\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Sun Jan 17 19:00:47 2010 +0100\n\n    Round caps coverage extimate explanation\n    \n    Comment on how the round caps coverage has been computed, explaining\n    the complete procedure. The comments doesn't contain intermediate\n    (verbose and ugly) results, but when executed in a symbolic math\n    program (sage, for example) computes the expected results.\n    \n    Reviewed-by: M. Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\n\n src/cairo-stroke-style.c |   16 ++++++++++++++++\n 1 file changed, 16 insertions(+)\n\ncommit 8558cd579059974758bda696c33f08399267d33e\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Thu Jan 28 17:39:34 2010 -0800\n\n    [gl] Use GL_MESA_pack_invert to flip get_image of windows around.\n    \n    This doesn't have any fallback for a GL that fails to implement the\n    extension.  Fixes 120 testcases for gl-window.\n\n src/cairo-gl-surface.c |    4 ++++\n 1 file changed, 4 insertions(+)\n\ncommit 11a120fb8477910f5ac63dc1ebde45c276764783\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Fri Jan 29 14:21:06 2010 +0100\n\n    Silence autoconf on Mac OS X\n    \n    Autoconf was complaining that AC_COMPILE_IFELSE and AC_RUN_IFELSE\n    were called before AC_GNU_SOURCE. Moving AC_GNU_SOURCE right after\n    AC_INIT solves this.\n\n configure.ac |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 05d4f9b461749f129b17cc97d6e3e6b49fe8e8d9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 29 11:30:49 2010 +0000\n\n    xlib: Compile fix for no fontconfig\n\n src/cairo-xlib-screen.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit e3e74641450481e7ad393bbc6fd1a7428be53de1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 29 11:22:26 2010 +0000\n\n    atomic: Fix up compile on PPC with libatomic-ops\n\n src/cairo-atomic-private.h |    2 --\n src/cairo-atomic.c         |    3 ++-\n 2 files changed, 2 insertions(+), 3 deletions(-)\n\ncommit e11d2d0b4d646757fcba11631b6db169e2c183b0\nAuthor: Alexander Shulgin <alex.shulgin@gmail.com>\nDate:   Fri Jan 29 09:17:01 2010 +0000\n\n    surface: Fix detach mime-data after ecda633f887a10da650b4cd3efb17c861a6f519f\n    \n    Hi,\n    \n    while browsing the git log I've noticed a small mistake in the above\n    commit, where we reversed the order of init/fini required to reset the\n    mime-data array.\n\n src/cairo-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 5f0a0088af784157d8efe149ed073c8fa010e648\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jan 28 13:23:39 2010 +0000\n\n    drm-intel: Unmap a full glyph cache.\n    \n    When we swap a full glyph cache for a fresh one, be sure to unmap the\n    old one prior to release.\n\n src/drm/cairo-drm-i915-glyphs.c |    2 +-\n src/drm/cairo-drm-intel.c       |    3 +++\n 2 files changed, 4 insertions(+), 1 deletion(-)\n\ncommit 78cd9471200c69c8b3737e859260f4552145d958\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jan 27 23:45:17 2010 +0000\n\n    drm: Paranoid assert that the fallback is released upon finish.\n\n src/drm/cairo-drm-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 5aa1191204e3eed6e3e97e23f37a52bbdfffcbce\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jan 27 23:42:26 2010 +0000\n\n    drm-intel: flush in memory modifications to texture.\n    \n    If the surface was written to using a fallback, and so is mapped, we\n    need to flush those modifications by relinquishing the map. So the next\n    time the application tries to write to the surface, those writes are\n    correctly serialised with our reads.\n\n src/drm/cairo-drm-i915-shader.c |   14 ++++++++++++++\n src/drm/cairo-drm-i965-shader.c |   12 ++++++++++++\n 2 files changed, 26 insertions(+)\n\ncommit a38accb694452fc5dfac63535648656885cd47eb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jan 27 23:27:46 2010 +0000\n\n    drm-intel: The accumulation bo may be NULL, beware.\n    \n    If we are not accumulating but rendering directly to the output vbo,\n    then the tail bo may not even be allocated, let alone mapped.\n\n src/drm/cairo-drm-i915-spans.c  |    2 +-\n src/drm/cairo-drm-i965-glyphs.c |    2 +-\n src/drm/cairo-drm-i965-spans.c  |    2 +-\n 3 files changed, 3 insertions(+), 3 deletions(-)\n\ncommit 44734b9d3ba60fb45abb0268a916e40cd688ef6a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jan 27 23:17:44 2010 +0000\n\n    drm-intel: Assert that the bo is unmapped upon release.\n    \n    Check through error paths to catch a few more places where the mapped bo\n    may have been leaked, and add an assert to abort in case we do leak a\n    mapping.\n\n src/drm/cairo-drm-i915-spans.c  |    3 +++\n src/drm/cairo-drm-i965-glyphs.c |    4 ++++\n src/drm/cairo-drm-i965-spans.c  |    3 +++\n src/drm/cairo-drm-intel.c       |    6 +++++-\n 4 files changed, 15 insertions(+), 1 deletion(-)\n\ncommit 6848c7c850aa0a710c1409d1fc2cb441d02a2b28\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jan 27 23:01:37 2010 +0000\n\n    drm-i915: Don't tile temporary image textures.\n    \n    As uploading to a tiled buffer is much slower than linear memory, don't\n    unless we expect to reuse the texture. This is not true for sub-image\n    clones, which are single shot affairs.\n\n src/drm/cairo-drm-i915-shader.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit f75b7c4c110e880f4bdd578d9180f9afbb1d0034\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jan 27 19:20:57 2010 +0000\n\n    drm/i915: Ensure surface is initialized.\n    \n    Let's try that again, this time remembering to place it on the\n    conjunction of the two branches, so *both* paths are initialized.\n\n src/drm/cairo-drm-i915-shader.c |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit 02f20458d1dd48fc4589734fc4b3e0c8bea1ce5c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jan 27 19:02:21 2010 +0000\n\n    drm-i915: Ensure surface size for clone is initialized.\n    \n    If the surface had a snapshot, then we would have not initialized the\n    surface size and so compute a bogus normalization matrix.\n\n src/drm/cairo-drm-i915-shader.c |    7 +++----\n 1 file changed, 3 insertions(+), 4 deletions(-)\n\ncommit c82ff8cbcf27dc20d2b44a988eed1b676d996e8c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jan 27 18:48:32 2010 +0000\n\n    configure: Enable AC_SYS_LARGEFILE for drm\n    \n    drm makes use of 64bit offsets when mmaping, and so we require the\n    64bit file interfaces. I had presumed that it would be pulled in with\n    AC_GNU_SOURCE, but no.\n\n configure.ac |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 6d2d338ac04b02200e009c9e97d3ce030d07eb6f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 25 22:47:10 2010 +0000\n\n    drm: compile fix for cairo_always_inline\n    \n    s/always_inline/cairo_always_inline/\n\n src/drm/cairo-drm-i965-private.h  |    8 +--\n src/drm/cairo-drm-intel-brw-eu.h  |  132 ++++++++++++++++++-------------------\n src/drm/cairo-drm-intel-private.h |    2 +-\n src/drm/cairo-drm-private.h       |    2 +-\n 4 files changed, 72 insertions(+), 72 deletions(-)\n\ncommit 58980b4ad60a60923a59370c81d59bb0457a7922\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Wed Jan 27 09:56:14 2010 +0100\n\n    build: Remove glitz surface\n    \n    glitz is unmaintained and the GL surface is far superior anyway.\n\n README                                    |    8 +-\n boilerplate/Makefile.am                   |   13 -\n boilerplate/Makefile.sources              |    5 -\n boilerplate/Makefile.win32.features       |   10 -\n boilerplate/cairo-boilerplate-glitz-agl.c |  191 ---\n boilerplate/cairo-boilerplate-glitz-glx.c |  265 ----\n boilerplate/cairo-boilerplate-glitz-wgl.c |  188 ---\n build/Makefile.win32.features             |    1 -\n build/Makefile.win32.features-h           |    3 -\n build/configure.ac.features               |    1 -\n configure.ac                              |   38 -\n doc/public/cairo-docs.xml                 |    1 -\n doc/public/cairo-sections.txt             |    1 -\n doc/public/tmpl/cairo-glitz.sgml          |   22 -\n src/Makefile.sources                      |    4 -\n src/Makefile.win32.features               |   14 -\n src/cairo-deprecated.h                    |    1 -\n src/cairo-glitz-private.h                 |   41 -\n src/cairo-glitz-surface.c                 | 2450 -----------------------------\n src/cairo-glitz.h                         |   57 -\n test/Makefile.am                          |    8 -\n test/Makefile.sources                     |    2 -\n test/glitz-surface-source.argb32.ref.png  |  Bin 377 -> 0 bytes\n test/glitz-surface-source.c               |  293 ----\n test/glitz-surface-source.ps2.ref.png     |  Bin 376 -> 0 bytes\n test/glitz-surface-source.ps3.ref.png     |  Bin 376 -> 0 bytes\n test/glitz-surface-source.rgb24.ref.png   |  Bin 301 -> 0 bytes\n util/cairo.modules                        |   10 +-\n 28 files changed, 3 insertions(+), 3624 deletions(-)\n\ncommit 17ddb1598b3df374b6275d907441f34318b4257f\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jan 25 20:17:12 2010 +0100\n\n    docs: appease make check\n\n src/cairo-gl-surface.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit bac513a85dc8ef2915b2e60d034cf3dbc82a8e0c\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jan 25 20:05:56 2010 +0100\n\n    build: Fix pthread detection\n    \n    THe pthread.h detection code didn't pass -lpthread or -pthread to Cairo.\n\n configure.ac |   10 ++++++++--\n 1 file changed, 8 insertions(+), 2 deletions(-)\n\ncommit 582604f7b6b5b2ab6e681245bc7cde64d4995307\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jan 25 19:22:33 2010 +0100\n\n    [png] Simplify coercion code\n    \n    Call _cairo_image_surface_coerce() unconditionally to ensure coercion to\n    one of the standard formats happens even when it's a format we support.\n\n src/cairo-png.c |   16 ++++++----------\n 1 file changed, 6 insertions(+), 10 deletions(-)\n\ncommit 002e02715cac9a285fd97e1bb6b068ceebfae3d8\nAuthor: Benjamin Otte <otte@redhat.com>\nDate:   Mon Jan 25 19:42:54 2010 +0100\n\n    Remove useless pixman version checks\n    \n    We require pixman >= 0.15.16 in configure.ac, so checks for older\n    versions aren't required anymore.\n\n src/cairo-gl-surface.c    |    2 --\n src/cairo-image-surface.c |   10 ++--------\n 2 files changed, 2 insertions(+), 10 deletions(-)\n\ncommit 5a690ad4acb3687c45c201b3ce92cd3e41bf3b30\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Fri Jan 15 13:44:04 2010 +0100\n\n    Give cairo_surface_mark_dirty() the slim hidden treatment\n    \n    Fixes test suite failure\n\n src/cairo-surface.c |    1 +\n src/cairoint.h      |    1 +\n 2 files changed, 2 insertions(+)\n\ncommit 571ab1007571cb8d78fcb5206b43d6b964aa0df1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 25 18:22:03 2010 +0000\n\n    xcb: Fix linking with xcb-drm\n\n src/cairo-xcb-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit ecda633f887a10da650b4cd3efb17c861a6f519f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 25 18:17:28 2010 +0000\n\n    mime-data: Detach existing alternate representations upon modification\n    \n    A major sore point in the current mime-data API is the choice to keep\n    the alternate mime-data representations after the user has actually\n    modifying the primary representation (i.e. has made it a target of a\n    cairo_t and drawn to it). This has been rightly chastised as unexpected\n    behaviour, and given that we already have the mechanism to detach\n    snapshots upon modification, there is no reason not to behave as\n    expected.\n\n src/cairo-surface.c |   21 ++++++++++++++++++++-\n 1 file changed, 20 insertions(+), 1 deletion(-)\n\ncommit 123bdb086ad9c5725a51791458d31309c69a3f41\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 25 16:45:03 2010 +0000\n\n    xcb: Make shm optional\n    \n    Trying to build xcb on a system without SHM wrapped by xcb. The right\n    answer would be to build libxcb-shm. The quick answer is to compile out\n    shm support.\n\n boilerplate/Makefile.win32.features |   10 ++++++++++\n build/Makefile.win32.features       |    1 +\n build/Makefile.win32.features-h     |    3 +++\n build/configure.ac.features         |    1 +\n configure.ac                        |   14 +++++++++++++-\n src/Makefile.sources                |    8 ++++++--\n src/Makefile.win32.features         |   14 ++++++++++++++\n src/cairo-xcb-connection.c          |   22 ++++++++++++++++++----\n src/cairo-xcb-private.h             |   21 +++++++++++++++++++++\n src/cairo-xcb-surface-core.c        |    2 ++\n src/cairo-xcb-surface-render.c      |    2 ++\n src/cairo-xcb-surface.c             |   14 ++++++++++++++\n 12 files changed, 105 insertions(+), 7 deletions(-)\n\ncommit e1b3330376c173633e146eb6cf578592d424e4d5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 25 14:48:44 2010 +0000\n\n    configure: dri2 is only required for xcb-drm\n    \n    Move the optional dependency on dri2 to the xcb-drm integration where it\n    is required.\n\n configure.ac |    7 +++++--\n 1 file changed, 5 insertions(+), 2 deletions(-)\n\ncommit 8151c72307e8cb369fbb524de56f87f805efff2b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 25 12:14:39 2010 +0000\n\n    xcb: compile errors with lockdep\n    \n    After moving the mutex to the superclass, I forgot to update the\n    references from the lockdep asserts.\n\n src/cairo-xcb-connection.c |    6 +++---\n src/cairo-xcb-screen.c     |   16 ++++++++--------\n 2 files changed, 11 insertions(+), 11 deletions(-)\n\ncommit be81d656c53c76032fd3fe11c81402d17ec56327\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 25 11:54:24 2010 +0000\n\n    clip: Create a fallback clip surface\n    \n    If the destination cannot support a clip surface, then we will need to\n    use an intermediate image surface and trigger fallbacks upon use.\n\n src/cairo-clip.c |    5 +++++\n 1 file changed, 5 insertions(+)\n\ncommit c453d8ab704e5f41cb010241efe9bcb9ff886024\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 25 11:45:01 2010 +0000\n\n    test: Erroneous ref image for big-line xlib-fallback.\n\n test/big-line.xlib-fallback.ref.png |  Bin 723 -> 0 bytes\n 1 file changed, 0 insertions(+), 0 deletions(-)\n\ncommit 180aea76adbb6d5c5909652b7a8cafb7a693e982\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Mon Jan 25 20:48:02 2010 +1030\n\n    Fix printing of rotated user fonts\n    \n    b7550bf0 introduced a regression when user fonts are rendered to a\n    rotated context.\n\n src/cairo-type3-glyph-surface.c |    9 +++++----\n 1 file changed, 5 insertions(+), 4 deletions(-)\n\ncommit abcb9d2c39178620b1847fe6ea6e144602464ecc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 25 09:35:09 2010 +0000\n\n    image: Prevent deref of NULL clip_region\n    \n    Another stray from surface-fallback, spotted by Carlos:\n    \n    *INT_cairo_region_get_extents (region=0x0, extents=0xbfffce90) at\n    cairo-region.c:385\n    385         if (region->status) {\n    (gdb) bt\n    0  *INT_cairo_region_get_extents (region=0x0, extents=0xbfffce90) at\n    cairo-region.c:385\n    1  0x0013ba46 in _cairo_image_surface_composite_trapezoids\n    (op=CAIRO_OPERATOR_OVER, pattern=0xbfffdda8, abstract_dst=0x837de10,\n        antialias=CAIRO_ANTIALIAS_DEFAULT, src_x=486, src_y=45, dst_x=0,\n    dst_y=0, width=15, height=25, traps=0x837f100, num_traps=30,\n    clip_region=0x0)\n        at cairo-image-surface.c:4102\n    2  0x0015d846 in _cairo_surface_composite_trapezoids\n    (op=CAIRO_OPERATOR_OVER, pattern=0xbfffdda8, dst=0x837de10,\n    antialias=CAIRO_ANTIALIAS_DEFAULT,\n        src_x=486, src_y=45, dst_x=0, dst_y=0, width=15, height=25,\n    traps=0x837f100, num_traps=30, clip_region=0x0) at cairo-surface.c:2125\n    3  0x001607ce in _cairo_surface_fallback_composite_trapezoids\n    (op=CAIRO_OPERATOR_OVER, pattern=0xbfffdda8, dst=0x837db00,\n        antialias=CAIRO_ANTIALIAS_DEFAULT, src_x=486, src_y=45, dst_x=486,\n    dst_y=45, width=15, height=25, traps=0x837fd78, num_traps=30,\n    clip_region=0x0)\n        at cairo-surface-fallback.c:1641\n    4  0x0015d8a4 in _cairo_surface_composite_trapezoids\n    (op=CAIRO_OPERATOR_OVER, pattern=0xbfffdda8, dst=0x837db00,\n    antialias=CAIRO_ANTIALIAS_DEFAULT,\n        src_x=486, src_y=45, dst_x=486, dst_y=45, width=15, height=25,\n    traps=0x837fd78, num_traps=30, clip_region=0x0) at cairo-surface.c:2137\n    5  0x001623b0 in _composite_traps_draw_func (closure=0xbfffd350,\n    op=CAIRO_OPERATOR_OVER, src=0xbfffdda8, dst=0x837db00, dst_x=0, dst_y=0,\n        extents=0xbfffdc78, clip_region=0x0) at cairo-surface-fallback.c:546\n    6  0x00161234 in _clip_and_composite (clip=0x0, op=<value optimized\n    out>, src=0xbfffdda8, draw_func=0x162310 <_composite_traps_draw_func>,\n        draw_closure=0xbfffd350, dst=0x837db00, extents=0xbfffdc78) at\n    cairo-surface-fallback.c:463\n    7  0x0016205b in _clip_and_composite_trapezoids (src=<value optimized\n    out>, op=CAIRO_OPERATOR_OVER, dst=0x837db00, traps=0xbfffd7bc,\n        antialias=CAIRO_ANTIALIAS_DEFAULT, clip=0x0, extents=0xbfffdc78) at\n    cairo-surface-fallback.c:853\n    8  0x001626ef in _cairo_surface_fallback_stroke (surface=0x837db00,\n    op=CAIRO_OPERATOR_OVER, source=0xbfffdda8, path=0x1b164c,\n    stroke_style=0x1b1524,\n        ctm=0x1b15b0, ctm_inverse=0x1b15e0, tolerance=0.10000000000000001,\n    antialias=CAIRO_ANTIALIAS_DEFAULT, clip=0x0) at\n    cairo-surface-fallback.c:1173\n    9  0x0015f2f4 in _cairo_surface_stroke (surface=0x837db00,\n    op=CAIRO_OPERATOR_OVER, source=0xbfffdda8, path=0x1b164c,\n    stroke_style=0x1b1524, ctm=0x1b15b0,\n        ctm_inverse=0x1b15e0, tolerance=0.10000000000000001,\n    antialias=CAIRO_ANTIALIAS_DEFAULT, clip=0xbfffde88) at\n    cairo-surface.c:2041\n    10 0x00134629 in _cairo_gstate_stroke (gstate=0x1b1514, path=0x1b164c)\n    at cairo-gstate.c:1133\n    11 0x0012a706 in *INT_cairo_stroke_preserve (cr=0x1b13c0) at\n    cairo.c:2234\n    12 0x0012a732 in *INT_cairo_stroke (cr=0x1b13c0) at cairo.c:2207\n\n src/cairo-image-surface.c |   10 +++++++++-\n 1 file changed, 9 insertions(+), 1 deletion(-)\n\ncommit 38ba696c483c289c2522b124ca628ef602c12126\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 25 09:20:11 2010 +0000\n\n    surface-fallback: We no longer own a reference to the clip surface\n    \n    _cairo_clip_get_surface() now returns a borrowed reference to the cached\n    surface on the clip, so we must not destroy it - as Carlos pointed out\n    when he hit the assert:\n    \n    12:55 < KaL> ickle: cairo-surface.c:595: cairo_surface_destroy:\n    Assertion `((*&(&surface->ref_count)->ref_count) > 0)' failed.\n    12:56 < KaL> ickle: trying to render any pdf file with poppler glib demo\n    after installing cairo from git master\n    13:00 < KaL> ickle: well, it seems it has nothing ot do with poppler,\n    since it crashes in clearlooks src/clearlooks_draw.c:347\n\n src/cairo-surface-fallback.c |    3 ---\n 1 file changed, 3 deletions(-)\n\ncommit b3ba610ec05f863a0830a1f30ed130649fbadfbb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 25 09:09:18 2010 +0000\n\n    win32: Trivially fix the compile error with printing.\n    \n    _cairo_pattern_is_opaque() now takes the extents over which the\n    operation is defined so that we make exclude the clear pixels that\n    surround EXTEND_NONE surfaces when determining opacity. In order to take\n    full advantage of this we need to start performing an extents query on\n    the operation and pass that down to the analysis...\n    \n    This patch however is just the quick compile fix to pass a NULL and\n    restore the old behaviour.\n    \n    Fixes (with previous commit):\n      Bug 26197 - Cairo doesn't build on windows\n      http://bugs.freedesktop.org/show_bug.cgi?id=26197\n\n src/cairo-win32-printing-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 386ca53f280652983870316593e510cfef59c559\nAuthor: Haakon Sporsheim <haakon.sporsheim@gmail.com>\nDate:   Sun Jan 24 16:43:42 2010 +0100\n\n    win32: Compile fix, rename render_row to render_rows.\n\n src/cairo-win32-surface.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit a9a73e5df42840148fd4db60cc0d1ba5d137b764\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Sun Jan 24 23:26:28 2010 +0100\n\n    Constrain subsurface creation\n    \n    Force the subsurface extents to be inside the target extents and\n    compose subsubsurfaces offsets correctly.\n    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>\n\n src/cairo-surface-subsurface.c |   36 +++++++++++++++---------------------\n 1 file changed, 15 insertions(+), 21 deletions(-)\n\ncommit b7550bf0f1cafb5cc5df13da50b0cec80313038f\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Jan 24 22:23:26 2010 +1030\n\n    Fix incorrect font scale and glyph position in Type 3 fonts\n    \n    The PDF file referenced by bug 26186 contains a Type 3 font with non\n    identity font matrix and a \"1/2\" glyph created by drawing the \"1\" and\n    \"2\" from a Type 1 font. This combination exposed a bug in the font\n    scale and glyph position in _cairo_type3_glyph_surface_show_glyphs\n    when printing user font glyphs.\n\n src/cairo-type3-glyph-surface.c |   21 +++++----------------\n 1 file changed, 5 insertions(+), 16 deletions(-)\n\ncommit ea7fda442c169a159b2e3c51894a0f5e70a13984\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Fri Jan 22 16:26:38 2010 -0800\n\n    [gl] Release the context acquired in surface_create.\n    \n    Fixes assertion failures in many testcases since\n    cf9ea9f2f0ea1e1b42dc1507ed0dac4dfbf5d387\n\n src/cairo-gl-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 20990365f3885457d66b4a8bef865f027a98333f\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Fri Jan 22 16:13:02 2010 -0800\n\n    [gl] Emit rectanges a whole primitive at a time.\n    \n    Since the spans rework, we were emitting half a primitive at a time,\n    and if we flushed our VBO full of quads out halfway through, we could\n    end up dropping the primitive and then out of phase.\n\n src/cairo-gl-surface.c |   25 +++++++++++--------------\n 1 file changed, 11 insertions(+), 14 deletions(-)\n\ncommit c8a61a3267ffd53d4b4d61e2e2bcb70448ea4d41\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Sat Jan 23 18:25:11 2010 +0100\n\n    Fix compilation on MacOS X\n    \n    Some functions declared in MacOS X headers use the always_inline\n    attribute, thus defining it to be a different expression breaks the\n    build.\n\n src/cairo-botor-scan-converter.c |    8 ++++----\n src/cairo-compiler-private.h     |    4 ++--\n src/cairo-gl-private.h           |    4 ++--\n 3 files changed, 8 insertions(+), 8 deletions(-)\n\ncommit 90ba1242b61e7b8e5ae2c2ca028d0058f6dabd88\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Sat Jan 23 18:13:35 2010 +0100\n\n    Fix image backend compilation\n    \n    When HAS_ATOMIC_OPS is not defined, cairo-image-surface.c does not\n    compile because _pixman_white_image calls _pixman_image_for_solid\n    which gets defined only later in the code.\n\n src/cairo-image-surface.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 2a466ba07072cb394cfc955cfb0633b0cc278044\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 22:26:52 2010 +0000\n\n    script: Encode octal values correctly.\n    \n    Oops, we were emitting the octal numerals in reverse order.\n\n src/cairo-script-surface.c |   21 +++++++++++++--------\n 1 file changed, 13 insertions(+), 8 deletions(-)\n\ncommit 87529198aa37f5eb5943eb80cc1aae858fdaadd0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 22:21:44 2010 +0000\n\n    scaled-font: Mark an error site with _cairo_error()\n\n src/cairo-scaled-font-subsets.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 6544f3b25d2120b7bd04f6c956c2ea7b9c101c76\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 22:15:25 2010 +0000\n\n    ps: Wean off the low-level image composite interface\n    \n    The low-level surface composite interface will disappear in the near\n    future and results in much more ugly code than calling the high level\n    interface - so use it when flattening images into the page background.\n\n src/cairo-ps-surface.c |   77 +++++++++++++++++-------------------------------\n 1 file changed, 27 insertions(+), 50 deletions(-)\n\ncommit f57cb45fa9274351b36f96eb932a931493b5db94\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 22:18:35 2010 +0000\n\n    ps: Arguments to fill_extents() were reversed.\n\n src/cairo-ps-surface.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit 58540405d9bc6581c1d07f17bd5aee330f06d4a2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 22:05:37 2010 +0000\n\n    pdf: Arguments to fill_extents() were reversed.\n\n src/cairo-pdf-surface.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit 34dd80632e4671f0ca245be9db4280db62bdb1f9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jan 21 18:39:26 2010 +0000\n\n    glew: Silence compiler.\n\n src/glew/GL/glew.h |    2 +-\n src/glew/glew.c    |    4 ++--\n 2 files changed, 3 insertions(+), 3 deletions(-)\n\ncommit cf9ea9f2f0ea1e1b42dc1507ed0dac4dfbf5d387\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jan 21 18:39:12 2010 +0000\n\n    gl: Acquire the context whilst creating surfaces.\n\n src/cairo-gl-private.h |    5 ++---\n src/cairo-gl-surface.c |   37 ++++++++++++++++++++++++-------------\n 2 files changed, 26 insertions(+), 16 deletions(-)\n\ncommit a7e05bd602e7f8bee63f5d32cb95d65628e6e715\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jan 21 18:22:04 2010 +0000\n\n    glew: Do not assume that UNIX == GLX\n\n src/glew/glew.c |    5 +++++\n 1 file changed, 5 insertions(+)\n\ncommit c0008242b0f162d8c7717009ba792ed61b2924d1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 21:35:23 2010 +0000\n\n    misc: Only use custom lround() under DISABLE_SOME_FLOATING_POINT\n    \n    On my Core2, the library version of lround() is faster than our\n    hand-rolled non-floating point implementation. So only enable our code\n    if we are trying to minimise the number of floating point operations --\n    even then, it would worth investigating the library performance first.\n    \n    [Just a reminder that optimisation choices will change over time as our\n    hardware and software evolves.]\n\n src/cairo-misc.c       |    2 ++\n src/cairo-ps-surface.c |    4 ++--\n src/cairoint.h         |    5 +++++\n 3 files changed, 9 insertions(+), 2 deletions(-)\n\ncommit 1236c41072a7966eda7db48a381fd0508e5289be\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 21:26:26 2010 +0000\n\n    xcb: Refresh.\n    \n    Still an experimental backend, it's now a little too late to stabilise\n    for 1.10, but this should represent a major step forward in its feature\n    set and an attempt to catch up with all the bug fixes that have been\n    performed on xlib. Notably not tested yet (and expected to be broken)\n    are mixed-endian connections and low bitdepth servers (the dithering\n    support has not been copied over for instance). However, it seems robust\n    enough for daily use...\n    \n    Of particular note in this update is that the xcb surface is now capable\n    of subverting the xlib surface through the ./configure --enable-xlib-xcb\n    option. This replaces the xlib surface with a proxy that forwards all\n    operations to an equivalent xcb surface whilst preserving the cairo-xlib\n    API that is required for compatibility with the existing applications,\n    for instance GTK+ and Mozilla. Also you can experiment with enabling a\n    DRM bypass, though you need to be extremely foolhardy to do so.\n\n boilerplate/Makefile.win32.features |   20 +\n boilerplate/cairo-boilerplate-xcb.c |  522 +++-\n build/Makefile.win32.features       |    2 +\n build/Makefile.win32.features-h     |    6 +\n build/configure.ac.features         |    2 +\n configure.ac                        |   26 +-\n src/Makefile.sources                |   22 +-\n src/Makefile.win32.features         |   28 +\n src/cairo-list-private.h            |    7 +\n src/cairo-mutex-list-private.h      |    4 +\n src/cairo-pattern.c                 |   41 +-\n src/cairo-xcb-connection-core.c     |  482 ++++\n src/cairo-xcb-connection-render.c   |  969 ++++++++\n src/cairo-xcb-connection-shm.c      |  194 ++\n src/cairo-xcb-connection.c          |  867 +++++++\n src/cairo-xcb-private.h             |  760 ++++++\n src/cairo-xcb-screen.c              |  518 ++++\n src/cairo-xcb-shm.c                 |  576 +++++\n src/cairo-xcb-surface-cairo.c       |   94 +\n src/cairo-xcb-surface-core.c        |  613 +++++\n src/cairo-xcb-surface-private.h     |   37 +\n src/cairo-xcb-surface-render.c      | 4471 +++++++++++++++++++++++++++++++++++\n src/cairo-xcb-surface.c             | 3382 ++++++++------------------\n src/cairo-xcb-xrender.h             |   63 -\n src/cairo-xcb.h                     |   41 +-\n src/cairo-xlib-xcb-surface.c        |  515 ++++\n src/cairoint.h                      |   16 +\n test/xcb-surface-source.c           |    1 -\n 28 files changed, 11708 insertions(+), 2571 deletions(-)\n\ncommit 77afe8491ed7038a8399c01f10d8f062a7239225\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 20:48:54 2010 +0000\n\n    drm: Add backends for i915 and i965.\n    \n    As proof-of-principle add the nearly working demonstrations of using DRM\n    to render directly with the GPU bypassing both RENDER and GL for\n    performance whilst preserving high quality rendering.\n    \n    The basis behind developing these chip specific backends is that this is\n    the idealised interface that we desire for this chips, and so a target\n    for cairo-gl as we continue to develop both it and our GL stack.\n    \n    Note that this backends do not yet fully pass the test suite, so only\n    use if you are brave and willing to help develop them further.\n\n boilerplate/cairo-boilerplate-drm.c       |    2 +-\n src/Makefile.sources                      |   17 +\n src/cairo-drm.h                           |   31 +-\n src/cairo-misc.c                          |   57 +\n src/cairoint.h                            |    2 +\n src/drm/cairo-drm-bo.c                    |   13 +-\n src/drm/cairo-drm-gallium-surface.c       |    3 +-\n src/drm/cairo-drm-i915-glyphs.c           |  534 ++++++\n src/drm/cairo-drm-i915-private.h          | 1169 ++++++++++++\n src/drm/cairo-drm-i915-shader.c           | 2674 +++++++++++++++++++++++++++\n src/drm/cairo-drm-i915-spans.c            |  708 +++++++\n src/drm/cairo-drm-i915-surface.c          | 1996 ++++++++++++++++++++\n src/drm/cairo-drm-i965-glyphs.c           |  500 +++++\n src/drm/cairo-drm-i965-private.h          |  742 ++++++++\n src/drm/cairo-drm-i965-shader.c           | 2852 +++++++++++++++++++++++++++++\n src/drm/cairo-drm-i965-spans.c            |  408 +++++\n src/drm/cairo-drm-i965-surface.c          | 1949 ++++++++++++++++++++\n src/drm/cairo-drm-intel-brw-defines.h     |  824 +++++++++\n src/drm/cairo-drm-intel-brw-eu-emit.c     | 1089 +++++++++++\n src/drm/cairo-drm-intel-brw-eu-util.c     |  121 ++\n src/drm/cairo-drm-intel-brw-eu.c          |  250 +++\n src/drm/cairo-drm-intel-brw-eu.h          | 1043 +++++++++++\n src/drm/cairo-drm-intel-brw-structs.h     | 1328 ++++++++++++++\n src/drm/cairo-drm-intel-command-private.h |  909 +++++++++\n src/drm/cairo-drm-intel-debug.c           | 1208 ++++++++++++\n src/drm/cairo-drm-intel-ioctl-private.h   |  417 +++++\n src/drm/cairo-drm-intel-private.h         |  427 ++++-\n src/drm/cairo-drm-intel-surface.c         |  421 +++--\n src/drm/cairo-drm-intel.c                 | 1240 +++++++++----\n src/drm/cairo-drm-private.h               |  101 +-\n src/drm/cairo-drm-radeon-private.h        |    3 -\n src/drm/cairo-drm-radeon-surface.c        |  281 +--\n src/drm/cairo-drm-radeon.c                |    5 +-\n src/drm/cairo-drm-surface.c               |  235 +--\n src/drm/cairo-drm.c                       |  232 +--\n 35 files changed, 22675 insertions(+), 1116 deletions(-)\n\ncommit b9407af6a4bc792c1bcb52c90aa8a618627bb618\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 17:57:41 2010 +0000\n\n    image: Implement high level interface.\n    \n    Write a dedicated compositor for pixman so that we avoid the\n    middle-layer syndrome of surface-fallback. The major upshot of this\n    rewrite is that the image surface is now several times quicker for glyph\n    compositing, which dramatically improves performance for text rendering\n    by firefox and friends. It also uses a couple of the new scan\n    convertors, such as the rectangular scan converter for rectilinear\n    paths.\n    \n    Speedups\n    ========\n    image-rgba          firefox-talos-gfx-0    342050.17 (342155.88 0.02%) -> 69412.44 (69702.90 0.21%):  4.93x speedup\n    \u2588\u2588\u2588\u2589\n    image-rgba                        vim-0    97518.13 (97696.23 1.21%) -> 30712.63 (31238.65 0.85%):  3.18x speedup\n    \u2588\u2588\u258f\n    image-rgba                  evolution-0    69927.77 (110261.08 19.84%) -> 24430.05 (25368.85 1.89%):  2.86x speedup\n    \u2588\u2589\n    image-rgba                    poppler-0    41452.61 (41547.03 2.51%) -> 21195.52 (21656.85 1.08%):  1.96x speedup\n    \u2588\n    image-rgba       firefox-planet-gnome-0    217512.61 (217636.80 0.06%) -> 123341.02 (123641.94 0.12%):  1.76x speedup\n    \u258a\n    image-rgba             swfdec-youtube-0    41302.71 (41373.60 0.11%) -> 31343.93 (31488.87 0.23%):  1.32x speedup\n    \u258d\n    image-rgba         swfdec-giant-steps-0    20699.54 (20739.52 0.10%) -> 17360.19 (17375.51 0.04%):  1.19x speedup\n    \u258e\n    image-rgba                       gvim-0    167837.47 (168027.68 0.51%) -> 151105.94 (151635.85 0.18%):  1.11x speedup\n    \u258f\n    image-rgba          firefox-talos-svg-0    375273.43 (388250.94 1.60%) -> 356846.09 (370370.08 1.86%):  1.05x speedup\n\n src/cairo-image-surface.c                 | 3987 ++++++++++++++++++++++++-----\n src/cairo-mutex-list-private.h            |    2 +\n src/cairo-xcb-surface.c                   |   10 +-\n src/cairoint.h                            |   21 +-\n test/clip-fill-unbounded.argb32.ref.png   |  Bin 1615 -> 1607 bytes\n test/clip-fill-unbounded.rgb24.ref.png    |  Bin 1312 -> 1304 bytes\n test/clip-stroke-unbounded.argb32.ref.png |  Bin 1703 -> 1694 bytes\n test/clip-stroke-unbounded.rgb24.ref.png  |  Bin 1383 -> 1372 bytes\n test/clip-stroke.ref.png                  |  Bin 1451 -> 1442 bytes\n test/clipped-group.ref.png                |  Bin 289 -> 289 bytes\n test/leaky-dashed-rectangle.ref.png       |  Bin 347 -> 357 bytes\n test/scale-offset-image.xfail.png         |  Bin 9960 -> 9961 bytes\n test/scale-offset-similar.xfail.png       |  Bin 9960 -> 9961 bytes\n test/self-intersecting.ref.png            |  Bin 213 -> 168 bytes\n 14 files changed, 3342 insertions(+), 678 deletions(-)\n\ncommit ec7cc9dea16f94e1e56720be548cf5520ec4708b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 19:27:45 2010 +0000\n\n    ft: Tidy computation of transformed bitmap, and mark if CA\n    \n    Discard a redundant clear as the image surface is guaranteed to return\n    a cleared surface that meets pixman/xlib requirements for alignment, and\n    more importantly add the ComponentAlpha flag on the pixman image\n    generated as appropriate.\n\n src/cairo-ft-font.c |   31 +++++++++++--------------------\n 1 file changed, 11 insertions(+), 20 deletions(-)\n\ncommit b713510f213d0a83cb0575d6870416a0f13786c9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 17:56:26 2010 +0000\n\n    surface-fallback: Convert to composite rectangles\n\n src/cairo-surface-fallback.c |  396 ++++++++++++++----------------------------\n src/cairo-surface.c          |    3 +\n src/cairo-traps.c            |   47 ++---\n src/cairoint.h               |    3 +-\n 4 files changed, 158 insertions(+), 291 deletions(-)\n\ncommit 498c10032ea3f8631a928cd7df96766f2c8ddca4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 16:39:29 2010 +0000\n\n    clip: Implement clipping using only the high-level operators.\n    \n    Revamp clipping in preparation for the removal of the low-level interface\n    and promote backend to use the higher levels. The principle here is that\n    the higher level interface gives the backend more scope for choosing\n    better performing primitives.\n\n src/cairo-clip-private.h     |    6 +-\n src/cairo-clip.c             |  257 ++++++++++++++++++++----------------------\n src/cairo-surface-fallback.c |    2 +-\n 3 files changed, 131 insertions(+), 134 deletions(-)\n\ncommit 05bb43a00770f17566c80f28faf684597d1b6afb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 16:14:53 2010 +0000\n\n    types: Move cairo_scaled_glyph_t to cairo-types-private.h\n    \n    Another step in bringing some sanity to our headers.\n\n src/cairo-types-private.h |   25 +++++++++++++++++++++++++\n src/cairoint.h            |   26 --------------------------\n 2 files changed, 25 insertions(+), 26 deletions(-)\n\ncommit 9c98656fb1ac10a6085c5db5731b6b986af26165\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 16:11:48 2010 +0000\n\n    color: Add enum value for the largest stock color.\n    \n    Useful if we wish to keep a cache of patterns for the very common stock\n    colors...\n\n src/cairo-color.c         |   13 +++++++------\n src/cairo-types-private.h |    3 ++-\n 2 files changed, 9 insertions(+), 7 deletions(-)\n\ncommit b7b65b5315836297f86c54121ea45e469f514312\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 16:07:25 2010 +0000\n\n    stroke: Convert rectilinear paths to boxes.\n    \n    A quick and efficient method for extracting the set of boxes that\n    represent the path when stroked.\n\n src/cairo-path-stroke.c |  170 +++++++++++++++++++++++++++++++++++++----------\n src/cairoint.h          |    7 ++\n 2 files changed, 142 insertions(+), 35 deletions(-)\n\ncommit fe6a7f4c9e69c86588eca4925a9d65f3086f98bf\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 16:02:07 2010 +0000\n\n    fill: Convert rectilinear paths to boxes.\n    \n    A quick and efficient method for extracting the set of boxes that\n    represent the path when filled.\n\n src/cairo-path-fill.c |   76 ++++++++++++++++++++++++++++++++++++++++++++++++-\n src/cairoint.h        |    5 ++++\n 2 files changed, 80 insertions(+), 1 deletion(-)\n\ncommit 6b77567b6ef28710c7707ab82c7fa95c810152d1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 15:54:45 2010 +0000\n\n    path: Compute coarse bounds upon construction.\n    \n    Frequently we only need the coarse path bounds, so avoid walking over\n    the list of points once more as we can cheaply track the extents during\n    construction.\n\n src/cairo-debug.c              |    6 ++\n src/cairo-gstate.c             |   21 ++++--\n src/cairo-path-bounds.c        |  159 +++++++++++++++++++---------------------\n src/cairo-path-fixed-private.h |    4 +-\n src/cairo-path-fixed.c         |   83 +++++++++++++++++++--\n src/cairo.c                    |    2 +\n src/cairoint.h                 |    9 +--\n 7 files changed, 184 insertions(+), 100 deletions(-)\n\ncommit 6bfcf3ea55964fee1c9b73818c3bb7cdacbc4f82\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 15:37:25 2010 +0000\n\n    matrix: Do not need to iteratively refine conversion for unity matrices.\n    \n    If the scale factors on the matrix are unity, then the conversion from a\n    cairo_matrix_t to a pixman_matrix_t is exact (within numerical\n    restrictions).\n\n src/cairo-matrix.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 13c56800ca6c32a6d8251edec5d3976399b70ea4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 16:33:34 2010 +0000\n\n    gstate: Reduce operators\n    \n    Some operators may be equivalent to simpler operations, so make the\n    transformation in the gstate, before calling down into the surface\n    backends.\n\n src/cairo-gstate.c |   86 +++++++++++++++++++++++++++++++++++++++++++---------\n 1 file changed, 72 insertions(+), 14 deletions(-)\n\ncommit 4d52be39bf36a3557f4e7c61dba764b1c6542c8f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 16:09:11 2010 +0000\n\n    gstate: Skip ops with a clear mask.\n    \n    As pointed out by Benjamin Otte, these are expensive no-ops that we can\n    trivially detect, just so long as we remember the semantics of extend\n    modes.\n\n src/cairo-gstate.c  |    6 ++++++\n src/cairo-pattern.c |   23 +++++++++++++++++++++++\n src/cairoint.h      |    3 +++\n 3 files changed, 32 insertions(+)\n\ncommit c2ef45226d6801acb15854de55a5f5bc728ed65d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 14:33:53 2010 +0000\n\n    gstate: Check for an invalid matrix before cairo_transform()\n    \n    Similar to the other checks that will generate an invalid matrix prior\n    to performing the operation.\n\n src/cairo-gstate.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 22316a0c17cd3b49ec625814f4e737b3fdc6ca63\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 14:33:16 2010 +0000\n\n    gstate: White space.\n    \n    A couple of minor coding style violations.\n\n src/cairo-gstate.c |    7 +++++--\n 1 file changed, 5 insertions(+), 2 deletions(-)\n\ncommit 29bedde904824098f73b978d73d36b3b5420ac32\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 16:19:31 2010 +0000\n\n    pattern: Add convenience patterns for stock colours\n    \n    By preallocating in our data segment a couple of solid patterns for the\n    stock colours, it becomes more convenient when using those in surface\n    operations, such as when clearing.\n\n src/cairo-clip.c                   |   29 +++++++++++------------------\n src/cairo-gl-glyphs.c              |   10 +++-------\n src/cairo-gstate.c                 |    9 +++------\n src/cairo-pattern.c                |   24 ++++++++++++++++++++++++\n src/cairo-scaled-font.c            |    9 ++-------\n src/cairo-surface-fallback.c       |   14 +++-----------\n src/cairo-vg-surface.c             |    5 ++---\n src/cairo-win32-printing-surface.c |    8 ++------\n src/cairo-xcb-surface.c            |    7 +------\n src/cairo-xlib-surface.c           |    6 +-----\n src/cairoint.h                     |    3 ++-\n 11 files changed, 54 insertions(+), 70 deletions(-)\n\ncommit 9eb98e1dc5af7eac896bf469e491063777e678be\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 14:14:51 2010 +0000\n\n    scaled-font: Use tight glyph bounds when determining overlap.\n    \n    An issue that we currently have is that we have a pessimistic\n    false-positive rate when determining whether glyphs within a string\n    overlap. By using the tight bounds, the overlap detection is arguably\n    less accurate presuming pixel-aligned opacity masks but we make the\n    trade-off for performance.\n\n src/cairo-scaled-font.c |   55 +++++++++++++++++++++--------------------------\n 1 file changed, 25 insertions(+), 30 deletions(-)\n\ncommit 005b0c4eb2a1fe2c4de31ebe2a3244bea8bd2625\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 19:47:58 2010 +0000\n\n    test: Add explicit device management to xlib-surface-source\n    \n    Mostly pedagogical example.\n\n test/xlib-surface-source.c |    5 +++++\n 1 file changed, 5 insertions(+)\n\ncommit ca02b51ef6d058b6fb492258177f0396a5819e26\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 21:57:58 2010 +0000\n\n    test: Add an xcb surface source test\n\n test/Makefile.am                       |    6 ++\n test/Makefile.sources                  |    3 +\n test/xcb-surface-source.argb32.ref.png |  Bin 0 -> 377 bytes\n test/xcb-surface-source.c              |  145 ++++++++++++++++++++++++++++++++\n test/xcb-surface-source.rgb24.ref.png  |  Bin 0 -> 301 bytes\n 5 files changed, 154 insertions(+)\n\ncommit f0678fb70ceec5db1b7c3f0eb1c5603039daf307\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 22 19:02:39 2010 +0000\n\n    test: Tweak aligned of text-rotate\n    \n    Reset the rotation for every quadrant so that the starting rectangles\n    are pixel-aligned.\n\n test/text-rotate.c       |   68 +++++++++++++++++++++++++++++++++-------------\n test/text-rotate.ref.png |  Bin 16738 -> 16722 bytes\n 2 files changed, 49 insertions(+), 19 deletions(-)\n\ncommit 2edd2adafc471f4aa9c417d4bc76cc38466a9ed0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jan 19 22:45:59 2010 +0000\n\n    test: Exercise scan converters with large rounded rectangles.\n    \n    Having added a specialised scan converter on the premise that it should\n    be better at handling rounded rectangles, ensure that they are indeed\n    rendered correctly.\n\n test/Makefile.am                           |    2 +\n test/Makefile.sources                      |    2 +\n test/rounded-rectangle-fill.c              |   65 ++++++++++++++++++++++++++++\n test/rounded-rectangle-fill.xlib.ref.png   |  Bin 0 -> 890 bytes\n test/rounded-rectangle-stroke.c            |   64 +++++++++++++++++++++++++++\n test/rounded-rectangle-stroke.xlib.ref.png |  Bin 0 -> 860 bytes\n 6 files changed, 133 insertions(+)\n\ncommit 5187501e997d6b8c0d135542d21accde9e311281\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jan 19 22:41:45 2010 +0000\n\n    test: Add --track-origins=yes to valgrind flags.\n    \n    Enable origin tracking by default for make check-valgrind. This is\n    slower and consumes more memory than regular valgrind, but the\n    additional information provided about the source of the uninitialised\n    data is often invaluable.\n\n test/Makefile.am |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 3a5d71c431dfb251308c3e4e02d2ea4acec90a91\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jan 19 19:18:54 2010 +0000\n\n    pattern: An EXTEND_NONE surface is not opaque if we sample outside\n    \n    Fixes test/clear-source as proposed by Benjamin Otte.\n\n src/cairo-gstate.c       |    2 +-\n src/cairo-pattern.c      |   33 ++++++-\n src/cairo-pdf-surface.c  |  219 +++++++++++++++++++++++++++-------------------\n src/cairo-ps-surface.c   |  186 +++++++++++++++++++++++----------------\n src/cairo-xlib-surface.c |    8 +-\n src/cairoint.h           |    3 +-\n 6 files changed, 284 insertions(+), 167 deletions(-)\n\ncommit b07de014eba1a482747ac235670011972a82d19d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jan 19 18:44:34 2010 +0000\n\n    spans: Add a rectangular scan converter\n    \n    This is a highly specialised scan converter for the relatively common\n    case of where the input geometry is known to be a series of rectangles.\n    Generally not device aligned (or else we would most likely have chosen\n    an even higher performance path that does not require a coverage mask),\n    this optimised converter can simply compute the analytical coverage by\n    utilising a special case Bentley-Ottmann intersection finder.\n\n src/Makefile.sources                   |    1 +\n src/cairo-rectangular-scan-converter.c |  723 ++++++++++++++++++++++++++++++++\n src/cairo-spans-private.h              |   25 ++\n 3 files changed, 749 insertions(+)\n\ncommit e49855497e7214c21c85b03d7ab94e9e008f821b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jan 19 18:36:20 2010 +0000\n\n    spans: Add a Bentley-Ottmann variant on the Tor scan converter\n    \n    This variant uses the Bentley-Ottmann algorithm to only maintain the\n    active edge list upon edge events and so can efficiently skip areas\n    where no change occurs. This means that it can be much quicker than the\n    Tor algorithm (which is still used to compute the coverages from the\n    active edges) for geometries consisting of long straight lines with few\n    intersections. However due to the computational overhead of the\n    Bentley-Ottmann event processing, for dense curvy paths, simply updating\n    the active edge list in sync with computing the coverages is a win. Due\n    to advantageous adaptive step size, the scan converter can be run at a\n    much higher subsampling with little extra overhead compared with Tor,\n    currently it uses a 256x256 subsampling grid to avoid any impedance\n    mismatch with path precision.\n    \n    Given the current status of implementations, this scan converter [botor]\n    is likely to be advantage where detecting large regions of unchanged\n    span data will result in improved performance, for instance the drm\n    backends which convert the scan data into rectangles.\n\n src/Makefile.sources             |    1 +\n src/cairo-botor-scan-converter.c | 2199 ++++++++++++++++++++++++++++++++++++++\n src/cairo-compiler-private.h     |   11 +\n src/cairo-fixed-private.h        |   22 +-\n src/cairo-freelist-private.h     |   16 +\n src/cairo-freelist.c             |   38 +-\n src/cairo-spans-private.h        |   23 +\n src/cairoint.h                   |    9 -\n 8 files changed, 2299 insertions(+), 20 deletions(-)\n\ncommit 424dcf296378a107286a164aaf135a34e40c42ac\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jan 19 19:11:31 2010 +0000\n\n    boxes: Enable generation of boxes from rectilinear polygons.\n    \n    Extend the special case rectilinear tessellator to also produce boxes.\n\n src/cairo-bentley-ottmann-rectilinear.c |  122 ++++++++++++++++++++++++++-----\n src/cairoint.h                          |    5 ++\n 2 files changed, 108 insertions(+), 19 deletions(-)\n\ncommit b83f1c347dfd77139e9485745d43da946b086b74\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jan 19 19:09:10 2010 +0000\n\n    boxes: Enable tessellation\n    \n    Extend the special case rectangular tessellator to handle generation of\n    cairo_boxes_t.\n\n src/cairo-bentley-ottmann-rectangular.c |  778 ++++++++++++++++---------------\n src/cairoint.h                          |    5 +\n 2 files changed, 416 insertions(+), 367 deletions(-)\n\ncommit 43beaa5873b9ad10620bfe7ed5f9212a3c44effd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jan 19 18:11:26 2010 +0000\n\n    boxes: Efficient storage for an array of cairo_box_t.\n    \n    Currently we use cairo_traps_t to also pass around arrays of boxes. This\n    is woefully inefficient in terms of storage, but also means that we\n    repeatedly have to verify that the traps are a set of boxes. By\n    explicitly passing around a cairo_boxes_t we avoid the semantic loss.\n    \n    This will be heavily used in pending commits.\n\n src/Makefile.sources      |    2 +\n src/cairo-boxes-private.h |   80 ++++++++++++++\n src/cairo-boxes.c         |  269 +++++++++++++++++++++++++++++++++++++++++++++\n src/cairo-types-private.h |    1 +\n 4 files changed, 352 insertions(+)\n\ncommit ae25f1c360b79f0b7b1bb73e9ebc47eb794d8007\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jan 19 17:11:55 2010 +0000\n\n    Alter definition of cairo_composite_rectangles_t\n    \n    This is a more useful definition that is able to individually track the\n    rectangles that compose the composite operation. This will be used by\n    the specialist compositors as a means to perform the common extents\n    determination for an operation.\n\n src/Makefile.sources                     |    2 +\n src/cairo-composite-rectangles-private.h |  105 ++++++++++++++++\n src/cairo-composite-rectangles.c         |  197 ++++++++++++++++++++++++++++++\n src/cairo-gl-surface.c                   |   19 +--\n src/cairo-image-surface.c                |   31 ++---\n src/cairo-misc.c                         |   41 +++++++\n src/cairo-rectangle.c                    |   21 ----\n src/cairo-spans.c                        |   29 +++--\n src/cairo-surface-fallback.c             |   13 +-\n src/cairo-types-private.h                |   24 +---\n src/cairo-win32-surface.c                |   21 ++--\n src/cairoint.h                           |   14 +--\n 12 files changed, 417 insertions(+), 100 deletions(-)\n\ncommit 9cd9137843f8f1c3d32bedb6510259ab3638a2c5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jan 19 17:11:11 2010 +0000\n\n    spans: Pass multiple rows of identical spans to the renders.\n    \n    It is quite common amongst our geometry to have rows of repeated span\n    data, for example a rounded rectangle will have repeating data between\n    the top and bottom rounded corners. By passing the repeat length to the\n    renderers, they may be able to use that information more efficiently,\n    and the scan converters can avoid recomputing the same span data.\n\n src/cairo-gl-surface.c         |  141 +++++++++--------\n src/cairo-image-surface.c      |   79 ++++-----\n src/cairo-spans-private.h      |   24 ++-\n src/cairo-spans.c              |    6 +-\n src/cairo-tor-scan-converter.c |  343 +++++++++++++++++++++++++---------------\n src/cairo-win32-surface.c      |   13 +-\n src/cairoint.h                 |    4 +-\n 7 files changed, 349 insertions(+), 261 deletions(-)\n\ncommit a04873c0770df5eaed078493df5216ca28322de7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 18 23:40:00 2010 +0000\n\n    qt: Trivial compile fix for boilerplate.\n\n boilerplate/cairo-boilerplate-qt.cpp |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 0f09349dd85b15d5de14248e2f3f17a91fbcbb5e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 18 23:37:36 2010 +0000\n\n    gl: Exercise Window destinations with boilerplate\n    \n    Add a gl-window boilerplate target to exercise using GL to render to a\n    visible Drawable -- for instance, a window has a different coordinate\n    system to a framebuffer...\n\n boilerplate/cairo-boilerplate-gl.c |   99 ++++++++++++++++++++++++++++++++++++\n 1 file changed, 99 insertions(+)\n\ncommit ccea7fd7c1a2d7144e892c19615488e368529bc0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 18 23:37:11 2010 +0000\n\n    gl: Port to cairo_device_t\n\n boilerplate/cairo-boilerplate-gl.c |   28 +++--\n src/cairo-eagle-context.c          |   25 ++--\n src/cairo-gl-glyphs.c              |   46 +++++---\n src/cairo-gl-private.h             |   44 ++++---\n src/cairo-gl-surface.c             |  222 ++++++++++++++++--------------------\n src/cairo-gl.h                     |   22 ++--\n src/cairo-glx-context.c            |   25 ++--\n 7 files changed, 211 insertions(+), 201 deletions(-)\n\ncommit 3acd520c9dec89e72d7ff61adb1ae30bab12e256\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 18 23:11:19 2010 +0000\n\n    xml: Port to cairo_device_t\n\n src/cairo-xml-surface.c |  210 ++++++++++++++++++++++++-----------------------\n src/cairo-xml.h         |   13 +--\n util/trace-to-xml.c     |    7 +-\n 3 files changed, 115 insertions(+), 115 deletions(-)\n\ncommit 49ab86772a44d7a044464d875324bd0af96af728\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 18 22:43:24 2010 +0000\n\n    script: Port cairo_script_context_t to cairo_device_t\n    \n    Use the unifying cairo_device_t for cairo_script_context_t and replace.\n\n boilerplate/cairo-boilerplate-script.c |    6 +-\n boilerplate/cairo-boilerplate.c        |    6 +-\n src/cairo-script-surface.c             |  491 +++++++++++++++++---------------\n src/cairo-script.h                     |   35 +--\n test/cairo-test-trace.c                |    7 +-\n util/cairo-fdr/fdr.c                   |   10 +-\n util/cairo-script/csi-trace.c          |   11 +-\n util/cairo-sphinx/fdr.c                |    4 +-\n util/cairo-sphinx/sphinx.c             |   17 +-\n util/cairo-trace/trace.c               |    8 +-\n 10 files changed, 312 insertions(+), 283 deletions(-)\n\ncommit f617d5fc982f749d0981c81c1de1be8dc3632717\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 18 21:53:42 2010 +0000\n\n    Add cairo_device_t\n    \n    The device is a generic method for accessing the underlying interface\n    with the native graphics subsystem, typically the X connection or\n    perhaps the GL context. By exposing a cairo_device_t on a surface and\n    its various methods we enable finer control over interoperability with\n    external interactions of the device by applications. The use case in\n    mind is, for example, a multi-threaded gstreamer which needs to serialise\n    its own direct access to the device along with Cairo's across many\n    threads.\n    \n    Secondly, the cairo_device_t is a unifying API for the mismash of\n    backend specific methods for controlling creation of surfaces with\n    explicit devices and a convenient hook for debugging and introspection.\n    \n    The principal components of the API are the memory management of:\n    \n      cairo_device_reference(),\n      cairo_device_finish() and\n      cairo_device_destroy();\n    \n    along with a pair of routines for serialising interaction:\n    \n      cairo_device_acquire() and\n      cairo_device_release()\n    \n    and a method to flush any outstanding accesses:\n    \n      cairo_device_flush().\n    \n    The device for a particular surface may be retrieved using:\n    \n      cairo_surface_get_device().\n    \n    The device returned is owned by the surface.\n\n src/Makefile.sources                |    2 +\n src/cairo-analysis-surface.c        |    9 +-\n src/cairo-beos-surface.cpp          |    5 +-\n src/cairo-device-private.h          |   85 +++++++++++\n src/cairo-device.c                  |  265 +++++++++++++++++++++++++++++++++++\n src/cairo-directfb-surface.c        |    2 +\n src/cairo-gl-surface.c              |    1 +\n src/cairo-glitz-surface.c           |    4 +-\n src/cairo-image-surface.c           |    4 +-\n src/cairo-misc.c                    |    4 +\n src/cairo-os2-surface.c             |    1 +\n src/cairo-paginated-surface.c       |    4 +-\n src/cairo-pdf-surface.c             |    4 +-\n src/cairo-ps-surface.c              |    4 +-\n src/cairo-qt-surface.cpp            |    7 +-\n src/cairo-quartz-image-surface.c    |    1 +\n src/cairo-quartz-surface.c          |    6 +-\n src/cairo-recording-surface.c       |    9 +-\n src/cairo-script-surface.c          |    1 +\n src/cairo-skia-surface.cpp          |    1 +\n src/cairo-spans.c                   |    4 +\n src/cairo-surface-private.h         |    1 +\n src/cairo-surface-snapshot.c        |    1 +\n src/cairo-surface-subsurface.c      |    1 +\n src/cairo-surface.c                 |   29 ++++\n src/cairo-svg-surface.c             |    4 +-\n src/cairo-tee-surface.c             |    1 +\n src/cairo-type3-glyph-surface.c     |    4 +-\n src/cairo-types-private.h           |    1 +\n src/cairo-vg-surface.c              |    1 +\n src/cairo-win32-printing-surface.c  |    1 +\n src/cairo-win32-surface.c           |    8 +-\n src/cairo-xcb-surface.c             |    4 +-\n src/cairo-xlib-surface.c            |    4 +-\n src/cairo-xml-surface.c             |    1 +\n src/cairo.h                         |  117 ++++++++++++++++\n src/cairoint.h                      |    1 +\n src/drm/cairo-drm-gallium-surface.c |    2 +\n src/drm/cairo-drm-intel-surface.c   |    5 +-\n src/drm/cairo-drm-radeon-surface.c  |    5 +-\n src/test-fallback-surface.c         |    4 +-\n src/test-fallback16-surface.c       |    1 +\n src/test-null-surface.c             |    5 +-\n src/test-paginated-surface.c        |    4 +-\n src/test-wrapping-surface.c         |    1 +\n util/cairo-trace/trace.c            |    2 +\n 46 files changed, 607 insertions(+), 24 deletions(-)\n\ncommit 82f8aa548d70acf51b319000d7a5c176fc73da64\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 18 22:02:09 2010 +0000\n\n    Recursive mutex.\n    \n    Implement a recursive mutex which will be needed for cairo_device_t.\n    In particular only pthreads by default is a non-recursive mutex (to my\n    knowledge) - both win32 critical sections and mutexes on Quartz are\n    recursive.\n\n src/cairo-mutex-impl-private.h |   28 ++++++++++++++++++++++++++++\n src/cairo-mutex-type-private.h |    9 ++++++++-\n 2 files changed, 36 insertions(+), 1 deletion(-)\n\ncommit d2f251f84b326c5f8825c9a631ea729f21891580\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 18 22:12:23 2010 +0000\n\n    configure: Globally define AC_GNU_SOURCE\n    \n    We were using _GNU_SOURCE throughout the codebase, so simply define it\n    once during configure. This is the easiest method to enable recursive\n    mutexes using pthreads, as required in a pending patch.\n\n boilerplate/cairo-boilerplate-pdf.c |    4 ++++\n boilerplate/cairo-boilerplate-ps.c  |    4 ++++\n configure.ac                        |    3 +++\n src/cairo-gstate.c                  |    2 --\n src/cairo-matrix.c                  |    2 --\n src/cairo-scaled-font.c             |    2 --\n 6 files changed, 11 insertions(+), 6 deletions(-)\n\ncommit 934d0d0d6585eb7638c7db597c40dd821092c034\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 18 19:05:34 2010 +0000\n\n    Real zero-copy cow snapshotting\n    \n    The first iteration of COW snapshotting always made an initial copy when\n    the snapshot was requested (and reused that copy until the surface was\n    modified). However, in a few circumstances we can avoid even that copy\n    so long as the surface is still alive and unmodified between the\n    snapshotting and its use. In order to do so, we need a new proxy surface\n    that can automatically perform the copy if the target should disappear\n    prior to use.\n\n src/Makefile.sources                 |    2 +\n src/cairo-paginated-surface.c        |    7 +-\n src/cairo-surface-snapshot-private.h |   48 ++++++++\n src/cairo-surface-snapshot.c         |  225 ++++++++++++++++++++++++++++++++++\n src/cairo-surface.c                  |  101 ++-------------\n src/cairo-types-private.h            |    2 +\n 6 files changed, 291 insertions(+), 94 deletions(-)\n\ncommit 6b3e19aa434d159db7878b2a7fb28a026b2d1756\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 18 19:12:25 2010 +0000\n\n    Remove content matching from snapshot lookup.\n    \n    This was never used, so remove the complexity from the interface.\n\n src/cairo-recording-surface.c      |    3 +--\n src/cairo-surface.c                |   23 +++++++----------------\n src/cairo-vg-surface.c             |    3 +--\n src/cairoint.h                     |    3 +--\n src/drm/cairo-drm-intel-surface.c  |    3 +--\n src/drm/cairo-drm-radeon-surface.c |    3 +--\n 6 files changed, 12 insertions(+), 26 deletions(-)\n\ncommit dc8290814c0e98b38828953bac6dd0893c31c9ad\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 18 18:06:51 2010 +0000\n\n    Add subsurface.\n    \n    A subsurface is a region of another surface that may be used either to\n    restrict the writable area of a context or the readable extents of a\n    source. Whilst writing, access to the exterior of the subsurface is\n    prevented via clipping and when used as a source reads from the exterior\n    of the subsurface are governed via the extend mechanism of the pattern.\n\n src/Makefile.sources                   |    2 +\n src/cairo-surface-subsurface-private.h |   48 ++++\n src/cairo-surface-subsurface.c         |  464 ++++++++++++++++++++++++++++++++\n src/cairo-types-private.h              |    4 +-\n src/cairo.h                            |    7 +\n test/Makefile.am                       |    3 +\n test/Makefile.sources                  |    3 +\n test/subsurface-repeat.c               |   72 +++++\n test/subsurface-repeat.ref.png         |  Bin 0 -> 197 bytes\n test/subsurface-similar-repeat.c       |   83 ++++++\n test/subsurface-similar-repeat.ref.png |  Bin 0 -> 197 bytes\n test/subsurface.c                      |   80 ++++++\n test/subsurface.ref.png                |  Bin 0 -> 1597 bytes\n 13 files changed, 765 insertions(+), 1 deletion(-)\n\ncommit b8eacbfae1c155f412d84120411103cb610e383b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 18 18:09:11 2010 +0000\n\n    Add surface-offset internal API.\n    \n    This is a simplified version of the wrapping surface where the target\n    surface is just a subsurface onto which we wish to draw the current\n    operation. In particular this is useful for the subsurface API as well\n    as fallbacks.\n\n src/Makefile.sources               |    2 +\n src/cairo-surface-offset-private.h |   95 ++++++++++\n src/cairo-surface-offset.c         |  354 ++++++++++++++++++++++++++++++++++++\n 3 files changed, 451 insertions(+)\n\ncommit f2c32d01836379766bc287edf77381123767daeb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jan 19 18:06:54 2010 +0000\n\n    Unify the two freed object pools\n    \n    Discard some duplicate code and shared a single freed object pointer\n    pool between the pattern and clip.\n\n src/Makefile.sources           |    2 +\n src/cairo-clip.c               |   88 +----------------------------\n src/cairo-freed-pool-private.h |  121 ++++++++++++++++++++++++++++++++++++++++\n src/cairo-freed-pool.c         |   91 ++++++++++++++++++++++++++++++\n src/cairo-pattern.c            |  115 ++++++--------------------------------\n 5 files changed, 234 insertions(+), 183 deletions(-)\n\ncommit cfd204824fada7d2b4bcf4994c4200ae9b5a8b26\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 18 18:20:16 2010 +0000\n\n    Constify stroke style and matrices.\n    \n    As a simple step to ensure that we do not inadvertently modify (or at least\n    generate compiler warns if we try) user data, mark the incoming style\n    and matrices as constant.\n\n src/cairo-analysis-surface.c         |   12 +++----\n src/cairo-paginated-surface.c        |    6 ++--\n src/cairo-path-bounds.c              |    6 ++--\n src/cairo-path-stroke.c              |   60 +++++++++++++++++-----------------\n src/cairo-pdf-operators-private.h    |   24 +++++++-------\n src/cairo-pdf-operators.c            |   38 ++++++++++-----------\n src/cairo-pdf-surface-private.h      |   11 +++----\n src/cairo-pdf-surface.c              |   40 +++++++++++------------\n src/cairo-ps-surface.c               |    6 ++--\n src/cairo-qt-surface.cpp             |   14 ++++----\n src/cairo-quartz-surface.c           |    6 ++--\n src/cairo-recording-surface.c        |    6 ++--\n src/cairo-script-surface.c           |    6 ++--\n src/cairo-stroke-style.c             |    2 +-\n src/cairo-surface-fallback-private.h |    6 ++--\n src/cairo-surface-fallback.c         |    6 ++--\n src/cairo-surface-wrapper-private.h  |   12 +++----\n src/cairo-surface-wrapper.c          |   12 +++----\n src/cairo-surface.c                  |   14 ++++----\n src/cairo-svg-surface.c              |   40 +++++++++++------------\n src/cairo-tee-surface.c              |    6 ++--\n src/cairo-type3-glyph-surface.c      |    6 ++--\n src/cairo-win32-printing-surface.c   |    6 ++--\n src/cairo-xml-surface.c              |    6 ++--\n src/cairoint.h                       |   44 ++++++++++++-------------\n src/drm/cairo-drm-private.h          |    6 ++--\n src/drm/cairo-drm-surface.c          |    6 ++--\n src/test-null-surface.c              |    6 ++--\n src/test-paginated-surface.c         |    6 ++--\n src/test-wrapping-surface.c          |    6 ++--\n 30 files changed, 212 insertions(+), 213 deletions(-)\n\ncommit 3e17c559b04e2df208f28125746d7e0acfb4b476\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Wed Dec 9 19:46:28 2009 +0100\n\n    [test] Add pthread-same-source test\n    \n    Multiple threads render using the same source surface, but with\n    different extend and filter.\n\n test/Makefile.am                 |    1 +\n test/Makefile.sources            |    1 +\n test/pthread-same-source.c       |  160 ++++++++++++++++++++++++++++++++++++++\n test/pthread-same-source.ref.png |  Bin 0 -> 1000 bytes\n 4 files changed, 162 insertions(+)\n\ncommit 30a12f802f4ff46f13dc36e60936cd857585a9ea\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Wed Nov 25 18:55:05 2009 +0100\n\n    [test] Add a simple multithreading test\n\n test/Makefile.am             |    1 +\n test/Makefile.sources        |    5 +-\n test/pthread-similar.c       |  106 ++++++++++++++++++++++++++++++++++++++++++\n test/pthread-similar.ref.png |  Bin 0 -> 170 bytes\n 4 files changed, 111 insertions(+), 1 deletion(-)\n\ncommit 038829eb84e53532a6e3c75225933ad85da50cfc\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Sun Dec 6 17:47:50 2009 +0100\n\n    [test] Add new test checking is_clear is handled properly\n    \n    This test does various operations with a clear source surface with\n    various content types.\n    The idea is to make sure optimizations done when surface->is_clear ==\n    TRUE only happen in the proper cases.\n\n test/Makefile.sources     |    1 +\n test/clear-source.c       |  163 +++++++++++++++++++++++++++++++++++++++++++++\n test/clear-source.ref.png |  Bin 0 -> 881 bytes\n 3 files changed, 164 insertions(+)\n\ncommit bf7fb4e0e09d05f42425cc7969c64992d4dc9ff9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 18 17:18:08 2010 +0000\n\n    script: Handle cache allocation failure more gracefully\n    \n    Instead of bailing out if we cannot store the glyph cache on the font,\n    simply do not store the glyph cache on the font...\n\n util/cairo-script/cairo-script-operators.c |   74 +++++++++++++---------------\n 1 file changed, 33 insertions(+), 41 deletions(-)\n\ncommit 2b312806f138da6f88d03bb3c0c3852b342eb220\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 18 17:14:24 2010 +0000\n\n    script: Free the correct pattern after failure.\n    \n    The error path attempted to free the resolved pattern which it had just\n    discovered was NULL and not the locally allocated pattern...\n\n util/cairo-script/cairo-script-operators.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit bc2d0ad114f8fc0b0579851154fe9d39c0aa0fc9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Nov 27 17:30:51 2009 +0000\n\n    script: Permit surface operations on the context\n    \n    By implicitly reference the target of the context instead, i.e.\n    this reduces the use of:\n    \n      /target get (example.png) write-to-png pop\n    \n    as a common idiom where the context is kept on the stack and the surface\n    forgotten.\n\n util/cairo-script/cairo-script-operators.c |   14 +++++++++++---\n 1 file changed, 11 insertions(+), 3 deletions(-)\n\ncommit 411c09eed7ebff7335948a7f96d2b29d82ed817a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Nov 1 08:40:41 2009 +0000\n\n    perf: Enable a surface cache for perf-trace\n    \n    Real applications that control their Drawable externally to Cairo are\n    'disadvantaged' by cairo-perf-trace when it creates a similar surface\n    for each new instance of the same Drawable. The difficulty in\n    maintaining one perf surface for every application surface is that the\n    traces do not track lifetimes for the application surfaces, so we would\n    just accumulate stale surfaces. The surface cache takes a different\n    approach and returns the same surface for each active Drawable, and\n    maintains a hold-over of the MRU 16 surfaces. This achieves 60-80% hit\n    rate with firefox, which is probably as good as can be expected.\n    Obviously for double-buffered applications we only every draw to freshly\n    created surfaces (and Gtk+ bypasses cairo to do the final copy -- the\n    ideal application would just use a push-group for double buffering, in\n    which case we would capture and replay the entire expose event).\n    \n    To enable use of the surface cache whilst replaying use -c:\n    \n      ./cairo-perf-trace -c firefox-talos-gfx\n\n perf/Makefile.am                             |    3 +-\n perf/cairo-perf-trace.c                      |  141 +++++++++++++++++++++++++-\n test/any2ppm.c                               |    4 +-\n util/cairo-script/cairo-script-interpreter.h |    3 +-\n util/cairo-script/cairo-script-operators.c   |   13 ++-\n util/cairo-sphinx/sphinx.c                   |    3 +-\n 6 files changed, 157 insertions(+), 10 deletions(-)\n\ncommit c50c8b90c0033686b465e6766fba4772c1d698c6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 18 16:58:40 2010 +0000\n\n    Move _cairo_error() to a standalone header\n    \n    A pending commit will want to include some utility code from cairo and\n    so we need to extricate the error handling from the PLT symbol hiding.\n\n src/Makefile.sources                    |    1 +\n src/cairo-analysis-surface.c            |    1 +\n src/cairo-array.c                       |    1 +\n src/cairo-base64-stream.c               |    1 +\n src/cairo-base85-stream.c               |    1 +\n src/cairo-bentley-ottmann-rectangular.c |    1 +\n src/cairo-bentley-ottmann-rectilinear.c |    1 +\n src/cairo-bentley-ottmann.c             |    1 +\n src/cairo-beos-surface.cpp              |    2 ++\n src/cairo-cache.c                       |    1 +\n src/cairo-cff-subset.c                  |    1 +\n src/cairo-clip.c                        |    1 +\n src/cairo-deflate-stream.c              |    1 +\n src/cairo-directfb-surface.c            |    1 +\n src/cairo-eagle-context.c               |    1 +\n src/cairo-error-private.h               |   60 +++++++++++++++++++++++++++++++\n src/cairo-font-face-twin.c              |    1 +\n src/cairo-font-face.c                   |    1 +\n src/cairo-font-options.c                |    1 +\n src/cairo-freelist.c                    |    1 +\n src/cairo-ft-font.c                     |    1 +\n src/cairo-gl-glyphs.c                   |    2 ++\n src/cairo-gl-shaders.c                  |    1 +\n src/cairo-gl-surface.c                  |    1 +\n src/cairo-glitz-surface.c               |    2 ++\n src/cairo-glx-context.c                 |    2 ++\n src/cairo-gstate.c                      |    1 +\n src/cairo-hash.c                        |    1 +\n src/cairo-hull.c                        |    1 +\n src/cairo-image-surface.c               |    1 +\n src/cairo-lzw.c                         |    1 +\n src/cairo-matrix.c                      |    1 +\n src/cairo-misc.c                        |    1 +\n src/cairo-os2-surface.c                 |    1 +\n src/cairo-output-stream.c               |    1 +\n src/cairo-paginated-surface.c           |    1 +\n src/cairo-path-fill.c                   |    1 +\n src/cairo-path-fixed.c                  |    1 +\n src/cairo-path-stroke.c                 |    1 +\n src/cairo-path.c                        |    1 +\n src/cairo-pattern.c                     |    1 +\n src/cairo-pdf-operators.c               |    1 +\n src/cairo-pdf-surface.c                 |    1 +\n src/cairo-pen.c                         |    1 +\n src/cairo-png.c                         |    2 ++\n src/cairo-polygon.c                     |    1 +\n src/cairo-ps-surface.c                  |    1 +\n src/cairo-qt-surface.cpp                |    6 ++--\n src/cairo-quartz-font.c                 |    2 ++\n src/cairo-quartz-image-surface.c        |    2 ++\n src/cairo-quartz-surface.c              |    2 ++\n src/cairo-recording-surface.c           |    3 +-\n src/cairo-region.c                      |    1 +\n src/cairo-rtree.c                       |    1 +\n src/cairo-scaled-font-subsets.c         |    1 +\n src/cairo-scaled-font.c                 |    1 +\n src/cairo-script-surface.c              |    1 +\n src/cairo-stroke-style.c                |    1 +\n src/cairo-surface-fallback.c            |    1 +\n src/cairo-surface-wrapper.c             |    1 +\n src/cairo-surface.c                     |    1 +\n src/cairo-svg-surface.c                 |    1 +\n src/cairo-tee-surface.c                 |    1 +\n src/cairo-tor-scan-converter.c          |    1 +\n src/cairo-toy-font-face.c               |    1 +\n src/cairo-traps.c                       |    1 +\n src/cairo-truetype-subset.c             |    1 +\n src/cairo-type1-fallback.c              |    1 +\n src/cairo-type1-subset.c                |    1 +\n src/cairo-type3-glyph-surface.c         |    1 +\n src/cairo-unicode.c                     |    1 +\n src/cairo-user-font.c                   |    1 +\n src/cairo-vg-surface.c                  |    3 +-\n src/cairo-win32-font.c                  |    1 +\n src/cairo-win32-printing-surface.c      |    1 +\n src/cairo-win32-surface.c               |    1 +\n src/cairo-xcb-surface.c                 |    3 +-\n src/cairo-xlib-display.c                |    1 +\n src/cairo-xlib-screen.c                 |    1 +\n src/cairo-xlib-surface.c                |    1 +\n src/cairo-xlib-visual.c                 |    2 ++\n src/cairo-xml-surface.c                 |    1 +\n src/cairo.c                             |    1 +\n src/cairoint.h                          |   12 -------\n src/drm/cairo-drm-bo.c                  |    1 +\n src/drm/cairo-drm-intel-surface.c       |    1 +\n src/drm/cairo-drm-intel.c               |    1 +\n src/drm/cairo-drm-radeon-surface.c      |    1 +\n src/drm/cairo-drm-radeon.c              |    1 +\n src/drm/cairo-drm-surface.c             |    1 +\n src/drm/cairo-drm.c                     |    1 +\n src/test-fallback-surface.c             |    1 +\n src/test-fallback16-surface.c           |    1 +\n src/test-null-surface.c                 |    2 ++\n src/test-paginated-surface.c            |    1 +\n src/test-wrapping-surface.c             |    1 +\n 96 files changed, 170 insertions(+), 17 deletions(-)\n\ncommit 558f9501700ba569f04f345f7c64d16b1870e37c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 18 22:47:34 2010 +0000\n\n    surface-wrapper: Avoid copying patterns and clips unless transformed.\n    \n    An older variant of the fixes for moving the device transformation out\n    of the surface layer, but languished in a side branch. The only benefit\n    of this patch is that it avoids the copy where possible.\n\n src/cairo-surface-wrapper.c |  134 ++++++++++++++++++++++++-------------------\n 1 file changed, 75 insertions(+), 59 deletions(-)\n\ncommit 8f694817227366f4a4c6bbbf46e6cdddb4a065df\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jan 19 17:12:47 2010 +0000\n\n    gitignore: refresh\n    \n    Add forgotten local targets to .gitignore\n\n .gitignore                   |    1 +\n perf/.gitignore              |    1 +\n util/.gitignore              |    2 ++\n util/cairo-script/.gitignore |    1 +\n 4 files changed, 5 insertions(+)\n\ncommit 5914e995723682e0b1f685d9ff5ea5abe05ae024\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Fri Jan 22 09:21:36 2010 -0800\n\n    [gl] Cache a temporary glyph compositing mask for reuse later.\n    \n    Cuts firefox-talos-gfx time from 56 seconds to 43 seconds.\n\n src/cairo-gl-glyphs.c  |   29 ++++++++++++++++++++++-------\n src/cairo-gl-private.h |    4 ++++\n src/cairo-gl-surface.c |    4 +++-\n 3 files changed, 29 insertions(+), 8 deletions(-)\n\ncommit 1bf0f64ee7783742fa777a496567e4da48e300dd\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Thu Jan 21 14:08:11 2010 -0800\n\n    [gl] Composite component-alpha glyphs directly instead of through a mask.\n    \n    Cuts gnome-terminal-vim time from 58 seconds to 20.\n\n src/cairo-gl-glyphs.c  |  190 +++++++++++++++++++++++++++++++-----------------\n src/cairo-gl-private.h |    4 +\n src/cairo-gl-surface.c |    2 +-\n 3 files changed, 127 insertions(+), 69 deletions(-)\n\ncommit 12d521df8acc483b2daa844d4f05dc2fe2765ba6\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Thu Jan 21 13:19:17 2010 -0800\n\n    [gl] Use GL_RGBA textures even for CAIRO_CONTENT_COLOR.\n    \n    When the texture is GL_RGB, GL_CLAMP_TO_BORDER (EXTEND_NONE) fills the\n    border color alpha channel with 1, when the whole reason we were using\n    the border color was to get a color and alpha of 0.  We're forced to\n    use GL_RGBA textures and do extra work to fill in the alpha channel of\n    them to 1 to get cairo's desired behavior.\n    \n    This fixes a failure in rotate-image-surface-paint and 4 other\n    testcases.  No performance difference in firefox-talos-gfx.\n\n src/cairo-gl-surface.c |  131 +++++++++++++++++++++++++++---------------------\n 1 file changed, 75 insertions(+), 56 deletions(-)\n\ncommit e316cb9db57094359c28f6b740e73674e8dcc134\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Wed Jan 20 13:33:56 2010 -0800\n\n    [gl] Add support for component-alpha glyph rendering.\n    \n    This is done using a mask and the two-pass trick I did for EXA.  Fixes\n    text-antialias-subpixel.\n\n src/cairo-gl-glyphs.c  |   60 ++++++--\n src/cairo-gl-private.h |    3 +-\n src/cairo-gl-surface.c |  384 ++++++++++++++++++++++++++++++++++++++++++++++--\n 3 files changed, 424 insertions(+), 23 deletions(-)\n\ncommit ceeb7e7e703213a83ca43d80962519074a19364d\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Tue Jan 19 13:43:16 2010 -0800\n\n    [gl] Use the UNSUPPORTED() macro in more places for fallback debugging.\n\n src/cairo-gl-surface.c |   14 +++++++-------\n 1 file changed, 7 insertions(+), 7 deletions(-)\n\ncommit 5d9e2fd84b4f66e5b121d95805ce34e2f482d1b0\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Fri Jan 15 16:28:12 2010 +0100\n\n    [quartz] Leftbehind change from a39075c88f9b2e12e19348ea11c9b3f739818265\n    \n    This commit completes the change in a39075c88f9b2e12e19348ea11c9b3f739818265.\n    It removes unused variables and corrects the extents rect computation.\n\n src/cairo-quartz-surface.c |    4 +---\n 1 file changed, 1 insertion(+), 3 deletions(-)\n\ncommit 6950b233e41a0c926465728c37f9bc5512f2844b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 15 14:25:16 2010 +0000\n\n    qt: Make flush() robust.\n    \n    Hanno Meyer-Thurow reported in\n    \n      http://bugs.freedesktop.org/show_bug.cgi?id=26063\n      [PATCH] various fixes to cairo-qt\n    \n    a few issues related to _cairo_qt_surface_flush() where firefox was\n    crashing after being built to use cairo-qt.\n    \n    This is an amalgam of those patches that hopefully address the issue.\n\n src/cairo-qt-surface.cpp |   33 ++++++++++++++++++++++++++-------\n 1 file changed, 26 insertions(+), 7 deletions(-)\n\ncommit 4e315d84723b27746a6a012ab7de429b2f2ef90b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 15 12:21:52 2010 +0000\n\n    pattern: Premultiply color-stop when converting to solid\n    \n    Fixes: test/linear-uniform\n           https://bugzilla.mozilla.org/show_bug.cgi?id=539165\n           Bug 539165 - gradients with a single stop do not have their color\n                        multiplied by the alpha.\n    \n    As reported by Jeff Muizelaar, we regressed in 2d790daa as the\n    color-stops are not premultiplied and so could not be treated as an\n    ordinary cairo_color_t. Instead we have to create a intermediate\n    cairo_color_t from the original values in order for the\n    premultiplication to be performed.\n\n src/cairo-gstate.c  |   26 +++++++++++++++++++-------\n src/cairo-pattern.c |   32 +++++++++++++++++++++-----------\n 2 files changed, 40 insertions(+), 18 deletions(-)\n\ncommit f40560a9bb5b12d2584ed297bf4114baf2aa9cc1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 15 12:17:30 2010 +0000\n\n    test: Add linear-uniform\n    \n    Jeff reported a regression found by Mozilla whereby a uniform gradient\n    was not being premultiplied on conversion to a solid pattern.\n    \n      https://bugzilla.mozilla.org/show_bug.cgi?id=539165\n      [Bug 539165] gradients with a single stop do not have their color\n                   multiplied by the alpha.\n\n test/Makefile.am            |    1 +\n test/Makefile.sources       |    1 +\n test/linear-uniform.c       |   63 +++++++++++++++++++++++++++++++++++++++++++\n test/linear-uniform.ref.png |  Bin 0 -> 128 bytes\n 4 files changed, 65 insertions(+)\n\ncommit e22c02dbaeda6941083fc89b517508dc0c4386a0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 15 12:02:58 2010 +0000\n\n    test: Add degenerate-arcs\n    \n    A simple test to ensure that using degenerate-arcs such as when drawing\n    a rounded rectangle with radii=0 construct a proper path.\n\n test/Makefile.am             |    1 +\n test/Makefile.sources        |    1 +\n test/degenerate-arcs.c       |   57 ++++++++++++++++++++++++++++++++++++++++++\n test/degenerate-arcs.ref.png |  Bin 0 -> 120 bytes\n 4 files changed, 59 insertions(+)\n\ncommit a39075c88f9b2e12e19348ea11c9b3f739818265\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Wed Jan 6 18:53:54 2010 +0100\n\n    [quartz] Fix generic masking\n    \n    Masking with unbounded operators was broken because an incorrect\n    transformation was applied to inverted mask used for the fixup.\n\n src/cairo-quartz-surface.c |   59 ++++++++++++++++----------------------------\n 1 file changed, 21 insertions(+), 38 deletions(-)\n\ncommit 27701ed8447d4c21b7bf9709a2fc21690b3cdc96\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Tue Jan 5 19:42:23 2010 +0100\n\n    [quartz] Approximate dense dashing patterns\n    \n    Quartz doesn't try to approximate dash pattern even if they are well\n    beyond suface sampling frequency. Approximating dash patterns when their\n    density is too high avoids looping indefinitely in these degenerate cases.\n\n src/cairo-quartz-surface.c |   32 +++++++++++++++++++++-----------\n 1 file changed, 21 insertions(+), 11 deletions(-)\n\ncommit ad7ab00c10fc1adcf2ef4574fdd00b25dfcdafdd\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Sat Jan 2 13:23:53 2010 +0100\n\n    [quartz] Improve A8 and A1 support\n    \n    Use A8 images as alpha-only masks intread of greyscale images.\n    Add support to A1 images (they were ignored before).\n\n src/cairo-quartz-surface.c |   59 ++++++++++++++++++++++++++------------------\n 1 file changed, 35 insertions(+), 24 deletions(-)\n\ncommit f3b3a5c43f247f3e9019fa6c1fd2abb3b00dd9ea\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Fri Jan 15 07:47:30 2010 +1030\n\n    Fix bug in _cairo_ft_index_to_ucs4\n    \n    Previously it would miss the first character causing the space glyph to\n    return 0x00A0 instead of 0x0020.\n\n src/cairo-ft-font.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit e26e2c8cc41b4e60462eacbd87894dc82beca883\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Thu Jan 14 10:05:02 2010 -0800\n\n    [gl] Fix the color bits of CAIRO_CONTENT_ALPHA surface patterns to be 0.\n    \n    Fixes surface-pattern-operator and alpha-similar.\n\n src/cairo-gl-private.h |    1 -\n src/cairo-gl-surface.c |   22 +++++++++++-----------\n 2 files changed, 11 insertions(+), 12 deletions(-)\n\ncommit 520945603cdbacb90b3067f24a37b6dbd2ea6808\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Thu Jan 14 10:00:37 2010 -0800\n\n    [gl] Remove the special-casing of acquiring a pattern surface.\n    \n    _cairo_pattern_acquire_surface() should do fine at it, and matches\n    what cairo-drm-i915 does.\n\n src/cairo-gl-surface.c |  127 ------------------------------------------------\n 1 file changed, 127 deletions(-)\n\ncommit dbf9faf8232e7bf279377b5f3fc08ed210ca4e51\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Wed Jan 13 10:33:32 2010 -0800\n\n    [gl] Use GLSL for fill_rectangles when available.\n    \n    Ultimately, we want all of our paths to use shaders when they are\n    exposed -- it brings us closer to GL 3.0 compatibility and it should\n    reduce the work that GL drivers have to do per operation to compute\n    the required hardware state.\n\n src/Makefile.sources   |    2 +-\n src/cairo-gl-private.h |    6 +++\n src/cairo-gl-shaders.c |  117 ++++++++++++++++++++++++++++++++++++++++++++\n src/cairo-gl-surface.c |  125 ++++++++++++++++++++++++++++++++++++++++++++++--\n 4 files changed, 244 insertions(+), 6 deletions(-)\n\ncommit 57341cf5ac4d16222da27856e3a1092a473597e8\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Wed Jan 13 14:18:06 2010 -0800\n\n    [gl] Use ADD instead of SOURCE when making a mask for overlapping glyphs.\n    \n    The whole point of making the mask was to avoid overwriting one glyph\n    with the data from another.  Whoops.\n    \n    Fixes ft-show-glyphs-positioning, text-rotate, overlapping-glyphs,\n    clip-text.\n\n src/cairo-gl-glyphs.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 6e0a63102e7e2d3fa3d5c993f2b94a2d6e40bdd8\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Wed Jan 13 14:06:23 2010 -0800\n\n    [gl] Clear the current_target cache when binding a framebuffer in creation.\n    \n    Failing to do so meant that we might not re-bind the framebuffer to\n    the correct one if we didn't follow up surface creation with drawing\n    to it.\n    \n    Fixes many testcases.  Thanks to T. Zachary Laine for tracking down\n    that the current_target was the source of these issues.\n\n src/cairo-gl-surface.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit ad0f4bee19b214b96fb07a45d1f059b362afee0f\nAuthor: T. Zachary Laine <whatwasthataddress@gmail.com>\nDate:   Thu Jan 7 17:24:31 2010 -0600\n\n    [gl] Clear the is_clear flag on the temporary glyph mask we create.\n    \n    Normally is_clear is cleared by the caller of one of the 5 basic\n    entrypoints, but in this temporary surface usage nobody else can do it\n    for us.\n    \n    Fixes ft-show-glyphs-table, user-font-rescale, and select-font-face.\n\n src/cairo-gl-glyphs.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 384e50d858e9eec670f764c758fb3aa09b56caed\nAuthor: T. Zachary Laine <whatwasthataddress@gmail.com>\nDate:   Wed Jan 13 15:06:24 2010 -0600\n\n    [gl] Removed repeated lines of source\n    \n    The two removed lines are redundant with code a few lines above them.\n\n src/cairo-gl-surface.c |    2 --\n 1 file changed, 2 deletions(-)\n\ncommit 515ccb63a67c88ddb2bc5adfd018cae55bc93185\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Mon Jan 11 16:04:21 2010 -0800\n\n    [gl] Fix the glyph cache full flush to really try again.\n    \n    Previously, the initial error handling would dump through to software\n    fallback instead of retrying in the following code.\n\n src/cairo-gl-glyphs.c |    6 ++----\n 1 file changed, 2 insertions(+), 4 deletions(-)\n\ncommit 4aae4bfa8f28a470ab18575670563ad28374e445\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jan 12 17:10:04 2010 +0000\n\n    test: Fix typo in path-stroke-twice reference image\n    \n    Sigh. I committed the reference image with the name\n    path-stroke-twice-ref.png.\n\n test/path-stroke-twice-ref.png |  Bin 206 -> 0 bytes\n test/path-stroke-twice.ref.png |  Bin 0 -> 206 bytes\n 2 files changed, 0 insertions(+), 0 deletions(-)\n\ncommit 74ea4c908067f5579b51d3dbaea387da8f343671\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jan 12 17:00:25 2010 +0000\n\n    path: Do not remove anti-parallel line segments in case we are stroking\n    \n      Bug 26010 - cairo_line_to optimizes away path segments\n      http://bugs.freedesktop.org/show_bug.cgi?id=26010\n    \n    As exercised by path-stroke-twice, we incorrectly optimise away a line\n    segment if the path doubled back upon itself. This is very reminiscent\n    of the optimisation bug for replacing curve-to with line-to.\n\n src/cairo-path-fixed.c    |    5 ++++-\n src/cairo-slope-private.h |    7 +++++++\n 2 files changed, 11 insertions(+), 1 deletion(-)\n\ncommit a5dd5a6069c0d7435260a954d8d98483f5fbcc1c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jan 12 16:32:09 2010 +0000\n\n    test: Add path-stroke-twice\n    \n    Exercises a bug found by alois@astro.ch, whereby we inadvertently remove\n    a line segment when the path doubles back upon itself.\n    \n      Bug 26010 - cairo_line_to optimizes away path segments\n      http://bugs.freedesktop.org/show_bug.cgi?id=26010\n\n test/Makefile.am                  |    2 ++\n test/Makefile.sources             |    1 +\n test/path-stroke-twice-ref.png    |  Bin 0 -> 206 bytes\n test/path-stroke-twice.c          |   54 +++++++++++++++++++++++++++++++++++++\n test/path-stroke-twice.ps.ref.png |  Bin 0 -> 197 bytes\n 5 files changed, 57 insertions(+)\n\ncommit 4204605813d93e7e2f0d8761e90a6dd6b8089dcb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 8 11:58:15 2010 +0000\n\n    type1: Destroy the output stream.\n    \n    mpsuzuki spotted that the output stream for the subset was not being\n    destroyed on the error path - on closer inspection, it wasn't destroyed\n    along the normal path either and may never have been correctly\n    initialised to NULL on an earlier error.\n    \n    Reported-by: mpsuzuki@hiroshima-u.ac.jp\n\n src/cairo-type1-subset.c |   28 +++++++++++++++-------------\n 1 file changed, 15 insertions(+), 13 deletions(-)\n\ncommit 41a24d822ac094f0841ba0c92ca86448ad062def\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jan 7 11:58:01 2010 +0000\n\n    trace: Correctly encode octal values.\n    \n    How embarrassing.\n\n util/cairo-trace/trace.c |   21 ++++++++++++++-------\n 1 file changed, 14 insertions(+), 7 deletions(-)\n\ncommit 3ae9d04c6ddd311ffab91170fb9342e37c5530a8\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Fri Jan 1 20:13:33 2010 +0200\n\n    [stroker] Fix off-by-one memory allocation in _tessellate_fan().\n    \n    The number of points in a triangle fan was miscomputed because\n    it was computing the number of line segments rather than points\n    in the fan.  Now we include the final point of the fan correctly\n    in the count.\n    \n    This fixes https://bugs.webkit.org/show_bug.cgi?id=33071 as\n    reported by Benjamin Otte.  A derived test case was not added\n    to the cairo test suite since the bug is difficult to trigger in\n    a reliable way which causes visible results (as opposed to\n    silent heap corruption.)\n    \n    The easiest way of triggering the bug is to stroke a line\n    using a large line width and round caps or joins.\n\n src/cairo-path-stroke.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit a0ea0b63fdd38a73d6696da5cd4800d9a7289240\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 30 16:21:50 2009 +0000\n\n    arc: Just emit a line-to if radius is zero.\n    \n    In order to be consistent with the semantics of cairo_arc() using a\n    radius of 0 should simply degenerate into a line-to.\n    \n    Reported-by: Benjamin Berg\n\n src/cairo.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 21560b3ec6d015004867207c5bdd90061b8a5d80\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Fri Dec 11 10:29:12 2009 +0100\n\n    [trace] Fix compilation when FreeType is disabled\n    \n    cairo-trace needs some headers which are missing if freetype is\n    not enabled. Adding them explicitly fixes compilation.\n\n util/cairo-trace/trace.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 393d2d9c9199c368916fb5412abaac163f57ff86\nAuthor: Tim Janik <timj@gtk.org>\nDate:   Mon Dec 28 13:34:43 2009 +0100\n\n    Fixed documentation typo.\n\n src/cairo-image-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit e2d75203c515f9740a8e0e9779391de0a1a54b07\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Nov 29 15:56:26 2009 +0200\n\n    [dirty] Add more missing surface dirtying notifications.\n    \n    Now that the image surface actually cares about\n    cairo_surface_mark_dirty() we're hitting cases where\n    we've forgotten to mark surfaces dirty.\n\n boilerplate/cairo-boilerplate.c            |    1 +\n src/cairo-xlib-surface.c                   |    1 +\n util/cairo-script/cairo-script-operators.c |    2 ++\n 3 files changed, 4 insertions(+)\n\ncommit b76565d2f4a2510aabada4cef968b9b597bbef09\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Nov 29 15:40:30 2009 +0200\n\n    [test] Don't use uninitialised data in surface-source.c\n    \n    The draw_pattern() function assumed the incoming surface\n    was clear, but it's not.  Explicitly clear the surface first.\n\n test/surface-source.c |    4 ++++\n 1 file changed, 4 insertions(+)\n\ncommit e09b754fdd43206e1668812be4ff11d25188148c\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Nov 29 01:11:29 2009 +0200\n\n    [gstate] Change dash offset normalisation to preserve offsets in range.\n    \n    We have a test case get-and-set which wants to see whatever it puts\n    into a cairo_t come back out again, but at the same time cairo-gstate\n    wants to range reduce the dash offset it's given to a sane range.\n    This patch changes the range reduction algorithm to always normalize\n    to a non-negative dash offset and not touch dash offsets which are\n    already in range.\n\n src/cairo-gstate.c |    7 ++++++-\n 1 file changed, 6 insertions(+), 1 deletion(-)\n\ncommit b394240941dffa263776a62cf42dc9b7e477f7a2\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Nov 29 02:48:23 2009 +0200\n\n    [test] Add missing mark_dirty() calls to test cases.\n    \n    A recent optimisation has added a flag to the image\n    surface which is used to track whether the surface\n    is clear or not.  This makes it imperative that clients\n    call cairo_surface_mark_dirty() if they use cairo to\n    allocate their pixel buffers and then proceed to\n    initialize them without telling cairo about it.\n\n test/a1-mask.c        |    1 +\n test/large-source.c   |    2 ++\n test/user-font-mask.c |    1 +\n 3 files changed, 4 insertions(+)\n\ncommit 9ddf14cfd5c3bf0cf507cfc82b192f5c46f66f9a\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Nov 29 10:40:18 2009 +1030\n\n    PDF: Don't specify colorspace in JPEG2000 image dictionary\n    \n    PDF uses the colorspace specified in the JPEG2000 image.\n\n src/cairo-pdf-surface.c |    1 -\n 1 file changed, 1 deletion(-)\n\ncommit d58560bda8361bd25f1b2207ecfab4b331601045\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Fri Nov 27 21:04:55 2009 +0100\n\n    Satisfy make check\n\n src/cairo-stroke-style.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 16fffc5c05857896c03decdcebff7f1b5e582390\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Fri Nov 27 18:13:45 2009 +0100\n\n    Apply device transform in surface wrapper\n\n src/cairo-surface-wrapper.c |   56 +++++++++++++++++++++++++++++++++++--------\n 1 file changed, 46 insertions(+), 10 deletions(-)\n\ncommit 02d7e123d640d62db46ef03d7faecbc7598444e1\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Fri Nov 27 23:11:56 2009 +1030\n\n    PDF: Remove extraneous \\n from end of jpeg/jp2 data\n    \n    PDF requires a '\\n' between the end of stream data and the \"endstream\"\n    that is not included in the stream length. Ensure this is always added\n    in _close_stream where it is not included in the stream length.\n    \n    Previously the jpeg/jp2 embedding functions were adding the '\\n'. This\n    resulted in the '\\n' becoming part of the stream data.\n\n src/cairo-pdf-surface.c |    5 +----\n 1 file changed, 1 insertion(+), 4 deletions(-)\n\ncommit 4fc7bdaed651a5c19eb89dddd88808468e0e7eb8\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Thu Nov 26 21:14:20 2009 +1030\n\n    PS: Add some missing pdf-operators flushes\n\n src/cairo-ps-surface.c |   15 +++++++++++++++\n 1 file changed, 15 insertions(+)\n\ncommit 3f0c9afa9760a90065c67927c63770f9bb8abe99\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Wed Nov 25 15:57:46 2009 +0100\n\n    [clip] Don't ignore outermost clip when it clips everything\n    \n    Fixes testcases clip-stroke-no-op and clip-fill-no-op added in\n    0d8a04ef47426d87c7932f308a831e36b4ef7683\n\n src/cairo-clip.c |    5 +----\n 1 file changed, 1 insertion(+), 4 deletions(-)\n\ncommit 0d8a04ef47426d87c7932f308a831e36b4ef7683\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Wed Nov 25 10:48:39 2009 +0000\n\n    test: Add cases to exercise clipping after no-ops\n    \n    Whilst investigating:\n    \n      Bug 31788: SVG <line> with y1 == y2 and both with fractional\n                 part don't render\n      https://bugs.webkit.org/show_bug.cgi?id=31788\n    \n    I found that it can be reduced to a no-op clip following a no-op stroke\n    or fill. These conditions are exercised here and are shown to be a bug\n    introduced in the 1.9.x development series.\n\n test/Makefile.am               |    2 ++\n test/Makefile.sources          |    2 ++\n test/clip-fill-no-op.c         |   66 ++++++++++++++++++++++++++++++++++++++++\n test/clip-fill-no-op.ref.png   |  Bin 0 -> 152 bytes\n test/clip-stroke-no-op.c       |   66 ++++++++++++++++++++++++++++++++++++++++\n test/clip-stroke-no-op.ref.png |  Bin 0 -> 152 bytes\n 6 files changed, 136 insertions(+)\n\ncommit 26e9f149063b9e1fdb54fc54fccbefdf04a68190\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Tue Nov 10 23:09:56 2009 +0100\n\n    Improve stroking of densely dashed styles\n    \n    Add some auxiliary functions to cairo-stroke-style to compute\n    properties of the dashed patterns (period, \"on\" coverage) and to\n    generate approximations when the dash pattern is sub-tolerance.\n    These functions are used in cairo-path-stroke to simplify dash\n    patterns stroked by cairo.\n    Fixes dash-infinite-loop\n    See http://bugs.freedesktop.org/show_bug.cgi?id=24702\n\n src/cairo-path-stroke.c  |   24 +++++++---\n src/cairo-stroke-style.c |  119 ++++++++++++++++++++++++++++++++++++++++++++++\n src/cairoint.h           |   20 ++++++++\n 3 files changed, 157 insertions(+), 6 deletions(-)\n\ncommit 9c24288c820069e80b0feb5e99ece4c89e92c0c6\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Wed Nov 11 00:09:08 2009 +0100\n\n    Revert \"[test] Reorder dash-infinite-loop to not hit a runaway allocation.\"\n    \n    The infinite loop problem in _cairo_stroker_dash_start is solved by\n    commit ee02f3484899527380df94c00f40da87f41660ea, so hitting that\n    problem is not possible anymore and dash-infinite stroke always\n    hit the memory intensive loops.\n    This reverts commit 29432d3d32bc84ec4a2e1815a84e4ac2089138fe.\n\n test/dash-infinite-loop.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit cc2d2630669b084ec43e415d2806d94af00cf56c\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Tue Nov 10 22:58:59 2009 +0100\n\n    Improve stroke offset computation\n    \n    The stroke offset was forced to be positive because stroking code\n    wants to be able to decrement it until it finds the first dash to be\n    drawn. This can lead to long (almost infinite) loops if the offset is\n    positive but huge compared to the total length of the dash pattern.\n    Computing the offset this way guarantees that it's always the smallest\n    non-negative equivalent offset.\n\n src/cairo-gstate.c |   10 ++++------\n 1 file changed, 4 insertions(+), 6 deletions(-)\n\ncommit e436a57c22f2c2a87404cac27e2d5e3c404f8bf9\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Tue Nov 10 13:29:28 2009 +0100\n\n    Fix odd length dashing with negative offset\n    \n    When computing an equivalent offset, a wrong total dash length was\n    used when the dash elements were odd and more than 1.\n    Doubling the total dash length whenever they are odd is needed to\n    correctly compute the new offset.\n    Fixes dash-offset.\n\n src/cairo-gstate.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit b1a76394655793fd698a1281b00a3d049f9e70f5\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Tue Nov 10 13:09:50 2009 +0100\n\n    Add dash-offset test\n    \n    Stroking a dash pattern of odd length with a negative offset is broken\n    (except when the pattern is composed by a single dash).\n\n test/Makefile.am         |    1 +\n test/Makefile.sources    |    1 +\n test/dash-offset.c       |   95 ++++++++++++++++++++++++++++++++++++++++++++++\n test/dash-offset.ref.png |  Bin 0 -> 794 bytes\n 4 files changed, 97 insertions(+)\n\ncommit 7d8788b4ba5ae335a7bb77bd09e7ebd20376f632\nAuthor: Robert O'Callahan <robert at ocallahan.org>\nDate:   Mon Nov 9 18:58:59 2009 +0100\n\n    [quartz] Cleanup fallback source\n    \n    Remove the transformation code as it's useless and confusing.\n    The clipbox was transformed in a wrong way if the CTM\n    was not the base one, otherwise the transformation did nothing.\n    As long as _cairo_quartz_setup_fallback_source is only called\n    with the base CTM, no transformation needs to be performed on the\n    clipbox.\n    Patch by Robert O'Callahan, see Mozilla bug #507939.\n\n src/cairo-quartz-surface.c |    9 ---------\n 1 file changed, 9 deletions(-)\n\ncommit 248090e52b02f2b2dc424c6073489df32632b9d1\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Mon Nov 9 21:38:00 2009 +0100\n\n    [quartz] Fix compositing operators\n    \n    Fallback on SATURATE (since quartz doesn't support it) and on\n    blending operators (to be implemented using CGContextSetBlendMode,\n    after its availability has been assessed).\n    Workaround the different behaviour of quartz operators on alpha\n    masks.\n    Fixes text in clip-operator and clip-text, blend modes in\n    extended-blend, extended-blend-alpha, saturate in operator,\n    operator-alpha and surface-pattern-operator.\n    Changes the output of operator-alpha-alpha, but to really fix it\n    pure-alpha surfaces needs to be treated as alpha masks and not as\n    greyscale images.\n\n src/cairo-quartz-surface.c |  182 ++++++++++++++++++++++++++++++++++----------\n 1 file changed, 140 insertions(+), 42 deletions(-)\n\ncommit d44414191a685a23fd48bb32826366dfd113e1e5\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Mon Nov 9 14:21:40 2009 +0100\n\n    [quartz] Fix source-unbounded compositing of surface sources\n    \n    Surface sources were not respecting EXTEND_NONE when composited\n    because the part outside of the surface rectangle was not changed.\n    To correctly extend the source, it's sufficient to composite a\n    transparent rectangle with a hole in the region covered by the surface.\n    Fixes clip-unbounded and operator-source. Changes the output of\n    surface-pattern-operator.\n\n src/cairo-quartz-surface.c |   62 ++++++++++++++++++++------------------------\n 1 file changed, 28 insertions(+), 34 deletions(-)\n\ncommit 7ef611a67a2a68d0a50e2191804a8ef137c78b33\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Mon Nov 9 20:17:35 2009 +0100\n\n    [quartz] Fix stroking with unbounded operator\n    \n    Stroking was not fixed up correctly when the stroke trasform\n    was not the identity and when the stroked path was dashed.\n    Instead of building a mask image and clearing through it\n    (forgetting to use the CTM and the dash setting), the code now\n    simply fills the outside of the stroke with tranparent black.\n    Additionally this commit moves the CTM composition so that the invocation\n    of _cairo_quartz_setup_source is always done with the base CTM.\n    This commit changes the result of clip-stroke-unbounded (the clip\n    mask is now correctly aligned to the stroked path).\n\n src/cairo-quartz-surface.c |   36 +++++++++++++-----------------------\n 1 file changed, 13 insertions(+), 23 deletions(-)\n\ncommit 577ac4fc6d810cae7ff6d460fdea1886cd97258c\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Mon Nov 9 14:24:13 2009 +0100\n\n    [quartz] Fix implied colour of alpha-only surface sources\n    \n    If a fill colour was set, an alpha-only surface source would\n    have used that colour instead of black.\n\n src/cairo-quartz-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 8b25e4a7fd839ac399d14460d2596037134c9801\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Mon Oct 19 18:38:57 2009 +0200\n\n    [quartz] Improve unbounded operators fixup\n    \n    Don't allocate a colorspace and use a 16-bytes aligned stride and\n    an alpha-only image for the rendering of the fixup mask.\n\n src/cairo-quartz-surface.c |   16 +++++++---------\n 1 file changed, 7 insertions(+), 9 deletions(-)\n\ncommit ed8bdcd59863964a3eb9c49ca1a9bfd5f544350c\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Mon Oct 19 17:33:10 2009 +0200\n\n    [quartz] Improve A8 image handling\n    \n    A8 images were cosidered grayscale, whereas they should behave like\n    transparency mask. They are now alpha-only images and the stride is\n    16-bytes aligned, as suggested.\n    Fixes alpha-similar and mask-transformed-similar. Makes the patterns\n    behave (as expected) as masks in surface-pattern-operator.\n    Affects the output of operator-alpha-alpha, but the result is not\n    correct because of wrong compositing.\n\n src/cairo-quartz-surface.c |   21 +++++++++------------\n 1 file changed, 9 insertions(+), 12 deletions(-)\n\ncommit b32695c248b08289ce431d5f2fdab5205219c203\nAuthor: Robert O'Callahan <robert at ocallahan.org>\nDate:   Tue Oct 20 16:07:52 2009 +0200\n\n    [quartz] Fix gradient pattern painting\n    \n    CTM was changed and not restored when painting gradients.\n    Fixes the alignment of surface patterns in surface-pattern-operator.\n    Patch by Robert O'Callahan, see Mozilla bug #507939.\n\n src/cairo-quartz-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 1ce096657b2d38956e3229042f87aea42b0d0d8c\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Tue Nov 3 22:51:29 2009 +0100\n\n    Fix compilation on MacOS X\n    \n    Enable \"ld_preload\" (DYLD_INSERT_LIBRARIES + DYLD_FORCE_FLAT_NAMESPACE)\n    and build cairo-trace as a library instead of a module to make it\n    work also on MacOS X.\n\n configure.ac                    |   17 ++++++++++++++++-\n util/cairo-trace/Makefile.am    |   22 +++++++++++-----------\n util/cairo-trace/cairo-trace.in |    6 +++++-\n util/cairo-trace/trace.c        |    2 +-\n 4 files changed, 33 insertions(+), 14 deletions(-)\n\ncommit c181f9e9aeac375eed07aaab58d177e3476d5117\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Sat Nov 7 19:29:30 2009 +0100\n\n    Add new operator-alpha-alpha test\n    \n    Compositing of alpha-only sources is not throughly tested and\n    as a consequence the misbehaviour of some backends is not\n    shown by the test suite.\n    \n    [ickle: Added XFAILs for pdf, ps, svg.]\n\n src/cairo-xcb-surface.c                 |    4 -\n test/Makefile.am                        |    4 +\n test/Makefile.sources                   |    1 +\n test/operator-alpha-alpha.c             |  166 +++++++++++++++++++++++++++++++\n test/operator-alpha-alpha.pdf.xfail.png |  Bin 0 -> 3749 bytes\n test/operator-alpha-alpha.ps.xfail.png  |  Bin 0 -> 1338 bytes\n test/operator-alpha-alpha.ref.png       |  Bin 0 -> 3441 bytes\n test/operator-alpha-alpha.svg.xfail.png |  Bin 0 -> 838 bytes\n 8 files changed, 171 insertions(+), 4 deletions(-)\n\ncommit cee3a6169bdf7f64c126c487b443dcb7a9f0586a\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Nov 8 21:52:06 2009 +1030\n\n    Type1-subset: Append \"cleartomark\" operator for binary fonts that don't include it\n    \n    Type 1 fonts embedded in PDF may omit the fixed-content portion of the\n    font that contains the \"cleartomark\" operator.\n\n src/cairo-type1-subset.c |   22 +++++++++++++++-------\n 1 file changed, 15 insertions(+), 7 deletions(-)\n\ncommit d962d6bae2681ea1f3c9533a83c8902d76e81c6a\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Nov 8 21:46:16 2009 +1030\n\n    PDF: Include Type 1 fixed-content portion in the embedded font\n    \n    Some fonts may contain additional PostScript code after the\n    cleartomark.\n\n src/cairo-pdf-surface.c |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit ac59c7580894fc5fd424f7f6f8c1532d15048566\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Nov 8 21:38:58 2009 +1030\n\n    Type1-subset: Check for binary eexec data\n    \n    Type 1 fonts embedded in PDF have the the encrypted portion in binary\n    but the existing check for binary only works for Type 1 fonts in PFB\n    format.\n    \n    Add an additional check based on the first 4 characters of eexec data.\n    The Type 1 specification gurantees that at least one of the first 4\n    bytes of ciphertext is not an ASCII Hex character.\n\n src/cairo-type1-subset.c |    8 +++++++-\n 1 file changed, 7 insertions(+), 1 deletion(-)\n\ncommit a4a59be600cbe17f43afa20422f9d05f3a5d5b52\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sat Nov 7 14:36:49 2009 +1030\n\n    Type 1 subset: Don't add a new line when in binary mode\n    \n    At the end of the private dictionary a new line is appended so that\n    the trailing zeros will not exceed 80 columns. In hex mode (used for\n    PS embedding) extra white space is harmless as it is ignored when\n    parsing the ascii hex encoded data. But in binary mode (used for PDF\n    embedding) the new line must not be added as it corrupts the binary\n    data.\n    \n    https://bugs.launchpad.net/ubuntu/+source/cups/+bug/419143\n\n src/cairo-type1-subset.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit 9775f44436ffaf54931614d1867bcb7d147acd06\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Nov 5 10:13:34 2009 +0000\n\n    AUTHORS: Add Andrea Canciani\n\n AUTHORS |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit d51915f873da8d40740a908c86f02e972e358be9\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Wed Nov 4 16:15:48 2009 +0100\n\n    xlib: Fix double free\n    \n    Both _cairo_xlib_call_close_display_hooks and _cairo_xlib_screen_destroy\n    invoke _cairo_xlib_screen_close_display, which frees all the cached\n    GCs, but (if HAS_ATOMIC_OPS is undefined) doesn't mark them as freed,\n    thus freeing them agin upon the second invocation.\n\n src/cairo-xlib-screen.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 7c1424a315b677ca119d11b7ced1d4c969dde568\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Sun Oct 18 08:59:33 2009 +0200\n\n    quartz: Fix compilation\n    \n    The function _cairo_image_surface_create_for_content does not exist.\n    The correct name of the function is instead _cairo_image_surface_create_with_content.\n\n src/cairo-quartz-image-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 8a10c25c3f4036d17e24852e7dc970fa06fcb4af\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Nov 5 10:02:54 2009 +0000\n\n    test: Tweak Benjamin's xcomposite-projection\n    \n    Include Benjamin's advice on how to make the bug more visible inline\n    with the code.\n\n test/xcomposite-projection.c |   69 +++++++++++++++++++++++++++++-------------\n 1 file changed, 48 insertions(+), 21 deletions(-)\n\ncommit a9f37953c71e16f65122097462e51b035783a965\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Wed Nov 4 13:59:58 2009 +0100\n\n    [xlib] Use correct number when checking if points are out of range\n\n src/cairo-xlib-surface.c |   16 ++++++++--------\n 1 file changed, 8 insertions(+), 8 deletions(-)\n\ncommit aa1f245ea313a2f1f0dda3994f5b48073b0c385d\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Wed Nov 4 13:56:15 2009 +0100\n\n    [test] Add \"target=raster\" to test\n    \n    The test isn't useful on vector backends and fails there due to\n    antialiasing issues.\n\n test/xcomposite-projection.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 52afe9c77f2f54372fefeca50321a27e8dda0f63\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Wed Nov 4 11:15:57 2009 +0100\n\n    [xlib] Fix new Composite test\n    \n    When the reference point was tirggering _line_exceeds_16_16() and got\n    adjusted, the code failed to compute the srcX and srcY arguments for the\n    call to XRenderCompositeTrapezoids() correctly and caused the resulting\n    source image to be misaligned.\n\n src/cairo-fixed-private.h |    9 +++++++++\n src/cairo-xlib-surface.c  |   22 +++++++++++-----------\n 2 files changed, 20 insertions(+), 11 deletions(-)\n\ncommit 84bbf179c375622d2c7b4e21b1b8ce189b5a18f2\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Wed Nov 4 11:06:57 2009 +0100\n\n    [test] Add a test exposing bugs in XRenderComposite\n    \n    This test fills a slightly rotated surface slightly above the 0 line.\n    This hits some corner cases in the XRenderComposite path.\n    I discovered these issues while playing with video rendering onto the\n    canvas in HTML5 (both Webkit and Mozilla have this problem).\n    I used CAIRO_ANTIALIAS_NONE and a single-color source in the test to get\n    rid of aliasing issues in the output images. This makes some issues\n    slightly less visible, but still fails for all of them. If you want to\n    get a clearer view, disable it and use romedalen.png instead - it has\n    the same size as the red surface.\n    \n    (At least) 3 bugs are at work here:\n    - if _line_exceeds_16_16() triggers for the reference point, the\n      source surface will be misaligned.\n    - the intel driver seems to have an off-by-one bug on my i945 when\n      positioning the source surface, causing black seams at the top\n      (not visible in the test unless using romedalen.png) and on the left\n      of the image.\n    - My Xvfb fails completely in picture up/download in the xlib-fallback\n      path.\n\n test/Makefile.sources              |    1 +\n test/xcomposite-projection.c       |   81 ++++++++++++++++++++++++++++++++++++\n test/xcomposite-projection.ref.png |  Bin 0 -> 1112 bytes\n 3 files changed, 82 insertions(+)\n\ncommit 9b42b6156d9916e64e19f2ccb0b43f4d1df72e79\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Nov 2 12:50:45 2009 +0000\n\n    build: Add -pthread to real_pthread_CFLAGS\n\n build/configure.ac.system |   12 +++++++++++\n configure.ac              |   51 +++++++++++++++++++--------------------------\n 2 files changed, 34 insertions(+), 29 deletions(-)\n\ncommit 3eecf2f60c85e0195360ff3c3a54d58ceaa4a6f1\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Mon Nov 2 13:20:25 2009 +0100\n\n    sphinx: Add required pthread libs\n    \n    Try again, this time for real hopefully.\n\n configure.ac                  |    2 +-\n util/cairo-sphinx/Makefile.am |    4 ++--\n 2 files changed, 3 insertions(+), 3 deletions(-)\n\ncommit 837eb577b4707e447fafb0dfca378ecf4ea3fda5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Nov 2 11:56:29 2009 +0000\n\n    sphinx: Add required pthread libs\n    \n    Switching to pthread-stubs broke the build for sphinx on unbroken\n    platforms [those that do not unnecessarily link against -lpthreads].\n\n configure.ac                  |    7 +++++++\n util/cairo-sphinx/Makefile.am |    5 +++--\n 2 files changed, 10 insertions(+), 2 deletions(-)\n\ncommit 942a15ba9e85fa3297ad6e65270928ad3c1c0a42\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Mon Nov 2 12:51:14 2009 +0100\n\n    [test] Update upscale test to expose an Xlib failure\n    \n    By filling the background with grey, we can see that Xlib fills areas\n    with black that it shouldn't. Xlib therefore now fails this test.\n\n test/surface-pattern-scale-up.c           |    4 +++-\n test/surface-pattern-scale-up.pdf.ref.png |  Bin 2793 -> 3482 bytes\n test/surface-pattern-scale-up.ps2.ref.png |  Bin 943 -> 913 bytes\n test/surface-pattern-scale-up.ps3.ref.png |  Bin 943 -> 913 bytes\n test/surface-pattern-scale-up.ref.png     |  Bin 4061 -> 4017 bytes\n 5 files changed, 3 insertions(+), 1 deletion(-)\n\ncommit 19c411a5b8b84d31516d9c85642ad55ef5d29aba\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 30 07:58:45 2009 +0000\n\n    path: Skip any secondary degenerate line-to segments.\n    \n    Only the very first line-to following a move-to can have any\n    significance if degenerate whilst stroking, so skip all others.\n    In other words,\n    \n      0 0 m 0 0 l stroke\n    \n    produces a capped degenerate path (i.e a dot),\n    \n      0 0 m 0 0 l 0 0 l stroke\n    \n    produces the same degenerate stroke, and\n    \n      0 0 m 0 0 l 1 0 l stroke\n    \n    produce a horizontal line.\n\n src/cairo-path-fixed.c |   13 ++++++++++---\n 1 file changed, 10 insertions(+), 3 deletions(-)\n\ncommit 23bcf91748c4bb04c16e503b913da3bfc237463f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 30 07:49:56 2009 +0000\n\n    path: Misclassification of rectilinear after degenerate line-to\n    \n    Malte Nuhn reported hitting an assertion:\n    \n      cairo-path-stroke.c:1816: _cairo_rectilinear_stroker_line_to: Assertion `a->x == b->x || a->y == b->y' failed.\n      http://bugs.freedesktop.org/show_bug.cgi?id=24797\n    \n    when stroking an apparently simple path:\n    \n      0 8.626485 m\n      0 8.626485 l\n      5.208333 2.5 l\n      10.416667 2.5 l\n      15.625 2.5 l\n      20.833333 2.5 l\n      26.041667 2.5 l\n      31.25 2.5 l\n      36.458333 2.5 l\n      41.666667 2.5 l\n      46.875 2.5 l\n      52.083333 2.5 l\n      57.291667 2.5 l\n      62.5 2.5 l\n      67.708333 2.5 l\n      72.916667 2.5 l\n      78.125 2.5 l\n      83.333333 2.5 l\n      88.541667 2.5 l\n      93.75 2.5 l\n      98.958333 2.5 l\n      104.166667 2.5 l\n      109.375 2.5 l\n      114.583333 2.5 l\n      119.791667 2.5 l\n      125 2.5 l\n      stroke\n    \n    which upon reduction becomes:\n    \n      0.000000 8.625000 m 5.207031 2.500000 l 125.000000 2.500000 l stroke\n    \n    The bug is that after spotting a repeated line-to we move the previous\n    end-point without reclassifying the path, hence we miss the\n    non-rectilinear step.\n\n src/cairo-path-fixed.c |  101 +++++++++++++++++++++++++-----------------------\n 1 file changed, 52 insertions(+), 49 deletions(-)\n\ncommit 600dd833983bd85bf8aea487393ce156abb622bd\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Mon Sep 28 19:14:46 2009 +0930\n\n    Provide a builtin implementation of isspace() and isdigit()\n    \n    The glibc versions are slow in utf8 locales.\n\n src/cairo-output-stream.c |    7 +++----\n src/cairo-pdf-operators.c |    6 ++----\n src/cairo-type1-subset.c  |   16 +++++++---------\n src/cairoint.h            |   16 ++++++++++++++++\n 4 files changed, 28 insertions(+), 17 deletions(-)\n\ncommit f571356d346565cae34f08d12c584c4bd40921d6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 27 20:27:09 2009 +0000\n\n    xlib: Set has_component_alpha = FALSE for gradient Pictures\n    \n    Whilst creating the xlib surface wrapper for gradient Pictures, the\n    corresponding attributes require ComponentAlpha disabled.\n\n src/cairo-xlib-surface.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 1a80cd2aa00b232a9a2192a85d6264e44ffcbd69\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 26 11:05:38 2009 +0000\n\n    scaled-font: Fix documentation examples with incorrect derefs\n    \n    Bug 24730 -- New: misleading use cases in cairo_scaled_font_text_to_glyphs's docs\n    http://bugs.freedesktop.org/show_bug.cgi?id=24730\n    \n    An apparent copy'n'paste error from the code which has to deal with\n    indirect pointers crept into the documentation for the same functions.\n\n src/cairo-scaled-font.c |   20 ++++++++++----------\n 1 file changed, 10 insertions(+), 10 deletions(-)\n\ncommit f648fcd2f91ea5c9ec318c2c0573ee82ac8c0ac9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 26 11:02:16 2009 +0000\n\n    gitignore: Add forgotten cairo-perf-print\n\n perf/.gitignore |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 6911ba2f76d4ccdf228c029e2719461a72848824\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 26 11:01:01 2009 +0000\n\n    perf: Fix comparisons\n    \n    The sort order was unstable resulting in incorrect ordering dependent\n    upon libc version.\n\n perf/cairo-perf-diff-files.c |   22 +++++++++++++++-------\n 1 file changed, 15 insertions(+), 7 deletions(-)\n\ncommit f955a4cba7784f97ef1dd978158e98176e03baf0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Oct 25 11:04:17 2009 +0000\n\n    wideint: Protect 64_32_div for non-HAVE_UINT16_T systems\n    \n    Peter Clifton spotted that we failed to properly wrap\n    _cairo_int64_32_div() for systems without a native 64 bit type.\n\n src/cairo-wideint-private.h |    5 +++++\n 1 file changed, 5 insertions(+)\n\ncommit c701d7813b6d116c9db53f63f791928a407499c7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 23 14:42:48 2009 +0100\n\n    [pattern] Compute zero extents for empty patterns\n    \n    If the pattern is for example a repeating 0x0 image, then treat it as\n    having zero extents.\n    \n    This should workaround the bug presented here:\n    \n      https://bugs.freedesktop.org/show_bug.cgi?id=24693\n      Attached PDF crashes evince with a Floating point exception\n\n src/cairo-pattern.c |   27 ++++++++++++++++++++++++---\n 1 file changed, 24 insertions(+), 3 deletions(-)\n\ncommit 43a775f60da57206b194039cd5d8b6a735284c45\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Thu Oct 22 02:13:36 2009 +0300\n\n    [meta] Rename cairo_meta_surface_t to cairo_recording_surface_t.\n    \n    The new name is more descriptive than the rather opaque meta surface.\n    Discussed with vigour on the mailing list and #cairo:\n    \n    http://lists.cairographics.org/archives/cairo/2009-July/017571.html\n\n NEWS                                               |    7 +\n boilerplate/Makefile.win32.features                |   14 +-\n boilerplate/cairo-boilerplate-pdf.c                |    6 +-\n boilerplate/cairo-boilerplate-ps.c                 |    8 +-\n boilerplate/cairo-boilerplate-svg.c                |    8 +-\n boilerplate/cairo-boilerplate-test-surfaces.c      |    2 +-\n boilerplate/cairo-boilerplate-win32-printing.c     |    2 +-\n boilerplate/cairo-boilerplate.c                    |   46 +-\n boilerplate/cairo-boilerplate.h                    |    2 +-\n build/Makefile.win32.features-h                    |    2 +-\n configure.ac                                       |    2 +-\n doc/public/tmpl/cairo-surface.sgml                 |    2 +-\n perf/cairo-perf-micro.c                            |    4 +-\n perf/cairo-perf-trace.c                            |    4 +-\n src/Makefile.sources                               |    4 +-\n src/Makefile.win32.features                        |   14 +-\n src/cairo-analysis-surface.c                       |   48 +-\n src/cairo-meta-surface-private.h                   |  171 ---\n src/cairo-meta-surface.c                           | 1096 --------------------\n src/cairo-paginated-private.h                      |    6 +-\n src/cairo-paginated-surface-private.h              |    4 +-\n src/cairo-paginated-surface.c                      |   92 +-\n src/cairo-pattern.c                                |    2 +-\n src/cairo-pdf-surface.c                            |   56 +-\n src/cairo-ps-surface.c                             |   42 +-\n src/cairo-recording-surface-private.h              |  171 +++\n src/cairo-recording-surface.c                      | 1096 ++++++++++++++++++++\n src/cairo-scaled-font.c                            |   28 +-\n src/cairo-script-surface.c                         |   42 +-\n src/cairo-script.h                                 |    4 +-\n src/cairo-surface.c                                |   58 +-\n src/cairo-svg-surface.c                            |   46 +-\n src/cairo-tee-surface.c                            |    6 +-\n src/cairo-type3-glyph-surface.c                    |   14 +-\n src/cairo-types-private.h                          |    2 +-\n src/cairo-user-font.c                              |   42 +-\n src/cairo-vg-surface.c                             |   10 +-\n src/cairo-win32-printing-surface.c                 |   60 +-\n src/cairo-xml-surface.c                            |   32 +-\n src/cairo-xml.h                                    |    4 +-\n src/cairo.c                                        |    2 +-\n src/cairo.h                                        |   20 +-\n src/cairoint.h                                     |   12 +-\n test/Makefile.am                                   |   32 +-\n test/Makefile.sources                              |    2 +-\n test/cairo-test-trace.c                            |   48 +-\n test/cairo-test.c                                  |    6 +-\n test/meta-surface-pattern.c                        |  121 ---\n test/meta-surface-pattern.gl.argb32.ref.png        |  Bin 3130 -> 0 bytes\n test/meta-surface-pattern.pdf.argb32.ref.png       |  Bin 3908 -> 0 bytes\n test/meta-surface-pattern.pdf.rgb24.ref.png        |  Bin 3760 -> 0 bytes\n test/meta-surface-pattern.ps2.argb32.ref.png       |  Bin 3257 -> 0 bytes\n test/meta-surface-pattern.ps2.rgb24.ref.png        |  Bin 3873 -> 0 bytes\n test/meta-surface-pattern.ps3.argb32.ref.png       |  Bin 3257 -> 0 bytes\n test/meta-surface-pattern.ps3.rgb24.ref.png        |  Bin 3873 -> 0 bytes\n test/meta-surface-pattern.quartz.ref.png           |  Bin 4572 -> 0 bytes\n test/meta-surface-pattern.quartz.rgb24.ref.png     |  Bin 4063 -> 0 bytes\n test/meta-surface-pattern.ref.png                  |  Bin 3072 -> 0 bytes\n test/meta-surface-pattern.rgb24.ref.png            |  Bin 3162 -> 0 bytes\n test/meta-surface-pattern.svg.argb32.ref.png       |  Bin 3778 -> 0 bytes\n test/meta-surface-pattern.svg.rgb24.ref.png        |  Bin 3760 -> 0 bytes\n test/recording-surface-pattern.c                   |  121 +++\n test/recording-surface-pattern.gl.argb32.ref.png   |  Bin 0 -> 3130 bytes\n test/recording-surface-pattern.pdf.argb32.ref.png  |  Bin 0 -> 3908 bytes\n test/recording-surface-pattern.pdf.rgb24.ref.png   |  Bin 0 -> 3760 bytes\n test/recording-surface-pattern.ps2.argb32.ref.png  |  Bin 0 -> 3257 bytes\n test/recording-surface-pattern.ps2.rgb24.ref.png   |  Bin 0 -> 3873 bytes\n test/recording-surface-pattern.ps3.argb32.ref.png  |  Bin 0 -> 3257 bytes\n test/recording-surface-pattern.ps3.rgb24.ref.png   |  Bin 0 -> 3873 bytes\n test/recording-surface-pattern.quartz.ref.png      |  Bin 0 -> 4572 bytes\n .../recording-surface-pattern.quartz.rgb24.ref.png |  Bin 0 -> 4063 bytes\n test/recording-surface-pattern.ref.png             |  Bin 0 -> 3072 bytes\n test/recording-surface-pattern.rgb24.ref.png       |  Bin 0 -> 3162 bytes\n test/recording-surface-pattern.svg.argb32.ref.png  |  Bin 0 -> 3778 bytes\n test/recording-surface-pattern.svg.rgb24.ref.png   |  Bin 0 -> 3760 bytes\n test/scale-offset-similar.meta.xfail.png           |  Bin 10752 -> 0 bytes\n test/scale-offset-similar.recording.xfail.png      |  Bin 0 -> 10752 bytes\n util/cairo-fdr/fdr.c                               |    8 +-\n util/cairo-sphinx/sphinx.c                         |   38 +-\n util/cairo-trace/trace.c                           |   10 +-\n util/trace-to-xml.c                                |    4 +-\n 81 files changed, 1845 insertions(+), 1838 deletions(-)\n\ncommit df357f26ff72571acb840715efa4930054d4fdbe\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 16 16:48:54 2009 +0100\n\n    Support component-alpha.\n    \n    Within our code base we carried a few hacks to utilize the component\n    alpha capabilities of pixman, whilst not supporting the concept for our\n    own masks. Thus we were setting it upon the pixman_image_t that we\n    passed around through code that was blissfully unaware and indeed the\n    component-alpha property was forgotten (e.g. upgrading glyph masks).\n    \n    The real issue is that without explicit support that a pattern carries\n    subpixel masking information, that information is lost when using that\n    pattern with composite. Again we can look at the example of compositing\n    a sub-pixel glyph mask onto a remote xlib surface for further failure.\n\n src/cairo-ft-font.c              |    5 ---\n src/cairo-gl-glyphs.c            |   23 +++++++++---\n src/cairo-gl-surface.c           |   18 ++++++----\n src/cairo-gstate.c               |   17 +++++----\n src/cairo-image-surface.c        |   55 +++++++++++++++++++++--------\n src/cairo-pattern.c              |   22 +++++++++---\n src/cairo-pdf-surface.c          |   10 ++++--\n src/cairo-scaled-font.c          |   14 ++++----\n src/cairo-svg-surface.c          |   10 ++++--\n src/cairo-types-private.h        |   71 ++++++++++++++++++++++++++++++++++++++\n src/cairo-win32-font.c           |   10 +++---\n src/cairo-xlib-surface-private.h |    1 +\n src/cairo-xlib-surface.c         |   43 ++++++++++++++++++-----\n src/cairoint.h                   |   69 +-----------------------------------\n 14 files changed, 234 insertions(+), 134 deletions(-)\n\ncommit f0cd20e6cec445eb627c2708c2230c8bad1b64ce\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 21 10:36:27 2009 +0100\n\n    [gl] Do not clear internal surfaces.\n    \n    Create a scratch surface that will be initialised as required for\n    internal use. External surfaces, i.e. those returned to the user, are\n    cleared as normal.\n\n src/cairo-gl-surface.c |   46 +++++++++++++++++++++++++++++++---------------\n 1 file changed, 31 insertions(+), 15 deletions(-)\n\ncommit 7c9ebd4a852ad709e57ed48b9610db00de79de7e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 21 09:04:30 2009 +0100\n\n    Make the surface->is_clear logic common\n    \n    A nasty surprise whilst profiling is that performing redundant clear\n    operations is extremely painful. We can mitigate this somewhat by\n    tracking the cleared state of surfaces and skipping repeated attempts to\n    clear a surface.\n\n src/cairo-gl-surface.c      |    2 ++\n src/cairo-image-surface.c   |   47 ++----------------------------\n src/cairo-surface-private.h |    6 ++--\n src/cairo-surface.c         |   66 ++++++++++++++++++++++++++++++++++++++-----\n src/cairoint.h              |    1 -\n 5 files changed, 68 insertions(+), 54 deletions(-)\n\ncommit 723055722f1d9a133fe9e78bb19165f2c7be720e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 21 10:40:51 2009 +0100\n\n    [doc] Add comments on when surfaces are cleared on construction.\n    \n    Or perhaps, more importantly, when the contents are left unmodified.\n\n src/cairo.h |    9 +++++++++\n 1 file changed, 9 insertions(+)\n\ncommit cef8194178b01eaa2d10c1ba8291a9a4c5a6d302\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Tue Oct 20 14:37:28 2009 +0200\n\n    [test] Add surface-pattern-operator\n    \n    Test the results of compositing ALPHA and COLOR_ALPHA surfaces\n    with different operators.\n\n test/Makefile.am                                  |    4 +\n test/Makefile.sources                             |    1 +\n test/surface-pattern-operator.argb32.ref.png      |  Bin 0 -> 5217 bytes\n test/surface-pattern-operator.c                   |  117 +++++++++++++++++++++\n test/surface-pattern-operator.rgb24.ref.png       |  Bin 0 -> 1942 bytes\n test/surface-pattern-operator.xlib.argb32.ref.png |  Bin 0 -> 5171 bytes\n test/surface-pattern-operator.xlib.rgb24.ref.png  |  Bin 0 -> 1913 bytes\n 7 files changed, 122 insertions(+)\n\ncommit 710303ef15b9a1bf73b2b07b7aa51ec816d0aa07\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 19 10:42:51 2009 +0100\n\n    [test] Update rotate-image-surface-paint\n    \n    Update this test case so the background is not the default border colour\n    so that we spot when the backend pads out the transformed image surface.\n\n test/Makefile.am                              |    5 +-\n test/rotate-image-surface-paint.c             |   78 ++++++++++++++-----------\n test/rotate-image-surface-paint.pdf.xfail.png |  Bin 217 -> 358 bytes\n test/rotate-image-surface-paint.ps.ref.png    |  Bin 0 -> 236 bytes\n test/rotate-image-surface-paint.ps2.ref.png   |  Bin 212 -> 0 bytes\n test/rotate-image-surface-paint.ps3.ref.png   |  Bin 212 -> 0 bytes\n test/rotate-image-surface-paint.ref.png       |  Bin 191 -> 220 bytes\n test/rotate-image-surface-paint.svg.xfail.png |  Bin 0 -> 387 bytes\n 8 files changed, 45 insertions(+), 38 deletions(-)\n\ncommit ea39f0302a936711043aa6834ba0ab487736572b\nAuthor: Luo Jinghua <sunmoon1997@gmail.com>\nDate:   Mon Oct 19 22:21:00 2009 +0800\n\n    atomic: correct libatomic_ops version of _cairo_atomic_int_cmpxchg\n    \n    AO_compare_and_swap_full() doesn't have the same semantic as\n    _cairo_atomic_int_cmpxchg(). The former returns a TRUE on success\n    FALSE otherwise while the later returns the atomic value.\n\n src/cairo-atomic-private.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit a2254e56474fcdf5f25232812cdbef30a2b5ea60\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Sun Oct 18 22:12:13 2009 +0200\n\n    [gstate] Apply target device offsets to patterns immediately\n    \n    Previously target device offsets were applied in cairo-surface.c which\n    could cause bugs when paths were taken as fallbacks, as for example\n    pointed out by ade55037ffa596b690c6a1051394589f76eb1f48 and quick-fixed\n    by 79190d89853958ee8252440d35a662fabf122afd. The quick-fix is now\n    unnecessary and was removed.\n\n src/cairo-gstate.c           |    4 +++\n src/cairo-surface-fallback.c |   41 +++++------------------------\n src/cairo-surface.c          |   59 ------------------------------------------\n 3 files changed, 10 insertions(+), 94 deletions(-)\n\ncommit 4b720d56db72d314b3b7cedb05a53321b1d0adbe\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Sun Oct 18 21:32:10 2009 +0200\n\n    [clip] Remove non-existing functions from header\n\n src/cairo-clip-private.h |    9 ---------\n 1 file changed, 9 deletions(-)\n\ncommit cacf9ccedffa0c804a56c76c8ab17bf81831b621\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Sun Oct 18 21:30:22 2009 +0200\n\n    [path] Fix compiler warnings\n\n src/cairo-path-fill.c |    7 +++----\n 1 file changed, 3 insertions(+), 4 deletions(-)\n\ncommit a70705b2ede8c0dc401f28405641e70f8a6d8d92\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Sun Oct 18 21:30:06 2009 +0200\n\n    [xlib] Fix compiler warnings\n\n src/cairo-xlib-screen.c |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit 96117c1212be2bf39a300a212dec85466f49f31e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Oct 17 10:36:10 2009 +0100\n\n    [test] Add radial-gradient-source\n    \n    ranma42 found a bug in compositing with a radial gradient using the\n    SOURCE operator with EXTEND_NONE, as exercised here.\n\n test/Makefile.am                           |    2 +\n test/Makefile.sources                      |    1 +\n test/radial-gradient-source.argb32.ref.png |  Bin 0 -> 272428 bytes\n test/radial-gradient-source.c              |  115 ++++++++++++++++++++++++++++\n test/radial-gradient-source.rgb24.ref.png  |  Bin 0 -> 193364 bytes\n 5 files changed, 118 insertions(+)\n\ncommit 54df07a3da2bfbbdbe2dde92ca298ac0d7b8d255\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 16 10:11:41 2009 +0100\n\n    [surface] Don't AND in the desired content.\n    \n    Gah, that was a horrible mistake. It was a flawed hack to create Pixmaps\n    of the correct depth when cloning patterns for blitting to the xlib\n    backend. However, it had the nasty side-effect of discarding alpha when\n    targeting Window surfaces. The correct solution is to simply correct the\n    Pixmap of the desired depth and render a matching pattern onto the\n    surface - i.e. a reversal the current acquire -> clone. See the\n    forthcoming revised xcb backend on how I should have done it originally.\n\n src/cairo-directfb-surface.c         |    2 --\n src/cairo-gl-surface.c               |    4 +---\n src/cairo-glitz-surface.c            |    3 ---\n src/cairo-image-surface.c            |    4 ----\n src/cairo-pattern.c                  |   15 +++------------\n src/cairo-quartz-surface.c           |    1 -\n src/cairo-surface-fallback-private.h |    1 -\n src/cairo-surface-fallback.c         |    3 +--\n src/cairo-surface.c                  |   14 ++++----------\n src/cairo-xlib-surface.c             |   18 +-----------------\n src/cairoint.h                       |    4 ----\n src/test-fallback-surface.c          |    1 -\n src/test-fallback16-surface.c        |    2 --\n 13 files changed, 10 insertions(+), 62 deletions(-)\n\ncommit 6a19a82efd3afe8fb8bd30e5362b247de8efe159\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 16 08:43:21 2009 +0100\n\n    [image] Clone the format for a similar surface with identical content\n    \n    Honour the incoming surface format when we are asked to create a similar\n    surface with identical content. The goal of\n    cairo_surface_create_similar() is to create an intermediate with similar\n    characteristics to the original that can be used in place of the\n    original and be quick to copy to the original. Matching the format for\n    the same content, ensures that the blits between the two need only be a\n    memcpy.\n\n src/cairo-image-surface.c |   11 +++++++++--\n 1 file changed, 9 insertions(+), 2 deletions(-)\n\ncommit ed94d7caad6b851f6f80fa4d67441ad0387a8cd4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 16 08:38:24 2009 +0100\n\n    [fallback] Create intermediate surface with same content.\n    \n    The goal is to create a similar surface with an identical format to\n    maximise performance in the subsequent blit, e.g. the xlib backend could\n    make the similar surface with an identical depth and so use the core\n    protocol, or the image surface could indeed make an identical copy so\n    that pixman only has to do a fast memcpy. As there is no direct method\n    to specify such a clone, we ask the backend for a similar surface of\n    identical content, and trust that the semantics are clear enough for the\n    intent to obvious.\n\n src/cairo-surface-fallback.c |   12 +++++++-----\n 1 file changed, 7 insertions(+), 5 deletions(-)\n\ncommit c739940137c4ffc6cc727ea30afc0e92f7ab1e80\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Thu Oct 15 16:24:44 2009 -0700\n\n    Increment version to 1.9.5\n    \n    Just after the 1.9.4 snapshot.\n\n cairo-version.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit ad6334b9870c63e641b531d6e910c084b587d0f9\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Thu Oct 15 15:33:20 2009 -0700\n\n    Add mising images to REFERENCE_IMAGES list.\n    \n    Again, the kind of thing that only gets fixed at release time.\n    But at least we have a nice test for this.\n\n test/Makefile.am |    8 ++++++++\n 1 file changed, 8 insertions(+)\n\ncommit cdad5e10768978b11088f82858a1e6e0037dc0a7\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Thu Oct 15 14:58:39 2009 -0700\n\n    Mark in-fill-empty-trapezoid as an XFAIL test.\n    \n    Otherwise, it was disrupting my attempts to release a snapshot, (since\n    it doesn't respect CAIRO_TEST_TARGET=\" \" and not run like most of the\n    tests do).\n\n test/Makefile.am               |    5 +++++\n test/in-fill-empty-trapezoid.c |    4 ++--\n 2 files changed, 7 insertions(+), 2 deletions(-)\n\ncommit b0f309abb33fb7e068199c941835af0217d8d1fc\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Thu Oct 15 14:40:22 2009 -0700\n\n    Update version to 1.9.4\n    \n    In preparation for the 1.9.4 snapshot.\n\n cairo-version.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 3b113275f8b081685227fc073c03f64bb1a229d3\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Thu Oct 15 14:17:30 2009 -0700\n\n    Remove stale references to non-existant reference images.\n    \n    This is just one of those things that we don't get right until\n    someone tries running \"make distcheck\".\n\n test/Makefile.am |    7 -------\n 1 file changed, 7 deletions(-)\n\ncommit 37078b262a268179f8b7a3dfdc263e1a403daa7d\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Thu Oct 15 14:11:04 2009 -0700\n\n    NEWS: Update with correct data for 1.9.4 snapshot\n\n NEWS |    3 +--\n 1 file changed, 1 insertion(+), 2 deletions(-)\n\ncommit d5609ca04ecc5f5e3d5cef8ca0e67fa98cd653de\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Thu Oct 15 17:47:33 2009 +0300\n\n    [build] Check compiler flags using AC_TRY_LINK instead of AC_TRY_COMPILE.\n    \n    Turns out we were passing suncc warning suppression flags to gcc\n    by mistake since -e<entry point> is actually a valid option for\n    gcc.  This caused the -erroff=E_ENUM_TYPE_MISMATCH_ARG and other\n    -erroff options to be passed to the linker.  In the normal case\n    of a GNU ld linker this doesn't matter since it ignores bogus\n    entry points, but the GNU gold linker replaces a bogus entry\n    point with NULL.  This patch makes the CAIRO_CC_TRY_FLAG()\n    check stricter by testing that the flag doesn't interfere with\n    linking executables.\n\n build/aclocal.cairo.m4 |   19 ++++++++-----------\n 1 file changed, 8 insertions(+), 11 deletions(-)\n\ncommit 79190d89853958ee8252440d35a662fabf122afd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 15 14:05:37 2009 +0100\n\n    [surface] Avoid double application of device offset when calling fill()\n    \n    _cairo_surface_fallback_paint() attempts to avoid a clipped operation if\n    we can convert the paint into a fill of the clipmask. However by calling\n    _cairo_surface_fill() we incur a double application of device offset to\n    the source, triggering various failures.\n    \n    Company spotted this and managed to extract an excellent minimal test\n    case, test/clip-device-offset. This commit fixes that failure.\n\n src/cairo-surface-fallback.c |   41 +++++++++++++++++++++++++++++++++++------\n 1 file changed, 35 insertions(+), 6 deletions(-)\n\ncommit ade55037ffa596b690c6a1051394589f76eb1f48\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Thu Oct 15 13:19:11 2009 +0100\n\n    [test] Add clip-device-offset\n    \n    Exercises a bug demonstrated by WebKit with clipping + device offsets.\n\n test/Makefile.am                       |    2 +\n test/Makefile.sources                  |    1 +\n test/clip-device-offset.argb32.ref.png |  Bin 0 -> 175 bytes\n test/clip-device-offset.c              |   79 ++++++++++++++++++++++++++++++++\n test/clip-device-offset.rgb24.ref.png  |  Bin 0 -> 168 bytes\n 5 files changed, 82 insertions(+)\n\ncommit dac73d260a9b9a848bb97436ad84081c51629511\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 15 12:18:47 2009 +0100\n\n    [build] Link against pthread-stubs\n    \n    Avoid pulling in the real pthread library if the application is single\n    threaded and not using pthreads, by linking against pthread-stubs\n    instead.\n\n build/configure.ac.features    |    1 +\n configure.ac                   |    8 +++++++-\n src/cairo-mutex-impl-private.h |    2 +-\n test/Makefile.am               |    4 ++++\n test/cairo-test-trace.c        |   10 +++++-----\n test/cairo-test.c              |    6 +++---\n util/cairo-trace/Makefile.am   |    2 +-\n 7 files changed, 22 insertions(+), 11 deletions(-)\n\ncommit ef9286751d8346ecb803bfb5916581ee4dfc84db\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 13 16:10:39 2009 +0100\n\n    [atomic] Fallback to libatomic-ops-dev\n    \n    Use libatomic-ops-dev in preference to mutex-based atomics, if we do not\n    have the builtin atomic intrinsics available.\n\n build/aclocal.cairo.m4     |   10 ++++++++++\n src/cairo-atomic-private.h |   41 ++++++++++++++++++++++++++++++++++++-----\n src/cairo-surface.c        |    4 ++--\n src/cairo-xlib-private.h   |    2 +-\n src/cairo-xlib-screen.c    |   16 +++++++++-------\n src/cairo.c                |   10 +++++-----\n 6 files changed, 63 insertions(+), 20 deletions(-)\n\ncommit d85eda97dd9116f51e0255b29652f4b52ba4f8e9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 13 14:14:55 2009 +0100\n\n    [pattern] Compute extents for gradients\n    \n    As noted in the comments we could also compute the pattern extents for\n    gradients with CAIRO_EXTEND_NONE under certain circumstances, i.e.\n    radial gradients and device axis aligned linear gradients.\n\n src/cairo-pattern.c |  184 +++++++++++++++++++++++++++++++++++----------------\n 1 file changed, 126 insertions(+), 58 deletions(-)\n\ncommit 3a83bc8617dae3cc2bfea862f252338463871648\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Fri Oct 2 23:28:10 2009 +0930\n\n    PDF: Fix regression caused by 1ae5a419\n    \n        Bug 24240 acroread prints error message when printing\n\n src/cairo-pdf-surface.c |   12 ++++++++----\n 1 file changed, 8 insertions(+), 4 deletions(-)\n\ncommit 91a4f59f135dd42a28e14be55d1f08712c0c3097\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Fri Oct 2 23:11:54 2009 +0930\n\n    PDF: Fix regression caused by 1ae5a419\n    \n    Bug 24240 first char missing when printing a PDF.\n\n src/cairo-scaled-font-subsets.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 39284159234d5318c90fa3a72178cd3d14fe0fbb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 30 20:11:12 2009 +0100\n\n    [boilerplate/xcb] Fix pixmap depth\n    \n    All the error checking, finally pointed out that I was creating a pixmap\n    with the wrong depth! Oops.\n\n boilerplate/cairo-boilerplate-xcb.c |   19 ++++++++++++++++---\n 1 file changed, 16 insertions(+), 3 deletions(-)\n\ncommit e9bc2180d73acc7133d715ed4380ed20fb4364c0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 30 19:50:44 2009 +0100\n\n    [xcb] Deferred error checking.\n    \n    XCB avoids the dreaded abort on XError mechanism by forcing the client\n    to perform deferred error checking. So do so. This allows us to combine\n    the fire-and-forget rendering model with accurate error checking,\n    without killing the client or mixing our errors with theirs.\n    \n    XCB for the win!\n\n boilerplate/cairo-boilerplate-xcb.c |   17 +\n src/cairo-freelist-private.h        |    5 +\n src/cairo-freelist.c                |   33 ++\n src/cairo-xcb-surface.c             |  712 +++++++++++++++++++++++------------\n 4 files changed, 521 insertions(+), 246 deletions(-)\n\ncommit 8e4e0aa7ee5b4e0963409cda825705a09aae61e1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 30 17:50:09 2009 +0100\n\n    [boilerplate/xcb] Check for connection errors during test\n\n boilerplate/cairo-boilerplate-xcb.c |   51 ++++++++++++++++-----\n test/cairo-test.c                   |   86 +++++++++++++++++------------------\n 2 files changed, 83 insertions(+), 54 deletions(-)\n\ncommit 395555b116a497c99b9e8365a202377c344c0c45\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 30 00:37:36 2009 +0100\n\n    [xlib] Suppress warning that should never have been.\n\n src/cairo-xlib-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 42ea356c0393288eea16eb5c591fa51009f85cb9\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Wed Sep 30 21:21:42 2009 +0930\n\n    Fix truetype subset crash\n    \n    Bug 24213\n\n src/cairo-truetype-subset.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 6809e1216119e16c5be236418dc560d2e9bf854d\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Wed Sep 30 08:54:19 2009 +0200\n\n    [API] Make _cairo_meta_surface_replay() private again\n    \n    Replaying a meta surface can be achieved by using it as a source for a\n    cairo_paint() so exporting a separate API is unnecesary and confusing.\n    So after consulting Chris and Carl, we decided to remove the function\n    again.\n\n NEWS                             |    1 -\n src/cairo-meta-surface-private.h |    5 ++++-\n src/cairo-meta-surface.c         |   39 +++++++++++++++++---------------------\n src/cairo-paginated-surface.c    |    4 ++--\n src/cairo-script-surface.c       |    6 +++---\n src/cairo-surface.c              |    4 ++--\n src/cairo-svg-surface.c          |    2 +-\n src/cairo-type3-glyph-surface.c  |    4 ++--\n src/cairo-user-font.c            |    2 +-\n src/cairo-vg-surface.c           |    2 +-\n src/cairo-xml-surface.c          |    2 +-\n src/cairo.h                      |    4 ----\n test/cairo-test-trace.c          |    8 ++++++--\n util/cairo-trace/trace.c         |   22 ---------------------\n 14 files changed, 40 insertions(+), 65 deletions(-)\n\ncommit f8c49b4187a32b60408b23b2c2abce1778a8dc95\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 29 03:02:40 2009 +0100\n\n    [xlib] XRequest bread crumbing\n    \n    Add bread crumbs in the form of NoOperations that can be parsed by\n    xtrace and very useful when debugging protocol/server errors.\n\n src/cairo-xlib-surface.c |   57 ++++++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 57 insertions(+)\n\ncommit 1c4f61ec5068a5935eb6d5dd1d6f2c0275b70529\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 29 03:01:37 2009 +0100\n\n    [tessellator] Invalid conversion of list head to edge.\n    \n    When scanning for collinear right edges, we need to check that we do not\n    go beyond the end of the array.\n\n src/cairo-bentley-ottmann-rectangular.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit f23ae97e307f00a79cbf2e01f9ca20da29ea87c3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Sep 24 16:30:57 2009 +0100\n\n    [perf] Support parsing reports from stdin\n\n perf/cairo-perf-compare-backends.c |   22 ++++++++++++----------\n perf/cairo-perf-report.c           |   29 +++++++++++++++++++----------\n 2 files changed, 31 insertions(+), 20 deletions(-)\n\ncommit 50163a9fafa77dd1135ca5b6b03c7ec5619687c1\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Tue Sep 29 00:23:12 2009 +0200\n\n    [xlib] Set proper bpp when computing format from masks\n    \n    Fixing omission in caa9eed4646e78a62ffb49d9c4f48c0b351c7a7f\n\n src/cairo-xlib-surface.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit a160c8c4009e069db53bec79abd8926231de9a7f\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Mon Sep 28 23:52:14 2009 +0200\n\n    [xlib] Handle 24bpp formats during dithering\n\n src/cairo-xlib-surface.c |   10 ++++++++++\n 1 file changed, 10 insertions(+)\n\ncommit 9e89de813516c48baed67a4d18325971cd42cd4a\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Mon Sep 28 23:51:14 2009 +0200\n\n    [image] Fix masks computation for BGRx format\n    \n    Patch originally by Mark Kettenis\n\n src/cairo-image-surface.c |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit 4b2c74e28531e403a9538f20a3ace7b114f9bbae\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Mon Sep 28 22:57:10 2009 +0930\n\n    PS: Use standard page size names for some common sizes\n    \n    Some PS viewers like gv use the label in the %PageMedia DSC comment as\n    the displayed page size.\n    \n    The page names and sizes were obtained from the list at:\n    \n    http://www.gnu.org/software/gv/manual/html_node/Paper-Keywords-and-paper-size-in-points.html\n\n src/cairo-ps-surface.c |   66 +++++++++++++++++++++++++++++++++++++++++++++---\n 1 file changed, 62 insertions(+), 4 deletions(-)\n\ncommit db5e3db0a9b218bebad6921a95d5244047050348\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Fri Sep 25 23:07:56 2009 +0930\n\n    PS: Add DocumentMedia/PageMedia DSC comments\n    \n    Provide default DocumentMedia and PageMedia DSC comments if the user\n    does not specify them using cairo_ps_surface_dsc_comment(). This is\n    required so that PostScript viewers such as gv use the correct page\n    size.\n\n src/cairo-ps-surface-private.h |    1 +\n src/cairo-ps-surface.c         |   88 ++++++++++++++++++++++++++++++++++++++++\n 2 files changed, 89 insertions(+)\n\ncommit caa9eed4646e78a62ffb49d9c4f48c0b351c7a7f\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Thu Sep 24 23:42:05 2009 +0200\n\n    [xlib] Handle case in draw_image() where pixman format is not RGB\n    \n    When an image cannot be expressed as masks, its data cannot be used in\n    an XImage. In that case, we use pixman to copy the image to the desired\n    format.\n\n src/cairo-xlib-surface.c |   50 ++++++++++++++++++++++++++++++++++++++++------\n 1 file changed, 44 insertions(+), 6 deletions(-)\n\ncommit 9f5fe6711566ee34afe210f271f1c5a061efa745\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Thu Sep 24 22:57:39 2009 +0200\n\n    [image] Return cairo_bool_t from _pixman_format_to_masks\n    \n    Return FALSE when the pixman format does not support ARGB masks. In\n    particular, return FALSE for YUV formats.\n\n src/cairo-image-surface.c |   21 ++++++++++-----------\n src/cairoint.h            |    2 +-\n 2 files changed, 11 insertions(+), 12 deletions(-)\n\ncommit 120247ac55d92d9c9b24fad45c765d16e692f355\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Thu Sep 24 23:02:38 2009 +0930\n\n    Add EPS test\n    \n    This test demonstrates a regression in the EPS output since 1.8.8.\n    The ps-eps.ref.eps was created with 1.8.8.\n\n test/Makefile.am      |    2 ++\n test/Makefile.sources |    1 +\n test/ps-eps.c         |   85 +++++++++++++++++++++++++++++++++++++++++++++++++\n test/ps-eps.ref.eps   |   84 ++++++++++++++++++++++++++++++++++++++++++++++++\n 4 files changed, 172 insertions(+)\n\ncommit c8a4f486712eba4ad0ccbf5ae3b18920137d5b1b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 23 18:08:34 2009 +0100\n\n    [image] Do not trust user supplied data to be clear\n    \n    Gah, more important than the whitespace was the reversal of is_clear...\n\n src/cairo-image-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 03bce099eae68643979e5742b2703b2b2e835cca\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 23 17:56:00 2009 +0100\n\n    [image] Tweak coding style\n    \n    Whitespace spam.\n\n src/cairo-image-surface.c |    9 +++++----\n 1 file changed, 5 insertions(+), 4 deletions(-)\n\ncommit ab558fa843accc440686f7b8eda197277a6a4eb2\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Wed Sep 23 17:40:17 2009 +0200\n\n    [image] Move setting of is_clear to _create_with_pixman_format()\n    \n    Simplifies code and ensures other users of that function don't run into\n    the same bug.\n\n src/cairo-image-surface.c |   18 ++++++------------\n 1 file changed, 6 insertions(+), 12 deletions(-)\n\ncommit 07ee9cfbf07deba228e73d26b419a4e130de24e3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 23 15:33:23 2009 +0100\n\n    [image] Do assumption initial user data is cleared.\n    \n    Benjamin Otte pointed out the error of my ways that a clear on a\n    cairo_image_surface_create_for_data() was not working. This is because I\n    modified the image surface to skip clears when it knows the target data\n    has been cleared. This flag must be reset when the user interacts with\n    the surface, such as providing the initial surface data.\n\n src/cairo-image-surface.c |   26 ++++++++++++++++++++++----\n 1 file changed, 22 insertions(+), 4 deletions(-)\n\ncommit 9948b5180aa4312b3184d9ba46e9ad6f0d8e700c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 22 18:20:03 2009 +0100\n\n    [test] Revamp surface-source\n    \n    Include a translucent region in the source that exercises the xlib bug\n    that I'm trying to fix. Hmm.\n\n test/Makefile.am                            |   18 ++++++++-----\n test/glitz-surface-source.argb32.ref.png    |  Bin 0 -> 377 bytes\n test/glitz-surface-source.ref.png           |  Bin 268 -> 0 bytes\n test/glitz-surface-source.rgb24.ref.png     |  Bin 0 -> 301 bytes\n test/image-surface-source.argb32.ref.png    |  Bin 0 -> 377 bytes\n test/image-surface-source.ref.png           |  Bin 332 -> 0 bytes\n test/image-surface-source.rgb24.ref.png     |  Bin 0 -> 301 bytes\n test/pdf-surface-source.argb32.ref.png      |  Bin 0 -> 377 bytes\n test/pdf-surface-source.ref.png             |  Bin 268 -> 0 bytes\n test/pdf-surface-source.rgb24.ref.png       |  Bin 0 -> 301 bytes\n test/ps-surface-source.argb32.ref.png       |  Bin 0 -> 377 bytes\n test/ps-surface-source.ref.png              |  Bin 268 -> 0 bytes\n test/ps-surface-source.rgb24.ref.png        |  Bin 0 -> 301 bytes\n test/quartz-surface-source.argb32.ref.png   |  Bin 0 -> 377 bytes\n test/quartz-surface-source.ref.png          |  Bin 332 -> 0 bytes\n test/quartz-surface-source.rgb24.ref.png    |  Bin 0 -> 301 bytes\n test/surface-source.c                       |   37 +++++++++++++++++++++++++--\n test/svg-surface-source.argb32.ref.png      |  Bin 0 -> 377 bytes\n test/svg-surface-source.ref.png             |  Bin 268 -> 0 bytes\n test/svg-surface-source.rgb24.ref.png       |  Bin 0 -> 301 bytes\n test/test-fallback16-surface-source.ref.png |  Bin 268 -> 0 bytes\n test/xlib-surface-source.argb32.ref.png     |  Bin 0 -> 377 bytes\n test/xlib-surface-source.ref.png            |  Bin 268 -> 0 bytes\n test/xlib-surface-source.rgb24.ref.png      |  Bin 0 -> 301 bytes\n 24 files changed, 47 insertions(+), 8 deletions(-)\n\ncommit 941d3693fac831c4ce8c61cbac7c77b566b97611\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 22 14:43:45 2009 +0100\n\n    [test] Exercise push-group-color.\n    \n    Hunting for a known bug in the xlib backend where it invalidly converts\n    an argb32 source to rgb24. However, this does not appear to be that bug,\n    but still a useful exercise nevertheless.\n\n test/Makefile.am                   |    2 +\n test/Makefile.sources              |    1 +\n test/push-group-color.c            |  141 ++++++++++++++++++++++++++++++++++++\n test/push-group-color.ref.png      |  Bin 0 -> 2902 bytes\n test/push-group-color.xlib.ref.png |  Bin 0 -> 2964 bytes\n 5 files changed, 144 insertions(+)\n\ncommit 30f45ce5f7d639dd5a0b60f544b3535e3bc2105d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 22 15:15:47 2009 +0100\n\n    [gl] Handle an absent visual.\n    \n    If we cannot find the correct visual for the fbconfig, return an error\n    instead of crashing. The difference is subtle, granted.\n\n src/cairo-gl-surface.c  |    8 ++++++++\n src/cairo-glx-context.c |    7 ++++---\n 2 files changed, 12 insertions(+), 3 deletions(-)\n\ncommit e74cb7fa3eb9a9bcdeb298d969b70fd99ba50f3d\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Tue Sep 22 22:44:34 2009 +0930\n\n    win32-printing: correct the use of the CAIRO_HAS_WIN32_FONT #ifdef\n    \n    it was wrapping code required for non windows fonts.\n\n src/cairo-win32-printing-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 3dd2cc8f6d84253f93affecd3022c9fe4a25d60f\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Tue Sep 22 22:40:53 2009 +0930\n\n    win32-printing: fix meta surface pattern regression caused by bed2701e\n\n src/cairo-win32-printing-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 7658635c654b694b516e5dd44a43611d94e91abd\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Tue Sep 22 22:36:20 2009 +0930\n\n    win32-printing: Allow GDI CTM with scale < 1 to be set\n    \n    To better support creating EMF files with the win32-printing surface,\n    allow a GDI CTM with scale < 1 to be used.\n    \n    http://lists.cairographics.org/archives/cairo/2009-September/018110.html\n\n src/cairo-win32-printing-surface.c |   90 ++++++++++++++++++++++++++++--------\n src/cairo-win32-private.h          |    2 +\n 2 files changed, 73 insertions(+), 19 deletions(-)\n\ncommit 19c091670302fd23a676e680308df49a4ba06687\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Tue Sep 22 22:35:33 2009 +0930\n\n    Make win32 fonts work in EMF files created by win32-printing\n\n src/cairo-win32-printing-surface.c |   37 ++++++++++++++++++++++++++++++++++++\n 1 file changed, 37 insertions(+)\n\ncommit f01a54266d57763635f984982bec001a393d8aa2\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Tue Sep 22 22:34:56 2009 +0930\n\n    Fix compiler warnings in win32-surface\n\n src/cairo-win32-surface.c |   12 +++++++++---\n 1 file changed, 9 insertions(+), 3 deletions(-)\n\ncommit 23663e2078e34659af43bd0e62bb1fb7a94cc71e\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Tue Sep 22 22:34:21 2009 +0930\n\n    Fix compiler error on cygwin\n\n src/cairo-win32-surface.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 7ecd413fab7c55918c6f3c4c272b5e8b5aa89aa7\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Tue Sep 22 22:33:14 2009 +0930\n\n    Add WINVER defines to cairo-mutex-impl-privaye.h\n    \n    The WINVER defines should always be defined before including windows.h\n\n src/cairo-mutex-impl-private.h |    9 +++++++++\n 1 file changed, 9 insertions(+)\n\ncommit 605ec22ab5103e16052591517f86fe558133fb8e\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Tue Sep 22 22:17:27 2009 +0930\n\n    Use _WIN32 to check for win32 mutex\n    \n    Commit 535bcaa1 moved pthread after win32 to fix mingw build\n    problems. However this breaks cygwin builds.\n    \n    On cygwin HAVE_WINDOWS_H is defined but _WIN32 is not. This was\n    causing windows.h to be included which defines _WIN32. As a result the\n    win32 code in cairo-misc.c was being compiled but the win32 declaration\n    in cairint.h was not included.\n    \n    Fix this by using _WIN32 to enable the win32 mutex functions since\n    _WIN32 is defined by mingw, visual C++, and winegcc, but not\n    cygwin. On cygwin, posix functions are preferred as it is a unix\n    emulation environment.\n\n src/cairo-mutex-impl-private.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit e00d0627494a4b15ed3b74a704695ca8b81a350e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Sep 21 13:50:00 2009 +0100\n\n    [xlib] Fix recent bug in unbounded trapezoids\n    \n    Gah! I had believed that the dst extents and the clip were correct to\n    enable unbounded fixup for the unbounded trapezoids. I was wrong, so I\n    need to requery the trapezoid extents. As this information is already\n    known, I should update the interface to pass along all relevant\n    information.\n\n src/cairo-surface.c      |   23 ++++++++++-------------\n src/cairo-xlib-surface.c |   32 +++++++++++++++++++-------------\n 2 files changed, 29 insertions(+), 26 deletions(-)\n\ncommit 378b1e73d9f27e9b54ea01b10e588b361848d0cd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Sep 21 03:10:53 2009 +0100\n\n    [fallback] Special case single composite rectangle\n    \n    Avoid the overhead of region-from-traps extraction for the very frequent\n    case of using a single (possibly clipped) rectangle with a pattern source.\n\n src/cairo-surface-fallback.c |   42 ++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 42 insertions(+)\n\ncommit 35daf95db8aa4f0c254891f180aa4996dd464a60\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Sep 21 03:31:22 2009 +0100\n\n    [xlib] Trim a few redundant steps when uploading glyphs\n    \n    Cleanup the glyph coercion routines to avoid the temporary cairo_t (as\n    we can just cairo_surface_paint() directly).\n\n src/cairo-xlib-surface.c |   23 ++++++-----------------\n 1 file changed, 6 insertions(+), 17 deletions(-)\n\ncommit 9b7c5d95055c4ea5da46c53263050d6ec1331c08\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Sep 20 18:46:19 2009 +0100\n\n    [xlib] Cleanse creation of similar surfaces.\n    \n    Reduce two nearly identical routines to one.\n\n src/cairo-xlib-surface.c |  197 +++++++++++++++++++++-------------------------\n 1 file changed, 91 insertions(+), 106 deletions(-)\n\ncommit 878cef62b525e9f13ab2a8ab562ba8b6628aaa1f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Sep 20 18:45:09 2009 +0100\n\n    [xlib] Interim CAIRO_DEBUG variable to specify xrender level\n    \n    Use CAIRO_DEBUG=xrender-version=x.y to override what the server reports.\n    Useful to test cairo's behaviour against older servers.\n\n src/cairo-xlib-display.c |   23 +++++++++++++++++++----\n 1 file changed, 19 insertions(+), 4 deletions(-)\n\ncommit 531e8045980c966b8e51df933721f9b86c6b1539\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Fri Sep 18 12:17:46 2009 -0400\n\n    Add a description of how we compute the spline_error_squared.\n\n src/cairo-spline.c |   17 +++++++++++------\n 1 file changed, 11 insertions(+), 6 deletions(-)\n\ncommit f4336352405ee7c184d45a73cdd6c1a0526843db\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Wed Sep 16 15:46:14 2009 -0400\n\n    Set LC_ALL=C instead of LANG=C\n\n doc/public/check-doc-coverage.sh |    4 +++-\n doc/public/check-doc-syntax.sh   |    3 ++-\n src/check-def.sh                 |    3 ++-\n src/check-doc-syntax.sh          |    3 ++-\n src/check-headers.sh             |    3 ++-\n src/check-plt.sh                 |    3 ++-\n src/check-preprocessor-syntax.sh |    3 ++-\n 7 files changed, 15 insertions(+), 7 deletions(-)\n\ncommit 56c9b2de7a2b93b2e0c59cf98326d8c0d4d508ba\nAuthor: Sebastian Dr\u00f6ge <sebastian.droege@collabora.co.uk>\nDate:   Tue Sep 15 17:26:59 2009 +0200\n\n    Use __uint128_t and __int128_t if available\n    \n    GCC uses a peculiar name for a real 128-bit integer on x86-64.\n    \n    Speedups, xlib on a gm45\n    ========================\n    poppler        41246.56 -> 35102.82: 1.18x speedup\n    swfdec-youtube 12623.01 -> 11936.79: 1.06x speedup\n    \n    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>\n\n build/configure.ac.system        |    2 +-\n src/cairo-wideint-private.h      |    1 +\n src/cairo-wideint-type-private.h |    6 +++\n src/cairo-wideint.c              |   91 ++++++++++++++++++--------------------\n 4 files changed, 50 insertions(+), 50 deletions(-)\n\ncommit ccf84a8883ebb8d2ee8f55eb53da4dfc96887de0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 15 14:22:57 2009 +0100\n\n    [perf] Reorganise cairo-perf\n    \n    In preparation to creating a new hub to control performance measuring\n    and reporting, move the current cairo-perf out of the way.\n\n perf/.gitignore                    |    3 +\n perf/Makefile.am                   |   84 +-\n perf/box-outline.c                 |  102 -\n perf/cairo-perf-cover.c            |  339 ---\n perf/cairo-perf-diff               |    2 +-\n perf/cairo-perf-micro.c            |  596 +++++\n perf/cairo-perf.c                  |  596 -----\n perf/composite-checker.c           |  114 -\n perf/dragon.c                      |  249 --\n perf/fill.c                        |  119 -\n perf/glyphs.c                      |   99 -\n perf/intersections.c               |  157 --\n perf/long-dashed-lines.c           |   71 -\n perf/long-lines.c                  |  145 --\n perf/mask.c                        |  299 ---\n perf/micro/box-outline.c           |  102 +\n perf/micro/cairo-perf-cover.c      |  339 +++\n perf/micro/composite-checker.c     |  114 +\n perf/micro/dragon.c                |  249 ++\n perf/micro/fill.c                  |  119 +\n perf/micro/glyphs.c                |   99 +\n perf/micro/intersections.c         |  157 ++\n perf/micro/long-dashed-lines.c     |   71 +\n perf/micro/long-lines.c            |  145 ++\n perf/micro/mask.c                  |  299 +++\n perf/micro/mosaic.c                |  173 ++\n perf/micro/mosaic.h                | 4387 ++++++++++++++++++++++++++++++++++++\n perf/micro/paint-with-alpha.c      |   49 +\n perf/micro/paint.c                 |   48 +\n perf/micro/pattern_create_radial.c |  103 +\n perf/micro/pythagoras-tree.c       |   91 +\n perf/micro/rectangles.c            |  118 +\n perf/micro/rounded-rectangles.c    |  141 ++\n perf/micro/spiral.c                |  349 +++\n perf/micro/stroke.c                |   97 +\n perf/micro/subimage_copy.c         |   77 +\n perf/micro/tessellate.c            |  178 ++\n perf/micro/text.c                  |   66 +\n perf/micro/twin.c                  |   56 +\n perf/micro/unaligned-clip.c        |   70 +\n perf/micro/world-map.c             |  116 +\n perf/micro/world-map.h             |  196 ++\n perf/micro/zrusin-another.h        |  668 ++++++\n perf/micro/zrusin.c                |   95 +\n perf/mosaic.c                      |  173 --\n perf/mosaic.h                      | 4387 ------------------------------------\n perf/paint-with-alpha.c            |   49 -\n perf/paint.c                       |   48 -\n perf/pattern_create_radial.c       |  103 -\n perf/pythagoras-tree.c             |   91 -\n perf/rectangles.c                  |  118 -\n perf/rounded-rectangles.c          |  141 --\n perf/spiral.c                      |  349 ---\n perf/stroke.c                      |   97 -\n perf/subimage_copy.c               |   77 -\n perf/tessellate.c                  |  178 --\n perf/text.c                        |   66 -\n perf/twin.c                        |   56 -\n perf/unaligned-clip.c              |   70 -\n perf/world-map.c                   |  116 -\n perf/world-map.h                   |  196 --\n perf/zrusin-another.h              |  668 ------\n perf/zrusin.c                      |   95 -\n 63 files changed, 9414 insertions(+), 9411 deletions(-)\n\ncommit 4152cd90e25ffa9d2a3683c790bd2891a58c52de\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Mon Sep 14 14:29:01 2009 +0300\n\n    [autoconf] Comment on the SIZEOF_VOID__ -> SIZEOF_VOID_P workaround.\n    \n    Explain where the weird SIZEOF_VOID__ comes from.\n\n src/cairo-atomic-private.h |    2 ++\n util/cairo-trace/trace.c   |    2 ++\n 2 files changed, 4 insertions(+)\n\ncommit cd94bf8bf30de9aa8dfec1a06a7ef3386944c974\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Mon Sep 14 03:41:42 2009 -0600\n\n    [trace] Look harder for the cairo-trace.so library.\n    \n    On OpenBSD the convention is to not use symlinks from\n    unversioned library names to versioned library names.\n    This breaks cairo-trace because it looks for cairo-trace.so\n    explicitly, but on OpenBSD only cairo-trace.so.0.0 is\n    installed.\n    \n    The right thing to do is probably to source the cairo-trace.la\n    file and look for a file name there somehow.  Instead this commit\n    just looks for a likely looking file or symlink in the install\n    directory.\n\n util/cairo-trace/cairo-trace.in |   17 ++++++++++++++++-\n 1 file changed, 16 insertions(+), 1 deletion(-)\n\ncommit a343c8c42d3adc8f52afd09bdfbbcfd5299df49e\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Mon Sep 14 02:33:26 2009 -0600\n\n    [trace] Don't use pthread_key_delete.\n    \n    On OpenBSD libc doesn't provide pthread stubs like glibc on Linux\n    or newer libcs from FreeBSD.  However libX11 does provide a stubs\n    for a subset of the pthread functions (formerly in libXThrStub,\n    now moved into libX11 proper), but pthread_key_delete() is not\n    one of the stubbed ones.  So, on OpenBSD cairo's non-linking of\n    libpthread accidentally works as long as the xlib-surface is enabled,\n    which is nearly always the case.\n    \n    This patch makes trace.c stand at the same precipice as cairo itself\n    by reverting to only a subset of the pthreads functions stubbed by\n    libX11.\n\n util/cairo-trace/trace.c |    1 -\n 1 file changed, 1 deletion(-)\n\ncommit cf0fed2191c2b5ebce8855def1dd302ccf8e039a\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Sep 13 17:35:29 2009 -0600\n\n    [build] Check for dlsym in both libdl and libc.\n    \n    The BSDs have dlsym() in libc rather than libdl.\n\n boilerplate/cairo-boilerplate.c |    4 ++--\n configure.ac                    |   12 +++++++-----\n util/cairo-trace/Makefile.am    |    6 +++++-\n 3 files changed, 14 insertions(+), 8 deletions(-)\n\ncommit 1c7ac6c47addd6825c4f49f514fe3ffb708e3813\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Sep 13 17:56:56 2009 -0600\n\n    [build] Work around autoconf void* -> VOID__ name conversion bug.\n    \n    The autoconf shipping with OpenBSD 4.5 converts sizeof(void*)\n    to SIZEOF_VOID__ rather than SIZEOF_VOID_P.  Work around that\n    by defining SIZEOF_VOID_P if required.\n\n src/cairo-atomic-private.h |    4 ++++\n util/cairo-trace/trace.c   |    4 ++++\n 2 files changed, 8 insertions(+)\n\ncommit 12470fd7010ea0748c8dcc9014d1cd0f52f51a3b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Sep 14 10:36:08 2009 +0100\n\n    [configure] Setup GL CFLAGS before checking for GLX\n\n configure.ac |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 9c2790ccc48392bfe039626ebb383070aa18fe56\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Sep 14 10:08:57 2009 +0100\n\n    [build] Add a default message for when GLEW isn't built\n    \n    And it appears I touched the build system again and autoregenerated the\n    feature headers.\n\n boilerplate/Makefile.win32.features |    8 --------\n build/Makefile.win32.features-h     |    1 -\n configure.ac                        |    5 +++--\n src/Makefile.win32.features         |    8 --------\n util/cairo.modules                  |    1 +\n 5 files changed, 4 insertions(+), 19 deletions(-)\n\ncommit 6d4f3c40eff7d070b1c9759038444928c6754efe\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Sep 14 09:19:10 2009 +0100\n\n    Add a private copy of GLEW\n    \n    This appears to be the simplest mechanism to build libglew at the moment -\n    should a system copy be unavailable.  Fortunately libglew is now distributed\n    under a permissive licence.\n    \n    If you want to pass 'make -C src check' you have to use the system copy,\n    or spend quite a bit of time cairo-fying libglew.\n\n boilerplate/Makefile.win32.features |    8 +\n build/Makefile.win32.features-h     |    1 +\n build/configure.ac.features         |    1 +\n configure.ac                        |   19 +-\n src/Makefile.am                     |    2 +\n src/Makefile.sources                |    3 +\n src/Makefile.win32.features         |    8 +\n src/glew/GL/glew.h                  |12262 +++++++++++++++++++++++++++++++++++\n src/glew/GL/glxew.h                 | 1397 ++++\n src/glew/LICENSE.txt                |   73 +\n src/glew/glew.c                     |12180 ++++++++++++++++++++++++++++++++++\n util/cairo.modules                  |   10 +-\n 12 files changed, 25955 insertions(+), 9 deletions(-)\n\ncommit 9ad26f74b0059645d865a20c387fa4bd460cabc8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Sep 13 23:16:57 2009 +0100\n\n    [configure] Fallback to detect OpenGL headers\n    \n    When not using mesa, we can not rely on a pkgconfig file, so just rely on\n    the presence of the OpenGL headers instead.\n\n configure.ac |   11 ++++++++---\n 1 file changed, 8 insertions(+), 3 deletions(-)\n\ncommit 71c3b2888cc81e6d55782388d14bb8d806e77d07\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Sep 13 20:24:29 2009 +0300\n\n    [win32] Sync Makefile.win32.features.\n    \n    Ooops.. wasn't sure if I should commit this or not.\n\n build/Makefile.win32.features |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit ba21f213560fa239a02ae28af4eb1d3a6b7254e5\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Sep 13 18:21:38 2009 +0100\n\n    [trace] Don't trace internal cairo calls on Solaris.\n    \n    On various configurations of Solaris cairo-trace likes to trace\n    internal calls to the API from within cairo and cairo-trace itself. On\n    Linux the slim_hidden_proto stuff avoids this by name mangling and\n    symbol alias magic, but on Solaris that doesn't work so we're left\n    with either no hidden symbols at all or using normal ELF hidden symbol\n    attributes, but neither of those prevent internal calls to cairo from\n    being traced of course.\n    \n    This commit provides a per-thread entry/exit trace counter for use\n    when we can't use name mangling to hide internal API calls.  As a\n    side-effect it may hide actual client API calls from callback\n    functions called by cairo, but such use cases ought to be rare.\n\n util/cairo-trace/trace.c |  465 ++++++++++++++++++++++++++++++++--------------\n 1 file changed, 327 insertions(+), 138 deletions(-)\n\ncommit f5bcb2f36e7dba9cfba5d697e1401dcd00603812\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Sep 13 12:47:19 2009 +0100\n\n    [build] Enable building cairo-trace on Solaris.\n    \n    Solaris supports LD_PRELOAD too!\n\n configure.ac |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit ce8c842a70d3f23527dcbd889b022103483341f2\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Sep 13 12:53:07 2009 +0100\n\n    [trace] Make cairo-trace and its symbol-lookup automatically configured.\n    \n    The build shouldn't fail if we can't make our optional performance\n    tools.\n\n configure.ac |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 2fb59a69f4509c2116f16bd6d376f35e3e2eb709\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Sep 13 14:27:03 2009 +0100\n\n    [trace] Don't rely on the constructor attribute to initialise the tracer.\n    \n    Use pthread_once() at cairo API entry points to initialise the library\n    if required.  This side steps the issues with the __constructor__\n    attribute vs _init()/_fini() on Solaris and different tracer/tracee\n    runtimes which result in the constructors not being run in\n    cairo-trace.so.\n\n util/cairo-trace/trace.c |  176 +++++++++++++++++++++++++++++++++++++++++++++-\n 1 file changed, 174 insertions(+), 2 deletions(-)\n\ncommit 18a441984b649f558c6478f24a7987941acadbe1\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Sep 13 13:53:27 2009 +0100\n\n    [trace] Don't try and propagate a void result.\n    \n    The pattern\n    \n    \treturn <function returning void>( ... );\n    \n    is a gccism not supported by Sun Studio.\n\n util/cairo-trace/trace.c |  136 ++++++++++++++++++++++++----------------------\n 1 file changed, 70 insertions(+), 66 deletions(-)\n\ncommit fee5c58c6caecdbdb387fe39bd6ed94faf7f6ae9\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Sep 13 13:09:47 2009 +0100\n\n    [trace] Avoid warnings from assigning a void pointer to a function pointer.\n    \n    The Sun Studio compiler complains a *lot* when assigning the result\n    of dlsym to a function pointer.  Cast the result to the proper\n    type first.:w\n\n util/cairo-trace/trace.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 19881012cb31ec2aebf556e2c25b53e8387dc689\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Sep 13 16:36:12 2009 +0100\n\n    [image] Add pixel masks for BGRA formats\n    \n    pixman introduced the BGRA pixel type not too long ago, and so we need to\n    update our pixman_format_code_t to cairo_format_masks_t translator.\n\n src/cairo-image-surface.c |   10 +++++++++-\n 1 file changed, 9 insertions(+), 1 deletion(-)\n\ncommit f8a8f297f298d81899803a1b2bbca007418408b5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Sep 13 10:58:59 2009 +0100\n\n    [trace] Stray trailing ';' in bswap macros\n\n util/cairo-trace/trace.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit f851009ec76ee2290ffbc3f55edbf3cc16aff488\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Sep 13 10:57:42 2009 +0100\n\n    [trace] Compile without lookup-symbol\n    \n    And check compilation with --disable-symbol-lookup\n\n util/cairo-trace/trace.c |    6 +++++-\n 1 file changed, 5 insertions(+), 1 deletion(-)\n\ncommit 6cb3ff9c1943c58f5b6892af3f18f6aaa24494b6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Sep 13 10:52:14 2009 +0100\n\n    [configure] --enable-symbol-lookup\n    \n    There you go Joonas, I don't always ignore your suggestions! This is\n    simple patch to allow the user to disable symbol loops in case the\n    auto-detection fails on some obscure (perhaps OpenBSD) platform. Or in\n    case the user really wants to trim a few bytes from a library only used\n    during tracing!\n\n boilerplate/Makefile.win32.features |    7 +++++++\n build/Makefile.win32.features       |    1 +\n build/Makefile.win32.features-h     |    3 +++\n build/configure.ac.features         |    1 +\n configure.ac                        |    6 ++++++\n src/Makefile.win32.features         |    7 +++++++\n util/cairo-trace/Makefile.am        |   14 +++++++++-----\n 7 files changed, 34 insertions(+), 5 deletions(-)\n\ncommit 556d064f4eb3625022f0d99461929ff3fafc9c71\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Sep 11 15:35:27 2009 +0100\n\n    [test] Typos in README from previous commit\n\n test/README |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 43ecde2d22c5a8c591ac83f9a82c2bf83af484fd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Sep 11 15:15:22 2009 +0100\n\n    [test] Add Debian packages for fonts\n    \n    Mention which .deb provides the required fonts.\n\n test/README |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 33be73dfb76c26e3bb0ab59b2f570d00d9c7be62\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Sep 11 14:59:58 2009 +0100\n\n    [xlib] Fix big-line.\n    \n    Project lines that exceed the 16.16 limits onto the XFixedLine, as we know\n    that top/bottom must fit within the confines of the surface and so will be\n    less than 16 bits.\n    \n    Sadly this is a run-on patch that also does:\n    1. Make FillTiled the default for new GCs.\n    2. Stores extend mode as opposed to repeat, and thereby cleaning up some\n    inconsistent code.\n    3. Remove the special casing for unbounded trapezoids, as it is redundant\n    with the polygon clipping.\n    4. Tidy the logic for deciding when to use the core protocol\n    (_categorize_composite_operation)\n\n src/cairo-xlib-screen.c          |    6 +-\n src/cairo-xlib-surface-private.h |    2 +-\n src/cairo-xlib-surface.c         |  402 +++++++++++++++-----------------------\n 3 files changed, 164 insertions(+), 246 deletions(-)\n\ncommit 6960162c5eae30e2d48992023be35e3dbf502a03\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Sep 11 14:56:17 2009 +0100\n\n    [xlib] Discard clip if larger than glyph extents\n    \n    Implement cheap calculation of glyph extents to see whether we can discard\n    the clip region. This is effective around 50% of the time for firefox (and\n    makes the xtrace so much neater).\n\n src/cairo-scaled-font.c  |   36 ++++++++++++++++++++++++++++++++++++\n src/cairo-xlib-surface.c |   23 +++++++++++++++++++++++\n src/cairoint.h           |    6 ++++++\n 3 files changed, 65 insertions(+)\n\ncommit 6e78409417117ad4de1aec65bb4753ff32e1e7a6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Sep 11 14:19:38 2009 +0100\n\n    [test] Update big-line and remove XFAIL\n    \n    Now that we use polygon clipping, output geometry should no longer exceed\n    the 2^16 limits imposed by pixman. For the image backend, we now use spans\n    for stroking and for the xlib backend we have to double check the range on\n    the output trapezoids. In short, cairo should pass this test.\n\n test/Makefile.am                    |    8 ++++----\n test/big-line.c                     |   16 ++++++++--------\n test/big-line.ps.argb32.ref.png     |  Bin 977 -> 0 bytes\n test/big-line.ps.rgb24.ref.png      |  Bin 709 -> 0 bytes\n test/big-line.quartz.ref.png        |  Bin 1075 -> 0 bytes\n test/big-line.quartz.rgb24.ref.png  |  Bin 941 -> 0 bytes\n test/big-line.ref.png               |  Bin 0 -> 977 bytes\n test/big-line.xlib-fallback.ref.png |  Bin 0 -> 723 bytes\n test/big-line.xlib.ref.png          |  Bin 0 -> 933 bytes\n 9 files changed, 12 insertions(+), 12 deletions(-)\n\ncommit b495e7eb2ee2521a400d4b42e04242023bdb1e44\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Sep 10 19:25:14 2009 +0100\n\n    [surface] Early return for (region IN white)\n    \n    Fill a region using IN and a white source is a frequent reduction of a\n    complex clip (viz a path that covers the whole operation extents will be\n    reduced to a single rectangle), and we can simply discard the fill (as it\n    always has bounded semantics).\n\n src/cairo-surface.c |    7 +++++++\n 1 file changed, 7 insertions(+)\n\ncommit 94aeae9b2ec563201a0e65705504d1d70c33a619\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Sep 10 19:11:36 2009 +0100\n\n    [clip] Simplify applying a box clip\n    \n    If the clip path is a simple box, then for many operations it is entirely\n    representation by the alteration of extents and so we can skip a few steps\n    during reconstruction.\n\n src/cairo-clip-private.h |    3 +-\n src/cairo-clip.c         |   84 +++++++++++++++++++++++++---------------------\n 2 files changed, 48 insertions(+), 39 deletions(-)\n\ncommit 496e79b63762c70fd022b2d9e2d6107bcce1807a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Sep 10 17:36:46 2009 +0100\n\n    [xlib] Fix extraction of GC during XCloseDisplay()\n    \n    Jeff Muizelaar reported a bug from his firefox builds that was causing a\n    double free during XCloseDisplay, and suggested it was related to\n    c0e01d9cd. Reviewing the cleanup, suggested that the cause may just be a\n    pair of missing parenthesis.\n\n src/cairo-xlib-screen.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit f34affaa1e0b52e255d882b84bf064f9a9d4a95d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 9 18:03:20 2009 +0100\n\n    [util] And reuse the same name repository name.\n    \n    Completely confused by local caching of a broken cairo.modules by the\n    jhbuild client. ARGH!\n\n util/cairo.modules |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit e1774185d6bb824a53465a037539b53fdc7af5d8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 9 17:52:10 2009 +0100\n\n    [util] And back to a unique repo name for cairo.modules\n    \n    Gah, further experiments into the unknown and the unclear.\n\n util/cairo.modules |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 2905ebc99e4cf8b8e94e16fcd3bc1566f51f4b57\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 9 17:24:43 2009 +0100\n\n    [util] And restore the repository tag.\n    \n    jbhuild requires a local definition.\n\n util/cairo.modules |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 4d7eb79d25bcfdc47abcae1fd51c7573043909fd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 9 17:12:14 2009 +0100\n\n    [util] Inherit the repository from xorg.modules\n    \n    Experiment with inheriting the repository from xorg.module, in order to\n    avoid having two entries for the same server.\n\n util/cairo.modules |    4 +---\n 1 file changed, 1 insertion(+), 3 deletions(-)\n\ncommit f5ee785144a8ddb6056b21f6c28bc4a9f4870b32\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 9 13:59:50 2009 +0100\n\n    [test] Disable the antialias testing for the vector surfaces.\n    \n    Only the raster bckends obey the font anti-alias options.\n\n test/large-twin-antialias-mixed.c |    2 +-\n test/twin-antialias-gray.c        |    2 +-\n test/twin-antialias-mixed.c       |    2 +-\n test/twin-antialias-none.c        |    2 +-\n test/twin-antialias-subpixel.c    |    2 +-\n 5 files changed, 5 insertions(+), 5 deletions(-)\n\ncommit abaef9bfbe11302beb6481547632b44be9d5be8d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 9 13:57:06 2009 +0100\n\n    [test] Compare a failure against the image output\n    \n    If a backend fails in exactly the same way as the image, then we can\n    safely assume that the failure is systematic and not an error in the\n    backend, so change the result to XFAIL.\n\n test/cairo-test.c |   46 ++++++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 46 insertions(+)\n\ncommit 41fbea053a8feb201a4f11aaf4dff86fea0bcb01\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 9 12:19:51 2009 +0100\n\n    [test] Typo in ft-show-glyphs-positioning\n    \n    Note to self: remember to sleep more often.\n\n test/ft-show-glyphs-positioning.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit c61480a319bad55b0b4cf3f2be609bde9f2c5948\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 9 11:08:17 2009 +0100\n\n    [test] An oversized twin test case.\n    \n    A larger variant of the twin mixed antialiasing test.\n\n test/Makefile.am                             |    2 +\n test/Makefile.sources                        |    1 +\n test/large-twin-antialias-mixed.c            |   97 ++++++++++++++++++++++++++\n test/large-twin-antialias-mixed.ref.png      |  Bin 0 -> 16668 bytes\n test/large-twin-antialias-mixed.xlib.ref.png |  Bin 0 -> 14655 bytes\n 5 files changed, 100 insertions(+)\n\ncommit 610b311a970877f3954ba829cf43caecce0ab72c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 9 09:48:24 2009 +0100\n\n    [test] Variation of twin that intermixes antialiasing\n    \n    Check that we are substituting the right glyph depth and changing masks\n    appropriately.\n\n test/Makefile.am                       |    2 +\n test/Makefile.sources                  |    1 +\n test/twin-antialias-mixed.c            |   97 ++++++++++++++++++++++++++++++++\n test/twin-antialias-mixed.ref.png      |  Bin 0 -> 2338 bytes\n test/twin-antialias-mixed.xlib.ref.png |  Bin 0 -> 1760 bytes\n 5 files changed, 100 insertions(+)\n\ncommit c218ff8cbec2cc7aa3efc4c7f7d8690fbdec5e9a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 9 09:52:18 2009 +0100\n\n    [test] SUBPIXEL_ANTIALIAS varation of twin\n    \n    Force argb32 glyphs.\n\n test/Makefile.am                          |    2 +\n test/Makefile.sources                     |    1 +\n test/twin-antialias-subpixel.c            |   71 +++++++++++++++++++++++++++++\n test/twin-antialias-subpixel.ref.png      |  Bin 0 -> 3979 bytes\n test/twin-antialias-subpixel.xlib.ref.png |  Bin 0 -> 3863 bytes\n 5 files changed, 74 insertions(+)\n\ncommit 456484514f4dacfe95952e8c0b73eb6a9a1a9d27\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 9 09:38:18 2009 +0100\n\n    [test] Variation of twin with ANTIALIAS_GRAY\n    \n    Force generation of a8 glyphs.\n\n test/Makefile.am                      |    2 +\n test/Makefile.sources                 |    1 +\n test/twin-antialias-gray.c            |   71 +++++++++++++++++++++++++++++++++\n test/twin-antialias-gray.ref.png      |  Bin 0 -> 3979 bytes\n test/twin-antialias-gray.xlib.ref.png |  Bin 0 -> 3863 bytes\n 5 files changed, 74 insertions(+)\n\ncommit 8555984b8e72ab5846783ed54afa1a857d70f241\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 9 09:29:42 2009 +0100\n\n    [test] Add ANTIALIAS_NONE variation of twin\n    \n    I'm off hunting bugs. By using twin with ANTIALIAS_NONE we can construct\n    a1 glyph images independently of the native font system.\n\n test/Makefile.am                      |    2 +\n test/Makefile.sources                 |    1 +\n test/twin-antialias-none.c            |   71 +++++++++++++++++++++++++++++++++\n test/twin-antialias-none.ref.png      |  Bin 0 -> 718 bytes\n test/twin-antialias-none.xlib.ref.png |  Bin 0 -> 745 bytes\n 5 files changed, 74 insertions(+)\n\ncommit 1820cb7fd648283a5b477fbc6bd654200ed190e6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 9 09:12:54 2009 +0100\n\n    [test] Check for errors during ft-show-glyphs-positioning\n    \n    Do not blindly assume that we managed to construct a valid scaled-font\n    before attempting to dereference the FT_Face. Consider a machine with\n    no fonts which is substituting twin...\n\n test/ft-show-glyphs-positioning.c |   46 +++++++++++++++++++++++++++++++------\n 1 file changed, 39 insertions(+), 7 deletions(-)\n\ncommit 7fb0d5e2091a09ef7b01574f4ecf87236ef43fec\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 9 01:45:16 2009 +0100\n\n    [twin] Initialise all properties\n    \n    Left a couple of uninitialised properties along the non-toy font\n    construction path.\n\n src/cairo-font-face-twin.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 34778a883af806f77d0c89c85cebb315b43d7ef2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 9 01:16:08 2009 +0100\n\n    [configure] Typo in test\n    \n    The have_dl clause was meant to have been removed from the requirements\n    test for cairo-script-interpreter. Instead we left the test broken.\n\n configure.ac |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 4b221bd49a0c2c980a63779d905e8eb9b9cfa690\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 8 19:02:04 2009 +0100\n\n    [spans] Correct offsets for trapezoids\n    \n    Pass on the destination offset from composite_trapezoids() to\n    composite_polygon().\n\n src/cairo-spans.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 9389cb78a8ea5b6579d091ab1030ab9f1b13efc2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 8 17:51:33 2009 +0100\n\n    [build] Improve handling of missing test apparatus\n    \n    Improve detection, reporting and disabling of test backends when we lack\n    the required libraries and utilities.\n\n boilerplate/Makefile.win32.features |    7 +++++++\n boilerplate/cairo-boilerplate-pdf.c |    2 ++\n boilerplate/cairo-boilerplate-ps.c  |    2 ++\n boilerplate/cairo-boilerplate-svg.c |    2 ++\n build/Makefile.win32.features       |    1 +\n build/Makefile.win32.features-h     |    3 +++\n build/configure.ac.features         |    3 ++-\n configure.ac                        |   20 +++++++++++++-------\n perf/cairo-perf-compare-backends.c  |    2 +-\n src/Makefile.win32.features         |    7 +++++++\n test/Makefile.am                    |    2 ++\n test/any2ppm.c                      |    8 ++++++++\n util/Makefile.am                    |    4 ++--\n 13 files changed, 52 insertions(+), 11 deletions(-)\n\ncommit 45759e5a0fb20a632f66a8dd206833b55a95f840\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 8 09:19:53 2009 +0100\n\n    [gl] Supply extents for acquire source image\n    \n    I have no idea how we survived for so long without supplying the source\n    extents...\n\n src/cairo-gl-surface.c |    6 +++++-\n 1 file changed, 5 insertions(+), 1 deletion(-)\n\ncommit 67d40e5c7300c4082484dbda5c81808737bb2ac5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Sep 6 10:17:40 2009 +0100\n\n    [xlib] Protect ourselves from liars that claim to have a 64k window\n    \n    Found using webkit, who attempt to paint an width X page height window.\n    Please, please clip large windows to the visible area. Thanks.\n\n src/cairo-xlib-surface.c |   27 +++++++++++++++++++++++++--\n 1 file changed, 25 insertions(+), 2 deletions(-)\n\ncommit 310cebf194919cf3a7c37e724e64962ae47343cc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Sep 5 15:21:50 2009 +0100\n\n    [configure] Add option to disable trace.\n    \n    Some environments may be broken beyond our capabilities to detect, or\n    maybe the user is just insane and doesn't want to build my nice shiny\n    cairo-trace. Whatever, give them the option to choose:\n    \n      $ ./configure --disable-trace\n\n boilerplate/Makefile.win32.features |    7 +++++++\n build/Makefile.win32.features       |    1 +\n build/Makefile.win32.features-h     |    3 +++\n build/configure.ac.features         |    3 +++\n configure.ac                        |    8 +++++---\n src/Makefile.win32.features         |    7 +++++++\n util/Makefile.am                    |    2 +-\n 7 files changed, 27 insertions(+), 4 deletions(-)\n\ncommit 9b932d7cd750b9bc61d108c80c4530352d952cfa\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Sep 5 08:46:39 2009 +0100\n\n    [perf] Move the calibration to its own function\n    \n    Improve code clarity and whatnot.\n\n perf/cairo-perf.c |   71 +++++++++++++++++++++++++++++++----------------------\n 1 file changed, 41 insertions(+), 30 deletions(-)\n\ncommit 270b2f1be0e600621647f2e2486618c134217941\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sat Sep 5 05:39:35 2009 +0300\n\n    [perf] Add a fast-and-sloppy mode to cairo-perf.\n    \n    A new -f option to cairo-perf reverts to a fast run\n    mode for quick performance overviews. The number of\n    milliseconds each iteration of a test is run for can\n    be overriden using the new CAIRO_PERF_ITERATION_MS\n    environment variable. The default remains 2000 ms/iter.\n\n perf/cairo-perf.c |   59 +++++++++++++++++++++++++++++++++++------------------\n perf/cairo-perf.h |    3 +++\n 2 files changed, 42 insertions(+), 20 deletions(-)\n\ncommit 7f91c4953ccfbb96d76ecd73715fa2e524be933e\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sat Sep 5 05:07:25 2009 +0300\n\n    [boilerplate] Support wildcard ? in CAIRO_TEST_TARGET{,_EXCLUDE}.\n    \n    Useful for running tests only for a given content type.\n\n boilerplate/cairo-boilerplate.c |   10 ++++++----\n 1 file changed, 6 insertions(+), 4 deletions(-)\n\ncommit b3bafbc5f9201662702cc0c0d1c96411e31bb7d3\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sat Sep 5 05:02:00 2009 +0300\n\n    [boilerplate] Support giving content in CAIRO_TEST_TARGET{,_EXCLUDE}.\n    \n    Sometimes it's convenient to run the regression or performance tests\n    against a given target with a given content.  Now we accept an optional\n    content specifier as a suffix .<content> on a target name, where\n    <content> is rgb or rgba.\n\n boilerplate/cairo-boilerplate.c |   61 ++++++++++++++++++++++++++++++++++++---\n 1 file changed, 57 insertions(+), 4 deletions(-)\n\ncommit 29432d3d32bc84ec4a2e1815a84e4ac2089138fe\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sat Sep 5 02:25:01 2009 +0300\n\n    [test] Reorder dash-infinite-loop to not hit a runaway allocation.\n    \n    This test is annoying enough as it is what with it wedging the\n    test suite and all.  There's no reason why it should DOS the\n    running box as well by sitting in a loop allocating like mad.\n\n test/dash-infinite-loop.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 20b0e7f95448e496b609212b9608f75e03f223f8\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Fri Sep 4 23:54:21 2009 +0300\n\n    [test] Add large-source-roi.ref.png to test/Makefile.am\n    \n    Oops.. forgot to add it to the build files too\n\n test/Makefile.am |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 402a0539489cc01094b464109ae28ae78b85a294\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Sep 4 09:47:10 2009 +0100\n\n    [gl] compile fix.\n    \n    Compiled fine during testing -- only I forgot I hadn't enable the gl surface.\n\n src/cairo-gl-surface.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit b065303740cc18fbcabfeef34d09c7d8b617647e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Sep 4 09:35:22 2009 +0100\n\n    [xlib] Enable pad_reflect by default\n    \n    If the XServer claims to support the required Render extension then send\n    it the operations. However for the cases where we know it does not work,\n    i.e. the current and previous generations (<=1.6) of Xorg servers, enable\n    the buggy_pad_reflect fallbacks.\n\n src/cairo-xlib-display.c |   19 ++++++++++++-------\n 1 file changed, 12 insertions(+), 7 deletions(-)\n\ncommit 634fdb4afd15e2467979609b1af7c1c198fc83d4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Sep 4 09:14:12 2009 +0100\n\n    [test] Add unbounded variants of clip-{fill,stroke}\n    \n    Add a couple of tests to exercise a bug that Joonas spotted that I had\n    introduced with the clip-reduction scheme - namely that I had\n    incorrectly removed the clip on unbounded operations.\n\n test/Makefile.am                                   |   14 +++\n test/Makefile.sources                              |    2 +\n test/clip-fill-unbounded.argb32.ref.png            |  Bin 0 -> 1615 bytes\n test/clip-fill-unbounded.c                         |  105 ++++++++++++++++++++\n test/clip-fill-unbounded.rgb24.ref.png             |  Bin 0 -> 1312 bytes\n test/clip-fill-unbounded.svg12.argb32.xfail.png    |  Bin 0 -> 1601 bytes\n test/clip-fill-unbounded.svg12.rgb24.xfail.png     |  Bin 0 -> 1601 bytes\n ...clip-fill-unbounded.xlib-fallback.rgb24.ref.png |  Bin 0 -> 1429 bytes\n test/clip-fill-unbounded.xlib.argb32.ref.png       |  Bin 0 -> 1758 bytes\n test/clip-fill-unbounded.xlib.rgb24.ref.png        |  Bin 0 -> 1426 bytes\n test/clip-stroke-unbounded.argb32.ref.png          |  Bin 0 -> 1703 bytes\n test/clip-stroke-unbounded.c                       |  102 +++++++++++++++++++\n test/clip-stroke-unbounded.rgb24.ref.png           |  Bin 0 -> 1383 bytes\n test/clip-stroke-unbounded.svg12.argb32.xfail.png  |  Bin 0 -> 1697 bytes\n test/clip-stroke-unbounded.svg12.rgb24.xfail.png   |  Bin 0 -> 1697 bytes\n ...ip-stroke-unbounded.xlib-fallback.rgb24.ref.png |  Bin 0 -> 1429 bytes\n test/clip-stroke-unbounded.xlib.argb32.ref.png     |  Bin 0 -> 1792 bytes\n test/clip-stroke-unbounded.xlib.rgb24.ref.png      |  Bin 0 -> 1426 bytes\n 18 files changed, 223 insertions(+)\n\ncommit de99f841886de5cc6e5bc91f9d3e82076d838dee\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Sep 4 08:55:19 2009 +0100\n\n    [fallback] Only eliminate the clip if the operation is bounded\n    \n    For unbounded operations we still need to pass along the clip in order to\n    correctly limit the extents of the operation.\n\n src/cairo-surface-fallback.c |   57 +++++++++++++++++++++++++++++++-----------\n 1 file changed, 42 insertions(+), 15 deletions(-)\n\ncommit 0ffca06d7feec6fdc56c47a378fcc37c1951a00a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Sep 4 08:32:31 2009 +0100\n\n    [perf] Use milliseconds by default in cairo-perf-diff-files\n    \n    Necessary when comparing performance reports from different machines (or\n    even at different CPU states).\n\n perf/cairo-perf-diff-files.c |   13 ++++++++-----\n 1 file changed, 8 insertions(+), 5 deletions(-)\n\ncommit 00ca0780b8f06ec160d8f969e316c21fbbde04bc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Sep 3 23:25:53 2009 +0100\n\n    [win32] Remove unused clone_similar()\n    \n    The win32 backend handles surface sources directly and never calls\n    _cairo_pattern_acquire_surface() which is the only other possible user of\n    clone_similar().\n\n src/cairo-win32-printing-surface.c |    2 +-\n src/cairo-win32-surface.c          |   57 +-----------------------------------\n 2 files changed, 2 insertions(+), 57 deletions(-)\n\ncommit 535bcaa1a1dac28fbe3106c6605949171bc36cb2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Sep 3 20:10:55 2009 +0100\n\n    [mutex] Hook into pthread last\n    \n    Check for native mutex types before hooking into pthread, as this\n    workarounds broken builds on mingw that confuse us by including the\n    pthread header file.\n\n src/cairo-mutex-impl-private.h |   47 ++++++++++++++++++++--------------------\n 1 file changed, 24 insertions(+), 23 deletions(-)\n\ncommit 769f4a4f47ab4636ec5cca3e92ce2c0ff19d2f75\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Sep 3 17:47:34 2009 +0100\n\n    [gl] Allocate small number of rectangles on the stack\n    \n    FillRectangle is most frequently used to fill an entire imagee with the\n    background colour, i.e. with just a single, or few, rectangle. Avoid\n    heap allocation for this common case by allocating enough space for 4\n    rectangles (vertices+colors) on the stack.\n\n src/cairo-gl-surface.c |   43 +++++++++++++++++++++++++++++--------------\n 1 file changed, 29 insertions(+), 14 deletions(-)\n\ncommit 6ce200da9d01a85a1de576229e75732db65a8b70\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Sep 3 17:38:00 2009 +0100\n\n    [gl] Assert that the error is impossible.\n    \n    As we created the image, it should not need coercing into a suitable\n    format and so we should be able to upload it without failure.\n\n src/cairo-gl-surface.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit d3aeafb406da7bf69e9bf24e18a5975780a7a987\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Sep 3 17:32:28 2009 +0100\n\n    [gl] Remove reference to depth_stencil_tex\n    \n    We no longer use a depth-stencil, so remove the vestigial reference.\n\n src/cairo-gl-private.h |    1 -\n src/cairo-gl-surface.c |    2 --\n 2 files changed, 3 deletions(-)\n\ncommit 316c1683ceb39eb652608adc360cb4da9c22256a\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Thu Sep 3 21:38:31 2009 +0300\n\n    [test] Fix the order of random points random-intersections-curves*.\n    \n    The calls to uniform_random() to get the curve points were in\n    the function arguments, but argument order evaluation is compiler\n    implementation dependent.\n\n test/random-intersections-curves-eo.c |   17 ++++++++++-------\n test/random-intersections-curves-nz.c |   17 ++++++++++-------\n 2 files changed, 20 insertions(+), 14 deletions(-)\n\ncommit 9e45673e197d0f43e296483cc6b5ca6df94e7f02\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Thu Sep 3 19:18:07 2009 +0300\n\n    [image] Check for out of bounds image surface sizes in constructors.\n    \n    The image surface code doesn't reliably work on images larger than\n    32767 in width or height.  This patch makes the image surface\n    constructors fail by returning a surface in the CAIRO_STATUS_INVALID_SIZE\n    state when given negative or too large dimensions so that client code\n    gets a prompt and correct error rather than flaky rendering on large\n    images.\n\n src/cairo-image-surface.c     |   27 +++++++++++++++++++++++++--\n test/large-source-roi.c       |    4 ++--\n test/large-source-roi.ref.png |  Bin 0 -> 112 bytes\n test/large-source.c           |    4 ++--\n 4 files changed, 29 insertions(+), 6 deletions(-)\n\ncommit 12d0613210547b8a50dd7b21a12eb1485ee496b9\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Thu Sep 3 17:54:49 2009 +0300\n\n    [test] Allow tests to XFAIL by putting the cairo_t into an error state.\n    \n    The test runner was extra strict about never letting a test put\n    the cairo_t into an error state, and never would it check for\n    the expectedness status of the failure.  This patch moves the\n    check for a test being an XFAIL above the check on the cairo_t's\n    final status.\n\n test/cairo-test.c |   14 +++++++-------\n 1 file changed, 7 insertions(+), 7 deletions(-)\n\ncommit a76c36f2edd16d8e2b8f49e6409134aceab38a42\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Sep 3 14:29:20 2009 +0100\n\n    [xlib] solid pictures should only be 1x1\n    \n    Creating an widthxheight solid picture for using with\n    RenderCompositeTrapezoids defeats the optimization with the xserver that\n    checks for a solid alpha pattern. The checks it performs are for\n    CONTENT_ALPHA, Repeat, 1x1 and value == 0xff.\n\n src/cairo-xlib-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit df067be863bf714f22db0392ab29926edfa8e917\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Sep 3 08:45:40 2009 +0100\n\n    [polygon] Compute the limit of the limits slightly more efficiently\n    \n    Initialize the bbox to the first limit, as frequently there will only be a\n    single (or at least a small number) limit.\n\n src/cairo-polygon.c |   24 ++++++++++++------------\n 1 file changed, 12 insertions(+), 12 deletions(-)\n\ncommit a1bac73f24069990842fa8f31e776b4d2c72546e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Sep 3 09:20:46 2009 +0100\n\n    [boilerplate] Handle errors whilst creating GL surface\n\n boilerplate/cairo-boilerplate-gl.c |   11 ++++++-----\n src/cairo-glx-context.c            |   16 ++++++++--------\n 2 files changed, 14 insertions(+), 13 deletions(-)\n\ncommit f1d284f9976d38f636c6791f11479ae75d7bd199\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Sep 3 01:00:59 2009 +0100\n\n    [polygon] Fix discard with non-banded disjoint clip boxes\n    \n    The early discard checked if the line was below the last clip-box, or if\n    above the first. However, the clip-boxes are only sorted on by the bottom\n    (not the strict XY-banded sort of the regions) and so this was erroneously\n    discarding lines.\n\n src/cairo-polygon.c       |   29 ++++++++++++++++++++++++-----\n src/cairo-types-private.h |    1 +\n 2 files changed, 25 insertions(+), 5 deletions(-)\n\ncommit a6dfdeec82ec34d88276fd0bb0ddcc94405d89f3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Sep 3 00:59:21 2009 +0100\n\n    [test] Add clip-disjoint\n    \n    Soeren found another bug (thanks Soeren!) in the clipping code - as\n    reproduced by this test case.\n\n test/Makefile.am                |    2 +\n test/Makefile.sources           |    1 +\n test/clip-disjoint.c            |   90 +++++++++++++++++++++++++++++++++++++++\n test/clip-disjoint.ref.png      |  Bin 0 -> 5520 bytes\n test/clip-disjoint.xlib.ref.png |  Bin 0 -> 5395 bytes\n 5 files changed, 93 insertions(+)\n\ncommit ff6bc1e132836c68d4f538799c2cd26a2d9cace4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 2 21:22:33 2009 +0100\n\n    [script] Always create a fallback font\n    \n    In order to get a baseline for win32 performance testing, always create a\n    font so that the trace can be replayed. Not ideal, but I feel this the\n    pragmatic solution for judging the performance differentials before I can\n    work out a better solution for loading typ42 fonts.\n\n util/cairo-script/cairo-script-operators.c |   46 ++++++++++++++++------------\n 1 file changed, 27 insertions(+), 19 deletions(-)\n\ncommit fcbb288e7cf2f5914c0d2b66ee6d81b694de6de6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 2 21:02:18 2009 +0100\n\n    [script] Attempt to select a font if ! CAIRO_HAS_FT_FONT\n    \n    In order to enable replay of traces on machines that do not use FreeType\n    as the native font system, we need to convert a type42 font into something\n    similar. Currently the fallback is just to select a font with the same\n    name - this ignores weight and slant, and many other details.\n\n util/cairo-script/cairo-script-operators.c |  106 ++++++++++++++++++++++++++++\n 1 file changed, 106 insertions(+)\n\ncommit 2c03dfa0b406565fca798214a842bac69b042017\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 2 10:09:50 2009 +0100\n\n    [boilerplate/test] Use numerical equality not string equality\n    \n    test == != -eq\n\n boilerplate/make-cairo-boilerplate-constructors.sh |    2 +-\n test/make-cairo-test-constructors.sh               |    2 +-\n 2 files changed, 2 insertions(+), 2 deletions(-)\n\ncommit f5df38ca5efcbc0cd3cc18d9fb67df49ec4859f8\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Wed Sep 2 04:38:52 2009 +0100\n\n    [build] Fix typos in prototype warnings.\n    \n    The -Wstrict-prototypes and -Wmissing-prototypes warnings\n    weren't actually in use due to typos.\n\n build/configure.ac.warnings |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit c086b40a93057a6fd47d23c85c5026d6fe2f524a\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Wed Sep 2 04:29:18 2009 +0100\n\n    [build] Hush the Solaris compiler about enum abuse.\n    \n    Sun Studio 12 doesn't like it when we mix our\n    enum values and types.  We do that a lot on purpose\n    so the warnings from compiles were very verbose.\n\n build/aclocal.cairo.m4      |   23 +++++++++++++++++++++--\n build/configure.ac.warnings |    6 ++++++\n 2 files changed, 27 insertions(+), 2 deletions(-)\n\ncommit f081a5ff554267eebecea4652bb483eea11d1484\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Wed Sep 2 04:10:39 2009 +0100\n\n    [build] Refine the -Wno-attribute test to check our use cases.\n    \n    We don't actually check that -Wno-attribute does what\n    we think it does.  On clang it doesn't since it happily\n    seems to recognize but ignore the attribute.\n    \n    This patch factors out a silent version of CAIRO_CC_TRY_FLAG\n    which accepts an optional program argument and actually tests\n    that the compiler doesn't produce any warning messages.  It\n    is then used to check that -Wno-attribute doesn't complain\n    when the __warn_unused_result__ attribute is applied to\n    void functions or variables.\n\n build/aclocal.cairo.m4      |   42 ++++++++++++++++++++++++++++++++++--------\n build/configure.ac.analysis |    2 +-\n build/configure.ac.warnings |   10 ++++++----\n 3 files changed, 41 insertions(+), 13 deletions(-)\n\ncommit c87b366bfec4eeda2646b33cb8a33822a301456c\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Wed Sep 2 04:09:46 2009 +0100\n\n    [constructors] Guard against being called without any input files.\n    \n    The make-cairo-(test|boilerplate)-constructors scripts ought\n    never to be called without arguments lest we are left constructorless.\n\n boilerplate/make-cairo-boilerplate-constructors.sh |    7 ++++++-\n test/make-cairo-test-constructors.sh               |    7 ++++++-\n 2 files changed, 12 insertions(+), 2 deletions(-)\n\ncommit b509b548b1e3ac5a9e3de2f9652cd1973d295fa3\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Fri Jul 24 09:12:10 2009 +0300\n\n    [trace] Check for __builtin_return_address explicitly.\n    \n    Some other compilers such as clang and icc support the\n    __builtin_return_address() intrinsic as well, so we don't\n    need to check for __GNUC__ >= 3 only.\n\n build/configure.ac.system |   12 ++++++++++++\n util/cairo-trace/trace.c  |    2 +-\n 2 files changed, 13 insertions(+), 1 deletion(-)\n\ncommit 2b0e070f6a6bee415b1036fd149f0c41bcf87abb\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Fri Jul 24 07:48:57 2009 +0300\n\n    [trace] Replace an open coded test for matrix identity.\n    \n    The code has a _matrix_is_identity() function we can use\n    instead of open coding the same test.\n\n util/cairo-trace/trace.c |    5 +----\n 1 file changed, 1 insertion(+), 4 deletions(-)\n\ncommit 70ea9e3ce1b0037999340e484e62d3a1484da41a\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Fri Jul 24 07:46:20 2009 +0300\n\n    [trace] Don't crash on unknown enums values.\n    \n    If the tracer encounters an unknown enum value it\n    ought not to crash. Theis patch replaces the idiom\n    of looking up a name for an enumerated value directly\n    from a table by a switch statement. As a bonus we get\n    warnings from the compiler when the enums are updated\n    in cairo.\n\n util/cairo-trace/trace.c |  313 +++++++++++++++++++++++++---------------------\n 1 file changed, 172 insertions(+), 141 deletions(-)\n\ncommit 174c2620c82a47d067ec7b5062a4f513155a0b1f\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Fri Jul 24 07:42:57 2009 +0300\n\n    [trace] Check for object stack underflow.\n    \n    If the tracer's object stack underflows we want to\n    know about is as soon as possible. This patch adds\n    checks against the stack overflowing and aborts the\n    program with an object stack dump if it does.\n\n util/cairo-trace/trace.c |   26 ++++++++++++++++++++++++--\n 1 file changed, 24 insertions(+), 2 deletions(-)\n\ncommit bb480d235882d8e7d5748a3837f9b274a8b8ac86\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Tue Jul 21 21:18:36 2009 +0300\n\n    [NEWS] Thank the AuroraUX team for facilitating Solaris testing.\n\n NEWS |    5 +++++\n 1 file changed, 5 insertions(+)\n\ncommit c64f6f8a15306cdcf5dd02480049b0f9112fd6ac\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Fri Jun 26 16:54:11 2009 +0300\n\n    [trace] Get the tracee program name from the environment.\n    \n    Support non-Linux systems which don't have a /proc/self/cmdline\n    by transferring the application name given to cairo-trace via\n    an environment variable CAIRO_TRACE_PROG_NAME.\n\n util/cairo-trace/cairo-trace.in |    3 ++-\n util/cairo-trace/trace.c        |   31 +++++++++++++++++++------------\n 2 files changed, 21 insertions(+), 13 deletions(-)\n\ncommit 17cdffafda04514f08e0f0f11d0a85b938282c38\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 2 00:41:18 2009 +0100\n\n    [xlib] Remove stray code\n    \n    Grr. Should have spotted this before pushing - remove the addition of the\n    superfluous code.\n\n src/cairo-xlib-surface.c |   13 ++-----------\n 1 file changed, 2 insertions(+), 11 deletions(-)\n\ncommit 59c4fe93ee30c8182ae1a29267b9c08602e2f6c5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 2 00:34:37 2009 +0100\n\n    [xlib] Eliminate GC clipping\n    \n    Eradicate the use of clipping with GC. By never using clipping, we never\n    have to worry about retrieving a dirty clip from the GC cache.\n\n src/cairo-xlib-private.h         |   12 +--\n src/cairo-xlib-screen.c          |   50 ++++------\n src/cairo-xlib-surface-private.h |    2 -\n src/cairo-xlib-surface.c         |  197 ++++++++++++++++++--------------------\n 4 files changed, 116 insertions(+), 145 deletions(-)\n\ncommit 075fc5666abe006c434bf7ec28d2d4f0226a1d3a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 2 00:33:22 2009 +0100\n\n    [test] Add clip-image\n    \n    Exercise the XCopyArea() paths under clipping - whilst modifying that code\n    I noticed that it was not being exercised by the test suite.\n\n test/Makefile.am        |    1 +\n test/Makefile.sources   |    1 +\n test/clip-image.c       |   94 +++++++++++++++++++++++++++++++++++++++++++++++\n test/clip-image.ref.png |  Bin 0 -> 2679 bytes\n 4 files changed, 96 insertions(+)\n\ncommit 7d1eb259f93d3f2f2e754b2b8b90cb88359b477d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 1 23:12:43 2009 +0100\n\n    [xlib] Make xlib_display_t private and rename xlib_screen_info_t\n    \n    The issue Joonas was trying to solve was the unwanted inclusion of\n    the inlines via cairo-freelist-private.h. Unwittingly he included\n    cairoint.h from cairo-xlib-private.h instead, a far more heinous crime as\n    that causes the boilerplate to try to use the hidden, private symbols.\n    Instead we resolve this issue by making the cairo_xlib_display_t structure\n    private to cairo-xlib-display.c and provide functions to manipulate the\n    abstract data type. Whilst in the vicinity, we rename\n    cairo_xlib_screen_info_t to cairo_xlib_screen_t for consistency and\n    cleanliness.\n\n src/cairo-xlib-display.c         |  126 +++++++++++++++++++++++++--\n src/cairo-xlib-private.h         |   88 +++++++++++--------\n src/cairo-xlib-screen.c          |  155 +++++++++++++++-------------------\n src/cairo-xlib-surface-private.h |    3 +-\n src/cairo-xlib-surface.c         |  173 +++++++++++++++++++++-----------------\n 5 files changed, 339 insertions(+), 206 deletions(-)\n\ncommit b8ddd66cf6e0d16383580c3c3398343f577b89fd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 1 21:49:01 2009 +0100\n\n    Revert \"[freelist] Make _cairo_freepool_alloc_from_new_pool static inline.\"\n    \n    This reverts commit 5a3fa29b370816acb3a08d60e4031ed82c1e4c73 as it breaks\n    the boilerplate when linking with gcc.\n\n src/cairo-freelist-private.h |   29 ++---------------------------\n src/cairo-freelist.c         |   29 +++++++++++++++++++++++++++++\n 2 files changed, 31 insertions(+), 27 deletions(-)\n\ncommit 5a3fa29b370816acb3a08d60e4031ed82c1e4c73\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Tue Sep 1 20:57:01 2009 +0100\n\n    [freelist] Make _cairo_freepool_alloc_from_new_pool static inline.\n    \n    The xlib boilerplate includes a cairo private header to be able\n    to disable usage of the render extension.  This indirectly includes\n    cairo-freelist-private.h which contains a bunch of static inline\n    functions which use the private _cairo_freepool_alloc_from_new_pool\n    function, but since that is not inline also, it causes an undefined\n    extern which cannot be resolved.  The binutils linker doesn't care\n    since the freelist function aren't actually used in the boilerplate\n    but the Solaris linker does.  By making the .._alloc_from_new_pool\n    function inline no dangling references are created and linking\n    succeeds.\n\n src/cairo-freelist-private.h |   29 +++++++++++++++++++++++++++--\n src/cairo-freelist.c         |   29 -----------------------------\n 2 files changed, 27 insertions(+), 31 deletions(-)\n\ncommit 68c8eb955d6d16872c2fa488f0960b974611865d\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Mon Aug 31 23:57:20 2009 +0100\n\n    [wrapper] Avoid a void return gccism.\n    \n    Returning void using the pattern \"return func_returning_void(...)\"\n    is a gccism not supported by Sun Studio 12.\n\n src/cairo-surface-wrapper.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 6ddab64025eacd5000fa295c86c0fddc469bdc5f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 1 20:25:53 2009 +0100\n\n    [ps] Clip meta-surface to desired extents.\n    \n    Ensure that the meta surface does not extend beyond the operation by\n    forcing a clip to the extents of the operation.\n    \n    Fixes test/device-offset and test/device-offset-positive\n\n src/cairo-ps-surface.c |   46 +++++++++++++++++++++++++++++++++++++++++++---\n 1 file changed, 43 insertions(+), 3 deletions(-)\n\ncommit 665f5829541703b29e33f80bebf579a17f47a892\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 1 18:24:42 2009 +0100\n\n    [ps/pdf] Trim patterns to operation extents\n    \n    If we have to rasterise a pattern for use by PS/PDF (for example, to\n    satisfy CAIRO_EXTENT_PAD) then only generate an image large enough to\n    cover the operation extents. We ensure tight coverage by computing the\n    extents afresh - we could do this lazily in the future, but we can not\n    rely on the bounds as computed by the analysis surface as for native\n    operations they may not be tight.\n\n src/cairo-pdf-surface.c |   67 +++++++++++++++++---\n src/cairo-ps-surface.c  |   76 ++++++++++++++--------\n src/cairo-surface.c     |  162 +++++++++++++++++++++++++++++++++++++++++++++++\n src/cairoint.h          |   49 ++++++++++++++\n 4 files changed, 319 insertions(+), 35 deletions(-)\n\ncommit c4c7db96750337076b953a4938afc7b5f16815fc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 1 14:59:36 2009 +0100\n\n    [boilerplate] Use xlib as fallback reference for xcb\n    \n    And exercise RGB code-paths.\n\n boilerplate/cairo-boilerplate-xcb.c |   13 ++++++++++++-\n 1 file changed, 12 insertions(+), 1 deletion(-)\n\ncommit e7a118d3f82f2cbefb4a1529cc90f76ed7371ecc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 1 14:31:38 2009 +0100\n\n    [path] Standalone header-compilation\n    \n    Hmm, TRUE/FALSE apparently weren't defined before use. Odd.\n\n src/cairo-path-fixed-private.h |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 4f880deeabc36842b3b4b0d7ad16383db708cd42\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 1 14:24:59 2009 +0100\n\n    Compiler warnings\n    \n    Add an impossible default condition to avoid a compiler warning. And tweak\n    the code to avoid mismatching signed/unsigned comparisons.\n\n src/cairo-pdf-surface.c |    1 +\n src/cairo-xml-surface.c |    8 ++++----\n 2 files changed, 5 insertions(+), 4 deletions(-)\n\ncommit 1bcc3a3fa00445667adc47d4852237271c7eec0f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 1 14:24:06 2009 +0100\n\n    [tee] Rename 'append' to 'add' and add symmetric 'remove'\n\n src/cairo-tee-surface.c |   51 ++++++++++++++++++++++++++++++++++++++++++-----\n src/cairo.h             |    8 ++++++--\n util/cairo-fdr/fdr.c    |    2 +-\n util/cairo-sphinx/fdr.c |    2 +-\n 4 files changed, 54 insertions(+), 9 deletions(-)\n\ncommit af82670dd3bfdb661de5a01a6856ec01bdf80040\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 1 13:31:52 2009 +0100\n\n    [pattern] Remove unused hidden symbol for cairo_pattern_status()\n\n src/cairo-pattern.c |    9 ++++-----\n src/cairoint.h      |    1 -\n 2 files changed, 4 insertions(+), 6 deletions(-)\n\ncommit aca1dff25967940c36caee26977512484f1720ac\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Mon Aug 31 22:28:26 2009 +0930\n\n    PDF: Ensure operator is selected before painting surface\n\n src/cairo-pdf-surface.c |   16 ++++++++--------\n 1 file changed, 8 insertions(+), 8 deletions(-)\n\ncommit a402bdbd32d3ffe4b564318e6dd83831328257b1\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Mon Aug 31 22:15:57 2009 +0930\n\n    PDF: Flush operators before writing to the PDF stream\n\n src/cairo-pdf-surface.c |    4 ++++\n 1 file changed, 4 insertions(+)\n\ncommit 119355b2a4d81c903720484adaeb7dea3929ca1f\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Mon Aug 31 22:14:15 2009 +0930\n\n    PDF: Reset alpha to 1.0 before painting a surface\n    \n    Fixes a test suite regression.\n\n src/cairo-pdf-surface.c |    8 +++++++-\n 1 file changed, 7 insertions(+), 1 deletion(-)\n\ncommit 20bd7d0edbb01a52bcc88bddcba4cc5237f3a673\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Mon Aug 31 22:03:34 2009 +0930\n\n    Update ref images\n\n test/meta-surface-pattern.pdf.argb32.ref.png  |  Bin 3835 -> 3908 bytes\n test/meta-surface-pattern.pdf.rgb24.ref.png   |  Bin 3682 -> 3760 bytes\n test/rotate-image-surface-paint.pdf.xfail.png |  Bin 207 -> 217 bytes\n test/scale-offset-image.pdf.argb32.ref.png    |  Bin 0 -> 9981 bytes\n test/scale-offset-image.pdf.ref.png           |  Bin 10099 -> 0 bytes\n test/scale-offset-image.pdf.rgb24.ref.png     |  Bin 0 -> 9981 bytes\n test/scale-offset-similar.pdf.argb32.ref.png  |  Bin 0 -> 11027 bytes\n test/scale-offset-similar.pdf.ref.png         |  Bin 10890 -> 0 bytes\n test/scale-offset-similar.pdf.rgb24.ref.png   |  Bin 0 -> 11027 bytes\n test/surface-pattern-scale-down.pdf.ref.png   |  Bin 1589 -> 1603 bytes\n test/surface-pattern-scale-up.pdf.ref.png     |  Bin 2712 -> 2793 bytes\n 11 files changed, 0 insertions(+), 0 deletions(-)\n\ncommit 135912721f5791ad8eac773fd042c751122c8760\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Aug 30 23:58:53 2009 +0930\n\n    PDF: Avoid using patterns when filling a surface with EXTEND_NONE\n    \n    The fill equivilant of the previous optimization.\n\n src/cairo-pdf-surface.c |   19 +++++++++++++++++++\n 1 file changed, 19 insertions(+)\n\ncommit 6512faeb9487dcc2d577b5fb3628cf7f13a25c0a\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Aug 30 23:38:17 2009 +0930\n\n    PDF: Avoid using patterns when painting surfaces with EXTEND_NONE\n    \n    This is an optimization the PS surface has been using to improve\n    printing speed and prevent printers from choking on large\n    images. Applying this optimzation to PDF prevents the same problem\n    occuring when the PDF is converted to PS.\n\n src/cairo-pdf-surface.c |   58 +++++++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 58 insertions(+)\n\ncommit 26d568a9ada523793b2e5855678922894e438ef4\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Aug 30 23:50:53 2009 +0930\n\n    PDF: Fix bug when when embedding surfaces\n\n src/cairo-pdf-surface.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit feaf38d0cdc5a79966d3a412b644705b0f38e75a\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Mon Aug 31 16:25:08 2009 +0300\n\n    [test] Use HAVE_FLOCKFILE instead of _POSIX_C_SOURCE.\n    \n    The _POSIX_C_SOURCE 2001.. #define requires C99 mode and\n    clang on Solaris is strict about such things. Use configure\n    tests for flockfile() instead.\n\n test/cairo-test.c |    5 ++---\n 1 file changed, 2 insertions(+), 3 deletions(-)\n\ncommit 9bb469c51cf580e3ae18b21b3847488e8c4be051\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Fri Jul 24 06:15:46 2009 +0300\n\n    [trace] Use HAVE_FLOCKFILE/FUNLOCKFILE since configure test for them.\n    \n    The trace source was using the flockfile() and funlockfile()\n    functions directly.\n\n util/cairo-trace/trace.c |    4 ++++\n 1 file changed, 4 insertions(+)\n\ncommit b5cf24a4fb0e48a0067c4b5a706890d4c1f3f1ae\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Fri Jun 26 20:06:40 2009 +0300\n\n    [build] Remove duplicate invocation of AC_CHECK_HEADERS.\n    \n    The fenv.h stuff was checked twice.\n\n build/configure.ac.system |    3 ---\n 1 file changed, 3 deletions(-)\n\ncommit 3acccf0ea5ca1fde9cf6b91677588680a2644ee6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Aug 30 12:33:40 2009 +0100\n\n    [perf] Trim outliers from chart\n    \n    Use \"mild outliers\" method to remove exceptional speed-ups and slow-downs\n    from the graph, so that the majority of information is not lost by the\n    scaling. Add the timing labels to the bars so that the true factor is\n    always presented.\n\n perf/cairo-perf-chart.c |  211 ++++++++++++++++++++++++++++++++++++++---------\n 1 file changed, 172 insertions(+), 39 deletions(-)\n\ncommit 687462be89fd0ddf6b5412f2cb7b4f7b1a80135c\nAuthor: Carlos Garcia Campos <carlosgc@gnome.org>\nDate:   Sun Aug 30 12:07:28 2009 +0200\n\n    [build] Fix a typo in configure.ac\n\n configure.ac |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit a6bcb6260ec8982493ac3411436ec007b40e4501\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Aug 30 10:09:51 2009 +0100\n\n    [bo-rectangular] Fix assertion failure with insertion sort\n    \n    We remember the location of the last insert as the next edge is likely to\n    be nearby. However, we need to be careful when the pointer rests upon the\n    HEAD and ensure that we begin the search from the appropriate end.\n\n src/cairo-bentley-ottmann-rectangular.c |    4 ++++\n 1 file changed, 4 insertions(+)\n\ncommit 19ebf83b6717e1f02e7be14218007858edf14ef0\nMerge: 40aefac a77f193\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Aug 29 17:45:48 2009 +0100\n\n    Merge branch 'stroke-with-spans'\n    \n    This branch brings self-intersection removal with virtually no\n    performance regression. (Compare with the initial implementation that\n    incurred a 5-10x slowdown due to having to tessellate whole strokes at a\n    time.) The importance of self-intersection removal is the improved visual\n    quality it brings - gone are those annoying sparkles on the outside of\n    rounded-rectangles for instance. Most of the performance overhead\n    associated with the self-intersection removal is avoided by switching from\n    trapezoids to spans for strokes. Obviously we are not able to do so for\n    the xlib backend as we do not yet have a polygon image type, and so the\n    tessellators are overhauled instead, along with more special casing for\n    frequent operations to avoid the increased complexity along the general\n    paths.\n    \n    Speedups\n    ========\n     xlib-rgba             swfdec-youtube-0    11371.13 (11406.01 0.28%) -> 10450.00 (10461.84 0.66%):  1.09x speedup\n    \u258f\n    image-rgba          firefox-talos-svg-0    73696.53 (73828.28 3.42%) -> 68324.30 (70269.79 1.36%):  1.08x speedup\n    \u258f\n    image-rgba             swfdec-youtube-0    7843.08 (7873.89 2.57%) -> 7393.96 (7399.68 0.18%):  1.06x speedup\n    \n     xvfb-rgba             swfdec-youtube-0    9627.25 (9634.43 0.16%) -> 9020.55 (9040.97 0.27%):  1.07x speedup\n    \u258f\n    Slowdowns\n    =========\n     xvfb-rgba         gnome-terminal-vim-0    7695.12 (7697.87 0.44%) -> 8569.45 (8588.29 0.19%):  1.11x slowdown\n    \u258f\n     xvfb-rgba         swfdec-giant-steps-0    3811.77 (3815.06 0.23%) -> 4246.67 (4569.17 3.52%):  1.11x slowdown\n    \u258f\n    image-rgba                       gvim-0    7150.90 (7181.96 29.36%) -> 14641.04 (14651.36 0.11%):  2.05x slowdown\n    \u2588\n    \n    One method for overcoming these regressions is to reduce the complexity of\n    the polygons being fed into the tessellator (both in the number of edges\n    and intersections). This should be feasible by coupling into Jeff Muizelaar's\n    stroke-to-path work, which early indications suggest will bring a\n    significant performance improvement. On top of this, our span\n    implementation for the image backend is not as efficient as we would hope\n    for - and Joonas promises a much faster implementation soon.\n\ncommit a77f1933afebe28e0651906c96fd098cd8267a9f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Aug 29 14:23:41 2009 +0100\n\n    Use the more generic is_box when doing simple extent checks\n    \n    is_rectangle() is far stricter than is_box(), and is only required for a\n    very limited set of operations (essentially were the rectangle must\n    conform to the motion as described by cairo_rectangle). For the general\n    case where we just want to know whether we have a single rectangular path\n    that covers a certain area,  is_box() is sufficient.\n\n src/cairo-pdf-surface.c    |    2 +-\n src/cairo-ps-surface.c     |    2 +-\n src/cairo-script-surface.c |    4 ++--\n src/cairo-svg-surface.c    |    2 +-\n 4 files changed, 5 insertions(+), 5 deletions(-)\n\ncommit 0a548d08b5eae73a95fb41f41298c9c43379163e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Aug 29 16:27:27 2009 +0100\n\n    [clip] Correctly compute a geometric mask for a rectilinear + arbitrary\n    \n    Fix up the geometric clipper to handle intersecting a rectilinear path\n    with an arbitrary path and inspecting the result to see if it becomes a\n    a region.\n\n src/cairo-clip.c |   47 ++++++++++++++++++++++++++++++++++++++---------\n 1 file changed, 38 insertions(+), 9 deletions(-)\n\ncommit 8a323d7c8998f308fc222d65badb1289e3f7fb54\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Aug 29 14:15:07 2009 +0100\n\n    [clip] Apply surface offset when combining with clip mask\n    \n    In order to correctly combine the clip mask with the compositing mask the\n    clip path must be offset so that it is relative to the destination\n    surface.\n\n src/cairo-clip-private.h      |    2 +-\n src/cairo-clip.c              |   85 +++++++++++++++++++++--------------------\n src/cairo-region.c            |    8 +++-\n src/cairo-surface-fallback.c  |    8 +---\n src/cairo-traps.c             |    8 +---\n src/cairo.h                   |    2 +-\n test/clip-stroke.xlib.ref.png |  Bin 1563 -> 1490 bytes\n 7 files changed, 56 insertions(+), 57 deletions(-)\n\ncommit 21225a7163bc93d34d3e395c840faaba24046bb6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Aug 29 12:08:12 2009 +0100\n\n    [clip] Pass in destination offset for combining with clip-mask\n    \n    When combining a clip-mask with a subsurface, as when used to combine with\n    the composite mask, we need to pass the destination surface offset to the\n    clip so that the paths can be corrected for the new surface.\n\n src/cairo-clip-private.h     |    4 +++-\n src/cairo-clip.c             |   45 +++++++++++++++++++++---------------------\n src/cairo-surface-fallback.c |   14 ++++++++-----\n 3 files changed, 34 insertions(+), 29 deletions(-)\n\ncommit ac6c6fe1d39effd5b6b382f0f1199af824868ef4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Aug 29 12:07:20 2009 +0100\n\n    [test] Add rotated clip.\n    \n    Exercise a bug found in not offsetting the clip mask when combining with\n    the composite mask.\n\n test/Makefile.am               |    3 ++\n test/Makefile.sources          |    1 +\n test/rotated-clip.c            |  110 ++++++++++++++++++++++++++++++++++++++++\n test/rotated-clip.ps.ref.png   |  Bin 0 -> 3378 bytes\n test/rotated-clip.ref.png      |  Bin 0 -> 3761 bytes\n test/rotated-clip.xlib.ref.png |  Bin 0 -> 3922 bytes\n 6 files changed, 114 insertions(+)\n\ncommit c60280782dfac7de1abe3230a500c7c98735dc02\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Aug 29 09:59:36 2009 +0100\n\n    [script] Implement invert\n    \n    Flesh out matrix inversion.\n\n util/cairo-script/cairo-script-operators.c |   26 +++++++++++++++++++++++++-\n 1 file changed, 25 insertions(+), 1 deletion(-)\n\ncommit 06ca0b1475caf709fdf32b10a891dfb3b47cc6b1\nAuthor: Damian Frank <damianf@ubuntu-vm.(none)>\nDate:   Fri Aug 14 11:35:55 2009 -0500\n\n    Fix build on systems with older Xrender headers.\n    \n    This patch revises xlib so that it doesn't depend on having recent\n    Xrender headers to build.  In particular, some definitions were added\n    to the private xrender header file, and an ifdef render version check\n    CAIRO_SURFACE_RENDER_SUPPORTS_OPERATOR was changed to a run-time\n    check using CAIRO_SURFACE_RENDER_HAS_PDF_OPERATORS.\n\n src/cairo-xlib-display.c         |    7 +++\n src/cairo-xlib-surface.c         |   30 ++-----------\n src/cairo-xlib-xrender-private.h |   90 ++++++++++++++++++++++++++++++++++----\n 3 files changed, 93 insertions(+), 34 deletions(-)\n\ncommit 17ef949b6aaa812dd566f1db016055f8e1913320\nAuthor: Damian Frank <damianf@ubuntu-vm.(none)>\nDate:   Fri Aug 14 11:38:52 2009 -0500\n\n    Rename cairo-script static func to avoid MinGW conflict\n    \n    cairo-script-operators.c's _dup function was colliding with one\n    defined in io.h by MinGW (gcc 4.3.0 package).  I renamed it\n    to _duplicate.\n\n util/cairo-script/cairo-script-operators.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 3e7e0eacef650f1035cfbe15e306116ff711f99c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Aug 29 17:07:41 2009 +0100\n\n    Update reference images\n    \n    Refresh the test reference images to match the current output where\n    acceptable.\n\n test/Makefile.am                                   |   14 ++++++++++++--\n test/clip-fill.xlib-fallback.ref.png               |  Bin 1039 -> 1063 bytes\n test/clip-operator.pdf.argb32.ref.png              |  Bin 9340 -> 9266 bytes\n test/clip-operator.pdf.rgb24.ref.png               |  Bin 5146 -> 5166 bytes\n test/clip-operator.ref.png                         |  Bin 8191 -> 8126 bytes\n test/clip-operator.rgb24.ref.png                   |  Bin 3279 -> 3244 bytes\n test/clip-operator.svg12.argb32.xfail.png          |  Bin 8404 -> 8378 bytes\n test/clip-operator.svg12.rgb24.xfail.png           |  Bin 4523 -> 4566 bytes\n test/clip-operator.xlib-fallback.ref.png           |  Bin 3226 -> 3228 bytes\n test/clip-push-group.svg.ref.png                   |  Bin 0 -> 175 bytes\n test/clip-stroke.ref.png                           |  Bin 1528 -> 1451 bytes\n test/clip-stroke.xlib-fallback.ref.png             |  Bin 1566 -> 1490 bytes\n test/clip-stroke.xlib.ref.png                      |  Bin 1563 -> 1563 bytes\n test/clip-text.svg.ref.png                         |  Bin 933 -> 946 bytes\n test/clipped-group.ref.png                         |  Bin 316 -> 289 bytes\n test/clipped-group.svg.ref.png                     |  Bin 0 -> 250 bytes\n test/device-offset-fractional.pdf.xfail.png        |  Bin 275 -> 270 bytes\n test/extended-blend-alpha.svg12.argb32.xfail.png   |  Bin 6857 -> 6658 bytes\n test/filter-nearest-offset.pdf.xfail.png           |  Bin 1926 -> 2152 bytes\n test/filter-nearest-transformed.pdf.xfail.png      |  Bin 488 -> 532 bytes\n test/ft-text-vertical-layout-type1.svg.ref.png     |  Bin 3609 -> 3607 bytes\n test/ft-text-vertical-layout-type1.xlib.ref.png    |  Bin 3640 -> 3639 bytes\n test/ft-text-vertical-layout-type3.svg.ref.png     |  Bin 3626 -> 3626 bytes\n test/ft-text-vertical-layout-type3.xlib.ref.png    |  Bin 3605 -> 3605 bytes\n test/group-unaligned.svg.argb32.xfail.png          |  Bin 522 -> 520 bytes\n test/leaky-dashed-rectangle.pdf.ref.png            |  Bin 347 -> 380 bytes\n test/mask-glyphs.svg.ref.png                       |  Bin 1211158 -> 1211144 bytes\n test/mask.pdf.argb32.ref.png                       |  Bin 7837 -> 7866 bytes\n test/mask.pdf.rgb24.ref.png                        |  Bin 7301 -> 7336 bytes\n test/mask.svg.argb32.xfail.png                     |  Bin 8613 -> 8641 bytes\n test/mask.svg.rgb24.xfail.png                      |  Bin 7189 -> 7199 bytes\n test/operator-source.svg12.argb32.xfail.png        |  Bin 2951 -> 2967 bytes\n test/operator-source.svg12.rgb24.xfail.png         |  Bin 2963 -> 2976 bytes\n test/overlapping-glyphs.svg.argb32.ref.png         |  Bin 0 -> 2338 bytes\n test/overlapping-glyphs.svg.rgb24.ref.png          |  Bin 0 -> 2338 bytes\n test/radial-gradient.pdf.ref.png                   |  Bin 277162 -> 280944 bytes\n test/radial-gradient.svg.xfail.png                 |  Bin 0 -> 264425 bytes\n test/random-intersections-curves-eo.ref.png        |  Bin 246996 -> 245762 bytes\n ...m-intersections-curves-eo.xlib-fallback.ref.png |  Bin 246243 -> 244255 bytes\n test/random-intersections-curves-eo.xlib.ref.png   |  Bin 246243 -> 244255 bytes\n test/random-intersections-curves-nz.ref.png        |  Bin 267589 -> 264545 bytes\n ...m-intersections-curves-nz.xlib-fallback.ref.png |  Bin 266364 -> 264288 bytes\n test/random-intersections-curves-nz.xlib.ref.png   |  Bin 266360 -> 264288 bytes\n test/scale-offset-image.pdf.ref.png                |  Bin 0 -> 10099 bytes\n test/scale-offset-image.pdf.xfail.png              |  Bin 10099 -> 0 bytes\n test/scale-offset-image.script.xfail.png           |  Bin 0 -> 9963 bytes\n test/scale-offset-similar.pdf.ref.png              |  Bin 0 -> 10890 bytes\n test/scale-offset-similar.pdf.xfail.png            |  Bin 11024 -> 0 bytes\n test/scale-offset-similar.script.xfail.png         |  Bin 0 -> 9963 bytes\n test/self-intersecting.ref.png                     |  Bin 301 -> 213 bytes\n test/smask-text.script.ref.png                     |  Bin 0 -> 1663 bytes\n test/smask.pdf.xfail.png                           |  Bin 4393 -> 2848 bytes\n test/smask.script.ref.png                          |  Bin 0 -> 3396 bytes\n test/text-pattern.pdf.argb32.ref.png               |  Bin 1831 -> 1810 bytes\n test/text-pattern.pdf.rgb24.ref.png                |  Bin 1598 -> 1559 bytes\n test/unbounded-operator.svg12.rgb24.xfail.png      |  Bin 1719 -> 1731 bytes\n test/user-font-proxy.svg.ref.png                   |  Bin 16817 -> 16814 bytes\n test/user-font.pdf.ref.png                         |  Bin 0 -> 6241 bytes\n 58 files changed, 12 insertions(+), 2 deletions(-)\n\ncommit 155e10e632cb647df5c3d54a75975bc16591287d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Aug 29 08:04:33 2009 +0100\n\n    [script] Fix use of freed list\n    \n    A typo, I missed converting the user over to the freshly sorted list,\n    leaving it iterating over original but checking the sorted for termination\n    conditions.\n\n src/cairo-script-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 5393aa6d6c4676f20d316f3cd0a18bb497574e50\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Aug 29 08:02:52 2009 +0100\n\n    [path] Return the canonical box.\n    \n    When returning the single box that represents a path, always return it\n    consistently wound.\n\n src/cairo-path-fill.c  |   32 --------------------------------\n src/cairo-path-fixed.c |   28 ++++++++++++++++++++++++----\n 2 files changed, 24 insertions(+), 36 deletions(-)\n\ncommit afea5eb79d2159fe9a5dc1a1a7b9445e40fbb474\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Aug 28 17:10:35 2009 +0100\n\n    [scaled-font] Fix implementation-face refleak\n    \n    If we found the font via the holdover cache, or if we returned due to an\n    error, we would leak a reference count on the implementaton face.\n\n src/cairo-scaled-font.c |    9 ++++++++-\n 1 file changed, 8 insertions(+), 1 deletion(-)\n\ncommit e5d44937f34d35606ad7f07415be7331cf146567\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Aug 28 17:09:54 2009 +0100\n\n    [ft] Improve error path handling.\n    \n    Specifically check for an error during resolving the font and do not cache\n    the error object.\n\n src/cairo-ft-font.c |   12 ++++++------\n 1 file changed, 6 insertions(+), 6 deletions(-)\n\ncommit e76856e6ee563affc0a273ed6eef865866802dec\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Aug 28 15:51:33 2009 +0100\n\n    [scaled-font] Refleak on error path.\n    \n    Perform the destroy of the local font before returning along the error\n    path.\n\n src/cairo-scaled-font.c |    9 ++++-----\n 1 file changed, 4 insertions(+), 5 deletions(-)\n\ncommit d7d6f75ed26bc3ea040c618442ba71c89633ac7b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Aug 28 15:50:13 2009 +0100\n\n    [clip] Fix refleak of previous clipping surfaces.\n    \n    When combining previous clip masks, we leaked a referenced due to not\n    destroying the returned reference.\n\n src/cairo-clip.c |    9 ++++++---\n 1 file changed, 6 insertions(+), 3 deletions(-)\n\ncommit 52e5ce3a36ab1cd7da25056df7f12ac0b23e410d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 27 17:25:08 2009 +0100\n\n    [test] Add clip-stroke\n    \n    Soeren was the first to report a clipping regression in the xlib backend\n    with strokes, and provided a test case to exercise the bug. This is an\n    extension of his test to provide coverage of different clipping and\n    stroking methods.\n\n test/Makefile.am                       |    3 +\n test/Makefile.sources                  |    1 +\n test/clip-stroke.c                     |  121 ++++++++++++++++++++++++++++++++\n test/clip-stroke.ref.png               |  Bin 0 -> 1528 bytes\n test/clip-stroke.xlib-fallback.ref.png |  Bin 0 -> 1566 bytes\n test/clip-stroke.xlib.ref.png          |  Bin 0 -> 1563 bytes\n 6 files changed, 125 insertions(+)\n\ncommit 20cdb99ae8ae0cc02193468e811b1b74b3f6d3b7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 27 16:21:30 2009 +0100\n\n    [path-fixed] Distinguish cw and ccw boxes\n    \n    To correctly handle retessellating trapezods constructed from alternately\n    wound boxes, then we need to pass that information from the path to the\n    tessellator. We do this by switching the direction of the box if the first\n    edge is horizontal as opposed to vertical.\n\n src/cairo-path-fixed.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 219d46a9ebc47f99fa8fe9c6e3f0aa440309f032\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 27 14:45:24 2009 +0100\n\n    [scaled-font] Eliminate intermediate path when tracing glyphs\n    \n    Currently the tracing code for glyphs constructs an temporary path in\n    order to replay and append to the output. This temporary allocation is\n    extremely wasteful as we can just directly append the glyph path to\n    the output path.\n\n src/cairo-scaled-font.c |   51 ++++++++++++++++++++---------------------------\n 1 file changed, 22 insertions(+), 29 deletions(-)\n\ncommit 2e05922737d63289a3f124699359b8d385315cbd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 27 13:58:43 2009 +0100\n\n    [stroke] Handle degenerate stroke extents\n    \n    If the stroke is degenerate, i.e. the path consists only of a single\n    move-to and no edges, then the stroke may be visible due to end-capping\n    (as opposed to fills which are empty). So we also need to pad out the\n    extents around the current point for the degenerate case.\n\n src/cairo-path-bounds.c |   31 +++++++++++++------------------\n 1 file changed, 13 insertions(+), 18 deletions(-)\n\ncommit cfd78393f357bc69233d4d00d0fb3a2ff736f1a7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Aug 26 23:32:34 2009 +0100\n\n    [path] Handle the implicit close for path_fixed_is_box()\n    \n    _cairo_path_fixed_is_box() is only called for filled paths and so must\n    handle the implicit close (which was already being correctly handled by\n    _cairo_path_fixed_iter_is_box).\n\n src/cairo-path-fixed.c |   33 ++++++++++++++++++---------------\n 1 file changed, 18 insertions(+), 15 deletions(-)\n\ncommit f22045bb4b9e700ce223c259ad41403dc7efe81f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Aug 26 23:30:02 2009 +0100\n\n    [fallback] Include implicit closes in the check for rectilinear paths\n    \n    Fixes test/implicit-close\n    \n    By forgetting the implicit-close when checking for rectilinear paths, we\n    tried to feed the triangle (and other diagclose) into the specialised\n    rectilinear tesselators which completely mishandled that final edge.\n\n src/cairo-path-fixed-private.h |   14 ++++++++++++++\n src/cairo-surface-fallback.c   |    6 ++++--\n 2 files changed, 18 insertions(+), 2 deletions(-)\n\ncommit 92f6f275fcb5407baf908485ffd08b6787b2caf9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Aug 26 23:27:46 2009 +0100\n\n    [test] Implicit close\n    \n    This is a simple test that broke with the determination of rectilinearity\n    during path construction. I forgot the implicit close on fill and so the\n    ignored the final diagonal edge and failed to draw the triangle.\n\n test/Makefile.am            |    1 +\n test/Makefile.sources       |    1 +\n test/implicit-close.c       |   54 +++++++++++++++++++++++++++++++++++++++++++\n test/implicit-close.ref.png |  Bin 0 -> 251 bytes\n 4 files changed, 56 insertions(+)\n\ncommit 8078cd194e95a10cf653c970d1ddd39049a511f2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Aug 23 15:25:42 2009 +0100\n\n    [boilerplate] Runtime library check\n    \n    For the purposes of benchmarking it is useful to run cairo-perf against a\n    different library from the one it was compiled against. In order to do so,\n    we need to check that the runtime library contains the required entry\n    points for our targets - which we can check by using dlsym.\n\n boilerplate/Makefile.am                        |    3 +++\n boilerplate/cairo-boilerplate-directfb.c       |    2 ++\n boilerplate/cairo-boilerplate-drm.c            |    2 ++\n boilerplate/cairo-boilerplate-gl.c             |    2 ++\n boilerplate/cairo-boilerplate-glitz-agl.c      |    2 ++\n boilerplate/cairo-boilerplate-glitz-glx.c      |    2 ++\n boilerplate/cairo-boilerplate-glitz-wgl.c      |    2 ++\n boilerplate/cairo-boilerplate-pdf.c            |    2 ++\n boilerplate/cairo-boilerplate-ps.c             |    4 ++++\n boilerplate/cairo-boilerplate-quartz.c         |    2 ++\n boilerplate/cairo-boilerplate-script.c         |    1 +\n boilerplate/cairo-boilerplate-skia.c           |    2 ++\n boilerplate/cairo-boilerplate-svg.c            |    4 ++++\n boilerplate/cairo-boilerplate-test-surfaces.c  |    8 +++++++\n boilerplate/cairo-boilerplate-vg.c             |    4 ++++\n boilerplate/cairo-boilerplate-win32-printing.c |    2 ++\n boilerplate/cairo-boilerplate-win32.c          |    2 ++\n boilerplate/cairo-boilerplate-xcb.c            |    1 +\n boilerplate/cairo-boilerplate-xlib.c           |    4 ++++\n boilerplate/cairo-boilerplate.c                |   29 +++++++++++++++++++++---\n boilerplate/cairo-boilerplate.h                |    1 +\n configure.ac                                   |    7 ++++++\n 22 files changed, 85 insertions(+), 3 deletions(-)\n\ncommit 7447915381fc64bd0c66f7110c1dd0b8a10d73f5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Aug 22 22:20:35 2009 +0100\n\n    [script] Conditionalise the build\n    \n    Allow the interpreter to be disabled if we can not satisfy its dependencies.\n\n configure.ac                  |    2 ++\n util/Makefile.am              |   11 +++++++++--\n util/cairo-script/Makefile.am |    2 +-\n 3 files changed, 12 insertions(+), 3 deletions(-)\n\ncommit fcda9fc2f29c2ee7d0bb45c17a2261badfdf430c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Aug 22 18:48:33 2009 +0100\n\n    [scaled-font] Remove assert from cairo_scled_font_create()\n    \n    The assert() is only correct for the normal paths, but failed on the error\n    path. It has been run for long enough for me to be confident that the code\n    is self-consistent, so I think I can now safely remove it.\n\n src/cairo-scaled-font.c |    5 ++++-\n 1 file changed, 4 insertions(+), 1 deletion(-)\n\ncommit 93cfa7376fb505e676d113e8ef431bab9b497f56\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Aug 22 18:45:54 2009 +0100\n\n    [win32] Use the system scaled_font_done\n    \n    Pointless as both functions are empty, but lets be pedantically correct\n    nevertheless.\n\n src/cairo-win32-font.c |    5 ++++-\n 1 file changed, 4 insertions(+), 1 deletion(-)\n\ncommit 8654a4b35c060ab06860c124a643be912060c4a1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Aug 22 18:16:20 2009 +0100\n\n    [win32] Initialize clip_region\n    \n    Eek, I attempted to destroy an uninitialised region on the first use\n    of a clip.\n\n src/cairo-win32-surface.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 9b33a2e1c794996cbe4cb0a5c773d50566d46bd4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Aug 22 17:40:12 2009 +0100\n\n    [win32] Compiler warnings\n    \n    Innocuous warnings about the use of mismatching explicit casts (I'm really\n    not convinced by the merits of this particular compiler warning, but it\n    does cleanse the code slightly.)\n\n src/cairo-win32-printing-surface.c |   24 ++++++++++++------------\n 1 file changed, 12 insertions(+), 12 deletions(-)\n\ncommit d1740d8782d90edb5b5e20dc5bcadb7a9eeeb4cc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 20 21:11:11 2009 +0100\n\n    [pattern] Ensure that no repeated pattern is clipped\n    \n    Previously the pattern_acquire_surface routine only had to worry about\n    handling extend modes NONE or REPEAT and so the test for ! REPEAT\n    sufficed when what was actually intended was a test for NONE.\n\n src/cairo-pattern.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 958f7ab1238b8242975d3ea774c26d23e090e70c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Aug 19 12:35:00 2009 +0100\n\n    [script] Support running on cairo-1.8\n    \n    Pre 1.9 the application had to pass a resolved font to cairo -- so do so\n    in the interpreter if the cairo version is less than 1.9\n\n util/cairo-script/cairo-script-operators.c |   18 +++++++++++++++---\n 1 file changed, 15 insertions(+), 3 deletions(-)\n\ncommit 87175334a574fa0f69679b1a0baeeb881eaa439b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Aug 21 15:51:12 2009 +0100\n\n    [gl] Use spans for trapezois.\n    \n    Always use spans, even for unaligned boxes. In the future (given a new\n    interface) we may want to emit the common unaligned box code more\n    efficient than a per-scanline computation -- but for now simply avoid the\n    requirements to write a temporary CPU buffer.\n\n src/cairo-gl-surface.c       |   22 ++++++++++++++++++----\n src/cairo-image-surface.c    |    4 +---\n src/cairo-surface-fallback.c |   10 ++--------\n src/cairo-surface.c          |   27 ++++++++++-----------------\n src/cairo-win32-surface.c    |    4 +---\n src/cairoint.h               |   18 ++++++++++++++----\n 6 files changed, 46 insertions(+), 39 deletions(-)\n\ncommit e65dfacab5d123913a4b2f59967f27c0b0af0692\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Aug 21 15:50:24 2009 +0100\n\n    [gl] Simplify acquire_dest_image()\n    \n    Remove redundant code: the intersection of surface extents and the copy to\n    a temporary buffer.\n\n src/cairo-gl-surface.c |   53 +++++++++++-------------------------------------\n 1 file changed, 12 insertions(+), 41 deletions(-)\n\ncommit 5a13396373180ceae31287441ef9c838c771849d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Aug 21 15:48:38 2009 +0100\n\n    [gl] Use common ARRAY_LENGTH macro\n    \n    Forgo the local ARRAY_SIZE macro where the common one will suffice.\n\n src/cairo-gl-surface.c |    4 +---\n 1 file changed, 1 insertion(+), 3 deletions(-)\n\ncommit efdb53425ee71b3bce6c92ce212f5baf3e2a43d7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Aug 21 11:58:31 2009 +0100\n\n    [qt] Discard impossible status return from path construction\n    \n    As we never return an error status during the path construction, we can\n    use the return value for the QPainterPath instead, greatly simplifying the\n    callers.\n\n src/cairo-qt-surface.cpp |  105 +++++++++++++++++++---------------------------\n 1 file changed, 42 insertions(+), 63 deletions(-)\n\ncommit f2cde41cabaa0c190ef965f634cf2c73b6ba2334\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Aug 21 10:29:39 2009 +0100\n\n    [cairoint.h] Add missing cairo_private to debug prototypes.\n\n src/cairoint.h |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit b6d96bba8a4e9efe1033dd7fc875aba9bd8d0dc8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 20 20:31:49 2009 +0100\n\n    [win32] Trust the clipping code to trim roi to our surface\n    \n    The higher level code ensures that the region of interest is trimmed to\n    our declared surface extents, so performing the intersection again is\n    redundant. Furthermore with the change in the clipping code, the\n    fallback region is no longer clipped, especially as the clip that is\n    currently set upon the DC is likely to be stale and incorrect for the\n    fallback.\n    \n    Hopefully this resolves the assertion failure reported by Damian Frank,\n    http://lists.cairographics.org/archives/cairo/2009-August/018015.html\n    \n    CC:  Damian Frank <damian.frank@gmail.com>\n\n src/cairo-win32-surface.c |   53 ++++++++-------------------------------------\n 1 file changed, 9 insertions(+), 44 deletions(-)\n\ncommit d7faec024ac9f702c9bb305599ef8960a972491a\nAuthor: Vladimir Vukicevic <vladimir@pobox.com>\nDate:   Mon Jun 15 11:15:22 2009 +0100\n\n    Add skia backend\n    \n    Originally written by Vladimir Vukicevic to investigate using Skia for\n    Mozilla, it provides a nice integration with a rather interesting code\n    base. By hooking Skia underneath Cairo it allows us to directly compare\n    code paths... which is interesting.\n    \n    [updated by Chris Wilson]\n\n boilerplate/Makefile.sources         |    1 +\n boilerplate/Makefile.win32.features  |   10 +\n boilerplate/cairo-boilerplate-skia.c |   50 ++\n build/Makefile.win32.features        |    1 +\n build/Makefile.win32.features-h      |    3 +\n build/configure.ac.features          |    1 +\n configure.ac                         |   13 +\n perf/cairo-perf-trace.c              |    3 +\n perf/cairo-perf.c                    |    3 +\n src/Makefile.sources                 |    3 +\n src/Makefile.win32.features          |   14 +\n src/cairo-skia-surface.cpp           | 1174 ++++++++++++++++++++++++++++++++++\n src/cairo-skia.h                     |   84 +++\n src/cairo.h                          |    4 +-\n 14 files changed, 1363 insertions(+), 1 deletion(-)\n\ncommit af6df4af51ad75a956e3b73542647206ab534bd2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 20 12:54:12 2009 +0100\n\n    [configure] Choose a better name for the 'temporary' egl iterator\n    \n    The problem is that it remains referenced by egl_NONPKGCONFIG_LIBS and so\n    must not be subsequently overwritten, so give it an egl_ prefix.\n\n configure.ac |   12 ++++++++++--\n 1 file changed, 10 insertions(+), 2 deletions(-)\n\ncommit 83c2f44dd954cb491d72834d0362d6d801ef7651\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 20 12:16:55 2009 +0100\n\n    [test] Update REFERENCE_IMAGES\n\n test/Makefile.am |    5 ++---\n 1 file changed, 2 insertions(+), 3 deletions(-)\n\ncommit f99e1841448e98be6161be57551153a6d9e28a13\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 20 12:11:51 2009 +0100\n\n    [build] Remove -Wcast-align\n    \n    Use -Wcast-align simply generates too much noise due to false-positive\n    reports when casting pixels to uint32_t.\n\n build/configure.ac.warnings |    5 ++++-\n 1 file changed, 4 insertions(+), 1 deletion(-)\n\ncommit 5fdf5b311e06e49843e924523e9bc91ba14da3bb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Aug 19 08:35:01 2009 +0100\n\n    [fallback] Reduce paint + clipmask to fill\n    \n    Under simple, yet common, conditions using a bounded operator and painting\n    with a single complex clip we can reduce the strength of that operation to\n    a fill. In effect this removes the need for a temporary mask for some\n    backends (GL, drm, xlib).\n\n src/cairo-surface-fallback.c |   26 +++++++++++++++++---------\n 1 file changed, 17 insertions(+), 9 deletions(-)\n\ncommit 425b0e35e2d7d44d99e22169b98fc3ca05763650\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 18 14:25:25 2009 +0100\n\n    Add xml surface\n    \n    A very simple surface that produces a hierarchical DAG in a simple XML\n    format. It is intended to be used whilst debugging, for example with the\n    automatic regression finding tools of cairo-sphinx, and with test suites\n    that just want to verify that their code made a particular Cairo call.\n\n boilerplate/Makefile.win32.features      |   10 +\n build/Makefile.win32.features            |    1 +\n build/Makefile.win32.features-h          |    3 +\n build/configure.ac.features              |    1 +\n configure.ac                             |    4 +\n src/Makefile.sources                     |   18 +-\n src/Makefile.win32.features              |   14 +\n src/cairo-base64-stream.c                |  143 ++++\n src/cairo-base85-stream.c                |    3 -\n src/cairo-output-stream-private.h        |    4 +\n src/cairo-ps-surface.c                   |    4 +\n src/cairo-script-surface.c               |   18 +-\n src/cairo-xml-surface.c                  | 1153 ++++++++++++++++++++++++++++++\n src/cairo-xml.h                          |   72 ++\n src/cairo.h                              |    4 +-\n util/Makefile.am                         |   11 +-\n util/cairo-script/cairo-script-scanner.c |  113 +++\n util/trace-to-xml.c                      |   77 ++\n util/xml-to-trace.c                      |  263 +++++++\n 19 files changed, 1902 insertions(+), 14 deletions(-)\n\ncommit 6e0b3be903a6c3ad948de95f490cff92430429a6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 18 10:55:54 2009 +0100\n\n    Add cairo-sphinx utility for regression analysis\n    \n    sphinx is an alternate version of the current cairo-test-trace. It's\n    purpose is to replay a live application (which may just be a replay of a\n    trace) against a backend and its reference. The improvement over the\n    original cairo-test-trace is that the reference backend may be from an\n    older version of cairo.\n\n configure.ac                  |    6 +\n util/Makefile.am              |    6 +\n util/cairo-sphinx/.gitignore  |    1 +\n util/cairo-sphinx/Makefile.am |   40 ++\n util/cairo-sphinx/fdr.c       |  260 +++++++\n util/cairo-sphinx/sphinx.c    | 1525 +++++++++++++++++++++++++++++++++++++++++\n 6 files changed, 1838 insertions(+)\n\ncommit c980affce05590f5f52273ba340463f00773c776\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 18 10:54:26 2009 +0100\n\n    [script] Apply device offset when replaying meta surface\n    \n    As we set the size of the surface to fit the ink extents of the meta\n    surface, we also need to ensure that the origin  of the script lies at the\n    origin of the ink extents.\n\n src/cairo-script-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit eb33f842dc9a2555ba8f7948f49a8335db951959\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Aug 17 11:38:52 2009 +0100\n\n    [meta] Missing status check\n    \n    We need to check the status on the created image before use.\n\n src/cairo-meta-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit ce6a2cc5d2cb8a299759d764de2e7d2b6b655cb4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Aug 17 10:31:47 2009 +0100\n\n    [wrapper] Always copy clip\n    \n    We always need to make a local copy of the clip as the backends are free\n    to modify it as they process the operation.\n\n src/cairo-surface-wrapper.c |   60 +++++++++++++++++++++++++++++++------------\n 1 file changed, 44 insertions(+), 16 deletions(-)\n\ncommit 6ff711b6305a9cf65e584d92258a6fa4e78c31ef\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Aug 17 10:11:32 2009 +0100\n\n    [matrix] Improve bbox finding for translation matrix\n    \n    If the matrix is a pure translation matrix than we can skip determination\n    of the extents and just translate the input bbox.\n\n src/cairo-matrix.c |   56 +++++++++++++++++++++++++++-------------------------\n 1 file changed, 29 insertions(+), 27 deletions(-)\n\ncommit cd7b27ff5c01a533c2c065c4b455ad19df2be3bb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Aug 16 21:08:22 2009 +0100\n\n    Add 'flight-data-recorder' utility.\n    \n    This is a simple variation on cairo-trace that wraps records the last 16\n    contexts by wrapping the target surface inside a tee surface, along with a\n    meta/recording surface. Then on receipt of a SIGUSR1, those last 16\n    contexts are played via a script-surface into /tmp/fdr.trace.\n    \n    Mostly proof-of-concept, it seems to be causing a number of rendering\n    glitches whilst testing with firefox -- otherwise, it seems to works.\n\n configure.ac                    |    1 +\n src/cairo-scaled-font-private.h |    3 +\n src/cairo-scaled-font.c         |   16 +++\n src/cairo-script-surface.c      |   58 +++++++-\n src/cairo-script.h              |    4 +\n src/cairo.h                     |    4 +\n util/Makefile.am                |    3 +\n util/cairo-fdr/Makefile.am      |   13 ++\n util/cairo-fdr/fdr.c            |  304 +++++++++++++++++++++++++++++++++++++++\n 9 files changed, 400 insertions(+), 6 deletions(-)\n\ncommit 658cdc7c9aac23f82f3ea5db8df10844aeb3ac75\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Aug 16 18:04:54 2009 +0100\n\n    Introduce cairo_tee_surface_t\n    \n    Add a new surface type that multiplies it input onto several output\n    surfaces. The only limitation is that it requires a master surface that is\n    used whenever we need to query surface options, such as font options and\n    extents.\n\n boilerplate/Makefile.win32.features |    8 +\n build/Makefile.win32.features-h     |    1 +\n build/configure.ac.features         |    1 +\n configure.ac                        |    1 +\n src/Makefile.sources                |    6 +-\n src/Makefile.win32.features         |    8 +\n src/cairo-surface-wrapper-private.h |    4 +\n src/cairo-surface-wrapper.c         |    7 +\n src/cairo-surface.c                 |   11 +\n src/cairo-tee-surface-private.h     |   47 +++\n src/cairo-tee-surface.c             |  558 +++++++++++++++++++++++++++++++++++\n src/cairo.h                         |   13 +-\n 12 files changed, 662 insertions(+), 3 deletions(-)\n\ncommit 4ae7186719b25f052b875549cc5377e16a557512\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Aug 16 17:07:00 2009 +0100\n\n    [script] Correct emission of get_target() for a popped context\n    \n    If the context is no longer on the operand stack, then we need to recall\n    the surface via a definition.\n\n src/cairo-script-surface.c |   53 ++++++++++++++++++++++++++------------------\n 1 file changed, 32 insertions(+), 21 deletions(-)\n\ncommit 8d1bf830c0137eac837091bda92a636c0fcb0456\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Aug 16 14:20:35 2009 +0100\n\n    Fix errors found by clang\n    \n    Shadowed variables, unused writes and some dead code.\n\n src/cairo-pdf-surface.c                    |    2 --\n src/cairo-xlib-surface.c                   |    5 ++---\n util/cairo-script/cairo-script-file.c      |   10 +++-------\n util/cairo-script/cairo-script-operators.c |   23 ++++++++++++++++-------\n util/cairo-trace/trace.c                   |   14 ++++++++------\n 5 files changed, 29 insertions(+), 25 deletions(-)\n\ncommit d8dbce021a4493330864154e67ca6e4a1f2f50b2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Aug 16 13:26:59 2009 +0100\n\n    [script] recursive active (type3 glyphs)\n    \n    The assumption that an active surface could not recurse into another\n    operation was invalid - due to the complexity of handling type3 glyphs.\n\n src/cairo-script-surface.c |   11 +++++------\n 1 file changed, 5 insertions(+), 6 deletions(-)\n\ncommit eba6b5126a55c84706e677b3fc88743f64cc28d7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Aug 16 12:47:14 2009 +0100\n\n    [build] Add options for warning about bad casts\n    \n    -Wbad-function-cast in particular. Triggers quite a few warnings where we\n    have explicitly cast to an integer.\n\n build/configure.ac.warnings                |    9 +-\n src/cairo-arc.c                            |    2 +-\n src/cairo-pdf-surface.c                    |    8 +-\n src/cairo-ps-surface.c                     |   20 ++--\n src/cairo-svg-surface.c                    |    4 +-\n util/cairo-script/cairo-script-objects.c   |    4 +-\n util/cairo-script/cairo-script-operators.c |  172 +++++++++++++++++++---------\n util/cairo-script/cairo-script-private.h   |    6 +-\n 8 files changed, 143 insertions(+), 82 deletions(-)\n\ncommit 33ef32af4e7adce41f035ee378279c19577469b0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Aug 16 12:46:20 2009 +0100\n\n    [clip] Use the rectangular tessellator to extract boxes\n\n src/cairo-clip.c             |   17 ++++++++++-------\n src/cairo-path-fill.c        |   29 ++++++++++++++++++++++-------\n src/cairo-surface-fallback.c |    8 ++++----\n 3 files changed, 36 insertions(+), 18 deletions(-)\n\ncommit ab035ab2c7bec254fc94d6391398905b5039e777\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Aug 28 10:06:04 2009 +0100\n\n    [tessellate] Rectangular special case\n    \n    Add an even simpler sweep-line tessellator for rectangular trapezoids (as\n    produced by the rectilinear stoker and box filler).\n    \n    This is so simple it even outperforms pixman's region validation code for the\n    purposes of path-to-region conversion.\n\n src/Makefile.sources                    |    1 +\n src/cairo-bentley-ottmann-rectangular.c |  733 +++++++++++++++++++++++++++++++\n src/cairo-clip.c                        |   26 +-\n src/cairo-path-fill.c                   |   40 +-\n src/cairo-path-stroke.c                 |    3 +-\n src/cairo-surface-fallback.c            |   95 +++-\n src/cairo-traps.c                       |   28 +-\n src/cairoint.h                          |    5 +\n 8 files changed, 883 insertions(+), 48 deletions(-)\n\ncommit d7b0c3b784faba756b10b66b9757e6e4c3fce38c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 13 22:03:06 2009 +0100\n\n    [script] Track scaled-font\n    \n    Instead of emitting the (font-face, matrix and options) elements when\n    setting up the desired font on the matrix, simply restore the scaled-font.\n\n src/cairo-script-surface.c |   39 ++++++++++++++++++++++-----------------\n 1 file changed, 22 insertions(+), 17 deletions(-)\n\ncommit 7306305cc898c9f27957c6c6717028cbdcff6a5a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 13 21:59:12 2009 +0100\n\n    [script] Emit surface content\n    \n    Include the desired content with the creation info.\n\n boilerplate/cairo-boilerplate-script.c |    2 +-\n src/cairo-script-surface.c             |   34 ++++++++++++++++++++------------\n src/cairo-script.h                     |    1 +\n util/cairo-trace/trace.c               |    5 ++++-\n 4 files changed, 27 insertions(+), 15 deletions(-)\n\ncommit 052211b072788f0977dccebdcf681d4874f2487a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 13 20:16:51 2009 +0100\n\n    [script] Garbage collect contexts on context switch\n    \n    Previously the contexts were permanently associated with the surface and\n    only destroyed along with the final reference to the surface. This meant\n    that we kept a large number of unwanted contexts in memory. Most\n    applications only have a few contexts active at any time, so remove\n    inactive contexts from the operand stack every time we perform an\n    operation on a different context.\n\n src/cairo-script-surface.c |  262 +++++++++++++++++++++++++++++++-------------\n 1 file changed, 184 insertions(+), 78 deletions(-)\n\ncommit 8f8b91d9049433c9210e0b3aad574cf659862ae0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 13 18:37:01 2009 +0100\n\n    [script] Wrap snapshot.\n    \n    Use the snapshot of our target surface if available.\n\n src/cairo-script-surface.c          |   20 ++++++++++++++++----\n src/cairo-surface-wrapper-private.h |    3 +++\n src/cairo-surface-wrapper.c         |    6 ++++++\n 3 files changed, 25 insertions(+), 4 deletions(-)\n\ncommit fee647c98506eedad0fea667a9442786cb0804b7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 13 18:35:48 2009 +0100\n\n    [script] Read from a FILE stream\n    \n    For ease of implementing the interpreter inside a pipeline, add a method\n    to execute a FILE *.\n\n util/cairo-script/cairo-script-interpreter.c |   22 ++++++++++++++++++++++\n util/cairo-script/cairo-script-interpreter.h |    4 ++++\n 2 files changed, 26 insertions(+)\n\ncommit a9d997fecd54cea7dcd71487a24dbae14d0073a8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 13 17:21:05 2009 +0100\n\n    [script] Introduce cairo_script_context_t\n    \n    cairo_script_context_t is an encapsulation object for interfacing with the\n    output - multiple surfaces can share the same context, meaning that they\n    write to the same destination file/stream.\n\n boilerplate/cairo-boilerplate-script.c |    5 +-\n boilerplate/cairo-boilerplate.c        |   26 +---\n src/cairo-script-surface.c             |  225 ++++++++++++++------------------\n src/cairo-script.h                     |   47 ++++---\n test/cairo-test-trace.c                |    5 +-\n util/cairo-script/csi-trace.c          |   13 +-\n util/cairo-trace/trace.c               |   20 +--\n 7 files changed, 145 insertions(+), 196 deletions(-)\n\ncommit 28887ac272c8a36a41da4d6d58044164b94da6f3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 13 16:38:08 2009 +0100\n\n    [trace] Fix emission of similar (track operands)\n\n util/cairo-trace/trace.c |   13 ++++++-------\n 1 file changed, 6 insertions(+), 7 deletions(-)\n\ncommit dbd9438f5d01666ea118254427c0dc66a519ec3e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 13 15:57:30 2009 +0100\n\n    [stroke] Only mark traps as having intersection if non-empty.\n    \n    We were hitting an assertion attempting to eliminate intersections inside\n    the rectilinear tessellator for empty strokes. We can avoid this\n    assertion, by only marking the traps as having potential intersections iff\n    it is non-empty.\n\n src/cairo-path-stroke.c |    5 ++---\n 1 file changed, 2 insertions(+), 3 deletions(-)\n\ncommit 60d73da9f2e148e982254c78773f0b925be184ff\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Aug 24 08:04:12 2009 +0100\n\n    [clip] Cache intermediate clip masks.\n    \n    As we now superimpose a per-operation clip, this defeats the current\n    top-level caching mechanism. Instead we need to cache the mask for\n    each path. This still seems quite wasteful, and an avenue would be to\n    avoid caching if the path is rectilinear and reduce the number of\n    required composite operations. (However, first find test case...)\n\n src/cairo-clip.c |  165 +++++++++++++++++++++++++++++++++---------------------\n src/cairoint.h   |    3 +\n 2 files changed, 104 insertions(+), 64 deletions(-)\n\ncommit 50c7d637f3a97031c5f4e2bc8d41d17e5397db45\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 13 15:49:11 2009 +0100\n\n    [trace] Emit an 'index' for an undefined surface\n    \n    Larry Ewing hit a bug in cairo-trace whereby it tried to create a similar\n    surface referencing an undefined object. This fix checks whether the\n    object has yet to be defined, and if not issues an index in order to copy\n    the appropriate operand from the stack.\n\n util/cairo-trace/trace.c |   21 ++++++++++-----------\n 1 file changed, 10 insertions(+), 11 deletions(-)\n\ncommit 3a483c2896c28142a90bd0e282af3862e066adfe\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 13 00:19:03 2009 +0100\n\n    [gstate] Convert simple mask() into a paint()\n    \n    As using mask() prevents various optimisations in the backends (for\n    example the use of geometric clips) and for some may trigger fallbacks,\n    perform the simplifications usually done (too late) by the pattern layer\n    in the generic gstate layer. This allows us on the odd occasion to\n    transform a mask() into a paint() but perhaps more importantly removes the\n    need for identical transformations in each backend.\n\n src/cairo-gstate.c |  101 +++++++++++++++++++++++++++++++++++++++++++++++-----\n src/cairoint.h     |    9 ++---\n 2 files changed, 98 insertions(+), 12 deletions(-)\n\ncommit e2c31183e96f84e7d40a9e5e2b6b8802d47628d0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 11 23:45:30 2009 +0100\n\n    [script] Handle zero-length strings\n    \n    Not sure where the zero length string is coming from, but we should\n    nevertheless handle it.\n\n util/cairo-script/cairo-script-scanner.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit 4c215162d24453788b3a461aa47ccf2e638db35e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 11 23:40:54 2009 +0100\n\n    [script] Off-by-one in allocation of string length.\n    \n    We need pass in the real number of bytes in the string, excluding the NUL\n    terminator which is already accounted for.\n\n util/cairo-script/cairo-script-scanner.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 55eddb7ef4b6b561d6692a6f074834d5d5fb94fa\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 11 23:40:04 2009 +0100\n\n    [script] A little utility to convert a trace into a trace\n    \n    Replay the trace using the interpreter onto a script surface - useful for\n    checking idempotency.\n\n util/cairo-script/Makefile.am |    6 ++++++\n util/cairo-script/csi-trace.c |   40 ++++++++++++++++++++++++++++++++++++++++\n 2 files changed, 46 insertions(+)\n\ncommit 4f129863df6392f3deaf6e76fd15adeba98e41b8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 11 23:38:42 2009 +0100\n\n    [script] Store the current stroke matrix\n    \n    We can skip re-emitting stroke parameters if the values are unchanged and\n    the scaling matrix is unaltered.\n\n src/cairo-script-surface.c |   46 +++++++++++++++++++++++++++++++++++---------\n 1 file changed, 37 insertions(+), 9 deletions(-)\n\ncommit 858211f3944507362b2a18d56a65e9a478ccd305\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 11 22:43:31 2009 +0100\n\n    [script] Suppress resetting stroke-style elements after matrix switch\n    \n    If the user is just using the default values, there is no point re-emitting\n    them.\n\n src/cairo-script-surface.c |   42 ++++++++++++++++++++++++++----------------\n 1 file changed, 26 insertions(+), 16 deletions(-)\n\ncommit b6db3053dcde99e26471fdeaedcadd4a6f93b5ef\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 11 22:30:58 2009 +0100\n\n    [script] Hide the implicit CLEAR for similar surfaces\n    \n    Do emit the clear that is performed by the surface layer on similar\n    surfaces.\n\n src/cairo-script-surface.c |   43 +++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 43 insertions(+)\n\ncommit 005b195f062d896d76a87d608ce313b169f99201\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 11 22:07:12 2009 +0100\n\n    [pattern] Ignore matrix/filter/extend when comparing solids\n    \n    Solid patterns do not use their matrices, filter or extend properties so\n    ignore them for the purposes of comparing and hashing.\n\n src/cairo-pattern.c |   25 ++++++++++++++++---------\n 1 file changed, 16 insertions(+), 9 deletions(-)\n\ncommit bb919584c0054bb3e3c547f65c91cfe48302ac86\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 11 21:40:37 2009 +0100\n\n    [script] Use a compact representation for horizontal offsets between glyphs\n    \n    Kerning is quite frequent, that is to apply a horizontal but no vertical\n    offset to a glyph. For instance by discarding the vertical coordinate\n    where it remains the same and only encoding the horizontal offset we\n    reduce the file size by ~12.5% when tracing poppler.\n\n src/cairo-script-surface.c                 |   56 +++++++++++++++++++---------\n util/cairo-script/cairo-script-operators.c |   22 ++++++++---\n 2 files changed, 55 insertions(+), 23 deletions(-)\n\ncommit cbee97f0e3e784b4482429790fc3f42c81908557\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 11 21:26:11 2009 +0100\n\n    [script] Preserve '{}' whilst translating\n\n util/cairo-script/cairo-script-private.h |    1 +\n util/cairo-script/cairo-script-scanner.c |   67 ++++++++++++++++--------------\n 2 files changed, 37 insertions(+), 31 deletions(-)\n\ncommit 24b23200025166e8343425f77a53bedd08790367\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 11 21:12:59 2009 +0100\n\n    [script] Fix list handling during font destruction\n    \n    Use cairo_list to unhook the font correctly during the fini callback.\n\n src/cairo-script-surface.c |   33 +++++++++++++--------------------\n 1 file changed, 13 insertions(+), 20 deletions(-)\n\ncommit 4032438625819cfa5d1928d653f404364529a2e1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 11 17:02:41 2009 +0100\n\n    [path] Eliminate redundant line-to before a close\n    \n    As the close implicitly issues a line-to to the initial point, remove an\n    identical line-to if present.\n\n src/cairo-path-fixed.c |   22 ++++++++++++++++++++++\n 1 file changed, 22 insertions(+)\n\ncommit 111f2be71b1e51fac551fd9214d13899a8ec7909\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 11 17:01:50 2009 +0100\n\n    [path] Discard redundant line-to\n    \n    Eliminate repeated line-to to the current point.\n\n src/cairo-path-fixed.c |   49 +++++++++++++++++++++++++++---------------------\n 1 file changed, 28 insertions(+), 21 deletions(-)\n\ncommit a2d5f59e2158651ac85dcc8a2b8f49cd2861044e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 11 17:01:07 2009 +0100\n\n    [debug] Path printer\n\n src/cairo-debug.c |   67 +++++++++++++++++++++++++++++++++++++++++++++++++++++\n src/cairoint.h    |    3 +++\n 2 files changed, 70 insertions(+)\n\ncommit 4bf96bad9697cbe67907df69d40f46d8d7f24325\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 11 15:37:35 2009 +0100\n\n    [fill] Use trivial rectilinear_to_traps\n    \n    Avoid a small amount of unnecessary overhead by performing a simple\n    conversion of the path to traps when it consists solely of simple boxes.\n\n src/cairo-path-fill.c        |   74 ++++++++++++++++++++++++++++++++++++++++++\n src/cairo-surface-fallback.c |   14 ++++++++\n src/cairoint.h               |    5 +++\n 3 files changed, 93 insertions(+)\n\ncommit 30e5fa0ce06b2572f09f3d47ee10b692f18ba0ae\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 11 15:36:11 2009 +0100\n\n    [polygon] Return status from path ops\n    \n    This tidies the common case which was to call, for example,\n    _cairo_polygon_line_to(); _cairo_polygon_status();\n\n src/cairo-path-fill.c |   26 ++++----------------------\n src/cairo-polygon.c   |   18 ++++++++++++------\n src/cairoint.h        |    6 +++---\n 3 files changed, 19 insertions(+), 31 deletions(-)\n\ncommit 3fcac1ef21de9526bc1abca902db5755abe463ae\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 11 13:43:32 2009 +0100\n\n    [slope] Inline _cairo_slope_init()\n    \n    Move the definition to a separate header file and allow callers to inline\n    the simple function.\n\n src/Makefile.sources      |    1 +\n src/cairo-hull.c          |    2 ++\n src/cairo-path-fixed.c    |    1 +\n src/cairo-path-stroke.c   |    2 ++\n src/cairo-pen.c           |    2 ++\n src/cairo-polygon.c       |    2 ++\n src/cairo-slope-private.h |   65 +++++++++++++++++++++++++++++++++++++++++++++\n src/cairo-slope.c         |    9 +------\n src/cairo-spline.c        |    2 ++\n src/cairo-traps.c         |    1 +\n src/cairoint.h            |   17 ------------\n 11 files changed, 79 insertions(+), 25 deletions(-)\n\ncommit a1e0c4b30980d624bb3e015b7dcf39b4a2ef8c56\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 11 13:34:29 2009 +0100\n\n    [clip] Combine directly onto target\n    \n    Where it is unlikely that we will reuse the temporary clip surface,\n    combine the clip directly with the mask.\n\n src/cairo-clip-private.h     |    3 ++\n src/cairo-clip.c             |  118 +++++++++++++++++++++++++++++++++++++++---\n src/cairo-surface-fallback.c |   26 +---------\n 3 files changed, 115 insertions(+), 32 deletions(-)\n\ncommit 3f12d9ec5db1ac372742c3c03408bdaeaffdc1e4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Aug 28 10:05:52 2009 +0100\n\n    [clip] Use geometric clipping for unaligned clips\n    \n    For the simple cases where the clip is an unaligned box (or boxes), apply\n    the clip directly to the geometry and avoid having to use an intermediate\n    clip-mask.\n\n src/cairo-bentley-ottmann.c  |  285 +++---------------------------------\n src/cairo-clip-private.h     |    5 +\n src/cairo-clip.c             |  296 ++++++++++++++++++++++++++++++++++++-\n src/cairo-gstate.c           |   15 +-\n src/cairo-path-fill.c        |    8 +-\n src/cairo-path-stroke.c      |   22 +--\n src/cairo-polygon.c          |  329 +++++++++++++++++++++++-------------------\n src/cairo-rectangle.c        |   23 +++\n src/cairo-surface-fallback.c |  267 ++++++++++++++++++----------------\n src/cairo-traps.c            |  210 +++++++++++++++------------\n src/cairo-types-private.h    |    4 +-\n src/cairoint.h               |   28 +++-\n 12 files changed, 830 insertions(+), 662 deletions(-)\n\ncommit 2457c4bedef0447f7bff9b54dba96126010917ac\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Aug 10 14:48:03 2009 +0100\n\n    traps-as-spans\n    \n    Add an interface to spans that accepts trapezoids. This allows backends\n    that have an efficient span-line interface but lack efficient handling\n    of boxes (partly due to the current poor compositor interface) to\n    redirect composite_trapezoids() to composite_polygon() and the\n    span-renderer.\n\n src/cairo-spans-private.h      |   19 ++++++++++\n src/cairo-spans.c              |   82 ++++++++++++++++++++++++++++++++++++++++\n src/cairo-tor-scan-converter.c |   27 ++++++++++++-\n 3 files changed, 127 insertions(+), 1 deletion(-)\n\ncommit 3023330706b1237b0fbd697d015cad9a23c250b7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Aug 10 10:57:41 2009 +0100\n\n    [fill] Early check for empty path/polygon\n\n src/cairo-path-fill.c |    5 ++++-\n 1 file changed, 4 insertions(+), 1 deletion(-)\n\ncommit 9ba37a85d2f6c033d68eb547be6c63382164519e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Aug 10 10:57:01 2009 +0100\n\n    [gstate] Discard trivial all-clipped regions\n    \n    Avoid assertion failures later that we have a valid region.\n\n src/cairo-gstate.c |    8 ++++++--\n 1 file changed, 6 insertions(+), 2 deletions(-)\n\ncommit 85094c4eee4e50ec724bf1bb54ecff6f7c1014bf\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Aug 24 07:06:32 2009 +0100\n\n    [clip] Eliminate redundant clips\n    \n    First perform a simple geometric clip to catch the majority of cases where\n    an unaligned clip has been set outside the operation extents that can be\n    discarded without having to use an image surface.\n    \n    This causes a dramatic increase of over 13x for the poppler-bug-12266\n    trace and little impact elsewhere for more sensible clippers.\n\n src/cairo-clip-private.h     |    8 +-\n src/cairo-clip.c             |  187 ++++++++++++++++++++++++++++++++++--------\n src/cairo-gstate.c           |  106 +++++++++++++++---------\n src/cairo-path-fill.c        |    3 +\n src/cairo-surface-fallback.c |  111 ++++++++++++++++++-------\n 5 files changed, 309 insertions(+), 106 deletions(-)\n\ncommit ff0ca6d02a2e8901e9cfca31326c3fdc16e77e2f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Aug 5 17:54:48 2009 +0100\n\n    [test] Stress the intersection handling by feeding spans/traps random curves\n    \n    Another stress test for the fill/stroke and intersection finders.\n\n test/Makefile.am                                   |   10 +++\n test/Makefile.sources                              |    2 +\n test/random-intersections-curves-eo.c              |   81 +++++++++++++++++++\n test/random-intersections-curves-eo.pdf.ref.png    |  Bin 0 -> 246507 bytes\n test/random-intersections-curves-eo.ps.ref.png     |  Bin 0 -> 151676 bytes\n test/random-intersections-curves-eo.ref.png        |  Bin 0 -> 246996 bytes\n ...m-intersections-curves-eo.xlib-fallback.ref.png |  Bin 0 -> 246243 bytes\n test/random-intersections-curves-eo.xlib.ref.png   |  Bin 0 -> 246243 bytes\n test/random-intersections-curves-nz.c              |   82 ++++++++++++++++++++\n test/random-intersections-curves-nz.pdf.ref.png    |  Bin 0 -> 266977 bytes\n test/random-intersections-curves-nz.ps.ref.png     |  Bin 0 -> 134732 bytes\n test/random-intersections-curves-nz.ref.png        |  Bin 0 -> 267589 bytes\n ...m-intersections-curves-nz.xlib-fallback.ref.png |  Bin 0 -> 266364 bytes\n test/random-intersections-curves-nz.xlib.ref.png   |  Bin 0 -> 266360 bytes\n 14 files changed, 175 insertions(+)\n\ncommit 6dfe050d6360409161418d853df3d7d7dfb216af\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 4 15:32:25 2009 +0100\n\n    [polygon] Amalgamate collinear edges\n    \n    Combine sequential collinear edges into a single edge, this benefits\n    immensely by feeding fewer edges into either the tessellator or spans.\n\n src/cairo-polygon.c       |   58 +++++++++++++++++++++++++++++++++++++++------\n src/cairo-types-private.h |    3 +++\n 2 files changed, 54 insertions(+), 7 deletions(-)\n\ncommit dc886450ac7c04252cff77729e0653c6ea2768db\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 4 13:14:38 2009 +0100\n\n    [util] Show total edge length in show-edges\n\n util/show-edges.c |   54 ++++++++++++++++++++++++++++++++++++++++++-----------\n 1 file changed, 43 insertions(+), 11 deletions(-)\n\ncommit 0f8af054841c2d6dfe4bfeb3d13a7bab0cfbe2f3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Aug 3 08:27:01 2009 +0100\n\n    [fallback] Avoid tessellating empty polygons\n    \n    I added an assert inside the tessellator to ensure that empty polygon were\n    not being propagated that far...\n\n src/cairo-surface-fallback.c |   10 ++++++++--\n 1 file changed, 8 insertions(+), 2 deletions(-)\n\ncommit 09377a716334df3683912747067cd396768cfab6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Aug 2 13:09:30 2009 +0100\n\n    [freelist] Lazy initialisation of pools\n\n src/cairo-freelist-private.h |   31 +++++++++++++++--\n src/cairo-freelist.c         |   75 ++++++++++++++++--------------------------\n 2 files changed, 56 insertions(+), 50 deletions(-)\n\ncommit 6f0340e2e5079eba597c0a3a7d39da21cf2b5e7a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jul 29 21:47:11 2009 +0100\n\n    [clip] Use the rectilinear tessellator\n    \n    We can ensure that we always produce a clip region when possible by using\n    the rectilinear tessellator to convert complex, device-aligned polygons to\n    regions. Prior to using the tessellator, we relied on pixman's region code\n    which could only handle a union of rectangles.\n\n src/cairo-clip.c      |    9 ++----\n src/cairo-path-fill.c |   79 +++++++++++++++++++++++++++++++++++++++----------\n 2 files changed, 66 insertions(+), 22 deletions(-)\n\ncommit e3820bef20fdd77ab804b9832f47dc286e4887c4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Aug 2 15:17:51 2009 +0100\n\n    [fill] Short-circuit extents on an empty path.\n    \n    If the path is empty, avoid redundant polygonisation and tessellation by\n    simply returning the empty extents.\n\n src/cairo-gstate.c |   12 ++++++++++++\n 1 file changed, 12 insertions(+)\n\ncommit 4051ed328b618e28cf1df276899eefa225225c76\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 25 20:51:06 2009 +0100\n\n    [tessellator] Special case rectilinear tessellation\n    \n    For the frequent cases where we know in advance that we are dealing with a\n    rectilinear path, but can not use the simple region code, implement a\n    variant of the Bentley-Ottmann tessellator. The advantages here are that\n    edge comparison is very simple (we only have vertical edges) and there are\n    no intersection, though possible overlaps. The idea is the same, maintain\n    a y-x sorted queue of start/stop events that demarcate traps and sweep\n    through the active edges at each event, looking for completed traps.\n    \n    The motivation for this was noticing a performance regression in\n    box-fill-outline with the self-intersection work:\n    \n      1.9.2 to HEAD^: 3.66x slowdown\n      HEAD^ to HEAD:  5.38x speedup\n      1.9.2 to HEAD:  1.57x speedup\n    \n    The cause of which was choosing to use spans instead of the region handling\n    code, as the complex polygon was no longer being tessellated.\n\n src/Makefile.sources                       |    1 +\n src/cairo-bentley-ottmann-rectilinear.c    |  582 ++++++++++++++++++++++++++++\n src/cairo-bentley-ottmann.c                |    5 +-\n src/cairo-combsort-private.h               |    4 +-\n src/cairo-path-fill.c                      |  100 +----\n src/cairo-path-stroke.c                    |    1 +\n src/cairo-surface-fallback.c               |   34 +-\n src/cairo-traps.c                          |    2 +\n src/cairoint.h                             |   18 +-\n test/ft-text-vertical-layout-type1.ref.png |  Bin 3647 -> 3644 bytes\n test/ft-text-vertical-layout-type3.ref.png |  Bin 3607 -> 3608 bytes\n 11 files changed, 631 insertions(+), 116 deletions(-)\n\ncommit 82ccb4c70cbf28167c280e590017b221a406b5c3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jul 29 18:47:29 2009 +0100\n\n    [clip] Use special-purpose fill_to_region()\n    \n    Avoid the creation of temporary traps when generating a region, by calling\n    the to_region() directly.\n\n src/cairo-clip.c |   26 +++++++++-----------------\n 1 file changed, 9 insertions(+), 17 deletions(-)\n\ncommit 41adeac9880d011278f083c620a42b849471a92f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jul 25 21:25:07 2009 +0100\n\n    [fallback] Avoid going through traps for trivial regions.\n\n src/cairo-path-fill.c        |  129 +++++++++++++++++++++++++++++\n src/cairo-surface-fallback.c |  184 +++++++++++++++++++++++++++++++-----------\n src/cairoint.h               |    5 ++\n 3 files changed, 272 insertions(+), 46 deletions(-)\n\ncommit 55bd590561880136c54da0db1f7f095a426d96a9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 24 20:45:56 2009 +0100\n\n    [tessellator] Use a priority queue for the events\n    \n    The skip list was suffering from severe overhead, so though the search was\n    quick, the extra copies during insertion and deletion were slow.\n\n src/Makefile.am              |    5 +-\n src/Makefile.sources         |    2 -\n src/cairo-bentley-ottmann.c  |  341 ++++++++++++++++++++++--------------\n src/cairo-freelist.c         |    8 +-\n src/cairo-skiplist-private.h |  118 -------------\n src/cairo-skiplist.c         |  399 ------------------------------------------\n 6 files changed, 212 insertions(+), 661 deletions(-)\n\ncommit ebfcc2ce8fb6fcaf28d1c59cf7a5b13168cbeb70\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 24 16:50:33 2009 +0100\n\n    [tessellator] Remove the skiplist for the active edges\n    \n    The active edge list is typically short, and the skiplist adds significant\n    overhead that far outweigh the benefit of the O(n lg n) sort. Instead we\n    track the position of the last insertion edge, knowing that the start\n    events are lexicographically sorted, and begin a linear search from there.\n\n src/cairo-bentley-ottmann.c |  230 ++++++++++++++-----------------------------\n 1 file changed, 75 insertions(+), 155 deletions(-)\n\ncommit 36480fe531f19d9c692ee1f8cf09accd4b2c0ad8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jul 25 07:38:04 2009 +0100\n\n    [traps] Increase exponential expansion factor.\n    \n    Grow the traps more rapidly, as the allocations are very short-lived so\n    the over-allocation is less of an issue.\n\n src/cairo-traps.c |    8 +++-----\n src/cairoint.h    |    8 +++-----\n 2 files changed, 6 insertions(+), 10 deletions(-)\n\ncommit 9d51c03bad5f10257e248f43375062902482c0c4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 24 13:51:23 2009 +0100\n\n    [traps] Compute extents on demand.\n\n src/cairo-region-private.h   |    5 -\n src/cairo-region.c           |   47 ++---\n src/cairo-surface-fallback.c |   10 -\n src/cairo-traps.c            |  440 ++++++++++++------------------------------\n src/cairoint.h               |    9 -\n 5 files changed, 144 insertions(+), 367 deletions(-)\n\ncommit f8bb3617c3a7ec598c42eff1f8562e3ccc95127f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 17 09:32:16 2008 +0000\n\n    Eliminate self-intersecting strokes.\n    \n    We refactor the surface fallbacks to convert full strokes and fills to the\n    intermediate polygon representation (as opposed to before where we\n    returned the trapezoidal representation). This allow greater flexibility\n    to choose how then to rasterize the polygon. Where possible we use the\n    local spans rasteriser for its increased performance, but still have the\n    option to use the tessellator instead (for example, with the current\n    Render protocol which does not yet have a polygon image).\n    \n    In order to accommodate this, the spans interface is tweaked to accept\n    whole polygons instead of a path and the tessellator is tweaked for speed.\n    \n    Performance Impact\n    ==================\n    \n    ...\n    Still measuring, expecting some severe regressions.\n    ...\n\n NEWS                                              |   18 +\n src/Makefile.am                                   |    2 +\n src/cairo-bentley-ottmann.c                       | 1833 ++++++++++++---------\n src/cairo-clip.c                                  |   14 +-\n src/cairo-fixed-private.h                         |   52 +-\n src/cairo-fixed-type-private.h                    |    5 +\n src/cairo-gstate.c                                |    4 +-\n src/cairo-hash.c                                  |    6 -\n src/cairo-matrix.c                                |   27 +-\n src/cairo-path-fill.c                             |  109 +-\n src/cairo-path-stroke.c                           | 1025 +++++++-----\n src/cairo-pen.c                                   |  191 ---\n src/cairo-polygon.c                               |  269 ++-\n src/cairo-skiplist-private.h                      |    4 +-\n src/cairo-skiplist.c                              |    8 +-\n src/cairo-slope.c                                 |    4 +-\n src/cairo-spans-private.h                         |   45 +-\n src/cairo-spans.c                                 |  179 +-\n src/cairo-surface-fallback.c                      |  208 ++-\n src/cairo-tor-scan-converter.c                    |  492 +++---\n src/cairo-toy-font-face.c                         |    3 +-\n src/cairo-traps.c                                 |   72 +-\n src/cairo-types-private.h                         |   15 +-\n src/cairo-wideint-private.h                       |   47 +-\n src/cairo-wideint.c                               |   34 -\n src/cairoint.h                                    |  102 +-\n test/Makefile.am                                  |   90 +-\n test/Makefile.sources                             |    3 +-\n test/caps-joins-alpha.ref.png                     |  Bin 2463 -> 2570 bytes\n test/caps-joins-alpha.xlib.ref.png                |  Bin 0 -> 2278 bytes\n test/caps-joins-curve.ref.png                     |  Bin 5132 -> 5725 bytes\n test/caps-joins-curve.xlib.ref.png                |  Bin 0 -> 5126 bytes\n test/clear.pdf.argb32.ref.png                     |  Bin 0 -> 790 bytes\n test/clear.ps.argb32.ref.png                      |  Bin 0 -> 790 bytes\n test/clip-operator.svg12.argb32.xfail.png         |  Bin 8406 -> 8404 bytes\n test/clip-operator.svg12.rgb24.xfail.png          |  Bin 4540 -> 4523 bytes\n test/clipped-group.pdf.ref.png                    |  Bin 310 -> 334 bytes\n test/clipped-trapezoids-ref.png                   |  Bin 0 -> 1055 bytes\n test/clipped-trapezoids.c                         |   95 ++\n test/clipped-trapezoids.ref.png                   |  Bin 0 -> 963 bytes\n test/close-path-current-point.ref.png             |  Bin 1916 -> 1893 bytes\n test/dash-caps-joins.ref.png                      |  Bin 4718 -> 4520 bytes\n test/dash-curve.ref.png                           |  Bin 39696 -> 41284 bytes\n test/dash-curve.xlib.ref.png                      |  Bin 0 -> 40109 bytes\n test/dash-scale.ref.png                           |  Bin 8058 -> 7616 bytes\n test/degenerate-arc.ref.png                       |  Bin 544 -> 646 bytes\n test/degenerate-dash.ref.png                      |  Bin 2005 -> 2086 bytes\n test/degenerate-dash.xlib.ref.png                 |  Bin 0 -> 1898 bytes\n test/degenerate-path.argb32.ref.png               |  Bin 0 -> 240 bytes\n test/degenerate-path.ref.png                      |  Bin 257 -> 0 bytes\n test/degenerate-path.rgb24.ref.png                |  Bin 224 -> 210 bytes\n test/degenerate-pen.ref.png                       |  Bin 1139 -> 997 bytes\n test/degenerate-pen.xlib.ref.png                  |  Bin 0 -> 997 bytes\n test/device-offset-fractional.pdf.xfail.png       |  Bin 275 -> 275 bytes\n test/fill-and-stroke-alpha-add.ref.png            |  Bin 591 -> 562 bytes\n test/fill-and-stroke-alpha-add.svg12.xfail.png    |  Bin 614 -> 631 bytes\n test/fill-and-stroke-alpha.ref.png                |  Bin 519 -> 515 bytes\n test/fill-and-stroke.argb32.ref.png               |  Bin 0 -> 313 bytes\n test/fill-and-stroke.ref.png                      |  Bin 279 -> 0 bytes\n test/fill-and-stroke.rgb24.ref.png                |  Bin 257 -> 287 bytes\n test/fill-and-stroke.xlib.argb32.ref.png          |  Bin 0 -> 322 bytes\n test/fill-and-stroke.xlib.rgb24.ref.png           |  Bin 0 -> 291 bytes\n test/filter-nearest-offset.pdf.xfail.png          |  Bin 1867 -> 1926 bytes\n test/filter-nearest-transformed.pdf.xfail.png     |  Bin 482 -> 488 bytes\n test/ft-text-vertical-layout-type1.ps.ref.png     |  Bin 0 -> 1634 bytes\n test/ft-text-vertical-layout-type1.ps2.ref.png    |  Bin 1846 -> 0 bytes\n test/ft-text-vertical-layout-type1.ps3.ref.png    |  Bin 1846 -> 0 bytes\n test/ft-text-vertical-layout-type1.ref.png        |  Bin 3643 -> 3647 bytes\n test/ft-text-vertical-layout-type1.svg.ref.png    |  Bin 3607 -> 3609 bytes\n test/ft-text-vertical-layout-type1.xlib.ref.png   |  Bin 3980 -> 3640 bytes\n test/ft-text-vertical-layout-type3.ps.ref.png     |  Bin 0 -> 1636 bytes\n test/ft-text-vertical-layout-type3.ps2.ref.png    |  Bin 1804 -> 0 bytes\n test/ft-text-vertical-layout-type3.ps3.ref.png    |  Bin 1804 -> 0 bytes\n test/ft-text-vertical-layout-type3.ref.png        |  Bin 3608 -> 3607 bytes\n test/ft-text-vertical-layout-type3.svg.ref.png    |  Bin 3626 -> 3626 bytes\n test/ft-text-vertical-layout-type3.xlib.ref.png   |  Bin 3934 -> 3605 bytes\n test/group-unaligned.svg.argb32.xfail.png         |  Bin 520 -> 522 bytes\n test/joins.ref.png                                |  Bin 5879 -> 5708 bytes\n test/leaky-dashed-rectangle.pdf.ref.png           |  Bin 347 -> 347 bytes\n test/leaky-dashed-rectangle.xlib.ref.png          |  Bin 0 -> 347 bytes\n test/leaky-dashed-stroke.ref.png                  |  Bin 9214 -> 9387 bytes\n test/leaky-dashed-stroke.xlib.ref.png             |  Bin 0 -> 9305 bytes\n test/line-width-scale.ref.png                     |  Bin 6445 -> 5716 bytes\n test/long-dashed-lines.ref.png                    |  Bin 2116 -> 2070 bytes\n test/mask-glyphs.svg.ref.png                      |  Bin 1211147 -> 1211158 bytes\n test/meta-surface-pattern.pdf.argb32.ref.png      |  Bin 3919 -> 3835 bytes\n test/meta-surface-pattern.pdf.rgb24.ref.png       |  Bin 3867 -> 3682 bytes\n test/meta-surface-pattern.svg.argb32.ref.png      |  Bin 3930 -> 3778 bytes\n test/meta-surface-pattern.svg.rgb24.ref.png       |  Bin 3910 -> 3760 bytes\n test/new-sub-path.argb32.ref.png                  |  Bin 0 -> 421 bytes\n test/new-sub-path.pdf.argb32.ref.png              |  Bin 0 -> 512 bytes\n test/new-sub-path.ref.png                         |  Bin 386 -> 0 bytes\n test/new-sub-path.rgb24.ref.png                   |  Bin 355 -> 381 bytes\n test/operator-source.svg12.argb32.xfail.png       |  Bin 2967 -> 2951 bytes\n test/operator-source.svg12.rgb24.xfail.png        |  Bin 2976 -> 2963 bytes\n test/over-around-source.pdf.argb32.ref.png        |  Bin 585 -> 576 bytes\n test/random-intersections-eo.c                    |   78 +\n test/random-intersections-eo.ps.ref.png           |  Bin 0 -> 78806 bytes\n test/random-intersections-eo.quartz.ref.png       |  Bin 0 -> 197778 bytes\n test/random-intersections-eo.ref.png              |  Bin 0 -> 136018 bytes\n test/random-intersections-eo.xlib.ref.png         |  Bin 0 -> 134655 bytes\n test/random-intersections-nonzero.c               |   79 +\n test/random-intersections-nonzero.ps.ref.png      |  Bin 0 -> 77299 bytes\n test/random-intersections-nonzero.ref.png         |  Bin 0 -> 141154 bytes\n test/random-intersections-nonzero.xlib.ref.png    |  Bin 0 -> 141548 bytes\n test/random-intersections.c                       |   78 -\n test/random-intersections.ps2.ref.png             |  Bin 89253 -> 0 bytes\n test/random-intersections.ps3.ref.png             |  Bin 89253 -> 0 bytes\n test/random-intersections.quartz.ref.png          |  Bin 197778 -> 0 bytes\n test/random-intersections.ref.png                 |  Bin 133462 -> 0 bytes\n test/random-intersections.xlib.ref.png            |  Bin 148722 -> 0 bytes\n test/reflected-stroke.ref.png                     |  Bin 5704 -> 4978 bytes\n test/rel-path.ref.png                             |  Bin 212 -> 198 bytes\n test/rel-path.rgb24.ref.png                       |  Bin 228 -> 214 bytes\n test/scale-offset-image.meta.xfail.png            |  Bin 8599 -> 0 bytes\n test/scale-offset-image.pdf.xfail.png             |  Bin 8694 -> 10099 bytes\n test/scale-offset-image.xfail.png                 |  Bin 8599 -> 9960 bytes\n test/scale-offset-image.xlib-fallback.xfail.png   |  Bin 8580 -> 8706 bytes\n test/scale-offset-image.xlib.xfail.png            |  Bin 9100 -> 9132 bytes\n test/scale-offset-similar.meta.xfail.png          |  Bin 9095 -> 10752 bytes\n test/scale-offset-similar.pdf.xfail.png           |  Bin 9368 -> 11024 bytes\n test/scale-offset-similar.xfail.png               |  Bin 8599 -> 9960 bytes\n test/scale-offset-similar.xlib-fallback.xfail.png |  Bin 8580 -> 8706 bytes\n test/scale-offset-similar.xlib.xfail.png          |  Bin 8570 -> 8696 bytes\n test/self-intersecting.argb32.xfail.png           |  Bin 235 -> 0 bytes\n test/self-intersecting.c                          |    3 +\n test/self-intersecting.pdf.argb32.xfail.png       |  Bin 285 -> 0 bytes\n test/self-intersecting.pdf.rgb24.xfail.png        |  Bin 269 -> 0 bytes\n test/self-intersecting.ps.argb32.xfail.png        |  Bin 186 -> 0 bytes\n test/self-intersecting.ps.ref.png                 |  Bin 0 -> 186 bytes\n test/self-intersecting.ps.rgb24.xfail.png         |  Bin 186 -> 0 bytes\n test/self-intersecting.ref.png                    |  Bin 242 -> 301 bytes\n test/self-intersecting.rgb24.ref.png              |  Bin 304 -> 0 bytes\n test/self-intersecting.rgb24.xfail.png            |  Bin 240 -> 0 bytes\n test/self-intersecting.xlib.argb32.xfail.png      |  Bin 235 -> 0 bytes\n test/self-intersecting.xlib.ref.png               |  Bin 0 -> 252 bytes\n test/self-intersecting.xlib.rgb24.xfail.png       |  Bin 240 -> 0 bytes\n test/smask-stroke.ref.png                         |  Bin 1845 -> 1714 bytes\n test/smask-stroke.xlib.ref.png                    |  Bin 0 -> 1707 bytes\n test/smask.ps.ref.png                             |  Bin 0 -> 3430 bytes\n test/smask.ps2.ref.png                            |  Bin 3669 -> 0 bytes\n test/smask.ps3.ref.png                            |  Bin 3669 -> 0 bytes\n test/smask.ref.png                                |  Bin 3417 -> 3423 bytes\n test/smask.svg.ref.png                            |  Bin 3458 -> 3457 bytes\n test/smask.xlib.ref.png                           |  Bin 3393 -> 3386 bytes\n test/spline-decomposition.pdf.ref.png             |  Bin 19156 -> 19540 bytes\n test/spline-decomposition.ps.ref.png              |  Bin 9090 -> 9028 bytes\n test/spline-decomposition.ref.png                 |  Bin 19107 -> 19569 bytes\n test/spline-decomposition.svg.ref.png             |  Bin 19156 -> 19540 bytes\n test/spline-decomposition.xlib.ref.png            |  Bin 0 -> 19158 bytes\n test/stroke-ctm-caps.ref.png                      |  Bin 1057 -> 873 bytes\n test/stroke-image.pdf.ref.png                     |  Bin 1554 -> 1475 bytes\n test/stroke-image.ps.ref.png                      |  Bin 0 -> 1641 bytes\n test/stroke-image.ps2.ref.png                     |  Bin 2121 -> 0 bytes\n test/stroke-image.ps3.ref.png                     |  Bin 2121 -> 0 bytes\n test/stroke-image.ref.png                         |  Bin 1866 -> 1344 bytes\n test/stroke-image.xlib.ref.png                    |  Bin 0 -> 1440 bytes\n test/surface-pattern.pdf.xfail.png                |  Bin 10528 -> 10532 bytes\n test/text-rotate.pdf.ref.png                      |  Bin 16639 -> 16757 bytes\n test/text-rotate.ref.png                          |  Bin 17775 -> 16738 bytes\n test/text-rotate.svg.ref.png                      |  Bin 17024 -> 17118 bytes\n test/text-rotate.xlib.ref.png                     |  Bin 0 -> 16646 bytes\n test/twin.ps.ref.png                              |  Bin 2197 -> 2142 bytes\n test/twin.ref.png                                 |  Bin 4038 -> 3979 bytes\n test/twin.xlib.ref.png                            |  Bin 0 -> 4435 bytes\n test/unantialiased-shapes.ref.png                 |  Bin 4459 -> 3969 bytes\n test/unbounded-operator.svg12.argb32.ref.png      |  Bin 0 -> 2767 bytes\n test/unbounded-operator.svg12.argb32.xfail.png    |  Bin 2771 -> 0 bytes\n test/unbounded-operator.svg12.rgb24.xfail.png     |  Bin 1731 -> 1719 bytes\n test/user-font-proxy.svg.ref.png                  |  Bin 16814 -> 16817 bytes\n test/user-font.ps.ref.png                         |  Bin 0 -> 4605 bytes\n test/user-font.ps2.ref.png                        |  Bin 5043 -> 0 bytes\n test/user-font.ps3.ref.png                        |  Bin 5043 -> 0 bytes\n test/user-font.ref.png                            |  Bin 6082 -> 6270 bytes\n test/user-font.xlib.ref.png                       |  Bin 6183 -> 5884 bytes\n util/.gitignore                                   |    3 +\n util/Makefile.am                                  |   23 +-\n util/show-edges.c                                 | 1189 +++++++++++++\n util/show-events.c                                |  845 ++++++++++\n util/show-traps.c                                 | 1239 ++++++++++++++\n 180 files changed, 6303 insertions(+), 2190 deletions(-)\n\ncommit 7c499db8afe8a7cf8c512ec166fe7dbf11a25c02\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 25 20:37:55 2009 +0100\n\n    [test] Minor tweak of ft-text-vertical-layout\n    \n    Tidily destroy the font immediately after use.\n\n test/ft-text-vertical-layout-type1.c |    6 ++----\n test/ft-text-vertical-layout-type3.c |    5 ++---\n 2 files changed, 4 insertions(+), 7 deletions(-)\n\ncommit bdd3c5ba6987280b455229dd12b20c22159ce61c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Aug 22 18:59:01 2009 +0100\n\n    [perf] Match directory names\n    \n    In order to handle 'cairo-perf-trace benchmark', we need to perform the\n    can_run? test on the directory name as opposed to the individual trace\n    names. Make it so.\n\n perf/box-outline.c           |    2 +-\n perf/cairo-perf-trace.c      |   37 ++++++++++++++++++++++++++++---------\n perf/cairo-perf.c            |   14 +++++++++++---\n perf/cairo-perf.h            |    3 ++-\n perf/composite-checker.c     |    2 +-\n perf/dragon.c                |    3 ++-\n perf/fill.c                  |    2 +-\n perf/glyphs.c                |    2 +-\n perf/intersections.c         |    2 +-\n perf/long-dashed-lines.c     |    2 +-\n perf/long-lines.c            |    2 +-\n perf/mask.c                  |    2 +-\n perf/mosaic.c                |    2 +-\n perf/paint-with-alpha.c      |    2 +-\n perf/paint.c                 |    2 +-\n perf/pattern_create_radial.c |    2 +-\n perf/pythagoras-tree.c       |    4 ++--\n perf/rectangles.c            |    2 +-\n perf/rounded-rectangles.c    |    2 +-\n perf/spiral.c                |    2 +-\n perf/stroke.c                |    2 +-\n perf/subimage_copy.c         |    2 +-\n perf/tessellate.c            |    2 +-\n perf/text.c                  |    2 +-\n perf/twin.c                  |    2 +-\n perf/unaligned-clip.c        |    2 +-\n perf/world-map.c             |    2 +-\n perf/zrusin.c                |    2 +-\n 28 files changed, 68 insertions(+), 39 deletions(-)\n\ncommit 77c11096169bc8af6aa08241a800a51a2292a27a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Aug 22 12:23:03 2009 +0100\n\n    [perf] Reset global caches after every trace\n    \n    I'd disabled this to look at cairo-qt performance, then forgot about it.\n    Be clean, cleanup globals -- this should fix the huge performance loss\n    when running in series multiple backends that need separate font caches.\n\n perf/cairo-perf-trace.c |    5 +++++\n 1 file changed, 5 insertions(+)\n\ncommit 9c8e60f7718b29051268541d2cfec58e51d8e7b8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Aug 22 12:09:25 2009 +0100\n\n    [perf] Remove cpuset warning for cairo-perf-trace\n    \n    These traces run for much longer than the original synthetic benchmarks\n    and seek to replicate 'real-world' applications, so the warning that the\n    xserver and cairo-perf are not bound to any cpu is false.\n\n perf/cairo-perf-trace.c |   47 -----------------------------------------------\n 1 file changed, 47 deletions(-)\n\ncommit d07ed5d990634dc09d0d1b6ce45aa8ad1994b75a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Aug 19 12:36:56 2009 +0100\n\n    [perf] Add charting utility\n    \n    cairo-perf-chart takes multiple runs (currently it is limited to\n    prefiltered data sets) and pretty-prints a chart showing performace\n    improvements/regressions (in either ASCII or HTML) along with a\n    cairo-perf-chart.png\n\n perf/Makefile.am        |    4 +\n perf/cairo-perf-chart.c |  751 +++++++++++++++++++++++++++++++++++++++++++++++\n 2 files changed, 755 insertions(+)\n\ncommit 015eccadcb8b22f302bdaa315b88981a38294686\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Aug 16 09:57:07 2009 +0100\n\n    [perf] Fix unaligned-clip\n    \n    We failed to reset the scale after each loop, eventually generating a vast\n    clip-mask that exceeded memory capacity.\n\n perf/unaligned-clip.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 6f8fae21e6fee07a8f6561f77bcb0bfaf64f5882\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Aug 15 10:16:41 2009 +0100\n\n    [perf] Add a box mode to spiral\n    \n    Add a very similar 'spiral' path (really just concentric boxes) that hit\n    the rectangular optimisations so that we can compare how effective they\n    are.\n\n perf/spiral.c |   73 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 73 insertions(+)\n\ncommit e79a9a87c311fd0499c96cecbe560839a17d244e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Aug 15 10:33:48 2009 +0100\n\n    [perf] Support objdir!=srcdir in cairo-perf-diff\n    \n    Crude support to detect when we have cairo-perf-diff-files in the local\n    directory which is not srcdir.\n\n perf/cairo-perf-diff |   26 ++++++++++++++++----------\n 1 file changed, 16 insertions(+), 10 deletions(-)\n\ncommit 6bfb77a33c3614cafdcd6206de5c71321c5fc1e5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Aug 14 19:53:17 2009 +0100\n\n    [perf] Add spiral strokes\n    \n    Use cairo_stroke() to perform the equivalent of\n    spiral-rect-(pix|non)align-evenodd-fill. A useful comparison of stroking\n    versus filling, as we can assume the composition costs are similar.\n\n perf/spiral.c |   73 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 73 insertions(+)\n\ncommit 54b2935c3842e77888faef06bbf247f99bd9de8c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 13 23:23:41 2009 +0100\n\n    [perf] Reset the path after each spiral\n    \n    Oops we were accumulating paths during each spiral iteration and so the\n    tests were getting slower and slower and slower...\n    \n    [And fix a couple of other instances of path accumulation.]\n\n perf/intersections.c |    2 ++\n perf/spiral.c        |    1 +\n perf/world-map.c     |    2 ++\n 3 files changed, 5 insertions(+)\n\ncommit fddfe4973f5b49f280734ee7141ab72451cf94d2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 13 15:52:06 2009 +0100\n\n    [perf] Add clipped modes to dragon\n    \n    Investigate the performance hit for unclipped/aligned/unaligned/masked\n    modes with a reasonably complex geometry.\n\n perf/dragon.c |   35 +++++++++++++++++++++++++++++++++++\n 1 file changed, 35 insertions(+)\n\ncommit 8b3be26c7be0747378792e3a454e500d290c3982\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Aug 12 00:02:04 2009 +0100\n\n    [test] Remove misleading code/comments from a1-image-sample\n\n test/a1-image-sample.c |    4 ----\n 1 file changed, 4 deletions(-)\n\ncommit e702df59b05246a52a645792a65dc9c12d5b3feb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Aug 22 17:53:59 2009 +0100\n\n    [test] Attempt to automatically detect running under gdb\n    \n    A common mistake is to forget to pass the foreground mode to\n    cairo-test-suite when launching it under the debugger, resulting in the\n    debugger not attaching to the children and missing the error you were\n    trying to capture. Under linux, we can inspect the path to our parent's\n    executable and if that looks like gdb, we assume it is and disable forking\n    of traces.\n\n test/cairo-test-runner.c |   32 ++++++++++++++++++++++++++++++++\n 1 file changed, 32 insertions(+)\n\ncommit bf4977b645270bb88225501e73848f7814cccead\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 25 07:16:16 2009 +0100\n\n    [test] Exit on first failure '-x'\n    \n    Add a command line option to the test suite to cause it to exit after the\n    first failure. The purpose of this is for integration into 'git bisect run',\n    where the failing test is unknown and we are looking for any failure. For\n    example, for use in a regression script to find commits in the midst of as\n    series that need a refresh of a reference image (or fixing!).\n\n test/cairo-test-runner.c |   15 +++++++++++++--\n 1 file changed, 13 insertions(+), 2 deletions(-)\n\ncommit 40aefac5d714bf7536632ed38c7a8ee05049f30b\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Wed Aug 26 21:22:07 2009 +0200\n\n    [xlib] DO_XCOPYAREA and DO_XTILE optimizations break with Window source\n    \n    Cairo should include the contents of subwindows when using a Window as a\n    source but will clip to subwindows when using a Window as a destination.\n    This can be set using the GC's subwindow_mode.\n    \n    XCopyArea and XFillRectangle can however only use one GC for both source\n    and destination. Cairo's mode is set to (the default) ClipByChildren.\n    This means that copying from a Window is broken, so we only allow the\n    optimization when we know that the source is a Pixmap.\n    \n    The performance impact of this change has not been tested. It should be\n    small, as the code will use XRender otherwise.\n    \n    If it turns out to be a bigger impact, the optimizations could be\n    improved by doing a two-step copy process:\n    1) Copy to an intermediate Pixmap with IncludeInferiors\n    2) Copy to the destination with ClipByChildren\n    (potentially omitting one one of the steps if source or destination are\n    known to be Pixmaps).\n    \n    references:\n    commit 0c5d28a4e5ce5e4dd72c0f416ce5e960e92b808b\n    https://bugs.freedesktop.org/show_bug.cgi?id=12996\n\n src/cairo-xlib-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 90536ef2dd534d9385d38125445faeadd0511850\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Tue Aug 25 00:28:08 2009 -0400\n\n    [build] Remove bogus warning that we require at least one native font backend\n    \n    That limitation was lifted long ago after twin face was introduced.\n\n build/configure.ac.features |    4 ----\n 1 file changed, 4 deletions(-)\n\ncommit 20e227fc397d064af0b4b8bbf4028430695a218d\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Mon Aug 24 23:57:21 2009 -0400\n\n    [build] Fix typo\n\n build/aclocal.enable.m4 |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 87fb9a9ded0fb0355f91cad188393d26b9e47e0b\nAuthor: S\u00f8ren Sandmann Pedersen <sandmann@daimi.au.dk>\nDate:   Mon Aug 17 00:59:46 2009 -0400\n\n    [test] Update reference image for the extended-blend-mode test.\n    \n    A recent pixman change caused one-bit differences in some pixels.\n\n test/extended-blend-alpha.argb32.ref.png |  Bin 9777 -> 9406 bytes\n 1 file changed, 0 insertions(+), 0 deletions(-)\n\ncommit d1b8e260d43c7dee71244f26d50d8b2e49e9b6e0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Aug 10 21:29:13 2009 +0100\n\n    [qt] Fix compilation\n    \n    Enabling 'FAST CLIP' appears to trigger an infinite loop so disable.\n    \n    Enabling 'FAST FILL' has limited effect on performance, so disable whilst\n    the basic QT surface is improved.\n\n perf/cairo-perf-trace.c  |    2 +-\n src/cairo-qt-surface.cpp |   63 ++++++++++++++++++++++++++++++----------------\n 2 files changed, 43 insertions(+), 22 deletions(-)\n\ncommit dff0a91742908098a1ee110fadf11d4b802b1587\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Aug 10 17:57:16 2009 +0100\n\n    [xlib] Rewrite UNSUPPORTED() avoiding gcc-ism\n    \n    Behdad pointed out that fprintf() returns a value so that we could simply\n    use the comma operator to return the correct value instead of the\n    expression-block gcc-ism.\n\n src/cairo-xlib-surface.c |    7 +++----\n 1 file changed, 3 insertions(+), 4 deletions(-)\n\ncommit e63d725ad4fb92a0085224f627cbced3e3205735\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Sat Jun 6 01:08:22 2009 -0400\n\n    [utils] Remove unused code\n\n util/malloc-stats.c |   30 ------------------------------\n 1 file changed, 30 deletions(-)\n\ncommit d4d0fcb4a8055f1fdd24fc5b7b64bb55d55e1485\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Mon Aug 10 17:43:31 2009 +0100\n\n    [quartz] Compile fix for show_glyphs\n    \n    Correct the prototype for _cairo_quartz_surface_show_glyphs().\n\n src/cairo-quartz-surface.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 2a2a19457bb934f9585bfdb97730fab99c8e386c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Aug 10 17:42:05 2009 +0100\n\n    [surface] Check for a NULL snapshot\n    \n    The backend is permitted to return a NULL surface when snapshotting to\n    indicate that it cannot (or choses not to) implement the method.\n\n src/cairo-surface.c |   28 +++++++++++++++-------------\n 1 file changed, 15 insertions(+), 13 deletions(-)\n\ncommit 2e8ce34454a4d93986f590b1d2b024d1a1eb6bde\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Aug 10 16:51:07 2009 +0100\n\n    [quartz] Use the implementation font-face not the associated\n    \n    As the associated is now explicitly the font-face used to create the font\n    by the user, whereas what we require is the current implementation\n    (quartz) font.\n\n src/cairo-quartz-font.c |    6 ++----\n 1 file changed, 2 insertions(+), 4 deletions(-)\n\ncommit a4dc372bab8ebe75a9f7d17a9a2e6fc8d9d2d747\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Aug 10 16:50:00 2009 +0100\n\n    [scaled-font] Update API documentation\n    \n    Now that the toy-font-face is exposed to the user, it is expected to be\n    returned when the user queries the font face associated with a scaled font.\n\n src/cairo-scaled-font.c |    3 +--\n 1 file changed, 1 insertion(+), 2 deletions(-)\n\ncommit c4828666b9b4dad39c3f17fdfd7d1dd3cbb83cbc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Aug 10 16:45:41 2009 +0100\n\n    [script] Handle translation of compressed strings.\n    \n    After introducing the new syntax to mark a deflated string, we also need\n    to add the equivalent binary tokens.\n\n util/cairo-script/cairo-script-file.c    |   10 ++--\n util/cairo-script/cairo-script-scanner.c |   81 +++++++++++++++++++-----------\n 2 files changed, 56 insertions(+), 35 deletions(-)\n\ncommit 34870491951f5a712833b5fe7ed84c935bccfc5a\nAuthor: Andrea Canciani <ranma42@gmail.com>\nDate:   Sun Aug 9 22:33:28 2009 +0200\n\n    [quartz] Fix one more compile error\n\n src/cairo-quartz-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit c2e75b9993ab1d30002877fc11b52ea7b9acd40b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Aug 9 21:12:36 2009 +0100\n\n    [quartz] Attempt to fix compile errors\n    \n    ranma42 spotted that the quartz-backend no longer compiled after bed270,\n    so once again attempt to blindly fix those errors...\n\n src/cairo-quartz-surface.c |   18 +++++++++---------\n 1 file changed, 9 insertions(+), 9 deletions(-)\n\ncommit 81c4594712843abca188a33c1edfb70fa6c5a0d9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 6 23:41:11 2009 +0100\n\n    [script] Ensure strings are nul terminated\n    \n    Infrequently, but, for example, handling glyph strings, we require the\n    string to be nul terminated. (Otherwise an error occurs, which was\n    previously compounded by a drastic leak.)\n\n util/cairo-script/cairo-script-scanner.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit 86d6a489527d125e739aa5a6d17893bb44977010\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 6 23:39:21 2009 +0100\n\n    [script] Check for failure to store the glyph cache\n    \n    If we fail to add the glyph cache (presumably because the font is in\n    error) do not leak the allocation. As this occurs for every single glyph\n    string, the leak can grow very quickly and mask the original bug.\n\n util/cairo-script/cairo-script-operators.c |   14 ++++++++++----\n 1 file changed, 10 insertions(+), 4 deletions(-)\n\ncommit af392f7e45edcbf101ca7c91fc1ee372d283e8b9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 6 23:17:06 2009 +0100\n\n    [script] Extend csi-replay to show how to use a single surface\n    \n    Currently the replay creates a fresh surface for every new surface. Whilst\n    using it to view replays (such as with --xlib) this is often not what is\n    desired so add a mode (compile-time only for now) to use similar surfaces\n    and blits to the front buffer instead.\n\n util/cairo-script/csi-replay.c |   73 +++++++++++++++++++++++++++++++++++++++-\n 1 file changed, 72 insertions(+), 1 deletion(-)\n\ncommit b7639a5f79eaecfbaf1710fc679c7be375638efd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 6 10:55:18 2009 +0100\n\n    [trace] Close the dictionary before font\n    \n    font expects the dictionary to be constructed on the stack for its use, so\n    close it. (I missed the closing '>>' when switching between dictionary\n    constructors.)\n\n util/cairo-trace/trace.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 19f54d872fcfa9801abee9c57e30c6b3fc7eef40\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 6 10:40:32 2009 +0100\n\n    [gl] Move hidden cairo_gl_surface_create() proto to header\n    \n    Make check-plt.sh happy\n\n src/cairo-gl-private.h |    2 ++\n src/cairo-gl-surface.c |    1 -\n 2 files changed, 2 insertions(+), 1 deletion(-)\n\ncommit ee69f8aa5e0697aaeee9c00839fb7b30fe7e3184\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 6 10:30:52 2009 +0100\n\n    [trace] Whitespace\n    \n    A few gratuitous whitespace and increase the buffer size used whilst\n    reading in data files.\n\n util/cairo-trace/trace.c |   12 ++++--------\n 1 file changed, 4 insertions(+), 8 deletions(-)\n\ncommit 6d30021d65aa4126cd5eef47b0e6057dfc17d7ac\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 6 10:29:49 2009 +0100\n\n    [trace] Only write the 4 byte length to the stream\n    \n    We were attempting to write out the whole length of the block when we were\n    just trying to write out the length value.\n\n util/cairo-trace/trace.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit a439bd99d0439c007bc74584c1eb56700c520b52\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Aug 5 17:34:29 2009 +0100\n\n    [perf] Compare drawing random curves\n    \n    Extend the intersection tests with straight lines, with random curves as\n    well.\n\n perf/intersections.c |   58 +++++++++++++++++++++++++++++++++++++++++++++++++-\n 1 file changed, 57 insertions(+), 1 deletion(-)\n\ncommit 1327df2cf2f2dd9f98533d824503dfb081803b05\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 4 20:15:13 2009 +0100\n\n    [pattern] Invalid access beyond end of freed-pool\n    \n    Oops, we were attempting to return a pointer from beyond the end of our\n    array.\n\n src/cairo-pattern.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 920f59a755ce142b068f21b9db07f76f35449f16\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 4 20:13:43 2009 +0100\n\n    [build] Configure switch to disable atomics\n    \n    Workaround for my arm toolchain which succeeds in linking the configure\n    program, only to complain when linking a program (such as cairo-perf)\n    against libcairo.so. Annoying.\n\n build/configure.ac.system |   10 ++++++++--\n 1 file changed, 8 insertions(+), 2 deletions(-)\n\ncommit cb30c1f367967e3395296a5d01a3eb9050635e3b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Aug 4 13:59:03 2009 +0100\n\n    [path] Extend identical lines.\n    \n    If a subsequent PATH_OP is just a continuation of the previous line, i.e.\n    it has the same gradient, then just replace the end-point of the previous\n    line with the new point rather than adding a new operation. Surprisingly\n    this occurs in the wild, but the main motivation is a future optimisation\n    to reduce the number of intersections during stroke-to-path.\n\n src/cairo-path-fixed.c |   31 ++++++++++++++++++++++++++++---\n src/cairoint.h         |    7 +++++++\n 2 files changed, 35 insertions(+), 3 deletions(-)\n\ncommit 85b688a3f6271427befca699de3a7a15162fc59e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Aug 3 22:27:22 2009 +0100\n\n    [matrix] Use hypot()\n    \n    Use hypot() instead of open-coding sqrt(x*x + y*y). In theory, the\n    compiler could emit highly efficient code. In practice it's slower, but\n    more likely to be more accurate -- but the difference over a bare sqrt()\n    is likely not to be perceptible.\n\n src/cairo-matrix.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 0db9e010fa70c65451d324cc9c0ade989f77fedd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Aug 3 22:23:19 2009 +0100\n\n    [perf] Calibrate tests to run for at least 2 seconds\n    \n    By ensuring that tests take longer than a couple of seconds we eliminate\n    systematic errors in our measurements. However, we also effectively\n    eliminate the synchronisation overhead. To compensate, we attempt to\n    estimate the overhead by reporting the difference between a single\n    instance and the minimum averaged instance.\n\n perf/box-outline.c           |   14 +++--\n perf/cairo-perf-report.c     |    4 +-\n perf/cairo-perf.c            |   39 +++++++++---\n perf/cairo-perf.h            |    2 +-\n perf/composite-checker.c     |   22 ++++---\n perf/dragon.c                |  142 ++++++++++++++++++++++--------------------\n perf/fill.c                  |   21 +++++--\n perf/glyphs.c                |   32 +++++-----\n perf/intersections.c         |   27 ++++----\n perf/long-dashed-lines.c     |    9 +--\n perf/long-lines.c            |   68 ++++++++++----------\n perf/mask.c                  |   45 +++++++------\n perf/mosaic.c                |   38 +++++------\n perf/paint-with-alpha.c      |    5 +-\n perf/paint.c                 |    5 +-\n perf/pattern_create_radial.c |   24 +++----\n perf/pythagoras-tree.c       |   20 +++---\n perf/rectangles.c            |   38 ++++++-----\n perf/rounded-rectangles.c    |   47 +++++++++++---\n perf/spiral.c                |   51 ++++++++-------\n perf/stroke.c                |   19 ++++--\n perf/subimage_copy.c         |    7 ++-\n perf/tessellate.c            |   17 ++---\n perf/text.c                  |   27 ++++----\n perf/twin.c                  |   29 +++++----\n perf/unaligned-clip.c        |   37 ++++++-----\n perf/world-map.c             |   78 ++++++++++++-----------\n perf/zrusin.c                |   10 +--\n 28 files changed, 496 insertions(+), 381 deletions(-)\n\ncommit 60c574ad062f3d8526056942bb7c9e71610a2773\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Aug 5 15:11:00 2009 +0100\n\n    [surface] Protect against the user setting a fallback resolution of 0.\n    \n    Bug 23067 -- using clear drawing operator crashes printing\n    http://bugs.freedesktop.org/show_bug.cgi?id=23067\n    \n    Here we were hitting an assert within the paginated surface after creating\n    a zero sized fallback image, due to the paginated surface being created\n    with an x fallback resolution of 0 dpi (by\n    _gtk_printer_create_cairo_surface(), gtk/gtkprinter.c:924).\n    \n    Avoid the bug by guarding against bad input to\n    cairo_surface_set_fallback_resolution() which also allows us to identity\n    the invalid caller.\n\n src/cairo-surface.c |    8 ++++++++\n 1 file changed, 8 insertions(+)\n\ncommit a3f393cf644d75065fe524e2fbb28f55844f43bf\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 6 09:52:34 2009 +0100\n\n    [configure] Also check for libiberty.h\n    \n    cairo-trace also uses the libiberty.h without checking for its presence --\n    causing a build failure if bfd was installed but not that header.\n\n configure.ac |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 51bd27afa147f78c8f4f3778cee725b6444e7eb0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 6 09:41:15 2009 +0100\n\n    [boilerplate/test] Convert make-*-constructors to shell\n    \n    Remove the intermediate C program that was a nuisance whilst\n    cross-compiling and replace it with a simple shell script that is just a\n    combination of cat + sed.\n\n boilerplate/Makefile.am                            |   17 +-\n boilerplate/make-cairo-boilerplate-constructors.c  |  163 --------------------\n boilerplate/make-cairo-boilerplate-constructors.sh |   24 +++\n build/configure.ac.tools                           |    8 -\n test/Makefile.am                                   |   11 +-\n test/make-cairo-test-constructors.c                |  162 -------------------\n test/make-cairo-test-constructors.sh               |   24 +++\n 7 files changed, 56 insertions(+), 353 deletions(-)\n\ncommit 5dd29d7e2da8684ea46c8f1baba42e6dc64f1351\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Aug 6 09:55:43 2009 +0100\n\n    [directfb] Conditionally use DSPF_BGR555\n    \n    Appears that this token is more recent than some of my headers, so check\n    for its presence before use.\n\n src/cairo-directfb-surface.c |    4 ++++\n 1 file changed, 4 insertions(+)\n\ncommit 1d2abe7d1061e580e189604b25465c8025cedfb7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 31 19:38:23 2009 +0100\n\n    [gl] Refresh clip-operator ref.\n    \n    A minor renderering difference, acceptable.\n\n test/Makefile.am                     |    1 +\n test/clip-operator.gl.argb32.ref.png |  Bin 0 -> 8296 bytes\n 2 files changed, 1 insertion(+)\n\ncommit 640a0be2e2ef0124424aeca32915a2f644b03d27\nMerge: 067de9c 5c2239b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 31 18:03:35 2009 +0100\n\n    Merge branch 'gl-glyph-cache'\n    \n    Comparing the glyph-cache on an i915:\n    \n       gnome-terminal-20090728:  1.51x speedup\n              firefox-20090601:  No change\n\ncommit 5c2239be4b11437b1ab1731ef2dfac6cfb8095b1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 31 16:29:49 2009 +0100\n\n    [gl] Use scissors rather than allocating a temporary depth buffer.\n\n src/cairo-gl-glyphs.c  |    9 ----\n src/cairo-gl-private.h |    9 ++++\n src/cairo-gl-surface.c |  114 ++++++++++--------------------------------------\n 3 files changed, 32 insertions(+), 100 deletions(-)\n\ncommit 067de9cf62223ee7a36aab10e3d8a4e0dcda4741\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 31 17:49:39 2009 +0100\n\n    [test] Add clip-fill.\n    \n    Test filling through a complex clip.\n\n test/Makefile.am                     |    4 ++\n test/Makefile.sources                |    1 +\n test/clip-fill.c                     |   78 ++++++++++++++++++++++++++++++++++\n test/clip-fill.ps.xfail.png          |  Bin 0 -> 522 bytes\n test/clip-fill.ref.png               |  Bin 0 -> 1035 bytes\n test/clip-fill.xlib-fallback.ref.png |  Bin 0 -> 1039 bytes\n test/clip-fill.xlib.ref.png          |  Bin 0 -> 1049 bytes\n 7 files changed, 83 insertions(+)\n\ncommit 7db1fb6fa97e0c44e66c0ae533b94fb3f26b273d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 31 16:57:14 2009 +0100\n\n    [test] Add clip-text\n    \n    Test applying a complex clip to text.\n\n test/Makefile.am            |    4 ++\n test/Makefile.sources       |    1 +\n test/clip-text.c            |   88 +++++++++++++++++++++++++++++++++++++++++++\n test/clip-text.ps.xfail.png |  Bin 0 -> 434 bytes\n test/clip-text.ref.png      |  Bin 0 -> 928 bytes\n test/clip-text.svg.ref.png  |  Bin 0 -> 933 bytes\n test/clip-text.xlib.ref.png |  Bin 0 -> 900 bytes\n 7 files changed, 93 insertions(+)\n\ncommit 728d3f6383bba218de03f2693f289ddad6a80d0c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 31 16:24:37 2009 +0100\n\n    Revert \"[gl] Fixup unbounded regions after spans\"\n    \n    This reverts commit f7121ca88844fa70ecb1a35f3f6c9b653324718d.\n\n src/cairo-gl-surface.c |   68 +++++-------------------------------------------\n 1 file changed, 7 insertions(+), 61 deletions(-)\n\ncommit 74bdea1249bc1fcd223e9bab83d9b9e22fa98b99\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 31 16:20:54 2009 +0100\n\n    [spans] Emit empty rows.\n    \n    A problem that does not present itself whilst using spans to intermediate\n    masks is that the tor-span-convertor did not emit the empty rows. When\n    compositing directly using spans with an unbounded operator this was\n    causing rendering artefacts, for overlapping-glyphs and the gl backend.\n\n src/cairo-tor-scan-converter.c |   15 +++++++++++++++\n 1 file changed, 15 insertions(+)\n\ncommit 1e4b9ab04bfe18f50b9b7c2cdb75d5828e33ef69\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 31 15:27:20 2009 +0100\n\n    [gl] Return status from _render_glyphs()\n\n src/cairo-gl-glyphs.c |    6 ++++--\n 1 file changed, 4 insertions(+), 2 deletions(-)\n\ncommit 097484da6fd70867ed2128e78247eab5c43217fb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 31 14:48:32 2009 +0100\n\n    [boilerplate] Conditionally tweak the xlib surface\n    \n    Prior to introduction of the buggy members to the surface, we obviously\n    cannot set them. However, the boilerplate code is meant to compile against\n    older revisions of the library so we need to check for the existence prior\n    to use.\n\n boilerplate/cairo-boilerplate-xlib.c |   10 ++++++++--\n src/cairo-xlib-surface-private.h     |    3 +++\n 2 files changed, 11 insertions(+), 2 deletions(-)\n\ncommit 397538a251ae19bb1a34650763eb9a80108a96de\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 31 12:17:28 2009 +0100\n\n    [boilerplate] Update fallbacks after disabling RENDER\n    \n    The xlib surface caches flags based on RENDER version, so after disabling\n    render to force fallbacks, we need to ensure that the flags are reset.\n\n boilerplate/cairo-boilerplate-xlib.c |    5 +++++\n 1 file changed, 5 insertions(+)\n\ncommit 786d1f962a7e7ee7036ea85d4ea3aec7580e25db\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 31 13:17:24 2009 +0100\n\n    [xlib] Use server-side gradients.\n    \n    We can offload creation of gradients to server that support RENDER 0.10\n    and later. This greatly reduces the amount of traffic we need to send over\n    our display connection as the gradient patterns are much smaller than the\n    full image. Even if the server fallbacks to using pixman, performance\n    should be improved by the reduced transport overhead. Furthermore this is a\n    requisite to enable hardware accelerated gradients with the xlib backend.\n    \n    Running cairo-perf-trace on tiny, Celeron/i915:\n    \n      before: firefox-20090601 211.585\n       after: firefox-20090601 270.939\n    \n    and on tiger, CoreDuo/nvidia:\n    \n      before: firefox-20090601 70.143\n       after: firefox-20090601 87.326\n    \n    where linear gradients are used extensively throughout the GTK+ theme.\n    Not quite the result I was expecting!\n    \n    In particular, looking at tiny:\n    \n     xlib-rgba paint-with-alpha_linear-rgba_over-512   47.11 (47.16 0.05%) -> 123.42 (123.72 0.13%):  2.62x slowdown\n    \u2588\u258b\n     xlib-rgba paint-with-alpha_linear3-rgba_over-512   47.27 (47.32 0.04%) -> 123.78 (124.04 0.13%):  2.62x slowdown\n    \u2588\u258b\n     xlib-rgba paint-with-alpha_linear-rgb_over-512   47.19 (47.21 0.02%) -> 123.37 (123.70 0.13%):  2.61x slowdown\n    \u2588\u258b\n     xlib-rgba paint-with-alpha_linear3-rgb_over-512   47.30 (47.31 0.04%) -> 123.52 (123.62 0.09%):  2.61x slowdown\n    \u2588\u258b\n     xlib-rgba     paint_linear3-rgb_over-512   47.29 (47.32 0.05%) -> 118.95 (119.60 0.29%):  2.52x slowdown\n    \u2588\u258c\n     xlib-rgba     paint_linear-rgba_over-512   47.14 (47.17 0.06%) -> 116.76 (117.06 0.16%):  2.48x slowdown\n    \u2588\u258c\n     xlib-rgba    paint_linear3-rgba_over-512   47.32 (47.34 0.04%) -> 116.85 (116.98 0.05%):  2.47x slowdown\n    \u2588\u258c\n     xlib-rgba      paint_linear-rgb_over-512   47.15 (47.19 0.03%) -> 114.08 (114.55 0.20%):  2.42x slowdown\n    \u2588\u258d\n     xlib-rgba paint-with-alpha_radial-rgb_over-512  117.25 (119.43 1.21%) -> 194.36 (194.73 0.09%):  1.66x slowdown\n    \u258b\n     xlib-rgba paint-with-alpha_radial-rgba_over-512  117.22 (117.26 0.02%) -> 193.81 (194.17 0.11%):  1.65x slowdown\n    \u258b\n     xlib-rgba     paint_radial-rgba_over-512  117.23 (117.26 0.02%) -> 186.35 (186.41 0.03%):  1.59x slowdown\n    \u258b\n     xlib-rgba      paint_radial-rgb_over-512  117.23 (117.27 0.02%) -> 184.14 (184.62 1.51%):  1.57x slowdown\n    \u258b\n    \n    Before 1.10, we may choose to disable server-side gradients for the\n    current crop of Xorg servers, similar to the extended repeat modes.\n    \n    [Updated by Chris Wilson. All bugs are his.]\n\n NEWS                             |   28 ++++\n src/cairo-xlib-display.c         |    9 +-\n src/cairo-xlib-private.h         |    3 +-\n src/cairo-xlib-surface-private.h |    5 +-\n src/cairo-xlib-surface.c         |  306 ++++++++++++++++++++++++++++++++++----\n 5 files changed, 318 insertions(+), 33 deletions(-)\n\ncommit 53cbbad8fbbd2b9423a5eb179d0cec3fc7678791\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 31 11:35:45 2009 +0100\n\n    [xlib] Disable extended repeat modes if RENDER < 0.10\n    \n    The extended repeat modes were only introduced in RENDER 0.10, so disable\n    them if the server reports an earlier version. This is in addition to\n    disabling the repeat modes if we know (guess!) the server to have a buggy\n    implementation.\n\n src/cairo-xlib-surface.c |    4 ++++\n 1 file changed, 4 insertions(+)\n\ncommit e283e53563915daa11566ba006e1bf1e12b0d2fc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 31 10:50:13 2009 +0100\n\n    [perf] Print min_ticks in report\n    \n    As the change and ranking is based on the min_ticks, and as this can\n    sometimes deviate wildly from median_ticks, include min_ticks in the\n    output.\n    \n    In particular it helps to explain cases like:\n    \n    xlib-rgba rectangles_similar-rgba-mag_source-512    10.13 88.41% ->   5.77 0.19%:  1.50x slowdown\n    \n    which becomes\n    \n    xlib-rgba rectangles_similar-rgba-mag_source-512    3.83 (10.13 88.41%) ->   5.75 (5.77 0.19%):  1.50x slowdown\n    \n    (Considering the poor standard deviation on the initial measurement, this\n    is more likely a sampling error than a true regression.)\n\n perf/cairo-perf-diff-files.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit ce8a8424aa4331f119b115123faf7b773b5f25d0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 31 09:36:10 2009 +0100\n\n    [perf] Change the order of slowdowns.\n    \n    More the large slowdowns to the end. This has two pleasing effects:\n    \n      1. There is symmetry between large speedups at the top, and large\n         slowdowns at the bottom, with long bars -> short bars -> long bars.\n    \n      2. After a cairo-perf-diff run the largest slowdowns are immediately\n         visible on the console. What better way to flag performance\n         regressions?\n\n perf/cairo-perf-diff-files.c |   11 +++++++----\n 1 file changed, 7 insertions(+), 4 deletions(-)\n\ncommit 877ed645f95ff048f7c5d2ce0fb92389918711a6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jul 30 22:09:55 2009 +0100\n\n    [perf] Add a more complex fill, a set of rings\n    \n    In investigating performance regressions with the wip/tessellator, I'm\n    keen to inspect how the tessellator scales with polygon complexity.\n\n perf/fill.c |   37 +++++++++++++++++++++++++++++++++++++\n 1 file changed, 37 insertions(+)\n\ncommit 3dbc4170f0e89f02455b82c6496d6322e56e0491\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jul 30 10:35:11 2009 +0100\n\n    [perf] Add a single shot long-lines\n    \n    Compare the performance of self-intersection removal by comparing the cost\n    of individually stroking each line versus stroking them all en-mass.\n\n perf/long-lines.c |   45 ++++++++++++++++++++++++++++++++++-----------\n 1 file changed, 34 insertions(+), 11 deletions(-)\n\ncommit 2f033af5ab15dc56675c42434bb1c18655012b03\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jul 30 09:42:31 2009 +0100\n\n    [perf] Fix the asymmetry in long lines\n    \n    We missed the final long diagonal to the bottom-right.\n\n perf/long-lines.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 944206e55ba997a4a55334be3c7ebf8141016be7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jul 30 09:36:28 2009 +0100\n\n    [perf] Correct typo in long-lines.c\n    \n    Computed may_y using height not width, fortunately the test cases have\n    always been square.\n\n perf/long-lines.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 229887e980f03d90248add8af9cd0a9be6cb0f9a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jul 29 19:48:00 2009 +0100\n\n    [perf] Check output\n    \n    Add a CAIRO_PERF_OUTPUT environment variable to cause cairo-perf to first\n    generate an output image in order to manually check that the test is\n    functioning correctly. This needs to be automated, so that we have\n    absolute confidence that the performance tests are not broken - but isn't\n    that the role of the test suite? If we were ever to publish cairo-perf\n    results, I would want some means of verification that the test-suite had\n    first been passed.\n\n perf/cairo-perf.c |   19 +++++++++++++++++++\n 1 file changed, 19 insertions(+)\n\ncommit 8c6ecfe6488dff93090d5d0a2d814466804bc7de\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jul 29 16:17:36 2009 +0100\n\n    [perf] Remove the warning about failing to open a directory\n    \n    The warning is repeated in the error message if we fail to find any\n    traces, and now that we search a path it is likely that some elements do\n    not exist. Thus we annoy the user with irrelevant, non-fatal warnings.\n    \n    Still looking for suggestions for the most appropriate home for the system\n    wide cairo-traces dir...\n\n perf/cairo-perf-trace.c |    4 +---\n 1 file changed, 1 insertion(+), 3 deletions(-)\n\ncommit 8c1aed17ca5dafb00175ac413d56760a3ef012f9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jul 29 13:24:19 2009 +0100\n\n    [perf] Add another stroking micro-benchmark\n    \n    The original stroke only contains a single subpath. Self-intersection\n    removal particularly affects strokes with multiple curved segments, so add\n    a path that encompasses both straight edges and rounded corners.\n\n perf/stroke.c |   36 ++++++++++++++++++++++++++++++++++++\n 1 file changed, 36 insertions(+)\n\ncommit 71f5649846aa8e9e2178e7caf69ab47554f86c4d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jul 29 15:36:25 2009 +0100\n\n    [path] Fix iter to handle circular list of buffers\n    \n    When switching the path over to use the circularly linked list, 73f801,\n    I missed updating the path iterator.\n\n src/cairo-path-fixed-private.h |    1 +\n src/cairo-path-fixed.c         |    9 +++++++--\n 2 files changed, 8 insertions(+), 2 deletions(-)\n\ncommit acfcf4a31b3370ca7bbdd522fad9ddc483df3472\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jul 29 16:10:04 2009 +0100\n\n    [path] Remove the broken rel-curve-to as line-to\n    \n    As pointed out by Andrea, and now tested by test/degenerate-rel-curve-to,\n    this attempt at removing degenerate curve-to was broken.\n\n src/cairo-path-fixed.c |    6 ------\n 1 file changed, 6 deletions(-)\n\ncommit 81d3e15e6ca7b7c1a07fdfb6d03c43484ce9f502\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jul 29 16:07:17 2009 +0100\n\n    [test] Yet another bug in curve-to as line-to.\n    \n    Andrea Canciani (ranma42) found another instance of my broken 'degenerate'\n    curve-to as line-to optimisation. All I can say is when I do something\n    wrong, at least I'm consistent!\n    \n    This test case highlights the bug in the rel-curve-to path.\n\n test/Makefile.am                          |    2 +\n test/Makefile.sources                     |    1 +\n test/degenerate-rel-curve-to.c            |   99 +++++++++++++++++++++++++++++\n test/degenerate-rel-curve-to.ps.xfail.png |  Bin 0 -> 202 bytes\n test/degenerate-rel-curve-to.ref.png      |  Bin 0 -> 270 bytes\n 5 files changed, 102 insertions(+)\n\ncommit f7121ca88844fa70ecb1a35f3f6c9b653324718d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 28 20:48:26 2009 +0100\n\n    [gl] Fixup unbounded regions after spans\n\n src/cairo-gl-surface.c |   68 +++++++++++++++++++++++++++++++++++++++++++-----\n 1 file changed, 61 insertions(+), 7 deletions(-)\n\ncommit 5631f01075a030255c5eb47a8ee600b062705d0f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 28 18:56:12 2009 +0100\n\n    [gl] Cache texture snapshots.\n\n src/cairo-gl-glyphs.c  |   32 ++++--\n src/cairo-gl-private.h |    2 +-\n src/cairo-gl-surface.c |  297 +++++++++++++++++++++++++++++-------------------\n 3 files changed, 204 insertions(+), 127 deletions(-)\n\ncommit 3b0bb2cfd2ad8579e88f1c0ab46f5ccf762e0974\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 28 18:04:59 2009 +0100\n\n    [gl] Replace DrawPixels with TexSubImage\n\n src/cairo-gl-surface.c |   60 ++++++++++++++++++++++--------------------------\n 1 file changed, 27 insertions(+), 33 deletions(-)\n\ncommit 4b7a1a2da7a7f55db788cbfb3164f9f948bbb26b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 28 17:32:30 2009 +0100\n\n    [gl] Disable the EXTEND_REFLECT convertor\n    \n    As we can handle EXTEND_REFLECT via the samplers, we do not need to\n    convert such patterns to EXTEND_REPEAT during acquisition.\n\n src/cairo-gl-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 780a95b024c5880353ffc256a634eb3bcc641601\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 28 16:49:04 2009 +0100\n\n    [gl] Trim glyphs to surface/clip extents.\n\n src/cairo-gl-glyphs.c |   21 ++++++++++++++++++---\n 1 file changed, 18 insertions(+), 3 deletions(-)\n\ncommit b1227dea29d3e357cc69c49eed0ae10d5578f24a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 28 16:39:52 2009 +0100\n\n    [gl] Render glyphs to an intermediate mask as opposed to falling back.\n    \n    There are many common scenarios, mostly involving overlapping glyphs,\n    for which to guarantee correct rendering we have to composite the glyphs\n    via an explicit mask. That is instead of just blending the glyphs on to\n    the destination, we have to add the glyphs to a mask, and then composite\n    that mask+source with the destination.\n\n src/cairo-gl-glyphs.c |  306 +++++++++++++++++++++++++++++++------------------\n 1 file changed, 194 insertions(+), 112 deletions(-)\n\ncommit cd259489e2f41caaa7441233d87b46fbd43991ae\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 28 15:58:54 2009 +0100\n\n    [gl] Fallback for overlapping glyphs.\n\n src/cairo-analysis-surface.c |    6 ++++--\n src/cairo-gl-glyphs.c        |   35 ++++++++++++++++++++---------------\n src/cairo-gl-private.h       |   13 +++++++++++++\n src/cairo-scaled-font.c      |   23 +++++++++++++++++++++--\n src/cairo-surface-fallback.c |    3 ++-\n src/cairo-xcb-surface.c      |    3 ++-\n src/cairo-xlib-surface.c     |    3 ++-\n src/cairoint.h               |    3 ++-\n 8 files changed, 66 insertions(+), 23 deletions(-)\n\ncommit 3d8f1d3dc83b9a86f2f104f0e2afa192a34d18c8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 28 15:38:45 2009 +0100\n\n    [gl] Only unlock the glyph cache when full.\n\n src/cairo-gl-glyphs.c |   10 +++++++---\n 1 file changed, 7 insertions(+), 3 deletions(-)\n\ncommit 922b1fe8e380ceba0630935460ce758ef660df75\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Tue Jul 28 22:34:42 2009 +0930\n\n    Ensure Type 3 fonts do not use the name .notdef in the PS encoding\n\n src/cairo-scaled-font-subsets.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit a251e34dbbcb652906f7fddd2a72cbb5992b58ae\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 28 13:44:19 2009 +0100\n\n    [gl] Move check for vertex buffer support to individual operations.\n    \n    As we can fallback instead of using vertex buffers, do so rather than\n    preventing any use of GL acceleration.\n\n src/cairo-gl-glyphs.c  |    3 +++\n src/cairo-gl-surface.c |   17 +++++++++--------\n 2 files changed, 12 insertions(+), 8 deletions(-)\n\ncommit 90657bacc306e65e07e9eb16561a805150aef778\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 28 13:30:31 2009 +0100\n\n    [gl] Separate out supported operator check.\n    \n    By performing the check on whether the operator is supported prior to\n    acquiring the context, we do not need to handle the error part way\n    through the context setup. This makes the code much cleaner, and save\n    some work for the unsupported cases.\n\n src/cairo-gl-glyphs.c  |    7 ++++---\n src/cairo-gl-private.h |    5 ++++-\n src/cairo-gl-surface.c |   46 ++++++++++++++++++----------------------------\n 3 files changed, 26 insertions(+), 32 deletions(-)\n\ncommit 21d50e2163038c8acc0eef738acf61f851835f7d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 28 13:24:43 2009 +0100\n\n    [gl] Unthaw font along contended path.\n    \n    If we bail after freezing the font, make sure we thaw that it is thawed\n    before returning.\n\n src/cairo-gl-glyphs.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 5440055fc0329c726d324984cd2fdf07badc7e0f\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Tue Jul 28 20:59:25 2009 +0930\n\n    Ensure Type 3 fonts do not add a .notdef glyph\n\n src/cairo-scaled-font-subsets.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 1ae5a41951b8a8cb415835559f91d1636a885216\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Tue Jul 28 20:54:58 2009 +0930\n\n    PDF: Only Type 3 fonts should include glyph 0 in /ToUnicode\n    \n    4c498098 made all 8-bit fonts include glyph 0 which incorrectly\n    included Type 1 fallback fonts.\n\n src/cairo-pdf-surface.c         |   20 +++++++++++++-------\n src/cairo-scaled-font-subsets.c |    1 +\n src/cairoint.h                  |    1 +\n 3 files changed, 15 insertions(+), 7 deletions(-)\n\ncommit c11f369057c5ebb958bec58ef41f8ad4b43bdbee\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 28 13:02:10 2009 +0100\n\n    [perf] Avoid NULL derefs on broken result files.\n    \n    Instead of testing for a NULL return we checked that the pointer didn't\n    point to NIL. Oops.\n\n perf/cairo-perf-report.c |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit 19f44982348d247057df4481010c1e3ddc80bac2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 28 12:58:07 2009 +0100\n\n    [test] Wrap yet another call to get_image_surface() inside a timeout.\n    \n    I missed this call to get_image_surface() that is now being hit having\n    restored the reference image for dash-infinite-loop.\n\n test/cairo-test.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit e2f912dc5bbfad3a6f4b5e1dbfbe51be148b3232\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 28 09:32:36 2009 +0100\n\n    [script] Add cvi, cvr, mod\n    \n    Add implementations of convert-to-integer, convert-to-real and modulus\n    supplied by Zack Weinberg <zweinberg@mozilla.com>.\n\n util/cairo-script/cairo-script-operators.c |   95 +++++++++++++++++++++++++++-\n util/cairo-script/cairo-script-private.h   |    3 +\n util/cairo-script/cairo-script-scanner.c   |    6 +-\n 3 files changed, 100 insertions(+), 4 deletions(-)\n\ncommit 24b5ac6377f0e4b76b73460a497b9861fc01a889\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 28 08:05:22 2009 +0100\n\n    [test] Add timeouts around finishing and converting surfaces to images.\n    \n    In order to catch infinite loops whilst replaying and converting vector\n    surfaces to images (via external renderers) we need to also install\n    alarms around the calls to finish() and get_image().\n\n test/cairo-test.c |   14 ++++++++++----\n 1 file changed, 10 insertions(+), 4 deletions(-)\n\ncommit dacc380dd9ea23fe060d0397104ecd4b2a6d0eae\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sat Jul 11 02:59:12 2009 +0300\n\n    [test] Test extremely small dash lengths.\n    \n    The stroker code is liable to wedge when passed\n    dash patterns which don't advance the dash offset\n    due to limited precision arithmetic.  This test\n    attempts to hit all the places in the stroker where\n    that can happen.\n    \n    Reported on the cairo mailing list by Hans Breuer:\n    \n    http://lists.cairographics.org/archives/cairo/2009-June/017506.html\n\n test/Makefile.am                |    1 +\n test/Makefile.sources           |    1 +\n test/dash-infinite-loop.c       |   83 +++++++++++++++++++++++++++++++++++++++\n test/dash-infinite-loop.ref.png |  Bin 0 -> 642 bytes\n 4 files changed, 85 insertions(+)\n\ncommit 128d6fb2daf4e57def813511cc89167217041bf4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 28 08:37:54 2009 +0100\n\n    [path] Remove the erroneous conversion of a 'zero-length' curve-to\n    \n    As pointed out by Andrea, and now tested by test/degenerate-curve-to, a\n    curve-to that begins and ends on the same point may extend further due to\n    its control points. It can not be simply replaced with a degenerate\n    line-to. In order to do so we will need more extensive degeneracy\n    checking, ala _cairo_spline_init().\n\n src/cairo-path-fixed.c |    3 ---\n 1 file changed, 3 deletions(-)\n\ncommit 660c389d11bda29498807f41d3b761fa540ae9b9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 28 08:18:17 2009 +0100\n\n    [test] Add degenerate-curve-to\n    \n    Andrea Canciani (ranma42) pointed out a second bug in the curve-to as\n    line-to optimisation, that is a curve starting and finishing on the same\n    point is not necessarily degenerate. This test case exercises 5 different\n    curves that start and end on the same point.\n\n test/Makefile.am                      |    2 +\n test/Makefile.sources                 |    1 +\n test/degenerate-curve-to.c            |  103 +++++++++++++++++++++++++++++++++\n test/degenerate-curve-to.ps.xfail.png |  Bin 0 -> 202 bytes\n test/degenerate-curve-to.ref.png      |  Bin 0 -> 276 bytes\n 5 files changed, 106 insertions(+)\n\ncommit d31de83e01468eaf9e1a906aef536b63e77cb752\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Mon Jul 27 15:58:27 2009 -0700\n\n    Mark curve-to-as-line-to as XFAIL for PS backend.\n    \n    Looks like ghostscript has a similar buggy optimization like we\n    just fixed in cairo. I'm just waiting on a new bugzilla account\n    from bugs.ghostscript.com after which I plan to report the bug\n    there.\n\n test/curve-to-as-line-to.ps.xfail.png |  Bin 0 -> 112 bytes\n 1 file changed, 0 insertions(+), 0 deletions(-)\n\ncommit 45919a4f0c94a247b1c6941dbc4a57f6c9399396\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Mon Jul 27 15:45:55 2009 -0700\n\n    Revert \"[path] Convert straight curve-to to line-to\"\n    \n    This reverts commit c72ca2f2296b5fbc5859059b98221e5ffe087dae.\n    \n    This commit was broken as verified by the curve-to-as-line-to test\n    case.\n\n src/cairo-path-fixed.c |   12 ------------\n 1 file changed, 12 deletions(-)\n\ncommit 5bed405b278a6b934369873f55117d497f69bc3a\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Mon Jul 27 15:45:15 2009 -0700\n\n    Revert \"[spline] Treat a straight spline as degenerate.\"\n    \n    This reverts commit f3d265559a2f97152ce8f307ea3ce83463083088.\n    \n    This commit was broken as verified by the curve-to-as-line-to test\n    case.\n\n src/cairo-spline.c |    9 ---------\n 1 file changed, 9 deletions(-)\n\ncommit 01acad1659caf766c57849f85dc3536fe2167608\nMerge: 3cc9a60 cf15aed\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Mon Jul 27 15:26:19 2009 -0700\n\n    Merge branch 'master' of git.cairographics.org:/git/cairo\n\ncommit 3cc9a6050d9704976d8efe373b913e5309bde6d2\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Mon Jul 27 15:24:55 2009 -0700\n\n    Add new test: curve-to-as-line-to\n    \n    This test anticipates a future optimization, (already pushed\n    upstream but not pulled yet), with a buggy implementation\n    of replacing curve_to with line_to.\n\n test/Makefile.sources            |    1 +\n test/curve-to-as-line-to.c       |   95 ++++++++++++++++++++++++++++++++++++++\n test/curve-to-as-line-to.ref.png |  Bin 0 -> 95 bytes\n 3 files changed, 96 insertions(+)\n\ncommit e19b2866ed095cf66e9344efa442ae01dc7913ac\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 27 19:51:36 2009 +0100\n\n    [gl] Actually remove the glyph from the rtree on scaled_font_fini\n    \n    Mark the node as available when the scaled_glyph is finished, and then\n    attempt to collapse the parent node.\n\n src/cairo-gl-glyphs.c     |    5 +++--\n src/cairo-rtree-private.h |    3 +++\n src/cairo-rtree.c         |   13 +++++++++++++\n 3 files changed, 19 insertions(+), 2 deletions(-)\n\ncommit e0b7979a30fff2a22fef5c170fd72c37c197ee0e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 27 17:44:10 2009 +0100\n\n    [gl] Switch to using the common rtree implementation.\n\n src/cairo-gl-glyphs.c  |  440 ++++++++----------------------------------------\n src/cairo-gl-private.h |   52 ++----\n src/cairo-gl-surface.c |    5 +\n 3 files changed, 89 insertions(+), 408 deletions(-)\n\ncommit 37bf06d66efa238c4ff9c74c86a0c9d037b300e6\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Mon Jul 27 09:16:46 2009 -0700\n\n    [gl] Fix handling of clip for glyphs (clip-operator test).\n\n src/cairo-gl-glyphs.c |   43 ++++++++++++++++++++++++++++++++++++++++++-\n 1 file changed, 42 insertions(+), 1 deletion(-)\n\ncommit 74f33513194ec3d8e69a21aa71aa7fc854415e83\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Fri Jul 24 14:08:55 2009 -0700\n\n    [gl] Switch the glyph cache to using VBOs.\n    \n    This is a major performance improvement for GL even on non-TNL hardware\n    (i915), as we get to emit one giant DrawArrays and make GL drivers love us.\n    Now we're actually faster than not having the glyph cache.\n    \n    Before glyph cache (HP 945GM):\n    [  0]       gl             firefox-20090601  238.103  238.195   0.35%    5/6\n    After:\n    [  0]       gl             firefox-20090601   68.181   76.735   5.46%    6/6\n\n src/cairo-gl-glyphs.c |  177 +++++++++++++++++++++++++++++++++----------------\n 1 file changed, 120 insertions(+), 57 deletions(-)\n\ncommit ee4138e587a67c3fc4d0e89b899109af89f16e72\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Thu Jul 23 21:12:59 2009 -0700\n\n    [gl] Start adding glyph cache support.\n    \n    This is pretty much cut-and-paste from ickle's cairo-drm-i915-surface, and\n    uses fixed function and doesn't use VBOs.\n\n src/Makefile.sources   |    2 +-\n src/cairo-gl-glyphs.c  |  829 ++++++++++++++++++++++++++++++++++++++++++++++++\n src/cairo-gl-private.h |  115 +++++++\n src/cairo-gl-surface.c |   69 ++--\n 4 files changed, 965 insertions(+), 50 deletions(-)\n\ncommit cf15aed0c4e843e7297c5a1979ac0318f6df4947\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 27 19:18:21 2009 +0100\n\n    [xlib] Add a timely reminder to ensure that bugs are properly filed.\n    \n    In a discussion on IRC, attention was drawn to a dubious comment in\n    _cairo_xlib_show_glyphs() - the precise details of which have passed\n    out of the collective memory.\n\n src/cairo-xlib-surface.c |    6 ++++++\n 1 file changed, 6 insertions(+)\n\ncommit 2da01ed552d48808cdf3aa7798ddfb959d016f0f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 27 18:20:22 2009 +0100\n\n    [rtree] Merge the common unpin_and_evict_unused() routine\n    \n    Having written the same method to prune glyphs from the rtree three times,\n    I thought wise to add the common method to the core routines.\n\n src/cairo-rtree-private.h |    1 +\n src/cairo-rtree.c         |   50 +++++++++++++++++++++++++++++++++++++++++++--\n 2 files changed, 49 insertions(+), 2 deletions(-)\n\ncommit 9f6a0f5668601c74886378d6cdb9588621d30e6d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 27 14:01:32 2009 +0100\n\n    [paginated] Propagate error return during finish.\n    \n    In bed2701, I removed the explicit finish of the paginated's target\n    surface, since as a wrapper it did not explicitly own the surface and so\n    should not be calling finish(). However, we do need to propagate errors\n    from the backing surface, such as PDF, which will only be detected during\n    the implicit finish in the final destroy. So check to see it we hold the\n    last reference to the target (and so our destroy will trigger the implicit\n    finish) and call the finish explicitly and check the error status\n    afterwards.\n\n src/cairo-paginated-surface.c |   10 ++++++++++\n 1 file changed, 10 insertions(+)\n\ncommit 6ca3720ba66f443e70c961f7d4fdac604c831e97\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 27 10:06:34 2009 +0100\n\n    [test] Overlapping glyphs\n    \n    Add a test case to explicitly check handling of overlapping glyphs.\n\n test/Makefile.am                             |    4 +\n test/Makefile.sources                        |    1 +\n test/overlapping-glyphs.argb32.ref.png       |  Bin 0 -> 2696 bytes\n test/overlapping-glyphs.c                    |  123 ++++++++++++++++++++++++++\n test/overlapping-glyphs.pdf.argb32.xfail.png |  Bin 0 -> 2199 bytes\n test/overlapping-glyphs.pdf.rgb24.xfail.png  |  Bin 0 -> 1692 bytes\n test/overlapping-glyphs.rgb24.ref.png        |  Bin 0 -> 1650 bytes\n 7 files changed, 128 insertions(+)\n\ncommit 09a2b2ed3189fe12483cbd673c24ceddc2c20f3f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 27 10:14:24 2009 +0100\n\n    [xlib] Fast-path the likely case of retrieving a known xrender_format\n    \n    If we know the CPU can read pointers atomically, then we can simply peek\n    into the cached_xrender_formats to see if we already have a match, before\n    taking the mutex. (Acquiring the mutex here is a minor nuisance that\n    appears on the callgrind profiles.)\n\n src/cairo-xlib-display.c |    6 ++++++\n 1 file changed, 6 insertions(+)\n\ncommit efb3445ee1553c91e62f6b0fe50ab72d65f5c81c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 27 10:18:25 2009 +0100\n\n    Add a simple rectangle tree (rtree) implementation\n    \n    In order to efficient store small images, we need to pack them into a\n    large texture. The rtree handles allocation of small rectangles out of a\n    much larger whole. As well as tracking free rectangles, it can also be\n    used to note which parts of the texture are 'pinned' -- that is have\n    operations currently pending and so can not be modified until that batch\n    of operations have been flushed. When the rtree is full, i.e. there is no\n    single free rectangle to accommodate the allocation request, it will\n    randomly evict an unpinned block large enough to fit the request. The\n    block may comprise just a single glyph, or a subtree of many glyphs. This\n    may not be the best strategy, but it is an effective start.\n\n src/Makefile.sources      |    2 +\n src/cairo-rtree-private.h |  124 ++++++++++++++++\n src/cairo-rtree.c         |  349 +++++++++++++++++++++++++++++++++++++++++++++\n 3 files changed, 475 insertions(+)\n\ncommit c72ca2f2296b5fbc5859059b98221e5ffe087dae\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jul 26 09:07:48 2009 +0100\n\n    [path] Convert straight curve-to to line-to\n    \n    Avoid the high cost associated with curves if we can convert the curve to\n    a straight line.\n\n src/cairo-path-fixed.c |   12 ++++++++++++\n 1 file changed, 12 insertions(+)\n\ncommit f3d265559a2f97152ce8f307ea3ce83463083088\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jul 26 09:03:36 2009 +0100\n\n    [spline] Treat a straight spline as degenerate.\n    \n    The fallback for degenerate splines is to treat them as a line-to, so if\n    the spline is straight, we can just replace it with a simple line-to by\n    treating as degenerate.\n\n src/cairo-spline.c |    9 +++++++++\n 1 file changed, 9 insertions(+)\n\ncommit 25858d524d158531a71a2e772551b1e497d9d423\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jul 26 08:13:28 2009 +0100\n\n    [script] Fix reference to font source after transferring to mmap\n    \n    After diverting the pointers to accommodate lazy decompressing of the\n    source, the bytecode pointer was left pointing to the original location\n    that had already been freed - thus passing an invalid block to FreeType\n    and unsurprisingly then, blowing up.\n\n util/cairo-script/cairo-script-operators.c |    6 ++++++\n 1 file changed, 6 insertions(+)\n\ncommit ede0f7e7df4e17ddc1ffe98dcdfe0115a58e7b14\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jul 25 07:19:22 2009 +0100\n\n    [pdf] Eliminate redundant whole-page clip.\n    \n    We do not to emit a clip if it covers the whole page.\n\n src/cairo-pdf-surface.c                      |   16 ++++++++++++++++\n test/meta-surface-pattern.pdf.argb32.ref.png |  Bin 3868 -> 3919 bytes\n test/meta-surface-pattern.pdf.rgb24.ref.png  |  Bin 3806 -> 3867 bytes\n test/scale-offset-image.pdf.xfail.png        |  Bin 8692 -> 8694 bytes\n test/scale-offset-similar.pdf.xfail.png      |  Bin 9369 -> 9368 bytes\n 5 files changed, 16 insertions(+)\n\ncommit 4c498098c0dc66dc8c3e8cd60f79e5e5eda206b9\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Fri Jul 24 21:36:47 2009 +0930\n\n    PDF: Fix glyph 0 in toUnicode stream when using user fonts\n    \n    _cairo_pdf_surface_emit_to_unicode_stream() was reserving glyph 0 for\n    the .notdef glyph (as required by TrueType/CFF/Type1 fallback\n    fonts). However Type 3 fonts do not reserve glyph 0 for .notdef and\n    need glyph 0 to be included in the toUnicode stream.\n    \n    http://lists.cairographics.org/archives/cairo/2009-July/017731.html\n\n src/cairo-pdf-surface.c |   71 ++++++++++++++++++++++++++++++-----------------\n 1 file changed, 45 insertions(+), 26 deletions(-)\n\ncommit e577096dff714266101ba86ac275864b854096a4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 20 23:17:07 2009 +0100\n\n    [boilerplate] Fix compilation against old revisions (as old as 1.9.2!)\n\n boilerplate/Makefile.am                       |    7 +++++-\n boilerplate/cairo-boilerplate-pdf.c           |    4 ++++\n boilerplate/cairo-boilerplate-ps.c            |    4 ++++\n boilerplate/cairo-boilerplate-svg.c           |    4 ++++\n boilerplate/cairo-boilerplate-test-surfaces.c |   31 +++++++++++++++----------\n boilerplate/cairo-boilerplate.c               |   10 +++++---\n src/cairo-types-private.h                     |    5 +++-\n util/cairo-script/cairo-script-operators.c    |    2 ++\n 8 files changed, 50 insertions(+), 17 deletions(-)\n\ncommit 0466053099b7f27065267d49c84e9e24bff6c7a1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jul 23 23:45:01 2009 +0100\n\n    [image] Discard redundant clears\n    \n    On slow machines the call to pixman_fill_sse2() on similar surfaces that\n    we know are already zeroed takes a significant amount of time [12.77% of\n    the profile for a firefox trace, cf to just 3% of the profile is spent\n    inside memset].\n    \n    Rather than solve why the pixman_fill_sse2() is so slow, simply skip the\n    redundant clears.\n\n src/cairo-image-surface.c |   35 ++++++++++++++++++++++++++++++++++-\n src/cairoint.h            |    1 +\n 2 files changed, 35 insertions(+), 1 deletion(-)\n\ncommit 8b8e03503d7a4fdacfc48e0b35c9b02d7a08c1e2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jul 23 22:00:05 2009 +0100\n\n    [script] mark scan_read() inline\n    \n    Small function that is critical to performance whilst scanning scripts.\n\n util/cairo-script/cairo-script-scanner.c |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit f02ba09475b751fba411addb96718dbcb1de5132\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jul 23 20:23:51 2009 +0100\n\n    [xlib] Check workqueue before taking the display mutex\n    \n    Optimistically check to see if there is any outstanding work before\n    checking under the mutex. We don't care if we occasionally do not run the\n    queue this time due to contention, since we will most likely check again\n    very shortly or clean up with the display.\n\n src/cairo-xlib-display.c |    6 ++++++\n 1 file changed, 6 insertions(+)\n\ncommit 4dc62bbedc5d8669c0508963497c568d0202f579\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jul 23 19:34:10 2009 +0100\n\n    [test] Extend radial gradients to check r2 < r1\n    \n    Include additional gradients to cover the cases where r1 > r2, as a pixman\n    bug was exposed by:\n       [Bug 22908] Invalid output of radial gradient\n       http://bugs.freedesktop.org/show_bug.cgi?id=22908\n\n test/radial-gradient.c           |   36 +++++++++++++++++++++++-------------\n test/radial-gradient.pdf.ref.png |  Bin 79612 -> 277162 bytes\n test/radial-gradient.ref.png     |  Bin 91159 -> 280971 bytes\n 3 files changed, 23 insertions(+), 13 deletions(-)\n\ncommit e98e2690cb4ac475819394334cb5e61a8e3d5557\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jul 22 18:32:47 2009 +0100\n\n    [test] Fix use of uninitialized widths.\n    \n    user-font-rescale copied unitialized values from the widths array into\n    the desired array. Although these corresponded to unused glyphs and so\n    were never used during the rendering, the values may have been illegal\n    causing FPE as they were copied.\n\n test/user-font-rescale.c |   13 +++++--------\n 1 file changed, 5 insertions(+), 8 deletions(-)\n\ncommit 596dec95610ef02d86ede94eca5b83221b0b533a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jul 22 18:15:38 2009 +0100\n\n    [test] Trap SIGFPE\n    \n    Note the crash if we hit a floating-point exception.\n\n test/cairo-test.c |    7 +++++++\n 1 file changed, 7 insertions(+)\n\ncommit 0561539880b480273767a9559da89a25970802e2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jul 22 18:31:37 2009 +0100\n\n    [scaled-font] cairo_scaled_font_glyph_extents() initialise extents\n    \n    Ensure that the extents are zeroed on error.\n\n src/cairo-scaled-font.c |   23 ++++++++++++++++-------\n 1 file changed, 16 insertions(+), 7 deletions(-)\n\ncommit 5c843b5f8eca4b6f9756644143bc1be3bc3cbc84\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 21 20:43:28 2009 +0100\n\n    [scaled-font] Skip empty glyphs\n    \n    Skip the composition of empty glyphs - prevents redundant calls through\n    the stack.\n\n src/cairo-scaled-font.c |   57 ++++++++++++++++++++++++++---------------------\n 1 file changed, 31 insertions(+), 26 deletions(-)\n\ncommit 0c4692a1d0667f5850f59c65754a3ffbaf688afe\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 20 23:34:55 2009 +0100\n\n    [perf] Specify html file on cmdline instead of redirecting all output\n    \n    Redirecting all output was causing the build messages to be entangled with\n    the Performance Change html.\n\n perf/Makefile.am     |    4 ++--\n perf/cairo-perf-diff |    6 +++---\n 2 files changed, 5 insertions(+), 5 deletions(-)\n\ncommit 1ec1d6148e85d4a9b9da825ea57adb0b8ceba1c0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 20 22:42:44 2009 +0100\n\n    [perf] Compare performance against most recent tag.\n\n perf/Makefile.am |    7 ++++++-\n 1 file changed, 6 insertions(+), 1 deletion(-)\n\ncommit 9d7fd626c39c37368ea05f91a358899e5b5b898c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jul 23 17:05:28 2009 +0100\n\n    [script] Decompress font sources\n    \n    Need to decompress patterns and embedded bytecode before passing to\n    fontconfig/FreeType.\n\n util/cairo-script/cairo-script-operators.c |  119 +++++++++++++++++++++++-----\n 1 file changed, 99 insertions(+), 20 deletions(-)\n\ncommit 5d8f366581c0ca31fac76c991cb681d036af275f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jul 23 16:36:02 2009 +0100\n\n    [test] clip representation is no longer surface dependent\n    \n    So we can test the api just once in the preamble and not per-target.\n\n test/get-clip.c |  200 ++++++++++++++++++++-----------------------------------\n 1 file changed, 74 insertions(+), 126 deletions(-)\n\ncommit c3f2db4f73e93a3dafe0f52a5f9ca09ca78cc906\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 11 15:18:55 2009 +0100\n\n    [drm] Add an accelerated image surface.\n    \n    Use the DRM interface to h/w accelerate composition on image surfaces.\n    The purpose of the backend is simply to explore what such a hardware\n    interface might look like and what benefits we might expect.  The\n    use case that might justify writing such custom backends are embedded\n    devices running a drm compositor like wayland - which would, for example,\n    allow one to write applications that seamlessly integrated accelerated,\n    dynamic, high quality 2D graphics using Cairo with advanced interaction\n    (e.g. smooth animations in the UI) driven by a clutter framework...\n    \n    In this first step we introduce the fundamental wrapping of GEM for intel\n    and radeon chipsets, and, for comparison, gallium. No acceleration, all\n    we do is use buffer objects (that is use the kernel memory manager) to\n    allocate images and simply use the fallback mechanism. This provides a\n    suitable base to start writing chip specific drivers.\n\n boilerplate/Makefile.sources        |    2 +\n boilerplate/Makefile.win32.features |   20 +\n boilerplate/cairo-boilerplate-drm.c |   91 ++++\n build/Makefile.win32.features       |    2 +\n build/Makefile.win32.features-h     |    6 +\n build/configure.ac.features         |    1 +\n configure.ac                        |   25 +\n perf/cairo-perf-trace.c             |    3 +\n perf/cairo-perf.c                   |    5 +-\n src/Makefile.sources                |   13 +\n src/Makefile.win32.features         |   28 ++\n src/cairo-debug.c                   |    4 +\n src/cairo-drm.h                     |  135 +++++\n src/cairo-freelist-private.h        |   59 ++-\n src/cairo-freelist.c                |   73 +++\n src/cairo-image-surface.c           |    1 +\n src/cairo-mutex-list-private.h      |    3 +\n src/cairo.h                         |    2 +\n src/cairoint.h                      |    8 +\n src/drm/cairo-drm-bo.c              |  120 +++++\n src/drm/cairo-drm-gallium-surface.c |  696 ++++++++++++++++++++++++++\n src/drm/cairo-drm-intel-private.h   |  182 +++++++\n src/drm/cairo-drm-intel-surface.c   |  475 ++++++++++++++++++\n src/drm/cairo-drm-intel.c           |  933 +++++++++++++++++++++++++++++++++++\n src/drm/cairo-drm-ioctl-private.h   |   12 +\n src/drm/cairo-drm-private.h         |  257 ++++++++++\n src/drm/cairo-drm-radeon-private.h  |  110 +++++\n src/drm/cairo-drm-radeon-surface.c  |  437 ++++++++++++++++\n src/drm/cairo-drm-radeon.c          |  447 +++++++++++++++++\n src/drm/cairo-drm-surface.c         |  517 +++++++++++++++++++\n src/drm/cairo-drm.c                 |  362 ++++++++++++++\n test/cairo-test.c                   |    2 +-\n test/get-clip.c                     |    1 +\n 33 files changed, 5025 insertions(+), 7 deletions(-)\n\ncommit bed2701e1c89095878d549cbca8f22d84f3dda3c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jul 23 15:32:13 2009 +0100\n\n    Remove clip handling from generic surface layer.\n    \n    Handling clip as part of the surface state, as opposed to being part of\n    the operation state, is cumbersome and a hindrance to providing true proxy\n    surface support. For example, the clip must be copied from the surface\n    onto the fallback image, but this was forgotten causing undue hassle in\n    each backend. Another example is the contortion the meta surface\n    endures to ensure the clip is correctly recorded. By contrast passing the\n    clip along with the operation is quite simple and enables us to write\n    generic handlers for providing surface wrappers. (And in the future, we\n    should be able to write more esoteric wrappers, e.g. automatic 2x FSAA,\n    trivially.)\n    \n    In brief, instead of the surface automatically applying the clip before\n    calling the backend, the backend can call into a generic helper to apply\n    clipping. For raster surfaces, clip regions are handled automatically as\n    part of the composite interface. For vector surfaces, a clip helper is\n    introduced to replay and callback into an intersect_clip_path() function\n    as necessary.\n    \n    Whilst this is not primarily a performance related change (the change\n    should just move the computation of the clip from the moment it is applied\n    by the user to the moment it is required by the backend), it is important\n    to track any potential regression:\n    \n    ppc:\n    Speedups\n    ========\n    image-rgba         evolution-20090607-0    1026085.22 0.18% -> 672972.07 0.77%:  1.52x speedup\n    \u258c\n    image-rgba         evolution-20090618-0    680579.98 0.12% -> 573237.66  0.16%:  1.19x speedup\n    \u258e\n    image-rgba      swfdec-fill-rate-4xaa-0    460296.92 0.36% -> 407464.63  0.42%:  1.13x speedup\n    \u258f\n    image-rgba      swfdec-fill-rate-2xaa-0    128431.95 0.47% -> 115051.86  0.42%:  1.12x speedup\n    \u258f\n    Slowdowns\n    =========\n    image-rgba     firefox-periodic-table-0    56837.61 0.78% -> 66055.17    3.20%:  1.09x slowdown\n    \u258f\n\n NEWS                                               |    6 +\n boilerplate/cairo-boilerplate-glitz-glx.c          |    4 -\n boilerplate/cairo-boilerplate-pdf.c                |    1 -\n boilerplate/cairo-boilerplate-ps.c                 |    8 +-\n boilerplate/cairo-boilerplate-qt.cpp               |    4 +-\n boilerplate/cairo-boilerplate-svg.c                |    1 -\n boilerplate/cairo-boilerplate-test-surfaces.c      |  113 +-\n boilerplate/cairo-boilerplate.c                    |  100 +-\n boilerplate/cairo-boilerplate.h                    |    2 +\n perf/unaligned-clip.c                              |    3 +\n src/Makefile.sources                               |    7 +\n src/cairo-analysis-surface-private.h               |    6 +-\n src/cairo-analysis-surface.c                       |  539 ++++----\n src/cairo-beos-surface.cpp                         |  409 +++----\n src/cairo-clip-private.h                           |   87 +-\n src/cairo-clip.c                                   | 1290 ++++++++++----------\n src/cairo-debug.c                                  |    2 +\n src/cairo-directfb-surface.c                       |  491 ++++----\n src/cairo-ft-font.c                                |   53 +-\n src/cairo-gl-private.h                             |    1 +\n src/cairo-gl-surface.c                             |  216 +++-\n src/cairo-glitz-surface.c                          |  213 ++--\n src/cairo-gstate.c                                 |  233 ++--\n src/cairo-image-surface.c                          |  173 ++-\n src/cairo-meta-surface-private.h                   |   43 +-\n src/cairo-meta-surface.c                           |  550 ++++-----\n src/cairo-os2-surface.c                            |   14 +-\n src/cairo-paginated-private.h                      |    2 -\n src/cairo-paginated-surface-private.h              |    9 -\n src/cairo-paginated-surface.c                      |  234 ++--\n src/cairo-path-bounds.c                            |   65 +-\n src/cairo-path-fill.c                              |   11 +-\n src/cairo-path-fixed-private.h                     |   36 +-\n src/cairo-path-fixed.c                             |  201 ++-\n src/cairo-path-in-fill.c                           |   27 +-\n src/cairo-path-stroke.c                            |    8 +-\n src/cairo-pattern.c                                |  127 +-\n src/cairo-pdf-surface-private.h                    |    3 +\n src/cairo-pdf-surface.c                            |  220 ++--\n src/cairo-ps-surface-private.h                     |    4 +\n src/cairo-ps-surface.c                             |  367 +++---\n src/cairo-qt-surface.cpp                           |  373 +++---\n src/cairo-quartz-image-surface.c                   |   14 +-\n src/cairo-quartz-private.h                         |    2 +\n src/cairo-quartz-surface.c                         |  136 ++-\n src/cairo-region-private.h                         |   73 ++\n src/cairo-region.c                                 |  170 ++-\n src/cairo-scaled-font.c                            |  132 +-\n src/cairo-script-surface.c                         |  611 +++++++--\n src/cairo-script.h                                 |   10 +\n src/cairo-spans-private.h                          |   19 +-\n src/cairo-spans.c                                  |   20 +-\n src/cairo-stroke-style.c                           |    8 +-\n src/cairo-surface-clipper-private.h                |   72 ++\n src/cairo-surface-clipper.c                        |  138 +++\n src/cairo-surface-fallback-private.h               |   21 +-\n src/cairo-surface-fallback.c                       |  995 ++++++++-------\n src/cairo-surface-private.h                        |   19 +-\n src/cairo-surface-wrapper-private.h                |  156 +++\n src/cairo-surface-wrapper.c                        |  449 +++++++\n src/cairo-surface.c                                |  857 ++++---------\n src/cairo-svg-surface-private.h                    |    4 +-\n src/cairo-svg-surface.c                            |  527 ++++----\n src/cairo-traps.c                                  |   26 +-\n src/cairo-type3-glyph-surface-private.h            |    9 +-\n src/cairo-type3-glyph-surface.c                    |   94 +-\n src/cairo-types-private.h                          |    9 +-\n src/cairo-user-font.c                              |   30 +-\n src/cairo-vg-surface.c                             |  122 +-\n src/cairo-win32-font.c                             |   16 +-\n src/cairo-win32-printing-surface.c                 |  194 ++-\n src/cairo-win32-private.h                          |   15 +-\n src/cairo-win32-surface.c                          |  279 ++---\n src/cairo-xcb-surface.c                            |  248 ++--\n src/cairo-xlib-surface-private.h                   |    2 +-\n src/cairo-xlib-surface.c                           |  492 ++++----\n src/cairo.c                                        |   83 +-\n src/cairo.h                                        |   30 +-\n src/cairoint.h                                     |  325 ++---\n src/test-fallback-surface.c                        |    4 +-\n src/test-fallback16-surface.c                      |    4 +-\n src/test-null-surface.c                            |   35 +-\n src/test-paginated-surface.c                       |  100 +-\n src/test-paginated-surface.h                       |    6 +-\n src/test-wrapping-surface.c                        |  272 +++++\n src/test-wrapping-surface.h                        |   51 +\n test/Makefile.am                                   |   75 +-\n test/Makefile.sources                              |    2 +\n test/buffer-diff.c                                 |   12 +-\n test/cairo-test.c                                  |   18 +-\n test/clip-operator.pdf.argb32.ref.png              |  Bin 0 -> 9340 bytes\n test/clip-operator.pdf.argb32.xfail.png            |  Bin 9340 -> 0 bytes\n test/clip-operator.pdf.rgb24.ref.png               |  Bin 0 -> 5146 bytes\n test/clip-operator.pdf.rgb24.xfail.png             |  Bin 5155 -> 0 bytes\n test/clip-operator.svg12.argb32.xfail.png          |  Bin 8404 -> 8406 bytes\n test/clip-operator.svg12.rgb24.xfail.png           |  Bin 4523 -> 4540 bytes\n test/clip-operator.xlib-fallback.ref.png           |  Bin 0 -> 3226 bytes\n test/clip-operator.xlib-fallback.rgb24.ref.png     |  Bin 3254 -> 0 bytes\n test/clip-push-group.pdf.ref.png                   |  Bin 0 -> 164 bytes\n test/clip-push-group.ref.png                       |  Bin 199 -> 164 bytes\n test/clip-push-group.xlib.ref.png                  |  Bin 0 -> 155 bytes\n test/clip-unbounded.c                              |   80 ++\n test/clip-unbounded.ref.png                        |  Bin 0 -> 100 bytes\n test/clip-unbounded.rgb24.ref.png                  |  Bin 0 -> 97 bytes\n test/clip-unbounded.svg12.rgb24.xfail.png          |  Bin 0 -> 100 bytes\n test/clipped-group.pdf.argb32.ref.png              |  Bin 298 -> 0 bytes\n test/clipped-group.pdf.ref.png                     |  Bin 0 -> 310 bytes\n test/clipped-group.pdf.rgb24.ref.png               |  Bin 298 -> 0 bytes\n test/clipped-group.ref.png                         |  Bin 350 -> 316 bytes\n ...integer-translate-source.svg12.argb32.xfail.png |  Bin 0 -> 16392 bytes\n ...-integer-translate-source.svg12.rgb24.xfail.png |  Bin 0 -> 16392 bytes\n test/device-offset-fractional.pdf.argb32.ref.png   |  Bin 275 -> 0 bytes\n test/device-offset-fractional.pdf.ref.png          |  Bin 277 -> 0 bytes\n test/device-offset-fractional.pdf.rgb24.ref.png    |  Bin 275 -> 0 bytes\n test/device-offset-fractional.pdf.xfail.png        |  Bin 0 -> 275 bytes\n test/extended-blend-alpha.svg12.argb32.xfail.png   |  Bin 0 -> 6857 bytes\n test/extended-blend-alpha.svg12.rgb24.xfail.png    |  Bin 0 -> 5014 bytes\n test/extended-blend.svg12.argb32.xfail.png         |  Bin 0 -> 2273 bytes\n test/extended-blend.svg12.rgb24.xfail.png          |  Bin 0 -> 1856 bytes\n test/fill-empty.argb32.ref.png                     |  Bin 0 -> 99 bytes\n test/fill-empty.c                                  |   62 +\n test/fill-empty.rgb24.ref.png                      |  Bin 0 -> 97 bytes\n test/fill-empty.svg12.rgb24.xfail.png              |  Bin 0 -> 99 bytes\n test/filter-nearest-offset.pdf.xfail.png           |  Bin 1926 -> 1867 bytes\n test/filter-nearest-transformed.pdf.xfail.png      |  Bin 488 -> 482 bytes\n ...t-text-vertical-layout-type1.pdf.argb32.ref.png |  Bin 3632 -> 0 bytes\n test/ft-text-vertical-layout-type1.pdf.ref.png     |  Bin 3968 -> 3635 bytes\n ...ft-text-vertical-layout-type1.pdf.rgb24.ref.png |  Bin 3632 -> 0 bytes\n ...t-text-vertical-layout-type3.pdf.argb32.ref.png |  Bin 3642 -> 0 bytes\n test/ft-text-vertical-layout-type3.pdf.ref.png     |  Bin 3634 -> 3639 bytes\n ...ft-text-vertical-layout-type3.pdf.rgb24.ref.png |  Bin 3642 -> 0 bytes\n test/ft-text-vertical-layout-type3.ref.png         |  Bin 3609 -> 3608 bytes\n test/group-unaligned.svg.argb32.xfail.png          |  Bin 522 -> 520 bytes\n test/group-unaligned.xlib-fallback.ref.png         |  Bin 496 -> 474 bytes\n test/image-surface-source.svg12.argb32.xfail.png   |  Bin 0 -> 278 bytes\n test/image-surface-source.svg12.rgb24.xfail.png    |  Bin 0 -> 278 bytes\n test/in-fill-trapezoid.c                           |   19 +-\n test/mask-glyphs.svg.ref.png                       |  Bin 1211170 -> 1211147 bytes\n test/mask.pdf.argb32.ref.png                       |  Bin 0 -> 7837 bytes\n test/mask.pdf.argb32.xfail.png                     |  Bin 7944 -> 0 bytes\n test/mask.pdf.rgb24.ref.png                        |  Bin 0 -> 7301 bytes\n test/mask.pdf.rgb24.xfail.png                      |  Bin 7388 -> 0 bytes\n test/mask.xlib-fallback.rgb24.ref.png              |  Bin 7216 -> 0 bytes\n test/meta-surface-pattern.pdf.argb32.ref.png       |  Bin 4009 -> 3868 bytes\n test/meta-surface-pattern.pdf.rgb24.ref.png        |  Bin 3905 -> 3806 bytes\n test/operator-clear.xlib.argb32.ref.png            |  Bin 0 -> 1071 bytes\n test/operator-clear.xlib.ref.png                   |  Bin 951 -> 0 bytes\n test/operator-clear.xlib.rgb24.ref.png             |  Bin 0 -> 951 bytes\n test/operator-source.pdf.rgb24.ref.png             |  Bin 0 -> 3645 bytes\n test/operator-source.pdf.rgb24.xfail.png           |  Bin 3645 -> 0 bytes\n test/operator-source.svg12.argb32.xfail.png        |  Bin 2951 -> 2967 bytes\n test/operator-source.svg12.rgb24.xfail.png         |  Bin 2963 -> 2976 bytes\n test/operator-source.xlib-fallback.ref.png         |  Bin 0 -> 3177 bytes\n test/operator-source.xlib-fallback.rgb24.ref.png   |  Bin 3193 -> 0 bytes\n test/path-append.xlib-fallback.ref.png             |  Bin 6357 -> 6320 bytes\n test/pdf-surface-source.svg12.argb32.xfail.png     |  Bin 0 -> 278 bytes\n test/pdf-surface-source.svg12.rgb24.xfail.png      |  Bin 0 -> 278 bytes\n test/ps-surface-source.svg12.argb32.xfail.png      |  Bin 0 -> 278 bytes\n test/ps-surface-source.svg12.rgb24.xfail.png       |  Bin 0 -> 278 bytes\n test/push-group.xlib-fallback.rgb24.ref.png        |  Bin 2912 -> 0 bytes\n test/scale-offset-image.meta.xfail.png             |  Bin 0 -> 8599 bytes\n test/scale-offset-image.pdf.argb32.ref.png         |  Bin 8692 -> 0 bytes\n test/scale-offset-image.pdf.rgb24.ref.png          |  Bin 8691 -> 0 bytes\n test/scale-offset-image.pdf.xfail.png              |  Bin 0 -> 8692 bytes\n test/scale-offset-image.xlib-fallback.xfail.png    |  Bin 0 -> 8580 bytes\n test/scale-offset-similar.meta.xfail.png           |  Bin 0 -> 9095 bytes\n test/scale-offset-similar.pdf.argb32.ref.png       |  Bin 9278 -> 0 bytes\n test/scale-offset-similar.pdf.rgb24.ref.png        |  Bin 9278 -> 0 bytes\n test/scale-offset-similar.pdf.xfail.png            |  Bin 0 -> 9369 bytes\n test/scale-offset-similar.xlib-fallback.xfail.png  |  Bin 0 -> 8580 bytes\n test/self-intersecting.argb32.xfail.png            |  Bin 287 -> 235 bytes\n test/self-intersecting.pdf.argb32.xfail.png        |  Bin 295 -> 285 bytes\n test/self-intersecting.pdf.rgb24.xfail.png         |  Bin 272 -> 269 bytes\n test/self-intersecting.rgb24.xfail.png             |  Bin 282 -> 240 bytes\n test/smask-fill.xlib-fallback.ref.png              |  Bin 1156 -> 0 bytes\n test/smask-text.xlib.ref.png                       |  Bin 0 -> 1672 bytes\n test/smask.xlib.ref.png                            |  Bin 0 -> 3393 bytes\n test/surface-pattern-big-scale-down.ps.xfail.png   |  Bin 0 -> 238 bytes\n test/svg-surface-source.svg12.argb32.xfail.png     |  Bin 0 -> 278 bytes\n test/svg-surface-source.svg12.rgb24.xfail.png      |  Bin 0 -> 278 bytes\n ...allback16-surface-source.svg12.argb32.xfail.png |  Bin 0 -> 278 bytes\n ...fallback16-surface-source.svg12.rgb24.xfail.png |  Bin 0 -> 278 bytes\n test/text-pattern.pdf.argb32.ref.png               |  Bin 0 -> 1831 bytes\n test/text-pattern.pdf.argb32.xfail.png             |  Bin 1845 -> 0 bytes\n test/text-pattern.pdf.rgb24.ref.png                |  Bin 0 -> 1598 bytes\n test/text-pattern.pdf.rgb24.xfail.png              |  Bin 1599 -> 0 bytes\n test/unbounded-operator.svg12.argb32.xfail.png     |  Bin 2767 -> 2771 bytes\n test/unbounded-operator.svg12.rgb24.xfail.png      |  Bin 1719 -> 1731 bytes\n test/user-font-proxy.svg.ref.png                   |  Bin 16817 -> 16814 bytes\n test/xlib-surface-source.svg12.argb32.xfail.png    |  Bin 0 -> 278 bytes\n test/xlib-surface-source.svg12.rgb24.xfail.png     |  Bin 0 -> 278 bytes\n util/cairo-script/cairo-script-file.c              |   39 +-\n util/cairo-script/cairo-script-objects.c           |   22 +\n util/cairo-script/cairo-script-private.h           |    9 +-\n util/cairo-script/cairo-script-scanner.c           |   52 +-\n util/cairo-trace/trace.c                           |  119 +-\n 196 files changed, 7741 insertions(+), 5903 deletions(-)\n\ncommit f5a1cdf283a6aa1f4409ccbf3c2274fb587724fe\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jul 23 14:46:16 2009 +0100\n\n    [gl] Simplify the common CLEAR of a surface\n    \n    Almost every surface is at sometime cleared, so catch the operation in\n    paint(), and emit a simple glClear() instead.\n\n src/cairo-gl-surface.c |   25 ++++++++++++++++++++++++-\n 1 file changed, 24 insertions(+), 1 deletion(-)\n\ncommit eed17527f62eab826af65258b60cd4545a71a22d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jul 23 14:30:46 2009 +0100\n\n    [gl] Do not use unchecked GL v1.5 features\n    \n    The span renderer uses ARB_vertex_buffer_object which was included into\n    the core as part of OpenGL 1.5. We failed to check for the required version\n    during initialisation, and to my surprise the i915 can only support OpenGL\n    1.4 as it lacks ARB_occlusion_query. So just use the ARB extension instead\n    which is present on i915.\n\n src/cairo-gl-surface.c |   24 +++++++++++++-----------\n 1 file changed, 13 insertions(+), 11 deletions(-)\n\ncommit 6c28c7a1e268fad0ad34cac0d8a9a3951d8f3c7a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jul 23 08:45:58 2009 +0100\n\n    [perf] Add a simple report printer.\n    \n    After a run, it can be useful to reprint the results, so add\n    cairo-perf-print to perform that task.\n    \n    For the future, I'd like to move the performance suite over to the\n    git/perf style of single, multi-function binary.\n    \n    The sequence of operations that I typically do are:\n    \n    ./cairo-perf-trace -r -v -i 6 > `git describe`.`hostname`.perf\n    ./cairo-perf-diff-files REVA REVB\n    ./cairo-perf-print REVA\n    ./cairo-perf-compare-backends REVA\n    \n    which misses the caching available with cairo-perf-diff. 'make html' is\n    almost what I want, but still too prescriptive. However, that does need to\n    be addressed for continuous performance monitoring.\n    \n    Along the perf lines, those sequence of operations become:\n      ./cairo-perf record -i 6\n      ./cairo-perf report\n      ./cairo-perf report REVA REVB\n      ./cairo-perf report --backends=\"image,xlib,gl\" REVA REVB\n      ./cairo-perf report --html REVA REVB\n    \n    Also we want to think about installing the cairo-perf binary. So we want\n    to differentiate when run inside a git checkout.\n\n perf/Makefile.am        |    8 ++++--\n perf/cairo-perf-print.c |   72 +++++++++++++++++++++++++++++++++++++++++++++++\n 2 files changed, 78 insertions(+), 2 deletions(-)\n\ncommit 92ba74d760f20cd257b3916a51c8efef1c0e021e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jul 22 19:04:07 2009 +0100\n\n    [vg] Compile fixes for EGL boilerplate\n\n boilerplate/cairo-boilerplate-vg.c |   19 +++++++++----------\n 1 file changed, 9 insertions(+), 10 deletions(-)\n\ncommit bfbe875ded0b0666a8048ef5fb598179a81c610a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jul 22 07:52:30 2009 +0100\n\n    [gl] Enable GL backend for cairo-perf-trace\n\n perf/cairo-perf-trace.c |    3 +++\n perf/cairo-perf.c       |    4 +++-\n 2 files changed, 6 insertions(+), 1 deletion(-)\n\ncommit fed000620335a5fc2bda2ffeca5cbdd0ca5a158c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jul 22 07:49:05 2009 +0100\n\n    [NEWS] Add stub for OpenGL.\n\n NEWS |    8 ++++++++\n 1 file changed, 8 insertions(+)\n\ncommit bff0b11634ffe52a5c8b2bbc9b6aee5bc3d2772c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jul 22 07:45:21 2009 +0100\n\n    [gl] Update reference images\n\n test/Makefile.am                               |   14 ++++++++++++++\n test/a1-image-sample.gl.xfail.png              |  Bin 0 -> 120 bytes\n test/alpha-similar.gl.argb32.xfail.png         |  Bin 0 -> 99 bytes\n test/alpha-similar.gl.rgb24.xfail.png          |  Bin 0 -> 93 bytes\n test/device-offset-fractional.gl.xfail.png     |  Bin 0 -> 311 bytes\n test/filter-nearest-offset.gl.xfail.png        |  Bin 0 -> 260 bytes\n test/filter-nearest-transformed.gl.xfail.png   |  Bin 0 -> 514 bytes\n test/finer-grained-fallbacks.gl.argb32.ref.png |  Bin 0 -> 1075 bytes\n test/mask-glyphs.gl.ref.png                    |  Bin 0 -> 1188669 bytes\n test/meta-surface-pattern.gl.argb32.ref.png    |  Bin 0 -> 3130 bytes\n test/scale-offset-image.gl.ref.png             |  Bin 0 -> 9197 bytes\n test/scale-offset-similar.gl.ref.png           |  Bin 0 -> 9197 bytes\n test/source-clip-scale.gl.ref.png              |  Bin 0 -> 164 bytes\n test/unbounded-operator.gl.argb32.xfail.png    |  Bin 0 -> 2805 bytes\n test/unbounded-operator.gl.rgb24.xfail.png     |  Bin 0 -> 1355 bytes\n 15 files changed, 14 insertions(+)\n\ncommit 653351cd2e9fbe42333cd5ce57b7b49c6da3d122\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jul 22 07:38:24 2009 +0100\n\n    [gl] Copy font options from image backend.\n    \n    Enable hint metrics similar to the default image backend. However,\n    consider using the display stored in the GLX context to query the screen\n    default.\n\n src/cairo-gl-surface.c |   11 ++++++++++-\n 1 file changed, 10 insertions(+), 1 deletion(-)\n\ncommit a2ac67274d4ef89079c47cc415144a6ac0303f70\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jul 22 00:05:07 2009 +0100\n\n    [gl] Add warning about missing hook for XCloseDisplay().\n\n src/cairo-glx-context.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit f2f42ec70a626a69f4b29f55f9d1818942bb0b19\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jul 22 00:01:22 2009 +0100\n\n    [gl] Apply pixel sample bias for spans\n\n src/cairo-gl-surface.c |   10 ++++++----\n 1 file changed, 6 insertions(+), 4 deletions(-)\n\ncommit 9e420f5d0669ec12eaaf7faf4e55642c10b95fb3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 21 23:45:00 2009 +0100\n\n    [gl] Another whitespace pass.\n\n src/cairo-gl-surface.c |   69 ++++++++++++++++++++++++------------------------\n 1 file changed, 35 insertions(+), 34 deletions(-)\n\ncommit 222fd8b49b25c56f38ad375059240983a8f576ce\nMerge: 5471603 7ee0fee\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 21 23:42:34 2009 +0100\n\n    Merge commit 'anholt/gl-span-renderer'\n\ncommit 5471603b527ecf43aaa72665d47929a1038aa642\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 21 23:38:05 2009 +0100\n\n    [gl] Use QUADS for drawing fill_rectangles() not TRIFAN\n    \n    As each rectangle is independent, we need to draw the array using QUADS.\n\n src/cairo-gl-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit c3ef0c8d2011a23d73ff919dbb947ca68e1d8c1b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 21 23:31:30 2009 +0100\n\n    [gl] Whitespace\n    \n    Ensure we leave a space between a function call and its parameters.\n\n src/cairo-gl-surface.c |   90 ++++++++++++++++++++++++------------------------\n 1 file changed, 45 insertions(+), 45 deletions(-)\n\ncommit b71c27bf4ebd19f74f22392ddb2612d843c74a38\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 21 23:26:15 2009 +0100\n\n    [gl] Remove dead code.\n    \n    The loop between texture_setup() and clone_similar() should be\n    impossible, since every compositing backend should know how to clone an\n    image surface. cairo-gl is no longer an exception and so this code can\n    safely be removed.\n\n src/cairo-gl-surface.c |   25 +------------------------\n 1 file changed, 1 insertion(+), 24 deletions(-)\n\ncommit c8cc6a205a68a7c87239424aa93a29b5b166561d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 21 23:08:39 2009 +0100\n\n    [gl] Avoid temporary allocation of pixman trapezoids\n    \n    When creating the trapezoid mask, avoid having to allocate a temporary\n    array to hold the converted pixman trapezoids by instead rasterizing each\n    trapezoid separately into the mask.\n\n src/cairo-gl-surface.c |   82 +++++++++++++++++++++---------------------------\n 1 file changed, 36 insertions(+), 46 deletions(-)\n\ncommit 5deb8fa213ce86759053be391966618ee0959f50\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jun 9 16:20:32 2009 +0100\n\n    [gl] Construct a dummy window for the initial context\n    \n    In order to make the initial context current we need a Drawable that\n    matches the context. In general, the RootWindow may not match the desired\n    context so we need to query the context and construct an appropriate\n    Drawable.\n\n src/cairo-glx-context.c |   70 ++++++++++++++++++++++++++++++++++++++++++-----\n 1 file changed, 63 insertions(+), 7 deletions(-)\n\ncommit 911482e5ae88ba26a1b3290731968f8b8a80cd70\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri May 22 23:44:27 2009 +0100\n\n    [gl] Constrain image sources to max texture size\n\n src/cairo-gl-private.h |    2 ++\n src/cairo-gl-surface.c |   19 +++++++++++++++++++\n 2 files changed, 21 insertions(+)\n\ncommit 1ae5942a3aa9f73aa71438dc40221836b0dff7e2\nMerge: fd9df49 6a59574\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 21 22:28:44 2009 +0100\n\n    Merge commit 'anholt/gl'\n    \n    Conflicts:\n    \tboilerplate/Makefile.sources\n    \tboilerplate/cairo-boilerplate.c\n    \tbuild/configure.ac.features\n    \tsrc/cairo.h\n    \tutil/cairo-script/Makefile.am\n\ncommit fd9df4978d56bbb85ecd795afce72c0310dbcf3f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 21 20:51:46 2009 +0100\n\n    [perf] Don't override CAIRO_TRACE_DIR in cairo-perf-diff\n\n perf/cairo-perf-diff |    1 -\n 1 file changed, 1 deletion(-)\n\ncommit 2dd97ae59c482f09e42d719a941e189560f00b8f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 20 22:19:21 2009 +0100\n\n    [perf] Include trace comparison in html output\n\n build/Makefile.am.analysis |    2 ++\n perf/Makefile.am           |    2 +-\n perf/cairo-perf-diff       |   17 +++++++----------\n perf/make-html.py          |    3 +--\n 4 files changed, 11 insertions(+), 13 deletions(-)\n\ncommit f30cee70f5fadd1f2af60310a148f61ed4fc7069\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 20 22:17:30 2009 +0100\n\n    [perf] Search multiple directories for traces\n    \n    In view of sharing traces between multiple builder, add some system wide\n    directories to the search path. This should be refined to a single\n    canonical location before release.\n\n perf/cairo-perf-trace.c |   23 +++++++++++++++++++++--\n 1 file changed, 21 insertions(+), 2 deletions(-)\n\ncommit ebac096648d638d6405152d37d7b58a0f6ad3242\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 20 19:54:12 2009 +0100\n\n    [build] And export CC_FOR_BUILD so that we can actually use it!\n\n build/configure.ac.tools |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit ed7853d4991f17a5e6df694808d33603eecf9186\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 20 19:37:27 2009 +0100\n\n    [build] Use ${CC} as the default value for CC_FOR_BUILD\n\n build/configure.ac.tools |    7 +++++++\n 1 file changed, 7 insertions(+)\n\ncommit 809f77a5cb7c17582a0ed90285a3c48c0696ed3e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 20 13:44:48 2009 +0100\n\n    [test] Summarise tests that fail during the preamble.\n    \n    Some tests only run and check during the preamble phase, and those\n    failures were being ignored during the summary.\n\n test/cairo-test-runner.c |  109 ++++++++++++++++++++++++++++++++++++----------\n 1 file changed, 85 insertions(+), 24 deletions(-)\n\ncommit dbaa08e80b6d53f905974f3d2012f9425d9b8603\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 20 11:53:17 2009 +0100\n\n    [test] Fallback to comparing the base image references\n    \n    After looking at backend specific images, check against the base image\n    reference. This is useful to fallback surfaces like xlib-fallback, which\n    should look closer to the image backend than the xlib backend.\n\n test/cairo-test.c |  231 +++++++++++++++++++++++++++++++++++++----------------\n 1 file changed, 163 insertions(+), 68 deletions(-)\n\ncommit 164e0d2ea38baacd5888bffa5bebb5d64bfee01b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 20 11:02:04 2009 +0100\n\n    [test] Misidentification of XFAIL as NEW\n    \n    cut'n'paste error compared the image against the known failure instead of\n    any recorded new failure, when checking for NEW fails.\n\n test/cairo-test.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit e2883177487ba294a0c97bafb00e2f56e5fe84d9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 20 18:55:04 2009 +0100\n\n    Add a jhbuild moduleset.\n\n util/cairo.modules |   19 +++++++++++++++++++\n 1 file changed, 19 insertions(+)\n\ncommit 0c1e86d661e145981050129b163eae0fb8f4a963\nAuthor: Pierre Tardy <tardyp@gmail.com>\nDate:   Sat Jul 18 19:16:20 2009 +0100\n\n    Cross-compilation fix for boilerplate/test\n\n boilerplate/Makefile.am |    2 +-\n test/Makefile.am        |    2 +-\n 2 files changed, 2 insertions(+), 2 deletions(-)\n\ncommit aac256b2692d15fc21abcdc9c1b9e5fd35f63f66\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jul 18 16:15:47 2009 +0100\n\n    Compile fixes for mingw32.\n    \n    Trivial typos found whilst using a cross-compiler.\n\n src/cairo-win32-surface.c                |    1 +\n util/cairo-script/cairo-script-private.h |    4 ++--\n 2 files changed, 3 insertions(+), 2 deletions(-)\n\ncommit 922b01ad141305f909a4cfffc6c65a27c6d7a8a6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 17 14:27:19 2009 +0100\n\n    [test] Add a simplified CLEAR test.\n    \n    Just performs a very basic masked clear. This does not exhibit the bug I was\n    looking for, but is still useful for its simplicity.\n\n test/Makefile.am                  |    4 ++\n test/Makefile.sources             |    1 +\n test/clear.argb32.ref.png         |  Bin 0 -> 695 bytes\n test/clear.c                      |   86 +++++++++++++++++++++++++++++++++++++\n test/clear.rgb24.ref.png          |  Bin 0 -> 618 bytes\n test/clear.svg12.argb32.xfail.png |  Bin 0 -> 170 bytes\n test/clear.svg12.rgb24.xfail.png  |  Bin 0 -> 170 bytes\n 7 files changed, 91 insertions(+)\n\ncommit 52fa8760aeef38abbab0484a6978adaf4f100f90\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jul 15 16:37:25 2009 +0100\n\n    Add OpenVG backend.\n    \n    Based on the work by \u00d8yvind Kol\u00e5s and Pierre Tardy -- many thanks to\n    Pierre for pushing this backend for inclusion as well as testing and\n    reviewing my initial patch. And many more thanks to pippin for writing the\n    backend in the first place!\n    \n    Hacked and chopped by myself into a suitable basis for a backend. Quite a\n    few issues remain open, but would seem to be ready for testing on suitable\n    hardware.\n\n AUTHORS                             |    3 +-\n NEWS                                |    3 +\n boilerplate/Makefile.sources        |    1 +\n boilerplate/Makefile.win32.features |   30 +\n boilerplate/cairo-boilerplate-vg.c  |  350 +++++++\n build/Makefile.win32.features       |    3 +\n build/Makefile.win32.features-h     |    9 +\n build/configure.ac.features         |    3 +\n configure.ac                        |   43 +\n src/Makefile.sources                |    3 +\n src/Makefile.win32.features         |   42 +\n src/cairo-vg-surface.c              | 1938 +++++++++++++++++++++++++++++++++++\n src/cairo-vg.h                      |  103 ++\n src/cairo.h                         |    4 +-\n test/cairo-test.c                   |    3 +-\n test/get-clip.c                     |    1 +\n util/cairo-trace/trace.c            |   70 ++\n 17 files changed, 2606 insertions(+), 3 deletions(-)\n\ncommit 34d5b862bce3e9273391eb5d2c384394cca94d2d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jul 16 14:18:13 2009 +0100\n\n    [xlib] Enable Render support for the extended PDF operators\n    \n    With the latest 0.11 release of renderproto we now have the ability to\n    use the extended PDF operators via Render.\n\n src/cairo-image-surface.c |   10 ++++++----\n src/cairo-xlib-surface.c  |   48 ++++++++++++++++++++++++++++++++++++++++++---\n 2 files changed, 51 insertions(+), 7 deletions(-)\n\ncommit 01eec61f4ffae4f492d667b6accb5ed3f6960d2c\nAuthor: Tobias Hunger <tobias.hunger@gmail.com>\nDate:   Thu Jul 16 00:16:59 2009 -0400\n\n    [qt] Remove use of unnecessary QBrush pointer\n    \n    QBrush is a implicitly shared datastructure. There is on need to layer\n    \"explicit pointer based sharing\" atop of it.\n    \n    Mozilla Bug #498871\n\n src/cairo-qt-surface.cpp |   31 +++++++++++++++----------------\n 1 file changed, 15 insertions(+), 16 deletions(-)\n\ncommit 222c12cc4e48c2c9178a7390ea8edd73d7cb56bb\nAuthor: Tobias Hunger <tobias.hunger@gmail.com>\nDate:   Thu Jul 16 00:16:59 2009 -0400\n\n    [qt] Remove use of unnecessary QPen pointer\n    \n    QPen is a implicitly shared class, so there is no need to do explicit sharing\n    via pointers.\n    \n    Mozilla Bug #498873\n\n src/cairo-qt-surface.cpp |   22 ++++++++++------------\n 1 file changed, 10 insertions(+), 12 deletions(-)\n\ncommit 0797b2fcaad0c17c35e67ec5d01a0556a76ee39d\nAuthor: Tobias Hunger <tobias.hunger@gmail.com>\nDate:   Thu Jul 16 00:16:59 2009 -0400\n\n    [qt] Cleanup some whitespace\n    \n    Mozilla bug #498843\n\n src/cairo-qt-surface.cpp |  212 +++++++++++++++++++++++-----------------------\n 1 file changed, 106 insertions(+), 106 deletions(-)\n\ncommit d782ba04b76ae18c562840242dc535e9db48aa13\nAuthor: Tobias Hunger <tobias.hunger@gmail.com>\nDate:   Thu Jul 16 00:16:58 2009 -0400\n\n    [qt] Add method to flush qpainter\n    \n    This is required for non-X11 rendering backends.\n    \n    Mozilla bug #498910\n\n src/cairo-qt-surface.cpp |   14 +++++++++++++-\n 1 file changed, 13 insertions(+), 1 deletion(-)\n\ncommit e713857b85ef45d923eae94d8e4c05c7b2049ca5\nAuthor: Tobias Hunger <tobias.hunger@gmail.com>\nDate:   Thu Jul 16 00:16:58 2009 -0400\n\n    [qt] Move _opstr() inside the #if 0 to avoid warnings\n    \n    Mozilla bug #498917\n\n src/cairo-qt-surface.cpp |   50 +++++++++++++++++++++++-----------------------\n 1 file changed, 25 insertions(+), 25 deletions(-)\n\ncommit 4f9551e5e533deb66401b601766bf4263192b6de\nAuthor: Tobias Hunger <tobias.hunger@gmail.com>\nDate:   Thu Jul 16 00:16:57 2009 -0400\n\n    [qt] Reduce padding in cairo_qt_surface_t struct\n    \n    Removes 4 bytes of padding (on a 32bit system) from the datastructure by\n    reordering the members.\n    \n    Mozilla bug #498880\n\n src/cairo-qt-surface.cpp |   27 ++++++++++++++-------------\n 1 file changed, 14 insertions(+), 13 deletions(-)\n\ncommit 1caa34103925c53b180cd614f5c6b425b5a3f271\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jul 15 13:26:34 2009 +0100\n\n    Fix build under distcheck\n    \n    Need to play a little dance to get the sources included and paths correct\n    whilst building source files with objdir != srcdir under distcheck.\n\n boilerplate/Makefile.am                           |   10 +--\n boilerplate/make-cairo-boilerplate-constructors.c |   19 ++++--\n doc/public/tmpl/cairo-surface.sgml                |    2 +\n doc/public/tmpl/cairo.sgml                        |   15 ++++\n test/Makefile.am                                  |    9 ++-\n test/make-cairo-test-constructors.c               |   13 +++-\n util/cairo-script/csi-bind.c                      |   76 +++++++++++++++++++++\n 7 files changed, 125 insertions(+), 19 deletions(-)\n\ncommit 818ad38a0e323892231469520a4b077f4dae31d4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 14 19:07:42 2009 +0100\n\n    [boilerplate] Add make-...-constructors to .gitignore\n\n boilerplate/.gitignore |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 9a65b4a116a3ae451cbba2826467ad3375235a5c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 14 19:06:53 2009 +0100\n\n    [perf] Add cairo-traces to .gitignore\n\n perf/.gitignore |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 5796a9240ea02dbdbef0d51a4ee71398fea858ad\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 14 19:04:56 2009 +0100\n\n    [test] Reconstruct REFERENCE_IMAGES\n    \n    Rebuild the list from scratch using the contents of my git working tree.\n\n test/Makefile.am |  449 ++++++++++++++++++++++--------------------------------\n 1 file changed, 178 insertions(+), 271 deletions(-)\n\ncommit 8c55ca9ebce487c5ca8b1712f8358a6361032d43\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 14 16:54:51 2009 +0100\n\n    [directfb] Silence compiler warnings.\n    \n    Add extended blend mode to operator switch.\n\n src/cairo-directfb-surface.c |   15 +++++++++++++++\n 1 file changed, 15 insertions(+)\n\ncommit 8ad3fca2109f18b5125e7087b3059eb4225eec3e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 14 16:51:31 2009 +0100\n\n    [glitz] Extended blend mode support\n    \n    Ensure that we fallback given an extended operator.\n\n src/cairo-glitz-surface.c |   80 +++++++++++++++++++++++++++++++++------------\n 1 file changed, 60 insertions(+), 20 deletions(-)\n\ncommit 333d37a60fa80f325612ea94b19ec9892dff8cfb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 14 16:41:00 2009 +0100\n\n    [pdf] Silence copmiler.\n    \n    Fill in missing case values to silence the compiler, and remind us should\n    we every add more operators in future.\n\n src/cairo-pdf-surface.c |   95 ++++++++++++++++++++++++-----------------------\n 1 file changed, 48 insertions(+), 47 deletions(-)\n\ncommit 710308c64e298ae35988fb0881a33cbe92af48ab\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 14 16:31:41 2009 +0100\n\n    [script] Extended blend mode support.\n\n src/cairo-script-surface.c                 |   18 +++++++++++++++++-\n util/cairo-script/cairo-script-operators.c |   15 +++++++++++++++\n util/cairo-trace/trace.c                   |   18 +++++++++++++++++-\n 3 files changed, 49 insertions(+), 2 deletions(-)\n\ncommit 100f0d94eebcec05372263b2e68c27b91b52a1c8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jul 14 16:30:36 2009 +0100\n\n    [cairo] Remove trailing spaces in comments.\n    \n    vim highlights these errors making my screen go red and upsets me.\n    So they must die.\n\n src/cairo.h |   22 +++++++++++-----------\n 1 file changed, 11 insertions(+), 11 deletions(-)\n\ncommit 75736603d3b976dab8ac1ef473164c618084ee60\nAuthor: Emmanuel Pacaud <emmanuel.pacaud@free.fr>\nDate:   Wed Aug 29 15:11:23 2007 +0200\n\n    [SVG] Add extended blend modes.\n\n src/cairo-svg-surface.c |    6 ++++++\n 1 file changed, 6 insertions(+)\n\ncommit 47af6cf2803737ab7248d1ce4d76f038d1f3188e\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Tue Jul 14 15:34:13 2009 +0200\n\n    [pdf] Add support for the extra blend modes\n    \n    HSL modes support added by Benjamin Otte <otte@gnome.org>\n\n src/cairo-pdf-surface-private.h |    4 +\n src/cairo-pdf-surface.c         |  162 ++++++++++++++++++++++++++++++++++++++-\n 2 files changed, 164 insertions(+), 2 deletions(-)\n\ncommit cf186d60b0d96cde859869237fa859e28a74a037\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Thu Aug 30 10:16:00 2007 +0200\n\n    [xlib] Add support for new operators\n    \n    This is of course just making sure fallbacks get used as Render does not support\n    the new operators yet.\n\n src/cairo-xlib-surface.c |   28 +++++++++++++++++++++++++++-\n 1 file changed, 27 insertions(+), 1 deletion(-)\n\ncommit 0fd944d4bfbc2fff9960378eafd18a7d8fb9f296\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Tue Jul 14 15:28:10 2009 +0200\n\n    Use new pixman extended blend operators\n    \n    It also adds extended-blend tests.\n    \n    Based on a previous patch by Emmanuel Pacaud <emmanuel.pacaud@free.fr>\n\n src/cairo-image-surface.c                |   31 ++++++++\n src/cairo-misc.c                         |   30 ++++++++\n src/cairo.h                              |   53 +++++++++++++-\n test/Makefile.am                         |    4 +\n test/Makefile.sources                    |    2 +\n test/extended-blend-alpha.argb32.ref.png |  Bin 0 -> 9777 bytes\n test/extended-blend-alpha.c              |  115 +++++++++++++++++++++++++++++\n test/extended-blend-alpha.rgb24.ref.png  |  Bin 0 -> 5743 bytes\n test/extended-blend.argb32.ref.png       |  Bin 0 -> 4071 bytes\n test/extended-blend.c                    |  117 ++++++++++++++++++++++++++++++\n test/extended-blend.rgb24.ref.png        |  Bin 0 -> 3772 bytes\n 11 files changed, 351 insertions(+), 1 deletion(-)\n\ncommit 16387f0a7dd3b474bcaf637d3e290029b79afec1\nAuthor: Carlos Garcia Campos <carlosgc@gnome.org>\nDate:   Tue Jul 14 11:16:24 2009 +0200\n\n    [configure] Bump pixman dependency\n    \n    Version 0.15.16 contains the new PDF blend mode operators.\n\n configure.ac |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 655a4dbc36d95ce4a82cbc13aa9e2002b41fa4de\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 13 14:31:43 2009 +0100\n\n    [test] Track XFAIL using expected results stored as xfail.png\n    \n    Instead of tagging the sources, which is insensitive to changes, track the\n    known failure modes by recording the current fail as an xfail.png\n    reference. (We also introduce a new.png to track a fresh error, so that\n    they are not lost in the noise of the old XFAILs and hopefully do not\n    cause everyone to fret).\n    \n    As we have removed the XFAIL tagging we find, surprise surprise, that some\n    tests are now working -- so review all the reference images (as also some\n    .ref.png now should be .xfail.png).\n    \n    Note: I've only checked image,pdf,ps,svg. The test surfaces report some\n    failures that probably need to addressed in source. I've not correct the\n    changes for win32 and quartz. Nor fixed up the experimental backends.\n\n test/alpha-similar.c                               |    2 +-\n test/alpha-similar.pdf.argb32.xfail.png            |  Bin 0 -> 95 bytes\n test/alpha-similar.pdf.rgb24.xfail.png             |  Bin 0 -> 93 bytes\n test/alpha-similar.ps.argb32.xfail.png             |  Bin 0 -> 95 bytes\n test/alpha-similar.ps.rgb24.xfail.png              |  Bin 0 -> 93 bytes\n test/alpha-similar.svg.argb32.xfail.png            |  Bin 0 -> 99 bytes\n test/alpha-similar.svg.rgb24.xfail.png             |  Bin 0 -> 95 bytes\n test/big-line.c                                    |    2 +-\n test/big-line.ps.argb32.ref.png                    |  Bin 0 -> 977 bytes\n test/big-line.ps.rgb24.ref.png                     |  Bin 0 -> 709 bytes\n test/big-line.ps2.ref.png                          |  Bin 1148 -> 0 bytes\n test/big-line.ps2.rgb24.ref.png                    |  Bin 830 -> 0 bytes\n test/big-line.ps3.ref.png                          |  Bin 1148 -> 0 bytes\n test/big-line.ps3.rgb24.ref.png                    |  Bin 830 -> 0 bytes\n test/big-line.ref.png                              |  Bin 1486 -> 0 bytes\n test/big-line.rgb24.ref.png                        |  Bin 1308 -> 0 bytes\n test/big-trap.c                                    |    7 +-\n test/cairo-test-runner.c                           |  161 ++------\n test/cairo-test.c                                  |  405 ++++++++++++++------\n test/cairo-test.h                                  |   56 ++-\n test/caps-joins-alpha.svg11.ref.png                |  Bin 2454 -> 0 bytes\n test/caps-joins-alpha.svg12.ref.png                |  Bin 2454 -> 0 bytes\n test/clip-fill-rule.test-fallback.rgb24.ref.png    |  Bin 361 -> 0 bytes\n test/clip-nesting.test-fallback.rgb24.ref.png      |  Bin 936 -> 0 bytes\n test/clip-operator.c                               |    2 +-\n test/clip-operator.pdf.argb32.ref.png              |  Bin 11603 -> 0 bytes\n test/clip-operator.pdf.argb32.xfail.png            |  Bin 0 -> 9340 bytes\n test/clip-operator.pdf.rgb24.ref.png               |  Bin 6882 -> 0 bytes\n test/clip-operator.pdf.rgb24.xfail.png             |  Bin 0 -> 5155 bytes\n test/clip-operator.svg12.argb32.xfail.png          |  Bin 0 -> 8404 bytes\n test/clip-operator.svg12.rgb24.xfail.png           |  Bin 0 -> 4523 bytes\n test/clip-operator.test-fallback.argb32.ref.png    |  Bin 8252 -> 0 bytes\n test/clip-operator.test-fallback.rgb24.ref.png     |  Bin 3241 -> 0 bytes\n test/clip-twice.test-fallback.argb32.ref.png       |  Bin 1343 -> 0 bytes\n test/clip-twice.test-fallback.rgb24.ref.png        |  Bin 1179 -> 0 bytes\n test/composite-integer-translate-source.c          |    2 +-\n test/degenerate-arc.test-fallback.argb32.ref.png   |  Bin 547 -> 0 bytes\n test/degenerate-arc.test-fallback.rgb24.ref.png    |  Bin 547 -> 0 bytes\n test/degenerate-dash.c                             |    2 +-\n test/degenerate-dash.ps.xfail.png                  |  Bin 0 -> 1835 bytes\n test/degenerate-path.c                             |    2 +-\n test/degenerate-path.ps.argb32.xfail.png           |  Bin 0 -> 236 bytes\n test/degenerate-path.ps.rgb24.xfail.png            |  Bin 0 -> 186 bytes\n test/degenerate-path.ps2.argb32.ref.png            |  Bin 390 -> 0 bytes\n test/degenerate-path.ps2.rgb24.ref.png             |  Bin 358 -> 0 bytes\n test/degenerate-path.ps3.argb32.ref.png            |  Bin 390 -> 0 bytes\n test/degenerate-path.ps3.rgb24.ref.png             |  Bin 358 -> 0 bytes\n test/device-offset-scale.c                         |    2 +-\n test/device-offset-scale.svg.xfail.png             |  Bin 0 -> 128 bytes\n test/extend-pad-border.c                           |    2 +-\n test/extend-pad-border.ps.ref.png                  |  Bin 0 -> 649 bytes\n test/extend-pad-border.svg.xfail.png               |  Bin 0 -> 1063 bytes\n test/extend-pad-similar.svg.xfail.png              |  Bin 0 -> 270 bytes\n test/extend-pad.svg.xfail.png                      |  Bin 0 -> 270 bytes\n test/fallback-resolution.c                         |   14 +-\n test/fill-alpha-pattern.pdf.argb32.ref.png         |  Bin 3750 -> 0 bytes\n test/fill-alpha-pattern.pdf.rgb24.ref.png          |  Bin 3758 -> 0 bytes\n ...fill-alpha-pattern.test-fallback.argb32.ref.png |  Bin 3379 -> 0 bytes\n .../fill-alpha-pattern.test-fallback.rgb24.ref.png |  Bin 3379 -> 0 bytes\n test/fill-alpha.test-fallback.argb32.ref.png       |  Bin 2824 -> 0 bytes\n test/fill-alpha.test-fallback.rgb24.ref.png        |  Bin 2824 -> 0 bytes\n test/fill-and-stroke-alpha-add.c                   |    2 +-\n test/fill-and-stroke-alpha-add.svg12.xfail.png     |  Bin 0 -> 614 bytes\n test/fill-degenerate-sort-order.c                  |    2 +-\n .../fill-degenerate-sort-order.ps.argb32.xfail.png |  Bin 0 -> 1901 bytes\n test/fill-degenerate-sort-order.ps.rgb24.xfail.png |  Bin 0 -> 1645 bytes\n ...enerate-sort-order.test-fallback.argb32.ref.png |  Bin 2378 -> 0 bytes\n ...generate-sort-order.test-fallback.rgb24.ref.png |  Bin 2041 -> 0 bytes\n test/fill-image.xlib.ref.png                       |  Bin 0 -> 1460 bytes\n test/fill-rule.test-fallback.argb32.ref.png        |  Bin 1979 -> 0 bytes\n test/fill-rule.test-fallback.rgb24.ref.png         |  Bin 1703 -> 0 bytes\n test/filter-bilinear-extents.pdf.ref.png           |  Bin 798 -> 0 bytes\n test/filter-bilinear-extents.pdf.xfail.png         |  Bin 0 -> 401 bytes\n test/filter-nearest-offset.pdf.ref.png             |  Bin 997 -> 0 bytes\n test/filter-nearest-offset.pdf.xfail.png           |  Bin 0 -> 1926 bytes\n test/filter-nearest-offset.svg.xfail.png           |  Bin 0 -> 4419 bytes\n test/filter-nearest-offset.svg11.ref.png           |  Bin 4739 -> 0 bytes\n test/filter-nearest-offset.svg12.ref.png           |  Bin 4739 -> 0 bytes\n test/filter-nearest-transformed.pdf.ref.png        |  Bin 552 -> 0 bytes\n test/filter-nearest-transformed.pdf.xfail.png      |  Bin 0 -> 488 bytes\n test/filter-nearest-transformed.svg.xfail.png      |  Bin 0 -> 546 bytes\n test/filter-nearest-transformed.svg11.ref.png      |  Bin 559 -> 0 bytes\n test/filter-nearest-transformed.svg12.ref.png      |  Bin 559 -> 0 bytes\n test/finer-grained-fallbacks.c                     |    2 +-\n test/finer-grained-fallbacks.svg12.argb32.ref.png  |  Bin 0 -> 190 bytes\n test/finer-grained-fallbacks.svg12.rgb24.ref.png   |  Bin 0 -> 191 bytes\n ...-grained-fallbacks.test-fallback.argb32.ref.png |  Bin 1111 -> 0 bytes\n ...r-grained-fallbacks.test-fallback.rgb24.ref.png |  Bin 854 -> 0 bytes\n test/font-matrix-translation.svg.ref.png           |  Bin 0 -> 870 bytes\n test/font-matrix-translation.svg11.argb32.ref.png  |  Bin 857 -> 0 bytes\n test/font-matrix-translation.svg11.ref.png         |  Bin 970 -> 0 bytes\n test/font-matrix-translation.svg11.rgb24.ref.png   |  Bin 857 -> 0 bytes\n test/font-matrix-translation.svg12.argb32.ref.png  |  Bin 857 -> 0 bytes\n test/font-matrix-translation.svg12.ref.png         |  Bin 970 -> 0 bytes\n test/font-matrix-translation.svg12.rgb24.ref.png   |  Bin 857 -> 0 bytes\n test/ft-show-glyphs-positioning.svg.ref.png        |  Bin 0 -> 6018 bytes\n test/ft-show-glyphs-positioning.svg11.ref.png      |  Bin 6590 -> 0 bytes\n test/ft-show-glyphs-positioning.svg12.ref.png      |  Bin 6590 -> 0 bytes\n test/ft-show-glyphs-table.svg.ref.png              |  Bin 0 -> 10005 bytes\n test/ft-show-glyphs-table.svg11.argb32.ref.png     |  Bin 9953 -> 0 bytes\n test/ft-show-glyphs-table.svg11.rgb24.ref.png      |  Bin 9953 -> 0 bytes\n test/ft-show-glyphs-table.svg12.argb32.ref.png     |  Bin 9953 -> 0 bytes\n test/ft-show-glyphs-table.svg12.rgb24.ref.png      |  Bin 9953 -> 0 bytes\n test/ft-text-vertical-layout-type1.svg.ref.png     |  Bin 0 -> 3607 bytes\n ...text-vertical-layout-type1.svg11.argb32.ref.png |  Bin 3614 -> 0 bytes\n test/ft-text-vertical-layout-type1.svg11.ref.png   |  Bin 3973 -> 0 bytes\n ...-text-vertical-layout-type1.svg11.rgb24.ref.png |  Bin 3614 -> 0 bytes\n ...text-vertical-layout-type1.svg12.argb32.ref.png |  Bin 3614 -> 0 bytes\n test/ft-text-vertical-layout-type1.svg12.ref.png   |  Bin 3973 -> 0 bytes\n ...-text-vertical-layout-type1.svg12.rgb24.ref.png |  Bin 3614 -> 0 bytes\n ...tical-layout-type1.test-fallback.argb32.ref.png |  Bin 3639 -> 0 bytes\n ...rtical-layout-type1.test-fallback.rgb24.ref.png |  Bin 3639 -> 0 bytes\n test/ft-text-vertical-layout-type3.svg.ref.png     |  Bin 0 -> 3626 bytes\n ...text-vertical-layout-type3.svg11.argb32.ref.png |  Bin 3640 -> 0 bytes\n test/ft-text-vertical-layout-type3.svg11.ref.png   |  Bin 3957 -> 0 bytes\n ...-text-vertical-layout-type3.svg11.rgb24.ref.png |  Bin 3640 -> 0 bytes\n ...text-vertical-layout-type3.svg12.argb32.ref.png |  Bin 3640 -> 0 bytes\n test/ft-text-vertical-layout-type3.svg12.ref.png   |  Bin 3957 -> 0 bytes\n ...-text-vertical-layout-type3.svg12.rgb24.ref.png |  Bin 3640 -> 0 bytes\n ...tical-layout-type3.test-fallback.argb32.ref.png |  Bin 3605 -> 0 bytes\n ...rtical-layout-type3.test-fallback.rgb24.ref.png |  Bin 3605 -> 0 bytes\n test/gradient-alpha.pdf.argb32.ref.png             |  Bin 126 -> 0 bytes\n test/gradient-alpha.pdf.rgb24.ref.png              |  Bin 121 -> 0 bytes\n test/gradient-constant-alpha.pdf.argb32.ref.png    |  Bin 116 -> 0 bytes\n test/gradient-constant-alpha.pdf.rgb24.ref.png     |  Bin 115 -> 0 bytes\n test/group-unaligned.pdf.new.png                   |  Bin 0 -> 427 bytes\n test/group-unaligned.pdf.ref.png                   |  Bin 414 -> 0 bytes\n test/group-unaligned.svg.argb32.ref.png            |  Bin 524 -> 0 bytes\n test/group-unaligned.svg.argb32.xfail.png          |  Bin 0 -> 522 bytes\n test/group-unaligned.svg.rgb24.ref.png             |  Bin 434 -> 0 bytes\n test/group-unaligned.svg.rgb24.xfail.png           |  Bin 0 -> 425 bytes\n test/huge-linear.c                                 |    2 +-\n test/huge-linear.pdf.ref.png                       |  Bin 0 -> 1577 bytes\n test/huge-radial.c                                 |    2 +-\n test/huge-radial.pdf.argb32.ref.png                |  Bin 0 -> 177382 bytes\n test/huge-radial.pdf.rgb24.ref.png                 |  Bin 0 -> 225358 bytes\n test/large-source-roi.c                            |    2 +-\n test/large-source-roi.ref.png                      |  Bin 102 -> 0 bytes\n test/linear-gradient.pdf.ref.png                   |  Bin 1125 -> 0 bytes\n test/linear-gradient.svg11.argb32.ref.png          |  Bin 988 -> 0 bytes\n test/linear-gradient.svg11.ref.png                 |  Bin 1000 -> 0 bytes\n test/linear-gradient.svg11.rgb24.ref.png           |  Bin 988 -> 0 bytes\n test/linear-gradient.svg12.argb32.ref.png          |  Bin 988 -> 0 bytes\n test/linear-gradient.svg12.ref.png                 |  Bin 1000 -> 0 bytes\n test/linear-gradient.svg12.rgb24.ref.png           |  Bin 988 -> 0 bytes\n test/linear-gradient.test-fallback.argb32.ref.png  |  Bin 923 -> 0 bytes\n test/linear-gradient.test-fallback.rgb24.ref.png   |  Bin 923 -> 0 bytes\n test/long-lines.c                                  |    2 +-\n test/long-lines.ref.png                            |  Bin 247 -> 0 bytes\n test/make-html.pl                                  |   13 +-\n test/mask-alpha.svg.rgb24.xfail.png                |  Bin 0 -> 585 bytes\n test/mask-alpha.svg11.argb32.ref.png               |  Bin 642 -> 0 bytes\n test/mask-alpha.svg11.rgb24.ref.png                |  Bin 592 -> 0 bytes\n test/mask-alpha.svg12.argb32.ref.png               |  Bin 642 -> 0 bytes\n test/mask-alpha.svg12.rgb24.ref.png                |  Bin 592 -> 0 bytes\n test/mask-alpha.test-fallback.argb32.ref.png       |  Bin 627 -> 0 bytes\n test/mask-ctm.svg11.argb32.ref.png                 |  Bin 108 -> 0 bytes\n test/mask-ctm.svg12.argb32.ref.png                 |  Bin 108 -> 0 bytes\n test/mask-glyphs.c                                 |    2 +-\n test/mask-glyphs.pdf.ref.png                       |  Bin 0 -> 1187713 bytes\n test/mask-glyphs.svg.ref.png                       |  Bin 0 -> 1211170 bytes\n test/mask-surface-ctm.svg11.argb32.ref.png         |  Bin 108 -> 0 bytes\n test/mask-surface-ctm.svg12.argb32.ref.png         |  Bin 108 -> 0 bytes\n test/mask-transformed-similar.svg.ref.png          |  Bin 0 -> 3365 bytes\n test/mask-transformed-similar.svg11.ref.png        |  Bin 4051 -> 0 bytes\n test/mask-transformed-similar.svg12.ref.png        |  Bin 4051 -> 0 bytes\n test/mask.pdf.argb32.ref.png                       |  Bin 9946 -> 0 bytes\n test/mask.pdf.argb32.xfail.png                     |  Bin 0 -> 7944 bytes\n test/mask.pdf.rgb24.ref.png                        |  Bin 8745 -> 0 bytes\n test/mask.pdf.rgb24.xfail.png                      |  Bin 0 -> 7388 bytes\n test/mask.svg.argb32.xfail.png                     |  Bin 0 -> 8613 bytes\n test/mask.svg.rgb24.xfail.png                      |  Bin 0 -> 7189 bytes\n test/mask.svg11.argb32.ref.png                     |  Bin 8682 -> 0 bytes\n test/mask.svg11.rgb24.ref.png                      |  Bin 7203 -> 0 bytes\n test/mask.svg12.argb32.ref.png                     |  Bin 8682 -> 0 bytes\n test/mask.svg12.rgb24.ref.png                      |  Bin 7203 -> 0 bytes\n test/mask.test-fallback.argb32.ref.png             |  Bin 8457 -> 0 bytes\n test/mask.test-fallback.rgb24.ref.png              |  Bin 7058 -> 0 bytes\n test/meta-surface-pattern.pdf.argb32.ref.png       |  Bin 0 -> 4009 bytes\n test/meta-surface-pattern.pdf.ref.png              |  Bin 4111 -> 0 bytes\n test/meta-surface-pattern.pdf.rgb24.ref.png        |  Bin 0 -> 3905 bytes\n test/meta-surface-pattern.svg.argb32.ref.png       |  Bin 0 -> 3930 bytes\n test/meta-surface-pattern.svg.rgb24.ref.png        |  Bin 0 -> 3910 bytes\n test/meta-surface-pattern.svg11.argb32.ref.png     |  Bin 3924 -> 0 bytes\n test/meta-surface-pattern.svg11.rgb24.ref.png      |  Bin 3914 -> 0 bytes\n test/meta-surface-pattern.svg12.argb32.ref.png     |  Bin 3924 -> 0 bytes\n test/meta-surface-pattern.svg12.rgb24.ref.png      |  Bin 3914 -> 0 bytes\n test/operator-alpha.c                              |    2 +-\n test/operator-alpha.svg12.argb32.xfail.png         |  Bin 0 -> 274 bytes\n test/operator-alpha.svg12.rgb24.xfail.png          |  Bin 0 -> 248 bytes\n test/operator-clear.c                              |    2 +-\n test/operator-clear.pdf.argb32.ref.png             |  Bin 1607 -> 0 bytes\n test/operator-clear.pdf.rgb24.ref.png              |  Bin 1402 -> 0 bytes\n test/operator-clear.svg12.argb32.xfail.png         |  Bin 0 -> 405 bytes\n test/operator-clear.svg12.rgb24.xfail.png          |  Bin 0 -> 535 bytes\n test/operator-clear.xlib.ref.png                   |  Bin 0 -> 951 bytes\n test/operator-source.c                             |    2 +-\n test/operator-source.pdf.argb32.ref.png            |  Bin 5112 -> 0 bytes\n test/operator-source.pdf.rgb24.ref.png             |  Bin 4186 -> 0 bytes\n test/operator-source.pdf.rgb24.xfail.png           |  Bin 0 -> 3645 bytes\n test/operator-source.svg12.argb32.xfail.png        |  Bin 0 -> 2951 bytes\n test/operator-source.svg12.rgb24.xfail.png         |  Bin 0 -> 2963 bytes\n test/operator-source.test-fallback.argb32.ref.png  |  Bin 4401 -> 0 bytes\n test/operator-source.test-fallback.rgb24.ref.png   |  Bin 3200 -> 0 bytes\n test/operator.c                                    |    2 +-\n test/operator.svg12.argb32.xfail.png               |  Bin 0 -> 238 bytes\n test/operator.svg12.rgb24.xfail.png                |  Bin 0 -> 242 bytes\n test/over-above-source.c                           |    2 +-\n test/over-above-source.svg12.rgb24.xfail.png       |  Bin 0 -> 563 bytes\n .../over-above-source.test-fallback.argb32.ref.png |  Bin 533 -> 0 bytes\n test/over-above-source.test-fallback.rgb24.ref.png |  Bin 450 -> 0 bytes\n test/over-around-source.c                          |    2 +-\n test/over-around-source.svg12.argb32.xfail.png     |  Bin 0 -> 559 bytes\n test/over-around-source.svg12.rgb24.xfail.png      |  Bin 0 -> 559 bytes\n ...over-around-source.test-fallback.argb32.ref.png |  Bin 610 -> 0 bytes\n test/over-below-source.c                           |    2 +-\n test/over-below-source.svg12.argb32.xfail.png      |  Bin 0 -> 224 bytes\n test/over-below-source.svg12.rgb24.xfail.png       |  Bin 0 -> 224 bytes\n test/over-between-source.c                         |    2 +-\n test/over-between-source.svg12.argb32.xfail.png    |  Bin 0 -> 224 bytes\n test/over-between-source.svg12.rgb24.xfail.png     |  Bin 0 -> 224 bytes\n ...ver-between-source.test-fallback.argb32.ref.png |  Bin 578 -> 0 bytes\n test/paint-source-alpha.c                          |    2 +-\n test/paint-source-alpha.svg.ref.png                |  Bin 0 -> 693 bytes\n test/paint-source-alpha.svg11.ref.png              |  Bin 756 -> 0 bytes\n test/paint-source-alpha.svg12.ref.png              |  Bin 505 -> 0 bytes\n test/paint-with-alpha.svg.ref.png                  |  Bin 0 -> 483 bytes\n test/paint-with-alpha.svg11.ref.png                |  Bin 516 -> 0 bytes\n test/paint-with-alpha.svg12.ref.png                |  Bin 516 -> 0 bytes\n test/path-precision.c                              |    9 +-\n test/push-group.svg11.argb32.ref.png               |  Bin 3034 -> 0 bytes\n test/push-group.svg12.argb32.ref.png               |  Bin 3034 -> 0 bytes\n test/push-group.test-fallback.argb32.ref.png       |  Bin 3107 -> 0 bytes\n test/push-group.test-fallback.rgb24.ref.png        |  Bin 2942 -> 0 bytes\n test/radial-gradient.svg11.ref.png                 |  Bin 91039 -> 0 bytes\n test/radial-gradient.svg12.ref.png                 |  Bin 91039 -> 0 bytes\n ...ndom-intersections.test-fallback.argb32.ref.png |  Bin 132312 -> 0 bytes\n ...andom-intersections.test-fallback.rgb24.ref.png |  Bin 132312 -> 0 bytes\n test/rotate-image-surface-paint.pdf.ref.png        |  Bin 196 -> 0 bytes\n test/rotate-image-surface-paint.pdf.xfail.png      |  Bin 0 -> 207 bytes\n test/rotate-image-surface-paint.svg.ref.png        |  Bin 0 -> 209 bytes\n test/rotate-image-surface-paint.svg11.ref.png      |  Bin 248 -> 0 bytes\n test/rotate-image-surface-paint.svg12.ref.png      |  Bin 248 -> 0 bytes\n test/scale-offset-image.c                          |    2 +-\n test/scale-offset-image.pdf.argb32.ref.png         |  Bin 0 -> 8692 bytes\n test/scale-offset-image.pdf.rgb24.ref.png          |  Bin 0 -> 8691 bytes\n test/scale-offset-image.xfail.png                  |  Bin 0 -> 8599 bytes\n test/scale-offset-image.xlib.xfail.png             |  Bin 0 -> 9100 bytes\n test/scale-offset-similar.c                        |    2 +-\n test/scale-offset-similar.pdf.argb32.ref.png       |  Bin 0 -> 9278 bytes\n test/scale-offset-similar.pdf.rgb24.ref.png        |  Bin 0 -> 9278 bytes\n test/scale-offset-similar.xfail.png                |  Bin 0 -> 8599 bytes\n test/scale-offset-similar.xlib.xfail.png           |  Bin 0 -> 8570 bytes\n ...scale-source-surface-paint.svg.argb32.xfail.png |  Bin 0 -> 229 bytes\n .../scale-source-surface-paint.svg.rgb24.xfail.png |  Bin 0 -> 222 bytes\n ...scale-source-surface-paint.svg11.argb32.ref.png |  Bin 229 -> 0 bytes\n .../scale-source-surface-paint.svg11.rgb24.ref.png |  Bin 243 -> 0 bytes\n ...scale-source-surface-paint.svg12.argb32.ref.png |  Bin 229 -> 0 bytes\n .../scale-source-surface-paint.svg12.rgb24.ref.png |  Bin 243 -> 0 bytes\n test/self-copy-overlap.c                           |    2 +-\n test/self-copy-overlap.ref.png                     |  Bin 1140 -> 0 bytes\n test/self-copy-overlap.rgb24.ref.png               |  Bin 608 -> 0 bytes\n test/self-intersecting.argb32.xfail.png            |  Bin 0 -> 287 bytes\n test/self-intersecting.c                           |    2 +-\n test/self-intersecting.pdf.argb32.xfail.png        |  Bin 0 -> 295 bytes\n test/self-intersecting.pdf.rgb24.xfail.png         |  Bin 0 -> 272 bytes\n test/self-intersecting.ps.argb32.xfail.png         |  Bin 0 -> 186 bytes\n test/self-intersecting.ps.rgb24.xfail.png          |  Bin 0 -> 186 bytes\n test/self-intersecting.rgb24.xfail.png             |  Bin 0 -> 282 bytes\n test/self-intersecting.xlib.argb32.xfail.png       |  Bin 0 -> 235 bytes\n test/self-intersecting.xlib.rgb24.xfail.png        |  Bin 0 -> 240 bytes\n test/set-source.svg11.argb32.ref.png               |  Bin 104 -> 0 bytes\n test/set-source.svg12.argb32.ref.png               |  Bin 104 -> 0 bytes\n test/smask-fill.c                                  |    2 +-\n test/smask-fill.svg.ref.png                        |  Bin 0 -> 1150 bytes\n test/smask-fill.svg11.argb32.ref.png               |  Bin 1128 -> 0 bytes\n test/smask-fill.svg11.ref.png                      |  Bin 1166 -> 0 bytes\n test/smask-fill.svg11.rgb24.ref.png                |  Bin 1128 -> 0 bytes\n test/smask-fill.svg12.argb32.ref.png               |  Bin 1128 -> 0 bytes\n test/smask-fill.svg12.ref.png                      |  Bin 1166 -> 0 bytes\n test/smask-fill.svg12.rgb24.ref.png                |  Bin 1128 -> 0 bytes\n test/smask-fill.test-fallback.argb32.ref.png       |  Bin 1148 -> 0 bytes\n test/smask-fill.test-fallback.rgb24.ref.png        |  Bin 1148 -> 0 bytes\n test/smask-image-mask.c                            |    2 +-\n test/smask-mask.c                                  |    2 +-\n test/smask-mask.pdf.xfail.png                      |  Bin 0 -> 4401 bytes\n test/smask-mask.svg.ref.png                        |  Bin 0 -> 2376 bytes\n test/smask-mask.svg11.ref.png                      |  Bin 2529 -> 0 bytes\n test/smask-mask.svg12.ref.png                      |  Bin 2529 -> 0 bytes\n test/smask-paint.c                                 |    2 +-\n test/smask-paint.pdf.xfail.png                     |  Bin 0 -> 4513 bytes\n test/smask-paint.svg.ref.png                       |  Bin 0 -> 2453 bytes\n test/smask-paint.svg11.ref.png                     |  Bin 2612 -> 0 bytes\n test/smask-paint.svg12.ref.png                     |  Bin 2612 -> 0 bytes\n test/smask-stroke.c                                |    2 +-\n test/smask-stroke.pdf.xfail.png                    |  Bin 0 -> 392 bytes\n test/smask-text.c                                  |    2 +-\n test/smask-text.pdf.ref.png                        |  Bin 0 -> 1874 bytes\n test/smask-text.ref.png                            |  Bin 1777 -> 1874 bytes\n test/smask-text.svg.ref.png                        |  Bin 0 -> 1794 bytes\n test/smask-text.svg11.argb32.ref.png               |  Bin 1791 -> 0 bytes\n test/smask-text.svg11.ref.png                      |  Bin 1886 -> 0 bytes\n test/smask-text.svg11.rgb24.ref.png                |  Bin 1791 -> 0 bytes\n test/smask-text.svg12.argb32.ref.png               |  Bin 1791 -> 0 bytes\n test/smask-text.svg12.ref.png                      |  Bin 1886 -> 0 bytes\n test/smask-text.svg12.rgb24.ref.png                |  Bin 1791 -> 0 bytes\n test/smask.c                                       |    2 +-\n test/smask.pdf.xfail.png                           |  Bin 0 -> 4393 bytes\n test/smask.ref.png                                 |  Bin 3587 -> 3417 bytes\n test/smask.svg.ref.png                             |  Bin 0 -> 3458 bytes\n test/smask.svg11.ref.png                           |  Bin 3634 -> 0 bytes\n test/smask.svg12.ref.png                           |  Bin 3634 -> 0 bytes\n test/source-clip-scale.svg.ref.png                 |  Bin 0 -> 116 bytes\n test/source-clip-scale.svg11.ref.png               |  Bin 119 -> 0 bytes\n test/source-clip-scale.svg12.ref.png               |  Bin 119 -> 0 bytes\n test/surface-pattern-big-scale-down.c              |    2 +-\n test/surface-pattern-big-scale-down.ref.png        |  Bin 226 -> 191 bytes\n test/surface-pattern-scale-down.pdf.argb32.ref.png |  Bin 1532 -> 0 bytes\n test/surface-pattern-scale-down.pdf.ref.png        |  Bin 0 -> 1589 bytes\n test/surface-pattern-scale-down.pdf.rgb24.ref.png  |  Bin 1532 -> 0 bytes\n test/surface-pattern-scale-up.pdf.argb32.ref.png   |  Bin 3834 -> 0 bytes\n test/surface-pattern-scale-up.pdf.ref.png          |  Bin 0 -> 2712 bytes\n test/surface-pattern-scale-up.pdf.rgb24.ref.png    |  Bin 3834 -> 0 bytes\n test/surface-pattern.pdf.ref.png                   |  Bin 14800 -> 0 bytes\n test/surface-pattern.pdf.xfail.png                 |  Bin 0 -> 10528 bytes\n test/surface-pattern.ps.xfail.png                  |  Bin 0 -> 2188 bytes\n test/surface-pattern.ps2.ref.png                   |  Bin 2364 -> 0 bytes\n test/surface-pattern.ps3.ref.png                   |  Bin 2364 -> 0 bytes\n test/surface-pattern.svg.ref.png                   |  Bin 16069 -> 0 bytes\n test/surface-pattern.svg.xfail.png                 |  Bin 0 -> 16069 bytes\n test/text-pattern.pdf.argb32.ref.png               |  Bin 2334 -> 0 bytes\n test/text-pattern.pdf.argb32.xfail.png             |  Bin 0 -> 1845 bytes\n test/text-pattern.pdf.rgb24.ref.png                |  Bin 1915 -> 0 bytes\n test/text-pattern.pdf.rgb24.xfail.png              |  Bin 0 -> 1599 bytes\n test/text-pattern.svg.argb32.ref.png               |  Bin 0 -> 1745 bytes\n test/text-pattern.svg.rgb24.ref.png                |  Bin 0 -> 1453 bytes\n test/text-pattern.svg11.argb32.ref.png             |  Bin 1743 -> 0 bytes\n test/text-pattern.svg11.rgb24.ref.png              |  Bin 1563 -> 0 bytes\n test/text-pattern.svg12.argb32.ref.png             |  Bin 1743 -> 0 bytes\n test/text-pattern.svg12.rgb24.ref.png              |  Bin 1563 -> 0 bytes\n test/text-rotate.svg.ref.png                       |  Bin 0 -> 17024 bytes\n test/text-rotate.svg11.argb32.ref.png              |  Bin 16942 -> 0 bytes\n test/text-rotate.svg11.ref.png                     |  Bin 18301 -> 0 bytes\n test/text-rotate.svg11.rgb24.ref.png               |  Bin 16942 -> 0 bytes\n test/text-rotate.svg12.argb32.ref.png              |  Bin 16942 -> 0 bytes\n test/text-rotate.svg12.ref.png                     |  Bin 18301 -> 0 bytes\n test/text-rotate.svg12.rgb24.ref.png               |  Bin 16942 -> 0 bytes\n test/text-transform.svg.ref.png                    |  Bin 0 -> 5682 bytes\n test/text-transform.svg11.argb32.ref.png           |  Bin 5677 -> 0 bytes\n test/text-transform.svg11.rgb24.ref.png            |  Bin 5677 -> 0 bytes\n test/text-transform.svg12.argb32.ref.png           |  Bin 5677 -> 0 bytes\n test/text-transform.svg12.rgb24.ref.png            |  Bin 5677 -> 0 bytes\n test/trap-clip.pdf.argb32.ref.png                  |  Bin 6746 -> 0 bytes\n test/trap-clip.pdf.rgb24.ref.png                   |  Bin 6616 -> 0 bytes\n test/trap-clip.test-fallback.argb32.ref.png        |  Bin 5753 -> 0 bytes\n test/trap-clip.test-fallback.rgb24.ref.png         |  Bin 5379 -> 0 bytes\n test/twin.svg.ref.png                              |  Bin 3027 -> 3040 bytes\n test/unbounded-operator.c                          |    2 +-\n test/unbounded-operator.svg12.argb32.xfail.png     |  Bin 0 -> 2767 bytes\n test/unbounded-operator.svg12.rgb24.xfail.png      |  Bin 0 -> 1719 bytes\n .../unbounded-operator.test-fallback.rgb24.ref.png |  Bin 1306 -> 0 bytes\n test/user-font-mask.svg.ref.png                    |  Bin 0 -> 2030 bytes\n test/user-font-mask.svg11.ref.png                  |  Bin 2224 -> 0 bytes\n test/user-font-proxy.svg.ref.png                   |  Bin 0 -> 16817 bytes\n test/user-font-proxy.svg11.argb32.ref.png          |  Bin 16836 -> 0 bytes\n test/user-font-proxy.svg11.ref.png                 |  Bin 17902 -> 0 bytes\n test/user-font-proxy.svg11.rgb24.ref.png           |  Bin 16836 -> 0 bytes\n test/user-font-proxy.svg12.argb32.ref.png          |  Bin 16836 -> 0 bytes\n test/user-font-proxy.svg12.ref.png                 |  Bin 17902 -> 0 bytes\n test/user-font-proxy.svg12.rgb24.ref.png           |  Bin 16836 -> 0 bytes\n test/user-font-proxy.test-fallback.argb32.ref.png  |  Bin 16835 -> 0 bytes\n test/user-font-proxy.test-fallback.rgb24.ref.png   |  Bin 16835 -> 0 bytes\n test/user-font-rescale.svg.ref.png                 |  Bin 0 -> 14873 bytes\n test/user-font-rescale.svg11.ref.png               |  Bin 15741 -> 0 bytes\n test/user-font-rescale.svg12.ref.png               |  Bin 15741 -> 0 bytes\n test/user-font.svg.ref.png                         |  Bin 0 -> 6379 bytes\n test/user-font.svg11.argb32.ref.png                |  Bin 6411 -> 0 bytes\n test/user-font.svg11.ref.png                       |  Bin 6134 -> 0 bytes\n test/user-font.svg11.rgb24.ref.png                 |  Bin 6411 -> 0 bytes\n test/user-font.svg12.argb32.ref.png                |  Bin 6411 -> 0 bytes\n test/user-font.svg12.ref.png                       |  Bin 6134 -> 0 bytes\n test/user-font.svg12.rgb24.ref.png                 |  Bin 6411 -> 0 bytes\n test/user-font.test-fallback.argb32.ref.png        |  Bin 5601 -> 0 bytes\n test/user-font.test-fallback.rgb24.ref.png         |  Bin 5601 -> 0 bytes\n 384 files changed, 438 insertions(+), 303 deletions(-)\n\ncommit a81cf14bd6de545e9108f5c24c59e55026df86de\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 13 10:58:44 2009 +0100\n\n    [test] Sanitise REFERENCE_IMAGES\n    \n    Add and delete files to satisfy 'make check-ref-missing'.\n\n test/Makefile.am                             |    6 ------\n test/fill-image.test-fallback.ref.png        |  Bin 1462 -> 0 bytes\n test/fill-image.xlib.ref.png                 |  Bin 1462 -> 0 bytes\n test/group-unaligned.ref.png                 |  Bin 0 -> 434 bytes\n test/meta-surface-pattern.pdf.argb32.ref.png |  Bin 4011 -> 0 bytes\n test/meta-surface-pattern.pdf.rgb24.ref.png  |  Bin 3910 -> 0 bytes\n test/operator-clear.test-fallback.ref.png    |  Bin 1071 -> 0 bytes\n test/operator-clear.xlib.ref.png             |  Bin 1071 -> 0 bytes\n 8 files changed, 6 deletions(-)\n\ncommit 7f3eda4e9f9e6cb6f3a33871ed42099c822d0ea2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jul 13 10:43:34 2009 +0100\n\n    [test] Update reference images for gs 8.64\n\n test/Makefile.am                               |    7 +++++--\n test/README                                    |    2 +-\n test/close-path-current-point.ps.ref.png       |  Bin 0 -> 1490 bytes\n test/extend-pad.ps.ref.png                     |  Bin 0 -> 314 bytes\n test/fill-image.ps.ref.png                     |  Bin 0 -> 1799 bytes\n test/test-fallback16-surface-source.ps.ref.png |  Bin 0 -> 292 bytes\n test/user-font-proxy.ps.ref.png                |  Bin 0 -> 7766 bytes\n test/user-font-proxy.ps2.ref.png               |  Bin 8171 -> 0 bytes\n test/user-font-proxy.ps3.ref.png               |  Bin 8171 -> 0 bytes\n 9 files changed, 6 insertions(+), 3 deletions(-)\n\ncommit 0d44416b9dd8149032039cf44ea14bf4867f3c54\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Jul 12 19:21:28 2009 +0930\n\n    PDF: Don't round pattern y location to an integer\n    \n    Using cairo_surface_get_extents() to get page height does not work\n    when the page height is not an integer.\n    \n    http://lists.cairographics.org/archives/cairo/2009-July/017570.html\n\n src/cairo-pdf-surface.c |   10 +---------\n 1 file changed, 1 insertion(+), 9 deletions(-)\n\ncommit 9686331cb07a8f9018f28dc7d6d6e3726e289fda\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sat May 2 18:05:20 2009 +0300\n\n    [spans] Round rasterization grid pixel areas instead of truncating.\n    \n    When converting a grid pixel area into the range [0,255] the\n    GRID_AREA_TO_ALPHA() macro would truncate extra bits off the result\n    rather than rounding. This could cause seams between abutting\n    collinear edges of separately rendered polygons even when the\n    coordinates of the abutting edges were the same.\n    \n    Reported by Soeren Sandmann on the cairo mailing list:\n    \n    http://lists.cairographics.org/archives/cairo/2009-May/017043.html\n\n src/cairo-tor-scan-converter.c                   |    4 ++--\n test/clip-operator.ref.png                       |  Bin 8210 -> 8191 bytes\n test/clip-operator.test-paginated.argb32.ref.png |  Bin 8247 -> 8189 bytes\n test/fill-degenerate-sort-order.ref.png          |  Bin 2406 -> 2399 bytes\n test/fill-rule.ref.png                           |  Bin 2061 -> 2065 bytes\n test/finer-grained-fallbacks.ref.png             |  Bin 1069 -> 1070 bytes\n test/linear-gradient.pdf.argb32.ref.png          |  Bin 1112 -> 0 bytes\n test/linear-gradient.pdf.ref.png                 |  Bin 935 -> 1125 bytes\n test/linear-gradient.pdf.rgb24.ref.png           |  Bin 1112 -> 0 bytes\n test/mask-alpha.ref.png                          |  Bin 643 -> 632 bytes\n test/mask.pdf.argb32.ref.png                     |  Bin 9918 -> 9946 bytes\n test/mask.ref.png                                |  Bin 8581 -> 8603 bytes\n test/operator-clear.ref.png                      |  Bin 1084 -> 1070 bytes\n test/operator-clear.test-fallback.ref.png        |  Bin 0 -> 1071 bytes\n test/operator-clear.xlib.ref.png                 |  Bin 0 -> 1071 bytes\n test/operator-source.ref.png                     |  Bin 4425 -> 4395 bytes\n test/radial-gradient.pdf.argb32.ref.png          |  Bin 79601 -> 0 bytes\n test/radial-gradient.pdf.ref.png                 |  Bin 79490 -> 79612 bytes\n test/radial-gradient.pdf.rgb24.ref.png           |  Bin 79601 -> 0 bytes\n test/trap-clip.pdf.argb32.ref.png                |  Bin 6745 -> 6746 bytes\n test/trap-clip.pdf.rgb24.ref.png                 |  Bin 6621 -> 6616 bytes\n test/trap-clip.ref.png                           |  Bin 5829 -> 5820 bytes\n test/trap-clip.test-paginated.argb32.ref.png     |  Bin 5865 -> 5898 bytes\n 23 files changed, 2 insertions(+), 2 deletions(-)\n\ncommit fbd88db938bf3bb03934795da9b3d184c4f43608\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jul 5 14:43:50 2009 +0100\n\n    [path] Don't include current-point in hash\n    \n    As we don't strictly use the current-point in comparing paths, exclude it\n    from the hash. Similarly use the path content flags as a cheap means to\n    differentiate contents.\n\n src/cairo-path-fixed.c |   17 +++++++++--------\n 1 file changed, 9 insertions(+), 8 deletions(-)\n\ncommit 73f8019fd2afd0ad41c2515bef9877348355d246\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jul 5 14:37:02 2009 +0100\n\n    [path] Use cairo_list_t instead of open-coding its own\n    \n    Use the cairo_list_t and its style of iterators to improve the readability\n    of the cairo_path_buf_t management. Note the complications that arise from\n    the embedding of the initial buf -- however the macros do help make the\n    unusual manipulations more identifiable.\n\n src/cairo-path-fixed-private.h |   14 +--\n src/cairo-path-fixed.c         |  226 +++++++++++++++++++---------------------\n src/cairo.c                    |    2 +-\n 3 files changed, 114 insertions(+), 128 deletions(-)\n\ncommit a04e3726648c62a1385b67cfc16a785a468e1d13\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jul 5 09:21:47 2009 +0100\n\n    [path] Add path watch debugging\n    \n    Simple debug macro to print the path to stderr during construction.\n\n src/cairo-path-fixed-private.h |    9 +++++++++\n src/cairo-path-fixed.c         |   26 ++++++++++++++++++++++++++\n 2 files changed, 35 insertions(+)\n\ncommit 1645352bfb69cc6d43fcbf3c77b4da5693af322a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jul 5 09:09:42 2009 +0100\n\n    [path] Evaluate is_box && is_region during construction\n    \n    Whilst constructing the path, if the operations continue to be\n    axis-aligned lines, allow the is_box and is_region flags to persist. These\n    are set to false as soon as a curve-to is added, a diagonal or in the case\n    of is_region a non-integer point.\n\n src/cairo-path-fixed-private.h |    8 ++\n src/cairo-path-fixed.c         |  286 +++++++++++++++-------------------------\n src/cairo.c                    |    2 +\n src/cairoint.h                 |    3 -\n 4 files changed, 115 insertions(+), 184 deletions(-)\n\ncommit 4bb157672ef8cb7d486d6ccdaaa3890e3f45e17a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jul 4 23:44:09 2009 +0100\n\n    [test] Rename some structures within cairo-test-trace\n    \n    Simply rename a few structures so that their names are less confusing with\n    the mix of process and threads used to executes traces.\n\n test/cairo-test-trace.c |  224 +++++++++++++++++++++++------------------------\n 1 file changed, 112 insertions(+), 112 deletions(-)\n\ncommit 53a54827f7d8ca8500f3f9674edbd7e768e8a50d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jul 5 09:22:05 2009 +0100\n\n    [boilerplate] Add missing header file.\n    \n    Deleted so many, and forgot to add just this little one. Sigh.\n\n boilerplate/cairo-boilerplate-private.h |   49 +++++++++++++++++++++++++++++++\n 1 file changed, 49 insertions(+)\n\ncommit ee8c50f2d6f1dba41f829c715b7bc59b5eeda50d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jul 4 22:00:09 2009 +0100\n\n    Remove the defunct test-meta surface\n    \n    Replace the internal test-meta surface will the freshly exported,\n    real meta-surface.\n\n boilerplate/cairo-boilerplate-test-surfaces.c |   38 ---\n boilerplate/cairo-boilerplate.c               |   35 +++\n src/Makefile.sources                          |    2 -\n src/test-meta-surface.c                       |  358 -------------------------\n src/test-meta-surface.h                       |   50 ----\n util/cairo-trace/trace.c                      |   49 ++--\n 6 files changed, 69 insertions(+), 463 deletions(-)\n\ncommit 88cb69b10c66751f687c3745c8e9861b105de3a2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jul 4 21:43:27 2009 +0100\n\n    [boilerpate] Move target definition to backends.\n    \n    By moving the backend target definition out of the massive amlagamated\n    block in cairo-boilerplate.c and into each of the\n    cairo-boilerplate-backend.c, we make it much easier to add new targets as\n    the information need only be entered in a single file and not scattered\n    across three. However, updating the target interface means trawling across\n    all the files -- except given that I found it difficult maintaining the\n    single massive array I do not see this as an increase in the maintenance\n    burden.\n\n boilerplate/.gitignore                             |    2 +\n boilerplate/Makefile.am                            |   12 +\n boilerplate/Makefile.sources                       |   27 +-\n boilerplate/cairo-boilerplate-beos-private.h       |   40 --\n boilerplate/cairo-boilerplate-beos.cpp             |   48 +-\n boilerplate/cairo-boilerplate-directfb-private.h   |   26 -\n boilerplate/cairo-boilerplate-directfb.c           |   29 +-\n boilerplate/cairo-boilerplate-glitz-agl.c          |   31 +-\n boilerplate/cairo-boilerplate-glitz-glx.c          |   31 +-\n boilerplate/cairo-boilerplate-glitz-private.h      |   88 ---\n boilerplate/cairo-boilerplate-glitz-wgl.c          |   32 +-\n boilerplate/cairo-boilerplate-pdf-private.h        |   60 --\n boilerplate/cairo-boilerplate-pdf.c                |   48 +-\n boilerplate/cairo-boilerplate-ps-private.h         |   71 ---\n boilerplate/cairo-boilerplate-ps.c                 |   73 ++-\n boilerplate/cairo-boilerplate-qt-private.h         |   60 --\n boilerplate/cairo-boilerplate-qt.cpp               |   29 +-\n boilerplate/cairo-boilerplate-quartz-private.h     |   44 --\n boilerplate/cairo-boilerplate-quartz.c             |   29 +-\n boilerplate/cairo-boilerplate-script-private.h     |   57 --\n boilerplate/cairo-boilerplate-script.c             |   28 +-\n boilerplate/cairo-boilerplate-svg-private.h        |   72 ---\n boilerplate/cairo-boilerplate-svg.c                |   70 ++-\n .../cairo-boilerplate-test-surfaces-private.h      |   99 ---\n boilerplate/cairo-boilerplate-test-surfaces.c      |  117 +++-\n boilerplate/cairo-boilerplate-win32-printing.c     |   43 +-\n boilerplate/cairo-boilerplate-win32-private.h      |   65 --\n boilerplate/cairo-boilerplate-win32.c              |   28 +-\n boilerplate/cairo-boilerplate-xcb-private.h        |   47 --\n boilerplate/cairo-boilerplate-xcb.c                |   28 +-\n boilerplate/cairo-boilerplate-xlib-private.h       |   71 ---\n boilerplate/cairo-boilerplate-xlib.c               |  207 ++++---\n boilerplate/cairo-boilerplate.c                    |  639 +++-----------------\n boilerplate/cairo-boilerplate.h                    |    3 +-\n boilerplate/make-cairo-boilerplate-constructors.c  |  156 +++++\n test/make-cairo-test-constructors.c                |   28 +-\n 36 files changed, 946 insertions(+), 1592 deletions(-)\n\ncommit 8a10ab1c04298d6c22ae8aabec5d762141a8e98f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jul 4 18:46:21 2009 +0100\n\n    [script] Tidy dict construction for glyphs\n    \n    Replace dict with '<< ... >>' similar to surface definitions as it is\n    easier to read in scripts.\n\n src/cairo-script-surface.c |   12 ++++++------\n 1 file changed, 6 insertions(+), 6 deletions(-)\n\ncommit fef3649953a3dcc3a17d9d5858f56690a8782501\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jul 4 18:32:57 2009 +0100\n\n    [script] Fix the trivial errors running the test suite\n    \n    A few typos crept in breaking the script output and various refreshes of\n    the expected results.\n\n src/cairo-script-surface.c               |   33 +++++++++++++++++++++---------\n test/mime-data.script.ref.png            |  Bin 1982 -> 2041 bytes\n test/scale-offset-image.c                |    2 +-\n test/scale-offset-similar.c              |    2 +-\n util/cairo-script/cairo-script-scanner.c |    6 ++++--\n 5 files changed, 29 insertions(+), 14 deletions(-)\n\ncommit 2395bba1e66a2623cb288e13effc206f86e5e62e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jul 4 18:31:49 2009 +0100\n\n    [any2ppm] Choose a more appropriate format for the replay content\n    \n    Actually select a format that matches the request content when replaying\n    the script to an image.\n\n test/any2ppm.c |   15 ++++++++++++++-\n 1 file changed, 14 insertions(+), 1 deletion(-)\n\ncommit 9942a89870f7754e28ff334010c4432553cf7d91\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jul 4 18:30:24 2009 +0100\n\n    [boilerplate] Read whole RGB lines at a time\n    \n    Rather than read+unpack each pixel, read in a whole RGB packed line and\n    unpack the whole line in a single pass.\n\n boilerplate/cairo-boilerplate.c |   13 +++++++------\n 1 file changed, 7 insertions(+), 6 deletions(-)\n\ncommit 23648e2fdfefba4df08bc854d725758209998e1f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 3 00:40:32 2009 +0100\n\n    [script] Prototypical binary translator\n    \n    Hook into the scanner to write out binary version of the tokenized\n    objects -- note we bind executable names (i.e. check to see if is an\n    operator and substitute the name with an operator -- this breaks\n    overloading of operators by scripts).\n    \n    By converting scripts to a binary form, they are more compact and\n    execute faster:\n    \n      firefox-world-map.trace 526850146 bytes\n                  bound.trace 275187755 bytes\n    \n    [ # ]  backend                         test   min(s) median(s) stddev. count\n    [  0]     null                        bound   34.481   34.741   0.68%    3/3\n    [  1]     null            firefox-world-map   89.635   89.716   0.19%    3/3\n    [  0]      drm                        bound   79.304   79.350   0.61%    3/3\n    [  1]      drm            firefox-world-map  135.380  135.475   0.58%    3/3\n    [  0]    image                        bound   95.819   96.258   2.85%    3/3\n    [  1]    image            firefox-world-map  156.889  156.935   1.36%    3/3\n    [  0]     xlib                        bound  539.130  550.220   1.40%    3/3\n    [  1]     xlib            firefox-world-map  596.244  613.487   1.74%    3/3\n    \n    This trace has a lot of complex paths and the use of binary floating point\n    reduces the file size by about 50%, with a commensurate reduction in scan\n    time and significant reduction in operator lookup overhead. Note that this\n    test is still IO/CPU bound on my i915 with its pitifully slow flash...\n\n util/cairo-script/Makefile.am                |    5 +-\n util/cairo-script/cairo-script-file.c        |   44 +-\n util/cairo-script/cairo-script-interpreter.c |   85 ++-\n util/cairo-script/cairo-script-interpreter.h |    9 +-\n util/cairo-script/cairo-script-objects.c     |    8 +-\n util/cairo-script/cairo-script-operators.c   |    2 +-\n util/cairo-script/cairo-script-private.h     |   27 +-\n util/cairo-script/cairo-script-scanner.c     | 1059 ++++++++++++++++++--------\n 8 files changed, 906 insertions(+), 333 deletions(-)\n\ncommit 07c0c8c5c0820e93403623eb5c1fa2df8ca89c60\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jul 4 14:07:16 2009 +0100\n\n    [surface] Refactor meta-surface clone\n    \n    Whilst still obnoxious, at least moving it to a separate function is more\n    readable.\n\n src/cairo-surface.c |  140 +++++++++++++++++++++++++++++----------------------\n 1 file changed, 79 insertions(+), 61 deletions(-)\n\ncommit 7903c80ee81777bab6eec408c10b2b59330b10f7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jul 4 13:50:15 2009 +0100\n\n    [meta] Cache replays when used as a pattern source\n    \n    Use the cow-snapshotting mechanism to store the meta surface replay (either\n    to an image inside acquire_source_image() or to a similar surface during\n    clone_similar()).\n    \n    Fixes Bug 17971 -- Extreme slowdown for manual convolutions in most\n    vector backends.\n    https://bugs.freedesktop.org/show_bug.cgi?id=17971\n\n src/cairo-meta-surface.c |   18 ++++++++-\n src/cairo-surface.c      |   92 +++++++++++++++++++++++++++++++++++-----------\n src/cairoint.h           |    3 +-\n 3 files changed, 88 insertions(+), 25 deletions(-)\n\ncommit f353ba46a3b8c260f96588fd6bb8d07c2a09d01a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jul 4 13:49:35 2009 +0100\n\n    [meta] Copy extents on snapshotting.\n    \n    Need to copy across the extents as well when snapshotting.\n\n src/cairo-meta-surface.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit f4019be7bdff5c67d679f4de1070c25aa99a993d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jul 4 13:16:42 2009 +0100\n\n    [trace] Remove a few transient pattern def/undef\n    \n    It is easier on the eye to use\n       '1 index set-source exch pop'\n    rather than\n       'dup /p0 exch def p0 set-source /p0 undef'\n    (as patterns are expected to be temporary so we strive to avoid naming\n    them).\n\n util/cairo-trace/trace.c |   42 +++++++++++++++++++++++++++++++-----------\n 1 file changed, 31 insertions(+), 11 deletions(-)\n\ncommit dcb7f1d034438c5c890490df93a86b40fea3036c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jul 4 08:08:25 2009 +0100\n\n    [script] Add missing include <string.h>\n    \n    As reported by Magnus Boman <captain.magnus@gmail.com>.\n    \n    Fixes Bug 22610 -- Patch to add missing include in util/cairo-script/csi-replay.c\n    http://bugs.freedesktop.org/show_bug.cgi?id=22610\n\n util/cairo-script/csi-replay.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 97bd2228a6635bbb0eac4ce95801754957dbb7ba\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 3 19:41:51 2009 +0100\n\n    [script] Insert spaces around '<<' and '>>'\n    \n    The dictionary constructors are just ordinary tokens so need space for\n    delimiters.\n\n src/cairo-script-surface.c |   62 +++++++++++++++-----------------------------\n 1 file changed, 21 insertions(+), 41 deletions(-)\n\ncommit 6003ab77e1ebefadb97338de0e7da4a76d973b1a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 3 18:26:50 2009 +0100\n\n    Export meta-surface\n    \n    The meta-surface is a vital tool to record a trace of drawing commands\n    in-memory. As such it is used throughout cairo.\n    \n    The value of such a surface is immediately obvious and should be\n    applicable for many applications. The first such case is by\n    cairo-test-trace which wants to record the entire graph of drawing commands\n    that affect a surface in the event of a failure.\n\n NEWS                                |   27 +++++\n boilerplate/Makefile.win32.features |    8 ++\n boilerplate/cairo-boilerplate.c     |   12 +--\n build/Makefile.win32.features-h     |    1 +\n build/configure.ac.features         |    1 +\n configure.ac                        |    4 +\n perf/cairo-perf.c                   |    6 +-\n src/Makefile.win32.features         |    8 ++\n src/cairo-meta-surface-private.h    |   14 +--\n src/cairo-meta-surface.c            |  202 +++++++++++++++++++++++++++--------\n src/cairo-paginated-surface.c       |   16 +--\n src/cairo-pdf-surface.c             |    2 +-\n src/cairo-ps-surface.c              |    2 +-\n src/cairo-script-surface.c          |   10 +-\n src/cairo-surface.c                 |    2 +-\n src/cairo-svg-surface.c             |    8 +-\n src/cairo-type3-glyph-surface.c     |    8 +-\n src/cairo-types-private.h           |    3 +-\n src/cairo-user-font.c               |    7 +-\n src/cairo-win32-printing-surface.c  |    2 +-\n src/cairo.h                         |   22 +++-\n src/test-meta-surface.c             |   16 +--\n src/test-meta-surface.h             |    8 +-\n test/cairo-test-trace.c             |   58 ++++------\n test/get-clip.c                     |    5 +\n 25 files changed, 296 insertions(+), 156 deletions(-)\n\ncommit 2a9903dbbfeb3fe843f0d618d15674b37a29f3a9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 3 12:48:40 2009 +0100\n\n    [script] Trim some excess verbage\n    \n    Remove some redundant defining of surfaces and contexts and of setting\n    defaults. In order to reduce the number of defines, we need to operate on\n    the operand stack more frequently - though in practice those operations\n    are quite rare.\n\n src/Makefile.sources       |    1 +\n src/cairo-list-private.h   |  189 +++++++++++++++\n src/cairo-script-surface.c |  561 ++++++++++++++++++++++++++++++--------------\n 3 files changed, 572 insertions(+), 179 deletions(-)\n\ncommit 28773fe79f883c32ee4e55e49f5dc3fced00c4f6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 3 13:17:47 2009 +0100\n\n    [test-meta] Initialize image\n    \n    Oops, stupid mistake - missed off the initialization of the image to NULL\n    from the last commit.\n\n src/test-meta-surface.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit ac6c3dbbaed377273b73da6e9e03bb8380a78ec4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 3 12:56:20 2009 +0100\n\n    [test-meta] Lazily allocate image\n    \n    Only allocate the image on first use, as we may never actually need to\n    construct the image output.\n\n src/test-meta-surface.c |   42 ++++++++++++++++++++++++------------------\n 1 file changed, 24 insertions(+), 18 deletions(-)\n\ncommit fe73a9dd1413a851beeca7a0fc4ab7cb351ea9ea\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jul 3 11:24:42 2009 +0100\n\n    [test] Record trace to an in-memory meta-surface\n    \n    Requires hooking into test-meta-surface currently. Export meta-surface!\n    \n    The idea is that on detection of an error, we can reconstruct a minimal\n    trace from the meta-surface. The first step is to simply dump the trace\n    for the failing meta-surface. Later, we should automatically minimise\n    this further.\n\n src/test-meta-surface.c |  101 ++++++++-----\n src/test-meta-surface.h |    4 +\n test/Makefile.am        |    3 +\n test/cairo-test-trace.c |  371 +++++++++++++++++++++++++++++++++++++++++------\n 4 files changed, 397 insertions(+), 82 deletions(-)\n\ncommit 633efe81873168506ec3594eae1f6ac38d71026c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jul 2 09:17:43 2009 +0100\n\n    [surface] Allocate temporary region on stack\n    \n    Avoid a very short-lived temporary heap allocation of a region.\n\n src/cairo-surface.c |   13 +++++--------\n 1 file changed, 5 insertions(+), 8 deletions(-)\n\ncommit b2e2a2f31af33ff01d78c6c8786249a623017ffa\nAuthor: Carlos Garcia Campos <carlosgc@gnome.org>\nDate:   Tue Jun 30 15:47:51 2009 +0200\n\n    [test] Update argb32 pdf reference image for trap-clip\n\n test/trap-clip.pdf.argb32.ref.png |  Bin 6720 -> 6745 bytes\n 1 file changed, 0 insertions(+), 0 deletions(-)\n\ncommit 910afc7a8e5c40f4fe682ec0b0f3836a07ea721d\nAuthor: Carlos Garcia Campos <carlosgc@gnome.org>\nDate:   Tue Jun 30 15:40:24 2009 +0200\n\n    [test] Mark all smask tests as XFAIL for pdf\n    \n    Those tests use linear gradients which are not correctly handled by\n    poppler yet. See https://bugs.freedesktop.org/show_bug.cgi?id=10942\n\n test/README             |   11 +++++++++++\n test/smask-fill.c       |    2 +-\n test/smask-image-mask.c |    2 +-\n test/smask-mask.c       |    2 +-\n test/smask-paint.c      |    2 +-\n test/smask-stroke.c     |    2 +-\n test/smask-text.c       |    2 +-\n test/smask.c            |    2 +-\n 8 files changed, 18 insertions(+), 7 deletions(-)\n\ncommit 5becfc2bd59956090daa8afd68db2f139dcb8392\nAuthor: Carlos Garcia Campos <carlosgc@gnome.org>\nDate:   Tue Jun 30 14:58:40 2009 +0200\n\n    [test] Add pdf reference image for rotate-image-surface-paint\n    \n    Remove also argb32 and rgb24 pdf reference images.\n\n test/Makefile.am                                   |    3 +--\n test/rotate-image-surface-paint.pdf.argb32.ref.png |  Bin 215 -> 0 bytes\n test/rotate-image-surface-paint.pdf.ref.png        |  Bin 0 -> 196 bytes\n test/rotate-image-surface-paint.pdf.rgb24.ref.png  |  Bin 215 -> 0 bytes\n 4 files changed, 1 insertion(+), 2 deletions(-)\n\ncommit f81203cde864af1a1fea81a438e4f4effe928808\nAuthor: Carlos Garcia Campos <carlosgc@gnome.org>\nDate:   Tue Jun 30 14:44:19 2009 +0200\n\n    [test] Add pdf reference image for mask-transformed-image\n\n test/Makefile.am                        |    1 +\n test/mask-transformed-image.pdf.ref.png |  Bin 0 -> 3528 bytes\n 2 files changed, 1 insertion(+)\n\ncommit 9d538ef337e9ca1600f842cd2164ff5e6629090a\nAuthor: Carlos Garcia Campos <carlosgc@gnome.org>\nDate:   Tue Jun 30 14:42:32 2009 +0200\n\n    [test] Update argb32 and rgb24 pdf reference image for mask\n\n test/mask.pdf.argb32.ref.png |  Bin 9903 -> 9918 bytes\n test/mask.pdf.rgb24.ref.png  |  Bin 8735 -> 8745 bytes\n 2 files changed, 0 insertions(+), 0 deletions(-)\n\ncommit 97def877bb1c290735875061118bd795b9b83215\nAuthor: Carlos Garcia Campos <carlosgc@gnome.org>\nDate:   Tue Jun 30 14:18:30 2009 +0200\n\n    [test] Update pdf reference image for surface-pattern\n    \n    Remove also argb32 and rgb24 pdf reference images.\n\n test/Makefile.am                        |    2 --\n test/surface-pattern.pdf.argb32.ref.png |  Bin 14808 -> 0 bytes\n test/surface-pattern.pdf.ref.png        |  Bin 14791 -> 14800 bytes\n test/surface-pattern.pdf.rgb24.ref.png  |  Bin 14808 -> 0 bytes\n 4 files changed, 2 deletions(-)\n\ncommit 8a6bdc63c1491dc77e8d9e192b9e44d9ff2e3c9b\nAuthor: Carlos Garcia Campos <carlosgc@gnome.org>\nDate:   Tue Jun 30 13:33:07 2009 +0200\n\n    [test] Update argb32 and rgb24 pdf reference image for text-pattern\n\n test/text-pattern.pdf.argb32.ref.png |  Bin 2151 -> 2334 bytes\n test/text-pattern.pdf.rgb24.ref.png  |  Bin 508 -> 1915 bytes\n 2 files changed, 0 insertions(+), 0 deletions(-)\n\ncommit b46ba7aa33ba604628f1c94449019895b1d7ef82\nAuthor: Carlos Garcia Campos <carlosgc@gnome.org>\nDate:   Tue Jun 30 13:25:39 2009 +0200\n\n    [test] Update pdf reference image for text-transform\n\n test/text-transform.pdf.ref.png |  Bin 3796 -> 5586 bytes\n 1 file changed, 0 insertions(+), 0 deletions(-)\n\ncommit 9bc7ab980d6e834dacaf4f48f199e8c95cfba94e\nAuthor: Carlos Garcia Campos <carlosgc@gnome.org>\nDate:   Tue Jun 30 12:09:50 2009 +0200\n\n    [test] Update pdf reference image for filter-nearest-transformed\n    \n    Remove also argb32 and rgb24 pdf reference images.\n\n test/Makefile.am                                   |    2 --\n test/filter-nearest-transformed.pdf.argb32.ref.png |  Bin 488 -> 0 bytes\n test/filter-nearest-transformed.pdf.ref.png        |  Bin 548 -> 552 bytes\n test/filter-nearest-transformed.pdf.rgb24.ref.png  |  Bin 488 -> 0 bytes\n 4 files changed, 2 deletions(-)\n\ncommit 27938f7e3ff357e5fe8a05e547cf83dbad7551ef\nAuthor: Carlos Garcia Campos <carlosgc@gnome.org>\nDate:   Tue Jun 30 12:04:06 2009 +0200\n\n    [test] Update pdf reference image for filter-nearest-offset\n    \n    Remove also argb32 and rgb24 pdf reference images.\n\n test/Makefile.am                              |    2 --\n test/filter-nearest-offset.pdf.argb32.ref.png |  Bin 4295 -> 0 bytes\n test/filter-nearest-offset.pdf.ref.png        |  Bin 4537 -> 997 bytes\n test/filter-nearest-offset.pdf.rgb24.ref.png  |  Bin 4295 -> 0 bytes\n 4 files changed, 2 deletions(-)\n\ncommit e6576e8912196607fdd3613c6924e26c2ce7a951\nAuthor: Carlos Garcia Campos <carlosgc@gnome.org>\nDate:   Tue Jun 30 11:56:18 2009 +0200\n\n    [test] Update argb32 pdf reference image for clip-operator\n\n test/clip-operator.pdf.argb32.ref.png |  Bin 11604 -> 11603 bytes\n 1 file changed, 0 insertions(+), 0 deletions(-)\n\ncommit 13d9374ec13c62233312beb0feb9a47531aec2e3\nAuthor: Carlos Garcia Campos <carlosgc@gnome.org>\nDate:   Mon Jun 29 17:36:47 2009 +0200\n\n    [test] Remove PDF reference images for scale-source-surface-paint\n    \n    It works with current poppler now\n\n test/Makefile.am                                   |    2 --\n test/scale-source-surface-paint.pdf.argb32.ref.png |  Bin 182 -> 0 bytes\n test/scale-source-surface-paint.pdf.rgb24.ref.png  |  Bin 198 -> 0 bytes\n 3 files changed, 2 deletions(-)\n\ncommit 3710c4184c2e87368dde5ccb25f3648b861b6059\nAuthor: Carlos Garcia Campos <carlosgc@gnome.org>\nDate:   Mon Jun 29 17:32:54 2009 +0200\n\n    [test] Remove PDF reference images for paint-with-alpha\n    \n    It works with current poppler now\n\n test/Makefile.am                  |    1 -\n test/paint-with-alpha.pdf.ref.png |  Bin 466 -> 0 bytes\n 2 files changed, 1 deletion(-)\n\ncommit 8162acd81a898247f19054a136af95062e3b0e91\nAuthor: Carlos Garcia Campos <carlosgc@gnome.org>\nDate:   Mon Jun 29 12:42:52 2009 +0200\n\n    [test] Remove PDF reference images for paint-source-alpha\n    \n    It works with current poppler now\n\n test/Makefile.am                           |    2 --\n test/paint-source-alpha.pdf.argb32.ref.png |  Bin 471 -> 0 bytes\n test/paint-source-alpha.pdf.ref.png        |  Bin 473 -> 0 bytes\n 3 files changed, 2 deletions(-)\n\ncommit 1e1f4fd0920cb2b0882137b4cc500dcbae42d2dc\nAuthor: Carlos Garcia Campos <carlosgc@gnome.org>\nDate:   Tue Jun 30 11:05:50 2009 +0200\n\n    [test] Use poppler_page_render with a transparent surface\n    \n    Instead of using an opaque surface filled in white, use a transparent\n    surface and fill it in white by using CAIRO_OPERATOR_DEST_OVER after\n    rendering.\n\n test/any2ppm.c |    9 +++++----\n test/pdf2png.c |    9 +++++----\n 2 files changed, 10 insertions(+), 8 deletions(-)\n\ncommit 700a555d194a20c00df69b963cdc5b6153e162a4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jul 1 19:41:42 2009 +0100\n\n    [surface] Expose a SURFACE_TYPE_MISMATCH nil object\n    \n    Gah, yet more error object bloat. Must finish cairo-object.\n\n src/cairo-surface.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 8f4611a94bda407b5944520b95599441a4ff5327\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jul 1 19:39:57 2009 +0100\n\n    [perf] Fix use-after-free when retrieving error line number\n    \n    We find out the status on destroying the script and then attempt to query\n    the defunct script for more info about the error. Wrong.\n\n perf/cairo-perf-trace.c |    5 ++---\n 1 file changed, 2 insertions(+), 3 deletions(-)\n\ncommit 7c160dea5456b783d9b04b5c11bbacb9a89fa031\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jul 1 10:12:50 2009 +0100\n\n    [perf] Unbreak cairo-perf-diff builder\n\n perf/cairo-perf-diff |   19 ++++++++++---------\n 1 file changed, 10 insertions(+), 9 deletions(-)\n\ncommit 3d88f99668308315db759af3dac789973caa8eae\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jul 1 09:57:56 2009 +0100\n\n    [perf] Enable cairo-perf-trace in cairo-perf-diff\n    \n    Only as a --trace option for now.\n\n perf/cairo-perf-diff |   51 +++++++++++++++++++++++++++++++++++---------------\n 1 file changed, 36 insertions(+), 15 deletions(-)\n\ncommit 1564d67d63618e12c58dc1d65c7e68505950e4d4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jun 30 22:22:39 2009 +0100\n\n    [perf] Exclude the xlib-reference target from cairo-perf\n\n perf/cairo-perf-trace.c |    3 ++-\n perf/cairo-perf.c       |    3 ++-\n 2 files changed, 4 insertions(+), 2 deletions(-)\n\ncommit e5b4f78bff20903fef5f55a0fcd026590ea444a4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jun 30 22:12:50 2009 +0100\n\n    [boilerplate] Only include null-test-surface >= cairo-1.9.3\n\n boilerplate/cairo-boilerplate-test-surfaces.c |   10 +++++++++-\n 1 file changed, 9 insertions(+), 1 deletion(-)\n\ncommit e0bdbb437ee699d6f75df34494a6e290dc55aa39\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jun 30 22:04:01 2009 +0100\n\n    [xlib] Remove redundant checks for src_picture==None\n    \n    Before attempting to even set the attributes on the source Picture, we\n    ensure that it exists. So remove the redundant safe-guards to do nothing\n    if it doesn't exist.\n\n src/cairo-xlib-surface.c |   12 +-----------\n 1 file changed, 1 insertion(+), 11 deletions(-)\n\ncommit b7f68d3518e25fb02c9d36d14de9dc0c905ffe8f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jun 30 20:46:12 2009 +0100\n\n    [perf] Enable trace directory recursion.\n    \n    I have an idea to categorise traces within their own subdirectories and so\n    for convenience added path walking to cairo-perf-trace. Principally this\n    should allow for forests of symlinks of all types.\n\n perf/cairo-perf-trace.c |  104 ++++++++++++++++++++++++++++++-----------------\n perf/cairo-perf.h       |    1 +\n 2 files changed, 68 insertions(+), 37 deletions(-)\n\ncommit 6102dd0c1c26e289ad08d1cf0cc366e6298f5711\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jun 29 10:50:44 2009 +0100\n\n    [ft] Correct reference counting for implementation font face\n    \n    We are expected to return a new reference from get_implementation(), and\n    failing to do so was causing use-after-frees (detected by the reference\n    counting checks).\n\n src/cairo-ft-font.c |    3 +--\n 1 file changed, 1 insertion(+), 2 deletions(-)\n\ncommit 4f745fbe3329a4fd5164c7bd7fe61c0395e8d1ee\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jun 29 10:49:51 2009 +0100\n\n    [test] Only run fallback-resolution for enabled targets\n    \n    A secondary check that both activates CAIRO_TEST_TARGET and prevents a\n    NULL-deref with the null test surface.\n\n test/fallback-resolution.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit d80f5580ef371a1d4b1746b4ad54d97274d2d6cd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jun 28 21:11:41 2009 +0100\n\n    [pattern] Mark _cairo_pattern_nil as static\n    \n    Fixes check-def.sh failure.\n\n src/cairo-pattern.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 758a18b354cefca841536c7d91f8f5758456f72f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jun 28 20:56:33 2009 +0100\n\n    [test] Timeout support for tests\n    \n    Enforce that each test must render within 60 seconds or be considered to\n    have hit an infinite loop and be reported as a CRASH. The timeout value is\n    adjustable via CAIRO_TEST_TIMEOUT -- a value of 0 will disable.\n\n build/configure.ac.system |    3 +++\n test/cairo-test.c         |   18 ++++++++++++++++++\n test/cairo-test.h         |    2 ++\n 3 files changed, 23 insertions(+)\n\ncommit f7021d8f3e59d1f7fa77135366bbbd6845dff684\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jun 28 20:41:04 2009 +0100\n\n    [script] Enable error handling for recursive scanners\n    \n    It's conceivable that a script could execute another file and so we should\n    only setjmp on the first invocation.\n\n util/cairo-script/cairo-script-private.h |    1 +\n util/cairo-script/cairo-script-scanner.c |   15 ++++++++++++---\n 2 files changed, 13 insertions(+), 3 deletions(-)\n\ncommit 963664727b4754f92a876c36557922821706f591\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jun 28 10:49:37 2009 +0100\n\n    [trace] Compile fix for --enable-script\n    \n    Silly typo as pointed out by Hans Breuer <hans@breuer.org>.\n\n util/cairo-trace/trace.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 2ecafb025c8b15a86372b655e763d742a0f6ef85\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jun 28 10:09:01 2009 +0100\n\n    [script] Reuse glyph advance cache over multiple invocations\n    \n    Store the metric cache as user-data on the scaled-font so that we can\n    retrieve it on future calls to show-glyphs and friends.\n\n util/cairo-script/cairo-script-operators.c |  413 +++++++++-------------------\n 1 file changed, 131 insertions(+), 282 deletions(-)\n\ncommit 663da31bbe7cf6021c8d59a4d4ddd2702cfe860f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jun 28 01:17:13 2009 +0100\n\n    [boilerplate] Propagate original error from create_from_png()\n    \n    During cairo_boilerplate_get_image_surface_from_png() the original status\n    returned by cairo_image_surface_create_from_png() could have been masked\n    by inappropriate context construction when flattening or extracting.\n    Simply check after creating the surface from the png file, and return\n    immediately if in error.\n\n boilerplate/cairo-boilerplate.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 2bbb69420289aa372512602db312611369e70f54\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jun 28 00:57:10 2009 +0100\n\n    [test] Disable fallback16 testing\n    \n    Only use the RGB16_565 surface as a source during testing. We presume that\n    pixman is itself rigorously tested and the output is equivalent to the\n    image surface. Enabling this test surface would require too large of a\n    burden to maintain the reference images for the 16-bit backend.\n\n boilerplate/cairo-boilerplate.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 34ac8673b2d51edeb0b29a4949d7d16c3d07a790\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jun 28 00:48:05 2009 +0100\n\n    [script] Use setjmp exception handling during scanning\n    \n    Save ~5% of overhead by using longjmp on error to terminate scanning\n    instead of propagating the error, incurring lots of redundant error\n    checks.\n\n util/cairo-script/cairo-script-interpreter.c |   14 +-\n util/cairo-script/cairo-script-objects.c     |   46 +--\n util/cairo-script/cairo-script-private.h     |   51 ++--\n util/cairo-script/cairo-script-scanner.c     |  390 ++++++++++++--------------\n 4 files changed, 221 insertions(+), 280 deletions(-)\n\ncommit 2b1ec7a4d87399824dacb9803627c9322b12d894\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 27 22:48:19 2009 +0100\n\n    [cairo] Report true error via pattern from cairo_pop_group()\n    \n    Report the correct error via the returned pattern->status rather than\n    simply returning the NO_MEMORY nil object.\n\n src/cairo-pattern.c |    4 ++--\n src/cairo.c         |   18 +++++++++++-------\n src/cairoint.h      |    4 +++-\n 3 files changed, 16 insertions(+), 10 deletions(-)\n\ncommit 5c3be3ece27b7cf6e4b1262ea18ac51b45c62389\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 27 22:40:15 2009 +0100\n\n    [cairo] Mark cr->status guard as unlikely\n    \n    For correct operation, the context should never be in error, so mark the\n    error context as being unlikely to optimize the common path.\n\n src/cairo.c |  199 +++++++++++++++++++++++++++++------------------------------\n 1 file changed, 97 insertions(+), 102 deletions(-)\n\ncommit f3880283331f3bda374e24fd0e1de677d8d368a9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 27 20:18:18 2009 +0100\n\n    [gstate] Avoid temporary allocation for transformed patterns\n    \n    Observe that patterns are not altered during an operation and so we are\n    safe to use the data from the original pattern without copying. (This is\n    enforced through the declaration that the backends operate on constant\n    patterns which are not allowed to be referenced or destroyed.)\n\n src/cairo-gstate.c  |  184 ++++++++++++++++-----------------------------------\n src/cairo-pattern.c |   31 +++++++++\n src/cairoint.h      |    4 ++\n 3 files changed, 92 insertions(+), 127 deletions(-)\n\ncommit 3759c7b34b662ccdc0486c68798aca0a6438ab7e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 27 19:38:30 2009 +0100\n\n    [perf] Enable the null-backend for trace replays.\n\n perf/cairo-perf-trace.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 8d4c704129132effa10fb9242239952c2f4b7721\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 27 19:34:20 2009 +0100\n\n    [ft] Cache the resolved font face\n    \n    Keep the resolved font face alive whilst the default FcConfig remains\n    identical i.e. resolve the pattern again if the system configuration\n    changes (e.g. a new font is added or the rules are updated). This should\n    retain the benefits of lazily resolving font patterns whilst improving\n    performance by reducing the number of calls to FcFontMatch().\n\n src/cairo-ft-font.c |   39 ++++++++++++++++++++++++++++++++++-----\n 1 file changed, 34 insertions(+), 5 deletions(-)\n\ncommit ddadd41a6c3d6a7cdaa07373b24325f59d3436e3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 27 18:07:36 2009 +0100\n\n    [test] Remove broken PDF reference images for push-group\n    \n    More XFAIL reference images that are now invalidated by changes in\n    poppler.\n\n test/Makefile.am                   |    3 ---\n test/push-group.pdf.argb32.ref.png |  Bin 2722 -> 0 bytes\n test/push-group.pdf.ref.png        |  Bin 2807 -> 0 bytes\n test/push-group.pdf.rgb24.ref.png  |  Bin 2740 -> 0 bytes\n 4 files changed, 3 deletions(-)\n\ncommit 4d233fa4a6a16d400ba959f4c1c5d84fdd26d8fc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 27 18:04:37 2009 +0100\n\n    [test] Remove invalid smask PDF reference images\n    \n    These need to be recorded using an XFAIL reference. In the meantime, as\n    the poppler output has changed, just remove all the invalid PDF reference\n    images.\n\n test/Makefile.am                         |   19 -------------------\n test/smask-fill.pdf.argb32.ref.png       |  Bin 1909 -> 0 bytes\n test/smask-fill.pdf.ref.png              |  Bin 1075 -> 0 bytes\n test/smask-fill.pdf.rgb24.ref.png        |  Bin 1909 -> 0 bytes\n test/smask-image-mask.pdf.argb32.ref.png |  Bin 1651 -> 0 bytes\n test/smask-image-mask.pdf.ref.png        |  Bin 421 -> 0 bytes\n test/smask-image-mask.pdf.rgb24.ref.png  |  Bin 1651 -> 0 bytes\n test/smask-mask.pdf.argb32.ref.png       |  Bin 4398 -> 0 bytes\n test/smask-mask.pdf.ref.png              |  Bin 3731 -> 0 bytes\n test/smask-mask.pdf.rgb24.ref.png        |  Bin 4398 -> 0 bytes\n test/smask-paint.pdf.argb32.ref.png      |  Bin 4496 -> 0 bytes\n test/smask-paint.pdf.ref.png             |  Bin 3800 -> 0 bytes\n test/smask-paint.pdf.rgb24.ref.png       |  Bin 4496 -> 0 bytes\n test/smask-stroke.pdf.argb32.ref.png     |  Bin 1417 -> 0 bytes\n test/smask-stroke.pdf.ref.png            |  Bin 449 -> 0 bytes\n test/smask-stroke.pdf.rgb24.ref.png      |  Bin 1417 -> 0 bytes\n test/smask-text.pdf.ref.png              |  Bin 1806 -> 0 bytes\n test/smask.pdf.argb32.ref.png            |  Bin 4496 -> 0 bytes\n test/smask.pdf.ref.png                   |  Bin 3800 -> 0 bytes\n test/smask.pdf.rgb24.ref.png             |  Bin 4496 -> 0 bytes\n 20 files changed, 19 deletions(-)\n\ncommit 86624627e4b196a78cfd9bd642299441e838e0f2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 27 17:53:18 2009 +0100\n\n    [test] Add group-unaligned\n    \n    Test case for:\n       Bug 22441 -- Unexpected shift with push_group and pop_group\n       https://bugs.freedesktop.org/show_bug.cgi?id=22441\n    \n    This is a test that demonstrates the error in the pdf backend when using\n    groups on surfaces with non-integer sizes. In order to create such a\n    surface, we need to update the boilerplate to use doubles instead of\n    integers when specifying the surface size.\n\n boilerplate/cairo-boilerplate-beos-private.h       |   16 +++---\n boilerplate/cairo-boilerplate-beos.cpp             |    8 +--\n boilerplate/cairo-boilerplate-directfb-private.h   |    8 +--\n boilerplate/cairo-boilerplate-directfb.c           |    8 +--\n boilerplate/cairo-boilerplate-glitz-agl.c          |    8 +--\n boilerplate/cairo-boilerplate-glitz-glx.c          |   10 ++--\n boilerplate/cairo-boilerplate-glitz-private.h      |   24 ++++----\n boilerplate/cairo-boilerplate-glitz-wgl.c          |    8 +--\n boilerplate/cairo-boilerplate-pdf-private.h        |    8 +--\n boilerplate/cairo-boilerplate-pdf.c                |   14 ++---\n boilerplate/cairo-boilerplate-ps-private.h         |   16 +++---\n boilerplate/cairo-boilerplate-ps.c                 |   30 +++++-----\n boilerplate/cairo-boilerplate-qt-private.h         |   10 ++--\n boilerplate/cairo-boilerplate-qt.cpp               |    8 +--\n boilerplate/cairo-boilerplate-quartz-private.h     |    8 +--\n boilerplate/cairo-boilerplate-quartz.c             |    8 +--\n boilerplate/cairo-boilerplate-script-private.h     |    8 +--\n boilerplate/cairo-boilerplate-script.c             |   12 ++--\n boilerplate/cairo-boilerplate-svg-private.h        |   16 +++---\n boilerplate/cairo-boilerplate-svg.c                |   30 +++++-----\n .../cairo-boilerplate-test-surfaces-private.h      |   40 ++++++-------\n boilerplate/cairo-boilerplate-test-surfaces.c      |   40 ++++++-------\n boilerplate/cairo-boilerplate-win32-printing.c     |    8 +--\n boilerplate/cairo-boilerplate-win32-private.h      |   16 +++---\n boilerplate/cairo-boilerplate-win32.c              |    8 +--\n boilerplate/cairo-boilerplate-xcb-private.h        |    8 +--\n boilerplate/cairo-boilerplate-xcb.c                |    8 +--\n boilerplate/cairo-boilerplate-xlib-private.h       |   24 ++++----\n boilerplate/cairo-boilerplate-xlib.c               |   45 +++++++++------\n boilerplate/cairo-boilerplate.c                    |   10 ++--\n boilerplate/cairo-boilerplate.h                    |    8 +--\n test/Makefile.am                                   |    7 +++\n test/Makefile.sources                              |    1 +\n test/cairo-test.c                                  |    2 +-\n test/cairo-test.h                                  |    4 +-\n test/group-unaligned.c                             |   60 ++++++++++++++++++++\n test/group-unaligned.pdf.ref.png                   |  Bin 0 -> 414 bytes\n test/group-unaligned.ps.ref.png                    |  Bin 0 -> 332 bytes\n test/group-unaligned.svg.argb32.ref.png            |  Bin 0 -> 524 bytes\n test/group-unaligned.svg.rgb24.ref.png             |  Bin 0 -> 434 bytes\n test/group-unaligned.xlib-fallback.ref.png         |  Bin 0 -> 496 bytes\n test/group-unaligned.xlib.ref.png                  |  Bin 0 -> 466 bytes\n 42 files changed, 312 insertions(+), 235 deletions(-)\n\ncommit c506ddb58612c69b80b08be3a6d14c5bcc1ac21f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 27 16:54:37 2009 +0100\n\n    [pdf] Restore original surface size after emitting group mask\n    \n    A trivial fix to reset the original surface size after emitting the group.\n    The annoying aspect is that this should have been caught by the test suite.\n    Alas, no. A gentle reminder that simple line coverage is insufficient. :(\n\n src/cairo-pdf-surface.c |    7 +++++--\n 1 file changed, 5 insertions(+), 2 deletions(-)\n\ncommit f8a2665840f12ae48798b0ffca49681e276823ba\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 26 07:22:49 2009 +0100\n\n    [cairo] Trivial code tidy\n\n src/cairo.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit c7cf5317f58b382c47ad2d1b4d8db3133b0c4d4b\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Wed Jun 24 23:33:44 2009 +0100\n\n    [test] Fix Makefile.am for Solaris make.\n    \n    Sun's make doesn't like conditional assignments to variables\n    in dependencies in the form of \"target: VAR+=VAL\".  This\n    construct was used to force the test suite run in the foreground\n    in the check-valgrind target.  It is replaced by a more\n    explicit set of the CAIRO_TEST_MODE environment variable.\n\n test/Makefile.am |    3 +--\n 1 file changed, 1 insertion(+), 2 deletions(-)\n\ncommit b82e7740c102afa7b9184b2556b887cf7a0211b0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jun 21 22:25:08 2009 +0100\n\n    [atomic] Silence compiler warnings by defining an intptr_t\n    \n    Evaulate the integer sizes during configure to find one of the exact same\n    size as a void* to use in the conversion of the atomic ptr cmpxchg to an\n    atomic int cmpxchg.\n\n build/configure.ac.system  |    3 +++\n src/cairo-atomic-private.h |   19 ++++++++++++-------\n 2 files changed, 15 insertions(+), 7 deletions(-)\n\ncommit a2d4fb50092c0cbb31a5df1bca9111957238139b\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Jun 21 14:09:10 2009 +0100\n\n    [test] Fix a typo in the _POSIX_SOURCE version number.\n    \n    I hope POSIX isn't around in 20000 AD!\n\n test/cairo-test.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 80990c7f729a666fc646182a36ffd311d7396a1a\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Jun 21 14:02:46 2009 +0100\n\n    [atomic] Use an integer __sync_val_compare_and_swap() for pointer CAS.\n    \n    Fix an implicit pointer/integer cast in _cairo_atomic_ptr_cmpxchg()\n    when building with LLVM/clang.\n    \n    The Intel synchronization primitives __sync_val_compare_and_swap()\n    are only defined by Intel for types int, long, long long and their\n    unsigned variants.  This patch uses one of those for\n    _cairo_atomic_ptr_cmpxchg() instead of relying on a gcc extension of\n    __sync_val_compare_and_swap() to pointer types.\n\n src/cairo-atomic-private.h |    9 ++++++++-\n src/cairo-atomic.c         |    6 +++++-\n 2 files changed, 13 insertions(+), 2 deletions(-)\n\ncommit d0c1c9282164bffb76f7419873e93608dc6d9876\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jun 21 10:08:21 2009 +0100\n\n    [boilerplate] Implement a reference xlib surface\n    \n    Create an xlib target that uses a separate display, specified by\n    CAIRO_REFERENCE_DISPLAY, that can be used as a reference implementation\n    for the normal display. So this can be used by cairo-trace-test to create\n    a reference surface that mimics exactly the true surface, but if it\n    targets an Xvfb display will be entirely rendered in software. If\n    CAIRO_REFERENCE_DISPLAY is not set, the reference surface degrades into an\n    xlib-fallback surface which is a close approximation (but still has\n    behavioural differences).\n\n boilerplate/cairo-boilerplate-xlib-private.h |   11 ++++++\n boilerplate/cairo-boilerplate-xlib.c         |   51 ++++++++++++++++++++++++++\n boilerplate/cairo-boilerplate.c              |   14 ++++++-\n 3 files changed, 74 insertions(+), 2 deletions(-)\n\ncommit d2244053dcca687a878b1008e3a8219f11d7bd0d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jun 21 08:58:08 2009 +0100\n\n    [perf] Force rebuild if make fails\n    \n    The build system has a singular failure whereby if a backend disappears\n    between on compile and the next, automake will fail to reconstruct the\n    Makefiles - resulting in a broken build. Attempt to fix this by removing\n    the build dir and recloning, which should work for any corrupt caches but\n    obviously will fail again at a true build failure.\n\n perf/cairo-perf-diff |   63 +++++++++++++++++++++++++++++---------------------\n 1 file changed, 37 insertions(+), 26 deletions(-)\n\ncommit ef0d307d549b9cc7a98cdce2ee4bae40d0fd0bd1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jun 21 08:43:55 2009 +0100\n\n    [perf] Need to version surface types\n    \n    As cairo-perf-diff will execute the current cairo-perf against historical\n    revisions, any introduced api must be protect in order to compile on old\n    versions.\n\n perf/cairo-perf-trace.c |    8 ++++++++\n perf/cairo-perf.c       |    6 ++++++\n 2 files changed, 14 insertions(+)\n\ncommit 44b72ba6d7bdcc5f4e431af178bc7c22f13e88e0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 20 13:09:46 2009 +0100\n\n    [perf] Add a non-build mode to graph\n    \n    Add --show to cairo-perf-graph just to graph perf files that currently\n    exist and not build the missing cases.\n\n perf/cairo-perf-graph |    5 +++--\n 1 file changed, 3 insertions(+), 2 deletions(-)\n\ncommit d4dd6fcf3a4e0d7426657592ebb3d65a2ae0bc4a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 20 13:08:50 2009 +0100\n\n    [perf] Show speedup/slowdownn labels on graph\n    \n    Add labels show that it is clear which direction is faster on the graph.\n\n perf/cairo-perf-graph-widget.c |  166 ++++++++++++++++++++++++++++++++++++----\n 1 file changed, 153 insertions(+), 13 deletions(-)\n\ncommit b71b6ecb59bf83605bb2bb10e3f8acd7dd950242\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 19 21:21:02 2009 +0100\n\n    [test] Fix the image compare\n    \n    Oh, it's a bad sign when I can't even correctly compare a bunch of pixels.\n\n test/cairo-test-trace.c |  101 ++++++++++++++++++++++++++++++++++++++++-------\n 1 file changed, 86 insertions(+), 15 deletions(-)\n\ncommit d544828934e479071fe5246fc0bdbbad33c097e8\nAuthor: M Joonas Pihlaja <rowan@sal.math.ualberta.ca>\nDate:   Sat Jun 20 06:16:51 2009 -0600\n\n    [build] Look for libpng.pc as well when configuring.\n    \n    The OpenBSD png package installs only libpng.pc and not\n    any of libpng{13,12,10}.pc.\n\n configure.ac |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 5733d8d6c35e1a77513a49267a47f6caae68e829\nAuthor: M Joonas Pihlaja <rowan@sal.math.ualberta.ca>\nDate:   Sat Jun 20 06:11:44 2009 -0600\n\n    [build] Remove a level of quoting from CAIRO_PARSE_VERSION.\n    \n    The m4 that comes with OpenBSD gets confused by the extra quoting\n    applied to the version number argument when building the\n    bodies of the cairo_version_{major,minor,micro} macros using\n    m4_bpatsubst(). Since we're making sure that the argument is always\n    a number, we can safely use the unquoted \\2 body rather than \\[\\2\\].\n\n acinclude.m4 |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 3bad3efaa2fa00275c1d27c95ccbf1fcdfdfef3e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 19 19:09:03 2009 +0100\n\n    [test] Add cairo-test-trace to .gitignore\n\n test/.gitignore |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 62dc0ae46c26652da9a76b851bab594020020115\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 19 19:03:17 2009 +0100\n\n    [cairo] Offset the current path when pushing/popping groups.\n    \n    We need to translate the path in order to compensate for the device offset\n    applied to the group surface when pushing and popping. (The path is\n    transformed to device space on creation, and so needs recomputing for the\n    new device.)\n\n src/cairo.c |   10 ++++++++++\n 1 file changed, 10 insertions(+)\n\ncommit 851c8839622619779c9169299e3efccd108d0395\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 19 19:00:39 2009 +0100\n\n    [test] Add group-clip\n    \n    Larry Ewing found an ancient and nasty bug whereby a path was not\n    corrected whilst pushing and popping groups.\n\n AUTHORS                 |    1 +\n test/Makefile.am        |    1 +\n test/Makefile.sources   |    1 +\n test/group-clip.c       |   57 +++++++++++++++++++++++++++++++++++++++++++++++\n test/group-clip.ref.png |  Bin 0 -> 191 bytes\n 5 files changed, 60 insertions(+)\n\ncommit 0a34abace781976b92287dd07daa2b41e168c4f6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 19 18:40:43 2009 +0100\n\n    [test] Experiment with reference targets\n    \n    Specify another boilerplate target to use as the reference for this\n    target. We then use this in cairo-test-trace in preference to using the\n    image surface. Still not perfect, though the framework is improving.\n\n boilerplate/cairo-boilerplate.c |  254 ++++++++++++++++++++++-----------------\n boilerplate/cairo-boilerplate.h |    5 +\n test/Makefile.am                |    6 +-\n test/cairo-test-trace.c         |  229 +++++++++++++++++++++++++++++------\n 4 files changed, 341 insertions(+), 153 deletions(-)\n\ncommit cec8579348fb39ca879285bebfb1ee65cbae502d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 19 16:09:26 2009 +0100\n\n    [xlib] Remove redundant code to query a xrender_format from a visual\n    \n    We always query an xrender_format for a Visual upon surface creation, so\n    checking again in create_similar() is redundant. (It also interferes with\n    disabling XRender...)\n\n src/cairo-xlib-surface.c |    9 ++-------\n 1 file changed, 2 insertions(+), 7 deletions(-)\n\ncommit dd842a2bed1568000c9727fc35d4683db349e506\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 19 14:59:59 2009 +0100\n\n    [boilerplate] Missing static on pdf user data key.\n\n boilerplate/cairo-boilerplate-pdf.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 2da906f4764d5fe7cbb08ec238b01e2a03696899\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Fri Jun 19 18:44:23 2009 +0300\n\n    [script] Include unistd.h if we're twiddling file descriptors.\n    \n    Including sys/mman.h doesn't pull in unistd.h on Solaris 9 so\n    we have to include it explicitly.\n\n util/cairo-script/cairo-script-operators.c |    7 ++++++-\n 1 file changed, 6 insertions(+), 1 deletion(-)\n\ncommit 1b6dbcbbebf18d6239fcc618f3389e9c0fc981f3\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Fri Jun 19 18:39:53 2009 +0300\n\n    [trace] Compile without fontconfig.\n    \n    Use CAIRO_HAS_FC_FONT to decide whether to export\n    cairo_ft_font_face_create_for_pattern() or not.\n\n util/cairo-trace/trace.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit d9b5a98a78b712a2ad64408fa47ba6aa34e29f1f\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Fri Jun 19 18:34:34 2009 +0300\n\n    [build] Require fontconfig >= 2.2.95 if we're using it at all.\n    \n    We require at least fontconfig 2.2.95 when we're using\n    fontconfig because we depend on the FcResultOutOfMemory\n    error code introduced in that version.\n\n configure.ac |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit 84e587bbfad6586e41fac86c4d19005418115ac5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 19 14:41:39 2009 +0100\n\n    [trace] Prevent a child process from writing to the same file\n    \n    After opening a specific file or fd for ourselves, reset the\n    CAIRO_TRACE_FD to point to an invalid fd in order to prevent any child\n    processes (who inherit our environment) from attempting to trace cairo\n    calls. If we allow them to continue, then the two traces will intermix\n    and be unreplayable.\n\n util/cairo-trace/trace.c |    7 +++++++\n 1 file changed, 7 insertions(+)\n\ncommit 18edea36ba6604e4cbdbda1ed56e6117b5768d94\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 19 14:14:32 2009 +0100\n\n    [perf] Report line of error during trace\n    \n    Query the number of new lines processed so far and report that on hitting\n    an error.\n\n perf/cairo-perf-trace.c |    8 ++++++--\n 1 file changed, 6 insertions(+), 2 deletions(-)\n\ncommit 55721d380d5a75a9448f522f9ad48cd18a6c2f65\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 19 14:13:34 2009 +0100\n\n    [script] Report line number\n    \n    Count the number of newlines processed in the trace and provide an API for\n    the user to query.\n\n util/cairo-script/cairo-script-interpreter.c |    6 ++++++\n util/cairo-script/cairo-script-interpreter.h |    3 +++\n util/cairo-script/cairo-script-private.h     |    2 ++\n util/cairo-script/cairo-script-scanner.c     |   12 +++++++++---\n 4 files changed, 20 insertions(+), 3 deletions(-)\n\ncommit 030ef4ca0023166fcb82f0a0b1512eb31beb3385\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 19 11:56:14 2009 +0100\n\n    [trace] Change the threshold at which pixel data is immediately copied\n    \n    Embed the pixels for images less than 32*32 as this catches most icons\n    which are frequently uploaded, but is still an unlikely size for a\n    destination image surface.\n\n util/cairo-trace/trace.c |    5 ++++-\n 1 file changed, 4 insertions(+), 1 deletion(-)\n\ncommit d3330d7beba0e0d2543e40a0e0e4d81ea9a78b45\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 19 11:15:30 2009 +0100\n\n    [ft] Substitute twin if there are no fonts\n    \n    Fixes bug 22356 -- Spurious \"out of memory\" error on system without fonts\n    https://bugs.freedesktop.org/show_bug.cgi?id=22356\n    \n    If FcFontMatch() fails, then it means that there are no fonts available on\n    the system (or it may have been a malloc error, we have no way of telling).\n    Instead of report NO_MEMORY and disabling all drawing, one of the\n    rationales for including a builtin font was so that we could continue even\n    in the face of this error and show *something* to the user. (This being a\n    last resort (and especially important for demos!) and hopefully easier to\n    diagnose than no output at all.)\n\n src/cairo-font-face-twin.c |   75 ++++++++++++++++++++++++++++++++++----------\n src/cairo-ft-font.c        |    6 +++-\n src/cairoint.h             |    3 ++\n 3 files changed, 66 insertions(+), 18 deletions(-)\n\ncommit 6d8b353658da1ad973e3bda9e89799a7467d8182\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Fri Jun 19 02:37:19 2009 +0300\n\n    [spans] Squash a compiler warning when creating error objects.\n    \n    Handle the new CAIRO_STATUS_USER_FONT_NOT_IMPLEMENTED status code\n    in the switch/case of the ..._create_in_error() functions for\n    creating span renderers or scan converters.\n\n src/cairo-spans.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 7651227d3dfe4ebf40e95a72106957a9ec51dd3e\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Fri Jun 19 02:03:39 2009 +0300\n\n    Revert \"[test] Make the xlib-fallback use the image refs.\"\n    \n    This reverts commit 903b39c30448d62e2cbf9d075c5256a333bd5d8f.\n    \n    The xlib-fallback actually renders mostly via traps at the moment,\n    so staying with xlib refs is the right thing to do.\n\n boilerplate/cairo-boilerplate.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 729457b174cb19f4e0750486caed9582c5708930\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sat May 2 23:30:02 2009 +0300\n\n    [test] Add trap rendered ref images for fill-image.\n    \n    The fill code path for the xlib and fallback surfaces use trapezoids\n    rather than spans, so there's lots of differences due to antialising\n    differences at the edge of the fill.  This patch adds a ref image\n    for the xlib and test-fallback surfaces.\n\n test/fill-image.test-fallback.ref.png |  Bin 0 -> 1462 bytes\n test/fill-image.xlib.ref.png          |  Bin 0 -> 1462 bytes\n 2 files changed, 0 insertions(+), 0 deletions(-)\n\ncommit 8e7f667abb94262b63b4fd589f5ee06cb8974aaf\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sat May 2 19:09:27 2009 +0300\n\n    [test] Mark scale-offset tests as XFAIL for image, xlib-fallback.\n    \n    The scale-offset tests trigger a loss-of-precision bug when\n    converting double matrices from cairo to pixman format.\n    \n    http://lists.cairographics.org/archives/cairo/2008-November/015671.html\n\n test/Makefile.am            |    2 ++\n test/scale-offset-image.c   |    2 +-\n test/scale-offset-similar.c |    2 +-\n 3 files changed, 4 insertions(+), 2 deletions(-)\n\ncommit c12533b1358c9e5c1c3440efca4dc44ba2de9f6d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 18 17:46:14 2009 +0100\n\n    [pattern] Add _cairo_pattern_fini_snapshot\n    \n    Symmetric operation to _cairo_pattern_init_snapshot() this exists simply\n    to break the circular reference between the meta-surface and snapshot-cow.\n\n src/cairo-meta-surface.c |   24 ++++++++++++------------\n src/cairo-pattern.c      |   17 +++++++++++++++++\n src/cairoint.h           |    3 +++\n 3 files changed, 32 insertions(+), 12 deletions(-)\n\ncommit 2213c447373b600c1583b2edd24775c5c031231c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 18 17:14:53 2009 +0100\n\n    [svg] Break circular snapshot reference by explicit finish\n    \n    The svg backend snapshots the meta surface which because of snapshot-cow\n    creates a circular reference back to the creator. So in order to break the\n    circular reference when we have finished with the snapshot, we need to\n    call cairo_surface_finish() in addition to simply destroying the surface.\n\n src/cairo-svg-surface.c |    4 ++++\n 1 file changed, 4 insertions(+)\n\ncommit cd9eef1aad87558d3f2d47cfcfa2f5b9b254692c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 18 16:42:56 2009 +0100\n\n    [scaled-font] Check the MRU font before resolving the implementor\n    \n    This should hide most of the overhead of resolving a frequently used toy font.\n\n src/cairo-scaled-font.c |   23 +++++++++++++++--------\n 1 file changed, 15 insertions(+), 8 deletions(-)\n\ncommit 5ad64dfda26f97f243f13e9b766567a30fda67a9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 18 16:39:02 2009 +0100\n\n    [test] Add the sha1sum of the required fonts\n    \n    (Note, I think these are currently out-of-date... But it will serve as a\n    useful reminder to verify and update them in future.)\n\n test/README |    9 +++++----\n 1 file changed, 5 insertions(+), 4 deletions(-)\n\ncommit 3063f0f44c61869bc6bb07d46bf881f1558ac015\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 18 16:33:12 2009 +0100\n\n    [scaled-font-subset] Check for matching font-face implementors\n    \n    Catch toy and user fonts which may have different font-faces for their\n    implementation than the original ones they were created with.\n\n src/cairo-scaled-font-subsets.c |    6 ++++--\n 1 file changed, 4 insertions(+), 2 deletions(-)\n\ncommit 6e78c94615e407d72d4778d5558dc218e0402cbc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 18 16:30:41 2009 +0100\n\n    [test] Move calls to the getters from out of the innermost loops.\n    \n    Tidy the code slightly by removing excess and unsightly calls to\n    cairo_test_get_context() and cairo_get_scaled_font().\n\n test/show-glyphs-many.c |   19 ++++++++++++-------\n 1 file changed, 12 insertions(+), 7 deletions(-)\n\ncommit 3da32e35afa57533379c3de35459f23aef7c3d04\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 18 15:31:27 2009 +0100\n\n    [analysis] Restore nops for the analysis null surface\n    \n    Joonas reported that adding the extra routines to the null-surface as used\n    by the analysis surface broke user-fonts. So create a separate null\n    backend to be exported via the test-null surface.\n\n src/cairo-analysis-surface.c |   57 ++-------------\n src/test-null-surface.c      |  157 +++++++++++++++++++++++++++++++++++++++++-\n 2 files changed, 161 insertions(+), 53 deletions(-)\n\ncommit c0e01d9cd71bd958e1b31a03cea4c08a1bdf4926\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 18 14:32:53 2009 +0100\n\n    [xlib] Improve GC caching efficacy\n    \n    Shrink the overall size of the per-screen GC cache, but allow multiple GCs\n    per depth, as it quite common to need up to two temporary GCs along some\n    drawing paths. Decrease the number of GCs we obtain in total by returning\n    clean (i.e. a GC without a clip set) back to the screen pool after use.\n    Compensate for the increased number of put/get by performing the query\n    using atomic operations where available. So overall we see a dramatic\n    reduction on the numbers of XCreateGC and XFreeGC, of even greater benefit\n    for RENDER-less servers.\n\n src/cairo-xlib-private.h |   11 +--\n src/cairo-xlib-screen.c  |  200 +++++++++++++++++++++++++++++++++++-----------\n src/cairo-xlib-surface.c |   58 +++++++++-----\n 3 files changed, 197 insertions(+), 72 deletions(-)\n\ncommit 7f238f542441cc5912d14e5c6f9c49ffd0b83fad\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Thu Jun 18 17:13:13 2009 -0400\n\n    Use the scanline rasterizer in the win32 backend.\n    \n    Brings http://people.mozilla.com/~jmuizelaar/world-map.html from 8fps to 13fps\n    in Vista on a Mac Mini\n\n src/cairo-win32-surface.c |  146 ++++++++++++++++++++++++++++++++++++++++++++-\n 1 file changed, 144 insertions(+), 2 deletions(-)\n\ncommit d066154e62d6b4ecad15e0eef431aa2f4a56fecb\nAuthor: Jeff Muizelaar <jeff@infidigm.net>\nDate:   Tue Jun 16 15:55:53 2009 -0400\n\n    Factor out _cairo_image_surface_span_render_row()\n    \n    This allows other backends use the same function for rendering rows.\n    More specifically, I intend to use this with the win32-backend.\n\n src/cairo-image-surface.c |   36 +++++++++++++++++++++++-------------\n src/cairoint.h            |    6 ++++++\n 2 files changed, 29 insertions(+), 13 deletions(-)\n\ncommit fd142d0a6e21c492624ca8bc5019d89b0d7c5457\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Thu Jun 18 16:14:50 2009 +0100\n\n    [shave] Robuster usage of the test shell built-in.\n    \n    Solaris 9 confuses shave, resulting in an empty variable.\n    This patch papers over the resulting build failure from\n    the test shell built-in being called with an empty argument\n    which was unquoted.\n\n build/shave.in |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 9ecee571c12e4d1645d9db2929280c9b35b1aad4\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Thu Jun 18 16:09:31 2009 +0100\n\n    [test/build] Don't test Freetype font stuff without Fontconfig.\n    \n    Most Freetype hitting tests require Fontconfig to find\n    them some fonts.\n\n test/Makefile.am |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 742b1ad4b069653a99fc6bd4510f2b6abb6abf95\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun May 24 23:41:28 2009 +0100\n\n    [test] Fix checking of the fenv.h include.\n    \n    This adds a configure check for fenv.h and makes\n    invalid-matrix.c check for it with HAVE_FENV_H instead\n    of HAVE_FEDISABLEEXCEPT -- turns out Solaris doesn't\n    have fedisableexcept(), but it does have feclearexcept().\n    \n    The same issue appears on OSX and was fixed in\n    ab86662ab499e1f29c0f8c4248771e730c281e3f. This patch\n    adds some configure magic.\n\n build/configure.ac.system |    2 +-\n test/invalid-matrix.c     |    4 ++--\n 2 files changed, 3 insertions(+), 3 deletions(-)\n\ncommit 75f1d11d93236b19d06515b8ed2baf612b0767ab\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun May 24 21:28:04 2009 +0300\n\n    [test] Fallback to HUGE_VAL in place of INFINITY in invalid-matrix.c.\n    \n    GCC 3.4.3 on OpenSolaris does not recognise INFINITY.  Use HUGE_VAL\n    instead for every compiler instead of just MSVC.\n\n test/invalid-matrix.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit d1994d1ac292cbc896cffd24094ddfa5f2b1e8a9\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun May 24 23:46:13 2009 +0300\n\n    [test/any2ppm] Daemonize without BSD's daemon().\n    \n    Solaris libc doesn't provide daemon() so implement\n    any2ppm daemon's detaching without it.\n\n test/Makefile.am |    2 +-\n test/any2ppm.c   |   62 +++++++++++++++++++++++++++++++++++++++++++++++++-----\n 2 files changed, 58 insertions(+), 6 deletions(-)\n\ncommit aafff0b9528952fbbe9d04a70bf8c76ee701743f\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun May 24 23:50:03 2009 +0300\n\n    [boilerplate] Check for connect() in libsocket.\n    \n    Solaris requires -lsocket to be able to talk to\n    the any2ppm daemon over unix domain sockets.\n\n boilerplate/Makefile.am   |    2 ++\n build/configure.ac.system |    4 ++++\n 2 files changed, 6 insertions(+)\n\ncommit c4c06931690226e12622a957bbb6d652134f78b0\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun May 24 16:14:33 2009 +0300\n\n    [test] Make test constructors without perl.\n    \n    Remove the dependency on perl when building the test suite\n    by replacing the script which makes cairo-test-constructors.c\n    with a C program.\n\n test/.gitignore                      |    1 +\n test/Makefile.am                     |    9 +-\n test/Makefile.win32                  |    7 +-\n test/make-cairo-test-constructors.c  |  153 ++++++++++++++++++++++++++++++++++\n test/make-cairo-test-constructors.pl |   18 ----\n 5 files changed, 165 insertions(+), 23 deletions(-)\n\ncommit cdd27a8d4cc3486867cff4ce81bb4e064eb74d58\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun May 24 16:19:31 2009 +0300\n\n    [test] Never use gcc __attribute__ magic for constructors.\n    \n    The configure test for __attribute__((constructor)) succeeds when\n    compiling with Sun Studio 12 on OpenSolaris but the attribute\n    is just ignored and has no actual effect.  This causes the test\n    suite to not run any tests at all.  With this patch we revert to\n    always using make-cairo-test-constructors.pl.\n\n build/configure.ac.system |   10 ----------\n test/Makefile.am          |    7 ++-----\n test/cairo-test-private.h |    2 --\n test/cairo-test-runner.c  |    2 --\n test/cairo-test.h         |   14 --------------\n 5 files changed, 2 insertions(+), 33 deletions(-)\n\ncommit 46eb56a99f72b364e3eabe46f9b2995ed0696bd3\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Thu Jun 18 16:42:53 2009 +0300\n\n    [cairo-surface] Handle the all clipped out case for regions.\n    \n    Explicitly handle a region clip which represents that the\n    entire surface is clipped out by passing in a temporary\n    empty region to the backend set_clip_region() method.\n    Previously the passed in region may have been NULL even\n    when clip->all_clipped = TRUE.\n    \n    Fixes a bug tickled by the clip-all test case which was\n    brought to light by 394e139213e8f6692115c4c24818bfeb5e6d456a.\n\n src/cairo-surface.c |   34 +++++++++++++++++++++++++++++++---\n 1 file changed, 31 insertions(+), 3 deletions(-)\n\ncommit 002264d572841f06930869a6c87fa2c987346dd6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jun 17 17:15:26 2009 +0100\n\n    [clip] Missing {} (coding style)\n    \n    Carl spotted that I'd slipped in a little CODING_STYLE violation.\n\n src/cairo-clip.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit bc87074185592eae367b6c091241957b94202fda\nAuthor: Nis Martensen <nis.martensen@web.de>\nDate:   Tue Jun 16 23:27:20 2009 +0200\n\n    [path] Fix missing implicit move-to\n    \n    When cairo_curve_to happens to start a new subpath (e.g., after a call\n    to cairo_new_sub_path()), it also needs to update the last_move_point.\n    Otherwise the new current point after a close_path() will be at an\n    unexpected position.\n    \n    Therefore, call _cairo_path_fixed_move_to() explicitly.\n\n AUTHORS                |    1 +\n src/cairo-path-fixed.c |    6 +++---\n 2 files changed, 4 insertions(+), 3 deletions(-)\n\ncommit 3c5e57e694d1a8a0a48a66e0d61d8257c23a780e\nAuthor: Nis Martensen <nis.martensen@web.de>\nDate:   Tue Jun 16 23:38:50 2009 +0200\n\n    [test] Verify current point position after subpath closure\n    \n    Make sure cairo_close_path always takes the current point where it\n    should be.\n\n test/Makefile.am                      |    1 +\n test/Makefile.sources                 |    1 +\n test/close-path-current-point.c       |   95 +++++++++++++++++++++++++++++++++\n test/close-path-current-point.ref.png |  Bin 0 -> 1916 bytes\n 4 files changed, 97 insertions(+)\n\ncommit 394e139213e8f6692115c4c24818bfeb5e6d456a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jun 17 14:46:53 2009 +0100\n\n    [clip] During _clip() limit the extracted traps to the current clip extents\n    \n    By applying a tight _cairo_traps_limit() we can reduce the amount of work\n    we need to do when tessellating the path and extracting the trapezoids.\n\n src/cairo-clip.c |   39 +++++++++++++++++++++++++++++++++++----\n 1 file changed, 35 insertions(+), 4 deletions(-)\n\ncommit 650b85ec7721fb1302284e3ca4b7f4b72358abed\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jun 17 14:19:19 2009 +0100\n\n    [clip] Avoid copying region within  _cairo_clip_intersect_region()\n    \n    Within _cairo_clip_intersect_region() we can simply assign the freshly\n    extracted traps-region if we previously had no region set.\n\n src/cairo-clip.c |   12 +++---------\n 1 file changed, 3 insertions(+), 9 deletions(-)\n\ncommit 4bc89e224f74f24272c97dec93d70f0c4dd1963c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jun 16 15:13:46 2009 +0100\n\n    [NEWS] Add release notes from 1.8.8\n\n NEWS |   69 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-\n 1 file changed, 68 insertions(+), 1 deletion(-)\n\ncommit 116c93cb7fe8ad55457c53b4652e8d3117581158\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jun 16 11:36:36 2009 +0100\n\n    [cairo] Remove instance of 'return free()'\n    \n    Gah! This is a GCC-ism, so therefore it has to go.\n\n src/cairo.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit 22587f57bd5d1b4440d936cd4655a7e8fcebdf36\nAuthor: Vladimir Vukicevic <vladimir@pobox.com>\nDate:   Sun Jun 14 20:43:05 2009 +0100\n\n    Import Qt backend by Mozilla\n    \n    Written by Vladimir Vukicevic to enable integration with Qt embedded\n    devices, this backend allows cairo code to target QPainter, and use\n    it as a source for other cairo backends.\n    \n    This imports the sources from mozilla-central:\n    http://mxr.mozilla.org/mozilla-central/find?text=&kind=text&string=cairo-qpainter\n    renames them from cairo-qpainter to cairo-qt, and integrates the patch\n    by Oleg Romashin:\n    https://bugs.freedesktop.org/attachment.cgi?id=18953\n    \n    And then attempts to restore 'make check' to full functionality.\n    \n    However:\n     - C++ does not play well with the PLT symbol hiding, and leaks into the\n       global namespace. 'make check' fails at check-plt.sh\n    \n     - Qt embeds a GUI into QApplication which it requires to construct any\n       QPainter drawable, i.e. used by the boilerplate to create a cairo-qt\n       surface, and this leaks fonts (cairo-ft-fonts no less) causing assertion\n       failures that all cairo objects are accounted for upon destruction.\n    \n    [Updated by Chris Wilson]\n    Acked-by: Jeff Muizelaar <jeff@infidigm.net>\n    Acked-by: Carl Worth <cworth@cworth.org>\n\n boilerplate/Makefile.sources               |    3 +\n boilerplate/Makefile.win32.features        |   10 +\n boilerplate/cairo-boilerplate-qt-private.h |   60 +\n boilerplate/cairo-boilerplate-qt.cpp       |   90 ++\n boilerplate/cairo-boilerplate.c            |   23 +\n boilerplate/cairo-boilerplate.h            |    3 +\n build/Makefile.win32.features              |    1 +\n build/Makefile.win32.features-h            |    3 +\n build/configure.ac.features                |    1 +\n configure.ac                               |   11 +\n perf/cairo-perf-trace.c                    |    1 +\n perf/cairo-perf.c                          |    3 +-\n src/Makefile.am                            |    2 +-\n src/Makefile.sources                       |    3 +\n src/Makefile.win32.features                |   14 +\n src/cairo-debug.c                          |   42 +\n src/cairo-qt-surface.cpp                   | 1876 ++++++++++++++++++++++++++++\n src/cairo-qt.h                             |   89 ++\n src/cairo-xlib-surface.c                   |    6 +\n src/cairo.h                                |    4 +-\n src/check-def.sh                           |    7 +-\n src/check-preprocessor-syntax.sh           |    3 +-\n 22 files changed, 2247 insertions(+), 8 deletions(-)\n\ncommit 7d3881114add18d5934073d0b04755d343ea38c6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jun 15 15:13:43 2009 +0100\n\n    [perf] Report errors during replays\n\n perf/cairo-perf-trace.c |   11 ++++++++++-\n 1 file changed, 10 insertions(+), 1 deletion(-)\n\ncommit 061e0477e9a894241806eeacbde2f3770b751f34\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jun 15 15:10:50 2009 +0100\n\n    [perf] Report iteration count\n    \n    Show number of discard results by showing the number of statistically\n    valid samples out of total population count.\n\n perf/cairo-perf-trace.c |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit bab8af62e772844f08a244d99f705e318af3f58c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jun 15 15:01:34 2009 +0100\n\n    [region] Add PLT entry for cairo_region_create_rectangles()\n\n src/cairo-region.c |    5 +++--\n 1 file changed, 3 insertions(+), 2 deletions(-)\n\ncommit 6da9c410d4696ebba0fb563a858f1625bf3b1f9e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jun 15 12:14:51 2009 +0100\n\n    Missing header file for cairo-test-null-surface.\n\n src/test-null-surface.h |   46 ++++++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 46 insertions(+)\n\ncommit e5727e20f52eb0308a8ad1c44a6eb4c7c65d7ff0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jun 15 11:58:58 2009 +0100\n\n    Expose _cairo_null_surface_create() via a test surface\n    \n    Using a null surface is a convenient method to measure the overhead of the\n    performance testing framework, so export it although as a test-surface so\n    that it will only be available in development builds and not pollute\n    distributed libraries.\n\n .../cairo-boilerplate-test-surfaces-private.h      |   10 ++++\n boilerplate/cairo-boilerplate-test-surfaces.c      |   16 ++++++\n boilerplate/cairo-boilerplate.c                    |    9 ++++\n perf/cairo-perf-trace.c                            |    6 +--\n src/Makefile.sources                               |    2 +\n src/cairo-analysis-surface.c                       |   56 ++++++++++++++++++--\n src/test-null-surface.c                            |   48 +++++++++++++++++\n test/cairo-test.c                                  |   14 +++--\n util/cairo-trace/trace.c                           |   26 +++++++++\n 9 files changed, 175 insertions(+), 12 deletions(-)\n\ncommit f2057061c67236a79c8bb69b84e44e151109629a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jun 14 09:10:08 2009 +0100\n\n    [trace] Add sticky bit to (system-wide) trace output dir\n    \n    Need to allow user programs to dump their traces into the common output\n    directory, when using /etc/ld.so.preload to capture traces for the entire\n    desktop.\n\n util/cairo-trace/Makefile.am |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit 3fe50a77ea21bcddb701a8640b5ecad9f6f5ab01\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 13 22:27:17 2009 +0100\n\n    [configure] Rephrase warning message for disabling core features.\n    \n    \"strictly recommended\" is an odd phrase and though the stern warning is\n    appropriate as replacing a system library with a more limited version is\n    likely to cause mayhem, we are but mere servants and should be reserved in\n    our parlance.\n\n build/configure.ac.features |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit 5d57aeaa23566739ba01a0fac1c3b90ce27b28cd\nAuthor: S\u00f8ren Sandmann Pedersen <sandmann@redhat.com>\nDate:   Tue May 26 17:53:37 2009 -0400\n\n    Reinstate cairo_region_create_rectangles()\n    \n    cairo_region_union_rectangle() is linear in the number of rectangles\n    in the region. There is no way to make it significantly faster without\n    losing the ability to return errors synchronously, so a\n    cairo_region_create_rectangles() is needed to avoid a large\n    performance regression.\n\n src/cairo-region.c |   44 ++++++++++++++++++++++++++++++++++++++++++++\n src/cairo-traps.c  |   47 ++++++++++++++++++++++++++++-------------------\n src/cairo.h        |    4 ++++\n src/cairoint.h     |    1 +\n 4 files changed, 77 insertions(+), 19 deletions(-)\n\ncommit 216a2e24c7375e48677ce30f9fe8fb3d8bbdd10d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 13 21:40:05 2009 +0100\n\n    [test] Minor tweak to cairo-test-trace\n    \n    Cleanse the code of a couple of redundant pointer manipulations.\n\n test/cairo-test-trace.c |   16 +++++++++-------\n 1 file changed, 9 insertions(+), 7 deletions(-)\n\ncommit 2ab4245c866bcefb755a33f7eaa6ef1277f82df1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 13 21:33:09 2009 +0100\n\n    [test] Need SOURCE when copying image data\n    \n    As cairo-test-trace does not clear the image data before reuse, using\n    the default OVER operator will cause differing results for each process\n    when inadvertently alpha blending into the shared memory region. As we\n    essentially want to just copy the source pixels, be explicit and set the\n    SOURCE operator.\n\n test/cairo-test-trace.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit e003d665fe45905606a792e4a783f65fc7e84550\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 13 19:18:11 2009 +0100\n\n    [test] Disable compilation of cairo-test-trace without shm_open()\n    \n    Remember to only add cairo-test-trace to the list of EXTRA_PROGRAM so long\n    as we can actually compile it.\n\n test/Makefile.am |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit c092136fe9e5fee71dfe02f945fe5676f43b2d05\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 13 18:59:17 2009 +0100\n\n    [configure] Check for shm_open()\n    \n    As needed for cairo-test-trace.\n\n build/configure.ac.system |    8 ++++++++\n test/Makefile.am          |    4 +++-\n 2 files changed, 11 insertions(+), 1 deletion(-)\n\ncommit f298dd92ca0b789a3d2b591753c992e1673b2d87\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 13 18:49:16 2009 +0100\n\n    [test] Remove dlmalloc\n    \n    cairo-test-trace's shared memory allocation pattern is much simpler than\n    anticipated as it allocates a bunch of images and then frees them all,\n    and so only needs a simple linear allocator.\n\n test/Makefile.am        |    1 -\n test/cairo-test-trace.c |   62 +-\n test/dlmalloc.c         | 5099 -----------------------------------------------\n 3 files changed, 11 insertions(+), 5151 deletions(-)\n\ncommit 37f32f29518bdc1428c7ec137f212313e377486c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 13 18:31:35 2009 +0100\n\n    [util] Disable default build of font-view\n    \n    It's only a demonstration utility after a all and we do not need to incur\n    the cost of relinking it everytime we modify the main library.\n\n util/Makefile.am |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 0eca1b17b14057ef88ae2df500679e62ffb50118\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 13 17:16:20 2009 +0100\n\n    [surface] Give ownership of the snapshot to the snapshotter.\n    \n    Previously the reference to the newly created snapshot was owned by the\n    containing pattern. The consequence of this was that when the pattern was\n    destroyed the snapshot was cleaned up which prevent reuse of the snapshot\n    across multiple pages. Transferring ownership upon attachment of the\n    snapshot to the target means that the snapshot stays in existence until\n    the target itself is destroyed or modified *and* the containing pattern\n    is consumed. Obvious in hindsight.\n\n src/cairo-surface.c |   15 ++++++++++++++-\n 1 file changed, 14 insertions(+), 1 deletion(-)\n\ncommit a1b3392e60b6b4ff4b650f4d48d56568c1851245\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 13 16:37:43 2009 +0100\n\n    [surface] Mark cairo_surface_show_page() with begin-modification\n    \n    cairo_surface_show_page() clears the surface after presentation, so we\n    need to discard the snapshots here.\n\n src/cairo-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 1798bdd322e0d25147195198bf0c5e9506c61a15\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sat Jun 13 22:47:41 2009 +0930\n\n    Fix PDF pattern embedding\n    \n    The PDF snapshot cow patch was reusing a previously emitted surface\n    pattern if the surface unique id matched the current surface. This\n    resulted in incorrect output as the new pattern may have a different\n    pattern matrix.\n    \n    This patch fixes the PDF backend to always emit a new pattern but\n    re-use previously emitted image or metasurface XObjects.\n\n src/cairo-pdf-surface-private.h |   21 +-\n src/cairo-pdf-surface.c         |  532 ++++++++++++++++++++++++++-------------\n 2 files changed, 372 insertions(+), 181 deletions(-)\n\ncommit f115c5479ead934774fea99d74d780e2bb1681c4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 13 15:49:15 2009 +0100\n\n    [trace] Strip absolute path off name when profiling\n    \n    Carl spotted this last night, but I misinterpreted it as an old problem\n    caused by the application changing its working directory before its first\n    cairo call - thus causing cairo-trace to attempt to open a file in the new\n    directory. Instead the problem was attempting to trace an executable with\n    an absolute path, where we just tagged it with a .lzma extentsion and\n    attempted to pipe the output there. Obviously this fails for the user\n    profiling system binaries. So use basename to strip the leading path.\n\n util/cairo-trace/cairo-trace.in |    5 +++--\n 1 file changed, 3 insertions(+), 2 deletions(-)\n\ncommit c52eed6680dd13f6bc65dc4a26b6c8eab5a94a54\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 13 15:42:43 2009 +0100\n\n    [trace] Handle wrapping python\n    \n    python lazily loads libcairo.so and so it is not available via RTLD_NEXT,\n    and we need to dlopen cairo ourselves. Similarly the linker is not able to\n    resolve any naked function references and so we need to ensure that all of\n    our own calls into the library are wrapped with DLCALL.\n\n util/cairo-trace/trace.c |  145 ++++++++++++++++++++++++++--------------------\n 1 file changed, 83 insertions(+), 62 deletions(-)\n\ncommit 606790a86083d31fa50ed5e0cf621eca56c16e33\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 13 14:07:22 2009 +0100\n\n    [script] Disable compilation of examples\n    \n    Now that cairo-perf-trace exists and is a far superior replay tool, use\n    EXTRA_PROGRAM for the original replay tools.\n\n util/cairo-script/Makefile.am |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 31b7652e1fa2ab2bd9e9df7f5517b7d678faf6aa\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 13 12:19:51 2009 +0100\n\n    [test] Never, ever, blame a crashing test on external factors.\n\n test/cairo-test-runner.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 3dde883b779b81b95f420039c02b51b029311f78\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 13 10:13:20 2009 +0100\n\n    [test] Code review after sleep\n    \n    Review cairo-test-trace.c and rewrite parts to ease understanding and fix\n    various bugs - such as failure to notice the slaves crashing and not\n    releasing our shared memory after an interrupt.\n\n test/cairo-test-trace.c |  400 ++++++++++++++++++++++++++++-------------------\n 1 file changed, 236 insertions(+), 164 deletions(-)\n\ncommit 1f542965f0310aed493651b8ddc1e98a4192b977\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 13 08:24:22 2009 +0100\n\n    [perf] Mention cairo-perf-compare-backends in the README\n\n perf/README |   16 ++++++++++++++++\n 1 file changed, 16 insertions(+)\n\ncommit 3b6e4018c69f88135f8d937724acf90adb003bad\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 12 22:19:56 2009 +0100\n\n    [test] Add cairo-test-trace\n    \n    The basic premise is that we feed the trace to multiple backends in\n    parallel and compare the output at the end of each context (based on\n    the premise that contexts demarcate expose events, or their logical\n    equivalents) with that of the image[1] backend. Each backend is\n    executed in a separate process, for robustness, with the image data\n    residing in shared memory and synchronising over a socket.\n    \n    [1] Should be reference implementation, currently the image backend is\n        considered to be the reference for all other backends.\n\n test/Makefile.am        |   16 +-\n test/cairo-test-trace.c | 1225 ++++++++++++\n test/dlmalloc.c         | 5099 +++++++++++++++++++++++++++++++++++++++++++++++\n 3 files changed, 6339 insertions(+), 1 deletion(-)\n\ncommit a41e1275d28317c88e29b7f142cfc835673c01f5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 12 12:32:51 2009 +0100\n\n    [boilerplate] Make array of targets const.\n    \n    Protect the boilerplate targets from unexpected modifications.\n\n boilerplate/cairo-boilerplate.c |    8 ++++----\n boilerplate/cairo-boilerplate.h |    4 ++--\n perf/cairo-perf-trace.c         |    6 +++---\n perf/cairo-perf.c               |    4 ++--\n perf/cairo-perf.h               |    4 ++--\n test/cairo-test.h               |    2 +-\n 6 files changed, 14 insertions(+), 14 deletions(-)\n\ncommit 6aebde6598c629d667b06e20111106832d139c4d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 12 12:25:22 2009 +0100\n\n    [boilerplate] Export cairo_boilerplate_get_image_target()\n    \n    A routine to scan the compiled list of targets and return the entry\n    corresponding to the image backend.\n\n boilerplate/cairo-boilerplate.c |   17 +++++++++++++++++\n boilerplate/cairo-boilerplate.h |    3 +++\n 2 files changed, 20 insertions(+)\n\ncommit d008167b9bcd6a24199740183bbfcabcfdccdd63\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Fri Jun 12 12:08:22 2009 -0700\n\n    Makefile: Fix two typos preventing doc-publish from working\n    \n    It seems that everything up to this point in release-publish\n    worked fine, so with these fixes, hopefully the next run of\n    make release-publish will work without any snags.\n\n build/Makefile.am.releasing |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 98eb84cfbbf2cfdb0153c8e924099cef016a412a\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Fri Jun 12 12:07:59 2009 -0700\n\n    Increment version to 1.9.3 after the 1.9.2 snapshot.\n\n cairo-version.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit e9b9d2a7c17ca4b2bc2991fdc4893aed850578db\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Thu Jun 11 15:28:59 2009 -0700\n\n    Update version to 1.9.2\n    \n    In preparation for the (long overdue) 1.9.2 snapshot today.\n\n cairo-version.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 8ac8c5b428d11b11ba9fb55264cd9091368f6acb\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Fri Jun 12 11:49:52 2009 -0700\n\n    NEWS: Fix date and name of 1.9.2 snapshot\n    \n    It's a snapshot, not a release, and the broken REFERENCE_IMAGE list\n    derailed me from finishing yesterday.\n\n NEWS |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 3f474555dd00b8585ae3db848cf46984d77bd16e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 12 11:19:50 2009 +0100\n\n    [test] Add jp2.jp2 to EXTRA_DIST\n    \n    Required by test/mime-data and so triggering failures during distcheck as\n    it was not packaged.\n\n test/Makefile.am |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 7f114b781f5c530d57530e5f76402e41cdabac6b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 12 11:15:16 2009 +0100\n\n    [doc] Workaround read-only tree during make distcheck\n    \n    This looks to be an ugly necessity to work-around the nasty issue that\n    we currently gtkdoc expect to be run inside the source tree. I'm sure\n    Behdad will be able to resolve this much more elegantly than this quick\n    and fragile attempt.\n\n build/Makefile.am.gtk-doc   |   11 ++++++-----\n build/configure.ac.features |    2 +-\n doc/public/Makefile.am      |    5 +++--\n 3 files changed, 10 insertions(+), 8 deletions(-)\n\ncommit 1498c9c333d7579231ac44a91f00f0a49360702d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 12 07:38:00 2009 +0100\n\n    [script] Also mmap backing storage for the pattern descriptions\n    \n    These can be reasonably large and persist for long times due to the\n    font holdover caches, so manually swap them out to save space on tiny\n    swapless machines.\n\n util/cairo-script/cairo-script-operators.c |   14 +++++++++++++-\n 1 file changed, 13 insertions(+), 1 deletion(-)\n\ncommit 80ba06803b50cc0f76039939f25372cbbe2e8d81\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 12 08:03:12 2009 +0100\n\n    [Makefile] Update list of reference images.\n\n test/Makefile.am | 1432 +++++++++++++++++++++++++++++++-----------------------\n 1 file changed, 818 insertions(+), 614 deletions(-)\n\ncommit fb21a0da8730823ff092f8e298af3d5b4e8c90e4\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Thu Jun 11 15:28:02 2009 -0700\n\n    Update CLEANFILES for 'make distcheck'\n    \n    This is a standard part of the release ritual.\n\n test/Makefile.am |    7 ++++---\n 1 file changed, 4 insertions(+), 3 deletions(-)\n\ncommit a4f023ef2eb041fecba5f3fd2d5a1594975ca211\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Thu Jun 11 14:51:14 2009 -0700\n\n    NEWS: Update date for snapshot planned for today.\n\n NEWS |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 82139b42919be1acf6bade733bb2ff489e50812d\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Thu Jun 11 14:51:10 2009 -0700\n\n    NEWS: Explain bovine polaroids a bit more.\n    \n    It's a fun joke, but the COW snapshots feature is important enough\n    that we should actually tell users what it is.\n\n NEWS |   11 +++++++++--\n 1 file changed, 9 insertions(+), 2 deletions(-)\n\ncommit 4d5f66d5b1f243e58d43dc89568be9240262fd5c\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Thu Jun 11 14:42:11 2009 -0700\n\n    NEWS: Cleanup in preparation for 1.9.2 snapshot\n    \n    Mostly just wrapping to a reasonable line length, and some minor\n    wording changes.\n\n NEWS |   71 ++++++++++++++++++++++++++++++++++++++++++------------------------\n 1 file changed, 45 insertions(+), 26 deletions(-)\n\ncommit 19630f4b73a4fdfb9855ececd6614493e68d3b95\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Wed Jun 10 17:39:48 2009 -0700\n\n    Make the warning about the need to --enable-gtk-doc more explicit.\n    \n    I must have read it three times and kept thinking, \"but I *did*\n    just install gtk-doc\", before I finally understood what it was\n    trying to tell me.\n\n build/Makefile.am.gtk-doc |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 3aaea453b0f0880d6c8825be21e67821732d1635\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 11 22:36:01 2009 +0100\n\n    [script] Store fonts inside mmaped files.\n    \n    As an aide to tiny swapless systems write the rarely used bytes that\n    define type42 fonts into a deleted file and mmap them back into our\n    address space.\n\n build/configure.ac.system                  |    3 +\n util/cairo-script/cairo-script-operators.c |   91 +++++++++++++++++++++++-----\n 2 files changed, 78 insertions(+), 16 deletions(-)\n\ncommit 6167f27adfd530bdf091a0e7a3e0141d5db66f00\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 11 22:33:00 2009 +0100\n\n    [script] Fix memleak of duplicated strings from files\n    \n    csi_string_new() duplicated the bytes which was not what was desired, so\n    implement a csi_string_new_for_bytes() to take ownership and prevent the\n    leak that was occuring, for example, every time we create a new font face.\n\n util/cairo-script/cairo-script-file.c    |    5 +++--\n util/cairo-script/cairo-script-objects.c |   27 +++++++++++++++++++++++++++\n util/cairo-script/cairo-script-private.h |    6 ++++++\n 3 files changed, 36 insertions(+), 2 deletions(-)\n\ncommit 13b56c42bfdb9ad36f9b1bd22f83d7ef3a074ddc\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Thu Jun 11 17:32:23 2009 -0400\n\n    Fix compilation on OS X when compiling for 64 bit\n    \n    OS X doesn't support ATSUI in 64 bit so don't include the cairo ATSUI\n    API in that case.\n\n src/cairo-quartz-font.c |    3 ++-\n src/cairo-quartz.h      |    2 ++\n 2 files changed, 4 insertions(+), 1 deletion(-)\n\ncommit 9e3019ef987f8d3ad424c13ffae5a15b08beb327\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 11 22:27:18 2009 +0100\n\n    [perf] Add libcairoperf.la to DEPENDENCIES\n    \n    It seems adding the explicit dependencies to encourage it to rebuild\n    components from other parts of the source tree removed the automagic\n    dependency of libcairoperf.la. So add it to the list. Maybe this is not\n    the correct solution, but it works again for now.\n\n perf/Makefile.am |    6 ++++--\n 1 file changed, 4 insertions(+), 2 deletions(-)\n\ncommit 55cbf525479cde8251cc9199f9db89e510d6a9c1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 11 15:40:27 2009 +0100\n\n    [perf] Fix -i getopt parsing.\n    \n    Gah, I presumed that the ':' separated options that required arguments\n    from stand-alone options. I was wrong. The ':' indicates that the\n    preceding option takes an argument. So add it back to -i.\n\n perf/cairo-perf-trace.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 614bfdc0846856653a742b035e70d009b0a716cc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 11 15:35:05 2009 +0100\n\n    [xcb] Trivial compile fix.\n    \n    Update show_glyphs() interface.\n\n src/cairo-xcb-surface.c |   11 ++++++-----\n 1 file changed, 6 insertions(+), 5 deletions(-)\n\ncommit f7dbdf1fd1d7cc14491a9419c316b078247e145e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jun 8 09:39:20 2009 +0100\n\n    [script] Hide pixman-ops when copying pixels\n    \n    Seeing unexpected time inside pixman composite is quite disturbing when\n    trying to track down the apparent slowness in some benchmarks. Remove one\n    source of this artefact by simply memcpy'ing pixel data when trivial.\n\n util/cairo-script/cairo-script-operators.c |   70 ++++++++++++++++++++++------\n 1 file changed, 55 insertions(+), 15 deletions(-)\n\ncommit ecee5663bf900ab97d2bb7ec41ade838f167e1cd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jun 8 01:05:28 2009 +0100\n\n    [perf] Fixup compare-backends to work with just a single test.\n\n perf/cairo-perf-compare-backends.c |   17 ++++++-----------\n 1 file changed, 6 insertions(+), 11 deletions(-)\n\ncommit 42c0aee1d9ff5e0182c41ed505a2b0f56e564cbb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 11 12:58:05 2009 +0100\n\n    [perf] Add a -x to exclude traces from a benchmark.\n    \n    Read names of traces to exclude from a file specified using -x on the\n    commandline, i.e.\n    $ ./cairo-perf-trace -x cairo-traces/tiny.exclude\n    \n    This is a convenient method for me to exclude certain traces for\n    particular machines. For example tiny cannot run\n    firefox-36-20090609.trace as that has a greater working set than the\n    available RAM on tiny.\n\n perf/cairo-perf-trace.c |  135 ++++++++++++++++++++++++++++++++++++++++++++---\n perf/cairo-perf.h       |    2 +\n 2 files changed, 130 insertions(+), 7 deletions(-)\n\ncommit b40ce402ada8d57c5093715be530df08459d1654\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 11 09:16:29 2009 +0100\n\n    [NEWS] Add more notes\n\n NEWS |   50 ++++++++++++++++++++++++++++++++++++++++++++------\n 1 file changed, 44 insertions(+), 6 deletions(-)\n\ncommit 610da573e91810c53305b6bfe02eb7b714e3d08e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jun 10 12:59:36 2009 +0100\n\n    [win32-font] Non-fatal error from GetGlyphOutlineW(GGO_METRICS)\n    \n    If GetGlyphOutlineW(GGO_METRICS) fails to retreive the metrics for the\n    specified glyph it returns GDI_ERROR. Like ft, do not interpret this as a\n    fatal error but just mark the glyph as empty.\n    \n    Fixes http://bugs.freedesktop.org/show_bug.cgi?id=20255\n    Bug 20255 -- cairo_scaled_font_glyph_extents breaks with invalid glyph id\n\n src/cairo-win32-font.c |   10 ++--------\n 1 file changed, 2 insertions(+), 8 deletions(-)\n\ncommit 81b5dc42b0e754d602506a8ccd231df9afd71593\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jun 10 08:49:39 2009 +0100\n\n    [perf] Expand the section on cairo-perf-trace in the README\n    \n    Promote the information on how to use cairo-perf-trace and include it\n    immediately after the details on cairo-perf. This should make it much\n    clearer on how to replay the traces, and the difference between the two\n    benchmarks.\n\n perf/README |   37 ++++++++++++++++++++++++++++++++++---\n 1 file changed, 34 insertions(+), 3 deletions(-)\n\ncommit ec92e633edd377747155b60aa225b266c38bc498\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jun 10 08:34:57 2009 +0100\n\n    [perf] Couple cairo-perf-traces into make perf\n    \n    Rather than complicating cairo-perf to extend it to perform both micro-\n    and macro-benchmarks, simply run the two binaries in succession during\n    make perf.\n    \n    For bonus points, consider whether we should hook cairo-perf-trace into\n    cairo-perf-diff.\n\n perf/Makefile.am |    5 +++--\n 1 file changed, 3 insertions(+), 2 deletions(-)\n\ncommit 0db946cdd9fe601a060b62c5df7df3022ea5e2d6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jun 9 16:19:36 2009 +0100\n\n    [perf] Add explicit dependences for the local libraries\n    \n    Update the build rules and add the dependences for the libraries built in\n    other parts of cairo.\n\n perf/Makefile.am |   11 +++++++++++\n 1 file changed, 11 insertions(+)\n\ncommit 844c809698635cf44658fcbfb5da6976890185b9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jun 9 12:45:53 2009 +0100\n\n    [boilerplate] Print out known targets on error.\n    \n    Improve the 'Cannot find target ...' error message for an incorrect\n    CAIRO_TEST_TARGET by actually listing the targets that have been compiled\n    into the test suite.\n\n boilerplate/cairo-boilerplate.c |   15 ++++++++++++++-\n 1 file changed, 14 insertions(+), 1 deletion(-)\n\ncommit ac563715506b911f142dd0e4460a6effee45119d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jun 8 23:58:56 2009 +0100\n\n    [test] Exercise overlapping glyphs\n    \n    Quite an expensive test that converts an image into a distorted array of\n    glyphs, using a perspective transformation taking the intensity of the\n    pixel as depth. This generates a pretty picture and many overlapping\n    glyphs.\n\n test/Makefile.am         |    1 +\n test/Makefile.sources    |    1 +\n test/mask-glyphs.c       |  175 ++++++++++++++++++++++++++++++++++++++++++++++\n test/mask-glyphs.ref.png |  Bin 0 -> 1189352 bytes\n 4 files changed, 177 insertions(+)\n\ncommit 015df191ba947e714285145c3a4ead198ba0d07e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jun 8 17:40:16 2009 +0100\n\n    [trace] Prevent overflowing the operand stack when recreating objects\n    \n    Objects like cairo_scaled_font_t may return a reference to a previously\n    defined scaled-font instead of creating a new token each time. This caused\n    cairo-trace to overflow its operand stack by pushing a new instance of the\n    old token every time. Modify the tracer such that a font token can only\n    appear once on the stack -- for font-faces we remove the old operand and\n    for scaled-fonts we simply pop, chosen to reflect expected usage.\n\n util/cairo-trace/trace.c |   89 ++++++++++++++++++++++++++++++++--------------\n 1 file changed, 63 insertions(+), 26 deletions(-)\n\ncommit 09492288b33c36093e50d39e4e7e632ab659a0e2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jun 8 17:38:14 2009 +0100\n\n    [trace] Option to re-enable mark-dirty\n    \n    Applications such as swfdec have a strictly correct use of mark-dirty and\n    so we need an option to re-enable mark-dirty tracing in conjunction with\n    --profile.\n\n util/cairo-trace/cairo-trace.in |    5 +++++\n 1 file changed, 5 insertions(+)\n\ncommit 39bac6edddb8913d07fb25f14f088967ca846a78\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jun 8 11:52:56 2009 +0100\n\n    [perf] Mention cairo-perf-trace early on in the README\n\n perf/README |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 34ccaeae2d3cf1b5bdd8b97581d6e70324494356\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jun 8 00:12:28 2009 +0100\n\n    [perf] Continuously update the summary for traces\n\n perf/cairo-perf-trace.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 055e9b0eb650bec6ae8297e5a36f1cac22c43d56\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jun 7 23:35:57 2009 +0100\n\n    [test] Cache resolved scaled-font\n    \n    The intention is to stress test the solid pattern caches, so we can cheat\n    and avoid repeatedly resolving the toy font.\n\n test/solid-pattern-cache-stress.c |    6 ++++++\n 1 file changed, 6 insertions(+)\n\ncommit 25c37509396a89deb644cbd6ada99137ba9d3095\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jun 7 19:23:04 2009 +0100\n\n    [scaled-font] Report the original-font-face\n    \n    When queried with cairo_scaled_font_get_font_face() return the original\n    font-face which matches the one supplied by the user, rather than the\n    implementation derived face.\n    \n    Fixes test/font-face-get-type.\n\n src/cairo-scaled-font.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 6d693f6bd7c629372cfb6c284ca98dc04619bfe9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jun 7 18:59:36 2009 +0100\n\n    [ft] Support font_face->get_implementation\n    \n    The lazy resolution of patterns was defeating the scaled_font cache as\n    ft-fonts that resolved to the same unscaled font were being given different\n    font-faces upon creation. We can keep the lazy resolution by simply asking\n    the ft backend to create a fully resolved ft-font-face when we need to\n    create a scaled-font. This font is then keyed by the resolved font-face\n    and so will match all future lazily resolved identical patterns.\n\n src/cairo-ft-font.c       |  117 ++++++++++++++++++++-------------------------\n src/cairo-scaled-font.c   |   20 +++++---\n src/cairo-toy-font-face.c |   41 +++++++++-------\n src/cairoint.h            |    9 ++--\n 4 files changed, 96 insertions(+), 91 deletions(-)\n\ncommit a29426f4bffc0a3f5bb349a2ba44203394339ae8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jun 7 17:24:40 2009 +0100\n\n    [ft] Assert that we create an unscaled font for the resolved pattern\n\n src/cairo-ft-font.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 7d8a0a1cdd62112ccdae2a80bb55ec9cec99b978\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jun 7 17:01:57 2009 +0100\n\n    [cairo] Keep a small stash of cairo contexts\n    \n    A cairo context is meant to be extremely cheap to create such that it can\n    be used in transient expose events. Thus these are allocated reasonably\n    frequently and show up malloc profiles.\n\n src/cairo.c |   51 +++++++++++++++++++++++++++++++++++++++++++++++++--\n 1 file changed, 49 insertions(+), 2 deletions(-)\n\ncommit f08fe5b550d53c93b73c6295f8a85a8dcd4a1f4a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jun 7 15:55:20 2009 +0100\n\n    [trace] Redirect stdout to /dev/null when compressing\n    \n    Otherwise we mix in stdout in with the trace and prevent replay.\n\n util/cairo-trace/cairo-trace.in |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 750c1b5b48dcd33ba4a4d5290c50f564bf45bc58\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 6 21:45:18 2009 +0100\n\n    [configure] Check for FcInit()\n\n configure.ac      |    2 +-\n test/cairo-test.c |    2 ++\n 2 files changed, 3 insertions(+), 1 deletion(-)\n\ncommit f7a562a590493904cf10b4fb9af3b42fb3f8a3a2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 6 14:58:46 2009 +0100\n\n    [configure] Don't attempt to build GTK+ utilities on system without GTK+\n\n configure.ac     |    3 ++-\n util/Makefile.am |    5 ++++-\n 2 files changed, 6 insertions(+), 2 deletions(-)\n\ncommit 6a5957475139a7c80a6bb55fb63927e5ec8866f6\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Sun Jun 7 10:43:43 2009 +0000\n\n    [gl] consolidate the pixman format to GL format/type/internalformat code.\n    \n    This means that draw_image gets all the love that the pattern texture code\n    does.  Not that I'm sure it still needs to exist.\n\n src/cairo-gl-surface.c |  321 ++++++++++++++++++++++++------------------------\n 1 file changed, 158 insertions(+), 163 deletions(-)\n\ncommit cb1e5674cd7a61a2d96bd4ae8895b26686571e78\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Sun Jun 7 10:09:28 2009 +0000\n\n    [gl] Add support for more 16-bit image formats.\n    \n    Fixes test-fallback16-surface-source\n\n src/cairo-gl-surface.c |   54 ++++++++++++++++++++++++++++++++++++++++++------\n 1 file changed, 48 insertions(+), 6 deletions(-)\n\ncommit 7a95b2745ae619f6ca4631f3cdb03e12203126f3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 6 21:36:08 2009 +0100\n\n    [boilerplate] Minor typo in win32-printing\n\n boilerplate/cairo-boilerplate.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 16eb160c7794ad34c17c5b12ec586d956baf9831\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 6 20:09:15 2009 +0100\n\n    [script] Enable compilation without fontconfig\n    \n    Some insane people actually try compiling cairo with freetype and without\n    fontconfig...\n\n util/cairo-script/cairo-script-operators.c |    6 ++++++\n 1 file changed, 6 insertions(+)\n\ncommit d753ba96aba4dbbcbd0da1823be8824ba233f079\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 5 17:59:38 2009 +0100\n\n    [script] Manage used entries within hash tables\n    \n    Apply the patch from Karl Tomlinson,\n    https://bugs.freedesktop.org/attachment.cgi?id=19802, to repack the hash\n    table if the number of free slots falls too low.\n\n util/cairo-script/cairo-script-hash.c    |  109 ++++++++++++++++++++----------\n util/cairo-script/cairo-script-private.h |    1 +\n 2 files changed, 73 insertions(+), 37 deletions(-)\n\ncommit 4ccfd474a36f482adcab49a8d38742121817b47e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 6 13:32:21 2009 +0100\n\n    [perf] Switch to using clock_gettime()\n    \n    Try using clock_gettime() for a high resolution stable time source in\n    preference to the potentially unstable TSC.\n\n build/configure.ac.system |    9 ++++--\n perf/cairo-perf-posix.c   |   72 +++++++++++++++++++++++++++++++++------------\n 2 files changed, 60 insertions(+), 21 deletions(-)\n\ncommit 867c88ae90e4e69a556c032fa67d94a292f5d817\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 6 12:59:39 2009 +0100\n\n    [script] Add a finish method to the interpreter\n    \n    When using fonts circular references are established between the holdover\n    font caches and the interpreter which need manual intervention via\n    cairo_script_interpreter_finish() to break.\n\n perf/cairo-perf-trace.c                      |    3 +-\n util/cairo-script/cairo-script-interpreter.c |   51 ++++++++++++++++++++------\n util/cairo-script/cairo-script-interpreter.h |    3 ++\n util/cairo-script/cairo-script-objects.c     |   35 ++++++++++++------\n util/cairo-script/cairo-script-private.h     |    3 ++\n 5 files changed, 70 insertions(+), 25 deletions(-)\n\ncommit 098822d7ee7f14096dd269c1bc96e39da126622c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jun 6 10:35:19 2009 +0100\n\n    [script] Fix erroneous error return when rendering type3 glyphs\n    \n    Only return a USER_FONT_ERROR if an error occurs whilst rendering the\n    glyph!\n\n util/cairo-script/cairo-script-operators.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 24e51dd2ee04884e1f6f9f527b6675ad5f883ee2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 5 18:34:29 2009 +0100\n\n    [atomic] Hide compiler warnings\n    \n    Add uint variants of _cairo_atomic_int_*() to hide the compiler warnings\n    about sign conversions.\n\n src/cairo-atomic-private.h |    3 +++\n src/cairo-surface.c        |    6 +++---\n 2 files changed, 6 insertions(+), 3 deletions(-)\n\ncommit 4ae5e2d44555a7219eb76ee187a8f588606c112f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 5 18:29:40 2009 +0100\n\n    [atomic] Provide mutex-based ptr cmpxchg\n    \n    To handle those CPUs where we do not have an atomic cmpxchg.\n\n src/cairo-atomic-private.h |    3 +++\n src/cairo-atomic.c         |   13 +++++++++++++\n 2 files changed, 16 insertions(+)\n\ncommit a1d0a06b6275cac3974be84919993e187394fe43\nAuthor: Thomas Jaeger <ThJaeger@gmail.com>\nDate:   Thu Feb 19 12:02:41 2009 -0500\n\n    xlib, xcb: Hand off EXTEND_PAD/EXTEND_REFLECT to Render\n    \n    Most drivers and the X server used to have incorrect RepeatPad/RepeatReflect\n    implementations, forcing cairo to fall back to client-side software rendering,\n    which is painfully slow due to pixmaps being transfered over the wire.  These\n    issues are mostly fixed in the drivers (with the exception of radeonhd, whose\n    developers didn't respond) and the RepeatPad software fallback is implemented\n    correctly as of pixman-0.15.0, so this patch will hand off composite operations\n    with EXTEND_PAD/EXTEND_REFLECT source patterns to XRender.\n    \n    There is no way to detect whether the X server or the drivers use a\n    broken Render implementation, we make a guess based on the server\n    version:  It's probably safe to assume that 1.7 X servers will use\n    fixed drivers and a recent enough version of pixman.\n\n AUTHORS                          |    1 +\n src/cairo-xcb-surface.c          |   15 +++++++++++++--\n src/cairo-xlib-display.c         |   15 +++++++++++----\n src/cairo-xlib-private.h         |    1 +\n src/cairo-xlib-surface-private.h |    1 +\n src/cairo-xlib-surface.c         |   21 ++++++++++++++++++---\n 6 files changed, 45 insertions(+), 9 deletions(-)\n\ncommit 60aefd0d634c531353c92b77b36424b142efeb93\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jun 5 07:30:13 2009 +0100\n\n    [configure] Bump pixman dependency.\n    \n    Reflect was only fixed in the 0.15 series, so require at least that\n    version of pixman so we can that advantage of that and drop our\n    workaround.\n\n configure.ac |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 9d7a7e76b8bccc2517950976bb8557cd7b955a11\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 4 22:19:31 2009 +0100\n\n    [scaled-font] Close race from 16d128\n    \n    Whilst waiting for the fontmap lock on destruction another thread may not\n    only have resurrected the font but also destroyed it acquired the lock\n    first and inserted into the holdovers before the first thread resumes. So\n    check that the font is not already in the holdovers array before\n    inserting.\n\n src/cairo-scaled-font-private.h |    6 +++---\n src/cairo-scaled-font.c         |   33 +++++++++++++++++++++++----------\n 2 files changed, 26 insertions(+), 13 deletions(-)\n\ncommit f4d9a4482fa1bfa37783ca139e3716c8d8649f32\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 4 14:13:06 2009 +0100\n\n    [pattern] Generalise the freed pattern pool\n    \n    Also cache recently freed surface and gradient patterns. With thanks to\n    Jonathan Morton for the inspiration and initial pointer pool code for\n    pixman.\n\n src/cairo-atomic-private.h     |    1 +\n src/cairo-mutex-list-private.h |    1 -\n src/cairo-pattern.c            |  170 ++++++++++++++++++++++++++--------------\n 3 files changed, 112 insertions(+), 60 deletions(-)\n\ncommit 132f44dce1884c9beed8c5e6588140ee8fa9cfbe\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 4 14:12:20 2009 +0100\n\n    valgrindify init/fini routines\n    \n    Annotate object init/fini routines to detect use-after-free for\n    on-stack/embedded objects.\n\n src/cairo-debug.c        |    2 --\n src/cairo-freelist.c     |    7 -------\n src/cairo-gstate.c       |    7 +++++++\n src/cairo-path-fixed.c   |   10 +++-------\n src/cairo-pattern.c      |   49 +++++++++++++++++++++++++++++++++++++++++++++-\n src/cairo-pen.c          |    8 ++++++--\n src/cairo-polygon.c      |    4 ++++\n src/cairo-region.c       |    5 +++++\n src/cairo-stroke-style.c |    6 ++++++\n src/cairo-traps.c        |    4 ++++\n src/cairo.c              |    1 +\n src/cairoint.h           |    4 ++++\n 12 files changed, 88 insertions(+), 19 deletions(-)\n\ncommit e89828c5331579d0d4019b6339df09ba1e2aa32e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jun 3 21:52:02 2009 +0100\n\n    [freelist] valgrindify freed blocks\n    \n    Mark freed blocks as unaccessible upon free() and then as undefined\n    on alloc().\n\n src/cairo-freelist.c |   26 ++++++++++++++++++++++----\n 1 file changed, 22 insertions(+), 4 deletions(-)\n\ncommit 4e11d56f8e5f409ea2476315c9d67116b213b738\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 4 11:16:48 2009 +0100\n\n    [perf] Update trace summary after each iteration\n    \n    Running the macro-benchmarks takes so long, feedback is important.\n\n perf/cairo-perf-trace.c |   29 ++++++++++++++++++++++++++++-\n perf/cairo-perf.h       |    1 +\n 2 files changed, 29 insertions(+), 1 deletion(-)\n\ncommit 5c2e73e74cb9aef92fdd90a91df44b417a036ebd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jun 4 10:03:45 2009 +0100\n\n    [perf] Enable traces to be interrupted\n    \n    Waiting for a long running benchmark can be very annoying, especially if\n    you just want a rough-and-ready result. So hook into SIGINT and stop the\n    current benchmark (after the end of the iteration) on the first ^C. A\n    second ^C within the same iteration will kill the program as before.\n\n perf/cairo-perf-trace.c |   20 +++++++++++++++++++-\n 1 file changed, 19 insertions(+), 1 deletion(-)\n\ncommit 2eaced24475622e73fbf6e3307ab46e3fe37eaef\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jun 3 21:49:17 2009 +0100\n\n    [perf] Reconstruct interpreter for each run\n    \n    Destroy the interpreter after each run of a trace so that we collect any\n    left-over garbage.\n\n perf/cairo-perf-trace.c |   21 ++++++++++-----------\n 1 file changed, 10 insertions(+), 11 deletions(-)\n\ncommit 1b92ea250fdaef9add1a68bb8565847e6d56b023\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jun 3 20:28:49 2009 +0100\n\n    [ft] Don't call FT_Done_Face() on a face we do not own\n    \n    _font_map_release_face_lock_held() was being called unconditionally during\n    _cairo_ft_font_reset_static_data(). This presents two problems. The first\n    is that we call FT_Done_Face() on an object not owned by cairo, and the\n    second is that the bookkeeping is then incorrect which will trigger an\n    assert later.\n\n src/cairo-ft-font.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 8e5295979fe087fadeff0f56c036f9d002086996\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jun 3 20:17:59 2009 +0100\n\n    [pattern] Typo in document\n    \n    Remove extraneous markup from program-listing.\n    \n    https://bugs.freedesktop.org/show_bug.cgi?id=20441\n\n src/cairo-pattern.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit fa5d6c7afdb9b742ad653c65e8804e84f2964599\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jun 3 19:29:19 2009 +0100\n\n    [trace] Add a --profile mode\n    \n    To save typing when creating macro-benchmarks --profile disables\n    mark-dirty and caller-info and compresses the trace using LZMA. Not for\n    computers short on memory!\n\n perf/README                     |   11 +++++++++--\n util/cairo-trace/cairo-trace.in |   18 ++++++++++++++++++\n 2 files changed, 27 insertions(+), 2 deletions(-)\n\ncommit 9451f0b983665d13ad777bc8fd88507fb7a317b4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jun 3 13:26:52 2009 +0100\n\n    [perf] Drop ticks from trace benchmarks\n    \n    Don't report the tick values for the macro-benchmarks as these are so\n    large as to be meaningless.\n\n perf/cairo-perf-trace.c |   37 ++++++++++++++++++++-----------------\n 1 file changed, 20 insertions(+), 17 deletions(-)\n\ncommit c988dc3719e345f6e1db6b0d656077a6b253b26d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jun 3 10:51:23 2009 +0100\n\n    [cairo] Doc typo.\n    \n    Fix conflicting sentence as pointed out by\n    https://bugs.freedesktop.org/show_bug.cgi?id=20183\n\n src/cairo.c |    4 ----\n 1 file changed, 4 deletions(-)\n\ncommit 35d0dd00c9f21cc4fd392d4627756f8d5b53a11b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jun 3 10:49:16 2009 +0100\n\n    [image] Doc typo.\n    \n    Correct parameter reference as pointed out by\n    https://bugs.freedesktop.org/show_bug.cgi?id=20182\n\n src/cairo-image-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 58459ac6435a2889b90580ddf00e69107361f431\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jun 3 10:45:51 2009 +0100\n\n    [font-options] Doc typo\n    \n    Remove duplicate 'with' as pointed out by\n    https://bugs.freedesktop.org/show_bug.cgi?id=20180\n\n src/cairo-font-options.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 8d39dee8e2aea2200fec460e8540838ec29cae5f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jun 3 10:40:38 2009 +0100\n\n    [cairo] Update documentation for bug 20154\n    \n    Several typographical errors were pointed out in\n    https://bugs.freedesktop.org/show_bug.cgi?id=20154\n\n src/cairo.c |   17 ++++++++---------\n 1 file changed, 8 insertions(+), 9 deletions(-)\n\ncommit 73469e693c02e6a99a32f12ac333737b47408e5e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jun 3 09:51:52 2009 +0100\n\n    [cairo] Tweak error strings.\n    \n    Rewrite a few error strings so that they more closer match the\n    documentation. Where they differ, I believe I have chosen the more\n    informative combination of the two texts.\n\n src/cairo-misc.c |   12 ++++++------\n src/cairo.h      |    4 ++--\n 2 files changed, 8 insertions(+), 8 deletions(-)\n\ncommit ab86662ab499e1f29c0f8c4248771e730c281e3f\nAuthor: Andrew Lavin <aj.lavin@gmail.com>\nDate:   Fri May 22 16:36:40 2009 -0400\n\n    [test] Compile fix for invalid-matrix\n    \n    Fixed test compile error on OS X that caused fenv.h not to be included.\n\n test/invalid-matrix.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit eec547648439884a464eef832067a363cf1547e2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jun 3 08:57:15 2009 +0100\n\n    [perf] s/git/anongit/\n    \n    Third time lucky?\n\n perf/cairo-perf-trace.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit ce7e6339428703069f798dffcf23ec3e98cb554f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jun 2 21:54:44 2009 +0100\n\n    [perf] Warn if no traces were found\n\n perf/cairo-perf-trace.c |   28 ++++++++++++++++++++--------\n 1 file changed, 20 insertions(+), 8 deletions(-)\n\ncommit f0366f0f3263397181699bf6bf2ed3968ea66403\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jun 2 21:48:26 2009 +0100\n\n    [perf] Update to point to new toplevel cairo-traces repo\n\n perf/cairo-perf-trace.c |   12 ++++++------\n 1 file changed, 6 insertions(+), 6 deletions(-)\n\ncommit c9cd2f9ca101c25d04f52578d54be36ae646049e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jun 2 18:47:07 2009 +0100\n\n    [cairo] PLT symbols for cairo_set_source_rgb\n    \n    Added a private use in user-font, but forgot to add a hidden symbol.\n\n src/cairo.c    |    1 +\n src/cairoint.h |    1 +\n 2 files changed, 2 insertions(+)\n\ncommit 21550a753059b4f880f03ea96148befaa34a6426\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jun 2 18:08:45 2009 +0100\n\n    [user-font] Set the initial colour to white\n    \n    An issue occured when using subpixel antialiasing with user-fonts and\n    XRender - the glyphs were transparent, as demonstrated by the font-view\n    example.\n    \n    The problem lies in that enabling subpixel antialiasing triggers use of an\n    ARGB32 image surface for rendering the glyph, but the default colour is\n    black (so the only information is in the alpha-channel). Given an ARGB32\n    glyph XRender treats it as a per-channel mask, but since the R,G,B\n    channels were uniformly zero, the glyph is rendered as transparent.\n    \n    Fix this by setting the initial colour to white before rendering the image\n    surface for a user-font glyph, which generates the appropiate gray-level\n    mask by default.\n\n src/cairo-user-font.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit b5799e073e4e404aea277b7640eeee2120318823\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jun 2 18:07:31 2009 +0100\n\n    [xlib] Use bswap_32\n    \n    Byteswap the ARGB32 glyphs using bswap_32 instead of open-coding.\n\n src/cairo-xlib-surface.c |   30 +++++++++++-------------------\n 1 file changed, 11 insertions(+), 19 deletions(-)\n\ncommit 56e9765f82a64940b36a64688267fbe5d1c8919e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 2 14:25:04 2009 +0000\n\n    [util] Add font-view\n    \n    A C variant of Behdad's python example font viewer.\n\n util/Makefile.am |    5 ++\n util/font-view.c |  184 ++++++++++++++++++++++++++++++++++++++++++++++++++++++\n 2 files changed, 189 insertions(+)\n\ncommit d331dda48017667c15f95bf7d510bce2f38111de\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jun 2 15:41:19 2009 +0100\n\n    [perf] Missing ')' in output\n\n perf/cairo-perf-compare-backends.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit c9ddaf8e7f0006f308aab0b87cf0425b2690d914\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Sep 7 13:09:09 2008 +0930\n\n    PDF: Don't embed the same pattern more than once\n    \n    The PDF surface now keeps track of all the patterns it is embedding in\n    a hash table keyed by the unique_id returned by the\n    _cairo_surface_get_unique_id().\n\n src/cairo-pdf-surface-private.h |   13 +++-\n src/cairo-pdf-surface.c         |  134 ++++++++++++++++++++++++++++++---------\n 2 files changed, 115 insertions(+), 32 deletions(-)\n\ncommit f7613eeecea1218d353a183078fb77bc5cf4e72e\nAuthor: Paolo Bonzini <bonzini@gnu.org>\nDate:   Tue Nov 25 20:15:15 2008 +0100\n\n    Add more surface snapshots providers\n    \n    This patch adds more implementation of the snapshot method.  For\n    surface types where acquire_source_image is already making a copy\n    of the bits, doing another one as is the case for the fallback\n    implementation is a waste.\n\n src/cairo-glitz-surface.c  |   16 +++++++++++++++-\n src/cairo-quartz-surface.c |   19 ++++++++++++++++++-\n src/cairo-xcb-surface.c    |   17 ++++++++++++++++-\n src/cairo-xlib-surface.c   |   20 +++++++++++++++++++-\n 4 files changed, 68 insertions(+), 4 deletions(-)\n\ncommit cffb398f5a484000be458d04ef8f8bce3f6c7e3d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 26 21:07:07 2009 +0100\n\n    Add a generic cow-snapshotting framework\n    \n    Provide a mechanism for backends to attach and remove snapshots. This can\n    be used by backends to provide a cache for _cairo_surface_clone_similar(),\n    or by the meta-surfaces to only emit a single pattern for each unique\n    snapshot.\n    \n    In order to prevent stale data being returned upon a snapshot operation,\n    if the surface is modified (via the 5 high level operations, and on\n    notification of external modification) we break the association with any\n    current snapshot of the surface and thus preserve the current data for\n    their use.\n\n src/cairo-meta-surface.c     |    1 -\n src/cairo-surface-fallback.c |    2 +-\n src/cairo-surface-private.h  |    7 +-\n src/cairo-surface.c          |  272 ++++++++++++++++++++++++++++++++----------\n src/cairoint.h               |   12 ++\n test/mask.c                  |   12 +-\n test/trap-clip.c             |   12 +-\n 7 files changed, 249 insertions(+), 69 deletions(-)\n\ncommit 7ed050fd435f17d25c7b757b02cfe200f8779fc2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jun 2 13:08:25 2009 +0100\n\n    [perf] Benchmark traces\n    \n    Add a variant of cairo-perf that measures the time to replay traces.\n\n boilerplate/cairo-boilerplate-system.c |   15 +\n boilerplate/cairo-boilerplate-system.h |    4 +\n perf/.gitignore                        |    1 +\n perf/Makefile.am                       |   17 +\n perf/README                            |   31 ++\n perf/cairo-perf-compare-backends.c     |   10 +-\n perf/cairo-perf-trace.c                |  530 ++++++++++++++++++++++++++++++++\n 7 files changed, 605 insertions(+), 3 deletions(-)\n\ncommit 403f780b292762aa45056c2fb5a48bb806521173\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jun 2 09:16:16 2009 +0100\n\n    [perf] Add a verbose flag for summary output with raw\n    \n    Use 'cairo-perf -v -r' to have both the summary output along with the raw\n    values. This gives a progress report whilst benchmarking, very reassuring\n    with long running tests.\n\n perf/cairo-perf.c |   82 +++++++++++++++++++++++++++++++++--------------------\n perf/cairo-perf.h |    3 ++\n 2 files changed, 55 insertions(+), 30 deletions(-)\n\ncommit 70fd2bbce38fca65db6725c632ee591352dfe42c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jun 2 09:00:21 2009 +0100\n\n    [perf] Exclude similar testing by default\n    \n    There are synchronisation issues with similar surfaces (as only the\n    original target surface is synced) which interferes with making\n    performance comparisons. (There still maybe some value should you be aware\n    of the limitations...)\n\n perf/cairo-perf.c |    5 +++--\n 1 file changed, 3 insertions(+), 2 deletions(-)\n\ncommit bc49cb377c70c4c6926ca52e34094e99a4591f14\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat May 30 12:28:23 2009 +0100\n\n    [perf] Benchmark mixing different masks and sources\n\n perf/Makefile.am  |    1 +\n perf/cairo-perf.c |    1 +\n perf/cairo-perf.h |    1 +\n perf/mask.c       |  290 +++++++++++++++++++++++++++++++++++++++++++++++++++++\n 4 files changed, 293 insertions(+)\n\ncommit 4aca84ddb22bc178cbc9b132b9ce06af3f4b300b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 28 18:05:26 2009 +0100\n\n    [perf] Add a pure glyphs performance metric\n    \n    Use the new API Behdad exposed in 1.8 to precompute a glyph string using\n    Cairo and then benchmark cairo_show_glyphs(). This is then equivalent to\n    the text benchmark but without the extra step of converting to glyphs on\n    every call to cairo_show_text() i.e. it shows the underlying glyph\n    rendering performance.\n\n perf/Makefile.am  |    1 +\n perf/cairo-perf.c |    1 +\n perf/cairo-perf.h |    1 +\n perf/glyphs.c     |   97 +++++++++++++++++++++++++++++++++++++++++++++++++++++\n 4 files changed, 100 insertions(+)\n\ncommit 55f4e0e4e8c7df59bfc9e6ffea8daa065276e42f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat May 30 16:50:17 2009 +0100\n\n    [perf] Change seperators from '-' to '.'\n    \n    This allows the perf tests to use '-' in the name which is easier to read\n    and differentiates with using '_' to separate source and operators.\n\n perf/cairo-perf-compare-backends.c |   22 ++++++++++++----------\n perf/cairo-perf-cover.c            |   32 ++++++++++++++++----------------\n perf/cairo-perf-report.c           |   16 +++++++++++++---\n perf/cairo-perf.c                  |    8 ++++----\n perf/mosaic.c                      |    8 ++++----\n perf/pattern_create_radial.c       |    4 ++--\n perf/pythagoras-tree.c             |    2 +-\n perf/subimage_copy.c               |    4 ++--\n perf/unaligned-clip.c              |    2 +-\n perf/world-map.c                   |    4 ++--\n perf/zrusin.c                      |    4 ++--\n 11 files changed, 59 insertions(+), 47 deletions(-)\n\ncommit b7c03d4e400245fc2b2d748fe808a9724e61f22f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed May 27 16:31:51 2009 +0100\n\n    [ps] Trivial warning fix.\n\n src/cairo-ps-surface.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 99482b17a50a8ae52b7627bf624e358ed3623540\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed May 27 18:34:54 2009 +0100\n\n    [script] Improve caching of glyph advance\n    \n    The glyph advance cache was only enabled for glyph indices < 256,\n    causing a large number of misses for non-ASCII text. Improve this by\n    simply applying the modulus of the index to select the cache slot - which\n    may cause some glyph advances to be overwritten and re-queried, but\n    improves the hit rate.\n\n util/cairo-script/cairo-script-operators.c |   39 ++++++++++------------------\n 1 file changed, 14 insertions(+), 25 deletions(-)\n\ncommit 51193f1610c0f6893768e43e90a3395ec96c28fb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 28 14:16:58 2009 +0100\n\n    [pattern] Pass flags to _cairo_pattern_acquire_surface()\n    \n    Allow the caller to choose whether or not various conversions take place.\n    The first flag is used to disable the expansion of reflected patterns into a\n    repeating surface.\n\n src/cairo-directfb-surface.c |    1 +\n src/cairo-glitz-surface.c    |    1 +\n src/cairo-image-surface.c    |    3 +++\n src/cairo-pattern.c          |   13 +++++++++++--\n src/cairo-xcb-surface.c      |    4 ++++\n src/cairo-xlib-surface.c     |    5 +++++\n src/cairoint.h               |    6 ++++++\n 7 files changed, 31 insertions(+), 2 deletions(-)\n\ncommit 4ec451a2fa4050a60a81d01473d23ff2973f47e6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed May 27 17:35:54 2009 +0100\n\n    [scaled-font] Cache repeated glyphs during probing device_extents\n    \n    Maintain a local on-stack cache of recently queried glyphs to avoid\n    relatively expensive hash table queries.\n\n src/cairo-scaled-font.c |   35 +++++++++++++++++++++++------------\n 1 file changed, 23 insertions(+), 12 deletions(-)\n\ncommit ec22ae5b1d7e8ec364813f3b1c73f538018ecb57\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed May 27 11:11:06 2009 +0100\n\n    [scaled-font] Compare most recently used font directly\n    \n    Avoid the relatively expensive _cairo_scaled_font_init_key() operation\n    when checking against the most recently used font.\n\n src/cairo-scaled-font.c |   28 +++++++++++++++++++++++-----\n 1 file changed, 23 insertions(+), 5 deletions(-)\n\ncommit 16d128c15edf36a6e285fe4fbd6a828b64fd7f87\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed May 27 21:10:04 2009 +0100\n\n    [scaled-font] Lazily acquire the font_map_lock on font destruction.\n    \n    We can defer taking the cairo_scaled_font_map_lock until we drop the\n    last reference to the scaled font so long as we double check the reference\n    count after waiting for the lock and not making assumptions about\n    unreferenced fonts during construction. This is significant as even\n    acquiring the uncontended cairo_scaled_font_map_lock during\n    cairo_scaled_font_destroy() was showing up as a couple of percent on text\n    heavy profiles (e.g. gnome-terminal).\n\n src/cairo-scaled-font.c |   32 +++++++++++++++++---------------\n 1 file changed, 17 insertions(+), 15 deletions(-)\n\ncommit dc083ab30a5b781e205354c525ee054982364abd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed May 27 14:54:34 2009 +0100\n\n    [cairo] Track the MRU scaled font\n    \n    When observing applications two patterns emerge. The first is due to\n    Pango, which wraps each glyph run within a context save/restore. This\n    causes the scaled font to be evicted after every run and reloaded on the\n    next. This is caught by the MRU slot on the cairo_scaled_font_map and\n    prevents a relatively costly traversal of the hash table and holdovers.\n    \n    The second pattern is by applications that directly manage the rendering\n    of their own glyphs. The prime example of this is gnome-terminal/vte. Here\n    the application frequently alternates between a few scaled fonts - which\n    requires a hash table retrieval every time.\n    \n    By introducing a MRU slot on the gstate we are able to directly recover\n    the scaled font around 90% of the time.\n    \n    Of 110,000 set-scaled-fonts:\n      4,000 were setting the current font\n     96,000 were setting to the previous font\n      2,500 were recovered from the MRU on the cairo_scaled_font_map\n      7,500 needed a hash retrieval\n    which compares to ~106,000 hash lookups without the additional MRU slot on\n    the gstate.\n    \n    This translates to an elapsed time saving of ~5% when replaying a\n    gnome-terminal trace using the drm backend.\n\n src/cairo-gstate-private.h |    1 +\n src/cairo-gstate.c         |   18 ++++++++++++++----\n src/cairo.c                |    6 ++++++\n 3 files changed, 21 insertions(+), 4 deletions(-)\n\ncommit fda89c56ff484a8cd33cd780e8b9396d3538284d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed May 27 15:59:16 2009 +0100\n\n    Markup a few more functions as const/pure\n\n src/cairoint.h |   59 +++++++++++++++++++++++++++++---------------------------\n 1 file changed, 31 insertions(+), 28 deletions(-)\n\ncommit f59f44c140e5f60d336423e0585d2bb8a6c0ea01\nMerge: 2da78fd 4232719\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Tue Jun 2 00:37:19 2009 -0700\n\n    Merge commit 'origin/master' into gl\n    \n    Felt like pulling the latest stuff, since I branched back in February.\n    \n    Conflicts:\n    \tbuild/configure.ac.features\n    \tsrc/cairo.h\n    \tutil/cairo-script/csi-replay.c\n\ncommit 2da78fd4666faa27d037ae3625ca83353a6e7629\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Mon Jun 1 14:04:21 2009 -0700\n\n    [gl] Drop use of packed datatypes where it's disallowed.\n    \n    I had naively assumed that GL image specification let you do useful things\n    and describe the most common datatypes in graphics, since we do things that\n    way inside of the DRI drivers.  Silly me.  GL_BGR and GL_RGB can't do\n    GL_UNSIGNED_INT_8_8_8_8{,_REV}, so no specifying 24-depth 32-bpp data with\n    implicit alpha.  GL_BGR can't even do r5g6b5!\n    \n    This fixes 20 regressions in the test suite.\n\n src/cairo-gl-surface.c |   25 +++++++++++++------------\n 1 file changed, 13 insertions(+), 12 deletions(-)\n\ncommit 69a150b7d8115babf2c60d7c5f7ca340162dc098\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Mon Jun 1 13:36:32 2009 -0700\n\n    [gl] Initialize has_alpha in the image surface composite fastpath.\n    \n    Fixes bilevel-image, set-source, and zero-alpha.\n\n src/cairo-gl-surface.c |    4 ++++\n 1 file changed, 4 insertions(+)\n\ncommit 7ee0fee900bf30a7ca0497ab64199c9013f81cdd\nMerge: 882f1d5 d3a478b\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Mon Jun 1 10:45:36 2009 -0700\n\n    Merge branch 'gl' into gl-span-renderer\n    \n    Conflicts:\n    \tsrc/cairo-gl-surface.c\n\ncommit d3a478b6c0dca3884a68c5014185cad0a166801c\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Mon Jun 1 10:19:24 2009 -0700\n\n    [gl] Fix check-plt.sh for the GL surface.\n\n src/cairo-gl-surface.c |    7 +++++++\n 1 file changed, 7 insertions(+)\n\ncommit 1f7c393a6d63282a632a62264b99e67e26ecf38e\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Mon Jun 1 10:10:00 2009 -0700\n\n    [gl] Fix check-doc-syntax.sh for GL surface.\n\n src/cairo-gl-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 19bc0f2f1d75b1514b22d0bb737bad67ff8d1ee6\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Mon Jun 1 10:09:16 2009 -0700\n\n    [gl] Fix check-def.sh for GL surface.\n\n src/cairo-gl-surface.c |    2 +-\n src/cairo-gl.h         |    6 ------\n 2 files changed, 1 insertion(+), 7 deletions(-)\n\ncommit e05097c604c607d27b341cd33426001bd2d1f690\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed May 27 16:45:20 2009 +0100\n\n    [surface] Assign a unique id to the surface.\n    \n    Allocate an ever-increasing, non-zero, unique identifier to each surface.\n    True for the first 4-billion...\n\n src/cairo-pattern.c         |   11 ++++++++---\n src/cairo-surface-private.h |    2 ++\n src/cairo-surface.c         |   25 +++++++++++++++++++++++++\n 3 files changed, 35 insertions(+), 3 deletions(-)\n\ncommit 45835f623f5ddda6e3258361b9d6ab27860a9198\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 26 12:46:46 2009 +0100\n\n    [cache] Expose init/fini methods so that caches can be embedded.\n    \n    The structure is already exposed, so just expose the\n    constructors/destructors in order to enable caches to be embedded and\n    remove a superfluous malloc.\n\n src/cairo-cache-private.h |   27 +++++++++---\n src/cairo-cache.c         |  104 +++++++++++++++------------------------------\n src/cairo-scaled-font.c   |   35 +++++++--------\n src/cairo-types-private.h |   14 ------\n 4 files changed, 74 insertions(+), 106 deletions(-)\n\ncommit c3aac9cf49362b726a54a33a46bd8511a10f644f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 26 10:37:30 2009 +0100\n\n    [image] Eliminate trapezoid array allocation\n    \n    By simply iterating over the array cairo_trapezoid_t, converting each one\n    separately to a pixman_trapezoid_t and rasterizing each one individually\n    we can avoid the common heap allocation. pixman performs exactly the same\n    iteration internally so there is no efficiency loss.\n\n src/cairo-image-surface.c |   92 ++++++++++++++++++++++-----------------------\n 1 file changed, 45 insertions(+), 47 deletions(-)\n\ncommit 7b2bc441387abcf3967587f571dc5741d0a53938\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 26 10:41:53 2009 +0100\n\n    [surface-fallback] Tidy pattern handling.\n    \n    Make the treatment of replacing the NULL source pattern with WHITE\n    consistent. As it is a solid pattern, we can skip _cairo_pattern_fini()\n    and so make the code more readable, and consistent along the error paths.\n\n src/cairo-surface-fallback.c |   83 +++++++++++++++++-------------------------\n 1 file changed, 33 insertions(+), 50 deletions(-)\n\ncommit e83e113eae9e7cb3e09719bfc0ad68450faf3ecd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon May 25 23:25:38 2009 +0100\n\n    [surface] Speed up cairo_surface_get_mime_data().\n    \n    The number of mime-types attached to a surface is usually small,\n    typically zero. Therefore it is quicker to do a strcmp() against\n    each key in the private mime-data array than it is to intern the\n    string (i.e. compute a hash, search the hash table, and do a final\n    strcmp).\n\n src/cairo-array.c   |    8 --------\n src/cairo-surface.c |   33 ++++++++++++++++++---------------\n src/cairoint.h      |    6 ++++++\n 3 files changed, 24 insertions(+), 23 deletions(-)\n\ncommit 247e76b923d54f639e2ca50c8da945c15b691158\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 26 08:53:45 2009 +0100\n\n    [script] Speed up floating-point scanner\n    \n    Hard-code frequent exponents to reduce number of calls to pow().\n\n util/cairo-script/cairo-script-scanner.c |   45 ++++++++++++++++++++----------\n 1 file changed, 31 insertions(+), 14 deletions(-)\n\ncommit c5e85835b29c7654e1c28a90b2e587afba7b6f0f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 26 15:52:30 2009 +0100\n\n    [debug] Relax ASSERT_NOT_REACHED\n    \n    Need to actually handle random pixman image formats...\n    For the time being, ignore them.\n\n src/cairo-debug.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 4232719af968ed05636fe34f2ffe2520dc02d737\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Sat May 30 23:03:55 2009 -0400\n\n    [ft] Fix vertical advance metrics of bitmap fonts (#21985)\n\n src/cairo-ft-font.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 4314cae874dec2747df6be88859d7b6174eece31\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Wed May 27 17:56:05 2009 +0930\n\n    Fix typo in comment\n\n src/cairo-truetype-subset.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 7dbc2fe80a4fe0dcee4a293e47ab6edcefc24e18\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon May 25 20:36:34 2009 +0100\n\n    [script] Simplify _dictionary_name_equal\n    \n    Just a simple return TRUE since all necessary checking is performed by\n    _csi_hash_table_lookup().\n\n util/cairo-script/cairo-script-objects.c |    4 +---\n 1 file changed, 1 insertion(+), 3 deletions(-)\n\ncommit 0b5e92e66be94ce7cc9c31e911f23c4cb7ec77af\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon May 25 19:56:57 2009 +0100\n\n    [script] Check hash value between comparing keys\n\n util/cairo-script/cairo-script-hash.c |    7 +++++--\n 1 file changed, 5 insertions(+), 2 deletions(-)\n\ncommit a364f71194aa2ea92071662f156c9b2a4d9211b4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon May 25 21:25:27 2009 +0100\n\n    [trace] Set output location using pwd\n    \n    Record the current working directory and pass that along to cairo-trace so\n    that the trace output is local to the user and not the application. This\n    is vital if the application is called via a script that changes directory.\n\n util/cairo-trace/cairo-trace.in |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit a76e09ea656faa63fbfa159e8f52c9c9ec7d35c6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon May 25 21:22:43 2009 +0100\n\n    [trace] Missing newlines in error messages.\n\n util/cairo-trace/trace.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit b7f199fde25c960bf87302d5e868a7c2dffa4f5d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon May 25 12:40:35 2009 +0100\n\n    [pattern] Trim REPEAT source size when applicable.\n    \n    Some backends are quite constrained with surface sizes and so trigger\n    fallbacks when asked to clone large images. To avoid this we attempt\n    to trim ROIs (as these are often limited to the destination image, and\n    so can be accommodated by the hardware). This patch allows trimming\n    REPEAT sources both horizontally and vertically independently.\n\n src/cairo-pattern.c |   21 ++++++++++++++++++---\n 1 file changed, 18 insertions(+), 3 deletions(-)\n\ncommit e4efc80b8e89b05afc22d74f984f4ec9012bc39b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon May 25 21:15:22 2009 +0100\n\n    [build] Make valgrind support user-configurable\n    \n    As the number of places where we add valgrind client requests grows, it\n    becomes imperative that we should be able to disable them with a simple\n    configure time option.\n\n build/configure.ac.analysis |   37 ++++++++++++++++++++++---------------\n 1 file changed, 22 insertions(+), 15 deletions(-)\n\ncommit d840deb57b51236820dc8c320ecd7540973de873\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon May 25 22:11:22 2009 +0100\n\n    [in-fill] Fix typo in on-vertex test.\n    \n    Eeek! Comparing point->y against in_fill->x is a bad idea.\n\n src/cairo-path-in-fill.c |   10 +++++-----\n 1 file changed, 5 insertions(+), 5 deletions(-)\n\ncommit cfd484cd01a77b1f91e27daccfc5f240cf7c692d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon May 25 22:10:20 2009 +0100\n\n    [test] Change test semantics to match new in-fill definition\n    \n    The in-fill definition has changed to include queries on the edges and\n    vertices, so update the test case to match.\n\n test/in-fill-trapezoid.c |   77 ++++++++++++++++++++++++++++++++++------------\n 1 file changed, 57 insertions(+), 20 deletions(-)\n\ncommit b71b019fe50a9188ddbecd1945606da8ba3bad53\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Feb 27 16:32:21 2009 +0000\n\n    [in-fill] Treat on-edge queries as inside.\n    \n    Jeff Muizelaar noted that the treatment of edges differed with firefox's\n    canvas definition, which considers a point on any edge as inside. The\n    current implementation has a similar definition to that of flash, for\n    which the top and right edges are outside. Arguably, firefox has the more\n    intuitive definition here...\n\n src/cairo-path-in-fill.c |   21 ++++++++++++++++++++-\n 1 file changed, 20 insertions(+), 1 deletion(-)\n\ncommit efd0f0b2922d0801e4e0e8e75ddf9b9892a2f2e6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed May 20 18:49:28 2009 +0100\n\n    [xlib] Handle too-large images gracefully.\n    \n    Trigger a fallback to an image surface for massive patterns.\n\n src/cairo-xlib-surface.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 3c6838532a62c294e7f18b13b0b7f8da9a1a1e1e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed May 20 18:46:35 2009 +0100\n\n    [surface] Early return if the backend cannot clone an image\n    \n    If the backend cannot create a similar surface to hold the image, then\n    report back the failure before embarking upon an infinite recursion.\n    The UNSUPPORTED return should percolate up through the call stack and\n    trigger a fallback.\n\n src/cairo-surface.c |    6 +++++-\n 1 file changed, 5 insertions(+), 1 deletion(-)\n\ncommit bf2c7356d4c955fb770863874a0ea111e9ba02a4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri May 22 12:52:43 2009 +0100\n\n    [surface] Provide nil-surface for INVALID_SIZE\n    \n    So that we can faithfully report back failure if the user tries to create\n    a surface larger than the backend can support.\n\n src/cairo-surface.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 6717f0d748000416172057d0aab2471377456e27\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed May 20 17:35:19 2009 +0100\n\n    [win32] Wrap win32-font usage with CAIRO_HAS_WIN32_FONT\n    \n    Bug 19251: --enable-win32=yes and --enable-win32-font=no causes\n    compilation failure\n    [https://bugs.freedesktop.org/show_bug.cgi?id=19251]\n    \n    Wrap use of the win32 font backend within win32-printing-surface within\n    CAIRO_HAS_WIN32_FONT ifdefs to prevent compilation failure if the user\n    explicitly disables the win32 font backend.\n\n src/cairo-win32-printing-surface.c |    4 ++++\n 1 file changed, 4 insertions(+)\n\ncommit c7d2b0de830f4c653fbb5016c4efdc5f0e5af0eb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed May 20 17:34:56 2009 +0100\n\n    [win32] Typo\n    \n    Correct function name in error string.\n\n src/cairo-win32-printing-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 87b764908a38cbb4159ac76d8b7d1d08a24b838e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 19 15:53:55 2009 +0100\n\n    [gl] Add EGL target\n    \n    Split the GLX context from the GL surface to enable use of an alternative\n    EGL interface.\n\n boilerplate/Makefile.win32.features |   20 ++\n boilerplate/cairo-boilerplate-gl.c  |    2 +-\n build/Makefile.win32.features       |    2 +\n build/Makefile.win32.features-h     |    6 +\n build/configure.ac.features         |    3 +\n configure.ac                        |   30 ++-\n src/Makefile.sources                |    4 +-\n src/Makefile.win32.features         |   28 +++\n src/cairo-egl-context.c             |  181 ++++++++++++++++++\n src/cairo-gl-private.h              |   88 +++++++++\n src/cairo-gl-surface.c              |  191 ++++++++-----------\n src/cairo-gl.h                      |   41 ++--\n src/cairo-glx-context.c             |  136 +++++++++++++\n test/.gitignore                     |    2 +\n test/Makefile.am                    |   10 +\n test/egl-flowers.c                  |  358 +++++++++++++++++++++++++++++++++++\n test/glx-flowers.c                  |  256 +++++++++++++++++++++++++\n util/cairo-script/.gitignore        |    2 +\n util/cairo-script/Makefile.am       |   15 ++\n util/cairo-script/csi-egl.c         |  263 +++++++++++++++++++++++++\n util/cairo-script/csi-glx.c         |  150 +++++++++++++++\n util/cairo-script/csi-replay.c      |   61 ++++++\n 22 files changed, 1723 insertions(+), 126 deletions(-)\n\ncommit 6e87e354e42d1a758a252533407e6e1829638544\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun May 17 18:14:28 2009 +0930\n\n    Correct the comment for the index_to_ucs4 font backend function\n\n src/cairoint.h |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit 2a34992cccfd77c2acf30fe851311f16137ba32f\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun May 17 18:12:39 2009 +0930\n\n    Ensure win32 font index_to_ucs4() sets ucs4 to -1 if lookup fails\n\n src/cairo-win32-font.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 4c8e5485a10478c19e8a6cb48595473f5bb8ee8a\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun May 17 18:05:42 2009 +0930\n\n    Fix win32 build breakage\n    \n    that was caused by c25992479aca481d326f72665ebdcf0904273eac\n\n src/cairo-win32-private.h |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 31596cf2b298054bbd3e340ae77a3388eadc0d8b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri May 15 17:40:26 2009 +0100\n\n    [debug] Check image contents using memcheck.\n    \n    As an aide to tracking down the source of uninitialised reads, run\n    VALGRIND_CHECK_MEM_IS_DEFINED() over the contents of image surfaces at the\n    boundary between backends, e.g. upon setting a glyph image or acquiring\n    a source image.\n\n src/cairo-debug.c       |   42 ++++++++++++++++++++++++++++++++++++++++++\n src/cairo-ft-font.c     |    2 ++\n src/cairo-pattern.c     |    2 ++\n src/cairo-png.c         |    2 ++\n src/cairo-scaled-font.c |    3 +++\n src/cairo-surface.c     |   32 +++++++++++++++++++++++---------\n src/cairoint.h          |   11 +++++++++++\n 7 files changed, 85 insertions(+), 9 deletions(-)\n\ncommit 791a6fa399894e735d522781b15b7f18c3ecd4d1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri May 15 16:57:49 2009 +0100\n\n    [memfault] Update macros to avoid namescape collision with memcheck\n    \n    Basing the macro names of the memfault skin lead to a namespace\n    collision with memcheck. After updating the headers, update cairo's usage\n    to match.\n\n src/cairo-malloc-private.h |    2 +-\n test/cairo-test.c          |   62 ++++++++++++++++++++++----------------------\n 2 files changed, 32 insertions(+), 32 deletions(-)\n\ncommit c897f36a6b09f3591d858142e3236f256f0bd6a2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri May 15 20:37:52 2009 +0100\n\n    [test] Stress the ft from-face cache\n    \n    Create a set of font faces using the same FT_Face to stress test the\n    handling of from-face fonts within the backend cache.\n\n test/ft-font-create-for-ft-face.c |  109 ++++++++++++++++++++++++++++++++++---\n 1 file changed, 102 insertions(+), 7 deletions(-)\n\ncommit 477df1f5504a507d0c5960aa7e21375284a6f99c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri May 15 10:48:56 2009 +0100\n\n    [test] Clear expected floating point exceptions\n    \n    test/invalid-matrix deliberately feeds garbage into the API to test our\n    error detection. This causes FPE to be raised during the course of the\n    test - so they are deliberately disable for the duration. However, the\n    exceptions were not being cleared and so the FPE could be triggered on\n    the next floating point operation. This was being masked during make check,\n    by the fact that each test is run in its own forked process and was only\n    observed when multiple tests were run in foreground mode.\n\n build/configure.ac.system |    2 +-\n test/invalid-matrix.c     |    4 ++++\n 2 files changed, 5 insertions(+), 1 deletion(-)\n\ncommit f47a93ef30249b531e588335045d052c3dcc71bd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat May 9 09:55:49 2009 +0100\n\n    [test] Check text->path with user-fonts (twin)\n    \n    Check behaviour of user-fonts, twin in particular, when using the text as\n    a path.\n\n test/twin.c           |   11 ++++++++++-\n test/twin.ps.ref.png  |  Bin 1114 -> 2197 bytes\n test/twin.ref.png     |  Bin 1492 -> 4038 bytes\n test/twin.svg.ref.png |  Bin 1487 -> 3027 bytes\n 4 files changed, 10 insertions(+), 1 deletion(-)\n\ncommit 669e7ae5c98812360bf20b798c20024ae2e9810b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri May 8 17:36:01 2009 +0100\n\n    [test] Relax APPROX_EQUALS condition\n    \n    The bounding box of the text is rounded to the nearest pixel boundaries,\n    so therefore the test must accept a similar level of imprecision.\n\n test/get-path-extents.c |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit fe7410c6cdc19bb366bf1e93481bf8287a14d52e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat May 9 19:01:06 2009 +0100\n\n    [test] Add a note to \"Getting the elusive zero failures\"\n    \n    The test suite depends upon many external factors and in order to achieve\n    a pass, your system must match that upon which the reference images were\n    generated. Add a note to read test/README in case of failures so that the\n    casual user is not unduly alarmed by cairo reportedly failing.\n\n test/cairo-test-runner.c |   12 ++++++++++++\n 1 file changed, 12 insertions(+)\n\ncommit 2f962799a77faef0e6ad62c79bd7eebc9b8c5a4b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri May 15 18:49:03 2009 +0100\n\n    [test] Fix typos that excluded backend test sources\n\n test/Makefile.am |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit c25992479aca481d326f72665ebdcf0904273eac\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat May 9 10:10:14 2009 +0100\n\n    [xlib] Use minimal depth for similar clones.\n    \n    Damian Frank noted\n    [http://lists.cairographics.org/archives/cairo/2009-May/017095.html]\n    a performance problem with an older XServer with an\n    unaccelerated composite - similar problems will be seen with non-XRender\n    servers which will trigger extraneous fallbacks. The problem he found was\n    that painting an ARGB32 image onto an RGB24 destination window (using\n    SOURCE) was going via the RENDER protocol and not core. He was able to\n    demonstrate that this could be worked around by declaring the pixel data as\n    an RGB24 image. The issue is that the image is uploaded into a temporary\n    pixmap of matching depth (i.e. 32 bit for ARGB32 and 24 bit for RGB23\n    data), however the core protocol can only blit between Drawables of\n    matching depth - so without the work-around the Drawables are mismatched\n    and we either need to use RENDER or fallback.\n    \n    This patch adds a content mask to _cairo_surface_clone_similar() to\n    provide the extra bit of information to the backends for when it is\n    possible for them to drop channels from the clone. This is used by the\n    xlib backend to only create a 24 bit source when blitting to a Window.\n\n src/cairo-clip.c                     |    1 +\n src/cairo-directfb-surface.c         |    2 ++\n src/cairo-glitz-surface.c            |    3 +++\n src/cairo-image-surface.c            |    4 ++++\n src/cairo-pattern.c                  |   18 ++++++++++++---\n src/cairo-quartz-surface.c           |    1 +\n src/cairo-surface-fallback-private.h |    1 +\n src/cairo-surface-fallback.c         |    3 ++-\n src/cairo-surface.c                  |    7 +++++-\n src/cairo-win32-surface.c            |    3 ++-\n src/cairo-xcb-surface.c              |    5 ++++\n src/cairo-xlib-surface.c             |   42 ++++++++++++++++++++++++++--------\n src/cairoint.h                       |    4 ++++\n src/test-fallback-surface.c          |    1 +\n src/test-fallback16-surface.c        |    2 ++\n test/surface-source.c                |    1 +\n 16 files changed, 82 insertions(+), 16 deletions(-)\n\ncommit 0238fe2cafea2e1ed19bb222117bd73ee6898d4d\nAuthor: Karl Tomlinson <karlt+@karlt.net>\nDate:   Thu May 14 11:46:29 2009 +0100\n\n    [ft] Resolve mutual referencing problems with zombie faces\n    \n    Bug 21706 -- zombie ft_font_face / ft_unscaled_font mutual\n                 referencing problems\n    [http://bugs.freedesktop.org/show_bug.cgi?id=21706]\n    \n    There can be more than one zombie font_face belonging to an unscaled_font,\n    but only the first is destroyed.  This leaks the client's FT_Face\n    (and associated font data) as release of the FT_Face depends on release\n    of the font_face.\n    \n    (The reason why Firefox ends up with two different font_faces for one\n    unscaled_font is that load_flags for faces with artificial oblique have\n    FT_LOAD_NO_BITMAP set.\n    https://bugzilla.mozilla.org/show_bug.cgi?id=486974)\n    \n    Also it's possible for _cairo_ft_font_face_create to pull out a zombie\n    font_face from the unscaled_font, which would crash\n    _cairo_ft_font_face_scaled_font_create, as that expects non-null\n    font_face->unscaled (if !font-face->pattern).\n\n AUTHORS             |    2 +-\n src/cairo-ft-font.c |   38 ++++++++++++++++++++++++++++++--------\n 2 files changed, 31 insertions(+), 9 deletions(-)\n\ncommit d6f6ec9082c86b9fd9e2389b9627f08a91c2cdd3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri May 8 16:43:43 2009 +0100\n\n    [ft] Restore the ability to lazily resolve patterns.\n    \n    I broke the ability for the ft font backend to resolve patterns whilst\n    fixing the font creation to propagate the error status from fontconfig\n    (be27e8). By adjusting the sequence of error checks we do not confuse\n    the absence of a match with a fatal error and thereby restoring the\n    lazy pattern resolution whilst ensuring error propagation.\n\n src/cairo-ft-font.c |   32 +++++++++++++++++---------------\n 1 file changed, 17 insertions(+), 15 deletions(-)\n\ncommit a352fd46020e18f9d9f839f0c3f3a63c1d8c0ae1\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Fri May 15 15:34:05 2009 -0400\n\n    Only include <strings.h> for ffs() when we HAVE_FFS\n    \n    This fixes breakage caused by 3d3d10a31e04498ef91a288d89b3dec291bfc323\n\n src/cairo-skiplist.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 882f1d5a60abfbf83c65fe00b31bb4c8e5c82f62\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Sun May 10 16:56:49 2009 -0700\n\n    [gl] Use spans directly as geometry instead of rasterizing to a temporary.\n    \n    I was hoping for a bigger win than this, but cairogears is now significantly\n    faster than it was with just traps.  One potential problem is that adding\n    src texture coordinates blew up vertex size from 12 bytes to 20, and we're\n    emitting quite a few vertices.  There's plenty of hope for the future,\n    though: With shaders we could remove the 2 new texcoords again by stuffing a\n    position to source coordinate transformation matrix in constants.  Then\n    with EXT_geometry_shader4 plus EXT_gpu_shader4 we should be able to get the\n    24 bytes for 2 vertices down to 16 or less.\n\n src/cairo-gl-surface.c |  316 ++++++++++++++++++++++++++----------------------\n 1 file changed, 171 insertions(+), 145 deletions(-)\n\ncommit 7b4f2d5e6dd37232d4fa764b69065c7d96856dcc\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Sun May 10 14:50:22 2009 -0700\n\n    [gl] Use Enable/DisableClientState for arrays for consistency.\n\n src/cairo-gl-surface.c |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit 705ee3da1372e8533f25e0b4bde072e4bf76872b\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Sat May 9 12:17:12 2009 -0700\n\n    [gl] Add HW spans implementation using VBOs and GL_LINES.\n    \n    This is a minor performance regression over software, but is the basis for\n    not rasterizing the geometry into a temporary mask, which should be a\n    significant win.\n\n src/cairo-gl-surface.c |  145 +++++++++++++++++++++++++++++++++++++++++-------\n 1 file changed, 124 insertions(+), 21 deletions(-)\n\ncommit 934af24ccce9c06fc38ab7735d643d230fb3b8ad\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Sat May 9 10:03:06 2009 -0700\n\n    [gl] Use the span renderer with an image surface temporary.\n    \n    This appears to be no performance difference in cairogears versus the traps\n    fallback before, but is a step towards handing the information off to the\n    hardware.\n\n src/cairo-gl-surface.c |  210 +++++++++++++++++++++++++++++++++++++++++++++++-\n 1 file changed, 208 insertions(+), 2 deletions(-)\n\ncommit 17b41fe7e3b8b493341be6384d816105aadf0cb6\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Sun May 10 10:17:27 2009 -0700\n\n    [gl] Use filtering of GL_NEAREST to hint to TexImage not to alloc for mipmaps.\n    \n    Gl defaults to NEAREST_MIPMAP_LINEAR on new texture objects.\n    This should save space or bandwidth with DRI drivers, as they'll use the\n    parameter as a hint, and then not have to either fix up later or waste\n    space for unused mipmap levels.\n\n src/cairo-gl-surface.c |    7 +++++++\n 1 file changed, 7 insertions(+)\n\ncommit a438acd37c5aaedc7e7a05e6a9d8758315931b44\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Sat May 9 11:33:53 2009 -0700\n\n    [gl] Handle PIXMAN_b8g8r8a and PIXMAN_b8g8r8x8 in the image tex shortcut.\n\n src/cairo-gl-surface.c |    6 ++++++\n 1 file changed, 6 insertions(+)\n\ncommit 29768c2193b09d3bef54a178c8e3ba6f7e7cebd0\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Sat May 9 11:30:11 2009 -0700\n\n    [gl] Don't forget that we require ARB_texture_non_power_of_two currently.\n\n src/cairo-gl-surface.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit 088d2a6cc70b01f55d178d235542247180b3e5ee\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 7 11:35:17 2009 +0100\n\n    [doc] Update identifiers\n\n doc/public/tmpl/cairo-status.sgml |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit d8fb6a03d3034cf776687bcc1f0625a8a9f2ae07\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 7 14:57:13 2009 +0100\n\n    [path] Define _BSD_SOURCE to enable hypot()\n    \n    hypot() is only declared for BSD/SVID/XOPEN/C99 sources. Choose BSD as\n    we've used that elsewhere.\n\n src/cairo-path-stroke.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit e38f85c5de51016b8858e755e2752816c9995ab2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 7 14:42:15 2009 +0100\n\n    [script] Pedantic violations\n    \n    Fixup a few trivial errors with -pedantic.\n\n util/cairo-script/cairo-script-operators.c |    2 +-\n util/cairo-script/cairo-script-private.h   |    8 ++++----\n 2 files changed, 5 insertions(+), 5 deletions(-)\n\ncommit 0c00556990a842e0ee0056134c6e196c2fb372b7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 7 14:11:12 2009 +0100\n\n    [script] Missing include for INT32_MAX\n    \n    Avoid depending upon stdint.h, or rather cut'n'pasting Cairo's portable\n    defines, by using INT_MAX and limits.h instead.\n\n util/cairo-script/cairo-script-file.c      |    3 ++-\n util/cairo-script/cairo-script-objects.c   |    3 ++-\n util/cairo-script/cairo-script-operators.c |   13 +++++++------\n util/cairo-script/cairo-script-scanner.c   |    5 +++--\n util/cairo-script/cairo-script-stack.c     |    7 ++++---\n 5 files changed, 18 insertions(+), 13 deletions(-)\n\ncommit 3d3d10a31e04498ef91a288d89b3dec291bfc323\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 7 14:10:47 2009 +0100\n\n    [skiplist] Missing include for ffs()\n\n src/cairo-skiplist.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit e5752865ab0ebefec313ab9a6f90451ef2d7af95\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 7 14:58:45 2009 +0100\n\n    [cairo] Protect typeof against -ansi\n    \n    s/typeof/__typeof__/ to allow the [gcc-specific] macro to continue to work\n    despite -ansi.\n\n src/cairoint.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 5f4f2ab01ab3fa6b07ac7521dfeaf90a787a5dee\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 7 14:34:47 2009 +0100\n\n    [cairo] Remove stray semi-colon\n    \n    Pedantic finds another victim.\n\n src/cairoint.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit d86ad461cf7a9d857bd07a6b775c84acbf35647b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 7 14:16:05 2009 +0100\n\n    [cairo] Convert C99 comments to /* ... */\n    \n    First victim of -pedantic...\n\n src/cairoint.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 695f648607dd5a78cf29dcc33ed19aa223d0416a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 7 11:16:10 2009 +0100\n\n    [cairo] Fix errors reported by check-doc\n    \n    Identity a few new instances of CAIRO_STATUS_USER_FONT_NOT_IMPLEMENTED in\n    comments with %.\n\n src/cairo.h |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit 849bdee199b5ebba467603a69d30bb519c10bc75\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 7 11:36:38 2009 +0100\n\n    [check] Quieten output during checking headers-standalone\n    \n    Remove the duplication of the compile line and enable shave to replace it\n    entirely with a \"CHECK $header\". This should make errors more obvious.\n\n build/shave.in           |    3 +++\n src/Makefile.am.analysis |    2 +-\n 2 files changed, 4 insertions(+), 1 deletion(-)\n\ncommit 84fad4b11bc26cfd0847660e3309eb902d783713\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 7 11:31:22 2009 +0100\n\n    [build] Fix gtk-doc interoperation with shave\n    \n    Add --tag=CC to the libtool invocations.\n\n build/Makefile.am.gtk-doc |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit fd72c56af833a738ddc8f188cabe03d9f8b45475\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu May 7 11:27:43 2009 +0100\n\n    [build] Report status of gtk-doc in summary\n\n build/configure.ac.features |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 428fb58a4c96391f96f48026be49a4533cd12834\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Tue Apr 28 15:03:53 2009 -0400\n\n    [user-font] Add CAIRO_STATUS_USER_FONT_NOT_IMPLEMENTED\n    \n    This is useful for language bindings to signal that a method is not\n    implemented.\n\n src/cairo-misc.c      |    2 ++\n src/cairo-surface.c   |    1 +\n src/cairo-user-font.c |   14 +++++++++++---\n src/cairo.h           |   23 ++++++++++++++---------\n 4 files changed, 28 insertions(+), 12 deletions(-)\n\ncommit f9573d03dde2c38674d36b783044715ab5104b0a\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Tue Mar 17 19:48:12 2009 -0400\n\n    Err, make gtk-doc happy again\n\n doc/public/tmpl/cairo-status.sgml |    2 +-\n src/cairo.h                       |    2 --\n 2 files changed, 1 insertion(+), 3 deletions(-)\n\ncommit 30735f790aa3cef822f132932f43a4738cd8cd95\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 5 18:37:25 2009 +0100\n\n    [xlib] Use a similar content surface for cloning images\n    \n    Simply request a surface with a similar content to the source image when\n    uploading pixel data. Failing to do so prevents using a 16-bit (or\n    otherwise non-standard pixman image format) window as a source - in fact\n    it will trigger an infinite recursion.\n\n src/cairo-xlib-surface.c |   16 +++++++++-------\n 1 file changed, 9 insertions(+), 7 deletions(-)\n\ncommit 60e38d0530443aa9c78e74e47ba5574887ae220c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 5 17:05:39 2009 +0100\n\n    [surface] Convert FORMAT_INVALID during snapshots\n    \n    Currently the surface snapshotting attempts to clone the source using a\n    new surface of identical format. This will raise an error if the source is\n    an unusual xserver, for example one operating at 16bpp. The solution to\n    this is to create the surface using the content type rather than the\n    format (as elsewhere within the code base). However, we also wish to\n    preserve FORMAT_A1 (which is lost if we only choose the format based on\n    _cairo_format_from_content) as the various backends may be able to\n    trivially special case such bitmaps.\n\n src/cairo-surface-fallback.c |   10 +++++++++-\n 1 file changed, 9 insertions(+), 1 deletion(-)\n\ncommit 31f5a2e94d669b9d2785de944d4aee584fd1d76e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 5 15:52:55 2009 +0100\n\n    [png] Coerce FORMAT_INVALID to a known image format\n    \n    It is possible for cairo_surface_write_to_png() to acquire a non-standard\n    image surface when, for example, we try to dump a low bit-depth XServer.\n    Handle this scenario by coercing the unknown image format to a standard\n    type via pixman.\n\n src/cairo-png.c |   44 ++++++++++++++++++++++++++++++--------------\n 1 file changed, 30 insertions(+), 14 deletions(-)\n\ncommit c488b336449a1a7ca4d3f90785afeec9e21784c3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 5 13:59:07 2009 +0100\n\n    [test] Create a new fallback surface to exercise 16-bit paths.\n    \n    Add a variation of test-fallback-surface that forces the use of a 16-bit\n    pixman format code instead of the standard 32-bit types. This creates an\n    image surface akin to the fallbacks used with low bit-depth xservers.\n\n .../cairo-boilerplate-test-surfaces-private.h      |   11 +\n boilerplate/cairo-boilerplate-test-surfaces.c      |   16 ++\n boilerplate/cairo-boilerplate.c                    |   18 ++\n src/Makefile.sources                               |    2 +\n src/test-fallback16-surface.c                      |  234 ++++++++++++++++++++\n src/test-fallback16-surface.h                      |   52 +++++\n test/Makefile.am                                   |    4 +\n test/Makefile.sources                              |    3 +\n test/test-fallback16-surface-source.c              |   43 ++++\n test/test-fallback16-surface-source.ref.png        |  Bin 0 -> 268 bytes\n 10 files changed, 383 insertions(+)\n\ncommit 1d609d672273da494fd596606b59ab1c0010ae6d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue May 5 17:11:55 2009 +0100\n\n    [image] Treat A1 image surfaces as BILEVEL_ALPHA\n    \n    Categorise the transparency of FORMAT_A1 image surfaces as BILEVEL_ALPHA.\n\n src/cairo-image-surface.c |    9 +++++++--\n 1 file changed, 7 insertions(+), 2 deletions(-)\n\ncommit aac132a76a2af3719088678295169f1962a555e6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Apr 24 10:14:36 2009 +0100\n\n    [image] Make _cairo_image_analayze_transparency() more format agnostic\n    \n    Use the content in preference to the format to determine\n    CAIRO_IMAGE_IS_OPAQUE/CAIRO_IMAGE_HAS_ALPHA.\n\n src/cairo-image-surface.c |   17 +++++++----------\n 1 file changed, 7 insertions(+), 10 deletions(-)\n\ncommit 4be6de9fc6192d59c8d61e8edafed941e868a756\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Apr 24 10:03:20 2009 +0100\n\n    [image] Return FORMAT_INVALID for an error surface.\n    \n    The default error value should be CAIRO_FORMAT_INVALID [-1] not 0 (which\n    corresponds to CAIRO_FORMAT_ARGB32).\n\n src/cairo-image-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 6675cf558719f81afe2a4331bc6adb3cda637a26\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri May 1 09:31:53 2009 +0100\n\n    [build] Add lcov-1.7 to known list\n\n build/configure.ac.analysis |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 526fcdb7e6cc8b522508762b1a68a5585fddf823\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Apr 20 10:56:06 2009 +0100\n\n    [build] Enable shave support\n    \n    shave transforms the messy output of autotools into a pretty (quiet!)\n    Kbuild-like one.\n    \n    Lets see how controversial a simple change can be...\n\n build/.gitignore       |    2 ++\n build/aclocal.dolt.m4  |    1 +\n build/aclocal.shave.m4 |   77 ++++++++++++++++++++++++++++++++++++++++++++++\n build/shave-libtool.in |   69 ++++++++++++++++++++++++++++++++++++++++++\n build/shave.in         |   79 ++++++++++++++++++++++++++++++++++++++++++++++++\n configure.ac           |    4 +++\n 6 files changed, 232 insertions(+)\n\ncommit 1ae2ddc1dd4c90d50b8c57c4de677f8ab96b1fa2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Apr 16 17:19:12 2009 +0100\n\n    [memfault] Manually inject faults when using stack allocations\n    \n    Ensure that no assumptions are made that a small allocation will succeed\n    by manually injecting faults when we may be simply allocating from an\n    embedded memory pool.\n    \n    The main advantage in manual fault injection is improved code coverage -\n    from within the test suite most allocations are handled by the embedded\n    memory pools.\n\n src/cairo-array.c           |    3 +++\n src/cairo-bentley-ottmann.c |    3 +++\n src/cairo-gstate.c          |    3 +++\n src/cairo-hull.c            |    3 +++\n src/cairo-image-surface.c   |    6 ++++++\n src/cairo-malloc-private.h  |    7 +++++++\n src/cairo-misc.c            |    3 +++\n src/cairo-path-stroke.c     |    2 ++\n src/cairo-pattern.c         |    9 +++++++++\n src/cairo-pen.c             |    9 +++++++++\n src/cairo-polygon.c         |    5 +++++\n src/cairo-scaled-font.c     |    3 +++\n src/cairo-stroke-style.c    |    3 +++\n src/cairo-traps.c           |    5 +++++\n 14 files changed, 64 insertions(+)\n\ncommit 817589e1967ebdd5e5bda1781eb76010fd8c37dc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Apr 16 13:01:52 2009 +0100\n\n    [test] Call FcInit() manually.\n    \n    Pre-initialise fontconfig whilst memfault is disabled to avoid a lot of\n    expensive, redundant testing of FcInit() throughout the test suite.\n\n test/cairo-test.c |    6 ++++++\n 1 file changed, 6 insertions(+)\n\ncommit be27e844c83c0f5cf25dee1c62768dbf70897a06\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Apr 16 17:13:52 2009 +0100\n\n    [ft] Propagate status from font creation\n    \n    Return the true error status whel\n    _cairo_ft_unscaled_font_create_internal(). This ensures that the original\n    error is not masked and we are able to report the error during fontconfig\n    pattern resolution.\n\n src/cairo-ft-font.c |   90 +++++++++++++++++++++++++++++----------------------\n 1 file changed, 51 insertions(+), 39 deletions(-)\n\ncommit d46c56f18c8a93d3d50be9333292c7c9b0ac0a78\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Apr 16 13:00:59 2009 +0100\n\n    [ft] Check for pattern duplication failure.\n    \n    Check the return of FcPatternDuplicate() for failure, and propagate the\n    error.\n\n src/cairo-ft-font.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 50302f156dfba4dcb3639843d7eda819f2c6797c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Apr 16 12:59:36 2009 +0100\n\n    [ft] Check (correctly!) for pattern duplication failure.\n    \n    Check the return from FcPatternDuplicate() for allocation failure (and not\n    the original pattern)!\n\n src/cairo-ft-font.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 8bf109bd2a9c9bf755671185733def898a4f96f2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Apr 16 17:17:06 2009 +0100\n\n    [pattern] Silence compiler with impossible case.\n    \n    Assert that the pattern is one of the four known types, and return an\n    error so that the compiler knows that the local variable can not be used\n    uninitialised.\n\n src/cairo-pattern.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 5a76c233bffda65140c6ada9b5f2ed7d3bcc999e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Apr 14 11:02:40 2009 +0100\n\n    [type3] Propagate error from font creation.\n    \n    Perform an error check after creating a scaled-font to prevent operations\n    on a nil-object.\n\n src/cairo-type3-glyph-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit d46bd67c8b3f63d6286845e814f8f1e040f89737\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Apr 10 14:55:24 2009 +0100\n\n    [type3] Add status checks.\n    \n    Propagate error from the stream when creating the surface and add status\n    guards before writing to the potential nil object.\n\n src/cairo-type3-glyph-surface.c |   26 +++++++++++++++++++++++---\n 1 file changed, 23 insertions(+), 3 deletions(-)\n\ncommit a6ffb69a54f15659dac7c6b2e1c98bd7893ccdf1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Apr 3 17:28:05 2009 +0100\n\n    [type3] Check error status before emit_image().\n    \n    Be careful not to pass an error object down to emit_image() hook,\n    propagate the error instead. This relieves the burden of the error check\n    from the callee -- which was causing an assertion failure in the ps\n    backend.\n\n src/cairo-type3-glyph-surface.c |    8 ++++++--\n 1 file changed, 6 insertions(+), 2 deletions(-)\n\ncommit 21d1138da9bcf9c006e0cf3f3d1d50e1c7cec1de\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Apr 10 14:53:55 2009 +0100\n\n    [scaled-font-subsets] Check for malloc failure.\n    \n    Check that the utf8 string is successfully allocated before writing to it,\n    otherwise propagate the error status back to the callers.\n\n src/cairo-scaled-font-subsets.c |   63 ++++++++++++++++++++++-----------------\n 1 file changed, 35 insertions(+), 28 deletions(-)\n\ncommit 0f0e2d738437176e72317b37ef66fbc56c60ba93\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Apr 10 14:52:48 2009 +0100\n\n    [pdf] Propagate failure from type3 glyph surface creation.\n    \n    Add an early check that we successfully created the glyph surface.\n\n src/cairo-pdf-surface.c |   11 +++++++++++\n 1 file changed, 11 insertions(+)\n\ncommit 1496c5cf51a2304dfd4e9d359a0645ff44fadd3e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Apr 10 14:50:26 2009 +0100\n\n    [analysis] Use _cairo_region_init()\n    \n    Avoid secondary allocations of the thin region wrappers during surface\n    creation by embedding them into the parent structure. This has the\n    satisfactory side-effect of not requiring status checks which current code\n    lacks.\n\n src/cairo-analysis-surface.c |   26 +++++++++++++-------------\n 1 file changed, 13 insertions(+), 13 deletions(-)\n\ncommit ad83765a1441cb369c3e7f3de77c243297406c7a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Apr 3 09:23:58 2009 +0100\n\n    [xlib] Allocate bounded region on stack.\n    \n    Eliminate the extremely short-lived and oft unnecessary heap allocation\n    of the region by first checking to see whether the clip exceeds the\n    surface bounds and only then intersect the clip with a local\n    stack-allocated region.\n\n src/cairo-region.c       |   23 ++++++++++++++++++\n src/cairo-xlib-surface.c |   58 ++++++++++++++++++++++++++++++----------------\n src/cairoint.h           |   10 ++++++++\n 3 files changed, 71 insertions(+), 20 deletions(-)\n\ncommit 75b06b8bdb5efaf030e063c1f66583d8fde347dc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 1 11:43:16 2009 +0100\n\n    [pattern] Do not modify outparam on error path.\n    \n    The pdf backend was crashing as a failed pattern copy stored an invalid\n    pointer with the resource group.\n\n src/cairo-pattern.c |   21 +++++++++++----------\n 1 file changed, 11 insertions(+), 10 deletions(-)\n\ncommit 82cccb26723697492504f395fed33afba28d84ba\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Apr 14 11:01:39 2009 +0100\n\n    [test] Handle memfaults during surface-finish-twice\n    \n    Check and report memory allocation failures.\n\n test/surface-finish-twice.c |   17 +++++++++++------\n 1 file changed, 11 insertions(+), 6 deletions(-)\n\ncommit f12d52bfcae0792729b33a1fd1b2d23bd3fc7cf3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Apr 4 19:02:15 2009 +0100\n\n    [test] Use xmalloc() to evade memfault.\n    \n    Do not use the simple malloc() as memfault will inject allocation failures\n    (unlike xmalloc() for which faults are excluded) - as this is unnecessary\n    inside the test harness and thus does not exercise any cairo code paths.\n\n test/show-glyphs-many.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit ca501d99bbec432252cbb134d863801d4a792a44\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Apr 1 11:41:59 2009 +0100\n\n    [test] Disable signal handling under valgrind\n    \n    Capturing and handling the signals prevents valgrind from providing\n    backtraces for fatal signals -- which is often more useful.\n\n test/cairo-test.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit f8539726368141f8b42c7817cfd59b4abfce33f3\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Tue Apr 7 14:50:25 2009 -0400\n\n    [win32] Fix building with libpng and zlib\n    \n    Include zlib and libpng dependencies using something like '$(cairo_dir)/../zlib/zdll.lib'\n    instead of just 'zdll.lib'. Also, do similarly for the headers.\n\n build/Makefile.win32.common |    8 +++++---\n 1 file changed, 5 insertions(+), 3 deletions(-)\n\ncommit 1798fc6607a89811929d1f21cc71c751438f5699\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Apr 5 11:17:02 2009 +0930\n\n    Fix the TrueType subsetting fix in 9b496af5c\n    \n    Oops.\n\n src/cairo-truetype-subset.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit fe97e815e81f4429889fd52bb525c260f9967356\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Apr 5 01:04:12 2009 +1030\n\n    Fix TrueType subsetting bug\n    \n    Fix incorrect counting of arguments in composite glyphs\n\n src/cairo-truetype-subset-private.h |    2 +-\n src/cairo-truetype-subset.c         |   12 +++++++-----\n 2 files changed, 8 insertions(+), 6 deletions(-)\n\ncommit 9b496af5c214283c297a52c90a04743f9da9f6a3\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Apr 5 00:44:02 2009 +1030\n\n    Fix buffer size check in TrueType subsetting\n    \n    Andrew Cowie reported a problem with the Charis SIL font being\n    embedded as a fallback font.\n    \n    The buffer size check for composite glyphs was incorrect causing the\n    subsetting to fail for some fonts.\n\n src/cairo-truetype-subset.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit ba2ec8e1d9144c4a27917e59cb15039552eb008c\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Wed Apr 1 13:29:12 2009 -0400\n\n    Remove trailing comma in cairo_region_overlap_t enum.\n\n src/cairo.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 2d6336624c33e9c674c192b68eb501373a96dc87\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Wed Apr 1 11:32:58 2009 -0400\n\n    [test-win32] Fix static linking of the test suite.\n    \n    Previously, the test suite needed to be dynamically linked to work.\n\n boilerplate/Makefile.win32 |    2 +-\n test/Makefile.win32        |    9 ++++++---\n test/pdiff/Makefile.win32  |    2 +-\n 3 files changed, 8 insertions(+), 5 deletions(-)\n\ncommit 0f21893b0510a188439c2d8cd448bcfcf17ef8c6\nAuthor: S\u00f8ren Sandmann Pedersen <sandmann@daimi.au.dk>\nDate:   Wed Apr 1 08:54:30 2009 -0400\n\n    [region] pixman_region32_contains_point() does not allow NULL for box\n\n src/cairo-region.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit e46c1d7fa34b4ba89fc3e0fe6f3042a6fa8c0398\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 31 10:39:46 2009 +0100\n\n    [scaled-font-subset] Cleanup after failure to convert to utf16.\n    \n    Avoid leaking the local hashtable and strings after failing to convert the\n    string to utf16.\n\n src/cairo-scaled-font-subsets.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 180b964aac4e058e6783778d33772f08e13b3669\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 31 10:37:44 2009 +0100\n\n    [scaled-font-subset] Propagate error from scaled-font to collection.\n    \n    Don't attempt to collect the sub_font if it is in error.\n\n src/cairo-scaled-font-subsets.c |    4 ++++\n 1 file changed, 4 insertions(+)\n\ncommit 8362c6f726979abc43ad9f7303bd45fcb03f83b3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 31 10:36:08 2009 +0100\n\n    [type1] Fixup error path during write_charstrings()\n    \n    On the common error path we attempted to unlock a mutex that was not\n    always held, so reorder the error paths appropriately.\n\n src/cairo-type1-fallback.c |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit 88956cd42e9cc03cb8b4ec730062993eaaf3938d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 31 10:35:24 2009 +0100\n\n    [ps] Check for error during stroking.\n    \n    Add a missing error status check that caused errors during stroke to be\n    masked.\n\n src/cairo-ps-surface.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 043352aa8d1e3aeacf3b877f45e1bc451a676e15\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 31 10:34:41 2009 +0100\n\n    [pdf] Prevent leak of pad_image on error path.\n    \n    Ensure that the local pad_image is destroyed after an error.\n\n src/cairo-pdf-surface.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit b0689f56118dd8ccda6f29901d41cf8f80983aa0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 31 10:27:15 2009 +0100\n\n    Check for errors during get_mime_data()\n    \n    cairo_surface_get_mime_data() may raise an error on the surface, so we\n    need to check lest it goes unnoticed and we generate a corrupt file.\n\n src/cairo-pdf-surface.c |    2 ++\n src/cairo-ps-surface.c  |    2 ++\n src/cairo-svg-surface.c |    2 ++\n 3 files changed, 6 insertions(+)\n\ncommit 9f63cbb870892253f363ddb7aac908263672c8dc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 30 19:09:13 2009 +0100\n\n    [pdf] Free compressed stream after error.\n    \n    Ensure that the compressed stream is destroyed after encountering an\n    error.\n\n src/cairo-pdf-surface.c |   13 ++++++++-----\n 1 file changed, 8 insertions(+), 5 deletions(-)\n\ncommit ba1a0fa601a817ff489bc5373af57977e41eb99f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 30 19:08:41 2009 +0100\n\n    [truetype] Free local names on failure.\n    \n    Ensure that all local allocations are freed on the error path.\n\n src/cairo-truetype-subset.c |   13 +++++++++----\n 1 file changed, 9 insertions(+), 4 deletions(-)\n\ncommit edce97a750acf4368bd7249ec6b9a195f8584cdf\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 30 16:50:51 2009 +0100\n\n    [pdf] Remove false assertion.\n    \n    The stream itself may be in an error state, so an error could be raised.\n\n src/cairo-pdf-surface.c |    8 +++++---\n 1 file changed, 5 insertions(+), 3 deletions(-)\n\ncommit b580a4a8d6c056ba8b47be32ea8c5b9a1d90d01e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 30 16:50:10 2009 +0100\n\n    [test] Improve fault injection coverage\n    \n    In order to exercise the meta-surfaces, we need to inject faults into\n    cairo_surface_finish().\n\n boilerplate/cairo-boilerplate.c |   16 +++++++++++++---\n test/cairo-test.c               |   35 +++++++++++++++++++++++++++++++++++\n 2 files changed, 48 insertions(+), 3 deletions(-)\n\ncommit 80d5b53b474c94219c51ae16dcc19098a2d86165\nAuthor: S\u00f8ren Sandmann Pedersen <sandmann@redhat.com>\nDate:   Tue Mar 31 05:47:44 2009 -0400\n\n    [region] Change name of cairo_region_empty() to cairo_region_is_empty()\n\n src/cairo-clip.c             |    2 +-\n src/cairo-region.c           |    6 +++---\n src/cairo-surface-fallback.c |    2 +-\n src/cairo.h                  |    2 +-\n src/cairoint.h               |    2 +-\n 5 files changed, 7 insertions(+), 7 deletions(-)\n\ncommit 77ee65fd03d06064be023f022d565c5038fe26df\nAuthor: Jonathan Kew <jfkthame@gmail.com>\nDate:   Mon Mar 30 14:45:48 2009 -0400\n\n    [win32] Fix horizontal glyph positioning bug\n    \n    The _cairo_win32_scaled_font_backend version of show_glyphs collects\n    glyph runs to hand to ExtTextOutW until the y-offset changes, then flushes the\n    glyphs buffered so far. As each glyph is buffered, it also calculates and\n    buffers the dx value for the preceding glyph.\n    \n    However, when it sees a change in dy and decides to flush, it should *not*\n    append an entry to the dx buffer, as this would be the \"dx\" of the previous\n    glyph, and instead the new start_x value will be used for the new glyph run\n    that's being collected. This bug means that after any vertically-offset glyph,\n    the remaining glyphs in the run will get incorrect dx values (horizontal\n    escapement).\n    \n    Mozilla bug #475092\n\n src/cairo-win32-font.c |   10 +++++-----\n 1 file changed, 5 insertions(+), 5 deletions(-)\n\ncommit aee71e2063b1d6d23cd8dcef7789c9cf106af32a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 30 13:41:00 2009 +0100\n\n    [test] Memfault checks.\n    \n    Don't assume an error means the test failed, check for injected allocation\n    errors.\n\n test/create-from-png.c |  164 +++++++++++++++++++++++++++++++++---------------\n 1 file changed, 113 insertions(+), 51 deletions(-)\n\ncommit ea6197c2f5f04d5e8e8035a330c5199b37beb702\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 30 10:54:26 2009 +0100\n\n    [surface] Propagate region allocation failure.\n    \n    Propagate the error status from failing to allocate the region.\n\n src/cairo-surface.c |   21 ++++++++++-----------\n 1 file changed, 10 insertions(+), 11 deletions(-)\n\ncommit c35d226f7d3654b312e18068b8ccb47a51002a39\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 30 10:46:37 2009 +0100\n\n    [traps] Propagate allocation failure.\n    \n    Report failure to allocation region.\n\n src/cairo-traps.c |   23 ++++++++++-------------\n 1 file changed, 10 insertions(+), 13 deletions(-)\n\ncommit e238d10b30e18084bf07eb1643fdf48ef35467ab\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 30 10:22:18 2009 +0100\n\n    [region] Use const cairo_rectangle_int_t consistently.\n    \n    Add the const declaration to a couple of functions.\n\n src/cairo-region.c |    4 ++--\n src/cairo.h        |    4 ++--\n 2 files changed, 4 insertions(+), 4 deletions(-)\n\ncommit de1612bdd767ca37e01938f8e41d9699531a49d9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 30 10:17:49 2009 +0100\n\n    [region] Use _cairo_status_is_error\n    \n    Replace the open-coded version with the more readable macro.\n\n src/cairo-region.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit f027405429d0133b2840c4b82bc553355fa5f3d2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 30 10:12:41 2009 +0100\n\n    [region] Add leading underscore to private _cairo_region_set_error()\n    \n    Differentiate the private _cairo_region_set_error() function by using a\n    leading underscore.\n\n src/cairo-region.c |   24 ++++++++++++------------\n 1 file changed, 12 insertions(+), 12 deletions(-)\n\ncommit ed7188a471f73abcc4ca3e2a92685088134391c7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 30 10:07:48 2009 +0100\n\n    [region] Add slim_hidden_def.\n    \n    Fixes for check-plt.sh (and a few adjacent whitespace).\n\n src/cairo-region.c |  244 ++++++++++++++++++++++++++++------------------------\n 1 file changed, 133 insertions(+), 111 deletions(-)\n\ncommit f31c6548f818e1d4e257d94d623705284bcc4274\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Mar 28 19:26:03 2009 +0000\n\n    Silence compiler warnings for CAIRO_STATUS_LAST_STATUS\n    \n    Add ASSERT_NOT_REACHED (or similar) cases to the error handling switches\n    to silence the compiler.\n\n src/cairo-misc.c    |    5 +++--\n src/cairo-spans.c   |    2 ++\n src/cairo-surface.c |    1 +\n 3 files changed, 6 insertions(+), 2 deletions(-)\n\ncommit 979337dd4da40abb2ea49968a2c01709d9046aab\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Sat Mar 28 21:53:04 2009 -0700\n\n    [gl] Wire blend factors using dst alpha to constants for CAIRO_CONTENT_COLOR.\n    \n    This fixes the operator and operator-alpha tests to rgb24 destinations.\n    While we request an RGB texture, the returned texture has alpha bits, so when\n    we blend against it as a renderbuffer, we get the junk alpha values.  Whether\n    or not this is a driver bug, we'll have this problem when we get visuals\n    with alpha bits for windows despite not requestiong alpha, so we have to\n    handle it in cairo.\n\n src/cairo-gl-surface.c |   22 ++++++++++++++++++----\n 1 file changed, 18 insertions(+), 4 deletions(-)\n\ncommit 809f7dc4c83009f0a67bc8af0608b480bf7fb00e\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Sat Mar 28 21:30:13 2009 -0700\n\n    [gl] Make sure test visuals for CAIRO_CONTENT_COLOR_ALPHA have alpha bits.\n    \n    Since we're just making FBOs, the visual chosen probably shouldn't matter,\n    and it doesn't on Intel.  But it does seem like the right thing to do.\n\n boilerplate/cairo-boilerplate-gl.c |   25 ++++++++++++++++++-------\n 1 file changed, 18 insertions(+), 7 deletions(-)\n\ncommit 93c437d4b9261bc1ce3daf9cbd02d9cc4d2584cc\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Sat Mar 28 20:59:01 2009 -0700\n\n    [gl] Use GLEW to detect required extension presence.\n\n configure.ac           |    9 +++++++++\n src/cairo-gl-surface.c |   13 +++++++++++++\n 2 files changed, 22 insertions(+)\n\ncommit 62d84847c3b857b8fd5aeea3f4b5c0f2f4c91625\nAuthor: S\u00f8ren Sandmann Pedersen <sandmann@redhat.com>\nDate:   Sat Mar 28 03:58:51 2009 -0400\n\n    [region] Add documentation for all the new region methods.\n\n src/cairo-region.c |  260 +++++++++++++++++++++++++++++++++++++++++++++-------\n src/cairo.h        |    6 +-\n 2 files changed, 232 insertions(+), 34 deletions(-)\n\ncommit 980e9f0dbd4f21c0ccf4cc33b0b0f2f370667290\nAuthor: S\u00f8ren Sandmann Pedersen <sandmann@redhat.com>\nDate:   Sat Mar 28 03:04:28 2009 -0400\n\n    [region] Fix status propagation for regions\n    \n    When an operation fails, store the status code in the destination\n    region rather than leaving it unchanged.\n\n src/cairo-region.c |   66 +++++++++++++++++++++++++++++++++++++++++-----------\n 1 file changed, 52 insertions(+), 14 deletions(-)\n\ncommit 64e490a464472cfe06d779503601d41972ed4518\nAuthor: S\u00f8ren Sandmann Pedersen <sandmann@redhat.com>\nDate:   Sat Mar 28 01:10:24 2009 -0400\n\n    [region] Use signed ints for width and height in cairo_rectangle_int_t\n\n src/cairo.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 26999e5aa8b5d353596e31d4b3823cafe007125c\nAuthor: S\u00f8ren Sandmann <sandmann@redhat.com>\nDate:   Fri Mar 27 08:48:42 2009 -0400\n\n    [region] Add cairo_region_intersect_rectangle() and _subtract_rectangle()\n    \n    Intersecting with and subtracting rectangles is quite common, and we\n    already have cairo_union_rectangle().\n\n src/cairo-clip.c    |   27 ++++-----------------------\n src/cairo-region.c  |   45 ++++++++++++++++++++++++++++++++++++++++++++-\n src/cairo-surface.c |    9 +--------\n src/cairo.h         |   11 ++++++++++-\n src/cairoint.h      |    2 ++\n 5 files changed, 61 insertions(+), 33 deletions(-)\n\ncommit 4b3245481cfbf96388c140421a071fd1f79ad601\nAuthor: S\u00f8ren Sandmann Pedersen <sandmann@redhat.com>\nDate:   Sat Feb 21 08:13:25 2009 -0500\n\n    [region] Expand rect to rectangle in a couple of names\n    \n    Specifically,\n    \n    \tcairo_region_union_rect  ->  cairo_region_union_rectangle\n    \tcairo_region_create_rect ->  cairo_region_create_rectangle\n    \n    Also delete cairo_region_clear() which is not that useful.\n\n src/cairo-analysis-surface.c |    4 ++--\n src/cairo-clip.c             |    4 ++--\n src/cairo-region.c           |   16 +++-------------\n src/cairo-surface-fallback.c |    2 +-\n src/cairo-surface.c          |    4 ++--\n src/cairo-traps.c            |    2 +-\n src/cairo-xlib-surface.c     |    2 +-\n src/cairo.h                  |    7 ++-----\n src/cairoint.h               |    5 ++---\n 9 files changed, 16 insertions(+), 30 deletions(-)\n\ncommit bf6d9bc1758ac1971485b6565d29934d6b06bef2\nAuthor: S\u00f8ren Sandmann Pedersen <sandmann@daimi.au.dk>\nDate:   Wed Feb 18 08:01:19 2009 -0500\n\n    [region] Delete cairo_region_create_rectangles()\n    \n    It was only used in _cairo_traps_extract_region() which could be\n    simplified significantly by calling cairo_region_union_rect()\n    repeatedly instead.\n\n src/cairo-region.c |   44 --------------------------------------\n src/cairo-traps.c  |   60 ++++++++++++++++++++--------------------------------\n src/cairo.h        |    4 ----\n src/cairoint.h     |    1 -\n 4 files changed, 23 insertions(+), 86 deletions(-)\n\ncommit e6d82afcab01cc91b88185abc8d1bfb9df5c2c19\nAuthor: S\u00f8ren Sandmann <sandmann@redhat.com>\nDate:   Wed Feb 18 00:20:46 2009 -0500\n\n    [region] Add slim_hidden_proto for region functions\n\n src/cairoint.h |   18 ++++++++++++++++++\n 1 file changed, 18 insertions(+)\n\ncommit e29103c08189cab9de34f577951219a69bd7c8e2\nAuthor: S\u00f8ren Sandmann <sandmann@redhat.com>\nDate:   Wed Feb 18 00:11:35 2009 -0500\n\n    [region] Move region function prototypes to cairo.h along with helper types.\n    \n    Move struct _cairo_region to cairoint.h and delete\n    cairo-region-private.h. Delete cairo_private from the function\n    definitions that had it.\n\n src/Makefile.sources         |    1 -\n src/cairo-analysis-surface.c |    1 -\n src/cairo-clip-private.h     |    1 -\n src/cairo-region-private.h   |  128 ------------------------------------------\n src/cairo-region.c           |    6 +-\n src/cairo-types-private.h    |    6 --\n src/cairo.h                  |   75 +++++++++++++++++++++++++\n src/cairoint.h               |    6 +-\n 8 files changed, 83 insertions(+), 141 deletions(-)\n\ncommit 1cca5a1348d071a3c8e2ba9d3ba0d9670b9564f4\nAuthor: S\u00f8ren Sandmann <sandmann@redhat.com>\nDate:   Tue Feb 17 23:52:18 2009 -0500\n\n    [region] Remove underscores from _cairo_region_*\n\n src/cairo-analysis-surface.c  |   18 ++++++------\n src/cairo-clip.c              |   50 ++++++++++++++++-----------------\n src/cairo-directfb-surface.c  |    4 +--\n src/cairo-paginated-surface.c |    4 +--\n src/cairo-region-private.h    |   36 ++++++++++++------------\n src/cairo-region.c            |   61 ++++++++++++++++++++---------------------\n src/cairo-surface-fallback.c  |   20 +++++++-------\n src/cairo-surface.c           |   14 +++++-----\n src/cairo-traps.c             |   10 +++----\n src/cairo-win32-surface.c     |    8 +++---\n src/cairo-xcb-surface.c       |    4 +--\n src/cairo-xlib-surface.c      |   14 +++++-----\n 12 files changed, 120 insertions(+), 123 deletions(-)\n\ncommit fcdca966941f4f7cc908bd46df1ec9a6b0f757c1\nAuthor: S\u00f8ren Sandmann <sandmann@redhat.com>\nDate:   Tue Feb 17 22:52:50 2009 -0500\n\n    [region] Always define cairo_rectangle_int_t with ints\n    \n    Use ints in cairo_rectangle_int_t, no matter the fixed type.\n\n src/cairo-types-private.h |   38 +++++++++-----------------------------\n 1 file changed, 9 insertions(+), 29 deletions(-)\n\ncommit cfa7a384b730289233bef556fe1919f781eac684\nAuthor: S\u00f8ren Sandmann <sandmann@redhat.com>\nDate:   Tue Feb 17 23:40:02 2009 -0500\n\n    [region] Add _cairo_region_contains_point()\n\n src/cairo-region-private.h |    5 ++++-\n src/cairo-region.c         |   15 +++++++++++++--\n src/cairo.h                |    1 +\n 3 files changed, 18 insertions(+), 3 deletions(-)\n\ncommit 15564d1949778124e553d792f85cae2b031aad45\nAuthor: S\u00f8ren Sandmann Pedersen <sandmann@redhat.com>\nDate:   Tue Feb 17 05:58:34 2009 -0500\n\n    [region] Add _cairo_region_union\n\n src/cairo-region-private.h |    4 ++++\n src/cairo-region.c         |   16 ++++++++++++++++\n 2 files changed, 20 insertions(+)\n\ncommit df883aa937d2f3ecf52048b60caff48b1c9edac9\nAuthor: S\u00f8ren Sandmann Pedersen <sandmann@redhat.com>\nDate:   Tue Feb 17 06:06:40 2009 -0500\n\n    [region] Add a cairo_region_overlap_t type\n\n src/cairo-analysis-surface.c |    4 ++--\n src/cairo-region-private.h   |    8 +++++++-\n src/cairo-region.c           |   33 ++++++++++++++++++++++++---------\n 3 files changed, 33 insertions(+), 12 deletions(-)\n\ncommit ebd0e685ae2d76c3af96d748a33a7194c70749f3\nAuthor: S\u00f8ren Sandmann Pedersen <sandmann@daimi.au.dk>\nDate:   Mon Feb 16 05:41:31 2009 -0500\n\n    [region] Consistently use rectangles in the API of regions\n    \n    Usually, rectangles are more useful than boxes, so regions should only\n    expose rectangles in their public API.\n    \n    Specifically,\n      _cairo_region_num_boxes becomes _cairo_region_num_rectangles\n      _cairo_region_get_box becomes _cairo_region_get_rectangle\n    \n    Remove the cairo_box_int_t type\n\n src/cairo-clip.c              |   22 +++++++------------\n src/cairo-directfb-surface.c  |   26 +++++++++++-----------\n src/cairo-paginated-surface.c |   34 ++++++++++++++---------------\n src/cairo-region-private.h    |   14 ++++++------\n src/cairo-region.c            |   28 ++++++++++++------------\n src/cairo-surface-fallback.c  |    2 +-\n src/cairo-surface.c           |   25 +++++++--------------\n src/cairo-traps.c             |   31 +++++++++++++-------------\n src/cairo-types-private.h     |    6 ------\n src/cairo-win32-surface.c     |   48 ++++++++++++++++++++---------------------\n src/cairo-xcb-surface.c       |   24 ++++++++++-----------\n src/cairo-xlib-surface.c      |   29 ++++++++++++-------------\n 12 files changed, 134 insertions(+), 155 deletions(-)\n\ncommit c29aeee2d3569cd43e88adc05662bb6306987b8b\nAuthor: S\u00f8ren Sandmann <sandmann@redhat.com>\nDate:   Thu Dec 11 18:37:40 2008 -0500\n\n    [region] Change sense of _cairo_region_not_empty() to _cairo_region_empty()\n    \n    Having \"not\" in the name causes double negatives.\n\n src/cairo-clip.c             |    2 +-\n src/cairo-region-private.h   |    2 +-\n src/cairo-region.c           |    6 +++---\n src/cairo-surface-fallback.c |    2 +-\n 4 files changed, 6 insertions(+), 6 deletions(-)\n\ncommit c88321d0a2b9d200b2044674d02fa0683feca74c\nAuthor: S\u00f8ren Sandmann <sandmann@redhat.com>\nDate:   Thu Dec 11 16:20:23 2008 -0500\n\n    [region] Miscellaneous bug fixes.\n    \n    - Initialize region->status in _cairo_region_create_boxes()\n    - Make _cairo_region_copy() actually return a region.\n    - Fix a bug where a NULL region could be dereferenced\n    \n    Also add an assertion that the result of cairo_region_copy() is never\n    NULL.\n\n src/cairo-clip.c          |    2 ++\n src/cairo-image-surface.c |    2 +-\n src/cairo-region.c        |    4 +++-\n 3 files changed, 6 insertions(+), 2 deletions(-)\n\ncommit 93b285dc2c9c9ec486e0096933c3611f73374fcb\nAuthor: S\u00f8ren Sandmann <sandmann@redhat.com>\nDate:   Thu Dec 11 15:50:15 2008 -0500\n\n    [region] Get rid of clip->has_region\n\n src/cairo-clip-private.h |    1 -\n src/cairo-clip.c         |   36 +++++++++++++++---------------------\n src/cairo-surface.c      |    2 +-\n 3 files changed, 16 insertions(+), 23 deletions(-)\n\ncommit e3e1b35eb9eb3cf90d882a7452580f9efe00b89a\nAuthor: S\u00f8ren Sandmann <sandmann@redhat.com>\nDate:   Thu Dec 11 15:29:23 2008 -0500\n\n    [region] Make cairo_region_t a malloced object.\n\n src/cairo-analysis-surface.c |   26 +++----\n src/cairo-clip-private.h     |    2 +-\n src/cairo-clip.c             |   99 ++++++++++++-------------\n src/cairo-region-private.h   |   42 ++++++-----\n src/cairo-region.c           |  168 +++++++++++++++++++++++++++++++++---------\n src/cairo-surface-fallback.c |   65 ++++++++--------\n src/cairo-surface.c          |   29 ++++----\n src/cairo-traps.c            |   14 ++--\n src/cairo-xlib-surface.c     |   16 ++--\n src/cairoint.h               |    2 +-\n 10 files changed, 280 insertions(+), 183 deletions(-)\n\ncommit c2c637cf1d89fc8fdcced4467d602a55ef0b14e0\nAuthor: S\u00f8ren Sandmann Pedersen <sandmann@redhat.com>\nDate:   Sat Mar 28 04:26:10 2009 -0400\n\n    Simplify _cairo_clip_intersect_region()\n    \n    The intermediate intersection region is not necessary because if the\n    operation fails, clip->region will end up as a pixman error region.\n\n src/cairo-clip.c |   19 +++++--------------\n 1 file changed, 5 insertions(+), 14 deletions(-)\n\ncommit fe10cd6467f2ec58532dc7c713bb6d08dab08442\nAuthor: Bertram Felgenhauer <int-e@gmx.de>\nDate:   Fri Mar 27 07:10:21 2009 +0100\n\n    [spline] fix wrong sign in _cairo_spline_bound.\n\n src/cairo-spline.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 53107de63a954105f8820e5b96e2a1956cb7af8c\nAuthor: Bertram Felgenhauer <int-e@gmx.de>\nDate:   Thu Mar 26 04:56:27 2009 +0100\n\n    [in_fill] Correctly track current point in curve_to.\n    \n    When discarding a bezier path segment, we still need to update the\n    current point.\n\n src/cairo-path-in-fill.c |    8 ++++++--\n 1 file changed, 6 insertions(+), 2 deletions(-)\n\ncommit 578b06a978d51dc3d1d844ee7eea9ddd8329cc8d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 23 10:56:43 2009 +0000\n\n    [perf] Use CAIRO_LDFLAGS\n    \n    Use CAIRO_LDFLAGS in order to pull in additional link options, such as\n    --coverage.\n\n perf/Makefile.am |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit ac30ced6135c5cf0fb34a67fe8f863030c1fbeb9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Mar 22 19:02:27 2009 +0000\n\n    [test] Check for surface create failure.\n    \n    If the image surface creation fails, the data pointer will be NULL leading\n    to a segfault -- so check!\n\n test/user-font-mask.c |    7 ++++++-\n 1 file changed, 6 insertions(+), 1 deletion(-)\n\ncommit b5a4a2c4b1b1bab25e2ff0842e3c27205ec73d51\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Mar 22 19:00:04 2009 +0000\n\n    [test] Early test for memfault.\n    \n    Check the error status within after each iteration in\n    solid-pattern-cache-stress.\n\n test/solid-pattern-cache-stress.c |   41 +++++++++++++++++++++++++++----------\n 1 file changed, 30 insertions(+), 11 deletions(-)\n\ncommit 1a7b94f934f8c9a25e60d9466651b0b7fb919656\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Mar 20 11:06:29 2009 +0000\n\n    [test] Check for errors during get-path-extents.\n    \n    Need to check that an error was not raised on the context before checking\n    whether the extents match expectations.\n\n test/get-path-extents.c |    9 +++++++++\n 1 file changed, 9 insertions(+)\n\ncommit 3b545330887209c68128fca0d1bb40bf4927c2a6\nAuthor: Vladimir Vukicevic <vladimir@pobox.com>\nDate:   Sat Mar 21 11:56:18 2009 -0700\n\n    [win32] Use _hypot instead of hypot\n    \n    The hypot symbol is deprecated on Win32, and nonexistent on Windows CE\n\n src/cairo-compiler-private.h |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 895fce1632069ddfb8c581d2b23b1b3552e35104\nAuthor: Stefan Klug <Klug.Stefan@gmx.de>\nDate:   Fri Mar 20 17:20:22 2009 -0400\n\n    [wince] Use the official _WIN32_WCE define instead of WINCE\n\n src/cairo-misc.c |    4 ++--\n src/cairoint.h   |    2 +-\n 2 files changed, 3 insertions(+), 3 deletions(-)\n\ncommit 86a935de42318c4be92a657ce8e8c452693d4414\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Fri Mar 20 17:14:08 2009 -0400\n\n    [msvc] Fix definition of CAIRO_ENSURE_UNIQUE for non-x86\n    \n    The current definition of CAIRO_ENSURE_UNIQUE uses x86 assembly so make sure we\n    only compile it when targeting x86.\n\n src/cairo-compiler-private.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit c932a809d6484503d7ee267d934bbc87c8d44092\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 17 12:01:13 2009 +0000\n\n    [test] Propagate allocation failure.\n    \n    Check for memfaults during rel-path test.\n\n test/rel-path.c |   19 ++++++++++++++++---\n 1 file changed, 16 insertions(+), 3 deletions(-)\n\ncommit 7db55b37d4aef188e04771b45076f6735507c209\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 17 11:58:16 2009 +0000\n\n    [test] Destroy pattern on error paths.\n    \n    Destroy the pattern after encountering an error in pattern-getters test.\n\n test/pattern-getters.c |   29 +++++++++++++++++++++++++----\n 1 file changed, 25 insertions(+), 4 deletions(-)\n\ncommit dc176d88ac03ae71fc32abb27329a35650801d99\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 17 10:42:37 2009 +0000\n\n    [test] Trivial leak on error in show-glyphs-many.\n    \n    Free the allocated glyph array after failure.\n\n test/show-glyphs-many.c |   11 ++++++-----\n 1 file changed, 6 insertions(+), 5 deletions(-)\n\ncommit a4b44ca89eb9975e6af2913e50ec3c3eb566cfdd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 17 14:56:42 2009 +0000\n\n    [pattern] Report the true error status from getters.\n    \n    As the getters actually return an error status, use it to report any\n    pre-existing error status on the pattern.\n\n src/cairo-pattern.c |   18 ++++++++++++++++++\n 1 file changed, 18 insertions(+)\n\ncommit 496bbcf58233ceecfffc52ae5b1a3a1f07516c67\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Tue Mar 17 19:46:25 2009 -0400\n\n    Make CAIRO_STATUS_LAST_STATUS public\n\n doc/public/tmpl/cairo-status.sgml |    1 +\n src/cairo.h                       |   12 ++++++++++--\n src/cairoint.h                    |    6 ------\n 3 files changed, 11 insertions(+), 8 deletions(-)\n\ncommit 922c108365b940dbabf23358189bbaa8602446c9\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Tue Mar 17 19:22:31 2009 -0400\n\n    [twin] Reorganize matching code to better reflect the code in Pango\n    \n    Makes it easier to update later.\n\n src/cairo-font-face-twin.c |  179 +++++++++++++++++++++++++++++++++-----------\n src/cairoint.h             |    4 +\n 2 files changed, 138 insertions(+), 45 deletions(-)\n\ncommit 2b4044a36f8b156ca0e58b72614659324a9b022e\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Tue Mar 17 18:52:16 2009 -0400\n\n    [twin] Update parsed weights and stretches from Pango\n\n src/cairo-font-face-twin.c |   64 +++++++++++++++++++++++++++-----------------\n 1 file changed, 39 insertions(+), 25 deletions(-)\n\ncommit 3ec94f9b5917b8f71304c982bd153e5a810f3b12\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Tue Mar 17 00:53:30 2009 -0400\n\n    Support compiling without fontconfig\n    \n    Adds a new, fake, fontconfig font backend.  Fontconfig can be disabled\n    using --disable-fc, in which case the toy text API wont find fonts and\n    the internal font will always be used.\n    \n    Also defines the feature macro CAIRO_HAS_FC_FONT.  The two fontconfig-specific\n    functions in cairo-ft.h depend on that macro now.\n\n boilerplate/Makefile.win32.features |   10 ++++++++\n build/Makefile.win32.features       |    1 +\n build/Makefile.win32.features-h     |    3 +++\n build/configure.ac.features         |    1 +\n configure.ac                        |   26 +++++++++++++--------\n doc/public/cairo-sections.txt       |    1 +\n doc/public/tmpl/cairo-ft.sgml       |    9 ++++++++\n doc/public/tmpl/cairo-status.sgml   |    2 +-\n src/Makefile.win32.features         |   14 ++++++++++++\n src/cairo-ft-font.c                 |   43 +++++++++++++++++++++++++++++------\n src/cairo-ft.h                      |   23 ++++++++++++-------\n src/cairo-os2-surface.c             |    6 +++--\n src/cairo-path-fixed.c              |    2 +-\n src/cairo-scaled-font.c             |    4 ++--\n src/cairo-xlib-display.c            |    2 --\n src/cairo-xlib-screen.c             |   23 ++++++++-----------\n 16 files changed, 125 insertions(+), 45 deletions(-)\n\ncommit 0e7bcb5e3793771d50f7d391d7b1e538ef220a80\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 16 21:32:44 2009 +0000\n\n    [scaled-font] Improve comments.\n    \n    Grr. I thought I had merged this in with the previous commit...\n\n src/cairo-scaled-font.c |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit 9c80392ac415e7f07c71261d280ac4376d3c8471\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 16 19:31:38 2009 +0000\n\n    [scaled-font] Lean and mean global glyph cache.\n    \n    Jeff Muizelaar pointed out that the severe overallocation implicit in the\n    current version of the glyph cache is obnoxious and prevents him from\n    accepting the trunk into Mozilla. Jeff captured a trace of scaled font\n    and glyph usage during a tp run and presented his analysis in\n    http://lists.cairographics.org/archives/cairo/2009-March/016706.html\n    \n    Using that data, the design was changed to allocate pages of glyphs from a\n    capped global pool but with per-font hash tables. This should allow the\n    glyph cache to have tight memory bounds with fair allocation according to\n    usage. Note that both the old design and the 1.8 glyph cache had\n    essentially unbounded memory constraints, since each scaled font could\n    cache up to 256 glyphs (1.8) or had a reserved page (old), with no limit\n    on the number of active fonts. Currently the eviction policy is a simple\n    random strategy, this gives a 'fair' allotment of the cache, but a LRU\n    variant might perform better.\n    \n    On a sample run of firefox-3.0.7 perusing BBC news in 32 languages:\n    1.8:  cache allocation 8190x, ~1.2 MiB; elapsed 88.2s\n    old:  cache allocation 771x, ~13.8 MiB; elapsed 81.7s\n    lean: cache allocation 433x,  ~1.8 MiB; elapsed 82.4s\n\n src/cairo-cache-private.h       |    5 +-\n src/cairo-cache.c               |   39 ++--\n src/cairo-ft-font.c             |    4 +-\n src/cairo-hash-private.h        |    6 +-\n src/cairo-hash.c                |   55 ------\n src/cairo-scaled-font-private.h |    6 +-\n src/cairo-scaled-font.c         |  396 ++++++++++++++++++++-------------------\n src/cairo-types-private.h       |    3 +\n src/cairoint.h                  |    7 +-\n 9 files changed, 232 insertions(+), 289 deletions(-)\n\ncommit 121d4bb656755b7ca89065bf87e3e4e47c49c89d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Mar 16 19:42:47 2009 +0000\n\n    [scaled-font] Initialise original_font_face\n    \n    Eek, attempting to use+free an uninitialised pointer!\n\n src/cairo-scaled-font.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 2df498ba452b188f2f40413c91fec5e5ed9cf967\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Thu Mar 5 23:26:44 2009 -0800\n\n    [gl] Use triangle fan instead of GL_QUADS for the single quad we draw.\n    \n    This saves the driver from converting the quad into tris on its own.  We'd\n    rather be able to specify a rect as 2-3 points and use the rectangular\n    rendering feature that most of our hardware has, if it was possible, but\n    it isn't exposed in GL.\n\n src/cairo-gl-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 9099c7e7307a39bc630919faa65bba089fd15104\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Mar 4 09:26:17 2009 +0000\n\n    [trace] Disable mark dirty tracing.\n    \n    Applications like firefox have a very conservative approach and mark\n    surfaces dirty before every render. As we record the image data every\n    time, firefox traces can grow very large with redundant data - so allow\n    the user to disable mark dirty tracing.\n\n util/cairo-trace/cairo-trace.in |   19 +++++++++++++++----\n util/cairo-trace/trace.c        |   27 ++++++++++++++++++++-------\n 2 files changed, 35 insertions(+), 11 deletions(-)\n\ncommit addeb32c751ac080fe634ea6f83076d018944e4a\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Tue Mar 3 12:20:47 2009 -0500\n\n    [pdf] Intialize 'interpolate'\n    \n    Intialize 'interpolate' to prevent a gcc warning. Do this instead of adding a\n    'default' case to the switch statement so that we still get warnings if new\n    filter types are added.\n\n src/cairo-pdf-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit a8158d443e6a4bafae28a46b883cbdcfd5789eec\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 3 11:21:35 2009 +0000\n\n    [truetype] Move the sizeof asserts to compile time.\n    \n    Eliminate the need for a runtime test on the sizeof the private structures\n    by performing the check at compile time. This was provoked by Ginn Chenn\n    noting that the test was including a private header.\n\n src/cairo-truetype-subset.c |   15 +++++++++++\n test/Makefile.sources       |    1 -\n test/truetype-tables.c      |   63 -------------------------------------------\n 3 files changed, 15 insertions(+), 64 deletions(-)\n\ncommit e4b1f871e9cbb04590df5dc6f6f7854642fa0340\nAuthor: Ginn Chen <Ginn.Chen@Sun.COM>\nDate:   Tue Mar 3 10:27:11 2009 +0000\n\n    [configure] Detect mkdir variant with non-gcc compilers.\n    \n    It doesn't work for non GCC compiler right now, as \"-Werror -Wall\" is\n    an error to non GCC compiler.\n    \n    I swapped the sequence of build/configure.ac.system and build/\n    configure.ac.warnings, then WARN_CFLAGS can be used.\n\n build/configure.ac.system |    2 +-\n configure.ac              |    2 +-\n 2 files changed, 2 insertions(+), 2 deletions(-)\n\ncommit f178f55e47013a92a47a24ac04b1041963b03976\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 3 10:25:05 2009 +0000\n\n    [test/any2ppm] Update the cairo-script-interpreter callback.\n    \n    Reflect the current prototype which now specifies the content to use when\n    creating the surface.\n\n test/any2ppm.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 694f2eea9feecfdc437e6964d1e758fab7315af9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Mar 3 10:24:25 2009 +0000\n\n    [test/any2ppm] Add feature checks for daemon()\n    \n    Add the feature checks for the presence of the daemon() function call.\n\n test/any2ppm.c |    6 +++++-\n 1 file changed, 5 insertions(+), 1 deletion(-)\n\ncommit 9304984f4e20beec7b4de6a4141e2fd489130006\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Mar 1 10:10:24 2009 +0000\n\n    [path] Fix regression introduced with 005436\n    \n    The order of the multiplication of the CTM and device_transform was\n    reversed.\n\n src/cairo-path.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit b30de64a8ca3de7632696f45bdb580217bd9f8a1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Mar 1 10:05:16 2009 +0000\n\n    [test] Add regression test for 005436\n    \n    Jeff Muizelaar found a regression in commit 005436 and submitted this\n    little test to exercise it. The essence of the bug appears to be wrt to\n    the product of the CTM and device transform matrices.\n\n test/Makefile.sources                  |    1 +\n test/path-append.c                     |   81 ++++++++++++++++++++++++++++++++\n test/path-append.ps.ref.png            |  Bin 0 -> 4516 bytes\n test/path-append.ref.png               |  Bin 0 -> 6165 bytes\n test/path-append.test-fallback.ref.png |  Bin 0 -> 6461 bytes\n test/path-append.xlib-fallback.ref.png |  Bin 0 -> 6357 bytes\n test/path-append.xlib.ref.png          |  Bin 0 -> 6461 bytes\n 7 files changed, 82 insertions(+)\n\ncommit e20f1a0c76f2185760ca3a7466e25de6beedeaac\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Feb 27 16:30:05 2009 +0000\n\n    [in-fill] Close the path, cf fill()\n    \n    In order for in-fill treat the path equivalently to a fill, we need to\n    close the path after interpretation.\n\n src/cairo-path-in-fill.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 102ddd37bb329d41241f434ede0f9cba8424e71e\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Thu Feb 26 16:04:49 2009 -0500\n\n    [win32] Include $(OPT) flags when linking cairo.dll\n    \n    This will pass in -Zi which causes the /DEBUG flag to be passed to the\n    linker keeping the debug information from being discarded during link.\n\n src/Makefile.win32 |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit eb2a73ba6d290497cabb0f917c0375eea919178e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Feb 24 20:27:36 2009 +0000\n\n    [ps] Check the status of _cairo_type3_glyph_surface_create()\n    \n    Doing so serves two purposes. The first is to do an early error check and\n    the second is to clearly initialise the status variable.\n\n src/cairo-ps-surface.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 6eb0a9d97ff7eaaee69ca10e4081cb950a543ce3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Feb 15 21:27:29 2009 +0000\n\n    [scaled-font] Hold reference to original font face\n    \n    As noted by Carl during his LCA talk, caching of toy fonts was broken\n    because we create the scaled font using the implementation font face and\n    lose the reference to the containing font face that is cached by the toy\n    font face create routines. So the toy fonts were not being preserved for\n    the duration of the holdover scaled fonts and we recreated a new font\n    face, new scaled font and new glyph caches every time we needed a font.\n\n src/cairo-ft-font.c             |    2 +-\n src/cairo-scaled-font-private.h |    2 ++\n src/cairo-scaled-font.c         |   17 +++++++++++++----\n src/cairo-toy-font-face.c       |    1 +\n 4 files changed, 17 insertions(+), 5 deletions(-)\n\ncommit fe7d5323f5bc734e76179b74d68fcba9b924ba94\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Thu Feb 19 16:00:17 2009 -0500\n\n    Relanding: Add CAIRO_ENSURE_UNIQUE macro and use it in _cairo_error()\n    \n    When using MSVC, _cairo_error() can be folded into other identical functions.\n    If that happens, _cairo_error isn't really useful anymore. Using the\n    CAIRO_ENSURE_UNIQUE macro makes sure this doesn't happen.\n    \n    Use __asm to serve as a line delimiter. This allows us to use the\n    __asm{} block in a macro.\n\n src/cairo-compiler-private.h |   24 ++++++++++++++++++++++++\n src/cairo.c                  |    1 +\n 2 files changed, 25 insertions(+)\n\ncommit 78de0e045ec0c10708052ed48df228e786839ddb\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Thu Feb 19 15:45:11 2009 -0500\n\n    Revert \"Add CAIRO_ENSURE_UNIQUE macro and use it in _cairo_error()\"\n    \n    This reverts commit 126824f5e6279f56dab0c040394b6c326b848cf7.\n    \n    It turns out MSVC doesn't handle line continuation characters in __asm{}\n    blocks very well, so revert for now until I come up with something that\n    works.\n\n src/cairo-compiler-private.h |   24 ------------------------\n src/cairo.c                  |    1 -\n 2 files changed, 25 deletions(-)\n\ncommit 126824f5e6279f56dab0c040394b6c326b848cf7\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Thu Feb 19 13:31:55 2009 -0500\n\n    Add CAIRO_ENSURE_UNIQUE macro and use it in _cairo_error()\n    \n    When using MSVC, _cairo_error() can be folded into other identical functions. If\n    that happens, _cairo_error isn't really useful anymore. Using the\n    CAIRO_ENSURE_UNIQUE macro makes sure this doesn't happen.\n\n src/cairo-compiler-private.h |   24 ++++++++++++++++++++++++\n src/cairo.c                  |    1 +\n 2 files changed, 25 insertions(+)\n\ncommit d4227fc9126ffbb3a967aea1bc9795e7e64ee8e1\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Thu Feb 19 11:45:14 2009 -0500\n\n    [test] Fix assert on default font family in toy-font-face\n    \n    toy-font-face was checking that cairo_toy_font_face_get_family returned \"\"\n    which is CAIRO_FONT_FAMILY_DEFAULT when the freetype font backend is the\n    default. However, when other font backends are the default the returned family\n    is different. Therefore, instead of checking for \"\", we check for the appropriate\n    string depending on the backend.\n\n test/toy-font-face.c |   19 +++++++++++++++----\n 1 file changed, 15 insertions(+), 4 deletions(-)\n\ncommit 06fa7a8386b267fdbd7635b952adc75a58f62584\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Wed Feb 18 18:43:29 2009 -0500\n\n    Fix a const warning in _cairo_user_data_array_foreach()\n    \n    _cairo_user_data_array_foreach() was taking a function\n    with a void *key parameter instead of a const void *key\n    to match cairo_user_data_slot_t.\n\n src/cairo-array.c   |    2 +-\n src/cairo-surface.c |    2 +-\n src/cairoint.h      |    2 +-\n 3 files changed, 3 insertions(+), 3 deletions(-)\n\ncommit f7b3c9df5885a1cd7981ee12b91962bdbfff47af\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Mon Feb 16 22:28:32 2009 -0500\n\n    Add test/Makefile.sources\n    \n    This lets test/Makefile.am and test/Makefile.win32 share a common list of sources.\n    It also makes test/Makefile.win32 useful again.\n\n test/Makefile.am      |  251 ++++---------------------------------------------\n test/Makefile.sources |  251 +++++++++++++++++++++++++++++++++++++++++++++++++\n test/Makefile.win32   |  125 +++++-------------------\n 3 files changed, 293 insertions(+), 334 deletions(-)\n\ncommit e380beae5382df547a1b538de94e90c0e2339141\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Mon Feb 16 14:01:43 2009 +0200\n\n    [sdl] Remove new backend.\n    \n    The SDL backend makes invalid assumptions about SDL_Surface locking\n    semantics and doesn't deal correctly with the unpremultiplied pixel\n    format supported by SDL.  Removed as per discussion on the mailing list.\n    \n    http://lists.cairographics.org/archives/cairo/2009-February/016595.html\n\n boilerplate/Makefile.sources                |    3 -\n boilerplate/Makefile.win32.features         |   10 -\n boilerplate/cairo-boilerplate-sdl-private.h |   56 ----\n boilerplate/cairo-boilerplate-sdl.c         |   69 -----\n boilerplate/cairo-boilerplate.c             |   15 -\n build/Makefile.win32.features               |    1 -\n build/Makefile.win32.features-h             |    3 -\n build/configure.ac.features                 |    1 -\n configure.ac                                |    8 -\n doc/public/tmpl/cairo-surface.sgml          |    1 -\n perf/Makefile.am                            |    4 -\n perf/cairo-perf.c                           |    4 -\n src/Makefile.sources                        |    3 -\n src/Makefile.win32.features                 |   14 -\n src/cairo-sdl-surface.c                     |  418 ---------------------------\n src/cairo-sdl.h                             |   54 ----\n src/cairo.h                                 |    2 -\n test/Makefile.am                            |    4 -\n test/cairo-test-runner.c                    |    4 -\n test/get-clip.c                             |    1 -\n 20 files changed, 675 deletions(-)\n\ncommit 79a72e63585d7fce7898f2c8bd997c6d88f8895f\nAuthor: S\u00f8ren Sandmann Pedersen <sandmann@daimi.au.dk>\nDate:   Mon Feb 16 05:44:15 2009 -0500\n\n    Delete _cairo_region_boxes_fini()\n\n src/cairo-region.c |    6 ------\n 1 file changed, 6 deletions(-)\n\ncommit f6daa664c1b2c894ba3baf2e7a72566bda1fd636\nAuthor: S\u00f8ren Sandmann <sandmann@daimi.au.dk>\nDate:   Sun Feb 15 18:55:17 2009 -0500\n\n    Delete _cairo_region_get_boxes() in favor of _cairo_region_get_box()\n    \n    The _cairo_region_get_boxes() interface was difficult to use and often\n    caused unnecessary memory allocation. With _cairo_region_get_box() it\n    is possible to access the boxes of a region without allocating a big\n    temporary array.\n\n src/cairo-clip.c              |   21 ++++++++----------\n src/cairo-directfb-surface.c  |   21 ++++++++----------\n src/cairo-paginated-surface.c |   19 +++++++---------\n src/cairo-region-private.h    |   10 +++------\n src/cairo-region.c            |   39 +++++++++------------------------\n src/cairo-sdl-surface.c       |   21 ++++++++----------\n src/cairo-surface.c           |   44 +++++++++++++++----------------------\n src/cairo-win32-surface.c     |   48 ++++++++++++++++++++---------------------\n src/cairo-xcb-surface.c       |   26 ++++++++++------------\n src/cairo-xlib-surface.c      |   31 +++++++++++---------------\n 10 files changed, 112 insertions(+), 168 deletions(-)\n\ncommit 54228cb5fe0c41b10f0ec4a206b5fac28823cde6\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Sun Feb 15 14:29:55 2009 -0800\n\n    [gl] Use textures and not fbo-based surfaces for image surface patterns.\n    \n    This cuts the BO allocation overhead for traps in more than half, and reduces\n    the load on the accelerator.\n\n src/cairo-gl-surface.c |  191 ++++++++++++++++++++++++++++++++++++++++++++----\n 1 file changed, 176 insertions(+), 15 deletions(-)\n\ncommit fcb13d262c5a09e56dc25c76103ef4ba623929ff\nAuthor: S\u00f8ren Sandmann Pedersen <sandmann@daimi.au.dk>\nDate:   Sun Feb 15 15:59:10 2009 -0500\n\n    Simplify region handling in xlib surface\n\n src/cairo-xlib-surface.c |   11 +++--------\n 1 file changed, 3 insertions(+), 8 deletions(-)\n\ncommit b43e7aee98a8d69677f7e6d2584fe01f550f896b\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Fri Feb 13 12:15:23 2009 -0500\n\n    [wince] We don't need cairo_win32_tmpfile on Windows CE\n    \n    _cairo_win32_tmpfile() uses _open_osfhandle() which is not available\n    on Windows CE. However, Windows CE doesn't have the permisions problems\n    that necessitated _cairo_win32_tmpfile() in the first place so we can just\n    use tmpfile() on Windows CE.\n\n src/cairo-misc.c |    5 ++++-\n src/cairoint.h   |    2 +-\n 2 files changed, 5 insertions(+), 2 deletions(-)\n\ncommit fa66291c8862ed592fca469ceab0ac9b1d270835\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jan 28 14:22:58 2009 +0000\n\n    [perf] Test non-antialiased fill.\n    \n    Just because the i915 can special case such fills using a single-pass\n    tessellation in the stencil buffer.\n\n perf/fill.c |   21 +++++++++++++++++++++\n 1 file changed, 21 insertions(+)\n\ncommit aab9ed3432f0ea7b8b24990de4aa134bb599a3e5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 30 10:22:47 2009 +0000\n\n    [perf] Env variable to ignore similar targets whilst benchmarking.\n    \n    Use CAIRO_TEST_IGNORE_SIMILAR to skip similar targets.\n\n perf/cairo-perf.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 655f6987334b991763a5ab7746dbfd73c6b05f3e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Feb 6 20:11:17 2009 +0000\n\n    [perf] Split can_run? into a separate precondition.\n    \n    Allow tests to skip unnecessary setup when pruning the list of perf cases.\n\n perf/box-outline.c           |    3 +++\n perf/cairo-perf.c            |   24 ++++++++++++++++--------\n perf/cairo-perf.h            |    4 ++++\n perf/composite-checker.c     |    3 +++\n perf/dragon.c                |    3 +++\n perf/fill.c                  |    3 +++\n perf/intersections.c         |    3 +++\n perf/long-dashed-lines.c     |    3 +++\n perf/long-lines.c            |    3 +++\n perf/mosaic.c                |    3 +++\n perf/paint-with-alpha.c      |    3 +++\n perf/paint.c                 |    3 +++\n perf/pattern_create_radial.c |    3 +++\n perf/pythagoras-tree.c       |    3 +++\n perf/rectangles.c            |    3 +++\n perf/rounded-rectangles.c    |    3 +++\n perf/spiral.c                |    3 +++\n perf/stroke.c                |    3 +++\n perf/subimage_copy.c         |    3 +++\n perf/tessellate.c            |    3 +++\n perf/text.c                  |    3 +++\n perf/twin.c                  |    3 +++\n perf/unaligned-clip.c        |    3 +++\n perf/world-map.c             |    3 +++\n perf/zrusin.c                |    3 +++\n 25 files changed, 89 insertions(+), 8 deletions(-)\n\ncommit 798581a1b5a8a56ce9d16c5b21eab82851061732\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 30 22:12:49 2009 +0000\n\n    [perf] Extend range of testing.\n    \n    Primarily to test longer glyph runs, but also test large upper bounds for\n    strokes and fills.\n\n perf/cairo-perf.c |   10 +++++-----\n 1 file changed, 5 insertions(+), 5 deletions(-)\n\ncommit 1522fac5c71708fc9e98e03da9f51926c1e3769c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Feb 3 17:18:53 2009 +0000\n\n    [perf] Fix infinite loop in text\n    \n    The row would wrap-around with the character index, causing an infinite\n    loop when trying to fill a window of size 512x512 and above.\n\n perf/text.c |    7 +++----\n 1 file changed, 3 insertions(+), 4 deletions(-)\n\ncommit 187e3473512e40fa1d046783e797ec3a198b09b2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Feb 13 13:09:32 2009 +0000\n\n    [test] Free ref_name in fallback-resolution.\n    \n    Trivial leak of a few thousand bytes.\n\n test/fallback-resolution.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 005436758c5679f76cc462841678fb93d6c7e0ac\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Feb 3 10:20:26 2009 +0000\n\n    [path] Inline path ops during append_to_context()\n    \n    By inlining the operations, and most significantly, precomputing the\n    combined user-to-backend matrix, we can achieve a speed up of over 50%,\n    which is a noticeable performance boost in swfdec - where append-to-path\n    accounts for over 35% [inclusive] of the time for a h/w accelerated\n    backend.\n\n src/cairo-path.c |   76 +++++++++++++++++++++++++++++++++++++++++-------------\n 1 file changed, 58 insertions(+), 18 deletions(-)\n\ncommit d295942b9d4da3be3318cd5fe2d3b0b1fe005d11\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jan 31 00:56:45 2009 +0000\n\n    Inline _cairo_restrict_value()\n    \n    This is one instance where the function call overhead dominated the\n    function call in both time and size.\n\n src/cairo-misc.c    |    9 ---------\n src/cairo-pattern.c |   32 ++++++++++++++++----------------\n src/cairo.c         |   14 ++++++++------\n src/cairoint.h      |   13 +++++++++++--\n 4 files changed, 35 insertions(+), 33 deletions(-)\n\ncommit cc8a09567ca034e7d95e2ef8a3ec833b12c9f87a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Feb 13 13:23:50 2009 +0000\n\n    [surface] Move the meta-data copy-on-snapshot to the generic layer.\n    \n    As pointed out by Paolo Bonzini, copying the meta data for a snapshot is\n    common for all backends and so should be handled by the generic layer.\n\n src/cairo-surface-fallback.c |   11 -----------\n src/cairo-surface.c          |   30 +++++++++++++++++++++++++++---\n 2 files changed, 27 insertions(+), 14 deletions(-)\n\ncommit adaf70a93f4449e85997bcde531b76c9044758ea\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Feb 13 12:56:46 2009 +0000\n\n    [surface] Separate the mime-data from the user-data.\n    \n    Move the mime-data into its own array so that it cannot be confused with\n    user-data and we do not need to hard-code the copy list during\n    snapshotting. The copy-on-snapshotting code becomes far simpler and will\n    accommodate all future mime-types.\n    \n    Keeping mime-data separate from user-data is important due to the\n    principle of least surprise - the API is different and so it would be\n    surprising if you queried for user-data and were returned an opaque\n    mime-data pointer, and vice versa. (Note this should have been prevented\n    by using interned strings, but conceptually it is cleaner to make the\n    separation.) Also it aides in trimming the user data arrays which are\n    linearly searched.\n    \n    Based on the original patch by Adrian Johnson:\n    http://cgit.freedesktop.org/~ajohnson/cairo/commit/?h=metadata&id=37e607cc777523ad12a2d214708d79ecbca5b380\n\n src/cairo-array.c            |   36 ++++++++++++++++++++++++++++++++++++\n src/cairo-surface-fallback.c |   27 +++++++--------------------\n src/cairo-surface-private.h  |    1 +\n src/cairo-surface.c          |   42 +++++++++++++++++++++---------------------\n src/cairoint.h               |   14 ++++++++++++--\n 5 files changed, 77 insertions(+), 43 deletions(-)\n\ncommit 2280de9d0282a599309ec12dc576bae54857f873\nMerge: 17ce858 de7270c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Feb 13 10:08:21 2009 +0000\n\n    Merge branch '1.8'\n\ncommit de7270cb1e9510cb230e80045c812fa68fcfa585\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Feb 13 10:03:22 2009 +0000\n\n    [cairo] Describe the restrictions upon cairo_set_tolerance()\n    \n    Truc Troung reported that the behaviour of\n    cairo_set_tolerance()/cairo_get_tolerance() was inconsistent with the\n    documentation, i.e. we failed to mention that the tolerance would be\n    restricted to the smalled fixed-point value.\n    \n    Add a sentence to the documentation that describes the restriction without\n    mentioning what that is... Hopefully that is sufficient detail to\n    accommodate the reporter, without exposing internal implementation details.\n    \n    Fixes https://bugs.freedesktop.org/show_bug.cgi?id=20095\n    Bug 20095 - The cairo_set_tolerance() function behavior is inconsistency\n    with the spec\n\n src/cairo.c |    5 ++++-\n 1 file changed, 4 insertions(+), 1 deletion(-)\n\ncommit 17ce8584e7142d13bd7a777c9570e5548a06a90c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Feb 12 18:26:57 2009 +0000\n\n    [NEWS] Add API changes.\n    \n    Scan the public headers for obvious additions.\n\n NEWS |   20 +++++++++++++++++++-\n 1 file changed, 19 insertions(+), 1 deletion(-)\n\ncommit 2df611a3810eb64c8ed22dfae5f3d3157eef7e6a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Feb 10 10:28:28 2009 +0000\n\n    [script] Expose a normal xlib window for replay\n    \n    Provide a visible surface for replaying scripts against.\n\n util/cairo-script/csi-replay.c |  122 ++++++++++++++++++++++------------------\n 1 file changed, 66 insertions(+), 56 deletions(-)\n\ncommit 8e1f103540392b17c51b4fb4b3c3480430cbc212\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Thu Feb 12 12:02:17 2009 -0500\n\n    Divert pclose to _pclose for MSVC\n    \n    Commit bf62798b1284533e28b78717dac8070ca6d29e54 added a diversion for\n    popen but not for pclose. This is needed for linking the boilerplate\n    with the test suite.\n\n src/cairo-compiler-private.h |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 4c6e7a16032fb223f4224d4355c2ea046cd8fc4b\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Wed Feb 11 05:09:23 2009 -0800\n\n    [gl] Add support for constant color directly, not through a texture.\n\n src/cairo-gl-surface.c |  337 +++++++++++++++++++++++++++++++++++-------------\n 1 file changed, 248 insertions(+), 89 deletions(-)\n\ncommit 31fb7382d22c9293c093b60716ee4e393fa0d5cf\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Wed Feb 11 05:09:51 2009 -0800\n\n    [gl] Fix some memory leaks on boilerplate-based runs.\n\n boilerplate/cairo-boilerplate-gl.c |    4 ++++\n 1 file changed, 4 insertions(+)\n\ncommit df96fc1f92b68ef3e76750d0891377980e039b09\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Mon Feb 9 15:42:09 2009 -0800\n\n    [gl] Avoid re-binding the same draw buffer.\n    \n    The driver could be smarter and avoid a lot of the cost, but this is easy\n    and avoids needing much driver smarts.\n\n src/cairo-gl-surface.c |   30 ++++++++++++++++++++----------\n 1 file changed, 20 insertions(+), 10 deletions(-)\n\ncommit fb6937565be558e7ff8ba3dd815a427721783cba\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Mon Feb 9 15:30:21 2009 -0800\n\n    [gl] Add interface for creating surfaces from window backbuffers.\n\n src/cairo-gl-surface.c |   85 +++++++++++++++++++++++++++++++++++++++++++++---\n src/cairo-gl.h         |    9 +++--\n 2 files changed, 85 insertions(+), 9 deletions(-)\n\ncommit 6cc3d8dcc0fe418c56a519180163bd49fbdb9730\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Mon Feb 9 12:30:20 2009 -0800\n\n    [gl] Fix unantialiased-shapes tests.\n\n src/cairo-gl-surface.c |   13 ++++++++++---\n 1 file changed, 10 insertions(+), 3 deletions(-)\n\ncommit 23a8c58dc13bd9ff44f235bee8e4e7240831728a\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Thu Feb 5 11:00:59 2009 -0800\n\n    [gl] Fix infinite recursion on compositing A1 images.\n    \n    We could do this fast, but let's do it correct first.\n\n src/cairo-gl-surface.c |   28 ++++++++++++++++++++++++++++\n 1 file changed, 28 insertions(+)\n\ncommit b6dde667fa1c72c6da1970244c4f28c48a38f493\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Mon Feb 2 23:22:49 2009 -0800\n\n    [gl] Add support for composite and composite_trapezoids.\n    \n    This is a simple implementation that uses GL_ARB_texture_env_combine after\n    converting everything to GL surfaces (FBOs).\n\n src/cairo-gl-surface.c |  375 +++++++++++++++++++++++++++++++++++++++++++++++-\n 1 file changed, 373 insertions(+), 2 deletions(-)\n\ncommit 38a1061bbcf3e69acc05c35f2084d462b43f5477\nMerge: b3e2433 e7d4bc3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Feb 12 10:46:29 2009 +0000\n\n    Merge branch '1.8'\n\ncommit e7d4bc3d864b1b42bb1cae031036ddf6a4445d3c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Feb 12 10:42:24 2009 +0000\n\n    [png] Correct documentation to avoid reference to NULL\n    \n    As pointed out by Truc Truong,\n    cairo_image_surface_create_from_png_stream() cannot return NULL and so the\n    documentation was incorrect.\n    \n    Fixes http://bugs.freedesktop.org/show_bug.cgi?id=20075\n    Bug 20075 There is a misprint in the spec for\n    cairo_image_surface_create_from_png_stream() function\n\n src/cairo-png.c |   17 +++++++++++++++--\n 1 file changed, 15 insertions(+), 2 deletions(-)\n\ncommit b3e2433f1e78e8799a9f57bfb6da108016687fc9\nAuthor: S\u00f8ren Sandmann <sandmann@redhat.com>\nDate:   Wed Feb 11 17:55:15 2009 -0500\n\n    Correct the reference image for the rotate-image-surface-paint test\n\n test/rotate-image-surface-paint.ref.png |  Bin 190 -> 191 bytes\n 1 file changed, 0 insertions(+), 0 deletions(-)\n\ncommit 41cbd935f9dba276db716e2c71ac21dc60505be9\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Wed Feb 11 15:24:20 2009 -0500\n\n    [test] Add cairo_test_NaN and use it in place of strtod\n    \n    strtod(\"NaN\") returns 0.0 with the MSVC runtime so we\n    need to generate NaN some other way.\n\n test/cairo-test.h        |   15 +++++++++++++++\n test/invalid-matrix.c    |    2 +-\n test/user-font-rescale.c |    2 +-\n 3 files changed, 17 insertions(+), 2 deletions(-)\n\ncommit 70297f257d4dc0accb5183b806d43a033887acb7\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Tue Feb 10 17:58:28 2009 -0500\n\n    [test] Add crtdbg.h include\n    \n    crtdbg.h is required for _CrtSetReportMode() and _CrtSetReportFile().\n\n test/cairo-test-runner.c |    4 ++++\n 1 file changed, 4 insertions(+)\n\ncommit b9f0c4b25223830ce73f7e3adef85a0e97a31c0e\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Tue Feb 10 17:57:00 2009 -0500\n\n    Use _cairo_round() instead of round()\n    \n    MSVC doesn't have round() and the code probably wants\n    to round in the same direction regardless of whether\n    the values are negative or positive.\n\n src/cairo-font-face-twin.c |    6 ++----\n 1 file changed, 2 insertions(+), 4 deletions(-)\n\ncommit dffdbd85157395bceb27d30d6426aa47173f6a18\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Tue Feb 10 17:53:39 2009 -0500\n\n    Add _cairo_round()\n    \n    _cairo_round() has the same behaviour as _cairo_lround() except\n    it returns a double instead of an integer.\n\n src/cairoint.h |    9 +++++++++\n 1 file changed, 9 insertions(+)\n\ncommit 41e46c7754fff3a99927979925300a7588b9962f\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Tue Feb 10 11:44:20 2009 -0500\n\n    [test] Don't embed preprocessor directives inside macros\n    \n    MSVC can't handle this. GCC will warn with -pedantic, but I'm not\n    sure we want to enable that.\n\n test/user-font-mask.c  |   11 ++++++-----\n test/user-font-proxy.c |   10 +++++-----\n test/user-font.c       |   10 +++++-----\n 3 files changed, 16 insertions(+), 15 deletions(-)\n\ncommit fe40d3bdb0d0cb93169b935e44d14b15e014fa6d\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Mon Feb 9 23:43:04 2009 -0500\n\n    [test] Allocate glyph array with malloc\n    \n    Keeping it on the stack causes a stack overflow of Window's\n    default 1mb stack.\n\n test/show-glyphs-many.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 50f8c2e4f3407ef237afd94c7317b1e185ccc9dc\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Mon Feb 9 23:39:38 2009 -0500\n\n    [test] define isnan() on MSVC\n    \n    Needed for user-font-rescale.c\n\n test/cairo-test.h |    4 ++++\n 1 file changed, 4 insertions(+)\n\ncommit dd9fc47418b86610d7896fcf585037c96beaa66f\nAuthor: Jeff Muizelaar <jeff@infidigm.net>\nDate:   Mon Feb 9 16:31:08 2009 -0500\n\n    Remove zero size data array for compilation with MSVC\n    \n    MSVC doesn't support zero sized arrays very well. For example, zero\n    sized arrays in arrays.\n\n src/cairo-tor-scan-converter.c |    5 ++---\n 1 file changed, 2 insertions(+), 3 deletions(-)\n\ncommit a6c8f18a391407044b33340cf13c49368a2e810e\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Mon Feb 9 15:59:01 2009 -0500\n\n    [test] Avoid C99 designated initializers\n    \n    MSVC doesn't support these so we shouldn't use them.\n\n test/path-precision.c |   20 ++++++++++----------\n 1 file changed, 10 insertions(+), 10 deletions(-)\n\ncommit 3d2fcec948b93f75ba49b898633a84f60d419779\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Mon Feb 9 15:12:41 2009 -0500\n\n    [test] Define INFINITY on MSVC\n    \n    1./0. produces a compiler error on MSVC so we'll use HUGEVAL instead.\n\n test/cairo-test.h     |    3 ---\n test/invalid-matrix.c |    4 ++--\n 2 files changed, 2 insertions(+), 5 deletions(-)\n\ncommit 6fb4c6200c840d438e1c9cdd2c9e7b0f140863d8\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Thu Feb 5 10:29:01 2009 -0800\n\n    [gl] Clamp surface size to a minimum of (1,1) in create_similar.\n    \n    Fixes clip-zero test.\n\n src/cairo-gl-surface.c |    5 +++++\n 1 file changed, 5 insertions(+)\n\ncommit a8a40810275ff0a59f5767034372523d34fbbd1b\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Thu Feb 5 09:43:38 2009 -0800\n\n    [gl] clear surfaces to transparent on creation\n\n src/cairo-gl-surface.c |    7 +++++++\n 1 file changed, 7 insertions(+)\n\ncommit e7eb6dab12b9d622b80e4202d753324f7161b269\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Thu Jan 29 22:31:56 2009 -0800\n\n    [gl] Hook up fill_rectangles.\n    \n    First actual \"acceleration\" for cairogears.  Actually slows things down since\n    we're now pingponging between cpu and gpu.\n\n src/cairo-gl-surface.c |  119 +++++++++++++++++++++++++++++++++++++++++++++++-\n 1 file changed, 118 insertions(+), 1 deletion(-)\n\ncommit 2ad5c3fc8fdb5941bdedcda3c972b3bae426fb32\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Wed Feb 4 13:10:47 2009 -0800\n\n    [gl] Add a shortcut from image to gl in clone_similar.\n\n src/cairo-gl-surface.c |   27 +++++++++++++++++++++++++++\n 1 file changed, 27 insertions(+)\n\ncommit d9d56bb2ed552dd40415af53105a98b9d6ba39ab\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Wed Feb 4 13:06:31 2009 -0800\n\n    [gl] Make create_similar actually create similar instead of image.\n\n src/cairo-gl-surface.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 90b30219b945d6cce941a1b702c9b789a60d8b27\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Thu Jan 29 22:27:39 2009 -0800\n\n    [gl] Replace all-software implementation with all-GL-read/drawpixels.\n\n src/cairo-gl-surface.c |  315 +++++++++++++++++++++++++++++++++++++++++++-----\n 1 file changed, 282 insertions(+), 33 deletions(-)\n\ncommit c22ca79863a54b4293e607c8e4d515868c216842\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Feb 6 12:56:48 2009 -0500\n\n    Don't distribute cairo-features.h (#19992)\n    \n    Second time I fix this bug.  Mabe we should add a test for it!\n\n src/Makefile.am |    7 +++----\n 1 file changed, 3 insertions(+), 4 deletions(-)\n\ncommit a55655a82de8dee0f171efb2f7dfb1da341ecdd6\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Feb 6 12:47:38 2009 -0500\n\n    [test] Fix \"make dist\"\n\n doc/public/tmpl/cairo-status.sgml |    1 +\n test/Makefile.am                  |    1 -\n 2 files changed, 1 insertion(+), 1 deletion(-)\n\ncommit af5ca7249f7628a8b0758f51934e3c1f6d9f4f36\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Thu Feb 5 16:46:50 2009 -0500\n\n    [test] Fix the definition of INFINITY\n    \n    In my defence, even with INFINITY as 0, I was seeing new asserts on win32.\n    Caught by Jeremy Lea.\n\n test/invalid-matrix.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 235de8d7a492ccd132fb83f78d33b408bd76aec1\nAuthor: Eric Anholt <eric@anholt.net>\nDate:   Thu Jan 29 09:19:01 2009 -0800\n\n    [gl] Add basics for GL surface backend using test-fallback as base.\n\n boilerplate/Makefile.sources               |    3 +\n boilerplate/Makefile.win32.features        |   10 +\n boilerplate/cairo-boilerplate-gl-private.h |   59 ++++++\n boilerplate/cairo-boilerplate-gl.c         |  124 ++++++++++++\n boilerplate/cairo-boilerplate.c            |   25 +++\n build/Makefile.win32.features              |    1 +\n build/Makefile.win32.features-h            |    3 +\n build/configure.ac.features                |    1 +\n configure.ac                               |    7 +\n perf/cairo-perf.c                          |    1 +\n src/Makefile.sources                       |    4 +\n src/Makefile.win32.features                |   14 ++\n src/cairo-gl-surface.c                     |  287 ++++++++++++++++++++++++++++\n src/cairo-gl.h                             |   89 +++++++++\n src/cairo-mutex-list-private.h             |    4 +\n src/cairo.h                                |    4 +-\n 16 files changed, 635 insertions(+), 1 deletion(-)\n\ncommit 83ec4b16b7b9a27439fee2d84c50e30a1ec2d68c\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Wed Feb 4 14:04:05 2009 -0500\n\n    Elaborate the meaning of arithmetic rounding as done by _cairo_lround()\n\n src/cairo-misc.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 2676b3bdd6fbeef62d34c100718f76fe5bbe647d\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Tue Feb 3 14:18:44 2009 -0500\n\n    [test] Define INFINITY if it hasn't been defined.\n    \n    This lets us use more of invalid-matrix on win32\n\n test/cairo-test.h     |    3 +++\n test/invalid-matrix.c |   22 ++--------------------\n 2 files changed, 5 insertions(+), 20 deletions(-)\n\ncommit 6b0c2c8ba61b6fdaad4c77e1a7c02c13c70e03c4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jan 31 11:58:19 2009 +0000\n\n    [directfb] Don't access the scaled_font->glyphs cache directly\n    \n    Not only does it no longer exist, but doing so bypassed the locking\n    mechanisms and sanity checks!\n    \n    Spotted by Lance Hepler.\n\n src/cairo-directfb-surface.c |   20 ++++++++++----------\n 1 file changed, 10 insertions(+), 10 deletions(-)\n\ncommit d63c1ab3ffcb64220a05c80e674324f524f29dc2\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Sat Jan 31 22:10:57 2009 -0500\n\n    [util/malloc-stats] Do a single backtrace_symbols() call\n    \n    I was hoping that this may speed things up, but it didn't.  :(\n\n util/malloc-stats.c |   58 ++++++++++++++++++++++++++++++++++++++++++++-------\n 1 file changed, 50 insertions(+), 8 deletions(-)\n\ncommit 64d1c7587041f765b393e1802a10cce02b807ad1\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Sat Jan 31 21:34:21 2009 -0500\n\n    [util] Fix memset bug in malloc-stats\n\n util/malloc-stats.c |    9 ++++-----\n 1 file changed, 4 insertions(+), 5 deletions(-)\n\ncommit b02aeb367dc4bada5412798fa93ce74f3d861273\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Sat Jan 31 21:33:42 2009 -0500\n\n    [util] Don't link backtrace-symbols into malloc-stats\n    \n    On my rawhide machine, seems like the glibc backgrace-symbols is now as\n    good as our private backtrace-symbols.\n\n util/Makefile.am |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 7375f4c76bb169cc24d5d714520c337172d3cf69\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 30 21:54:56 2009 +0000\n\n    Trivial warning fixes.\n    \n    Cleanup a few compiler warnings about unused variables and mismatching\n    pointer types.\n\n src/cairo-bentley-ottmann.c |    1 -\n src/cairo-ps-surface.c      |    4 ++--\n 2 files changed, 2 insertions(+), 3 deletions(-)\n\ncommit f10eaadf89fa94172a81c05a59febab3f7e32396\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 30 21:50:24 2009 +0000\n\n    Revert \"[png] Complete the idempotent read_png() -> write_png()\"\n    \n    This reverts commit 564d64a1323c5cbcde2dd9365ac790fe8aa1c5a6.\n    \n    In hindsight, and with further discussion with Jeff Muizelaar, this\n    behaviour of using the stored contents from the mime-data is completely\n    the opposite of the users' expectations. When the user calls\n    cairo_surface_write_to_png(), usually in the course of debugging their\n    rendering code, they expect the precise contents of the surface to be\n    saved.\n\n src/cairo-png.c |   14 --------------\n 1 file changed, 14 deletions(-)\n\ncommit dd11d905a54a123ddf619e5f0194fb1800ba643d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 30 10:09:29 2009 +0000\n\n    [util] Use a hash-table for malloc-stats.\n    \n    At Behdad's request, convert the array of allocators into a simple hash\n    table (large static number of buckets + chaining) in order to speed up\n    malloc profiling.\n\n util/malloc-stats.c |  150 +++++++++++++++++++++++++++++++++++----------------\n 1 file changed, 103 insertions(+), 47 deletions(-)\n\ncommit 322fb00066cc4655122fcf7d738a0cbbe46fcdd1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jan 29 22:05:06 2009 +0000\n\n    [test] Compile again without memfault.\n    \n    Hide the valgrind macro when not using memfault.\n\n test/cairo-test.c |   26 ++++++++++++++++----------\n 1 file changed, 16 insertions(+), 10 deletions(-)\n\ncommit 5e6d25e204b681c5d5fba90abfe4d7401f23460f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 17 20:47:09 2008 +0000\n\n    [skiplist] Provide an initial stack allocated pool.\n    \n    Since we only need to allocate elts for intersection events and edges, the\n    number of elts in flight at any one time is actually quite small and can\n    usually be accommodated from an embedded pool.\n\n src/cairo-bentley-ottmann.c  |   33 ++++++++++-----------------------\n src/cairo-skiplist-private.h |    9 +++++----\n src/cairo-skiplist.c         |   13 ++++++-------\n 3 files changed, 21 insertions(+), 34 deletions(-)\n\ncommit dd4276c6618aa250637e4499bc7cb0a35b24448c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Nov 30 13:49:24 2008 +0000\n\n    [stroker] Rectilinear dashing.\n    \n    Extend the rectilinear stroker to handle dashes, so that for pixel-aligned\n    dashed strokes we completely avoid tessellation overhead.\n\n src/cairo-matrix.c                      |    3 +-\n src/cairo-path-stroke.c                 |  492 +++++++++++++++++++++++++------\n src/cairo-pen.c                         |   11 +-\n src/cairo-stroke-style.c                |   18 +-\n src/cairoint.h                          |   11 +-\n test/Makefile.am                        |    4 +-\n test/leaky-dashed-rectangle.pdf.ref.png |  Bin 0 -> 347 bytes\n test/leaky-dashed-rectangle.ps.ref.png  |  Bin 0 -> 444 bytes\n test/leaky-dashed-rectangle.ps2.ref.png |  Bin 444 -> 0 bytes\n test/leaky-dashed-rectangle.ps3.ref.png |  Bin 444 -> 0 bytes\n test/leaky-dashed-rectangle.ref.png     |  Bin 366 -> 347 bytes\n 11 files changed, 437 insertions(+), 102 deletions(-)\n\ncommit 7f95288c03a400bf770165d427ef623d924b3b47\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jan 29 09:47:01 2009 +0000\n\n    [ft] Improve error status propagation.\n    \n    Propagate the error status from deep within the bowels, in order to reduce\n    the number of duplicate _cairo_error() and generally clean up the return\n    values.\n\n src/cairo-ft-font.c |   65 +++++++++++++++++++++++++--------------------------\n 1 file changed, 32 insertions(+), 33 deletions(-)\n\ncommit 53bd2ae2ce27f9b954f34bc9921d798c9a074125\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 26 21:36:27 2009 +0000\n\n    [ft] Distinguish fatal backend errors whilst constructing scaled fonts.\n    \n    We now have the ability to distinguish an error case where the backend is\n    left in an inconsistent state from a transitory error. For the former we\n    need to report the error condition via the return value, which will be\n    propagated to the font-face. For the latter we just construct an in-error\n    scaled font nil-object which is passed back to the user.\n\n src/cairo-ft-font.c |   38 ++++++++++++++++++++++++++------------\n 1 file changed, 26 insertions(+), 12 deletions(-)\n\ncommit f17aeedab31753974cce027f92571107425b1bcd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 26 21:11:41 2009 +0000\n\n    [scaled-font] Differentiate fatal error when creating fonts\n    \n    We only want to set the error state on the backend when it implies that\n    the font-face is in an inconsistent state. For example, this may be due to\n    a locking error in the backend or that we have detected a corrupt font.\n    \n    In contrast, if we merely fail to allocated the scaled font then we just\n    wish to return that error to the user, without making the font-face itself\n    inert.\n\n src/cairo-scaled-font.c |    8 +++++++-\n 1 file changed, 7 insertions(+), 1 deletion(-)\n\ncommit 58cab06c4c2c49bbecb11efaae6b41d30c06eff0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 26 20:52:29 2009 +0000\n\n    [scaled-font] Guard against invalid matrices when creating the scaled font.\n    \n    Check the user input for validity before passing the values on to the\n    backend. Currently the error is detected by the backend and the error is\n    propagated onto the font-face.\n\n src/cairo-scaled-font.c |   22 ++++++++++++++++++++--\n 1 file changed, 20 insertions(+), 2 deletions(-)\n\ncommit 97c88f2af04b6bc5161fa2b567b5e922d7fd326a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 26 20:51:02 2009 +0000\n\n    [surface] Fix memleak of along set_mime_data() error path\n    \n    Free the mime_data holder if we fail to attach it to the surface.\n\n src/cairo-surface.c |    8 ++++++--\n 1 file changed, 6 insertions(+), 2 deletions(-)\n\ncommit d20e5fc2d95c61ab04e085bf3a99d2cb958421a5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 26 15:08:58 2009 +0000\n\n    [ps] Free images after emitting patterns.\n    \n    Ensure that the temporary images are freed after we finish with the\n    pattern.\n    \n    Note that we are using 3 members of the surface for temporary storage\n    whilst emitting patterns, this should be reviewed.\n\n src/cairo-ps-surface-private.h |    3 +++\n src/cairo-ps-surface.c         |   18 ++++++++++++++++--\n 2 files changed, 19 insertions(+), 2 deletions(-)\n\ncommit e6102dbe028ca93db936b2f4cd6368e2ba0a2209\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 26 14:00:13 2009 +0000\n\n    [png] Avoid a double free of the memory stream after error.\n    \n    _cairo_memory_stream_destroy() finalizes the stream even if the stream was\n    in error and that error is reported back to the caller - so ensure we\n    don't try to free the stream again.\n\n src/cairo-png.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 0f3e366f8bbbaa80b518eb1b0297a6122901ce66\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 26 10:54:45 2009 +0000\n\n    [font-face] Close a race when resurrecting fonts.\n    \n    Paul Messmer provided a thorough analysis of a race between destroying the\n    final reference on a font and a concurrent recreation of the font -\n    demonstrating how it is possible for the create() to return the font that\n    was in the process of being freed.\n    \n    To stop the race, we need to recheck the reference count upon taking the\n    mutex guarding the hash table.\n\n src/cairo-ft-font.c       |    6 ++++++\n src/cairo-toy-font-face.c |    6 ++++++\n 2 files changed, 12 insertions(+)\n\ncommit 312b5680a5754c8e7ee1332206b81449cf9bf8a3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 23 21:13:15 2009 +0000\n\n    [cff-subset] Free ps_name.\n    \n    Ensure ps_name is freed along error paths and by the normal destructor.\n\n src/cairo-cff-subset.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 5176507fcb61ae1ec1143aa0b6b098bc92575c48\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 23 13:37:54 2009 +0000\n\n    [truetype] Free font name.\n    \n    Remember to free the font name on destruction.\n\n src/cairo-truetype-subset.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit ab0ac1b8a84b0d259602f0029a3b5552466f35a6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jan 29 09:45:11 2009 +0000\n\n    [truetype] Initialise font_name\n    \n    Ensure the font_name is initialized to NULL.\n\n src/cairo-cff-subset.c      |    2 ++\n src/cairo-truetype-subset.c |    1 +\n 2 files changed, 3 insertions(+)\n\ncommit 8388af137841679b7c510980daf3cec1427b6e6b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jan 29 09:50:38 2009 +0000\n\n    [test] Trivial fixes for error paths.\n    \n    Kill a few leaks along error paths in the test code.\n\n test/create-from-png-stream.c |   36 ++++++++++++++++++++++++++++--------\n test/mime-data.c              |    4 ++++\n 2 files changed, 32 insertions(+), 8 deletions(-)\n\ncommit 3752f690b467432ab5b1058d450cb79d719a794a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jan 29 09:49:41 2009 +0000\n\n    [test] Suppress suppressed memfault report\n    \n    Check to see if there are any *unsuppressed* memfaults before declaring\n    unreported faults.\n\n test/cairo-test.c |   11 +++++++++--\n 1 file changed, 9 insertions(+), 2 deletions(-)\n\ncommit 8dc4c0da9b13b16c593e874d59c13a89a77a2481\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 23 13:17:24 2009 +0000\n\n    [toy-font] Fix unwind behaviour following error during construction.\n    \n    We failed to cleanup the font face correctly after an allocation failure\n    during _cairo_toy_font_face_init() leading to memleaks and live entries\n    being left in the font-face hash tables.\n\n src/cairo-toy-font-face.c |   43 +++++++++++++++++++++----------------------\n 1 file changed, 21 insertions(+), 22 deletions(-)\n\ncommit 1d52fbc8f4f70e9e2419a6ed66cd907552d1d13b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 23 12:51:52 2009 +0000\n\n    [tessellator] Memleak on error path.\n    \n    Add a missing _cairo_skip_list_fini() after failure to allocate the\n    events.\n\n src/cairo-bentley-ottmann.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 6b5d2bf1a742b34a58d65f188fe15ffbf2f83118\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 23 10:42:42 2009 +0000\n\n    [trace] Comment out the redundant wrapping of FT_Open_Face()\n    \n    Remove the left-over debugging spew, but leave a comment to hopefully\n    clarify the situation with wrapping FT_Open_Face().\n\n util/cairo-trace/trace.c |    9 +++++++++\n 1 file changed, 9 insertions(+)\n\ncommit faa004033cde21cd81890c7f82abae8eb766bb4b\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Thu Jan 22 11:52:54 2009 +1100\n\n    cairo-trace: Print name of trace file.\n    \n    It's just a lot easier to use cairo-trace if it tells you\n    what file it just created.\n\n util/cairo-trace/trace.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit d108b2777fcd6ef4fa45aeeef457dc58522e325b\nAuthor: Daniel Holbert <dholbert@mozilla.com>\nDate:   Fri Jan 23 10:18:48 2009 +0000\n\n    Spelling corrections: s/it's/its/\n    \n    As a fun itch to scratch, I've been fixing incorrect uses of the\n    contraction \"it's\" in comments within the mozilla source tree (tracked\n    in https://bugzilla.mozilla.org/show_bug.cgi?id=458167 ), and I ran\n    across 6 instances of this typo in mozilla's snapshot of cairo.\n    \n    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>\n\n src/cairo-ft-font.c            |    2 +-\n src/cairo-matrix.c             |    2 +-\n src/cairo-mutex-impl-private.h |    2 +-\n src/cairo-pdf-operators.c      |    2 +-\n src/cairo-surface-fallback.c   |    2 +-\n 5 files changed, 5 insertions(+), 5 deletions(-)\n\ncommit 6394ec3048f31b867d9588853fa400c6c630c6f1\nAuthor: Paolo Bonzini <bonzini@gnu.org>\nDate:   Mon Dec 15 09:32:43 2008 +0100\n\n    [surface] add CAIRO_STATUS_INVALID_SIZE\n    \n    Adds an error code replacing CAIRO_STATUS_NO_MEMORY in one case where it\n    is not really appropriate.  CAIRO_STATUS_INVALID_SIZE is used by several\n    backends that do not support image sizes beyond 2^15 pixels on each side.\n    \n    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>\n\n src/cairo-misc.c                 |    4 +++-\n src/cairo-os2-surface.c          |    9 +++++----\n src/cairo-quartz-image-surface.c |    5 +++--\n src/cairo-quartz-surface.c       |    4 ++--\n src/cairo-spans.c                |    2 ++\n src/cairo-surface.c              |    1 +\n src/cairo-xlib-surface.c         |    7 +++----\n src/cairo.h                      |    6 ++++--\n src/cairoint.h                   |    2 +-\n 9 files changed, 24 insertions(+), 16 deletions(-)\n\ncommit 46acfd2e85dd6f7a73e1172d363d509c769376f2\nAuthor: Paolo Bonzini <bonzini@gnu.org>\nDate:   Tue Dec 23 08:31:30 2008 +0100\n\n    [glitz] use image fallback if the cairo_content_t is unsupported\n    \n    The agreement on the mailing list was that returning NULL is the right\n    thing to do, and indeed the callers of _cairo_glitz_surface_create_similar\n    are prepared to receive NULL and return CAIRO_STATUS_INT_UNSUPPORTED in\n    that case.\n    \n    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>\n\n src/cairo-glitz-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 01d20b79daf0abe0f69ccec4ecd5122c5bfe9a4e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 23 10:09:37 2009 +0000\n\n    [scaled-font] Fix up syntax in doc comments\n    \n    The old NULL vs %NULL conflict.\n\n src/cairo-scaled-font-subsets-private.h |    9 +++++----\n 1 file changed, 5 insertions(+), 4 deletions(-)\n\ncommit aaec63d48386ec825cd4d6e67b6adf7c5fd3b167\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Nov 21 15:04:47 2008 +0000\n\n    [scaled-font] Global glyph cache\n    \n    Currently glyphs are cached independently in each font i.e. each font\n    maintains a cache of up to 256 glyphs, and there can be as many scaled fonts\n    in use as the application needs and references (we maintain a holdover\n    cache of 512 scaled fonts as well).\n    \n    Alternatively, as in this patch, we can maintain a global pool of glyphs\n    split between all open fonts. This allows a heavily used individual font\n    to cache more glyphs than we could allow if we used per-font glyph caches,\n    but at the same time maintains fairness across all fonts (by using random\n    replacement) and provides a cap on the maximum number of global glyphs.\n    \n    The glyphs are allocated in pages, which are cached in the global pool.\n    Using pages means we can exploit spatial locality within the font\n    (nearby indices are typically used in clusters) to reduce frequency of small\n    allocations and allow the scaled font to reserve a single MRU page of\n    glyphs. This caching dramatically reduces the cairo overhead during the\n    cairo-perf benchmarks, and drastically reduces the number of allocations\n    made by the application (for example browsing multi-lingual site with\n    firefox).\n\n boilerplate/cairo-boilerplate.c |    5 +-\n src/cairo-cache-private.h       |    8 +\n src/cairo-cache.c               |   36 +++--\n src/cairo-hash-private.h        |    4 +\n src/cairo-hash.c                |  117 ++++++++++-----\n src/cairo-mutex-list-private.h  |    1 +\n src/cairo-scaled-font-private.h |    6 +-\n src/cairo-scaled-font.c         |  306 ++++++++++++++++++++++++++++-----------\n src/cairoint.h                  |    9 +-\n 9 files changed, 351 insertions(+), 141 deletions(-)\n\ncommit 54f6a49ebb18cf396823d0d70b95e4e264142171\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 19 15:36:29 2009 +0000\n\n    [bounds] Skip spline evaluation based on bounding bbox of control points.\n    \n    The bounding polygon of the control points, defines the extents of the\n    spline. Therefore if the control points are entirely contained within the\n    current path extents, so is the spline and we do not need to evaluate its\n    tight bounds.\n\n src/cairo-path-bounds.c |   21 +++++++++++++++++++--\n 1 file changed, 19 insertions(+), 2 deletions(-)\n\ncommit e217c4da7bc5c4817e0d829ff61dd2bd5b3145a6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 19 15:28:05 2009 +0000\n\n    [in-stroke] Check point against extents before computing path.\n    \n    We can avoid tessellating the path entirely by first checking whether the\n    query point is inside the path extents.\n\n src/cairo-gstate.c |   15 +++++++++++++++\n 1 file changed, 15 insertions(+)\n\ncommit 48f9a0e6da0dd24ea9c809876ef3c745dcfd0d52\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jan 15 00:26:03 2009 +0000\n\n    [spline] Correct the definition of a cubic Bezier curve.\n    \n    Add the missing coefficients for p1 and p2 so the derivation of the\n    derivative and the solution for its inflection points stands correct.\n\n src/cairo-spline.c |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit ee7ac5681fa6a74b68beeae667d96d1421050fc9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jan 21 12:04:06 2009 +0000\n\n    [path] A degenerate curve_to becomes a line_to.\n    \n    Be consistent.\n\n src/cairo-path-fixed.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 778ced4879b09f7482bd41c398bf2d984754ed0b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jan 14 18:55:32 2009 +0000\n\n    [path] Rename _cairo_path_fixed_approximate_extents()\n    \n    Rename approximate_extents() to approximate_clip_extents() so that it is\n    consistent with the fill and stroke variants and clearer under what\n    circumstances you may wish to use it.\n\n src/cairo-analysis-surface.c |    2 +-\n src/cairo-clip.c             |    4 ++--\n src/cairo-path-bounds.c      |    4 ++--\n src/cairo-surface-fallback.c |    2 +-\n src/cairoint.h               |    4 ++--\n 5 files changed, 8 insertions(+), 8 deletions(-)\n\ncommit 75f7c420b624049c1f6c51795679f8029cd2231d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jan 21 13:09:41 2009 +0000\n\n    [perf] Remove a redundant clear during source init.\n    \n    After a short wild goose chase to see why\n    cairo_image_surface_fill_rectangles() was appearing in the profile,\n    tweak init_and_set_source_surface() to remove the redundant clear and\n    to propagate any errors in the auxiliary context.\n\n perf/cairo-perf-cover.c |    7 ++-----\n 1 file changed, 2 insertions(+), 5 deletions(-)\n\ncommit 706f6de68da65911f434d2065dcb143649fa793e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jan 18 16:47:59 2009 +0000\n\n    [perf] Add another variation on the many-rectangles case\n    \n    This variation aims to show the difference between calling fill once\n    per-rectangle, or once for all rectangles.\n\n perf/rectangles.c |   20 ++++++++++++++++++++\n 1 file changed, 20 insertions(+)\n\ncommit ff5d37a8ad063e84e88f453a403715bc85f8a3ec\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jan 29 10:09:11 2009 +0000\n\n    [mutex] Civilise the comment.\n    \n    Note bene that Behdad does not like people shouting.\n\n src/cairo-mutex-impl-private.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit f4ff6128d7fb6e4b5ba361a597fc6c0c88d5ec00\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Wed Jan 28 17:16:32 2009 -0500\n\n    Avoid \"empty body in an if-statement\" warning\n    \n    Use '(void)expr;' instead of 'if (expr) ;' to avoid getting the warning.\n    'if (expr) {}' is an option, however '(void)expr;' seems like a more common\n    idiom and getting warnings for __attribute__((warn_unsed_result)) functions is\n    probably prefered.\n\n src/cairo-mutex-impl-private.h |    5 +++--\n 1 file changed, 3 insertions(+), 2 deletions(-)\n\ncommit 41feeedcc14bf8caef3c039de49f4f28143712c7\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Wed Dec 3 23:58:22 2008 +1030\n\n    Use PS font name in PS TrueType fonts\n\n src/cairo-ps-surface.c |    9 +++++----\n 1 file changed, 5 insertions(+), 4 deletions(-)\n\ncommit b7a9e1d4ac3972bc3d215070124b6a9eda68d3e3\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Wed Dec 3 23:58:05 2008 +1030\n\n    Embed full font name in PDF TrueType and CFF fonts\n    \n    if the full font name was available in the font.\n\n src/cairo-pdf-surface.c |   32 ++++++++++++++++++++++++--------\n 1 file changed, 24 insertions(+), 8 deletions(-)\n\ncommit 6f2db9a4b07cde2c4932ea481228abc248e90145\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Wed Dec 3 23:57:38 2008 +1030\n\n    Use PS font name in CFF and TrueType PDF font subsets\n    \n    James Cloos found that the font name in embedded fonts should be the\n    PostScript font name (nameID=6 in the name table).\n    \n    http://lists.cairographics.org/archives/cairo/2008-December/015919.html\n\n src/cairo-cff-subset.c                  |   70 ++++++++++++++--------\n src/cairo-pdf-surface.c                 |   16 ++---\n src/cairo-scaled-font-subsets-private.h |   19 ++++--\n src/cairo-truetype-subset.c             |   97 ++++++++++++++++++++++---------\n 4 files changed, 136 insertions(+), 66 deletions(-)\n\ncommit 2ed08f7801a2af27e35afcf57f00f4bf5d48384a\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Wed Dec 3 23:56:01 2008 +1030\n\n    Factor out duplicate code in truetype and cff subsetting\n    \n    The code for reading the font name from the name table has been moved\n    to a new function: _cairo_truetype_read_font_name().\n\n src/cairo-cff-subset.c                  |   60 ++-----------\n src/cairo-scaled-font-subsets-private.h |   18 ++++\n src/cairo-truetype-subset.c             |  149 ++++++++++++++++++-------------\n 3 files changed, 114 insertions(+), 113 deletions(-)\n\ncommit 1deb1e451022b9dd5aa6ecb0b580b006047b630e\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Tue Nov 25 23:11:01 2008 +1030\n\n    PDF: Include subset tag in font name\n    \n    PDF requires font names of subsetted fonts to be preprended with\n    \"XXXXXX+\" where XXXXXX is a sequence of 6 uppercase letters unique the\n    font and the set of glyphs in the subset.\n\n src/cairo-pdf-surface.c |  112 +++++++++++++++++++++++++++++++++++++++++++----\n 1 file changed, 104 insertions(+), 8 deletions(-)\n\ncommit c4e54629bb444ed3e850ca8deec175936b90c4e4\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Thu Jan 22 12:26:55 2009 +1100\n\n    Add details to test/COPYING about license of bundled fonts.\n    \n    Just the public-doamin 6x13.pcf file for now, but Adrian will\n    be bundling more soon.\n\n test/COPYING |    8 ++++++++\n 1 file changed, 8 insertions(+)\n\ncommit 6801f28f6dfeb21eec44052e75156e9d2b82422e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jan 14 13:59:28 2009 +0000\n\n    [perf] Add a utility to compare backends.\n    \n    A minor variation on cairo-perf-diff-files that compares tests with the\n    same name for multiple backends.\n\n perf/.gitignore                    |    1 +\n perf/Makefile.am                   |    8 +-\n perf/cairo-perf-compare-backends.c |  393 ++++++++++++++++++++++++++++++++++++\n perf/cairo-perf-diff-files.c       |    2 +-\n perf/cairo-perf-graph-files.c      |    2 +-\n perf/cairo-perf-report.c           |   43 +++-\n perf/cairo-perf.h                  |    9 +-\n 7 files changed, 448 insertions(+), 10 deletions(-)\n\ncommit 4c79cd480db1cf10b6018bce3ea966587efc6081\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Jan 13 12:52:52 2009 +0000\n\n    [perf] Tweak dragon to hit fill_rectangles().\n    \n    Add a second dragon path that is pixel-aligned and uses a solid pattern,\n    so that it can be drawn using fill-rectangles.\n\n perf/dragon.c |   42 +++++++++++++++++++++++++++++++++++++++++-\n 1 file changed, 41 insertions(+), 1 deletion(-)\n\ncommit de9e6b5a3f4e4752e0f99e3ae20ac263a5aae4bb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 12 01:00:30 2009 +0000\n\n    [perf] Cover linear gradient with 3 stops.\n    \n    The i915 is able to special case gradients with just 2 color stops to\n    avoid creating temporary gradient textures, so add a 3 stop linear\n    gradient to compare the speed difference.\n\n perf/cairo-perf-cover.c |   36 ++++++++++++++++++++++++++++++++++++\n 1 file changed, 36 insertions(+)\n\ncommit 7cbc55f21624159dfa58a9a50ec004af9368ab3d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jan 10 00:12:06 2009 +0000\n\n    [perf] Add scaled similar surface sources.\n    \n    Cover the similar source with min/mag scale factors as well, so we can\n    compare the performance impact with scaled image sources. This is useful\n    to distinguish between transport overhead and transform cost.\n\n perf/cairo-perf-cover.c |   44 ++++++++++++++++++++++++++++++++++++++++----\n 1 file changed, 40 insertions(+), 4 deletions(-)\n\ncommit afce1cfe987eeec6516aed1eb8fd97c2d3b9b07b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 9 14:22:36 2009 +0000\n\n    [scaled-font] Avoid repeated lookup of the same unicode during text->glyphs\n    \n    Performing the unicode to index is quite expensive, the\n    FcFreeTypeCharIndex() taking over 12% in the cairo-perf text benchmarks.\n    By adding a simple cache of translated unicode indices, we save around 25%\n    of the lookups during benchmarks, with a relative reduction in runtime.\n\n src/cairo-scaled-font.c |   63 ++++++++++++++++++++++++++++++-----------------\n 1 file changed, 41 insertions(+), 22 deletions(-)\n\ncommit 49eca78a4265432e285af58435219e8b804b38bb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Jan 12 12:42:46 2009 +0000\n\n    [test] Add a huge-radial test case.\n    \n    Also test the handling of radial gradients with large radii.\n\n test/Makefile.am                     |   11 +++---\n test/huge-linear.c                   |   67 +++++++++++++++++++++++++++++++++\n test/huge-linear.ps3.ref.png         |  Bin 0 -> 1786 bytes\n test/huge-linear.ref.png             |  Bin 0 -> 1619 bytes\n test/huge-pattern.c                  |   65 --------------------------------\n test/huge-pattern.pdf.argb32.ref.png |  Bin 2430 -> 0 bytes\n test/huge-pattern.pdf.ref.png        |  Bin 2716 -> 0 bytes\n test/huge-pattern.pdf.rgb24.ref.png  |  Bin 2817 -> 0 bytes\n test/huge-pattern.ps3.ref.png        |  Bin 1786 -> 0 bytes\n test/huge-pattern.ref.png            |  Bin 1619 -> 0 bytes\n test/huge-radial.c                   |   69 ++++++++++++++++++++++++++++++++++\n test/huge-radial.ps3.ref.png         |  Bin 0 -> 18449 bytes\n test/huge-radial.ref.png             |  Bin 0 -> 41702 bytes\n 13 files changed, 142 insertions(+), 70 deletions(-)\n\ncommit 7709d1d9d43a42dd8f9293f18141c57c76ca0970\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Jan 7 21:12:21 2009 +0000\n\n    [test] Add fill-image.\n    \n    A filled equivalent of stroke-image, that checks that the pattern\n    matrices are applied correctly during fills - useful with the\n    segregation between fills and strokes introduced by spans.\n\n test/Makefile.am        |    2 ++\n test/fill-image.c       |   83 +++++++++++++++++++++++++++++++++++++++++++++++\n test/fill-image.ref.png |  Bin 0 -> 1317 bytes\n 3 files changed, 85 insertions(+)\n\ncommit 5605e4bfcd0b6e3e34eed3785bc8ae51b24a7385\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Jan 4 11:26:45 2009 +0000\n\n    [test] Propagate failure from painting large-source-roi\n    \n    Use cairo_get_target() to propagate any failure when creating the\n    large-source.\n\n test/large-source-roi.c |   28 ++++++++++++++++++++--------\n 1 file changed, 20 insertions(+), 8 deletions(-)\n\ncommit 59a14f622389ae3f34f93c78b709df2ad6d1d624\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Sat Jan 10 13:09:06 2009 -0500\n\n    Comment win32 maintainer-clean files again\n\n Makefile.am |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit cc5119173918623ce13363f4b25cd06076fc3fbc\nAuthor: S\u00f8ren Sandmann Pedersen <sandmann@redhat.com>\nDate:   Sat Jan 10 12:13:40 2009 -0500\n\n    Uncomment win32 maintainer-clean files to make Makefile.am syntactically correct\n\n Makefile.am |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 06deaa98b67f9e674a6933a8f54dae6a45faf6ff\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Jan 9 15:55:24 2009 -0500\n\n    [build] Include all generated win32 build files in the repo\n    \n    So a git clone can be built on win32.  The files only change after adding\n    new backends.\n\n Makefile.am                         |    4 +-\n boilerplate/.gitignore              |    2 +-\n boilerplate/Makefile.am             |    2 +-\n boilerplate/Makefile.win32.features |  233 ++++++++++++++++++++++++++\n build/.gitignore                    |    4 +-\n build/Makefile.win32.features       |   22 +++\n build/Makefile.win32.features-h     |   70 ++++++++\n src/.gitignore                      |    3 +-\n src/Makefile.am                     |    2 +-\n src/Makefile.win32.features         |  311 +++++++++++++++++++++++++++++++++++\n 10 files changed, 644 insertions(+), 9 deletions(-)\n\ncommit a5c1cdf2b030959309e1645bd115f058f1367296\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Thu Nov 13 12:11:12 2008 +0200\n\n    [clip] Fix uninitialised status return in _cairo_clip_intersect_mask() for empty extents.\n    \n    This fixes the clip-all test case crashing for me.\n\n src/cairo-clip.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 8157bc8a2dc0d555606d19ad52ae7a603471edd6\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sun Jan 4 04:14:28 2009 +0200\n\n    [test] Stress test using large source images.\n    \n    This test attempts to trigger failures in those backend clone_similar\n    methods that have size restrictions on the resulting image.  It also\n    triggers errors in scaling down large image surfaces as the image\n    backend also fails this test.\n\n test/Makefile.am              |    2 ++\n test/large-source-roi.c       |   64 +++++++++++++++++++++++++++++++++++++++++\n test/large-source-roi.ref.png |  Bin 0 -> 102 bytes\n 3 files changed, 66 insertions(+)\n\ncommit 388ae177e4100698289819429fa1f8e6958d1c60\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jan 3 22:51:28 2009 +0000\n\n    [boilerplate] Remove CAIRO_BOILERPLATE_LOG()\n    \n    The variadic macro is only used within boilerplate/ so replace it with a\n    simple, and portable, call to fprintf.\n\n boilerplate/cairo-boilerplate-beos.cpp    |   19 +++----------------\n boilerplate/cairo-boilerplate-glitz-agl.c |   10 +++++-----\n boilerplate/cairo-boilerplate-glitz-glx.c |    6 +++---\n boilerplate/cairo-boilerplate-glitz-wgl.c |   10 +++++-----\n boilerplate/cairo-boilerplate-system.c    |   16 ++++++++--------\n boilerplate/cairo-boilerplate-xcb.c       |    4 ++--\n boilerplate/cairo-boilerplate.h           |    4 ----\n test/cairo-test.h                         |    1 -\n 8 files changed, 26 insertions(+), 44 deletions(-)\n\ncommit 5f816ccd25d1cd303fc1e9e44e80c1207b2a424a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jan 3 22:30:55 2009 +0000\n\n    [boilerplate] Redefine DEBUG() for portability concerns\n    \n    Behdad warned that using an empty variadic macro was non-portable.\n\n boilerplate/cairo-boilerplate-xlib.c |   18 +++++++++---------\n boilerplate/cairo-boilerplate.h      |    2 +-\n 2 files changed, 10 insertions(+), 10 deletions(-)\n\ncommit acb2717372f3862ddbde8cfdc814132808b71f86\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jan 3 21:50:55 2009 +0000\n\n    [quartz] Define RTLD_DEFAULT\n    \n    RTLD_DEFAULT is a gnu-ism (at least according to the manpage on my linux\n    system) so declare _GNU_SOURCE before including dlfcn.h and failing that\n    provide our own definition.\n\n src/cairo-quartz-surface.c |    5 +++++\n 1 file changed, 5 insertions(+)\n\ncommit ff1f5de5511ba0b7842b53223c26986e4bcdc38a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Jan 3 11:44:58 2009 +0000\n\n    [boilerplate] Suppress xlib warnings on stderr\n    \n    If we cannot test the xlib backend simply because there is no Display,\n    just report UNTESTED and do not clutter the output with superfluous\n    warnings [see the output from the buildbots for an example]. However,\n    keep the warnings around so that a developer can re-enable them\n    and so simply move them to a new \"lower priority\" macro.\n\n boilerplate/cairo-boilerplate-xlib.c |   18 +++++++++---------\n boilerplate/cairo-boilerplate.h      |    4 ++++\n 2 files changed, 13 insertions(+), 9 deletions(-)\n\ncommit 75538962c8af11b1ec669caca6259b7769b5cc1d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 2 17:45:26 2009 +0000\n\n    [boilerplate] Check the return of pclose()\n    \n    pclose() returns the child exit status, so we can use that to detect\n    errors in the convertor process.\n\n boilerplate/cairo-boilerplate.c |   11 +++++++++--\n 1 file changed, 9 insertions(+), 2 deletions(-)\n\ncommit 333158ec85cf3c610cc8965fc3f99d72b534cc2e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 2 15:36:39 2009 +0000\n\n    [configure] Replace awk comparator with an aclocal version\n    \n    As reported in https://bugs.freedesktop.org/show_bug.cgi?id=19283, the\n    fallback freetype version compare is broken inside the configure script as\n    the $1-$3 arguments are interpreted as the script is constructed. To avoid\n    making that awk comparison any more complicated, we import a version compare\n    from the autoconf archives - such that we have a reusable macro for the\n    furture.\n\n build/aclocal.compare.m4 |  162 ++++++++++++++++++++++++++++++++++++++++++++++\n configure.ac             |   18 ++----\n 2 files changed, 168 insertions(+), 12 deletions(-)\n\ncommit dc33ae24619f4602c23716e9e407f8dd4f1b4a1d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 2 14:29:53 2009 +0000\n\n    [boilerplate] Use pclose() after popen\n    \n    Joonas pointed out that we should be using pclose() on a stream returned\n    by popen().\n\n boilerplate/cairo-boilerplate.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit f230ce7658910c7f4f8feb722b77a2141824f963\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 2 14:03:35 2009 +0000\n\n    [path] Fix typo in bounds for empty path.\n    \n    We set the width to be zero, twice, and the height not even once!\n\n src/cairo-path-bounds.c |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit 163c326c82a45c1f3ee84bbfaee2cc2e6dc1fafc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 2 13:46:16 2009 +0000\n\n    [test] Free test name\n    \n    Adding the missing free for the converted test name.\n\n test/cairo-test.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit dd65be740c475daf75c602fc79ff25977674d9cf\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 2 13:42:53 2009 +0000\n\n    [test/pdf-mime-data] Free data on error paths.\n    \n    Cleanup the allocated buffers on error.\n\n test/pdf-mime-data.c |    4 ++++\n 1 file changed, 4 insertions(+)\n\ncommit 65f9760d661a0eb2edf9e53fb1b74666ce0ba3b9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 2 13:43:33 2009 +0000\n\n    [toy-font-face] Return defaults for error objects.\n    \n    Similar to the behaviour of the other objects, we return the default\n    conditions if the object is in any error (and not just a nil object).\n\n src/cairo-toy-font-face.c |   28 ++++++++++++++++++++++++----\n 1 file changed, 24 insertions(+), 4 deletions(-)\n\ncommit d478d5ed5ce7c19a02e11435bcf69e867c6705d9\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Jan 2 06:48:54 2009 -0500\n\n    [doc] Give a small hint about Twin font\n    \n    Though, the details are not documented yet.  I'm not sure how much of it\n    I do want to document.\n\n src/cairo-toy-font-face.c |    2 +-\n src/cairo.c               |    7 +++++++\n 2 files changed, 8 insertions(+), 1 deletion(-)\n\ncommit a023104400f7f08775e9e52c304f5df2bc96382d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Jan 2 10:32:39 2009 +0000\n\n    [trace] Adopt _cairo_dtostr\n    \n    In order to have locale-independent output of decimal values, we need to\n    manually transform such numbers into strings. As this is a solved problem\n    for cairo, we adopt _cairo_output_stream_printf() and in particular the\n    _cairo_dtostr() routine for our own printf processing.\n\n util/cairo-trace/trace.c |  920 +++++++++++++++++++++++++++-------------------\n 1 file changed, 546 insertions(+), 374 deletions(-)\n\ncommit c601f308430f4d33929109fb9170b9322edca3c6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Jan 1 16:55:08 2009 +0000\n\n    [cairo] Early return if we attempt to set the same colour.\n    \n    Profiling a silly video renderer that called set-source; rectangle; fill;\n    for each pixel, we can shave 5% off the cairo overhead by introducing an\n    early return if we attempt to reset the current colour.\n\n src/cairo.c |   30 ++++++++++++++++++++++++++++++\n 1 file changed, 30 insertions(+)\n\ncommit fb3522f33a565576002595bf03e07f6c8b16a471\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Dec 20 19:19:54 2008 +0000\n\n    [os2] Fix memory leak of surface on error path\n    \n    Of we fail to create the mutex, free the surface before returning the\n    failure.\n    \n    Reported: http://bugs.freedesktop.org/show_bug.cgi?id=19208.\n\n src/cairo-os2-surface.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 8d23c3a6c2ab0ae168afb695e2b8c5f121ed2be3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Dec 20 19:17:28 2008 +0000\n\n    [quartz] Delay allocation of string until after guard.\n    \n    Fixes a memory leak should we bail due to the version of Quartz being\n    insufficient.\n    \n    Reported: http://bugs.freedesktop.org/show_bug.cgi?id=19209.\n\n src/cairo-quartz-font.c |    6 ++++--\n 1 file changed, 4 insertions(+), 2 deletions(-)\n\ncommit 9c9ed8f0b5ce8bc3036dcb0bf841ffaa24797cfa\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Dec 19 13:04:31 2008 +0000\n\n    [scaled-font] Post-process hash value.\n    \n    Mix the bits within the hash value to reduce clustering.\n\n src/cairo-scaled-font.c |   15 +++++++++++++++\n 1 file changed, 15 insertions(+)\n\ncommit 555dd6b97ec432787d83242727164d25b459cf54\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Dec 19 13:02:00 2008 +0000\n\n    [scaled-font] Switch to a constant loop for hashing.\n    \n    As we only use the FNV hash for hashing matrices, expose the constant size\n    to the compiler so that it can perform its magic.\n\n src/cairo-scaled-font.c |   18 ++++++++----------\n 1 file changed, 8 insertions(+), 10 deletions(-)\n\ncommit f5274f5847519208865159fa9bb254d76ba8ddac\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Dec 19 16:31:28 2008 +0000\n\n    Iterate over hash table using foreach() in destructors.\n    \n    Don't use the remarkably inefficient _cairo_hash_table_random_entry() to\n    remove all entries from the hash table!\n\n src/cairo-cff-subset.c |   21 +++++++++++----------\n src/cairo-ft-font.c    |   47 ++++++++++++++++++++++-------------------------\n 2 files changed, 33 insertions(+), 35 deletions(-)\n\ncommit 1c4ea84b24f3f7e480f9c50b5bd77ac703c36ef0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Dec 18 20:32:44 2008 +0000\n\n    [cairo] Early return if we attempt to set the same scaled_font\n    \n    If the application calls cairo_set_scaled_font() with the current\n    scaled font, we can return early as it is a no-op.\n\n src/cairo.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit b661f3d27ba77cdf470a86f6320b1bb31d92a9f0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Dec 18 18:34:16 2008 +0000\n\n    [cairo] Embed a second gstate.\n    \n    Experiment with embedding a second gstate into the initial context to\n    reduce allocations.\n\n src/cairo-private.h |    2 +-\n src/cairo.c         |   12 ++++++------\n 2 files changed, 7 insertions(+), 7 deletions(-)\n\ncommit 8abd21bd3afc143501f66fdcdc0c6c4139df490b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Dec 23 15:09:15 2008 +0000\n\n    [script] Call the context creation hook\n    \n    Hook in the creation hook so applications can record or even modify the\n    contexts used in replay.\n\n util/cairo-script/cairo-script-operators.c |    7 ++++++-\n 1 file changed, 6 insertions(+), 1 deletion(-)\n\ncommit 2c9323d3942cbf93b100f711000f48a3eb869271\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Dec 19 14:11:37 2008 +0000\n\n    [script] more targets\n\n util/cairo-script/csi-replay.c |  101 ++++++++++++++++++++++++++++++++++------\n 1 file changed, 88 insertions(+), 13 deletions(-)\n\ncommit fd96cea4fefeeee8bcccde663faa559151e2606e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Dec 19 12:54:53 2008 +0000\n\n    [script] Improve array construction.\n    \n    Limit the memory allocation to the initial array size and perform a direct\n    copy from the operand stack to the array.\n\n util/cairo-script/cairo-script-objects.c   |   27 ++++++++++++-----\n util/cairo-script/cairo-script-operators.c |   45 +++++++++++-----------------\n util/cairo-script/cairo-script-private.h   |    1 +\n util/cairo-script/cairo-script-scanner.c   |    2 +-\n util/cairo-script/cairo-script-stack.c     |    2 +-\n 5 files changed, 41 insertions(+), 36 deletions(-)\n\ncommit ecb8dce27c769158fe4a92432a90b24a96f8afa9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Dec 18 18:32:44 2008 +0000\n\n    [script] Recreate surface content.\n    \n    Use the content recorded in the trace, defaulting to COLOR_ALPHA, to\n    determine the replayed surface type.\n\n util/cairo-script/cairo-script-interpreter.h |    1 +\n util/cairo-script/cairo-script-operators.c   |    8 ++-\n util/cairo-script/csi-exec.c                 |    1 +\n util/cairo-script/csi-replay.c               |   80 +++++++++++++++++++-------\n util/cairo-trace/trace.c                     |    8 ++-\n 5 files changed, 74 insertions(+), 24 deletions(-)\n\ncommit d21529b9ef31228182d2f61bb4f7beb6319b10c4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Dec 20 15:38:13 2008 +0000\n\n    [trace] Correct escaped characters in string literal.\n    \n    Laziness caused the control character to be used instead of its\n    replacement in the escaped string!\n\n util/cairo-trace/trace.c |   13 ++++++++++++-\n 1 file changed, 12 insertions(+), 1 deletion(-)\n\ncommit ca39c4bf7f90646b70b2bbe9e7318fcfae99e35e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Dec 20 15:35:40 2008 +0000\n\n    [trace] Correct a couple of typos.\n    \n    A couple of minor typos in the escaped characters strings.\n\n util/cairo-trace/trace.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 1f2fec7388092c8fea87651f9094ca2e0be2104b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Dec 19 18:04:03 2008 +0000\n\n    [trace] Fix OBO in emit_glyphs()\n    \n    The largest index that will fit within 8 bits is 255 not 256!\n\n util/cairo-trace/trace.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 7ebe9e68371e4e77139d9abeb7feb390203b1c8e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Dec 18 21:59:16 2008 +0000\n\n    [trace] Minor tidy.\n    \n    Improve scoping of variables.\n\n util/cairo-trace/trace.c |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit 931556005a1946c5e730afc7977551a2bc5be42c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Dec 18 21:57:19 2008 +0000\n\n    [trace] Remove the forced switching to C locale\n    \n    This interferes with the application being traced. It is not clear from\n    printf(3) whether \"%.f\" is locale dependent or not - but until we have a\n    failure do not break applications unnecessarily!\n\n util/cairo-trace/cairo-trace.in |    4 ----\n 1 file changed, 4 deletions(-)\n\ncommit d0f41b92bf9a9ee313dde6f451b26fffb65a0906\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Dec 18 17:26:43 2008 +0000\n\n    [trace] Do not force the output filename.\n    \n    Handle the case of tracing an application that spawns it own graphical\n    children but using the autonaming facility within cairo-trace. Currently\n    the traced process tree would all attempt to write to the same file,\n    creating a broken trace. This means sacrificing the display of the output\n    name, but allows use for a wider range of applications.\n\n util/cairo-trace/cairo-trace.in |   25 ++++++-------------------\n 1 file changed, 6 insertions(+), 19 deletions(-)\n\ncommit 19e8c5c7f4a561f2454380c8f4098a832d716d28\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Dec 20 19:27:33 2008 +0000\n\n    [test] Fix mismatched free.\n    \n    A couple of strings allocated using glib functions but freed with system\n    malloc.\n    \n    Reported: http://bugs.freedesktop.org/show_bug.cgi?id=19210.\n\n test/pdf2png.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 6662eede2af2da50bff1902e694204c69e84f036\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Dec 20 19:14:23 2008 +0000\n\n    [perf] Fix errors reported by cppcheck\n    \n    Trivial mistakes, identified in bugs\n    http://bugs.freedesktop.org/show_bug.cgi?id=19206 and\n    http://bugs.freedesktop.org/show_bug.cgi?id=19207.\n\n perf/cairo-perf-graph-files.c |    2 +-\n perf/cairo-perf-report.c      |    7 ++++---\n 2 files changed, 5 insertions(+), 4 deletions(-)\n\ncommit 8419c4f124c6ffa75b44901dccab33df8bb6287a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Dec 20 15:34:41 2008 +0000\n\n    [perf] Correct another reference to '<cairo>'\n    \n    I think that's the last use of the old internal name for twin!\n\n perf/twin.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 14d94d9354170003ec15847873a273c1752cf9f2\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Jan 2 02:56:38 2009 -0500\n\n    Fix various README typos\n\n HACKING     |    2 +-\n src/README  |    4 ++--\n util/README |    6 ++++++\n 3 files changed, 9 insertions(+), 3 deletions(-)\n\ncommit 28a72648ba7abe02ebd4df7234424e333b85dc9c\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Tue Dec 30 13:48:47 2008 -0500\n\n    [gstate] Change the glyph dropping safety margin from 2em to 10em\n    \n    The small margin caused bugs with math fonts.  See:\n    https://bugzilla.mozilla.org/show_bug.cgi?id=460023\n\n src/cairo-gstate.c |   10 +++++-----\n 1 file changed, 5 insertions(+), 5 deletions(-)\n\ncommit fa63c43532de4a38d59d2746c34c815d18121062\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Dec 29 16:11:29 2008 +0000\n\n    [spline] Be pedantic and propagate errors.\n    \n    We know that the current users will always return SUCCESS, but propagate\n    the status return for future users.\n\n src/cairo-path-bounds.c   |    6 ++----\n src/cairo-spline.c        |   15 +++++++++++----\n src/cairo-types-private.h |    2 +-\n src/cairoint.h            |    2 +-\n 4 files changed, 15 insertions(+), 10 deletions(-)\n\ncommit 7df082dd8aaa9d31479a8bb1f6f1dfe07f52019a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Dec 29 16:06:36 2008 +0000\n\n    [test] Update twin reference images\n    \n    Subsequent to recent tweaks, update the reference images for twin.\n\n test/Makefile.am               |    6 ++----\n test/twin.c                    |    2 +-\n test/twin.pdf.ref.png          |  Bin 1669 -> 0 bytes\n test/twin.ps.ref.png           |  Bin 0 -> 1114 bytes\n test/twin.ps2.ref.png          |  Bin 1095 -> 0 bytes\n test/twin.ps3.ref.png          |  Bin 1095 -> 0 bytes\n test/twin.ref.png              |  Bin 1712 -> 1492 bytes\n test/twin.svg.ref.png          |  Bin 0 -> 1487 bytes\n test/twin.svg11.argb32.ref.png |  Bin 1797 -> 0 bytes\n test/twin.svg11.ref.png        |  Bin 1662 -> 0 bytes\n test/twin.svg11.rgb24.ref.png  |  Bin 1797 -> 0 bytes\n test/twin.svg12.argb32.ref.png |  Bin 1797 -> 0 bytes\n test/twin.svg12.ref.png        |  Bin 1662 -> 0 bytes\n test/twin.svg12.rgb24.ref.png  |  Bin 1797 -> 0 bytes\n 14 files changed, 3 insertions(+), 5 deletions(-)\n\ncommit e10af38799eb77f1a7b5f75e76c733353c7b8622\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Dec 29 12:54:13 2008 +0000\n\n    make \"make check\" happy again\n    \n    Add the missing scoping that caused check-plt to complain.\n\n src/cairo-font-face-twin.c |    6 ++++--\n src/cairo-scaled-font.c    |    2 ++\n src/cairo.c                |    4 ++++\n src/cairoint.h             |    8 +++++++-\n 4 files changed, 17 insertions(+), 3 deletions(-)\n\ncommit 010085622674bd02098742f401409da8e7c1b1dc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Dec 29 12:45:13 2008 +0000\n\n    [path] Remove tolerance from path bounders\n    \n    With Behdad's analytical analysis of the spline bbox, tolerance is now\n    redundant for the path extents and the approximate bounds, so remove it\n    from the functions parameters.\n\n src/cairo-analysis-surface.c |    3 +--\n src/cairo-gstate.c           |    3 +--\n src/cairo-path-bounds.c      |   18 ++++++------------\n src/cairo-surface-fallback.c |    1 -\n src/cairoint.h               |    5 +----\n 5 files changed, 9 insertions(+), 21 deletions(-)\n\ncommit 84b81388bef4a2f300580081415fe09947edb96e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Dec 29 12:16:53 2008 +0000\n\n    [test] Draw spline bbox\n    \n    Add the stroked extents to the spline-decomposition test.\n\n test/Makefile.am                        |    6 +--\n test/spline-decomposition.c             |   63 +++++++++++++++++++++++++++++++\n test/spline-decomposition.pdf.ref.png   |  Bin 20404 -> 19156 bytes\n test/spline-decomposition.ps.ref.png    |  Bin 0 -> 9090 bytes\n test/spline-decomposition.ps2.ref.png   |  Bin 8957 -> 0 bytes\n test/spline-decomposition.ps3.ref.png   |  Bin 8957 -> 0 bytes\n test/spline-decomposition.ref.png       |  Bin 20402 -> 19107 bytes\n test/spline-decomposition.svg.ref.png   |  Bin 0 -> 19156 bytes\n test/spline-decomposition.svg11.ref.png |  Bin 20404 -> 0 bytes\n test/spline-decomposition.svg12.ref.png |  Bin 20404 -> 0 bytes\n 10 files changed, 65 insertions(+), 4 deletions(-)\n\ncommit efb17160904eda8fdb21fa1fd10a09081cf5cb3e\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Sun Dec 28 16:06:27 2008 -0500\n\n    [_cairo_spline_bound] Protect against b == 0\n\n src/cairo-spline.c |    8 +++++---\n 1 file changed, 5 insertions(+), 3 deletions(-)\n\ncommit 0b59e29004bb19eb9bd458bbe6a48a7c367f72d0\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Sun Dec 28 02:49:39 2008 -0500\n\n    [_cairo_spline_bound] Simplify condition\n\n src/cairo-spline.c |   14 +++++++++-----\n 1 file changed, 9 insertions(+), 5 deletions(-)\n\ncommit 3bf1b7d574620b1ab3c1fa50977a23d36ab04a40\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Sun Dec 28 02:41:39 2008 -0500\n\n    [_cairo_spline_bound] Fix the check for feasible solutions\n    \n    Also make it more strict.  The only times we call sqrt now is\n    when a solution in (0,1) exists.\n\n src/cairo-spline.c |    9 ++++++---\n 1 file changed, 6 insertions(+), 3 deletions(-)\n\ncommit 7f840d156c1212eeb0fddad4b4a6844a9c070bd5\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Sun Dec 28 02:02:30 2008 -0500\n\n    [spline] Save a couple more muls\n\n src/cairo-spline.c |   26 +++++++++++++-------------\n 1 file changed, 13 insertions(+), 13 deletions(-)\n\ncommit 3292f9906b3637564c37863dde5d214b0fee2885\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Sun Dec 28 01:59:12 2008 -0500\n\n    [spline] Do some checks to avoid calling sqrt() if no feasible solution exists\n\n src/cairo-spline.c |   27 ++++++++++++++++++++-------\n 1 file changed, 20 insertions(+), 7 deletions(-)\n\ncommit efe4d2ce99e65f9841951d3ff3e0536973bfb12c\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Sun Dec 28 01:22:40 2008 -0500\n\n    [spline] Simplify code\n\n src/cairo-spline.c |   19 +++++++++----------\n 1 file changed, 9 insertions(+), 10 deletions(-)\n\ncommit 8672178bf6c7f3a38e11e224f1d484b1f0c7fd7b\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Sun Dec 28 01:20:37 2008 -0500\n\n    [spline] Remove duplicated code by using a macro\n\n src/cairo-spline.c |   50 +++++++++++++++++++++-----------------------------\n 1 file changed, 21 insertions(+), 29 deletions(-)\n\ncommit ef0f6c3ca311c41c9062e1298b020eae1212984e\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Sat Dec 27 23:13:45 2008 -0500\n\n    [spline] Add an analytical bounder for splines\n    \n    The way this works is very simple:  Once for X, and once for Y, it\n    takes the derivative of the bezier equation, equals it to zero and\n    solves to find the extreme points, and if the extreme points are\n    interesting, adds them to the bounder.\n    \n    Not the fastest algorithm out there, but my estimate is that if\n    _de_casteljau() ends up breaking a stroke in at least 10 pieces,\n    then the new bounder is faster.  Would be good to see some real\n    perf data.\n\n src/cairo-path-bounds.c |   18 ++-----\n src/cairo-spline.c      |  131 +++++++++++++++++++++++++++++++++++++++++++++++\n src/cairoint.h          |    6 +++\n 3 files changed, 141 insertions(+), 14 deletions(-)\n\ncommit f2f62c7c4402a28a65c8171238d163af6b2fb95a\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Dec 26 20:28:54 2008 -0500\n\n    [twin] Micro-optimize\n\n src/cairo-font-face-twin.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 50bc2bc0170be2a9c84ae3064525b18190e22b48\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Dec 27 11:46:24 2008 +0000\n\n    [path] Simply track the current point for bounds.\n    \n    The idea is to track always update the current point, but not add it\n    during a move-to.\n\n src/cairo-path-bounds.c |   25 +++++++++++--------------\n 1 file changed, 11 insertions(+), 14 deletions(-)\n\ncommit 078ebb01ba0b99ab4973ba479fe438f0674aa102\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Dec 27 11:29:15 2008 +0000\n\n    [path] Initialise spline from current point\n    \n    Joonas spotted that the breakage with the curve bounds was the result of\n    initialising the spline using the original move to point and not the\n    current point.\n    \n    Fixes: Bug 19256 Gnome Foot in gnome-games rendered incorrectly\n    (https://bugs.freedesktop.org/show_bug.cgi?id=19256)\n\n src/cairo-path-bounds.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 4320ea68875cc015dfecdf5ed40195e276efca07\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Dec 26 00:01:01 2008 +0000\n\n    [trace] Fix up positional arguments\n    \n    James Cloos pointed out that the correct form to use is \"$@\" when\n    executing the command line.\n\n util/cairo-trace/cairo-trace.in |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit e76a676c8f3d6dc9199cf0bc0856af0c659f4a16\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Dec 25 09:51:51 2008 +0000\n\n    [twin] Trivial spelling correction.\n    \n    This ain't no decadent descendent of the Hershey font...\n\n src/cairo-font-face-twin.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 9332c0a8eaf266e99555df9ad7769f8b5804cbfd\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Dec 26 16:38:04 2008 -0500\n\n    [util] Add waterfall\n\n util/Makefile.am |    3 +-\n util/waterfall   |   97 ++++++++++++++++++++++++++++++++++++++++++++++++++++++\n 2 files changed, 99 insertions(+), 1 deletion(-)\n\ncommit ab1febbf22a641feb2fda4b21156b2bd45df039b\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Dec 26 16:35:33 2008 -0500\n\n    [twin] Resnap margin under monospace\n\n src/cairo-font-face-twin.c |   14 +++++++++++++-\n 1 file changed, 13 insertions(+), 1 deletion(-)\n\ncommit 3c91d9f5a2a290653a56242eed6acae4f16e99e3\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Dec 26 16:30:01 2008 -0500\n\n    [twin] Adjust margins\n\n src/cairo-font-face-twin.c |  114 +++++++++++++++++++++++++++-----------------\n 1 file changed, 70 insertions(+), 44 deletions(-)\n\ncommit 0b5c60bae1fb0924bbd43daab38932052e10b3be\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Dec 26 15:48:46 2008 -0500\n\n    [twin] Clean up hinting\n\n src/cairo-font-face-twin.c |   89 +++++++++++++++++++++-----------------------\n 1 file changed, 42 insertions(+), 47 deletions(-)\n\ncommit 6e7a2c4ce32ddfb0e58a74fcba8c4e46e46d32a4\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Dec 26 15:34:50 2008 -0500\n\n    [twin] Fix monospace for narrow glyphs\n\n src/cairo-font-face-twin.c |   23 ++++++++++++++---------\n 1 file changed, 14 insertions(+), 9 deletions(-)\n\ncommit e8e6ae1294f11addcbc8a95db471bb48a50b0b1a\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Dec 26 15:15:15 2008 -0500\n\n    [twin] Cache pen and other properties on the scaled font\n\n src/cairo-font-face-twin.c |  170 ++++++++++++++++++++++++++------------------\n 1 file changed, 101 insertions(+), 69 deletions(-)\n\ncommit e133cc14469e8ebb8311bf8db206147f6b07786d\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Dec 26 14:56:32 2008 -0500\n\n    [twin] Don't stretch pen\n\n src/cairo-font-face-twin.c |   11 +++++------\n 1 file changed, 5 insertions(+), 6 deletions(-)\n\ncommit dec4d791f4cc626d1fa52d68518f787210240812\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Dec 26 14:24:08 2008 -0500\n\n    [twin] Minor shuffling\n\n src/cairo-font-face-twin.c |  142 +++++++++++++++++++++++++-------------------\n 1 file changed, 81 insertions(+), 61 deletions(-)\n\ncommit c3de08ee2fcfb0e092f0299e249b0f5fe56b87bf\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Dec 26 14:11:52 2008 -0500\n\n    [twin] Further reduce weight\n\n src/cairo-font-face-twin.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 5c201ef5cfdfdd4e19db7e0995b85fbb3f2e6090\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Dec 26 00:05:19 2008 -0500\n\n    [scaled-font] Make cairo_debug_reset_static_data() work again\n    \n    I broke it in a5983929f8f07f384f78e0b604e22037cf5ed716\n\n src/cairo-debug.c       |    2 ++\n src/cairo-scaled-font.c |    4 +---\n src/cairoint.h          |    3 +++\n 3 files changed, 6 insertions(+), 3 deletions(-)\n\ncommit 730ed68ec1ac10dcb9c7c69759f72fcaa3ea82e5\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Thu Dec 25 23:29:02 2008 -0500\n\n    [pattern] Fix comment typo\n\n src/cairo-pattern.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit a5f4a97aa4122d8c4b8f31053d421a52c356e270\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Thu Dec 25 02:48:26 2008 -0500\n\n    [twin] Don't hint pen if hint-style is SLIGHT\n\n src/cairo-font-face-twin.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 0c7eaf6e0a2c2f0db634f8120fcbc03f7e8fd751\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Thu Dec 25 02:44:19 2008 -0500\n\n    [twin] Improve glyph hints\n\n src/cairo-font-face-twin-data.c |  202 ++++++++++++++++++++++-----------------\n 1 file changed, 116 insertions(+), 86 deletions(-)\n\ncommit e6205ea5a38c9de4c08b313a1beb70d4a38b0676\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Thu Dec 25 02:10:16 2008 -0500\n\n    [twin] Improve hinting\n\n src/cairo-font-face-twin.c |   90 ++++++++++++++++++--------------------------\n 1 file changed, 36 insertions(+), 54 deletions(-)\n\ncommit da8658b67510daaefd542b80e6a997bbdfd82d44\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Thu Dec 25 01:35:36 2008 -0500\n\n    [twin] Hint dots\n\n src/cairo-font-face-twin-data.c |   24 ++++++++++++------------\n 1 file changed, 12 insertions(+), 12 deletions(-)\n\ncommit f4c81e18f85c6a68d682301abfd75e7c208c1e1a\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Thu Dec 25 01:29:41 2008 -0500\n\n    [twin] Disable pen hinting if hinting is off\n\n src/cairo-font-face-twin.c |   27 +++++++++++++++++++--------\n 1 file changed, 19 insertions(+), 8 deletions(-)\n\ncommit af91fc1974ce2dfbaab187e22769cdfb9e6279d9\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Thu Dec 25 01:24:46 2008 -0500\n\n    [twin] Optimize hinting\n\n src/cairo-font-face-twin.c |    7 +------\n 1 file changed, 1 insertion(+), 6 deletions(-)\n\ncommit 439959d1af1f6c4ce174a3fee524eacfc18a00bd\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Thu Dec 25 01:06:47 2008 -0500\n\n    [twin] Implement hinting\n\n src/cairo-font-face-twin.c |  148 ++++++++++++++++++++++++++++++++++++++------\n 1 file changed, 129 insertions(+), 19 deletions(-)\n\ncommit 9f9f5317dca6a9988a0a62aaa60393570157af63\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Wed Dec 24 22:29:59 2008 -0500\n\n    [util] Fix pangram\n\n util/cairo-view |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 8296bc74c8687a2f52e06174e9dc70d32d1181c8\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Wed Dec 24 18:00:04 2008 -0500\n\n    [twin] Reduce the weight just a bit, such that bold doesn't look as bad\n\n src/cairo-font-face-twin.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit b2f89625453e2a15da175ea5b4ca5af6c2201d96\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Wed Dec 24 17:29:21 2008 -0500\n\n    [twin] Adjust baseline\n\n src/cairo-font-face-twin.c |   11 ++++-------\n 1 file changed, 4 insertions(+), 7 deletions(-)\n\ncommit f980d017d2360634f391eb1129317446bfe42cc9\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Wed Dec 24 17:00:43 2008 -0500\n\n    [twin] Remove serif setting\n    \n    I don't think I'm going to implement serif-drawing soon, so, remove the\n    infrastructure.  Can always be added back later.\n\n src/cairo-font-face-twin.c |   21 ++-------------------\n 1 file changed, 2 insertions(+), 19 deletions(-)\n\ncommit 1116febb40cb5e5f7eafe97999d1143347819b3f\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Wed Dec 24 16:32:25 2008 -0500\n\n    [twin] Implement small-caps\n\n src/cairo-font-face-twin.c |   27 ++++++++++++++++-----------\n 1 file changed, 16 insertions(+), 11 deletions(-)\n\ncommit 6767673961401c7ab7b92eb8dfbb345efb560741\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Wed Dec 24 16:13:12 2008 -0500\n\n    [twin] Implement stretch\n\n src/cairo-font-face-twin.c |   27 +++++++++++++++++++++------\n 1 file changed, 21 insertions(+), 6 deletions(-)\n\ncommit 0656e947f11356877014df93bd083123c7313dc3\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Wed Dec 24 15:43:17 2008 -0500\n\n    [twin] Implement slant\n\n src/cairo-font-face-twin.c |   11 +++++++++--\n 1 file changed, 9 insertions(+), 2 deletions(-)\n\ncommit 9d493fcd16fb770f21fa732b08834f3a435fe1f2\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Wed Dec 24 15:36:57 2008 -0500\n\n    [twin] Disable the serif mode\n\n src/cairo-font-face-twin.c |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit 6c1d21bf8947f5b11702626ddfd9bac18073188d\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Wed Dec 24 03:47:21 2008 -0500\n\n    [twin] Implement monospace\n\n src/cairo-font-face-twin.c |   30 +++++++++++++++++++++++-------\n 1 file changed, 23 insertions(+), 7 deletions(-)\n\ncommit 5def8c587b2b897bfebc6d77a6a3e13355cae2f2\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Wed Dec 24 03:45:06 2008 -0500\n\n    [twin] Fix dots\n\n src/cairo-font-face-twin-data.c |   54 ++++++++++++++++++++++++---------------\n 1 file changed, 33 insertions(+), 21 deletions(-)\n\ncommit a303bbaea332df20b81f068366d701d66913c043\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Tue Dec 23 16:12:56 2008 -0500\n\n    [font-face-get-type] Fix test to cleanup the surface and context properly\n    \n    Destroy the context and the surface even when the test fails.\n    \n    I ran into this because cairo_debug_reset_static_data() is called between the\n    tests on the quartz backend (it doesn't fork) and isn't on other backends? This\n    is perhaps a mistake...\n\n test/font-face-get-type.c |   10 +++++++---\n 1 file changed, 7 insertions(+), 3 deletions(-)\n\ncommit 52cc31a7fa6570e538762631359a92e7b717710e\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Tue Dec 23 13:48:52 2008 -0500\n\n    [util] Add cairo-view\n\n util/Makefile.am |    3 +-\n util/cairo-view  |  113 ++++++++++++++++++++++++++++++++++++++++++++++++++++++\n 2 files changed, 115 insertions(+), 1 deletion(-)\n\ncommit 418c7ef133840c10eb0be7e75c7dd11533fbe897\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Tue Dec 23 02:39:17 2008 -0500\n\n    [twin] Adjust font extents\n\n src/cairo-font-face-twin.c |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit 96e41c28e980f313c51a0eed81681e7e48752797\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Sat Dec 20 23:30:59 2008 -0500\n\n    [twin] Minor cleanup\n\n src/cairo-font-face-twin.c |   11 +++++++----\n 1 file changed, 7 insertions(+), 4 deletions(-)\n\ncommit 556f6ce364d81f9309162d21deb86a3d5b8b9a6e\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Sat Dec 20 23:16:53 2008 -0500\n\n    [twin] close_path the Q\n\n src/cairo-font-face-twin-data.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 6929ed800d19f359af7436636e8adc6203083a10\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Sat Dec 20 20:25:01 2008 -0500\n\n    [twin] Fix serif option parsing.  Also make serif and weight do something\n\n src/cairo-font-face-twin.c |   20 ++++++++++++++++----\n 1 file changed, 16 insertions(+), 4 deletions(-)\n\ncommit d423339fcef3c41225196c4371fb2c133ca61144\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Sat Dec 20 19:39:58 2008 -0500\n\n    [twin] Add face properties\n    \n    Just parse them now.  We don't use them yet.\n\n src/cairo-font-face-twin.c |  191 ++++++++++++++++++++++++++++++++++++++++++--\n src/cairo-user-font.c      |    4 +-\n src/cairoint.h             |    6 +-\n 3 files changed, 189 insertions(+), 12 deletions(-)\n\ncommit 93672d842f2b2c840bb9e73901faa4ce5df9c792\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Dec 23 15:00:47 2008 +0000\n\n    [test] Fix reference handling in user-font-rescale\n    \n    user-font-rescale stored the current font on the context in order to\n    create a rescaling proxy font. As we failed to take a reference to the\n    font, it caught us by surprise when the font disappeared as we modified\n    the context before creating our proxy. Ho hum.\n\n test/user-font-rescale.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 5ad65dc4be5964265946de59a951f2304d64159e\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Tue Dec 23 14:56:48 2008 +1030\n\n    Document PDF restrict_to_version API\n\n doc/public/cairo-sections.txt  |    4 ++++\n doc/public/tmpl/cairo-pdf.sgml |   35 +++++++++++++++++++++++++++++++++++\n src/cairo-pdf.h                |    2 ++\n 3 files changed, 41 insertions(+)\n\ncommit 1869e0240bcc93c93e8abd1c8f930cf08ca8ee24\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Tue Dec 23 14:37:30 2008 +1030\n\n    Document cairo_surface_(set|get)_mime_data() and mime types\n\n doc/public/cairo-sections.txt      |    5 ++++\n doc/public/tmpl/cairo-surface.sgml |   50 ++++++++++++++++++++++++++++++++++--\n 2 files changed, 53 insertions(+), 2 deletions(-)\n\ncommit 1f894033f077731485e1228f7e071e75c37a9947\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Tue Dec 23 03:14:38 2008 +0200\n\n    [spans] Close open subpaths when filling with a scan converter.\n    \n    As reported by Christian Persch, open subpaths weren't being\n    closed when rendering to an image surface:\n    \n    http://bugs.freedesktop.org/show_bug.cgi?id=19240\n\n src/cairo-spans.c |   53 +++++++++++++++++++++++++++++++----------------------\n 1 file changed, 31 insertions(+), 22 deletions(-)\n\ncommit 0aa34c6435eaa260292cf10d270ebbf3314c7924\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Tue Dec 23 02:18:14 2008 +0200\n\n    [svg] Fix build when building only the svg vector surface.\n    \n    The SVG vector surface pulls in font subsetting and that in turns\n    uses the PDF operators in cairo-type3-glyph-surface.c.\n\n src/cairoint.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 38ec6e302cdd703447f169d95121d434c7495501\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Tue Dec 23 02:05:32 2008 +0200\n\n    [test] Fix any2ppm build when building without the full complement of surfaces.\n    \n    It was complaining about g_init_type () being used without the proper includes\n    which would have been pulled in by the svg or poppler includes.\n\n test/any2ppm.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 6ce97907edfa8a7b09abfc090a9c03d235de2ada\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Mon Dec 22 11:09:27 2008 +1030\n\n    win32-font: truncate instead of fail if toy font name too long\n    \n    http://lists.cairographics.org/archives/cairo/2008-December/016109.html\n\n src/cairo-win32-font.c |    9 ++++-----\n 1 file changed, 4 insertions(+), 5 deletions(-)\n\ncommit d99583bae680fea852e957afdf674e2031aa7928\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Dec 21 17:03:17 2008 +1030\n\n    Fix win32 font breakage\n    \n    as a result of the toy font face changes in f7ab65e9b0c0f08be8d294e90131baa2decf1f1d\n\n src/cairo-win32-font.c |    6 ++----\n 1 file changed, 2 insertions(+), 4 deletions(-)\n\ncommit a5983929f8f07f384f78e0b604e22037cf5ed716\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Sat Dec 20 01:18:12 2008 -0500\n\n    [toy-font-face] Move toy font face code in a file of its own\n\n src/Makefile.sources           |    1 +\n src/cairo-debug.c              |    2 +-\n src/cairo-font-face.c          |  449 ------------------------------------\n src/cairo-mutex-list-private.h |    2 +-\n src/cairo-os2-surface.c        |    9 +-\n src/cairo-scaled-font.c        |    4 +-\n src/cairo-toy-font-face.c      |  489 ++++++++++++++++++++++++++++++++++++++++\n src/cairoint.h                 |    5 +-\n 8 files changed, 497 insertions(+), 464 deletions(-)\n\ncommit 8bf49b27aeea8179b5862a424fb3ef1934be6e0e\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Dec 19 20:46:36 2008 -0500\n\n    [font-face] Use cairo_font_face_t instead of toy, for nil objects\n    \n    And with a NULL backend.  We are not supposed to read the nil objects\n    afterall.\n    \n    If this causes crashes, the crash site should be fixed.\n\n src/cairo-font-face.c |   55 +++++++++----------------------------------------\n src/cairoint.h        |    2 +-\n 2 files changed, 11 insertions(+), 46 deletions(-)\n\ncommit e3675f8ac0acb285b2d669c0a44322623dac5fe9\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Fri Dec 19 08:50:26 2008 -0500\n\n    Fix definition of _cairo_quartz_font_face_backend\n    \n    Removes the NULL so that _cairo_quartz_font_face_scaled_font_create\n    is in the correct location.\n\n src/cairo-quartz-font.c |    1 -\n 1 file changed, 1 deletion(-)\n\ncommit fa7d96e1236cdfa0016f96e5c7b6bd209c405cba\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Fri Dec 19 08:47:07 2008 -0500\n\n    Fix compilation of quartz surface.\n    \n    Declares _cairo_quartz_scaled_font_backend ahead of time and makes it static.\n    Also, removes the 'static' from the _cairo_quartz_font_backend definition.\n\n src/cairo-quartz-font.c |    6 ++++--\n 1 file changed, 4 insertions(+), 2 deletions(-)\n\ncommit f8886ad1b30ec9c29ec5ac3e9cd5519dbc9e7b65\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Thu Dec 18 20:50:20 2008 -0500\n\n    [scaled-font-zero-matrix] Destrory scaled font and font options\n    \n    Oops.\n\n test/scaled-font-zero-matrix.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 4567692326daf592ab432670c6d33b49f940dd35\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Thu Dec 18 18:03:40 2008 -0500\n\n    Add test creating a scaled font with a zero ctm matrix\n\n test/Makefile.am               |    1 +\n test/scaled-font-zero-matrix.c |   59 ++++++++++++++++++++++++++++++++++++++++\n 2 files changed, 60 insertions(+)\n\ncommit 18054ef00c69f62804e08734fd2c3286373b451f\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Thu Dec 18 18:01:52 2008 -0500\n\n    [test] Quartz doesn't like being forked\n    \n    When the cairo-test-suite forks CoreFoundation complains with:\n    \"The process has forked and you cannot use this CoreFoundation functionality safely. You MUST exec().\n    When forked so avoid doing it in the test suite for now. In the future we should investigate\n    the possibility of a work around.\n\n test/cairo-test-runner.c |   12 ++++++++----\n 1 file changed, 8 insertions(+), 4 deletions(-)\n\ncommit b4e0d489bb0317fdd935ad2d29830e48b5ce4f6c\nMerge: 813cbf1 f60da9a\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Thu Dec 18 17:25:17 2008 -0500\n\n    Merge branch '1.8'\n    \n    Conflicts:\n    \tNEWS\n    \tbuild/Makefile.am.changelog\n    \tcairo-version.h\n    \tsrc/cairo-gstate.c\n\ncommit f60da9a379890a3a4cd74cdad48e73c22cb74160\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Thu Dec 18 17:07:25 2008 -0500\n\n    Fix _compute_transform to check for nearly degenerate matrices\n    \n    If a matrix was something like [0 .000001 0, .000001 0 0] the old code would\n    assume that xx and yy were greater than 0 and turn the nearly degenerate matrix\n    into an actual degenerate one. This caused things to blow up later on. Now we\n    check that our nearly rectangular matrices are not nearly degenerate, and let\n    the nearly degenerate ones fall through to the non-rectangular path.\n    \n    Note: I'm not sure why NEARLY_ZERO(d) is fabs(d) < 1/65536 instead of some\n    other value.  Hopefully, it's a useful definition.\n    \n    This problem was found by a test case attached to:\n    https://bugzilla.mozilla.org/show_bug.cgi?id=467423\n\n src/cairo-win32-font.c |    6 ++++--\n 1 file changed, 4 insertions(+), 2 deletions(-)\n\ncommit 813cbf13ddbd3d4b708b3b362dd6c108966f44d5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Dec 18 14:52:03 2008 +0000\n\n    [path] Separate the approx. bounds into 3 distinct functions\n    \n    Based on feedback from Jeff Muizelaar, there is a case for a very quick\n    and dirty extents approximation based solely on the curve control points\n    (for example when computing the clip intersect rectangle of a path) and\n    by moving the stroke extension into a core function we can clean up the\n    interface for all users, and centralise the logic of approximating the\n    stroke extents.\n\n src/cairo-analysis-surface.c |   32 ++++++-------\n src/cairo-clip.c             |   14 +++---\n src/cairo-path-bounds.c      |  101 +++++++++++++++++++++++++++++++++++++++---\n src/cairo-rectangle.c        |   10 -----\n src/cairo-surface-fallback.c |   10 ++---\n src/cairoint.h               |   19 +++++---\n 6 files changed, 134 insertions(+), 52 deletions(-)\n\ncommit dea40e61babe608315b6d365094cf518814b134e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Dec 18 11:50:00 2008 +0000\n\n    [path] Return the fixed-point bounds of the path\n    \n    When analysing the stroke extents, we need the original fixed-point\n    extents so that we do not incur an OBO when we round-to-integer a second\n    time. We also need a more accurate estimate than simply using the control\n    points of the curve, so pass in tolerance and decompose until someone\n    discovers a cheaper algorithm to determine the precise aligned bounding\n    box of a bezier curve.\n\n src/cairo-analysis-surface.c |   30 +++++++------\n src/cairo-clip.c             |   25 ++++++-----\n src/cairo-path-bounds.c      |   95 +++++++++++++++++++++---------------------\n src/cairo-rectangle.c        |   10 +++++\n src/cairo-surface-fallback.c |    9 ++--\n src/cairoint.h               |    9 +++-\n 6 files changed, 98 insertions(+), 80 deletions(-)\n\ncommit 3a53e0261b1b5af21bf37e2a211eefd501bd5358\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Dec 18 11:10:17 2008 +0000\n\n    [test] Update twin reference images.\n    \n    Closing the 'o' in twin has removed a slight artefact - update the reference\n    images to match.\n\n test/twin.pdf.ref.png |  Bin 1673 -> 1669 bytes\n test/twin.ref.png     |  Bin 1718 -> 1712 bytes\n 2 files changed, 0 insertions(+), 0 deletions(-)\n\ncommit c2478de26cc1781b8f8604191a9f75ad29eac746\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Dec 18 10:50:45 2008 +0000\n\n    [twin] Switch internal users to the new name.\n    \n    s/<cairo>/@cairo:/\n\n doc/tutorial/src/twin.c |    2 +-\n test/twin.c             |    2 +-\n 2 files changed, 2 insertions(+), 2 deletions(-)\n\ncommit 3424b5f8c8cb1f2ef16b9e8429e64f720106f4d8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Dec 18 10:47:44 2008 +0000\n\n    [scaled-font] Make check-doc happy\n    \n    Replace a structure marker '#' with a macro marker '%'.\n\n src/cairo-scaled-font.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 449bf0bb7bff38da1c5d0286cb4f22c858bcc3a9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Dec 18 10:45:22 2008 +0000\n\n    [script] Silence incorrect compiler warnings\n    \n    Bah, the compiler failed to do its IPA correctly and wrongly complained\n    about potential use of uninitialised out-params guarded by the return\n    value. Silence them!\n\n util/cairo-script/cairo-script-operators.c |   38 ++++++++++++++--------------\n 1 file changed, 19 insertions(+), 19 deletions(-)\n\ncommit ce0b136a441382b25d0932cd66a906a30a693365\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 17 20:34:45 2008 +0000\n\n    Query the backend to see if we can repaint the solid pattern.\n    \n    If we are dithering on the Xlib backend we can not simply repaint the\n    surface used for a solid pattern and must recreate it from scratch.\n    However, for ordinary XRender usage we do not want to have to pay that\n    price - so query the backend to see if we can reuse the surface.\n\n src/cairo-analysis-surface.c  |    2 ++\n src/cairo-meta-surface.c      |    1 +\n src/cairo-paginated-surface.c |    1 +\n src/cairo-pdf-surface.c       |    1 +\n src/cairo-script-surface.c    |    1 +\n src/cairo-surface.c           |   41 ++++++++++++++++++++++++-----------------\n src/cairo-xlib-surface.c      |   12 +++++++++++-\n src/cairoint.h                |    5 +++++\n src/test-meta-surface.c       |    1 +\n src/test-paginated-surface.c  |    1 +\n 10 files changed, 48 insertions(+), 18 deletions(-)\n\ncommit 0df43251d4b4641d16c0a2e2c49d18dd2a9c832e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 17 23:45:39 2008 +0000\n\n    [replay] Take advantage of unresolved fonts\n    \n    As Behdad has changed the underlying ft-font to accept unresolved patterns,\n    take advantage of that to simplify the replay code.\n\n util/cairo-script/cairo-script-operators.c |   16 ++--------------\n 1 file changed, 2 insertions(+), 14 deletions(-)\n\ncommit 97a00bdd4eefade8d0808b5572bcdbba26c9c8f3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 17 17:32:07 2008 +0000\n\n    [cairoint.h] Wrap macro in parenthesis\n    \n    Ensure that the stride calculation macro is not influenced by surrounding\n    precedence issues by enclosing it in a pair of parenthesis.\n\n src/cairoint.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit aa65e756d496f4c3a8b43d2100e17dc39c2c26b7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Dec 5 11:21:11 2008 +0000\n\n    [script] Avoid creating 0x0 windows\n    \n    XCreateWindow dies if asked to create a 0x0 window, so don't and use a 1x1\n    pixel window for a zero-sized surface.\n\n util/cairo-script/csi-replay.c |    6 ++++--\n 1 file changed, 4 insertions(+), 2 deletions(-)\n\ncommit 6458903c95c2bba3f1b9ceaaafb6979d180ab039\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 17 10:07:32 2008 +0000\n\n    [image] Eliminate the short-lived context used for coercing.\n    \n    When coercing from one image format to another we performed a paint\n    operation using a temporary context - this is overkill as we can just call\n    _cairo_surface_paint() directly.\n\n src/cairo-image-surface.c       |   42 ++++++++++++++++++++++-----------------\n src/cairo-scaled-font.c         |   40 +++++++++++++++++++------------------\n src/cairo-svg-surface.c         |   18 ++++++++---------\n src/cairo-type3-glyph-surface.c |   20 ++++---------------\n src/cairoint.h                  |    4 ++--\n 5 files changed, 59 insertions(+), 65 deletions(-)\n\ncommit 9b46d13b6cd58c711010df89a41b216c5cc8c881\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 17 23:52:32 2008 +0000\n\n    [trace] Runtime version check.\n    \n    Check that the application is using cairo >= 1.9 before attempting to\n    query the mime-data.\n\n util/cairo-trace/trace.c |   47 ++++++++++++++++++++++++----------------------\n 1 file changed, 25 insertions(+), 22 deletions(-)\n\ncommit 2d790daa957471670f4ae0d3b22da89e4ee7111f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Dec 18 00:47:08 2008 +0000\n\n    [pattern] Use a solid pattern for a uniform gradient.\n    \n    If each color stop in a gradient is identical, replace the gradient\n    surface with a simple solid surface. As seen in the wild.\n\n src/cairo-pattern.c |   54 +++++++++++++++++++++++++++++++++++++--------------\n 1 file changed, 39 insertions(+), 15 deletions(-)\n\ncommit 25a4677200ea6689be0dca9d533842dc7da54837\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 17 09:29:35 2008 +0000\n\n    [analysis] Use approximate extents.\n    \n    Use the approximate path based extents to avoid tessellation.\n\n src/cairo-analysis-surface.c |   54 +++++++++++++-----------------------------\n 1 file changed, 17 insertions(+), 37 deletions(-)\n\ncommit 18bca91411e9ba6e1e58dbc945a0567d2661568f\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Thu Dec 18 02:12:14 2008 -0500\n\n    [twin] close_path the 'o'\n\n src/cairo-font-face-twin-data.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 5ee6aad471d460f960a5e7a5a8e35aca0f0af60e\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Wed Dec 17 18:05:51 2008 -0500\n\n    [toy] Use twin font if font backend returns UNSUPPORTED\n\n src/cairo-font-face.c |   19 ++++++++-----------\n 1 file changed, 8 insertions(+), 11 deletions(-)\n\ncommit eb069094ea4471b3e63881fe0f8b958ad8924c7d\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Wed Dec 17 17:30:34 2008 -0500\n\n    Treat any toy family starting with \"@cairo:\" as request for twin\n\n src/cairo-font-face.c |    3 ++-\n src/cairoint.h        |    2 +-\n 2 files changed, 3 insertions(+), 2 deletions(-)\n\ncommit 32c66109059398e88f50335bef75fa8c0e51c4c8\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Wed Dec 17 17:43:37 2008 -0500\n\n    Call _cairo_error when propagating error status from the font_face.\n\n src/cairo-gstate.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 1d72e53c3e99f93aa59967c76f1b1b4c035b9130\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Wed Dec 17 17:42:18 2008 -0500\n\n    Add a missing _cairo_error() to a bunch of status returns.\n\n src/cairo-misc.c        |    4 ++--\n src/cairo-scaled-font.c |   14 +++++++-------\n src/cairo.c             |    2 +-\n 3 files changed, 10 insertions(+), 10 deletions(-)\n\ncommit af3a892c3ef6a7c1d28d523944bbb67e59edc1de\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Wed Dec 17 16:45:28 2008 -0500\n\n    [ft] Remove stale comment\n\n src/cairo-ft-font.c |    4 ----\n 1 file changed, 4 deletions(-)\n\ncommit 0137b9bd320783264d865a397392b0ee14fd69b3\nAuthor: Karl Tomlinson <karlt+@karlt.net>\nDate:   Wed Dec 17 16:40:12 2008 -0500\n\n    [ft] Don't call FT_Done_Face() on faces we did not create\n\n src/cairo-ft-font.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit e4d7c87b5e449a743a68dd256faaa3242f191a44\nAuthor: Karl Tomlinson <karlt+@karlt.net>\nDate:   Wed Dec 17 16:40:12 2008 -0500\n\n    [ft] Don't call FT_Done_Face() on faces we did not create\n\n src/cairo-ft-font.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 6778a5f67ae2e35e809cf4464530e2bb05870378\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Wed Dec 17 16:19:45 2008 -0500\n\n    [.gitignore] Update\n\n build/.gitignore |    2 ++\n src/.gitignore   |    1 +\n 2 files changed, 3 insertions(+)\n\ncommit 26f471999973c538e45db0ae9f0227fbe5dedf24\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Wed Dec 17 16:08:32 2008 -0500\n\n    [scaled-font] Improve docs\n\n src/cairo-scaled-font.c |    8 +++++++-\n 1 file changed, 7 insertions(+), 1 deletion(-)\n\ncommit f7ab65e9b0c0f08be8d294e90131baa2decf1f1d\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Wed Dec 17 06:25:50 2008 -0500\n\n    Clean up toy font face handling\n    \n    This commit moves the toy-to-real mapping from the scaled font creation\n    time to font face creation.  A toy font face will keep an internal ref\n    to an implementation face.  Then cairo_scaled_font_create() will simply\n    substitute the implementation face before creating anything.\n    \n    This also modifies the cairo-ft toy creation in that we now create a\n    non-resolved pattern and store it in a cairo-ft font-face.  We then\n    do the resolving and unscaled font creation at scaled-font creation\n    time.  This also means that cairo_ft_font_face_create_for_pattern()\n    now accepts non-resolved patterns too, and does the right thing about\n    them.  As much as that can be called right.\n    \n    Some testing of toy font creation performance is in order, as is testing\n    win32 and quartz font backends.\n\n src/cairo-font-face.c   |  143 +++++++++---------\n src/cairo-ft-font.c     |  371 ++++++++++++++++++++++++++++-------------------\n src/cairo-quartz-font.c |  208 ++++++++++----------------\n src/cairo-scaled-font.c |   19 ++-\n src/cairo-user-font.c   |   62 +-------\n src/cairo-win32-font.c  |   20 +--\n src/cairoint.h          |   40 +++--\n 7 files changed, 412 insertions(+), 451 deletions(-)\n\ncommit 43edb4dd7b8d0614a6c2be15dfa72f980dd55f1d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Dec 12 18:10:58 2008 +0000\n\n    Fix compilation with gcov\n    \n    We need to add --coverage to LDFLAGS, so create CAIRO_LDFLAGS and use that\n    to populate AM_LDFLAGS.\n\n boilerplate/Makefile.am     |    1 +\n build/configure.ac.analysis |    6 +++++-\n build/configure.ac.features |    1 +\n src/Makefile.am             |    3 ++-\n test/Makefile.am            |   17 +++++++++--------\n 5 files changed, 18 insertions(+), 10 deletions(-)\n\ncommit bcea3151d66495f03d67ce71274203d0515caf4c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Dec 12 14:08:11 2008 +0000\n\n    [test] Add missing joins.ref.png\n    \n    Missed this file when adding the reference images for joins.\n\n test/joins.ref.png |  Bin 0 -> 5879 bytes\n 1 file changed, 0 insertions(+), 0 deletions(-)\n\ncommit 8cec548854d86dac8f0c99e99461421c8ad653b1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Dec 14 14:06:07 2008 +0000\n\n    [NEWS] Add notes for 1.8.6\n    \n    Add the historical blurb for 1.8.6.\n\n NEWS |   49 +++++++++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 49 insertions(+)\n\ncommit 0a1d194ad85398c8711268fd9ba679f8609206a1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Dec 14 14:53:27 2008 +0000\n\n    [perf] Fix for git-1.6\n    \n    git-1.6 moved all the subcommands out of the PATH so update our usage.\n\n perf/cairo-perf-graph |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 1c2eba92c16207a48f9c8f52065fbf9a65d16fcd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Dec 14 13:05:01 2008 +0000\n\n    [RELEASING] Update Makefile for git-1.6\n    \n    Git moved all the subcommands out of the PATH, so we need to update our\n    usage.\n\n build/Makefile.am.changelog |    4 ++--\n build/Makefile.am.releasing |    4 ++--\n 2 files changed, 4 insertions(+), 4 deletions(-)\n\ncommit 2fa6b6353740b7941e90e50bf6b0eb5f06aa11b5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Dec 14 11:40:12 2008 +0000\n\n    [RELEASING] Correct a few minor typos.\n    \n    As I was reading through the instructions, take the opportunity to fix a\n    few spelling mistakes.\n\n RELEASING |   10 +++++-----\n 1 file changed, 5 insertions(+), 5 deletions(-)\n\ncommit 1950abd14c28d58913c085d3829eb99a078cf2d1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Dec 14 11:26:56 2008 +0000\n\n    [doc] Fix erroneous doc comment.\n    \n    A normal comment was marked as a gtk-doc entry and thus causing gtk-doc to\n    complain.\n\n src/cairo-path-fixed.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 9485cd947f982ecd1e4f8d948786af3265d6eb74\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Dec 14 16:35:14 2008 +0000\n\n    Increment version to 1.8.7 after the 1.8.6 release.\n\n cairo-version.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit e2a2eddcfb8fc73f3decdb91c00e8e6d5282e09c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Dec 14 14:07:11 2008 +0000\n\n    Increment version to 1.8.6\n    \n    In preparation for the next stable release.\n\n cairo-version.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit ef7c42a7d390064b2a5b08e14d5f65b8ea4628e3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Dec 14 14:06:07 2008 +0000\n\n    [NEWS] Add notes for 1.8.6\n    \n    Add the historical blurb for 1.8.6.\n\n NEWS |   50 ++++++++++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 50 insertions(+)\n\ncommit ce91e6ac360e1dbe57a4e729b68d84499603e9ae\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Dec 14 14:53:27 2008 +0000\n\n    [perf] Fix for git-1.6\n    \n    git-1.6 moved all the subcommands out of the PATH so update our usage.\n\n perf/cairo-perf-graph |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit f8372509aff662e9cbabeb99560b01019395c15e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Dec 14 13:05:01 2008 +0000\n\n    [RELEASING] Update Makefile for git-1.6\n    \n    Git moved all the subcommands out of the PATH, so we need to update our\n    usage.\n\n build/Makefile.am.changelog |    4 ++--\n build/Makefile.am.releasing |    4 ++--\n 2 files changed, 4 insertions(+), 4 deletions(-)\n\ncommit 9faa9a214994fe27a0cb27a298881f23c2050bbe\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Dec 14 11:40:12 2008 +0000\n\n    [RELEASING] Correct a few minor typos.\n    \n    As I was reading through the instructions, take the opportunity to fix a\n    few spelling mistakes.\n\n RELEASING |   10 +++++-----\n 1 file changed, 5 insertions(+), 5 deletions(-)\n\ncommit b1be4196513263bdbf58944ea6ac87708a399c5f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Dec 14 11:26:56 2008 +0000\n\n    [doc] Fix erroneous doc comment.\n    \n    A normal comment was marked as a gtk-doc entry and thus causing gtk-doc to\n    complain.\n\n src/cairo-path-fixed.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 79bd32a6ccb1a882ddd2b1585ab155f568bf5ec7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Dec 6 13:32:37 2008 +0200\n\n    [perf-diff] Fix cairo-perf-diff for git 1.6\n    \n    Since git 1.6 the plumbing commands aren't installed in the user's\n    path by default.  This patch fixes cairo-perf-diff to find the\n    git-sh-setup command from git's lib dir.\n    (cherry picked from commit 0c0f4862c52d68776024f125b003ade455044b27)\n\n perf/cairo-perf-diff |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 97b5240beeb9206f4dbda6ffce33b51aa16eec2f\nAuthor: Julien Danjou <julien@danjou.info>\nDate:   Tue Nov 18 10:01:49 2008 +0100\n\n    [xcb] check for render extension presence\n    \n    Otherwise this may leads to an invalid memory access to r.\n    \n    Fixes: Bug 18588 - XCB backend fails with missing render.\n    https://bugs.freedesktop.org/show_bug.cgi?id=18588\n    \n    Signed-off-by: Julien Danjou <julien@danjou.info>\n    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>\n    (cherry picked from commit 834f1d7b7097dcc3a32f6c65d21e87fd272d924a)\n\n AUTHORS                 |    1 +\n src/cairo-xcb-surface.c |    8 ++++++--\n 2 files changed, 7 insertions(+), 2 deletions(-)\n\ncommit 6fed98c0d3b0708ad5171654179a482fa7d88805\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Dec 5 21:14:45 2008 +0000\n\n    [gstate] Remove culled glyphs from clusters.\n    \n    Sascha Steinbiss reported a bug where the PDF backend was reading beyond\n    the end of the glyph array:\n    http://lists.cairographics.org/archives/cairo/2008-December/015976.html.\n    \n    It transpires that in the early glyph culling in the gstate we were\n    not updating the clusters to skip culled glyphs.\n\n src/cairo-gstate.c |  223 +++++++++++++++++++++++++++++++++++++++++-----------\n 1 file changed, 176 insertions(+), 47 deletions(-)\n\ncommit 2b7c6f361a3cfe309ff0bcb606b808acbf36aa0f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 26 12:33:12 2008 +0000\n\n    [skiplist] Allocate elements in chunks.\n    \n    Use a pool allocator to preallocate a chunk from which to allocate the\n    skiplist elements (if we failed to reallocate from the freelists).\n\n src/cairo-bentley-ottmann.c  |   33 +++++++++++-----\n src/cairo-skiplist-private.h |    3 +-\n src/cairo-skiplist.c         |   85 +++++++++++++++++++++++++++++++++---------\n 3 files changed, 94 insertions(+), 27 deletions(-)\n\ncommit 903b39c30448d62e2cbf9d075c5256a333bd5d8f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Dec 4 15:22:01 2008 +0000\n\n    [test] Make the xlib-fallback use the image refs.\n    \n    The xlib-fallback is closer to the image than the xlib backend, so prefer\n    not to use the xlib.ref.png.\n\n boilerplate/cairo-boilerplate.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 792057539bf814cc00447a0a53978e0af3efe270\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 3 10:52:59 2008 +0000\n\n    [test] Only delete output images beneath output.\n    \n    We were using an overly-liberal find that also deleted copied output for\n    use in CAIRO_REF_DIR if that directory was below test/. So only delete\n    files below output/ (which should only be used by cairo-test).\n\n test/Makefile.am |    7 +++----\n 1 file changed, 3 insertions(+), 4 deletions(-)\n\ncommit 913cbad25e08a07c05b8c2e6ddd3c343ca2462b2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Dec 2 13:06:50 2008 +0000\n\n    [test] Add a simple joins test case\n    \n    Exercise joins between short (<LINE_WIDTH) lines - used in debugging\n    stroke-to-path.\n\n test/Makefile.am      |    3 ++\n test/joins.c          |  109 +++++++++++++++++++++++++++++++++++++++++++++++++\n test/joins.ps.ref.png |  Bin 0 -> 5496 bytes\n 3 files changed, 112 insertions(+)\n\ncommit 9f4f41de7d20ee46ee8ca06716cbc18e55cfcf86\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Dec 2 13:05:30 2008 +0000\n\n    [tutorial] Correct twin font name\n    \n    We changed the name for the builtin font  from \"cairo\" to \"<cairo>\" to\n    reduce possible naming conflicts - update the tutorial to match.\n\n doc/tutorial/src/twin.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 4ff884fe4df64234a7da4635d78ffafabe00f18c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Nov 30 19:18:15 2008 +0000\n\n    [test] Check idempotency of append_path() -> copy_path()\n    \n    The API should preserve the precision across the public interface so that\n    the user is able to retrieve the co-ordinates that he used to construct\n    the path. However since we transform the path to a 24.8 fixed-point\n    internal represent we currently incur a precision-loss - the affects of\n    which can be seen in the miter-precision test case for example. It is\n    planned to move to keeping the path as doubles until the backend\n    explicitly requests the fixed-point coodinates (and some backends, e.g.\n    pdf, might only ever use the doubles). Then, barring rounding errors\n    during path transformations, we should be able to return the exact path\n    the user set (under an identity CTM, of course ;-).\n\n test/Makefile.am      |    1 +\n test/path-precision.c |  108 +++++++++++++++++++++++++++++++++++++++++++++++++\n 2 files changed, 109 insertions(+)\n\ncommit fe4af195a7880336894a5fbae86740ef55c14cbf\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Nov 30 13:48:11 2008 +0000\n\n    [test] Add a rectilinear-dash test case.\n    \n    Exercise dashing on pixel-aligned boundaries to test extending the\n    rectilinear stroker to handle dashes.\n\n test/Makefile.am              |    2 +\n test/rectilinear-dash.c       |  176 +++++++++++++++++++++++++++++++++++++++++\n test/rectilinear-dash.ref.png |  Bin 0 -> 291 bytes\n 3 files changed, 178 insertions(+)\n\ncommit 1d68ee73f8d406671d25a1ab6c3cfb096a7a6ce7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Nov 23 08:59:56 2008 +0000\n\n    [pattern] Compute the combined color content.\n    \n    When multiplying two colors together, the combined content is simply the\n    or of the their contents.\n\n src/cairo-pattern.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit 30cef3116ed960a94323477154896a03c4fb30bb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Dec 11 01:45:31 2008 +0000\n\n    [spans] Add a sentinel cell to the cell_list.\n    \n    By terminating the list with a cell for INT_MAX, we remove a few\n    conditionals from the hot-paths.\n\n src/cairo-tor-scan-converter.c |   25 +++++++++++++++----------\n 1 file changed, 15 insertions(+), 10 deletions(-)\n\ncommit 3b2bb95249afdc3a705d0ce5205019e7d9d31020\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Dec 11 01:22:37 2008 +0000\n\n    [spans] Embed 64 edge buckets into polygon\n    \n    Frequently we only need a few y-buckets, so embed 64 into the parent\n    structure.\n\n src/cairo-tor-scan-converter.c |   40 ++++++++++++----------------------------\n 1 file changed, 12 insertions(+), 28 deletions(-)\n\ncommit 70235df72e3f33482527090d7039d8cab7ef6ff9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Dec 11 00:32:13 2008 +0000\n\n    [spans] Pool capacity is in bytes not elements.\n    \n    Set the polygon capacity to a shade under 8k, not 200 bytes, reducing the\n    number of malloc calls made by the scan convertor by a factor of 40!\n\n src/cairo-tor-scan-converter.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 6f284587a4ef829a1666fe730e590b59e4eedd5e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 10 13:50:23 2008 +0000\n\n    [script] Add examples\n    \n    Add some simple examples to demonstrate CairoScript, courtesy of M Joonas\n    Philaja.\n\n configure.ac                                       |    1 +\n util/cairo-script/Makefile.am                      |    2 +\n util/cairo-script/examples/Makefile.am             |   10 +\n util/cairo-script/examples/dragon.cs               |   48 +\n util/cairo-script/examples/hilbert.cs              |   51 +\n util/cairo-script/examples/infinichess.cs          |   29 +\n util/cairo-script/examples/interference.cs         |   46 +\n util/cairo-script/examples/pythagoras-tree.cs      |   53 +\n util/cairo-script/examples/sierpinski.cs           |   37 +\n .../examples/wedgeAnnulus_crop_ybRings.cs          |   30 +\n util/cairo-script/examples/world-map.cs            |  209 +++\n util/cairo-script/examples/zrusin.cs               | 1333 ++++++++++++++++++++\n 12 files changed, 1849 insertions(+)\n\ncommit 463dc2891312e3658875d6964a91e7e875de4b38\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 10 21:09:14 2008 +0000\n\n    [script] Allocate the interned strings from a permanent pool\n    \n    Reduce memory fragmentation by allocating the permanent strings from a\n    single pool.\n\n util/cairo-script/cairo-script-interpreter.c |   52 ++++++++++++++++++++------\n util/cairo-script/cairo-script-private.h     |    4 ++\n 2 files changed, 45 insertions(+), 11 deletions(-)\n\ncommit adc9c90d79cf4bf5e3789ceadab6a49da746274a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 10 21:00:11 2008 +0000\n\n    [script] Freed object cache.\n    \n    Cache the last freed object to reduce malloc pressure.\n\n util/cairo-script/cairo-script-hash.c        |    3 -\n util/cairo-script/cairo-script-interpreter.c |   16 ++--\n util/cairo-script/cairo-script-objects.c     |  118 +++++++++++++++++---------\n util/cairo-script/cairo-script-private.h     |    5 +-\n 4 files changed, 91 insertions(+), 51 deletions(-)\n\ncommit 1042909796295234d8aadf674824d306d7bcc9b5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 10 17:56:19 2008 +0000\n\n    [script] Replay multiple files.\n    \n    Iterate over the argument vector and replay each file on the command line.\n\n util/cairo-script/csi-replay.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit c5c04528b51b9025f48fb0f3b1c4a8dc98acb214\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 10 17:30:21 2008 +0000\n\n    [script] Slab allocator\n    \n    Allocate small objects from a pool and maintain a per-size free-list.\n\n util/cairo-script/cairo-script-interpreter.c |   65 +++++++++++++++++++++++++-\n util/cairo-script/cairo-script-private.h     |   22 +++++++++\n 2 files changed, 85 insertions(+), 2 deletions(-)\n\ncommit 83f0e6cf6245c0b3fd7a9b572e5dcea9b633a644\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 10 16:46:05 2008 +0000\n\n    [script] Inline the stack push\n    \n    Frequently to push an object onto the stack all we need is to simply\n    perform the struct copy - so inline it and only call the out-of-line\n    function if we need to enlarge the stack.\n\n util/cairo-script/cairo-script-interpreter.c |   20 ++++++------\n util/cairo-script/cairo-script-operators.c   |   43 ++++++--------------------\n util/cairo-script/cairo-script-private.h     |   14 ++++++++-\n util/cairo-script/cairo-script-stack.c       |   13 ++++----\n 4 files changed, 39 insertions(+), 51 deletions(-)\n\ncommit 565b3d6ad64fe9d35ebddb4f6b46e492740ee59f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 10 15:16:02 2008 +0000\n\n    [script] Switch to hyphens.\n    \n    Using hyphen in the operators is easier to read than underscores.\n\n src/cairo-script-surface.c                 |   60 ++++-----\n util/cairo-script/cairo-script-operators.c |  189 ++++++++++++++++++----------\n util/cairo-trace/trace.c                   |  114 ++++++++---------\n 3 files changed, 211 insertions(+), 152 deletions(-)\n\ncommit 3abfd836a021a2950b7eea97f3b30011d58efcc8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 10 14:34:41 2008 +0000\n\n    [script] Null constructor\n    \n    Expose 'null', principally for comparison purposes.\n\n util/cairo-script/cairo-script-operators.c |    8 +++++++-\n util/cairo-script/cairo-script-private.h   |    7 +++++++\n 2 files changed, 14 insertions(+), 1 deletion(-)\n\ncommit 7540ac7f23db47ee3f58a557ce91aaf1c0bc72d5\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Tue Dec 9 07:52:21 2008 +0200\n\n    [script] Reverse direction of bitshift.\n    \n    Positive shift counts should shift left according to PostScript.\n\n util/cairo-script/cairo-script-operators.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 4be479cc63a783da18652528f33bd08427a74fe7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 10 13:20:06 2008 +0000\n\n    [script] Add simple to integer converter\n    \n    Simple operator to coerce the type of the object on top of the stack to\n    integer.\n\n util/cairo-script/cairo-script-operators.c |   23 +++++++++++++++++++++++\n 1 file changed, 23 insertions(+)\n\ncommit 6711b591b9efd8f116f2683f17d52e9a9ddfbaba\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 10 12:34:30 2008 +0000\n\n    [script] Simple replay.\n    \n    Basic script executer.\n\n util/cairo-script/.gitignore  |    1 +\n util/cairo-script/Makefile.am |    5 ++++-\n util/cairo-script/csi-exec.c  |   29 +++++++++++++++++++++++++++++\n 3 files changed, 34 insertions(+), 1 deletion(-)\n\ncommit 177a68ef3ecd1717b81c93c53f8c7ae27838e2e5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 10 13:21:19 2008 +0000\n\n    [script] Add a few mathematical constants\n    \n    Just pi and the sqrt(2) for the moment, more to come on demand.\n\n util/cairo-script/cairo-script-interpreter.c |   26 ++++++++++++++++++++++++++\n util/cairo-script/cairo-script-operators.c   |   17 +++++++++++++++++\n util/cairo-script/cairo-script-private.h     |    8 ++++++++\n 3 files changed, 51 insertions(+)\n\ncommit 5dfaa22a578ff6561e8d15a8c08546c840476313\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 10 12:26:09 2008 +0000\n\n    [script] Add repeat operator.\n    \n    Simple operator to repeat procedure n times.\n\n util/cairo-script/cairo-script-operators.c |   37 +++++++++++++++++++++++++++-\n 1 file changed, 36 insertions(+), 1 deletion(-)\n\ncommit 738cb327450821db2d3689e514376c0d9bc55e87\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Tue Dec 9 05:59:19 2008 +0200\n\n    [script] Fix \\t escapes in string literals.\n    \n    Typo \\r -> \\t.\n\n util/cairo-script/cairo-script-scanner.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 265ebd372a4fd510bc29c749a46393ee7caace41\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Mon Dec 8 10:14:33 2008 +0200\n\n    [script] Flesh out the relational comparison operators to be more PostScript-like.\n    \n    The relational comparison operators can now compare strings vs names\n    by content as well as performing automatic type promotions on the\n    numeric types.  For other types relational comparisons succeeed\n    only if the values compare equal according to the eq operator, and\n    put the interpreter into a type-error state otherwise.\n\n util/cairo-script/cairo-script-objects.c   |  103 ++++++++++++++++++++\n util/cairo-script/cairo-script-operators.c |  144 +++++-----------------------\n util/cairo-script/cairo-script-private.h   |    5 +\n 3 files changed, 132 insertions(+), 120 deletions(-)\n\ncommit 05afec7a8ac590d0d53a254895796f36a8b0eaf3\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Mon Dec 8 10:06:53 2008 +0200\n\n    [script] Implement the ne operator.\n\n util/cairo-script/cairo-script-operators.c |   19 ++++++++++++++++++-\n 1 file changed, 18 insertions(+), 1 deletion(-)\n\ncommit 1aeb96dc287b516955db1909995e45fe26d4f87a\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Mon Dec 8 10:03:57 2008 +0200\n\n    [script] Implement PostScript-like semantics for the eq operator.\n    \n    The eq operator would only work for some types and put the\n    interpreter in an error state if passed objects it didn't\n    know how to compare.  It would also not compare strings\n    by value nor allow strings to be compared to names.\n    This patch makes any two objects comparable.\n\n util/cairo-script/cairo-script-objects.c   |   92 ++++++++++++++++++++++++++++\n util/cairo-script/cairo-script-operators.c |   64 +------------------\n util/cairo-script/cairo-script-private.h   |    4 ++\n 3 files changed, 97 insertions(+), 63 deletions(-)\n\ncommit 620028fd19b091f525964b689ebd3a70e1636da2\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Mon Dec 8 09:23:37 2008 +0200\n\n    [script] Don't segfault when hashing empty strings.\n    \n    Check for the empty string.\n\n util/cairo-script/cairo-script-interpreter.c |   11 +++++++----\n 1 file changed, 7 insertions(+), 4 deletions(-)\n\ncommit 4ba77f776509caad030edf818a076ea9b071ad23\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Mon Dec 8 07:16:14 2008 +0200\n\n    [script] Fix dictionary construction to access the right stack slots.\n    \n    It bound values to themselves and ignored keys.\n\n util/cairo-script/cairo-script-operators.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit af53297a97eec505ac2a90768badda72056c6e3b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Dec 11 00:35:20 2008 +0000\n\n    [cairo] Use a stack buffer for text path.\n    \n    First try to allocate glyphs from the stack, similar to cairo_show_text().\n\n src/cairo.c |    9 +++++++--\n 1 file changed, 7 insertions(+), 2 deletions(-)\n\ncommit 09589e20e14476df609581027d14628f52091e71\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 10 23:45:44 2008 +0000\n\n    [clip] Intersect to region extents.\n    \n    When querying the intersection of a rectangle with the clip region, the\n    result only depends upon the region extents so we do not need to perform\n    an expensive region-region intersection computation.\n\n src/cairo-clip.c             |   18 +++++-------------\n src/cairo-surface-fallback.c |    1 -\n 2 files changed, 5 insertions(+), 14 deletions(-)\n\ncommit c5acb125e9509570c407a069f7e89acfbadda57b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 10 23:06:22 2008 +0000\n\n    [surface] Avoid a short-lived context during fallback_clone_similar()\n    \n    We can paint to the surface directly without need of a temporary context,\n    so do so.\n\n src/cairo-surface-fallback.c |   41 +++++++++++++++++++----------------------\n 1 file changed, 19 insertions(+), 22 deletions(-)\n\ncommit 888f62feaa73be326d41a485c0bcf81a3e466ee1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 10 17:42:16 2008 +0000\n\n    [test] Propagate error from path\n    \n    If the path is in error, just append it to the context so that the error\n    is propagated correctly.\n\n test/copy-path.c |    5 +++++\n 1 file changed, 5 insertions(+)\n\ncommit f13f63e3d85d28a17a3cb60b7d1a7b552f2b6872\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 10 08:54:03 2008 +0000\n\n    [test/clip-nesting] Propagate status from sub-context.\n    \n    Use cairo_path_append() to propagate an error status from a child context\n    to it parent so that it is properly reported under memfault.\n\n test/clip-nesting.c |   16 ++++++++++++++++\n 1 file changed, 16 insertions(+)\n\ncommit e6e33b036f9de5087a72cf1de9c0a4ce97c75812\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Dec 10 08:50:57 2008 +0000\n\n    [test/solid-pattern-cache-stress] Propagate status from sub-contexts.\n    \n    Use a cairo_append_path() to set an arbitrary error status on the parent\n    context, in order to propagate errors from a child.\n\n test/solid-pattern-cache-stress.c |   32 +++++++++++++++++++++++++-------\n 1 file changed, 25 insertions(+), 7 deletions(-)\n\ncommit bcb2724920aa1bca1a9a82b5017d3180f5f9523e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Dec 9 20:44:25 2008 +0000\n\n    [path] Mark points as const during _cairo_path_fixed_interpret()\n    \n    Use const to document the read-only nature of the arguments passed to the\n    callbacks.\n\n src/cairo-path-bounds.c            |   33 +++--------\n src/cairo-path-fill.c              |   33 +++--------\n src/cairo-path-fixed.c             |   86 +++++++++++++---------------\n src/cairo-path-in-fill.c           |   12 ++--\n src/cairo-path-stroke.c            |  108 ++++++++++++------------------------\n src/cairo-path.c                   |   26 +++++----\n src/cairo-pdf-operators.c          |   12 ++--\n src/cairo-pen.c                    |    4 +-\n src/cairo-quartz-surface.c         |   11 +++-\n src/cairo-rectangle.c              |    6 +-\n src/cairo-scaled-font.c            |   12 ++--\n src/cairo-script-surface.c         |   12 ++--\n src/cairo-spans.c                  |   18 +++---\n src/cairo-svg-surface.c            |   15 ++---\n src/cairo-type1-fallback.c         |   16 +++---\n src/cairo-types-private.h          |    3 +-\n src/cairo-win32-printing-surface.c |   12 ++--\n src/cairoint.h                     |   12 ++--\n 18 files changed, 186 insertions(+), 245 deletions(-)\n\ncommit 68b29cafa597128e7cae86608e04ecae6070dad9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Dec 9 20:15:34 2008 +0000\n\n    [spline] Propagate errors during add point.\n    \n    Yikes! The callback could fail so we need to propagate the error status.\n\n src/cairo-path-fill.c     |   11 +++--------\n src/cairo-path-fixed.c    |    7 ++-----\n src/cairo-path-in-fill.c  |    7 ++-----\n src/cairo-path-stroke.c   |   14 ++++++--------\n src/cairo-pen.c           |   23 ++++++++++++-----------\n src/cairo-spline.c        |   40 ++++++++++++++++++++--------------------\n src/cairo-types-private.h |    6 +++++-\n src/cairoint.h            |    9 ++-------\n 8 files changed, 52 insertions(+), 65 deletions(-)\n\ncommit 2f3905dec38a710234aba30e1983b80ea3066a50\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Dec 9 19:21:35 2008 +0000\n\n    [image] Set status on error path.\n    \n    We failed to set the status after cairo_image_surface_create() returned an\n    error.\n\n src/cairo-image-surface.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit dfc49a67e62bea359b33413e9b882e92952431de\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Dec 9 14:44:51 2008 +0000\n\n    [test] Trim the number of fallback resolutions tested.\n    \n    Simplify the test matrix to only include testing the fallback-resolution\n    of a uniform scale in one or both axes.\n\n test/Makefile.am                              |   20 ---\n test/fallback-resolution.c                    |  222 ++++++++++++++-----------\n test/fallback-resolution.ppi150x150.ref.png   |  Bin 8043 -> 8058 bytes\n test/fallback-resolution.ppi150x300.ref.png   |  Bin 6848 -> 0 bytes\n test/fallback-resolution.ppi150x37.5.ref.png  |  Bin 13176 -> 0 bytes\n test/fallback-resolution.ppi150x600.ref.png   |  Bin 6338 -> 0 bytes\n test/fallback-resolution.ppi150x72.ref.png    |  Bin 8370 -> 8303 bytes\n test/fallback-resolution.ppi150x75.ref.png    |  Bin 10445 -> 0 bytes\n test/fallback-resolution.ppi300x150.ref.png   |  Bin 6851 -> 0 bytes\n test/fallback-resolution.ppi300x300.ref.png   |  Bin 5637 -> 5639 bytes\n test/fallback-resolution.ppi300x37.5.ref.png  |  Bin 12870 -> 0 bytes\n test/fallback-resolution.ppi300x600.ref.png   |  Bin 4848 -> 0 bytes\n test/fallback-resolution.ppi300x72.ref.png    |  Bin 7053 -> 7014 bytes\n test/fallback-resolution.ppi300x75.ref.png    |  Bin 9617 -> 0 bytes\n test/fallback-resolution.ppi37.5x150.ref.png  |  Bin 12728 -> 0 bytes\n test/fallback-resolution.ppi37.5x300.ref.png  |  Bin 11981 -> 0 bytes\n test/fallback-resolution.ppi37.5x37.5.ref.png |  Bin 14098 -> 14092 bytes\n test/fallback-resolution.ppi37.5x600.ref.png  |  Bin 11654 -> 0 bytes\n test/fallback-resolution.ppi37.5x72.ref.png   |  Bin 12990 -> 12906 bytes\n test/fallback-resolution.ppi37.5x75.ref.png   |  Bin 13787 -> 0 bytes\n test/fallback-resolution.ppi600x150.ref.png   |  Bin 6096 -> 0 bytes\n test/fallback-resolution.ppi600x300.ref.png   |  Bin 4812 -> 0 bytes\n test/fallback-resolution.ppi600x37.5.ref.png  |  Bin 12401 -> 0 bytes\n test/fallback-resolution.ppi600x600.ref.png   |  Bin 4104 -> 4090 bytes\n test/fallback-resolution.ppi600x72.ref.png    |  Bin 6398 -> 6326 bytes\n test/fallback-resolution.ppi600x75.ref.png    |  Bin 8974 -> 0 bytes\n test/fallback-resolution.ppi72x150.ref.png    |  Bin 8069 -> 8061 bytes\n test/fallback-resolution.ppi72x300.ref.png    |  Bin 6803 -> 6911 bytes\n test/fallback-resolution.ppi72x37.5.ref.png   |  Bin 13147 -> 13167 bytes\n test/fallback-resolution.ppi72x600.ref.png    |  Bin 6245 -> 6214 bytes\n test/fallback-resolution.ppi72x72.ref.png     |  Bin 8409 -> 8416 bytes\n test/fallback-resolution.ppi72x75.ref.png     |  Bin 10628 -> 10620 bytes\n test/fallback-resolution.ppi75x150.ref.png    |  Bin 9940 -> 0 bytes\n test/fallback-resolution.ppi75x300.ref.png    |  Bin 9003 -> 0 bytes\n test/fallback-resolution.ppi75x37.5.ref.png   |  Bin 14020 -> 0 bytes\n test/fallback-resolution.ppi75x600.ref.png    |  Bin 8455 -> 0 bytes\n test/fallback-resolution.ppi75x72.ref.png     |  Bin 10202 -> 10119 bytes\n test/fallback-resolution.ppi75x75.ref.png     |  Bin 12101 -> 12127 bytes\n 38 files changed, 121 insertions(+), 121 deletions(-)\n\ncommit 0ebbcd671c362d98a60214872fa48aee1e42dde1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Dec 9 14:30:58 2008 +0000\n\n    [test] Fix memleak from fallback-resolution.\n    \n    The test-name was being recreated for every pass, but was never freed.\n\n test/fallback-resolution.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit a9697e5fb04d045fe7aaf0cee80c41eb9d09e1c1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Dec 12 11:08:13 2008 +0000\n\n    [test] Exercise glyph culling.\n    \n    Sascha Steinbiss reported an issue with glyph culling,\n    http://lists.cairographics.org/archives/cairo/2008-December/015976.html,\n    whereby we failed to update the text clusters upon culling the glyphs in\n    the gstate and proceeded to read beyond the end of the glyph array in the\n    PDF backend. This test case setups a similar condition as reported, by\n    trying to write a wide string into a small box.\n\n test/Makefile.am              |    3 ++\n test/culled-glyphs.c          |   62 +++++++++++++++++++++++++++++++++++++++++\n test/culled-glyphs.ps.ref.png |  Bin 0 -> 372 bytes\n test/culled-glyphs.ref.png    |  Bin 0 -> 434 bytes\n 4 files changed, 65 insertions(+)\n\ncommit 095a1fd7860bd1f6d4116766ade0ec9a382bb957\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Dec 5 21:14:45 2008 +0000\n\n    [gstate] Remove culled glyphs from clusters.\n    \n    Sascha Steinbiss reported a bug where the PDF backend was reading beyond\n    the end of the glyph array:\n    http://lists.cairographics.org/archives/cairo/2008-December/015976.html.\n    \n    It transpires that in the early glyph culling in the gstate we were\n    not updating the clusters to skip culled glyphs.\n\n src/cairo-gstate.c |  223 +++++++++++++++++++++++++++++++++++++++++-----------\n src/cairo.c        |    9 ++-\n 2 files changed, 183 insertions(+), 49 deletions(-)\n\ncommit 834f1d7b7097dcc3a32f6c65d21e87fd272d924a\nAuthor: Julien Danjou <julien@danjou.info>\nDate:   Tue Nov 18 10:01:49 2008 +0100\n\n    [xcb] check for render extension presence\n    \n    Otherwise this may leads to an invalid memory access to r.\n    \n    Fixes: Bug 18588 - XCB backend fails with missing render.\n    https://bugs.freedesktop.org/show_bug.cgi?id=18588\n    \n    Signed-off-by: Julien Danjou <julien@danjou.info>\n    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>\n\n AUTHORS                 |    1 +\n src/cairo-xcb-surface.c |    8 ++++++--\n 2 files changed, 7 insertions(+), 2 deletions(-)\n\ncommit e184bf0d3592c8703b1193d37553cdcdee313139\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Dec 12 10:12:43 2008 +0000\n\n    Fix compilation with --enable-png=no\n    \n    Adrian Johnson spotted that the build was broken if the PNG functions were\n    disabled. Fix.\n\n src/cairoint.h                             |    1 -\n util/cairo-script/cairo-script-operators.c |    8 ++++++++\n util/cairo-trace/trace.c                   |    4 ++++\n 3 files changed, 12 insertions(+), 1 deletion(-)\n\ncommit 391c6026402dee09bb34816637114cea990cd93a\nMerge: 2f1b581 d93bf10\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Thu Dec 11 14:41:01 2008 -0500\n\n    Merge branch '1.8'\n\ncommit 2f1b581f54713c899f3b03af1e0ac8c38c36c385\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Thu Dec 11 10:34:37 2008 -0500\n\n    [quartz] Create a copy instead of increasing the reference\n    \n    The pattern could be stack allocated so we can't take a reference to it.\n    \n    Some testing of quartz shows that it doesn't deal with malloc failure particularily\n    well. In the best case CGFunctionCreate returns NULL, in the worst case it just crashes.\n    Quartz does seem to be able to handle a NULL CGFunctionRef, so returning NULL if\n    we fail to copy the pattern avoids complicating the code to deal with\n    propagating the failure and shouldn't cause any additional crashes.\n    \n    Based on a patch by Paolo Bonzini.\n\n src/cairo-quartz-surface.c |   16 ++++++++++++++--\n 1 file changed, 14 insertions(+), 2 deletions(-)\n\ncommit f7b3f1b7d70a271575d3bb233b7ee51a21861c05\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Wed Dec 10 17:54:59 2008 -0500\n\n    [quartz] Propagate const patterns through the casts\n    \n    As part of this avoid using cairo_pattern_get_matrix() because it requires a\n    'cairo_pattern_t *' instead of 'const cairo_pattern *'\n    \n    Also, make a copy of the pattern before pasing it in to cairo_set_source()\n\n src/cairo-quartz-surface.c |   39 +++++++++++++++++++++++----------------\n 1 file changed, 23 insertions(+), 16 deletions(-)\n\ncommit d93bf10edc7e432349524221a3d1b0f0b2ec8090\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Wed Dec 10 17:02:55 2008 -0500\n\n    [quartz] Create a copy of the pattern so that the reference counts are balanced\n    \n    The pattern could be stack allocated so we can't take a reference to it;\n    instead make a copy.\n    \n    Based on a patch by Paolo Bonzini.\n\n src/cairo-quartz-surface.c |   16 ++++++++++++++--\n 1 file changed, 14 insertions(+), 2 deletions(-)\n\ncommit db4c427e8460b0e326691bd6d3784178a713eb33\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Tue Dec 9 12:03:11 2008 -0500\n\n    [quartz] Change some pattern casts to access to the base class\n    \n    Avoiding casts gives us some more type safety.\n\n src/cairo-quartz-surface.c |   12 ++++++------\n 1 file changed, 6 insertions(+), 6 deletions(-)\n\ncommit 5f60e2e00455f2894c7ce3805a029c806f21514a\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Tue Dec 9 11:41:10 2008 -0500\n\n    Reorganize the (set|get)_antialias prototypes\n    \n    Move _cairo_gstate_set_antialias() and _cairo_gstate_get_antialias() into the\n    gstate section of cairoint.h\n\n src/cairoint.h |   14 +++++++-------\n 1 file changed, 7 insertions(+), 7 deletions(-)\n\ncommit 673640a3b3931995897b01d49c5dd8d82b50dac2\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Thu Dec 4 17:53:06 2008 -0500\n\n    [win32] Use MOD instead of the '%' operator\n    \n    Repeat should be handled using MOD instead of '%' so that negative numbers\n    are handled as expected. E.g. -1 mod 600 = 599, not 495 as the '%' operator\n    gives. This was causing https://bugzilla.mozilla.org/show_bug.cgi?id=466258\n    \n    Patch from Robert O'Callahan\n\n src/cairo-win32-surface.c |    7 +++++--\n 1 file changed, 5 insertions(+), 2 deletions(-)\n\ncommit 5e06085b483dcaaa7b1b29b13cd2813c7e51e02a\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Fri Aug 1 23:28:15 2008 +0300\n\n    [cairo-spans] Render clip mask surfaces with spans if we can.\n    \n    Generating surface masks for clipping can also benefit from span\n    rendering sometimes.\n\n src/cairo-clip.c                                   |  140 ++++++++++++++++++++\n test/clip-fill-rule.pdf.argb32.ref.png             |  Bin 0 -> 509 bytes\n test/clip-fill-rule.rgb24.ref.png                  |  Bin 380 -> 390 bytes\n test/clip-fill-rule.test-paginated.rgb24.ref.png   |  Bin 0 -> 361 bytes\n test/clip-fill-rule.xlib.rgb24.ref.png             |  Bin 0 -> 380 bytes\n test/clip-nesting.pdf.argb32.ref.png               |  Bin 0 -> 850 bytes\n test/clip-nesting.rgb24.ref.png                    |  Bin 955 -> 963 bytes\n test/clip-nesting.test-fallback.rgb24.ref.png      |  Bin 0 -> 936 bytes\n test/clip-nesting.test-paginated.rgb24.ref.png     |  Bin 0 -> 936 bytes\n test/clip-nesting.xlib.rgb24.ref.png               |  Bin 0 -> 955 bytes\n test/clip-operator.pdf.argb32.ref.png              |  Bin 11600 -> 11604 bytes\n test/clip-operator.ps3.argb32.ref.png              |  Bin 7574 -> 7576 bytes\n test/clip-operator.ref.png                         |  Bin 8247 -> 8210 bytes\n test/clip-operator.test-paginated.argb32.ref.png   |  Bin 0 -> 8247 bytes\n test/clip-twice.pdf.argb32.ref.png                 |  Bin 1458 -> 1498 bytes\n test/clip-twice.ref.png                            |  Bin 1362 -> 1342 bytes\n test/clip-twice.rgb24.ref.png                      |  Bin 1198 -> 1203 bytes\n test/clip-twice.test-fallback.argb32.ref.png       |  Bin 0 -> 1343 bytes\n test/clip-twice.test-fallback.rgb24.ref.png        |  Bin 0 -> 1179 bytes\n test/clip-twice.test-paginated.argb32.ref.png      |  Bin 0 -> 1361 bytes\n test/clip-twice.test-paginated.rgb24.ref.png       |  Bin 0 -> 1199 bytes\n test/clip-twice.xlib.ref.png                       |  Bin 0 -> 1362 bytes\n test/clip-twice.xlib.rgb24.ref.png                 |  Bin 0 -> 1198 bytes\n test/device-offset-fractional.pdf.argb32.ref.png   |  Bin 0 -> 275 bytes\n test/device-offset-fractional.pdf.rgb24.ref.png    |  Bin 0 -> 275 bytes\n test/filter-nearest-offset.pdf.argb32.ref.png      |  Bin 0 -> 4295 bytes\n test/filter-nearest-offset.pdf.rgb24.ref.png       |  Bin 0 -> 4295 bytes\n test/filter-nearest-transformed.pdf.argb32.ref.png |  Bin 0 -> 488 bytes\n test/filter-nearest-transformed.pdf.rgb24.ref.png  |  Bin 0 -> 488 bytes\n test/linear-gradient.pdf.argb32.ref.png            |  Bin 1118 -> 1112 bytes\n test/linear-gradient.pdf.rgb24.ref.png             |  Bin 1118 -> 1112 bytes\n test/mask.pdf.argb32.ref.png                       |  Bin 9956 -> 9903 bytes\n test/mask.ref.png                                  |  Bin 8571 -> 8581 bytes\n test/mask.svg11.argb32.ref.png                     |  Bin 8625 -> 8682 bytes\n test/mask.svg12.argb32.ref.png                     |  Bin 8625 -> 8682 bytes\n test/meta-surface-pattern.pdf.argb32.ref.png       |  Bin 4017 -> 4011 bytes\n test/meta-surface-pattern.svg11.argb32.ref.png     |  Bin 3928 -> 3924 bytes\n test/meta-surface-pattern.svg12.argb32.ref.png     |  Bin 3928 -> 3924 bytes\n test/rotate-image-surface-paint.pdf.argb32.ref.png |  Bin 209 -> 215 bytes\n test/rotate-image-surface-paint.pdf.rgb24.ref.png  |  Bin 207 -> 215 bytes\n test/surface-pattern-scale-down.pdf.argb32.ref.png |  Bin 2386 -> 1532 bytes\n test/surface-pattern-scale-down.pdf.rgb24.ref.png  |  Bin 2386 -> 1532 bytes\n test/surface-pattern-scale-up.pdf.argb32.ref.png   |  Bin 4247 -> 3834 bytes\n test/surface-pattern-scale-up.pdf.rgb24.ref.png    |  Bin 4247 -> 3834 bytes\n test/surface-pattern.pdf.argb32.ref.png            |  Bin 0 -> 14808 bytes\n test/surface-pattern.pdf.rgb24.ref.png             |  Bin 0 -> 14808 bytes\n test/trap-clip.pdf.rgb24.ref.png                   |  Bin 6642 -> 6621 bytes\n test/trap-clip.ref.png                             |  Bin 5865 -> 5829 bytes\n test/trap-clip.test-paginated.argb32.ref.png       |  Bin 0 -> 5865 bytes\n 49 files changed, 140 insertions(+)\n\ncommit 18634c37026a2d6147443cb6d991576f62b07e6d\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Thu Jul 24 20:47:14 2008 +0300\n\n    [cairo-spans] Hook up filling paths with spans to cairo-surface-fallback.c.\n    \n    This speeds up the mask generation step in cairo_fill() for the image\n    surface by up to 10x in especially favourable cases.\n    \n    image-rgba                              twin-800 7757.80 0.20% -> 749.41 0.29%: 10.36x speedup\n    image-rgba spiral-diag-pixalign-nonzero-fill-512   15.16 0.44% ->   3.45 8.80%:  5.54x speedup\n    \n    More typical simple non-rectilinear geometries are sped up by 30-50%.\n    This patch does not affect any stroking operations or any fill\n    operations of pixel aligned rectilinear geometries; those are still\n    rendered using trapezoids.\n\n src/cairo-surface-fallback.c                       |   86 +++++++++++++++++++-\n test/clip-fill-rule.test-fallback.rgb24.ref.png    |  Bin 0 -> 361 bytes\n test/clip-operator.pdf.argb32.ref.png              |  Bin 12125 -> 11600 bytes\n test/clip-operator.pdf.rgb24.ref.png               |  Bin 7367 -> 6882 bytes\n test/clip-operator.ps2.rgb24.ref.png               |  Bin 3624 -> 3736 bytes\n test/clip-operator.ps3.argb32.ref.png              |  Bin 0 -> 7574 bytes\n test/clip-operator.ps3.rgb24.ref.png               |  Bin 3624 -> 3736 bytes\n test/clip-operator.ref.png                         |  Bin 8271 -> 8247 bytes\n test/clip-operator.rgb24.ref.png                   |  Bin 3258 -> 3279 bytes\n test/clip-operator.test-fallback.argb32.ref.png    |  Bin 0 -> 8252 bytes\n test/clip-operator.test-fallback.rgb24.ref.png     |  Bin 0 -> 3241 bytes\n test/clip-operator.xlib-fallback.rgb24.ref.png     |  Bin 0 -> 3254 bytes\n test/clip-operator.xlib.ref.png                    |  Bin 0 -> 8271 bytes\n test/clip-operator.xlib.rgb24.ref.png              |  Bin 0 -> 3258 bytes\n test/clip-twice.pdf.argb32.ref.png                 |  Bin 0 -> 1458 bytes\n test/clipped-group.pdf.argb32.ref.png              |  Bin 0 -> 298 bytes\n test/clipped-group.pdf.rgb24.ref.png               |  Bin 0 -> 298 bytes\n test/degenerate-arc.ref.png                        |  Bin 616 -> 544 bytes\n test/degenerate-arc.test-fallback.argb32.ref.png   |  Bin 0 -> 547 bytes\n test/degenerate-arc.test-fallback.rgb24.ref.png    |  Bin 0 -> 547 bytes\n test/degenerate-arc.xlib.ref.png                   |  Bin 0 -> 616 bytes\n test/fill-alpha-pattern.pdf.argb32.ref.png         |  Bin 3887 -> 3750 bytes\n test/fill-alpha-pattern.pdf.rgb24.ref.png          |  Bin 3840 -> 3758 bytes\n test/fill-alpha-pattern.ps3.argb32.ref.png         |  Bin 0 -> 4070 bytes\n test/fill-alpha-pattern.ps3.rgb24.ref.png          |  Bin 0 -> 4473 bytes\n test/fill-alpha-pattern.ref.png                    |  Bin 3653 -> 3374 bytes\n ...fill-alpha-pattern.test-fallback.argb32.ref.png |  Bin 0 -> 3379 bytes\n .../fill-alpha-pattern.test-fallback.rgb24.ref.png |  Bin 0 -> 3379 bytes\n test/fill-alpha-pattern.xlib.ref.png               |  Bin 0 -> 3653 bytes\n test/fill-alpha.ref.png                            |  Bin 2989 -> 2728 bytes\n test/fill-alpha.test-fallback.argb32.ref.png       |  Bin 0 -> 2824 bytes\n test/fill-alpha.test-fallback.rgb24.ref.png        |  Bin 0 -> 2824 bytes\n test/fill-alpha.xlib.ref.png                       |  Bin 0 -> 2989 bytes\n test/fill-degenerate-sort-order.ref.png            |  Bin 2397 -> 2406 bytes\n test/fill-degenerate-sort-order.rgb24.ref.png      |  Bin 2060 -> 2052 bytes\n ...enerate-sort-order.test-fallback.argb32.ref.png |  Bin 0 -> 2378 bytes\n ...generate-sort-order.test-fallback.rgb24.ref.png |  Bin 0 -> 2041 bytes\n test/fill-degenerate-sort-order.xlib.ref.png       |  Bin 0 -> 2397 bytes\n test/fill-degenerate-sort-order.xlib.rgb24.ref.png |  Bin 0 -> 2060 bytes\n test/fill-missed-stop.pdf.argb32.ref.png           |  Bin 0 -> 452 bytes\n test/fill-rule.ref.png                             |  Bin 1979 -> 2061 bytes\n test/fill-rule.rgb24.ref.png                       |  Bin 1722 -> 1780 bytes\n test/fill-rule.test-fallback.argb32.ref.png        |  Bin 0 -> 1979 bytes\n test/fill-rule.test-fallback.rgb24.ref.png         |  Bin 0 -> 1703 bytes\n test/fill-rule.xlib.ref.png                        |  Bin 0 -> 1979 bytes\n test/fill-rule.xlib.rgb24.ref.png                  |  Bin 0 -> 1722 bytes\n test/finer-grained-fallbacks.ps2.argb32.ref.png    |  Bin 0 -> 1173 bytes\n test/finer-grained-fallbacks.ps2.rgb24.ref.png     |  Bin 1096 -> 1154 bytes\n test/finer-grained-fallbacks.ps3.argb32.ref.png    |  Bin 0 -> 1173 bytes\n test/finer-grained-fallbacks.ps3.rgb24.ref.png     |  Bin 1096 -> 1154 bytes\n test/finer-grained-fallbacks.ref.png               |  Bin 1111 -> 1069 bytes\n test/finer-grained-fallbacks.rgb24.ref.png         |  Bin 1114 -> 839 bytes\n ...-grained-fallbacks.test-fallback.argb32.ref.png |  Bin 0 -> 1111 bytes\n ...r-grained-fallbacks.test-fallback.rgb24.ref.png |  Bin 0 -> 854 bytes\n test/finer-grained-fallbacks.xlib.ref.png          |  Bin 0 -> 1111 bytes\n test/finer-grained-fallbacks.xlib.rgb24.ref.png    |  Bin 0 -> 1114 bytes\n test/font-matrix-translation.svg11.argb32.ref.png  |  Bin 0 -> 857 bytes\n test/font-matrix-translation.svg11.rgb24.ref.png   |  Bin 0 -> 857 bytes\n test/font-matrix-translation.svg12.argb32.ref.png  |  Bin 0 -> 857 bytes\n test/font-matrix-translation.svg12.rgb24.ref.png   |  Bin 0 -> 857 bytes\n test/ft-show-glyphs-table.svg11.argb32.ref.png     |  Bin 0 -> 9953 bytes\n test/ft-show-glyphs-table.svg11.rgb24.ref.png      |  Bin 0 -> 9953 bytes\n test/ft-show-glyphs-table.svg12.argb32.ref.png     |  Bin 0 -> 9953 bytes\n test/ft-show-glyphs-table.svg12.rgb24.ref.png      |  Bin 0 -> 9953 bytes\n ...t-text-vertical-layout-type1.pdf.argb32.ref.png |  Bin 0 -> 3632 bytes\n ...ft-text-vertical-layout-type1.pdf.rgb24.ref.png |  Bin 0 -> 3632 bytes\n test/ft-text-vertical-layout-type1.ref.png         |  Bin 3980 -> 3643 bytes\n ...text-vertical-layout-type1.svg11.argb32.ref.png |  Bin 0 -> 3614 bytes\n ...-text-vertical-layout-type1.svg11.rgb24.ref.png |  Bin 0 -> 3614 bytes\n ...text-vertical-layout-type1.svg12.argb32.ref.png |  Bin 0 -> 3614 bytes\n ...-text-vertical-layout-type1.svg12.rgb24.ref.png |  Bin 0 -> 3614 bytes\n ...tical-layout-type1.test-fallback.argb32.ref.png |  Bin 0 -> 3639 bytes\n ...rtical-layout-type1.test-fallback.rgb24.ref.png |  Bin 0 -> 3639 bytes\n test/ft-text-vertical-layout-type1.xlib.ref.png    |  Bin 0 -> 3980 bytes\n ...t-text-vertical-layout-type3.pdf.argb32.ref.png |  Bin 0 -> 3642 bytes\n ...ft-text-vertical-layout-type3.pdf.rgb24.ref.png |  Bin 0 -> 3642 bytes\n test/ft-text-vertical-layout-type3.ref.png         |  Bin 3934 -> 3609 bytes\n ...text-vertical-layout-type3.svg11.argb32.ref.png |  Bin 0 -> 3640 bytes\n ...-text-vertical-layout-type3.svg11.rgb24.ref.png |  Bin 0 -> 3640 bytes\n ...text-vertical-layout-type3.svg12.argb32.ref.png |  Bin 0 -> 3640 bytes\n ...-text-vertical-layout-type3.svg12.rgb24.ref.png |  Bin 0 -> 3640 bytes\n ...tical-layout-type3.test-fallback.argb32.ref.png |  Bin 0 -> 3605 bytes\n ...rtical-layout-type3.test-fallback.rgb24.ref.png |  Bin 0 -> 3605 bytes\n test/ft-text-vertical-layout-type3.xlib.ref.png    |  Bin 0 -> 3934 bytes\n test/huge-pattern.pdf.argb32.ref.png               |  Bin 0 -> 2430 bytes\n test/linear-gradient.pdf.argb32.ref.png            |  Bin 0 -> 1118 bytes\n test/linear-gradient.pdf.rgb24.ref.png             |  Bin 0 -> 1118 bytes\n test/linear-gradient.ref.png                       |  Bin 1021 -> 983 bytes\n test/linear-gradient.svg11.argb32.ref.png          |  Bin 0 -> 988 bytes\n test/linear-gradient.svg11.rgb24.ref.png           |  Bin 0 -> 988 bytes\n test/linear-gradient.svg12.argb32.ref.png          |  Bin 0 -> 988 bytes\n test/linear-gradient.svg12.rgb24.ref.png           |  Bin 0 -> 988 bytes\n test/linear-gradient.test-fallback.argb32.ref.png  |  Bin 0 -> 923 bytes\n test/linear-gradient.test-fallback.rgb24.ref.png   |  Bin 0 -> 923 bytes\n test/linear-gradient.xlib.ref.png                  |  Bin 0 -> 1021 bytes\n test/mask-alpha.ref.png                            |  Bin 640 -> 643 bytes\n test/mask-alpha.svg11.argb32.ref.png               |  Bin 615 -> 642 bytes\n test/mask-alpha.svg11.rgb24.ref.png                |  Bin 0 -> 592 bytes\n test/mask-alpha.svg12.argb32.ref.png               |  Bin 615 -> 642 bytes\n test/mask-alpha.svg12.rgb24.ref.png                |  Bin 0 -> 592 bytes\n test/mask-alpha.test-fallback.argb32.ref.png       |  Bin 0 -> 627 bytes\n test/mask-alpha.xlib.ref.png                       |  Bin 0 -> 640 bytes\n test/mask-alpha.xlib.rgb24.ref.png                 |  Bin 0 -> 599 bytes\n test/mask.pdf.argb32.ref.png                       |  Bin 8881 -> 9956 bytes\n test/mask.pdf.rgb24.ref.png                        |  Bin 8267 -> 8735 bytes\n test/mask.ref.png                                  |  Bin 8476 -> 8571 bytes\n test/mask.rgb24.ref.png                            |  Bin 7041 -> 7216 bytes\n test/mask.svg11.argb32.ref.png                     |  Bin 8527 -> 8625 bytes\n test/mask.svg11.rgb24.ref.png                      |  Bin 7935 -> 7203 bytes\n test/mask.svg12.argb32.ref.png                     |  Bin 8527 -> 8625 bytes\n test/mask.svg12.rgb24.ref.png                      |  Bin 7935 -> 7203 bytes\n test/mask.test-fallback.argb32.ref.png             |  Bin 0 -> 8457 bytes\n test/mask.test-fallback.rgb24.ref.png              |  Bin 0 -> 7058 bytes\n test/mask.xlib-fallback.rgb24.ref.png              |  Bin 0 -> 7216 bytes\n test/mask.xlib.ref.png                             |  Bin 0 -> 8476 bytes\n test/mask.xlib.rgb24.ref.png                       |  Bin 0 -> 7041 bytes\n test/meta-surface-pattern.pdf.argb32.ref.png       |  Bin 0 -> 4017 bytes\n test/meta-surface-pattern.pdf.rgb24.ref.png        |  Bin 4009 -> 3910 bytes\n test/meta-surface-pattern.svg11.argb32.ref.png     |  Bin 3924 -> 3928 bytes\n test/meta-surface-pattern.svg11.rgb24.ref.png      |  Bin 4593 -> 3914 bytes\n test/meta-surface-pattern.svg12.argb32.ref.png     |  Bin 3924 -> 3928 bytes\n test/meta-surface-pattern.svg12.rgb24.ref.png      |  Bin 4593 -> 3914 bytes\n test/operator-clear.pdf.argb32.ref.png             |  Bin 1614 -> 1607 bytes\n test/operator-clear.ps2.argb32.ref.png             |  Bin 0 -> 1156 bytes\n test/operator-clear.ps3.argb32.ref.png             |  Bin 0 -> 1156 bytes\n test/operator-source.pdf.argb32.ref.png            |  Bin 5149 -> 5112 bytes\n test/operator-source.pdf.rgb24.ref.png             |  Bin 4354 -> 4186 bytes\n test/operator-source.ref.png                       |  Bin 4420 -> 4425 bytes\n test/operator-source.rgb24.ref.png                 |  Bin 3201 -> 3231 bytes\n test/operator-source.test-fallback.argb32.ref.png  |  Bin 0 -> 4401 bytes\n test/operator-source.test-fallback.rgb24.ref.png   |  Bin 0 -> 3200 bytes\n test/operator-source.xlib-fallback.rgb24.ref.png   |  Bin 0 -> 3193 bytes\n test/operator-source.xlib.ref.png                  |  Bin 0 -> 4420 bytes\n test/operator-source.xlib.rgb24.ref.png            |  Bin 0 -> 3201 bytes\n test/over-above-source.ps2.argb32.ref.png          |  Bin 636 -> 558 bytes\n test/over-above-source.ps3.argb32.ref.png          |  Bin 636 -> 558 bytes\n test/over-above-source.ref.png                     |  Bin 538 -> 560 bytes\n test/over-above-source.rgb24.ref.png               |  Bin 461 -> 466 bytes\n .../over-above-source.test-fallback.argb32.ref.png |  Bin 0 -> 533 bytes\n test/over-above-source.test-fallback.rgb24.ref.png |  Bin 0 -> 450 bytes\n test/over-above-source.xlib.ref.png                |  Bin 0 -> 538 bytes\n test/over-above-source.xlib.rgb24.ref.png          |  Bin 0 -> 461 bytes\n test/over-around-source.pdf.argb32.ref.png         |  Bin 0 -> 585 bytes\n test/over-around-source.ps2.argb32.ref.png         |  Bin 632 -> 522 bytes\n test/over-around-source.ps3.argb32.ref.png         |  Bin 632 -> 522 bytes\n test/over-around-source.ref.png                    |  Bin 614 -> 645 bytes\n ...over-around-source.test-fallback.argb32.ref.png |  Bin 0 -> 610 bytes\n test/over-around-source.xlib.ref.png               |  Bin 0 -> 614 bytes\n test/over-around-source.xlib.rgb24.ref.png         |  Bin 0 -> 503 bytes\n test/over-below-source.pdf.argb32.ref.png          |  Bin 0 -> 464 bytes\n test/over-between-source.ps2.argb32.ref.png        |  Bin 678 -> 551 bytes\n test/over-between-source.ps3.argb32.ref.png        |  Bin 678 -> 551 bytes\n test/over-between-source.ref.png                   |  Bin 575 -> 612 bytes\n ...ver-between-source.test-fallback.argb32.ref.png |  Bin 0 -> 578 bytes\n test/over-between-source.xlib.ref.png              |  Bin 0 -> 575 bytes\n test/over-between-source.xlib.rgb24.ref.png        |  Bin 0 -> 473 bytes\n test/push-group.pdf.argb32.ref.png                 |  Bin 0 -> 2722 bytes\n test/push-group.pdf.rgb24.ref.png                  |  Bin 2714 -> 2740 bytes\n test/push-group.ref.png                            |  Bin 3126 -> 3060 bytes\n test/push-group.rgb24.ref.png                      |  Bin 2961 -> 2912 bytes\n test/push-group.svg11.argb32.ref.png               |  Bin 2935 -> 3034 bytes\n test/push-group.svg12.argb32.ref.png               |  Bin 2935 -> 3034 bytes\n test/push-group.test-fallback.argb32.ref.png       |  Bin 0 -> 3107 bytes\n test/push-group.test-fallback.rgb24.ref.png        |  Bin 0 -> 2942 bytes\n test/push-group.xlib-fallback.rgb24.ref.png        |  Bin 0 -> 2912 bytes\n test/push-group.xlib.ref.png                       |  Bin 0 -> 3126 bytes\n test/push-group.xlib.rgb24.ref.png                 |  Bin 0 -> 2961 bytes\n test/radial-gradient.pdf.argb32.ref.png            |  Bin 0 -> 79601 bytes\n test/radial-gradient.pdf.rgb24.ref.png             |  Bin 0 -> 79601 bytes\n test/random-intersections.ref.png                  |  Bin 148722 -> 133462 bytes\n ...ndom-intersections.test-fallback.argb32.ref.png |  Bin 0 -> 132312 bytes\n ...andom-intersections.test-fallback.rgb24.ref.png |  Bin 0 -> 132312 bytes\n test/random-intersections.xlib.ref.png             |  Bin 0 -> 148722 bytes\n test/smask-fill.pdf.argb32.ref.png                 |  Bin 0 -> 1909 bytes\n test/smask-fill.pdf.rgb24.ref.png                  |  Bin 0 -> 1909 bytes\n test/smask-fill.ref.png                            |  Bin 1223 -> 1156 bytes\n test/smask-fill.svg11.argb32.ref.png               |  Bin 0 -> 1128 bytes\n test/smask-fill.svg11.rgb24.ref.png                |  Bin 0 -> 1128 bytes\n test/smask-fill.svg12.argb32.ref.png               |  Bin 0 -> 1128 bytes\n test/smask-fill.svg12.rgb24.ref.png                |  Bin 0 -> 1128 bytes\n test/smask-fill.test-fallback.argb32.ref.png       |  Bin 0 -> 1148 bytes\n test/smask-fill.test-fallback.rgb24.ref.png        |  Bin 0 -> 1148 bytes\n test/smask-fill.xlib-fallback.ref.png              |  Bin 0 -> 1156 bytes\n test/smask-fill.xlib.ref.png                       |  Bin 0 -> 1223 bytes\n test/smask-image-mask.pdf.argb32.ref.png           |  Bin 0 -> 1651 bytes\n test/smask-image-mask.pdf.rgb24.ref.png            |  Bin 0 -> 1651 bytes\n test/smask-mask.pdf.argb32.ref.png                 |  Bin 0 -> 4398 bytes\n test/smask-mask.pdf.rgb24.ref.png                  |  Bin 0 -> 4398 bytes\n test/smask-paint.pdf.argb32.ref.png                |  Bin 0 -> 4496 bytes\n test/smask-paint.pdf.rgb24.ref.png                 |  Bin 0 -> 4496 bytes\n test/smask-stroke.pdf.argb32.ref.png               |  Bin 0 -> 1417 bytes\n test/smask-stroke.pdf.rgb24.ref.png                |  Bin 0 -> 1417 bytes\n test/smask-text.svg11.argb32.ref.png               |  Bin 0 -> 1791 bytes\n test/smask-text.svg11.rgb24.ref.png                |  Bin 0 -> 1791 bytes\n test/smask-text.svg12.argb32.ref.png               |  Bin 0 -> 1791 bytes\n test/smask-text.svg12.rgb24.ref.png                |  Bin 0 -> 1791 bytes\n test/smask.pdf.argb32.ref.png                      |  Bin 0 -> 4496 bytes\n test/smask.pdf.rgb24.ref.png                       |  Bin 0 -> 4496 bytes\n test/text-pattern.pdf.argb32.ref.png               |  Bin 1823 -> 2151 bytes\n test/text-pattern.svg11.argb32.ref.png             |  Bin 1733 -> 1743 bytes\n test/text-pattern.svg12.argb32.ref.png             |  Bin 1733 -> 1743 bytes\n test/text-rotate.svg11.argb32.ref.png              |  Bin 0 -> 16942 bytes\n test/text-rotate.svg11.rgb24.ref.png               |  Bin 0 -> 16942 bytes\n test/text-rotate.svg12.argb32.ref.png              |  Bin 0 -> 16942 bytes\n test/text-rotate.svg12.rgb24.ref.png               |  Bin 0 -> 16942 bytes\n test/text-transform.svg11.argb32.ref.png           |  Bin 0 -> 5677 bytes\n test/text-transform.svg11.rgb24.ref.png            |  Bin 0 -> 5677 bytes\n test/text-transform.svg12.argb32.ref.png           |  Bin 0 -> 5677 bytes\n test/text-transform.svg12.rgb24.ref.png            |  Bin 0 -> 5677 bytes\n test/trap-clip.pdf.argb32.ref.png                  |  Bin 5809 -> 6720 bytes\n test/trap-clip.pdf.rgb24.ref.png                   |  Bin 5768 -> 6642 bytes\n test/trap-clip.ps2.argb32.ref.png                  |  Bin 5690 -> 4849 bytes\n test/trap-clip.ref.png                             |  Bin 5772 -> 5865 bytes\n test/trap-clip.rgb24.ref.png                       |  Bin 5365 -> 5457 bytes\n test/trap-clip.test-fallback.argb32.ref.png        |  Bin 0 -> 5753 bytes\n test/trap-clip.test-fallback.rgb24.ref.png         |  Bin 0 -> 5379 bytes\n test/trap-clip.xlib.ref.png                        |  Bin 0 -> 5772 bytes\n test/trap-clip.xlib.rgb24.ref.png                  |  Bin 0 -> 5365 bytes\n test/twin.svg11.argb32.ref.png                     |  Bin 0 -> 1797 bytes\n test/twin.svg11.rgb24.ref.png                      |  Bin 0 -> 1797 bytes\n test/twin.svg12.argb32.ref.png                     |  Bin 0 -> 1797 bytes\n test/twin.svg12.rgb24.ref.png                      |  Bin 0 -> 1797 bytes\n test/unbounded-operator.pdf.argb32.ref.png         |  Bin 0 -> 2713 bytes\n test/unbounded-operator.ps2.argb32.ref.png         |  Bin 0 -> 2713 bytes\n test/unbounded-operator.ps3.argb32.ref.png         |  Bin 0 -> 2713 bytes\n test/unbounded-operator.rgb24.ref.png              |  Bin 1315 -> 1341 bytes\n .../unbounded-operator.test-fallback.rgb24.ref.png |  Bin 0 -> 1306 bytes\n test/unbounded-operator.xlib.rgb24.ref.png         |  Bin 0 -> 1315 bytes\n test/user-font-proxy.pdf.argb32.ref.png            |  Bin 0 -> 16937 bytes\n test/user-font-proxy.pdf.rgb24.ref.png             |  Bin 0 -> 16937 bytes\n test/user-font-proxy.ref.png                       |  Bin 18121 -> 16937 bytes\n test/user-font-proxy.svg11.argb32.ref.png          |  Bin 0 -> 16836 bytes\n test/user-font-proxy.svg11.rgb24.ref.png           |  Bin 0 -> 16836 bytes\n test/user-font-proxy.svg12.argb32.ref.png          |  Bin 0 -> 16836 bytes\n test/user-font-proxy.svg12.rgb24.ref.png           |  Bin 0 -> 16836 bytes\n test/user-font-proxy.test-fallback.argb32.ref.png  |  Bin 0 -> 16835 bytes\n test/user-font-proxy.test-fallback.rgb24.ref.png   |  Bin 0 -> 16835 bytes\n test/user-font-proxy.xlib.ref.png                  |  Bin 0 -> 18121 bytes\n test/user-font.ref.png                             |  Bin 6183 -> 6082 bytes\n test/user-font.svg11.argb32.ref.png                |  Bin 0 -> 6411 bytes\n test/user-font.svg11.rgb24.ref.png                 |  Bin 0 -> 6411 bytes\n test/user-font.svg12.argb32.ref.png                |  Bin 0 -> 6411 bytes\n test/user-font.svg12.rgb24.ref.png                 |  Bin 0 -> 6411 bytes\n test/user-font.test-fallback.argb32.ref.png        |  Bin 0 -> 5601 bytes\n test/user-font.test-fallback.rgb24.ref.png         |  Bin 0 -> 5601 bytes\n test/user-font.xlib.ref.png                        |  Bin 0 -> 6183 bytes\n 246 files changed, 85 insertions(+), 1 deletion(-)\n\ncommit 85b81a3e59401e2fc68209634f7622694e7d30e1\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Fri Jul 11 13:10:20 2008 +0300\n\n    [cairo-spans] Implement a span renderer for cairo_image_surface_t.\n    \n    This implementation first produces an A8 alpha mask and then\n    pixman_image_composites the result to the destination with the source.\n    Clipping is handled by pixman when it is region clipping or by\n    cairo-surface-fallback when it is something more complex.\n\n src/cairo-image-surface.c |  273 ++++++++++++++++++++++++++++++++++++++-------\n 1 file changed, 233 insertions(+), 40 deletions(-)\n\ncommit 7994fc06ad66e31fcbc16f6e8cd9ad226022ec8c\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Thu Aug 28 22:16:07 2008 +0300\n\n    [cairo-spans] New cairo_tor_scan_converter_t.\n    \n    Imports a new polygon scan converter implementation from the\n    repository at\n    \n    http://cgit.freedesktop.org/~joonas/glitter-paths/\n    \n    Glitter paths is a stand alone polygon rasteriser derived from David\n    Turner's reimplementation of Tor Anderssons's 15x17 supersampling\n    rasteriser from the Apparition graphics library.  The main new feature\n    in this implementation is cheaply choosing per-scan line between doing\n    fully analytical coverage computation for an entire row at a time\n    vs. using a supersampling approach.\n\n src/Makefile.sources           |    1 +\n src/cairo-spans-private.h      |   10 +\n src/cairo-spans.c              |   18 +-\n src/cairo-tor-scan-converter.c | 2003 ++++++++++++++++++++++++++++++++++++++++\n 4 files changed, 2027 insertions(+), 5 deletions(-)\n\ncommit 2078e5b20fdff76ada6e13b29b2775b7dcd35439\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Thu Jul 31 01:58:08 2008 +0300\n\n    [cairo-spans] New _cairo_path_fixed_fill_using_spans().\n    \n    Adds a helper function for backends to use for filling a path using\n    spans.\n\n src/cairo-spans-private.h |   10 ++++\n src/cairo-spans.c         |  145 +++++++++++++++++++++++++++++++++++++++++++++\n 2 files changed, 155 insertions(+)\n\ncommit 4a9b274eebe674bbc5c66dc3e33256723cdf9829\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Fri Jul 11 00:59:47 2008 +0300\n\n    [cairo-spans] Add a check/create_span_renderer backend methods.\n    \n    A surface will have the chance to use span rendering at cairo_fill()\n    time by creating a renderer for a specific combination of\n    pattern/dst/op before the path is scan converted.  The protocol is to\n    first call check_span_renderer() to see if the surface wants to render\n    with spans and then later call create_span_renderer() to create the\n    renderer for real once the extents of the path are known.\n    \n    No backends have an implementation yet.\n\n src/cairo-analysis-surface.c       |    4 +++\n src/cairo-beos-surface.cpp         |    2 ++\n src/cairo-directfb-surface.c       |    2 ++\n src/cairo-glitz-surface.c          |    2 ++\n src/cairo-image-surface.c          |    2 ++\n src/cairo-meta-surface.c           |    2 ++\n src/cairo-os2-surface.c            |    2 ++\n src/cairo-paginated-surface.c      |    2 ++\n src/cairo-pdf-surface.c            |    2 ++\n src/cairo-ps-surface.c             |    2 ++\n src/cairo-quartz-image-surface.c   |    2 ++\n src/cairo-quartz-surface.c         |    2 ++\n src/cairo-script-surface.c         |    2 ++\n src/cairo-sdl-surface.c            |    2 ++\n src/cairo-surface.c                |   53 ++++++++++++++++++++++++++++++++++++\n src/cairo-svg-surface.c            |    2 ++\n src/cairo-type3-glyph-surface.c    |    2 ++\n src/cairo-win32-printing-surface.c |    2 ++\n src/cairo-win32-surface.c          |    2 ++\n src/cairo-xcb-surface.c            |    2 ++\n src/cairo-xlib-surface.c           |    2 ++\n src/cairoint.h                     |   30 ++++++++++++++++++++\n src/test-fallback-surface.c        |    2 ++\n src/test-meta-surface.c            |    2 ++\n src/test-paginated-surface.c       |    2 ++\n 25 files changed, 131 insertions(+)\n\ncommit 948c3526dcdbc440395fff4ce9bf4b7553930d92\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Fri Oct 24 17:37:30 2008 +0300\n\n    [cairo-spans] New abstract types for scan converting polygons.\n    \n    A cairo_span_renderer_t implementation can be provided by a surface if\n    it wants to render paths as horizontal spans of the alpha component of\n    a mask.  Its job is to composite a source pattern to the destination\n    surface when given spans of alpha coverage for a row while taking care\n    of backend specific clipping.\n    \n    A cairo_scan_converter_t takes edges of a flattened path and generates\n    spans for a span renderer to render.\n\n src/Makefile.sources      |    2 +\n src/cairo-spans-private.h |  124 +++++++++++++++++++++++\n src/cairo-spans.c         |  242 +++++++++++++++++++++++++++++++++++++++++++++\n src/cairoint.h            |    1 +\n 4 files changed, 369 insertions(+)\n\ncommit 4b227143b3daab75148cd54c9e7580d509864e0d\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Thu Jul 31 01:54:53 2008 +0300\n\n    [cairo-spans] Introduce a type to track which pixels combine in a compositing op.\n    \n    A cairo_composite_rectangles_t contains the coordinates of rectangular\n    windows into each of the source pattern, mask, clip and destination\n    surface containing the pixels that will combine in a compositing\n    operation.  The idea is to have a uniform way to represent all the\n    translations involved rather than overloading parameters like src_x/y,\n    dst_x/y, etc., sometimes with different incompatible meanings across\n    functions.\n\n src/cairo-rectangle.c     |   21 +++++++++++++++++++++\n src/cairo-types-private.h |   24 ++++++++++++++++++++++++\n src/cairoint.h            |    7 +++++++\n 3 files changed, 52 insertions(+)\n\ncommit a370d077bc697588b6dac2556afa0b95ff83a77d\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Fri Jul 25 16:35:14 2008 +0300\n\n    [path-fixed] New _cairo_path_fixed_is_region().\n    \n    We want to hit the current fast paths for rendering axis aligned\n    rectilinear paths rather than spans, and for that we need to be able\n    to identify regional paths.\n\n src/cairo-path-fixed.c |   96 ++++++++++++++++++++++++++++++++++++++++++++++++\n src/cairoint.h         |    3 ++\n 2 files changed, 99 insertions(+)\n\ncommit 6acb8223930081f70b422ef93a49ea645c2cc12d\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Fri Sep 12 19:32:12 2008 +0300\n\n    [path-fixed] Avoid extra indirection when iterating already flat paths.\n    \n    Perform a plain iteration rather than a flattening one if the path\n    knows it doesn't have any curves.\n\n src/cairo-path-fixed.c |    9 +++++++++\n 1 file changed, 9 insertions(+)\n\ncommit 0c0f4862c52d68776024f125b003ade455044b27\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Dec 6 13:32:37 2008 +0200\n\n    [perf-diff] Fix cairo-perf-diff for git 1.6\n    \n    Since git 1.6 the plumbing commands aren't installed in the user's\n    path by default.  This patch fixes cairo-perf-diff to find the\n    git-sh-setup command from git's lib dir.\n\n perf/cairo-perf-diff |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit afba0c312958852586b846ec615cff1bd3e5cde7\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Fri Sep 12 17:41:45 2008 +0300\n\n    [perf] Add perf tests to hit rectilinear code paths.\n    \n    These tests look at the differences in code paths\n    hit by filling paths that are rectilinear (or not) and\n    pixel aligned (or not) with the even-odd and non-zero\n    fill rules.  The paths are not simple, so they don't\n    hit the special case quad/triangle tessellator.\n\n perf/Makefile.am  |    3 +-\n perf/cairo-perf.c |    1 +\n perf/cairo-perf.h |    1 +\n perf/spiral.c     |  200 +++++++++++++++++++++++++++++++++++++++++++++++++++++\n 4 files changed, 204 insertions(+), 1 deletion(-)\n\ncommit 8ec58113df417e1ec1d331ab65267c34e6d32096\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Fri Sep 12 17:32:40 2008 +0300\n\n    [perf] Explicitly test rendering a path with lots of intersections.\n    \n    We don't have one just for this purpose.  The only other\n    path with many intersections that gets actually rendered is zrusin-another,\n    but that might be sped up in the future (say by identifying\n    collinearities up front or something like that.)\n\n perf/Makefile.am     |    3 +-\n perf/cairo-perf.c    |    1 +\n perf/cairo-perf.h    |    1 +\n perf/intersections.c |   97 ++++++++++++++++++++++++++++++++++++++++++++++++++\n 4 files changed, 101 insertions(+), 1 deletion(-)\n\ncommit 08b486c9aa1d6ad01f1b17a16dcb4d695e8cbf7d\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Thu Dec 4 17:53:06 2008 -0500\n\n    [win32] Use MOD instead of the '%' operator\n    \n    Repeat should be handled using MOD instead of '%' so that negative numbers\n    are handled as expected. E.g. -1 mod 600 = 599, not 495 as the '%' operator\n    gives. This was causing https://bugzilla.mozilla.org/show_bug.cgi?id=466258\n    \n    Patch from Robert O'Callahan\n\n src/cairo-win32-surface.c |    7 +++++--\n 1 file changed, 5 insertions(+), 2 deletions(-)\n\ncommit 540de34453d16092acd2978b513831a02f01f59f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Oct 26 12:53:29 2008 +0000\n\n    [matrix] Optimise invert for simple scaling|translation matrices.\n    \n    Peter Hercek reported, and provided a very useful test case for, a bug\n    that caused his applications to crash with Cairo detecting an\n    non-invertible pattern matrix and thus asserting the impossible happened.\n    Bisecting revealed that the bug first appeared with 3c18d95 and\n    disappeared with 0d0c6a1. Since neither of these explain the crash,\n    further investigation revealed a compiler bug (gcc 4.3.3 20081130,\n    earlier versions have different bugs!) that caused the matrix inversion\n    to be invalid iff _cairo_matrix_scalar_multiply() was inlined (i.e. -O0,\n    or an explicit noinline atttribute on that function prevented the bug, as\n    did -msse.) So we apply this workaround to hide the bug in the stable\n    series...\n    \n    The matrix is quite often just a simple scale and translate (or even\n    identity!). For this class of matrix, we can skip the full adjoint\n    rearrangement and determinant calculation and just compute the inverse\n    directly.\n    (cherry picked from commit 0d0c6a199c5b631299c72dce80d66ac0f4936a64)\n\n src/cairo-matrix.c |   26 +++++++++++++++++++++++++-\n 1 file changed, 25 insertions(+), 1 deletion(-)\n\ncommit aff32019a70600fec5040a5a73c4f0b688826064\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Sun Nov 30 23:28:59 2008 -0500\n\n    [Makefile.am] Use top_srcdir instead of srcdir\n    \n    Doesn't make much difference here, but makes our intention clear.\n\n build/Makefile.am.changelog |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 51a75ad932af4a3c3da96ef98de79328afa200c3\nAuthor: Luo Jinghua <sunmoon1997@gmail.com>\nDate:   Sun Nov 30 20:42:49 2008 +0800\n\n    glitz: Replace specified color with an opaque one if dst surface don't have an alpha channel.\n    \n    Otherwise if underlying glitz drawable has an alpha channel, glitz_set_rectangles\n    will set its alpha channel to specified value instead of opaque one and effects following\n    composite operations since glitz draws to attached drawable then copies its content to\n    the dst surface. With this commit, three test cases such as operator, operator-alpha and\n    unbounded-operator passes now.\n\n src/cairo-glitz-surface.c |   18 ++++++++++++------\n 1 file changed, 12 insertions(+), 6 deletions(-)\n\ncommit 7247017cf5e6b497a5836d9081ee153d27c6b15e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Nov 29 11:47:25 2008 +0000\n\n    Fix up a couple of likely(malloc==NULL)\n    \n    Adrian Johnson spotted that I marked a few malloc failures as likely,\n    whoops.\n\n src/cairo-cff-subset.c |    4 ++--\n src/cairo-clip.c       |    2 +-\n 2 files changed, 3 insertions(+), 3 deletions(-)\n\ncommit 1659db2c1f4cc72e51fb43d119822ec7aaa77ac0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Nov 29 10:37:58 2008 +0000\n\n    [test] Fix surface leak from device-offset-positive.\n    \n    A forgotten cairo_surface_destroy() caused the similar surface to be\n    leaked during the test.\n\n test/device-offset-positive.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 0d757a793d7fe2860c6a522124a123864fc97f0a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Nov 29 10:36:34 2008 +0000\n\n    [png] Fix leak of original png data on error path.\n    \n    The error path was missing a _cairo_output_stream_destroy() to cleanup a\n    copy of the incoming PNG data.\n\n src/cairo-png.c |   15 +++++++++++----\n 1 file changed, 11 insertions(+), 4 deletions(-)\n\ncommit e6963a5bfebda69a1ef0a986cede84bcd955b6d4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 18 17:26:55 2008 +0000\n\n    Mark allocation failures as unlikely.\n    \n    Use the gcc likelihood annotation to indicate that allocation failures are\n    extremely unlikely.\n\n src/cairo-analysis-surface.c    |    4 +--\n src/cairo-array.c               |    4 +--\n src/cairo-base85-stream.c       |    2 +-\n src/cairo-bentley-ottmann.c     |   13 ++++----\n src/cairo-cache.c               |    6 ++--\n src/cairo-cff-subset.c          |   66 +++++++++++++++++++--------------------\n src/cairo-clip.c                |    8 ++---\n src/cairo-deflate-stream.c      |    2 +-\n src/cairo-directfb-surface.c    |    2 +-\n src/cairo-font-face.c           |    6 ++--\n src/cairo-ft-font.c             |   25 ++++++++-------\n src/cairo-gstate.c              |   17 +++++-----\n src/cairo-hash.c                |    6 ++--\n src/cairo-hull.c                |    2 +-\n src/cairo-image-surface.c       |   12 +++----\n src/cairo-lzw.c                 |    4 +--\n src/cairo-meta-surface.c        |   24 +++++++-------\n src/cairo-misc.c                |   24 +++++++++-----\n src/cairo-output-stream.c       |   14 ++++-----\n src/cairo-paginated-surface.c   |    2 +-\n src/cairo-path-fixed.c          |    4 +--\n src/cairo-path-stroke.c         |    4 +--\n src/cairo-path.c                |    8 ++---\n src/cairo-pattern.c             |   36 ++++++++++-----------\n src/cairo-pdf-operators.c       |    6 ++--\n src/cairo-pdf-surface.c         |   34 ++++++++++----------\n src/cairo-pen.c                 |    8 ++---\n src/cairo-png.c                 |   14 ++++-----\n src/cairo-polygon.c             |    2 +-\n src/cairo-ps-surface.c          |   16 +++++-----\n src/cairo-region.c              |    2 +-\n src/cairo-scaled-font-subsets.c |   28 ++++++++---------\n src/cairo-scaled-font.c         |   29 +++++++++--------\n src/cairo-script-surface.c      |   14 ++++-----\n src/cairo-sdl-surface.c         |    2 +-\n src/cairo-skiplist.c            |    2 +-\n src/cairo-stroke-style.c        |    2 +-\n src/cairo-surface-fallback.c    |    2 +-\n src/cairo-surface.c             |    4 +--\n src/cairo-svg-surface.c         |   16 +++++-----\n src/cairo-traps.c               |    4 +--\n src/cairo-truetype-subset.c     |   30 +++++++++---------\n src/cairo-type1-fallback.c      |   15 +++++----\n src/cairo-type1-subset.c        |   22 ++++++-------\n src/cairo-type3-glyph-surface.c |    2 +-\n src/cairo-user-font.c           |    2 +-\n src/cairo-xlib-display.c        |    4 +--\n src/cairo-xlib-screen.c         |    2 +-\n src/cairo-xlib-surface.c        |   25 +++++++--------\n src/cairo-xlib-visual.c         |    2 +-\n src/cairo.c                     |    4 +--\n src/test-fallback-surface.c     |    2 +-\n src/test-meta-surface.c         |    2 +-\n src/test-paginated-surface.c    |    2 +-\n 54 files changed, 300 insertions(+), 294 deletions(-)\n\ncommit d1801c23fae3777c7c59e084894a3410f7a1f932\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 18 15:38:37 2008 +0000\n\n    Mark if(status) as being unlikely.\n    \n    The error paths should be hit very rarely during normal operation, so mark\n    them as being unlikely so gcc may emit better code.\n\n src/cairo-analysis-surface.c    |   24 +--\n src/cairo-array.c               |    6 +-\n src/cairo-cache.c               |    4 +-\n src/cairo-cff-subset.c          |  208 ++++++++++++------------\n src/cairo-clip.c                |   23 ++-\n src/cairo-font-face.c           |   14 +-\n src/cairo-ft-font.c             |   44 +++---\n src/cairo-gstate.c              |   66 ++++----\n src/cairo-image-surface.c       |   16 +-\n src/cairo-lzw.c                 |    4 +-\n src/cairo-meta-surface.c        |   42 ++---\n src/cairo-misc.c                |    6 +-\n src/cairo-output-stream.c       |    2 +-\n src/cairo-paginated-surface.c   |   38 ++---\n src/cairo-path-fill.c           |    6 +-\n src/cairo-path-fixed.c          |   14 +-\n src/cairo-path-stroke.c         |   56 +++----\n src/cairo-path.c                |    6 +-\n src/cairo-pattern.c             |   34 ++--\n src/cairo-pdf-operators.c       |   60 +++----\n src/cairo-pdf-surface.c         |  334 +++++++++++++++++++--------------------\n src/cairo-pen.c                 |    6 +-\n src/cairo-png.c                 |   14 +-\n src/cairo-ps-surface.c          |  122 +++++++-------\n src/cairo-scaled-font-subsets.c |   30 ++--\n src/cairo-scaled-font.c         |   72 ++++-----\n src/cairo-script-surface.c      |  160 +++++++++----------\n src/cairo-sdl-surface.c         |    4 +-\n src/cairo-surface-fallback.c    |   82 +++++-----\n src/cairo-surface.c             |   60 +++----\n src/cairo-svg-surface.c         |   84 +++++-----\n src/cairo-traps.c               |   12 +-\n src/cairo-truetype-subset.c     |   98 ++++++------\n src/cairo-type1-fallback.c      |   44 +++---\n src/cairo-type1-subset.c        |   46 +++---\n src/cairo-type3-glyph-surface.c |   10 +-\n src/cairo-user-font.c           |   18 +--\n src/cairo-xlib-screen.c         |    4 +-\n src/cairo-xlib-surface.c        |   92 +++++------\n src/cairo.c                     |  138 ++++++++--------\n 40 files changed, 1053 insertions(+), 1050 deletions(-)\n\ncommit f0804d4856496a46d0b2270d5815856bf63b4cf8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Nov 28 23:58:55 2008 +0000\n\n    [test] Exercise caps and joins under reflection.\n    \n    The nature of the joins depends critically upon whether the joint is\n    clockwise or counter-clockwise, so extend the basic caps-joins test to\n    exercise both conditions i.e. repeat the test under a reflection.\n\n test/Makefile.am                 |    6 ++-\n test/caps-joins-curve.c          |  111 ++++++++++++++++++++++++++++++++++++++\n test/caps-joins-curve.ps.ref.png |  Bin 0 -> 3728 bytes\n test/caps-joins-curve.ref.png    |  Bin 0 -> 5132 bytes\n test/caps-joins.c                |   40 +++++++++-----\n test/caps-joins.ps.ref.png       |  Bin 0 -> 2282 bytes\n test/caps-joins.ps2.ref.png      |  Bin 1459 -> 0 bytes\n test/caps-joins.ps3.ref.png      |  Bin 1459 -> 0 bytes\n test/caps-joins.ref.png          |  Bin 1488 -> 2380 bytes\n test/dash-curve.ref.png          |  Bin 39642 -> 39696 bytes\n 10 files changed, 143 insertions(+), 14 deletions(-)\n\ncommit f39dd86e292e9af3438acb041a3a7330fb4a3b22\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Nov 27 00:23:11 2008 +0000\n\n    [test] Add simple cap test.\n    \n    Add a test case that only exercises capping, useful for developing\n    new strokers.\n\n test/Makefile.am     |    3 ++\n test/caps.c          |   87 ++++++++++++++++++++++++++++++++++++++++++++++++++\n test/caps.ps.ref.png |  Bin 0 -> 1466 bytes\n test/caps.ref.png    |  Bin 0 -> 1601 bytes\n 4 files changed, 90 insertions(+)\n\ncommit f2982e103c27cad1edf648dadcfffe1a15763efd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 25 17:23:33 2008 +0000\n\n    [fill] Allow rectangles to be implicitly closed.\n    \n    Also scan for appendages of simple rectangles.\n\n src/cairo-path-fill.c          |    2 +-\n src/cairo-path-fixed-private.h |    4 ++--\n src/cairo-path-fixed.c         |   14 +++++++++-----\n 3 files changed, 12 insertions(+), 8 deletions(-)\n\ncommit d2bcf1d76defda861e1a7f2271046851083ad694\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Nov 28 17:12:03 2008 +0000\n\n    [path] Carefully check for no more points.\n    \n    As the empty path points to an embedded buf, we cannot rely on the buf\n    pointer being NULL to mark end-of-path.\n\n src/cairo-path-fixed-private.h |   10 +++++-----\n src/cairo-path-fixed.c         |   15 ++++++++++++---\n 2 files changed, 17 insertions(+), 8 deletions(-)\n\ncommit 424aba9be558e89b4d42554ca6a5042574e3df75\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 26 20:38:24 2008 +0000\n\n    [check] Search for the word NOTE\n    \n    Add word boundary markers around the regexp so that we only match for the\n    word NOTE and not on substrings like GL_NOTEQUAL.\n\n src/check-doc-syntax.sh |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 36147140ce56d8d3492b971a9b6ceff97e212e01\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Nov 28 18:54:02 2008 +0000\n\n    [perf] Fix build\n    \n    If automake detects the use of cairo_perf_LDADD in an unused conditional\n    that overrides the default - so we need to manually set cairo_perf_LDADD.\n\n perf/Makefile.am |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit ed6bd4766cb47e97b1a6ecb81eff5bf4673d549b\nAuthor: Luo Jinghua <sunmoon1997@gmail.com>\nDate:   Fri Nov 28 07:54:41 2008 +0800\n\n    image: Use unsigned long to compute color masks.\n    \n    Use unsigned long in the first place to prevent compiler from\n    expanding signed bit to all upper bits. e.g, a alpha mask 0xff0000\n    will expand to 0xffffffffff00000 on 64 bit platform which is not\n    what we expected.\n\n src/cairo-image-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 41cb91d417e7c0dc1cc767ea0fb38a1f8b3f4e43\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Wed Nov 26 23:49:12 2008 +0200\n\n    [script] Use the in-tree libcairo for csi-replay.\n    \n    csi-replay was missing the in-tree libcairo.la so the build was\n    failing while looking for new symbols from the system libcairo.\n\n util/cairo-script/Makefile.am |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit f5634818f1e5cc0adaa326662c099a75f4e615eb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Nov 13 14:56:38 2008 +0000\n\n    [os2] Move include cairo.h before os2.h\n    \n    The defines need to come first, but we specify that cairo.h is the first\n    header file to be included by files.\n\n src/cairo-os2.h |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 2f0f9a1a593db43dd04507c5989cd0af4b1486de\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Thu Nov 13 10:50:41 2008 +0100\n\n    [os2] Fix includes\n    \n    Patch from Dave Yeo to make cairo-os2.h include os2.h directly so the\n    header is standalone.\n\n src/cairo-os2-private.h |   11 -----------\n src/cairo-os2-surface.c |    5 -----\n src/cairo-os2.h         |    8 ++++++++\n 3 files changed, 8 insertions(+), 16 deletions(-)\n\ncommit 5591cb58fd94483ec3dc7c169ae8cf0a6b7841bd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 26 17:43:22 2008 +0000\n\n    [script] Only use zlib if available.\n    \n    Conditionally link against zlib - replaying a script will fail if the\n    trace uses a compressed format.\n\n configure.ac                               |    5 ++++-\n util/cairo-script/Makefile.am              |    2 +-\n util/cairo-script/cairo-script-file.c      |    5 ++++-\n util/cairo-script/cairo-script-operators.c |    2 ++\n 4 files changed, 11 insertions(+), 3 deletions(-)\n\ncommit 9432c0c9b89ed6b3d369b377cf884918cd6180db\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 26 17:33:35 2008 +0000\n\n    [script] Link the interpreter against the built library.\n    \n    Ensure we correctly link against the version of cairo just built.\n\n util/cairo-script/Makefile.am |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 815e5b962ef8477c344da0f0b52c1f85c9854777\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 26 17:30:29 2008 +0000\n\n    [script] Add a fallback image surface for replay\n    \n    If we do not have a native windowing surface compiled into the library,\n    just replay the script to an image surface.\n\n util/cairo-script/csi-replay.c |    8 ++++++++\n 1 file changed, 8 insertions(+)\n\ncommit 5e376523628d5e2078e395ea7263a04bacd37c47\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 26 17:26:57 2008 +0000\n\n    [skiplist] Check for ffs()\n    \n    Wine at least does not provide ffs(), so check at configure time and\n    open-code a replacement.\n\n build/configure.ac.system |    2 +-\n src/cairo-skiplist.c      |   11 +++++++++++\n 2 files changed, 12 insertions(+), 1 deletion(-)\n\ncommit 60282b866aab359840b4bcaa6aaccaca2eccd3d2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 26 16:58:29 2008 +0000\n\n    [glitz] Fix clone_similar().\n    \n    Clone similar open-coded various image surface functions and failed to\n    clone a sub-region resulting in failures for mask-transformed-* and\n    large-source.\n\n src/cairo-glitz-surface.c |  458 ++++++++++++++-------------------------------\n 1 file changed, 137 insertions(+), 321 deletions(-)\n\ncommit 47275c7ece06c0d02f2d7c9aa81d87a7144392b0\nAuthor: Paolo Bonzini <bonzini@gnu.org>\nDate:   Wed Nov 26 15:56:48 2008 +0100\n\n    [test] Fix glitz-surface-source test\n    \n    The recent changes to separate glitz/agl broke the compilation of the\n    glitz-surface-source test.\n\n test/glitz-surface-source.c           |   96 ++++++++++++++++++++++++++++++++-\n test/glitz-surface-source.ps2.ref.png |  Bin 0 -> 376 bytes\n test/glitz-surface-source.ps3.ref.png |  Bin 0 -> 376 bytes\n 3 files changed, 94 insertions(+), 2 deletions(-)\n\ncommit a84ea7829065b7e1d33d6fed6bcf0c7c8abd383a\nAuthor: Paolo Bonzini <bonzini@gnu.org>\nDate:   Wed Nov 26 15:49:00 2008 +0100\n\n    [test] Add quartz-surface-source test\n    \n    Add a simple test to exercise using a Quartz surface as a source.\n\n test/Makefile.am                       |    6 ++++-\n test/quartz-surface-source.c           |   42 ++++++++++++++++++++++++++++++++\n test/quartz-surface-source.ps2.ref.png |  Bin 0 -> 376 bytes\n test/quartz-surface-source.ps3.ref.png |  Bin 0 -> 376 bytes\n test/quartz-surface-source.ref.png     |  Bin 0 -> 332 bytes\n 5 files changed, 47 insertions(+), 1 deletion(-)\n\ncommit 993941cfd701eb222b81cdddeabf6f7ff2daa150\nAuthor: Paolo Bonzini <bonzini@gnu.org>\nDate:   Wed Nov 26 13:32:11 2008 +0000\n\n    [perf] Fix SDL compilation for MacOS X\n    \n    The attached patch makes the SDL tests compile under Mac OS X.  The\n    problem is:\n    \n    1) that <SDL_main.h> should be included in files that define the main\n    function for SDL Mac OS X programs (this is not true with the upcoming\n    SDL 1.3 release).\n    \n    2) that -lSDLmain, because it is statically linked, needs the Cocoa\n    framework in the LDADD of the main program.  Again, 1.3 will not require\n    this.\n\n perf/Makefile.am         |    4 ++++\n perf/cairo-perf.c        |    4 ++++\n test/Makefile.am         |    4 ++++\n test/cairo-test-runner.c |    4 ++++\n 4 files changed, 16 insertions(+)\n\ncommit 8a5b55ca6c69671a138f65ab15bcf93163f24a37\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 26 13:26:40 2008 +0000\n\n    [matrix] Impose a maximum number of refinement iterations\n    \n    Ensure we do not loop forever trying to minimise the error between the\n    pixman and cairo matrices - for instance when the FPU is not running at\n    full precision.\n\n src/cairo-matrix.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 4218699642c621eb3098a5251ef88d8c7d8a96d2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 26 11:54:29 2008 +0000\n\n    [skiplist] Use ffs()\n    \n    Use ffs() [find-first-set-bit] instead of open-coding, which is about 25%\n    faster on my test machine.\n\n src/cairo-skiplist.c |   11 +----------\n 1 file changed, 1 insertion(+), 10 deletions(-)\n\ncommit 039437c9cfaeed7a2cc1977623ab8bda9854b58a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 26 10:31:09 2008 +0000\n\n    [png] Use FILE* instead of void*.\n    \n    Adrian Johnson reported that cygwin complained about the use of the void *\n    within feof() as it was using a macro and attempted a to deference the\n    void*...\n\n src/cairo-png.c |    6 ++++--\n 1 file changed, 4 insertions(+), 2 deletions(-)\n\ncommit 8fa3cd95641e9138406d651b0734ee84f1da60d2\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Wed Nov 26 06:40:47 2008 +1030\n\n    Change uint to uint32_t\n\n src/cairo-image-info.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit e828f7330633cd839f094bf8409de0bcff17c95c\nAuthor: Luo Jinghua <sunmoon1997@gmail.com>\nDate:   Wed Nov 26 00:09:11 2008 +0800\n\n    glitz: Apply fixup to unbounded operators to clear area outside of mask\n\n src/cairo-glitz-surface.c |   79 +++++++++++++++++++++++++++++++++++++--------\n 1 file changed, 66 insertions(+), 13 deletions(-)\n\ncommit 449e7518bee5d0238138176b3b71d137c6fc01e7\nAuthor: Luo Jinghua <sunmoon1997@gmail.com>\nDate:   Tue Nov 25 22:55:24 2008 +0800\n\n    glitz: set correct parameters for linear and radial pattern.\n    \n    Glitz expects 16.16 fixed point, but we use 24.8 fixed point by default.\n\n src/cairo-glitz-surface.c |   20 ++++++++++----------\n 1 file changed, 10 insertions(+), 10 deletions(-)\n\ncommit 3bde440e00ba19e968b854c1505dc4d1ace83504\nAuthor: Luo Jinghua <sunmoon1997@gmail.com>\nDate:   Tue Nov 25 22:36:53 2008 +0800\n\n    glitz: fixup another stupid bug in fill_rectangles.\n    \n    Wny I doesn't notice them before. Without fixes it fills n_rect times of\n    the first one in the rectangle list.\n\n src/cairo-glitz-surface.c |    8 +++++---\n 1 file changed, 5 insertions(+), 3 deletions(-)\n\ncommit 4ac38f7c2bde67cab37805cab8a2effb2a8617e4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 25 11:52:01 2008 +0000\n\n    [fill] Emit rectangles for GdkRegion\n    \n    Scan the path for a series of consistently wound rectangles.\n\n src/cairo-path-fill.c          |   85 +++++++++++++++++++++------\n src/cairo-path-fixed-private.h |   17 ++++++\n src/cairo-path-fixed.c         |  124 +++++++++++++++++++++++++++++++++++++---\n 3 files changed, 201 insertions(+), 25 deletions(-)\n\ncommit 23df74e5ffd6be876f3c19ee9d71683f5a0ed6f4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 25 11:45:30 2008 +0000\n\n    [xlib] Cosmetic tweak.\n    \n    Tightly scope the local rects.\n\n src/cairo-xlib-surface.c |    5 +++--\n 1 file changed, 3 insertions(+), 2 deletions(-)\n\ncommit 06fabd6cbd0ad187f5f9f155d6b7962f76ec5dda\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 25 12:05:26 2008 +0000\n\n    [path] Fix up extents.\n    \n    Forgot to round the box to the integer rectangle and missed why only\n    testing on image. Very naughty.\n\n src/cairo-analysis-surface.c |    2 +-\n src/cairo-path-bounds.c      |   20 +++++++++++---------\n 2 files changed, 12 insertions(+), 10 deletions(-)\n\ncommit 1f44fb97f3973aa90c4f27bcf9341149370c825d\nAuthor: Luo Jinghua <sunmoon1997@gmail.com>\nDate:   Tue Nov 25 20:45:03 2008 +0800\n\n    cairo-script: add $(top_builddir)/src to CPPPATH.\n    \n    $(top_builddir)/src is needed to find cairo-features.h while\n    building out of tree.\n\n util/cairo-script/Makefile.am |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 487c708b3b6727eb2f8d3714edeae356a7cbbd40\nAuthor: Paolo Bonzini <bonzini@gnu.org>\nDate:   Tue Nov 25 20:40:37 2008 +0800\n\n    [boilerplate] fix compilation for glitz-agl\n    \n    As suggested on the list, this splits the cairo-boilerplate-glitz.c\n    file in three separate files, one for each backend.  Furthermore,\n    it fixes a few problems in compilation of the AGL backend test harness.\n\n boilerplate/Makefile.sources                  |    6 +-\n boilerplate/cairo-boilerplate-glitz-agl.c     |  166 ++++++++\n boilerplate/cairo-boilerplate-glitz-glx.c     |  244 ++++++++++++\n boilerplate/cairo-boilerplate-glitz-private.h |    6 +\n boilerplate/cairo-boilerplate-glitz-wgl.c     |  164 ++++++++\n boilerplate/cairo-boilerplate-glitz.c         |  517 -------------------------\n 6 files changed, 585 insertions(+), 518 deletions(-)\n\ncommit ca80b8c652dde4449216da9d11691202eef97bbd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 25 10:25:24 2008 +0000\n\n    [pdf] Add a default case to silence the compiler.\n    \n    The foolish compiler was emitting a warning about a potential\n    uninitialized variable even though the switch was fully populated.\n\n src/cairo-pdf-surface.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit b8991a1c69ae5d8fb630296a3c689aa8d1546671\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 25 10:11:59 2008 +0000\n\n    [in-fill] Add the implicit close-path during move-to.\n    \n    When interpreting a fixed-path for a fill operation, any move-to\n    implicitly closes the current path.\n\n src/cairo-gstate.c       |   12 ++++++------\n src/cairo-path-in-fill.c |   23 +++++++++++++----------\n src/cairo.c              |   11 ++++-------\n src/cairoint.h           |    4 ++--\n 4 files changed, 25 insertions(+), 25 deletions(-)\n\ncommit 59de6fb89e80ee6aeeb2984b545ceb9bb9f0f7bb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 25 10:04:50 2008 +0000\n\n    [path] Compute approximate extents.\n    \n    When computing the bounds of the clip path, we care more for a fast result\n    than absolute precision as the extents are only used as a guide to trim\n    the future operations. So computing the extents of the path suffices.\n\n src/cairo-analysis-surface.c |   16 ++---------\n src/cairo-clip.c             |   25 ++---------------\n src/cairo-gstate.c           |   13 +++------\n src/cairo-path-bounds.c      |   63 ++++++++++++++++++++++++++++++++++++++----\n src/cairo-surface.c          |    8 ++++--\n src/cairo.c                  |   10 ++-----\n src/cairoint.h               |    8 ++++--\n 7 files changed, 82 insertions(+), 61 deletions(-)\n\ncommit b6bf047494fc308fff00d818b2920d8ba4aa7aed\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Nov 21 15:27:31 2008 +0000\n\n    [clip] Check for error surface\n    \n    The update to use a NULL backend with an error surface broke creating a\n    context from an error surface.\n\n src/cairo-clip.c |    2 +-\n src/cairo.c      |    2 +-\n 2 files changed, 2 insertions(+), 2 deletions(-)\n\ncommit 721cad9b24c2ad049320950d231ed84046c5b8ab\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Mon Nov 24 22:41:03 2008 +1030\n\n    Fix typo\n\n src/cairo-misc.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 70e4c532722bbcad1eca50438e6ab2cdd0ea9b53\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Mon Nov 24 22:38:30 2008 +1030\n\n    Document location of image format specifications\n\n src/cairo-image-info.c |   15 +++++++++++++++\n 1 file changed, 15 insertions(+)\n\ncommit 4ca644af274bda4603e7d02dbeca8641bbb3ff79\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Mon Nov 24 00:29:54 2008 +1030\n\n    Win32-print: Add PNG embedding support\n\n src/cairo-win32-printing-surface.c |  106 +++++++++++++++++++++++++++---------\n src/cairo-win32-private.h          |    3 +\n 2 files changed, 82 insertions(+), 27 deletions(-)\n\ncommit f59a3e03fc91dc4a1769b07bda77a364cc570bc8\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Nov 23 22:27:49 2008 +1030\n\n    Add PNG get info function\n\n src/cairo-image-info-private.h |    5 +++++\n src/cairo-image-info.c         |   46 ++++++++++++++++++++++++++++++++++------\n 2 files changed, 45 insertions(+), 6 deletions(-)\n\ncommit 1892907e24d9f9f31942c6962aaa6d2ff9553ce7\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Nov 23 21:36:40 2008 +1030\n\n    PDF: Disable PDF 1.5 features when version 1.4 is selected\n    \n    JPEG 2000 image embedding and ActualText marked content are\n    PDF 1.5 features.\n\n src/cairo-pdf-operators-private.h |    5 +++++\n src/cairo-pdf-operators.c         |    8 ++++++++\n src/cairo-pdf-surface.c           |    7 +++++++\n 3 files changed, 20 insertions(+)\n\ncommit c4a57385fa2e69020f43519bea21b98182bf5fd7\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Nov 23 21:12:08 2008 +1030\n\n    PDF: Add cairo_pdf_surface_restrict_to_version API\n    \n    Now that we are using PDF 1.5 features, add an api to select between\n    version 1.4 or 1.5.\n\n src/cairo-pdf-surface-private.h |    2 +\n src/cairo-pdf-surface.c         |  116 +++++++++++++++++++++++++++++++++++++--\n src/cairo-pdf.h                 |   24 ++++++++\n 3 files changed, 136 insertions(+), 6 deletions(-)\n\ncommit d85e836911d661275c29f2348a047e5d911f9004\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Nov 23 21:03:22 2008 +1030\n\n    PDF: Add newline to end of binary streams\n    \n    PDF requires white space before the \"endstream\"\n\n src/cairo-pdf-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit b87d81ef0bb52570385a3c9e331651cbeb87b2bb\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Nov 23 19:29:26 2008 +1030\n\n    Add image/jp2 to mime-data test\n\n test/jp2.jp2               |  Bin 0 -> 2999 bytes\n test/mime-data.c           |    7 ++++++-\n test/mime-data.pdf.ref.png |  Bin 4466 -> 6482 bytes\n test/mime-data.ps.ref.png  |  Bin 4466 -> 4554 bytes\n test/mime-data.ref.png     |  Bin 155 -> 185 bytes\n test/mime-data.svg.ref.png |  Bin 6153 -> 6264 bytes\n 6 files changed, 6 insertions(+), 1 deletion(-)\n\ncommit 7fdb712cbaadc95c02f607a9f6c995f8beb01342\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Nov 23 18:56:12 2008 +1030\n\n    PDF: Add JPEG2000 image embedding\n    \n    Requires increasing the PDF version to 1.5.\n\n src/cairo-pdf-surface.c |   52 ++++++++++++++++++++++++++++++++++++++++++++++-\n 1 file changed, 51 insertions(+), 1 deletion(-)\n\ncommit 0746efbf0718095920d9258942d32a7023d22131\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Nov 23 18:47:13 2008 +1030\n\n    Add JPEG2000 mimetype and image info function\n\n src/cairo-image-info-private.h |    4 ++\n src/cairo-image-info.c         |  100 ++++++++++++++++++++++++++++++++++++++++\n src/cairo-surface-fallback.c   |    1 +\n src/cairo.h                    |    1 +\n 4 files changed, 106 insertions(+)\n\ncommit 5de1e4de938d03406ce3364c6c1baa958f210410\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Nov 23 18:33:58 2008 +1030\n\n    Move cairo-jpeg-info.c to cairo-image-info.c\n    \n    Other image formats will be added to the same file.\n\n src/Makefile.sources               |    4 +-\n src/cairo-image-info-private.h     |   54 ++++++++++++++\n src/cairo-image-info.c             |  141 ++++++++++++++++++++++++++++++++++++\n src/cairo-jpeg-info-private.h      |   54 --------------\n src/cairo-jpeg-info.c              |  141 ------------------------------------\n src/cairo-pdf-surface.c            |    6 +-\n src/cairo-ps-surface.c             |    6 +-\n src/cairo-svg-surface.c            |    6 +-\n src/cairo-win32-printing-surface.c |    6 +-\n 9 files changed, 209 insertions(+), 209 deletions(-)\n\ncommit 63180edf6f7cc81beda626190ca1055efa330fda\nAuthor: Luo Jinghua <sunmoon1997@gmail.com>\nDate:   Sun Nov 23 11:42:26 2008 +0800\n\n    glitz: set clone_offset_{x, y} on success in clone_similar.\n    \n    With this fix, glitz backend passes 135 test cases and fails 66 test cases.\n\n src/cairo-glitz-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 36c1b3e5919f119a054e425ca03f7ce810d3e7ec\nAuthor: Luo Jinghua <sunmoon1997@gmail.com>\nDate:   Sun Nov 23 10:27:49 2008 +0800\n\n    glitz: fixup a stupid bug in get_image.\n    \n    _pixman_format_from_masks returns a boolean instead of cairo status code.\n    Without this fix, get_image bails out over and over again even operations\n    was completed successfully. :-(\n\n src/cairo-glitz-surface.c |   14 +++++++++-----\n 1 file changed, 9 insertions(+), 5 deletions(-)\n\ncommit c8b70aacc6b5523e2f73bebf4f61e876de1c3b3f\nAuthor: Nicolas Bruguier <gandalfn@club-internet.fr>\nDate:   Sat Nov 22 18:16:17 2008 +0800\n\n    glitz: bring glitz backend to more or less working state.\n    \n    Thanks Nicolas Bruguier for writing the original patch and\n    thanks Paolo Bonzini for pointing out. This patch converts 24.8\n    fixed point values into 16.16 ones before passing them down to glitz.\n    And I fixed a use-after-free issue in _cairo_glitz_surface_set_clip_region.\n    glitz_surface_set_clip_region takes the pointer and doesn't copy the\n    clip boxes, the original code frees the clip boxes immediately after\n    setting clip region. Keeping the box around with the life time of clip\n    region fixes the bug.\n\n src/cairo-glitz-surface.c |  329 ++++++++++++++++++++++-----------------------\n 1 file changed, 163 insertions(+), 166 deletions(-)\n\ncommit 77e60df32fa59328bd32095c77f8c360805b5db7\nAuthor: Maarten Maathuis <madman2003@gmail.com>\nDate:   Sat Nov 8 15:29:40 2008 +0100\n\n    cairo-xcb: avoid leaking memory\n\n src/cairo-xcb-surface.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 361962b7fb4385f164673991670b6fce0839d32a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 31 08:42:30 2008 +0000\n\n    [directfb] Compile fix with debug enabled.\n    \n    Fix a trivial compile failure reported here:\n      Bug 18322 - bug in _cairo_directfb_surface_release_source_image function\n      (http://bugs.freedesktop.org/show_bug.cgi?id=18322)\n\n src/cairo-directfb-surface.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit f15b1f26becf28457e9ccf8903257a0dec25d547\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Nov 20 23:19:19 2008 +0000\n\n    [region] Use the caller supplied array for extracting boxes.\n    \n    Allow the user to pass in a pre-allocated array and use it if the number\n    of boxes permits. This eliminates the frequent allocations during clipping\n    by toolkits.\n\n src/cairo-directfb-surface.c     |    6 ++++--\n src/cairo-glitz-surface.c        |    1 +\n src/cairo-paginated-surface.c    |    3 +++\n src/cairo-region.c               |   11 ++++++-----\n src/cairo-sdl-surface.c          |    1 +\n src/cairo-surface.c              |   15 ++++++++-------\n src/cairo-win32-surface.c        |    3 ++-\n src/cairo-xcb-surface.c          |    1 +\n src/cairo-xlib-surface-private.h |    2 +-\n src/cairo-xlib-surface.c         |   13 ++++++++-----\n 10 files changed, 35 insertions(+), 21 deletions(-)\n\ncommit 9d2c55c661885c06eed44e810004c2ebe07038d3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Nov 20 21:53:34 2008 +0000\n\n    [traps] Embed sufficient traps to accommodate a stroke rectangle\n    \n    Small numbers of traps are frequently generated from either a path of a\n    single line, or that of a rectangle. Therefore should embed sufficient\n    storage with cairo_traps_t to accommodate the stroke of a single rectangle\n    (e.g. a pango unknown glyph hexbox) to avoid frequent allocations.\n\n src/cairoint.h |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit a11442154d958d5c9694eb944a715a6c689fda85\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Nov 20 18:00:40 2008 +0000\n\n    [cairo] Allocate glyphs on the stack for show_text().\n    \n    First try to use a stack buffer for the glyphs and clusters if the user\n    calls cairo_show_text() - for example, as pango does to draw the unknown hex\n    box.\n\n src/cairo.c |   18 ++++++++++++++----\n 1 file changed, 14 insertions(+), 4 deletions(-)\n\ncommit 9556266ffcb1c34187730af90bb847950d6db66e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Nov 20 09:40:25 2008 +0000\n\n    [surface] Make the error surfaces have a NULL backend.\n    \n    By using a NULL backend for the error surfaces, instead of a pointer to\n    the image surface backend end, we save a few lookup/redirections during\n    dynamic linking.\n\n src/cairo-surface.c |   22 ++++++----------------\n 1 file changed, 6 insertions(+), 16 deletions(-)\n\ncommit cfd2c73826f5bf20624fbdf5b16fd08fbe18a914\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Nov 20 09:36:02 2008 +0000\n\n    [image] Trim image surface size by a few bytes\n    \n    Convert an infrequently accessed series of cairo_bool_t and short enums\n    to a common bitfield.\n\n src/cairo-image-surface.c |   11 ++++++-----\n src/cairoint.h            |    7 ++++---\n 2 files changed, 10 insertions(+), 8 deletions(-)\n\ncommit 1f48b36933b5ff082edf3e221563c15c3bf16b75\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Nov 20 12:41:18 2008 +0000\n\n    [script] Build fix for ! HAS_FT_FONT\n    \n    Correct the macro definition used when compiling without FreeType.\n\n util/cairo-script/cairo-script-operators.c |    5 ++---\n 1 file changed, 2 insertions(+), 3 deletions(-)\n\ncommit 0d5e533b6cc43c4ebc030140933247cf160d47cd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 19 17:03:13 2008 +0000\n\n    [trace] Correctly push font-face onto the operand stack.\n    \n    We tried to push a reference to an undefined font-face, now we just copy\n    from the operand stack.\n\n util/cairo-trace/trace.c |   61 +++++++++++++++++++++++++++-------------------\n 1 file changed, 36 insertions(+), 25 deletions(-)\n\ncommit b426346b482e2687081433213ae107cb7b2ebe58\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 19 16:04:57 2008 +0000\n\n    [trace] Construct matrices directly\n    \n    Avoid building a temporary array by constructing the matrix directly.\n\n util/cairo-trace/trace.c |   10 +++++-----\n 1 file changed, 5 insertions(+), 5 deletions(-)\n\ncommit 727ff2bd7260f26c9390079258c43e6890ef2284\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 19 14:25:20 2008 +0000\n\n    [xlib] Explicitly track whether the GC has clip_rects.\n    \n    Simplify the logic and remove some pessimism from the code by explicitly\n    tracking when we set clip rectangles on the GC.\n\n src/cairo-xlib-surface-private.h |    1 +\n src/cairo-xlib-surface.c         |    6 +++---\n 2 files changed, 4 insertions(+), 3 deletions(-)\n\ncommit 63a86a470fb88ee876414164e7e26789c1065b82\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 19 14:04:01 2008 +0000\n\n    [surface] Replay meta surfaces to a similar surface.\n    \n    When cloning a meta-surface, first attempt to replay it to a similar\n    surface rather than a full-sized image buffer.\n\n src/cairo-surface.c |   30 ++++++++++++++++++++++++++++--\n 1 file changed, 28 insertions(+), 2 deletions(-)\n\ncommit 7657bda0172f823fba61db4f66e0166c7619fbd2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Dec 18 11:23:33 2007 +0000\n\n    [perf/pythagoras_tree] Another fractal.\n    \n    Test lots of rectangles and recursion path construction.\n\n perf/Makefile.am       |    3 +-\n perf/cairo-perf.c      |    1 +\n perf/cairo-perf.h      |    1 +\n perf/pythagoras-tree.c |   86 ++++++++++++++++++++++++++++++++++++++++++++++++\n 4 files changed, 90 insertions(+), 1 deletion(-)\n\ncommit abd0a2627d198eddb628bbc1f2974435a74655a2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Dec 18 10:49:23 2007 +0000\n\n    [perf/dragon] Add a dragon curve perf case.\n    \n    Inspired by http://labs.trolltech.com/blogs/2007/08/31/rasterizing-dragons/\n    and http://en.wikipedia.org/wiki/Dragon_curve, add a performance test case\n    to measure drawing this space-filling fractal curve.\n\n perf/Makefile.am  |    3 +-\n perf/cairo-perf.c |    1 +\n perf/cairo-perf.h |    1 +\n perf/dragon.c     |  166 +++++++++++++++++++++++++++++++++++++++++++++++++++++\n 4 files changed, 170 insertions(+), 1 deletion(-)\n\ncommit 81ef772aa0bf512ec5ad8752da160117498bdb30\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 19 11:00:35 2008 +0000\n\n    [xlib] Mark GC as dirty if we have an outstanding clip.\n    \n    Ginn Chen reported a regression with Firefox where \"the whole area of web\n    page is transparent until it redraws\", and bisected it to the change to\n    lazily clear the clip.\n    \n    The bug would appears to be when we have an inconsistent GC clip - i.e.\n    the clip on the surface has been cleared, but we have not yet used and\n    thus cleared the GC, so that we did not mark the GC as having a clip set\n    when we freed it.\n\n src/cairo-xlib-surface.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit c41b99268dd2424d09ab12ca560d5db30b6b6faf\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 19 11:49:04 2008 +0000\n\n    Conditionally include byteswap.h\n    \n    Fixup compilation by copying the checks from cairo-wideint-private.h to\n    conditionally include byteswap.h and provide fallback implementations.\n\n util/cairo-script/cairo-script-interpreter.c |    1 -\n util/cairo-script/cairo-script-operators.c   |    1 -\n util/cairo-script/cairo-script-private.h     |   17 +++++++++++++++++\n util/cairo-script/cairo-script-scanner.c     |    1 -\n util/cairo-trace/trace.c                     |   17 ++++++++++++++++-\n 5 files changed, 33 insertions(+), 4 deletions(-)\n\ncommit 8345fedbe4d4d003c1f26a78ac7c512c04d04173\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 19 11:44:42 2008 +0000\n\n    [spline] Fix compile.\n    \n    Do not return the result of a void function. gcc chose to not warn about\n    this when removing the return parameter...\n\n src/cairo-spline.c |    6 ++++--\n 1 file changed, 4 insertions(+), 2 deletions(-)\n\ncommit b6c371a47f33ec10d4d6130cc15677761df2bdfd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 19 08:44:24 2008 +0000\n\n    [pattern] Cosmetic.\n    \n    surface is equal to pattern->surface at this point.\n\n src/cairo-pattern.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 7894abbe6d43b10ab2a92d99bdd6a08878e9022c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 19 08:37:26 2008 +0000\n\n    [test] Support foreground only execution.\n    \n    Add an option to prevent forking - which makes it difficult to\n    valgrind/gdb individual tests.\n\n test/Makefile.am         |    1 +\n test/cairo-test-runner.c |  120 +++++++++++++++++++++++++---------------------\n 2 files changed, 67 insertions(+), 54 deletions(-)\n\ncommit 645df0c6d2a3d9999bb18ddb8bb9995b3d597554\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 18 16:37:59 2008 +0000\n\n    [scaled-font] Clean-up compiler warning.\n    \n    gcc warns that the status may be used uninitialized, so fix it.\n\n src/cairo-scaled-font-subsets.c |   20 ++++++++++----------\n 1 file changed, 10 insertions(+), 10 deletions(-)\n\ncommit 2fdee490745a6c3a75691907aadf8ae38c57234c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Nov 17 12:22:39 2008 +0000\n\n    [compiler] likelihood macros\n    \n    Behdad prefers these to be upper-case to be consistent with G_UNLIKELY and\n    friends. However, as I intend to use these for nearly all instances of\n    if(status), I suggest that we keep to the short and not so loud:\n        if (unlikely (status))\n           return status;\n\n src/cairo-compiler-private.h |    8 ++++----\n src/cairo-hash.c             |    2 +-\n 2 files changed, 5 insertions(+), 5 deletions(-)\n\ncommit 97edc680c189205ac2f4e150009f1f1cbe55ba1a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 18 10:49:27 2008 +0000\n\n    [twin] Reduce tolerance.\n    \n    As the glyphs are rendered to cache, ensure that they are rendered at the\n    highest quality settings.\n\n src/cairo-font-face-twin.c |    1 +\n src/cairo.c                |    1 +\n src/cairoint.h             |    1 +\n test/Makefile.am           |    1 +\n test/twin.pdf.ref.png      |  Bin 0 -> 1673 bytes\n test/twin.ref.png          |  Bin 1673 -> 1718 bytes\n 6 files changed, 4 insertions(+)\n\ncommit e50538863a2c063eba61b36cc08eff6eeb712956\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 18 10:45:19 2008 +0000\n\n    [twin] Tweak line width.\n    \n    Slightly increase line width to eliminate internal holes in the characters\n    where the strokes were not quite overlapping.\n\n src/cairo-font-face-twin.c |    2 +-\n test/twin.c                |    2 +-\n test/twin.ps2.ref.png      |  Bin 1167 -> 1095 bytes\n test/twin.ps3.ref.png      |  Bin 1167 -> 1095 bytes\n test/twin.ref.png          |  Bin 1836 -> 1673 bytes\n test/twin.svg11.ref.png    |  Bin 1773 -> 1662 bytes\n test/twin.svg12.ref.png    |  Bin 1773 -> 1662 bytes\n 7 files changed, 2 insertions(+), 2 deletions(-)\n\ncommit 91c17d33324b51a3876bc6ce778c684111139303\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 18 00:32:54 2008 +0000\n\n    [trace] Simple unbounded cache for symbol lookups.\n    \n    Reparsing the dwarf info for every lookup is very slow, so cache the\n    symbol lookups. This initial implementation is unbounded in the simple\n    belief that the actual number of unique lookups during a program's\n    lifetime should be fairly small. (Extending to a bounded MRU list is left\n    as an exercise for the reader.)\n\n util/cairo-trace/lookup-symbol.c |   70 ++++++++++++++++++++++++++++++++------\n util/cairo-trace/trace.c         |    9 ++---\n 2 files changed, 65 insertions(+), 14 deletions(-)\n\ncommit 2839a0e800d6cc12b28da44f30a9e278ceac65aa\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Nov 16 20:04:55 2008 +0000\n\n    [script] Add a simple replay.\n    \n    A very simple replay program for trace replay.\n\n util/cairo-script/.gitignore   |    1 +\n util/cairo-script/Makefile.am  |    7 +++-\n util/cairo-script/csi-replay.c |   85 ++++++++++++++++++++++++++++++++++++++++\n 3 files changed, 92 insertions(+), 1 deletion(-)\n\ncommit b091c5bfcad170fd563699a1c8b11e7d25d159a2\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Tue Nov 18 00:20:38 2008 +0200\n\n    BIBLIOGRAPHY: Cite Hars & Petruska's Pseudorandom Recursions paper.\n\n BIBLIOGRAPHY |   15 +++++++++++++++\n 1 file changed, 15 insertions(+)\n\ncommit 3a82f943988413e0d3fada9932bb385f4cbdb3c7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Nov 16 18:21:52 2008 +0000\n\n    [test] Add util/cairo-script to include path.\n    \n    any2ppm needs the include path for cairo-script-interpreter so that it can\n    be built without an existing install.\n\n test/Makefile.am |    3 ++-\n test/any2ppm.c   |    3 ---\n 2 files changed, 2 insertions(+), 4 deletions(-)\n\ncommit 997fa6a7729b72b25d9275929bf190e71eed1b9d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Nov 16 17:43:40 2008 +0000\n\n    [configure] Remove old line for CairoScript testing.\n    \n    CairoScript testing should now be unconditional so remove the surplus\n    message.\n\n build/configure.ac.features |    1 -\n 1 file changed, 1 deletion(-)\n\ncommit a2eff7c7deb9b41c387472bb91b9a7b9c8f319f0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Nov 16 16:19:25 2008 +0000\n\n    [test] Add build rule for libcairo-script-interpreter.la\n    \n    Add a rule to build the cairo-script-interpreter on behalf of any2ppm.\n\n test/Makefile.am |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit bf309aab6072ee1004073e71bccdf3c8040a8ad6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Nov 15 11:36:41 2008 +0000\n\n    [configure] Delete CAN_TEST_SCRIPT\n    \n    A CairoScript interpreter is built under utils and so is always available.\n\n configure.ac   |    3 ---\n test/any2ppm.c |    8 --------\n 2 files changed, 11 deletions(-)\n\ncommit d7873eecc598a558a2a862add8e9b056c4a23a4a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Nov 14 17:18:47 2008 +0000\n\n    [spline] Eliminate intermediate allocations during spline decomposition.\n    \n    The spline decomposition code allocates and stores points in a temporary\n    buffer which is immediately consumed by the caller. If the caller supplies\n    a callback that handles each point computed along the spline, then we can\n    use the point immediately and avoid the allocation.\n\n src/cairo-bentley-ottmann.c |   12 +-\n src/cairo-path-fill.c       |   23 ++--\n src/cairo-path-fixed.c      |   27 ++---\n src/cairo-path-in-fill.c    |   21 ++--\n src/cairo-path-stroke.c     |  101 +++++++++--------\n src/cairo-pen.c             |  254 ++++++++++++++++++++++++++++---------------\n src/cairo-polygon.c         |   23 ++--\n src/cairo-spline.c          |  121 ++++-----------------\n src/cairo-types-private.h   |   13 +--\n src/cairoint.h              |   65 +++++++----\n 10 files changed, 331 insertions(+), 329 deletions(-)\n\ncommit 3bf8379408ce9b1e08d130bcd1076766e36f1bef\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Nov 14 09:50:29 2008 +0000\n\n    [type1] Propagate fatal NO_MEMORY erro from FreeType.\n    \n    If FreeType fails to load the glyph, check for a fatal error before\n    falling back (and effectively masking the fatal condition).\n\n src/cairo-type1-subset.c |   14 ++++++++++++--\n 1 file changed, 12 insertions(+), 2 deletions(-)\n\ncommit db9ed77d8aa4f4b4c8410e52e5bbd16ffa94ee24\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Nov 13 20:36:14 2008 +0000\n\n    [cairo] FLush surface on cairo_destroy()\n    \n    When discussing the implications of snapshot cow, one of the questions\n    that we raised was what happens on cairo_destroy()? The lifetime of the\n    context implicitly marks the extents of the drawing operations, typically\n    the expose event (or perhaps one phase of it). Therefore at the end of the\n    sequence we implicitly wish to flush the graphics events to the surface.\n\n src/cairo.c |   11 +++++++++++\n 1 file changed, 11 insertions(+)\n\ncommit 032be9849dfc32ec8802a4f086619755a3a397f5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Nov 13 16:36:01 2008 +0000\n\n    [skiplist] Inline testing.\n    \n    Add a loop to create a skip list to allow manual checking.\n\n src/Makefile.am      |    5 ++++-\n src/cairo-skiplist.c |   36 ++++++++++++++++++++++++++++++++++++\n 2 files changed, 40 insertions(+), 1 deletion(-)\n\ncommit e44c1f26e48cfb2f74834b6a8ef8532b0bd28982\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Sat Oct 18 01:15:44 2008 +0300\n\n    Use a smaller and faster random number generator.\n    \n    The previous LFSR generator used a large table to be speedy.  The\n    replacement generator is the single stage generator (1) from section\n    5.4 of [HP2007], requires no tables or extra state.  I've run the\n    generator through Rob Brown's extended Dieharder test suite and it\n    passes all but one self-proclaimed buggy test (-d2) and the 2D sphere\n    minimum distance test (-d12).\n    \n    [HP2007] Hars L. and Petruska G., ``Pseudorandom Recursions: Small and Fast Pseurodandom Number Generators for Embedded Applications'',\n    Hindawi Publishing Corporation\n    EURASIP Journal on Embedded Systems\n    Volume 2007, Article ID 98417, 13 pages\n    doi:10.1155/2007/98417\n    http://www.hindawi.com/getarticle.aspx?doi=10.1155/2007/98417&e=cta\n\n src/cairo-skiplist.c |  200 +++-----------------------------------------------\n 1 file changed, 11 insertions(+), 189 deletions(-)\n\ncommit a4c5371b5e6d0df71efc75fee6f6a8fe8c6d3488\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Nov 13 14:56:38 2008 +0000\n\n    [os2] Move include cairo.h before os2.h\n    \n    The defines need to come first, but we specify that cairo.h is the first\n    header file to be included by files.\n\n src/cairo-os2.h |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 456252a1c2b00685bee18c01bf27738d6125b4f8\nMerge: 3b11997 ab61544\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Fri Nov 14 15:27:34 2008 +0100\n\n    Merge branch '1.8'\n    \n    Conflicts:\n    \n    \tNEWS\n    \tcairo-version.h\n\ncommit ab61544b30406a49abc1f559d81129edce6d41ec\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Fri Nov 14 13:17:01 2008 +0100\n\n    Increment version to 1.8.5 after the 1.8.4 release.\n\n cairo-version.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 66e8f142e381501d114888c2d1fc1e7f6d6a9857\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Fri Nov 14 11:08:40 2008 +0100\n\n    Increment version to 1.8.4\n\n cairo-version.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit b9c1344ad82d38bb86fa85fbb565b2de64aa0e35\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Fri Nov 14 11:07:10 2008 +0100\n\n    NEWS: Add notes for cairo 1.8.4\n    \n    Just a few bug fixes here.\n\n NEWS |   52 ++++++++++++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 52 insertions(+)\n\ncommit 3b11997a23baa9e38e87b584ee29f4888a5d92f7\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Thu Nov 13 18:01:47 2008 +0200\n\n    [cairo-script] Remove outdated #error to allow compilation to succeed.\n    \n    The interpreter doesn't depend on the script surface anymore.\n\n util/cairo-script/cairo-script-interpreter.h |    6 ------\n 1 file changed, 6 deletions(-)\n\ncommit d654d528de16769932131da80f4b925151d50103\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Thu Nov 13 16:45:15 2008 +0100\n\n    Blacklist \"X.Org\" < 7.0 with the buggy_repeat workaround.\n    \n    This is in response to a report that a 6.9 server crashes with\n    cairo's extend-reflect test:\n    \n    https://bugs.freedesktop.org/show_bug.cgi?id=15628#c2\n\n src/cairo-xlib-display.c |   11 +++++++++--\n 1 file changed, 9 insertions(+), 2 deletions(-)\n\ncommit 35a1ba0ddc45f9cc785c6f8a37b6bb49c953e047\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Thu Nov 13 16:36:20 2008 +0100\n\n    Document the buggy_repeat workaround more carefully.\n    \n    It's a confusing condition, so let's be explicit about where\n    the various numbers come from.\n\n src/cairo-xlib-display.c |   54 ++++++++++++++++++++++++++++++++--------------\n 1 file changed, 38 insertions(+), 16 deletions(-)\n\ncommit cdfffc7420e005b2a7d1979feef8bd304183126c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Nov 13 11:07:45 2008 +0000\n\n    Add CairoScript interpreter\n    \n    Add a CairoScript interpreter library and use it to replay the test output\n    for the CairoScript backend. The library is also used by the currently\n    standalone Sphinx debugger [git://anongit.freedesktop.org/~ickle/sphinx].\n    The syntax/operator semantics are not yet finalized, but are expected to\n    mature before the next stable release.\n\n configure.ac                                 |   20 +-\n test/Makefile.am                             |    4 +-\n test/any2ppm.c                               |   41 +-\n util/Makefile.am                             |    2 +-\n util/cairo-script/COPYING                    |   17 +\n util/cairo-script/Makefile.am                |   21 +\n util/cairo-script/cairo-script-file.c        | 1018 +++++\n util/cairo-script/cairo-script-hash.c        |  448 ++\n util/cairo-script/cairo-script-interpreter.c |  473 +++\n util/cairo-script/cairo-script-interpreter.h |  104 +\n util/cairo-script/cairo-script-objects.c     |  666 +++\n util/cairo-script/cairo-script-operators.c   | 5791 ++++++++++++++++++++++++++\n util/cairo-script/cairo-script-private.h     |  853 ++++\n util/cairo-script/cairo-script-scanner.c     | 1180 ++++++\n util/cairo-script/cairo-script-stack.c       |  196 +\n 15 files changed, 10801 insertions(+), 33 deletions(-)\n\ncommit a856371bef496da0e84226f4fd2fc3cb72e955ac\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 4 10:45:34 2008 +0000\n\n    Add CairoScript backend.\n    \n    A new meta-surface backend for serialising drawing operations to a\n    CairoScript file. The principal use (as currently envisaged) is to provide\n    a round-trip testing mechanism for CairoScript - i.e. we can generate\n    script files for every test in the suite and check that we can replay them\n    with perfect fidelity. (Obviously this does not provide complete coverage\n    of CairoScript's syntax, but should give reasonable coverage over the\n    operators.)\n\n boilerplate/Makefile.sources                   |    3 +\n boilerplate/cairo-boilerplate-script-private.h |   57 +\n boilerplate/cairo-boilerplate-script.c         |  125 ++\n boilerplate/cairo-boilerplate.c                |   16 +\n build/configure.ac.features                    |    2 +\n configure.ac                                   |   16 +\n doc/public/tmpl/cairo-surface.sgml             |    1 +\n src/Makefile.sources                           |    3 +\n src/cairo-base85-stream.c                      |    1 +\n src/cairo-cache-private.h                      |    2 +-\n src/cairo-cache.c                              |   41 +-\n src/cairo-deflate-stream.c                     |    1 +\n src/cairo-ft-font.c                            |   12 +\n src/cairo-ft-private.h                         |    3 +\n src/cairo-gstate.c                             |    3 +-\n src/cairo-output-stream-private.h              |   19 +-\n src/cairo-output-stream.c                      |   43 +-\n src/cairo-path-fixed-private.h                 |   11 +\n src/cairo-path-fixed.c                         |  164 ++\n src/cairo-pattern.c                            |  255 +++\n src/cairo-pdf-operators.c                      |    1 +\n src/cairo-ps-surface.c                         |    2 +\n src/cairo-scaled-font-private.h                |    9 +-\n src/cairo-scaled-font.c                        |    5 +\n src/cairo-script-surface.c                     | 2598 ++++++++++++++++++++++++\n src/cairo-script.h                             |   74 +\n src/cairo-types-private.h                      |    1 +\n src/cairo.h                                    |    4 +-\n src/cairoint.h                                 |   18 +\n test/Makefile.am                               |    4 +-\n test/any2ppm.c                                 |   87 +-\n test/mime-data.script.ref.png                  |  Bin 0 -> 1982 bytes\n 32 files changed, 3540 insertions(+), 41 deletions(-)\n\ncommit 47a56e08501ec9375f75c15e35a68c77b313ada4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 10 16:51:52 2008 +0100\n\n    [type1] Bind the RD procedure\n    \n    As the RD procedure may be called several hundred times for a full font,\n    it is worth binding.\n\n src/cairo-type1-fallback.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 0769d39d0093ec3bff5b72ecbfcef1bae2f03be2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Nov 13 11:13:22 2008 +0000\n\n    Add predicate likelihood macros.\n    \n    Define the couple of standard macros that we can use to guide gcc\n    optimisations of which code path will be most likely taken.\n\n src/cairo-compiler-private.h |   17 +++++++++++++++++\n 1 file changed, 17 insertions(+)\n\ncommit b06c50cc54140a662adacde6336a3e7777f26ac3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Nov 13 11:21:26 2008 +0000\n\n    [cairoint.h] Remove unused PLT entries.\n    \n    Trim the slim_hidden_proto/def to match the currently used functions.\n\n src/cairo-pattern.c |    1 -\n src/cairo.c         |    3 ---\n src/cairoint.h      |   16 ++++++----------\n 3 files changed, 6 insertions(+), 14 deletions(-)\n\ncommit 20fc2a2f92e27082a8806b9acb4b904dc84da672\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 11 11:35:14 2008 +0000\n\n    [in-fill] Fixup boundary insideness testing\n    \n    Benjamin Otte noticed that the top-left vertex was now included within the\n    fill extents. Having updated the test case to check the insideness\n    conditions as defined by flash, fix the edge handling to match.\n\n src/cairo-path-in-fill.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 9afad537301529a5a4b4ddf8b7e4425002ea39c7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 11 10:22:17 2008 +0000\n\n    [test] Expand in-fill-trapezoid\n    \n    Test vertices and edges of a rectangle to probe 'corner-cases', using the\n    insideness conditions from flash.\n\n test/in-fill-trapezoid.c |   34 ++++++++++++++++++++++++++++++++++\n 1 file changed, 34 insertions(+)\n\ncommit cebc84f367a81eedebf7ab0b6b082691923c3ef7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Nov 8 00:06:38 2008 +0000\n\n    [hash] Separate out unique patterns of iterating over the table.\n    \n    Avoid unnecessary conditionals for the hotpaths by separating out the\n    iteration over the elements into their distinct modes.\n\n src/cairo-font-face.c   |    2 +-\n src/cairo-hash.c        |  185 ++++++++++++++++++++++-------------------------\n src/cairo-scaled-font.c |   11 ++-\n 3 files changed, 93 insertions(+), 105 deletions(-)\n\ncommit 5f0aa274459fa182d1f82d393224c46ce2b12785\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Nov 13 10:45:15 2008 +0000\n\n    [trace] Add caller line info.\n    \n    Use lookup_symbol() on the return address to identify the caller and emit\n    useful debug info to the trace.\n\n util/cairo-trace/cairo-trace.in  |   27 +++++++-\n util/cairo-trace/lookup-symbol.c |   72 +++++++++-----------\n util/cairo-trace/trace.c         |  134 ++++++++++++++++++++++++++++++++++----\n 3 files changed, 178 insertions(+), 55 deletions(-)\n\ncommit 4cd6b0c0b9862f398877cb23c294399b480ac8d0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 12 00:37:40 2008 +0000\n\n    [trace] Check for an undefined pattern and use index instead.\n\n util/cairo-trace/trace.c |   20 ++++++++++++++++++--\n 1 file changed, 18 insertions(+), 2 deletions(-)\n\ncommit 76f249a49399744d6d936e36ca4d68ab4a1f3d3b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 11 09:12:50 2008 +0000\n\n    [trace] Detect and report broken traces.\n    \n    We cannot trace the cairo-script-interpreter as that uses Cairo's private\n    symbols.\n\n util/cairo-trace/trace.c |   15 ++++++++++++++-\n 1 file changed, 14 insertions(+), 1 deletion(-)\n\ncommit 01e2021b2b7b66e7cdb9c4b0326fd5793759848b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Nov 10 16:15:28 2008 +0000\n\n    [trace] Trace mark-dirty\n    \n    Capture the image data on mark dirty and record in the trace.\n\n util/cairo-trace/cairo-trace.in |    2 +-\n util/cairo-trace/trace.c        |  121 +++++++++++++++++++++++++++++++++------\n 2 files changed, 106 insertions(+), 17 deletions(-)\n\ncommit 8f3d0b55f50168f061a01eecfcb4ebecbff0e1c6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 11 09:25:24 2008 +0000\n\n    [trace] Add unstable warning.\n    \n    Add warning that CairoScript is unfinished and I may radically alter the\n    format/syntax/language before release.\n\n util/cairo-trace/trace.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 7ad2635ebe84ba7c050a7f00c5389cdc31ab1172\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 11 09:46:38 2008 +0000\n\n    [trace] Disable stdout by default.\n    \n    Don't hog the terminal when we save to a trace file anyway.\n\n util/cairo-trace/cairo-trace.in |   48 +++++++++++++++++++++++----------------\n 1 file changed, 29 insertions(+), 19 deletions(-)\n\ncommit efa9e1088cbf1b5331cc0bab3348520f3b91ae4b\nAuthor: M Joonas Pihlaja <jpihlaja@cc.helsinki.fi>\nDate:   Thu Nov 13 12:11:12 2008 +0200\n\n    [clip] Fix uninitialised status return in _cairo_clip_intersect_mask() for empty extents.\n    \n    This fixes the clip-all test case crashing for me.\n\n src/cairo-clip.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 279a7cef349cf5aa87cdeacb9424413f51117fe8\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Thu Nov 13 10:50:41 2008 +0100\n\n    [os2] Fix includes\n    \n    Patch from Dave Yeo to make cairo-os2.h include os2.h directly so the\n    header is standalone.\n\n src/cairo-os2-private.h |   11 -----------\n src/cairo-os2-surface.c |    5 -----\n src/cairo-os2.h         |    8 ++++++++\n 3 files changed, 8 insertions(+), 16 deletions(-)\n\ncommit 0a682034a04fa7fc1407e7bc093ae01f4b385ad7\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Tue Nov 11 13:26:09 2008 -0500\n\n    Make the clipping implementation comment clearer\n    \n    When reviewing the spans changes, I reread this comment and it wasn't as clear\n    as it could be.\n\n src/cairo-clip.c |    7 ++++---\n 1 file changed, 4 insertions(+), 3 deletions(-)\n\ncommit 4fdd856569a67636aaf29bc1a76eed44418db484\nAuthor: Peter Weilbacher <mozilla@weilbacher.org>\nDate:   Tue Nov 11 15:37:09 2008 +0100\n\n    README: adapt pixman version requirement to match configure.ac\n\n README |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 9c0042840c70c14e3e608ac3849edf5f1ef99816\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Tue Nov 11 08:41:31 2008 -0500\n\n    [quartz] Add the proper propagation of extents\n    \n    This fixes the problems introduced by d682d275b90f7326df76d2764c513c8b6d5b551b\n\n src/cairo-quartz-surface.c |   24 +++++++++++++-----------\n 1 file changed, 13 insertions(+), 11 deletions(-)\n\ncommit 57551a91168a68399add9e5c324fba03961b7747\nAuthor: Jeff Muizelaar <jeff@infidigm.net>\nDate:   Tue Nov 11 08:31:23 2008 -0500\n\n    [quartz] Fix fallout caused by const cairo_pattern_t *\n    \n    794460186459981cd43ca38f3eba07e3f6bf8908 broke the quartz backend.\n    Fix it by adding const to the appropriate parameters in the function\n    declarations and copying the pattern when needed.\n\n src/cairo-quartz-surface.c |   41 ++++++++++++++++++++++++-----------------\n 1 file changed, 24 insertions(+), 17 deletions(-)\n\ncommit 164069b339843837e04e2522a615f03a83b362c0\nAuthor: Maarten Maathuis <madman2003@gmail.com>\nDate:   Sat Nov 8 15:29:40 2008 +0100\n\n    cairo-xcb: avoid leaking memory\n\n src/cairo-xcb-surface.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 5badcf6e370b9808374a1fa547383b236a9dcd21\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Nov 8 11:17:34 2008 +0000\n\n    [trace] Use a string literal for the type.\n    \n    In order that the string is interned and so is only allocated the once.\n\n util/cairo-trace/trace.c |   28 ++++++++++++++--------------\n 1 file changed, 14 insertions(+), 14 deletions(-)\n\ncommit 1d0faefbc8700833e9bde8a9c825b02b0f3cf910\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Nov 7 22:48:21 2008 +0000\n\n    [trace] Record the XID as a number\n    \n    Don't waste string constants (which get interned) for a simple number!\n\n util/cairo-trace/trace.c |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit 899a159b133e22f71e2a176785c91e78838c3fee\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Nov 8 11:16:03 2008 +0000\n\n    [trace] Remove stray /source\n    \n    An accidental /source was pushing pushed onto the operand stack and never\n    used.\n\n util/cairo-trace/trace.c |    1 -\n 1 file changed, 1 deletion(-)\n\ncommit f1cae5c52a5ee71b7933fca702bb525d98936838\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Nov 7 20:52:08 2008 +0000\n\n    [ps] Trivial compile warning clenaup.\n    \n    Add a missing const to silence the compiler.\n\n src/cairo-ps-surface.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 2b32c8b9e572c96ce8ba5c7d43b568f18f6da295\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Nov 7 20:30:33 2008 +0000\n\n    [hash] Return lookup entry.\n    \n    Use the return value to return the result from _cairo_hash_table_lookup()\n    (as opposed to filling an output parameter on the stack) as this (a)\n    results in cleaner code (no strict-alias breaking pointer casts), (b)\n    produces a smaller binary and (c) is measurably faster.\n\n src/cairo-cache-private.h       |    5 ++---\n src/cairo-cache.c               |    8 +++----\n src/cairo-cff-subset.c          |   24 +++++++++-----------\n src/cairo-font-face.c           |    9 ++++----\n src/cairo-ft-font.c             |    6 ++---\n src/cairo-hash-private.h        |    7 +++---\n src/cairo-hash.c                |   24 +++++++-------------\n src/cairo-misc.c                |    7 +++---\n src/cairo-scaled-font-subsets.c |   47 +++++++++++++++++++--------------------\n src/cairo-scaled-font.c         |   18 +++++++--------\n 10 files changed, 67 insertions(+), 88 deletions(-)\n\ncommit d15fb9344bf86dd52cda0b43d3dfc49397fd84ec\nAuthor: Karl Tomlinson <karlt+@karlt.net>\nDate:   Fri Nov 7 20:06:35 2008 +0000\n\n    [hash] Set is_unique when finding an available for inserts\n    \n    As we obey the rule in Cairo that we only insert if we know that there is\n    no existing entry in the hash table, we can therefore perform a much quicker\n    search knowing that the key is unique.\n\n src/cairo-hash.c |   16 +++++++---------\n 1 file changed, 7 insertions(+), 9 deletions(-)\n\ncommit cd2e18ddc65959a736fc7b7f6bbd3e76af0495a9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Nov 7 18:35:39 2008 +0000\n\n    [test] Fix-up rgb byte packing\n    \n    Another embarrassing, but thankfully, trivial bug.\n\n boilerplate/cairo-boilerplate.c |    2 ++\n test/any2ppm.c                  |   14 +++++++++-----\n 2 files changed, 11 insertions(+), 5 deletions(-)\n\ncommit 2554d1759835a174b89107808d81d044c3e2e098\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Nov 7 13:26:46 2008 +0000\n\n    [surface] Pass a separate closure for the mime-type destroy notifier.\n    \n    A limitation of the current API was that the destroy notifier was called\n    on the mime-data block. This prevents the user from passing in a pointer\n    to a managed block, for example a mime-data block belonging to a\n    ref-counted object. We can overcome this by allowing the user to specify\n    the closure to be used with the destroy notifier.\n\n src/cairo-png.c           |    3 ++-\n src/cairo-surface.c       |    9 ++++++---\n src/cairo-types-private.h |    1 +\n src/cairo.h               |   11 ++++++-----\n test/mime-data.c          |    3 ++-\n test/pdf-mime-data.c      |    4 +++-\n util/cairo-trace/trace.c  |    6 ++++--\n 7 files changed, 24 insertions(+), 13 deletions(-)\n\ncommit ff0bd64e9436026f11e85eafcd74e9a0131c8b9f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Nov 6 01:22:39 2008 +0000\n\n    [NEWS] Add a few notes.\n    \n    Help Carl with a speedy snapshot by writing a few notes about what has been\n    added so far to 1.9.\n\n NEWS |   42 ++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 42 insertions(+)\n\ncommit 13627b46209f9239d10a155f2de7e53c0585e4c2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Nov 6 01:04:52 2008 +0000\n\n    [in-fill] Fix transposed arguments.\n    \n    Silly typo that escaped the test suite.\n\n src/cairo-path-in-fill.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 9dee7af41f4f5a4c1285e9d7951148e78659c064\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Nov 6 01:02:23 2008 +0000\n\n    [test] Add off-centre tests to in-fill-trapezoid.\n    \n    Reading through the previous commit spotted that the arguments to\n    edge_compare_for_y_against_x were transposed, but the test-suite had\n    failed to catch detect it. This is due that in order to actually\n    solve the equation we need to have a diagonal edge passing near an\n    off-centre point of interest, which was not among the test cases. So add\n    some off-centre tests to fully exercise the code.\n\n test/in-fill-trapezoid.c |   66 ++++++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 66 insertions(+)\n\ncommit f5965cb7d6559e051c2581fe446d0b9f40427eb2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 5 23:48:52 2008 +0000\n\n    [in-fill] Avoid tessellation by counting number of edge crossing to -\u221e\n    \n    Benjamin Otte reports that in one particular benchmark cairo_in_fill() is\n    a hotspot in the profile. Currently we tessellate the entire path and then\n    search for a containing trapezoid. This is very expensive compared to the\n    simple method of counting the number of edge crossing between the point of\n    interest and x=-\u221e. For example, this speeds tessellate-256 up by almost 3\n    orders of magnitude.\n\n src/Makefile.sources     |    1 +\n src/cairo-gstate.c       |   30 +-----\n src/cairo-path-in-fill.c |  264 ++++++++++++++++++++++++++++++++++++++++++++++\n src/cairoint.h           |    9 ++\n 4 files changed, 279 insertions(+), 25 deletions(-)\n\ncommit 0ac98461597420d3dfe52e405c6b3322d32f4854\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Nov 6 00:04:11 2008 +0000\n\n    [test] Add WINDING variants to in-fill test\n    \n    Check cairo_in_fill() with some WINDING tests as well as the current\n    EVEN_ODD.\n\n test/in-fill-trapezoid.c |   56 ++++++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 56 insertions(+)\n\ncommit 476d5daa9bfc5e9014d1b6572853d1d78ce6a6d9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 5 19:29:04 2008 +0000\n\n    [trace] Only build if we have zlib.\n    \n    Use the configure check for libz and do not attempt to build the trace\n    unless we have zlib.\n\n configure.ac |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 34564aa84a4642dceba75efdeef438be6c6896c8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 5 19:27:49 2008 +0000\n\n    [test/pdf2png] Remove dependency on GdkPixbuf\n    \n    It's appears to be dropped from the current poppler trunk, so just use our\n    own venerable cairo_surface_write_ton_png().\n\n configure.ac   |    2 +-\n test/pdf2png.c |   32 +++++++++++++++++++-------------\n 2 files changed, 20 insertions(+), 14 deletions(-)\n\ncommit 564d64a1323c5cbcde2dd9365ac790fe8aa1c5a6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 5 18:47:34 2008 +0000\n\n    [png] Complete the idempotent read_png() -> write_png()\n    \n    Write out the original PNG mime-data if attached to the surface during\n    cairo_surface_write_to_png(). Similar to how the compressed alternate\n    representations are handled by the other backends.\n    \n    Note: by automatically attaching and using the mime-data in preference to\n    the image data, we break the read_from_png(); draw(); write_to_png()\n    cycle.\n\n src/cairo-png.c |   14 ++++++++++++++\n 1 file changed, 14 insertions(+)\n\ncommit ec559822cfe6df0006ca2db2aa3a11699326865c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 5 18:11:36 2008 +0000\n\n    [trace] Use the mime-type image representation\n    \n    When emitting image data, first check to see if we have a pre-compressed\n    alternate representation.\n\n util/cairo-trace/trace.c |  303 ++++++++++++++++++++++++++++++++--------------\n 1 file changed, 214 insertions(+), 89 deletions(-)\n\ncommit d63267e4e7e148836dcfc4c8e2a8396ddaab70d8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 5 17:18:51 2008 +0000\n\n    [test] Update mime-data to check image/png\n    \n    Add a \"image/png\" mime-type test.\n\n test/Makefile.am           |    1 +\n test/mime-data.c           |   67 +++++++++++++++++++++++++++++---------------\n test/mime-data.pdf.ref.png |  Bin 4345 -> 4466 bytes\n test/mime-data.ps.ref.png  |  Bin 4345 -> 4466 bytes\n test/mime-data.ref.png     |  Bin 127 -> 155 bytes\n test/mime-data.svg.ref.png |  Bin 0 -> 6153 bytes\n test/png.png               |  Bin 0 -> 2096 bytes\n 7 files changed, 45 insertions(+), 23 deletions(-)\n\ncommit e4ec5c762f6d01cc5af28dc0a256e268a04101aa\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 5 16:44:49 2008 +0000\n\n    [svg] Embed original PNG data.\n    \n    Embed the attached PNG representation of a surface in preference to\n    re-encoding the surface.\n\n src/cairo-svg-surface.c |   38 ++++++++++++++++++++++++++++++++++++++\n 1 file changed, 38 insertions(+)\n\ncommit e40d62a0fe96b8b937017a3bc2f18766c411ec41\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 5 16:38:34 2008 +0000\n\n    [png] Attach the png representation to cairo_surface_create_from_png().\n    \n    Attach the original png data as an alternate representation for image\n    surfaces created by cairo_surface_create_from_png().\n\n src/cairo-output-stream-private.h |    5 ++\n src/cairo-output-stream.c         |   28 +++++++-\n src/cairo-png.c                   |  127 +++++++++++++++++++++++--------------\n src/cairo-surface-fallback.c      |   20 +++---\n src/cairo.h                       |    1 +\n 5 files changed, 122 insertions(+), 59 deletions(-)\n\ncommit 89616dee8f11c6a7de3fa476b13661420648786f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 5 16:41:13 2008 +0000\n\n    [surface] Don't allocate a structure for mime_data == NULL.\n    \n    If the user attempts to clear the attached mime data representation, just\n    clear the user data slot and do not allocate an empty structure.\n\n src/cairo-surface.c |   17 ++++++++++-------\n 1 file changed, 10 insertions(+), 7 deletions(-)\n\ncommit a1ab11df01962bea5752f5a5b53926a26a6f34ae\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Wed Nov 5 11:50:20 2008 -0500\n\n    Define RepeatNone, etc if the available Render version doesn't (#18385)\n\n src/cairo-xlib-xrender-private.h |   18 ++++++++++++++++++\n 1 file changed, 18 insertions(+)\n\ncommit 43cfaec39cc742ddfbf566b36391d620400e10be\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Wed Nov 5 11:50:20 2008 -0500\n\n    Define RepeatNone, etc if the available Render version doesn't (#18385)\n\n src/cairo-xlib-xrender-private.h |   18 ++++++++++++++++++\n 1 file changed, 18 insertions(+)\n\ncommit 199c0e71139fe9baf83e74ea69c01629ace5f9a2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 5 15:12:19 2008 +0000\n\n    [svg] Embed jpeg data.\n    \n    Support jpeg embedding for svg output.\n\n src/cairo-svg-surface.c |   50 +++++++++++++++++++++++++++++++++++++++++++----\n test/Makefile.am        |    1 +\n 2 files changed, 47 insertions(+), 4 deletions(-)\n\ncommit 2261590875b4be7aa258c51e766f68974750e9e7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 5 15:11:32 2008 +0000\n\n    [trace] Trim a few bytes from glyph arrays\n    \n    Remove some redundant whitespace from the glyph arrays to improve\n    readability and shrink the output file size.\n\n util/cairo-trace/trace.c |   65 +++++++++++++++++++++++++++-------------------\n 1 file changed, 38 insertions(+), 27 deletions(-)\n\ncommit 248dd97075b50cd91619022098ed5dd35a66b5df\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Thu Nov 6 00:17:53 2008 +1030\n\n    win32-printing: Implement JPEG support\n\n src/cairo-win32-printing-surface.c |   91 ++++++++++++++++++++++++++++++++----\n src/cairo-win32-private.h          |    3 ++\n 2 files changed, 85 insertions(+), 9 deletions(-)\n\ncommit 29621bd3995c5269fd6f73ab501383433bd29768\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 5 12:16:47 2008 +0000\n\n    [matrix] Remove stray offset from previous commit.\n    \n    I moved the pixel centre to xc,yc but forgot to remove it during\n    compensation - as caught by the test suite.\n    \n    Refresh a couple of reference images that depend upon exact pixel-centre\n    rounding conditions.\n\n src/cairo-matrix.c                      |    8 ++++----\n test/rotate-image-surface-paint.ref.png |  Bin 232 -> 190 bytes\n test/surface-pattern.pdf.ref.png        |  Bin 14776 -> 14791 bytes\n test/surface-pattern.ref.png            |  Bin 11044 -> 11100 bytes\n test/surface-pattern.svg.ref.png        |  Bin 16151 -> 16069 bytes\n 5 files changed, 4 insertions(+), 4 deletions(-)\n\ncommit e811173311ebe76d47eebcf5c6c5c798f9d3ea72\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 5 10:59:15 2008 +0000\n\n    [matrix] Compensate pixman_matrix in device space.\n    \n    We wish to reduce the visible error when converting to a pixman matrix, so\n    perform the compensation in device space instead of pattern space.\n\n src/cairo-image-surface.c |    4 ++--\n src/cairo-matrix.c        |   53 +++++++++++++++++++++++++++------------------\n 2 files changed, 34 insertions(+), 23 deletions(-)\n\ncommit c95eebc92316ad50840fab1cec6c14b6c3e50fa5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 5 09:56:02 2008 +0000\n\n    [pattern] Split the translation between the matrix and [xy]_offset\n    \n    pixman limits the src] co-ordinates (and thus [xy]_offset] to 16bits,\n    so we need to be careful how much of the translation vector to push into\n    [xy]_offset. Since the range is the same for both, split the integer\n    component between the matrix and the offset.\n    \n    test/scale-offset* now at least shows the source image, even if it is\n    misplaced.\n\n src/cairo-pattern.c                  |    7 +++++--\n test/scale-offset-image.ps.ref.png   |  Bin 7445 -> 7289 bytes\n test/scale-offset-image.ref.png      |  Bin 10005 -> 9953 bytes\n test/scale-offset-similar.ps.ref.png |  Bin 7819 -> 7860 bytes\n test/scale-offset-similar.ref.png    |  Bin 10005 -> 9953 bytes\n 5 files changed, 5 insertions(+), 2 deletions(-)\n\ncommit d1b8186fd75922e73e62ef8f2ebb011e334ebe36\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 5 01:16:25 2008 +0000\n\n    [trace] Correct emission of set_font_face and set_source\n    \n    set_font_face was not consuming it's operand but blithely placing an\n    undefined font_face onto the operand stack, whereas set_source was\n    performing invalid exchanges on the stack.\n\n util/cairo-trace/trace.c |   36 +++++++++++++++++++++++++++---------\n 1 file changed, 27 insertions(+), 9 deletions(-)\n\ncommit 4a4b10271a614ee9bf982994b8f9ec6b6102ee10\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 5 00:02:09 2008 +0000\n\n    [trace] Capture foreign drawables.\n    \n    If we attempt to use a surface as a source before we write to it, record\n    the surface contents.\n\n util/cairo-trace/trace.c |  102 ++++++++++++++++++++++++++++++++++++++++++----\n 1 file changed, 93 insertions(+), 9 deletions(-)\n\ncommit 432fe1ec2792153ec2559ef52aece3fcdc9c5df4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 4 15:30:23 2008 +0000\n\n    [trace] Mark filter mode as immediate.\n    \n    Be consistent and use \"//\" for the filter mode to indicate a constant.\n\n util/cairo-trace/trace.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 68309481aa9295026e3e7e6407c793f899b5e600\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Nov 5 08:03:01 2008 +0000\n\n    [test] Mark targets with is_meta?\n    \n    Allow tests to skip targets based on whether they are a meta surface or\n    not.\n\n boilerplate/cairo-boilerplate.c |   40 +++++++++++++++++++++++----------------\n boilerplate/cairo-boilerplate.h |    1 +\n test/cairo-test.c               |   13 ++++++++++++-\n 3 files changed, 37 insertions(+), 17 deletions(-)\n\ncommit 8855f9583e84ae2e6d981e21133f590bff2065ab\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 4 20:04:02 2008 +0000\n\n    [test] Add scale-offset-(similar|image)\n    \n    Add a test case for the scaling bug reported by Michel Iwaniec:\n    http://lists.cairographics.org/archives/cairo/2008-November/015660.html\n\n test/Makefile.am                     |    6 ++\n test/scale-offset-image.c            |  142 +++++++++++++++++++++++++++++++++\n test/scale-offset-image.ps.ref.png   |  Bin 0 -> 7445 bytes\n test/scale-offset-image.ref.png      |  Bin 0 -> 10005 bytes\n test/scale-offset-similar.c          |  143 ++++++++++++++++++++++++++++++++++\n test/scale-offset-similar.ps.ref.png |  Bin 0 -> 7819 bytes\n test/scale-offset-similar.ref.png    |  Bin 0 -> 10005 bytes\n 7 files changed, 291 insertions(+)\n\ncommit aad980900314bd032468f41a3216769c66e62097\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 4 19:11:55 2008 +0000\n\n    [test] Only depend on any2ppm if we build it.\n    \n    Do not add a dependency to any2ppm if it has been deconfigured.\n\n test/Makefile.am |    5 ++++-\n 1 file changed, 4 insertions(+), 1 deletion(-)\n\ncommit 59bdeba9abd7bef15c6855d707c4cf92b623cb00\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 4 18:42:05 2008 +0000\n\n    [matrix] Minimise pixman conversion error.\n    \n    Minimise the error of the pixman matrix about the centre of the displayed\n    area rather than the origin.\n\n src/cairo-image-surface.c          |   25 +++++++++++++++++--------\n src/cairo-matrix.c                 |   24 ++++++++++++++----------\n src/cairo-pattern.c                |    3 ++-\n src/cairo-xlib-surface.c           |   33 +++++++++++++++++++++++----------\n src/cairoint.h                     |    4 +++-\n test/Makefile.am                   |    3 +--\n test/surface-pattern.pdf.ref.png   |  Bin 15996 -> 14776 bytes\n test/surface-pattern.ref.png       |  Bin 11439 -> 11044 bytes\n test/surface-pattern.svg.ref.png   |  Bin 0 -> 16151 bytes\n test/surface-pattern.svg11.ref.png |  Bin 17663 -> 0 bytes\n test/surface-pattern.svg12.ref.png |  Bin 17663 -> 0 bytes\n 11 files changed, 60 insertions(+), 32 deletions(-)\n\ncommit 068d465bb3541cc0ffc3cb9daa0848365c0a6a24\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 4 14:57:21 2008 +0000\n\n    [trace] Fix emission of cairo_scaled_font_create()\n    \n    In the case where the font face was no longer on the operand stack, the\n    font face would not have been passed to cairo_scaled_font_create().\n\n util/cairo-trace/trace.c |   27 +++++++++++++--------------\n 1 file changed, 13 insertions(+), 14 deletions(-)\n\ncommit a3d56c60e85176526d6cce139441b6921acc9218\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 4 14:06:02 2008 +0000\n\n    [trace] Use a common directory by default.\n    \n    If called directly (e.g. via /etc/ld.so.preload) put the output trace into\n    a central directory, and not the pwd.\n\n util/cairo-trace/Makefile.am |   10 ++++++++--\n util/cairo-trace/trace.c     |    8 ++++++--\n 2 files changed, 14 insertions(+), 4 deletions(-)\n\ncommit 3f7a21c5c93d8648ded097757852df44fc9fcaeb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 4 13:46:10 2008 +0000\n\n    [test] Add jpeg.jpg to EXTRA_DIST\n    \n    Forgot to add the new file to the distribution with the previous commit.\n\n test/Makefile.am |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 9900a2adf3e43e752bd421f00e81873b41db4c30\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 4 13:41:02 2008 +0000\n\n    [test] Update mime-data jpeg reference data.\n    \n    <adrianj> ickle_: If we are going to use a different image for jpeg in\n    mime-data maybe we could create a jpg that contains the text \"jpeg\". That\n    way when support for the other image formats is added the mime-data test\n    could have one image for each type with each image and it is easy to see\n    that each image is the correct one.\n\n test/jpeg.jpg              |  Bin 0 -> 2316 bytes\n test/mime-data.c           |    6 +++---\n test/mime-data.pdf.ref.png |  Bin 96 -> 4345 bytes\n test/mime-data.ps.ref.png  |  Bin 368 -> 4345 bytes\n test/mime-data.ref.png     |  Bin 263 -> 127 bytes\n 5 files changed, 3 insertions(+), 3 deletions(-)\n\ncommit c13a09ddb411287224c15728b14f23fef472f7d0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 4 13:00:36 2008 +0000\n\n    [test] Use a different jpeg image for mime-data\n    \n    Detect when we successfully encode the JPEG data from the mime-type by\n    using a completely image.\n\n test/Makefile.am           |    3 +++\n test/mime-data.c           |    6 +++++-\n test/mime-data.pdf.ref.png |  Bin 0 -> 96 bytes\n test/mime-data.ps.ref.png  |  Bin 0 -> 368 bytes\n test/scarab.jpg            |  Bin 0 -> 9650 bytes\n 5 files changed, 8 insertions(+), 1 deletion(-)\n\ncommit 8407470409ad9cb93263a1c2da7dd7446d3f897e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 4 12:45:47 2008 +0000\n\n    [test] Adapt pdf-mime-data for non-srcdir build.\n    \n    Need to look for reference/input images from srcdir as well.\n\n test/Makefile.am     |    2 +-\n test/pdf-mime-data.c |   44 ++++++++++++++++++++++++++++++++------------\n 2 files changed, 33 insertions(+), 13 deletions(-)\n\ncommit 8007618837c0292b6ebc6a4f954c5049d4e99d8a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 4 12:31:10 2008 +0000\n\n    [test] Fix compilation of imagediff.\n    \n    imagediff broke once again.\n\n test/Makefile.am |    3 ++-\n test/imagediff.c |   17 +++++++++++++++++\n 2 files changed, 19 insertions(+), 1 deletion(-)\n\ncommit 282d7744275f623ce550638df953ef279d2209f0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 4 12:53:15 2008 +0000\n\n    [mime-type] Request the mime-data for the source surface, not ourselves!\n    \n    Fixup a typo I introduced that caused us to request the jpeg data for the\n    destination surface and not the source.\n\n src/cairo-pdf-surface.c |    2 +-\n src/cairo-ps-surface.c  |    5 ++---\n 2 files changed, 3 insertions(+), 4 deletions(-)\n\ncommit aa616abc9ab02e333cf0cad4f524b15c710bf449\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 4 11:18:22 2008 +0000\n\n    [png] Use RGB for opaque images.\n    \n    If the ARGB32 is opaque, discard the alpha channel - so we should generate\n    byte identical output to the reference images.\n\n src/cairo-png.c |   11 +++++++----\n 1 file changed, 7 insertions(+), 4 deletions(-)\n\ncommit 30976635d7072c06d00e39b106e41be7b08c6c49\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Tue Nov 4 22:52:45 2008 +1030\n\n    PS: Implement JPEG embedding\n\n src/cairo-ps-surface.c |  104 ++++++++++++++++++++++++++++++++++++++++++++++--\n 1 file changed, 101 insertions(+), 3 deletions(-)\n\ncommit 73bc278c7a4630cd9299c974771ffd6e9245d0ac\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Tue Nov 4 22:25:26 2008 +1030\n\n    Add pdf mime data test\n    \n    To test that images in PDF files correctly embedded the mime data.\n\n test/Makefile.am     |    2 +\n test/pdf-mime-data.c |  151 ++++++++++++++++++++++++++++++++++++++++++++++++++\n 2 files changed, 153 insertions(+)\n\ncommit 3f18d38fbdc661d34e0fd951e0fd3aa1aa2cbcc9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 4 10:31:48 2008 +0000\n\n    [win32] Compile fix for extend-pad extents.\n    \n    Update the show_glyphs() prototype to include the extents argument.\n\n src/cairo-win32-printing-surface.c |    3 ++-\n src/cairo-win32-private.h          |    3 ++-\n 2 files changed, 4 insertions(+), 2 deletions(-)\n\ncommit 5ba95b7e1287ade0b8a1acf2f5cb73fa1f44c451\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 4 09:22:28 2008 +0000\n\n    [trace] Convert [1 0 0 1 0 0] to identity\n    \n    Simplify the trace/replay by replacing the identity array with the\n    identity operator.\n\n util/cairo-trace/trace.c |   34 +++++++++++++++++++++++++---------\n 1 file changed, 25 insertions(+), 9 deletions(-)\n\ncommit 3664b32195b101ebab9a5f9087095306f8969c80\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Nov 4 10:38:41 2008 +0000\n\n    [trace] Remove more @..@ from Makefile.am\n    \n    Use $(..) for make variable substitution as opposed to incorrectly using\n    @..@ for substitution by configure.\n\n util/cairo-trace/Makefile.am |   12 ++++++------\n 1 file changed, 6 insertions(+), 6 deletions(-)\n\ncommit 1d8ad69abb88f6e0283b6ce2aadc5d801b8e3722\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Tue Nov 4 01:51:06 2008 -0500\n\n    [aclocal.dolt.m4] Fix build with bash versions <= 3.0 (bug #18363)\n\n build/aclocal.dolt.m4 |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 310026ab42c2078e2749c886c74c5b38cab41671\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Tue Nov 4 01:51:06 2008 -0500\n\n    [aclocal.dolt.m4] Fix build with bash versions <= 3.0 (bug #18363)\n\n build/aclocal.dolt.m4 |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 90217550120f129004bc555b59ced28b4b25a4d4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Nov 3 23:45:12 2008 +0000\n\n    [mime-data] Copy a reference to the mime-data on snapshotting.\n    \n    Instead of doing a full-copy of the mime data (which can be 10K-100K,\n    or even larger) just copy a reference to the original mime to the\n    snapshot surface (as suggested by Behdad).\n\n src/cairo-surface-fallback.c |   29 +++-------------\n src/cairo-surface.c          |   77 +++++++++++++++++++++++++++++-------------\n src/cairo-types-private.h    |    2 ++\n src/cairoint.h               |    5 +++\n 4 files changed, 66 insertions(+), 47 deletions(-)\n\ncommit 4f032ca35a7086b76775e4b53c6b99ba4e1eb3cb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Nov 3 23:23:09 2008 +0000\n\n    [trace] Install cairo-trace.so into $(libdir)/cairo\n    \n    Install the auxiliary library into the cairo subdirectory within the\n    lib path, so that it doesn't clutter $(libdir) and sets a precedent for\n    future auxiliary libraries.\n\n util/cairo-trace/Makefile.am    |    7 ++++---\n util/cairo-trace/cairo-trace.in |   13 ++++++++++---\n 2 files changed, 14 insertions(+), 6 deletions(-)\n\ncommit c80a1c68c19f876c9f55b7c6d62b18ae110b11d0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Nov 3 23:16:09 2008 +0000\n\n    [configure] Make trace consistent.\n    \n    Remove the debianism from the comments for HAVE_BFD and comply with\n    Behdad's guidelines on using  $(...) within Makefile.am.\n\n configure.ac                 |    5 ++---\n util/cairo-trace/Makefile.am |    6 +++---\n 2 files changed, 5 insertions(+), 6 deletions(-)\n\ncommit 43e2370b024f66d995c514fd53414d3d8588a481\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Nov 3 14:20:35 2008 +0000\n\n    [test] Update extend-pad.\n    \n    extend-pad was not a clear demonstration of the EXTEND_PAD mode, so revamp\n    it to show the filter extending a 4 pixel surface to cover the entire\n    output. However, this hides a discrepancy with the vector surfaces that we\n    cannot prevent the external renders from applying an interpolation to the\n    border pixels, so we copy the original test to extend-pad-border to check\n    the desired behaviour on boundary pixels.\n\n test/Makefile.am                |    4 ++\n test/extend-pad-border.c        |   95 +++++++++++++++++++++++++++++++++++++++\n test/extend-pad-border.ref.png  |  Bin 0 -> 616 bytes\n test/extend-pad-similar.c       |   82 +++++++++++++++++++++++++++++++++\n test/extend-pad-similar.ref.png |  Bin 0 -> 315 bytes\n test/extend-pad.c               |   50 ++++++++-------------\n test/extend-pad.ref.png         |  Bin 616 -> 315 bytes\n 7 files changed, 200 insertions(+), 31 deletions(-)\n\ncommit b3462c5616ae24fd391ad0872d2fbb98c6cd0c92\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Nov 3 13:10:42 2008 +0000\n\n    [test] Convert a few residual '-out.*'\n    \n    Catch a few -out.* hiding in boilerplate.\n\n boilerplate/cairo-boilerplate-pdf.c            |    2 +-\n boilerplate/cairo-boilerplate-ps.c             |    2 +-\n boilerplate/cairo-boilerplate-svg.c            |    2 +-\n boilerplate/cairo-boilerplate-win32-printing.c |    2 +-\n test/Makefile.am                               |    6 +++---\n 5 files changed, 7 insertions(+), 7 deletions(-)\n\ncommit 34586860ef08e6aab988ba227997dfe376f9d319\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Nov 3 12:11:14 2008 +0000\n\n    [trace] Big-endian compile fixes.\n    \n    A few typos.\n\n util/cairo-trace/trace.c |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit ca83df55a63eab1821dbc009f65b3b09d61f5b62\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Nov 3 11:46:31 2008 +0000\n\n    [trace] Wrap test surfaces.\n    \n    Wrap the test surfaces to avoid crashes whilst tracing the test suite.\n\n util/cairo-trace/trace.c |  116 ++++++++++++++++++++++++++++++++++++++++++----\n 1 file changed, 108 insertions(+), 8 deletions(-)\n\ncommit 2c08f3f83b1acd168cd74b300272970658179a0f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Nov 3 11:30:38 2008 +0000\n\n    [trace] Autodetect -lbfd during configure\n    \n    Stop being lazy and detect libbfd during configure.\n\n configure.ac                     |   10 ++++++++++\n util/cairo-trace/Makefile.am     |    2 +-\n util/cairo-trace/lookup-symbol.c |    6 +++---\n 3 files changed, 14 insertions(+), 4 deletions(-)\n\ncommit 8fc3d0ffebea5622332327cdef9222486cc85581\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Nov 3 11:01:22 2008 +0000\n\n    [mime-data] Allow embedding of arbitrary mime-types.\n    \n    Use the surface user-data array allow to store an arbitrary set of\n    alternate image representations keyed by an interned string (which\n    ensures that it has a unique key in the user-visible namespace).\n    \n    Update the API to mirror that of cairo_surface_set_user_data() [i.e.\n    return a status indicator] and switch internal users of the mime-data to\n    the public functions.\n\n src/cairo-debug.c              |    2 +\n src/cairo-jpeg-info-private.h  |    6 +--\n src/cairo-jpeg-info.c          |   19 ++++---\n src/cairo-misc.c               |   98 +++++++++++++++++++++++++++++++++++\n src/cairo-mutex-list-private.h |    1 +\n src/cairo-pdf-surface.c        |   16 +++---\n src/cairo-surface-fallback.c   |   37 ++++++++++----\n src/cairo-surface-private.h    |    4 --\n src/cairo-surface.c            |   91 +++++++++++++++++++++++++-------\n src/cairo-types-private.h      |    7 +++\n src/cairo.h                    |    4 +-\n src/cairoint.h                 |    8 +++\n test/Makefile.am               |    3 ++\n test/mime-data.c               |  111 ++++++++++++++++++++++++++++++++++++++++\n test/mime-data.ref.png         |  Bin 0 -> 263 bytes\n test/romedalen.jpg             |  Bin 0 -> 11400 bytes\n util/cairo-trace/trace.c       |    2 +-\n 17 files changed, 351 insertions(+), 58 deletions(-)\n\ncommit afef83a1fae028b45cefd6b4698e7b32ad4d6fc7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Nov 3 09:40:35 2008 +0000\n\n    Compile tidy.\n    \n    Fix a few minor compiler warnings.\n\n src/cairo-pdf-surface.c |    2 +-\n src/cairo-ps-surface.c  |    2 +-\n src/cairo-surface.c     |    6 +++---\n 3 files changed, 5 insertions(+), 5 deletions(-)\n\ncommit f77723fc88c12ebf6f5bff5a1797649d134ecc5d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Nov 2 19:59:53 2008 +0000\n\n    [pdf] Missing status check.\n    \n    Check that stream was successfully opened before attempting to write to\n    it.\n\n src/cairo-pdf-surface.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 04e3bb932eeac4f403b512087b96a164d082d52c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Nov 2 21:51:37 2008 +0000\n\n    [trace] Emit set_mime_data().\n    \n    Wrap the new cairo_surface_set_mime_data() function.\n\n util/cairo-trace/trace.c |   30 ++++++++++++++++++++++++++++--\n 1 file changed, 28 insertions(+), 2 deletions(-)\n\ncommit 350fa7b98e5045a4fa05f64a1ad7d8167036be34\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Nov 1 13:12:43 2008 +0000\n\n    [trace] Fix boundary terminations\n    \n    Don't increment the terminator!\n\n util/cairo-trace/trace.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit f3cbc5cf4580da83b7edacfd381afee3d571c659\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 31 23:47:16 2008 +0000\n\n    [trace] Use utf8 len in show_text_glyphs().\n    \n    Honour the parameter specifying the length of the utf8 string when\n    emitting show_text_glyphs.\n\n util/cairo-trace/trace.c |   36 ++++++++++++++++++++----------------\n 1 file changed, 20 insertions(+), 16 deletions(-)\n\ncommit 6434cddb899d750b815d71f8f51ae3e4568dd3c0\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Nov 2 11:42:33 2008 +1030\n\n    type1-subset: return unsupported on FT errors\n    \n    and let type1-fallback handle it. This fixes the bug reported by\n    Peter Weilbacher in\n    http://lists.cairographics.org/archives/cairo/2008-October/015569.html\n\n src/cairo-type1-subset.c |   12 ++++--------\n 1 file changed, 4 insertions(+), 8 deletions(-)\n\ncommit 1685bbee1bf1ebc015ada94f77756d8d10c7818d\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Nov 2 19:50:59 2008 +1030\n\n    test/README: fix typo\n\n test/README |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 540ac11113015f0fd6856d016cb38fec5282b6ce\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Nov 2 11:42:33 2008 +1030\n\n    type1-subset: return unsupported on FT errors\n    \n    and let type1-fallback handle it. This fixes the bug reported by\n    Peter Weilbacher in\n    http://lists.cairographics.org/archives/cairo/2008-October/015569.html\n\n src/cairo-type1-subset.c |   12 ++++--------\n 1 file changed, 4 insertions(+), 8 deletions(-)\n\ncommit 3707178fa48e23b85c5640f3cee72e19f49c700b\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Mon Sep 8 10:26:58 2008 +0930\n\n    PDF: Implement JPEG image embedding\n\n src/Makefile.sources          |    2 +\n src/cairo-jpeg-info-private.h |   54 ++++++++++++++++\n src/cairo-jpeg-info.c         |  142 +++++++++++++++++++++++++++++++++++++++++\n src/cairo-pdf-surface.c       |   55 ++++++++++++++++\n 4 files changed, 253 insertions(+)\n\ncommit 3c684347f49a581bfba35202ec61a5f6334acd4a\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Sep 7 20:46:20 2008 +0930\n\n    Add cairo_surface_set_mime_data()\n    \n    Currently only handles jpeg data.\n\n src/cairo-surface-fallback.c |   15 ++++++++++\n src/cairo-surface-private.h  |    4 +++\n src/cairo-surface.c          |   67 ++++++++++++++++++++++++++++++++++++++++++\n src/cairo.h                  |   15 ++++++++++\n 4 files changed, 101 insertions(+)\n\ncommit a39a4f52ac4a057f579e881a9a929029bcc514d1\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Wed Oct 1 21:02:26 2008 +0930\n\n    PS: meta-surface patterns with EXTEND_PAD are unsupported\n    \n    We have to use fallback images for this.\n\n src/cairo-ps-surface.c |    8 ++++++--\n 1 file changed, 6 insertions(+), 2 deletions(-)\n\ncommit 19ee13ca2b5b1e08a7fc965516be514d2fe40232\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Wed Oct 1 21:01:17 2008 +0930\n\n    PS: Implement EXTEND_PAD for image patterns\n    \n    Images with EXTEND_PAD are painted into a new image the size of the\n    operation extents. The new image is then embedded in the PS file with\n    the pattern matrix adjusted to ensure the image origin is in the\n    correct location.\n\n src/cairo-ps-surface-private.h |    1 +\n src/cairo-ps-surface.c         |   99 +++++++++++++++++++++++++++++++++-------\n 2 files changed, 83 insertions(+), 17 deletions(-)\n\ncommit e639b536711c07bc09355205f476ab3f73012268\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Wed Oct 1 21:00:30 2008 +0930\n\n    PDF: meta-surface patterns with EXTEND_PAD are unsupported\n    \n    We have to use fallback images for this.\n\n src/cairo-pdf-surface.c |    8 ++++++--\n 1 file changed, 6 insertions(+), 2 deletions(-)\n\ncommit 6c92edd9a3b0c79857cfa8dee482efa56f40c714\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Wed Oct 1 20:56:49 2008 +0930\n\n    PDF: Implement EXTEND_PAD for image patterns\n    \n    Images with EXTEND_PAD are painted into a new image the size of the\n    operation extents. The new image is then embedded in the PDF file with\n    the pattern matrix adjusted to ensure the image origin is in the\n    correct location.\n\n src/cairo-pdf-surface.c |   70 +++++++++++++++++++++++++++++++++++++++++------\n 1 file changed, 62 insertions(+), 8 deletions(-)\n\ncommit d146cb4056ab54cf85454a6fe9d36282ca7a3f2e\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Wed Oct 1 20:56:01 2008 +0930\n\n    PDF: Store the operation extents in each pattern\n    \n    The extents will be used by EXTEND_PAD patterns as well as any other\n    pattern that can benefit from knowing the extents of the operation it\n    will be used with.\n\n src/cairo-pdf-surface-private.h |    1 +\n src/cairo-pdf-surface.c         |   30 ++++++++++++++++++++++++------\n 2 files changed, 25 insertions(+), 6 deletions(-)\n\ncommit fb7cfdd94d4e436e066d884f6dc294efd896b344\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Wed Oct 1 20:52:08 2008 +0930\n\n    Make meta-surface store and replay extents of each operation\n    \n    To be able to provide the extents of each operation to the backend\n    during the render phase the meta-surface needs to store the extents\n    computed by the analysis surface during the analysis phase.\n    \n    The extents argument is either a pointer to the extents of the operation\n    stored in the meta-surface or NULL. During analysis the analysis surface\n    writes the extents to the meta-surface. During the render phase the extents\n    is made available to paginated surface backends.\n\n src/cairo-analysis-surface.c     |   12 ++++++++++++\n src/cairo-meta-surface-private.h |    1 +\n src/cairo-meta-surface.c         |   33 +++++++++++++++++++++++++++------\n 3 files changed, 40 insertions(+), 6 deletions(-)\n\ncommit d682d275b90f7326df76d2764c513c8b6d5b551b\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Wed Oct 1 20:50:53 2008 +0930\n\n    Add an extents argument to the high level surface backend functions\n    \n    Add a \"cairo_rectangle_int_t *extents\" argument to to the following\n    backend functions:\n      paint\n      mask,\n      stroke\n      fill\n      show_glyphs\n      show_text_glyphs\n    \n    This will be used to pass the extents of each operation computed by\n    the analysis surface to the backend. This is required for implementing\n    EXTEND_PAD.\n\n src/cairo-analysis-surface.c       |   49 ++++++++++++++++++++++--------------\n src/cairo-directfb-surface.c       |    3 ++-\n src/cairo-gstate.c                 |   12 ++++-----\n src/cairo-meta-surface.c           |   27 ++++++++++++--------\n src/cairo-paginated-surface.c      |   27 ++++++++++++--------\n src/cairo-pdf-surface.c            |   18 ++++++++-----\n src/cairo-ps-surface.c             |   12 ++++++---\n src/cairo-quartz-surface.c         |   15 +++++++----\n src/cairo-surface.c                |   45 +++++++++++++++++++--------------\n src/cairo-svg-surface.c            |   24 +++++++++++-------\n src/cairo-type3-glyph-surface.c    |   17 ++++++++-----\n src/cairo-win32-printing-surface.c |   12 ++++++---\n src/cairo-win32-surface.c          |    3 ++-\n src/cairo-xlib-surface.c           |    8 +++---\n src/cairoint.h                     |   39 ++++++++++++++++++----------\n src/test-meta-surface.c            |   25 ++++++++++--------\n src/test-paginated-surface.c       |   25 ++++++++++--------\n 17 files changed, 223 insertions(+), 138 deletions(-)\n\ncommit ed2081d97401741db10b0244eaba7ff31ae63346\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sun Nov 2 15:05:07 2008 +1030\n\n    Specify a background color for XFAIL text\n    \n    To improve readability on terminals with a white background.\n\n test/cairo-test.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 81c3009c077ddab40df052bffaa646526e2b8dfc\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Oct 31 16:45:58 2008 -0400\n\n    [boilerplate/Makefile.win32] Only build source files, not headers\n\n boilerplate/Makefile.win32 |    6 +++++-\n 1 file changed, 5 insertions(+), 1 deletion(-)\n\ncommit d5f88c28021907ad761a1bf1c311bfd206db617e\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Oct 31 13:43:37 2008 -0400\n\n    [.gitignore] Add\n\n util/cairo-trace/.gitignore |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 49bd253fd36dc93219a5414c6e7a6daeaa9c63b9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 31 16:40:49 2008 +0000\n\n    [tessellator] Refine the math comments.\n    \n    First of a simple substitution for -?-, as they are very confusing in\n    context with other minus signs floating around.\n    \n    Carl has promised to go over these docs with me at the HackFest in order\n    to improve them (and verify them).\n\n src/cairo-bentley-ottmann.c |   30 +++++++++++++++---------------\n 1 file changed, 15 insertions(+), 15 deletions(-)\n\ncommit ab8a0bfd82f8f474714d7aae4ceff4e7848c9b4b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 31 16:09:13 2008 +0000\n\n    Add a COPYING file to each aux. source directory\n    \n    Include a COPYING inside perf/, test/, util/ to clarify the licensing\n    conditions beneath the respective directories. This is because cairo\n    itself (libcairo.so) is LGPL-2.1/MPL-1.1 but that only relates to src/.\n    The auxiliary source files are under a mix of free licenses and we wish to\n    be clear just what license applies to each file.\n    \n    In particular, cairo-trace needs to include the GPL terms and conditions.\n\n COPYING                        |   17 +-\n perf/COPYING                   |    5 +\n perf/Makefile.am               |    2 +-\n test/COPYING                   |    5 +\n test/Makefile.am               |    2 +-\n util/COPYING                   |    4 +\n util/Makefile.am               |    1 +\n util/cairo-trace/COPYING       |    5 +\n util/cairo-trace/COPYING-GPL-3 |  674 ++++++++++++++++++++++++++++++++++++++++\n util/cairo-trace/Makefile.am   |    5 +-\n 10 files changed, 709 insertions(+), 11 deletions(-)\n\ncommit c554f18d78fff71aff2d79309b19155de407363d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 31 15:37:58 2008 +0000\n\n    [util] Add cairo-trace.\n    \n    This tool can be used to trace all the cairo function calls made by an\n    applications.  This is useful for either extracting a test case triggering\n    a bug from an application, or simply to get a general idea of how an\n    application is using cairo.\n    \n    After make install, cairo-trace program arguments, will print out all the\n    cairo calls to the terminal and also capture theme in ./program.$pid.trace\n    \n    The format of the output is CairoScript, watch this space for more\n    cairo-script tools!\n\n build/configure.ac.system        |    2 +\n configure.ac                     |   17 +\n util/Makefile.am                 |    6 +\n util/README                      |    8 -\n util/cairo-trace/Makefile.am     |   21 +\n util/cairo-trace/cairo-trace.in  |   58 +\n util/cairo-trace/lookup-symbol.c |  290 ++++\n util/cairo-trace/lookup-symbol.h |   24 +\n util/cairo-trace/trace.c         | 3345 ++++++++++++++++++++++++++++++++++++++\n 9 files changed, 3763 insertions(+), 8 deletions(-)\n\ncommit 992f74d884c9ea83f7b51c6959dd93718027b99a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 31 13:50:55 2008 +0000\n\n    [test] Use '.' as the field separator in the names\n    \n    We frequently use '-' within the test name or format name and so we\n    encounter confusion as '-' is also used as the field separator. At times\n    this has caused a new test to break an old test because the new test would\n    match one of the old test's target specific reference images. So switch\n    everything over to use '.' between fields (test name, target, format,\n    subtest, etc.).\n\n test/.gitignore                                    |    8 +-\n test/Makefile.am                                   | 1402 ++++++++++----------\n test/a1-image-sample-ref.png                       |  Bin 148 -> 0 bytes\n test/a1-image-sample.ref.png                       |  Bin 0 -> 148 bytes\n test/a1-mask-ref.png                               |  Bin 131 -> 0 bytes\n test/a1-mask.ref.png                               |  Bin 0 -> 131 bytes\n test/a1-traps-sample-ref.png                       |  Bin 148 -> 0 bytes\n test/a1-traps-sample.ref.png                       |  Bin 0 -> 148 bytes\n test/a8-mask-ref.png                               |  Bin 128 -> 0 bytes\n test/a8-mask.ref.png                               |  Bin 0 -> 128 bytes\n test/alpha-similar-ref.png                         |  Bin 99 -> 0 bytes\n test/alpha-similar-rgb24-ref.png                   |  Bin 99 -> 0 bytes\n test/alpha-similar.ref.png                         |  Bin 0 -> 99 bytes\n test/alpha-similar.rgb24.ref.png                   |  Bin 0 -> 99 bytes\n test/big-line-ps2-ref.png                          |  Bin 1148 -> 0 bytes\n test/big-line-ps2-rgb24-ref.png                    |  Bin 830 -> 0 bytes\n test/big-line-ps3-ref.png                          |  Bin 1148 -> 0 bytes\n test/big-line-ps3-rgb24-ref.png                    |  Bin 830 -> 0 bytes\n test/big-line-quartz-ref.png                       |  Bin 1075 -> 0 bytes\n test/big-line-quartz-rgb24-ref.png                 |  Bin 941 -> 0 bytes\n test/big-line-ref.png                              |  Bin 1486 -> 0 bytes\n test/big-line-rgb24-ref.png                        |  Bin 1308 -> 0 bytes\n test/big-line.ps2.ref.png                          |  Bin 0 -> 1148 bytes\n test/big-line.ps2.rgb24.ref.png                    |  Bin 0 -> 830 bytes\n test/big-line.ps3.ref.png                          |  Bin 0 -> 1148 bytes\n test/big-line.ps3.rgb24.ref.png                    |  Bin 0 -> 830 bytes\n test/big-line.quartz.ref.png                       |  Bin 0 -> 1075 bytes\n test/big-line.quartz.rgb24.ref.png                 |  Bin 0 -> 941 bytes\n test/big-line.ref.png                              |  Bin 0 -> 1486 bytes\n test/big-line.rgb24.ref.png                        |  Bin 0 -> 1308 bytes\n test/bilevel-image-ref.png                         |  Bin 131 -> 0 bytes\n test/bilevel-image.ref.png                         |  Bin 0 -> 131 bytes\n test/bitmap-font-ref.png                           |  Bin 950 -> 0 bytes\n test/bitmap-font-rgb24-ref.png                     |  Bin 890 -> 0 bytes\n test/bitmap-font.ref.png                           |  Bin 0 -> 950 bytes\n test/bitmap-font.rgb24.ref.png                     |  Bin 0 -> 890 bytes\n test/cairo-test.c                                  |   68 +-\n test/cairo-test.h                                  |    1 +\n test/caps-joins-alpha-quartz-ref.png               |  Bin 2466 -> 0 bytes\n test/caps-joins-alpha-ref.png                      |  Bin 2463 -> 0 bytes\n test/caps-joins-alpha-svg11-ref.png                |  Bin 2454 -> 0 bytes\n test/caps-joins-alpha-svg12-ref.png                |  Bin 2454 -> 0 bytes\n test/caps-joins-alpha.quartz.ref.png               |  Bin 0 -> 2466 bytes\n test/caps-joins-alpha.ref.png                      |  Bin 0 -> 2463 bytes\n test/caps-joins-alpha.svg11.ref.png                |  Bin 0 -> 2454 bytes\n test/caps-joins-alpha.svg12.ref.png                |  Bin 0 -> 2454 bytes\n test/caps-joins-ps2-ref.png                        |  Bin 1459 -> 0 bytes\n test/caps-joins-ps3-ref.png                        |  Bin 1459 -> 0 bytes\n test/caps-joins-ref.png                            |  Bin 1488 -> 0 bytes\n test/caps-joins.ps2.ref.png                        |  Bin 0 -> 1459 bytes\n test/caps-joins.ps3.ref.png                        |  Bin 0 -> 1459 bytes\n test/caps-joins.ref.png                            |  Bin 0 -> 1488 bytes\n test/caps-sub-paths-ref.png                        |  Bin 197 -> 0 bytes\n test/caps-sub-paths.ref.png                        |  Bin 0 -> 197 bytes\n test/clip-all-ref.png                              |  Bin 118 -> 0 bytes\n test/clip-all.ref.png                              |  Bin 0 -> 118 bytes\n test/clip-empty-ref.png                            |  Bin 118 -> 0 bytes\n test/clip-empty.ref.png                            |  Bin 0 -> 118 bytes\n test/clip-fill-rule-pixel-aligned-ref.png          |  Bin 195 -> 0 bytes\n test/clip-fill-rule-pixel-aligned-rgb24-ref.png    |  Bin 184 -> 0 bytes\n test/clip-fill-rule-pixel-aligned.ref.png          |  Bin 0 -> 195 bytes\n test/clip-fill-rule-pixel-aligned.rgb24.ref.png    |  Bin 0 -> 184 bytes\n test/clip-fill-rule-ps2-argb32-ref.png             |  Bin 310 -> 0 bytes\n test/clip-fill-rule-ps2-rgb24-ref.png              |  Bin 302 -> 0 bytes\n test/clip-fill-rule-ps3-argb32-ref.png             |  Bin 310 -> 0 bytes\n test/clip-fill-rule-ps3-rgb24-ref.png              |  Bin 302 -> 0 bytes\n test/clip-fill-rule-ref.png                        |  Bin 431 -> 0 bytes\n test/clip-fill-rule-rgb24-ref.png                  |  Bin 380 -> 0 bytes\n test/clip-fill-rule.ps2.argb32.ref.png             |  Bin 0 -> 310 bytes\n test/clip-fill-rule.ps2.rgb24.ref.png              |  Bin 0 -> 302 bytes\n test/clip-fill-rule.ps3.argb32.ref.png             |  Bin 0 -> 310 bytes\n test/clip-fill-rule.ps3.rgb24.ref.png              |  Bin 0 -> 302 bytes\n test/clip-fill-rule.ref.png                        |  Bin 0 -> 431 bytes\n test/clip-fill-rule.rgb24.ref.png                  |  Bin 0 -> 380 bytes\n test/clip-nesting-ps2-argb32-ref.png               |  Bin 651 -> 0 bytes\n test/clip-nesting-ps2-rgb24-ref.png                |  Bin 636 -> 0 bytes\n test/clip-nesting-ps3-argb32-ref.png               |  Bin 651 -> 0 bytes\n test/clip-nesting-ps3-rgb24-ref.png                |  Bin 636 -> 0 bytes\n test/clip-nesting-quartz-ref.png                   |  Bin 1067 -> 0 bytes\n test/clip-nesting-quartz-rgb24-ref.png             |  Bin 956 -> 0 bytes\n test/clip-nesting-ref.png                          |  Bin 1050 -> 0 bytes\n test/clip-nesting-rgb24-ref.png                    |  Bin 955 -> 0 bytes\n test/clip-nesting.ps2.argb32.ref.png               |  Bin 0 -> 651 bytes\n test/clip-nesting.ps2.rgb24.ref.png                |  Bin 0 -> 636 bytes\n test/clip-nesting.ps3.argb32.ref.png               |  Bin 0 -> 651 bytes\n test/clip-nesting.ps3.rgb24.ref.png                |  Bin 0 -> 636 bytes\n test/clip-nesting.quartz.ref.png                   |  Bin 0 -> 1067 bytes\n test/clip-nesting.quartz.rgb24.ref.png             |  Bin 0 -> 956 bytes\n test/clip-nesting.ref.png                          |  Bin 0 -> 1050 bytes\n test/clip-nesting.rgb24.ref.png                    |  Bin 0 -> 955 bytes\n test/clip-operator-pdf-argb32-ref.png              |  Bin 12125 -> 0 bytes\n test/clip-operator-pdf-rgb24-ref.png               |  Bin 7367 -> 0 bytes\n test/clip-operator-ps2-rgb24-ref.png               |  Bin 3624 -> 0 bytes\n test/clip-operator-ps3-ref.png                     |  Bin 8188 -> 0 bytes\n test/clip-operator-ps3-rgb24-ref.png               |  Bin 3624 -> 0 bytes\n test/clip-operator-quartz-ref.png                  |  Bin 9539 -> 0 bytes\n test/clip-operator-quartz-rgb24-ref.png            |  Bin 4412 -> 0 bytes\n test/clip-operator-ref.png                         |  Bin 8271 -> 0 bytes\n test/clip-operator-rgb24-ref.png                   |  Bin 3258 -> 0 bytes\n test/clip-operator.pdf.argb32.ref.png              |  Bin 0 -> 12125 bytes\n test/clip-operator.pdf.rgb24.ref.png               |  Bin 0 -> 7367 bytes\n test/clip-operator.ps2.rgb24.ref.png               |  Bin 0 -> 3624 bytes\n test/clip-operator.ps3.ref.png                     |  Bin 0 -> 8188 bytes\n test/clip-operator.ps3.rgb24.ref.png               |  Bin 0 -> 3624 bytes\n test/clip-operator.quartz.ref.png                  |  Bin 0 -> 9539 bytes\n test/clip-operator.quartz.rgb24.ref.png            |  Bin 0 -> 4412 bytes\n test/clip-operator.ref.png                         |  Bin 0 -> 8271 bytes\n test/clip-operator.rgb24.ref.png                   |  Bin 0 -> 3258 bytes\n test/clip-push-group-ps2-argb32-ref.png            |  Bin 179 -> 0 bytes\n test/clip-push-group-ps2-rgb24-ref.png             |  Bin 179 -> 0 bytes\n test/clip-push-group-ps3-argb32-ref.png            |  Bin 179 -> 0 bytes\n test/clip-push-group-ps3-rgb24-ref.png             |  Bin 179 -> 0 bytes\n test/clip-push-group-quartz-ref.png                |  Bin 203 -> 0 bytes\n test/clip-push-group-ref.png                       |  Bin 199 -> 0 bytes\n test/clip-push-group.ps2.argb32.ref.png            |  Bin 0 -> 179 bytes\n test/clip-push-group.ps2.rgb24.ref.png             |  Bin 0 -> 179 bytes\n test/clip-push-group.ps3.argb32.ref.png            |  Bin 0 -> 179 bytes\n test/clip-push-group.ps3.rgb24.ref.png             |  Bin 0 -> 179 bytes\n test/clip-push-group.quartz.ref.png                |  Bin 0 -> 203 bytes\n test/clip-push-group.ref.png                       |  Bin 0 -> 199 bytes\n test/clip-twice-ps2-argb32-ref.png                 |  Bin 575 -> 0 bytes\n test/clip-twice-ps2-rgb24-ref.png                  |  Bin 541 -> 0 bytes\n test/clip-twice-ps3-argb32-ref.png                 |  Bin 575 -> 0 bytes\n test/clip-twice-ps3-rgb24-ref.png                  |  Bin 541 -> 0 bytes\n test/clip-twice-quartz-ref.png                     |  Bin 1171 -> 0 bytes\n test/clip-twice-quartz-rgb24-ref.png               |  Bin 1111 -> 0 bytes\n test/clip-twice-ref.png                            |  Bin 1362 -> 0 bytes\n test/clip-twice-rgb24-ref.png                      |  Bin 1198 -> 0 bytes\n test/clip-twice.ps2.argb32.ref.png                 |  Bin 0 -> 575 bytes\n test/clip-twice.ps2.rgb24.ref.png                  |  Bin 0 -> 541 bytes\n test/clip-twice.ps3.argb32.ref.png                 |  Bin 0 -> 575 bytes\n test/clip-twice.ps3.rgb24.ref.png                  |  Bin 0 -> 541 bytes\n test/clip-twice.quartz.ref.png                     |  Bin 0 -> 1171 bytes\n test/clip-twice.quartz.rgb24.ref.png               |  Bin 0 -> 1111 bytes\n test/clip-twice.ref.png                            |  Bin 0 -> 1362 bytes\n test/clip-twice.rgb24.ref.png                      |  Bin 0 -> 1198 bytes\n test/clipped-group-ps2-ref.png                     |  Bin 343 -> 0 bytes\n test/clipped-group-ps3-ref.png                     |  Bin 343 -> 0 bytes\n test/clipped-group-ref.png                         |  Bin 350 -> 0 bytes\n test/clipped-group.ps2.ref.png                     |  Bin 0 -> 343 bytes\n test/clipped-group.ps3.ref.png                     |  Bin 0 -> 343 bytes\n test/clipped-group.ref.png                         |  Bin 0 -> 350 bytes\n test/clipped-surface-ref.png                       |  Bin 401 -> 0 bytes\n test/clipped-surface.ref.png                       |  Bin 0 -> 401 bytes\n test/close-path-ps2-ref.png                        |  Bin 309 -> 0 bytes\n test/close-path-ps3-ref.png                        |  Bin 309 -> 0 bytes\n test/close-path-ref.png                            |  Bin 312 -> 0 bytes\n test/close-path.ps2.ref.png                        |  Bin 0 -> 309 bytes\n test/close-path.ps3.ref.png                        |  Bin 0 -> 309 bytes\n test/close-path.ref.png                            |  Bin 0 -> 312 bytes\n test/composite-integer-translate-over-ps2-ref.png  |  Bin 15783 -> 0 bytes\n test/composite-integer-translate-over-ps3-ref.png  |  Bin 15783 -> 0 bytes\n test/composite-integer-translate-over-ref.png      |  Bin 16385 -> 0 bytes\n ...osite-integer-translate-over-repeat-ps2-ref.png |  Bin 448 -> 0 bytes\n ...osite-integer-translate-over-repeat-ps3-ref.png |  Bin 448 -> 0 bytes\n ...composite-integer-translate-over-repeat-ref.png |  Bin 401 -> 0 bytes\n ...osite-integer-translate-over-repeat.ps2.ref.png |  Bin 0 -> 448 bytes\n ...osite-integer-translate-over-repeat.ps3.ref.png |  Bin 0 -> 448 bytes\n ...composite-integer-translate-over-repeat.ref.png |  Bin 0 -> 401 bytes\n test/composite-integer-translate-over.ps2.ref.png  |  Bin 0 -> 15783 bytes\n test/composite-integer-translate-over.ps3.ref.png  |  Bin 0 -> 15783 bytes\n test/composite-integer-translate-over.ref.png      |  Bin 0 -> 16385 bytes\n .../composite-integer-translate-source-ps2-ref.png |  Bin 15783 -> 0 bytes\n .../composite-integer-translate-source-ps3-ref.png |  Bin 15783 -> 0 bytes\n test/composite-integer-translate-source-ref.png    |  Bin 16385 -> 0 bytes\n .../composite-integer-translate-source.ps2.ref.png |  Bin 0 -> 15783 bytes\n .../composite-integer-translate-source.ps3.ref.png |  Bin 0 -> 15783 bytes\n test/composite-integer-translate-source.ref.png    |  Bin 0 -> 16385 bytes\n test/copy-path-ps2-ref.png                         |  Bin 474 -> 0 bytes\n test/copy-path-ps3-ref.png                         |  Bin 474 -> 0 bytes\n test/copy-path-ref.png                             |  Bin 579 -> 0 bytes\n test/copy-path.ps2.ref.png                         |  Bin 0 -> 474 bytes\n test/copy-path.ps3.ref.png                         |  Bin 0 -> 474 bytes\n test/copy-path.ref.png                             |  Bin 0 -> 579 bytes\n test/create-for-stream.c                           |    2 +-\n test/create-from-png-alpha-ref.png                 |  Bin 150 -> 0 bytes\n test/create-from-png-gray-alpha-ref.png            |  Bin 142 -> 0 bytes\n test/create-from-png-gray-ref.png                  |  Bin 124 -> 0 bytes\n test/create-from-png-indexed-alpha-ref.png         |  Bin 172 -> 0 bytes\n test/create-from-png-indexed-ref.png               |  Bin 159 -> 0 bytes\n test/create-from-png-ref.png                       |  Bin 131 -> 0 bytes\n test/create-from-png-stream-ref.png                |  Bin 100 -> 0 bytes\n test/create-from-png-stream.c                      |    2 +-\n test/create-from-png-stream.ref.png                |  Bin 0 -> 100 bytes\n test/create-from-png.alpha.ref.png                 |  Bin 0 -> 150 bytes\n test/create-from-png.c                             |   16 +-\n test/create-from-png.gray-alpha.ref.png            |  Bin 0 -> 142 bytes\n test/create-from-png.gray.ref.png                  |  Bin 0 -> 124 bytes\n test/create-from-png.indexed-alpha.ref.png         |  Bin 0 -> 172 bytes\n test/create-from-png.indexed.ref.png               |  Bin 0 -> 159 bytes\n test/create-from-png.ref.png                       |  Bin 0 -> 131 bytes\n test/dash-caps-joins-ps2-argb32-ref.png            |  Bin 3870 -> 0 bytes\n test/dash-caps-joins-ps2-rgb24-ref.png             |  Bin 3870 -> 0 bytes\n test/dash-caps-joins-ps3-argb32-ref.png            |  Bin 3870 -> 0 bytes\n test/dash-caps-joins-ps3-rgb24-ref.png             |  Bin 3870 -> 0 bytes\n test/dash-caps-joins-quartz-ref.png                |  Bin 4727 -> 0 bytes\n test/dash-caps-joins-ref.png                       |  Bin 4718 -> 0 bytes\n test/dash-caps-joins.ps2.argb32.ref.png            |  Bin 0 -> 3870 bytes\n test/dash-caps-joins.ps2.rgb24.ref.png             |  Bin 0 -> 3870 bytes\n test/dash-caps-joins.ps3.argb32.ref.png            |  Bin 0 -> 3870 bytes\n test/dash-caps-joins.ps3.rgb24.ref.png             |  Bin 0 -> 3870 bytes\n test/dash-caps-joins.quartz.ref.png                |  Bin 0 -> 4727 bytes\n test/dash-caps-joins.ref.png                       |  Bin 0 -> 4718 bytes\n test/dash-curve-ps2-ref.png                        |  Bin 27293 -> 0 bytes\n test/dash-curve-ps3-ref.png                        |  Bin 27293 -> 0 bytes\n test/dash-curve-quartz-ref.png                     |  Bin 47965 -> 0 bytes\n test/dash-curve-ref.png                            |  Bin 39642 -> 0 bytes\n test/dash-curve.ps2.ref.png                        |  Bin 0 -> 27293 bytes\n test/dash-curve.ps3.ref.png                        |  Bin 0 -> 27293 bytes\n test/dash-curve.quartz.ref.png                     |  Bin 0 -> 47965 bytes\n test/dash-curve.ref.png                            |  Bin 0 -> 39642 bytes\n test/dash-no-dash-ref.png                          |  Bin 152 -> 0 bytes\n test/dash-no-dash.ref.png                          |  Bin 0 -> 152 bytes\n test/dash-offset-negative-ref.png                  |  Bin 171 -> 0 bytes\n test/dash-offset-negative.ref.png                  |  Bin 0 -> 171 bytes\n test/dash-scale-ps2-argb32-ref.png                 |  Bin 6318 -> 0 bytes\n test/dash-scale-ps2-rgb24-ref.png                  |  Bin 6316 -> 0 bytes\n test/dash-scale-ps3-argb32-ref.png                 |  Bin 6318 -> 0 bytes\n test/dash-scale-ps3-rgb24-ref.png                  |  Bin 6316 -> 0 bytes\n test/dash-scale-quartz-ref.png                     |  Bin 8079 -> 0 bytes\n test/dash-scale-ref.png                            |  Bin 8058 -> 0 bytes\n test/dash-scale.ps2.argb32.ref.png                 |  Bin 0 -> 6318 bytes\n test/dash-scale.ps2.rgb24.ref.png                  |  Bin 0 -> 6316 bytes\n test/dash-scale.ps3.argb32.ref.png                 |  Bin 0 -> 6318 bytes\n test/dash-scale.ps3.rgb24.ref.png                  |  Bin 0 -> 6316 bytes\n test/dash-scale.quartz.ref.png                     |  Bin 0 -> 8079 bytes\n test/dash-scale.ref.png                            |  Bin 0 -> 8058 bytes\n test/dash-state-ps2-ref.png                        |  Bin 10219 -> 0 bytes\n test/dash-state-ps3-ref.png                        |  Bin 10219 -> 0 bytes\n test/dash-state-quartz-ref.png                     |  Bin 8698 -> 0 bytes\n test/dash-state-ref.png                            |  Bin 9389 -> 0 bytes\n test/dash-state.ps2.ref.png                        |  Bin 0 -> 10219 bytes\n test/dash-state.ps3.ref.png                        |  Bin 0 -> 10219 bytes\n test/dash-state.quartz.ref.png                     |  Bin 0 -> 8698 bytes\n test/dash-state.ref.png                            |  Bin 0 -> 9389 bytes\n test/dash-zero-length-ps2-ref.png                  |  Bin 319 -> 0 bytes\n test/dash-zero-length-ps2-rgb24-ref.png            |  Bin 304 -> 0 bytes\n test/dash-zero-length-ps3-ref.png                  |  Bin 319 -> 0 bytes\n test/dash-zero-length-ps3-rgb24-ref.png            |  Bin 304 -> 0 bytes\n test/dash-zero-length-ref.png                      |  Bin 238 -> 0 bytes\n test/dash-zero-length-rgb24-ref.png                |  Bin 218 -> 0 bytes\n test/dash-zero-length.ps2.ref.png                  |  Bin 0 -> 319 bytes\n test/dash-zero-length.ps2.rgb24.ref.png            |  Bin 0 -> 304 bytes\n test/dash-zero-length.ps3.ref.png                  |  Bin 0 -> 319 bytes\n test/dash-zero-length.ps3.rgb24.ref.png            |  Bin 0 -> 304 bytes\n test/dash-zero-length.ref.png                      |  Bin 0 -> 238 bytes\n test/dash-zero-length.rgb24.ref.png                |  Bin 0 -> 218 bytes\n test/degenerate-arc-ps2-ref.png                    |  Bin 585 -> 0 bytes\n test/degenerate-arc-ps3-ref.png                    |  Bin 585 -> 0 bytes\n test/degenerate-arc-ref.png                        |  Bin 616 -> 0 bytes\n test/degenerate-arc.ps2.ref.png                    |  Bin 0 -> 585 bytes\n test/degenerate-arc.ps3.ref.png                    |  Bin 0 -> 585 bytes\n test/degenerate-arc.ref.png                        |  Bin 0 -> 616 bytes\n test/degenerate-dash-ref.png                       |  Bin 2005 -> 0 bytes\n test/degenerate-dash.ref.png                       |  Bin 0 -> 2005 bytes\n test/degenerate-path-ps2-argb32-ref.png            |  Bin 390 -> 0 bytes\n test/degenerate-path-ps2-rgb24-ref.png             |  Bin 358 -> 0 bytes\n test/degenerate-path-ps3-argb32-ref.png            |  Bin 390 -> 0 bytes\n test/degenerate-path-ps3-rgb24-ref.png             |  Bin 358 -> 0 bytes\n test/degenerate-path-quartz-ref.png                |  Bin 232 -> 0 bytes\n test/degenerate-path-quartz-rgb24-ref.png          |  Bin 198 -> 0 bytes\n test/degenerate-path-ref.png                       |  Bin 257 -> 0 bytes\n test/degenerate-path-rgb24-ref.png                 |  Bin 224 -> 0 bytes\n test/degenerate-path.ps2.argb32.ref.png            |  Bin 0 -> 390 bytes\n test/degenerate-path.ps2.rgb24.ref.png             |  Bin 0 -> 358 bytes\n test/degenerate-path.ps3.argb32.ref.png            |  Bin 0 -> 390 bytes\n test/degenerate-path.ps3.rgb24.ref.png             |  Bin 0 -> 358 bytes\n test/degenerate-path.quartz.ref.png                |  Bin 0 -> 232 bytes\n test/degenerate-path.quartz.rgb24.ref.png          |  Bin 0 -> 198 bytes\n test/degenerate-path.ref.png                       |  Bin 0 -> 257 bytes\n test/degenerate-path.rgb24.ref.png                 |  Bin 0 -> 224 bytes\n test/degenerate-pen-ps2-ref.png                    |  Bin 865 -> 0 bytes\n test/degenerate-pen-ps3-ref.png                    |  Bin 865 -> 0 bytes\n test/degenerate-pen-quartz-ref.png                 |  Bin 1144 -> 0 bytes\n test/degenerate-pen-ref.png                        |  Bin 1139 -> 0 bytes\n test/degenerate-pen.ps2.ref.png                    |  Bin 0 -> 865 bytes\n test/degenerate-pen.ps3.ref.png                    |  Bin 0 -> 865 bytes\n test/degenerate-pen.quartz.ref.png                 |  Bin 0 -> 1144 bytes\n test/degenerate-pen.ref.png                        |  Bin 0 -> 1139 bytes\n test/device-offset-fractional-pdf-ref.png          |  Bin 277 -> 0 bytes\n test/device-offset-fractional-ps2-ref.png          |  Bin 200 -> 0 bytes\n test/device-offset-fractional-ps3-ref.png          |  Bin 200 -> 0 bytes\n test/device-offset-fractional-ref.png              |  Bin 269 -> 0 bytes\n test/device-offset-fractional.pdf.ref.png          |  Bin 0 -> 277 bytes\n test/device-offset-fractional.ps2.ref.png          |  Bin 0 -> 200 bytes\n test/device-offset-fractional.ps3.ref.png          |  Bin 0 -> 200 bytes\n test/device-offset-fractional.ref.png              |  Bin 0 -> 269 bytes\n test/device-offset-positive-ref.png                |  Bin 139 -> 0 bytes\n test/device-offset-positive-rgb24-ref.png          |  Bin 130 -> 0 bytes\n test/device-offset-positive.ref.png                |  Bin 0 -> 139 bytes\n test/device-offset-positive.rgb24.ref.png          |  Bin 0 -> 130 bytes\n test/device-offset-ref.png                         |  Bin 137 -> 0 bytes\n test/device-offset-rgb24-ref.png                   |  Bin 130 -> 0 bytes\n test/device-offset-scale-ref.png                   |  Bin 145 -> 0 bytes\n test/device-offset-scale.ref.png                   |  Bin 0 -> 145 bytes\n test/device-offset.ref.png                         |  Bin 0 -> 137 bytes\n test/device-offset.rgb24.ref.png                   |  Bin 0 -> 130 bytes\n test/extend-pad-ref.png                            |  Bin 616 -> 0 bytes\n test/extend-pad.ref.png                            |  Bin 0 -> 616 bytes\n test/extend-reflect-ps2-ref.png                    |  Bin 146990 -> 0 bytes\n test/extend-reflect-ps3-ref.png                    |  Bin 146990 -> 0 bytes\n test/extend-reflect-ref.png                        |  Bin 153571 -> 0 bytes\n test/extend-reflect-similar-ps2-ref.png            |  Bin 146990 -> 0 bytes\n test/extend-reflect-similar-ps3-ref.png            |  Bin 146990 -> 0 bytes\n test/extend-reflect-similar-ref.png                |  Bin 153571 -> 0 bytes\n test/extend-reflect-similar.ps2.ref.png            |  Bin 0 -> 146990 bytes\n test/extend-reflect-similar.ps3.ref.png            |  Bin 0 -> 146990 bytes\n test/extend-reflect-similar.ref.png                |  Bin 0 -> 153571 bytes\n test/extend-reflect.ps2.ref.png                    |  Bin 0 -> 146990 bytes\n test/extend-reflect.ps3.ref.png                    |  Bin 0 -> 146990 bytes\n test/extend-reflect.ref.png                        |  Bin 0 -> 153571 bytes\n test/extend-repeat-ps2-ref.png                     |  Bin 119246 -> 0 bytes\n test/extend-repeat-ps3-ref.png                     |  Bin 119246 -> 0 bytes\n test/extend-repeat-ref.png                         |  Bin 108622 -> 0 bytes\n test/extend-repeat-similar-ps2-ref.png             |  Bin 119246 -> 0 bytes\n test/extend-repeat-similar-ps3-ref.png             |  Bin 119246 -> 0 bytes\n test/extend-repeat-similar-ref.png                 |  Bin 108622 -> 0 bytes\n test/extend-repeat-similar.ps2.ref.png             |  Bin 0 -> 119246 bytes\n test/extend-repeat-similar.ps3.ref.png             |  Bin 0 -> 119246 bytes\n test/extend-repeat-similar.ref.png                 |  Bin 0 -> 108622 bytes\n test/extend-repeat.ps2.ref.png                     |  Bin 0 -> 119246 bytes\n test/extend-repeat.ps3.ref.png                     |  Bin 0 -> 119246 bytes\n test/extend-repeat.ref.png                         |  Bin 0 -> 108622 bytes\n test/fallback-resolution-ppi150x150-ref.png        |  Bin 8043 -> 0 bytes\n test/fallback-resolution-ppi150x300-ref.png        |  Bin 6848 -> 0 bytes\n test/fallback-resolution-ppi150x37.5-ref.png       |  Bin 13176 -> 0 bytes\n test/fallback-resolution-ppi150x600-ref.png        |  Bin 6338 -> 0 bytes\n test/fallback-resolution-ppi150x72-ref.png         |  Bin 8370 -> 0 bytes\n test/fallback-resolution-ppi150x75-ref.png         |  Bin 10445 -> 0 bytes\n test/fallback-resolution-ppi300x150-ref.png        |  Bin 6851 -> 0 bytes\n test/fallback-resolution-ppi300x300-ref.png        |  Bin 5637 -> 0 bytes\n test/fallback-resolution-ppi300x37.5-ref.png       |  Bin 12870 -> 0 bytes\n test/fallback-resolution-ppi300x600-ref.png        |  Bin 4848 -> 0 bytes\n test/fallback-resolution-ppi300x72-ref.png         |  Bin 7053 -> 0 bytes\n test/fallback-resolution-ppi300x75-ref.png         |  Bin 9617 -> 0 bytes\n test/fallback-resolution-ppi37.5x150-ref.png       |  Bin 12728 -> 0 bytes\n test/fallback-resolution-ppi37.5x300-ref.png       |  Bin 11981 -> 0 bytes\n test/fallback-resolution-ppi37.5x37.5-ref.png      |  Bin 14098 -> 0 bytes\n test/fallback-resolution-ppi37.5x600-ref.png       |  Bin 11654 -> 0 bytes\n test/fallback-resolution-ppi37.5x72-ref.png        |  Bin 12990 -> 0 bytes\n test/fallback-resolution-ppi37.5x75-ref.png        |  Bin 13787 -> 0 bytes\n test/fallback-resolution-ppi600x150-ref.png        |  Bin 6096 -> 0 bytes\n test/fallback-resolution-ppi600x300-ref.png        |  Bin 4812 -> 0 bytes\n test/fallback-resolution-ppi600x37.5-ref.png       |  Bin 12401 -> 0 bytes\n test/fallback-resolution-ppi600x600-ref.png        |  Bin 4104 -> 0 bytes\n test/fallback-resolution-ppi600x72-ref.png         |  Bin 6398 -> 0 bytes\n test/fallback-resolution-ppi600x75-ref.png         |  Bin 8974 -> 0 bytes\n test/fallback-resolution-ppi72x150-ref.png         |  Bin 8069 -> 0 bytes\n test/fallback-resolution-ppi72x300-ref.png         |  Bin 6803 -> 0 bytes\n test/fallback-resolution-ppi72x37.5-ref.png        |  Bin 13147 -> 0 bytes\n test/fallback-resolution-ppi72x600-ref.png         |  Bin 6245 -> 0 bytes\n test/fallback-resolution-ppi72x72-ref.png          |  Bin 8409 -> 0 bytes\n test/fallback-resolution-ppi72x75-ref.png          |  Bin 10628 -> 0 bytes\n test/fallback-resolution-ppi75x150-ref.png         |  Bin 9940 -> 0 bytes\n test/fallback-resolution-ppi75x300-ref.png         |  Bin 9003 -> 0 bytes\n test/fallback-resolution-ppi75x37.5-ref.png        |  Bin 14020 -> 0 bytes\n test/fallback-resolution-ppi75x600-ref.png         |  Bin 8455 -> 0 bytes\n test/fallback-resolution-ppi75x72-ref.png          |  Bin 10202 -> 0 bytes\n test/fallback-resolution-ppi75x75-ref.png          |  Bin 12101 -> 0 bytes\n test/fallback-resolution.c                         |   11 +-\n test/fallback-resolution.ppi150x150.ref.png        |  Bin 0 -> 8043 bytes\n test/fallback-resolution.ppi150x300.ref.png        |  Bin 0 -> 6848 bytes\n test/fallback-resolution.ppi150x37.5.ref.png       |  Bin 0 -> 13176 bytes\n test/fallback-resolution.ppi150x600.ref.png        |  Bin 0 -> 6338 bytes\n test/fallback-resolution.ppi150x72.ref.png         |  Bin 0 -> 8370 bytes\n test/fallback-resolution.ppi150x75.ref.png         |  Bin 0 -> 10445 bytes\n test/fallback-resolution.ppi300x150.ref.png        |  Bin 0 -> 6851 bytes\n test/fallback-resolution.ppi300x300.ref.png        |  Bin 0 -> 5637 bytes\n test/fallback-resolution.ppi300x37.5.ref.png       |  Bin 0 -> 12870 bytes\n test/fallback-resolution.ppi300x600.ref.png        |  Bin 0 -> 4848 bytes\n test/fallback-resolution.ppi300x72.ref.png         |  Bin 0 -> 7053 bytes\n test/fallback-resolution.ppi300x75.ref.png         |  Bin 0 -> 9617 bytes\n test/fallback-resolution.ppi37.5x150.ref.png       |  Bin 0 -> 12728 bytes\n test/fallback-resolution.ppi37.5x300.ref.png       |  Bin 0 -> 11981 bytes\n test/fallback-resolution.ppi37.5x37.5.ref.png      |  Bin 0 -> 14098 bytes\n test/fallback-resolution.ppi37.5x600.ref.png       |  Bin 0 -> 11654 bytes\n test/fallback-resolution.ppi37.5x72.ref.png        |  Bin 0 -> 12990 bytes\n test/fallback-resolution.ppi37.5x75.ref.png        |  Bin 0 -> 13787 bytes\n test/fallback-resolution.ppi600x150.ref.png        |  Bin 0 -> 6096 bytes\n test/fallback-resolution.ppi600x300.ref.png        |  Bin 0 -> 4812 bytes\n test/fallback-resolution.ppi600x37.5.ref.png       |  Bin 0 -> 12401 bytes\n test/fallback-resolution.ppi600x600.ref.png        |  Bin 0 -> 4104 bytes\n test/fallback-resolution.ppi600x72.ref.png         |  Bin 0 -> 6398 bytes\n test/fallback-resolution.ppi600x75.ref.png         |  Bin 0 -> 8974 bytes\n test/fallback-resolution.ppi72x150.ref.png         |  Bin 0 -> 8069 bytes\n test/fallback-resolution.ppi72x300.ref.png         |  Bin 0 -> 6803 bytes\n test/fallback-resolution.ppi72x37.5.ref.png        |  Bin 0 -> 13147 bytes\n test/fallback-resolution.ppi72x600.ref.png         |  Bin 0 -> 6245 bytes\n test/fallback-resolution.ppi72x72.ref.png          |  Bin 0 -> 8409 bytes\n test/fallback-resolution.ppi72x75.ref.png          |  Bin 0 -> 10628 bytes\n test/fallback-resolution.ppi75x150.ref.png         |  Bin 0 -> 9940 bytes\n test/fallback-resolution.ppi75x300.ref.png         |  Bin 0 -> 9003 bytes\n test/fallback-resolution.ppi75x37.5.ref.png        |  Bin 0 -> 14020 bytes\n test/fallback-resolution.ppi75x600.ref.png         |  Bin 0 -> 8455 bytes\n test/fallback-resolution.ppi75x72.ref.png          |  Bin 0 -> 10202 bytes\n test/fallback-resolution.ppi75x75.ref.png          |  Bin 0 -> 12101 bytes\n test/fill-alpha-pattern-pdf-argb32-ref.png         |  Bin 3887 -> 0 bytes\n test/fill-alpha-pattern-pdf-rgb24-ref.png          |  Bin 3840 -> 0 bytes\n test/fill-alpha-pattern-ps3-ref.png                |  Bin 4380 -> 0 bytes\n test/fill-alpha-pattern-ref.png                    |  Bin 3653 -> 0 bytes\n test/fill-alpha-pattern.pdf.argb32.ref.png         |  Bin 0 -> 3887 bytes\n test/fill-alpha-pattern.pdf.rgb24.ref.png          |  Bin 0 -> 3840 bytes\n test/fill-alpha-pattern.ps3.ref.png                |  Bin 0 -> 4380 bytes\n test/fill-alpha-pattern.ref.png                    |  Bin 0 -> 3653 bytes\n test/fill-alpha-ref.png                            |  Bin 2989 -> 0 bytes\n test/fill-alpha.ref.png                            |  Bin 0 -> 2989 bytes\n test/fill-and-stroke-alpha-add-quartz-ref.png      |  Bin 603 -> 0 bytes\n test/fill-and-stroke-alpha-add-ref.png             |  Bin 591 -> 0 bytes\n test/fill-and-stroke-alpha-add.quartz.ref.png      |  Bin 0 -> 603 bytes\n test/fill-and-stroke-alpha-add.ref.png             |  Bin 0 -> 591 bytes\n test/fill-and-stroke-alpha-quartz-ref.png          |  Bin 550 -> 0 bytes\n test/fill-and-stroke-alpha-ref.png                 |  Bin 519 -> 0 bytes\n test/fill-and-stroke-alpha.quartz.ref.png          |  Bin 0 -> 550 bytes\n test/fill-and-stroke-alpha.ref.png                 |  Bin 0 -> 519 bytes\n test/fill-and-stroke-ps2-argb32-ref.png            |  Bin 310 -> 0 bytes\n test/fill-and-stroke-ps2-rgb24-ref.png             |  Bin 319 -> 0 bytes\n test/fill-and-stroke-ps3-argb32-ref.png            |  Bin 310 -> 0 bytes\n test/fill-and-stroke-ps3-rgb24-ref.png             |  Bin 319 -> 0 bytes\n test/fill-and-stroke-quartz-ref.png                |  Bin 286 -> 0 bytes\n test/fill-and-stroke-quartz-rgb24-ref.png          |  Bin 264 -> 0 bytes\n test/fill-and-stroke-ref.png                       |  Bin 279 -> 0 bytes\n test/fill-and-stroke-rgb24-ref.png                 |  Bin 257 -> 0 bytes\n test/fill-and-stroke.ps2.argb32.ref.png            |  Bin 0 -> 310 bytes\n test/fill-and-stroke.ps2.rgb24.ref.png             |  Bin 0 -> 319 bytes\n test/fill-and-stroke.ps3.argb32.ref.png            |  Bin 0 -> 310 bytes\n test/fill-and-stroke.ps3.rgb24.ref.png             |  Bin 0 -> 319 bytes\n test/fill-and-stroke.quartz.ref.png                |  Bin 0 -> 286 bytes\n test/fill-and-stroke.quartz.rgb24.ref.png          |  Bin 0 -> 264 bytes\n test/fill-and-stroke.ref.png                       |  Bin 0 -> 279 bytes\n test/fill-and-stroke.rgb24.ref.png                 |  Bin 0 -> 257 bytes\n test/fill-degenerate-sort-order-quartz-ref.png     |  Bin 2470 -> 0 bytes\n ...fill-degenerate-sort-order-quartz-rgb24-ref.png |  Bin 2098 -> 0 bytes\n test/fill-degenerate-sort-order-ref.png            |  Bin 2397 -> 0 bytes\n test/fill-degenerate-sort-order-rgb24-ref.png      |  Bin 2060 -> 0 bytes\n test/fill-degenerate-sort-order.quartz.ref.png     |  Bin 0 -> 2470 bytes\n ...fill-degenerate-sort-order.quartz.rgb24.ref.png |  Bin 0 -> 2098 bytes\n test/fill-degenerate-sort-order.ref.png            |  Bin 0 -> 2397 bytes\n test/fill-degenerate-sort-order.rgb24.ref.png      |  Bin 0 -> 2060 bytes\n test/fill-missed-stop-ps2-argb32-ref.png           |  Bin 564 -> 0 bytes\n test/fill-missed-stop-ps2-rgb24-ref.png            |  Bin 531 -> 0 bytes\n test/fill-missed-stop-ps3-argb32-ref.png           |  Bin 564 -> 0 bytes\n test/fill-missed-stop-ps3-rgb24-ref.png            |  Bin 531 -> 0 bytes\n test/fill-missed-stop-ref.png                      |  Bin 466 -> 0 bytes\n test/fill-missed-stop-rgb24-ref.png                |  Bin 394 -> 0 bytes\n test/fill-missed-stop.ps2.argb32.ref.png           |  Bin 0 -> 564 bytes\n test/fill-missed-stop.ps2.rgb24.ref.png            |  Bin 0 -> 531 bytes\n test/fill-missed-stop.ps3.argb32.ref.png           |  Bin 0 -> 564 bytes\n test/fill-missed-stop.ps3.rgb24.ref.png            |  Bin 0 -> 531 bytes\n test/fill-missed-stop.ref.png                      |  Bin 0 -> 466 bytes\n test/fill-missed-stop.rgb24.ref.png                |  Bin 0 -> 394 bytes\n test/fill-rule-ps2-argb32-ref.png                  |  Bin 2253 -> 0 bytes\n test/fill-rule-ps2-rgb24-ref.png                   |  Bin 2031 -> 0 bytes\n test/fill-rule-ps3-argb32-ref.png                  |  Bin 2253 -> 0 bytes\n test/fill-rule-ps3-rgb24-ref.png                   |  Bin 2031 -> 0 bytes\n test/fill-rule-quartz-ref.png                      |  Bin 2079 -> 0 bytes\n test/fill-rule-quartz-rgb24-ref.png                |  Bin 1790 -> 0 bytes\n test/fill-rule-ref.png                             |  Bin 1979 -> 0 bytes\n test/fill-rule-rgb24-ref.png                       |  Bin 1722 -> 0 bytes\n test/fill-rule.ps2.argb32.ref.png                  |  Bin 0 -> 2253 bytes\n test/fill-rule.ps2.rgb24.ref.png                   |  Bin 0 -> 2031 bytes\n test/fill-rule.ps3.argb32.ref.png                  |  Bin 0 -> 2253 bytes\n test/fill-rule.ps3.rgb24.ref.png                   |  Bin 0 -> 2031 bytes\n test/fill-rule.quartz.ref.png                      |  Bin 0 -> 2079 bytes\n test/fill-rule.quartz.rgb24.ref.png                |  Bin 0 -> 1790 bytes\n test/fill-rule.ref.png                             |  Bin 0 -> 1979 bytes\n test/fill-rule.rgb24.ref.png                       |  Bin 0 -> 1722 bytes\n test/filter-bilinear-extents-pdf-ref.png           |  Bin 798 -> 0 bytes\n test/filter-bilinear-extents-ps2-ref.png           |  Bin 556 -> 0 bytes\n test/filter-bilinear-extents-ps3-ref.png           |  Bin 556 -> 0 bytes\n test/filter-bilinear-extents-ref.png               |  Bin 1340 -> 0 bytes\n test/filter-bilinear-extents.pdf.ref.png           |  Bin 0 -> 798 bytes\n test/filter-bilinear-extents.ps2.ref.png           |  Bin 0 -> 556 bytes\n test/filter-bilinear-extents.ps3.ref.png           |  Bin 0 -> 556 bytes\n test/filter-bilinear-extents.ref.png               |  Bin 0 -> 1340 bytes\n test/filter-nearest-offset-pdf-ref.png             |  Bin 4537 -> 0 bytes\n test/filter-nearest-offset-ps2-ref.png             |  Bin 255 -> 0 bytes\n test/filter-nearest-offset-ps3-ref.png             |  Bin 255 -> 0 bytes\n test/filter-nearest-offset-ref.png                 |  Bin 248 -> 0 bytes\n test/filter-nearest-offset-svg11-ref.png           |  Bin 4739 -> 0 bytes\n test/filter-nearest-offset-svg12-ref.png           |  Bin 4739 -> 0 bytes\n test/filter-nearest-offset.pdf.ref.png             |  Bin 0 -> 4537 bytes\n test/filter-nearest-offset.ps2.ref.png             |  Bin 0 -> 255 bytes\n test/filter-nearest-offset.ps3.ref.png             |  Bin 0 -> 255 bytes\n test/filter-nearest-offset.ref.png                 |  Bin 0 -> 248 bytes\n test/filter-nearest-offset.svg11.ref.png           |  Bin 0 -> 4739 bytes\n test/filter-nearest-offset.svg12.ref.png           |  Bin 0 -> 4739 bytes\n test/filter-nearest-transformed-pdf-ref.png        |  Bin 548 -> 0 bytes\n test/filter-nearest-transformed-ref.png            |  Bin 570 -> 0 bytes\n test/filter-nearest-transformed-svg11-ref.png      |  Bin 559 -> 0 bytes\n test/filter-nearest-transformed-svg12-ref.png      |  Bin 559 -> 0 bytes\n test/filter-nearest-transformed.pdf.ref.png        |  Bin 0 -> 548 bytes\n test/filter-nearest-transformed.ref.png            |  Bin 0 -> 570 bytes\n test/filter-nearest-transformed.svg11.ref.png      |  Bin 0 -> 559 bytes\n test/filter-nearest-transformed.svg12.ref.png      |  Bin 0 -> 559 bytes\n test/finer-grained-fallbacks-ps2-ref.png           |  Bin 1356 -> 0 bytes\n test/finer-grained-fallbacks-ps2-rgb24-ref.png     |  Bin 1096 -> 0 bytes\n test/finer-grained-fallbacks-ps3-ref.png           |  Bin 1356 -> 0 bytes\n test/finer-grained-fallbacks-ps3-rgb24-ref.png     |  Bin 1096 -> 0 bytes\n test/finer-grained-fallbacks-ref.png               |  Bin 1111 -> 0 bytes\n test/finer-grained-fallbacks-rgb24-ref.png         |  Bin 1114 -> 0 bytes\n test/finer-grained-fallbacks.ps2.ref.png           |  Bin 0 -> 1356 bytes\n test/finer-grained-fallbacks.ps2.rgb24.ref.png     |  Bin 0 -> 1096 bytes\n test/finer-grained-fallbacks.ps3.ref.png           |  Bin 0 -> 1356 bytes\n test/finer-grained-fallbacks.ps3.rgb24.ref.png     |  Bin 0 -> 1096 bytes\n test/finer-grained-fallbacks.ref.png               |  Bin 0 -> 1111 bytes\n test/finer-grained-fallbacks.rgb24.ref.png         |  Bin 0 -> 1114 bytes\n test/font-matrix-translation-ps2-argb32-ref.png    |  Bin 748 -> 0 bytes\n test/font-matrix-translation-ps2-rgb24-ref.png     |  Bin 748 -> 0 bytes\n test/font-matrix-translation-ps3-argb32-ref.png    |  Bin 748 -> 0 bytes\n test/font-matrix-translation-ps3-rgb24-ref.png     |  Bin 748 -> 0 bytes\n test/font-matrix-translation-quartz-ref.png        |  Bin 1090 -> 0 bytes\n test/font-matrix-translation-ref.png               |  Bin 1006 -> 0 bytes\n test/font-matrix-translation-svg11-ref.png         |  Bin 970 -> 0 bytes\n test/font-matrix-translation-svg12-ref.png         |  Bin 970 -> 0 bytes\n test/font-matrix-translation.ps2.argb32.ref.png    |  Bin 0 -> 748 bytes\n test/font-matrix-translation.ps2.rgb24.ref.png     |  Bin 0 -> 748 bytes\n test/font-matrix-translation.ps3.argb32.ref.png    |  Bin 0 -> 748 bytes\n test/font-matrix-translation.ps3.rgb24.ref.png     |  Bin 0 -> 748 bytes\n test/font-matrix-translation.quartz.ref.png        |  Bin 0 -> 1090 bytes\n test/font-matrix-translation.ref.png               |  Bin 0 -> 1006 bytes\n test/font-matrix-translation.svg11.ref.png         |  Bin 0 -> 970 bytes\n test/font-matrix-translation.svg12.ref.png         |  Bin 0 -> 970 bytes\n test/ft-show-glyphs-positioning-pdf-ref.png        |  Bin 3133 -> 0 bytes\n test/ft-show-glyphs-positioning-ps2-ref.png        |  Bin 2269 -> 0 bytes\n test/ft-show-glyphs-positioning-ps3-ref.png        |  Bin 2269 -> 0 bytes\n test/ft-show-glyphs-positioning-ref.png            |  Bin 3444 -> 0 bytes\n test/ft-show-glyphs-positioning-svg11-ref.png      |  Bin 6590 -> 0 bytes\n test/ft-show-glyphs-positioning-svg12-ref.png      |  Bin 6590 -> 0 bytes\n test/ft-show-glyphs-positioning.pdf.ref.png        |  Bin 0 -> 3133 bytes\n test/ft-show-glyphs-positioning.ps2.ref.png        |  Bin 0 -> 2269 bytes\n test/ft-show-glyphs-positioning.ps3.ref.png        |  Bin 0 -> 2269 bytes\n test/ft-show-glyphs-positioning.ref.png            |  Bin 0 -> 3444 bytes\n test/ft-show-glyphs-positioning.svg11.ref.png      |  Bin 0 -> 6590 bytes\n test/ft-show-glyphs-positioning.svg12.ref.png      |  Bin 0 -> 6590 bytes\n test/ft-show-glyphs-table-ps2-ref.png              |  Bin 5687 -> 0 bytes\n test/ft-show-glyphs-table-ps3-ref.png              |  Bin 5687 -> 0 bytes\n test/ft-show-glyphs-table-ref.png                  |  Bin 11439 -> 0 bytes\n test/ft-show-glyphs-table.ps2.ref.png              |  Bin 0 -> 5687 bytes\n test/ft-show-glyphs-table.ps3.ref.png              |  Bin 0 -> 5687 bytes\n test/ft-show-glyphs-table.ref.png                  |  Bin 0 -> 11439 bytes\n test/ft-text-antialias-none-ps2-argb32-ref.png     |  Bin 335 -> 0 bytes\n test/ft-text-antialias-none-ps3-argb32-ref.png     |  Bin 335 -> 0 bytes\n test/ft-text-antialias-none-ref.png                |  Bin 336 -> 0 bytes\n test/ft-text-antialias-none.ps2.argb32.ref.png     |  Bin 0 -> 335 bytes\n test/ft-text-antialias-none.ps3.argb32.ref.png     |  Bin 0 -> 335 bytes\n test/ft-text-antialias-none.ref.png                |  Bin 0 -> 336 bytes\n test/ft-text-vertical-layout-type1-pdf-ref.png     |  Bin 3968 -> 0 bytes\n test/ft-text-vertical-layout-type1-ps2-ref.png     |  Bin 1846 -> 0 bytes\n test/ft-text-vertical-layout-type1-ps3-ref.png     |  Bin 1846 -> 0 bytes\n test/ft-text-vertical-layout-type1-ref.png         |  Bin 3980 -> 0 bytes\n test/ft-text-vertical-layout-type1-svg11-ref.png   |  Bin 3973 -> 0 bytes\n test/ft-text-vertical-layout-type1-svg12-ref.png   |  Bin 3973 -> 0 bytes\n test/ft-text-vertical-layout-type1.pdf.ref.png     |  Bin 0 -> 3968 bytes\n test/ft-text-vertical-layout-type1.ps2.ref.png     |  Bin 0 -> 1846 bytes\n test/ft-text-vertical-layout-type1.ps3.ref.png     |  Bin 0 -> 1846 bytes\n test/ft-text-vertical-layout-type1.ref.png         |  Bin 0 -> 3980 bytes\n test/ft-text-vertical-layout-type1.svg11.ref.png   |  Bin 0 -> 3973 bytes\n test/ft-text-vertical-layout-type1.svg12.ref.png   |  Bin 0 -> 3973 bytes\n test/ft-text-vertical-layout-type3-pdf-ref.png     |  Bin 3634 -> 0 bytes\n test/ft-text-vertical-layout-type3-ps2-ref.png     |  Bin 1804 -> 0 bytes\n test/ft-text-vertical-layout-type3-ps3-ref.png     |  Bin 1804 -> 0 bytes\n test/ft-text-vertical-layout-type3-ref.png         |  Bin 3934 -> 0 bytes\n test/ft-text-vertical-layout-type3-svg11-ref.png   |  Bin 3957 -> 0 bytes\n test/ft-text-vertical-layout-type3-svg12-ref.png   |  Bin 3957 -> 0 bytes\n test/ft-text-vertical-layout-type3.pdf.ref.png     |  Bin 0 -> 3634 bytes\n test/ft-text-vertical-layout-type3.ps2.ref.png     |  Bin 0 -> 1804 bytes\n test/ft-text-vertical-layout-type3.ps3.ref.png     |  Bin 0 -> 1804 bytes\n test/ft-text-vertical-layout-type3.ref.png         |  Bin 0 -> 3934 bytes\n test/ft-text-vertical-layout-type3.svg11.ref.png   |  Bin 0 -> 3957 bytes\n test/ft-text-vertical-layout-type3.svg12.ref.png   |  Bin 0 -> 3957 bytes\n test/get-group-target-ref.png                      |  Bin 134 -> 0 bytes\n test/get-group-target.ref.png                      |  Bin 0 -> 134 bytes\n test/glitz-surface-source-ref.png                  |  Bin 268 -> 0 bytes\n test/glitz-surface-source.ref.png                  |  Bin 0 -> 268 bytes\n test/glyph-cache-pressure-ps2-ref.png              |  Bin 1454 -> 0 bytes\n test/glyph-cache-pressure-ps3-ref.png              |  Bin 1454 -> 0 bytes\n test/glyph-cache-pressure-quartz-ref.png           |  Bin 3654 -> 0 bytes\n test/glyph-cache-pressure-ref.png                  |  Bin 3223 -> 0 bytes\n test/glyph-cache-pressure.ps2.ref.png              |  Bin 0 -> 1454 bytes\n test/glyph-cache-pressure.ps3.ref.png              |  Bin 0 -> 1454 bytes\n test/glyph-cache-pressure.quartz.ref.png           |  Bin 0 -> 3654 bytes\n test/glyph-cache-pressure.ref.png                  |  Bin 0 -> 3223 bytes\n test/gradient-alpha-pdf-argb32-ref.png             |  Bin 126 -> 0 bytes\n test/gradient-alpha-pdf-rgb24-ref.png              |  Bin 121 -> 0 bytes\n test/gradient-alpha-ps2-argb32-ref.png             |  Bin 134 -> 0 bytes\n test/gradient-alpha-ps2-rgb24-ref.png              |  Bin 130 -> 0 bytes\n test/gradient-alpha-ps3-argb32-ref.png             |  Bin 134 -> 0 bytes\n test/gradient-alpha-ps3-rgb24-ref.png              |  Bin 130 -> 0 bytes\n test/gradient-alpha-ref.png                        |  Bin 147 -> 0 bytes\n test/gradient-alpha-rgb24-ref.png                  |  Bin 142 -> 0 bytes\n test/gradient-alpha.pdf.argb32.ref.png             |  Bin 0 -> 126 bytes\n test/gradient-alpha.pdf.rgb24.ref.png              |  Bin 0 -> 121 bytes\n test/gradient-alpha.ps2.argb32.ref.png             |  Bin 0 -> 134 bytes\n test/gradient-alpha.ps2.rgb24.ref.png              |  Bin 0 -> 130 bytes\n test/gradient-alpha.ps3.argb32.ref.png             |  Bin 0 -> 134 bytes\n test/gradient-alpha.ps3.rgb24.ref.png              |  Bin 0 -> 130 bytes\n test/gradient-alpha.ref.png                        |  Bin 0 -> 147 bytes\n test/gradient-alpha.rgb24.ref.png                  |  Bin 0 -> 142 bytes\n test/gradient-constant-alpha-pdf-argb32-ref.png    |  Bin 116 -> 0 bytes\n test/gradient-constant-alpha-pdf-rgb24-ref.png     |  Bin 115 -> 0 bytes\n test/gradient-constant-alpha-ps3-ref.png           |  Bin 124 -> 0 bytes\n test/gradient-constant-alpha-ps3-rgb24-ref.png     |  Bin 124 -> 0 bytes\n test/gradient-constant-alpha-ref.png               |  Bin 117 -> 0 bytes\n test/gradient-constant-alpha-rgb24-ref.png         |  Bin 116 -> 0 bytes\n test/gradient-constant-alpha.pdf.argb32.ref.png    |  Bin 0 -> 116 bytes\n test/gradient-constant-alpha.pdf.rgb24.ref.png     |  Bin 0 -> 115 bytes\n test/gradient-constant-alpha.ps3.ref.png           |  Bin 0 -> 124 bytes\n test/gradient-constant-alpha.ps3.rgb24.ref.png     |  Bin 0 -> 124 bytes\n test/gradient-constant-alpha.ref.png               |  Bin 0 -> 117 bytes\n test/gradient-constant-alpha.rgb24.ref.png         |  Bin 0 -> 116 bytes\n test/gradient-zero-stops-ref.png                   |  Bin 105 -> 0 bytes\n test/gradient-zero-stops-rgb24-ref.png             |  Bin 105 -> 0 bytes\n test/gradient-zero-stops.ref.png                   |  Bin 0 -> 105 bytes\n test/gradient-zero-stops.rgb24.ref.png             |  Bin 0 -> 105 bytes\n test/group-paint-ref.png                           |  Bin 118 -> 0 bytes\n test/group-paint.ref.png                           |  Bin 0 -> 118 bytes\n test/huge-pattern-pdf-ref.png                      |  Bin 2716 -> 0 bytes\n test/huge-pattern-pdf-rgb24-ref.png                |  Bin 2817 -> 0 bytes\n test/huge-pattern-ps3-ref.png                      |  Bin 1786 -> 0 bytes\n test/huge-pattern-ref.png                          |  Bin 1619 -> 0 bytes\n test/huge-pattern.pdf.ref.png                      |  Bin 0 -> 2716 bytes\n test/huge-pattern.pdf.rgb24.ref.png                |  Bin 0 -> 2817 bytes\n test/huge-pattern.ps3.ref.png                      |  Bin 0 -> 1786 bytes\n test/huge-pattern.ref.png                          |  Bin 0 -> 1619 bytes\n test/image-surface-source-ps2-ref.png              |  Bin 376 -> 0 bytes\n test/image-surface-source-ps3-ref.png              |  Bin 376 -> 0 bytes\n test/image-surface-source-ref.png                  |  Bin 332 -> 0 bytes\n test/image-surface-source.ps2.ref.png              |  Bin 0 -> 376 bytes\n test/image-surface-source.ps3.ref.png              |  Bin 0 -> 376 bytes\n test/image-surface-source.ref.png                  |  Bin 0 -> 332 bytes\n test/infinite-join-ps2-ref.png                     |  Bin 218 -> 0 bytes\n test/infinite-join-ps3-ref.png                     |  Bin 218 -> 0 bytes\n test/infinite-join-ref.png                         |  Bin 194 -> 0 bytes\n test/infinite-join.ps2.ref.png                     |  Bin 0 -> 218 bytes\n test/infinite-join.ps3.ref.png                     |  Bin 0 -> 218 bytes\n test/infinite-join.ref.png                         |  Bin 0 -> 194 bytes\n test/large-clip-ref.png                            |  Bin 350 -> 0 bytes\n test/large-clip.ref.png                            |  Bin 0 -> 350 bytes\n test/large-font-ref.png                            |  Bin 6936 -> 0 bytes\n test/large-font.ref.png                            |  Bin 0 -> 6936 bytes\n test/large-source-ref.png                          |  Bin 137 -> 0 bytes\n test/large-source.ref.png                          |  Bin 0 -> 137 bytes\n test/leaky-dash-ps2-argb32-ref.png                 |  Bin 286 -> 0 bytes\n test/leaky-dash-ps2-rgb24-ref.png                  |  Bin 284 -> 0 bytes\n test/leaky-dash-ps3-argb32-ref.png                 |  Bin 286 -> 0 bytes\n test/leaky-dash-ps3-rgb24-ref.png                  |  Bin 284 -> 0 bytes\n test/leaky-dash-quartz-ref.png                     |  Bin 241 -> 0 bytes\n test/leaky-dash-ref.png                            |  Bin 243 -> 0 bytes\n test/leaky-dash.ps2.argb32.ref.png                 |  Bin 0 -> 286 bytes\n test/leaky-dash.ps2.rgb24.ref.png                  |  Bin 0 -> 284 bytes\n test/leaky-dash.ps3.argb32.ref.png                 |  Bin 0 -> 286 bytes\n test/leaky-dash.ps3.rgb24.ref.png                  |  Bin 0 -> 284 bytes\n test/leaky-dash.quartz.ref.png                     |  Bin 0 -> 241 bytes\n test/leaky-dash.ref.png                            |  Bin 0 -> 243 bytes\n test/leaky-dashed-rectangle-ps2-ref.png            |  Bin 444 -> 0 bytes\n test/leaky-dashed-rectangle-ps3-ref.png            |  Bin 444 -> 0 bytes\n test/leaky-dashed-rectangle-ref.png                |  Bin 366 -> 0 bytes\n test/leaky-dashed-rectangle.ps2.ref.png            |  Bin 0 -> 444 bytes\n test/leaky-dashed-rectangle.ps3.ref.png            |  Bin 0 -> 444 bytes\n test/leaky-dashed-rectangle.ref.png                |  Bin 0 -> 366 bytes\n test/leaky-dashed-stroke-ps2-ref.png               |  Bin 5511 -> 0 bytes\n test/leaky-dashed-stroke-ps3-ref.png               |  Bin 5511 -> 0 bytes\n test/leaky-dashed-stroke-ref.png                   |  Bin 9214 -> 0 bytes\n test/leaky-dashed-stroke.ps2.ref.png               |  Bin 0 -> 5511 bytes\n test/leaky-dashed-stroke.ps3.ref.png               |  Bin 0 -> 5511 bytes\n test/leaky-dashed-stroke.ref.png                   |  Bin 0 -> 9214 bytes\n test/leaky-polygon-ps2-ref.png                     |  Bin 354 -> 0 bytes\n test/leaky-polygon-ps3-ref.png                     |  Bin 354 -> 0 bytes\n test/leaky-polygon-ref.png                         |  Bin 368 -> 0 bytes\n test/leaky-polygon.ps2.ref.png                     |  Bin 0 -> 354 bytes\n test/leaky-polygon.ps3.ref.png                     |  Bin 0 -> 354 bytes\n test/leaky-polygon.ref.png                         |  Bin 0 -> 368 bytes\n test/line-width-ref.png                            |  Bin 201 -> 0 bytes\n test/line-width-scale-ps2-ref.png                  |  Bin 3911 -> 0 bytes\n test/line-width-scale-ps3-ref.png                  |  Bin 3911 -> 0 bytes\n test/line-width-scale-quartz-ref.png               |  Bin 6434 -> 0 bytes\n test/line-width-scale-ref.png                      |  Bin 6445 -> 0 bytes\n test/line-width-scale.ps2.ref.png                  |  Bin 0 -> 3911 bytes\n test/line-width-scale.ps3.ref.png                  |  Bin 0 -> 3911 bytes\n test/line-width-scale.quartz.ref.png               |  Bin 0 -> 6434 bytes\n test/line-width-scale.ref.png                      |  Bin 0 -> 6445 bytes\n test/line-width.ref.png                            |  Bin 0 -> 201 bytes\n test/linear-gradient-pdf-ref.png                   |  Bin 935 -> 0 bytes\n test/linear-gradient-ps3-ref.png                   |  Bin 779 -> 0 bytes\n test/linear-gradient-quartz-ref.png                |  Bin 1164 -> 0 bytes\n test/linear-gradient-ref.png                       |  Bin 1021 -> 0 bytes\n test/linear-gradient-reflect-pdf-argb32-ref.png    |  Bin 248 -> 0 bytes\n test/linear-gradient-reflect-pdf-rgb24-ref.png     |  Bin 248 -> 0 bytes\n test/linear-gradient-reflect-ps3-ref.png           |  Bin 314 -> 0 bytes\n test/linear-gradient-reflect-quartz-ref.png        |  Bin 878 -> 0 bytes\n test/linear-gradient-reflect-ref.png               |  Bin 216 -> 0 bytes\n test/linear-gradient-reflect.pdf.argb32.ref.png    |  Bin 0 -> 248 bytes\n test/linear-gradient-reflect.pdf.rgb24.ref.png     |  Bin 0 -> 248 bytes\n test/linear-gradient-reflect.ps3.ref.png           |  Bin 0 -> 314 bytes\n test/linear-gradient-reflect.quartz.ref.png        |  Bin 0 -> 878 bytes\n test/linear-gradient-reflect.ref.png               |  Bin 0 -> 216 bytes\n test/linear-gradient-svg11-ref.png                 |  Bin 1000 -> 0 bytes\n test/linear-gradient-svg12-ref.png                 |  Bin 1000 -> 0 bytes\n test/linear-gradient.pdf.ref.png                   |  Bin 0 -> 935 bytes\n test/linear-gradient.ps3.ref.png                   |  Bin 0 -> 779 bytes\n test/linear-gradient.quartz.ref.png                |  Bin 0 -> 1164 bytes\n test/linear-gradient.ref.png                       |  Bin 0 -> 1021 bytes\n test/linear-gradient.svg11.ref.png                 |  Bin 0 -> 1000 bytes\n test/linear-gradient.svg12.ref.png                 |  Bin 0 -> 1000 bytes\n test/long-dashed-lines-ps2-ref.png                 |  Bin 1516 -> 0 bytes\n test/long-dashed-lines-ps3-ref.png                 |  Bin 1516 -> 0 bytes\n test/long-dashed-lines-quartz-ref.png              |  Bin 2313 -> 0 bytes\n test/long-dashed-lines-ref.png                     |  Bin 2116 -> 0 bytes\n test/long-dashed-lines.ps2.ref.png                 |  Bin 0 -> 1516 bytes\n test/long-dashed-lines.ps3.ref.png                 |  Bin 0 -> 1516 bytes\n test/long-dashed-lines.quartz.ref.png              |  Bin 0 -> 2313 bytes\n test/long-dashed-lines.ref.png                     |  Bin 0 -> 2116 bytes\n test/long-lines-ref.png                            |  Bin 247 -> 0 bytes\n test/long-lines.ref.png                            |  Bin 0 -> 247 bytes\n test/mask-alpha-quartz-argb32-ref.png              |  Bin 641 -> 0 bytes\n test/mask-alpha-ref.png                            |  Bin 640 -> 0 bytes\n test/mask-alpha-rgb24-ref.png                      |  Bin 599 -> 0 bytes\n test/mask-alpha-svg11-argb32-ref.png               |  Bin 615 -> 0 bytes\n test/mask-alpha-svg12-argb32-ref.png               |  Bin 615 -> 0 bytes\n test/mask-alpha.quartz.argb32.ref.png              |  Bin 0 -> 641 bytes\n test/mask-alpha.ref.png                            |  Bin 0 -> 640 bytes\n test/mask-alpha.rgb24.ref.png                      |  Bin 0 -> 599 bytes\n test/mask-alpha.svg11.argb32.ref.png               |  Bin 0 -> 615 bytes\n test/mask-alpha.svg12.argb32.ref.png               |  Bin 0 -> 615 bytes\n test/mask-ctm-ref.png                              |  Bin 129 -> 0 bytes\n test/mask-ctm-rgb24-ref.png                        |  Bin 124 -> 0 bytes\n test/mask-ctm-svg11-argb32-ref.png                 |  Bin 108 -> 0 bytes\n test/mask-ctm-svg12-argb32-ref.png                 |  Bin 108 -> 0 bytes\n test/mask-ctm.ref.png                              |  Bin 0 -> 129 bytes\n test/mask-ctm.rgb24.ref.png                        |  Bin 0 -> 124 bytes\n test/mask-ctm.svg11.argb32.ref.png                 |  Bin 0 -> 108 bytes\n test/mask-ctm.svg12.argb32.ref.png                 |  Bin 0 -> 108 bytes\n test/mask-pdf-argb32-ref.png                       |  Bin 8881 -> 0 bytes\n test/mask-pdf-rgb24-ref.png                        |  Bin 8267 -> 0 bytes\n test/mask-quartz-ref.png                           |  Bin 10682 -> 0 bytes\n test/mask-quartz-rgb24-ref.png                     |  Bin 8418 -> 0 bytes\n test/mask-ref.png                                  |  Bin 8476 -> 0 bytes\n test/mask-rgb24-ref.png                            |  Bin 7041 -> 0 bytes\n test/mask-surface-ctm-ref.png                      |  Bin 129 -> 0 bytes\n test/mask-surface-ctm-rgb24-ref.png                |  Bin 124 -> 0 bytes\n test/mask-surface-ctm-svg11-argb32-ref.png         |  Bin 108 -> 0 bytes\n test/mask-surface-ctm-svg12-argb32-ref.png         |  Bin 108 -> 0 bytes\n test/mask-surface-ctm.ref.png                      |  Bin 0 -> 129 bytes\n test/mask-surface-ctm.rgb24.ref.png                |  Bin 0 -> 124 bytes\n test/mask-surface-ctm.svg11.argb32.ref.png         |  Bin 0 -> 108 bytes\n test/mask-surface-ctm.svg12.argb32.ref.png         |  Bin 0 -> 108 bytes\n test/mask-svg11-argb32-ref.png                     |  Bin 8527 -> 0 bytes\n test/mask-svg11-rgb24-ref.png                      |  Bin 7935 -> 0 bytes\n test/mask-svg12-argb32-ref.png                     |  Bin 8527 -> 0 bytes\n test/mask-svg12-rgb24-ref.png                      |  Bin 7935 -> 0 bytes\n test/mask-transformed-image-ref.png                |  Bin 4516 -> 0 bytes\n test/mask-transformed-image.ref.png                |  Bin 0 -> 4516 bytes\n test/mask-transformed-similar-pdf-ref.png          |  Bin 4213 -> 0 bytes\n test/mask-transformed-similar-ref.png              |  Bin 4516 -> 0 bytes\n test/mask-transformed-similar-svg11-ref.png        |  Bin 4051 -> 0 bytes\n test/mask-transformed-similar-svg12-ref.png        |  Bin 4051 -> 0 bytes\n test/mask-transformed-similar.pdf.ref.png          |  Bin 0 -> 4213 bytes\n test/mask-transformed-similar.ref.png              |  Bin 0 -> 4516 bytes\n test/mask-transformed-similar.svg11.ref.png        |  Bin 0 -> 4051 bytes\n test/mask-transformed-similar.svg12.ref.png        |  Bin 0 -> 4051 bytes\n test/mask.pdf.argb32.ref.png                       |  Bin 0 -> 8881 bytes\n test/mask.pdf.rgb24.ref.png                        |  Bin 0 -> 8267 bytes\n test/mask.quartz.ref.png                           |  Bin 0 -> 10682 bytes\n test/mask.quartz.rgb24.ref.png                     |  Bin 0 -> 8418 bytes\n test/mask.ref.png                                  |  Bin 0 -> 8476 bytes\n test/mask.rgb24.ref.png                            |  Bin 0 -> 7041 bytes\n test/mask.svg11.argb32.ref.png                     |  Bin 0 -> 8527 bytes\n test/mask.svg11.rgb24.ref.png                      |  Bin 0 -> 7935 bytes\n test/mask.svg12.argb32.ref.png                     |  Bin 0 -> 8527 bytes\n test/mask.svg12.rgb24.ref.png                      |  Bin 0 -> 7935 bytes\n test/meta-surface-pattern-pdf-ref.png              |  Bin 4111 -> 0 bytes\n test/meta-surface-pattern-pdf-rgb24-ref.png        |  Bin 4009 -> 0 bytes\n test/meta-surface-pattern-ps2-argb32-ref.png       |  Bin 3257 -> 0 bytes\n test/meta-surface-pattern-ps2-rgb24-ref.png        |  Bin 3873 -> 0 bytes\n test/meta-surface-pattern-ps3-argb32-ref.png       |  Bin 3257 -> 0 bytes\n test/meta-surface-pattern-ps3-rgb24-ref.png        |  Bin 3873 -> 0 bytes\n test/meta-surface-pattern-quartz-ref.png           |  Bin 4572 -> 0 bytes\n test/meta-surface-pattern-quartz-rgb24-ref.png     |  Bin 4063 -> 0 bytes\n test/meta-surface-pattern-ref.png                  |  Bin 3072 -> 0 bytes\n test/meta-surface-pattern-rgb24-ref.png            |  Bin 3162 -> 0 bytes\n test/meta-surface-pattern-svg11-argb32-ref.png     |  Bin 3924 -> 0 bytes\n test/meta-surface-pattern-svg11-rgb24-ref.png      |  Bin 4593 -> 0 bytes\n test/meta-surface-pattern-svg12-argb32-ref.png     |  Bin 3924 -> 0 bytes\n test/meta-surface-pattern-svg12-rgb24-ref.png      |  Bin 4593 -> 0 bytes\n test/meta-surface-pattern.pdf.ref.png              |  Bin 0 -> 4111 bytes\n test/meta-surface-pattern.pdf.rgb24.ref.png        |  Bin 0 -> 4009 bytes\n test/meta-surface-pattern.ps2.argb32.ref.png       |  Bin 0 -> 3257 bytes\n test/meta-surface-pattern.ps2.rgb24.ref.png        |  Bin 0 -> 3873 bytes\n test/meta-surface-pattern.ps3.argb32.ref.png       |  Bin 0 -> 3257 bytes\n test/meta-surface-pattern.ps3.rgb24.ref.png        |  Bin 0 -> 3873 bytes\n test/meta-surface-pattern.quartz.ref.png           |  Bin 0 -> 4572 bytes\n test/meta-surface-pattern.quartz.rgb24.ref.png     |  Bin 0 -> 4063 bytes\n test/meta-surface-pattern.ref.png                  |  Bin 0 -> 3072 bytes\n test/meta-surface-pattern.rgb24.ref.png            |  Bin 0 -> 3162 bytes\n test/meta-surface-pattern.svg11.argb32.ref.png     |  Bin 0 -> 3924 bytes\n test/meta-surface-pattern.svg11.rgb24.ref.png      |  Bin 0 -> 4593 bytes\n test/meta-surface-pattern.svg12.argb32.ref.png     |  Bin 0 -> 3924 bytes\n test/meta-surface-pattern.svg12.rgb24.ref.png      |  Bin 0 -> 4593 bytes\n test/miter-precision-ps2-ref.png                   |  Bin 865 -> 0 bytes\n test/miter-precision-ps3-ref.png                   |  Bin 865 -> 0 bytes\n test/miter-precision-ref.png                       |  Bin 931 -> 0 bytes\n test/miter-precision.ps2.ref.png                   |  Bin 0 -> 865 bytes\n test/miter-precision.ps3.ref.png                   |  Bin 0 -> 865 bytes\n test/miter-precision.ref.png                       |  Bin 0 -> 931 bytes\n test/move-to-show-surface-ref.png                  |  Bin 100 -> 0 bytes\n test/move-to-show-surface.ref.png                  |  Bin 0 -> 100 bytes\n test/multi-page.c                                  |    4 +-\n test/new-sub-path-ps2-argb32-ref.png               |  Bin 556 -> 0 bytes\n test/new-sub-path-ps2-rgb24-ref.png                |  Bin 423 -> 0 bytes\n test/new-sub-path-ps3-argb32-ref.png               |  Bin 556 -> 0 bytes\n test/new-sub-path-ps3-rgb24-ref.png                |  Bin 423 -> 0 bytes\n test/new-sub-path-quartz-ref.png                   |  Bin 383 -> 0 bytes\n test/new-sub-path-quartz-rgb24-ref.png             |  Bin 357 -> 0 bytes\n test/new-sub-path-ref.png                          |  Bin 386 -> 0 bytes\n test/new-sub-path-rgb24-ref.png                    |  Bin 355 -> 0 bytes\n test/new-sub-path.ps2.argb32.ref.png               |  Bin 0 -> 556 bytes\n test/new-sub-path.ps2.rgb24.ref.png                |  Bin 0 -> 423 bytes\n test/new-sub-path.ps3.argb32.ref.png               |  Bin 0 -> 556 bytes\n test/new-sub-path.ps3.rgb24.ref.png                |  Bin 0 -> 423 bytes\n test/new-sub-path.quartz.ref.png                   |  Bin 0 -> 383 bytes\n test/new-sub-path.quartz.rgb24.ref.png             |  Bin 0 -> 357 bytes\n test/new-sub-path.ref.png                          |  Bin 0 -> 386 bytes\n test/new-sub-path.rgb24.ref.png                    |  Bin 0 -> 355 bytes\n test/nil-surface-ref.png                           |  Bin 107 -> 0 bytes\n test/nil-surface-rgb24-ref.png                     |  Bin 106 -> 0 bytes\n test/nil-surface.ref.png                           |  Bin 0 -> 107 bytes\n test/nil-surface.rgb24.ref.png                     |  Bin 0 -> 106 bytes\n test/operator-alpha-ref.png                        |  Bin 280 -> 0 bytes\n test/operator-alpha-rgb24-ref.png                  |  Bin 229 -> 0 bytes\n test/operator-alpha.ref.png                        |  Bin 0 -> 280 bytes\n test/operator-alpha.rgb24.ref.png                  |  Bin 0 -> 229 bytes\n test/operator-clear-pdf-argb32-ref.png             |  Bin 1614 -> 0 bytes\n test/operator-clear-pdf-rgb24-ref.png              |  Bin 1402 -> 0 bytes\n test/operator-clear-quartz-ref.png                 |  Bin 1459 -> 0 bytes\n test/operator-clear-quartz-rgb24-ref.png           |  Bin 1293 -> 0 bytes\n test/operator-clear-ref.png                        |  Bin 1084 -> 0 bytes\n test/operator-clear-rgb24-ref.png                  |  Bin 965 -> 0 bytes\n test/operator-clear.pdf.argb32.ref.png             |  Bin 0 -> 1614 bytes\n test/operator-clear.pdf.rgb24.ref.png              |  Bin 0 -> 1402 bytes\n test/operator-clear.quartz.ref.png                 |  Bin 0 -> 1459 bytes\n test/operator-clear.quartz.rgb24.ref.png           |  Bin 0 -> 1293 bytes\n test/operator-clear.ref.png                        |  Bin 0 -> 1084 bytes\n test/operator-clear.rgb24.ref.png                  |  Bin 0 -> 965 bytes\n test/operator-ref.png                              |  Bin 238 -> 0 bytes\n test/operator-rgb24-ref.png                        |  Bin 217 -> 0 bytes\n test/operator-source-pdf-argb32-ref.png            |  Bin 5149 -> 0 bytes\n test/operator-source-pdf-rgb24-ref.png             |  Bin 4354 -> 0 bytes\n test/operator-source-quartz-ref.png                |  Bin 4637 -> 0 bytes\n test/operator-source-quartz-rgb24-ref.png          |  Bin 3533 -> 0 bytes\n test/operator-source-ref.png                       |  Bin 4420 -> 0 bytes\n test/operator-source-rgb24-ref.png                 |  Bin 3201 -> 0 bytes\n test/operator-source.pdf.argb32.ref.png            |  Bin 0 -> 5149 bytes\n test/operator-source.pdf.rgb24.ref.png             |  Bin 0 -> 4354 bytes\n test/operator-source.quartz.ref.png                |  Bin 0 -> 4637 bytes\n test/operator-source.quartz.rgb24.ref.png          |  Bin 0 -> 3533 bytes\n test/operator-source.ref.png                       |  Bin 0 -> 4420 bytes\n test/operator-source.rgb24.ref.png                 |  Bin 0 -> 3201 bytes\n test/operator.ref.png                              |  Bin 0 -> 238 bytes\n test/operator.rgb24.ref.png                        |  Bin 0 -> 217 bytes\n test/over-above-source-ps2-argb32-ref.png          |  Bin 636 -> 0 bytes\n test/over-above-source-ps3-argb32-ref.png          |  Bin 636 -> 0 bytes\n test/over-above-source-quartz-ref.png              |  Bin 530 -> 0 bytes\n test/over-above-source-quartz-rgb24-ref.png        |  Bin 456 -> 0 bytes\n test/over-above-source-ref.png                     |  Bin 538 -> 0 bytes\n test/over-above-source-rgb24-ref.png               |  Bin 461 -> 0 bytes\n test/over-above-source.ps2.argb32.ref.png          |  Bin 0 -> 636 bytes\n test/over-above-source.ps3.argb32.ref.png          |  Bin 0 -> 636 bytes\n test/over-above-source.quartz.ref.png              |  Bin 0 -> 530 bytes\n test/over-above-source.quartz.rgb24.ref.png        |  Bin 0 -> 456 bytes\n test/over-above-source.ref.png                     |  Bin 0 -> 538 bytes\n test/over-above-source.rgb24.ref.png               |  Bin 0 -> 461 bytes\n test/over-around-source-ps2-argb32-ref.png         |  Bin 632 -> 0 bytes\n test/over-around-source-ps2-rgb24-ref.png          |  Bin 538 -> 0 bytes\n test/over-around-source-ps3-argb32-ref.png         |  Bin 632 -> 0 bytes\n test/over-around-source-ps3-rgb24-ref.png          |  Bin 538 -> 0 bytes\n test/over-around-source-quartz-ref.png             |  Bin 612 -> 0 bytes\n test/over-around-source-quartz-rgb24-ref.png       |  Bin 491 -> 0 bytes\n test/over-around-source-ref.png                    |  Bin 614 -> 0 bytes\n test/over-around-source-rgb24-ref.png              |  Bin 503 -> 0 bytes\n test/over-around-source.ps2.argb32.ref.png         |  Bin 0 -> 632 bytes\n test/over-around-source.ps2.rgb24.ref.png          |  Bin 0 -> 538 bytes\n test/over-around-source.ps3.argb32.ref.png         |  Bin 0 -> 632 bytes\n test/over-around-source.ps3.rgb24.ref.png          |  Bin 0 -> 538 bytes\n test/over-around-source.quartz.ref.png             |  Bin 0 -> 612 bytes\n test/over-around-source.quartz.rgb24.ref.png       |  Bin 0 -> 491 bytes\n test/over-around-source.ref.png                    |  Bin 0 -> 614 bytes\n test/over-around-source.rgb24.ref.png              |  Bin 0 -> 503 bytes\n test/over-below-source-ps2-argb32-ref.png          |  Bin 503 -> 0 bytes\n test/over-below-source-ps3-argb32-ref.png          |  Bin 503 -> 0 bytes\n test/over-below-source-ref.png                     |  Bin 434 -> 0 bytes\n test/over-below-source-rgb24-ref.png               |  Bin 392 -> 0 bytes\n test/over-below-source.ps2.argb32.ref.png          |  Bin 0 -> 503 bytes\n test/over-below-source.ps3.argb32.ref.png          |  Bin 0 -> 503 bytes\n test/over-below-source.ref.png                     |  Bin 0 -> 434 bytes\n test/over-below-source.rgb24.ref.png               |  Bin 0 -> 392 bytes\n test/over-between-source-ps2-argb32-ref.png        |  Bin 678 -> 0 bytes\n test/over-between-source-ps3-argb32-ref.png        |  Bin 678 -> 0 bytes\n test/over-between-source-quartz-ref.png            |  Bin 570 -> 0 bytes\n test/over-between-source-quartz-rgb24-ref.png      |  Bin 467 -> 0 bytes\n test/over-between-source-ref.png                   |  Bin 575 -> 0 bytes\n test/over-between-source-rgb24-ref.png             |  Bin 473 -> 0 bytes\n test/over-between-source.ps2.argb32.ref.png        |  Bin 0 -> 678 bytes\n test/over-between-source.ps3.argb32.ref.png        |  Bin 0 -> 678 bytes\n test/over-between-source.quartz.ref.png            |  Bin 0 -> 570 bytes\n test/over-between-source.quartz.rgb24.ref.png      |  Bin 0 -> 467 bytes\n test/over-between-source.ref.png                   |  Bin 0 -> 575 bytes\n test/over-between-source.rgb24.ref.png             |  Bin 0 -> 473 bytes\n test/paint-ref.png                                 |  Bin 116 -> 0 bytes\n test/paint-repeat-ref.png                          |  Bin 145 -> 0 bytes\n test/paint-repeat.ref.png                          |  Bin 0 -> 145 bytes\n test/paint-source-alpha-pdf-argb32-ref.png         |  Bin 471 -> 0 bytes\n test/paint-source-alpha-pdf-ref.png                |  Bin 473 -> 0 bytes\n test/paint-source-alpha-ref.png                    |  Bin 256 -> 0 bytes\n test/paint-source-alpha-svg11-ref.png              |  Bin 756 -> 0 bytes\n test/paint-source-alpha-svg12-ref.png              |  Bin 505 -> 0 bytes\n test/paint-source-alpha.pdf.argb32.ref.png         |  Bin 0 -> 471 bytes\n test/paint-source-alpha.pdf.ref.png                |  Bin 0 -> 473 bytes\n test/paint-source-alpha.ref.png                    |  Bin 0 -> 256 bytes\n test/paint-source-alpha.svg11.ref.png              |  Bin 0 -> 756 bytes\n test/paint-source-alpha.svg12.ref.png              |  Bin 0 -> 505 bytes\n test/paint-with-alpha-pdf-ref.png                  |  Bin 466 -> 0 bytes\n test/paint-with-alpha-ref.png                      |  Bin 256 -> 0 bytes\n test/paint-with-alpha-svg11-ref.png                |  Bin 516 -> 0 bytes\n test/paint-with-alpha-svg12-ref.png                |  Bin 516 -> 0 bytes\n test/paint-with-alpha.pdf.ref.png                  |  Bin 0 -> 466 bytes\n test/paint-with-alpha.ref.png                      |  Bin 0 -> 256 bytes\n test/paint-with-alpha.svg11.ref.png                |  Bin 0 -> 516 bytes\n test/paint-with-alpha.svg12.ref.png                |  Bin 0 -> 516 bytes\n test/paint.ref.png                                 |  Bin 0 -> 116 bytes\n test/pass-through-ref.png                          |  Bin 221 -> 0 bytes\n test/pass-through-rgb24-ref.png                    |  Bin 179 -> 0 bytes\n test/pass-through.ref.png                          |  Bin 0 -> 221 bytes\n test/pass-through.rgb24.ref.png                    |  Bin 0 -> 179 bytes\n test/pattern-getters-ref.png                       |  Bin 107 -> 0 bytes\n test/pattern-getters.ref.png                       |  Bin 0 -> 107 bytes\n test/pdf-features.c                                |    2 +-\n test/pdf-surface-source-ref.png                    |  Bin 268 -> 0 bytes\n test/pdf-surface-source.c                          |    2 +-\n test/pdf-surface-source.ref.png                    |  Bin 0 -> 268 bytes\n test/pixman-rotate-ref.png                         |  Bin 260 -> 0 bytes\n test/pixman-rotate-rgb24-ref.png                   |  Bin 244 -> 0 bytes\n test/pixman-rotate.ref.png                         |  Bin 0 -> 260 bytes\n test/pixman-rotate.rgb24.ref.png                   |  Bin 0 -> 244 bytes\n test/png.c                                         |    2 +-\n test/ps-features.c                                 |    2 +-\n test/ps-surface-source-ref.png                     |  Bin 268 -> 0 bytes\n test/ps-surface-source.c                           |    2 +-\n test/ps-surface-source.ref.png                     |  Bin 0 -> 268 bytes\n test/push-group-pdf-ref.png                        |  Bin 2807 -> 0 bytes\n test/push-group-pdf-rgb24-ref.png                  |  Bin 2714 -> 0 bytes\n test/push-group-ref.png                            |  Bin 3126 -> 0 bytes\n test/push-group-rgb24-ref.png                      |  Bin 2961 -> 0 bytes\n test/push-group-svg11-argb32-ref.png               |  Bin 2935 -> 0 bytes\n test/push-group-svg12-argb32-ref.png               |  Bin 2935 -> 0 bytes\n test/push-group.pdf.ref.png                        |  Bin 0 -> 2807 bytes\n test/push-group.pdf.rgb24.ref.png                  |  Bin 0 -> 2714 bytes\n test/push-group.ref.png                            |  Bin 0 -> 3126 bytes\n test/push-group.rgb24.ref.png                      |  Bin 0 -> 2961 bytes\n test/push-group.svg11.argb32.ref.png               |  Bin 0 -> 2935 bytes\n test/push-group.svg12.argb32.ref.png               |  Bin 0 -> 2935 bytes\n test/radial-gradient-pdf-ref.png                   |  Bin 79490 -> 0 bytes\n test/radial-gradient-quartz-ref.png                |  Bin 92334 -> 0 bytes\n test/radial-gradient-ref.png                       |  Bin 91159 -> 0 bytes\n test/radial-gradient-svg11-ref.png                 |  Bin 91039 -> 0 bytes\n test/radial-gradient-svg12-ref.png                 |  Bin 91039 -> 0 bytes\n test/radial-gradient.pdf.ref.png                   |  Bin 0 -> 79490 bytes\n test/radial-gradient.quartz.ref.png                |  Bin 0 -> 92334 bytes\n test/radial-gradient.ref.png                       |  Bin 0 -> 91159 bytes\n test/radial-gradient.svg11.ref.png                 |  Bin 0 -> 91039 bytes\n test/radial-gradient.svg12.ref.png                 |  Bin 0 -> 91039 bytes\n test/random-intersections-ps2-ref.png              |  Bin 89253 -> 0 bytes\n test/random-intersections-ps3-ref.png              |  Bin 89253 -> 0 bytes\n test/random-intersections-quartz-ref.png           |  Bin 197778 -> 0 bytes\n test/random-intersections-ref.png                  |  Bin 148722 -> 0 bytes\n test/random-intersections.ps2.ref.png              |  Bin 0 -> 89253 bytes\n test/random-intersections.ps3.ref.png              |  Bin 0 -> 89253 bytes\n test/random-intersections.quartz.ref.png           |  Bin 0 -> 197778 bytes\n test/random-intersections.ref.png                  |  Bin 0 -> 148722 bytes\n test/rectangle-rounding-error-ref.png              |  Bin 231 -> 0 bytes\n test/rectangle-rounding-error.ref.png              |  Bin 0 -> 231 bytes\n test/rectilinear-fill-ref.png                      |  Bin 162 -> 0 bytes\n test/rectilinear-fill.ref.png                      |  Bin 0 -> 162 bytes\n test/rectilinear-miter-limit-ps2-ref.png           |  Bin 221 -> 0 bytes\n test/rectilinear-miter-limit-ps3-ref.png           |  Bin 221 -> 0 bytes\n test/rectilinear-miter-limit-ref.png               |  Bin 177 -> 0 bytes\n test/rectilinear-miter-limit.ps2.ref.png           |  Bin 0 -> 221 bytes\n test/rectilinear-miter-limit.ps3.ref.png           |  Bin 0 -> 221 bytes\n test/rectilinear-miter-limit.ref.png               |  Bin 0 -> 177 bytes\n test/rectilinear-stroke-ref.png                    |  Bin 213 -> 0 bytes\n test/rectilinear-stroke.ref.png                    |  Bin 0 -> 213 bytes\n test/reflected-stroke-ps2-ref.png                  |  Bin 3898 -> 0 bytes\n test/reflected-stroke-ps3-ref.png                  |  Bin 3898 -> 0 bytes\n test/reflected-stroke-quartz-ref.png               |  Bin 5293 -> 0 bytes\n test/reflected-stroke-ref.png                      |  Bin 5704 -> 0 bytes\n test/reflected-stroke.ps2.ref.png                  |  Bin 0 -> 3898 bytes\n test/reflected-stroke.ps3.ref.png                  |  Bin 0 -> 3898 bytes\n test/reflected-stroke.quartz.ref.png               |  Bin 0 -> 5293 bytes\n test/reflected-stroke.ref.png                      |  Bin 0 -> 5704 bytes\n test/rel-path-ps2-rgb24-ref.png                    |  Bin 243 -> 0 bytes\n test/rel-path-ps3-rgb24-ref.png                    |  Bin 243 -> 0 bytes\n test/rel-path-quartz-ref.png                       |  Bin 212 -> 0 bytes\n test/rel-path-quartz-rgb24-ref.png                 |  Bin 228 -> 0 bytes\n test/rel-path-ref.png                              |  Bin 212 -> 0 bytes\n test/rel-path-rgb24-ref.png                        |  Bin 228 -> 0 bytes\n test/rel-path.ps2.rgb24.ref.png                    |  Bin 0 -> 243 bytes\n test/rel-path.ps3.rgb24.ref.png                    |  Bin 0 -> 243 bytes\n test/rel-path.quartz.ref.png                       |  Bin 0 -> 212 bytes\n test/rel-path.quartz.rgb24.ref.png                 |  Bin 0 -> 228 bytes\n test/rel-path.ref.png                              |  Bin 0 -> 212 bytes\n test/rel-path.rgb24.ref.png                        |  Bin 0 -> 228 bytes\n test/rgb24-ignore-alpha-ref.png                    |  Bin 116 -> 0 bytes\n test/rgb24-ignore-alpha.ref.png                    |  Bin 0 -> 116 bytes\n test/rotate-image-surface-paint-pdf-argb32-ref.png |  Bin 209 -> 0 bytes\n test/rotate-image-surface-paint-pdf-rgb24-ref.png  |  Bin 207 -> 0 bytes\n test/rotate-image-surface-paint-ps2-ref.png        |  Bin 212 -> 0 bytes\n test/rotate-image-surface-paint-ps3-ref.png        |  Bin 212 -> 0 bytes\n test/rotate-image-surface-paint-quartz-ref.png     |  Bin 257 -> 0 bytes\n test/rotate-image-surface-paint-ref.png            |  Bin 232 -> 0 bytes\n test/rotate-image-surface-paint-svg11-ref.png      |  Bin 248 -> 0 bytes\n test/rotate-image-surface-paint-svg12-ref.png      |  Bin 248 -> 0 bytes\n test/rotate-image-surface-paint.pdf.argb32.ref.png |  Bin 0 -> 209 bytes\n test/rotate-image-surface-paint.pdf.rgb24.ref.png  |  Bin 0 -> 207 bytes\n test/rotate-image-surface-paint.ps2.ref.png        |  Bin 0 -> 212 bytes\n test/rotate-image-surface-paint.ps3.ref.png        |  Bin 0 -> 212 bytes\n test/rotate-image-surface-paint.quartz.ref.png     |  Bin 0 -> 257 bytes\n test/rotate-image-surface-paint.ref.png            |  Bin 0 -> 232 bytes\n test/rotate-image-surface-paint.svg11.ref.png      |  Bin 0 -> 248 bytes\n test/rotate-image-surface-paint.svg12.ref.png      |  Bin 0 -> 248 bytes\n test/scale-down-source-surface-paint-ref.png       |  Bin 133 -> 0 bytes\n test/scale-down-source-surface-paint.ref.png       |  Bin 0 -> 133 bytes\n test/scale-source-surface-paint-pdf-argb32-ref.png |  Bin 182 -> 0 bytes\n test/scale-source-surface-paint-pdf-rgb24-ref.png  |  Bin 198 -> 0 bytes\n test/scale-source-surface-paint-ref.png            |  Bin 147 -> 0 bytes\n test/scale-source-surface-paint-rgb24-ref.png      |  Bin 136 -> 0 bytes\n ...scale-source-surface-paint-svg11-argb32-ref.png |  Bin 229 -> 0 bytes\n .../scale-source-surface-paint-svg11-rgb24-ref.png |  Bin 243 -> 0 bytes\n ...scale-source-surface-paint-svg12-argb32-ref.png |  Bin 229 -> 0 bytes\n .../scale-source-surface-paint-svg12-rgb24-ref.png |  Bin 243 -> 0 bytes\n test/scale-source-surface-paint.pdf.argb32.ref.png |  Bin 0 -> 182 bytes\n test/scale-source-surface-paint.pdf.rgb24.ref.png  |  Bin 0 -> 198 bytes\n test/scale-source-surface-paint.ref.png            |  Bin 0 -> 147 bytes\n test/scale-source-surface-paint.rgb24.ref.png      |  Bin 0 -> 136 bytes\n ...scale-source-surface-paint.svg11.argb32.ref.png |  Bin 0 -> 229 bytes\n .../scale-source-surface-paint.svg11.rgb24.ref.png |  Bin 0 -> 243 bytes\n ...scale-source-surface-paint.svg12.argb32.ref.png |  Bin 0 -> 229 bytes\n .../scale-source-surface-paint.svg12.rgb24.ref.png |  Bin 0 -> 243 bytes\n test/select-font-face-ps2-ref.png                  |  Bin 959 -> 0 bytes\n test/select-font-face-ps3-ref.png                  |  Bin 959 -> 0 bytes\n test/select-font-face-quartz-ref.png               |  Bin 2970 -> 0 bytes\n test/select-font-face-ref.png                      |  Bin 2473 -> 0 bytes\n test/select-font-face.ps2.ref.png                  |  Bin 0 -> 959 bytes\n test/select-font-face.ps3.ref.png                  |  Bin 0 -> 959 bytes\n test/select-font-face.quartz.ref.png               |  Bin 0 -> 2970 bytes\n test/select-font-face.ref.png                      |  Bin 0 -> 2473 bytes\n test/self-copy-overlap-ref.png                     |  Bin 1140 -> 0 bytes\n test/self-copy-overlap-rgb24-ref.png               |  Bin 608 -> 0 bytes\n test/self-copy-overlap.ref.png                     |  Bin 0 -> 1140 bytes\n test/self-copy-overlap.rgb24.ref.png               |  Bin 0 -> 608 bytes\n test/self-copy-ps2-ref.png                         |  Bin 335 -> 0 bytes\n test/self-copy-ps3-ref.png                         |  Bin 335 -> 0 bytes\n test/self-copy-ref.png                             |  Bin 291 -> 0 bytes\n test/self-copy.ps2.ref.png                         |  Bin 0 -> 335 bytes\n test/self-copy.ps3.ref.png                         |  Bin 0 -> 335 bytes\n test/self-copy.ref.png                             |  Bin 0 -> 291 bytes\n test/self-intersecting-ref.png                     |  Bin 242 -> 0 bytes\n test/self-intersecting-rgb24-ref.png               |  Bin 304 -> 0 bytes\n test/self-intersecting.ref.png                     |  Bin 0 -> 242 bytes\n test/self-intersecting.rgb24.ref.png               |  Bin 0 -> 304 bytes\n test/set-source-ref.png                            |  Bin 120 -> 0 bytes\n test/set-source-rgb24-ref.png                      |  Bin 120 -> 0 bytes\n test/set-source-svg11-argb32-ref.png               |  Bin 104 -> 0 bytes\n test/set-source-svg12-argb32-ref.png               |  Bin 104 -> 0 bytes\n test/set-source.ref.png                            |  Bin 0 -> 120 bytes\n test/set-source.rgb24.ref.png                      |  Bin 0 -> 120 bytes\n test/set-source.svg11.argb32.ref.png               |  Bin 0 -> 104 bytes\n test/set-source.svg12.argb32.ref.png               |  Bin 0 -> 104 bytes\n test/show-glyphs-many-ref.png                      |  Bin 118 -> 0 bytes\n test/show-glyphs-many.ref.png                      |  Bin 0 -> 118 bytes\n test/show-text-current-point-ps2-ref.png           |  Bin 1356 -> 0 bytes\n test/show-text-current-point-ps3-ref.png           |  Bin 1356 -> 0 bytes\n test/show-text-current-point-quartz-ref.png        |  Bin 3093 -> 0 bytes\n test/show-text-current-point-ref.png               |  Bin 2411 -> 0 bytes\n test/show-text-current-point.ps2.ref.png           |  Bin 0 -> 1356 bytes\n test/show-text-current-point.ps3.ref.png           |  Bin 0 -> 1356 bytes\n test/show-text-current-point.quartz.ref.png        |  Bin 0 -> 3093 bytes\n test/show-text-current-point.ref.png               |  Bin 0 -> 2411 bytes\n test/skew-extreme-ps2-ref.png                      |  Bin 1048 -> 0 bytes\n test/skew-extreme-ps3-ref.png                      |  Bin 1048 -> 0 bytes\n test/skew-extreme-ref.png                          |  Bin 1012 -> 0 bytes\n test/skew-extreme.ps2.ref.png                      |  Bin 0 -> 1048 bytes\n test/skew-extreme.ps3.ref.png                      |  Bin 0 -> 1048 bytes\n test/skew-extreme.ref.png                          |  Bin 0 -> 1012 bytes\n test/smask-fill-pdf-ref.png                        |  Bin 1075 -> 0 bytes\n test/smask-fill-ref.png                            |  Bin 1223 -> 0 bytes\n test/smask-fill-svg11-ref.png                      |  Bin 1166 -> 0 bytes\n test/smask-fill-svg12-ref.png                      |  Bin 1166 -> 0 bytes\n test/smask-fill.pdf.ref.png                        |  Bin 0 -> 1075 bytes\n test/smask-fill.ref.png                            |  Bin 0 -> 1223 bytes\n test/smask-fill.svg11.ref.png                      |  Bin 0 -> 1166 bytes\n test/smask-fill.svg12.ref.png                      |  Bin 0 -> 1166 bytes\n test/smask-image-mask-pdf-ref.png                  |  Bin 421 -> 0 bytes\n test/smask-image-mask-ref.png                      |  Bin 643 -> 0 bytes\n test/smask-image-mask.pdf.ref.png                  |  Bin 0 -> 421 bytes\n test/smask-image-mask.ref.png                      |  Bin 0 -> 643 bytes\n test/smask-mask-pdf-ref.png                        |  Bin 3731 -> 0 bytes\n test/smask-mask-ref.png                            |  Bin 2523 -> 0 bytes\n test/smask-mask-svg11-ref.png                      |  Bin 2529 -> 0 bytes\n test/smask-mask-svg12-ref.png                      |  Bin 2529 -> 0 bytes\n test/smask-mask.pdf.ref.png                        |  Bin 0 -> 3731 bytes\n test/smask-mask.ref.png                            |  Bin 0 -> 2523 bytes\n test/smask-mask.svg11.ref.png                      |  Bin 0 -> 2529 bytes\n test/smask-mask.svg12.ref.png                      |  Bin 0 -> 2529 bytes\n test/smask-paint-pdf-ref.png                       |  Bin 3800 -> 0 bytes\n test/smask-paint-ref.png                           |  Bin 2639 -> 0 bytes\n test/smask-paint-svg11-ref.png                     |  Bin 2612 -> 0 bytes\n test/smask-paint-svg12-ref.png                     |  Bin 2612 -> 0 bytes\n test/smask-paint.pdf.ref.png                       |  Bin 0 -> 3800 bytes\n test/smask-paint.ref.png                           |  Bin 0 -> 2639 bytes\n test/smask-paint.svg11.ref.png                     |  Bin 0 -> 2612 bytes\n test/smask-paint.svg12.ref.png                     |  Bin 0 -> 2612 bytes\n test/smask-pdf-ref.png                             |  Bin 3800 -> 0 bytes\n test/smask-ps2-ref.png                             |  Bin 3669 -> 0 bytes\n test/smask-ps3-ref.png                             |  Bin 3669 -> 0 bytes\n test/smask-ref.png                                 |  Bin 3587 -> 0 bytes\n test/smask-stroke-pdf-ref.png                      |  Bin 449 -> 0 bytes\n test/smask-stroke-ref.png                          |  Bin 1845 -> 0 bytes\n test/smask-stroke.pdf.ref.png                      |  Bin 0 -> 449 bytes\n test/smask-stroke.ref.png                          |  Bin 0 -> 1845 bytes\n test/smask-svg11-ref.png                           |  Bin 3634 -> 0 bytes\n test/smask-svg12-ref.png                           |  Bin 3634 -> 0 bytes\n test/smask-text-pdf-ref.png                        |  Bin 1806 -> 0 bytes\n test/smask-text-ps2-ref.png                        |  Bin 2023 -> 0 bytes\n test/smask-text-ps3-ref.png                        |  Bin 2023 -> 0 bytes\n test/smask-text-ref.png                            |  Bin 1777 -> 0 bytes\n test/smask-text-svg11-ref.png                      |  Bin 1886 -> 0 bytes\n test/smask-text-svg12-ref.png                      |  Bin 1886 -> 0 bytes\n test/smask-text.pdf.ref.png                        |  Bin 0 -> 1806 bytes\n test/smask-text.ps2.ref.png                        |  Bin 0 -> 2023 bytes\n test/smask-text.ps3.ref.png                        |  Bin 0 -> 2023 bytes\n test/smask-text.ref.png                            |  Bin 0 -> 1777 bytes\n test/smask-text.svg11.ref.png                      |  Bin 0 -> 1886 bytes\n test/smask-text.svg12.ref.png                      |  Bin 0 -> 1886 bytes\n test/smask.pdf.ref.png                             |  Bin 0 -> 3800 bytes\n test/smask.ps2.ref.png                             |  Bin 0 -> 3669 bytes\n test/smask.ps3.ref.png                             |  Bin 0 -> 3669 bytes\n test/smask.ref.png                                 |  Bin 0 -> 3587 bytes\n test/smask.svg11.ref.png                           |  Bin 0 -> 3634 bytes\n test/smask.svg12.ref.png                           |  Bin 0 -> 3634 bytes\n test/solid-pattern-cache-stress-ref.png            |  Bin 107 -> 0 bytes\n test/solid-pattern-cache-stress.ref.png            |  Bin 0 -> 107 bytes\n test/source-clip-ref.png                           |  Bin 133 -> 0 bytes\n test/source-clip-scale-pdf-ref.png                 |  Bin 113 -> 0 bytes\n test/source-clip-scale-ps2-argb32-ref.png          |  Bin 183 -> 0 bytes\n test/source-clip-scale-ps2-rgb24-ref.png           |  Bin 183 -> 0 bytes\n test/source-clip-scale-ps3-argb32-ref.png          |  Bin 183 -> 0 bytes\n test/source-clip-scale-ps3-rgb24-ref.png           |  Bin 183 -> 0 bytes\n test/source-clip-scale-quartz-ref.png              |  Bin 148 -> 0 bytes\n test/source-clip-scale-ref.png                     |  Bin 161 -> 0 bytes\n test/source-clip-scale-svg11-ref.png               |  Bin 119 -> 0 bytes\n test/source-clip-scale-svg12-ref.png               |  Bin 119 -> 0 bytes\n test/source-clip-scale.pdf.ref.png                 |  Bin 0 -> 113 bytes\n test/source-clip-scale.ps2.argb32.ref.png          |  Bin 0 -> 183 bytes\n test/source-clip-scale.ps2.rgb24.ref.png           |  Bin 0 -> 183 bytes\n test/source-clip-scale.ps3.argb32.ref.png          |  Bin 0 -> 183 bytes\n test/source-clip-scale.ps3.rgb24.ref.png           |  Bin 0 -> 183 bytes\n test/source-clip-scale.quartz.ref.png              |  Bin 0 -> 148 bytes\n test/source-clip-scale.ref.png                     |  Bin 0 -> 161 bytes\n test/source-clip-scale.svg11.ref.png               |  Bin 0 -> 119 bytes\n test/source-clip-scale.svg12.ref.png               |  Bin 0 -> 119 bytes\n test/source-clip.ref.png                           |  Bin 0 -> 133 bytes\n test/source-surface-scale-paint-ref.png            |  Bin 139 -> 0 bytes\n test/source-surface-scale-paint-rgb24-ref.png      |  Bin 133 -> 0 bytes\n test/source-surface-scale-paint.ref.png            |  Bin 0 -> 139 bytes\n test/source-surface-scale-paint.rgb24.ref.png      |  Bin 0 -> 133 bytes\n test/spline-decomposition-pdf-ref.png              |  Bin 20404 -> 0 bytes\n test/spline-decomposition-ps2-ref.png              |  Bin 8957 -> 0 bytes\n test/spline-decomposition-ps3-ref.png              |  Bin 8957 -> 0 bytes\n test/spline-decomposition-ref.png                  |  Bin 20402 -> 0 bytes\n test/spline-decomposition-svg11-ref.png            |  Bin 20404 -> 0 bytes\n test/spline-decomposition-svg12-ref.png            |  Bin 20404 -> 0 bytes\n test/spline-decomposition.pdf.ref.png              |  Bin 0 -> 20404 bytes\n test/spline-decomposition.ps2.ref.png              |  Bin 0 -> 8957 bytes\n test/spline-decomposition.ps3.ref.png              |  Bin 0 -> 8957 bytes\n test/spline-decomposition.ref.png                  |  Bin 0 -> 20402 bytes\n test/spline-decomposition.svg11.ref.png            |  Bin 0 -> 20404 bytes\n test/spline-decomposition.svg12.ref.png            |  Bin 0 -> 20404 bytes\n test/stroke-ctm-caps-ps2-ref.png                   |  Bin 1079 -> 0 bytes\n test/stroke-ctm-caps-ps3-ref.png                   |  Bin 1079 -> 0 bytes\n test/stroke-ctm-caps-quartz-ref.png                |  Bin 1109 -> 0 bytes\n test/stroke-ctm-caps-ref.png                       |  Bin 1057 -> 0 bytes\n test/stroke-ctm-caps.ps2.ref.png                   |  Bin 0 -> 1079 bytes\n test/stroke-ctm-caps.ps3.ref.png                   |  Bin 0 -> 1079 bytes\n test/stroke-ctm-caps.quartz.ref.png                |  Bin 0 -> 1109 bytes\n test/stroke-ctm-caps.ref.png                       |  Bin 0 -> 1057 bytes\n test/stroke-image-pdf-ref.png                      |  Bin 1554 -> 0 bytes\n test/stroke-image-ps2-ref.png                      |  Bin 2121 -> 0 bytes\n test/stroke-image-ps3-ref.png                      |  Bin 2121 -> 0 bytes\n test/stroke-image-quartz-ref.png                   |  Bin 1802 -> 0 bytes\n test/stroke-image-ref.png                          |  Bin 1866 -> 0 bytes\n test/stroke-image.pdf.ref.png                      |  Bin 0 -> 1554 bytes\n test/stroke-image.ps2.ref.png                      |  Bin 0 -> 2121 bytes\n test/stroke-image.ps3.ref.png                      |  Bin 0 -> 2121 bytes\n test/stroke-image.quartz.ref.png                   |  Bin 0 -> 1802 bytes\n test/stroke-image.ref.png                          |  Bin 0 -> 1866 bytes\n test/surface-pattern-big-scale-down-ref.png        |  Bin 226 -> 0 bytes\n test/surface-pattern-big-scale-down.ref.png        |  Bin 0 -> 226 bytes\n test/surface-pattern-pdf-ref.png                   |  Bin 15996 -> 0 bytes\n test/surface-pattern-ps2-ref.png                   |  Bin 2364 -> 0 bytes\n test/surface-pattern-ps3-ref.png                   |  Bin 2364 -> 0 bytes\n test/surface-pattern-ref.png                       |  Bin 11439 -> 0 bytes\n test/surface-pattern-scale-down-pdf-argb32-ref.png |  Bin 2386 -> 0 bytes\n test/surface-pattern-scale-down-pdf-rgb24-ref.png  |  Bin 2386 -> 0 bytes\n test/surface-pattern-scale-down-ps2-ref.png        |  Bin 1324 -> 0 bytes\n test/surface-pattern-scale-down-ps3-ref.png        |  Bin 1324 -> 0 bytes\n test/surface-pattern-scale-down-quartz-ref.png     |  Bin 3188 -> 0 bytes\n test/surface-pattern-scale-down-ref.png            |  Bin 1784 -> 0 bytes\n test/surface-pattern-scale-down.pdf.argb32.ref.png |  Bin 0 -> 2386 bytes\n test/surface-pattern-scale-down.pdf.rgb24.ref.png  |  Bin 0 -> 2386 bytes\n test/surface-pattern-scale-down.ps2.ref.png        |  Bin 0 -> 1324 bytes\n test/surface-pattern-scale-down.ps3.ref.png        |  Bin 0 -> 1324 bytes\n test/surface-pattern-scale-down.quartz.ref.png     |  Bin 0 -> 3188 bytes\n test/surface-pattern-scale-down.ref.png            |  Bin 0 -> 1784 bytes\n test/surface-pattern-scale-up-pdf-argb32-ref.png   |  Bin 4247 -> 0 bytes\n test/surface-pattern-scale-up-pdf-rgb24-ref.png    |  Bin 4247 -> 0 bytes\n test/surface-pattern-scale-up-ps2-ref.png          |  Bin 943 -> 0 bytes\n test/surface-pattern-scale-up-ps3-ref.png          |  Bin 943 -> 0 bytes\n test/surface-pattern-scale-up-ref.png              |  Bin 4061 -> 0 bytes\n test/surface-pattern-scale-up.pdf.argb32.ref.png   |  Bin 0 -> 4247 bytes\n test/surface-pattern-scale-up.pdf.rgb24.ref.png    |  Bin 0 -> 4247 bytes\n test/surface-pattern-scale-up.ps2.ref.png          |  Bin 0 -> 943 bytes\n test/surface-pattern-scale-up.ps3.ref.png          |  Bin 0 -> 943 bytes\n test/surface-pattern-scale-up.ref.png              |  Bin 0 -> 4061 bytes\n test/surface-pattern-svg11-ref.png                 |  Bin 17663 -> 0 bytes\n test/surface-pattern-svg12-ref.png                 |  Bin 17663 -> 0 bytes\n test/surface-pattern.pdf.ref.png                   |  Bin 0 -> 15996 bytes\n test/surface-pattern.ps2.ref.png                   |  Bin 0 -> 2364 bytes\n test/surface-pattern.ps3.ref.png                   |  Bin 0 -> 2364 bytes\n test/surface-pattern.ref.png                       |  Bin 0 -> 11439 bytes\n test/surface-pattern.svg11.ref.png                 |  Bin 0 -> 17663 bytes\n test/surface-pattern.svg12.ref.png                 |  Bin 0 -> 17663 bytes\n test/svg-clip.c                                    |    2 +-\n test/svg-surface-source-ref.png                    |  Bin 268 -> 0 bytes\n test/svg-surface-source.c                          |    2 +-\n test/svg-surface-source.ref.png                    |  Bin 0 -> 268 bytes\n test/svg-surface.c                                 |    2 +-\n test/text-antialias-gray-quartz-ref.png            |  Bin 1041 -> 0 bytes\n test/text-antialias-gray-ref.png                   |  Bin 1084 -> 0 bytes\n test/text-antialias-gray.quartz.ref.png            |  Bin 0 -> 1041 bytes\n test/text-antialias-gray.ref.png                   |  Bin 0 -> 1084 bytes\n test/text-antialias-none-quartz-ref.png            |  Bin 300 -> 0 bytes\n test/text-antialias-none-ref.png                   |  Bin 298 -> 0 bytes\n test/text-antialias-none.quartz.ref.png            |  Bin 0 -> 300 bytes\n test/text-antialias-none.ref.png                   |  Bin 0 -> 298 bytes\n test/text-antialias-subpixel-quartz-ref.png        |  Bin 1065 -> 0 bytes\n test/text-antialias-subpixel-ref.png               |  Bin 1102 -> 0 bytes\n test/text-antialias-subpixel.quartz.ref.png        |  Bin 0 -> 1065 bytes\n test/text-antialias-subpixel.ref.png               |  Bin 0 -> 1102 bytes\n test/text-glyph-range-ps2-ref.png                  |  Bin 1389 -> 0 bytes\n test/text-glyph-range-ps3-ref.png                  |  Bin 1389 -> 0 bytes\n test/text-glyph-range-ref.png                      |  Bin 2211 -> 0 bytes\n test/text-glyph-range.ps2.ref.png                  |  Bin 0 -> 1389 bytes\n test/text-glyph-range.ps3.ref.png                  |  Bin 0 -> 1389 bytes\n test/text-glyph-range.ref.png                      |  Bin 0 -> 2211 bytes\n test/text-pattern-pdf-argb32-ref.png               |  Bin 1823 -> 0 bytes\n test/text-pattern-pdf-rgb24-ref.png                |  Bin 508 -> 0 bytes\n test/text-pattern-ps3-argb32-ref.png               |  Bin 966 -> 0 bytes\n test/text-pattern-ps3-rgb24-ref.png                |  Bin 924 -> 0 bytes\n test/text-pattern-quartz-ref.png                   |  Bin 2158 -> 0 bytes\n test/text-pattern-quartz-rgb24-ref.png             |  Bin 1874 -> 0 bytes\n test/text-pattern-ref.png                          |  Bin 1717 -> 0 bytes\n test/text-pattern-rgb24-ref.png                    |  Bin 1414 -> 0 bytes\n test/text-pattern-svg11-argb32-ref.png             |  Bin 1733 -> 0 bytes\n test/text-pattern-svg11-rgb24-ref.png              |  Bin 1563 -> 0 bytes\n test/text-pattern-svg12-argb32-ref.png             |  Bin 1733 -> 0 bytes\n test/text-pattern-svg12-rgb24-ref.png              |  Bin 1563 -> 0 bytes\n test/text-pattern.pdf.argb32.ref.png               |  Bin 0 -> 1823 bytes\n test/text-pattern.pdf.rgb24.ref.png                |  Bin 0 -> 508 bytes\n test/text-pattern.ps3.argb32.ref.png               |  Bin 0 -> 966 bytes\n test/text-pattern.ps3.rgb24.ref.png                |  Bin 0 -> 924 bytes\n test/text-pattern.quartz.ref.png                   |  Bin 0 -> 2158 bytes\n test/text-pattern.quartz.rgb24.ref.png             |  Bin 0 -> 1874 bytes\n test/text-pattern.ref.png                          |  Bin 0 -> 1717 bytes\n test/text-pattern.rgb24.ref.png                    |  Bin 0 -> 1414 bytes\n test/text-pattern.svg11.argb32.ref.png             |  Bin 0 -> 1733 bytes\n test/text-pattern.svg11.rgb24.ref.png              |  Bin 0 -> 1563 bytes\n test/text-pattern.svg12.argb32.ref.png             |  Bin 0 -> 1733 bytes\n test/text-pattern.svg12.rgb24.ref.png              |  Bin 0 -> 1563 bytes\n test/text-rotate-pdf-ref.png                       |  Bin 16639 -> 0 bytes\n test/text-rotate-ps2-ref.png                       |  Bin 6851 -> 0 bytes\n test/text-rotate-ps3-ref.png                       |  Bin 6851 -> 0 bytes\n test/text-rotate-quartz-ref.png                    |  Bin 17820 -> 0 bytes\n test/text-rotate-ref.png                           |  Bin 17775 -> 0 bytes\n test/text-rotate-svg11-ref.png                     |  Bin 18301 -> 0 bytes\n test/text-rotate-svg12-ref.png                     |  Bin 18301 -> 0 bytes\n test/text-rotate.pdf.ref.png                       |  Bin 0 -> 16639 bytes\n test/text-rotate.ps2.ref.png                       |  Bin 0 -> 6851 bytes\n test/text-rotate.ps3.ref.png                       |  Bin 0 -> 6851 bytes\n test/text-rotate.quartz.ref.png                    |  Bin 0 -> 17820 bytes\n test/text-rotate.ref.png                           |  Bin 0 -> 17775 bytes\n test/text-rotate.svg11.ref.png                     |  Bin 0 -> 18301 bytes\n test/text-rotate.svg12.ref.png                     |  Bin 0 -> 18301 bytes\n test/text-transform-pdf-ref.png                    |  Bin 3796 -> 0 bytes\n test/text-transform-ps2-ref.png                    |  Bin 4154 -> 0 bytes\n test/text-transform-ps3-ref.png                    |  Bin 4154 -> 0 bytes\n test/text-transform-ref.png                        |  Bin 6200 -> 0 bytes\n test/text-transform.pdf.ref.png                    |  Bin 0 -> 3796 bytes\n test/text-transform.ps2.ref.png                    |  Bin 0 -> 4154 bytes\n test/text-transform.ps3.ref.png                    |  Bin 0 -> 4154 bytes\n test/text-transform.ref.png                        |  Bin 0 -> 6200 bytes\n test/transforms-ps2-ref.png                        |  Bin 418 -> 0 bytes\n test/transforms-ps3-ref.png                        |  Bin 418 -> 0 bytes\n test/transforms-ref.png                            |  Bin 361 -> 0 bytes\n test/transforms.ps2.ref.png                        |  Bin 0 -> 418 bytes\n test/transforms.ps3.ref.png                        |  Bin 0 -> 418 bytes\n test/transforms.ref.png                            |  Bin 0 -> 361 bytes\n test/translate-show-surface-ref.png                |  Bin 100 -> 0 bytes\n test/translate-show-surface.ref.png                |  Bin 0 -> 100 bytes\n test/trap-clip-pdf-argb32-ref.png                  |  Bin 5809 -> 0 bytes\n test/trap-clip-pdf-rgb24-ref.png                   |  Bin 5768 -> 0 bytes\n test/trap-clip-ps2-argb32-ref.png                  |  Bin 5690 -> 0 bytes\n test/trap-clip-ps2-rgb24-ref.png                   |  Bin 5617 -> 0 bytes\n test/trap-clip-ps3-argb32-ref.png                  |  Bin 5591 -> 0 bytes\n test/trap-clip-ps3-rgb24-ref.png                   |  Bin 5512 -> 0 bytes\n test/trap-clip-quartz-ref.png                      |  Bin 6041 -> 0 bytes\n test/trap-clip-quartz-rgb24-ref.png                |  Bin 5385 -> 0 bytes\n test/trap-clip-ref.png                             |  Bin 5772 -> 0 bytes\n test/trap-clip-rgb24-ref.png                       |  Bin 5365 -> 0 bytes\n test/trap-clip.pdf.argb32.ref.png                  |  Bin 0 -> 5809 bytes\n test/trap-clip.pdf.rgb24.ref.png                   |  Bin 0 -> 5768 bytes\n test/trap-clip.ps2.argb32.ref.png                  |  Bin 0 -> 5690 bytes\n test/trap-clip.ps2.rgb24.ref.png                   |  Bin 0 -> 5617 bytes\n test/trap-clip.ps3.argb32.ref.png                  |  Bin 0 -> 5591 bytes\n test/trap-clip.ps3.rgb24.ref.png                   |  Bin 0 -> 5512 bytes\n test/trap-clip.quartz.ref.png                      |  Bin 0 -> 6041 bytes\n test/trap-clip.quartz.rgb24.ref.png                |  Bin 0 -> 5385 bytes\n test/trap-clip.ref.png                             |  Bin 0 -> 5772 bytes\n test/trap-clip.rgb24.ref.png                       |  Bin 0 -> 5365 bytes\n test/twin-ps2-ref.png                              |  Bin 1167 -> 0 bytes\n test/twin-ps3-ref.png                              |  Bin 1167 -> 0 bytes\n test/twin-ref.png                                  |  Bin 1836 -> 0 bytes\n test/twin-svg11-ref.png                            |  Bin 1773 -> 0 bytes\n test/twin-svg12-ref.png                            |  Bin 1773 -> 0 bytes\n test/twin.ps2.ref.png                              |  Bin 0 -> 1167 bytes\n test/twin.ps3.ref.png                              |  Bin 0 -> 1167 bytes\n test/twin.ref.png                                  |  Bin 0 -> 1836 bytes\n test/twin.svg11.ref.png                            |  Bin 0 -> 1773 bytes\n test/twin.svg12.ref.png                            |  Bin 0 -> 1773 bytes\n test/unantialiased-shapes-quartz-ref.png           |  Bin 4394 -> 0 bytes\n test/unantialiased-shapes-ref.png                  |  Bin 4459 -> 0 bytes\n test/unantialiased-shapes.quartz.ref.png           |  Bin 0 -> 4394 bytes\n test/unantialiased-shapes.ref.png                  |  Bin 0 -> 4459 bytes\n test/unbounded-operator-quartz-ref.png             |  Bin 4066 -> 0 bytes\n test/unbounded-operator-quartz-rgb24-ref.png       |  Bin 1918 -> 0 bytes\n test/unbounded-operator-ref.png                    |  Bin 2777 -> 0 bytes\n test/unbounded-operator-rgb24-ref.png              |  Bin 1315 -> 0 bytes\n test/unbounded-operator.quartz.ref.png             |  Bin 0 -> 4066 bytes\n test/unbounded-operator.quartz.rgb24.ref.png       |  Bin 0 -> 1918 bytes\n test/unbounded-operator.ref.png                    |  Bin 0 -> 2777 bytes\n test/unbounded-operator.rgb24.ref.png              |  Bin 0 -> 1315 bytes\n test/user-font-mask-pdf-ref.png                    |  Bin 1927 -> 0 bytes\n test/user-font-mask-ps2-ref.png                    |  Bin 1927 -> 0 bytes\n test/user-font-mask-ps3-ref.png                    |  Bin 1927 -> 0 bytes\n test/user-font-mask-ref.png                        |  Bin 6011 -> 0 bytes\n test/user-font-mask-svg11-ref.png                  |  Bin 2224 -> 0 bytes\n test/user-font-mask.pdf.ref.png                    |  Bin 0 -> 1927 bytes\n test/user-font-mask.ps2.ref.png                    |  Bin 0 -> 1927 bytes\n test/user-font-mask.ps3.ref.png                    |  Bin 0 -> 1927 bytes\n test/user-font-mask.ref.png                        |  Bin 0 -> 6011 bytes\n test/user-font-mask.svg11.ref.png                  |  Bin 0 -> 2224 bytes\n test/user-font-proxy-pdf-ref.png                   |  Bin 18111 -> 0 bytes\n test/user-font-proxy-ps2-ref.png                   |  Bin 8171 -> 0 bytes\n test/user-font-proxy-ps3-ref.png                   |  Bin 8171 -> 0 bytes\n test/user-font-proxy-ref.png                       |  Bin 18121 -> 0 bytes\n test/user-font-proxy-svg11-ref.png                 |  Bin 17902 -> 0 bytes\n test/user-font-proxy-svg12-ref.png                 |  Bin 17902 -> 0 bytes\n test/user-font-proxy.pdf.ref.png                   |  Bin 0 -> 18111 bytes\n test/user-font-proxy.ps2.ref.png                   |  Bin 0 -> 8171 bytes\n test/user-font-proxy.ps3.ref.png                   |  Bin 0 -> 8171 bytes\n test/user-font-proxy.ref.png                       |  Bin 0 -> 18121 bytes\n test/user-font-proxy.svg11.ref.png                 |  Bin 0 -> 17902 bytes\n test/user-font-proxy.svg12.ref.png                 |  Bin 0 -> 17902 bytes\n test/user-font-ps2-ref.png                         |  Bin 5043 -> 0 bytes\n test/user-font-ps3-ref.png                         |  Bin 5043 -> 0 bytes\n test/user-font-ref.png                             |  Bin 6183 -> 0 bytes\n test/user-font-rescale-ps2-ref.png                 |  Bin 8041 -> 0 bytes\n test/user-font-rescale-ps3-ref.png                 |  Bin 8041 -> 0 bytes\n test/user-font-rescale-ref.png                     |  Bin 15937 -> 0 bytes\n test/user-font-rescale-svg11-ref.png               |  Bin 15741 -> 0 bytes\n test/user-font-rescale-svg12-ref.png               |  Bin 15741 -> 0 bytes\n test/user-font-rescale.ps2.ref.png                 |  Bin 0 -> 8041 bytes\n test/user-font-rescale.ps3.ref.png                 |  Bin 0 -> 8041 bytes\n test/user-font-rescale.ref.png                     |  Bin 0 -> 15937 bytes\n test/user-font-rescale.svg11.ref.png               |  Bin 0 -> 15741 bytes\n test/user-font-rescale.svg12.ref.png               |  Bin 0 -> 15741 bytes\n test/user-font-svg11-ref.png                       |  Bin 6134 -> 0 bytes\n test/user-font-svg12-ref.png                       |  Bin 6134 -> 0 bytes\n test/user-font.ps2.ref.png                         |  Bin 0 -> 5043 bytes\n test/user-font.ps3.ref.png                         |  Bin 0 -> 5043 bytes\n test/user-font.ref.png                             |  Bin 0 -> 6183 bytes\n test/user-font.svg11.ref.png                       |  Bin 0 -> 6134 bytes\n test/user-font.svg12.ref.png                       |  Bin 0 -> 6134 bytes\n test/xlib-expose-event-ref.png                     |  Bin 40736 -> 0 bytes\n test/xlib-expose-event.c                           |    4 +-\n test/xlib-expose-event.ref.png                     |  Bin 0 -> 40736 bytes\n test/xlib-surface-source-ps2-ref.png               |  Bin 376 -> 0 bytes\n test/xlib-surface-source-ps3-ref.png               |  Bin 376 -> 0 bytes\n test/xlib-surface-source-ref.png                   |  Bin 268 -> 0 bytes\n test/xlib-surface-source.ps2.ref.png               |  Bin 0 -> 376 bytes\n test/xlib-surface-source.ps3.ref.png               |  Bin 0 -> 376 bytes\n test/xlib-surface-source.ref.png                   |  Bin 0 -> 268 bytes\n test/zero-alpha-ref.png                            |  Bin 115 -> 0 bytes\n test/zero-alpha.ref.png                            |  Bin 0 -> 115 bytes\n 1412 files changed, 782 insertions(+), 752 deletions(-)\n\ncommit e90073f7ddc6f461a935bc360c409b04f1fe9f74\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Sep 3 16:38:03 2008 +0100\n\n    [test] Build test suite into single binary.\n    \n    Avoid calling libtool to link every single test case, by building just one\n    binary from all the sources.\n    \n    This binary is then given the task of choosing tests to run (based on user\n    selection and individual test requirement), forking each test into its own\n    process and accumulating the results.\n\n Makefile.am                                       |    1 +\n boilerplate/cairo-boilerplate.c                   |  658 +++++++++------\n boilerplate/cairo-boilerplate.h                   |    1 +\n build/configure.ac.noversion                      |   12 +\n build/configure.ac.system                         |   57 ++\n build/configure.ac.version                        |    8 -\n configure.ac                                      |   16 +\n doc/public/tmpl/cairo-surface.sgml                |    1 +\n test/.gitignore                                   |  237 +-----\n test/Makefile.am                                  |  572 +++++++------\n test/README                                       |   28 +-\n test/a1-image-sample.c                            |   20 +-\n test/a1-mask.c                                    |   38 +-\n test/a1-traps-sample.c                            |   20 +-\n test/a8-mask.c                                    |   37 +-\n test/alpha-similar.c                              |   23 +-\n test/big-line.c                                   |   22 +-\n test/big-trap.c                                   |   22 +-\n test/bilevel-image.c                              |   20 +-\n test/bitmap-font.c                                |   22 +-\n test/cairo-test-private.h                         |   74 ++\n test/cairo-test-runner.c                          |  907 +++++++++++++++++++++\n test/cairo-test.c                                 |  594 ++++++++------\n test/cairo-test.h                                 |   99 ++-\n test/caps-joins-alpha.c                           |   26 +-\n test/caps-joins.c                                 |   27 +-\n test/caps-sub-paths.c                             |   21 +-\n test/clip-all.c                                   |   21 +-\n test/clip-empty.c                                 |   20 +-\n test/clip-fill-rule-pixel-aligned.c               |   22 +-\n test/clip-fill-rule.c                             |   20 +-\n test/clip-nesting.c                               |   20 +-\n test/clip-operator.c                              |   21 +-\n test/clip-push-group.c                            |   20 +-\n test/clip-twice.c                                 |   20 +-\n test/clip-zero.c                                  |   20 +-\n test/clipped-group.c                              |   20 +-\n test/clipped-surface.c                            |   19 +-\n test/close-path.c                                 |   18 +-\n test/composite-integer-translate-over-repeat.c    |   20 +-\n test/composite-integer-translate-over.c           |   22 +-\n test/composite-integer-translate-source.c         |   22 +-\n test/copy-path.c                                  |   33 +-\n test/create-for-stream.c                          |   53 +-\n test/create-from-png-stream.c                     |   20 +-\n test/create-from-png.c                            |   82 +-\n test/dash-caps-joins.c                            |   26 +-\n test/dash-curve.c                                 |   20 +-\n test/dash-no-dash.c                               |   20 +-\n test/dash-offset-negative.c                       |   20 +-\n test/dash-scale.c                                 |   26 +-\n test/dash-state.c                                 |   22 +-\n test/dash-zero-length.c                           |   20 +-\n test/degenerate-arc.c                             |   20 +-\n test/degenerate-dash.c                            |   20 +-\n test/degenerate-path.c                            |   21 +-\n test/degenerate-pen.c                             |   20 +-\n test/device-offset-fractional.c                   |   20 +-\n test/device-offset-positive.c                     |   20 +-\n test/device-offset-scale.c                        |   21 +-\n test/device-offset.c                              |   20 +-\n test/extend-pad.c                                 |   20 +-\n test/extend-reflect-similar.c                     |   22 +-\n test/extend-reflect.c                             |   22 +-\n test/extend-repeat-similar.c                      |   22 +-\n test/extend-repeat.c                              |   22 +-\n test/fallback-resolution.c                        |   28 +-\n test/fill-alpha-pattern.c                         |   20 +-\n test/fill-alpha.c                                 |   20 +-\n test/fill-and-stroke-alpha-add.c                  |   20 +-\n test/fill-and-stroke-alpha.c                      |   20 +-\n test/fill-and-stroke.c                            |   20 +-\n test/fill-degenerate-sort-order.c                 |   20 +-\n test/fill-missed-stop.c                           |   19 +-\n test/fill-rule.c                                  |   20 +-\n test/filter-bilinear-extents.c                    |   22 +-\n test/filter-nearest-offset.c                      |   21 +-\n test/filter-nearest-transformed.c                 |   19 +-\n test/finer-grained-fallbacks.c                    |   20 +-\n test/font-face-get-type.c                         |   28 +-\n test/font-matrix-translation.c                    |   20 +-\n test/font-options.c                               |   17 +-\n test/ft-font-create-for-ft-face.c                 |   21 +-\n test/ft-show-glyphs-positioning.c                 |   20 +-\n test/ft-show-glyphs-table.c                       |   21 +-\n test/ft-text-antialias-none.c                     |   20 +-\n test/ft-text-vertical-layout-type1.c              |   23 +-\n test/ft-text-vertical-layout-type3.c              |   20 +-\n test/get-and-set.c                                |   20 +-\n test/get-clip.c                                   |   21 +-\n test/get-group-target.c                           |   20 +-\n test/get-path-extents.c                           |   20 +-\n test/get-xrender-format.c                         |   35 +-\n test/glyph-cache-pressure.c                       |   20 +-\n test/gradient-alpha.c                             |   20 +-\n test/gradient-constant-alpha.c                    |   20 +-\n test/gradient-zero-stops.c                        |   22 +-\n test/group-paint.c                                |   20 +-\n test/huge-pattern.c                               |   21 +-\n test/image-surface-source.c                       |    8 +-\n test/in-fill-empty-trapezoid.c                    |   24 +-\n test/in-fill-trapezoid.c                          |   20 +-\n test/infinite-join.c                              |   22 +-\n test/invalid-matrix.c                             |   20 +-\n test/large-clip.c                                 |   22 +-\n test/large-font.c                                 |   22 +-\n test/large-source.c                               |   20 +-\n test/leaky-dash.c                                 |   22 +-\n test/leaky-dashed-rectangle.c                     |   20 +-\n test/leaky-dashed-stroke.c                        |   20 +-\n test/leaky-polygon.c                              |   20 +-\n test/line-width-scale.c                           |   20 +-\n test/line-width-zero.c                            |   20 +-\n test/line-width.c                                 |   20 +-\n test/linear-gradient-reflect.c                    |   21 +-\n test/linear-gradient.c                            |   20 +-\n test/long-dashed-lines.c                          |   20 +-\n test/long-lines.c                                 |   24 +-\n test/make-cairo-test-constructors.pl              |   18 +\n test/mask-alpha.c                                 |   20 +-\n test/mask-ctm.c                                   |   21 +-\n test/mask-surface-ctm.c                           |   20 +-\n test/mask-transformed-image.c                     |   19 +-\n test/mask-transformed-similar.c                   |   19 +-\n test/mask.c                                       |   23 +-\n test/meta-surface-pattern.c                       |   20 +-\n test/miter-precision.c                            |   22 +-\n test/move-to-show-surface.c                       |   20 +-\n test/multi-page.c                                 |   30 +-\n test/new-sub-path.c                               |   22 +-\n test/nil-surface.c                                |   20 +-\n test/operator-alpha.c                             |   21 +-\n test/operator-clear.c                             |   20 +-\n test/operator-source.c                            |   20 +-\n test/operator.c                                   |   21 +-\n test/over-above-source.c                          |   20 +-\n test/over-around-source.c                         |   20 +-\n test/over-below-source.c                          |   20 +-\n test/over-between-source.c                        |   20 +-\n test/paint-repeat.c                               |   20 +-\n test/paint-source-alpha.c                         |   20 +-\n test/paint-with-alpha.c                           |   20 +-\n test/paint.c                                      |   20 +-\n test/pattern-get-type.c                           |   21 +-\n test/pattern-getters.c                            |   20 +-\n test/pdf-features.c                               |   31 +-\n test/pdf-surface-source.c                         |   10 +-\n test/pixman-rotate.c                              |   20 +-\n test/png.c                                        |   56 +-\n test/ps-features.c                                |   29 +-\n test/ps-surface-source.c                          |   10 +-\n test/pthread-show-text.c                          |   41 +-\n test/push-group.c                                 |   20 +-\n test/radial-gradient.c                            |   22 +-\n test/random-intersections.c                       |   21 +-\n test/rectangle-rounding-error.c                   |   22 +-\n test/rectilinear-fill.c                           |   20 +-\n test/rectilinear-miter-limit.c                    |   20 +-\n test/rectilinear-stroke.c                         |   21 +-\n test/reflected-stroke.c                           |   21 +-\n test/rel-path.c                                   |   20 +-\n test/rgb24-ignore-alpha.c                         |   20 +-\n test/rotate-image-surface-paint.c                 |   22 +-\n test/scale-down-source-surface-paint.c            |   20 +-\n test/scale-source-surface-paint.c                 |   20 +-\n test/select-font-face.c                           |   28 +-\n test/select-font-no-show-text.c                   |   20 +-\n test/self-copy-overlap.c                          |   22 +-\n test/self-copy.c                                  |   20 +-\n test/self-intersecting.c                          |   22 +-\n test/set-source.c                                 |   20 +-\n test/show-glyphs-many.c                           |   20 +-\n test/show-text-current-point.c                    |   22 +-\n test/skew-extreme.c                               |   20 +-\n test/smask-fill.c                                 |   20 +-\n test/smask-image-mask.c                           |   20 +-\n test/smask-mask.c                                 |   20 +-\n test/smask-paint.c                                |   20 +-\n test/smask-stroke.c                               |   20 +-\n test/smask-text.c                                 |   20 +-\n test/smask.c                                      |   20 +-\n test/solid-pattern-cache-stress.c                 |   20 +-\n test/source-clip-scale.c                          |   20 +-\n test/source-clip.c                                |   20 +-\n test/source-surface-scale-paint.c                 |   20 +-\n test/spline-decomposition.c                       |   20 +-\n test/stroke-ctm-caps.c                            |   20 +-\n test/stroke-image.c                               |   20 +-\n test/surface-finish-twice.c                       |   20 +-\n test/surface-pattern-big-scale-down.c             |   20 +-\n test/surface-pattern-scale-down-pdf-rgb24-ref.png |  Bin 0 -> 2386 bytes\n test/surface-pattern-scale-down.c                 |   21 +-\n test/surface-pattern-scale-up.c                   |   21 +-\n test/surface-pattern.c                            |   24 +-\n test/surface-source.c                             |   15 +-\n test/svg-clip.c                                   |   26 +-\n test/svg-surface-source.c                         |   11 +-\n test/svg-surface.c                                |   26 +-\n test/text-antialias-gray.c                        |   20 +-\n test/text-antialias-none.c                        |   20 +-\n test/text-antialias-subpixel.c                    |   20 +-\n test/text-cache-crash.c                           |   40 +-\n test/text-glyph-range-ps2-ref.png                 |  Bin 0 -> 1389 bytes\n test/text-glyph-range-ps3-ref.png                 |  Bin 0 -> 1389 bytes\n test/text-glyph-range-ref.png                     |  Bin 1810 -> 2211 bytes\n test/text-glyph-range-rgb24-ref.png               |  Bin 1645 -> 0 bytes\n test/text-glyph-range.c                           |   62 +-\n test/text-pattern.c                               |   54 +-\n test/text-rotate.c                                |   22 +-\n test/text-transform.c                             |   22 +-\n test/text-zero-len.c                              |   20 +-\n test/toy-font-face.c                              |   16 +-\n test/transforms.c                                 |   20 +-\n test/translate-show-surface.c                     |   20 +-\n test/trap-clip.c                                  |   22 +-\n test/truetype-tables.c                            |   18 +-\n test/twin.c                                       |   20 +-\n test/unantialiased-shapes.c                       |   20 +-\n test/unbounded-operator.c                         |   20 +-\n test/user-data.c                                  |   17 +-\n test/user-font-mask.c                             |   28 +-\n test/user-font-proxy.c                            |   28 +-\n test/user-font-rescale.c                          |   20 +-\n test/user-font.c                                  |   28 +-\n test/xlib-expose-event.c                          |   28 +-\n test/xlib-surface-source.c                        |    8 +-\n test/xlib-surface.c                               |   36 +-\n test/zero-alpha.c                                 |   20 +-\n 228 files changed, 3770 insertions(+), 4123 deletions(-)\n\ncommit 8457972d40088cda165f31fdd7bd9b4c19c6e095\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 31 02:16:54 2008 +0000\n\n    [type3] Whitespace.\n    \n    Tightly scope the output stream.\n\n src/cairo-type3-glyph-surface.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit 08f4d49a9464bc19bc2ca7f2356a6eb8d62f5daf\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 31 02:03:41 2008 +0000\n\n    [xlib] Intialise clip_dirty.\n    \n    Eeek, forgot to set the clip_dirty to 0 on construction.\n\n src/cairo-xlib-surface.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit b722d5b2b988d43931648d8377a9433d75f7d95f\nMerge: 05fce5b 710f7d3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 31 02:24:25 2008 +0000\n\n    Merge branch '1.8'\n\ncommit 710f7d30d348517602293f123525aef7677d69cf\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 31 02:14:53 2008 +0000\n\n    [scaled-font] Fix typo that prevented meta_surface lookup.\n    \n    test/text-glyph-range was crashing since we requested the meta_surface but\n    the glyph wrongly believed it already had the meta_surface but was\n    checking for a path instead.\n\n src/cairo-scaled-font.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 05fce5bced9718ffa803f5a87df00f96809d1f53\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sat Apr 5 13:32:51 2008 +1030\n\n    PS/PDF: Set image Interpolation flag\n    \n    If the filter mode is anything other than DEFAILT, FAST or NEAREST set the\n    Interpolate flag in the image dictionary so that a smoothing filter is\n    applied when rasterising the vector file.\n    \n    As we have no control over the implementation of the Interpolate filter\n    (the PS/PDF specifications leave it undefined) we need to capture the\n    output of poppler/GS and update our reference images. (For a couple of\n    tests, the filtering is irrelevant so for those we set the filter to\n    NEAREST.)\n    \n    Note that GhostScript's Interpolate filter does not work on rotated images\n    (and a variety of other transformations) so several of the PS reference\n    images have use nearest-neighbour sampling instead of a bilinear filter.\n\n src/cairo-pdf-surface.c                            |   28 ++++++++--\n src/cairo-ps-surface.c                             |   28 ++++++++--\n test/Makefile.am                                   |   54 ++++++++++++++------\n test/bilevel-image.c                               |    1 +\n test/composite-integer-translate-over-ps2-ref.png  |  Bin 0 -> 15783 bytes\n test/composite-integer-translate-over-ps3-ref.png  |  Bin 0 -> 15783 bytes\n ...osite-integer-translate-over-repeat-ps2-ref.png |  Bin 0 -> 448 bytes\n ...osite-integer-translate-over-repeat-ps3-ref.png |  Bin 0 -> 448 bytes\n .../composite-integer-translate-source-ps2-ref.png |  Bin 0 -> 15783 bytes\n .../composite-integer-translate-source-ps3-ref.png |  Bin 0 -> 15783 bytes\n test/create-from-png-stream.c                      |    1 +\n test/create-from-png.c                             |    1 +\n test/device-offset-fractional-ps2-ref.png          |  Bin 201 -> 200 bytes\n test/device-offset-fractional-ps3-ref.png          |  Bin 201 -> 200 bytes\n test/extend-reflect-ps2-ref.png                    |  Bin 153322 -> 146990 bytes\n test/extend-reflect-ps3-ref.png                    |  Bin 153322 -> 146990 bytes\n test/extend-reflect-similar-ps2-ref.png            |  Bin 153322 -> 146990 bytes\n test/extend-reflect-similar-ps3-ref.png            |  Bin 153322 -> 146990 bytes\n test/extend-repeat-ps2-ref.png                     |  Bin 0 -> 119246 bytes\n test/extend-repeat-ps3-ref.png                     |  Bin 0 -> 119246 bytes\n test/extend-repeat-similar-ps2-ref.png             |  Bin 0 -> 119246 bytes\n test/extend-repeat-similar-ps3-ref.png             |  Bin 0 -> 119246 bytes\n test/filter-bilinear-extents-ps2-ref.png           |  Bin 173 -> 556 bytes\n test/filter-bilinear-extents-ps3-ref.png           |  Bin 173 -> 556 bytes\n test/image-surface-source-ps2-ref.png              |  Bin 0 -> 376 bytes\n test/image-surface-source-ps3-ref.png              |  Bin 0 -> 376 bytes\n test/image-surface-source-ref.png                  |  Bin 268 -> 332 bytes\n test/stroke-image-ps2-ref.png                      |  Bin 1786 -> 2121 bytes\n test/stroke-image-ps3-ref.png                      |  Bin 1786 -> 2121 bytes\n test/surface-pattern-pdf-argb32-ref.png            |  Bin 14880 -> 0 bytes\n test/surface-pattern-pdf-ref.png                   |  Bin 0 -> 15996 bytes\n test/surface-pattern-ps2-argb32-ref.png            |  Bin 2520 -> 0 bytes\n test/surface-pattern-ps2-ref.png                   |  Bin 0 -> 2364 bytes\n test/surface-pattern-ps3-argb32-ref.png            |  Bin 2520 -> 0 bytes\n test/surface-pattern-ps3-ref.png                   |  Bin 0 -> 2364 bytes\n test/surface-pattern-scale-down-pdf-argb32-ref.png |  Bin 1565 -> 2386 bytes\n test/surface-pattern-scale-down-ps2-argb32-ref.png |  Bin 1400 -> 0 bytes\n test/surface-pattern-scale-down-ps2-ref.png        |  Bin 0 -> 1324 bytes\n test/surface-pattern-scale-down-ps3-argb32-ref.png |  Bin 1400 -> 0 bytes\n test/surface-pattern-scale-down-ps3-ref.png        |  Bin 0 -> 1324 bytes\n test/surface-pattern-scale-down.c                  |    3 +-\n test/surface-pattern-scale-up-pdf-argb32-ref.png   |  Bin 3886 -> 4247 bytes\n test/surface-pattern-scale-up-pdf-rgb24-ref.png    |  Bin 0 -> 4247 bytes\n test/surface-pattern-scale-up-ps2-argb32-ref.png   |  Bin 1011 -> 0 bytes\n test/surface-pattern-scale-up-ps2-ref.png          |  Bin 0 -> 943 bytes\n test/surface-pattern-scale-up-ps3-argb32-ref.png   |  Bin 1011 -> 0 bytes\n test/surface-pattern-scale-up-ps3-ref.png          |  Bin 0 -> 943 bytes\n test/surface-pattern-scale-up-ref.png              |  Bin 3825 -> 4061 bytes\n test/surface-pattern-scale-up.c                    |    6 ++-\n test/surface-pattern.c                             |    6 ++-\n test/xlib-surface-source-ps2-ref.png               |  Bin 0 -> 376 bytes\n test/xlib-surface-source-ps3-ref.png               |  Bin 0 -> 376 bytes\n 52 files changed, 98 insertions(+), 30 deletions(-)\n\ncommit 2c53bdb82a955c672c8fee2b1b4c991af2654ae0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Sep 29 21:12:53 2008 +0100\n\n    [paginated] Emit fallback images using FILTER_NEAREST.\n    \n    Fallback images should (in theory) be emitted at native resolution, so\n    disable filtering to avoid introducing potential artifacts into cairo's\n    ideal output.\n\n src/cairo-paginated-surface.c |   13 ++++++++-----\n 1 file changed, 8 insertions(+), 5 deletions(-)\n\ncommit f03d3f9f7f923730cdc4c5f21364f752f705086a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 30 19:24:29 2008 +0000\n\n    [boilerplate] Remove #if VERSION>1.9.0\n    \n    Remove the obsolete #if statement.\n\n boilerplate/cairo-boilerplate.c |    2 --\n 1 file changed, 2 deletions(-)\n\ncommit ef98eb26f7484019b023cd4c93dce44f23e3a594\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 30 19:23:17 2008 +0000\n\n    [test] Reenable device offset testing.\n    \n    Restore device offset testing that was temporarily disable in the run up\n    to the 1.8 release.\n\n test/cairo-test.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 4f2f46ef1bd793a712df045178b3d00d027e3ba6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 30 19:14:07 2008 +0000\n\n    Restore the ability to choose the internal font.\n    \n    Behdad wants to include the feature with 1.10, so we enable it as early as\n    possible in 1.9 dev cycle to generate as much feedback as possible.\n    \n    The first change is to use \"<cairo>\" as being a name unlikely to clash\n    with any real font names.\n    \n    This reverts commits:\n      a824d284be23793a5c48b9ae833dcb7b2d5fff80,\n      292233685534aed712dfd45e8ccf498b792ce496,\n      e0046aaf417a61da008dc6374871fa3687ba94ab,\n      f534bd549e1e2283735d1eabb60c015a5949a735.\n\n perf/Makefile.am        |    1 +\n perf/cairo-perf.c       |    1 +\n perf/cairo-perf.h       |    1 +\n perf/twin.c             |   50 +++++++++++++++++++++++++++++++++++++++\n src/cairo-font-face.c   |    6 +++--\n src/cairoint.h          |    1 +\n test/.gitignore         |    1 +\n test/Makefile.am        |    6 +++++\n test/twin-ps2-ref.png   |  Bin 0 -> 1167 bytes\n test/twin-ps3-ref.png   |  Bin 0 -> 1167 bytes\n test/twin-ref.png       |  Bin 0 -> 1836 bytes\n test/twin-svg11-ref.png |  Bin 0 -> 1773 bytes\n test/twin-svg12-ref.png |  Bin 0 -> 1773 bytes\n test/twin.c             |   60 +++++++++++++++++++++++++++++++++++++++++++++++\n 14 files changed, 125 insertions(+), 2 deletions(-)\n\ncommit 52c3fc58b52c77282998f9ad75657a6bec5956f8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 8 13:04:37 2008 +0100\n\n    [tessellator] Simplify dequeuing by using a sentinel value.\n    \n    Instead of maintaining an index and comparing it to the count, just mark\n    the last startstop event with NULL and stop dequeuing events upon seeing\n    that sentinel value. (Removes an unreadable line, and cachegrind hints\n    that it may be a tiny bit faster.)\n\n src/cairo-bentley-ottmann.c |   32 ++++++++++++++++----------------\n 1 file changed, 16 insertions(+), 16 deletions(-)\n\ncommit ef9e0a5d1d74ac92a1fcde5a657c866a8e6509e6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 7 22:09:37 2008 +0100\n\n    [tessellator] Use a combsort for sorting the event queue.\n    \n    In my experiments using cairo-perf, the inlined combsort is ~20% quicker\n    than the library qsort.\n\n src/Makefile.sources         |    1 +\n src/cairo-bentley-ottmann.c  |   39 ++++++++++++-----------\n src/cairo-combsort-private.h |   71 ++++++++++++++++++++++++++++++++++++++++++\n 3 files changed, 92 insertions(+), 19 deletions(-)\n\ncommit b1461308416fa83d1de0016a9d4804b68a1f1d8f\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Thu Oct 30 14:18:18 2008 -0400\n\n    [Makefile.am.releasing] Symlink /manual and /cairo-manual.tar.gz only for releases\n    \n    And not for snapshots.  Also symlink /cairo-manual-X.Y.Z.tar.gz for all\n    versions.\n\n build/Makefile.am.releasing |   13 +++++++++++--\n 1 file changed, 11 insertions(+), 2 deletions(-)\n\ncommit e3a7f522a6b96729b2a0122f8c430c24dc17fc5a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 7 23:33:32 2008 +0100\n\n    [tessellator] Perform cheap checks before computing intersect.\n    \n    First check if we can reject the intersection without having to perform\n    the full divides, based on analysing:\n      t * (ady*bdx - bdy*adx) = bdy * (ax - bx) - bdx * (ay - by)\n      s * (ady*bdx - bdy*adx) = ady * (ax - bx) - adx * (ay - by)\n    and excluding the result if by inspection we know that\n    (s, t) <= 0 || (s, t) => 1.\n    \n    Doing so virtually eliminates all division and speeds up the strokes (when\n    performing self-intersection elimination using the tessellator) perf cases\n    by about 5%.\n\n src/cairo-bentley-ottmann.c |   51 ++++++++++++++++++++++++++++++++++++++++++-\n 1 file changed, 50 insertions(+), 1 deletion(-)\n\ncommit 553fde4bb3e913de7e26bf416166d69bae4d02e1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Oct 4 13:15:08 2008 +0100\n\n    [tessellator] Simplify special cases of edges to compare.\n    \n    Use our prior knowledge of the inputs and trivial conditions to simplify\n    the edge equations and in many common conditions, such as vertical edges\n    and common points, reduce the operations down to a just returning the\n    non-degenerate 32 bit value.  This adds an overhead of a few conditionals,\n    but on the fast paths we actually generate fewer branches and many fewer\n    arithmetic operations such that it improves performance of the fill\n    performance tests by around 10%.\n\n src/cairo-bentley-ottmann.c |  132 ++++++++++++++++++++++++++++++++++---------\n 1 file changed, 106 insertions(+), 26 deletions(-)\n\ncommit cc109df2a70e953d71e3e6fc4e6e54cce4ba0d47\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 30 15:50:20 2008 +0000\n\n    [test] Update .gitignore\n    \n    Add a couple of new programs to gitignore.\n\n test/.gitignore |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 7d546bba213c3b89404bb3c58a5665343abfcd51\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 29 15:46:10 2008 +0000\n\n    [xlib] Eliminate shadowed variable.\n    \n    Cleanup a minor -Wshadow warning.\n\n src/cairo-xlib-surface.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit e3388b8180e38f79e0d5b66cc640c3d5c37db2a8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 29 15:45:09 2008 +0000\n\n    [cff-subset] Eliminate shadowed variable.\n    \n    Cleanup a minor -Wshadow warning.\n\n src/cairo-cff-subset.c |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit 3e18114aff21acfa73a7d13a419719375ae9b5a6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 29 15:43:23 2008 +0000\n\n    [user-font] Eliminate shadowed variable\n    \n    Cleanup a minor -Wshadow warning.\n\n src/cairo-user-font.c |    1 -\n 1 file changed, 1 deletion(-)\n\ncommit d073537e82b57738068a7e1cf1d36ce452876804\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 29 15:41:44 2008 +0000\n\n    [scaled-font] Eliminate shadowed variable.\n    \n    Cleanup a minor -Wshadow warning.\n\n src/cairo-scaled-font.c |    1 -\n 1 file changed, 1 deletion(-)\n\ncommit 6429e3f39468ef4f865681b3b5988d35906deeb0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 28 17:38:09 2008 +0000\n\n    [xlib] Only set Picture clip as necessary.\n    \n    Only set ClipRectangles on a new Picture, avoiding redundant calls to\n    clear the non-existent ClipMask otherwise.\n\n src/cairo-xlib-surface.c |    5 +++--\n 1 file changed, 3 insertions(+), 2 deletions(-)\n\ncommit cd45258c5bf6a06f7bd3f2bfaf928e423a9b70e1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 28 16:54:10 2008 +0000\n\n    [xlib] Only clear the GC clip mask as necessary.\n    \n    Avoid redundant calls to XSetClipMask() for clean GCs.\n\n src/cairo-xlib-private.h |   10 ++++++++--\n src/cairo-xlib-screen.c  |    8 ++++++--\n src/cairo-xlib-surface.c |    7 ++++---\n 3 files changed, 18 insertions(+), 7 deletions(-)\n\ncommit d384f864992fbf7513446a70158135a08e704678\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 28 16:33:51 2008 +0000\n\n    [xlib] Propagate real status from get_screen_info().\n    \n    Return the real error from _cairo_xlib_screen_info_get() in order to avoid\n    having to create a fake NO_MEMORY error.\n\n src/cairo-xlib-private.h |    6 +++--\n src/cairo-xlib-screen.c  |   66 ++++++++++++++++++++++++++--------------------\n src/cairo-xlib-surface.c |    6 ++---\n 3 files changed, 44 insertions(+), 34 deletions(-)\n\ncommit e25b106e9c33e220fb104afb0929e766647b6de9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 28 16:27:58 2008 +0000\n\n    [xlib] Propagate real status from get_display()\n    \n    Avoid throwing away the error and inventing a new NO_MEMORY error for\n    _cairo_xlib_display_get().\n\n src/cairo-xlib-display.c |   13 ++++++++-----\n src/cairo-xlib-private.h |    4 ++--\n src/cairo-xlib-surface.c |   14 ++++++++------\n 3 files changed, 18 insertions(+), 13 deletions(-)\n\ncommit 2555f83b11ee23829cfdeaae703420ca3e572fa1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 28 16:22:49 2008 +0000\n\n    [xlib] Avoid repeated calls to XRenderQueryVersion\n    \n    Use the value determined during display initialisation in order to avoid\n    redundant XRenderQueryFormats requests.\n\n src/cairo-xlib-display.c |    6 ++++--\n src/cairo-xlib-private.h |    2 ++\n src/cairo-xlib-surface.c |    7 ++-----\n 3 files changed, 8 insertions(+), 7 deletions(-)\n\ncommit 0d0c6a199c5b631299c72dce80d66ac0f4936a64\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Oct 26 12:53:29 2008 +0000\n\n    [matrix] Optimise invert for simple scaling|translation matrices.\n    \n    The matrix is quite often just a simple scale and translate (or even\n    identity!). For this class of matrix, we can skip the full adjoint\n    rearrangement and determinant calculation and just compute the inverse\n    directly.\n\n src/cairo-matrix.c |   26 +++++++++++++++++++++++++-\n 1 file changed, 25 insertions(+), 1 deletion(-)\n\ncommit 74876b00cd969d5cfc209fa903dfad50bda59361\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Oct 25 11:33:52 2008 +0100\n\n    [xlib] Exploit compaction of XRenderFillRectangle()\n    \n    libXrender amalgamates sequences of XRenderFillRectangle() into a single\n    XRenderFillRectangles request (when permissible). Since it is common for a\n    cairo application to draw rectangles individually in order to exploit fast\n    paths within cairo [rectilinear fills], it is a reasonably common pattern.\n\n src/cairo-xlib-surface.c |   50 +++++++++++++++++++++++++++++-----------------\n 1 file changed, 32 insertions(+), 18 deletions(-)\n\ncommit 64726ccfb99ba964420f3a840fd707998927e902\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 24 17:06:04 2008 +0100\n\n    [traps] Whitespace.\n    \n    Fixup whitespace in line with CODING_STYLE and rest of file.\n\n src/cairo-region.c |    6 +++---\n src/cairo-traps.c  |   33 ++++++++++++++++++++-------------\n 2 files changed, 23 insertions(+), 16 deletions(-)\n\ncommit d5543005e7b7cc08f97578f301182ef4807a05fe\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 24 09:00:45 2008 +0100\n\n    [surface] Only copy font options if the target surface has them.\n    \n    No need to copy font options if the similar surface is from the same\n    backend and no special options have been applied by the user. Doing so\n    breaks lazy initialisation of backend specific options.\n\n src/cairo-surface.c |   18 +++++++++++-------\n 1 file changed, 11 insertions(+), 7 deletions(-)\n\ncommit a0023758104b700751ba8d7a66d75db139eea6cb\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 24 08:39:29 2008 +0100\n\n    [xlib] Defer querying of font options until first use\n    \n    Constructing the font options cause the initialisation of Xlc and invoke\n    several round-trips to the X server, significantly delaying the creation\n    of the first surface. By deferring that operation until the first use of\n    fonts then we avoid that overhead for very simple applications (like the\n    test suite) and should improve start-up latency for larger application.\n\n src/cairo-xlib-private.h |    4 ++++\n src/cairo-xlib-screen.c  |   28 +++++++++++++++++++++++++---\n src/cairo-xlib-surface.c |    2 +-\n 3 files changed, 30 insertions(+), 4 deletions(-)\n\ncommit 6706590d4e7ad19dae0b8e3efe6f573d5688e19a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Sep 29 16:22:48 2008 +0100\n\n    [pattern] Reduce likelihood of range overflow with large downscaling.\n    \n    Exploit the auxiliary offset vector in the attributes to reduce\n    likelihood of range overflow in the translation components when converting\n    the pattern matrix to fixed-point pixman_matrix_t.\n    \n    An example of this is bug 9148\n      Bug 9148 - invalid rendering when painting large scaled-down surfaces\n      (https://bugs.freedesktop.org/show_bug.cgi?id=9148)\n    but the issue is perhaps even more likely with high resolution fallback\n    images.\n\n src/cairo-pattern.c |   19 +++++++++++++++++++\n 1 file changed, 19 insertions(+)\n\ncommit c0af8c70635d641fc5770afc0cd6e9285122fd72\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 20 16:49:23 2008 +0100\n\n    [pattern] Tweak REFLECT HACK\n    \n    In order to workaound a directfb bug, tweak the reflect->repeat pattern so\n    that it covers the destination rectangle. Although the number of paint()\n    increases, the number of read/written pixels remain the same so that\n    performance should not deteriorate, but instead be improved by using a\n    cloned source. The early return of the REFLECT surface is discarded so\n    that the latter optimisations for surface sources can be applied. One side\n    effect of this is that acquire_source_image() is removed due to its lax\n    reference counting which thereby exposes the ROI optimisations for image\n    destinations as well.\n\n src/cairo-pattern.c |  279 +++++++++++++++++++++++++--------------------------\n src/cairoint.h      |    1 -\n 2 files changed, 136 insertions(+), 144 deletions(-)\n\ncommit 234623b3d5884b02a0619de8ddd57bbed36ef4fd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 23 14:55:26 2008 +0100\n\n    [pattern] Support unbounded surfaces.\n    \n    An unbounded surface should just report an infinite pattern extent and not\n    return UNSUPPORTED from _cairo_pattern_get_extents().\n\n src/cairo-pattern.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 2836be6f7565684e86b3cc8a3d2db4ba690b3718\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 23 14:42:47 2008 +0100\n\n    Cleanup 'status && status != UNSUPPORTED'\n    \n    Replace instances of 'status && status != UNSUPPORTED' with the more\n    readable _cairo_status_is_error().\n\n src/cairo-analysis-surface.c    |   14 +++++++-------\n src/cairo-clip.c                |    4 ++--\n src/cairo-pdf-surface.c         |    8 ++++----\n src/cairo-ps-surface.c          |    4 ++--\n src/cairo-scaled-font-subsets.c |    4 ++--\n 5 files changed, 17 insertions(+), 17 deletions(-)\n\ncommit 13ba43eb8ffc3bb6c8881d91824102a8df86d928\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 23 12:28:25 2008 +0100\n\n    [matrix] Optimize finding the bounding box under an orthogonal matrix.\n    \n    We frequently need to find the bounds of a pattern under an identity\n    matrix, or a simple scale+translation. For these cases we do not need to\n    transform each corner and search for the bounds as the matrix is x/y\n    separable and so allows us to inspect the results for the extreme x/y\n    points independently.\n\n src/cairo-matrix.c |   42 +++++++++++++++++++++++++++++++++++++++++-\n 1 file changed, 41 insertions(+), 1 deletion(-)\n\ncommit 6ed957fc242d7890117f4dea121c03ec2523470c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 22 22:02:05 2008 +0100\n\n    [gstate] Use _cairo_pattern_black for the default source.\n    \n    Avoid allocating a default source pattern by using the static black pattern\n    object. The one complication is that we need to ensure that the static\n    pattern does leak to the application, so we replace it with an allocated\n    solid pattern within _cairo_gstate_get_source().\n\n src/cairo-gstate.c  |    9 +++++++--\n src/cairo-pattern.c |   12 +++++++-----\n src/cairo.c         |    6 +++---\n src/cairoint.h      |    2 +-\n 4 files changed, 18 insertions(+), 11 deletions(-)\n\ncommit 794460186459981cd43ca38f3eba07e3f6bf8908\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 22 19:24:44 2008 +0100\n\n    [pattern] Avoid needless copying of patterns.\n    \n    Only copy the pattern if we need to modify it, e.g. preserve a copy in a\n    snapshot or a soft-mask, or to modify the matrix. Otherwise we can\n    continue to use the original pattern and mark it as const in order to\n    generate compiler warnings if we do attempt to write to it.\n\n src/cairo-analysis-surface.c         |   37 +++----\n src/cairo-directfb-surface.c         |   33 +++----\n src/cairo-glitz-surface.c            |   42 ++++----\n src/cairo-gstate.c                   |  117 ++++++++++++++--------\n src/cairo-image-surface.c            |    6 +-\n src/cairo-meta-surface.c             |   12 +--\n src/cairo-paginated-surface.c        |   12 +--\n src/cairo-pattern.c                  |   70 +++++--------\n src/cairo-pdf-surface.c              |   88 +++++++++++------\n src/cairo-ps-surface.c               |   39 ++++----\n src/cairo-quartz-surface.c           |   10 +-\n src/cairo-scaled-font.c              |    2 +-\n src/cairo-sdl-surface.c              |   22 ++---\n src/cairo-surface-fallback-private.h |   45 ++++-----\n src/cairo-surface-fallback.c         |   65 ++++++------\n src/cairo-surface.c                  |  181 +++++++++++++++++++++-------------\n src/cairo-svg-surface.c              |   50 +++++-----\n src/cairo-type3-glyph-surface.c      |   18 ++--\n src/cairo-win32-font.c               |   26 ++---\n src/cairo-win32-printing-surface.c   |   51 +++++-----\n src/cairo-win32-private.h            |    2 +-\n src/cairo-win32-surface.c            |    6 +-\n src/cairo-xcb-surface.c              |   42 ++++----\n src/cairo-xlib-surface.c             |   14 +--\n src/cairoint.h                       |   74 +++++++-------\n src/test-meta-surface.c              |   28 +++---\n src/test-paginated-surface.c         |   40 ++++----\n 27 files changed, 605 insertions(+), 527 deletions(-)\n\ncommit 9d2189afbd2aa1413f620a4d35016ef3be3fc0e9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 22 18:29:02 2008 +0100\n\n    [pattern] Do not recompute the inverse if setting an identical matrix.\n    \n    More micro-optimisation.\n\n src/cairo-pattern.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 2c277ddbea42222130b8b1c2a2b4934503b40188\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 22 18:17:49 2008 +0100\n\n    [matrix] Avoid error correction overhead for translation matrices.\n    \n    We can only correct rounding errors between cairo and pixman matrices for\n    scaled matrices - so skip the inversion and point transformation overhead\n    for simple translation matrices.\n\n src/cairo-matrix.c |   11 ++++++++---\n 1 file changed, 8 insertions(+), 3 deletions(-)\n\ncommit 57a1d932f3e9d79f3259a536ec2f45f020d46de5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 22 18:12:10 2008 +0100\n\n    [array] Rearrange user_data_fini() to optimize common case.\n    \n    Micro-optimisation to avoid the _cairo_array_index() for the common case\n    of 0 elements.\n\n src/cairo-array.c |   16 ++++++++++------\n 1 file changed, 10 insertions(+), 6 deletions(-)\n\ncommit 2852127c72fa6cfe246e6ece0433be6c3f2a93ab\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 22 18:04:30 2008 +0100\n\n    [cairoint] Add a few cairo_pure.\n    \n    Start marking up the prototypes with function attributes - first the\n    obvious pure functions.\n\n src/cairoint.h |   12 ++++++------\n 1 file changed, 6 insertions(+), 6 deletions(-)\n\ncommit cf072c7203dfce989ee60e56352f548329d3d616\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 30 14:35:49 2008 +0000\n\n    [sdl] Add new backend.\n    \n    Add a new backend to allow easy interoperability with the Simple\n    DirectMedia Layer.\n\n boilerplate/Makefile.sources                |    3 +\n boilerplate/cairo-boilerplate-sdl-private.h |   56 ++++\n boilerplate/cairo-boilerplate-sdl.c         |   69 +++++\n boilerplate/cairo-boilerplate.c             |   13 +\n build/configure.ac.features                 |    1 +\n configure.ac                                |    8 +\n src/Makefile.sources                        |    3 +\n src/cairo-sdl-surface.c                     |  418 +++++++++++++++++++++++++++\n src/cairo-sdl.h                             |   54 ++++\n src/cairo.h                                 |    4 +-\n 10 files changed, 628 insertions(+), 1 deletion(-)\n\ncommit 31ada1ea15d14c0a843728b105340c270e4e4613\nMerge: 30f2df1 ab15d76\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 30 16:56:07 2008 +0000\n\n    Merge branch '1.8'\n\ncommit ab15d7627506a837fea7101661425bb923ef5b4f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 30 16:54:23 2008 +0000\n\n    [test] Remove XFAIL from user-font-mask\n    \n    user-font-mask should PASS modulo the scaling anomalies in the external\n    renderers, so remove it from the XFAIL list.\n\n test/Makefile.am                  |   15 ++++++---------\n test/user-font-mask-pdf-ref.png   |  Bin 0 -> 1927 bytes\n test/user-font-mask-ps2-ref.png   |  Bin 0 -> 1927 bytes\n test/user-font-mask-ps3-ref.png   |  Bin 0 -> 1927 bytes\n test/user-font-mask-svg11-ref.png |  Bin 0 -> 2224 bytes\n 5 files changed, 6 insertions(+), 9 deletions(-)\n\ncommit 540f555840ba4076e3ab86669daf9bee5695afa2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 23 14:38:44 2008 +0100\n\n    [analysis] Only limit to mask extends if bounded by mask.\n    \n    The extents of cairo_mask() is only limited to the mask if the operation\n    is bounded by the mask.\n\n src/cairo-analysis-surface.c            |    8 ++++++--\n test/clip-operator-pdf-argb32-ref.png   |  Bin 11145 -> 12125 bytes\n test/clip-operator-pdf-rgb24-ref.png    |  Bin 6530 -> 7367 bytes\n test/operator-clear-pdf-argb32-ref.png  |  Bin 1438 -> 1614 bytes\n test/operator-clear-pdf-rgb24-ref.png   |  Bin 1170 -> 1402 bytes\n test/operator-source-pdf-argb32-ref.png |  Bin 4694 -> 5149 bytes\n test/operator-source-pdf-rgb24-ref.png  |  Bin 3848 -> 4354 bytes\n 7 files changed, 6 insertions(+), 2 deletions(-)\n\ncommit 4b2998893930e4bab19646e6f0a0c8d2a47f12a2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 23 14:34:30 2008 +0100\n\n    Review users of cairo_rectangle_int_t for incorrect unsigned promotion.\n    \n    Adrian Johnson discovered cases where we mistakenly compared the result\n    of unsigned arithmetic where we need signed quantities. Look for similar\n    cases in the users of cairo_rectangle_int_t.\n\n src/cairo-analysis-surface.c |   48 ++++++++++++++++++++++--------------\n src/cairo-clip.c             |   43 ++++++++++++++++----------------\n src/cairo-gstate.c           |    4 +--\n src/cairo-pattern.c          |   13 ++++++----\n src/cairo-rectangle.c        |    6 ++++-\n src/cairo-region-private.h   |    3 ++-\n src/cairo-region.c           |    3 ++-\n src/cairo-surface-fallback.c |   31 ++++++++++++++---------\n src/cairo-surface.c          |   27 +++++++++++---------\n src/cairo-win32-surface.c    |    4 +--\n src/cairo-xcb-surface.c      |   56 ++++++++++++++----------------------------\n src/cairo-xlib-surface.c     |   52 +++++++++++++--------------------------\n src/cairoint.h               |    2 +-\n 13 files changed, 144 insertions(+), 148 deletions(-)\n\ncommit 0e4156121f05b14f800289ea34c5382de1f20869\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 23 13:37:41 2008 +0100\n\n    [rectangle] Fix unsigned promotion whilst computing intersect.\n    \n    _cairo_rectangle_intersect() incorrectly allows unsigned promotion during\n    its arithmetic.\n\n src/cairo-rectangle.c |   31 +++++++++++++++++--------------\n src/cairoint.h        |    3 ++-\n 2 files changed, 19 insertions(+), 15 deletions(-)\n\ncommit 2464b8a0a9f7db7421c257eb4e3ac0d98af34761\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 23 13:36:19 2008 +0100\n\n    [pattern] Allow the projected surface extents to be negative.\n    \n    In order to handle projection of analysis surface with user-fonts we need\n    to accommodate patterns extending into negative coordinate space.\n\n src/cairo-pattern.c |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit d5d29075bdbb7f412fa6dc182573da18fd81af54\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 23 15:24:13 2008 +0100\n\n    [gstate] Allocate temporary variable for backend_to_user transform.\n    \n    _cairo_gstate_backend_to_user_rectangle() requires that its input\n    arguments are non-NULL and describe the input rectangle to be transformed.\n    However, we were passing through output parameters from the public API\n    which were allowed to be NULL. So we need to allocate temporary variables\n    in which to compute the output rectangle, but only copy them as required.\n\n src/cairo-gstate.c |   69 +++++++++++++++++++++++++++++++++++++---------------\n 1 file changed, 50 insertions(+), 19 deletions(-)\n\ncommit 30f2df1dec419a10408b53ecd26cebfcf607bf27\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Thu Oct 30 08:40:35 2008 -0700\n\n    Fix typo in bug URL.\n    \n    Thanks to AndrewR in IRC for pointing out the typo.\n\n NEWS |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit b598dcd1b1726184506de6a9d253f6091a000922\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Thu Oct 30 08:29:51 2008 -0700\n\n    Fix release-publish to also update the current manual.\n    \n    That is, the vesion that appears as:\n    \n    \thttp://cairographics.org/manual\n    and:\n    \thttp://cairographics.org/cairo-manual.tar.gz\n    \n    It was silly that we previously required a manual step to\n    upload the documentation (which we regularly forgot to do)\n    and that it uploaded with a date in the name rather than a\n    version. So we just drop the old doc-publish Makefile target\n    now as it's just not useful anymore.\n\n RELEASING                   |    3 ++-\n build/Makefile.am.releasing |   18 ++++--------------\n 2 files changed, 6 insertions(+), 15 deletions(-)\n\ncommit 91183a503e3b7bed11e0149783d3974e26daf623\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Thu Oct 30 08:26:55 2008 -0700\n\n    RELEASING: Mention that a versioned manual is uploaded.\n\n RELEASING |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 5037fa238e820419824773fa2ea475c949e23a8c\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Thu Oct 30 08:23:06 2008 -0700\n\n    Increment version to 1.9.1\n    \n    We're finalyl opening the 1.9 development series in order to land\n    lots of exciting new features that people have been working on.\n\n cairo-version.h |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit d53537e8b5e3a8345983d8a0529cb230fa2886d1\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Thu Oct 30 08:20:59 2008 -0700\n\n    Increment version to 1.8.3 after the 1.8.2 release.\n    \n    Thanks to Chris Wilson (who else?) for the last-minute bug fix.\n\n cairo-version.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit f7c958d97221375fdcbb6c58c3b58c07676b7589\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Wed Oct 29 21:02:04 2008 -0700\n\n    Increment cairo version to 1.8.2.\n    \n    Hurrah! We're finally there.\n\n cairo-version.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 42711a5586cba5db5451ce2400ee5fe655700391\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 30 09:54:47 2008 +0000\n\n    [xlib] Fix _draw_image_surface() with opaque images.\n    \n    If the image was opaque with no alpha channel, we filled the output alpha\n    with 0. Typically, the destination surface for dithering is an RGB window,\n    so this bug went unnoticed. However, test/xlib-expose-event is an example\n    where we generate an intermediate alpha-only pixmap for use as a stencil\n    and this was failing as the mask was left completely transparent. The\n    simple solution is to ensure that for opaque images, the output alpha is\n    set to the maximum permissible value.\n\n src/cairo-xlib-surface.c |    9 ++++++++-\n 1 file changed, 8 insertions(+), 1 deletion(-)\n\ncommit c3940d342ac506055c2ce6b7e9b27f92d8a63999\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 30 09:59:48 2008 +0000\n\n    [xlib] whitespace\n    \n    Tweak the whitespace to lose some unnecessary line wrapping, casts and\n    blanks.\n\n src/cairo-xlib-surface.c |   10 +++++-----\n 1 file changed, 5 insertions(+), 5 deletions(-)\n\ncommit e51648b601de274559800c63575c7f7e0288f596\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Thu Oct 30 04:43:45 2008 -0400\n\n    [test/xlib-expose-event] Save the output image to disk\n\n test/xlib-expose-event.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit f534bd549e1e2283735d1eabb60c015a5949a735\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Wed Oct 29 21:28:56 2008 -0700\n\n    Remove test/twin-ref.png.\n    \n    I missed this in a previous commit, (I think I had used a\n    pattern of twin-*-ref.png which of course didn't match\n    this file).\n\n test/twin-ref.png |  Bin 1836 -> 0 bytes\n 1 file changed, 0 insertions(+), 0 deletions(-)\n\ncommit cf97966c07bc64ff4b169d1d8239407883a26747\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Wed Oct 29 21:01:01 2008 -0700\n\n    NEWS: Finish the entry for the 1.8.2 release.\n    \n    Add some summarizing paragraphs and organize bug-fixes and optimizations\n    into separate sections.\n\n NEWS |   89 ++++++++++++++++++++++++++++++++++++++++++++----------------------\n 1 file changed, 60 insertions(+), 29 deletions(-)\n\ncommit b6741cffef6e86d59fa4809d32de14b9c5e8afbf\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 30 01:15:45 2008 +0000\n\n    [NEWS] Spot another couple of typos.\n    \n    Proof-reading is difficult, even with the squiggly lines.\n\n NEWS |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit d20cc827791e177eb73a9003c6704b7a5bc49f71\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 30 01:06:08 2008 +0000\n\n    [NEWS] Correct a couple of typos.\n    \n    Whilst Carl's not looking, fix a couple of typos -- in particular the one\n    calling me a bug! ;-)\n\n NEWS |   10 +++++-----\n 1 file changed, 5 insertions(+), 5 deletions(-)\n\ncommit 0ceda81dfdfc4adcec28c71be7822caa0627d818\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Wed Oct 29 17:38:36 2008 -0700\n\n    NEWS: Add long list of bugs fixed for 1.8.2.\n    \n    (Still need to add a paragraph or two summarizing the release.)\n\n NEWS |  110 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 110 insertions(+)\n\ncommit e0046aaf417a61da008dc6374871fa3687ba94ab\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Wed Oct 29 16:25:00 2008 -0700\n\n    Remove twin perf case.\n    \n    This performance test relied on the recently-removed ability\n    to select the internal twin-based font family with a name of\n    \"cairo\".\n    \n    Presumably, we'll want to bring this performance case back when\n    some other means of requesting that font face is added.\n\n perf/Makefile.am  |    1 -\n perf/cairo-perf.c |    1 -\n perf/cairo-perf.h |    1 -\n perf/twin.c       |   50 --------------------------------------------------\n 4 files changed, 53 deletions(-)\n\ncommit 292233685534aed712dfd45e8ccf498b792ce496\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Wed Oct 29 16:25:00 2008 -0700\n\n    Remove twin test case.\n    \n    This test relied on the recently-removed ability to select\n    the internal twin-based font family with a name of \"cairo\".\n    \n    Presumably, we'll want to bring this test case back when\n    some other means of requesting that font face is added.\n\n test/.gitignore         |    1 -\n test/Makefile.am        |    6 -----\n test/twin-ps2-ref.png   |  Bin 1167 -> 0 bytes\n test/twin-ps3-ref.png   |  Bin 1167 -> 0 bytes\n test/twin-svg11-ref.png |  Bin 1773 -> 0 bytes\n test/twin-svg12-ref.png |  Bin 1773 -> 0 bytes\n test/twin.c             |   60 -----------------------------------------------\n 7 files changed, 67 deletions(-)\n\ncommit a824d284be23793a5c48b9ae833dcb7b2d5fff80\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Wed Oct 29 16:21:42 2008 -0700\n\n    Remove the ability to select the internal font face with a name of \"cairo\".\n    \n    It's not fair to steal this name from the namespace of family names.\n    There are definitely cairo.ttf files that exist out there, and people\n    may already be using these, (or may use them in the future), with\n    cairo_select_font_face and a family name of \"cairo\".\n    \n    In place of this, we'll want to come up with some other new, and\n    documented API for selecting the internal font face.\n\n src/cairo-font-face.c |    6 ++----\n src/cairoint.h        |    1 -\n 2 files changed, 2 insertions(+), 5 deletions(-)\n\ncommit f039da8d9172a6fb60082901c8dc56c7159ecd24\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Wed Oct 29 16:17:24 2008 -0700\n\n    Add doltcompile and doltlibtool to .gitignore.\n    \n    These generated files were recently added to our build system.\n    We definitely don't want to see them in git-status output.\n\n .gitignore |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 81439b3bc8656b34c13b3cc7b5b6a9f03a3c8c54\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Wed Oct 29 16:15:12 2008 -0700\n\n    Add missing files to CLEANFILES and DISTCLEANFILES.\n    \n    Without these files in these lists, \"make distcheck\" is unhappy.\n\n Makefile.am      |    4 +++-\n test/Makefile.am |    9 +++++++++\n 2 files changed, 12 insertions(+), 1 deletion(-)\n\ncommit dd0416f5d47a946498219616f53abdad81d4fc38\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Tue Oct 28 18:01:09 2008 -0700\n\n    Add recently added reference images to REFERENCE_IMAGES list.\n    \n    This is just part of the make-distcheck routine for me. I know\n    Behdad added a test to check for missing images in the list, but\n    it doesn't seem to be getting run automatically as part of\n    'make test' nor 'make distcheck', (or if it it, then I'm not\n    noticing its output).\n\n test/Makefile.am |    4 ++++\n 1 file changed, 4 insertions(+)\n\ncommit 9cd9644c1d993f86c6eb7bee692fe642d6d280b1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 29 21:56:36 2008 +0000\n\n    [test] Add a pass-through test.\n    \n    Check that colour values are correctly passed through all the backends.\n    Simple test of the most fundamental functionality.\n\n test/.gitignore                 |    1 +\n test/Makefile.am                |    3 ++\n test/pass-through-ref.png       |  Bin 0 -> 221 bytes\n test/pass-through-rgb24-ref.png |  Bin 0 -> 179 bytes\n test/pass-through.c             |   99 +++++++++++++++++++++++++++++++++++++++\n 5 files changed, 103 insertions(+)\n\ncommit cec689eab628b59ee1d69e241c5d336760304ea0\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Tue Oct 28 17:18:34 2008 -0700\n\n    RELEASING: Suggest running 'make distcheck' against Xvfb.\n    \n    This avoids hitting driver-specific bugs in the X server, and is\n    better than doing 'DISPLAY= make distcheck' which simply disables\n    all xlib testing completely.\n\n RELEASING |    5 +++++\n 1 file changed, 5 insertions(+)\n\ncommit 0ca6ba18e398db7ed8f8bca5faa93d48aa3a4878\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Tue Oct 28 17:15:42 2008 -0700\n\n    Add note to test/README on running with Xvfb.\n    \n    This X server has been tested to run through the test suite with\n    no unexpected failures, and it avoids hitting any X-driver-specific\n    bugs.\n\n test/README |   17 +++++++++++++++++\n 1 file changed, 17 insertions(+)\n\ncommit eed67717649c343e42ce102a4d78a245dba48925\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Tue Oct 28 17:12:15 2008 -0700\n\n    Disable the svg12 target in boilerplate.\n    \n    This target was added to the boilerplate during 1.8.1. It currently\n    shows many failures in the test suite. These failures likely fall\n    into three different classes:\n    \n    \t* Tests needing new svg12-specific reference images\n    \n    \t* Tests exercising bugs in librsvg\n    \n    \t* Tests exercising existing cairo bugs\n    \n    We haven't gone through the effort to separate these, but even for\n    the tests that are exercising actual cairo bugs, these are likely\n    bugs that existed in the cairo 1.8.0 release and not regressions.\n    \n    Because of that, in this commit I'm conditionally disabling the\n    testing of the svg12 target. As soon as we increment the cairo\n    version to 1.9.0 or higher, this target will get re-enabled\n    automatically and we can begin the work to separate the tests as\n    described above and also fix the bugs.\n\n boilerplate/cairo-boilerplate.c |    5 +++++\n 1 file changed, 5 insertions(+)\n\ncommit a94928ddfa066f6e6824775b9d0b6008f3fcbf26\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Tue Oct 28 15:55:38 2008 -0700\n\n    Add svg-specific reference images for the twin test.\n    \n    A bit annoying that I have to add the same image as both -svg11\n    and -svg12 but that's all the support we have in the current\n    test suite. I suppose I could avoid doing that by figuring out\n    why this test case cannot successfully roundtrip through librsvg\n    and back through cairo.\n\n test/twin-svg11-ref.png |  Bin 0 -> 1773 bytes\n test/twin-svg12-ref.png |  Bin 0 -> 1773 bytes\n 2 files changed, 0 insertions(+), 0 deletions(-)\n\ncommit 53554ea8892893098b29a27a23c069f0ee584a06\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Tue Oct 28 15:50:44 2008 -0700\n\n    Add ps2-specific reference images for trap-clip test.\n    \n    These are quite similar to the existing ps3-specific reference images.\n    I definitely don't see any reason why this output should be considered\n    a failure.\n\n test/trap-clip-ps2-argb32-ref.png |  Bin 0 -> 5690 bytes\n test/trap-clip-ps2-rgb24-ref.png  |  Bin 0 -> 5617 bytes\n 2 files changed, 0 insertions(+), 0 deletions(-)\n\ncommit 10fd16a05d8549753179ab5cca855539fb7dec94\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Tue Oct 28 15:41:40 2008 -0700\n\n    Mark user-font-mask as XFAIL.\n    \n    This test is expected to fail due to a couple of known bugs. Chris\n    has fixes for both bugs, but is holding off on them until after 1.8.2\n    to prevent introducing any possible new bugs with his fixes.\n\n test/Makefile.am |   10 +++++++++-\n 1 file changed, 9 insertions(+), 1 deletion(-)\n\ncommit 655546243f57ae2a5c1813bd45994b18061f1c74\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Tue Oct 28 15:35:35 2008 -0700\n\n    Rename user-font-image test to user-font-mask.\n    \n    Otherwise the reference image (user-font-image-ref.png) gets\n    interpreted as an image-specific reference image for the\n    user-font test case resulting in a bogus failure.\n\n test/Makefile.am             |    4 +-\n test/user-font-image-ref.png |  Bin 6011 -> 0 bytes\n test/user-font-image.c       |  254 ------------------------------------------\n test/user-font-mask-ref.png  |  Bin 0 -> 6011 bytes\n test/user-font-mask.c        |  254 ++++++++++++++++++++++++++++++++++++++++++\n 5 files changed, 256 insertions(+), 256 deletions(-)\n\ncommit 42d2d1b6d3b187b5dbdb630783d7c9bf90c66fb2\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Tue Oct 28 12:48:03 2008 -0700\n\n    Correct NEWS to say 'release' instead of 'snapshot' for 1.8.0\n    \n    A copy-and-paste bug strikes again.\n\n NEWS |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 1327ec232cfca675647fb03876487c92fb638354\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 28 10:00:38 2008 +0000\n\n    [image] Remove invalid assert.\n    \n    The assert can fail for an error surface.\n    \n    TODO: Decide what values should be returned from getters for error\n    surfaces.\n\n src/cairo-image-surface.c |    2 --\n 1 file changed, 2 deletions(-)\n\ncommit 9481d999df8d399543bdbb45b85bd24b1725bece\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 28 09:59:01 2008 +0000\n\n    [image] Check create_for_data() to ensure a valid minimum stride.\n    \n    Double check that the user is not being silly by passing in a stride that\n    is too small for the width. evince/poppler is one such example...\n\n src/cairo-image-surface.c |   12 ++++++++++++\n 1 file changed, 12 insertions(+)\n\ncommit 88f628b3972819c0f6ce8e5f06d0f7e6abb9d661\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 28 09:11:23 2008 +0000\n\n    [perf] Fix rectangular case of unaligned-clip.\n    \n    Janoos spotted that the unaligned clip actually degenerated to an empty\n    clip due to a typo when constructing the second rectangle. Simply use a\n    cairo_rectangle() instead.\n\n perf/unaligned-clip.c |    9 +++------\n 1 file changed, 3 insertions(+), 6 deletions(-)\n\ncommit 1522805f39c505ff05231e67de5a6e6686081d46\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Mon Oct 27 20:57:56 2008 -0400\n\n    [Makefile.am.releasing] Fix typo\n\n build/Makefile.am.releasing |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 3386794d96d2b1616af9db5b7df1fc5c7a5796a7\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Mon Oct 27 14:09:19 2008 -0700\n\n    Add creation of a versioned manual to the release-publish target.\n    \n    This arranges so that a versioned manual will be available of the form:\n    \n    \thttp://cairographics.org/manual-X.Y.Z\n    \n    for all future releases and snapshots. We're going through the process\n    of manually doing all former releases, such as:\n    \n    \thttp://cairographics.org/manual-1.2.0/\n    \n    which the LSB folks wanted to reference.\n\n build/Makefile.am.releasing |   27 ++++++++++++++++++---------\n 1 file changed, 18 insertions(+), 9 deletions(-)\n\ncommit a1a7ec6a056fa36389a48c0f53884ae7e92ebc1a\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Mon Oct 27 23:13:05 2008 +1030\n\n    Change ps to ps3 in test/README\n    \n    The ps target no longer exists.\n\n test/README |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 670d942fe3dafbed5ceca234e760f29f793233cb\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Mon Oct 27 23:04:16 2008 +1030\n\n    Change user-font-image test to use a pattern\n    \n    This can be used to expose a bug in _cairo_rectangle_intersect() by\n    changing:\n    \n      fixed_scale = 1024 to 1 in cairo-user-font.c\n    \n    and\n    \n    cairo_matrix_translate (&matrix, 0, -8) to (&matrix, 0, -9) in\n    user-font-image.c\n    \n    This will cause cairo_text_extents (cr, text, &extents) in\n    user-font-image.c to return a height of 8388683.\n\n test/user-font-image-ref.png |  Bin 5502 -> 6011 bytes\n test/user-font-image.c       |   13 +++++++++++--\n 2 files changed, 11 insertions(+), 2 deletions(-)\n\ncommit cdacf55e1b16a6982c681fab212405fc4af4f1db\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Mon Oct 27 22:07:04 2008 +1030\n\n    Add user-font-image test\n    \n    Draws bitmap glyphs using cairo_mask(). This test exposes a bug in the\n    calculation of the glyph extents.\n\n test/Makefile.am             |    2 +\n test/user-font-image-ref.png |  Bin 0 -> 5502 bytes\n test/user-font-image.c       |  245 ++++++++++++++++++++++++++++++++++++++++++\n 3 files changed, 247 insertions(+)\n\ncommit 22e2dac819de3c082424ebf3ce8f64c9c4797e8a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Oct 26 10:21:37 2008 +0000\n\n    [stroke] Ensure we record the first face for a dashed path.\n    \n    If the first face was outside the bounds then we skipped it, and so a\n    close would incorrectly connect to the first visible face.\n\n src/cairo-path-stroke.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 64fb3290f00bafc4a10e6432226f669a51fa0bc6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Oct 26 09:54:03 2008 +0000\n\n    [stroke] _cairo_stroker_line_to_dashed() whitespace\n    \n    A couple of comment spelling mistakes and rearrange whitespace to more\n    closely match CODING_STYLE.\n\n src/cairo-path-stroke.c |   57 ++++++++++++++++++++++++++++++++---------------\n 1 file changed, 39 insertions(+), 18 deletions(-)\n\ncommit 88935947d11762c91e282fb129c493afc6f2f1a6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Oct 26 08:19:31 2008 +0000\n\n    [test] Add leaky-dashed-stroke\n    \n    A test case for a leak whilst closing a dashed stroke extracted from the\n    report by Jeff Muizelaar who found the artifact whilst looking at\n      firefox http://people.mozilla.com/~jmuizelaar/BerlinDistricts-check.svg\n\n test/.gitignore                      |    1 +\n test/Makefile.am                     |    4 +\n test/leaky-dashed-stroke-ps2-ref.png |  Bin 0 -> 5511 bytes\n test/leaky-dashed-stroke-ps3-ref.png |  Bin 0 -> 5511 bytes\n test/leaky-dashed-stroke-ref.png     |  Bin 0 -> 9214 bytes\n test/leaky-dashed-stroke.c           |  174 ++++++++++++++++++++++++++++++++++\n 6 files changed, 179 insertions(+)\n\ncommit 195fd27cc64c7aaf18a6d48ccd9d94548331fd4d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 22 22:04:53 2008 +0100\n\n    [build] Use AC_LINK_IFELSE for testing linker flags.\n    \n    Richard Hult reported that -Wl,--allow-shlib-undefined was incorrectly\n    being identified as supported by gcc under Mac OS/X:\n    \n    configure:25103: checking whether gcc supports -Wl,--allow-shlib-undefined\n    configure:25117: gcc -c -Werror -Wl,--allow-shlib-undefined  conftest.c\n    >&5\n    i686-apple-darwin9-gcc-4.0.1: --allow-shlib-undefined: linker input file\n    unused because linking not done\n    \n    So instead of just checking whether the compiler accepts the flag, check\n    that we can actually link a dummy file.\n\n build/aclocal.cairo.m4      |   20 ++++++++++++++++++++\n build/configure.ac.warnings |    2 +-\n 2 files changed, 21 insertions(+), 1 deletion(-)\n\ncommit d692284ab8f90d7402621f1a07aaddcf11d87ef5\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Thu Oct 23 01:45:35 2008 -0400\n\n    [test/user-font] Exercise glyph 0\n    \n    Previously there was a bug in cairo and/or poppler causing glyph 0 of\n    user fonts to not show up.  This is fixed now, so we exercise glyph 0.\n\n test/user-font.c |    7 +++----\n 1 file changed, 3 insertions(+), 4 deletions(-)\n\ncommit e6219f7116311d999054dc31df081aa66a0cd2d3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 22 17:53:05 2008 +0100\n\n    [win32] Correct error paths in text_to_glyphs().\n    \n    Carl spotted that 1db894 introduced an error into text_to_glyphs() such\n    that following an allocation error the code would attempt to thaw an\n    unfrozen glyph cache, leading to an attempt to unlock an unlocked mutex -\n    which causes a deadlock under win32.\n\n src/cairo-win32-font.c |    7 ++++---\n 1 file changed, 4 insertions(+), 3 deletions(-)\n\ncommit 09651a1c1a4856607423e9b06c1f7c397ba4f304\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 8 22:39:48 2008 +0100\n\n    Twin perf case\n\n perf/Makefile.am  |    3 ++-\n perf/cairo-perf.c |    1 +\n perf/cairo-perf.h |    1 +\n perf/twin.c       |   50 ++++++++++++++++++++++++++++++++++++++++++++++++++\n 4 files changed, 54 insertions(+), 1 deletion(-)\n\ncommit 954ebacb71071c53c4e4092b469417f01478bc2d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 22 15:43:56 2008 +0100\n\n    Map toy font face to implementation.\n    \n    Quartz fonts and user fonts use an indirect font face when creating a\n    scaled font for the toy font face. This means that they insert a scaled\n    font into the font map that has a different font face to the one that is\n    initially searched upon. The result is that when we try to create an\n    identical scaled font, we fail to find the existing scaled font and\n    attempt to insert a duplicate into the hash table - which triggers an\n    assert.\n    \n    In order to avoid creating duplicate fonts, we add a new method to the\n    font backends that allows cairo_scaled_font_create() to peek at the\n    font_face that will be used to actually implement the scaled font\n    constructor - thus we are able to use the correct font_face as part of the\n    hash key.\n\n src/cairo-font-face.c   |   34 +++++++++++++++++++++++++++++\n src/cairo-ft-font.c     |    2 ++\n src/cairo-quartz-font.c |   55 +++++++++++++++++++++++++++++++++++++----------\n src/cairo-scaled-font.c |   11 +++++++++-\n src/cairo-user-font.c   |   37 +++++++++++++++++++++++--------\n src/cairo-win32-font.c  |    2 ++\n src/cairoint.h          |    8 +++++++\n 7 files changed, 128 insertions(+), 21 deletions(-)\n\ncommit 5e4a1cb0b830f069d99c9512563c82ad628587e3\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Wed Oct 22 21:36:42 2008 +1030\n\n    Don't add a notdef glyph to Type 3 font subsets\n    \n    This allows user-fonts to use glyph 0 when embedding in PS/PDF.\n    According to ISO32000 Type 3 fonts do not require a notdef glyph.\n\n src/cairo-pdf-surface.c                 |   19 ++++------\n src/cairo-ps-surface.c                  |   21 ++++-------\n src/cairo-scaled-font-subsets.c         |   59 ++++++++++++++++++-------------\n src/cairo-type3-glyph-surface-private.h |    6 ----\n src/cairo-type3-glyph-surface.c         |   16 ---------\n 5 files changed, 48 insertions(+), 73 deletions(-)\n\ncommit 170686d4b0ed913a1a175f3f354ec5796814b416\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 22 01:01:06 2008 +0100\n\n    [cairoint] Remove the duplicate prototype.\n    \n    In the previous commit I added comments and a duplicate prototype. Remove\n    the duplicate - but keep the comments.\n\n src/cairoint.h |    3 ---\n 1 file changed, 3 deletions(-)\n\ncommit 1db8949f2baf1e620e1d5ef73a66de211420bd0a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 21 22:48:17 2008 +0100\n\n    Ensure that the scaled font is frozen for the lifetime of the scaled glyph.\n    \n    After discussing the scaled font locking with Behdad, it transpired that it\n    is not sufficient for a font to be locked for the lifetime of a scaled glyph,\n    but that the scaled font's glyph cache must be frozen for the glyph'\n    lifetime.  If the cache is not frozen, then there is a possibility that the\n    glyph may be evicted before the reference goes out of scope i.e. the glyph\n    becomes invalid whilst we are trying to use it.\n    \n    Since the freezing of the cache is the stronger barrier, we remove the\n    locking/unlocking of the mutex from the backends and instead move the\n    mutex acquisition into the freeze/thaw routines. Then update the rule on\n    acquiring glyphs to enforce that the cache is frozen and review the usage\n    of freeze/thaw by all the backends to ensure that the cache is frozen for\n    the lifetime of the glyph.\n\n src/cairo-directfb-surface.c    |    4 +-\n src/cairo-glitz-surface.c       |    2 +-\n src/cairo-gstate.c              |    4 -\n src/cairo-meta-surface.c        |    2 -\n src/cairo-mutex-impl-private.h  |    3 +-\n src/cairo-mutex-type-private.h  |    3 +\n src/cairo-paginated-surface.c   |    2 -\n src/cairo-pdf-surface.c         |    2 -\n src/cairo-scaled-font-subsets.c |   30 +++---\n src/cairo-scaled-font.c         |   81 ++++++++++-----\n src/cairo-surface-fallback.c    |    1 +\n src/cairo-surface.c             |    4 -\n src/cairo-svg-surface.c         |    4 +-\n src/cairo-type1-fallback.c      |    9 +-\n src/cairo-type3-glyph-surface.c |   18 ++--\n src/cairo-user-font.c           |    1 -\n src/cairo-win32-font.c          |   12 ++-\n src/cairo-xcb-surface.c         |  216 +++++++++++++++++++++++----------------\n src/cairo-xlib-surface.c        |   57 ++++++-----\n src/cairoint.h                  |    4 +\n src/test-meta-surface.c         |   25 +----\n src/test-paginated-surface.c    |   25 +----\n 22 files changed, 280 insertions(+), 229 deletions(-)\n\ncommit b2cbbceb4ca57816a498c2c1e676b19182c34e12\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 21 19:44:42 2008 +0100\n\n    [test/meta-surface-pattern] Propagate errors.\n    \n    Use cairo_get_target() to propagate any errors from the secondary context.\n\n test/meta-surface-pattern.c |    5 ++---\n 1 file changed, 2 insertions(+), 3 deletions(-)\n\ncommit 9d4262ebe07bacacd6e743dea616b37ac51eac01\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Tue Oct 21 17:44:47 2008 -0400\n\n    [build] Use dolt\n    \n    Dolt is a hack to speed up libtool-based build systems:\n    \n    \thttp://dolt.freedesktop.org/\n    \n    It's completely transparent to the user.  Brings make time\n    of cairo from 70s down to 20s.  Yay!\n\n build/aclocal.dolt.m4 |  177 +++++++++++++++++++++++++++++++++++++++++++++++++\n configure.ac          |    1 +\n 2 files changed, 178 insertions(+)\n\ncommit 5a822046cc66d8405618370c1071433016969020\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 21 11:22:48 2008 +0100\n\n    [test/xlib-expose-event] Propagate errors.\n    \n    Use cairo_get_target() to propagate errors from secondary contexts.\n\n test/xlib-expose-event.c |   10 +++++++---\n 1 file changed, 7 insertions(+), 3 deletions(-)\n\ncommit 21223cc12ca00c52c0b39dc60db410f29e4e76c9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 21 11:29:12 2008 +0100\n\n    [test/unbounded-operator] Propagate errors.\n    \n    Use cairo_get_target() to propagate errors from secondary contexts.\n\n test/unbounded-operator.c |    6 ++----\n 1 file changed, 2 insertions(+), 4 deletions(-)\n\ncommit 4c8de6d99d337338d6fd57134247515f9815b5e5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 21 11:21:37 2008 +0100\n\n    [test/surface-pattern-scale-up] Propagate errors.\n    \n    Use cairo_get_target() to propagate errors from the secondary context.\n\n test/surface-pattern-scale-up.c |    7 ++++---\n 1 file changed, 4 insertions(+), 3 deletions(-)\n\ncommit e8de7d1c3605fa6d89640fb4e0631c07e5366348\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 21 11:20:54 2008 +0100\n\n    [test/surface-pattern-scale-down] Propagate errors.\n    \n    Use cairo_get_target() to propagate errors from the secondary context.\n\n test/surface-pattern-scale-down.c |    7 ++++---\n 1 file changed, 4 insertions(+), 3 deletions(-)\n\ncommit b5551cfce2969358746dadae90cbe1add012e29c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 21 11:19:40 2008 +0100\n\n    [test/rotate-image-surface-paint] Proapgate errors.\n    \n    Use cairo_get_target() to propagate errors from the secondary context.\n\n test/rotate-image-surface-paint.c |    7 ++++---\n 1 file changed, 4 insertions(+), 3 deletions(-)\n\ncommit 6d41ffbbed2ad3bab2b1a58e1e5d9e1570a37926\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 21 11:18:37 2008 +0100\n\n    [test/pixman-rotate] Propagate errors\n    \n    Use cairo_get_target() to propagate errors from the secondary context.\n\n test/pixman-rotate.c |   33 ++++++++++++++++-----------------\n 1 file changed, 16 insertions(+), 17 deletions(-)\n\ncommit 64949b81735ee4e43772224d10031f7edfbc8068\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 21 11:17:13 2008 +0100\n\n    [test/operator-source] Propagate errors.\n    \n    Use cairo_get_target() to propagate errors from the secondary context.\n\n test/operator-source.c |   12 ++++--------\n 1 file changed, 4 insertions(+), 8 deletions(-)\n\ncommit 971f030b7dca7ce24e54d0465900e6984020345e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 21 11:27:17 2008 +0100\n\n    [test/operator-clear] Propagate errors.\n    \n    Use cairo_get_target() to propagate errors from secondary contexts.\n\n test/operator-clear.c |    6 ++----\n 1 file changed, 2 insertions(+), 4 deletions(-)\n\ncommit 9b919b0e91b6c64acbcbfc05c72610188327be67\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 21 11:14:51 2008 +0100\n\n    [test/extend-pad] Propagate errors.\n    \n    Use cairo_get_target() to propagate errors from the secondary context.\n\n test/extend-pad.c |    7 ++++---\n 1 file changed, 4 insertions(+), 3 deletions(-)\n\ncommit 69415b4fc6387acda7498847f8181c802c8b0982\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 21 11:25:38 2008 +0100\n\n    [test/device-offset-scale] Propagate errors\n    \n    Use cairo_get_target() to propagate errors from the secondary contexts.\n\n test/device-offset-scale.c |   14 +++++++-------\n 1 file changed, 7 insertions(+), 7 deletions(-)\n\ncommit 9ab296123ef49259a67e8dc43708023da2759283\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 21 11:14:01 2008 +0100\n\n    [test/device-offset-positive] Propagate errors.\n    \n    Use cairo_get_target() to propagate errors from the secondary context.\n\n test/device-offset-positive.c |   12 +++++-------\n 1 file changed, 5 insertions(+), 7 deletions(-)\n\ncommit 594fa0836f2526e0a7f44fc7184f7f09de7dd41f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 21 11:12:11 2008 +0100\n\n    [test/device-offset] Propagate error.\n    \n    Use cairo_get_target() to propagate errors from the secondary context.\n\n test/device-offset.c |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit 29da47be60b0373ff93769f9f373a20b15a01e0f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 21 10:42:41 2008 +0100\n\n    [ps] Check for an empty font subset.\n    \n    Return early before trying to emit an empty subset into the document -\n    avoids a potential use of an uninitialised status variable.\n\n src/cairo-ps-surface.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit fd1f3c27e093b1f51f0c1a381cc02cbf8f9889d7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 21 09:17:56 2008 +0100\n\n    [configure] Check for atomic xchg.\n    \n    Bug 18140 identifies a case where we have an atomic increment, but not an\n    atomic exchange. We need both to implement atomic reference counting, so\n    add a second check to detect whether __sync_val_compare_and_swap\n    generates a non-atomic instruction.\n    \n    Fixes http://bugs.freedesktop.org/show_bug.cgi?id=18140.\n\n build/aclocal.cairo.m4 |    5 ++++-\n 1 file changed, 4 insertions(+), 1 deletion(-)\n\ncommit 71e4f7e3a10e6c9794360473d0114b27b42bcead\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 20 23:54:57 2008 +0100\n\n    Add API documentation for NULL filenames and write_funcs.\n    \n    Mention in the API docs that you can pass a NULL filename to\n    cairo_(pdf|ps|svg)_surface_create in order to construct a queryable\n    surface without generating any temporary files. Similarly when passing a\n    NULL write_func to cairo_pdf_surface_create_for_stream et al.\n\n src/cairo-pdf-surface.c |   10 ++++++++--\n src/cairo-ps-surface.c  |   10 ++++++++--\n src/cairo-svg-surface.c |   10 ++++++++--\n 3 files changed, 24 insertions(+), 6 deletions(-)\n\ncommit 6cb2b29434ffd5e718868d90e31cb050904b3ea7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 20 23:22:16 2008 +0100\n\n    [mutex] s/HOLDS_MUTEX/MUTEX_IS_LOCKED/\n    \n    Behdad prefers the latter to keep a clean namespace.\n\n src/cairo-mutex-impl-private.h |    2 +-\n src/cairo-mutex-type-private.h |    4 ++--\n src/cairo-scaled-font.c        |   18 +++++++++---------\n 3 files changed, 12 insertions(+), 12 deletions(-)\n\ncommit ae9d17c015867002895c8aa4e1c6dd1ef370dd20\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 20 22:31:17 2008 +0100\n\n    [directfb] Unbounded operators are unsupported.\n    \n    Currently the emulation of Porter-Duff operators does not correctly\n    handle the unbounded operators.\n\n src/cairo-directfb-surface.c |   10 ++++++++++\n 1 file changed, 10 insertions(+)\n\ncommit 1f35f31c4ee50dcc2f7c8616b9bbb5c45b4ed707\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 20 22:14:41 2008 +0100\n\n    [directfb] Fallback for SATURATE\n    \n    We're unable to satisfactorily emulate SATURATE using the src/dst blend\n    modes, so fallback. (Might just be a bug in libdirectfb...)\n\n src/cairo-directfb-surface.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit c7951c4a368baaeeadca4e2a18d3ad45225380a0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 20 22:04:58 2008 +0100\n\n    [directfb] Perfom text fallback if emulating clip regions.\n    \n    Fallback if we have a clip that is not a simple region.\n\n src/cairo-directfb-surface.c |   14 ++++++++++++--\n 1 file changed, 12 insertions(+), 2 deletions(-)\n\ncommit 98933fd4b8579b68623a8212015769b058db43f5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 20 20:59:14 2008 +0100\n\n    [directfb] When blitting check if we need the un-premultiplied color.\n    \n    When blitting whether we need to use the premultiplied color is dependent\n    upon the destination surface capabilities.\n\n src/cairo-color.c            |    3 ++\n src/cairo-directfb-surface.c |   75 ++++++++++++++++++++++++++++--------------\n 2 files changed, 54 insertions(+), 24 deletions(-)\n\ncommit 4af8aa5f4d31141a6a4ba914cc860aff5d342d5b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 20 20:15:12 2008 +0100\n\n    [directfb] Apply clip to release_dest_image()\n    \n    We need to respect the current clip when copying the fallback image back to\n    the target surface.\n\n src/cairo-directfb-surface.c |   23 ++++++++++++++---------\n 1 file changed, 14 insertions(+), 9 deletions(-)\n\ncommit 0ba5085ba06fd1c0ff1ebc88111d4573675a2e17\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 20 19:41:20 2008 +0100\n\n    [directfb] Fix OBO in clip.\n    \n    DirectFB seems to use inclusive upper bounds.\n\n src/cairo-directfb-surface.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 2743e84171fd2a548ac37b1fdd3611d319acded0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 20 19:32:21 2008 +0100\n\n    [directfb] Force NEAREST.\n    \n    The current version of DirectFB does not support any filters, so set\n    NEAREST on the source patterns so that we can fully optimize the pattern\n    inside core.\n\n src/cairo-directfb-surface.c |    5 +++++\n 1 file changed, 5 insertions(+)\n\ncommit f1669d31c0064b8ffbc7db2527fed85488fb305c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 20 19:03:33 2008 +0100\n\n    [directfb] Track the empty clip rectangle.\n    \n    A region with no extents means everything should be clipped out, so we\n    need an extra flag to disambiguate when we have 0 clip rectangles.\n\n src/cairo-directfb-surface.c |    6 +++++-\n 1 file changed, 5 insertions(+), 1 deletion(-)\n\ncommit ebe3048f9b74ff949795a807a7076ec756150ede\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 20 18:59:03 2008 +0100\n\n    [directfb] Cap the maximum surface size to use for the font cache.\n    \n    Fallback if we need to create a cache larger than the maximum usable\n    surface.\n\n src/cairo-directfb-surface.c |   10 +++++++---\n 1 file changed, 7 insertions(+), 3 deletions(-)\n\ncommit 6f35c2d13e4cb736634bf446d3b8ee38cc6a6b9b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 20 18:39:45 2008 +0100\n\n    [directfb] Only use the pure BLIT for integer translations.\n    \n    If we have non-integer translation on a source pattern then we need to use\n    STRECTHBLIT (the core takes care to optimize NEAREST patterns to integer\n    translations so that this will only be used when interpolation is\n    required).\n\n src/cairo-directfb-surface.c |   30 +++++++++++++++++++++++-------\n 1 file changed, 23 insertions(+), 7 deletions(-)\n\ncommit 55bb7087b0236fe27980efda829f7b72e047b316\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 20 16:47:41 2008 +0100\n\n    [directfb] Tweak _categorize_operation().\n    \n    Explicitly list the extend modes that are supported/unsupported and\n    immediately check for an unsupported operation.\n\n src/cairo-directfb-surface.c |   37 +++++++++++++++++++++++++------------\n 1 file changed, 25 insertions(+), 12 deletions(-)\n\ncommit edb65213ec975e517165bc3b623f676a12917d0c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 20 16:46:08 2008 +0100\n\n    [directfb] Support ROI cloning.\n    \n    Only clone the ROI in order to efficiently handle large sources.\n\n src/cairo-directfb-surface.c |   11 ++++-------\n 1 file changed, 4 insertions(+), 7 deletions(-)\n\ncommit 4006e49ac1e96a983346f97be97bfd850f247ab0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 20 16:45:06 2008 +0100\n\n    [directfb] Rename backend structure.\n    \n    Use _cairo_directfb_surface_backend for consistency with other backends.\n\n src/cairo-directfb-surface.c |   37 ++++++++++++++++++++++++-------------\n 1 file changed, 24 insertions(+), 13 deletions(-)\n\ncommit 7e31ddbb08a6a7cf1db06c950c3768e54a5f4cfa\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 20 13:04:20 2008 +0100\n\n    [directfb] Whitespace.\n    \n    Trim lots of trailing whitespace and fix up according to CODING_STYLE.\n\n src/cairo-directfb-surface.c | 1478 +++++++++++++++++++++---------------------\n 1 file changed, 733 insertions(+), 745 deletions(-)\n\ncommit d49563280b80dd85275057b6442d2f4ece8d724c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 20 12:49:52 2008 +0100\n\n    [directfb] Simplify return from _directfb_get_operator().\n    \n    Used only as a predicate, so simply return a boolean.\n\n src/cairo-directfb-surface.c |  138 +++++++++++++++++++++---------------------\n 1 file changed, 68 insertions(+), 70 deletions(-)\n\ncommit b17d0ded8cd42d84e97ca2c1fbd4aefedd570b8e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 20 12:48:02 2008 +0100\n\n    [directfb] Use the solid pattern cache.\n    \n    The dfb backend recreated a solid color surface for every colour,\n    completely bypassing the solid pattern cache.\n\n src/cairo-directfb-surface.c |   72 +++++++++++-------------------------------\n 1 file changed, 18 insertions(+), 54 deletions(-)\n\ncommit 786bea48df0dc6d76b2ad00409804a803fe2f4b6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 20 12:19:50 2008 +0100\n\n    [boilerplate/directfb] Create ARGB surfaces on demand.\n    \n    Create an RGB or ARGB surface depending upon the content type of the test\n    target, with the result that the directfb rgb24 target no longer\n    unconditionally fails.\n\n boilerplate/cairo-boilerplate-directfb.c |   23 +++++++++++++----------\n 1 file changed, 13 insertions(+), 10 deletions(-)\n\ncommit 4ba9ccc6ab5926d59696f86193f42df2195d7cda\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 20 23:07:38 2008 +0100\n\n    [configure.ac.analysis] s/safe/_save/\n    \n    Rename the temporary variable in line with the convention used by the rest\n    of the build system.\n\n build/configure.ac.analysis |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit 3a45b07af9743a26305c2576f838b4f3ef83bbb8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 20 10:37:46 2008 +0100\n\n    [perf] Free images for composite-checker\n    \n    Fix memleak of the image surfaces.\n\n perf/composite-checker.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit 86356a9578dc248a755aceb7a04aef67a6c529b3\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 20 17:12:21 2008 +0100\n\n    [test] Add degenerate-dash to XFAIL.\n    \n    PS (ghostscript) interprets the degenerate end-caps quite differently, and\n    perhaps slightly more rationally... Add this to XFAIL, until we have a\n    definitive specification on how we should behave.\n\n test/Makefile.am |    4 ++++\n 1 file changed, 4 insertions(+)\n\ncommit 83d2552e4cafc9f86a8055abdf6caa685ed4922b\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Mon Oct 20 17:59:09 2008 -0400\n\n    Remove CAIRO_BEGIN_DECLS uses that ickle introduced while merging\n\n src/cairo-mutex-impl-private.h |    2 --\n src/cairo-mutex-type-private.h |    2 --\n 2 files changed, 4 deletions(-)\n\ncommit eab37f76b0f26a7b007dd51debf4d4901310c8b0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Oct 19 22:12:18 2008 +0100\n\n    [directfb] Return an error surface on create() failure.\n    \n    Do not return NULL but an NO_MEMORY error surface if we fail to allocate\n    the surface during creation.\n\n src/cairo-directfb-surface.c |   21 ++++++++++-----------\n 1 file changed, 10 insertions(+), 11 deletions(-)\n\ncommit 6a02f53dd191605986b15e4757b16f599fe8de5f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Oct 19 14:21:15 2008 +0100\n\n    [directfb] Simplifiy ADD_TRI\n    \n    Simplify the ADD_TRI macro to make the code more readable.\n\n src/cairo-directfb-surface.c |   30 +++++++++++++-----------------\n 1 file changed, 13 insertions(+), 17 deletions(-)\n\ncommit aba457fe64f12598043b11ae076f0a93fe05eba7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Oct 19 14:03:24 2008 +0100\n\n    [directfb] Add missing error status\n    \n    We jumped to the ERROR path without setting an error status - assume\n    NO_MEMORY.\n\n src/cairo-directfb-surface.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 610451e4a7b079d30a73384a76f0aaab250c2970\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Oct 19 12:45:45 2008 +0100\n\n    [directfb] Correct fixed-to-double conversion.\n    \n    The trapezoid calculations had not been updated after the 16.16->24.8\n    switch. Use _cairo_fixed_to_double() rather than open-coding.\n\n src/cairo-directfb-surface.c |  110 +++++++++++++++++++++---------------------\n 1 file changed, 54 insertions(+), 56 deletions(-)\n\ncommit 8e0950ced8837a35b9dc0254860250f9fa1a9613\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Oct 19 12:11:13 2008 +0100\n\n    [boilerplate/directfb] Gracefully handle failure to create surface.\n    \n    Simply return NULL indicating failure to create the target surface rather\n    than aborting the test (allowing other targets to be tested).\n\n boilerplate/cairo-boilerplate-directfb.c |  230 +++++++++++++++++-------------\n 1 file changed, 130 insertions(+), 100 deletions(-)\n\ncommit 801df1b87a585ebf71e6d3d74b815f3470b81ae9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Oct 19 11:55:20 2008 +0100\n\n    [directfb] Fix error propagation from surface_create()\n    \n    Do not mask fatal errors, but correctly propagate the error status.\n\n src/cairo-directfb-surface.c |  208 +++++++++++++++++++++++-------------------\n 1 file changed, 114 insertions(+), 94 deletions(-)\n\ncommit 476d17fa788fcf173e58b963540c6557f846ceed\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Oct 19 11:35:27 2008 +0100\n\n    [directfb] Compile fix.\n    \n    Fixup compilation after 901f0b.\n\n src/cairo-directfb-surface.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit d72969289db62b38ca024a41c0d8e0df480e7f8c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Oct 19 09:47:33 2008 +0100\n\n    [image] Remove unused variable.\n    \n    Cleanup the compiler warning for the unused status after code shuffling.\n\n src/cairo-image-surface.c |    1 -\n 1 file changed, 1 deletion(-)\n\ncommit f2ff7944264c23cbec856be3e85f240a93184f80\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 16 11:56:19 2008 +0100\n\n    [perf] A crude tool to visualise performance changes across a series.\n    \n    Generate a cairo-perf-diff graph for a series of commits in order to be\n    able to identify significant commits. Still very crude, but minimally\n    functional.\n\n configure.ac                   |    3 +\n perf/.gitignore                |    1 +\n perf/Makefile.am               |   26 +-\n perf/Makefile.win32            |    6 +-\n perf/cairo-perf-diff           |   12 +-\n perf/cairo-perf-diff-files.c   |  458 -------------------------------\n perf/cairo-perf-graph          |  205 ++++++++++++++\n perf/cairo-perf-graph-files.c  |  593 ++++++++++++++++++++++++++++++++++++++++\n perf/cairo-perf-graph-widget.c |  450 ++++++++++++++++++++++++++++++\n perf/cairo-perf-graph.h        |   63 +++++\n perf/cairo-perf-report.c       |  456 ++++++++++++++++++++++++++++++\n perf/cairo-perf.c              |    1 +\n perf/cairo-perf.h              |   61 ++++-\n perf/cairo-stats.h             |    8 -\n 14 files changed, 1865 insertions(+), 478 deletions(-)\n\ncommit 41c8eefc6d432ab213f6f405c3d6346adb7f7931\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 15 22:24:32 2008 +0100\n\n    [output-stream] Protect against NULL write_func.\n    \n    Allow the user to specify a NULL write_func for the output stream so that\n    a dummy surface can be created, for example, for querying target font\n    options or font extents.\n    \n    Currently we do not perform any sanity checks at the user entry point and\n    will generate a mysterious SEGV during cairo_surface_finish() - which may\n    not immediately be obvious that it is due to a NULL write_func.\n\n src/cairo-output-stream.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 84e4a825fffe3d78e95dec3406a86da6a23144c2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 15 22:15:17 2008 +0100\n\n    [output-stream] Accept a NULL filename\n    \n    Principally to support creating a dummy vector surface (i.e.\n    cairo_ps_surface_create (NULL, 1, 1)) that can be used to determine font\n    extents (or target font options) before opening an output file, but also\n    because we currently fail to do any sanity checking at the entry point.\n\n src/cairo-output-stream.c |    3 +++\n 1 file changed, 3 insertions(+)\n\ncommit 52ea38f97b1b90e395c667619770482b10e5672e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Oct 18 00:44:29 2008 +0100\n\n    [meta] Acquire scaled_font mutex for glyph_path().\n    \n    The caller of _cairo_scaled_font_glyph_path() is expected to be holding\n    the scaled_font->mutex.\n\n src/cairo-meta-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 299ea0580a646dc55fd0156f1904fe4b45ec5725\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Oct 18 00:37:38 2008 +0100\n\n    [user-font] Review locks under error conditions.\n    \n    Simplify the error handling by only relinquishing the global\n    scaled_font_map mutex if we successfully insert the placeholder font. The\n    result is that on the error path, there are no changes to global state and\n    thus we can entirely skip the user-font initialisation and\n    re-registration.\n\n src/cairo-scaled-font.c |   44 ++++++++++++++++++++++----------------------\n src/cairo-user-font.c   |   39 +++++++++++++++++++++++----------------\n src/cairoint.h          |    2 +-\n 3 files changed, 46 insertions(+), 39 deletions(-)\n\ncommit c76a8481f372fab8981231b257fdcc69466263d2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Oct 18 00:36:34 2008 +0100\n\n    [analysis] Check for error surfaces.\n    \n    If the target surface is an error surface, ensure that we return the\n    appropriate error surface. Likewise, avoid writing to error surfaces.\n\n src/cairo-analysis-surface.c |   16 +++++++++++++---\n 1 file changed, 13 insertions(+), 3 deletions(-)\n\ncommit 5b28b0b903cb2fdb8a5614659d528bf12488389e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Oct 18 00:35:48 2008 +0100\n\n    [ps] Destroy type3 surface on error.\n    \n    After an error, ensure that the local type3 surface is destroyed.\n\n src/cairo-ps-surface.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 6b17c6da47c42dd04ed2acad723c25b6da41b51c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Oct 18 00:34:17 2008 +0100\n\n    [type3] Acquire scaled_font mutex whilst looking up glyphs.\n    \n    When looking up the glyph in the shared scaled_font glyph cache, the\n    caller is required to have taken the scaled_font->mutex.\n\n src/cairo-type3-glyph-surface.c |   50 +++++++++++++++++++++++----------------\n 1 file changed, 30 insertions(+), 20 deletions(-)\n\ncommit f56cf93181e73b4ba74f25ce14f7ed6c7cf36e83\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 17 22:13:53 2008 +0100\n\n    [user-font] Check for error objects.\n    \n    Check that the user has not passed in an inert error object before any\n    attempts to write to it and return the default values.\n\n src/cairo-user-font.c |   71 ++++++++++++++++++++++++++++++++++++++++---------\n 1 file changed, 59 insertions(+), 12 deletions(-)\n\ncommit 1f9f9d936b296dbe796b1436c7da7fa3462f7d59\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 17 15:39:56 2008 +0100\n\n    [pdf] Acquire scaled_font mutex for show_text_glyphs().\n    \n    We need to be holding the scaled font mutex over a call to draw text\n    glyphs from within an smask group.\n\n src/cairo-pdf-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 12fb8c9b7c808ab20bee466aa28ee368559fd902\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 17 15:33:07 2008 +0100\n\n    [type1] Acquire scaled_font mutex.\n    \n    In order to perform glyph lookups we need to be holding the mutex for the\n    scaled_font.\n\n src/cairo-type1-fallback.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit ca5f868a73b35eda737ae6596efff91f82eeea75\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 17 15:26:20 2008 +0100\n\n    [scaled-font] Zero font extents for an error surface.\n    \n    Do not attempt to read from the error object, but just return zero\n    extents.\n\n src/cairo-scaled-font.c |   13 ++++++++++++-\n 1 file changed, 12 insertions(+), 1 deletion(-)\n\ncommit 1ddf0b2a5c1f3d20b9a91acf7aae021f6b738485\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 17 10:35:38 2008 +0100\n\n    [surface] Reorder asserts to make no assumptions about error objects.\n    \n    If the surface is in error, then we cannot assume anything about the\n    validity of its contents other than the error status (and reference\n    count). This is for the cases were the surface is replaced by a nil\n    surface, and in future where the error surface may be replaced by a tiny\n    error object.\n\n src/cairo-surface.c |   94 +++++++++++++++++++++++++--------------------------\n 1 file changed, 47 insertions(+), 47 deletions(-)\n\ncommit 644e78ca4e6f72499fcf763acd53fa7235b0226d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 16 20:34:13 2008 +0100\n\n    [svg] Lock the scaled_font whilst emitting glyphs.\n    \n    We need to hold the scaled_font mutex whilst looking upon glyphs so lock\n    the font whilst iterating over the font subset.\n\n src/cairo-svg-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 4587e9e4f5c46656108b05f7a4841f78df14de26\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 16 19:11:09 2008 +0100\n\n    [scaled-font-subsets] Add locking to unscaled font.\n    \n    During map_glyph() we are passed a locked scaled_font for which we are\n    asked to add a glyph from that font into the active subsets for the\n    surface. This means that we eventually call scaled_glyph_lookup() to load\n    the glyph. But first, we attempt to find an existing an existing sub_font\n    for glyph, creating a new sub_font as necessary (possibly using an\n    entirely different unhinted scaled font). So before accessing the glyph\n    cache we need to make sure that we are holding the appropriate mutexes.\n\n src/cairo-scaled-font-subsets.c |   23 +++++++++++++++++------\n 1 file changed, 17 insertions(+), 6 deletions(-)\n\ncommit d3a6651237a276c410885578c41fb505f83372ed\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 16 14:37:42 2008 +0100\n\n    [xlib] Set return code after failing to allocate glyph surface.\n    \n    Although we checked for an allocation error, we missed propagating the\n    status to the return error code.\n\n src/cairo-xlib-surface.c |    8 +++++---\n 1 file changed, 5 insertions(+), 3 deletions(-)\n\ncommit bfc3a72cff1a3f9641dae7c9f121598a14eb9a5a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 16 14:06:03 2008 +0100\n\n    [gstate] Propagate error from clip.\n    \n    During clip transformation we query the clip extents which can trigger a\n    fatal error. Check and propagate.\n\n src/cairo-gstate.c |   33 +++++++++++++++++++++++----------\n 1 file changed, 23 insertions(+), 10 deletions(-)\n\ncommit 7975cf3f2c0bc28b8b3c916d5ba725abb38b300d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 16 13:21:28 2008 +0100\n\n    [paginated] Free local reference to target on error path.\n    \n    On the error path we must destroy the local reference to the target\n    surface.\n\n src/cairo-paginated-surface.c |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit 4662204a2a02d50e674f121d82bbb4fe1b8f1436\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 16 12:44:45 2008 +0100\n\n    [test-paginated] Fix double free of surface along error path.\n    \n    The ownership of the surface is transferred to the paginated surface, so\n    we do not need to destroy it ourselves along the error path.\n\n src/test-paginated-surface.c |   16 +++++++++-------\n 1 file changed, 9 insertions(+), 7 deletions(-)\n\ncommit bf3202fcfd281be3fa62c2d6719377a8f2a0dec4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 16 12:33:22 2008 +0100\n\n    [xlib] Fix double free of Pixmap along error path.\n    \n    If the paint fails then we attempt to free the Pixmap ourselves and via\n    the cairo_surface_destroy (as it also believes that it owns the Pixmap).\n\n src/cairo-xlib-surface.c |   16 ++++++++++------\n 1 file changed, 10 insertions(+), 6 deletions(-)\n\ncommit 901f0b540c764e131dd9745def329308af61b3d5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 16 12:19:09 2008 +0100\n\n    Review backend->create_similar()\n    \n    Avoid masking fatal errors by enforcing any error to be returned via an\n    error surface, so that the NULL return only means UNSUPPORTED. A few\n    backends called their create_similar() directly, without correctly checking\n    for a potential NULL (for example, the directfb backend was a timebomb,\n    since it used NULL to indicate out-of-memory).\n\n src/cairo-directfb-surface.c |   18 ++++++++++--------\n src/cairo-glitz-surface.c    |   17 +++++++++++------\n src/cairo-quartz-surface.c   |    4 ++--\n src/cairo-surface.c          |    8 ++------\n src/cairo-win32-surface.c    |   16 ++++++++++++----\n src/cairo-xcb-surface.c      |    2 ++\n 6 files changed, 39 insertions(+), 26 deletions(-)\n\ncommit 9529699028a5c7a3b0f81f945d25f26285247a11\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Oct 19 09:35:07 2008 +0100\n\n    [test/user-font-rescale] Check and propagate errors.\n    \n    We need to check the error status on set_user_data() to be sure that the\n    data has been set and error otherwise.\n\n test/user-font-rescale.c |   63 +++++++++++++++++++++++++++++-----------------\n 1 file changed, 40 insertions(+), 23 deletions(-)\n\ncommit 683de2fea2d8cdeea9759cbf3ab7492d634e7af2\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Oct 18 00:01:39 2008 +0100\n\n    [test/user-font[-proxy]] Check for error from set_user_data().\n    \n    Check in case we fail to attach our user_data.\n\n test/user-font-proxy.c |   69 +++++++++++++++++++++++++++---------------------\n test/user-font.c       |   24 +++++++++++++----\n 2 files changed, 58 insertions(+), 35 deletions(-)\n\ncommit 198392990082e01443bbda5c0cbe6dc8bf090baf\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 17 22:14:49 2008 +0100\n\n    [test/bitmap] Leak on error path.\n    \n    Free the FcPattern on error.\n\n test/bitmap-font.c |    8 ++++++++\n 1 file changed, 8 insertions(+)\n\ncommit 0409be426cb7f67974346a93213dd4675b59776c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 16 14:26:15 2008 +0100\n\n    [test/font-matrix-translation] Check for OOM\n    \n    First check that querying the extents did not trigger NO_MEMORY.\n\n test/font-matrix-translation.c |    5 +++++\n 1 file changed, 5 insertions(+)\n\ncommit 21360bf6748b30cf58d54561e40a1aa711d8d7af\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 17 20:44:51 2008 +0100\n\n    [test/source-surface-big-scaled-down] Propagate error.\n    \n    Propagate error to source.\n\n test/surface-pattern-big-scale-down.c |   43 +++++++++++++++++++--------------\n 1 file changed, 25 insertions(+), 18 deletions(-)\n\ncommit 794160c35baf39593942ba71b45e4e75d2a87103\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 17 20:37:43 2008 +0100\n\n    [test/surface-pattern] Propagate error.\n    \n    Use cairo_get_target() to propagate error from secondary context.\n\n test/surface-pattern.c |    7 ++++---\n 1 file changed, 4 insertions(+), 3 deletions(-)\n\ncommit 0f48cce8d90cf95afcf86d71a932ab4e504b909b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 17 20:31:57 2008 +0100\n\n    [test/source-clip-scale] Propagate error.\n    \n    Use cairo_get_target() to propagate error from secondary context.\n\n test/source-clip-scale.c |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit 6cdbd132ceba159bb7e3ac5612aa79293b21e95a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 17 20:22:49 2008 +0100\n\n    [test/source-clip] Propagate error.\n    \n    Use cairo_get_target() to propagate error from the secondary context.\n\n test/source-clip.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit f86f233b3e49c3f401b2fa02987b2193485e8be5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 17 20:14:06 2008 +0100\n\n    [test/smask] Propagate error.\n    \n    Use cairo_get_target() to propagate errors from the secondary context.\n\n test/smask.c |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit 4490a6c363a8745ba89bfa890519a570d098086e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 17 19:15:17 2008 +0100\n\n    [test/stroke-image] Propagate error\n    \n    Use cairo_get_target() to propagate errors from the secondary context.\n\n test/stroke-image.c |   19 +++++++++++--------\n 1 file changed, 11 insertions(+), 8 deletions(-)\n\ncommit 6e6d7e52a3c16787633e5059ae36f2fb0d03148a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 17 19:02:31 2008 +0100\n\n    [test/mask] Propagate error from secondary context.\n    \n    Reset the source every time so that the error is propagate from the\n    secondary context using cairo_get_target().\n\n test/mask.c |    6 +-----\n 1 file changed, 1 insertion(+), 5 deletions(-)\n\ncommit a56d4530d6149e2c4fc884a5cfeede2d6ff6d3b6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 17 15:54:21 2008 +0100\n\n    [test/smask-text] Propagate error.\n    \n    Use cairo_get_target() to propagate error from the secondary context.\n\n test/smask-text.c |   12 ++++++------\n 1 file changed, 6 insertions(+), 6 deletions(-)\n\ncommit b1e884cd89ab2b83d3b8e072414e4e3f63e3a023\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 17 15:52:55 2008 +0100\n\n    [test/smask-stroke] Propagate error.\n    \n    Use cairo_get_target() to propagate the error from the secondary context.\n\n test/smask-stroke.c |   13 ++++++-------\n 1 file changed, 6 insertions(+), 7 deletions(-)\n\ncommit 546fbc2c0cf87abd627477056bf19063c5aa001a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 17 15:50:25 2008 +0100\n\n    [test/smask-paint] Propagate error.\n    \n    Use cairo_get_target() to propagate errors from the secondary context.\n\n test/smask-paint.c |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit 8bd69132827fa539d9dfb65bd00e00c079827360\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 17 15:49:02 2008 +0100\n\n    [test/smask-mask] Propagate error.\n    \n    Use cairo_get_target() to propagate errors from the secondary contexts.\n\n test/smask-mask.c |   46 ++++++++++++++++++++++------------------------\n 1 file changed, 22 insertions(+), 24 deletions(-)\n\ncommit 9c0fe6c61e92044e8599f49e75d38edcdd6be960\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 17 15:45:07 2008 +0100\n\n    [test/smask-image-mask] Propagate error.\n    \n    Use cairo_get_target() to propagate any error status from the secondary\n    context.\n\n test/smask-image-mask.c |   12 ++++++------\n 1 file changed, 6 insertions(+), 6 deletions(-)\n\ncommit 373d6c76b65e826f81873b51461bdf3c30024c06\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 17 15:43:26 2008 +0100\n\n    [test/smask-fill] Propagate error status.\n    \n    Use cairo_get_target() to propagate the error from the secondary context.\n\n test/smask-fill.c |   13 ++++++-------\n 1 file changed, 6 insertions(+), 7 deletions(-)\n\ncommit bb05beaab626d2fca6d219bfd8148dde71073b39\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 17 15:27:11 2008 +0100\n\n    [test/show-glyphs-many] Check for NO_MEMORY\n    \n    As we do a manual status check, we need to perform a full check.\n\n test/show-glyphs-many.c |   11 ++++++-----\n 1 file changed, 6 insertions(+), 5 deletions(-)\n\ncommit c0a4ef76e17dfd43d248c13b7f0665da9b847316\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 17 14:57:42 2008 +0100\n\n    [test/composite-integer-translate-over-repeat] Propagate error.\n    \n    Use cairo_get_target() to propagate any errors from the secondary context.\n\n test/composite-integer-translate-over-repeat.c |    7 ++++---\n 1 file changed, 4 insertions(+), 3 deletions(-)\n\ncommit 4a9e0f0e5ba17a322bbf0f38b2fb418211571d48\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 16 16:50:32 2008 +0100\n\n    [test/mask] Propagate error from secondary context.\n    \n    Use cairo_get_target() to infect the primary context with any errors\n    raised whilst drawing the mask.\n\n test/mask.c |    6 ++----\n 1 file changed, 2 insertions(+), 4 deletions(-)\n\ncommit eaec1caa94ac871eb881ac354c4442ddd2a308ea\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 16 16:20:28 2008 +0100\n\n    [test/ft-text-*] Check for errors from fontconfig.\n    \n    If a match cannot be found, or if any other error occured, then fontconfig\n    will return NULL. Check and propagate.\n\n test/ft-text-antialias-none.c        |   31 ++++++++++++++++++++++++++-----\n test/ft-text-vertical-layout-type1.c |   31 ++++++++++++++++++++++++++-----\n test/ft-text-vertical-layout-type3.c |   31 ++++++++++++++++++++++++++-----\n 3 files changed, 78 insertions(+), 15 deletions(-)\n\ncommit 336eddfdbb31865e3669ceb775089c63ce1db27f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 16 17:19:12 2008 +0100\n\n    [test/get-clip] Check the status on the secondary context.\n    \n    As we solely use a secondary context, we must manually report NO_MEMORY\n    errors whilst running under memfault.\n\n test/cairo-test.c |   14 +++++++-\n test/cairo-test.h |    4 +++\n test/get-clip.c   |   98 +++++++++++++++++++++++++++--------------------------\n 3 files changed, 67 insertions(+), 49 deletions(-)\n\ncommit d48f9340514c258cfece1b72d2f7e3f7b2d3c7b1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 16 14:05:14 2008 +0100\n\n    [test/clip-operator] Propagate error from secondary context.\n    \n    Use the cairo_get_target() to propagate any errors from the secondary\n    context.\n\n test/clip-operator.c |    6 ++----\n 1 file changed, 2 insertions(+), 4 deletions(-)\n\ncommit d11014386f739f43ec5f290714d7c51cc638f172\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 5 13:37:07 2007 +0100\n\n    Add support for lockdep.\n    \n    lockdep is a valgrind skin which performs pthread locking correctness\n    validation. In particular it allows one to write assert(HOLDS_LOCK(mutex))\n    which both documents the preconditions for a function and enforces them\n    when the program is run under lockdep.\n    \n    As an aide to lockdep (as it works by intercepting the pthread functions),\n    all the mutexes should be initialised and destroyed using\n    pthread_mutex_init() and pthread_mutex_destroy() rather than using static\n    initializers and no-ops.\n\n src/cairo-mutex-impl-private.h |   14 ++++++++++++++\n src/cairo-mutex-type-private.h |    6 +++++-\n src/cairo-scaled-font.c        |   13 +++++++++++++\n 3 files changed, 32 insertions(+), 1 deletion(-)\n\ncommit bccfdf7d93c2a92a342127fc212770f4053cb2cf\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 16 13:47:27 2008 +0100\n\n    [test] Add support for memfault.\n    \n    Add the core support to cairo-test for running the test-suite under a\n    malloc fault injector. This commit contains the adjustments to\n    cairo_test_run() to repeat the test if it detects a failure due to fault\n    injection and complains if it detects unreported faults or memory leaks.\n\n build/configure.ac.analysis |   17 +++\n test/cairo-test.c           |  271 ++++++++++++++++++++++++++++++++++---------\n test/cairo-test.h           |   10 +-\n 3 files changed, 239 insertions(+), 59 deletions(-)\n\ncommit 974fabfe059f9744116d20fd9f8b59f1b8c34b70\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 17 18:52:51 2008 +0100\n\n    [ft] Add more comments about FT_Face lifetime issues.\n    \n    Currently we only have an example of how to call FT_Done after the last\n    reference to the FT cairo_font_face_t has been dropped, but do not\n    actually explain why this needs to be done. So add a couple of sentences\n    to clarify the likely lifetime of the FT_Face once exposed to cairo.\n\n src/cairo-ft-font.c |   10 +++++++---\n 1 file changed, 7 insertions(+), 3 deletions(-)\n\ncommit 5fcfc7ebc9a2d1d947898d269be7ba91d27c5261\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 16 17:13:45 2008 +0100\n\n    [test/README] Document all fonts used.\n    \n    Do a little leg-work to answer a query in a bug report and document the\n    results.\n\n test/README |    9 +++++++--\n 1 file changed, 7 insertions(+), 2 deletions(-)\n\ncommit c1164a574d3e2cc4746384875d5c2781114c0ea4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Oct 16 08:49:13 2008 +0100\n\n    [type1] Add comment to warn about read() as macro.\n    \n    In case we are ever tempted to simplify the function pointer, warn that it\n    may alias with a macro.\n\n src/cairo-type1-subset.c |    5 +++++\n 1 file changed, 5 insertions(+)\n\ncommit ff9ee74b37a88cba2e996bf0cdae1af6b6c6fe30\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Thu Oct 16 17:29:33 2008 +1030\n\n    Revert unintended changes to test/fallback-resolution.c in the previous commit\n\n test/fallback-resolution.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 5911c6966de832fa350a6e9a4d587b7c3b3b4825\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Thu Oct 16 17:22:48 2008 +1030\n\n    Use correct inverse ctm for stroke in meta surface replay\n    \n    This fixes #9189 Dashed strokes too long in fallback images\n\n src/cairo-meta-surface.c   |    2 +-\n test/fallback-resolution.c |    2 +-\n 2 files changed, 2 insertions(+), 2 deletions(-)\n\ncommit 6afcd821182137e8c3f128f9600e97cff79978b8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 15 22:41:26 2008 +0100\n\n    [test] Add a spline test.\n    \n    Test the decomposition of 5 different types of spline curve. Useful test\n    for future experiments in improving the decomposition algorithm.\n    \n    Note: the vector targets all need separate reference images due to their\n    lack of support for cairo_set_tolerance(). Also GS strokes the Bezier\n    curve differently using offset curves and opposed to transcribing the\n    outline of a pen.\n\n test/.gitignore                         |    1 +\n test/Makefile.am                        |    7 +\n test/spline-decomposition-pdf-ref.png   |  Bin 0 -> 20404 bytes\n test/spline-decomposition-ps2-ref.png   |  Bin 0 -> 8957 bytes\n test/spline-decomposition-ps3-ref.png   |  Bin 0 -> 8957 bytes\n test/spline-decomposition-ref.png       |  Bin 0 -> 20402 bytes\n test/spline-decomposition-svg11-ref.png |  Bin 0 -> 20404 bytes\n test/spline-decomposition-svg12-ref.png |  Bin 0 -> 20404 bytes\n test/spline-decomposition.c             |  416 +++++++++++++++++++++++++++++++\n 9 files changed, 424 insertions(+)\n\ncommit 91b0dc92c8ede189d942188f92068f189907e239\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 15 22:27:53 2008 +0100\n\n    [build] Add -fno-common.\n    \n    Generate a warning if two files define a global variable with the same\n    name, instead of silently merging them to reference the same location.\n\n build/configure.ac.warnings |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit b94b600b34793cecd9a66d37dd34a6619738e2c2\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Wed Oct 15 13:41:03 2008 -0400\n\n    [quartz] Completely remove CAIRO_HAS_QUARTZ_IMAGE_SURFACE check\n    \n    Instead of fixing the check in d36b02dc662e623bee58a69c32b149a242cbf52b, just\n    remove it. Conditionally compilation will keep cairo-quartz-image-surface.c\n    from being compiled in when it is not configured to be. Suggested by Behdad.\n\n src/cairo-quartz-image-surface.c |    4 ----\n 1 file changed, 4 deletions(-)\n\ncommit d36b02dc662e623bee58a69c32b149a242cbf52b\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Wed Oct 15 12:45:11 2008 -0400\n\n    [quartz] Rebalance 'CAIRO_HAS_QUARTZ_IMAGE_SURFACE' #ifdef\n    \n    Fixes compilation by re-adding '#ifdef CAIRO_HAS_QUARTZ_IMAGE_SURFACE' which\n    was, I assume, unintentionally removed by\n    2cf4b3161c19b9b0349bd2aa94855fd0822968be.\n\n src/cairo-quartz-image-surface.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 83162360a44c4d4701f0ade2e2ee813f79186439\nAuthor: Jeff Muizelaar <jmuizelaar@mozilla.com>\nDate:   Wed Oct 15 10:34:12 2008 -0400\n\n    Fix quratz_image typo in Makefile.sources.\n\n src/Makefile.sources |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 877e77fa3e85c09c29e64ca5ae7329346db029cc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 15 12:20:00 2008 +0100\n\n    [glitz] Disable caching of solid surfaces.\n    \n    glitz currently has no mechanism to release resources upon connection\n    closure (ala XCloseDisplay) and so will attempt invalid accesses when\n    evicting old surfaces from the solid pattern cache.\n\n src/cairo-glitz-surface.c |    7 +++++++\n 1 file changed, 7 insertions(+)\n\ncommit fc04a1e0dbc3cefa51c7602e0a23dba886813fe5\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 15 12:13:40 2008 +0100\n\n    [boilerplate] Fixup compilation for gliitz.\n    \n    Convert a few old references to cairo_boilerplate_surface_set_user_data.\n\n boilerplate/cairo-boilerplate-glitz.c |   12 ++++++------\n 1 file changed, 6 insertions(+), 6 deletions(-)\n\ncommit e17f02add019d9acf461a1ad1245ba5be00cf336\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 15 10:52:33 2008 +0100\n\n    [type1] Protect against read macro\n    \n    POSIX allows for any of its functions to be implemented as a macro,\n    inflicting damage upon innocent function pointers that happen to share\n    the same name.\n    \n    face->stream->read() is one such example.\n    \n    As it's outside of our control (being a FT_Face) we cannot simply rename\n    the data member, so we need to explicitly dereference it as a function\n    pointer in order to disambiguate it for the compiler.\n\n src/cairo-type1-subset.c |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit bc872a5f5fb9b6318dc78d132da46a6b201f75c7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 15 10:21:05 2008 +0100\n\n    [xlib] Handle 4,20,24,28 depth XImages\n    \n    Bug 9102 cairo doesn't support 24 bits per pixel mode on X11\n    (https://bugs.freedesktop.org/show_bug.cgi?id=9102)\n    is a reminder that that we need to support many obscure XImage formats.\n    With Carl's and Behdad's work to support psuedocolor we have a mechanism\n    in place to handle any format that is not natively handled by pixman. The\n    only piece we were missing was extending the swapper to handle all-known\n    formats and putting in defensive checks that pixels were correctly aligned\n    in accordance with pixman's requirements.\n\n src/cairo-image-surface.c |   13 ++++-----\n src/cairo-xlib-surface.c  |   70 ++++++++++++++++++++++++++++++++++++++-------\n src/cairoint.h            |    2 +-\n 3 files changed, 66 insertions(+), 19 deletions(-)\n\ncommit 1728fa352011c570ce1bcc3bd14897e789c85252\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 15 09:23:01 2008 +0100\n\n    [svg] Add notes about why we shouldn't add DOCTYPE.\n    \n    Emmanuel Pacaud did some research into adding DOCTYPE after we had a\n    complaint that our SVG output failed to be validated by batik. The\n    conclusion he came to was that the validation of SVG was incomplete and\n    misleading, i.e. our output might generate false negatives leading to more\n    confusion.\n\n src/cairo-svg-surface.c |   22 ++++++++++++++++++++++\n 1 file changed, 22 insertions(+)\n\ncommit e9f5ee6efe7725c1e0e32fa9e85cca61ecb93440\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 14 14:42:48 2008 +0100\n\n    [doc] Fix a few gtk-doc errors.\n    \n    gtk-doc insists on a non-empty long description, even for trivial\n    functions that are fully described by their input arguments and return\n    value. Grrr.\n\n src/cairo-gstate.c      |    4 ++++\n src/cairo-os2-surface.c |    2 ++\n src/cairo-scaled-font.c |   14 +++++++-------\n src/cairo-surface.c     |    4 +++-\n src/cairo-unicode.c     |    6 ++++--\n 5 files changed, 20 insertions(+), 10 deletions(-)\n\ncommit 595414bb787d570ac95fc91c58c370558e9d5a54\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 14 14:24:49 2008 +0100\n\n    [test/fallback-resolution] Extend to cover separate ppi x/y.\n    \n    Adrian Johnson proposed a hack that fixed the current test by simply\n    scaling the dashed stroke by device_transform.xx. Obviously this exposes a\n    deficiency in the test case. So add an outer loop to iterate over several\n    common ppi for both x and y and in doing so reveal more ugly artifacts in\n    the current fallback code.\n\n test/Makefile.am                              |   42 +++++-\n test/fallback-resolution-ppi150-ref.png       |  Bin 8043 -> 0 bytes\n test/fallback-resolution-ppi150x150-ref.png   |  Bin 0 -> 8043 bytes\n test/fallback-resolution-ppi150x300-ref.png   |  Bin 0 -> 6848 bytes\n test/fallback-resolution-ppi150x37.5-ref.png  |  Bin 0 -> 13176 bytes\n test/fallback-resolution-ppi150x600-ref.png   |  Bin 0 -> 6338 bytes\n test/fallback-resolution-ppi150x72-ref.png    |  Bin 0 -> 8370 bytes\n test/fallback-resolution-ppi150x75-ref.png    |  Bin 0 -> 10445 bytes\n test/fallback-resolution-ppi300-ref.png       |  Bin 5637 -> 0 bytes\n test/fallback-resolution-ppi300x150-ref.png   |  Bin 0 -> 6851 bytes\n test/fallback-resolution-ppi300x300-ref.png   |  Bin 0 -> 5637 bytes\n test/fallback-resolution-ppi300x37.5-ref.png  |  Bin 0 -> 12870 bytes\n test/fallback-resolution-ppi300x600-ref.png   |  Bin 0 -> 4848 bytes\n test/fallback-resolution-ppi300x72-ref.png    |  Bin 0 -> 7053 bytes\n test/fallback-resolution-ppi300x75-ref.png    |  Bin 0 -> 9617 bytes\n test/fallback-resolution-ppi37.5-ref.png      |  Bin 14098 -> 0 bytes\n test/fallback-resolution-ppi37.5x150-ref.png  |  Bin 0 -> 12728 bytes\n test/fallback-resolution-ppi37.5x300-ref.png  |  Bin 0 -> 11981 bytes\n test/fallback-resolution-ppi37.5x37.5-ref.png |  Bin 0 -> 14098 bytes\n test/fallback-resolution-ppi37.5x600-ref.png  |  Bin 0 -> 11654 bytes\n test/fallback-resolution-ppi37.5x72-ref.png   |  Bin 0 -> 12990 bytes\n test/fallback-resolution-ppi37.5x75-ref.png   |  Bin 0 -> 13787 bytes\n test/fallback-resolution-ppi600-ref.png       |  Bin 4104 -> 0 bytes\n test/fallback-resolution-ppi600x150-ref.png   |  Bin 0 -> 6096 bytes\n test/fallback-resolution-ppi600x300-ref.png   |  Bin 0 -> 4812 bytes\n test/fallback-resolution-ppi600x37.5-ref.png  |  Bin 0 -> 12401 bytes\n test/fallback-resolution-ppi600x600-ref.png   |  Bin 0 -> 4104 bytes\n test/fallback-resolution-ppi600x72-ref.png    |  Bin 0 -> 6398 bytes\n test/fallback-resolution-ppi600x75-ref.png    |  Bin 0 -> 8974 bytes\n test/fallback-resolution-ppi72-ref.png        |  Bin 8409 -> 0 bytes\n test/fallback-resolution-ppi72x150-ref.png    |  Bin 0 -> 8069 bytes\n test/fallback-resolution-ppi72x300-ref.png    |  Bin 0 -> 6803 bytes\n test/fallback-resolution-ppi72x37.5-ref.png   |  Bin 0 -> 13147 bytes\n test/fallback-resolution-ppi72x600-ref.png    |  Bin 0 -> 6245 bytes\n test/fallback-resolution-ppi72x72-ref.png     |  Bin 0 -> 8409 bytes\n test/fallback-resolution-ppi72x75-ref.png     |  Bin 0 -> 10628 bytes\n test/fallback-resolution-ppi75-ref.png        |  Bin 12101 -> 0 bytes\n test/fallback-resolution-ppi75x150-ref.png    |  Bin 0 -> 9940 bytes\n test/fallback-resolution-ppi75x300-ref.png    |  Bin 0 -> 9003 bytes\n test/fallback-resolution-ppi75x37.5-ref.png   |  Bin 0 -> 14020 bytes\n test/fallback-resolution-ppi75x600-ref.png    |  Bin 0 -> 8455 bytes\n test/fallback-resolution-ppi75x72-ref.png     |  Bin 0 -> 10202 bytes\n test/fallback-resolution-ppi75x75-ref.png     |  Bin 0 -> 12101 bytes\n test/fallback-resolution.c                    |  199 +++++++++++++------------\n 44 files changed, 139 insertions(+), 102 deletions(-)\n\ncommit 0d3e152d2fe28b22a27dd6b9f82e2047aea3be94\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 14 13:44:47 2008 +0100\n\n    [check-doc-syntax.sh] Allow quoting.\n    \n    func_regexp was incorrectly complaining that cairo_pure was a function without\n    parenthesis. The simplest solution appeared to be allow quoting of\n    'cairo_pure'.\n\n src/cairo-compiler-private.h |   22 +++++++++++-----------\n src/check-doc-syntax.sh      |    6 +++---\n 2 files changed, 14 insertions(+), 14 deletions(-)\n\ncommit 02a7ca80f9f9b62deff6c8ba4dc58fee0cebcaa6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 14 11:08:43 2008 +0100\n\n    [pattern] Correctly optimize away fractional translations.\n    \n    As is so often the case, reading the commit log gives you fresh insight in\n    the problem - often called confessional debugging...\n    \n    We can simplify the problem by ignoring attr->[xy]_offset, for the time\n    being, and focus on computing the correct matrix. This is comparatively\n    simple as all we need to do is perform the appropriate rounding on the\n    translation vector.\n\n src/cairo-pattern.c |   18 ++++++++++--------\n 1 file changed, 10 insertions(+), 8 deletions(-)\n\ncommit 9886cb3353eb02ce5b99d555a35b13b8347f8e87\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 14 10:23:41 2008 +0100\n\n    [pattern] Only perform non-integer optimization for identity matrices.\n    \n    A complication I realised after pushing 3eb4bc3 was handling larger\n    sampled areas.  Extending the test case revealed that the optimization\n    was broken for anything but the identity transform (after removing the\n    translation).  Correctness first, leaving the \"pixel-exact\" solution for\n    interested reader...\n\n src/cairo-pattern.c                           |   16 ++++++----------\n test/filter-nearest-transformed-pdf-ref.png   |  Bin 373 -> 548 bytes\n test/filter-nearest-transformed-ref.png       |  Bin 151 -> 570 bytes\n test/filter-nearest-transformed-svg11-ref.png |  Bin 217 -> 559 bytes\n test/filter-nearest-transformed-svg12-ref.png |  Bin 217 -> 559 bytes\n test/filter-nearest-transformed.c             |   24 ++++++++++++++++++++++++\n 6 files changed, 30 insertions(+), 10 deletions(-)\n\ncommit 8dc3deecb8e0ca2f84d996096230f27ab4c24c18\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 14 08:17:23 2008 +0100\n\n    Add documentation for function attributes 'pure' and 'const'.\n    \n    Carl suggested that cairo_pure and cairo_const are pretty opaque, even to\n    the developer who added them, so it is extremely important that they have\n    a good description so that they are used correctly and perhaps ported to\n    other compilers.\n\n src/cairo-compiler-private.h |   20 ++++++++++++++++++++\n 1 file changed, 20 insertions(+)\n\ncommit 6aa1143d5a8ec45fc793102a64e956d7d1c7ad01\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 13 23:49:17 2008 +0100\n\n    Update documentation to remove references to cairo_has_show_text_glyphs().\n    \n    With the addition of cairo_show_text_glyphs() came a couple of functions\n    to query whether the target supported the extended attributes. However,\n    at Carl's request cairo_has_show_text_glyphs() was removed - but the\n    documentation was not updated to reflect that.\n\n NEWS                |    2 +-\n src/cairo-surface.c |    3 ---\n src/cairo.c         |    6 +++---\n 3 files changed, 4 insertions(+), 7 deletions(-)\n\ncommit b2053945df35d4d7eea9fe3200e9c018705309d1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 13 23:39:47 2008 +0100\n\n    [scaled-font] Correct documentation for cairo_scaled_font_create().\n    \n    Fix the documentation not to suggest that NULL is a legal value for\n    font_options (as we temporarily made it during the 1.[57] dev cycle).\n\n src/cairo-scaled-font.c |    3 +--\n 1 file changed, 1 insertion(+), 2 deletions(-)\n\ncommit 3eb4bc37577e905d93a1935e7a9cd33ae8dbda15\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 13 23:26:04 2008 +0100\n\n    [pattern] Optimize away fractional translation for NEAREST patterns.\n    \n    As identified in bug 15479,\n      Unpredictable performance of cairo-xlib with non-integer translations of a\n      source surface pattern\n      (https://bugs.freedesktop.org/show_bug.cgi?id=15479),\n    source surfaces with a fractional translation hit slow paths for some\n    drivers, causing seemingly random performance variations. As a work-around\n    Owen Taylor proposed that cairo could convert non-integer translations on\n    NEAREST sources patterns to their integer equivalents.\n    \n    The messy detail involved here is replicating the rounding mode used by\n    pixman for the sample offset, but otherwise the conversion is fairly\n    trivial.\n\n src/cairo-pattern.c                           |   35 +++++++++\n test/.gitignore                               |    1 +\n test/Makefile.am                              |    5 ++\n test/filter-nearest-transformed-pdf-ref.png   |  Bin 0 -> 373 bytes\n test/filter-nearest-transformed-ref.png       |  Bin 0 -> 151 bytes\n test/filter-nearest-transformed-svg11-ref.png |  Bin 0 -> 217 bytes\n test/filter-nearest-transformed-svg12-ref.png |  Bin 0 -> 217 bytes\n test/filter-nearest-transformed.c             |  103 +++++++++++++++++++++++++\n 8 files changed, 144 insertions(+)\n\ncommit ceab32e2c3d51c0dd29b105a5a390cdd8aa58f8f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Oct 12 12:11:12 2008 +0100\n\n    [win32] win32 also uses font subsets.\n    \n    Include win32 in the list of font subset users, fixes build when\n    cross-compiling.\n\n src/cairoint.h |    5 ++++-\n 1 file changed, 4 insertions(+), 1 deletion(-)\n\ncommit 1d3453eee50e4343995c5d3f225d18289fbcebec\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Oct 12 11:21:14 2008 +0100\n\n    [pattern] Rescale the linear pattern matrix to avoid overflow.\n    \n    As proof-of-principle, compute a scale factor to avoid overflow when\n    converting a linear pattern to pixman_fixed_t. Fixes test/huge-pattern,\n    but the principle should be extended to handle more cases of overflow.\n\n src/cairo-pattern.c                 |   48 ++++++++++++++++++++++++++++++-----\n test/Makefile.am                    |    5 ++--\n test/huge-pattern-pdf-ref.png       |  Bin 0 -> 2716 bytes\n test/huge-pattern-pdf-rgb24-ref.png |  Bin 0 -> 2817 bytes\n test/huge-pattern-ps3-ref.png       |  Bin 0 -> 1786 bytes\n 5 files changed, 45 insertions(+), 8 deletions(-)\n\ncommit ab1d106cba7aa4abe5f7253c089aadd15e0bb06d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Oct 11 19:52:28 2008 +0100\n\n    [xlib] Use the cached xrender formats.\n    \n    Use the cached formats for consistency and simplify several double pointer\n    dereferences.\n\n src/cairo-xlib-surface.c |   64 +++++++++++++++++++++++++++++-----------------\n 1 file changed, 40 insertions(+), 24 deletions(-)\n\ncommit 6736faba3ebe4eae4c1d2aeeb3153eb6f12a32de\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Oct 11 18:10:16 2008 +0100\n\n    [test/any2ppm] Do not attempt to compile PS without spectre\n    \n    Since CAN_TEST_PS_SURFACE does not currently require spectre, we were\n    attempting to compile in spectre support for any2ppm even on systems\n    without libspectre installed. Fix that by adding a separate flag for\n    CAIRO_HAS_SPECTRE.\n\n configure.ac     |    5 ++++-\n test/Makefile.am |    2 +-\n test/any2ppm.c   |   28 ++++++++++++++++++++--------\n 3 files changed, 25 insertions(+), 10 deletions(-)\n\ncommit b35871116243724b59738fce00b512818c83ea17\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Sat Oct 11 00:18:11 2008 +0100\n\n    [test] Add huge pattern.\n    \n    Add a test case to exercise range overflow during gradient construction.\n\n test/.gitignore           |    1 +\n test/Makefile.am          |    4 +++\n test/huge-pattern-ref.png |  Bin 0 -> 1619 bytes\n test/huge-pattern.c       |   74 +++++++++++++++++++++++++++++++++++++++++++++\n 4 files changed, 79 insertions(+)\n\ncommit 77070270813d2ca40d422e5301f75222d19e1d8f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 10 22:24:01 2008 +0100\n\n    [test] Use _POSIX_C_SOURCE for flockfile.\n    \n    From bug 18010 (https://bugs.freedesktop.org/show_bug.cgi?id=18010),\n    in order to make flockfile() available we need to set _POSIX_C_SOURCE and\n    according to the man page, the appropriate feature check is\n    _POSIX_THREAD_SAFE_FUNCTIONS.\n\n test/cairo-test.c |    5 +++--\n 1 file changed, 3 insertions(+), 2 deletions(-)\n\ncommit 34ff7e4ac42acfb2ab9921da21933113518bd8a0\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sat Oct 11 23:44:37 2008 +1030\n\n    Check that reads in truetype_reverse_cmap are within valid data\n    \n    Bulia Byak reported a bug where cairo was crashing with a particular\n    font. The font had an incorrect entry in the cmap table that caused\n    cairo to read from outside of the buffer allocated for the cmap.\n\n src/cairo-truetype-subset.c |   12 +++++++++++-\n 1 file changed, 11 insertions(+), 1 deletion(-)\n\ncommit a16ef6ead2b02120ca482aa3d2667e51b0c67e78\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 10 18:03:49 2008 +0100\n\n    [INSTALL] Mention pkg-config requirement\n    \n    Mention that building the configure script requires at least version 0.16\n    of pkg-config.\n    \n    See the old bug:\n      Bug 4702 PKG_PROG_PKG_CONFIG: command not found\n      (https://bugs.freedesktop.org/show_bug.cgi?id=4702)\n\n INSTALL |    1 +\n 1 file changed, 1 insertion(+)\n\ncommit eba9d87d541d89804f70e56874538a249de08502\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 10 16:51:07 2008 +0100\n\n    [image] Warn about a potential NULL return after finish().\n    \n    Improve the wording as suggested by\n      https://bugs.freedesktop.org/show_bug.cgi?id=12659\n    to warn about the possibility of returning NULL even if the passed in\n    surface was an image surface.\n\n src/cairo-image-surface.c |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit ac3e4b4bea574c94de77ec15878d116b619ee3f4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Oct 10 14:00:32 2008 +0100\n\n    [xlib] Disable XRender support if the surface has no xrender_format\n    \n    Bug 11734:\n      XRender crashes due to NULL pointer from Cairo on SGI O2\n      (https://bugs.freedesktop.org/show_bug.cgi?id=1173)\n    is an example of a case where we try to perform an XRender operation on a\n    surface with a format that was not supported by the XRender extension. By\n    marking the extension version as -1 on those surfaces, the current checks\n    for SURFACE_RENDER_HAS_* always correctly return false and prevent us try\n    to create a Picture with a NULL xrender_format.\n\n src/cairo-xlib-surface.c |   37 ++++++++++++++++++++++++-------------\n 1 file changed, 24 insertions(+), 13 deletions(-)\n\ncommit 8ac8e8c523abaa5db24c5303c671ff3487bf0801\nAuthor: Carlos Garcia Campos <carlosgc@gnome.org>\nDate:   Sun Sep 21 14:29:30 2008 +0200\n\n    [test] Add ps2png check program using libspectre\n    \n    Add a simple program to compliment pdf2png and svg2png.\n\n configure.ac     |    1 +\n test/Makefile.am |    8 ++++\n test/ps2png.c    |  113 ++++++++++++++++++++++++++++++++++++++++++++++++++++++\n 3 files changed, 122 insertions(+)\n\ncommit 3e6afb353da1fee624b519f5a96b3303c7eb91ae\nAuthor: Carlos Garcia Campos <carlosgc@gnome.org>\nDate:   Thu Oct 9 12:11:51 2008 +0100\n\n    [test/any2ppm] Enable PS conversion using libspectre.\n    \n    Complete the vector trilogy using libspectre to provide a similar\n    interface (to poppler and librsvg) around GhostScript.\n\n AUTHORS          |    1 +\n configure.ac     |   20 ++++++++++++---\n test/Makefile.am |    4 +--\n test/any2ppm.c   |   73 ++++++++++++++++++++++++++++++++++++++++++++++++++++--\n 4 files changed, 90 insertions(+), 8 deletions(-)\n\ncommit ddd1615a1777181c6e8db1dbafacb68535ed163a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 8 23:13:03 2008 +0100\n\n    [pattern] Remove incorrect assert.\n    \n    It's possible to reach that point without setting the filter to NEAREST,\n    for example if using FAST or GAUSSIAN.\n\n src/cairo-pattern.c |    1 -\n 1 file changed, 1 deletion(-)\n\ncommit c647c0bbca8694a14f5f5807b8349f0b0bb4987d\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Thu Oct 9 13:21:27 2008 +0200\n\n    [TEST] make imagediff work again\n    \n    It seems to have bitrotten\n\n test/imagediff.c |    9 +++++----\n 1 file changed, 5 insertions(+), 4 deletions(-)\n\ncommit f644d78dc138a7ba920a108dfb058e9f0fdb5302\nAuthor: Bj\u00f6rn Lindqvist <bjourne@gmail.com>\nDate:   Wed Oct 8 20:08:25 2008 +0100\n\n    [perf] Add composite performance test.\n    \n    Add a new test case to Cairo for checking the performance of Cairo's\n    equivalent to GDK's gdk_pixbuf_composite_color() operation. That is an\n    operation that happens to be extremely useful when viewing or editing\n    transparent images so I think it is important that it is as fast as\n    possible.\n\n AUTHORS                  |    1 +\n perf/Makefile.am         |    1 +\n perf/cairo-perf.c        |    1 +\n perf/cairo-perf.h        |    1 +\n perf/composite-checker.c |  108 ++++++++++++++++++++++++++++++++++++++++++++++\n 5 files changed, 112 insertions(+)\n\ncommit 96b083d3f0e47f919cb6d0f06735427eaea21565\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 8 18:53:46 2008 +0100\n\n    [test] Exercise degenerate dashes.\n    \n    Add a test case to capture the current behaviour when a segment ends on\n    an off/on dash transition.\n    \n    Originally filed as bug:\n      Miter artifacts for dashed strokes\n      https://bugs.freedesktop.org/show_bug.cgi?id=17973\n\n test/.gitignore              |    1 +\n test/Makefile.am             |    2 +\n test/degenerate-dash-ref.png |  Bin 0 -> 2005 bytes\n test/degenerate-dash.c       |   97 ++++++++++++++++++++++++++++++++++++++++++\n 4 files changed, 100 insertions(+)\n\ncommit 6487a147a2129f588aae900b048b2a801ef95ec0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 8 15:26:03 2008 +0100\n\n    [cairo.h] Be defensive when checking for _MSC_VER\n    \n    Since cairo.h is a public header file, we need to be careful so that it\n    can be compiled by random compilers and even users specifying \"-Werror\n    -Wundef\" (mentioning no names, Company). So replace the bare (and legal)\n      #if _MSC_VER\n    with\n      #if defined (_MSC_VER)\n    just in case.\n\n src/cairo.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 59141e56a723f741c87e2eaa37bf96e243ac5728\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 8 13:50:28 2008 +0100\n\n    [win32] Restore fine-grained fallback support for printing.\n    \n    Missed updating win32 when implementing the new paginated API to query\n    support for the fine-grained fallbacks.\n    \n    (Thanks to Adrian for spotting this oversight.)\n\n src/cairo-win32-printing-surface.c |    8 ++++++++\n 1 file changed, 8 insertions(+)\n\ncommit 565c02a37e2d140a20867081eea9bb5de9999b1c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 8 11:06:42 2008 +0100\n\n    [svg] Use finer-grained fallbacks for SVG 1.2\n    \n    The use of fine-grained fallbacks requires the native support of the\n    SOURCE operator applied to an image on the target surface. SVG 1.2\n    introduces the \"comp-op:src\" mode fulfilling this criteria - so we can\n    enable fine-grained fallbacks for 1.2+.\n    \n    Update test/fine-grained-fallbacks to exercise this pathway in SVG 1.2 -\n    as SVG natively supported all the current operations within that test.\n    This reveals yet another librsvg bug in handling SVG 1.2.\n\n src/cairo-paginated-private.h                   |    9 ++-\n src/cairo-paginated-surface.c                   |   47 +++++---------\n src/cairo-pdf-surface.c                         |   14 +++-\n src/cairo-ps-surface.c                          |    8 +++\n src/cairo-svg-surface.c                         |   34 +++++++---\n test/Makefile.am                                |    4 +-\n test/finer-grained-fallbacks-ps2-argb32-ref.png |  Bin 1047 -> 0 bytes\n test/finer-grained-fallbacks-ps2-ref.png        |  Bin 0 -> 1356 bytes\n test/finer-grained-fallbacks-ps2-rgb24-ref.png  |  Bin 819 -> 1096 bytes\n test/finer-grained-fallbacks-ps3-argb32-ref.png |  Bin 1047 -> 0 bytes\n test/finer-grained-fallbacks-ps3-ref.png        |  Bin 0 -> 1356 bytes\n test/finer-grained-fallbacks-ps3-rgb24-ref.png  |  Bin 819 -> 1096 bytes\n test/finer-grained-fallbacks-ref.png            |  Bin 796 -> 1111 bytes\n test/finer-grained-fallbacks-rgb24-ref.png      |  Bin 590 -> 1114 bytes\n test/finer-grained-fallbacks.c                  |   79 ++++++++++++++++++++++-\n 15 files changed, 147 insertions(+), 48 deletions(-)\n\ncommit 0c777a3e0de0d48289432a3d66be68f8779b08a0\nAuthor: Vladimir Vukicevic <vladimir@pobox.com>\nDate:   Tue Oct 7 15:20:33 2008 -0700\n\n    [win32] Use wide-char versions of some API functions, for compat with Windows Mobile\n\n src/cairo-win32-surface.c |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit cf572b58e1197dac0ff1795b27b142c3e044cf45\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 7 09:55:03 2008 +0100\n\n    [tessellator] Compile fixes for !HAVE_INT64_T\n    \n    Fixup a couple of instances of implicit down-casting to 32bits from a\n    64bit wide integer and add a new is_zero() predicate.\n\n src/cairo-bentley-ottmann.c |   14 +++++++-------\n src/cairo-wideint-private.h |   10 +++++++++-\n 2 files changed, 16 insertions(+), 8 deletions(-)\n\ncommit 6b8c0559620ab23c4df1f381d2e95ffc307d2e2f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 7 09:43:45 2008 +0100\n\n    [tessellator] Avoid implicit promotion to 64bit integer.\n    \n    Avoid passing a 32bit integer as a cairo_int64_t in case we do not have a\n    64bit native integral type. As a side-effect this means we can also use a\n    narrower multiply.\n\n src/cairo-bentley-ottmann.c |   20 ++++++++++----------\n 1 file changed, 10 insertions(+), 10 deletions(-)\n\ncommit eaa4bd13926728e9da97a23df8a465ef2296049a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 7 21:09:16 2008 +0100\n\n    [pattern] After cloning adjust [xy]_offset if possible.\n    \n    For the simple case where the pattern matrix only contains an integer\n    translation then care is taken to convert that to a identity source matrix\n    with the translation applied to the [xy]_offsets. 5b97ee6525 broke this\n    guarantee by applying the clone offsets to the source matrix. So when the\n    source matrix is identity we can simply adjust the [xy]_offsets and\n    preserve the identity matrix. (This idea can be extended further by\n    removing any integer translation from the source matrix and storing it in\n    the [xy]_offsets as a means to extend the limited precision in\n    pixman_matrix_t - encountered when downscaling large images offset onto\n    the target surface.)\n\n src/cairo-pattern.c |   16 +++++++++++++---\n 1 file changed, 13 insertions(+), 3 deletions(-)\n\ncommit 552cc09e6be2b704dc32f986c84640d50316c25c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 7 21:05:57 2008 +0100\n\n    [xlib] Check integer translation for XCopyArea.\n    \n    A precondition for using the core XCopyArea protocol is that the source\n    attributes contain only integer translations. However, we failed to apply\n    any integer translations from the source matrix to the XCopyArea offsets.\n    This worked prior to 5b97ee6525 as\n    _cairo_pattern_acquire_surface_for_surface() was careful to only generate\n    an identity matrix if the pattern matrix only contained an integer\n    translation (and thus we would use XCopyArea in the xlib backend).\n\n src/cairo-xlib-surface.c |   10 ++++++++--\n 1 file changed, 8 insertions(+), 2 deletions(-)\n\ncommit 308485a3fc70bc4455a01990443c1f954b8a66f8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Oct 7 20:19:10 2008 +0100\n\n    [test] Add a test for a reported regression by Michael Natterer.\n    \n    mitch reported on irc that expose events in the gimp were suffering from\n    artifacts which he tracked down to a bug with clipping and source\n    surfaces. This is the cairo test case for that regression.\n\n test/.gitignore              |    1 +\n test/Makefile.am             |    2 ++\n test/clipped-surface-ref.png |  Bin 0 -> 401 bytes\n test/clipped-surface.c       |   70 ++++++++++++++++++++++++++++++++++++++++++\n 4 files changed, 73 insertions(+)\n\ncommit 28a3b546b91290f3377777adedcf7ab71e599188\nAuthor: Vladimir Vukicevic <vladimir@pobox.com>\nDate:   Tue Oct 7 10:25:46 2008 -0700\n\n    [win32] create_similar should fall back to DIBs if DDB creation fail\n\n src/cairo-win32-surface.c |   43 +++++++++++++++++--------------------------\n 1 file changed, 17 insertions(+), 26 deletions(-)\n\ncommit 4ae37a97b3e415591caa611533f44db5a29cfb72\nAuthor: Vladimir Vukicevic <vladimir@pobox.com>\nDate:   Tue Oct 7 10:18:41 2008 -0700\n\n    [quartz] initialize do_reflect field correctly for pattern draws\n\n src/cairo-quartz-surface.c |    3 +--\n 1 file changed, 1 insertion(+), 2 deletions(-)\n\ncommit 8cf399b944294645833088ee2ac1313093948b66\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 6 18:59:15 2008 +0100\n\n    [test] Add a test to exercise the internal twin font\n    \n    Although Behdad promises that the rendering is subject to improvement,\n    introduce a test to check consistency across platforms and update as\n    required.\n\n test/.gitignore       |    1 +\n test/Makefile.am      |    4 ++++\n test/twin-ps2-ref.png |  Bin 0 -> 1167 bytes\n test/twin-ps3-ref.png |  Bin 0 -> 1167 bytes\n test/twin-ref.png     |  Bin 0 -> 1836 bytes\n test/twin.c           |   60 +++++++++++++++++++++++++++++++++++++++++++++++++\n 6 files changed, 65 insertions(+)\n\ncommit 1f813ff04022a36a91bf9d1b0f7f2ae1c63b399f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 6 17:55:37 2008 +0100\n\n    [array] Silence gtk-doc complaints.\n    \n    gtk-doc fails make check for array as it insists that even the simplest\n    functions must have a long description and cannot be entirely described by\n    their arguments and return value.\n\n src/cairo-array.c |   26 ++++++++++++++++++++------\n 1 file changed, 20 insertions(+), 6 deletions(-)\n\ncommit 7cb9ccb4cb2106bb59e181ee284f8dcc5504eb7a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 6 17:44:03 2008 +0100\n\n    Fixup a couple of trivials doc warnings.\n    \n    Correct the 'Returns' statement to match what gtk-doc expects.\n\n src/cairo-cache.c   |    3 +--\n src/cairo-pattern.c |    5 ++---\n 2 files changed, 3 insertions(+), 5 deletions(-)\n\ncommit d6f0351b6cbb0d542a069eb5d0a7377eb85a6e4e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 6 17:17:04 2008 +0100\n\n    [skiplist] Avoid repeated calls to compare on the same element when inserting.\n    \n    During insertion we must traverse the skiplist in order to find the\n    insertion point for the new element. As we descend each level, the next\n    element in the chain for this level is sometimes the same as the one we\n    just compared against (and know that the new element is greater than).\n    Hence we can skip the search on that level and descend to the next. During\n    world_map this reduces the number of calls into _sweep_line_elt_compare()\n    by ~2.5% (and when performing trapezoidation on strokes gives a similar\n    speed up of about 2% - not bad for the addition of a single line.)\n\n src/cairo-skiplist.c |   16 ++++++++++------\n 1 file changed, 10 insertions(+), 6 deletions(-)\n\ncommit 1440399625ae0579d0748475fc924cfe74339a21\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 6 16:15:29 2008 +0100\n\n    [hull] Replace open-coding of 64bit arithmetic.\n    \n    Use primitives from cairo-wideint-private.h - in this case it helps to\n    make the code more readable as well as reduce dependence on native 64bit\n    integers.\n\n src/cairo-hull.c |   31 +++++++++++++++++++------------\n 1 file changed, 19 insertions(+), 12 deletions(-)\n\ncommit c6a6bf580fa7036e4c28137f8c038beb5c347244\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 6 16:13:21 2008 +0100\n\n    [slope] Replace open-coding 64bit integer arithmetic.\n    \n    Prefer to use the operations form cairo-wideint-private.h in order to\n    improve readability and reduce our assumptions on the availability of\n    64bit integers.\n\n src/cairo-slope.c |   14 ++++++--------\n 1 file changed, 6 insertions(+), 8 deletions(-)\n\ncommit 5e3fcb7934f568bb7e304a1c434a9370b693df17\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Oct 6 17:02:54 2008 +0100\n\n    [wideint] Declare the wideint arithmetic functions as const.\n    \n    'const' is a stricter form of 'pure' in that functions declared with that\n    attribute do not access any values other than their arguments (in\n    contrast to 'pure' which is allowed to read from global memory).\n\n src/cairo-compiler-private.h |    2 ++\n src/cairo-wideint-private.h  |    2 +-\n 2 files changed, 3 insertions(+), 1 deletion(-)\n\ncommit 9430bf57ebc86c79e28128e54aeb5a194c9cad03\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Mon Oct 6 14:00:37 2008 -0700\n\n    Fix scrambled version number in generated documentation.\n    \n    In the cairo 1.8.0 release the documentation would get generated with\n    the second and third version components transposed, (so it would say\n    1.0.8). Fix the obviously mistaken transposition.\n\n doc/public/Makefile.am |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 5beae8f530fe7056fa965cb5ca7b345a667e8122\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Mon Oct 6 12:43:42 2008 -0400\n\n    [Makefile.am.releasing] Make 'make snapshot' print a banner when done\n    \n    Copied from \"make distcheck\" implementation.  Prints something like:\n    \n    =============================================================\n    cairo-1.8.1-20081006-38de89 archives ready for distribution:\n    cairo-1.8.1-20081006-38de89.tar.gz\n    =============================================================\n\n build/Makefile.am.releasing |    9 ++++++++-\n 1 file changed, 8 insertions(+), 1 deletion(-)\n\ncommit 38de895d3863bd2e6fe921ad6cc6eeff15102701\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Mon Oct 6 12:11:18 2008 -0400\n\n    [RELEASING] Fix sample distcheck output to reflect current versioning\n\n RELEASING |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit f8018cf193823356270c8e7f21f3108fbe44679c\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Mon Oct 6 11:45:08 2008 -0400\n\n    [boilerplate] Fix \"make dist\"\n    \n    The cairo-boilerplate-ps/pdf/svg.h files where removed in commit\n    9841d9d58ea286f798626d325d50a85bf3f02c8f but the Makefile.sources\n    listing was not updated.\n\n boilerplate/Makefile.sources |    3 ---\n 1 file changed, 3 deletions(-)\n\ncommit 6578ac148ecdd236b0860923e5dee87291c9966c\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Mon Oct 6 11:39:47 2008 -0400\n\n    [twin-font] Make the stroke lighter\n    \n    I'm still to fine-tune the font and add hinting and bold/oblique support.\n    In the mean time though, a lighter stroke produces much nicer glyphs.\n\n src/cairo-font-face-twin.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 2fb7753903daf5c207b22034682a250161af22ad\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Mon Oct 6 11:39:00 2008 -0400\n\n    [Makefile.am.releasing] Exclude uid/gid from tarball\n    \n    By setting GNU tar options --owner=0 --group=0\n\n build/Makefile.am.releasing |    6 ++++--\n 1 file changed, 4 insertions(+), 2 deletions(-)\n\ncommit 589564c3b02d5b0505806924bd051323717791a3\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Sat Oct 4 01:36:07 2008 -0400\n\n    [user-font] Fix comment re backend interface\n\n src/cairo-user-font.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit c98c1cb5325bbc05c88ea350ff99d6eaf56fd339\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Oct 5 10:39:10 2008 +0100\n\n    [wideint] Mark functions as pure\n    \n    Take advantage of the gcc function attribute 'pure', which tells gcc that\n    the function result only depends upon its arguments and it has zero side\n    effects (e.g. it does not clobber memory). This gives gcc greater\n    opportunity to rearrange and optimize the wideint arithmetic.\n\n src/cairo-compiler-private.h |    6 ++++++\n src/cairo-wideint-private.h  |    2 +-\n 2 files changed, 7 insertions(+), 1 deletion(-)\n\ncommit 76dd4603d01068b1b377312ced6b44fe5419794f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Oct 5 10:15:49 2008 +0100\n\n    [tessellator] Replace open-coding _cairo_int64_cmp().\n    \n    We often use the construct:\n      if (_cairo_int64_lt (A, B)\n         return -1;\n      if (_cairo_int64_gt (A, B)\n         return 1;\n      return 0;\n    to compare two large integers (int64, or int128) which does twice the\n    required work on CPUs without large integer support. So replace it with a\n    single wideint function _cairo_int64_cmp() and therefore allow\n    opportunities to both shrink the code size and write a more efficient\n    comparison. (The primarily motivation is to simply replace each block with\n    a single more expressive line.)\n\n src/cairo-bentley-ottmann.c |   19 +++--------------\n src/cairo-wideint-private.h |   10 ++++++++-\n src/cairo-wideint.c         |   48 +++++++++++++++++++++++++++++++++++++++++++\n 3 files changed, 60 insertions(+), 17 deletions(-)\n\ncommit 6eead4a5f746e182eabfcda9959cd9cc53d95a89\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Oct 4 12:39:21 2008 +0100\n\n    [stroke] Simplify dash-off logic.\n    \n    Remove a redundant level of if-else branching (and remove a duplicate\n    code) block by testing dash_on first.\n\n src/cairo-path-stroke.c |   65 ++++++++++++++++++++---------------------------\n 1 file changed, 28 insertions(+), 37 deletions(-)\n\ncommit 4aa0991a11f03a47735dcfafe43d9505b939554e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Oct 4 20:22:18 2008 +0100\n\n    [test] Mark fallback-resolution as XFAIL.\n    \n    There appears to be no simple solution here, as it seems to be a\n    fundamental flaw in the design of the meta-surface wrt to replaying into\n    a fallback image. (I may be wrong, but if Carl found no easy solution then\n    I feel no shame for my own failure ;-)\n\n test/Makefile.am |   13 +++++++++++++\n 1 file changed, 13 insertions(+)\n\ncommit ae87382a84770f8656c369d258f705b8ac20049c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Oct 4 10:54:25 2008 +0100\n\n    [tessellator] Special case edge comparisons when on either end-point.\n    \n    If the sweep-line is currently on an end-point of a line,\n    then we know its precise x value and can use a cheaper comparator.\n    Considering that we often need to compare events at end-points (for\n    instance on a start event), this happens frequently enough to warrant\n    special casing.\n\n src/cairo-bentley-ottmann.c |  100 +++++++++++++++++++++++++++++++++++++++++--\n 1 file changed, 96 insertions(+), 4 deletions(-)\n\ncommit ab23c2995356821537b9a0facdff87c339a05d2a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 1 12:18:16 2008 +0100\n\n    [tessellator] Direct comparison of result in edges_compare_x_for_y.\n    \n    We need to compare the x-coordinate of a line at a for a particular y,\n    without loss of precision.\n    \n    The x-coordinate along an edge for a given y is:\n      X = A_x + (Y - A_y) * A_dx / A_dy\n    \n    So the inequality we wish to test is:\n      A_x + (Y - A_y) * A_dx / A_dy -?- B_x + (Y - B_y) * B_dx / B_dy,\n    where -?- is our inequality operator.\n    \n    By construction we know that A_dy and B_dy (and (Y - A_y), (Y - B_y)) are\n    all positive, so we can rearrange it thus without causing a sign\n    change:\n      A_dy * B_dy * (A_x - B_x) -?- (Y - B_y) * B_dx * A_dy\n                                    - (Y - A_y) * A_dx * B_dy\n    \n    Given the assumption that all the deltas fit within 32 bits, we can compute\n    this comparison directly using 128 bit arithmetic.\n\n src/cairo-bentley-ottmann.c |   97 ++++++++++++++++++++++++-------------------\n src/cairo-wideint-private.h |    1 +\n 2 files changed, 56 insertions(+), 42 deletions(-)\n\ncommit 7db03ac68cd556c903c07a2e2f8b75ec51263d12\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 1 12:34:36 2008 +0100\n\n    [tessellator] Use abort() instead of exit().\n    \n    More friendly when debugging, as the debug will (by default) catch the\n    SIGTRAP and break at the offending test.\n\n src/cairo-bentley-ottmann.c |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit 59e569576d00e9c1cb66a77cf447c3cc3fb038e7\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Sep 28 19:04:39 2008 +0100\n\n    [traps] Discard trivially empty trapezoid.\n    \n    The convex_quad tessellator (and possibly even the more general polygon\n    tessellator) will generate empty trapezoids when given a\n    rectangle which can be trivially discarded before inserting into traps.\n\n src/cairo-traps.c |   11 +++++++++--\n 1 file changed, 9 insertions(+), 2 deletions(-)\n\ncommit 7a2329e9c8afbfecb88c6c50bd63aa03ea7f9f81\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 1 09:49:45 2008 +0100\n\n    [traps] Reset extents on clearing.\n    \n    When clearing the array of current trapezoids, reset the extents to\n    infinite so that they are properly recomputed.\n\n src/cairo-traps.c |    2 ++\n 1 file changed, 2 insertions(+)\n\ncommit 8ec24a443d45b012df9b1a14b00a0b5b1c43e2ea\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 30 23:19:01 2008 +0100\n\n    [xlib] Share the common conditions for starting a new xGlyphElt using a macro.\n    \n    Move the predicate for starting a new glyph elt into a macro so that it\n    can be shared between _cairo_xlib_surface_emit_glyphs() and\n    _emit_glyph_chunks() without code duplication.\n\n src/cairo-xlib-surface.c |   39 ++++++++++++++++++++++-----------------\n 1 file changed, 22 insertions(+), 17 deletions(-)\n\ncommit a593338b2c2cdaff808947436f8fb9a52d74c695\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 1 16:24:33 2008 +0100\n\n    [xcb] Return false from _cairo_xcb_surface_is_similar().\n    \n    _cairo_xcb_surface_is_similar() is currently only used by the pattern\n    cache to determine whether to keep the surface in the solid color cache.\n    This is fundamentally broken without hooking into Display closure as it\n    keeps a reference to an expired picture. So in order to prevent spurious\n    application crashes, disable the caching for xcb.\n\n src/cairo-xcb-surface.c |    6 ++++++\n 1 file changed, 6 insertions(+)\n\ncommit 65f1575f6b2392d59410f40281a52654053bd2a8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Wed Oct 1 16:16:45 2008 +0100\n\n    [xcb] Compile fix.\n    \n    Must compile xcb more often. Especially after copying code over from xlib.\n\n src/cairo-xcb-surface.c |   41 ++++++++++++++++++++++++-----------------\n 1 file changed, 24 insertions(+), 17 deletions(-)\n\ncommit e76432f7544d5b3b9157f09e18acc167d9ee90a3\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Sat Oct 4 00:35:43 2008 -0400\n\n    [win32] Use -MDd and -LDd instead of -MD and -LD for debug build\n    \n    As reported by Damian Frank:\n    \n    \"I ran into a hitch with the Makefile.win32 infrastructure.  It uses -MD and\n    -LD when linking regardless of the config, but it should be using -MDd and\n    -LDd for the debug config.  I believe both the Makefile.win32.common and\n    src/Makefile.win32 files include erroneous declarations.  This produces\n    warnings at link time about a mismatch when linking against properly created\n    debug libs (for instance, I had a zlib built as \"LIB ASM Debug\" that linked\n    properly against the debug runtime).\n    \n    This problem applies to pixman too; can you pass this along to the\n    maintainer?\"\n    \n    Would be delighted to if someone commits a fix to pixman reading this\n    commit message.\n\n build/Makefile.win32.common |    8 ++++++--\n src/Makefile.win32          |    2 +-\n 2 files changed, 7 insertions(+), 3 deletions(-)\n\ncommit 8ea9cb187a198c64bfb79af8001d95eab29715b4\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Wed Oct 1 14:12:18 2008 -0700\n\n    Use symbolic constants for Render repeat modes.\n    \n    Names like RepeatNone and RepeatNormal are much easier to\n    read and understand than bare 0 and 1.\n\n src/cairo-xlib-surface.c |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 2c58a2c3851afac0386fcf0bf8504a937231185c\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Tue Sep 30 17:55:01 2008 -0400\n\n    [xlib] Start a new glyph element every 128 glyphs\n    \n    Xrender has limits at 252 glyphs.  We play safe and fast and limit\n    elements to 128 glyphs.  That's plenty, no measurable performance\n    hit expected.\n\n src/cairo-xlib-surface.c |   26 ++++++++++++++++++++++----\n 1 file changed, 22 insertions(+), 4 deletions(-)\n\ncommit fd7e09c7e66876b8492424e1c7d1260c12cc17f3\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Tue Sep 30 17:46:06 2008 -0400\n\n    [xlib] Allow room for glyph element padding\n    \n    Xrender pads glyph elements to 4byte boundaries.  We didn't consider\n    that in our request size calculations.  We do now.\n\n src/cairo-xlib-surface.c |    9 +++++++--\n 1 file changed, 7 insertions(+), 2 deletions(-)\n\ncommit c01fb77abbaf28c03aa6a21ebb997638dbdf950b\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Tue Sep 30 17:41:51 2008 -0400\n\n    [xlib] s/_cairo_xlib_surface_emit_glyphs_chunk/_emit_glyphs_chunk/\n    \n    For readability's sake.\n\n src/cairo-xlib-surface.c |   34 +++++++++++++++++-----------------\n 1 file changed, 17 insertions(+), 17 deletions(-)\n\ncommit c2ba25df1aec1cebfc4ce85e06a4187950675820\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Tue Sep 30 17:40:56 2008 -0400\n\n    [xlib] Add comment about glyph chunk invariant\n\n src/cairo-xlib-surface.c |    4 ++++\n 1 file changed, 4 insertions(+)\n\ncommit e983458e1fba15153815430c83619da53929139d\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Tue Sep 30 17:26:46 2008 -0400\n\n    Revert \"[xlib] Correct calculation of XRenderComposite* request size.\"\n    \n    This reverts commit 0eb0c26474a19477554bfd580aa5f8ae77c29779.\n    The change was too drastic and overlooked some subleties of the old\n    code, but the main reason for the revert is that it introduced an\n    ugly duplicated glyph flush block.  I'm working on a more incremental\n    fix.\n\n src/cairo-xlib-surface.c |  123 +++++++++++++++++-----------------------------\n 1 file changed, 45 insertions(+), 78 deletions(-)\n\ncommit 32a158528884562f4b22a81da3fa352ee1061835\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Tue Sep 30 15:20:36 2008 -0400\n\n    [configure.ac] Require autoconf >= 2.59 and automake >= 1.9.6\n    \n    These are the versions available on RHEL5 (two years old now), and\n    we know cairo works with them.  There's evidence that our build system\n    does not work with older automake, and we've been requiring autoconf 2.58\n    but no one ever tested 2.58 with the new build system.  It's very likely\n    that 2.58 doesn't work and needs some macro backporting.  In any case,\n    no one reported that they have 2.58 when I asked on the list.\n\n configure.ac |    4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ncommit 0eb0c26474a19477554bfd580aa5f8ae77c29779\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 30 13:33:25 2008 +0100\n\n    [xlib] Correct calculation of XRenderComposite* request size.\n    \n    show-glyphs-many is triggering an assertion failure within xlib. The cause\n    appears to be that we are submitting an overlong request.\n    \n    Reviewing the code and comparing with libXrender/src/Glyph.c I found two\n    points to address.\n    \n    1. When encountering the first 2-byte, or 4-byte glyph and thus triggering\n    the recalculation of the current request_size, we did not check that there\n    was enough room for the expanded request. In case there is not, we need to\n    emit the current request (before expansion) and reset.\n    \n    2. Subtleties in how XRenderCompositeText* constructs the binary protocol\n    buffer require that xGlyphElts are aligned to 32-bit boundaries and that\n    it inserts an additional xGlyphElt every 252 glyphs when width==1 or\n    every 254 glyphs for width==2 || width==4.  Thus we need to explicitly\n    compute how many bytes would be required to add this glyph in accordance\n    with the above.\n    \n    Considering the complexity (and apparent fragility since we require tight\n    coupling to XRender) of the code, I'm sure there are more bugs to be\n    found.\n\n src/cairo-xlib-surface.c |  123 +++++++++++++++++++++++++++++-----------------\n 1 file changed, 78 insertions(+), 45 deletions(-)\n\ncommit 02a56a4c84cd07a2c33134974680bad7f17f733d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 30 15:08:54 2008 +0100\n\n    [test/show-glyphs-many] Exercise xlib boundary conditions.\n    \n    Within _cairo_xlib_surface_emit_glyphs() there are a number of\n    complications to do with packing as many glyphs as possible into a\n    single XRenderCompositeGlyph*() call. Essentially these consist of\n    choosing the right function and packing for the current glyphs, describing\n    runs of glyphs and ensuring that we do not exceed the maximum request size\n    within a single call. So we add to the test case we an attempt to show 64k\n    2-byte glyphs and an attempt to mix 64k 1-byte and 2-byte glyphs, with the\n    change-over point chosen to overflow the maximum request size, should\n    _cairo_xlib_surface_emit_glyphs() naively resize the current request.\n\n test/show-glyphs-many.c |   83 ++++++++++++++++++++++++++++++++++++-----------\n 1 file changed, 64 insertions(+), 19 deletions(-)\n\ncommit 2a347a92b0a27a42840f9538cb98f792be12b277\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 30 13:29:35 2008 +0100\n\n    [test/show-glyphs-many] Re-enable test to trigger crash in xlib.\n    \n    Moral of this story is bugs cluster. If we made a mistake, especially in a\n    complicated bit of code that is interfacing with another library, then we\n    are likely to make a similar mistake in future. Disabling this test hid a\n    regression between 1.4 and 1.6.\n\n test/Makefile.am        |   15 +--------------\n test/show-glyphs-many.c |    9 +++++++++\n 2 files changed, 10 insertions(+), 14 deletions(-)\n\ncommit fade54e71a48919cc3e8311e202960c66eab74bf\nAuthor: Torsten Sch\u00f6nfeld <kaffeetisch@gmx.de>\nDate:   Tue Sep 30 11:47:53 2008 +0100\n\n    [doc] Add links to solid pattern constructors.\n    \n    Add links for the solid pattern constructors to the language bindings\n    guidelines in line with the other pattern types.\n\n doc/public/language-bindings.xml |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit d9f50d7841fa0216df157ba632483c8b27c50119\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 30 11:03:29 2008 +0100\n\n    [test/filter-nearest-offset] Remove XFAIL status\n    \n    I swear that when I said that it was a rounding error, I was looking at an\n    image where the squares were overlapping the lines and had a listing of\n    all the coordinates used. However, the current output on all the machines\n    I have to hand is correct so I believe the underlying bug to be fixed.\n    \n    Update the reference images for the external renderers because (a) GS\n    exhibits the same bug cairo had and (b) librvsg/PDF do not use NEAREST\n    when applying surface patterns, so the squares are blurred as a result.\n\n test/Makefile.am                         |    8 +++++---\n test/filter-nearest-offset-pdf-ref.png   |  Bin 0 -> 4537 bytes\n test/filter-nearest-offset-ps2-ref.png   |  Bin 0 -> 255 bytes\n test/filter-nearest-offset-ps3-ref.png   |  Bin 0 -> 255 bytes\n test/filter-nearest-offset-svg11-ref.png |  Bin 0 -> 4739 bytes\n test/filter-nearest-offset-svg12-ref.png |  Bin 0 -> 4739 bytes\n test/filter-nearest-offset.c             |    3 +--\n 7 files changed, 6 insertions(+), 5 deletions(-)\n\ncommit 7d5e6a18d5e72366e19cb806cbdad5ed180b53da\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 30 10:04:12 2008 +0100\n\n    [test/filter-nearest-offset] Paint a grey background\n    \n    Avoid requiring (an absent!) rgb24 ref image by using an opaque grey\n    background. Confirm the reference image is identical to the old one\n    (modulo the background change) using GIMP.\n\n test/filter-nearest-offset-ref.png |  Bin 254 -> 248 bytes\n test/filter-nearest-offset.c       |    6 ++++++\n 2 files changed, 6 insertions(+)\n\ncommit 35be08715595aa0bda48ce0b3cb11711eee55c64\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Tue Sep 30 10:54:45 2008 +0100\n\n    [Makefile.am] Only rerun headers-standalone if a header file has changed\n    \n    Use a stamp to mark the time that the headers were last checked and only\n    rerun the test if any have been modified since.\n\n src/.gitignore           |    1 +\n src/Makefile.am.analysis |    4 +++-\n 2 files changed, 4 insertions(+), 1 deletion(-)\n\ncommit 6da8d8ea62399d94281a2a262a630ef113062d0c\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Sep 29 17:56:34 2008 +0100\n\n    [pattern] Fix up OBO introduced to cloned area\n    \n    In the midst of porting 5eec3e378afd6ff9991cea8e42b8478eb3e79773 I failed\n    to include the pad in the floor() and ceil() which introduces two\n    potential off-by-one errors into each dimension of the region of interest\n    of the source surface.\n\n src/cairo-pattern.c |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit e3f9e40df74b0334c2b544790fd3485ba527bd55\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Mon Sep 29 11:49:04 2008 -0400\n\n    Fix residues of the Makefile.*.config Makefile.*.features renaming\n    \n    They just don't seem to want to die...\n\n boilerplate/Makefile.win32 |    2 +-\n src/Makefile.sources       |    2 +-\n 2 files changed, 2 insertions(+), 2 deletions(-)\n\ncommit d703f964aa7d1d4c8ec0b8a5dee437c222ce8629\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Sep 29 16:37:35 2008 +0100\n\n    Clean up compile warnings.\n    \n    A couple of unchecked status returns (which should always be\n    CAIRO_STATUS_SUCCESS) and an unused variable.\n\n src/cairo-surface.c     |    8 ++++++--\n src/cairo-svg-surface.c |    1 -\n 2 files changed, 6 insertions(+), 3 deletions(-)\n\ncommit 1310df44edcf0b9fee648c8f8688d4a1177cde68\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Mon Sep 29 11:34:19 2008 -0400\n\n    [text_to_glyphs] Further enhance the docs\n    \n    The most complex public cairo API deserves more doc love...\n\n src/cairo-scaled-font.c |    8 +++++---\n src/cairo-user-font.c   |    5 +++++\n src/cairo.h             |    2 +-\n 3 files changed, 11 insertions(+), 4 deletions(-)\n\ncommit 41c66a9dfa9f4e7b9839db9dc362f5fa48797561\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Sep 29 15:28:28 2008 +0100\n\n    [test/xlib-surface-source] Fix ill-timed XCloseDisplay\n    \n    Sigh - finding a crasher in xlib seemed too good to be true. And it was.\n    The bug is due to the coupling of the XCloseDisplay with the user_data on\n    the source surface.\n    \n    This was an externally trigger XCloseDisplay whilst the user had live\n    surfaces, so I consider this a gross application bug and therefore does\n    not require graceful handling within cairo-xlib. However, I'm willing to\n    listen to reason...\n\n test/surface-source.c |    4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ncommit 63ee963c63a73cf6d9272e15a7d8f7b63f12e77b\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Sep 29 15:09:23 2008 +0100\n\n    [user-font] Rewrite text_to_glyphs allocation instructions.\n    \n    Resolve the seemingly conflicting two paragraphs that instruct the writer\n    of a user-font on when to allocate the glyphs array during text_to_glyphs,\n    so that it is consistent with itself and the code. In particular, I could\n    find no indication in the code that num_glyphs is preset to -1 (it should\n    be a user parameter reflecting the number of entries in the supplied glyph\n    buffer) and the callback must allocate the array using\n    cairo_glyph_allocate().\n\n src/cairo.h |   33 ++++++++++++++-------------------\n 1 file changed, 14 insertions(+), 19 deletions(-)\n\ncommit c23dbc4c616aed05dfe71901ce7ac0cadcbfb13d\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Sep 29 13:54:12 2008 +0100\n\n    [test/surface-source] Modify to trigger a crash.\n    \n    Whilst investigating:\n      Bug 7360 painting huge surfaces fails\n      https://bugs.freedesktop.org/show_bug.cgi?id=7360\n    I found a particular combination of operations that cause a crash within\n    xlib, so I'm committing the test for posterity.\n\n test/surface-source.c |   50 +++++++++++++++++++++++++++++++++++++------------\n 1 file changed, 38 insertions(+), 12 deletions(-)\n\ncommit 3b33d49d37a5751e7848516c468b323e19c34bea\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Sep 29 08:14:24 2008 +0100\n\n    [test/filter-bilinear-extents] Remove XFAIL.\n    \n    With the reintroduction of Carl Worth's and Owen Taylor's work to expand\n    pattern extents as necessary to include extra samples due to the filter\n    radius, we expect filter-bilinear-extents to PASS. This patch series is\n    important as it factors out our assumptions about filter radius into a\n    single function and cleans up the code in its wake.\n    \n    However, since the external PS/PDF renderers do not necessarily use the same\n    filter as cairo (and currently they only use NEAREST due to lack of\n    /Interpolate emission in those backends) we can expect differences in test\n    output. So add the respective reference images to capture current\n    expectations and to highlight future changes.\n    \n    Fixes bugs:\n      Bug 15349 - bad clipping with EXTEND_NONE\n      [https://bugs.freedesktop.org/show_bug.cgi?id=15349],\n      Bug 15367 -Improve filtering handling in cairo-pattern.c\n      [https://bugs.freedesktop.org/show_bug.cgi?id=15367]\n\n test/Makefile.am                         |   35 +++++++++++++++++++++++++++++-\n test/filter-bilinear-extents-pdf-ref.png |  Bin 0 -> 798 bytes\n test/filter-bilinear-extents-ps2-ref.png |  Bin 0 -> 173 bytes\n test/filter-bilinear-extents-ps3-ref.png |  Bin 0 -> 173 bytes\n 4 files changed, 34 insertions(+), 1 deletion(-)\n\ncommit 5eec3e378afd6ff9991cea8e42b8478eb3e79773\nAuthor: Owen W. Taylor <otaylor@fishsoup.net>\nDate:   Mon Sep 29 00:53:59 2008 +0100\n\n    [pattern] Improve handling of filter radius and optimize when possible.\n    \n    Factor out common filter analysis code from _cairo_pattern_get_extents()\n    so that we can share it with _cairo_pattern_acquire_surface_for_surface()\n    as well. During the analysis of the filter determine whether the pattern\n    matrix maps source pixels exactly onto destination pixels and if so convert\n    the filter to NEAREST - generalising the existing conversion to NEAREST.\n    \n    (Patch ported to master by Chris Wilson, all bugs are his.)\n\n src/cairo-matrix.c  |   29 +++++++++++++\n src/cairo-pattern.c |  113 +++++++++++++++++++++++++++++++++++----------------\n src/cairoint.h      |    3 ++\n 3 files changed, 110 insertions(+), 35 deletions(-)\n\ncommit 7d7057cf8896a3558fadc35d160d3bc667972800\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Fri Apr 4 19:00:28 2008 -0700\n\n    _cairo_pattern_get_extents: Fix to allow for expansion based on filter\n    \n    This fixes the filter-bilinear-extents test case and the\n    related bug entry:\n    \n    \tbad clipping with EXTEND_NONE\n    \thttp://bugs.freedesktop.org/show_bug.cgi?id=15349\n    \n    Though there are still differences in the PDF and PostScript\n    backends, (primarily because we can't capture cairo's filter\n    modes in those file formats).\n\n src/cairo-pattern.c                                |   22 ++++++++++++++++++++\n test/paint-source-alpha-svg11-ref.png              |  Bin 505 -> 756 bytes\n ...scale-source-surface-paint-svg11-argb32-ref.png |  Bin 182 -> 229 bytes\n .../scale-source-surface-paint-svg11-rgb24-ref.png |  Bin 192 -> 243 bytes\n ...scale-source-surface-paint-svg12-argb32-ref.png |  Bin 182 -> 229 bytes\n .../scale-source-surface-paint-svg12-rgb24-ref.png |  Bin 192 -> 243 bytes\n 6 files changed, 22 insertions(+)\n\ncommit 6ef4bd4ecfa30f00ad0fe6e5e5f1d1a0a5dfe8e3\nAuthor: Owen W. Taylor <otaylor@fishsoup.net>\nDate:   Sun Sep 28 23:30:22 2008 +0100\n\n    [pattern] Fix acquiring outside of source bounds\n    \n    Restrict the area we acquire from the source image to the bounds of\n    the source image, even when we have an identity matrix. This handles\n    circumstances where the pattern extents may be enlarged due to\n    filtering, for example when applying a bilinear filter.\n    \n    This patch replaces the open-coded rectangle intersection which has\n    already proven itself to be a source of bugs.\n    \n    (Patch ported to master by Chris Wilson, all bugs are his.)\n\n src/cairo-pattern.c |   63 ++++++++++++++++++++++++++-------------------------\n 1 file changed, 32 insertions(+), 31 deletions(-)\n\ncommit 6d0f2c4421e34a078469a81646a52dfa47b4dcf1\nAuthor: Owen W. Taylor <otaylor@fishsoup.net>\nDate:   Mon Sep 29 00:02:18 2008 +0100\n\n    [pattern] Remove the hack to support cloning surface patterns.\n    \n    Remove instances (abuses) of calling _cairo_pattern_acquire_surface() on\n    a known-surface-pattern with a hack to say \"give me the entire surface\".\n    If you know you just want the entire surface as an image surface, that\n    can be done more simply.\n    \n    (Split from original patch on\n    https://bugs.freedesktop.org/attachment.cgi?id=15703, by Chris Wilson -\n    as usual all bugs are his.)\n\n src/cairo-pattern.c                |    5 +----\n src/cairo-svg-surface.c            |   16 ++------------\n src/cairo-win32-printing-surface.c |   41 +++++++++++++++++-------------------\n 3 files changed, 22 insertions(+), 40 deletions(-)\n\ncommit 117f643e49615295eb37af24efffd8327429cbf9\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Sep 28 22:42:30 2008 +0100\n\n    [test/filter-bilinear-extents] Extend testing.\n    \n    First, explicitly set the filter mode to BILINEAR in case the default should\n    ever change. And then draw a second pattern with extents that in theory\n    are larger than the source surface in order to test handling of acquiring\n    out-of-bounds extents.\n\n test/filter-bilinear-extents.c |   45 +++++++++++++++++++++++++++-------------\n 1 file changed, 31 insertions(+), 14 deletions(-)\n\ncommit 3ff86a4510b718a3154b56b052be786f9495a3b0\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Sep 29 08:38:31 2008 +0100\n\n    [test] Disable caching of SVG fail/pass surfaces.\n    \n    As we use cairo to convert SVG files back to an image, that process is\n    dependent upon changes within our library and so we cannot skip the\n    conversion if the SVG file happens to match a previous run. Fortunately,\n    librsvg is quick enough that this is not a major issue.\n\n boilerplate/cairo-boilerplate.c |    8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ncommit 24b22f0d2161f7a4ce75ceb2a86a77737027ee56\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Mon Sep 29 07:52:09 2008 +0100\n\n    [glitz] Compile fix for typo.\n    \n    I wonder whether merely fixing a compile error in glitz will do anything\n    towards its utility... Anyway fix the missing comma as reported by\n    Shunichi Fuji and correct the asserts.\n\n src/cairo-glitz-surface.c |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit 4f449107afba8ca96cd16e8dec283db124105dc8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Sep 28 21:05:36 2008 +0100\n\n    [test/fallback-resolution] Exercise a couple of outstanding bugs.\n    \n    Use dashes to exercise bugs:\n      https://bugs.freedesktop.org/show_bug.cgi?id=9189\n      https://bugs.freedesktop.org/show_bug.cgi?id=17223\n    Note bug 17223 indicates that this is still relevant for win32 printing\n    where fallbacks are used if the dash offset is non-zero.\n    \n    And use a pattern to exercise the (fixed) regression:\n      https://bugs.launchpad.net/inkscape/+bug/234546\n\n test/fallback-resolution-ppi150-ref.png  |  Bin 2397 -> 8043 bytes\n test/fallback-resolution-ppi300-ref.png  |  Bin 1591 -> 5637 bytes\n test/fallback-resolution-ppi37.5-ref.png |  Bin 4681 -> 14098 bytes\n test/fallback-resolution-ppi600-ref.png  |  Bin 1121 -> 4104 bytes\n test/fallback-resolution-ppi72-ref.png   |  Bin 2497 -> 8409 bytes\n test/fallback-resolution-ppi75-ref.png   |  Bin 3575 -> 12101 bytes\n test/fallback-resolution.c               |   40 ++++++++++++++++++++++++++++--\n 7 files changed, 38 insertions(+), 2 deletions(-)\n\ncommit 0a7d781ab020171e70bd1dc66ff1556106e5be3f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Sep 28 18:57:15 2008 +0100\n\n    [perf] Add rounded rectangle perf case.\n    \n    Add the performance test case to compare the speed of filling a rounded\n    rectangle (one with camphered corners) as opposed to an ordinary\n    rectangle. Since the majority of the pixels are identical, ideally the two\n    cases would take similar times (modulo the additional overhead in the more\n    complex path).\n\n perf/Makefile.am          |    1 +\n perf/cairo-perf.c         |    1 +\n perf/cairo-perf.h         |    1 +\n perf/rectangles.c         |   22 ++++++++-\n perf/rounded-rectangles.c |  111 +++++++++++++++++++++++++++++++++++++++++++++\n 5 files changed, 135 insertions(+), 1 deletion(-)\n\ncommit d52b55cb1b2a4e9b5fd8dd12592a227f8f6a93fc\nAuthor: Karl Tomlinson <karlt+@karlt.net>\nDate:   Sun Sep 28 17:51:23 2008 +0100\n\n    [xlib] _surfaces_compatible() can return true for different picture formats\n    \n    _surfaces_compatible in cairo-xlib-surface returns true for surfaces with\n    different xrender_format when each has the same depth and no (NULL)\n    visual.\n    \n    Common picture formats will not have the same depth, but\n    it is possible to create a surface with a non-standard xrender_format\n    having the same depth as another xrender_format with\n    cairo_xlib_surface_create_with_xrender_format.\n    \n    Both cairo_xlib_surface_create_with_xrender_format and\n    _cairo_xlib_surface_create_similar_with_format create surfaces with no\n    visual.\n    \n    The same issue exists in the xcb backend.\n    \n    Fixes bug https://bugs.freedesktop.org/show_bug.cgi?id=16564.\n\n AUTHORS                  |    1 +\n src/cairo-xcb-surface.c  |    4 +++-\n src/cairo-xlib-surface.c |    4 +++-\n 3 files changed, 7 insertions(+), 2 deletions(-)\n\ncommit b6b54e2f2736bfa9f76b7b6fc0da5d35a71fe846\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Sep 28 17:13:11 2008 +0100\n\n    [svg] Compile fix for last commit.\n    \n    Sorry - badly merged patch (missed a chunk).\n\n src/cairo-svg-surface.c |    5 +++--\n 1 file changed, 3 insertions(+), 2 deletions(-)\n\ncommit cff3bcba68233101c5518801b64e37d2f0e70ae8\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Sep 28 17:06:32 2008 +0100\n\n    [svg] Check that the mask is supported.\n    \n    During the analyze phase we also need to check whether we can emit the mask\n    without requiring fallbacks.\n\n src/cairo-svg-surface.c |   17 +++++++++++++++--\n 1 file changed, 15 insertions(+), 2 deletions(-)\n\ncommit 8ad3031359d74bdff4b1e3ef8d0af047821f1795\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Sep 28 17:04:15 2008 +0100\n\n    [svg] Enable the assertion that paint() is supported.\n    \n    The XXX comment before the disabled assert is misleading as the final\n    fallback image paint operation should never trigger UNSUPPORTED.\n\n src/cairo-svg-surface.c |   13 ++++---------\n 1 file changed, 4 insertions(+), 9 deletions(-)\n\ncommit 95e637f9ac9e4256f7ba73e8f048f8e559631c82\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Sep 28 16:54:59 2008 +0100\n\n    [paginated] Set paginated mode before every replay.\n    \n    Previously we were replaying full page fallbacks without updating the\n    mode - this was upsetting SVG.\n\n src/cairo-paginated-surface.c |   23 ++++++++++++++---------\n 1 file changed, 14 insertions(+), 9 deletions(-)\n\ncommit 36b98589911ab57762317ec95cbff41681c1e0b6\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Sep 28 16:24:40 2008 +0100\n\n    [svg] Kill _cairo_svg_surface_force_fallbacks.\n    \n    It is not used, but refuses to die!\n\n src/cairo-svg-surface.c |    5 ++---\n 1 file changed, 2 insertions(+), 3 deletions(-)\n\ncommit 57851464f920d52444d19d25e78293fa0f40c5f9\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Sun Sep 28 17:02:23 2008 +0200\n\n    [SVG] make backend handle new operators gracefully\n    \n    Previously, the SVG backend would rash when new operators were added to\n    cairo.h, now it returns UNSUPPORTED.\n    Also unsupported operators can now be set as NULL, so image fallbacks can\n    be used properly.\n    Should use fallbacks instead of color-dodge for CAIRO_OPERATOR_STURATE?\n\n src/cairo-svg-surface.c |   45 +++++++++++++++++++++++++++++++--------------\n 1 file changed, 31 insertions(+), 14 deletions(-)\n\ncommit fda80cc852a109fe60e3277a1847bc5c24f35d8e\nAuthor: Benjamin Otte <otte@gnome.org>\nDate:   Sun Sep 28 14:57:49 2008 +0200\n\n    [SVG] use _cairo_operator_bounded_by_source()\n    \n    previously, the code was duplicating its functionality\n\n src/cairo-svg-surface.c |   27 ++++++++++++---------------\n 1 file changed, 12 insertions(+), 15 deletions(-)\n\ncommit 3c18d95b293eddaa25232bc06398c78bc8043cb4\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Sep 28 15:57:37 2008 +0100\n\n    Compute device_transform_inverse.\n    \n    Because we can independently set either the device scale or the device\n    offset, we need to be careful and recompute the inverse rather than simply\n    assuming that the original contents of the device transform is identity.\n    \n    Fixes regression https://bugs.launchpad.net/inkscape/+bug/234546.\n\n src/cairo-surface.c |   10 ++++------\n 1 file changed, 4 insertions(+), 6 deletions(-)\n\ncommit 9841d9d58ea286f798626d325d50a85bf3f02c8f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sun Sep 28 13:34:50 2008 +0100\n\n    Automate error checking for fallback-resolution.\n    \n    For this we extend the boilerplate get_image() routines to extract a\n    single page out of a paginated document and then proceed to manually\n    check each page of the fallback-resolution test.\n    \n    (Well that's the theory, in practice SVG doesn't support multiple pages\n    and so we just generate a new surface for each resolution. But the\n    infrastructure is in place so that we can automate other tests,\n    e.g. test/multi-pages.)\n\n boilerplate/cairo-boilerplate-pdf-private.h        |    5 +\n boilerplate/cairo-boilerplate-pdf.c                |   29 +-\n boilerplate/cairo-boilerplate-pdf.h                |   33 --\n boilerplate/cairo-boilerplate-ps-private.h         |    9 +-\n boilerplate/cairo-boilerplate-ps.c                 |   33 +-\n boilerplate/cairo-boilerplate-ps.h                 |   33 --\n boilerplate/cairo-boilerplate-svg-private.h        |    5 +\n boilerplate/cairo-boilerplate-svg.c                |   36 +-\n boilerplate/cairo-boilerplate-svg.h                |   33 --\n .../cairo-boilerplate-test-surfaces-private.h      |    1 +\n boilerplate/cairo-boilerplate-test-surfaces.c      |    7 +-\n boilerplate/cairo-boilerplate-win32-printing.c     |    5 +\n boilerplate/cairo-boilerplate-win32-private.h      |    1 +\n boilerplate/cairo-boilerplate.c                    |   74 ++--\n boilerplate/cairo-boilerplate.h                    |    7 +\n src/cairo-svg-surface.c                            |    6 +-\n test/Makefile.am                                   |    6 +\n test/cairo-test.c                                  |   36 +-\n test/cairo-test.h                                  |   12 +\n test/fallback-resolution-ppi150-ref.png            |  Bin 0 -> 2397 bytes\n test/fallback-resolution-ppi300-ref.png            |  Bin 0 -> 1591 bytes\n test/fallback-resolution-ppi37.5-ref.png           |  Bin 0 -> 4681 bytes\n test/fallback-resolution-ppi600-ref.png            |  Bin 0 -> 1121 bytes\n test/fallback-resolution-ppi72-ref.png             |  Bin 0 -> 2497 bytes\n test/fallback-resolution-ppi75-ref.png             |  Bin 0 -> 3575 bytes\n test/fallback-resolution.c                         |  413 +++++++++++++++-----\n 26 files changed, 486 insertions(+), 298 deletions(-)\n\ncommit cca1fc6358e9d0213dd2b41a5bfd1629eec6511e\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Sep 27 21:53:21 2008 +0100\n\n    [test] Fix target specific tests for recent SVG/PS version split.\n    \n    A few tests explicitly checked whether the \"ps\" or \"svg\" target was\n    enabled and this broke because of the name change. So fixup, to run\n    the generic test if either PS or SVG target is enabled as appropriate.\n\n test/create-for-stream.c   |    8 ++++++--\n test/fallback-resolution.c |    8 ++++++--\n test/multi-page.c          |    4 +++-\n test/ps-features.c         |    4 +++-\n test/svg-clip.c            |    4 +++-\n test/svg-surface.c         |    4 +++-\n 6 files changed, 24 insertions(+), 8 deletions(-)\n\ncommit 39e4a0bcd04191eecfc593653a4ba32a28fcac6a\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Sep 27 19:33:51 2008 +0100\n\n    [test] Update list of REFERENCE_IMAGES\n    \n    A few typos, deletions and additions from the inclusion of versioned\n    SVG/PS testing.\n\n test/Makefile.am |   50 +++++++++++++++++++++++++++++++-------------------\n 1 file changed, 31 insertions(+), 19 deletions(-)\n\ncommit 260362e5728e2591bb50f565ef04ba951d95de79\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Sep 27 19:16:34 2008 +0100\n\n    [cairo-test] Fix cairo_test_file_is_older().\n    \n    It did not even compile, so no longer it wasn't deleting cached results\n    if you updated the reference images.\n\n test/cairo-test.c |   11 +++++++----\n 1 file changed, 7 insertions(+), 4 deletions(-)\n\ncommit ffbb67303c1a4d986096ba046bb3256314b9f1b1\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Sep 27 18:54:45 2008 +0100\n\n    [test/gradient-constant-alpha] Remove ps2 reference images.\n    \n    PostScript level 2 has no support for gradients and so should uses image\n    fallbacks and hence do not require the GS specific reference images.\n\n test/Makefile.am                               |    2 --\n test/gradient-constant-alpha-ps2-ref.png       |  Bin 124 -> 0 bytes\n test/gradient-constant-alpha-ps2-rgb24-ref.png |  Bin 124 -> 0 bytes\n 3 files changed, 2 deletions(-)\n\ncommit 4fa9f8c0608c137d9aa277039cb286c8294e6a2f\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Sep 27 17:42:06 2008 +0100\n\n    [test/large-source] Remove stale comment.\n    \n    Delete a reference to an old limitation of pixman.\n\n test/large-source.c |    3 ---\n 1 file changed, 3 deletions(-)\n\ncommit 35f1e2fa4f15c562e5cc41578b413c6874e131bc\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Sep 27 17:37:32 2008 +0100\n\n    [test/operator*] Remove XFAIL descriptions.\n    \n    The tests should now pass, so remove the line claiming that they fail\n    for unknown reasons.\n\n test/operator-alpha.c |    3 +--\n test/operator.c       |    3 +--\n 2 files changed, 2 insertions(+), 4 deletions(-)\n\ncommit 871f683367b1a1647b607f9221e1fc2eddc6e5dd\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Sep 27 17:24:57 2008 +0100\n\n    clone_similar(): s/device_offset/clone_offset/\n    \n    A little bit of sleep and reflection suggested that the use of\n    device_offset_[xy] was confusing and clone_offset_[xy] more consistent\n    with the function naming.\n\n src/cairo-directfb-surface.c         |   12 ++++++------\n src/cairo-glitz-surface.c            |   18 +++++++++---------\n src/cairo-image-surface.c            |    6 +++---\n src/cairo-pattern.c                  |    6 +++---\n src/cairo-quartz-surface.c           |   16 ++++++++--------\n src/cairo-surface-fallback-private.h |    4 ++--\n src/cairo-surface-fallback.c         |    8 ++++----\n src/cairo-surface.c                  |   16 ++++++++--------\n src/cairo-win32-private.h            |    4 ++--\n src/cairo-win32-surface.c            |    8 ++++----\n src/cairo-xcb-surface.c              |   12 ++++++------\n src/cairo-xlib-surface.c             |   12 ++++++------\n src/cairoint.h                       |   10 +++++-----\n src/test-fallback-surface.c          |    8 ++++----\n 14 files changed, 70 insertions(+), 70 deletions(-)\n\ncommit 95c3c069326a77a28eb49053c0ace9f1977e0378\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Sep 27 17:13:32 2008 +0100\n\n    [surface] Only return early for no traps if the operator is bounded by a mask.\n    \n    If the operator is unbounded, then its area of effect extends beyond\n    the definition of the mask by the trapezoids and so we must always perform\n    the image composition.\n    \n    Fixes test/operator*.\n\n src/cairo-surface-fallback.c |    4 +---\n test/Makefile.am             |    2 --\n 2 files changed, 1 insertion(+), 5 deletions(-)\n\ncommit 922a5801164c2b2340a7b4a950820b07e72adadc\nMerge: 0c43170 1e45da4\nAuthor: Emmanuel Pacaud <emmanuel.pacaud@free.fr>\nDate:   Sat Sep 27 11:55:50 2008 +0200\n\n    Merge branch 'master' of git+ssh://emmanuel@git.cairographics.org/git/cairo\n\ncommit 0c4317085ecfc112214cdfe2abd66d9df8038282\nAuthor: Emmanuel Pacaud <emmanuel.pacaud@free.fr>\nDate:   Sat Sep 27 11:47:32 2008 +0200\n\n    [svg] Fix comp-op for paint, mask and show_glyphs operations.\n    \n    In paint and show_glyphs, the compositing operator was not emitted at all.\n    In mask, the operator was also emitted for the mask itself, which is\n    wrong.\n    \n    SVG clear and source differ from cairo as it also affects the\n    destination if the source pixel are completely transparent. We need to emit\n    an additional clip-to-self property.\n    \n    Librsvg does not support clip-to-self, so it renders the SVG\n    test outputs incorrectly.\n    \n    This patch also remove a lot of useless spaces in the style property\n    strings (I know, this should go in another commit).\n\n src/cairo-svg-surface.c |  196 +++++++++++++++++++++++++++--------------------\n 1 file changed, 113 insertions(+), 83 deletions(-)\n\ncommit 1e45da48b555b707225c1521068011cabbcc976f\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sat Sep 27 14:38:22 2008 +0930\n\n    Update ref images in Makefile.am\n\n test/Makefile.am |    3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ncommit c0535e8e3394f0b78867785e65cf89dbb31875d5\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Sat Sep 27 14:31:50 2008 +0930\n\n    Remove miter-precision from XFAIL\n    \n    The miter-precision PS output prints correctly on my LaserJet 4050. So\n    file a Ghostscript bug, supply PS ref images and remove from XFAIL.\n\n test/Makefile.am                 |    1 -\n test/README                      |    5 +++++\n test/miter-precision-ps2-ref.png |  Bin 0 -> 865 bytes\n test/miter-precision-ps3-ref.png |  Bin 0 -> 865 bytes\n test/miter-precision.c           |    2 +-\n 5 files changed, 6 insertions(+), 2 deletions(-)\n\ncommit 5b97ee65259cafb335c1a2c53f1a55dfcb175e20\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Sat Sep 27 00:18:07 2008 +0100\n\n    Allow cloning sub-regions of similar surfaces.\n    \n    Previously the rule for clone_similar() was that the returned surface\n    had exactly the same size as the original, but only the contents within\n    the region of interest needed to be copied. This caused failures for very\n    large images in the xlib-backend (see test/large-source).\n    \n    The obvious solution to allow cloning only the region of interest seemed\n    to be to simply set the device offset on the cloned surface. However, this\n    fails as a) nothing respects the device offset on the surface at that\n    layer in the compositing stack and b) possibly returning references to the\n    original source surface provides further confusion by mixing in another\n    source of device offset.\n    \n    The second method was to add extra out parameters so that the\n    device offset could be returned separately and, for example, mixed into\n    the pattern matrix. Not as elegant, a couple of extra warts to the\n    interface, but it works - one less XFAIL...\n\n src/cairo-clip.c                     |    6 ++++++\n src/cairo-directfb-surface.c         |   14 +++++++++-----\n src/cairo-glitz-surface.c            |   10 ++++++++++\n src/cairo-image-surface.c            |    3 +++\n src/cairo-pattern.c                  |   15 +++++++++++++--\n src/cairo-quartz-surface.c           |   10 +++++++++-\n src/cairo-surface-fallback-private.h |    2 ++\n src/cairo-surface-fallback.c         |    8 ++++++--\n src/cairo-surface.c                  |   24 ++++++++++++++++++------\n src/cairo-win32-private.h            |    2 ++\n src/cairo-win32-surface.c            |    8 ++++++--\n src/cairo-xcb-surface.c              |   18 ++++++++++++++----\n src/cairo-xlib-surface.c             |   21 +++++++++++++++------\n src/cairoint.h                       |   11 +++++++++--\n src/test-fallback-surface.c          |    4 ++++\n test/Makefile.am                     |    1 -\n 16 files changed, 126 insertions(+), 31 deletions(-)\n\ncommit 7f3a48f90b409653a2d4fb802779ecb7508e4d6e\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Sep 26 13:27:42 2008 -0400\n\n    [cairo.h] Don't define cairo_public to __declspec(dllimport) for static build\n    \n    That define should target win32 DLL builds only.  We can't tell though,\n    so we require user to define CAIRO_WIN32_STATIC_BUILD to signal that.\n\n src/cairo-system.c |    2 +-\n src/cairo.h        |    2 +-\n 2 files changed, 2 insertions(+), 2 deletions(-)\n\ncommit b6e910f4b636e947cefb310125979ce742e87730\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Sep 26 12:36:33 2008 -0400\n\n    [README.win32] Update wording from Tor Lillqvist\n\n README.win32 |   19 ++++++++++++-------\n 1 file changed, 12 insertions(+), 7 deletions(-)\n\ncommit fc12267405e98497c9f086d49fa6501d8f671a68\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Sep 26 17:10:52 2008 +0100\n\n    [scaled-font] Spelling fix.\n    \n    Arbitrary spelling fix.\n\n src/cairo-scaled-font.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit e0f214710760a0e0332207cb3009e3119867bd13\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Sep 26 16:49:57 2008 +0100\n\n    [boilerplate] Add a PS 2 target.\n    \n    Ensure that we can generate PS2 output when required by creating a PS\n    level 2 target and using GhostScript for conformance testing.\n\n boilerplate/cairo-boilerplate-ps-private.h         |   29 +-\n boilerplate/cairo-boilerplate-ps.c                 |   55 +++-\n boilerplate/cairo-boilerplate.c                    |   23 +-\n test/Makefile.am                                   |  286 +++++++++++++-------\n test/big-line-ps-ref.png                           |  Bin 1148 -> 0 bytes\n test/big-line-ps-rgb24-ref.png                     |  Bin 830 -> 0 bytes\n test/big-line-ps2-ref.png                          |  Bin 0 -> 1148 bytes\n test/big-line-ps2-rgb24-ref.png                    |  Bin 0 -> 830 bytes\n test/big-line-ps3-ref.png                          |  Bin 0 -> 1148 bytes\n test/big-line-ps3-rgb24-ref.png                    |  Bin 0 -> 830 bytes\n test/caps-joins-ps-ref.png                         |  Bin 1459 -> 0 bytes\n test/caps-joins-ps2-ref.png                        |  Bin 0 -> 1459 bytes\n test/caps-joins-ps3-ref.png                        |  Bin 0 -> 1459 bytes\n test/clip-fill-rule-ps-argb32-ref.png              |  Bin 310 -> 0 bytes\n test/clip-fill-rule-ps-rgb24-ref.png               |  Bin 302 -> 0 bytes\n test/clip-fill-rule-ps2-argb32-ref.png             |  Bin 0 -> 310 bytes\n test/clip-fill-rule-ps2-rgb24-ref.png              |  Bin 0 -> 302 bytes\n test/clip-fill-rule-ps3-argb32-ref.png             |  Bin 0 -> 310 bytes\n test/clip-fill-rule-ps3-rgb24-ref.png              |  Bin 0 -> 302 bytes\n test/clip-nesting-ps-argb32-ref.png                |  Bin 651 -> 0 bytes\n test/clip-nesting-ps-rgb24-ref.png                 |  Bin 636 -> 0 bytes\n test/clip-nesting-ps2-argb32-ref.png               |  Bin 0 -> 651 bytes\n test/clip-nesting-ps2-rgb24-ref.png                |  Bin 0 -> 636 bytes\n test/clip-nesting-ps3-argb32-ref.png               |  Bin 0 -> 651 bytes\n test/clip-nesting-ps3-rgb24-ref.png                |  Bin 0 -> 636 bytes\n test/clip-operator-ps-rgb24-ref.png                |  Bin 3624 -> 0 bytes\n test/clip-operator-ps2-rgb24-ref.png               |  Bin 0 -> 3624 bytes\n test/clip-operator-ps3-ref.png                     |  Bin 0 -> 8188 bytes\n test/clip-operator-ps3-rgb24-ref.png               |  Bin 0 -> 3624 bytes\n test/clip-push-group-ps-argb32-ref.png             |  Bin 179 -> 0 bytes\n test/clip-push-group-ps-rgb24-ref.png              |  Bin 179 -> 0 bytes\n test/clip-push-group-ps2-argb32-ref.png            |  Bin 0 -> 179 bytes\n test/clip-push-group-ps2-rgb24-ref.png             |  Bin 0 -> 179 bytes\n test/clip-push-group-ps3-argb32-ref.png            |  Bin 0 -> 179 bytes\n test/clip-push-group-ps3-rgb24-ref.png             |  Bin 0 -> 179 bytes\n test/clip-twice-ps-argb32-ref.png                  |  Bin 575 -> 0 bytes\n test/clip-twice-ps-rgb24-ref.png                   |  Bin 541 -> 0 bytes\n test/clip-twice-ps2-argb32-ref.png                 |  Bin 0 -> 575 bytes\n test/clip-twice-ps2-rgb24-ref.png                  |  Bin 0 -> 541 bytes\n test/clip-twice-ps3-argb32-ref.png                 |  Bin 0 -> 575 bytes\n test/clip-twice-ps3-rgb24-ref.png                  |  Bin 0 -> 541 bytes\n test/clipped-group-ps-ref.png                      |  Bin 343 -> 0 bytes\n test/clipped-group-ps2-ref.png                     |  Bin 0 -> 343 bytes\n test/clipped-group-ps3-ref.png                     |  Bin 0 -> 343 bytes\n test/close-path-ps-ref.png                         |  Bin 309 -> 0 bytes\n test/close-path-ps2-ref.png                        |  Bin 0 -> 309 bytes\n test/close-path-ps3-ref.png                        |  Bin 0 -> 309 bytes\n test/copy-path-ps-ref.png                          |  Bin 474 -> 0 bytes\n test/copy-path-ps2-ref.png                         |  Bin 0 -> 474 bytes\n test/copy-path-ps3-ref.png                         |  Bin 0 -> 474 bytes\n test/dash-caps-joins-ps-argb32-ref.png             |  Bin 3870 -> 0 bytes\n test/dash-caps-joins-ps-rgb24-ref.png              |  Bin 3870 -> 0 bytes\n test/dash-caps-joins-ps2-argb32-ref.png            |  Bin 0 -> 3870 bytes\n test/dash-caps-joins-ps2-rgb24-ref.png             |  Bin 0 -> 3870 bytes\n test/dash-caps-joins-ps3-argb32-ref.png            |  Bin 0 -> 3870 bytes\n test/dash-caps-joins-ps3-rgb24-ref.png             |  Bin 0 -> 3870 bytes\n test/dash-curve-ps-ref.png                         |  Bin 27293 -> 0 bytes\n test/dash-curve-ps2-ref.png                        |  Bin 0 -> 27293 bytes\n test/dash-curve-ps3-ref.png                        |  Bin 0 -> 27293 bytes\n test/dash-scale-ps-argb32-ref.png                  |  Bin 6318 -> 0 bytes\n test/dash-scale-ps-rgb24-ref.png                   |  Bin 6316 -> 0 bytes\n test/dash-scale-ps2-argb32-ref.png                 |  Bin 0 -> 6318 bytes\n test/dash-scale-ps2-rgb24-ref.png                  |  Bin 0 -> 6316 bytes\n test/dash-scale-ps3-argb32-ref.png                 |  Bin 0 -> 6318 bytes\n test/dash-scale-ps3-rgb24-ref.png                  |  Bin 0 -> 6316 bytes\n test/dash-state-ps-ref.png                         |  Bin 10219 -> 0 bytes\n test/dash-state-ps2-ref.png                        |  Bin 0 -> 10219 bytes\n test/dash-state-ps3-ref.png                        |  Bin 0 -> 10219 bytes\n test/dash-zero-length-ps-ref.png                   |  Bin 319 -> 0 bytes\n test/dash-zero-length-ps-rgb24-ref.png             |  Bin 304 -> 0 bytes\n test/dash-zero-length-ps2-ref.png                  |  Bin 0 -> 319 bytes\n test/dash-zero-length-ps2-rgb24-ref.png            |  Bin 0 -> 304 bytes\n test/dash-zero-length-ps3-ref.png                  |  Bin 0 -> 319 bytes\n test/dash-zero-length-ps3-rgb24-ref.png            |  Bin 0 -> 304 bytes\n test/degenerate-arc-ps-ref.png                     |  Bin 585 -> 0 bytes\n test/degenerate-arc-ps2-ref.png                    |  Bin 0 -> 585 bytes\n test/degenerate-arc-ps3-ref.png                    |  Bin 0 -> 585 bytes\n test/degenerate-path-ps-argb32-ref.png             |  Bin 390 -> 0 bytes\n test/degenerate-path-ps-rgb24-ref.png              |  Bin 358 -> 0 bytes\n test/degenerate-path-ps2-argb32-ref.png            |  Bin 0 -> 390 bytes\n test/degenerate-path-ps2-rgb24-ref.png             |  Bin 0 -> 358 bytes\n test/degenerate-path-ps3-argb32-ref.png            |  Bin 0 -> 390 bytes\n test/degenerate-path-ps3-rgb24-ref.png             |  Bin 0 -> 358 bytes\n test/degenerate-pen-ps-ref.png                     |  Bin 865 -> 0 bytes\n test/degenerate-pen-ps2-ref.png                    |  Bin 0 -> 865 bytes\n test/degenerate-pen-ps3-ref.png                    |  Bin 0 -> 865 bytes\n test/device-offset-fractional-ps-ref.png           |  Bin 201 -> 0 bytes\n test/device-offset-fractional-ps2-ref.png          |  Bin 0 -> 201 bytes\n test/device-offset-fractional-ps3-ref.png          |  Bin 0 -> 201 bytes\n test/extend-reflect-ps-ref.png                     |  Bin 153322 -> 0 bytes\n test/extend-reflect-ps2-ref.png                    |  Bin 0 -> 153322 bytes\n test/extend-reflect-ps3-ref.png                    |  Bin 0 -> 153322 bytes\n test/extend-reflect-similar-ps-ref.png             |  Bin 153322 -> 0 bytes\n test/extend-reflect-similar-ps2-ref.png            |  Bin 0 -> 153322 bytes\n test/extend-reflect-similar-ps3-ref.png            |  Bin 0 -> 153322 bytes\n test/fill-alpha-pattern-ps-ref.png                 |  Bin 4380 -> 0 bytes\n test/fill-alpha-pattern-ps3-ref.png                |  Bin 0 -> 4380 bytes\n test/fill-and-stroke-ps-argb32-ref.png             |  Bin 310 -> 0 bytes\n test/fill-and-stroke-ps-rgb24-ref.png              |  Bin 319 -> 0 bytes\n test/fill-and-stroke-ps2-argb32-ref.png            |  Bin 0 -> 310 bytes\n test/fill-and-stroke-ps2-rgb24-ref.png             |  Bin 0 -> 319 bytes\n test/fill-and-stroke-ps3-argb32-ref.png            |  Bin 0 -> 310 bytes\n test/fill-and-stroke-ps3-rgb24-ref.png             |  Bin 0 -> 319 bytes\n test/fill-missed-stop-ps-argb32-ref.png            |  Bin 564 -> 0 bytes\n test/fill-missed-stop-ps-rgb24-ref.png             |  Bin 531 -> 0 bytes\n test/fill-missed-stop-ps2-argb32-ref.png           |  Bin 0 -> 564 bytes\n test/fill-missed-stop-ps2-rgb24-ref.png            |  Bin 0 -> 531 bytes\n test/fill-missed-stop-ps3-argb32-ref.png           |  Bin 0 -> 564 bytes\n test/fill-missed-stop-ps3-rgb24-ref.png            |  Bin 0 -> 531 bytes\n test/fill-rule-ps-argb32-ref.png                   |  Bin 2253 -> 0 bytes\n test/fill-rule-ps-rgb24-ref.png                    |  Bin 2031 -> 0 bytes\n test/fill-rule-ps2-argb32-ref.png                  |  Bin 0 -> 2253 bytes\n test/fill-rule-ps2-rgb24-ref.png                   |  Bin 0 -> 2031 bytes\n test/fill-rule-ps3-argb32-ref.png                  |  Bin 0 -> 2253 bytes\n test/fill-rule-ps3-rgb24-ref.png                   |  Bin 0 -> 2031 bytes\n test/finer-grained-fallbacks-ps-argb32-ref.png     |  Bin 1047 -> 0 bytes\n test/finer-grained-fallbacks-ps-rgb24-ref.png      |  Bin 819 -> 0 bytes\n test/finer-grained-fallbacks-ps2-argb32-ref.png    |  Bin 0 -> 1047 bytes\n test/finer-grained-fallbacks-ps2-rgb24-ref.png     |  Bin 0 -> 819 bytes\n test/finer-grained-fallbacks-ps3-argb32-ref.png    |  Bin 0 -> 1047 bytes\n test/finer-grained-fallbacks-ps3-rgb24-ref.png     |  Bin 0 -> 819 bytes\n test/font-matrix-translation-ps-argb32-ref.png     |  Bin 748 -> 0 bytes\n test/font-matrix-translation-ps-rgb24-ref.png      |  Bin 748 -> 0 bytes\n test/font-matrix-translation-ps2-argb32-ref.png    |  Bin 0 -> 748 bytes\n test/font-matrix-translation-ps2-rgb24-ref.png     |  Bin 0 -> 748 bytes\n test/font-matrix-translation-ps3-argb32-ref.png    |  Bin 0 -> 748 bytes\n test/font-matrix-translation-ps3-rgb24-ref.png     |  Bin 0 -> 748 bytes\n test/ft-show-glyphs-positioning-ps-ref.png         |  Bin 2269 -> 0 bytes\n test/ft-show-glyphs-positioning-ps2-ref.png        |  Bin 0 -> 2269 bytes\n test/ft-show-glyphs-positioning-ps3-ref.png        |  Bin 0 -> 2269 bytes\n test/ft-show-glyphs-table-ps-ref.png               |  Bin 5687 -> 0 bytes\n test/ft-show-glyphs-table-ps2-ref.png              |  Bin 0 -> 5687 bytes\n test/ft-show-glyphs-table-ps3-ref.png              |  Bin 0 -> 5687 bytes\n test/ft-text-antialias-none-ps-argb32-ref.png      |  Bin 335 -> 0 bytes\n test/ft-text-antialias-none-ps2-argb32-ref.png     |  Bin 0 -> 335 bytes\n test/ft-text-antialias-none-ps3-argb32-ref.png     |  Bin 0 -> 335 bytes\n test/ft-text-vertical-layout-type1-ps-ref.png      |  Bin 1846 -> 0 bytes\n test/ft-text-vertical-layout-type1-ps2-ref.png     |  Bin 0 -> 1846 bytes\n test/ft-text-vertical-layout-type1-ps3-ref.png     |  Bin 0 -> 1846 bytes\n test/ft-text-vertical-layout-type3-ps-ref.png      |  Bin 1804 -> 0 bytes\n test/ft-text-vertical-layout-type3-ps2-ref.png     |  Bin 0 -> 1804 bytes\n test/ft-text-vertical-layout-type3-ps3-ref.png     |  Bin 0 -> 1804 bytes\n test/glyph-cache-pressure-ps-ref.png               |  Bin 1454 -> 0 bytes\n test/glyph-cache-pressure-ps2-ref.png              |  Bin 0 -> 1454 bytes\n test/glyph-cache-pressure-ps3-ref.png              |  Bin 0 -> 1454 bytes\n test/gradient-alpha-ps-argb32-ref.png              |  Bin 134 -> 0 bytes\n test/gradient-alpha-ps-rgb24-ref.png               |  Bin 130 -> 0 bytes\n test/gradient-alpha-ps2-argb32-ref.png             |  Bin 0 -> 134 bytes\n test/gradient-alpha-ps2-rgb24-ref.png              |  Bin 0 -> 130 bytes\n test/gradient-alpha-ps3-argb32-ref.png             |  Bin 0 -> 134 bytes\n test/gradient-alpha-ps3-rgb24-ref.png              |  Bin 0 -> 130 bytes\n test/gradient-constant-alpha-ps-ref.png            |  Bin 124 -> 0 bytes\n test/gradient-constant-alpha-ps-rgb24-ref.png      |  Bin 124 -> 0 bytes\n test/gradient-constant-alpha-ps2-ref.png           |  Bin 0 -> 124 bytes\n test/gradient-constant-alpha-ps2-rgb24-ref.png     |  Bin 0 -> 124 bytes\n test/gradient-constant-alpha-ps3-ref.png           |  Bin 0 -> 124 bytes\n test/gradient-constant-alpha-ps3-rgb24-ref.png     |  Bin 0 -> 124 bytes\n test/infinite-join-ps-ref.png                      |  Bin 218 -> 0 bytes\n test/infinite-join-ps2-ref.png                     |  Bin 0 -> 218 bytes\n test/infinite-join-ps3-ref.png                     |  Bin 0 -> 218 bytes\n test/leaky-dash-ps-argb32-ref.png                  |  Bin 286 -> 0 bytes\n test/leaky-dash-ps-rgb24-ref.png                   |  Bin 284 -> 0 bytes\n test/leaky-dash-ps2-argb32-ref.png                 |  Bin 0 -> 286 bytes\n test/leaky-dash-ps2-rgb24-ref.png                  |  Bin 0 -> 284 bytes\n test/leaky-dash-ps3-argb32-ref.png                 |  Bin 0 -> 286 bytes\n test/leaky-dash-ps3-rgb24-ref.png                  |  Bin 0 -> 284 bytes\n test/leaky-dashed-rectangle-ps-ref.png             |  Bin 444 -> 0 bytes\n test/leaky-dashed-rectangle-ps2-ref.png            |  Bin 0 -> 444 bytes\n test/leaky-dashed-rectangle-ps3-ref.png            |  Bin 0 -> 444 bytes\n test/leaky-polygon-ps-ref.png                      |  Bin 354 -> 0 bytes\n test/leaky-polygon-ps2-ref.png                     |  Bin 0 -> 354 bytes\n test/leaky-polygon-ps3-ref.png                     |  Bin 0 -> 354 bytes\n test/line-width-scale-ps-ref.png                   |  Bin 3911 -> 0 bytes\n test/line-width-scale-ps2-ref.png                  |  Bin 0 -> 3911 bytes\n test/line-width-scale-ps3-ref.png                  |  Bin 0 -> 3911 bytes\n test/linear-gradient-ps-ref.png                    |  Bin 779 -> 0 bytes\n test/linear-gradient-ps3-ref.png                   |  Bin 0 -> 779 bytes\n test/linear-gradient-reflect-ps-ref.png            |  Bin 314 -> 0 bytes\n test/linear-gradient-reflect-ps3-ref.png           |  Bin 0 -> 314 bytes\n test/long-dashed-lines-ps-ref.png                  |  Bin 1516 -> 0 bytes\n test/long-dashed-lines-ps2-ref.png                 |  Bin 0 -> 1516 bytes\n test/long-dashed-lines-ps3-ref.png                 |  Bin 0 -> 1516 bytes\n test/meta-surface-pattern-ps-argb32-ref.png        |  Bin 3257 -> 0 bytes\n test/meta-surface-pattern-ps-rgb24-ref.png         |  Bin 3873 -> 0 bytes\n test/meta-surface-pattern-ps2-argb32-ref.png       |  Bin 0 -> 3257 bytes\n test/meta-surface-pattern-ps2-rgb24-ref.png        |  Bin 0 -> 3873 bytes\n test/meta-surface-pattern-ps3-argb32-ref.png       |  Bin 0 -> 3257 bytes\n test/meta-surface-pattern-ps3-rgb24-ref.png        |  Bin 0 -> 3873 bytes\n test/new-sub-path-ps-argb32-ref.png                |  Bin 556 -> 0 bytes\n test/new-sub-path-ps-rgb24-ref.png                 |  Bin 423 -> 0 bytes\n test/new-sub-path-ps2-argb32-ref.png               |  Bin 0 -> 556 bytes\n test/new-sub-path-ps2-rgb24-ref.png                |  Bin 0 -> 423 bytes\n test/new-sub-path-ps3-argb32-ref.png               |  Bin 0 -> 556 bytes\n test/new-sub-path-ps3-rgb24-ref.png                |  Bin 0 -> 423 bytes\n test/over-above-source-ps-argb32-ref.png           |  Bin 636 -> 0 bytes\n test/over-above-source-ps2-argb32-ref.png          |  Bin 0 -> 636 bytes\n test/over-above-source-ps3-argb32-ref.png          |  Bin 0 -> 636 bytes\n test/over-around-source-ps-argb32-ref.png          |  Bin 632 -> 0 bytes\n test/over-around-source-ps-rgb24-ref.png           |  Bin 538 -> 0 bytes\n test/over-around-source-ps2-argb32-ref.png         |  Bin 0 -> 632 bytes\n test/over-around-source-ps2-rgb24-ref.png          |  Bin 0 -> 538 bytes\n test/over-around-source-ps3-argb32-ref.png         |  Bin 0 -> 632 bytes\n test/over-around-source-ps3-rgb24-ref.png          |  Bin 0 -> 538 bytes\n test/over-below-source-ps-argb32-ref.png           |  Bin 503 -> 0 bytes\n test/over-below-source-ps2-argb32-ref.png          |  Bin 0 -> 503 bytes\n test/over-below-source-ps3-argb32-ref.png          |  Bin 0 -> 503 bytes\n test/over-between-source-ps-argb32-ref.png         |  Bin 678 -> 0 bytes\n test/over-between-source-ps2-argb32-ref.png        |  Bin 0 -> 678 bytes\n test/over-between-source-ps3-argb32-ref.png        |  Bin 0 -> 678 bytes\n test/random-intersections-ps-ref.png               |  Bin 89253 -> 0 bytes\n test/random-intersections-ps2-ref.png              |  Bin 0 -> 89253 bytes\n test/random-intersections-ps3-ref.png              |  Bin 0 -> 89253 bytes\n test/rectilinear-miter-limit-ps-ref.png            |  Bin 221 -> 0 bytes\n test/rectilinear-miter-limit-ps2-ref.png           |  Bin 0 -> 221 bytes\n test/rectilinear-miter-limit-ps3-ref.png           |  Bin 0 -> 221 bytes\n test/reflected-stroke-ps-ref.png                   |  Bin 3898 -> 0 bytes\n test/reflected-stroke-ps2-ref.png                  |  Bin 0 -> 3898 bytes\n test/reflected-stroke-ps3-ref.png                  |  Bin 0 -> 3898 bytes\n test/rel-path-ps-rgb24-ref.png                     |  Bin 243 -> 0 bytes\n test/rel-path-ps2-rgb24-ref.png                    |  Bin 0 -> 243 bytes\n test/rel-path-ps3-rgb24-ref.png                    |  Bin 0 -> 243 bytes\n test/rotate-image-surface-paint-ps-ref.png         |  Bin 212 -> 0 bytes\n test/rotate-image-surface-paint-ps2-ref.png        |  Bin 0 -> 212 bytes\n test/rotate-image-surface-paint-ps3-ref.png        |  Bin 0 -> 212 bytes\n test/select-font-face-ps-ref.png                   |  Bin 959 -> 0 bytes\n test/select-font-face-ps2-ref.png                  |  Bin 0 -> 959 bytes\n test/select-font-face-ps3-ref.png                  |  Bin 0 -> 959 bytes\n test/self-copy-ps-ref.png                          |  Bin 335 -> 0 bytes\n test/self-copy-ps2-ref.png                         |  Bin 0 -> 335 bytes\n test/self-copy-ps3-ref.png                         |  Bin 0 -> 335 bytes\n test/show-text-current-point-ps-ref.png            |  Bin 1356 -> 0 bytes\n test/show-text-current-point-ps2-ref.png           |  Bin 0 -> 1356 bytes\n test/show-text-current-point-ps3-ref.png           |  Bin 0 -> 1356 bytes\n test/skew-extreme-ps-ref.png                       |  Bin 1048 -> 0 bytes\n test/skew-extreme-ps2-ref.png                      |  Bin 0 -> 1048 bytes\n test/skew-extreme-ps3-ref.png                      |  Bin 0 -> 1048 bytes\n test/smask-ps-ref.png                              |  Bin 3669 -> 0 bytes\n test/smask-ps2-ref.png                             |  Bin 0 -> 3669 bytes\n test/smask-ps3-ref.png                             |  Bin 0 -> 3669 bytes\n test/smask-text-ps-ref.png                         |  Bin 2023 -> 0 bytes\n test/smask-text-ps2-ref.png                        |  Bin 0 -> 2023 bytes\n test/smask-text-ps3-ref.png                        |  Bin 0 -> 2023 bytes\n test/source-clip-scale-ps-argb32-ref.png           |  Bin 183 -> 0 bytes\n test/source-clip-scale-ps-rgb24-ref.png            |  Bin 183 -> 0 bytes\n test/source-clip-scale-ps2-argb32-ref.png          |  Bin 0 -> 183 bytes\n test/source-clip-scale-ps2-rgb24-ref.png           |  Bin 0 -> 183 bytes\n test/source-clip-scale-ps3-argb32-ref.png          |  Bin 0 -> 183 bytes\n test/source-clip-scale-ps3-rgb24-ref.png           |  Bin 0 -> 183 bytes\n test/stroke-ctm-caps-ps-ref.png                    |  Bin 1079 -> 0 bytes\n test/stroke-ctm-caps-ps2-ref.png                   |  Bin 0 -> 1079 bytes\n test/stroke-ctm-caps-ps3-ref.png                   |  Bin 0 -> 1079 bytes\n test/stroke-image-ps-ref.png                       |  Bin 1786 -> 0 bytes\n test/stroke-image-ps2-ref.png                      |  Bin 0 -> 1786 bytes\n test/stroke-image-ps3-ref.png                      |  Bin 0 -> 1786 bytes\n test/surface-pattern-ps-argb32-ref.png             |  Bin 2520 -> 0 bytes\n test/surface-pattern-ps2-argb32-ref.png            |  Bin 0 -> 2520 bytes\n test/surface-pattern-ps3-argb32-ref.png            |  Bin 0 -> 2520 bytes\n test/surface-pattern-scale-down-ps-argb32-ref.png  |  Bin 1400 -> 0 bytes\n test/surface-pattern-scale-down-ps2-argb32-ref.png |  Bin 0 -> 1400 bytes\n test/surface-pattern-scale-down-ps3-argb32-ref.png |  Bin 0 -> 1400 bytes\n test/surface-pattern-scale-up-ps-argb32-ref.png    |  Bin 1011 -> 0 bytes\n test/surface-pattern-scale-up-ps2-argb32-ref.png   |  Bin 0 -> 1011 bytes\n test/surface-pattern-scale-up-ps3-argb32-ref.png   |  Bin 0 -> 1011 bytes\n test/text-pattern-ps-argb32-ref.png                |  Bin 966 -> 0 bytes\n test/text-pattern-ps-rgb24-ref.png                 |  Bin 924 -> 0 bytes\n test/text-pattern-ps3-argb32-ref.png               |  Bin 0 -> 966 bytes\n test/text-pattern-ps3-rgb24-ref.png                |  Bin 0 -> 924 bytes\n test/text-rotate-ps-ref.png                        |  Bin 6851 -> 0 bytes\n test/text-rotate-ps2-ref.png                       |  Bin 0 -> 6851 bytes\n test/text-rotate-ps3-ref.png                       |  Bin 0 -> 6851 bytes\n test/text-transform-ps-ref.png                     |  Bin 4154 -> 0 bytes\n test/text-transform-ps2-ref.png                    |  Bin 0 -> 4154 bytes\n test/text-transform-ps3-ref.png                    |  Bin 0 -> 4154 bytes\n test/transforms-ps-ref.png                         |  Bin 418 -> 0 bytes\n test/transforms-ps2-ref.png                        |  Bin 0 -> 418 bytes\n test/transforms-ps3-ref.png                        |  Bin 0 -> 418 bytes\n test/trap-clip-ps-argb32-ref.png                   |  Bin 5591 -> 0 bytes\n test/trap-clip-ps-rgb24-ref.png                    |  Bin 5512 -> 0 bytes\n test/trap-clip-ps3-argb32-ref.png                  |  Bin 0 -> 5591 bytes\n test/trap-clip-ps3-rgb24-ref.png                   |  Bin 0 -> 5512 bytes\n test/user-font-proxy-ps-ref.png                    |  Bin 8171 -> 0 bytes\n test/user-font-proxy-ps2-ref.png                   |  Bin 0 -> 8171 bytes\n test/user-font-proxy-ps3-ref.png                   |  Bin 0 -> 8171 bytes\n test/user-font-ps-ref.png                          |  Bin 5043 -> 0 bytes\n test/user-font-ps2-ref.png                         |  Bin 0 -> 5043 bytes\n test/user-font-ps3-ref.png                         |  Bin 0 -> 5043 bytes\n test/user-font-rescale-ps-ref.png                  |  Bin 8041 -> 0 bytes\n test/user-font-rescale-ps2-ref.png                 |  Bin 0 -> 8041 bytes\n test/user-font-rescale-ps3-ref.png                 |  Bin 0 -> 8041 bytes\n 289 files changed, 277 insertions(+), 116 deletions(-)\n\ncommit 0c030d3b768718eac5d429d0c819934f32896b25\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Fri Sep 26 15:26:40 2008 +0100\n\n    [boilerplate] Add svg-1.2 target.\n    \n    SVG 1.2 is sufficiently different from 1.1 that it has separate code\n    paths within cairo-svg-surface and so justifies its own boilerplate\n    target.\n\n boilerplate/cairo-boilerplate-svg-private.h        |   30 ++++++---\n boilerplate/cairo-boilerplate-svg.c                |   48 ++++++++++++--\n boilerplate/cairo-boilerplate.c                    |   24 +++++--\n test/Makefile.am                                   |   66 +++++++++++++-------\n test/caps-joins-alpha-svg-ref.png                  |  Bin 2454 -> 0 bytes\n test/caps-joins-alpha-svg11-ref.png                |  Bin 0 -> 2454 bytes\n test/caps-joins-alpha-svg12-ref.png                |  Bin 0 -> 2454 bytes\n test/font-matrix-translation-svg-ref.png           |  Bin 970 -> 0 bytes\n test/font-matrix-translation-svg11-ref.png         |  Bin 0 -> 970 bytes\n test/font-matrix-translation-svg12-ref.png         |  Bin 0 -> 970 bytes\n test/ft-show-glyphs-positioning-svg-ref.png        |  Bin 6590 -> 0 bytes\n test/ft-show-glyphs-positioning-svg11-ref.png      |  Bin 0 -> 6590 bytes\n test/ft-show-glyphs-positioning-svg12-ref.png      |  Bin 0 -> 6590 bytes\n test/ft-text-vertical-layout-type1-svg-ref.png     |  Bin 3973 -> 0 bytes\n test/ft-text-vertical-layout-type1-svg11-ref.png   |  Bin 0 -> 3973 bytes\n test/ft-text-vertical-layout-type1-svg12-ref.png   |  Bin 0 -> 3973 bytes\n test/ft-text-vertical-layout-type3-svg-ref.png     |  Bin 3957 -> 0 bytes\n test/ft-text-vertical-layout-type3-svg11-ref.png   |  Bin 0 -> 3957 bytes\n test/ft-text-vertical-layout-type3-svg12-ref.png   |  Bin 0 -> 3957 bytes\n test/linear-gradient-svg-ref.png                   |  Bin 1000 -> 0 bytes\n test/linear-gradient-svg11-ref.png                 |  Bin 0 -> 1000 bytes\n test/linear-gradient-svg12-ref.png                 |  Bin 0 -> 1000 bytes\n test/mask-alpha-svg-argb32-ref.png                 |  Bin 615 -> 0 bytes\n test/mask-alpha-svg11-argb32-ref.png               |  Bin 0 -> 615 bytes\n test/mask-alpha-svg12-argb32-ref.png               |  Bin 0 -> 615 bytes\n test/mask-ctm-svg-argb32-ref.png                   |  Bin 108 -> 0 bytes\n test/mask-ctm-svg11-argb32-ref.png                 |  Bin 0 -> 108 bytes\n test/mask-ctm-svg12-argb32-ref.png                 |  Bin 0 -> 108 bytes\n test/mask-surface-ctm-svg-argb32-ref.png           |  Bin 108 -> 0 bytes\n test/mask-surface-ctm-svg11-argb32-ref.png         |  Bin 0 -> 108 bytes\n test/mask-surface-ctm-svg12-argb32-ref.png         |  Bin 0 -> 108 bytes\n test/mask-svg-argb32-ref.png                       |  Bin 8527 -> 0 bytes\n test/mask-svg-rgb24-ref.png                        |  Bin 7935 -> 0 bytes\n test/mask-svg11-argb32-ref.png                     |  Bin 0 -> 8527 bytes\n test/mask-svg11-rgb24-ref.png                      |  Bin 0 -> 7935 bytes\n test/mask-svg12-argb32-ref.png                     |  Bin 0 -> 8527 bytes\n test/mask-svg12-rgb24-ref.png                      |  Bin 0 -> 7935 bytes\n test/mask-transformed-similar-svg-ref.png          |  Bin 4051 -> 0 bytes\n test/mask-transformed-similar-svg11-ref.png        |  Bin 0 -> 4051 bytes\n test/mask-transformed-similar-svg12-ref.png        |  Bin 0 -> 4051 bytes\n test/meta-surface-pattern-svg-argb32-ref.png       |  Bin 3924 -> 0 bytes\n test/meta-surface-pattern-svg-rgb24-ref.png        |  Bin 4593 -> 0 bytes\n test/meta-surface-pattern-svg11-argb32-ref.png     |  Bin 0 -> 3924 bytes\n test/meta-surface-pattern-svg11-rgb24-ref.png      |  Bin 0 -> 4593 bytes\n test/meta-surface-pattern-svg12-argb32-ref.png     |  Bin 0 -> 3924 bytes\n test/meta-surface-pattern-svg12-rgb24-ref.png      |  Bin 0 -> 4593 bytes\n test/paint-source-alpha-svg-ref.png                |  Bin 505 -> 0 bytes\n test/paint-source-alpha-svg11-ref.png              |  Bin 0 -> 505 bytes\n test/paint-source-alpha-svg12-ref.png              |  Bin 0 -> 505 bytes\n test/paint-with-alpha-svg-ref.png                  |  Bin 516 -> 0 bytes\n test/paint-with-alpha-svg11-ref.png                |  Bin 0 -> 516 bytes\n test/paint-with-alpha-svg12-ref.png                |  Bin 0 -> 516 bytes\n test/push-group-svg-argb32-ref.png                 |  Bin 2935 -> 0 bytes\n test/push-group-svg11-argb32-ref.png               |  Bin 0 -> 2935 bytes\n test/push-group-svg12-argb32-ref.png               |  Bin 0 -> 2935 bytes\n test/radial-gradient-svg-ref.png                   |  Bin 91039 -> 0 bytes\n test/radial-gradient-svg11-ref.png                 |  Bin 0 -> 91039 bytes\n test/radial-gradient-svg12-ref.png                 |  Bin 0 -> 91039 bytes\n test/rotate-image-surface-paint-svg-ref.png        |  Bin 248 -> 0 bytes\n test/rotate-image-surface-paint-svg11-ref.png      |  Bin 0 -> 248 bytes\n test/rotate-image-surface-paint-svg12-ref.png      |  Bin 0 -> 248 bytes\n test/scale-source-surface-paint-svg-argb32-ref.png |  Bin 182 -> 0 bytes\n test/scale-source-surface-paint-svg-rgb24-ref.png  |  Bin 192 -> 0 bytes\n ...scale-source-surface-paint-svg11-argb32-ref.png |  Bin 0 -> 182 bytes\n .../scale-source-surface-paint-svg11-rgb24-ref.png |  Bin 0 -> 192 bytes\n ...scale-source-surface-paint-svg12-argb32-ref.png |  Bin 0 -> 182 bytes\n .../scale-source-surface-paint-svg12-rgb24-ref.png |  Bin 0 -> 192 bytes\n test/set-source-svg-argb32-ref.png                 |  Bin 104 -> 0 bytes\n test/set-source-svg11-argb32-ref.png               |  Bin 0 -> 104 bytes\n test/set-source-svg12-argb32-ref.png               |  Bin 0 -> 104 bytes\n test/smask-fill-svg-ref.png                        |  Bin 1166 -> 0 bytes\n test/smask-fill-svg11-ref.png                      |  Bin 0 -> 1166 bytes\n test/smask-fill-svg12-ref.png                      |  Bin 0 -> 1166 bytes\n test/smask-mask-svg-ref.png                        |  Bin 2529 -> 0 bytes\n test/smask-mask-svg11-ref.png                      |  Bin 0 -> 2529 bytes\n test/smask-mask-svg12-ref.png                      |  Bin 0 -> 2529 bytes\n test/smask-paint-svg-ref.png                       |  Bin 2612 -> 0 bytes\n test/smask-paint-svg11-ref.png                     |  Bin 0 -> 2612 bytes\n test/smask-paint-svg12-ref.png                     |  Bin 0 -> 2612 bytes\n test/smask-svg-ref.png                             |  Bin 3634 -> 0 bytes\n test/smask-svg11-ref.png                           |  Bin 0 -> 3634 bytes\n test/smask-svg12-ref.png                           |  Bin 0 -> 3634 bytes\n test/smask-text-svg-ref.png                        |  Bin 1886 -> 0 bytes\n test/smask-text-svg11-ref.png                      |  Bin 0 -> 1886 bytes\n test/smask-text-svg12-ref.png                      |  Bin 0 -> 1886 bytes\n test/source-clip-scale-svg-ref.png                 |  Bin 119 -> 0 bytes\n test/source-clip-scale-svg11-ref.png               |  Bin 0 -> 119 bytes\n test/source-clip-scale-svg12-ref.png               |  Bin 0 -> 119 bytes\n test/surface-pattern-svg-ref.png                   |  Bin 17663 -> 0 bytes\n test/surface-pattern-svg11-ref.png                 |  Bin 0 -> 17663 bytes\n test/surface-pattern-svg12-ref.png                 |  Bin 0 -> 17663 bytes\n test/text-pattern-svg-argb32-ref.png               |  Bin 1733 -> 0 bytes\n test/text-pattern-svg-rgb24-ref.png                |  Bin 1563 -> 0 bytes\n test/text-pattern-svg11-argb32-ref.png             |  Bin 0 -> 1733 bytes\n test/text-pattern-svg11-rgb24-ref.png              |  Bin 0 -> 1563 bytes\n test/text-pattern-svg12-argb32-ref.png             |  Bin 0 -> 1733 bytes\n test/text-pattern-svg12-rgb24-ref.png              |  Bin 0 -> 1563 bytes\n test/text-rotate-svg-ref.png                       |  Bin 18301 -> 0 bytes\n test/text-rotate-svg11-ref.png                     |  Bin 0 -> 18301 bytes\n test/text-rotate-svg12-ref.png                     |  Bin 0 -> 18301 bytes\n test/user-font-proxy-svg-ref.png                   |  Bin 17902 -> 0 bytes\n test/user-font-proxy-svg11-ref.png                 |  Bin 0 -> 17902 bytes\n test/user-font-proxy-svg12-ref.png                 |  Bin 0 -> 17902 bytes\n test/user-font-rescale-svg-ref.png                 |  Bin 15741 -> 0 bytes\n test/user-font-rescale-svg11-ref.png               |  Bin 0 -> 15741 bytes\n test/user-font-rescale-svg12-ref.png               |  Bin 0 -> 15741 bytes\n test/user-font-svg-ref.png                         |  Bin 6134 -> 0 bytes\n test/user-font-svg11-ref.png                       |  Bin 0 -> 6134 bytes\n test/user-font-svg12-ref.png                       |  Bin 0 -> 6134 bytes\n 109 files changed, 128 insertions(+), 40 deletions(-)\n\ncommit 86e57671dd21078215505202ef8aa2141d10fb9c\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Sep 26 11:08:22 2008 -0400\n\n    [check-*.sh] Redirect error reports to stderr\n\n doc/public/check-doc-coverage.sh |    6 +++---\n src/check-def.sh                 |    2 +-\n src/check-doc-syntax.sh          |    8 ++++----\n src/check-headers.sh             |    2 +-\n src/check-plt.sh                 |    2 +-\n src/check-preprocessor-syntax.sh |   10 +++++-----\n 6 files changed, 15 insertions(+), 15 deletions(-)\n\ncommit 096f9def0f599e527d97bb979f7cafbc87dcddc6\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Sep 26 10:55:44 2008 -0400\n\n    Add slim markers to make check-plt.sh happy\n\n src/cairo-font-face.c |    4 ++++\n src/cairo-user-font.c |    4 ++++\n src/cairo.c           |    5 +++++\n src/cairoint.h        |   13 +++++++++++++\n 4 files changed, 26 insertions(+)\n\ncommit 1de059b33bd2e6121e35ccf1c4a35ba7755c44d8\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Sep 26 09:49:50 2008 -0400\n\n    [RELEASING] Add ftp-release@lists.freedesktop.org\n    \n    That list is monitored by various distros to pick up new releases.\n    We should CC release announcements there.\n\n RELEASING |   12 ++++++------\n 1 file changed, 6 insertions(+), 6 deletions(-)\n\ncommit 9662be8ee77e219908b64b82e828d577dcf120f0\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Sep 26 00:22:00 2008 -0400\n\n    [twin-font] Adjust ascent/descent\n    \n    The font data uses a 64 int high font space with baseline at 50.\n\n src/cairo-font-face-twin.c |    6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ncommit 3883a371f2ba78b17a1302ba8c5df1a79f3e4075\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Fri Sep 26 00:20:21 2008 -0400\n\n    [scaled-font] Use full ctm matrix when comparing scaled-font keys\n    \n    We use the full matrix in hash computation, but only compare the\n    non-translation items in equality check.  This is no bug though,\n    as we set the ctm translation components of a scaled font to zero\n    explicitly.  But the change makes the hash and equal functions\n    consistent, which is good.\n\n src/cairo-scaled-font.c |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ncommit 48099af9fed7497a230992e41d559a19c5dbdc60\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Sep 25 13:24:58 2008 +0100\n\n    [boilerplate] Retry conversion in process if first attempt fails.\n    \n    One possibility for a read failure whilst converting the image is if the\n    external utility crashed. This information is important for the test suite\n    as knowing input that causes the converter to crash is just as vital as\n    identifying a crash within the library.\n\n boilerplate/cairo-boilerplate-pdf.c |   11 +----------\n boilerplate/cairo-boilerplate-svg.c |   11 +----------\n boilerplate/cairo-boilerplate.c     |   35 +++++++++++++++++++++++++++++++++--\n boilerplate/cairo-boilerplate.h     |   11 +++++++++--\n 4 files changed, 44 insertions(+), 24 deletions(-)\n\ncommit f2c484d73ce61012a2d9925f15b55e7c51e34b85\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Sep 25 00:16:45 2008 +0100\n\n    [test/any2ppm] Handle short reads/writes.\n    \n    No excuse other than simple laziness - it manifested itself with random\n    \"error whilst reading\" failures.\n\n boilerplate/cairo-boilerplate.c |   24 ++++++++++++++++---\n test/any2ppm.c                  |   50 +++++++++++++++++++++++++++++++++------\n 2 files changed, 64 insertions(+), 10 deletions(-)\n\ncommit 681424cbaf94556bf1804547b42ad642c0a066ab\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Sep 25 10:40:32 2008 +0100\n\n    [analysis] Merge two analysis status codes.\n    \n    Since there is an implicit precedence in the ranking of the analysis\n    return codes, provide a function to centralize the logic within the\n    analysis surface and isolate the backends from the complexity.\n\n src/cairo-analysis-surface-private.h |    3 ++\n src/cairo-analysis-surface.c         |   50 ++++++++++++++++++++++++++--------\n src/cairo-pdf-surface.c              |   31 ++++++---------------\n 3 files changed, 50 insertions(+), 34 deletions(-)\n\ncommit 06f0cc81d227a571e011e83cc192050a34d6ea13\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Sep 25 10:29:27 2008 +0100\n\n    Add a macro to determine whether a status is a fatal error.\n    \n    In a few places we need to check whether we have a fatal error or an\n    internal return code, so provide a utility macro to centralise the check.\n\n src/cairo.c    |    3 +--\n src/cairoint.h |    3 +++\n 2 files changed, 4 insertions(+), 2 deletions(-)\n\ncommit ba18d57339dbedbbdb7f3ca35b06ce6b5dbcd972\nAuthor: Chris Wilson <chris@chris-wilson.co.uk>\nDate:   Thu Sep 25 09:39:41 2008 +0100\n\n    [pdf] Propagate status\n    \n    Check and return a few forgotten error codes from static functions.\n\n src/cairo-pdf-operators.c |   14 +++++++++++---\n src/cairo-pdf-surface.c   |    6 +++++-\n 2 files changed, 16 insertions(+), 4 deletions(-)\n\ncommit 907f550a1b13b0a388f9ff22663911d4aabbe2d8\nAuthor: Adrian Johnson <ajohnson@redneon.com>\nDate:   Fri Sep 26 20:26:55 2008 +0930\n\n    Fix bitmap-font XFAIL\n    \n    Images in PDF are scaled to a unit square. In PS we set the\n    ImageMatrix to do the same. When the image is painted we scale the\n    graphics state to paint the image at the right size. In the case of\n    Type 3 fonts consisting of bitmap images we want to paint the images\n    at their original size so we scale the graphics state by the image\n    width and height.\n    \n    The bug was that we were scaling by the width/height in the glyph\n    metrics. For non rotated fonts this worked. However for rotated fonts\n    the width/height of the glyph images may be larger than the\n    width/height in the glyph metrics. This resulted in a Type 3 font\n    where the glyph images were scaled slightly smaller than they should\n    have been.\n\n src/cairo-type3-glyph-surface.c     |   10 +++-------\n test/Makefile.am                    |    1 -\n test/bitmap-font-pdf-argb32-ref.png |  Bin 1064 -> 0 bytes\n 3 files changed, 3 insertions(+), 8 deletions(-)\n\ncommit f8542dc9dd4dd0685f68381f21fa72dbddd8d682\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Thu Sep 25 19:08:24 2008 -0400\n\n    [twin-font] Clean up font data by joining lines and closing paths\n    \n    Two changes here:\n    \n      * Replace move_to;line_to;move_to;line_to sequences with\n        move_to;line_to;line_to when feasible.\n    \n      * Close paths for round glyphs.\n    \n    Both improve the stroke rendering of the joint.\n    \n    The first change also saves 3 bytes per joint (33 such joints).\n    Which we have just left unused for now.  To reclaim them one need\n    to update the charset table.  Something for a lazy Sunday afternoon\n    scripting task.\n    \n    In the saving department, we can save further by:\n    \n      - Getting rid of the left/ascent/descent values as we compute\n        glyph bounding box automatically.  Then we can liberally use\n        the right value to adjust glyph advance width.  Saves three\n        bytes per glyph (there's 96 glyphs in the font).\n    \n      - First operation is always a move_to.  So we can remove the 'm'\n        for that.  Ugly though.\n    \n    And the charset has zeros for the first 32 entries.  Can get rid of\n    that too at the expense of handling it in the code...\n    \n    In total, combining the above we can save some 500 bytes.  The font\n    currently takes about 3.7kb.\n\n src/cairo-font-face-twin-data.c |  154 +++++++++++++++++++--------------------\n src/cairo-font-face-twin.c      |   18 ++++-\n 2 files changed, 91 insertions(+), 81 deletions(-)\n\ncommit d5a998387bcee6569d33375d592190f480f12712\nAuthor: Behdad Esfahbod <behdad@behdad.org>\nDate:   Thu Sep 25 04:27:11 2008 -0400\n\n    Add an internal font face\n    \n    The font data and rendering is adapted from Keith Packard's Twin\n    window system.  The hinting stuff is not ported yet, but hey, it renders!\n    \n    The implementation uses user fonts, and the user font backend is modified\n    to use this font face (which we call \"twin\" font face internally) when\n    a toy font is needed.\n    \n    The font face layer is then modified to use this font if:\n    \n      - The toy font face \"cairo\" is asked for, or\n    \n      - No native font backend is available, or\n    \n      - The preferred native font backend fails to return a font with\n        STATUS_UNSUPPORTED.  No font backend does this right now but\n        the idea is to change FreeType to return it if no fonts found\n        on the system.\n    \n    We also allow building with no font backends now!\n    \n    The new doc/tutorial/src/twin.c file tests the twin face at various\n    sizes.\n\n build/configure.ac.features     |   26 +-\n doc/tutorial/src/twin.c         |   39 ++\n src/Makefile.sources            |    2 +\n src/cairo-font-face-twin-data.c | 1030 +++++++++++++++++++++++++++++++++++++++\n src/cairo-font-face-twin.c      |  199 ++++++++\n src/cairo-font-face.c           |   33 +-\n src/cairo-user-font.c           |   53 +-\n src/cairoint.h                  |   18 +-\n 8 files changed, 1371 insertions(+), 29 deletions(-)\n\ncommit dd7e2461ce748403e121a5de5e4e4c8890e39236\nAuthor: Carl Worth <cworth@cworth.org>\nDate:   Thu Sep 25 16:06:19 2008 -0700\n\n    Increment cairo version to 1.8.1 after the 1.8.0 release.\n\n cairo-version.h |    2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/configure.ac": "AC_PREREQ([2.63])\nCAIRO_PARSE_VERSION\nAC_INIT([cairo],\n\t[cairo_version_major.cairo_version_minor.cairo_version_micro],\n\t[http://bugs.freedesktop.org/enter_bug.cgi?product=cairo],\n\t[cairo],\n\t[http://cairographics.org/])\nAC_CONFIG_AUX_DIR(build)\nAC_CONFIG_MACRO_DIR(build)\nAC_USE_SYSTEM_EXTENSIONS\nAC_CONFIG_SRCDIR(src/cairo.h)\nAC_CONFIG_HEADERS(config.h)\n\nAC_CHECK_HEADERS([unistd.h sys/ioctl.h])\n\nAM_INIT_AUTOMAKE([1.11 foreign -Wall no-define no-dist-gzip dist-xz])\nAM_SILENT_RULES([yes])\nm4_ifdef([AM_PROG_AR], [AM_PROG_AR]) dnl Workaround for Automake 1.12\n\n# Initialize libtool\nLT_PREREQ([2.2])\nLT_INIT([win32-dll])\n\n# Api documentation\nGTK_DOC_CHECK([1.15],[--flavour no-tmpl])\n\nAC_SYS_LARGEFILE\n\ndnl ===========================================================================\ndnl\ndnl The order of the includes here is rather important\ndnl\nm4_include(build/configure.ac.version)\tdnl macros setting up various version declares\nm4_include(build/configure.ac.tools)\tdnl checks for tools we use\nm4_include(build/configure.ac.features)\tdnl macros for backend/feature handling\nm4_include(build/configure.ac.warnings)\tdnl checks for compiler warning\nm4_include(build/configure.ac.system)\tdnl checks for system functions, headers, libs\nm4_include(build/configure.ac.analysis)\tdnl checks for analysis tools (lcov, etc)\nm4_include(build/configure.ac.noversion) dnl disable builtin libtool versioning\nm4_include(build/configure.ac.pthread)  dnl checks for pthreads\nAC_CACHE_SAVE\n\ndnl ===========================================================================\n\nAC_CHECK_LIB(z, compress,\n\t [AC_CHECK_HEADER(zlib.h, [\n\t  have_libz=yes\n\t  AC_DEFINE(HAVE_ZLIB, 1, [Define to 1 if you have zlib available])\n\t ],\n\t [have_libz=\"no (requires zlib http://www.gzip.org/zlib/)\"])],\n\t [have_libz=\"no (requires zlib http://www.gzip.org/zlib/)\"])\n\nsave_LIBS=\"$LIBS\"\nAC_CHECK_LIB(lzo2, lzo2a_decompress,\n\t [AC_CHECK_HEADER(lzo/lzo2a.h, [\n\t  have_lzo=yes\n\t  AC_DEFINE(HAVE_LZO, 1, [Define to 1 if you have lzo available])\n\t  lzo_LIBS=\"-llzo2\"\n\t ],\n\t [have_lzo=\"no (requires lzpo http://www.oberhumer.com/opensource/lzo/)\"])],\n\t [have_lzo=\"no (requires lzpo http://www.oberhumer.com/opensource/lzo/)\"])\nAC_SUBST(lzo_LIBS)\nLIBS=\"$save_LIBS\"\n\nAC_CHECK_LIB(dl, dlsym,\n\t     [have_dlsym=yes; have_dl=yes],\n\t     [have_dlsym=no; have_dl=no])\nif test \"x$have_dlsym\" = \"xno\"; then\n   AC_CHECK_FUNC(dlsym, [have_dlsym=yes], [have_dlsym=no])\nfi\nAC_CHECK_HEADERS(dlfcn.h, [have_dlsym=yes], [have_dlsym=no])\nAM_CONDITIONAL(CAIRO_HAS_DL, test \"x$have_dl\" = \"xyes\")\nif test \"x$have_dlsym\" = \"xyes\"; then\n  AC_DEFINE([CAIRO_HAS_DLSYM], 1, [Define to 1 if dlsym is available])\nfi\nAM_CONDITIONAL(CAIRO_HAS_DLSYM, test \"x$have_dlsym\" = \"xyes\")\n\ndnl ===========================================================================\n\nCAIRO_ENABLE_SURFACE_BACKEND(xlib, Xlib, auto, [\n  xlib_REQUIRES=\"x11 xext\"\n  PKG_CHECK_MODULES(xlib, $xlib_REQUIRES, ,\n\t\t    [xlib_REQUIRES=\"\"\n\t\t     AC_PATH_XTRA\n\t\t     if test \"x$no_x\" = xyes; then\n\t\t       use_xlib=\"no (requires X development libraries)\"\n\t\t     else\n\t\t       xlib_NONPKGCONFIG_LIBS=\"$X_PRE_LIBS $X_LIBS -lX11 -lXext $X_EXTRA_LIBS\"\n\t\t       xlib_NONPKGCONFIG_CFLAGS=$X_CFLAGS\n\t\t     fi])\n\n  AC_CHECK_HEADER(sys/ipc.h)\n  AC_CHECK_HEADER(sys/shm.h)\n\n  if test \"$ac_cv_header_sys_ipc_h\" = \"yes\" -a \"$ac_cv_header_sys_shm_h\" = \"yes\"; then\n      AC_MSG_CHECKING(whether shmctl IPC_RMID allowes subsequent attaches)\n      AC_TRY_RUN([\n\t\t  #include <sys/types.h>\n\t\t  #include <sys/ipc.h>\n\t\t  #include <sys/shm.h>\n\t\t  int main()\n\t\t  {\n\t\t      char *shmaddr;\n\t\t      int id = shmget (IPC_PRIVATE, 4, IPC_CREAT | 0600);\n\t\t      if (id == -1) return 2;\n\t\t      shmaddr = shmat (id, 0, 0);\n\t\t      shmctl (id, IPC_RMID, 0);\n\t\t      if ((char*) shmat (id, 0, 0) == (char*) -1) {\n\t\t\t  shmdt (shmaddr);\n\t\t\t  return 1;\n\t\t      }\n\t\t      shmdt (shmaddr);\n\t\t      shmdt (shmaddr);\n\t\t      return 0;\n\t\t  }\n\t\t  ],\n\t\t  AC_DEFINE(IPC_RMID_DEFERRED_RELEASE, 1,\n\t\t\t    [Define to 1 if shared memory segments are released deferred.])\n\t\t  AC_MSG_RESULT(yes),\n\t\t  AC_MSG_RESULT(no),\n\t\t  AC_MSG_RESULT(assuming no))\n      fi\n\n      AC_CHECK_HEADERS([X11/extensions/XShm.h X11/extensions/shmproto.h X11/extensions/shmstr.h], [], [],\n\t\t       [#include <X11/Xlibint.h>\n\t\t\t#include <X11/Xproto.h>])\n])\n\nCAIRO_ENABLE_SURFACE_BACKEND(xlib_xrender, Xlib Xrender, auto, [\n  if test \"x$use_xlib\" != \"xyes\"; then\n    use_xlib_xrender=\"no (requires --enable-xlib)\"\n  else\n    dnl Check for Xrender header files if the Xrender package is not installed:\n    xlib_xrender_BASE=cairo-xlib\n    xlib_xrender_REQUIRES=\"xrender >= 0.6\"\n    PKG_CHECK_MODULES(xlib_xrender, $xlib_xrender_REQUIRES, ,\n\t\t      [xlib_xrender_REQUIRES=\"\"\n\t\t       old_CPPFLAGS=$CPPFLAGS\n\t\t       CPPFLAGS=\"$CPPFLAGS $xlib_CFLAGS $xlib_NONPKGCONFIG_CFLAGS\"\n\t\t       AC_CHECK_HEADER(X11/extensions/Xrender.h,\n\t\t\t\t       [xlib_xrender_NONPKGCONFIG_LIBS=\"-lXrender\"],\n\t\t\t\t       [use_xlib_xrender=\"no (requires $xlib_xrender_REQUIRES http://freedesktop.org/Software/xlibs)\"],\n\t\t\t\t       [#include <X11/X.h>])\n\t\t       CPPFLAGS=$old_CPPFLAGS\n\t\t      ])\n\n    old_CFLAGS=$CFLAGS\n    old_LIBS=$LIBS\n    CFLAGS=\"$CFLAGS $xlib_CFLAGS $xlib_NONPKGCONFIG_CFLAGS $xlib_xrender_CFLAGS $xlib_xrender_NONPKGCONFIG_CFLAGS\"\n    LIBS=\"$LIBS $xlib_LIBS $xlib_NONPKGCONFIG_LIBS $xlib_xrender_LIBS $xlib_xrender_NONPKGCONFIG_LIBS\"\n    AC_CHECK_FUNCS([XRenderCreateSolidFill XRenderCreateLinearGradient XRenderCreateRadialGradient XRenderCreateConicalGradient])\n    CFLAGS=$old_CFLAGS\n    LIBS=$old_LIBS\n\n  fi\n])\n\ndnl ===========================================================================\n\nCAIRO_ENABLE_SURFACE_BACKEND(xcb, XCB, auto, [\n  xcb_REQUIRES=\"xcb >= 1.6 xcb-render >= 1.6\"\n  PKG_CHECK_MODULES(xcb, $xcb_REQUIRES, ,\n\t\t    [use_xcb=\"no (requires $xcb_REQUIRES http://xcb.freedesktop.org)\"])\n])\n\nCAIRO_ENABLE_FUNCTIONS(xlib_xcb, Xlib/XCB, no, [\n  if test \"x$use_xcb\" = \"xyes\" -a \"x$use_xlib\" = \"xyes\"; then\n    xlib_xcb_REQUIRES=\"x11-xcb\"\n    PKG_CHECK_MODULES(xlib_xcb, $xlib_xcb_REQUIRES, ,\n\t\t      [use_xlib_xcb=\"no (requires $xlib_xcb_REQUIRES http://xcb.freedesktop.org)\"])\n  else\n    use_xlib_xcb=\"no (requires both --enable-xlib and --enable-xcb)\"\n  fi\n])\n\nCAIRO_ENABLE_FUNCTIONS(xcb_shm, XCB/SHM, auto, [\n  if test \"x$use_xcb\" = \"xyes\"; then\n      xcb_shm_REQUIRES=\"xcb-shm\"\n      PKG_CHECK_MODULES(xcb_shm, $xcb_shm_REQUIRES, ,\n\t\t\t[use_xcb_shm=\"no (requires $xcb_shm http://xcb.freedesktop.org)\"])\n  else\n    use_xcb_shm=\"no (requires --enable-xcb)\"\n  fi\n])\n\ndnl ===========================================================================\n\nCAIRO_ENABLE_SURFACE_BACKEND(qt, Qt, no, [\n  qt_REQUIRES=\"QtGui >= 4.4.0\"\n  PKG_CHECK_MODULES(qt, $qt_REQUIRES, ,\n\t\t    [qt_REQUIRES=\"\"\n\t\t     use_qt=\"no (requires Qt4 development libraries)\"\n\t\t     ])\n  qt_NONPKGCONFIG_LIBS=\"-lstdc++\"\n])\n\ndnl ===========================================================================\n\nCAIRO_ENABLE_SURFACE_BACKEND(quartz, Quartz, auto, [\n  dnl There is no pkgconfig for quartz; lets do a header check\n  AC_CHECK_HEADER(ApplicationServices/ApplicationServices.h, , [use_quartz=\"no (requires ApplicationServices framework)\"])\n  if test \"x$use_quartz\" != \"xyes\" ; then\n    dnl check for CoreGraphics as a separate framework\n    AC_CHECK_HEADER(CoreGraphics/CoreGraphics.h, , [use_quartz=\"no (requires CoreGraphics framework)\"])\n    quartz_LIBS=\"-Xlinker -framework -Xlinker CoreGraphics\"\n  else\n    quartz_LIBS=\"-Xlinker -framework -Xlinker ApplicationServices\"\n  fi\n])\n\nCAIRO_ENABLE_FONT_BACKEND(quartz_font, Quartz, auto, [\n  use_quartz_font=$use_quartz\n])\n\nCAIRO_ENABLE_SURFACE_BACKEND(quartz_image, Quartz Image, no, [\n  use_quartz_image=$use_quartz\n])\n\ndnl ===========================================================================\n\nCAIRO_ENABLE_SURFACE_BACKEND(win32, Microsoft Windows, auto, [\n  if test \"x$have_windows\" != xyes; then\n    use_win32=\"no (requires a Win32 platform)\"\n  fi\n  win32_LIBS=\"-lgdi32 -lmsimg32\"\n])\n\nCAIRO_ENABLE_FONT_BACKEND(win32_font, Microsoft Windows, auto, [\n  use_win32_font=$use_win32\n])\n\ntest_win32_printing=no\nif test \"x$use_win32\" = \"xyes\"; then\n  AC_CHECK_PROG(GS, gs, gs)\n  if test \"$GS\"; then\n    AC_DEFINE([CAIRO_CAN_TEST_WIN32_PRINTING_SURFACE], 1, [Define to 1 if the Win32 Printing backend can be tested (needs ghostscript)])\n    test_win32_printing=\"yes\"\n  else\n    AC_MSG_WARN([Win32 Printing backend will not be tested since ghostscript is not available])\n    test_win32_printing=\"no (requires ghostscript)\"\n  fi\nfi\n\nAM_CONDITIONAL(CAIRO_CAN_TEST_WIN32_PRINTING_SURFACE, test \"x$test_win32_printing\" = \"xyes\")\n\ndnl ===========================================================================\n\nCAIRO_ENABLE_SURFACE_BACKEND(skia, Skia, no, [\n  AC_ARG_WITH([skia],\n\t      [AS_HELP_STRING([--with-skia=/path/to/skia],\n\t\t\t      [directory to find compiled skia sources])],\n\t      [skia_DIR=\"$withval\"],\n\t      [skia_DIR=\"`pwd`/../skia\"])\n  AC_ARG_WITH([skia-build-type],\n\t      [AS_HELP_STRING([--with-skia-build-type=(Release|Debug)]\n\t\t\t      [build of skia to link with, default is Release])],\n\t      [skia_BUILD_TYPE=\"$withval\"],\n\t      [skia_BUILD_TYPE=\"Release\"])\n  skia_NONPKGCONFIG_CFLAGS=\"-I$skia_DIR/include/config -I$skia_DIR/include/core -I$skia_DIR/include/effects\"\n  if test \"x$skia_BUILD_TYPE\" = \"xRelease\"; then\n  \tskia_NONPKGCONFIG_CFLAGS=\"-DSK_RELEASE -DSK_CAN_USE_FLOAT $skia_NONPKGCONFIG_CFLAGS\"\n  fi\n  skia_NONPKGCONFIG_LIBS=\"-L$skia_DIR/out/$skia_BUILD_TYPE/lib.target/ -lskia -lstdc++\"\n  AC_SUBST(skia_DIR)\n])\n\ndnl ===========================================================================\n\nCAIRO_ENABLE_SURFACE_BACKEND(os2, OS/2, no, [\n  case \"$host\" in\n    *-*-os2*)\n      :\n      ;;\n    *)\n      use_os2=\"no (requires an OS/2 platform)\"\n      ;;\n  esac\n])\n\ndnl ===========================================================================\n\nCAIRO_ENABLE_SURFACE_BACKEND(beos, BeOS/Zeta, no, [\n  case \"$host\" in\n    *-*-beos)\n      beos_LIBS=\"\"\n      dnl Add libbe and libzeta if available\n      AC_CHECK_LIB(be,main,beos_LIBS=\"$beos_LIBS -lbe\")\n      AC_CHECK_LIB(zeta,main,beos_LIBS=\"$beos_LIBS -lzeta\")\n      ;;\n    *)\n      use_beos=\"no (requires a BeOS platform)\"\n      ;;\n  esac\n])\n\ndnl ===========================================================================\n\nCAIRO_ENABLE_SURFACE_BACKEND(drm, DRM, no, [\n  drm_REQUIRES=\"libudev >= 136\"\n  PKG_CHECK_MODULES(drm, $drm_REQUIRES, ,\n   [use_drm=\"no (requires $drm_REQUIRES, udev is available from git://git.kernel.org/pub/scm/linux/hotplug/udev.git)\"])\n])\n\nCAIRO_ENABLE_SURFACE_BACKEND(gallium, Gallium3D, no, [\n  if test \"x$use_drm\" = \"xyes\"; then\n      AC_ARG_WITH([gallium],\n\t\t  [AS_HELP_STRING([--with-gallium=/path/to/mesa],\n\t\t\t\t  [directory to find gallium enabled mesa])],\n\t\t  [mesa_DIR=\"$withval\"],\n\t\t  [mesa_DIR=\"`pwd`/../mesa\"])\n      gallium_DIR=\"$mesa_DIR/src/gallium\"\n      gallium_NONPKGCONFIG_CFLAGS=\"-I$mesa_DIR/include -I$mesa_DIR/src/mesa -I$gallium_DIR/include -I$gallium_DIR/auxiliary\"\n      gallium_NONPKGCONFIG_LIBS=\"-lGL\"\n      AC_SUBST(mesa_DIR)\n      AC_SUBST(gallium_DIR)\n  else\n    use_gallium=\"no (requires --enable-drm)\"\n  fi\n])\n\ndnl ===========================================================================\n\nCAIRO_ENABLE_FUNCTIONS(png, PNG, yes, [\n  use_png=no\n  AC_ARG_VAR([png_REQUIRES], [module name for libpng to search for using pkg-config])\n  if test \"x$png_REQUIRES\" = x; then\n    # libpng13 is GnuWin32's libpng-1.2.8 :-(\n    for l in libpng libpng14 libpng12 libpng13 libpng10; do\n      if $PKG_CONFIG --exists $l ; then\n        png_REQUIRES=$l\n        use_png=yes\n        break\n      fi\n    done\n  else\n    use_png=yes\n  fi\n\n  if test \"x$use_png\" = \"xyes\" ; then \n    PKG_CHECK_MODULES(png, $png_REQUIRES, , : )\n  else\n    AC_MSG_WARN([Could not find libpng in the pkg-config search path])\n  fi    \n])\n\ndnl ===========================================================================\nCAIRO_ENABLE_SURFACE_BACKEND(gl, OpenGL, no, [\n  gl_REQUIRES=\"gl\"\n  PKG_CHECK_MODULES(gl, $gl_REQUIRES,, [\n\t  dnl Fallback to searching for headers\n\t  AC_CHECK_HEADER(GL/gl.h,, [use_gl=\"no (gl.pc nor OpenGL headers not found)\"])\n\t  if test \"x$use_gl\" = \"xyes\"; then\n\t      gl_NONPKGCONFIG_CFLAGS=\n\t      gl_NONPKGCONFIG_LIBS=\"-lGL\"\n\t  fi])\n\n  if test \"x$have_dl\" = \"xyes\" -a \"x$have_dlsym\" = \"xyes\"; then\n    gl_LIBS=\"$gl_LIBS -ldl\"\n  fi\n\n  need_glx_functions=yes\n  need_wgl_functions=yes\n  need_egl_functions=yes\n])\n\ndnl ===========================================================================\nCAIRO_ENABLE_SURFACE_BACKEND(glesv2, OpenGLESv2, no, [\n  glesv2_REQUIRES=\"glesv2\"\n  PKG_CHECK_MODULES(glesv2, $glesv2_REQUIRES,, [\n\t  dnl Fallback to searching for headers\n\t  AC_CHECK_HEADER(GLES2/gl2.h,, [use_glesv2=\"no (glesv2.pc nor OpenGL ES 2.0 headers not found)\"])\n\t  if test \"x$use_glesv2\" = \"xyes\"; then\n\t      glesv2_NONPKGCONFIG_CFLAGS=\n\t      glesv2_NONPKGCONFIG_LIBS=\"-lGLESv2\"\n\t  fi])\n\n  if test \"x$have_dl\" = \"xyes\" -a \"x$have_dlsym\" = \"xyes\"; then\n    glesv2_LIBS=\"$glesv2_LIBS -ldl\"\n  fi\n\n  if test \"x$use_glesv2\" = \"xyes\" -a \"x$use_gl\" = \"xyes\"; then\n      AC_MSG_ERROR([use either --enable-gl=yes or --enable-glesv2=yes. Not both at the same time.])\n  fi\n\n  need_egl_functions=yes\n])\n\ndnl ===========================================================================\nCAIRO_ENABLE_SURFACE_BACKEND(cogl, Cogl, no, [\n  cogl_REQUIRES=\"cogl-2.0-experimental\"\n  PKG_CHECK_MODULES(cogl, $cogl_REQUIRES,, [use_cogl=\"no\"])\n])\n\ndnl ===========================================================================\n\nCAIRO_ENABLE_SURFACE_BACKEND(directfb, directfb, no, [\n  directfb_REQUIRES=directfb\n  PKG_CHECK_MODULES(directfb, $directfb_REQUIRES, ,\n\t\t    [use_directfb=\"no (requires $directfb_REQUIRES http://www.directfb.org)\"])\n])\n\ndnl ===========================================================================\n\nCAIRO_ENABLE_SURFACE_BACKEND(vg, OpenVG, no, [\n  dnl There is no pkgconfig for OpenVG; lets do a header check\n  AC_CHECK_HEADER(VG/openvg.h,, [use_vg=\"no (OpenVG headers not found)\"])\n  if test \"x$use_vg\" = \"xyes\"; then\n      vg_NONPKGCONFIG_CFLAGS=\n      vg_NONPKGCONFIG_LIBS=\"-lOpenVG\"\n      need_egl_functions=yes\n      need_glx_functions=yes\n  fi\n])\n\nCAIRO_ENABLE_FUNCTIONS(egl, EGL, auto, [\n  if test \"x$need_egl_functions\" = \"xyes\"; then\n      egl_REQUIRES=\"egl\"\n      PKG_CHECK_MODULES(egl, $egl_REQUIRES, ,\n\t\t    [egl_REQUIRES=\"\"\n\t\t     AC_CHECK_HEADER(EGL/egl.h,, [use_egl=\"no (EGL headers not found)\"])\n\t\t     if test \"x$use_egl\" = \"xyes\"; then\n\t\t\t egl_NONPKGCONFIG_CFLAGS=\n\t\t\t egl_NONPKGCONFIG_LIBS=\n\t\t\t save_LIBS=\"$LIBS\"\n\t\t\t other_egl_LIBS=\"\"\n\t\t\t # Temporary workaround for missing link from egl13\n\t\t\t AC_CHECK_LIB(csi, csi_stream_attachresource, other_egl_LIBS=\"-lcsi\")\n\t\t\t LIBS=\"$other_egl_LIBS $LIBS\"\n\t\t\t for egl_lib in EGL egl13 egl12 egl11; do\n\t\t\t     if test -z \"$egl_NONPKGCONFIG_LIBS\"; then\n\t\t\t\t AC_CHECK_LIB($egl_lib, eglGetError, egl_NONPKGCONFIG_LIBS=\"-l$egl_lib\")\n\t\t\t     fi\n\t\t\t done\n\t\t\t if test -z \"$egl_NONPKGCONFIG_LIBS\"; then\n\t\t\t     use_egl=\"no (EGL library not found)\"\n\t\t\t else\n\t\t\t     egl_NONPKGCONFIG_LIBS=\"$egl_NONPKGCONFIG_LIBS $other_egl_LIBS\"\n\t\t\t fi\n\t\t\t LIBS=\"$save_LIBS\"\n\t\t     fi\n  \t])\n  else\n      use_egl=\"no (not required by any backend)\"\n  fi\n])\n\nCAIRO_ENABLE_FUNCTIONS(glx, GLX, auto, [\n  if test \"x$need_glx_functions\" = \"xyes\"; then\n    save_CFLAGS=\"$CFLAGS\"\n    CFLAGS=\"$CFLAGS $gl_CFLAGS $gl_NONPKGCONFIG_CFLAGS\"\n    AC_CHECK_HEADER(GL/glx.h,, [use_glx=\"no (GLX headers not found)\"])\n    glx_NONPKGCONFIG_CFLAGS=\n    glx_NONPKGCONFIG_LIBS=\"-lGL\"\n    CFLAGS=\"$save_CFLAGS\"\n  else\n      use_glx=\"no (not required by any backend)\"\n  fi\n])\n\nCAIRO_ENABLE_FUNCTIONS(wgl, WGL, auto, [\n  if test \"x$need_wgl_functions\" = \"xyes\"; then\n    AC_CHECK_HEADER(windows.h,, [use_wgl=\"no (WGL headers not found)\"])\n  else\n      use_wgl=\"no (not required by any backend)\"\n  fi\n])\n\ndnl ===========================================================================\n\nany2ppm_cs=no\nCAIRO_ENABLE_SURFACE_BACKEND(script, script, yes, [\n  any2ppm_cs=yes\n])\n\ndnl ===========================================================================\n\n# We use pkg-config to look for freetype2, but fall back to\n# freetype-config if it fails.  We prefer pkg-config, since we can\n# then just put freetype2 >= $FREETYPE_MIN_VERSION in\n# Requires.private, but at least up to 2003-06-07, there was no\n# freetype2.pc in the release.\n#\n# FreeType versions come in three forms:\n#   release (such as 2.1.9)\n#   libtool (such as 9.7.3) (returned by freetype-config and pkg-config)\n#   platform-specific/soname (such as 6.3.4)\n# and they recommend you never use the platform-specific version\n# (see docs/VERSION.DLL in freetype2 sources)\n#\n# Set these as appropriate:\n\n# release number - for information only\nFREETYPE_MIN_RELEASE=2.1.9\n# libtool-specific version - this is what is checked\nFREETYPE_MIN_VERSION=9.7.3\n\nCAIRO_ENABLE_FONT_BACKEND(ft, FreeType, auto, [\n\n    PKG_CHECK_MODULES(FREETYPE, freetype2 >= $FREETYPE_MIN_VERSION,\n                      [freetype_pkgconfig=yes],\n\t\t      [freetype_pkgconfig=no])\n  \n    if test \"x$freetype_pkgconfig\" = \"xyes\"; then\n      ft_REQUIRES=\"freetype2 >= $FREETYPE_MIN_VERSION $ft_REQUIRES\"\n    else\n  \n      if test -z \"$FREETYPE_CONFIG\"; then\n        AC_PATH_PROG(FREETYPE_CONFIG, freetype-config, no)\n      fi\n      if test \"x$FREETYPE_CONFIG\" = \"xno\" ; then\n        use_ft='no (freetype-config not found in path or $FREETYPE_CONFIG)'\n      else\n        AC_MSG_CHECKING(freetype2 libtool version)\n\n        FREETYPE_VERSION=`$FREETYPE_CONFIG --version`\n\tAX_COMPARE_VERSION([$FREETYPE_VERSION], [gt], [$FREETYPE_MIN_VERSION],\n\t\t\t   [AC_MSG_RESULT($FREETYPE_VERSION - OK)\n\t\t\t   ft_NONPKGCONFIG_CFLAGS=`$FREETYPE_CONFIG --cflags`\n\t\t\t   ft_NONPKGCONFIG_LIBS=`$FREETYPE_CONFIG --libs`],\n\t\t\t   [AC_MSG_RESULT($FREETYPE_VERSION - Too old)\n\t\t\t   use_ft=\"no ($FREETYPE_VERSION found; version $FREETYPE_MIN_VERSION from release $FREETYPE_MIN_RELEASE required)\"])\n      fi\n    fi\n\n  ft_CFLAGS=\"$FREETYPE_CFLAGS\"\n  ft_LIBS=\"$FREETYPE_LIBS\"\n])\n\nFONTCONFIG_MIN_VERSION=2.2.95\nCAIRO_ENABLE_FONT_BACKEND(fc, Fontconfig, auto, [\n  use_fc=$use_ft\n  if test \"x$use_fc\" = \"xyes\"; then\n    fc_REQUIRES=\"fontconfig >= $FONTCONFIG_MIN_VERSION\"\n    PKG_CHECK_MODULES(FONTCONFIG, $fc_REQUIRES,,\n\t\t      [use_fc=\"no (requires $fc_REQUIRES)\"])\n  fi\n  fc_CFLAGS=\"$FONTCONFIG_CFLAGS\"\n  fc_LIBS=\"$FONTCONFIG_LIBS\"\n])\n\nif test \"x$use_ft\" = \"xyes\"; then\n  _save_libs=\"$LIBS\"\n  _save_cflags=\"$CFLAGS\"\n  LIBS=\"$LIBS $ft_LIBS\"\n  CFLAGS=\"$CFLAGS $ft_CFLAGS\"\n\n  AC_CHECK_FUNCS(FT_Get_X11_Font_Format FT_GlyphSlot_Embolden FT_GlyphSlot_Oblique FT_Load_Sfnt_Table FT_Library_SetLcdFilter)\n\n  LIBS=\"$_save_libs\"\n  CFLAGS=\"$_save_cflags\"\nfi\n\nif test \"x$use_fc\" = \"xyes\"; then\n  CAIRO_CHECK_FUNCS_WITH_FLAGS(FcInit FcFini, [$FONTCONFIG_CFLAGS], [$FONTCONFIG_LIBS])\nfi\n\ndnl ===========================================================================\n\nCAIRO_ENABLE_SURFACE_BACKEND(ps, PostScript, yes, [\n    # The ps backend requires zlib.\n    use_ps=$have_libz\n    ps_NONPKGCONFIG_LIBS=-lz\n])\n\ndnl ===========================================================================\n\nSPECTRE_VERSION_REQUIRED=0.2.0\ntest_ps=no\nany2ppm_ps=no\nif test \"x$use_ps\" = \"xyes\"; then\n  AC_CHECK_PROG(GS, gs, gs)\n  if test \"$GS\"; then\n    AC_DEFINE([CAIRO_CAN_TEST_PS_SURFACE], 1, [Define to 1 if the PS backend can be tested (needs ghostscript)])\n    test_ps=\"yes\"\n  else\n    AC_MSG_WARN([PS backend will not be tested since ghostscript is not available])\n    test_ps=\"no (requires ghostscript)\"\n  fi\n\n  libspectre_DEPENDENCY=\"libspectre >= $SPECTRE_VERSION_REQUIRED\"\n  PKG_CHECK_MODULES(LIBSPECTRE, $libspectre_DEPENDENCY,\n\t\t    [any2ppm_ps=yes],\n\t\t    [test_ps=\"no (requires libspectre)\"])\nfi\n\nAM_CONDITIONAL(CAIRO_CAN_TEST_PS_SURFACE, test \"x$test_ps\" = \"xyes\")\nAM_CONDITIONAL(CAIRO_HAS_SPECTRE, test \"x$any2ppm_ps\" = \"xyes\")\nif test \"x$any2ppm_ps\" = \"xyes\"; then\n    AC_DEFINE([CAIRO_HAS_SPECTRE], 1, [Define to 1 if libspectre is available])\nfi\nAC_SUBST(LIBSPECTRE_CFLAGS)\nAC_SUBST(LIBSPECTRE_LIBS)\n\ndnl ===========================================================================\n\nCAIRO_ENABLE_SURFACE_BACKEND(pdf, PDF, yes, [\n    # The pdf backend requires zlib.\n    use_pdf=$have_libz\n    pdf_NONPKGCONFIG_LIBS=-lz\n])\n\ndnl ===========================================================================\n\n# poppler-0.17.4 fixes text-pattern and text-transform\nPOPPLER_VERSION_REQUIRED=0.17.4\ntest_pdf=no\nany2ppm_pdf=no\nif test \"x$use_pdf\" = \"xyes\"; then\n  poppler_DEPENDENCY=\"poppler-glib >= $POPPLER_VERSION_REQUIRED\"\n  PKG_CHECK_MODULES(POPPLER, $poppler_DEPENDENCY,\n\t\t    [CAIRO_CHECK_FUNCS_WITH_FLAGS(poppler_page_render, [$POPPLER_CFLAGS], [$POPPLER_LIBS],\n                    [test_pdf=yes; any2ppm_pdf=yes],\n\t\t    [test_pdf=\"no (requires $poppler_DEPENDENCY)\"])],\n\t\t    [test_pdf=\"no (requires $poppler_DEPENDENCY)\"])\n  if test \"x$test_pdf\" = \"xyes\"; then\n    AC_DEFINE([CAIRO_CAN_TEST_PDF_SURFACE], 1, [Define to 1 if the PDF backend can be tested (need poppler and other dependencies for pdf2png)])\n  else\n    AC_MSG_WARN([PDF backend will not be tested since poppler >= $POPPLER_VERSION_REQUIRED is not available])\n  fi\nfi\n\nAM_CONDITIONAL(CAIRO_CAN_TEST_PDF_SURFACE, test \"x$test_pdf\" = \"xyes\")\nAC_SUBST(POPPLER_CFLAGS)\nAC_SUBST(POPPLER_LIBS)\n\nAM_CONDITIONAL(CAIRO_HAS_MULTI_PAGE_SURFACES, test \"x$use_ps\" = \"xyes\" -o \"x$use_pdf\" = \"xyes\")\n\ndnl ===========================================================================\n\nCAIRO_ENABLE_SURFACE_BACKEND(svg, SVG, yes, [\n  if test \"x$use_png\" != \"xyes\"; then\n    use_svg=\"no (requires --enable-png)\"\n  fi\n])\n\nLIBRSVG_VERSION_REQUIRED=2.35.0\ntest_svg=no\nany2ppm_svg=no\nif test \"x$use_svg\" = \"xyes\"; then\n  librsvg_DEPENDENCY=\"librsvg-2.0 >= $LIBRSVG_VERSION_REQUIRED\"\n  PKG_CHECK_MODULES(LIBRSVG, $librsvg_DEPENDENCY gdk-2.0,\n\t\t    [CAIRO_CHECK_FUNCS_WITH_FLAGS(rsvg_pixbuf_from_file, [$LIBRSVG_CFLAGS], [$LIBRSVG_LIBS],\n                    [test_svg=yes; any2ppm_svg=yes],\n\t\t    [test_svg=\"no (requires $librsvg_DEPENDENCY)\"])],\n\t\t    [test_svg=\"no (requires $librsvg_DEPENDENCY)\"])\n  if test \"x$test_svg\" = \"xyes\"; then\n    AC_DEFINE([CAIRO_CAN_TEST_SVG_SURFACE], 1, [Define to 1 if the SVG backend can be tested])\n  else\n    AC_MSG_WARN([SVG backend will not be tested since librsvg >= $LIBRSVG_VERSION_REQUIRED is not available])\n  fi\nfi\n\nAM_CONDITIONAL(CAIRO_CAN_TEST_SVG_SURFACE, test \"x$test_svg\" = \"xyes\")\nAC_SUBST(LIBRSVG_CFLAGS)\nAC_SUBST(LIBRSVG_LIBS)\n\ndnl ===========================================================================\n\ndnl XXX make this a private feature?\nCAIRO_ENABLE(test_surfaces, test surfaces, no)\n\ndnl ===========================================================================\n\nCAIRO_ENABLE_SURFACE_BACKEND(image, image, always, [\n  pixman_REQUIRES=\"pixman-1 >= 0.30.0\"\n  PKG_CHECK_MODULES(pixman, $pixman_REQUIRES, ,\n    [use_image=\"no (requires $pixman_REQUIRES http://cairographics.org/releases/)\"])\n  image_REQUIRES=$pixman_REQUIRES\n  image_CFLAGS=$pixman_CFLAGS\n  image_LIBS=$pixman_LIBS\n])\n\nif pkg-config --exists 'pixman-1 >= 0.27.1'; then\n    AC_DEFINE([HAS_PIXMAN_GLYPHS], 1, [Enable pixman glyph cache])\nfi\n\n\ndnl ===========================================================================\n\nCAIRO_ENABLE_SURFACE_BACKEND(mime, mime, always)\nCAIRO_ENABLE_SURFACE_BACKEND(recording, recording, always)\nCAIRO_ENABLE_SURFACE_BACKEND(observer, observer, always)\nCAIRO_ENABLE_SURFACE_BACKEND(tee, tee, no)\nCAIRO_ENABLE_SURFACE_BACKEND(xml, xml, no, [\n    use_xml=$have_libz\n    xml_NONPKGCONFIG_LIBS=-lz\n])\n\ndnl ===========================================================================\n\nCAIRO_ENABLE_FONT_BACKEND(user, user, always)\n\ndnl ===========================================================================\ndnl\ndnl This needs to be last on our list of features so that the pthread libs and flags\ndnl gets prefixed in front of everything else in CAIRO_{CFLAGS,LIBS}.\ndnl\nhave_real_pthread=no\nhave_pthread=no\nCAIRO_ENABLE(pthread, pthread, auto, [CAIRO_CONFIGURE_PTHREAD])\nAM_CONDITIONAL(HAVE_REAL_PTHREAD, test \"x$use_pthread\" = \"xyes\" -a \"x$have_real_pthread\" = \"xyes\")\nAM_CONDITIONAL(HAVE_PTHREAD, test \"x$use_pthread\" = \"xyes\")\nAC_SUBST(pthread_CFLAGS)\nAC_SUBST(pthread_LIBS)\nAC_SUBST(real_pthread_CFLAGS)\nAC_SUBST(real_pthread_LIBS)\n\n\ndnl ===========================================================================\ndnl Build gobject integration library\n\nCAIRO_ENABLE_FUNCTIONS(gobject, gobject, auto, [\n  gobject_REQUIRES=\"gobject-2.0 glib-2.0 >= 2.14\"\n  PKG_CHECK_MODULES(GOBJECT, $gobject_REQUIRES, ,\n    [use_gobject=\"no (requires $gobject_REQUIRES http://download.gnome.org/pub/GNOME/sources/glib/)\"])\n  gobject_NONPKGCONFIG_EXTRA_LIBS=\"-L\\${libdir} -lcairo-gobject\"\n])\ndnl I'm too lazy to fix the caching properly\nif test \"x$use_gobject\" = \"xyes\"; then\n  PKG_CHECK_MODULES(GOBJECT, $gobject_REQUIRES, : )\nfi\n\ndnl ===========================================================================\ndnl Default to quick testing during development, but force a full test before\ndnl release\n\nAC_ARG_ENABLE(full-testing,\n  AS_HELP_STRING([--enable-full-testing],\n                 [Sets the test suite to perform full testing by default, which\n\t\t  will dramatically slow down make check, but is a\n\t\t  *requirement* before release.]), [\nif test \"x$enableval\" = \"xyes\"; then\n    CAIRO_TEST_MODE=full\n    AC_SUBST(CAIRO_TEST_MODE)\nfi\n])\n\ndnl ===========================================================================\ndnl Build the external converter if we have any of the test backends\nAM_CONDITIONAL(BUILD_ANY2PPM,\n\t       test \"x$any2ppm_svg\" = \"xyes\" \\\n\t         -o \"x$any2ppm_pdf\" = \"xyes\" \\\n\t\t -o \"x$any2ppm_ps\"  = \"xyes\" \\\n\t\t -o \"x$any2ppm_cs\"  = \"xyes\")\n\ndnl ===========================================================================\ndnl Some utilities need to dlopen the shared libraries, so they need to\ndnl know how libtools will name them\n\ncase $host in\n*-*-darwin*)\n\tSHLIB_EXT=\"dylib\"\n\t;;\n*)\n\tSHLIB_EXT=\"so\"\n\t;;\nesac\nAC_DEFINE_UNQUOTED(SHARED_LIB_EXT, \"${SHLIB_EXT}\", [Shared library file extension])\nAC_SUBST(SHLIB_EXT)\n\ndnl ===========================================================================\ndnl The tracing utility requires LD_PRELOAD, so only build it for systems\ndnl that are known to work.\n\ncase $host in\n*-linux*|*-*bsd*|*-solaris*|*-*-darwin*|*-dragonfly*|*-*-gnu*)\n\thave_ld_preload=\"yes\"\n\t;;\n*)\n\thave_ld_preload=\"no\"\n\t;;\nesac\n\nCAIRO_ENABLE(trace, cairo-trace, auto, [\n\tif test \"x$have_ld_preload\" != \"xyes\" -o \\\n\t\t\"x$have_libz\" != \"xyes\" -o \\\n\t\t\"x$have_real_pthread\" != \"xyes\" -o \\\n\t\t\"x$have_dlsym\" != \"xyes\"; then\n\t\tuse_trace=\"no (requires dynamic linker and zlib and real pthreads)\"\n\tfi\n])\n\nCAIRO_ENABLE(interpreter, cairo-script-interpreter, yes, [\n\tif test \"x$have_libz\" != \"xyes\"; then\n\t\tuse_interpreter=\"no (requires zlib)\"\n\tfi\n])\n\nAC_CHECK_LIB(bfd, bfd_openr,\n\t [AC_CHECK_HEADER(bfd.h, [have_bfd=yes],\n\t [have_bfd=no])], [have_bfd=no])\nAC_CHECK_HEADER(libiberty.h,, [have_bfd=no])\nif test \"x$have_bfd\" = \"xyes\"; then\n    AC_DEFINE([HAVE_BFD], [1], [Define to 1 if you have the binutils development files installed])\n    BFD_LIBS=-lbfd\n    AC_SUBST(BFD_LIBS)\nfi\n\nCAIRO_ENABLE(symbol_lookup, symbol-lookup, auto, [\n\tif test \"x$have_bfd\" != \"xyes\"; then\n\t\tuse_symbol_lookup=\"no (requires bfd)\"\n\tfi\n])\n\nPKG_CHECK_MODULES(glib, glib-2.0, have_glib=yes, have_glib=no)\nAC_SUBST(glib_CFLAGS)\nAC_SUBST(glib_LIBS)\nAM_CONDITIONAL(BUILD_SPHINX, test \"x$have_glib\" = \"xyes\" -a \"x$have_windows\" = \"xno\")\n\nsave_LIBS=\"$LIBS\"\nAC_CHECK_LIB(rt, shm_open, shm_LIBS=\"-lrt\")\nAC_SUBST(shm_LIBS)\nLIBS=\"$save_LIBS\"\n\ndnl ===========================================================================\n\nAC_ARG_ENABLE(some-floating-point,\n  AS_HELP_STRING([--disable-some-floating-point],\n                 [Disable certain code paths that rely heavily on double precision\n                  floating-point calculation. This option can improve\n                  performance on systems without a double precision floating-point\n                  unit, but might degrade performance on those that do.]), [\nif test \"x$enableval\" = \"xno\"; then\n  # A value of 'no' for $enableval means that they want to disable, which\n  # means 'yes' for $disable_some_floating_point.\n  disable_some_floating_point=yes\nfi\n], [disable_some_floating_point=no])\n\nAM_CONDITIONAL(DISABLE_SOME_FLOATING_POINT,\n               test \"x$disable_some_floating_point\" = \"xyes\")\nif test \"x$disable_some_floating_point\" = \"xyes\"; then\n  AC_DEFINE(DISABLE_SOME_FLOATING_POINT, 1,\n            [Define to 1 to disable certain code paths that rely heavily on\n             double precision floating-point calculation])\nfi\n\ndnl ===========================================================================\n\ndnl Extra stuff we need to do when building C++ code\nneed_cxx=\"no\"\nAS_IF([test \"x$use_skia\" = \"xyes\"], [need_cxx=\"yes\"])\nAS_IF([test \"x$use_qt\" = \"xyes\"], [need_cxx=\"yes\"])\nAS_IF([test \"x$use_beos\" = \"xyes\"], [need_cxx=\"yes\"])\n\nAM_CONDITIONAL(BUILD_CXX, test \"x$need_cxx\" = \"xyes\")\n\ndnl ===========================================================================\n\n# We use GTK+ for some utility/debugging tools\nPKG_CHECK_MODULES(gtk, \"gtk+-2.0\",have_gtk=yes, have_gtk=no)\nAM_CONDITIONAL(HAVE_GTK, test \"x$have_gtk\" = \"xyes\")\n\nAC_CONFIG_FILES([\nMakefile\nboilerplate/Makefile\nsrc/Makefile\ntest/Makefile\ntest/pdiff/Makefile\nperf/Makefile\nperf/micro/Makefile\nutil/Makefile\nutil/cairo-fdr/Makefile\nutil/cairo-gobject/Makefile\nutil/cairo-missing/Makefile\nutil/cairo-script/Makefile\nutil/cairo-script/examples/Makefile\nutil/cairo-sphinx/Makefile\nutil/cairo-trace/Makefile\nutil/cairo-trace/cairo-trace\ndoc/Makefile\ndoc/public/Makefile\n])\nAC_CONFIG_COMMANDS([cairo-trace],\n\t\t   [chmod a+x util/cairo-trace/cairo-trace])\n\nAC_OUTPUT\nCAIRO_REPORT\n",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/build/libtool.m4": "# libtool.m4 - Configure libtool for the host system. -*-Autoconf-*-\n#\n#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,\n#                 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n#                 Foundation, Inc.\n#   Written by Gordon Matzigkeit, 1996\n#\n# This file is free software; the Free Software Foundation gives\n# unlimited permission to copy and/or distribute it, with or without\n# modifications, as long as this notice is preserved.\n\nm4_define([_LT_COPYING], [dnl\n#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,\n#                 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n#                 Foundation, Inc.\n#   Written by Gordon Matzigkeit, 1996\n#\n#   This file is part of GNU Libtool.\n#\n# GNU Libtool is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; either version 2 of\n# the License, or (at your option) any later version.\n#\n# As a special exception to the GNU General Public License,\n# if you distribute this file as part of a program or library that\n# is built using GNU Libtool, you may include this file under the\n# same distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from http://www.gnu.org/licenses/gpl.html, or\n# obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n])\n\n# serial 57 LT_INIT\n\n\n# LT_PREREQ(VERSION)\n# ------------------\n# Complain and exit if this libtool version is less that VERSION.\nm4_defun([LT_PREREQ],\n[m4_if(m4_version_compare(m4_defn([LT_PACKAGE_VERSION]), [$1]), -1,\n       [m4_default([$3],\n\t\t   [m4_fatal([Libtool version $1 or higher is required],\n\t\t             63)])],\n       [$2])])\n\n\n# _LT_CHECK_BUILDDIR\n# ------------------\n# Complain if the absolute build directory name contains unusual characters\nm4_defun([_LT_CHECK_BUILDDIR],\n[case `pwd` in\n  *\\ * | *\\\t*)\n    AC_MSG_WARN([Libtool does not cope well with whitespace in `pwd`]) ;;\nesac\n])\n\n\n# LT_INIT([OPTIONS])\n# ------------------\nAC_DEFUN([LT_INIT],\n[AC_PREREQ([2.58])dnl We use AC_INCLUDES_DEFAULT\nAC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl\nAC_BEFORE([$0], [LT_LANG])dnl\nAC_BEFORE([$0], [LT_OUTPUT])dnl\nAC_BEFORE([$0], [LTDL_INIT])dnl\nm4_require([_LT_CHECK_BUILDDIR])dnl\n\ndnl Autoconf doesn't catch unexpanded LT_ macros by default:\nm4_pattern_forbid([^_?LT_[A-Z_]+$])dnl\nm4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])dnl\ndnl aclocal doesn't pull ltoptions.m4, ltsugar.m4, or ltversion.m4\ndnl unless we require an AC_DEFUNed macro:\nAC_REQUIRE([LTOPTIONS_VERSION])dnl\nAC_REQUIRE([LTSUGAR_VERSION])dnl\nAC_REQUIRE([LTVERSION_VERSION])dnl\nAC_REQUIRE([LTOBSOLETE_VERSION])dnl\nm4_require([_LT_PROG_LTMAIN])dnl\n\n_LT_SHELL_INIT([SHELL=${CONFIG_SHELL-/bin/sh}])\n\ndnl Parse OPTIONS\n_LT_SET_OPTIONS([$0], [$1])\n\n# This can be used to rebuild libtool when needed\nLIBTOOL_DEPS=\"$ltmain\"\n\n# Always use our own libtool.\nLIBTOOL='$(SHELL) $(top_builddir)/libtool'\nAC_SUBST(LIBTOOL)dnl\n\n_LT_SETUP\n\n# Only expand once:\nm4_define([LT_INIT])\n])# LT_INIT\n\n# Old names:\nAU_ALIAS([AC_PROG_LIBTOOL], [LT_INIT])\nAU_ALIAS([AM_PROG_LIBTOOL], [LT_INIT])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_PROG_LIBTOOL], [])\ndnl AC_DEFUN([AM_PROG_LIBTOOL], [])\n\n\n# _LT_CC_BASENAME(CC)\n# -------------------\n# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.\nm4_defun([_LT_CC_BASENAME],\n[for cc_temp in $1\"\"; do\n  case $cc_temp in\n    compile | *[[\\\\/]]compile | ccache | *[[\\\\/]]ccache ) ;;\n    distcc | *[[\\\\/]]distcc | purify | *[[\\\\/]]purify ) ;;\n    \\-*) ;;\n    *) break;;\n  esac\ndone\ncc_basename=`$ECHO \"$cc_temp\" | $SED \"s%.*/%%; s%^$host_alias-%%\"`\n])\n\n\n# _LT_FILEUTILS_DEFAULTS\n# ----------------------\n# It is okay to use these file commands and assume they have been set\n# sensibly after `m4_require([_LT_FILEUTILS_DEFAULTS])'.\nm4_defun([_LT_FILEUTILS_DEFAULTS],\n[: ${CP=\"cp -f\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n])# _LT_FILEUTILS_DEFAULTS\n\n\n# _LT_SETUP\n# ---------\nm4_defun([_LT_SETUP],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_REQUIRE([_LT_PREPARE_SED_QUOTE_VARS])dnl\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])dnl\n\n_LT_DECL([], [PATH_SEPARATOR], [1], [The PATH separator for the build system])dnl\ndnl\n_LT_DECL([], [host_alias], [0], [The host system])dnl\n_LT_DECL([], [host], [0])dnl\n_LT_DECL([], [host_os], [0])dnl\ndnl\n_LT_DECL([], [build_alias], [0], [The build system])dnl\n_LT_DECL([], [build], [0])dnl\n_LT_DECL([], [build_os], [0])dnl\ndnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([LT_PATH_LD])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\ndnl\nAC_REQUIRE([AC_PROG_LN_S])dnl\ntest -z \"$LN_S\" && LN_S=\"ln -s\"\n_LT_DECL([], [LN_S], [1], [Whether we need soft or hard links])dnl\ndnl\nAC_REQUIRE([LT_CMD_MAX_LEN])dnl\n_LT_DECL([objext], [ac_objext], [0], [Object file suffix (normally \"o\")])dnl\n_LT_DECL([], [exeext], [0], [Executable file suffix (normally \"\")])dnl\ndnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_CHECK_SHELL_FEATURES])dnl\nm4_require([_LT_PATH_CONVERSION_FUNCTIONS])dnl\nm4_require([_LT_CMD_RELOAD])dnl\nm4_require([_LT_CHECK_MAGIC_METHOD])dnl\nm4_require([_LT_CHECK_SHAREDLIB_FROM_LINKLIB])dnl\nm4_require([_LT_CMD_OLD_ARCHIVE])dnl\nm4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nm4_require([_LT_WITH_SYSROOT])dnl\n\n_LT_CONFIG_LIBTOOL_INIT([\n# See if we are running on zsh, and set the options which allow our\n# commands through without removal of \\ escapes INIT.\nif test -n \"\\${ZSH_VERSION+set}\" ; then\n   setopt NO_GLOB_SUBST\nfi\n])\nif test -n \"${ZSH_VERSION+set}\" ; then\n   setopt NO_GLOB_SUBST\nfi\n\n_LT_CHECK_OBJDIR\n\nm4_require([_LT_TAG_COMPILER])dnl\n\ncase $host_os in\naix3*)\n  # AIX sometimes has problems with the GCC collect2 program.  For some\n  # reason, if we set the COLLECT_NAMES environment variable, the problems\n  # vanish in a puff of smoke.\n  if test \"X${COLLECT_NAMES+set}\" != Xset; then\n    COLLECT_NAMES=\n    export COLLECT_NAMES\n  fi\n  ;;\nesac\n\n# Global variables:\nofile=libtool\ncan_build_shared=yes\n\n# All known linkers require a `.a' archive for static linking (except MSVC,\n# which needs '.lib').\nlibext=a\n\nwith_gnu_ld=\"$lt_cv_prog_gnu_ld\"\n\nold_CC=\"$CC\"\nold_CFLAGS=\"$CFLAGS\"\n\n# Set sane defaults for various variables\ntest -z \"$CC\" && CC=cc\ntest -z \"$LTCC\" && LTCC=$CC\ntest -z \"$LTCFLAGS\" && LTCFLAGS=$CFLAGS\ntest -z \"$LD\" && LD=ld\ntest -z \"$ac_objext\" && ac_objext=o\n\n_LT_CC_BASENAME([$compiler])\n\n# Only perform the check for file, if the check method requires it\ntest -z \"$MAGIC_CMD\" && MAGIC_CMD=file\ncase $deplibs_check_method in\nfile_magic*)\n  if test \"$file_magic_cmd\" = '$MAGIC_CMD'; then\n    _LT_PATH_MAGIC\n  fi\n  ;;\nesac\n\n# Use C for the default configuration in the libtool script\nLT_SUPPORTED_TAG([CC])\n_LT_LANG_C_CONFIG\n_LT_LANG_DEFAULT_CONFIG\n_LT_CONFIG_COMMANDS\n])# _LT_SETUP\n\n\n# _LT_PREPARE_SED_QUOTE_VARS\n# --------------------------\n# Define a few sed substitution that help us do robust quoting.\nm4_defun([_LT_PREPARE_SED_QUOTE_VARS],\n[# Backslashify metacharacters that are still active within\n# double-quoted strings.\nsed_quote_subst='s/\\([[\"`$\\\\]]\\)/\\\\\\1/g'\n\n# Same as above, but do not quote variable references.\ndouble_quote_subst='s/\\([[\"`\\\\]]\\)/\\\\\\1/g'\n\n# Sed substitution to delay expansion of an escaped shell variable in a\n# double_quote_subst'ed string.\ndelay_variable_subst='s/\\\\\\\\\\\\\\\\\\\\\\$/\\\\\\\\\\\\$/g'\n\n# Sed substitution to delay expansion of an escaped single quote.\ndelay_single_quote_subst='s/'\\''/'\\'\\\\\\\\\\\\\\'\\''/g'\n\n# Sed substitution to avoid accidental globbing in evaled expressions\nno_glob_subst='s/\\*/\\\\\\*/g'\n])\n\n# _LT_PROG_LTMAIN\n# ---------------\n# Note that this code is called both from `configure', and `config.status'\n# now that we use AC_CONFIG_COMMANDS to generate libtool.  Notably,\n# `config.status' has no value for ac_aux_dir unless we are using Automake,\n# so we pass a copy along to make sure it has a sensible value anyway.\nm4_defun([_LT_PROG_LTMAIN],\n[m4_ifdef([AC_REQUIRE_AUX_FILE], [AC_REQUIRE_AUX_FILE([ltmain.sh])])dnl\n_LT_CONFIG_LIBTOOL_INIT([ac_aux_dir='$ac_aux_dir'])\nltmain=\"$ac_aux_dir/ltmain.sh\"\n])# _LT_PROG_LTMAIN\n\n\n## ------------------------------------- ##\n## Accumulate code for creating libtool. ##\n## ------------------------------------- ##\n\n# So that we can recreate a full libtool script including additional\n# tags, we accumulate the chunks of code to send to AC_CONFIG_COMMANDS\n# in macros and then make a single call at the end using the `libtool'\n# label.\n\n\n# _LT_CONFIG_LIBTOOL_INIT([INIT-COMMANDS])\n# ----------------------------------------\n# Register INIT-COMMANDS to be passed to AC_CONFIG_COMMANDS later.\nm4_define([_LT_CONFIG_LIBTOOL_INIT],\n[m4_ifval([$1],\n          [m4_append([_LT_OUTPUT_LIBTOOL_INIT],\n                     [$1\n])])])\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_INIT])\n\n\n# _LT_CONFIG_LIBTOOL([COMMANDS])\n# ------------------------------\n# Register COMMANDS to be passed to AC_CONFIG_COMMANDS later.\nm4_define([_LT_CONFIG_LIBTOOL],\n[m4_ifval([$1],\n          [m4_append([_LT_OUTPUT_LIBTOOL_COMMANDS],\n                     [$1\n])])])\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_COMMANDS])\n\n\n# _LT_CONFIG_SAVE_COMMANDS([COMMANDS], [INIT_COMMANDS])\n# -----------------------------------------------------\nm4_defun([_LT_CONFIG_SAVE_COMMANDS],\n[_LT_CONFIG_LIBTOOL([$1])\n_LT_CONFIG_LIBTOOL_INIT([$2])\n])\n\n\n# _LT_FORMAT_COMMENT([COMMENT])\n# -----------------------------\n# Add leading comment marks to the start of each line, and a trailing\n# full-stop to the whole comment if one is not present already.\nm4_define([_LT_FORMAT_COMMENT],\n[m4_ifval([$1], [\nm4_bpatsubst([m4_bpatsubst([$1], [^ *], [# ])],\n              [['`$\\]], [\\\\\\&])]m4_bmatch([$1], [[!?.]$], [], [.])\n)])\n\n\n\n## ------------------------ ##\n## FIXME: Eliminate VARNAME ##\n## ------------------------ ##\n\n\n# _LT_DECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION], [IS-TAGGED?])\n# -------------------------------------------------------------------\n# CONFIGNAME is the name given to the value in the libtool script.\n# VARNAME is the (base) name used in the configure script.\n# VALUE may be 0, 1 or 2 for a computed quote escaped value based on\n# VARNAME.  Any other value will be used directly.\nm4_define([_LT_DECL],\n[lt_if_append_uniq([lt_decl_varnames], [$2], [, ],\n    [lt_dict_add_subkey([lt_decl_dict], [$2], [libtool_name],\n\t[m4_ifval([$1], [$1], [$2])])\n    lt_dict_add_subkey([lt_decl_dict], [$2], [value], [$3])\n    m4_ifval([$4],\n\t[lt_dict_add_subkey([lt_decl_dict], [$2], [description], [$4])])\n    lt_dict_add_subkey([lt_decl_dict], [$2],\n\t[tagged?], [m4_ifval([$5], [yes], [no])])])\n])\n\n\n# _LT_TAGDECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION])\n# --------------------------------------------------------\nm4_define([_LT_TAGDECL], [_LT_DECL([$1], [$2], [$3], [$4], [yes])])\n\n\n# lt_decl_tag_varnames([SEPARATOR], [VARNAME1...])\n# ------------------------------------------------\nm4_define([lt_decl_tag_varnames],\n[_lt_decl_filter([tagged?], [yes], $@)])\n\n\n# _lt_decl_filter(SUBKEY, VALUE, [SEPARATOR], [VARNAME1..])\n# ---------------------------------------------------------\nm4_define([_lt_decl_filter],\n[m4_case([$#],\n  [0], [m4_fatal([$0: too few arguments: $#])],\n  [1], [m4_fatal([$0: too few arguments: $#: $1])],\n  [2], [lt_dict_filter([lt_decl_dict], [$1], [$2], [], lt_decl_varnames)],\n  [3], [lt_dict_filter([lt_decl_dict], [$1], [$2], [$3], lt_decl_varnames)],\n  [lt_dict_filter([lt_decl_dict], $@)])[]dnl\n])\n\n\n# lt_decl_quote_varnames([SEPARATOR], [VARNAME1...])\n# --------------------------------------------------\nm4_define([lt_decl_quote_varnames],\n[_lt_decl_filter([value], [1], $@)])\n\n\n# lt_decl_dquote_varnames([SEPARATOR], [VARNAME1...])\n# ---------------------------------------------------\nm4_define([lt_decl_dquote_varnames],\n[_lt_decl_filter([value], [2], $@)])\n\n\n# lt_decl_varnames_tagged([SEPARATOR], [VARNAME1...])\n# ---------------------------------------------------\nm4_define([lt_decl_varnames_tagged],\n[m4_assert([$# <= 2])dnl\n_$0(m4_quote(m4_default([$1], [[, ]])),\n    m4_ifval([$2], [[$2]], [m4_dquote(lt_decl_tag_varnames)]),\n    m4_split(m4_normalize(m4_quote(_LT_TAGS)), [ ]))])\nm4_define([_lt_decl_varnames_tagged],\n[m4_ifval([$3], [lt_combine([$1], [$2], [_], $3)])])\n\n\n# lt_decl_all_varnames([SEPARATOR], [VARNAME1...])\n# ------------------------------------------------\nm4_define([lt_decl_all_varnames],\n[_$0(m4_quote(m4_default([$1], [[, ]])),\n     m4_if([$2], [],\n\t   m4_quote(lt_decl_varnames),\n\tm4_quote(m4_shift($@))))[]dnl\n])\nm4_define([_lt_decl_all_varnames],\n[lt_join($@, lt_decl_varnames_tagged([$1],\n\t\t\tlt_decl_tag_varnames([[, ]], m4_shift($@))))dnl\n])\n\n\n# _LT_CONFIG_STATUS_DECLARE([VARNAME])\n# ------------------------------------\n# Quote a variable value, and forward it to `config.status' so that its\n# declaration there will have the same value as in `configure'.  VARNAME\n# must have a single quote delimited value for this to work.\nm4_define([_LT_CONFIG_STATUS_DECLARE],\n[$1='`$ECHO \"$][$1\" | $SED \"$delay_single_quote_subst\"`'])\n\n\n# _LT_CONFIG_STATUS_DECLARATIONS\n# ------------------------------\n# We delimit libtool config variables with single quotes, so when\n# we write them to config.status, we have to be sure to quote all\n# embedded single quotes properly.  In configure, this macro expands\n# each variable declared with _LT_DECL (and _LT_TAGDECL) into:\n#\n#    <var>='`$ECHO \"$<var>\" | $SED \"$delay_single_quote_subst\"`'\nm4_defun([_LT_CONFIG_STATUS_DECLARATIONS],\n[m4_foreach([_lt_var], m4_quote(lt_decl_all_varnames),\n    [m4_n([_LT_CONFIG_STATUS_DECLARE(_lt_var)])])])\n\n\n# _LT_LIBTOOL_TAGS\n# ----------------\n# Output comment and list of tags supported by the script\nm4_defun([_LT_LIBTOOL_TAGS],\n[_LT_FORMAT_COMMENT([The names of the tagged configurations supported by this script])dnl\navailable_tags=\"_LT_TAGS\"dnl\n])\n\n\n# _LT_LIBTOOL_DECLARE(VARNAME, [TAG])\n# -----------------------------------\n# Extract the dictionary values for VARNAME (optionally with TAG) and\n# expand to a commented shell variable setting:\n#\n#    # Some comment about what VAR is for.\n#    visible_name=$lt_internal_name\nm4_define([_LT_LIBTOOL_DECLARE],\n[_LT_FORMAT_COMMENT(m4_quote(lt_dict_fetch([lt_decl_dict], [$1],\n\t\t\t\t\t   [description])))[]dnl\nm4_pushdef([_libtool_name],\n    m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [libtool_name])))[]dnl\nm4_case(m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [value])),\n    [0], [_libtool_name=[$]$1],\n    [1], [_libtool_name=$lt_[]$1],\n    [2], [_libtool_name=$lt_[]$1],\n    [_libtool_name=lt_dict_fetch([lt_decl_dict], [$1], [value])])[]dnl\nm4_ifval([$2], [_$2])[]m4_popdef([_libtool_name])[]dnl\n])\n\n\n# _LT_LIBTOOL_CONFIG_VARS\n# -----------------------\n# Produce commented declarations of non-tagged libtool config variables\n# suitable for insertion in the LIBTOOL CONFIG section of the `libtool'\n# script.  Tagged libtool config variables (even for the LIBTOOL CONFIG\n# section) are produced by _LT_LIBTOOL_TAG_VARS.\nm4_defun([_LT_LIBTOOL_CONFIG_VARS],\n[m4_foreach([_lt_var],\n    m4_quote(_lt_decl_filter([tagged?], [no], [], lt_decl_varnames)),\n    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var)])])])\n\n\n# _LT_LIBTOOL_TAG_VARS(TAG)\n# -------------------------\nm4_define([_LT_LIBTOOL_TAG_VARS],\n[m4_foreach([_lt_var], m4_quote(lt_decl_tag_varnames),\n    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var, [$1])])])])\n\n\n# _LT_TAGVAR(VARNAME, [TAGNAME])\n# ------------------------------\nm4_define([_LT_TAGVAR], [m4_ifval([$2], [$1_$2], [$1])])\n\n\n# _LT_CONFIG_COMMANDS\n# -------------------\n# Send accumulated output to $CONFIG_STATUS.  Thanks to the lists of\n# variables for single and double quote escaping we saved from calls\n# to _LT_DECL, we can put quote escaped variables declarations\n# into `config.status', and then the shell code to quote escape them in\n# for loops in `config.status'.  Finally, any additional code accumulated\n# from calls to _LT_CONFIG_LIBTOOL_INIT is expanded.\nm4_defun([_LT_CONFIG_COMMANDS],\n[AC_PROVIDE_IFELSE([LT_OUTPUT],\n\tdnl If the libtool generation code has been placed in $CONFIG_LT,\n\tdnl instead of duplicating it all over again into config.status,\n\tdnl then we will have config.status run $CONFIG_LT later, so it\n\tdnl needs to know what name is stored there:\n        [AC_CONFIG_COMMANDS([libtool],\n            [$SHELL $CONFIG_LT || AS_EXIT(1)], [CONFIG_LT='$CONFIG_LT'])],\n    dnl If the libtool generation code is destined for config.status,\n    dnl expand the accumulated commands and init code now:\n    [AC_CONFIG_COMMANDS([libtool],\n        [_LT_OUTPUT_LIBTOOL_COMMANDS], [_LT_OUTPUT_LIBTOOL_COMMANDS_INIT])])\n])#_LT_CONFIG_COMMANDS\n\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_COMMANDS_INIT],\n[\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nsed_quote_subst='$sed_quote_subst'\ndouble_quote_subst='$double_quote_subst'\ndelay_variable_subst='$delay_variable_subst'\n_LT_CONFIG_STATUS_DECLARATIONS\nLTCC='$LTCC'\nLTCFLAGS='$LTCFLAGS'\ncompiler='$compiler_DEFAULT'\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$[]1\n_LTECHO_EOF'\n}\n\n# Quote evaled strings.\nfor var in lt_decl_all_varnames([[ \\\n]], lt_decl_quote_varnames); do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED \\\\\"\\\\\\$sed_quote_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\"\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n# Double-quote double-evaled strings.\nfor var in lt_decl_all_varnames([[ \\\n]], lt_decl_dquote_varnames); do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED -e \\\\\"\\\\\\$double_quote_subst\\\\\" -e \\\\\"\\\\\\$sed_quote_subst\\\\\" -e \\\\\"\\\\\\$delay_variable_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\"\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n_LT_OUTPUT_LIBTOOL_INIT\n])\n\n# _LT_GENERATED_FILE_INIT(FILE, [COMMENT])\n# ------------------------------------\n# Generate a child script FILE with all initialization necessary to\n# reuse the environment learned by the parent script, and make the\n# file executable.  If COMMENT is supplied, it is inserted after the\n# `#!' sequence but before initialization text begins.  After this\n# macro, additional text can be appended to FILE to form the body of\n# the child script.  The macro ends with non-zero status if the\n# file could not be fully written (such as if the disk is full).\nm4_ifdef([AS_INIT_GENERATED],\n[m4_defun([_LT_GENERATED_FILE_INIT],[AS_INIT_GENERATED($@)])],\n[m4_defun([_LT_GENERATED_FILE_INIT],\n[m4_require([AS_PREPARE])]dnl\n[m4_pushdef([AS_MESSAGE_LOG_FD])]dnl\n[lt_write_fail=0\ncat >$1 <<_ASEOF || lt_write_fail=1\n#! $SHELL\n# Generated by $as_me.\n$2\nSHELL=\\${CONFIG_SHELL-$SHELL}\nexport SHELL\n_ASEOF\ncat >>$1 <<\\_ASEOF || lt_write_fail=1\nAS_SHELL_SANITIZE\n_AS_PREPARE\nexec AS_MESSAGE_FD>&1\n_ASEOF\ntest $lt_write_fail = 0 && chmod +x $1[]dnl\nm4_popdef([AS_MESSAGE_LOG_FD])])])# _LT_GENERATED_FILE_INIT\n\n# LT_OUTPUT\n# ---------\n# This macro allows early generation of the libtool script (before\n# AC_OUTPUT is called), incase it is used in configure for compilation\n# tests.\nAC_DEFUN([LT_OUTPUT],\n[: ${CONFIG_LT=./config.lt}\nAC_MSG_NOTICE([creating $CONFIG_LT])\n_LT_GENERATED_FILE_INIT([\"$CONFIG_LT\"],\n[# Run this file to recreate a libtool stub with the current configuration.])\n\ncat >>\"$CONFIG_LT\" <<\\_LTEOF\nlt_cl_silent=false\nexec AS_MESSAGE_LOG_FD>>config.log\n{\n  echo\n  AS_BOX([Running $as_me.])\n} >&AS_MESSAGE_LOG_FD\n\nlt_cl_help=\"\\\n\\`$as_me' creates a local libtool stub from the current configuration,\nfor use in further configure time tests before the real libtool is\ngenerated.\n\nUsage: $[0] [[OPTIONS]]\n\n  -h, --help      print this help, then exit\n  -V, --version   print version number, then exit\n  -q, --quiet     do not print progress messages\n  -d, --debug     don't remove temporary files\n\nReport bugs to <bug-libtool@gnu.org>.\"\n\nlt_cl_version=\"\\\nm4_ifset([AC_PACKAGE_NAME], [AC_PACKAGE_NAME ])config.lt[]dnl\nm4_ifset([AC_PACKAGE_VERSION], [ AC_PACKAGE_VERSION])\nconfigured by $[0], generated by m4_PACKAGE_STRING.\n\nCopyright (C) 2011 Free Software Foundation, Inc.\nThis config.lt script is free software; the Free Software Foundation\ngives unlimited permision to copy, distribute and modify it.\"\n\nwhile test $[#] != 0\ndo\n  case $[1] in\n    --version | --v* | -V )\n      echo \"$lt_cl_version\"; exit 0 ;;\n    --help | --h* | -h )\n      echo \"$lt_cl_help\"; exit 0 ;;\n    --debug | --d* | -d )\n      debug=: ;;\n    --quiet | --q* | --silent | --s* | -q )\n      lt_cl_silent=: ;;\n\n    -*) AC_MSG_ERROR([unrecognized option: $[1]\nTry \\`$[0] --help' for more information.]) ;;\n\n    *) AC_MSG_ERROR([unrecognized argument: $[1]\nTry \\`$[0] --help' for more information.]) ;;\n  esac\n  shift\ndone\n\nif $lt_cl_silent; then\n  exec AS_MESSAGE_FD>/dev/null\nfi\n_LTEOF\n\ncat >>\"$CONFIG_LT\" <<_LTEOF\n_LT_OUTPUT_LIBTOOL_COMMANDS_INIT\n_LTEOF\n\ncat >>\"$CONFIG_LT\" <<\\_LTEOF\nAC_MSG_NOTICE([creating $ofile])\n_LT_OUTPUT_LIBTOOL_COMMANDS\nAS_EXIT(0)\n_LTEOF\nchmod +x \"$CONFIG_LT\"\n\n# configure is writing to config.log, but config.lt does its own redirection,\n# appending to config.log, which fails on DOS, as config.log is still kept\n# open by configure.  Here we exec the FD to /dev/null, effectively closing\n# config.log, so it can be properly (re)opened and appended to by config.lt.\nlt_cl_success=:\ntest \"$silent\" = yes &&\n  lt_config_lt_args=\"$lt_config_lt_args --quiet\"\nexec AS_MESSAGE_LOG_FD>/dev/null\n$SHELL \"$CONFIG_LT\" $lt_config_lt_args || lt_cl_success=false\nexec AS_MESSAGE_LOG_FD>>config.log\n$lt_cl_success || AS_EXIT(1)\n])# LT_OUTPUT\n\n\n# _LT_CONFIG(TAG)\n# ---------------\n# If TAG is the built-in tag, create an initial libtool script with a\n# default configuration from the untagged config vars.  Otherwise add code\n# to config.status for appending the configuration named by TAG from the\n# matching tagged config vars.\nm4_defun([_LT_CONFIG],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\n_LT_CONFIG_SAVE_COMMANDS([\n  m4_define([_LT_TAG], m4_if([$1], [], [C], [$1]))dnl\n  m4_if(_LT_TAG, [C], [\n    # See if we are running on zsh, and set the options which allow our\n    # commands through without removal of \\ escapes.\n    if test -n \"${ZSH_VERSION+set}\" ; then\n      setopt NO_GLOB_SUBST\n    fi\n\n    cfgfile=\"${ofile}T\"\n    trap \"$RM \\\"$cfgfile\\\"; exit 1\" 1 2 15\n    $RM \"$cfgfile\"\n\n    cat <<_LT_EOF >> \"$cfgfile\"\n#! $SHELL\n\n# `$ECHO \"$ofile\" | sed 's%^.*/%%'` - Provide generalized library-building support services.\n# Generated automatically by $as_me ($PACKAGE$TIMESTAMP) $VERSION\n# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:\n# NOTE: Changes made to this file will be lost: look at ltmain.sh.\n#\n_LT_COPYING\n_LT_LIBTOOL_TAGS\n\n# ### BEGIN LIBTOOL CONFIG\n_LT_LIBTOOL_CONFIG_VARS\n_LT_LIBTOOL_TAG_VARS\n# ### END LIBTOOL CONFIG\n\n_LT_EOF\n\n  case $host_os in\n  aix3*)\n    cat <<\\_LT_EOF >> \"$cfgfile\"\n# AIX sometimes has problems with the GCC collect2 program.  For some\n# reason, if we set the COLLECT_NAMES environment variable, the problems\n# vanish in a puff of smoke.\nif test \"X${COLLECT_NAMES+set}\" != Xset; then\n  COLLECT_NAMES=\n  export COLLECT_NAMES\nfi\n_LT_EOF\n    ;;\n  esac\n\n  _LT_PROG_LTMAIN\n\n  # We use sed instead of cat because bash on DJGPP gets confused if\n  # if finds mixed CR/LF and LF-only lines.  Since sed operates in\n  # text mode, it properly converts lines to CR/LF.  This bash problem\n  # is reportedly fixed, but why not run on old versions too?\n  sed '$q' \"$ltmain\" >> \"$cfgfile\" \\\n     || (rm -f \"$cfgfile\"; exit 1)\n\n  _LT_PROG_REPLACE_SHELLFNS\n\n   mv -f \"$cfgfile\" \"$ofile\" ||\n    (rm -f \"$ofile\" && cp \"$cfgfile\" \"$ofile\" && rm -f \"$cfgfile\")\n  chmod +x \"$ofile\"\n],\n[cat <<_LT_EOF >> \"$ofile\"\n\ndnl Unfortunately we have to use $1 here, since _LT_TAG is not expanded\ndnl in a comment (ie after a #).\n# ### BEGIN LIBTOOL TAG CONFIG: $1\n_LT_LIBTOOL_TAG_VARS(_LT_TAG)\n# ### END LIBTOOL TAG CONFIG: $1\n_LT_EOF\n])dnl /m4_if\n],\n[m4_if([$1], [], [\n    PACKAGE='$PACKAGE'\n    VERSION='$VERSION'\n    TIMESTAMP='$TIMESTAMP'\n    RM='$RM'\n    ofile='$ofile'], [])\n])dnl /_LT_CONFIG_SAVE_COMMANDS\n])# _LT_CONFIG\n\n\n# LT_SUPPORTED_TAG(TAG)\n# ---------------------\n# Trace this macro to discover what tags are supported by the libtool\n# --tag option, using:\n#    autoconf --trace 'LT_SUPPORTED_TAG:$1'\nAC_DEFUN([LT_SUPPORTED_TAG], [])\n\n\n# C support is built-in for now\nm4_define([_LT_LANG_C_enabled], [])\nm4_define([_LT_TAGS], [])\n\n\n# LT_LANG(LANG)\n# -------------\n# Enable libtool support for the given language if not already enabled.\nAC_DEFUN([LT_LANG],\n[AC_BEFORE([$0], [LT_OUTPUT])dnl\nm4_case([$1],\n  [C],\t\t\t[_LT_LANG(C)],\n  [C++],\t\t[_LT_LANG(CXX)],\n  [Go],\t\t\t[_LT_LANG(GO)],\n  [Java],\t\t[_LT_LANG(GCJ)],\n  [Fortran 77],\t\t[_LT_LANG(F77)],\n  [Fortran],\t\t[_LT_LANG(FC)],\n  [Windows Resource],\t[_LT_LANG(RC)],\n  [m4_ifdef([_LT_LANG_]$1[_CONFIG],\n    [_LT_LANG($1)],\n    [m4_fatal([$0: unsupported language: \"$1\"])])])dnl\n])# LT_LANG\n\n\n# _LT_LANG(LANGNAME)\n# ------------------\nm4_defun([_LT_LANG],\n[m4_ifdef([_LT_LANG_]$1[_enabled], [],\n  [LT_SUPPORTED_TAG([$1])dnl\n  m4_append([_LT_TAGS], [$1 ])dnl\n  m4_define([_LT_LANG_]$1[_enabled], [])dnl\n  _LT_LANG_$1_CONFIG($1)])dnl\n])# _LT_LANG\n\n\nm4_ifndef([AC_PROG_GO], [\n############################################################\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_GO.  When it is available in    #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\n############################################################\nm4_defun([AC_PROG_GO],\n[AC_LANG_PUSH(Go)dnl\nAC_ARG_VAR([GOC],     [Go compiler command])dnl\nAC_ARG_VAR([GOFLAGS], [Go compiler flags])dnl\n_AC_ARG_VAR_LDFLAGS()dnl\nAC_CHECK_TOOL(GOC, gccgo)\nif test -z \"$GOC\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    AC_CHECK_PROG(GOC, [${ac_tool_prefix}gccgo], [${ac_tool_prefix}gccgo])\n  fi\nfi\nif test -z \"$GOC\"; then\n  AC_CHECK_PROG(GOC, gccgo, gccgo, false)\nfi\n])#m4_defun\n])#m4_ifndef\n\n\n# _LT_LANG_DEFAULT_CONFIG\n# -----------------------\nm4_defun([_LT_LANG_DEFAULT_CONFIG],\n[AC_PROVIDE_IFELSE([AC_PROG_CXX],\n  [LT_LANG(CXX)],\n  [m4_define([AC_PROG_CXX], defn([AC_PROG_CXX])[LT_LANG(CXX)])])\n\nAC_PROVIDE_IFELSE([AC_PROG_F77],\n  [LT_LANG(F77)],\n  [m4_define([AC_PROG_F77], defn([AC_PROG_F77])[LT_LANG(F77)])])\n\nAC_PROVIDE_IFELSE([AC_PROG_FC],\n  [LT_LANG(FC)],\n  [m4_define([AC_PROG_FC], defn([AC_PROG_FC])[LT_LANG(FC)])])\n\ndnl The call to [A][M_PROG_GCJ] is quoted like that to stop aclocal\ndnl pulling things in needlessly.\nAC_PROVIDE_IFELSE([AC_PROG_GCJ],\n  [LT_LANG(GCJ)],\n  [AC_PROVIDE_IFELSE([A][M_PROG_GCJ],\n    [LT_LANG(GCJ)],\n    [AC_PROVIDE_IFELSE([LT_PROG_GCJ],\n      [LT_LANG(GCJ)],\n      [m4_ifdef([AC_PROG_GCJ],\n\t[m4_define([AC_PROG_GCJ], defn([AC_PROG_GCJ])[LT_LANG(GCJ)])])\n       m4_ifdef([A][M_PROG_GCJ],\n\t[m4_define([A][M_PROG_GCJ], defn([A][M_PROG_GCJ])[LT_LANG(GCJ)])])\n       m4_ifdef([LT_PROG_GCJ],\n\t[m4_define([LT_PROG_GCJ], defn([LT_PROG_GCJ])[LT_LANG(GCJ)])])])])])\n\nAC_PROVIDE_IFELSE([AC_PROG_GO],\n  [LT_LANG(GO)],\n  [m4_define([AC_PROG_GO], defn([AC_PROG_GO])[LT_LANG(GO)])])\n\nAC_PROVIDE_IFELSE([LT_PROG_RC],\n  [LT_LANG(RC)],\n  [m4_define([LT_PROG_RC], defn([LT_PROG_RC])[LT_LANG(RC)])])\n])# _LT_LANG_DEFAULT_CONFIG\n\n# Obsolete macros:\nAU_DEFUN([AC_LIBTOOL_CXX], [LT_LANG(C++)])\nAU_DEFUN([AC_LIBTOOL_F77], [LT_LANG(Fortran 77)])\nAU_DEFUN([AC_LIBTOOL_FC], [LT_LANG(Fortran)])\nAU_DEFUN([AC_LIBTOOL_GCJ], [LT_LANG(Java)])\nAU_DEFUN([AC_LIBTOOL_RC], [LT_LANG(Windows Resource)])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_CXX], [])\ndnl AC_DEFUN([AC_LIBTOOL_F77], [])\ndnl AC_DEFUN([AC_LIBTOOL_FC], [])\ndnl AC_DEFUN([AC_LIBTOOL_GCJ], [])\ndnl AC_DEFUN([AC_LIBTOOL_RC], [])\n\n\n# _LT_TAG_COMPILER\n# ----------------\nm4_defun([_LT_TAG_COMPILER],\n[AC_REQUIRE([AC_PROG_CC])dnl\n\n_LT_DECL([LTCC], [CC], [1], [A C compiler])dnl\n_LT_DECL([LTCFLAGS], [CFLAGS], [1], [LTCC compiler flags])dnl\n_LT_TAGDECL([CC], [compiler], [1], [A language specific compiler])dnl\n_LT_TAGDECL([with_gcc], [GCC], [0], [Is the compiler the GNU compiler?])dnl\n\n# If no C compiler was specified, use CC.\nLTCC=${LTCC-\"$CC\"}\n\n# If no C compiler flags were specified, use CFLAGS.\nLTCFLAGS=${LTCFLAGS-\"$CFLAGS\"}\n\n# Allow CC to be a program name with arguments.\ncompiler=$CC\n])# _LT_TAG_COMPILER\n\n\n# _LT_COMPILER_BOILERPLATE\n# ------------------------\n# Check for compiler boilerplate output or warnings with\n# the simple compiler test code.\nm4_defun([_LT_COMPILER_BOILERPLATE],\n[m4_require([_LT_DECL_SED])dnl\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_compile_test_code\" >conftest.$ac_ext\neval \"$ac_compile\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_compiler_boilerplate=`cat conftest.err`\n$RM conftest*\n])# _LT_COMPILER_BOILERPLATE\n\n\n# _LT_LINKER_BOILERPLATE\n# ----------------------\n# Check for linker boilerplate output or warnings with\n# the simple link test code.\nm4_defun([_LT_LINKER_BOILERPLATE],\n[m4_require([_LT_DECL_SED])dnl\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_link_test_code\" >conftest.$ac_ext\neval \"$ac_link\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_linker_boilerplate=`cat conftest.err`\n$RM -r conftest*\n])# _LT_LINKER_BOILERPLATE\n\n# _LT_REQUIRED_DARWIN_CHECKS\n# -------------------------\nm4_defun_once([_LT_REQUIRED_DARWIN_CHECKS],[\n  case $host_os in\n    rhapsody* | darwin*)\n    AC_CHECK_TOOL([DSYMUTIL], [dsymutil], [:])\n    AC_CHECK_TOOL([NMEDIT], [nmedit], [:])\n    AC_CHECK_TOOL([LIPO], [lipo], [:])\n    AC_CHECK_TOOL([OTOOL], [otool], [:])\n    AC_CHECK_TOOL([OTOOL64], [otool64], [:])\n    _LT_DECL([], [DSYMUTIL], [1],\n      [Tool to manipulate archived DWARF debug symbol files on Mac OS X])\n    _LT_DECL([], [NMEDIT], [1],\n      [Tool to change global to local symbols on Mac OS X])\n    _LT_DECL([], [LIPO], [1],\n      [Tool to manipulate fat objects and archives on Mac OS X])\n    _LT_DECL([], [OTOOL], [1],\n      [ldd/readelf like tool for Mach-O binaries on Mac OS X])\n    _LT_DECL([], [OTOOL64], [1],\n      [ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4])\n\n    AC_CACHE_CHECK([for -single_module linker flag],[lt_cv_apple_cc_single_mod],\n      [lt_cv_apple_cc_single_mod=no\n      if test -z \"${LT_MULTI_MODULE}\"; then\n\t# By default we will add the -single_module flag. You can override\n\t# by either setting the environment variable LT_MULTI_MODULE\n\t# non-empty at configure time, or by adding -multi_module to the\n\t# link flags.\n\trm -rf libconftest.dylib*\n\techo \"int foo(void){return 1;}\" > conftest.c\n\techo \"$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n-dynamiclib -Wl,-single_module conftest.c\" >&AS_MESSAGE_LOG_FD\n\t$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n\t  -dynamiclib -Wl,-single_module conftest.c 2>conftest.err\n        _lt_result=$?\n\t# If there is a non-empty error log, and \"single_module\"\n\t# appears in it, assume the flag caused a linker warning\n        if test -s conftest.err && $GREP single_module conftest.err; then\n\t  cat conftest.err >&AS_MESSAGE_LOG_FD\n\t# Otherwise, if the output was created with a 0 exit code from\n\t# the compiler, it worked.\n\telif test -f libconftest.dylib && test $_lt_result -eq 0; then\n\t  lt_cv_apple_cc_single_mod=yes\n\telse\n\t  cat conftest.err >&AS_MESSAGE_LOG_FD\n\tfi\n\trm -rf libconftest.dylib*\n\trm -f conftest.*\n      fi])\n\n    AC_CACHE_CHECK([for -exported_symbols_list linker flag],\n      [lt_cv_ld_exported_symbols_list],\n      [lt_cv_ld_exported_symbols_list=no\n      save_LDFLAGS=$LDFLAGS\n      echo \"_main\" > conftest.sym\n      LDFLAGS=\"$LDFLAGS -Wl,-exported_symbols_list,conftest.sym\"\n      AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],\n\t[lt_cv_ld_exported_symbols_list=yes],\n\t[lt_cv_ld_exported_symbols_list=no])\n\tLDFLAGS=\"$save_LDFLAGS\"\n    ])\n\n    AC_CACHE_CHECK([for -force_load linker flag],[lt_cv_ld_force_load],\n      [lt_cv_ld_force_load=no\n      cat > conftest.c << _LT_EOF\nint forced_loaded() { return 2;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS -c -o conftest.o conftest.c\" >&AS_MESSAGE_LOG_FD\n      $LTCC $LTCFLAGS -c -o conftest.o conftest.c 2>&AS_MESSAGE_LOG_FD\n      echo \"$AR cru libconftest.a conftest.o\" >&AS_MESSAGE_LOG_FD\n      $AR cru libconftest.a conftest.o 2>&AS_MESSAGE_LOG_FD\n      echo \"$RANLIB libconftest.a\" >&AS_MESSAGE_LOG_FD\n      $RANLIB libconftest.a 2>&AS_MESSAGE_LOG_FD\n      cat > conftest.c << _LT_EOF\nint main() { return 0;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a\" >&AS_MESSAGE_LOG_FD\n      $LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a 2>conftest.err\n      _lt_result=$?\n      if test -s conftest.err && $GREP force_load conftest.err; then\n\tcat conftest.err >&AS_MESSAGE_LOG_FD\n      elif test -f conftest && test $_lt_result -eq 0 && $GREP forced_load conftest >/dev/null 2>&1 ; then\n\tlt_cv_ld_force_load=yes\n      else\n\tcat conftest.err >&AS_MESSAGE_LOG_FD\n      fi\n        rm -f conftest.err libconftest.a conftest conftest.c\n        rm -rf conftest.dSYM\n    ])\n    case $host_os in\n    rhapsody* | darwin1.[[012]])\n      _lt_dar_allow_undefined='${wl}-undefined ${wl}suppress' ;;\n    darwin1.*)\n      _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;\n    darwin*) # darwin 5.x on\n      # if running on 10.5 or later, the deployment target defaults\n      # to the OS version, if on x86, and 10.4, the deployment\n      # target defaults to 10.4. Don't you love it?\n      case ${MACOSX_DEPLOYMENT_TARGET-10.0},$host in\n\t10.0,*86*-darwin8*|10.0,*-darwin[[91]]*)\n\t  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;\n\t10.[[012]]*)\n\t  _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;\n\t10.*)\n\t  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;\n      esac\n    ;;\n  esac\n    if test \"$lt_cv_apple_cc_single_mod\" = \"yes\"; then\n      _lt_dar_single_mod='$single_module'\n    fi\n    if test \"$lt_cv_ld_exported_symbols_list\" = \"yes\"; then\n      _lt_dar_export_syms=' ${wl}-exported_symbols_list,$output_objdir/${libname}-symbols.expsym'\n    else\n      _lt_dar_export_syms='~$NMEDIT -s $output_objdir/${libname}-symbols.expsym ${lib}'\n    fi\n    if test \"$DSYMUTIL\" != \":\" && test \"$lt_cv_ld_force_load\" = \"no\"; then\n      _lt_dsymutil='~$DSYMUTIL $lib || :'\n    else\n      _lt_dsymutil=\n    fi\n    ;;\n  esac\n])\n\n\n# _LT_DARWIN_LINKER_FEATURES([TAG])\n# ---------------------------------\n# Checks for linker and compiler features on darwin\nm4_defun([_LT_DARWIN_LINKER_FEATURES],\n[\n  m4_require([_LT_REQUIRED_DARWIN_CHECKS])\n  _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n  _LT_TAGVAR(hardcode_direct, $1)=no\n  _LT_TAGVAR(hardcode_automatic, $1)=yes\n  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  if test \"$lt_cv_ld_force_load\" = \"yes\"; then\n    _LT_TAGVAR(whole_archive_flag_spec, $1)='`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience ${wl}-force_load,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"`'\n    m4_case([$1], [F77], [_LT_TAGVAR(compiler_needs_object, $1)=yes],\n                  [FC],  [_LT_TAGVAR(compiler_needs_object, $1)=yes])\n  else\n    _LT_TAGVAR(whole_archive_flag_spec, $1)=''\n  fi\n  _LT_TAGVAR(link_all_deplibs, $1)=yes\n  _LT_TAGVAR(allow_undefined_flag, $1)=\"$_lt_dar_allow_undefined\"\n  case $cc_basename in\n     ifort*) _lt_dar_can_shared=yes ;;\n     *) _lt_dar_can_shared=$GCC ;;\n  esac\n  if test \"$_lt_dar_can_shared\" = \"yes\"; then\n    output_verbose_link_cmd=func_echo_all\n    _LT_TAGVAR(archive_cmds, $1)=\"\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod${_lt_dsymutil}\"\n    _LT_TAGVAR(module_cmds, $1)=\"\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags${_lt_dsymutil}\"\n    _LT_TAGVAR(archive_expsym_cmds, $1)=\"sed 's,^,_,' < \\$export_symbols > \\$output_objdir/\\${libname}-symbols.expsym~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring ${_lt_dar_single_mod}${_lt_dar_export_syms}${_lt_dsymutil}\"\n    _LT_TAGVAR(module_expsym_cmds, $1)=\"sed -e 's,^,_,' < \\$export_symbols > \\$output_objdir/\\${libname}-symbols.expsym~\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags${_lt_dar_export_syms}${_lt_dsymutil}\"\n    m4_if([$1], [CXX],\n[   if test \"$lt_cv_apple_cc_single_mod\" != \"yes\"; then\n      _LT_TAGVAR(archive_cmds, $1)=\"\\$CC -r -keep_private_externs -nostdlib -o \\${lib}-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\${lib}-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring${_lt_dsymutil}\"\n      _LT_TAGVAR(archive_expsym_cmds, $1)=\"sed 's,^,_,' < \\$export_symbols > \\$output_objdir/\\${libname}-symbols.expsym~\\$CC -r -keep_private_externs -nostdlib -o \\${lib}-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\${lib}-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring${_lt_dar_export_syms}${_lt_dsymutil}\"\n    fi\n],[])\n  else\n  _LT_TAGVAR(ld_shlibs, $1)=no\n  fi\n])\n\n# _LT_SYS_MODULE_PATH_AIX([TAGNAME])\n# ----------------------------------\n# Links a minimal program and checks the executable\n# for the system default hardcoded library path. In most cases,\n# this is /usr/lib:/lib, but when the MPI compilers are used\n# the location of the communication and MPI libs are included too.\n# If we don't find anything, use the default library path according\n# to the aix ld manual.\n# Store the results from the different compilers for each TAGNAME.\n# Allow to override them for all tags through lt_cv_aix_libpath.\nm4_defun([_LT_SYS_MODULE_PATH_AIX],\n[m4_require([_LT_DECL_SED])dnl\nif test \"${lt_cv_aix_libpath+set}\" = set; then\n  aix_libpath=$lt_cv_aix_libpath\nelse\n  AC_CACHE_VAL([_LT_TAGVAR([lt_cv_aix_libpath_], [$1])],\n  [AC_LINK_IFELSE([AC_LANG_PROGRAM],[\n  lt_aix_libpath_sed='[\n      /Import File Strings/,/^$/ {\n\t  /^0/ {\n\t      s/^0  *\\([^ ]*\\) *$/\\1/\n\t      p\n\t  }\n      }]'\n  _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  # Check for a 64-bit object if we didn't find anything.\n  if test -z \"$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\"; then\n    _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  fi],[])\n  if test -z \"$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\"; then\n    _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=\"/usr/lib:/lib\"\n  fi\n  ])\n  aix_libpath=$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\nfi\n])# _LT_SYS_MODULE_PATH_AIX\n\n\n# _LT_SHELL_INIT(ARG)\n# -------------------\nm4_define([_LT_SHELL_INIT],\n[m4_divert_text([M4SH-INIT], [$1\n])])# _LT_SHELL_INIT\n\n\n\n# _LT_PROG_ECHO_BACKSLASH\n# -----------------------\n# Find how we can fake an echo command that does not interpret backslash.\n# In particular, with Autoconf 2.60 or later we add some code to the start\n# of the generated configure script which will find a shell with a builtin\n# printf (which we can use as an echo command).\nm4_defun([_LT_PROG_ECHO_BACKSLASH],\n[ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n\nAC_MSG_CHECKING([how to print strings])\n# Test print first, because it will be a builtin if present.\nif test \"X`( print -r -- -n ) 2>/dev/null`\" = X-n && \\\n   test \"X`print -r -- $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='print -r --'\nelif test \"X`printf %s $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='printf %s\\n'\nelse\n  # Use this function as a fallback that always works.\n  func_fallback_echo ()\n  {\n    eval 'cat <<_LTECHO_EOF\n$[]1\n_LTECHO_EOF'\n  }\n  ECHO='func_fallback_echo'\nfi\n\n# func_echo_all arg...\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"$*\" \n}\n\ncase \"$ECHO\" in\n  printf*) AC_MSG_RESULT([printf]) ;;\n  print*) AC_MSG_RESULT([print -r]) ;;\n  *) AC_MSG_RESULT([cat]) ;;\nesac\n\nm4_ifdef([_AS_DETECT_SUGGESTED],\n[_AS_DETECT_SUGGESTED([\n  test -n \"${ZSH_VERSION+set}${BASH_VERSION+set}\" || (\n    ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\n    ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\n    ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n    PATH=/empty FPATH=/empty; export PATH FPATH\n    test \"X`printf %s $ECHO`\" = \"X$ECHO\" \\\n      || test \"X`print -r -- $ECHO`\" = \"X$ECHO\" )])])\n\n_LT_DECL([], [SHELL], [1], [Shell to use when invoking shell scripts])\n_LT_DECL([], [ECHO], [1], [An echo program that protects backslashes])\n])# _LT_PROG_ECHO_BACKSLASH\n\n\n# _LT_WITH_SYSROOT\n# ----------------\nAC_DEFUN([_LT_WITH_SYSROOT],\n[AC_MSG_CHECKING([for sysroot])\nAC_ARG_WITH([sysroot],\n[  --with-sysroot[=DIR] Search for dependent libraries within DIR\n                        (or the compiler's sysroot if not specified).],\n[], [with_sysroot=no])\n\ndnl lt_sysroot will always be passed unquoted.  We quote it here\ndnl in case the user passed a directory name.\nlt_sysroot=\ncase ${with_sysroot} in #(\n yes)\n   if test \"$GCC\" = yes; then\n     lt_sysroot=`$CC --print-sysroot 2>/dev/null`\n   fi\n   ;; #(\n /*)\n   lt_sysroot=`echo \"$with_sysroot\" | sed -e \"$sed_quote_subst\"`\n   ;; #(\n no|'')\n   ;; #(\n *)\n   AC_MSG_RESULT([${with_sysroot}])\n   AC_MSG_ERROR([The sysroot must be an absolute path.])\n   ;;\nesac\n\n AC_MSG_RESULT([${lt_sysroot:-no}])\n_LT_DECL([], [lt_sysroot], [0], [The root where to search for ]dnl\n[dependent libraries, and in which our libraries should be installed.])])\n\n# _LT_ENABLE_LOCK\n# ---------------\nm4_defun([_LT_ENABLE_LOCK],\n[AC_ARG_ENABLE([libtool-lock],\n  [AS_HELP_STRING([--disable-libtool-lock],\n    [avoid locking (might break parallel builds)])])\ntest \"x$enable_libtool_lock\" != xno && enable_libtool_lock=yes\n\n# Some flags need to be propagated to the compiler or linker for good\n# libtool support.\ncase $host in\nia64-*-hpux*)\n  # Find out which ABI we are using.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.$ac_objext` in\n      *ELF-32*)\n\tHPUX_IA64_MODE=\"32\"\n\t;;\n      *ELF-64*)\n\tHPUX_IA64_MODE=\"64\"\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n*-*-irix6*)\n  # Find out which ABI we are using.\n  echo '[#]line '$LINENO' \"configure\"' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    if test \"$lt_cv_prog_gnu_ld\" = yes; then\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -melf32bsmip\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -melf32bmipn32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -melf64bmip\"\n\t;;\n      esac\n    else\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -32\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -n32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -64\"\n\t  ;;\n      esac\n    fi\n  fi\n  rm -rf conftest*\n  ;;\n\nx86_64-*kfreebsd*-gnu|x86_64-*linux*|ppc*-*linux*|powerpc*-*linux*| \\\ns390*-*linux*|s390*-*tpf*|sparc*-*linux*)\n  # Find out which ABI we are using.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n      *32-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_i386_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    LD=\"${LD-ld} -m elf_i386\"\n\t    ;;\n\t  ppc64-*linux*|powerpc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32ppclinux\"\n\t    ;;\n\t  s390x-*linux*)\n\t    LD=\"${LD-ld} -m elf_s390\"\n\t    ;;\n\t  sparc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32_sparc\"\n\t    ;;\n\tesac\n\t;;\n      *64-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_x86_64_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    LD=\"${LD-ld} -m elf_x86_64\"\n\t    ;;\n\t  ppc*-*linux*|powerpc*-*linux*)\n\t    LD=\"${LD-ld} -m elf64ppc\"\n\t    ;;\n\t  s390*-*linux*|s390*-*tpf*)\n\t    LD=\"${LD-ld} -m elf64_s390\"\n\t    ;;\n\t  sparc*-*linux*)\n\t    LD=\"${LD-ld} -m elf64_sparc\"\n\t    ;;\n\tesac\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n\n*-*-sco3.2v5*)\n  # On SCO OpenServer 5, we need -belf to get full-featured binaries.\n  SAVE_CFLAGS=\"$CFLAGS\"\n  CFLAGS=\"$CFLAGS -belf\"\n  AC_CACHE_CHECK([whether the C compiler needs -belf], lt_cv_cc_needs_belf,\n    [AC_LANG_PUSH(C)\n     AC_LINK_IFELSE([AC_LANG_PROGRAM([[]],[[]])],[lt_cv_cc_needs_belf=yes],[lt_cv_cc_needs_belf=no])\n     AC_LANG_POP])\n  if test x\"$lt_cv_cc_needs_belf\" != x\"yes\"; then\n    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf\n    CFLAGS=\"$SAVE_CFLAGS\"\n  fi\n  ;;\n*-*solaris*)\n  # Find out which ABI we are using.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n    *64-bit*)\n      case $lt_cv_prog_gnu_ld in\n      yes*)\n        case $host in\n        i?86-*-solaris*)\n          LD=\"${LD-ld} -m elf_x86_64\"\n          ;;\n        sparc*-*-solaris*)\n          LD=\"${LD-ld} -m elf64_sparc\"\n          ;;\n        esac\n        # GNU ld 2.21 introduced _sol2 emulations.  Use them if available.\n        if ${LD-ld} -V | grep _sol2 >/dev/null 2>&1; then\n          LD=\"${LD-ld}_sol2\"\n        fi\n        ;;\n      *)\n\tif ${LD-ld} -64 -r -o conftest2.o conftest.o >/dev/null 2>&1; then\n\t  LD=\"${LD-ld} -64\"\n\tfi\n\t;;\n      esac\n      ;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\nesac\n\nneed_locks=\"$enable_libtool_lock\"\n])# _LT_ENABLE_LOCK\n\n\n# _LT_PROG_AR\n# -----------\nm4_defun([_LT_PROG_AR],\n[AC_CHECK_TOOLS(AR, [ar], false)\n: ${AR=ar}\n: ${AR_FLAGS=cru}\n_LT_DECL([], [AR], [1], [The archiver])\n_LT_DECL([], [AR_FLAGS], [1], [Flags to create an archive])\n\nAC_CACHE_CHECK([for archiver @FILE support], [lt_cv_ar_at_file],\n  [lt_cv_ar_at_file=no\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM],\n     [echo conftest.$ac_objext > conftest.lst\n      lt_ar_try='$AR $AR_FLAGS libconftest.a @conftest.lst >&AS_MESSAGE_LOG_FD'\n      AC_TRY_EVAL([lt_ar_try])\n      if test \"$ac_status\" -eq 0; then\n\t# Ensure the archiver fails upon bogus file names.\n\trm -f conftest.$ac_objext libconftest.a\n\tAC_TRY_EVAL([lt_ar_try])\n\tif test \"$ac_status\" -ne 0; then\n          lt_cv_ar_at_file=@\n        fi\n      fi\n      rm -f conftest.* libconftest.a\n     ])\n  ])\n\nif test \"x$lt_cv_ar_at_file\" = xno; then\n  archiver_list_spec=\nelse\n  archiver_list_spec=$lt_cv_ar_at_file\nfi\n_LT_DECL([], [archiver_list_spec], [1],\n  [How to feed a file listing to the archiver])\n])# _LT_PROG_AR\n\n\n# _LT_CMD_OLD_ARCHIVE\n# -------------------\nm4_defun([_LT_CMD_OLD_ARCHIVE],\n[_LT_PROG_AR\n\nAC_CHECK_TOOL(STRIP, strip, :)\ntest -z \"$STRIP\" && STRIP=:\n_LT_DECL([], [STRIP], [1], [A symbol stripping program])\n\nAC_CHECK_TOOL(RANLIB, ranlib, :)\ntest -z \"$RANLIB\" && RANLIB=:\n_LT_DECL([], [RANLIB], [1],\n    [Commands used to install an old-style archive])\n\n# Determine commands to create old-style static archives.\nold_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs'\nold_postinstall_cmds='chmod 644 $oldlib'\nold_postuninstall_cmds=\n\nif test -n \"$RANLIB\"; then\n  case $host_os in\n  openbsd*)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB -t \\$tool_oldlib\"\n    ;;\n  *)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB \\$tool_oldlib\"\n    ;;\n  esac\n  old_archive_cmds=\"$old_archive_cmds~\\$RANLIB \\$tool_oldlib\"\nfi\n\ncase $host_os in\n  darwin*)\n    lock_old_archive_extraction=yes ;;\n  *)\n    lock_old_archive_extraction=no ;;\nesac\n_LT_DECL([], [old_postinstall_cmds], [2])\n_LT_DECL([], [old_postuninstall_cmds], [2])\n_LT_TAGDECL([], [old_archive_cmds], [2],\n    [Commands used to build an old-style archive])\n_LT_DECL([], [lock_old_archive_extraction], [0],\n    [Whether to use a lock for old archive extraction])\n])# _LT_CMD_OLD_ARCHIVE\n\n\n# _LT_COMPILER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#\t\t[OUTPUT-FILE], [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------------------\n# Check whether the given compiler option works\nAC_DEFUN([_LT_COMPILER_OPTION],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_SED])dnl\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   m4_if([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n   lt_compiler_flag=\"$3\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   # The option is referenced via a variable to avoid confusing sed.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>conftest.err)\n   ac_status=$?\n   cat conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s \"$ac_outfile\"; then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings other than the usual output.\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' >conftest.exp\n     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then\n       $2=yes\n     fi\n   fi\n   $RM conftest*\n])\n\nif test x\"[$]$2\" = xyes; then\n    m4_if([$5], , :, [$5])\nelse\n    m4_if([$6], , :, [$6])\nfi\n])# _LT_COMPILER_OPTION\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_COMPILER_OPTION], [_LT_COMPILER_OPTION])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [])\n\n\n# _LT_LINKER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#                  [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------\n# Check whether the given linker option works\nAC_DEFUN([_LT_LINKER_OPTION],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_SED])dnl\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   save_LDFLAGS=\"$LDFLAGS\"\n   LDFLAGS=\"$LDFLAGS $3\"\n   echo \"$lt_simple_link_test_code\" > conftest.$ac_ext\n   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then\n     # The linker can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     if test -s conftest.err; then\n       # Append any errors to the config.log.\n       cat conftest.err 1>&AS_MESSAGE_LOG_FD\n       $ECHO \"$_lt_linker_boilerplate\" | $SED '/^$/d' > conftest.exp\n       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n       if diff conftest.exp conftest.er2 >/dev/null; then\n         $2=yes\n       fi\n     else\n       $2=yes\n     fi\n   fi\n   $RM -r conftest*\n   LDFLAGS=\"$save_LDFLAGS\"\n])\n\nif test x\"[$]$2\" = xyes; then\n    m4_if([$4], , :, [$4])\nelse\n    m4_if([$5], , :, [$5])\nfi\n])# _LT_LINKER_OPTION\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_LINKER_OPTION], [_LT_LINKER_OPTION])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_LINKER_OPTION], [])\n\n\n# LT_CMD_MAX_LEN\n#---------------\nAC_DEFUN([LT_CMD_MAX_LEN],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\n# find the maximum length of command line arguments\nAC_MSG_CHECKING([the maximum length of command line arguments])\nAC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl\n  i=0\n  teststring=\"ABCD\"\n\n  case $build_os in\n  msdosdjgpp*)\n    # On DJGPP, this test can blow up pretty badly due to problems in libc\n    # (any single argument exceeding 2000 bytes causes a buffer overrun\n    # during glob expansion).  Even if it were fixed, the result of this\n    # check would be larger than it should be.\n    lt_cv_sys_max_cmd_len=12288;    # 12K is about right\n    ;;\n\n  gnu*)\n    # Under GNU Hurd, this test is not required because there is\n    # no limit to the length of command line arguments.\n    # Libtool will interpret -1 as no limit whatsoever\n    lt_cv_sys_max_cmd_len=-1;\n    ;;\n\n  cygwin* | mingw* | cegcc*)\n    # On Win9x/ME, this test blows up -- it succeeds, but takes\n    # about 5 minutes as the teststring grows exponentially.\n    # Worse, since 9x/ME are not pre-emptively multitasking,\n    # you end up with a \"frozen\" computer, even though with patience\n    # the test eventually succeeds (with a max line length of 256k).\n    # Instead, let's just punt: use the minimum linelength reported by\n    # all of the supported platforms: 8192 (on NT/2K/XP).\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  mint*)\n    # On MiNT this can take a long time and run out of memory.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  amigaos*)\n    # On AmigaOS with pdksh, this test takes hours, literally.\n    # So we just punt and use a minimum line length of 8192.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)\n    # This has been around since 386BSD, at least.  Likely further.\n    if test -x /sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`\n    elif test -x /usr/sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`\n    else\n      lt_cv_sys_max_cmd_len=65536\t# usable default for all BSDs\n    fi\n    # And add a safety zone\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    ;;\n\n  interix*)\n    # We know the value 262144 and hardcode it with a safety zone (like BSD)\n    lt_cv_sys_max_cmd_len=196608\n    ;;\n\n  os2*)\n    # The test takes a long time on OS/2.\n    lt_cv_sys_max_cmd_len=8192\n    ;;\n\n  osf*)\n    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure\n    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not\n    # nice to cause kernel panics so lets avoid the loop below.\n    # First set a reasonable default.\n    lt_cv_sys_max_cmd_len=16384\n    #\n    if test -x /sbin/sysconfig; then\n      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in\n        *1*) lt_cv_sys_max_cmd_len=-1 ;;\n      esac\n    fi\n    ;;\n  sco3.2v5*)\n    lt_cv_sys_max_cmd_len=102400\n    ;;\n  sysv5* | sco5v6* | sysv4.2uw2*)\n    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`\n    if test -n \"$kargmax\"; then\n      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[[\t ]]//'`\n    else\n      lt_cv_sys_max_cmd_len=32768\n    fi\n    ;;\n  *)\n    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`\n    if test -n \"$lt_cv_sys_max_cmd_len\"; then\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    else\n      # Make teststring a little bigger before we do anything with it.\n      # a 1K string should be a reasonable start.\n      for i in 1 2 3 4 5 6 7 8 ; do\n        teststring=$teststring$teststring\n      done\n      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}\n      # If test is not a shell built-in, we'll probably end up computing a\n      # maximum length that is only half of the actual maximum length, but\n      # we can't tell.\n      while { test \"X\"`env echo \"$teststring$teststring\" 2>/dev/null` \\\n\t         = \"X$teststring$teststring\"; } >/dev/null 2>&1 &&\n\t      test $i != 17 # 1/2 MB should be enough\n      do\n        i=`expr $i + 1`\n        teststring=$teststring$teststring\n      done\n      # Only check the string length outside the loop.\n      lt_cv_sys_max_cmd_len=`expr \"X$teststring\" : \".*\" 2>&1`\n      teststring=\n      # Add a significant safety factor because C++ compilers can tack on\n      # massive amounts of additional arguments before passing them to the\n      # linker.  It appears as though 1/2 is a usable value.\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 2`\n    fi\n    ;;\n  esac\n])\nif test -n $lt_cv_sys_max_cmd_len ; then\n  AC_MSG_RESULT($lt_cv_sys_max_cmd_len)\nelse\n  AC_MSG_RESULT(none)\nfi\nmax_cmd_len=$lt_cv_sys_max_cmd_len\n_LT_DECL([], [max_cmd_len], [0],\n    [What is the maximum length of a command?])\n])# LT_CMD_MAX_LEN\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_SYS_MAX_CMD_LEN], [LT_CMD_MAX_LEN])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [])\n\n\n# _LT_HEADER_DLFCN\n# ----------------\nm4_defun([_LT_HEADER_DLFCN],\n[AC_CHECK_HEADERS([dlfcn.h], [], [], [AC_INCLUDES_DEFAULT])dnl\n])# _LT_HEADER_DLFCN\n\n\n# _LT_TRY_DLOPEN_SELF (ACTION-IF-TRUE, ACTION-IF-TRUE-W-USCORE,\n#                      ACTION-IF-FALSE, ACTION-IF-CROSS-COMPILING)\n# ----------------------------------------------------------------\nm4_defun([_LT_TRY_DLOPEN_SELF],\n[m4_require([_LT_HEADER_DLFCN])dnl\nif test \"$cross_compiling\" = yes; then :\n  [$4]\nelse\n  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n  lt_status=$lt_dlunknown\n  cat > conftest.$ac_ext <<_LT_EOF\n[#line $LINENO \"configure\"\n#include \"confdefs.h\"\n\n#if HAVE_DLFCN_H\n#include <dlfcn.h>\n#endif\n\n#include <stdio.h>\n\n#ifdef RTLD_GLOBAL\n#  define LT_DLGLOBAL\t\tRTLD_GLOBAL\n#else\n#  ifdef DL_GLOBAL\n#    define LT_DLGLOBAL\t\tDL_GLOBAL\n#  else\n#    define LT_DLGLOBAL\t\t0\n#  endif\n#endif\n\n/* We may have to define LT_DLLAZY_OR_NOW in the command line if we\n   find out it does not work in some platform. */\n#ifndef LT_DLLAZY_OR_NOW\n#  ifdef RTLD_LAZY\n#    define LT_DLLAZY_OR_NOW\t\tRTLD_LAZY\n#  else\n#    ifdef DL_LAZY\n#      define LT_DLLAZY_OR_NOW\t\tDL_LAZY\n#    else\n#      ifdef RTLD_NOW\n#        define LT_DLLAZY_OR_NOW\tRTLD_NOW\n#      else\n#        ifdef DL_NOW\n#          define LT_DLLAZY_OR_NOW\tDL_NOW\n#        else\n#          define LT_DLLAZY_OR_NOW\t0\n#        endif\n#      endif\n#    endif\n#  endif\n#endif\n\n/* When -fvisbility=hidden is used, assume the code has been annotated\n   correspondingly for the symbols needed.  */\n#if defined(__GNUC__) && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))\nint fnord () __attribute__((visibility(\"default\")));\n#endif\n\nint fnord () { return 42; }\nint main ()\n{\n  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);\n  int status = $lt_dlunknown;\n\n  if (self)\n    {\n      if (dlsym (self,\"fnord\"))       status = $lt_dlno_uscore;\n      else\n        {\n\t  if (dlsym( self,\"_fnord\"))  status = $lt_dlneed_uscore;\n          else puts (dlerror ());\n\t}\n      /* dlclose (self); */\n    }\n  else\n    puts (dlerror ());\n\n  return status;\n}]\n_LT_EOF\n  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext} 2>/dev/null; then\n    (./conftest; exit; ) >&AS_MESSAGE_LOG_FD 2>/dev/null\n    lt_status=$?\n    case x$lt_status in\n      x$lt_dlno_uscore) $1 ;;\n      x$lt_dlneed_uscore) $2 ;;\n      x$lt_dlunknown|x*) $3 ;;\n    esac\n  else :\n    # compilation failed\n    $3\n  fi\nfi\nrm -fr conftest*\n])# _LT_TRY_DLOPEN_SELF\n\n\n# LT_SYS_DLOPEN_SELF\n# ------------------\nAC_DEFUN([LT_SYS_DLOPEN_SELF],\n[m4_require([_LT_HEADER_DLFCN])dnl\nif test \"x$enable_dlopen\" != xyes; then\n  enable_dlopen=unknown\n  enable_dlopen_self=unknown\n  enable_dlopen_self_static=unknown\nelse\n  lt_cv_dlopen=no\n  lt_cv_dlopen_libs=\n\n  case $host_os in\n  beos*)\n    lt_cv_dlopen=\"load_add_on\"\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ;;\n\n  mingw* | pw32* | cegcc*)\n    lt_cv_dlopen=\"LoadLibrary\"\n    lt_cv_dlopen_libs=\n    ;;\n\n  cygwin*)\n    lt_cv_dlopen=\"dlopen\"\n    lt_cv_dlopen_libs=\n    ;;\n\n  darwin*)\n  # if libdl is installed we need to link against it\n    AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-ldl\"],[\n    lt_cv_dlopen=\"dyld\"\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ])\n    ;;\n\n  *)\n    AC_CHECK_FUNC([shl_load],\n\t  [lt_cv_dlopen=\"shl_load\"],\n      [AC_CHECK_LIB([dld], [shl_load],\n\t    [lt_cv_dlopen=\"shl_load\" lt_cv_dlopen_libs=\"-ldld\"],\n\t[AC_CHECK_FUNC([dlopen],\n\t      [lt_cv_dlopen=\"dlopen\"],\n\t  [AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-ldl\"],\n\t    [AC_CHECK_LIB([svld], [dlopen],\n\t\t  [lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-lsvld\"],\n\t      [AC_CHECK_LIB([dld], [dld_link],\n\t\t    [lt_cv_dlopen=\"dld_link\" lt_cv_dlopen_libs=\"-ldld\"])\n\t      ])\n\t    ])\n\t  ])\n\t])\n      ])\n    ;;\n  esac\n\n  if test \"x$lt_cv_dlopen\" != xno; then\n    enable_dlopen=yes\n  else\n    enable_dlopen=no\n  fi\n\n  case $lt_cv_dlopen in\n  dlopen)\n    save_CPPFLAGS=\"$CPPFLAGS\"\n    test \"x$ac_cv_header_dlfcn_h\" = xyes && CPPFLAGS=\"$CPPFLAGS -DHAVE_DLFCN_H\"\n\n    save_LDFLAGS=\"$LDFLAGS\"\n    wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $export_dynamic_flag_spec\\\"\n\n    save_LIBS=\"$LIBS\"\n    LIBS=\"$lt_cv_dlopen_libs $LIBS\"\n\n    AC_CACHE_CHECK([whether a program can dlopen itself],\n\t  lt_cv_dlopen_self, [dnl\n\t  _LT_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self=yes, lt_cv_dlopen_self=yes,\n\t    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)\n    ])\n\n    if test \"x$lt_cv_dlopen_self\" = xyes; then\n      wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $lt_prog_compiler_static\\\"\n      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],\n\t  lt_cv_dlopen_self_static, [dnl\n\t  _LT_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self_static=yes, lt_cv_dlopen_self_static=yes,\n\t    lt_cv_dlopen_self_static=no,  lt_cv_dlopen_self_static=cross)\n      ])\n    fi\n\n    CPPFLAGS=\"$save_CPPFLAGS\"\n    LDFLAGS=\"$save_LDFLAGS\"\n    LIBS=\"$save_LIBS\"\n    ;;\n  esac\n\n  case $lt_cv_dlopen_self in\n  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;\n  *) enable_dlopen_self=unknown ;;\n  esac\n\n  case $lt_cv_dlopen_self_static in\n  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;\n  *) enable_dlopen_self_static=unknown ;;\n  esac\nfi\n_LT_DECL([dlopen_support], [enable_dlopen], [0],\n\t [Whether dlopen is supported])\n_LT_DECL([dlopen_self], [enable_dlopen_self], [0],\n\t [Whether dlopen of programs is supported])\n_LT_DECL([dlopen_self_static], [enable_dlopen_self_static], [0],\n\t [Whether dlopen of statically linked programs is supported])\n])# LT_SYS_DLOPEN_SELF\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [])\n\n\n# _LT_COMPILER_C_O([TAGNAME])\n# ---------------------------\n# Check to see if options -c and -o are simultaneously supported by compiler.\n# This macro does not hard code the compiler like AC_PROG_CC_C_O.\nm4_defun([_LT_COMPILER_C_O],\n[m4_require([_LT_DECL_SED])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_TAG_COMPILER])dnl\nAC_CACHE_CHECK([if $compiler supports -c -o file.$ac_objext],\n  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)],\n  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=no\n   $RM -r conftest 2>/dev/null\n   mkdir conftest\n   cd conftest\n   mkdir out\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n   lt_compiler_flag=\"-o out/conftest2.$ac_objext\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>out/conftest.err)\n   ac_status=$?\n   cat out/conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s out/conftest2.$ac_objext\n   then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' > out/conftest.exp\n     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2\n     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then\n       _LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n     fi\n   fi\n   chmod u+w . 2>&AS_MESSAGE_LOG_FD\n   $RM conftest*\n   # SGI C++ compiler will create directory out/ii_files/ for\n   # template instantiation\n   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files\n   $RM out/* && rmdir out\n   cd ..\n   $RM -r conftest\n   $RM conftest*\n])\n_LT_TAGDECL([compiler_c_o], [lt_cv_prog_compiler_c_o], [1],\n\t[Does compiler simultaneously support -c and -o options?])\n])# _LT_COMPILER_C_O\n\n\n# _LT_COMPILER_FILE_LOCKS([TAGNAME])\n# ----------------------------------\n# Check to see if we can do hard links to lock some files if needed\nm4_defun([_LT_COMPILER_FILE_LOCKS],\n[m4_require([_LT_ENABLE_LOCK])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\n_LT_COMPILER_C_O([$1])\n\nhard_links=\"nottested\"\nif test \"$_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)\" = no && test \"$need_locks\" != no; then\n  # do not overwrite the value of need_locks provided by the user\n  AC_MSG_CHECKING([if we can lock with hard links])\n  hard_links=yes\n  $RM conftest*\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  touch conftest.a\n  ln conftest.a conftest.b 2>&5 || hard_links=no\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  AC_MSG_RESULT([$hard_links])\n  if test \"$hard_links\" = no; then\n    AC_MSG_WARN([`$CC' does not support `-c -o', so `make -j' may be unsafe])\n    need_locks=warn\n  fi\nelse\n  need_locks=no\nfi\n_LT_DECL([], [need_locks], [1], [Must we lock files when doing compilation?])\n])# _LT_COMPILER_FILE_LOCKS\n\n\n# _LT_CHECK_OBJDIR\n# ----------------\nm4_defun([_LT_CHECK_OBJDIR],\n[AC_CACHE_CHECK([for objdir], [lt_cv_objdir],\n[rm -f .libs 2>/dev/null\nmkdir .libs 2>/dev/null\nif test -d .libs; then\n  lt_cv_objdir=.libs\nelse\n  # MS-DOS does not allow filenames that begin with a dot.\n  lt_cv_objdir=_libs\nfi\nrmdir .libs 2>/dev/null])\nobjdir=$lt_cv_objdir\n_LT_DECL([], [objdir], [0],\n         [The name of the directory that contains temporary libtool files])dnl\nm4_pattern_allow([LT_OBJDIR])dnl\nAC_DEFINE_UNQUOTED(LT_OBJDIR, \"$lt_cv_objdir/\",\n  [Define to the sub-directory in which libtool stores uninstalled libraries.])\n])# _LT_CHECK_OBJDIR\n\n\n# _LT_LINKER_HARDCODE_LIBPATH([TAGNAME])\n# --------------------------------------\n# Check hardcoding attributes.\nm4_defun([_LT_LINKER_HARDCODE_LIBPATH],\n[AC_MSG_CHECKING([how to hardcode library paths into programs])\n_LT_TAGVAR(hardcode_action, $1)=\nif test -n \"$_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\" ||\n   test -n \"$_LT_TAGVAR(runpath_var, $1)\" ||\n   test \"X$_LT_TAGVAR(hardcode_automatic, $1)\" = \"Xyes\" ; then\n\n  # We can hardcode non-existent directories.\n  if test \"$_LT_TAGVAR(hardcode_direct, $1)\" != no &&\n     # If the only mechanism to avoid hardcoding is shlibpath_var, we\n     # have to relink, otherwise we might link with an installed library\n     # when we should be linking with a yet-to-be-installed one\n     ## test \"$_LT_TAGVAR(hardcode_shlibpath_var, $1)\" != no &&\n     test \"$_LT_TAGVAR(hardcode_minus_L, $1)\" != no; then\n    # Linking always hardcodes the temporary library directory.\n    _LT_TAGVAR(hardcode_action, $1)=relink\n  else\n    # We can link without hardcoding, and we can hardcode nonexisting dirs.\n    _LT_TAGVAR(hardcode_action, $1)=immediate\n  fi\nelse\n  # We cannot hardcode anything, or else we can only hardcode existing\n  # directories.\n  _LT_TAGVAR(hardcode_action, $1)=unsupported\nfi\nAC_MSG_RESULT([$_LT_TAGVAR(hardcode_action, $1)])\n\nif test \"$_LT_TAGVAR(hardcode_action, $1)\" = relink ||\n   test \"$_LT_TAGVAR(inherit_rpath, $1)\" = yes; then\n  # Fast installation is not supported\n  enable_fast_install=no\nelif test \"$shlibpath_overrides_runpath\" = yes ||\n     test \"$enable_shared\" = no; then\n  # Fast installation is not necessary\n  enable_fast_install=needless\nfi\n_LT_TAGDECL([], [hardcode_action], [0],\n    [How to hardcode a shared library path into an executable])\n])# _LT_LINKER_HARDCODE_LIBPATH\n\n\n# _LT_CMD_STRIPLIB\n# ----------------\nm4_defun([_LT_CMD_STRIPLIB],\n[m4_require([_LT_DECL_EGREP])\nstriplib=\nold_striplib=\nAC_MSG_CHECKING([whether stripping libraries is possible])\nif test -n \"$STRIP\" && $STRIP -V 2>&1 | $GREP \"GNU strip\" >/dev/null; then\n  test -z \"$old_striplib\" && old_striplib=\"$STRIP --strip-debug\"\n  test -z \"$striplib\" && striplib=\"$STRIP --strip-unneeded\"\n  AC_MSG_RESULT([yes])\nelse\n# FIXME - insert some real tests, host_os isn't really good enough\n  case $host_os in\n  darwin*)\n    if test -n \"$STRIP\" ; then\n      striplib=\"$STRIP -x\"\n      old_striplib=\"$STRIP -S\"\n      AC_MSG_RESULT([yes])\n    else\n      AC_MSG_RESULT([no])\n    fi\n    ;;\n  *)\n    AC_MSG_RESULT([no])\n    ;;\n  esac\nfi\n_LT_DECL([], [old_striplib], [1], [Commands to strip libraries])\n_LT_DECL([], [striplib], [1])\n])# _LT_CMD_STRIPLIB\n\n\n# _LT_SYS_DYNAMIC_LINKER([TAG])\n# -----------------------------\n# PORTME Fill in your ld.so characteristics\nm4_defun([_LT_SYS_DYNAMIC_LINKER],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_OBJDUMP])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_CHECK_SHELL_FEATURES])dnl\nAC_MSG_CHECKING([dynamic linker characteristics])\nm4_if([$1],\n\t[], [\nif test \"$GCC\" = yes; then\n  case $host_os in\n    darwin*) lt_awk_arg=\"/^libraries:/,/LR/\" ;;\n    *) lt_awk_arg=\"/^libraries:/\" ;;\n  esac\n  case $host_os in\n    mingw* | cegcc*) lt_sed_strip_eq=\"s,=\\([[A-Za-z]]:\\),\\1,g\" ;;\n    *) lt_sed_strip_eq=\"s,=/,/,g\" ;;\n  esac\n  lt_search_path_spec=`$CC -print-search-dirs | awk $lt_awk_arg | $SED -e \"s/^libraries://\" -e $lt_sed_strip_eq`\n  case $lt_search_path_spec in\n  *\\;*)\n    # if the path contains \";\" then we assume it to be the separator\n    # otherwise default to the standard path separator (i.e. \":\") - it is\n    # assumed that no part of a normal pathname contains \";\" but that should\n    # okay in the real world where \";\" in dirpaths is itself problematic.\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED 's/;/ /g'`\n    ;;\n  *)\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED \"s/$PATH_SEPARATOR/ /g\"`\n    ;;\n  esac\n  # Ok, now we have the path, separated by spaces, we can step through it\n  # and add multilib dir if necessary.\n  lt_tmp_lt_search_path_spec=\n  lt_multi_os_dir=`$CC $CPPFLAGS $CFLAGS $LDFLAGS -print-multi-os-directory 2>/dev/null`\n  for lt_sys_path in $lt_search_path_spec; do\n    if test -d \"$lt_sys_path/$lt_multi_os_dir\"; then\n      lt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path/$lt_multi_os_dir\"\n    else\n      test -d \"$lt_sys_path\" && \\\n\tlt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path\"\n    fi\n  done\n  lt_search_path_spec=`$ECHO \"$lt_tmp_lt_search_path_spec\" | awk '\nBEGIN {RS=\" \"; FS=\"/|\\n\";} {\n  lt_foo=\"\";\n  lt_count=0;\n  for (lt_i = NF; lt_i > 0; lt_i--) {\n    if ($lt_i != \"\" && $lt_i != \".\") {\n      if ($lt_i == \"..\") {\n        lt_count++;\n      } else {\n        if (lt_count == 0) {\n          lt_foo=\"/\" $lt_i lt_foo;\n        } else {\n          lt_count--;\n        }\n      }\n    }\n  }\n  if (lt_foo != \"\") { lt_freq[[lt_foo]]++; }\n  if (lt_freq[[lt_foo]] == 1) { print lt_foo; }\n}'`\n  # AWK program above erroneously prepends '/' to C:/dos/paths\n  # for these hosts.\n  case $host_os in\n    mingw* | cegcc*) lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" |\\\n      $SED 's,/\\([[A-Za-z]]:\\),\\1,g'` ;;\n  esac\n  sys_lib_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $lt_NL2SP`\nelse\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\nfi])\nlibrary_names_spec=\nlibname_spec='lib$name'\nsoname_spec=\nshrext_cmds=\".so\"\npostinstall_cmds=\npostuninstall_cmds=\nfinish_cmds=\nfinish_eval=\nshlibpath_var=\nshlibpath_overrides_runpath=unknown\nversion_type=none\ndynamic_linker=\"$host_os ld.so\"\nsys_lib_dlsearch_path_spec=\"/lib /usr/lib\"\nneed_lib_prefix=unknown\nhardcode_into_libs=no\n\n# when you set need_version to no, make sure it does not cause -set_version\n# flags to be left without arguments\nneed_version=unknown\n\ncase $host_os in\naix3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='${libname}${release}${shared_ext}$versuffix $libname.a'\n  shlibpath_var=LIBPATH\n\n  # AIX 3 has no versioning support, so we append a major version to the name.\n  soname_spec='${libname}${release}${shared_ext}$major'\n  ;;\n\naix[[4-9]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  hardcode_into_libs=yes\n  if test \"$host_cpu\" = ia64; then\n    # AIX 5 supports IA64\n    library_names_spec='${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext}$versuffix $libname${shared_ext}'\n    shlibpath_var=LD_LIBRARY_PATH\n  else\n    # With GCC up to 2.95.x, collect2 would create an import file\n    # for dependence libraries.  The import file would start with\n    # the line `#! .'.  This would cause the generated library to\n    # depend on `.', always an invalid library.  This was fixed in\n    # development snapshots of GCC prior to 3.0.\n    case $host_os in\n      aix4 | aix4.[[01]] | aix4.[[01]].*)\n      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'\n\t   echo ' yes '\n\t   echo '#endif'; } | ${CC} -E - | $GREP yes > /dev/null; then\n\t:\n      else\n\tcan_build_shared=no\n      fi\n      ;;\n    esac\n    # AIX (on Power*) has no versioning support, so currently we can not hardcode correct\n    # soname into executable. Probably we can add versioning support to\n    # collect2, so additional links can be useful in future.\n    if test \"$aix_use_runtimelinking\" = yes; then\n      # If using run time linking (on AIX 4.2 or later) use lib<name>.so\n      # instead of lib<name>.a to let people know that these are not\n      # typical AIX shared libraries.\n      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    else\n      # We preserve .a as extension for shared libraries through AIX4.2\n      # and later when we are not doing run time linking.\n      library_names_spec='${libname}${release}.a $libname.a'\n      soname_spec='${libname}${release}${shared_ext}$major'\n    fi\n    shlibpath_var=LIBPATH\n  fi\n  ;;\n\namigaos*)\n  case $host_cpu in\n  powerpc)\n    # Since July 2007 AmigaOS4 officially supports .so libraries.\n    # When compiling the executable, add -use-dynld -Lsobjs: to the compileline.\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    ;;\n  m68k)\n    library_names_spec='$libname.ixlibrary $libname.a'\n    # Create ${libname}_ixlibrary.a entries in /sys/libs.\n    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`func_echo_all \"$lib\" | $SED '\\''s%^.*/\\([[^/]]*\\)\\.ixlibrary$%\\1%'\\''`; test $RM /sys/libs/${libname}_ixlibrary.a; $show \"cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a\"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'\n    ;;\n  esac\n  ;;\n\nbeos*)\n  library_names_spec='${libname}${shared_ext}'\n  dynamic_linker=\"$host_os ld.so\"\n  shlibpath_var=LIBRARY_PATH\n  ;;\n\nbsdi[[45]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=\"/shlib /usr/lib /usr/local/lib\"\n  # the default ld.so.conf also contains /usr/contrib/lib and\n  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow\n  # libtool to hard-code these into programs\n  ;;\n\ncygwin* | mingw* | pw32* | cegcc*)\n  version_type=windows\n  shrext_cmds=\".dll\"\n  need_version=no\n  need_lib_prefix=no\n\n  case $GCC,$cc_basename in\n  yes,*)\n    # gcc\n    library_names_spec='$libname.dll.a'\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\${file}`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\${base_file}'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname~\n      chmod a+x \\$dldir/$dlname~\n      if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n        eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n      fi'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n\n    case $host_os in\n    cygwin*)\n      # Cygwin DLLs use 'cyg' prefix rather than 'lib'\n      soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\nm4_if([$1], [],[\n      sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/lib/w32api\"])\n      ;;\n    mingw* | cegcc*)\n      # MinGW DLLs use traditional 'lib' prefix\n      soname_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\n      ;;\n    pw32*)\n      # pw32 DLLs use 'pw' prefix rather than 'lib'\n      library_names_spec='`echo ${libname} | sed -e 's/^lib/pw/'``echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\n      ;;\n    esac\n    dynamic_linker='Win32 ld.exe'\n    ;;\n\n  *,cl*)\n    # Native MSVC\n    libname_spec='$name'\n    soname_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\n    library_names_spec='${libname}.dll.lib'\n\n    case $build_os in\n    mingw*)\n      sys_lib_search_path_spec=\n      lt_save_ifs=$IFS\n      IFS=';'\n      for lt_path in $LIB\n      do\n        IFS=$lt_save_ifs\n        # Let DOS variable expansion print the short 8.3 style file name.\n        lt_path=`cd \"$lt_path\" 2>/dev/null && cmd //C \"for %i in (\".\") do @echo %~si\"`\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec $lt_path\"\n      done\n      IFS=$lt_save_ifs\n      # Convert to MSYS style.\n      sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | sed -e 's|\\\\\\\\|/|g' -e 's| \\\\([[a-zA-Z]]\\\\):| /\\\\1|g' -e 's|^ ||'`\n      ;;\n    cygwin*)\n      # Convert to unix form, then to dos form, then back to unix form\n      # but this time dos style (no spaces!) so that the unix form looks\n      # like /cygdrive/c/PROGRA~1:/cygdr...\n      sys_lib_search_path_spec=`cygpath --path --unix \"$LIB\"`\n      sys_lib_search_path_spec=`cygpath --path --dos \"$sys_lib_search_path_spec\" 2>/dev/null`\n      sys_lib_search_path_spec=`cygpath --path --unix \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      ;;\n    *)\n      sys_lib_search_path_spec=\"$LIB\"\n      if $ECHO \"$sys_lib_search_path_spec\" | [$GREP ';[c-zC-Z]:/' >/dev/null]; then\n        # It is most probably a Windows format PATH.\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e 's/;/ /g'`\n      else\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      fi\n      # FIXME: find the short name or the path components, as spaces are\n      # common. (e.g. \"Program Files\" -> \"PROGRA~1\")\n      ;;\n    esac\n\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\${file}`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\${base_file}'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n    dynamic_linker='Win32 link.exe'\n    ;;\n\n  *)\n    # Assume MSVC wrapper\n    library_names_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext} $libname.lib'\n    dynamic_linker='Win32 ld.exe'\n    ;;\n  esac\n  # FIXME: first we should search . and the directory the executable is in\n  shlibpath_var=PATH\n  ;;\n\ndarwin* | rhapsody*)\n  dynamic_linker=\"$host_os dyld\"\n  version_type=darwin\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${major}$shared_ext ${libname}$shared_ext'\n  soname_spec='${libname}${release}${major}$shared_ext'\n  shlibpath_overrides_runpath=yes\n  shlibpath_var=DYLD_LIBRARY_PATH\n  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'\nm4_if([$1], [],[\n  sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/local/lib\"])\n  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'\n  ;;\n\ndgux*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname$shared_ext'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\nfreebsd* | dragonfly*)\n  # DragonFly does not have aout.  When/if they implement a new\n  # versioning mechanism, adjust this.\n  if test -x /usr/bin/objformat; then\n    objformat=`/usr/bin/objformat`\n  else\n    case $host_os in\n    freebsd[[23]].*) objformat=aout ;;\n    *) objformat=elf ;;\n    esac\n  fi\n  version_type=freebsd-$objformat\n  case $version_type in\n    freebsd-elf*)\n      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'\n      need_version=no\n      need_lib_prefix=no\n      ;;\n    freebsd-*)\n      library_names_spec='${libname}${release}${shared_ext}$versuffix $libname${shared_ext}$versuffix'\n      need_version=yes\n      ;;\n  esac\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_os in\n  freebsd2.*)\n    shlibpath_overrides_runpath=yes\n    ;;\n  freebsd3.[[01]]* | freebsdelf3.[[01]]*)\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  freebsd3.[[2-9]]* | freebsdelf3.[[2-9]]* | \\\n  freebsd4.[[0-5]] | freebsdelf4.[[0-5]] | freebsd4.1.1 | freebsdelf4.1.1)\n    shlibpath_overrides_runpath=no\n    hardcode_into_libs=yes\n    ;;\n  *) # from 4.6 on, and DragonFly\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  esac\n  ;;\n\ngnu*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nhaiku*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  dynamic_linker=\"$host_os runtime_loader\"\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  sys_lib_dlsearch_path_spec='/boot/home/config/lib /boot/common/lib /boot/system/lib'\n  hardcode_into_libs=yes\n  ;;\n\nhpux9* | hpux10* | hpux11*)\n  # Give a soname corresponding to the major version so that dld.sl refuses to\n  # link against other versions.\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  case $host_cpu in\n  ia64*)\n    shrext_cmds='.so'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.so\"\n    shlibpath_var=LD_LIBRARY_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    if test \"X$HPUX_IA64_MODE\" = X32; then\n      sys_lib_search_path_spec=\"/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib\"\n    else\n      sys_lib_search_path_spec=\"/usr/lib/hpux64 /usr/local/lib/hpux64\"\n    fi\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n  hppa*64*)\n    shrext_cmds='.sl'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    sys_lib_search_path_spec=\"/usr/lib/pa20_64 /usr/ccs/lib/pa20_64\"\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n  *)\n    shrext_cmds='.sl'\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=SHLIB_PATH\n    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    ;;\n  esac\n  # HP-UX runs *really* slowly unless shared libraries are mode 555, ...\n  postinstall_cmds='chmod 555 $lib'\n  # or fails outright, so override atomically:\n  install_override_mode=555\n  ;;\n\ninterix[[3-9]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $host_os in\n    nonstopux*) version_type=nonstopux ;;\n    *)\n\tif test \"$lt_cv_prog_gnu_ld\" = yes; then\n\t\tversion_type=linux # correct to gnu/linux during the next big refactor\n\telse\n\t\tversion_type=irix\n\tfi ;;\n  esac\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='${libname}${release}${shared_ext}$major'\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext} $libname${shared_ext}'\n  case $host_os in\n  irix5* | nonstopux*)\n    libsuff= shlibsuff=\n    ;;\n  *)\n    case $LD in # libtool.m4 will add one of these switches to LD\n    *-32|*\"-32 \"|*-melf32bsmip|*\"-melf32bsmip \")\n      libsuff= shlibsuff= libmagic=32-bit;;\n    *-n32|*\"-n32 \"|*-melf32bmipn32|*\"-melf32bmipn32 \")\n      libsuff=32 shlibsuff=N32 libmagic=N32;;\n    *-64|*\"-64 \"|*-melf64bmip|*\"-melf64bmip \")\n      libsuff=64 shlibsuff=64 libmagic=64-bit;;\n    *) libsuff= shlibsuff= libmagic=never-match;;\n    esac\n    ;;\n  esac\n  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_search_path_spec=\"/usr/lib${libsuff} /lib${libsuff} /usr/local/lib${libsuff}\"\n  sys_lib_dlsearch_path_spec=\"/usr/lib${libsuff} /lib${libsuff}\"\n  hardcode_into_libs=yes\n  ;;\n\n# No shared lib support for Linux oldld, aout, or coff.\nlinux*oldld* | linux*aout* | linux*coff*)\n  dynamic_linker=no\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -n $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n\n  # Some binutils ld are patched to set DT_RUNPATH\n  AC_CACHE_VAL([lt_cv_shlibpath_overrides_runpath],\n    [lt_cv_shlibpath_overrides_runpath=no\n    save_LDFLAGS=$LDFLAGS\n    save_libdir=$libdir\n    eval \"libdir=/foo; wl=\\\"$_LT_TAGVAR(lt_prog_compiler_wl, $1)\\\"; \\\n\t LDFLAGS=\\\"\\$LDFLAGS $_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\\\"\"\n    AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],\n      [AS_IF([ ($OBJDUMP -p conftest$ac_exeext) 2>/dev/null | grep \"RUNPATH.*$libdir\" >/dev/null],\n\t [lt_cv_shlibpath_overrides_runpath=yes])])\n    LDFLAGS=$save_LDFLAGS\n    libdir=$save_libdir\n    ])\n  shlibpath_overrides_runpath=$lt_cv_shlibpath_overrides_runpath\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  # Append ld.so.conf contents to the search path\n  if test -f /etc/ld.so.conf; then\n    lt_ld_extra=`awk '/^include / { system(sprintf(\"cd /etc; cat %s 2>/dev/null\", \\[$]2)); skip = 1; } { if (!skip) print \\[$]0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;/^[\t ]*hwcap[\t ]/d;s/[:,\t]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;s/\"//g;/^$/d' | tr '\\n' ' '`\n    sys_lib_dlsearch_path_spec=\"/lib /usr/lib $lt_ld_extra\"\n  fi\n\n  # We used to test for /lib/ld.so.1 and disable shared libraries on\n  # powerpc, because MkLinux only supported shared libraries with the\n  # GNU dynamic linker.  Since this was broken with cross compilers,\n  # most powerpc-linux boxes support dynamic linking these days and\n  # people can always --disable-shared, the test was removed, and we\n  # assume the GNU/Linux dynamic linker is in use.\n  dynamic_linker='GNU/Linux ld.so'\n  ;;\n\nnetbsdelf*-gnu)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='NetBSD ld.elf_so'\n  ;;\n\nnetbsd*)\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'\n    finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n    dynamic_linker='NetBSD (a.out) ld.so'\n  else\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    dynamic_linker='NetBSD ld.elf_so'\n  fi\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  ;;\n\nnewsos6)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\n*nto* | *qnx*)\n  version_type=qnx\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='ldqnx.so'\n  ;;\n\nopenbsd*)\n  version_type=sunos\n  sys_lib_dlsearch_path_spec=\"/usr/lib\"\n  need_lib_prefix=no\n  # Some older versions of OpenBSD (3.3 at least) *do* need versioned libs.\n  case $host_os in\n    openbsd3.3 | openbsd3.3.*)\tneed_version=yes ;;\n    *)\t\t\t\tneed_version=no  ;;\n  esac\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n    case $host_os in\n      openbsd2.[[89]] | openbsd2.[[89]].*)\n\tshlibpath_overrides_runpath=no\n\t;;\n      *)\n\tshlibpath_overrides_runpath=yes\n\t;;\n      esac\n  else\n    shlibpath_overrides_runpath=yes\n  fi\n  ;;\n\nos2*)\n  libname_spec='$name'\n  shrext_cmds=\".dll\"\n  need_lib_prefix=no\n  library_names_spec='$libname${shared_ext} $libname.a'\n  dynamic_linker='OS/2 ld.exe'\n  shlibpath_var=LIBPATH\n  ;;\n\nosf3* | osf4* | osf5*)\n  version_type=osf\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='${libname}${release}${shared_ext}$major'\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib\"\n  sys_lib_dlsearch_path_spec=\"$sys_lib_search_path_spec\"\n  ;;\n\nrdos*)\n  dynamic_linker=no\n  ;;\n\nsolaris*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  # ldd complains unless libraries are executable\n  postinstall_cmds='chmod +x $lib'\n  ;;\n\nsunos4*)\n  version_type=sunos\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/usr/etc\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  if test \"$with_gnu_ld\" = yes; then\n    need_lib_prefix=no\n  fi\n  need_version=yes\n  ;;\n\nsysv4 | sysv4.3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_vendor in\n    sni)\n      shlibpath_overrides_runpath=no\n      need_lib_prefix=no\n      runpath_var=LD_RUN_PATH\n      ;;\n    siemens)\n      need_lib_prefix=no\n      ;;\n    motorola)\n      need_lib_prefix=no\n      need_version=no\n      shlibpath_overrides_runpath=no\n      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'\n      ;;\n  esac\n  ;;\n\nsysv4*MP*)\n  if test -d /usr/nec ;then\n    version_type=linux # correct to gnu/linux during the next big refactor\n    library_names_spec='$libname${shared_ext}.$versuffix $libname${shared_ext}.$major $libname${shared_ext}'\n    soname_spec='$libname${shared_ext}.$major'\n    shlibpath_var=LD_LIBRARY_PATH\n  fi\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  version_type=freebsd-elf\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  if test \"$with_gnu_ld\" = yes; then\n    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'\n  else\n    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'\n    case $host_os in\n      sco3.2v5*)\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec /lib\"\n\t;;\n    esac\n  fi\n  sys_lib_dlsearch_path_spec='/usr/lib'\n  ;;\n\ntpf*)\n  # TPF is a cross-target only.  Preferred cross-host = GNU/Linux.\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nuts4*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\n*)\n  dynamic_linker=no\n  ;;\nesac\nAC_MSG_RESULT([$dynamic_linker])\ntest \"$dynamic_linker\" = no && can_build_shared=no\n\nvariables_saved_for_relink=\"PATH $shlibpath_var $runpath_var\"\nif test \"$GCC\" = yes; then\n  variables_saved_for_relink=\"$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH\"\nfi\n\nif test \"${lt_cv_sys_lib_search_path_spec+set}\" = set; then\n  sys_lib_search_path_spec=\"$lt_cv_sys_lib_search_path_spec\"\nfi\nif test \"${lt_cv_sys_lib_dlsearch_path_spec+set}\" = set; then\n  sys_lib_dlsearch_path_spec=\"$lt_cv_sys_lib_dlsearch_path_spec\"\nfi\n\n_LT_DECL([], [variables_saved_for_relink], [1],\n    [Variables whose values should be saved in libtool wrapper scripts and\n    restored at link time])\n_LT_DECL([], [need_lib_prefix], [0],\n    [Do we need the \"lib\" prefix for modules?])\n_LT_DECL([], [need_version], [0], [Do we need a version for libraries?])\n_LT_DECL([], [version_type], [0], [Library versioning type])\n_LT_DECL([], [runpath_var], [0],  [Shared library runtime path variable])\n_LT_DECL([], [shlibpath_var], [0],[Shared library path variable])\n_LT_DECL([], [shlibpath_overrides_runpath], [0],\n    [Is shlibpath searched before the hard-coded library search path?])\n_LT_DECL([], [libname_spec], [1], [Format of library name prefix])\n_LT_DECL([], [library_names_spec], [1],\n    [[List of archive names.  First name is the real one, the rest are links.\n    The last name is the one that the linker finds with -lNAME]])\n_LT_DECL([], [soname_spec], [1],\n    [[The coded name of the library, if different from the real name]])\n_LT_DECL([], [install_override_mode], [1],\n    [Permission mode override for installation of shared libraries])\n_LT_DECL([], [postinstall_cmds], [2],\n    [Command to use after installation of a shared archive])\n_LT_DECL([], [postuninstall_cmds], [2],\n    [Command to use after uninstallation of a shared archive])\n_LT_DECL([], [finish_cmds], [2],\n    [Commands used to finish a libtool library installation in a directory])\n_LT_DECL([], [finish_eval], [1],\n    [[As \"finish_cmds\", except a single script fragment to be evaled but\n    not shown]])\n_LT_DECL([], [hardcode_into_libs], [0],\n    [Whether we should hardcode library paths into libraries])\n_LT_DECL([], [sys_lib_search_path_spec], [2],\n    [Compile-time system search path for libraries])\n_LT_DECL([], [sys_lib_dlsearch_path_spec], [2],\n    [Run-time system search path for libraries])\n])# _LT_SYS_DYNAMIC_LINKER\n\n\n# _LT_PATH_TOOL_PREFIX(TOOL)\n# --------------------------\n# find a file program which can recognize shared library\nAC_DEFUN([_LT_PATH_TOOL_PREFIX],\n[m4_require([_LT_DECL_EGREP])dnl\nAC_MSG_CHECKING([for $1])\nAC_CACHE_VAL(lt_cv_path_MAGIC_CMD,\n[case $MAGIC_CMD in\n[[\\\\/*] |  ?:[\\\\/]*])\n  lt_cv_path_MAGIC_CMD=\"$MAGIC_CMD\" # Let the user override the test with a path.\n  ;;\n*)\n  lt_save_MAGIC_CMD=\"$MAGIC_CMD\"\n  lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\ndnl $ac_dummy forces splitting on constant user-supplied paths.\ndnl POSIX.2 word splitting is done only on the output of word expansions,\ndnl not every word.  This closes a longstanding sh security hole.\n  ac_dummy=\"m4_if([$2], , $PATH, [$2])\"\n  for ac_dir in $ac_dummy; do\n    IFS=\"$lt_save_ifs\"\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f $ac_dir/$1; then\n      lt_cv_path_MAGIC_CMD=\"$ac_dir/$1\"\n      if test -n \"$file_magic_test_file\"; then\n\tcase $deplibs_check_method in\n\t\"file_magic \"*)\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"file_magic \\(.*\\)\"`\n\t  MAGIC_CMD=\"$lt_cv_path_MAGIC_CMD\"\n\t  if eval $file_magic_cmd \\$file_magic_test_file 2> /dev/null |\n\t    $EGREP \"$file_magic_regex\" > /dev/null; then\n\t    :\n\t  else\n\t    cat <<_LT_EOF 1>&2\n\n*** Warning: the command libtool uses to detect shared libraries,\n*** $file_magic_cmd, produces output that libtool cannot recognize.\n*** The result is that libtool may fail to recognize shared libraries\n*** as such.  This will affect the creation of libtool libraries that\n*** depend on shared libraries, but programs linked with such libtool\n*** libraries will work regardless of this problem.  Nevertheless, you\n*** may want to report the problem to your system manager and/or to\n*** bug-libtool@gnu.org\n\n_LT_EOF\n\t  fi ;;\n\tesac\n      fi\n      break\n    fi\n  done\n  IFS=\"$lt_save_ifs\"\n  MAGIC_CMD=\"$lt_save_MAGIC_CMD\"\n  ;;\nesac])\nMAGIC_CMD=\"$lt_cv_path_MAGIC_CMD\"\nif test -n \"$MAGIC_CMD\"; then\n  AC_MSG_RESULT($MAGIC_CMD)\nelse\n  AC_MSG_RESULT(no)\nfi\n_LT_DECL([], [MAGIC_CMD], [0],\n\t [Used to examine libraries when file_magic_cmd begins with \"file\"])dnl\n])# _LT_PATH_TOOL_PREFIX\n\n# Old name:\nAU_ALIAS([AC_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_PATH_TOOL_PREFIX], [])\n\n\n# _LT_PATH_MAGIC\n# --------------\n# find a file program which can recognize a shared library\nm4_defun([_LT_PATH_MAGIC],\n[_LT_PATH_TOOL_PREFIX(${ac_tool_prefix}file, /usr/bin$PATH_SEPARATOR$PATH)\nif test -z \"$lt_cv_path_MAGIC_CMD\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    _LT_PATH_TOOL_PREFIX(file, /usr/bin$PATH_SEPARATOR$PATH)\n  else\n    MAGIC_CMD=:\n  fi\nfi\n])# _LT_PATH_MAGIC\n\n\n# LT_PATH_LD\n# ----------\n# find the pathname to the GNU or non-GNU linker\nAC_DEFUN([LT_PATH_LD],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_PROG_ECHO_BACKSLASH])dnl\n\nAC_ARG_WITH([gnu-ld],\n    [AS_HELP_STRING([--with-gnu-ld],\n\t[assume the C compiler uses GNU ld @<:@default=no@:>@])],\n    [test \"$withval\" = no || with_gnu_ld=yes],\n    [with_gnu_ld=no])dnl\n\nac_prog=ld\nif test \"$GCC\" = yes; then\n  # Check if gcc -print-prog-name=ld gives a path.\n  AC_MSG_CHECKING([for ld used by $CC])\n  case $host in\n  *-*-mingw*)\n    # gcc leaves a trailing carriage return which upsets mingw\n    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\\015'` ;;\n  *)\n    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;\n  esac\n  case $ac_prog in\n    # Accept absolute paths.\n    [[\\\\/]]* | ?:[[\\\\/]]*)\n      re_direlt='/[[^/]][[^/]]*/\\.\\./'\n      # Canonicalize the pathname of ld\n      ac_prog=`$ECHO \"$ac_prog\"| $SED 's%\\\\\\\\%/%g'`\n      while $ECHO \"$ac_prog\" | $GREP \"$re_direlt\" > /dev/null 2>&1; do\n\tac_prog=`$ECHO $ac_prog| $SED \"s%$re_direlt%/%\"`\n      done\n      test -z \"$LD\" && LD=\"$ac_prog\"\n      ;;\n  \"\")\n    # If it fails, then pretend we aren't using GCC.\n    ac_prog=ld\n    ;;\n  *)\n    # If it is relative, then search for the first ld in PATH.\n    with_gnu_ld=unknown\n    ;;\n  esac\nelif test \"$with_gnu_ld\" = yes; then\n  AC_MSG_CHECKING([for GNU ld])\nelse\n  AC_MSG_CHECKING([for non-GNU ld])\nfi\nAC_CACHE_VAL(lt_cv_path_LD,\n[if test -z \"$LD\"; then\n  lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\n  for ac_dir in $PATH; do\n    IFS=\"$lt_save_ifs\"\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$ac_prog\" || test -f \"$ac_dir/$ac_prog$ac_exeext\"; then\n      lt_cv_path_LD=\"$ac_dir/$ac_prog\"\n      # Check to see if the program is GNU ld.  I'd rather use --version,\n      # but apparently some variants of GNU ld only accept -v.\n      # Break only if it was the GNU/non-GNU ld that we prefer.\n      case `\"$lt_cv_path_LD\" -v 2>&1 </dev/null` in\n      *GNU* | *'with BFD'*)\n\ttest \"$with_gnu_ld\" != no && break\n\t;;\n      *)\n\ttest \"$with_gnu_ld\" != yes && break\n\t;;\n      esac\n    fi\n  done\n  IFS=\"$lt_save_ifs\"\nelse\n  lt_cv_path_LD=\"$LD\" # Let the user override the test with a path.\nfi])\nLD=\"$lt_cv_path_LD\"\nif test -n \"$LD\"; then\n  AC_MSG_RESULT($LD)\nelse\n  AC_MSG_RESULT(no)\nfi\ntest -z \"$LD\" && AC_MSG_ERROR([no acceptable ld found in \\$PATH])\n_LT_PATH_LD_GNU\nAC_SUBST([LD])\n\n_LT_TAGDECL([], [LD], [1], [The linker used to build libraries])\n])# LT_PATH_LD\n\n# Old names:\nAU_ALIAS([AM_PROG_LD], [LT_PATH_LD])\nAU_ALIAS([AC_PROG_LD], [LT_PATH_LD])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_PROG_LD], [])\ndnl AC_DEFUN([AC_PROG_LD], [])\n\n\n# _LT_PATH_LD_GNU\n#- --------------\nm4_defun([_LT_PATH_LD_GNU],\n[AC_CACHE_CHECK([if the linker ($LD) is GNU ld], lt_cv_prog_gnu_ld,\n[# I'd rather use --version here, but apparently some GNU lds only accept -v.\ncase `$LD -v 2>&1 </dev/null` in\n*GNU* | *'with BFD'*)\n  lt_cv_prog_gnu_ld=yes\n  ;;\n*)\n  lt_cv_prog_gnu_ld=no\n  ;;\nesac])\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n])# _LT_PATH_LD_GNU\n\n\n# _LT_CMD_RELOAD\n# --------------\n# find reload flag for linker\n#   -- PORTME Some linkers may need a different reload flag.\nm4_defun([_LT_CMD_RELOAD],\n[AC_CACHE_CHECK([for $LD option to reload object files],\n  lt_cv_ld_reload_flag,\n  [lt_cv_ld_reload_flag='-r'])\nreload_flag=$lt_cv_ld_reload_flag\ncase $reload_flag in\n\"\" | \" \"*) ;;\n*) reload_flag=\" $reload_flag\" ;;\nesac\nreload_cmds='$LD$reload_flag -o $output$reload_objs'\ncase $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    if test \"$GCC\" != yes; then\n      reload_cmds=false\n    fi\n    ;;\n  darwin*)\n    if test \"$GCC\" = yes; then\n      reload_cmds='$LTCC $LTCFLAGS -nostdlib ${wl}-r -o $output$reload_objs'\n    else\n      reload_cmds='$LD$reload_flag -o $output$reload_objs'\n    fi\n    ;;\nesac\n_LT_TAGDECL([], [reload_flag], [1], [How to create reloadable object files])dnl\n_LT_TAGDECL([], [reload_cmds], [2])dnl\n])# _LT_CMD_RELOAD\n\n\n# _LT_CHECK_MAGIC_METHOD\n# ----------------------\n# how to check for library dependencies\n#  -- PORTME fill in with the dynamic library characteristics\nm4_defun([_LT_CHECK_MAGIC_METHOD],\n[m4_require([_LT_DECL_EGREP])\nm4_require([_LT_DECL_OBJDUMP])\nAC_CACHE_CHECK([how to recognize dependent libraries],\nlt_cv_deplibs_check_method,\n[lt_cv_file_magic_cmd='$MAGIC_CMD'\nlt_cv_file_magic_test_file=\nlt_cv_deplibs_check_method='unknown'\n# Need to set the preceding variable on all platforms that support\n# interlibrary dependencies.\n# 'none' -- dependencies not supported.\n# `unknown' -- same as none, but documents that we really don't know.\n# 'pass_all' -- all dependencies passed with no checks.\n# 'test_compile' -- check by making test program.\n# 'file_magic [[regex]]' -- check by looking for files in library path\n# which responds to the $file_magic_cmd with a given extended regex.\n# If you have `file' or equivalent on your system and you're not sure\n# whether `pass_all' will *always* work, you probably want this one.\n\ncase $host_os in\naix[[4-9]]*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbeos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbsdi[[45]]*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib)'\n  lt_cv_file_magic_cmd='/usr/bin/file -L'\n  lt_cv_file_magic_test_file=/shlib/libc.so\n  ;;\n\ncygwin*)\n  # func_win32_libid is a shell function defined in ltmain.sh\n  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n  lt_cv_file_magic_cmd='func_win32_libid'\n  ;;\n\nmingw* | pw32*)\n  # Base MSYS/MinGW do not provide the 'file' command needed by\n  # func_win32_libid shell function, so use a weaker test based on 'objdump',\n  # unless we find 'file', for example because we are cross-compiling.\n  # func_win32_libid assumes BSD nm, so disallow it if using MS dumpbin.\n  if ( test \"$lt_cv_nm_interface\" = \"BSD nm\" && file / ) >/dev/null 2>&1; then\n    lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n    lt_cv_file_magic_cmd='func_win32_libid'\n  else\n    # Keep this pattern in sync with the one in func_win32_libid.\n    lt_cv_deplibs_check_method='file_magic file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)'\n    lt_cv_file_magic_cmd='$OBJDUMP -f'\n  fi\n  ;;\n\ncegcc*)\n  # use the weaker test based on 'objdump'. See mingw*.\n  lt_cv_deplibs_check_method='file_magic file format pe-arm-.*little(.*architecture: arm)?'\n  lt_cv_file_magic_cmd='$OBJDUMP -f'\n  ;;\n\ndarwin* | rhapsody*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nfreebsd* | dragonfly*)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    case $host_cpu in\n    i*86 )\n      # Not sure whether the presence of OpenBSD here was a mistake.\n      # Let's accept both of them until this is cleared up.\n      lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD|DragonFly)/i[[3-9]]86 (compact )?demand paged shared library'\n      lt_cv_file_magic_cmd=/usr/bin/file\n      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`\n      ;;\n    esac\n  else\n    lt_cv_deplibs_check_method=pass_all\n  fi\n  ;;\n\ngnu*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nhaiku*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nhpux10.20* | hpux11*)\n  lt_cv_file_magic_cmd=/usr/bin/file\n  case $host_cpu in\n  ia64*)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|ELF-[[0-9]][[0-9]]) shared object file - IA64'\n    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so\n    ;;\n  hppa*64*)\n    [lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF[ -][0-9][0-9])(-bit)?( [LM]SB)? shared object( file)?[, -]* PA-RISC [0-9]\\.[0-9]']\n    lt_cv_file_magic_test_file=/usr/lib/pa20_64/libc.sl\n    ;;\n  *)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|PA-RISC[[0-9]]\\.[[0-9]]) shared library'\n    lt_cv_file_magic_test_file=/usr/lib/libc.sl\n    ;;\n  esac\n  ;;\n\ninterix[[3-9]]*)\n  # PIC code is broken on Interix 3.x, that's why |\\.a not |_pic\\.a here\n  lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|\\.a)$'\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $LD in\n  *-32|*\"-32 \") libmagic=32-bit;;\n  *-n32|*\"-n32 \") libmagic=N32;;\n  *-64|*\"-64 \") libmagic=64-bit;;\n  *) libmagic=never-match;;\n  esac\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nnetbsd* | netbsdelf*-gnu)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|_pic\\.a)$'\n  fi\n  ;;\n\nnewos6*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (executable|dynamic lib)'\n  lt_cv_file_magic_cmd=/usr/bin/file\n  lt_cv_file_magic_test_file=/usr/lib/libnls.so\n  ;;\n\n*nto* | *qnx*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nopenbsd*)\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|\\.so|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  fi\n  ;;\n\nosf3* | osf4* | osf5*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nrdos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsolaris*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv4 | sysv4.3*)\n  case $host_vendor in\n  motorola)\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib) M[[0-9]][[0-9]]* Version [[0-9]]'\n    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`\n    ;;\n  ncr)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  sequent)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB (shared object|dynamic lib )'\n    ;;\n  sni)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method=\"file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB dynamic lib\"\n    lt_cv_file_magic_test_file=/lib/libc.so\n    ;;\n  siemens)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  pc)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  esac\n  ;;\n\ntpf*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nesac\n])\n\nfile_magic_glob=\nwant_nocaseglob=no\nif test \"$build\" = \"$host\"; then\n  case $host_os in\n  mingw* | pw32*)\n    if ( shopt | grep nocaseglob ) >/dev/null 2>&1; then\n      want_nocaseglob=yes\n    else\n      file_magic_glob=`echo aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ | $SED -e \"s/\\(..\\)/s\\/[[\\1]]\\/[[\\1]]\\/g;/g\"`\n    fi\n    ;;\n  esac\nfi\n\nfile_magic_cmd=$lt_cv_file_magic_cmd\ndeplibs_check_method=$lt_cv_deplibs_check_method\ntest -z \"$deplibs_check_method\" && deplibs_check_method=unknown\n\n_LT_DECL([], [deplibs_check_method], [1],\n    [Method to check whether dependent libraries are shared objects])\n_LT_DECL([], [file_magic_cmd], [1],\n    [Command to use when deplibs_check_method = \"file_magic\"])\n_LT_DECL([], [file_magic_glob], [1],\n    [How to find potential files when deplibs_check_method = \"file_magic\"])\n_LT_DECL([], [want_nocaseglob], [1],\n    [Find potential files using nocaseglob when deplibs_check_method = \"file_magic\"])\n])# _LT_CHECK_MAGIC_METHOD\n\n\n# LT_PATH_NM\n# ----------\n# find the pathname to a BSD- or MS-compatible name lister\nAC_DEFUN([LT_PATH_NM],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_CACHE_CHECK([for BSD- or MS-compatible name lister (nm)], lt_cv_path_NM,\n[if test -n \"$NM\"; then\n  # Let the user override the test.\n  lt_cv_path_NM=\"$NM\"\nelse\n  lt_nm_to_check=\"${ac_tool_prefix}nm\"\n  if test -n \"$ac_tool_prefix\" && test \"$build\" = \"$host\"; then\n    lt_nm_to_check=\"$lt_nm_to_check nm\"\n  fi\n  for lt_tmp_nm in $lt_nm_to_check; do\n    lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\n    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do\n      IFS=\"$lt_save_ifs\"\n      test -z \"$ac_dir\" && ac_dir=.\n      tmp_nm=\"$ac_dir/$lt_tmp_nm\"\n      if test -f \"$tmp_nm\" || test -f \"$tmp_nm$ac_exeext\" ; then\n\t# Check to see if the nm accepts a BSD-compat flag.\n\t# Adding the `sed 1q' prevents false positives on HP-UX, which says:\n\t#   nm: unknown option \"B\" ignored\n\t# Tru64's nm complains that /dev/null is an invalid object file\n\tcase `\"$tmp_nm\" -B /dev/null 2>&1 | sed '1q'` in\n\t*/dev/null* | *'Invalid file or object type'*)\n\t  lt_cv_path_NM=\"$tmp_nm -B\"\n\t  break\n\t  ;;\n\t*)\n\t  case `\"$tmp_nm\" -p /dev/null 2>&1 | sed '1q'` in\n\t  */dev/null*)\n\t    lt_cv_path_NM=\"$tmp_nm -p\"\n\t    break\n\t    ;;\n\t  *)\n\t    lt_cv_path_NM=${lt_cv_path_NM=\"$tmp_nm\"} # keep the first match, but\n\t    continue # so that we can try to find one that supports BSD flags\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n      fi\n    done\n    IFS=\"$lt_save_ifs\"\n  done\n  : ${lt_cv_path_NM=no}\nfi])\nif test \"$lt_cv_path_NM\" != \"no\"; then\n  NM=\"$lt_cv_path_NM\"\nelse\n  # Didn't find any BSD compatible name lister, look for dumpbin.\n  if test -n \"$DUMPBIN\"; then :\n    # Let the user override the test.\n  else\n    AC_CHECK_TOOLS(DUMPBIN, [dumpbin \"link -dump\"], :)\n    case `$DUMPBIN -symbols /dev/null 2>&1 | sed '1q'` in\n    *COFF*)\n      DUMPBIN=\"$DUMPBIN -symbols\"\n      ;;\n    *)\n      DUMPBIN=:\n      ;;\n    esac\n  fi\n  AC_SUBST([DUMPBIN])\n  if test \"$DUMPBIN\" != \":\"; then\n    NM=\"$DUMPBIN\"\n  fi\nfi\ntest -z \"$NM\" && NM=nm\nAC_SUBST([NM])\n_LT_DECL([], [NM], [1], [A BSD- or MS-compatible name lister])dnl\n\nAC_CACHE_CHECK([the name lister ($NM) interface], [lt_cv_nm_interface],\n  [lt_cv_nm_interface=\"BSD nm\"\n  echo \"int some_variable = 0;\" > conftest.$ac_ext\n  (eval echo \"\\\"\\$as_me:$LINENO: $ac_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n  (eval \"$ac_compile\" 2>conftest.err)\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  (eval echo \"\\\"\\$as_me:$LINENO: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&AS_MESSAGE_LOG_FD)\n  (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  (eval echo \"\\\"\\$as_me:$LINENO: output\\\"\" >&AS_MESSAGE_LOG_FD)\n  cat conftest.out >&AS_MESSAGE_LOG_FD\n  if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n    lt_cv_nm_interface=\"MS dumpbin\"\n  fi\n  rm -f conftest*])\n])# LT_PATH_NM\n\n# Old names:\nAU_ALIAS([AM_PROG_NM], [LT_PATH_NM])\nAU_ALIAS([AC_PROG_NM], [LT_PATH_NM])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_PROG_NM], [])\ndnl AC_DEFUN([AC_PROG_NM], [])\n\n# _LT_CHECK_SHAREDLIB_FROM_LINKLIB\n# --------------------------------\n# how to determine the name of the shared library\n# associated with a specific link library.\n#  -- PORTME fill in with the dynamic library characteristics\nm4_defun([_LT_CHECK_SHAREDLIB_FROM_LINKLIB],\n[m4_require([_LT_DECL_EGREP])\nm4_require([_LT_DECL_OBJDUMP])\nm4_require([_LT_DECL_DLLTOOL])\nAC_CACHE_CHECK([how to associate runtime and link libraries],\nlt_cv_sharedlib_from_linklib_cmd,\n[lt_cv_sharedlib_from_linklib_cmd='unknown'\n\ncase $host_os in\ncygwin* | mingw* | pw32* | cegcc*)\n  # two different shell functions defined in ltmain.sh\n  # decide which to use based on capabilities of $DLLTOOL\n  case `$DLLTOOL --help 2>&1` in\n  *--identify-strict*)\n    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib\n    ;;\n  *)\n    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib_fallback\n    ;;\n  esac\n  ;;\n*)\n  # fallback: assume linklib IS sharedlib\n  lt_cv_sharedlib_from_linklib_cmd=\"$ECHO\"\n  ;;\nesac\n])\nsharedlib_from_linklib_cmd=$lt_cv_sharedlib_from_linklib_cmd\ntest -z \"$sharedlib_from_linklib_cmd\" && sharedlib_from_linklib_cmd=$ECHO\n\n_LT_DECL([], [sharedlib_from_linklib_cmd], [1],\n    [Command to associate shared and link libraries])\n])# _LT_CHECK_SHAREDLIB_FROM_LINKLIB\n\n\n# _LT_PATH_MANIFEST_TOOL\n# ----------------------\n# locate the manifest tool\nm4_defun([_LT_PATH_MANIFEST_TOOL],\n[AC_CHECK_TOOL(MANIFEST_TOOL, mt, :)\ntest -z \"$MANIFEST_TOOL\" && MANIFEST_TOOL=mt\nAC_CACHE_CHECK([if $MANIFEST_TOOL is a manifest tool], [lt_cv_path_mainfest_tool],\n  [lt_cv_path_mainfest_tool=no\n  echo \"$as_me:$LINENO: $MANIFEST_TOOL '-?'\" >&AS_MESSAGE_LOG_FD\n  $MANIFEST_TOOL '-?' 2>conftest.err > conftest.out\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  if $GREP 'Manifest Tool' conftest.out > /dev/null; then\n    lt_cv_path_mainfest_tool=yes\n  fi\n  rm -f conftest*])\nif test \"x$lt_cv_path_mainfest_tool\" != xyes; then\n  MANIFEST_TOOL=:\nfi\n_LT_DECL([], [MANIFEST_TOOL], [1], [Manifest tool])dnl\n])# _LT_PATH_MANIFEST_TOOL\n\n\n# LT_LIB_M\n# --------\n# check for math library\nAC_DEFUN([LT_LIB_M],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nLIBM=\ncase $host in\n*-*-beos* | *-*-cegcc* | *-*-cygwin* | *-*-haiku* | *-*-pw32* | *-*-darwin*)\n  # These system don't have libm, or don't need it\n  ;;\n*-ncr-sysv4.3*)\n  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM=\"-lmw\")\n  AC_CHECK_LIB(m, cos, LIBM=\"$LIBM -lm\")\n  ;;\n*)\n  AC_CHECK_LIB(m, cos, LIBM=\"-lm\")\n  ;;\nesac\nAC_SUBST([LIBM])\n])# LT_LIB_M\n\n# Old name:\nAU_ALIAS([AC_CHECK_LIBM], [LT_LIB_M])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_CHECK_LIBM], [])\n\n\n# _LT_COMPILER_NO_RTTI([TAGNAME])\n# -------------------------------\nm4_defun([_LT_COMPILER_NO_RTTI],\n[m4_require([_LT_TAG_COMPILER])dnl\n\n_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n\nif test \"$GCC\" = yes; then\n  case $cc_basename in\n  nvcc*)\n    _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -Xcompiler -fno-builtin' ;;\n  *)\n    _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin' ;;\n  esac\n\n  _LT_COMPILER_OPTION([if $compiler supports -fno-rtti -fno-exceptions],\n    lt_cv_prog_compiler_rtti_exceptions,\n    [-fno-rtti -fno-exceptions], [],\n    [_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\"$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1) -fno-rtti -fno-exceptions\"])\nfi\n_LT_TAGDECL([no_builtin_flag], [lt_prog_compiler_no_builtin_flag], [1],\n\t[Compiler flag to turn off builtin functions])\n])# _LT_COMPILER_NO_RTTI\n\n\n# _LT_CMD_GLOBAL_SYMBOLS\n# ----------------------\nm4_defun([_LT_CMD_GLOBAL_SYMBOLS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_PROG_AWK])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\nAC_REQUIRE([LT_PATH_LD])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_TAG_COMPILER])dnl\n\n# Check for command to grab the raw symbol name followed by C symbol from nm.\nAC_MSG_CHECKING([command to parse $NM output from $compiler object])\nAC_CACHE_VAL([lt_cv_sys_global_symbol_pipe],\n[\n# These are sane defaults that work on at least a few old systems.\n# [They come from Ultrix.  What could be older than Ultrix?!! ;)]\n\n# Character class describing NM global symbol codes.\nsymcode='[[BCDEGRST]]'\n\n# Regexp to match symbols that can be accessed directly from C.\nsympat='\\([[_A-Za-z]][[_A-Za-z0-9]]*\\)'\n\n# Define system-specific variables.\ncase $host_os in\naix*)\n  symcode='[[BCDT]]'\n  ;;\ncygwin* | mingw* | pw32* | cegcc*)\n  symcode='[[ABCDGISTW]]'\n  ;;\nhpux*)\n  if test \"$host_cpu\" = ia64; then\n    symcode='[[ABCDEGRST]]'\n  fi\n  ;;\nirix* | nonstopux*)\n  symcode='[[BCDEGRST]]'\n  ;;\nosf*)\n  symcode='[[BCDEGQRST]]'\n  ;;\nsolaris*)\n  symcode='[[BDRT]]'\n  ;;\nsco3.2v5*)\n  symcode='[[DT]]'\n  ;;\nsysv4.2uw2*)\n  symcode='[[DT]]'\n  ;;\nsysv5* | sco5v6* | unixware* | OpenUNIX*)\n  symcode='[[ABDT]]'\n  ;;\nsysv4)\n  symcode='[[DFNSTU]]'\n  ;;\nesac\n\n# If we're using GNU nm, then use its standard symbol codes.\ncase `$NM -V 2>&1` in\n*GNU* | *'with BFD'*)\n  symcode='[[ABCDGIRSTW]]' ;;\nesac\n\n# Transform an extracted symbol line into a proper C declaration.\n# Some systems (esp. on ia64) link data and code symbols differently,\n# so use this general approach.\nlt_cv_sys_global_symbol_to_cdecl=\"sed -n -e 's/^T .* \\(.*\\)$/extern int \\1();/p' -e 's/^$symcode* .* \\(.*\\)$/extern char \\1;/p'\"\n\n# Transform an extracted symbol line into symbol name and symbol address\nlt_cv_sys_global_symbol_to_c_name_address=\"sed -n -e 's/^: \\([[^ ]]*\\)[[ ]]*$/  {\\\\\\\"\\1\\\\\\\", (void *) 0},/p' -e 's/^$symcode* \\([[^ ]]*\\) \\([[^ ]]*\\)$/  {\\\"\\2\\\", (void *) \\&\\2},/p'\"\nlt_cv_sys_global_symbol_to_c_name_address_lib_prefix=\"sed -n -e 's/^: \\([[^ ]]*\\)[[ ]]*$/  {\\\\\\\"\\1\\\\\\\", (void *) 0},/p' -e 's/^$symcode* \\([[^ ]]*\\) \\(lib[[^ ]]*\\)$/  {\\\"\\2\\\", (void *) \\&\\2},/p' -e 's/^$symcode* \\([[^ ]]*\\) \\([[^ ]]*\\)$/  {\\\"lib\\2\\\", (void *) \\&\\2},/p'\"\n\n# Handle CRLF in mingw tool chain\nopt_cr=\ncase $build_os in\nmingw*)\n  opt_cr=`$ECHO 'x\\{0,1\\}' | tr x '\\015'` # option cr in regexp\n  ;;\nesac\n\n# Try without a prefix underscore, then with it.\nfor ac_symprfx in \"\" \"_\"; do\n\n  # Transform symcode, sympat, and symprfx into a raw symbol and a C symbol.\n  symxfrm=\"\\\\1 $ac_symprfx\\\\2 \\\\2\"\n\n  # Write the raw and C identifiers.\n  if test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n    # Fake it for dumpbin and say T for any non-static function\n    # and D for any global variable.\n    # Also find C++ and __fastcall symbols from MSVC++,\n    # which start with @ or ?.\n    lt_cv_sys_global_symbol_pipe=\"$AWK ['\"\\\n\"     {last_section=section; section=\\$ 3};\"\\\n\"     /^COFF SYMBOL TABLE/{for(i in hide) delete hide[i]};\"\\\n\"     /Section length .*#relocs.*(pick any)/{hide[last_section]=1};\"\\\n\"     \\$ 0!~/External *\\|/{next};\"\\\n\"     / 0+ UNDEF /{next}; / UNDEF \\([^|]\\)*()/{next};\"\\\n\"     {if(hide[section]) next};\"\\\n\"     {f=0}; \\$ 0~/\\(\\).*\\|/{f=1}; {printf f ? \\\"T \\\" : \\\"D \\\"};\"\\\n\"     {split(\\$ 0, a, /\\||\\r/); split(a[2], s)};\"\\\n\"     s[1]~/^[@?]/{print s[1], s[1]; next};\"\\\n\"     s[1]~prfx {split(s[1],t,\\\"@\\\"); print t[1], substr(t[1],length(prfx))}\"\\\n\"     ' prfx=^$ac_symprfx]\"\n  else\n    lt_cv_sys_global_symbol_pipe=\"sed -n -e 's/^.*[[\t ]]\\($symcode$symcode*\\)[[\t ]][[\t ]]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'\"\n  fi\n  lt_cv_sys_global_symbol_pipe=\"$lt_cv_sys_global_symbol_pipe | sed '/ __gnu_lto/d'\"\n\n  # Check to see that the pipe works correctly.\n  pipe_works=no\n\n  rm -f conftest*\n  cat > conftest.$ac_ext <<_LT_EOF\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nchar nm_test_var;\nvoid nm_test_func(void);\nvoid nm_test_func(void){}\n#ifdef __cplusplus\n}\n#endif\nint main(){nm_test_var='a';nm_test_func();return(0);}\n_LT_EOF\n\n  if AC_TRY_EVAL(ac_compile); then\n    # Now try to grab the symbols.\n    nlist=conftest.nm\n    if AC_TRY_EVAL(NM conftest.$ac_objext \\| \"$lt_cv_sys_global_symbol_pipe\" \\> $nlist) && test -s \"$nlist\"; then\n      # Try sorting and uniquifying the output.\n      if sort \"$nlist\" | uniq > \"$nlist\"T; then\n\tmv -f \"$nlist\"T \"$nlist\"\n      else\n\trm -f \"$nlist\"T\n      fi\n\n      # Make sure that we snagged all the symbols we need.\n      if $GREP ' nm_test_var$' \"$nlist\" >/dev/null; then\n\tif $GREP ' nm_test_func$' \"$nlist\" >/dev/null; then\n\t  cat <<_LT_EOF > conftest.$ac_ext\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined(_WIN32) || defined(__CYGWIN__) || defined(_WIN32_WCE)\n/* DATA imports from DLLs on WIN32 con't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT@&t@_DLSYM_CONST\n#elif defined(__osf__)\n/* This system does not cope well with relocations in const data.  */\n# define LT@&t@_DLSYM_CONST\n#else\n# define LT@&t@_DLSYM_CONST const\n#endif\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n_LT_EOF\n\t  # Now generate the symbol file.\n\t  eval \"$lt_cv_sys_global_symbol_to_cdecl\"' < \"$nlist\" | $GREP -v main >> conftest.$ac_ext'\n\n\t  cat <<_LT_EOF >> conftest.$ac_ext\n\n/* The mapping between symbol names and symbols.  */\nLT@&t@_DLSYM_CONST struct {\n  const char *name;\n  void       *address;\n}\nlt__PROGRAM__LTX_preloaded_symbols[[]] =\n{\n  { \"@PROGRAM@\", (void *) 0 },\n_LT_EOF\n\t  $SED \"s/^$symcode$symcode* \\(.*\\) \\(.*\\)$/  {\\\"\\2\\\", (void *) \\&\\2},/\" < \"$nlist\" | $GREP -v main >> conftest.$ac_ext\n\t  cat <<\\_LT_EOF >> conftest.$ac_ext\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt__PROGRAM__LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\n_LT_EOF\n\t  # Now try linking the two files.\n\t  mv conftest.$ac_objext conftstm.$ac_objext\n\t  lt_globsym_save_LIBS=$LIBS\n\t  lt_globsym_save_CFLAGS=$CFLAGS\n\t  LIBS=\"conftstm.$ac_objext\"\n\t  CFLAGS=\"$CFLAGS$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)\"\n\t  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext}; then\n\t    pipe_works=yes\n\t  fi\n\t  LIBS=$lt_globsym_save_LIBS\n\t  CFLAGS=$lt_globsym_save_CFLAGS\n\telse\n\t  echo \"cannot find nm_test_func in $nlist\" >&AS_MESSAGE_LOG_FD\n\tfi\n      else\n\techo \"cannot find nm_test_var in $nlist\" >&AS_MESSAGE_LOG_FD\n      fi\n    else\n      echo \"cannot run $lt_cv_sys_global_symbol_pipe\" >&AS_MESSAGE_LOG_FD\n    fi\n  else\n    echo \"$progname: failed program was:\" >&AS_MESSAGE_LOG_FD\n    cat conftest.$ac_ext >&5\n  fi\n  rm -rf conftest* conftst*\n\n  # Do not use the global_symbol_pipe unless it works.\n  if test \"$pipe_works\" = yes; then\n    break\n  else\n    lt_cv_sys_global_symbol_pipe=\n  fi\ndone\n])\nif test -z \"$lt_cv_sys_global_symbol_pipe\"; then\n  lt_cv_sys_global_symbol_to_cdecl=\nfi\nif test -z \"$lt_cv_sys_global_symbol_pipe$lt_cv_sys_global_symbol_to_cdecl\"; then\n  AC_MSG_RESULT(failed)\nelse\n  AC_MSG_RESULT(ok)\nfi\n\n# Response file support.\nif test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n  nm_file_list_spec='@'\nelif $NM --help 2>/dev/null | grep '[[@]]FILE' >/dev/null; then\n  nm_file_list_spec='@'\nfi\n\n_LT_DECL([global_symbol_pipe], [lt_cv_sys_global_symbol_pipe], [1],\n    [Take the output of nm and produce a listing of raw symbols and C names])\n_LT_DECL([global_symbol_to_cdecl], [lt_cv_sys_global_symbol_to_cdecl], [1],\n    [Transform the output of nm in a proper C declaration])\n_LT_DECL([global_symbol_to_c_name_address],\n    [lt_cv_sys_global_symbol_to_c_name_address], [1],\n    [Transform the output of nm in a C name address pair])\n_LT_DECL([global_symbol_to_c_name_address_lib_prefix],\n    [lt_cv_sys_global_symbol_to_c_name_address_lib_prefix], [1],\n    [Transform the output of nm in a C name address pair when lib prefix is needed])\n_LT_DECL([], [nm_file_list_spec], [1],\n    [Specify filename containing input files for $NM])\n]) # _LT_CMD_GLOBAL_SYMBOLS\n\n\n# _LT_COMPILER_PIC([TAGNAME])\n# ---------------------------\nm4_defun([_LT_COMPILER_PIC],\n[m4_require([_LT_TAG_COMPILER])dnl\n_LT_TAGVAR(lt_prog_compiler_wl, $1)=\n_LT_TAGVAR(lt_prog_compiler_pic, $1)=\n_LT_TAGVAR(lt_prog_compiler_static, $1)=\n\nm4_if([$1], [CXX], [\n  # C++ specific cases for pic, static, wl, etc.\n  if test \"$GXX\" = yes; then\n    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n    aix*)\n      # All AIX code is PIC.\n      if test \"$host_cpu\" = ia64; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the `-m68020' flag to GCC prevents building anything better,\n            # like `-m68040'.\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n    mingw* | cygwin* | os2* | pw32* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      ;;\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n    *djgpp*)\n      # DJGPP does not support shared libraries at all\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n      ;;\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)=\n      ;;\n    interix[[3-9]]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n    *qnx* | *nto*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n    *)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n  else\n    case $host_os in\n      aix[[4-9]]*)\n\t# All AIX code is PIC.\n\tif test \"$host_cpu\" = ia64; then\n\t  # AIX 5 now supports IA64 processor\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\telse\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n\tfi\n\t;;\n      chorus*)\n\tcase $cc_basename in\n\tcxch68*)\n\t  # Green Hills C++ Compiler\n\t  # _LT_TAGVAR(lt_prog_compiler_static, $1)=\"--no_auto_instantiation -u __main -u __premain -u _abort -r $COOL_DIR/lib/libOrb.a $MVME_DIR/lib/CC/libC.a $MVME_DIR/lib/classix/libcx.s.a\"\n\t  ;;\n\tesac\n\t;;\n      mingw* | cygwin* | os2* | pw32* | cegcc*)\n\t# This hack is so that the source file can tell whether it is being\n\t# built for inclusion in a dll (and should export symbols for example).\n\tm4_if([$1], [GCJ], [],\n\t  [_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n\t;;\n      dgux*)\n\tcase $cc_basename in\n\t  ec++*)\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  ghcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      freebsd* | dragonfly*)\n\t# FreeBSD uses GNU C++\n\t;;\n      hpux9* | hpux10* | hpux11*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'\n\t    if test \"$host_cpu\" != ia64; then\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t    fi\n\t    ;;\n\t  aCC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'\n\t    case $host_cpu in\n\t    hppa*64*|ia64*)\n\t      # +Z the default\n\t      ;;\n\t    *)\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t      ;;\n\t    esac\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      interix*)\n\t# This is c89, which is MS Visual C++ (no shared libs)\n\t# Anyone wants to do a port?\n\t;;\n      irix5* | irix6* | nonstopux*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    # CC pic flag -KPIC is the default.\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      linux* | k*bsd*-gnu | kopensolaris*-gnu)\n\tcase $cc_basename in\n\t  KCC*)\n\t    # KAI C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    ;;\n\t  ecpc* )\n\t    # old Intel C++ for x86_64 which still supported -KPIC.\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  icpc* )\n\t    # Intel C++, used to be incompatible with GCC.\n\t    # ICC 10 doesn't accept -KPIC any more.\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  pgCC* | pgcpp*)\n\t    # Portland Group C++ compiler\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  xlc* | xlC* | bgxl[[cC]]* | mpixl[[cC]]*)\n\t    # IBM XL 8.0, 9.0 on PPC and BlueGene\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n      lynxos*)\n\t;;\n      m88k*)\n\t;;\n      mvs*)\n\tcase $cc_basename in\n\t  cxx*)\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-W c,exportall'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      netbsd* | netbsdelf*-gnu)\n\t;;\n      *qnx* | *nto*)\n        # QNX uses GNU C++, but need to define -shared option too, otherwise\n        # it will coredump.\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n        ;;\n      osf3* | osf4* | osf5*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    ;;\n\t  RCC*)\n\t    # Rational C++ 2.4.1\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  cxx*)\n\t    # Digital/Compaq C++\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      psos*)\n\t;;\n      solaris*)\n\tcase $cc_basename in\n\t  CC* | sunCC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t    ;;\n\t  gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sunos4*)\n\tcase $cc_basename in\n\t  CC*)\n\t    # Sun C++ 4.x\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  lcc*)\n\t    # Lucid\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\tesac\n\t;;\n      tandem*)\n\tcase $cc_basename in\n\t  NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      vxworks*)\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n\t;;\n    esac\n  fi\n],\n[\n  if test \"$GCC\" = yes; then\n    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n      aix*)\n      # All AIX code is PIC.\n      if test \"$host_cpu\" = ia64; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the `-m68020' flag to GCC prevents building anything better,\n            # like `-m68040'.\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)=\n      ;;\n\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n\n    interix[[3-9]]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n\n    msdosdjgpp*)\n      # Just because we use GCC doesn't mean we suddenly get shared libraries\n      # on systems that don't support them.\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      enable_shared=no\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n\n    *)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n\n    case $cc_basename in\n    nvcc*) # Cuda Compiler Driver 2.2\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Xlinker '\n      if test -n \"$_LT_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)=\"-Xcompiler $_LT_TAGVAR(lt_prog_compiler_pic, $1)\"\n      fi\n      ;;\n    esac\n  else\n    # PORTME Check for flag to pass linker flags through the system compiler.\n    case $host_os in\n    aix*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      if test \"$host_cpu\" = ia64; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      else\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n      fi\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      ;;\n\n    hpux9* | hpux10* | hpux11*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but\n      # not for PA HP-UX.\n      case $host_cpu in\n      hppa*64*|ia64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t;;\n      esac\n      # Is there a better lt_prog_compiler_static that works with the bundled CC?\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC (with -KPIC) is the default.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    linux* | k*bsd*-gnu | kopensolaris*-gnu)\n      case $cc_basename in\n      # old Intel for x86_64 which still supported -KPIC.\n      ecc*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      # icc used to be incompatible with GCC.\n      # ICC 10 doesn't accept -KPIC any more.\n      icc* | ifort*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      # Lahey Fortran 8.1.\n      lf95*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='--shared'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='--static'\n\t;;\n      nagfor*)\n\t# NAG Fortran compiler\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,-Wl,,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t;;\n      pgcc* | pgf77* | pgf90* | pgf95* | pgfortran*)\n        # Portland Group compilers (*not* the Pentium gcc compiler,\n\t# which looks to be a dead project)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n        ;;\n      ccc*)\n        _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n        # All Alpha code is PIC.\n        _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n        ;;\n      xl* | bgxl* | bgf* | mpixl*)\n\t# IBM XL C 8.0/Fortran 10.1, 11.1 on PPC and BlueGene\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'\n\t;;\n      *)\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ Ceres\\ Fortran* | *Sun*Fortran*\\ [[1-7]].* | *Sun*Fortran*\\ 8.[[0-3]]*)\n\t  # Sun Fortran 8.3 passes all unrecognized flags to the linker\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)=''\n\t  ;;\n\t*Sun\\ F* | *Sun*Fortran*)\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t  ;;\n\t*Sun\\ C*)\n\t  # Sun C 5.9\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  ;;\n        *Intel*\\ [[CF]]*Compiler*)\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t  ;;\n\t*Portland\\ Group*)\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  ;;\n\tesac\n\t;;\n      esac\n      ;;\n\n    newsos6)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n\n    osf3* | osf4* | osf5*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # All OSF/1 code is PIC.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    rdos*)\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    solaris*)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      case $cc_basename in\n      f77* | f90* | f95* | sunf77* | sunf90* | sunf95*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld ';;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,';;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4 | sysv4.2uw2* | sysv4.3*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec ;then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-Kconform_pic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    unicos*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n\n    uts4*)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *)\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n    esac\n  fi\n])\ncase $host_os in\n  # For platforms which do not support PIC, -DPIC is meaningless:\n  *djgpp*)\n    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n    ;;\n  *)\n    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\"$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])\"\n    ;;\nesac\n\nAC_CACHE_CHECK([for $compiler option to produce PIC],\n  [_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)],\n  [_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)=$_LT_TAGVAR(lt_prog_compiler_pic, $1)])\n_LT_TAGVAR(lt_prog_compiler_pic, $1)=$_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)\n\n#\n# Check to make sure the PIC flag actually works.\n#\nif test -n \"$_LT_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n  _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, $1) works],\n    [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, $1)],\n    [$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])], [],\n    [case $_LT_TAGVAR(lt_prog_compiler_pic, $1) in\n     \"\" | \" \"*) ;;\n     *) _LT_TAGVAR(lt_prog_compiler_pic, $1)=\" $_LT_TAGVAR(lt_prog_compiler_pic, $1)\" ;;\n     esac],\n    [_LT_TAGVAR(lt_prog_compiler_pic, $1)=\n     _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no])\nfi\n_LT_TAGDECL([pic_flag], [lt_prog_compiler_pic], [1],\n\t[Additional compiler flags for building library objects])\n\n_LT_TAGDECL([wl], [lt_prog_compiler_wl], [1],\n\t[How to pass a linker flag through the compiler])\n#\n# Check to make sure the static flag actually works.\n#\nwl=$_LT_TAGVAR(lt_prog_compiler_wl, $1) eval lt_tmp_static_flag=\\\"$_LT_TAGVAR(lt_prog_compiler_static, $1)\\\"\n_LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works],\n  _LT_TAGVAR(lt_cv_prog_compiler_static_works, $1),\n  $lt_tmp_static_flag,\n  [],\n  [_LT_TAGVAR(lt_prog_compiler_static, $1)=])\n_LT_TAGDECL([link_static_flag], [lt_prog_compiler_static], [1],\n\t[Compiler flag to prevent dynamic linking])\n])# _LT_COMPILER_PIC\n\n\n# _LT_LINKER_SHLIBS([TAGNAME])\n# ----------------------------\n# See if the linker supports building shared libraries.\nm4_defun([_LT_LINKER_SHLIBS],\n[AC_REQUIRE([LT_PATH_LD])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\nm4_require([_LT_PATH_MANIFEST_TOOL])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nm4_require([_LT_TAG_COMPILER])dnl\nAC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\nm4_if([$1], [CXX], [\n  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']\n  case $host_os in\n  aix[[4-9]]*)\n    # If we're using GNU nm, then we don't want the \"-C\" option.\n    # -C means demangle to AIX nm, but means don't demangle with GNU nm\n    # Also, AIX nm treats weak defined symbols like other global defined\n    # symbols, whereas GNU nm marks them as \"W\".\n    if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && ([substr](\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n    else\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && ([substr](\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n    fi\n    ;;\n  pw32*)\n    _LT_TAGVAR(export_symbols_cmds, $1)=\"$ltdll_cmds\"\n    ;;\n  cygwin* | mingw* | cegcc*)\n    case $cc_basename in\n    cl*)\n      _LT_TAGVAR(exclude_expsyms, $1)='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'\n      ;;\n    *)\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1 DATA/;s/^.*[[ ]]__nm__\\([[^ ]]*\\)[[ ]][[^ ]]*/\\1 DATA/;/^I[[ ]]/d;/^[[AITW]][[ ]]/s/.* //'\\'' | sort | uniq > $export_symbols'\n      _LT_TAGVAR(exclude_expsyms, $1)=['[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname']\n      ;;\n    esac\n    ;;\n  linux* | k*bsd*-gnu | gnu*)\n    _LT_TAGVAR(link_all_deplibs, $1)=no\n    ;;\n  *)\n    _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n    ;;\n  esac\n], [\n  runpath_var=\n  _LT_TAGVAR(allow_undefined_flag, $1)=\n  _LT_TAGVAR(always_export_symbols, $1)=no\n  _LT_TAGVAR(archive_cmds, $1)=\n  _LT_TAGVAR(archive_expsym_cmds, $1)=\n  _LT_TAGVAR(compiler_needs_object, $1)=no\n  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n  _LT_TAGVAR(export_dynamic_flag_spec, $1)=\n  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  _LT_TAGVAR(hardcode_automatic, $1)=no\n  _LT_TAGVAR(hardcode_direct, $1)=no\n  _LT_TAGVAR(hardcode_direct_absolute, $1)=no\n  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n  _LT_TAGVAR(hardcode_libdir_separator, $1)=\n  _LT_TAGVAR(hardcode_minus_L, $1)=no\n  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  _LT_TAGVAR(inherit_rpath, $1)=no\n  _LT_TAGVAR(link_all_deplibs, $1)=unknown\n  _LT_TAGVAR(module_cmds, $1)=\n  _LT_TAGVAR(module_expsym_cmds, $1)=\n  _LT_TAGVAR(old_archive_from_new_cmds, $1)=\n  _LT_TAGVAR(old_archive_from_expsyms_cmds, $1)=\n  _LT_TAGVAR(thread_safe_flag_spec, $1)=\n  _LT_TAGVAR(whole_archive_flag_spec, $1)=\n  # include_expsyms should be a list of space-separated symbols to be *always*\n  # included in the symbol list\n  _LT_TAGVAR(include_expsyms, $1)=\n  # exclude_expsyms can be an extended regexp of symbols to exclude\n  # it will be wrapped by ` (' and `)$', so one must not match beginning or\n  # end of line.  Example: `a|bc|.*d.*' will exclude the symbols `a' and `bc',\n  # as well as any symbol that contains `d'.\n  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']\n  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out\n  # platforms (ab)use it in PIC code, but their linkers get confused if\n  # the symbol is explicitly referenced.  Since portable code cannot\n  # rely on this symbol name, it's probably fine to never include it in\n  # preloaded symbol tables.\n  # Exclude shared library initialization/finalization symbols.\ndnl Note also adjust exclude_expsyms for C++ above.\n  extract_expsyms_cmds=\n\n  case $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    # FIXME: the MSVC++ port hasn't been tested in a loooong time\n    # When not using gcc, we currently assume that we are using\n    # Microsoft Visual C++.\n    if test \"$GCC\" != yes; then\n      with_gnu_ld=no\n    fi\n    ;;\n  interix*)\n    # we just hope/assume this is gcc and not c89 (= MSVC++)\n    with_gnu_ld=yes\n    ;;\n  openbsd*)\n    with_gnu_ld=no\n    ;;\n  linux* | k*bsd*-gnu | gnu*)\n    _LT_TAGVAR(link_all_deplibs, $1)=no\n    ;;\n  esac\n\n  _LT_TAGVAR(ld_shlibs, $1)=yes\n\n  # On some targets, GNU ld is compatible enough with the native linker\n  # that we're better off using the native interface for both.\n  lt_use_gnu_ld_interface=no\n  if test \"$with_gnu_ld\" = yes; then\n    case $host_os in\n      aix*)\n\t# The AIX port of GNU ld has always aspired to compatibility\n\t# with the native linker.  However, as the warning in the GNU ld\n\t# block says, versions before 2.19.5* couldn't really create working\n\t# shared libraries, regardless of the interface used.\n\tcase `$LD -v 2>&1` in\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.19.5*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.[[2-9]]*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ [[3-9]]*) ;;\n\t  *)\n\t    lt_use_gnu_ld_interface=yes\n\t    ;;\n\tesac\n\t;;\n      *)\n\tlt_use_gnu_ld_interface=yes\n\t;;\n    esac\n  fi\n\n  if test \"$lt_use_gnu_ld_interface\" = yes; then\n    # If archive_cmds runs LD, not CC, wlarc should be empty\n    wlarc='${wl}'\n\n    # Set some defaults for GNU ld with shared library support. These\n    # are reset later if shared libraries are not supported. Putting them\n    # here allows them to be overridden if necessary.\n    runpath_var=LD_RUN_PATH\n    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n    # ancient GNU ld didn't support --whole-archive et. al.\n    if $LD --help 2>&1 | $GREP 'no-whole-archive' > /dev/null; then\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n    else\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n    supports_anon_versioning=no\n    case `$LD -v 2>&1` in\n      *GNU\\ gold*) supports_anon_versioning=yes ;;\n      *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.10.*) ;; # catch versions < 2.11\n      *\\ 2.11.93.0.2\\ *) supports_anon_versioning=yes ;; # RH7.3 ...\n      *\\ 2.11.92.0.12\\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...\n      *\\ 2.11.*) ;; # other 2.11 versions\n      *) supports_anon_versioning=yes ;;\n    esac\n\n    # See if GNU ld supports shared libraries.\n    case $host_os in\n    aix[[3-9]]*)\n      # On AIX/PPC, the GNU linker is very broken\n      if test \"$host_cpu\" != ia64; then\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: the GNU linker, at least up to release 2.19, is reported\n*** to be unable to reliably create shared libraries on AIX.\n*** Therefore, libtool is disabling shared libraries support.  If you\n*** really care for shared libraries, you may want to install binutils\n*** 2.20 or above, or modify your PATH so that a non-GNU linker is found.\n*** You will then need to restart the configuration process.\n\n_LT_EOF\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n            _LT_TAGVAR(archive_expsym_cmds, $1)=''\n        ;;\n      m68k)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes\n        ;;\n      esac\n      ;;\n\n    beos*)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t# support --undefined.  This deserves some investigation.  FIXME\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n      # as there is no search path for DLLs.\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-all-symbols'\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(always_export_symbols, $1)=no\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1 DATA/;s/^.*[[ ]]__nm__\\([[^ ]]*\\)[[ ]][[^ ]]*/\\1 DATA/;/^I[[ ]]/d;/^[[AITW]][[ ]]/s/.* //'\\'' | sort | uniq > $export_symbols'\n      _LT_TAGVAR(exclude_expsyms, $1)=['[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname']\n\n      if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t# If the export-symbols file already is a .def file (1st line\n\t# is EXPORTS), use it as is; otherwise, prepend...\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='if test \"x`$SED 1q $export_symbols`\" = xEXPORTS; then\n\t  cp $export_symbols $output_objdir/$soname.def;\n\telse\n\t  echo EXPORTS > $output_objdir/$soname.def;\n\t  cat $export_symbols >> $output_objdir/$soname.def;\n\tfi~\n\t$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    haiku*)\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    interix[[3-9]]*)\n      _LT_TAGVAR(hardcode_direct, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n      # Instead, shared libraries are loaded at an image base (0x10000000 by\n      # default) and relocated if they conflict, which is a slow very memory\n      # consuming and fragmenting process.  To avoid this, we pick a random,\n      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      _LT_TAGVAR(archive_expsym_cmds, $1)='sed \"s,^,_,\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      ;;\n\n    gnu* | linux* | tpf* | k*bsd*-gnu | kopensolaris*-gnu)\n      tmp_diet=no\n      if test \"$host_os\" = linux-dietlibc; then\n\tcase $cc_basename in\n\t  diet\\ *) tmp_diet=yes;;\t# linux-dietlibc with static linking (!diet-dyn)\n\tesac\n      fi\n      if $LD --help 2>&1 | $EGREP ': supported targets:.* elf' > /dev/null \\\n\t && test \"$tmp_diet\" = no\n      then\n\ttmp_addflag=' $pic_flag'\n\ttmp_sharedflag='-shared'\n\tcase $cc_basename,$host_cpu in\n        pgcc*)\t\t\t\t# Portland Group C compiler\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t  tmp_addflag=' $pic_flag'\n\t  ;;\n\tpgf77* | pgf90* | pgf95* | pgfortran*)\n\t\t\t\t\t# Portland Group f77 and f90 compilers\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t  tmp_addflag=' $pic_flag -Mnomain' ;;\n\tecc*,ia64* | icc*,ia64*)\t# Intel C compiler on ia64\n\t  tmp_addflag=' -i_dynamic' ;;\n\tefc*,ia64* | ifort*,ia64*)\t# Intel Fortran compiler on ia64\n\t  tmp_addflag=' -i_dynamic -nofor_main' ;;\n\tifc* | ifort*)\t\t\t# Intel Fortran compiler\n\t  tmp_addflag=' -nofor_main' ;;\n\tlf95*)\t\t\t\t# Lahey Fortran 8.1\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)=\n\t  tmp_sharedflag='--shared' ;;\n\txl[[cC]]* | bgxl[[cC]]* | mpixl[[cC]]*) # IBM XL C 8.0 on PPC (deal with xlf below)\n\t  tmp_sharedflag='-qmkshrobj'\n\t  tmp_addflag= ;;\n\tnvcc*)\t# Cuda Compiler Driver 2.2\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t  _LT_TAGVAR(compiler_needs_object, $1)=yes\n\t  ;;\n\tesac\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ C*)\t\t\t# Sun C 5.9\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t  _LT_TAGVAR(compiler_needs_object, $1)=yes\n\t  tmp_sharedflag='-G' ;;\n\t*Sun\\ F*)\t\t\t# Sun Fortran 8.3\n\t  tmp_sharedflag='-G' ;;\n\tesac\n\t_LT_TAGVAR(archive_cmds, $1)='$CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\n        if test \"x$supports_anon_versioning\" = xyes; then\n          _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n\t    cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n\t    echo \"local: *; };\" >> $output_objdir/$libname.ver~\n\t    $CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'\n        fi\n\n\tcase $cc_basename in\n\txlf* | bgf* | bgxlf* | mpixlf*)\n\t  # IBM XL Fortran 10.1 on PPC cannot create shared libs itself\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='--whole-archive$convenience --no-whole-archive'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -shared $libobjs $deplibs $linker_flags -soname $soname -o $lib'\n\t  if test \"x$supports_anon_versioning\" = xyes; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n\t      cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n\t      echo \"local: *; };\" >> $output_objdir/$libname.ver~\n\t      $LD -shared $libobjs $deplibs $linker_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'\n\t  fi\n\t  ;;\n\tesac\n      else\n        _LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    netbsd* | netbsdelf*-gnu)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'\n\twlarc=\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n      fi\n      ;;\n\n    solaris*)\n      if $LD -v 2>&1 | $GREP 'BFD 2\\.8' > /dev/null; then\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: The releases 2.8.* of the GNU linker cannot reliably\n*** create shared libraries on Solaris systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.9.1 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n      elif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)\n      case `$LD -v 2>&1` in\n        *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.1[[0-5]].*)\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 can not\n*** reliably create shared libraries on SCO systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n\t;;\n\t*)\n\t  # For security reasons, it is highly recommended that you always\n\t  # use absolute paths for naming shared libraries, and exclude the\n\t  # DT_RUNPATH tag from executables and libraries.  But doing so\n\t  # requires that you compile everything twice, which is a pain.\n\t  if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\t  else\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t  fi\n\t;;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      wlarc=\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n    esac\n\n    if test \"$_LT_TAGVAR(ld_shlibs, $1)\" = no; then\n      runpath_var=\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)=\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n  else\n    # PORTME fill in a description of your system's linker (not GNU ld)\n    case $host_os in\n    aix3*)\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(always_export_symbols, $1)=yes\n      _LT_TAGVAR(archive_expsym_cmds, $1)='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'\n      # Note: this linker hardcodes the directories in LIBPATH if there\n      # are no directories specified by -L.\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      if test \"$GCC\" = yes && test -z \"$lt_prog_compiler_static\"; then\n\t# Neither direct hardcoding nor static linking is supported with a\n\t# broken collect2.\n\t_LT_TAGVAR(hardcode_direct, $1)=unsupported\n      fi\n      ;;\n\n    aix[[4-9]]*)\n      if test \"$host_cpu\" = ia64; then\n\t# On IA64, the linker does run time linking by default, so we don't\n\t# have to do anything special.\n\taix_use_runtimelinking=no\n\texp_sym_flag='-Bexport'\n\tno_entry_flag=\"\"\n      else\n\t# If we're using GNU nm, then we don't want the \"-C\" option.\n\t# -C means demangle to AIX nm, but means don't demangle with GNU nm\n\t# Also, AIX nm treats weak defined symbols like other global\n\t# defined symbols, whereas GNU nm marks them as \"W\".\n\tif $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n\t  _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && ([substr](\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n\telse\n\t  _LT_TAGVAR(export_symbols_cmds, $1)='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && ([substr](\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n\tfi\n\taix_use_runtimelinking=no\n\n\t# Test if we are trying to use run time linking or normal\n\t# AIX style linking. If -brtl is somewhere in LDFLAGS, we\n\t# need to do runtime linking.\n\tcase $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)\n\t  for ld_flag in $LDFLAGS; do\n\t  if (test $ld_flag = \"-brtl\" || test $ld_flag = \"-Wl,-brtl\"); then\n\t    aix_use_runtimelinking=yes\n\t    break\n\t  fi\n\t  done\n\t  ;;\n\tesac\n\n\texp_sym_flag='-bexport'\n\tno_entry_flag='-bnoentry'\n      fi\n\n      # When large executables or shared objects are built, AIX ld can\n      # have problems creating the table of contents.  If linking a library\n      # or program results in \"error TOC overflow\" add -mminimal-toc to\n      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n      _LT_TAGVAR(archive_cmds, $1)=''\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_TAGVAR(file_list_spec, $1)='${wl}-f,'\n\n      if test \"$GCC\" = yes; then\n\tcase $host_os in aix4.[[012]]|aix4.[[012]].*)\n\t# We only want to do this on AIX 4.2 and lower, the check\n\t# below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`${CC} -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t   strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t  # We have reworked collect2\n\t  :\n\t  else\n\t  # We have old collect2\n\t  _LT_TAGVAR(hardcode_direct, $1)=unsupported\n\t  # It fails to find uninstalled libraries when the uninstalled\n\t  # path is not listed in the libpath.  Setting hardcode_minus_L\n\t  # to unsupported forces relinking\n\t  _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n\t  ;;\n\tesac\n\tshared_flag='-shared'\n\tif test \"$aix_use_runtimelinking\" = yes; then\n\t  shared_flag=\"$shared_flag \"'${wl}-G'\n\tfi\n\t_LT_TAGVAR(link_all_deplibs, $1)=no\n      else\n\t# not using gcc\n\tif test \"$host_cpu\" = ia64; then\n\t# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t# chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n\telse\n\t  if test \"$aix_use_runtimelinking\" = yes; then\n\t    shared_flag='${wl}-G'\n\t  else\n\t    shared_flag='${wl}-bM:SRE'\n\t  fi\n\tfi\n      fi\n\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-bexpall'\n      # It seems that -bexpall does not export symbols beginning with\n      # underscore (_), so it is better to generate a list of symbols to export.\n      _LT_TAGVAR(always_export_symbols, $1)=yes\n      if test \"$aix_use_runtimelinking\" = yes; then\n\t# Warning - without using the other runtime loading flags (-brtl),\n\t# -berok will link without error, but may produce a broken library.\n\t_LT_TAGVAR(allow_undefined_flag, $1)='-berok'\n        # Determine the default libpath from the value encoded in an\n        # empty executable.\n        _LT_SYS_MODULE_PATH_AIX([$1])\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags `if test \"x${allow_undefined_flag}\" != \"x\"; then func_echo_all \"${wl}${allow_undefined_flag}\"; else :; fi` '\"\\${wl}$exp_sym_flag:\\$export_symbols $shared_flag\"\n      else\n\tif test \"$host_cpu\" = ia64; then\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $libdir:/usr/lib:/lib'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags ${wl}${allow_undefined_flag} '\"\\${wl}$exp_sym_flag:\\$export_symbols\"\n\telse\n\t # Determine the default libpath from the value encoded in an\n\t # empty executable.\n\t _LT_SYS_MODULE_PATH_AIX([$1])\n\t _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\t  # Warning - without using the other run time loading flags,\n\t  # -berok will link without error, but may produce a broken library.\n\t  _LT_TAGVAR(no_undefined_flag, $1)=' ${wl}-bernotok'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-berok'\n\t  if test \"$with_gnu_ld\" = yes; then\n\t    # We only use this code for GNU lds that support --whole-archive.\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive$convenience ${wl}--no-whole-archive'\n\t  else\n\t    # Exported symbols can be pulled into shared objects from archives\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t  fi\n\t  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  # This is similar to how AIX traditionally builds its shared libraries.\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'\n\tfi\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n            _LT_TAGVAR(archive_expsym_cmds, $1)=''\n        ;;\n      m68k)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes\n        ;;\n      esac\n      ;;\n\n    bsdi[[45]]*)\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)=-rdynamic\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # When not using gcc, we currently assume that we are using\n      # Microsoft Visual C++.\n      # hardcode_libdir_flag_spec is actually meaningless, as there is\n      # no search path for DLLs.\n      case $cc_basename in\n      cl*)\n\t# Native MSVC\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t_LT_TAGVAR(always_export_symbols, $1)=yes\n\t_LT_TAGVAR(file_list_spec, $1)='@'\n\t# Tell ltmain to make .lib files, not .a files.\n\tlibext=lib\n\t# Tell ltmain to make .dll files, not .so files.\n\tshrext_cmds=\".dll\"\n\t# FIXME: Setting linknames here is a bad hack.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-dll~linknames='\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='if test \"x`$SED 1q $export_symbols`\" = xEXPORTS; then\n\t    sed -n -e 's/\\\\\\\\\\\\\\(.*\\\\\\\\\\\\\\)/-link\\\\\\ -EXPORT:\\\\\\\\\\\\\\1/' -e '1\\\\\\!p' < $export_symbols > $output_objdir/$soname.exp;\n\t  else\n\t    sed -e 's/\\\\\\\\\\\\\\(.*\\\\\\\\\\\\\\)/-link\\\\\\ -EXPORT:\\\\\\\\\\\\\\1/' < $export_symbols > $output_objdir/$soname.exp;\n\t  fi~\n\t  $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs \"@$tool_output_objdir$soname.exp\" -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~\n\t  linknames='\n\t# The linker will not automatically build a static lib if we build a DLL.\n\t# _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t_LT_TAGVAR(exclude_expsyms, $1)='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'\n\t_LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1,DATA/'\\'' | $SED -e '\\''/^[[AITW]][[ ]]/s/.*[[ ]]//'\\'' | sort | uniq > $export_symbols'\n\t# Don't use ranlib\n\t_LT_TAGVAR(old_postinstall_cmds, $1)='chmod 644 $oldlib'\n\t_LT_TAGVAR(postlink_cmds, $1)='lt_outputfile=\"@OUTPUT@\"~\n\t  lt_tool_outputfile=\"@TOOL_OUTPUT@\"~\n\t  case $lt_outputfile in\n\t    *.exe|*.EXE) ;;\n\t    *)\n\t      lt_outputfile=\"$lt_outputfile.exe\"\n\t      lt_tool_outputfile=\"$lt_tool_outputfile.exe\"\n\t      ;;\n\t  esac~\n\t  if test \"$MANIFEST_TOOL\" != \":\" && test -f \"$lt_outputfile.manifest\"; then\n\t    $MANIFEST_TOOL -manifest \"$lt_tool_outputfile.manifest\" -outputresource:\"$lt_tool_outputfile\" || exit 1;\n\t    $RM \"$lt_outputfile.manifest\";\n\t  fi'\n\t;;\n      *)\n\t# Assume MSVC wrapper\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Tell ltmain to make .lib files, not .a files.\n\tlibext=lib\n\t# Tell ltmain to make .dll files, not .so files.\n\tshrext_cmds=\".dll\"\n\t# FIXME: Setting linknames here is a bad hack.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -o $lib $libobjs $compiler_flags `func_echo_all \"$deplibs\" | $SED '\\''s/ -lc$//'\\''` -link -dll~linknames='\n\t# The linker will automatically build a .lib file if we build a DLL.\n\t_LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t# FIXME: Should let the user specify the lib program.\n\t_LT_TAGVAR(old_archive_cmds, $1)='lib -OUT:$oldlib$oldobjs$old_deplibs'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t;;\n      esac\n      ;;\n\n    darwin* | rhapsody*)\n      _LT_DARWIN_LINKER_FEATURES($1)\n      ;;\n\n    dgux*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor\n    # support.  Future versions do this automatically, but an explicit c++rt0.o\n    # does not break anything, and helps significantly (at the cost of a little\n    # extra space).\n    freebsd2.2*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # Unfortunately, older versions of FreeBSD 2 do not have this feature.\n    freebsd2.*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.\n    freebsd* | dragonfly*)\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    hpux9*)\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared $pic_flag ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n\n      # hardcode_minus_L: Not really in the search PATH,\n      # but as the default location of the library.\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n      ;;\n\n    hpux10*)\n      if test \"$GCC\" = yes && test \"$with_gnu_ld\" = no; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      if test \"$with_gnu_ld\" = no; then\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\t_LT_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\t# hardcode_minus_L: Not really in the search PATH,\n\t# but as the default location of the library.\n\t_LT_TAGVAR(hardcode_minus_L, $1)=yes\n      fi\n      ;;\n\n    hpux11*)\n      if test \"$GCC\" = yes && test \"$with_gnu_ld\" = no; then\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tesac\n      else\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\tm4_if($1, [], [\n\t  # Older versions of the 11.00 compiler do not understand -b yet\n\t  # (HP92453-01 A.11.01.20 doesn't, HP92453-01 B.11.X.35175-35176.GP does)\n\t  _LT_LINKER_OPTION([if $CC understands -b],\n\t    _LT_TAGVAR(lt_cv_prog_compiler__b, $1), [-b],\n\t    [_LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'],\n\t    [_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'])],\n\t  [_LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'])\n\t  ;;\n\tesac\n      fi\n      if test \"$with_gnu_ld\" = no; then\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\tcase $host_cpu in\n\thppa*64*|ia64*)\n\t  _LT_TAGVAR(hardcode_direct, $1)=no\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\n\t  # hardcode_minus_L: Not really in the search PATH,\n\t  # but as the default location of the library.\n\t  _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t  ;;\n\tesac\n      fi\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t# Try to use the -exported_symbol ld option, if it does not\n\t# work, assume that -exports_file does not work either and\n\t# implicitly export all symbols.\n\t# This should be the same for all languages, so no per-tag cache variable.\n\tAC_CACHE_CHECK([whether the $host_os linker accepts -exported_symbol],\n\t  [lt_cv_irix_exported_symbol],\n\t  [save_LDFLAGS=\"$LDFLAGS\"\n\t   LDFLAGS=\"$LDFLAGS -shared ${wl}-exported_symbol ${wl}foo ${wl}-update_registry ${wl}/dev/null\"\n\t   AC_LINK_IFELSE(\n\t     [AC_LANG_SOURCE(\n\t        [AC_LANG_CASE([C], [[int foo (void) { return 0; }]],\n\t\t\t      [C++], [[int foo (void) { return 0; }]],\n\t\t\t      [Fortran 77], [[\n      subroutine foo\n      end]],\n\t\t\t      [Fortran], [[\n      subroutine foo\n      end]])])],\n\t      [lt_cv_irix_exported_symbol=yes],\n\t      [lt_cv_irix_exported_symbol=no])\n           LDFLAGS=\"$save_LDFLAGS\"])\n\tif test \"$lt_cv_irix_exported_symbol\" = yes; then\n          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations ${wl}-exports_file ${wl}$export_symbols -o $lib'\n\tfi\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -exports_file $export_symbols -o $lib'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(inherit_rpath, $1)=yes\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    netbsd* | netbsdelf*-gnu)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    newsos6)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *nto* | *qnx*)\n      ;;\n\n    openbsd*)\n      if test -f /usr/libexec/ld.so; then\n\t_LT_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\tif test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-retain-symbols-file,$export_symbols'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\telse\n\t  case $host_os in\n\t   openbsd[[01]].* | openbsd2.[[0-7]] | openbsd2.[[0-7]].*)\n\t     _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n\t     _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t     ;;\n\t   *)\n\t     _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t     _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t     ;;\n\t  esac\n\tfi\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    os2*)\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(archive_cmds, $1)='$ECHO \"LIBRARY $libname INITINSTANCE\" > $output_objdir/$libname.def~$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~echo DATA >> $output_objdir/$libname.def~echo \" SINGLE NONSHARED\" >> $output_objdir/$libname.def~echo EXPORTS >> $output_objdir/$libname.def~emxexp $libobjs >> $output_objdir/$libname.def~$CC -Zdll -Zcrtdll -o $lib $libobjs $deplibs $compiler_flags $output_objdir/$libname.def'\n      _LT_TAGVAR(old_archive_from_new_cmds, $1)='emximp -o $output_objdir/$libname.a $output_objdir/$libname.def'\n      ;;\n\n    osf3*)\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n      else\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    osf4* | osf5*)\t# as osf3* with the addition of -msym flag\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $pic_flag $libobjs $deplibs $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      else\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done; printf \"%s\\\\n\" \"-hidden\">> $lib.exp~\n\t$CC -shared${allow_undefined_flag} ${wl}-input ${wl}$lib.exp $compiler_flags $libobjs $deplibs -soname $soname `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib~$RM $lib.exp'\n\n\t# Both c and cxx compiler support -rpath directly\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    solaris*)\n      _LT_TAGVAR(no_undefined_flag, $1)=' -z defs'\n      if test \"$GCC\" = yes; then\n\twlarc='${wl}'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag ${wl}-z ${wl}text ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t  $CC -shared $pic_flag ${wl}-z ${wl}text ${wl}-M ${wl}$lib.exp ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n      else\n\tcase `$CC -V 2>&1` in\n\t*\"Compilers 5.0\"*)\n\t  wlarc=''\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t  $LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'\n\t  ;;\n\t*)\n\t  wlarc='${wl}'\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t  $CC -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n\t  ;;\n\tesac\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      case $host_os in\n      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n      *)\n\t# The compiler driver will combine and reorder linker options,\n\t# but understands `-z linker_flag'.  GCC discards it without `$wl',\n\t# but is careful enough not to reorder.\n\t# Supported since Solaris 2.6 (maybe 2.5.1?)\n\tif test \"$GCC\" = yes; then\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}-z ${wl}allextract$convenience ${wl}-z ${wl}defaultextract'\n\telse\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'\n\tfi\n\t;;\n      esac\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    sunos4*)\n      if test \"x$host_vendor\" = xsequent; then\n\t# Use $CC to link under sequent, because it throws in some extra .o\n\t# files that make .init and .fini sections work.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h $soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4)\n      case $host_vendor in\n\tsni)\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes # is this really true???\n\t;;\n\tsiemens)\n\t  ## LD is ld it makes a PLAMLIB\n\t  ## CC just makes a GrossModule.\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(reload_cmds, $1)='$CC -r -o $output$reload_objs'\n\t  _LT_TAGVAR(hardcode_direct, $1)=no\n        ;;\n\tmotorola)\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(hardcode_direct, $1)=no #Motorola manual says yes, but my tests say they lie\n\t;;\n      esac\n      runpath_var='LD_RUN_PATH'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4.3*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='-Bexport'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\trunpath_var=LD_RUN_PATH\n\thardcode_runpath_var=yes\n\t_LT_TAGVAR(ld_shlibs, $1)=yes\n      fi\n      ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n      _LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6*)\n      # Note: We can NOT use -z defs as we might desire, because we do not\n      # link with -lc, and that would cause any symbols used from libc to\n      # always be unresolved, which means just about no library would\n      # ever link correctly.  If we're not using GNU ld we use -z text\n      # though, which does catch some bad symbols but isn't as heavy-handed\n      # as -z defs.\n      _LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n      _LT_TAGVAR(allow_undefined_flag, $1)='${wl}-z,nodefs'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R,$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Bexport'\n      runpath_var='LD_RUN_PATH'\n\n      if test \"$GCC\" = yes; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    uts4*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      _LT_TAGVAR(ld_shlibs, $1)=no\n      ;;\n    esac\n\n    if test x$host_vendor = xsni; then\n      case $host in\n      sysv4 | sysv4.2uw2* | sysv4.3* | sysv5*)\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Blargedynsym'\n\t;;\n      esac\n    fi\n  fi\n])\nAC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])\ntest \"$_LT_TAGVAR(ld_shlibs, $1)\" = no && can_build_shared=no\n\n_LT_TAGVAR(with_gnu_ld, $1)=$with_gnu_ld\n\n_LT_DECL([], [libext], [0], [Old archive suffix (normally \"a\")])dnl\n_LT_DECL([], [shrext_cmds], [1], [Shared library suffix (normally \".so\")])dnl\n_LT_DECL([], [extract_expsyms_cmds], [2],\n    [The commands to extract the exported symbol list from a shared archive])\n\n#\n# Do we need to explicitly link libc?\n#\ncase \"x$_LT_TAGVAR(archive_cmds_need_lc, $1)\" in\nx|xyes)\n  # Assume -lc should be added\n  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\n  if test \"$enable_shared\" = yes && test \"$GCC\" = yes; then\n    case $_LT_TAGVAR(archive_cmds, $1) in\n    *'~'*)\n      # FIXME: we may have to deal with multi-command sequences.\n      ;;\n    '$CC '*)\n      # Test whether the compiler implicitly links with -lc since on some\n      # systems, -lgcc has to come before -lc. If gcc already passes -lc\n      # to ld, don't add -lc before -lgcc.\n      AC_CACHE_CHECK([whether -lc should be explicitly linked in],\n\t[lt_cv_]_LT_TAGVAR(archive_cmds_need_lc, $1),\n\t[$RM conftest*\n\techo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n\tif AC_TRY_EVAL(ac_compile) 2>conftest.err; then\n\t  soname=conftest\n\t  lib=conftest\n\t  libobjs=conftest.$ac_objext\n\t  deplibs=\n\t  wl=$_LT_TAGVAR(lt_prog_compiler_wl, $1)\n\t  pic_flag=$_LT_TAGVAR(lt_prog_compiler_pic, $1)\n\t  compiler_flags=-v\n\t  linker_flags=-v\n\t  verstring=\n\t  output_objdir=.\n\t  libname=conftest\n\t  lt_save_allow_undefined_flag=$_LT_TAGVAR(allow_undefined_flag, $1)\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=\n\t  if AC_TRY_EVAL(_LT_TAGVAR(archive_cmds, $1) 2\\>\\&1 \\| $GREP \\\" -lc \\\" \\>/dev/null 2\\>\\&1)\n\t  then\n\t    lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t  else\n\t    lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  fi\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=$lt_save_allow_undefined_flag\n\telse\n\t  cat conftest.err 1>&5\n\tfi\n\t$RM conftest*\n\t])\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=$lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)\n      ;;\n    esac\n  fi\n  ;;\nesac\n\n_LT_TAGDECL([build_libtool_need_lc], [archive_cmds_need_lc], [0],\n    [Whether or not to add -lc for building shared libraries])\n_LT_TAGDECL([allow_libtool_libs_with_static_runtimes],\n    [enable_shared_with_static_runtimes], [0],\n    [Whether or not to disallow shared libs when runtime libs are static])\n_LT_TAGDECL([], [export_dynamic_flag_spec], [1],\n    [Compiler flag to allow reflexive dlopens])\n_LT_TAGDECL([], [whole_archive_flag_spec], [1],\n    [Compiler flag to generate shared objects directly from archives])\n_LT_TAGDECL([], [compiler_needs_object], [1],\n    [Whether the compiler copes with passing no objects directly])\n_LT_TAGDECL([], [old_archive_from_new_cmds], [2],\n    [Create an old-style archive from a shared archive])\n_LT_TAGDECL([], [old_archive_from_expsyms_cmds], [2],\n    [Create a temporary old-style archive to link instead of a shared archive])\n_LT_TAGDECL([], [archive_cmds], [2], [Commands used to build a shared archive])\n_LT_TAGDECL([], [archive_expsym_cmds], [2])\n_LT_TAGDECL([], [module_cmds], [2],\n    [Commands used to build a loadable module if different from building\n    a shared archive.])\n_LT_TAGDECL([], [module_expsym_cmds], [2])\n_LT_TAGDECL([], [with_gnu_ld], [1],\n    [Whether we are building with GNU ld or not])\n_LT_TAGDECL([], [allow_undefined_flag], [1],\n    [Flag that allows shared libraries with undefined symbols to be built])\n_LT_TAGDECL([], [no_undefined_flag], [1],\n    [Flag that enforces no undefined symbols])\n_LT_TAGDECL([], [hardcode_libdir_flag_spec], [1],\n    [Flag to hardcode $libdir into a binary during linking.\n    This must work even if $libdir does not exist])\n_LT_TAGDECL([], [hardcode_libdir_separator], [1],\n    [Whether we need a single \"-rpath\" flag with a separated argument])\n_LT_TAGDECL([], [hardcode_direct], [0],\n    [Set to \"yes\" if using DIR/libNAME${shared_ext} during linking hardcodes\n    DIR into the resulting binary])\n_LT_TAGDECL([], [hardcode_direct_absolute], [0],\n    [Set to \"yes\" if using DIR/libNAME${shared_ext} during linking hardcodes\n    DIR into the resulting binary and the resulting library dependency is\n    \"absolute\", i.e impossible to change by setting ${shlibpath_var} if the\n    library is relocated])\n_LT_TAGDECL([], [hardcode_minus_L], [0],\n    [Set to \"yes\" if using the -LDIR flag during linking hardcodes DIR\n    into the resulting binary])\n_LT_TAGDECL([], [hardcode_shlibpath_var], [0],\n    [Set to \"yes\" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR\n    into the resulting binary])\n_LT_TAGDECL([], [hardcode_automatic], [0],\n    [Set to \"yes\" if building a shared library automatically hardcodes DIR\n    into the library and all subsequent libraries and executables linked\n    against it])\n_LT_TAGDECL([], [inherit_rpath], [0],\n    [Set to yes if linker adds runtime paths of dependent libraries\n    to runtime path list])\n_LT_TAGDECL([], [link_all_deplibs], [0],\n    [Whether libtool must link a program against all its dependency libraries])\n_LT_TAGDECL([], [always_export_symbols], [0],\n    [Set to \"yes\" if exported symbols are required])\n_LT_TAGDECL([], [export_symbols_cmds], [2],\n    [The commands to list exported symbols])\n_LT_TAGDECL([], [exclude_expsyms], [1],\n    [Symbols that should not be listed in the preloaded symbols])\n_LT_TAGDECL([], [include_expsyms], [1],\n    [Symbols that must always be exported])\n_LT_TAGDECL([], [prelink_cmds], [2],\n    [Commands necessary for linking programs (against libraries) with templates])\n_LT_TAGDECL([], [postlink_cmds], [2],\n    [Commands necessary for finishing linking programs])\n_LT_TAGDECL([], [file_list_spec], [1],\n    [Specify filename containing input files])\ndnl FIXME: Not yet implemented\ndnl _LT_TAGDECL([], [thread_safe_flag_spec], [1],\ndnl    [Compiler flag to generate thread safe objects])\n])# _LT_LINKER_SHLIBS\n\n\n# _LT_LANG_C_CONFIG([TAG])\n# ------------------------\n# Ensure that the configuration variables for a C compiler are suitably\n# defined.  These variables are subsequently used by _LT_CONFIG to write\n# the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_C_CONFIG],\n[m4_require([_LT_DECL_EGREP])dnl\nlt_save_CC=\"$CC\"\nAC_LANG_PUSH(C)\n\n# Source file extension for C test sources.\nac_ext=c\n\n# Object file extension for compiled C test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"int some_variable = 0;\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='int main(){return(0);}'\n\n_LT_TAG_COMPILER\n# Save the default compiler, since it gets overwritten when the other\n# tags are being tested, and _LT_TAGVAR(compiler, []) is a NOP.\ncompiler_DEFAULT=$CC\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_SYS_DYNAMIC_LINKER($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n  LT_SYS_DLOPEN_SELF\n  _LT_CMD_STRIPLIB\n\n  # Report which library types will actually be built\n  AC_MSG_CHECKING([if libtool supports shared libraries])\n  AC_MSG_RESULT([$can_build_shared])\n\n  AC_MSG_CHECKING([whether to build shared libraries])\n  test \"$can_build_shared\" = \"no\" && enable_shared=no\n\n  # On AIX, shared libraries and static libraries use the same namespace, and\n  # are all built from PIC.\n  case $host_os in\n  aix3*)\n    test \"$enable_shared\" = yes && enable_static=no\n    if test -n \"$RANLIB\"; then\n      archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n      postinstall_cmds='$RANLIB $lib'\n    fi\n    ;;\n\n  aix[[4-9]]*)\n    if test \"$host_cpu\" != ia64 && test \"$aix_use_runtimelinking\" = no ; then\n      test \"$enable_shared\" = yes && enable_static=no\n    fi\n    ;;\n  esac\n  AC_MSG_RESULT([$enable_shared])\n\n  AC_MSG_CHECKING([whether to build static libraries])\n  # Make sure either enable_shared or enable_static is yes.\n  test \"$enable_shared\" = yes || enable_static=yes\n  AC_MSG_RESULT([$enable_static])\n\n  _LT_CONFIG($1)\nfi\nAC_LANG_POP\nCC=\"$lt_save_CC\"\n])# _LT_LANG_C_CONFIG\n\n\n# _LT_LANG_CXX_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for a C++ compiler are suitably\n# defined.  These variables are subsequently used by _LT_CONFIG to write\n# the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_CXX_CONFIG],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_PATH_MANIFEST_TOOL])dnl\nif test -n \"$CXX\" && ( test \"X$CXX\" != \"Xno\" &&\n    ( (test \"X$CXX\" = \"Xg++\" && `g++ -v >/dev/null 2>&1` ) ||\n    (test \"X$CXX\" != \"Xg++\"))) ; then\n  AC_PROG_CXXCPP\nelse\n  _lt_caught_CXX_error=yes\nfi\n\nAC_LANG_PUSH(C++)\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(compiler_needs_object, $1)=no\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for C++ test sources.\nac_ext=cpp\n\n# Object file extension for compiled C++ test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the CXX compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test \"$_lt_caught_CXX_error\" != yes; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"int some_variable = 0;\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code='int main(int, char *[[]]) { return(0); }'\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_CFLAGS=$CFLAGS\n  lt_save_LD=$LD\n  lt_save_GCC=$GCC\n  GCC=$GXX\n  lt_save_with_gnu_ld=$with_gnu_ld\n  lt_save_path_LD=$lt_cv_path_LD\n  if test -n \"${lt_cv_prog_gnu_ldcxx+set}\"; then\n    lt_cv_prog_gnu_ld=$lt_cv_prog_gnu_ldcxx\n  else\n    $as_unset lt_cv_prog_gnu_ld\n  fi\n  if test -n \"${lt_cv_path_LDCXX+set}\"; then\n    lt_cv_path_LD=$lt_cv_path_LDCXX\n  else\n    $as_unset lt_cv_path_LD\n  fi\n  test -z \"${LDCXX+set}\" || LD=$LDCXX\n  CC=${CXX-\"c++\"}\n  CFLAGS=$CXXFLAGS\n  compiler=$CC\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n\n  if test -n \"$compiler\"; then\n    # We don't want -fno-exception when compiling C++ code, so set the\n    # no_builtin_flag separately\n    if test \"$GXX\" = yes; then\n      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin'\n    else\n      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n    fi\n\n    if test \"$GXX\" = yes; then\n      # Set up default GNU C++ configuration\n\n      LT_PATH_LD\n\n      # Check if GNU C++ uses GNU ld as the underlying linker, since the\n      # archiving commands below assume that GNU ld is being used.\n      if test \"$with_gnu_ld\" = yes; then\n        _LT_TAGVAR(archive_cmds, $1)='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\n        # If archive_cmds runs LD, not CC, wlarc should be empty\n        # XXX I think wlarc can be eliminated in ltcf-cxx, but I need to\n        #     investigate it a little bit more. (MM)\n        wlarc='${wl}'\n\n        # ancient GNU ld didn't support --whole-archive et. al.\n        if eval \"`$CC -print-prog-name=ld` --help 2>&1\" |\n\t  $GREP 'no-whole-archive' > /dev/null; then\n          _LT_TAGVAR(whole_archive_flag_spec, $1)=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n        else\n          _LT_TAGVAR(whole_archive_flag_spec, $1)=\n        fi\n      else\n        with_gnu_ld=no\n        wlarc=\n\n        # A generic and very simple default shared library creation\n        # command for GNU C++ for the case where it uses the native\n        # linker, instead of GNU ld.  If possible, this setting should\n        # overridden to take advantage of the native linker features on\n        # the platform it is being used on.\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n      fi\n\n      # Commands to make compiler produce verbose output that lists\n      # what \"hidden\" libraries, object files and flags are used when\n      # linking a shared library.\n      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\n    else\n      GXX=no\n      with_gnu_ld=no\n      wlarc=\n    fi\n\n    # PORTME: fill in a description of your system's C++ link characteristics\n    AC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\n    _LT_TAGVAR(ld_shlibs, $1)=yes\n    case $host_os in\n      aix3*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n      aix[[4-9]]*)\n        if test \"$host_cpu\" = ia64; then\n          # On IA64, the linker does run time linking by default, so we don't\n          # have to do anything special.\n          aix_use_runtimelinking=no\n          exp_sym_flag='-Bexport'\n          no_entry_flag=\"\"\n        else\n          aix_use_runtimelinking=no\n\n          # Test if we are trying to use run time linking or normal\n          # AIX style linking. If -brtl is somewhere in LDFLAGS, we\n          # need to do runtime linking.\n          case $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)\n\t    for ld_flag in $LDFLAGS; do\n\t      case $ld_flag in\n\t      *-brtl*)\n\t        aix_use_runtimelinking=yes\n\t        break\n\t        ;;\n\t      esac\n\t    done\n\t    ;;\n          esac\n\n          exp_sym_flag='-bexport'\n          no_entry_flag='-bnoentry'\n        fi\n\n        # When large executables or shared objects are built, AIX ld can\n        # have problems creating the table of contents.  If linking a library\n        # or program results in \"error TOC overflow\" add -mminimal-toc to\n        # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n        # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n        _LT_TAGVAR(archive_cmds, $1)=''\n        _LT_TAGVAR(hardcode_direct, $1)=yes\n        _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n        _LT_TAGVAR(link_all_deplibs, $1)=yes\n        _LT_TAGVAR(file_list_spec, $1)='${wl}-f,'\n\n        if test \"$GXX\" = yes; then\n          case $host_os in aix4.[[012]]|aix4.[[012]].*)\n          # We only want to do this on AIX 4.2 and lower, the check\n          # below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`${CC} -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t     strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t    # We have reworked collect2\n\t    :\n\t  else\n\t    # We have old collect2\n\t    _LT_TAGVAR(hardcode_direct, $1)=unsupported\n\t    # It fails to find uninstalled libraries when the uninstalled\n\t    # path is not listed in the libpath.  Setting hardcode_minus_L\n\t    # to unsupported forces relinking\n\t    _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n          esac\n          shared_flag='-shared'\n\t  if test \"$aix_use_runtimelinking\" = yes; then\n\t    shared_flag=\"$shared_flag \"'${wl}-G'\n\t  fi\n        else\n          # not using gcc\n          if test \"$host_cpu\" = ia64; then\n\t  # VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t  # chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n          else\n\t    if test \"$aix_use_runtimelinking\" = yes; then\n\t      shared_flag='${wl}-G'\n\t    else\n\t      shared_flag='${wl}-bM:SRE'\n\t    fi\n          fi\n        fi\n\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-bexpall'\n        # It seems that -bexpall does not export symbols beginning with\n        # underscore (_), so it is better to generate a list of symbols to\n\t# export.\n        _LT_TAGVAR(always_export_symbols, $1)=yes\n        if test \"$aix_use_runtimelinking\" = yes; then\n          # Warning - without using the other runtime loading flags (-brtl),\n          # -berok will link without error, but may produce a broken library.\n          _LT_TAGVAR(allow_undefined_flag, $1)='-berok'\n          # Determine the default libpath from the value encoded in an empty\n          # executable.\n          _LT_SYS_MODULE_PATH_AIX([$1])\n          _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\n          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags `if test \"x${allow_undefined_flag}\" != \"x\"; then func_echo_all \"${wl}${allow_undefined_flag}\"; else :; fi` '\"\\${wl}$exp_sym_flag:\\$export_symbols $shared_flag\"\n        else\n          if test \"$host_cpu\" = ia64; then\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $libdir:/usr/lib:/lib'\n\t    _LT_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags ${wl}${allow_undefined_flag} '\"\\${wl}$exp_sym_flag:\\$export_symbols\"\n          else\n\t    # Determine the default libpath from the value encoded in an\n\t    # empty executable.\n\t    _LT_SYS_MODULE_PATH_AIX([$1])\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\t    # Warning - without using the other run time loading flags,\n\t    # -berok will link without error, but may produce a broken library.\n\t    _LT_TAGVAR(no_undefined_flag, $1)=' ${wl}-bernotok'\n\t    _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-berok'\n\t    if test \"$with_gnu_ld\" = yes; then\n\t      # We only use this code for GNU lds that support --whole-archive.\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive$convenience ${wl}--no-whole-archive'\n\t    else\n\t      # Exported symbols can be pulled into shared objects from archives\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t    fi\n\t    _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t    # This is similar to how AIX traditionally builds its shared\n\t    # libraries.\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'\n          fi\n        fi\n        ;;\n\n      beos*)\n\tif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  # Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t  # support --undefined.  This deserves some investigation.  FIXME\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\telse\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n\n      chorus*)\n        case $cc_basename in\n          *)\n\t  # FIXME: insert proper C++ library support\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\t  ;;\n        esac\n        ;;\n\n      cygwin* | mingw* | pw32* | cegcc*)\n\tcase $GXX,$cc_basename in\n\t,cl* | no,cl*)\n\t  # Native MSVC\n\t  # hardcode_libdir_flag_spec is actually meaningless, as there is\n\t  # no search path for DLLs.\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  _LT_TAGVAR(always_export_symbols, $1)=yes\n\t  _LT_TAGVAR(file_list_spec, $1)='@'\n\t  # Tell ltmain to make .lib files, not .a files.\n\t  libext=lib\n\t  # Tell ltmain to make .dll files, not .so files.\n\t  shrext_cmds=\".dll\"\n\t  # FIXME: Setting linknames here is a bad hack.\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-dll~linknames='\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='if test \"x`$SED 1q $export_symbols`\" = xEXPORTS; then\n\t      $SED -n -e 's/\\\\\\\\\\\\\\(.*\\\\\\\\\\\\\\)/-link\\\\\\ -EXPORT:\\\\\\\\\\\\\\1/' -e '1\\\\\\!p' < $export_symbols > $output_objdir/$soname.exp;\n\t    else\n\t      $SED -e 's/\\\\\\\\\\\\\\(.*\\\\\\\\\\\\\\)/-link\\\\\\ -EXPORT:\\\\\\\\\\\\\\1/' < $export_symbols > $output_objdir/$soname.exp;\n\t    fi~\n\t    $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs \"@$tool_output_objdir$soname.exp\" -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~\n\t    linknames='\n\t  # The linker will not automatically build a static lib if we build a DLL.\n\t  # _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t  # Don't use ranlib\n\t  _LT_TAGVAR(old_postinstall_cmds, $1)='chmod 644 $oldlib'\n\t  _LT_TAGVAR(postlink_cmds, $1)='lt_outputfile=\"@OUTPUT@\"~\n\t    lt_tool_outputfile=\"@TOOL_OUTPUT@\"~\n\t    case $lt_outputfile in\n\t      *.exe|*.EXE) ;;\n\t      *)\n\t\tlt_outputfile=\"$lt_outputfile.exe\"\n\t\tlt_tool_outputfile=\"$lt_tool_outputfile.exe\"\n\t\t;;\n\t    esac~\n\t    func_to_tool_file \"$lt_outputfile\"~\n\t    if test \"$MANIFEST_TOOL\" != \":\" && test -f \"$lt_outputfile.manifest\"; then\n\t      $MANIFEST_TOOL -manifest \"$lt_tool_outputfile.manifest\" -outputresource:\"$lt_tool_outputfile\" || exit 1;\n\t      $RM \"$lt_outputfile.manifest\";\n\t    fi'\n\t  ;;\n\t*)\n\t  # g++\n\t  # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n\t  # as there is no search path for DLLs.\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-all-symbols'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  _LT_TAGVAR(always_export_symbols, $1)=no\n\t  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\n\t  if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t    # If the export-symbols file already is a .def file (1st line\n\t    # is EXPORTS), use it as is; otherwise, prepend...\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='if test \"x`$SED 1q $export_symbols`\" = xEXPORTS; then\n\t      cp $export_symbols $output_objdir/$soname.def;\n\t    else\n\t      echo EXPORTS > $output_objdir/$soname.def;\n\t      cat $export_symbols >> $output_objdir/$soname.def;\n\t    fi~\n\t    $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t  else\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t  fi\n\t  ;;\n\tesac\n\t;;\n      darwin* | rhapsody*)\n        _LT_DARWIN_LINKER_FEATURES($1)\n\t;;\n\n      dgux*)\n        case $cc_basename in\n          ec++*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          ghcx*)\n\t    # Green Hills C++ Compiler\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      freebsd2.*)\n        # C++ shared libraries reported to be fairly broken before\n\t# switch to ELF\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      freebsd-elf*)\n        _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n        ;;\n\n      freebsd* | dragonfly*)\n        # FreeBSD 3 and later use GNU C++ and GNU ld with standard ELF\n        # conventions\n        _LT_TAGVAR(ld_shlibs, $1)=yes\n        ;;\n\n      gnu*)\n        ;;\n\n      haiku*)\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n        _LT_TAGVAR(link_all_deplibs, $1)=yes\n        ;;\n\n      hpux9*)\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n        _LT_TAGVAR(hardcode_direct, $1)=yes\n        _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t             # but as the default\n\t\t\t\t             # location of the library.\n\n        case $cc_basename in\n          CC*)\n            # FIXME: insert proper C++ library support\n            _LT_TAGVAR(ld_shlibs, $1)=no\n            ;;\n          aCC*)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -b ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n            # Commands to make compiler produce verbose output that lists\n            # what \"hidden\" libraries, object files and flags are used when\n            # linking a shared library.\n            #\n            # There doesn't appear to be a way to prevent this compiler from\n            # explicitly linking system object files so we need to strip them\n            # from the output so that they don't get included in the library\n            # dependencies.\n            output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $EGREP \"\\-L\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n            ;;\n          *)\n            if test \"$GXX\" = yes; then\n              _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared -nostdlib $pic_flag ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n            else\n              # FIXME: insert proper C++ library support\n              _LT_TAGVAR(ld_shlibs, $1)=no\n            fi\n            ;;\n        esac\n        ;;\n\n      hpux10*|hpux11*)\n        if test $with_gnu_ld = no; then\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n\t  _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n          case $host_cpu in\n            hppa*64*|ia64*)\n              ;;\n            *)\n\t      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n              ;;\n          esac\n        fi\n        case $host_cpu in\n          hppa*64*|ia64*)\n            _LT_TAGVAR(hardcode_direct, $1)=no\n            _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n            ;;\n          *)\n            _LT_TAGVAR(hardcode_direct, $1)=yes\n            _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t\t         # but as the default\n\t\t\t\t\t         # location of the library.\n            ;;\n        esac\n\n        case $cc_basename in\n          CC*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          aCC*)\n\t    case $host_cpu in\n\t      hppa*64*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      ia64*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      *)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t    esac\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $GREP \"\\-L\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n          *)\n\t    if test \"$GXX\" = yes; then\n\t      if test $with_gnu_ld = no; then\n\t        case $host_cpu in\n\t          hppa*64*)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          ia64*)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $pic_flag ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          *)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $pic_flag ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t        esac\n\t      fi\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      _LT_TAGVAR(ld_shlibs, $1)=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      interix[[3-9]]*)\n\t_LT_TAGVAR(hardcode_direct, $1)=no\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\t# Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n\t# Instead, shared libraries are loaded at an image base (0x10000000 by\n\t# default) and relocated if they conflict, which is a slow very memory\n\t# consuming and fragmenting process.  To avoid this, we pick a random,\n\t# 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n\t# time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='sed \"s,^,_,\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t;;\n      irix5* | irix6*)\n        case $cc_basename in\n          CC*)\n\t    # SGI C++\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -all -multigot $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -ar\", where \"CC\" is the IRIX C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -ar -WR,-u -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    if test \"$GXX\" = yes; then\n\t      if test \"$with_gnu_ld\" = no; then\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t      else\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` -o $lib'\n\t      fi\n\t    fi\n\t    _LT_TAGVAR(link_all_deplibs, $1)=yes\n\t    ;;\n        esac\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n        _LT_TAGVAR(inherit_rpath, $1)=yes\n        ;;\n\n      linux* | k*bsd*-gnu | kopensolaris*-gnu)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib ${wl}-retain-symbols-file,$export_symbols; mv \\$templib $lib'\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1 | $GREP \"ld\"`; rm -f libconftest$shared_ext; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -Bstatic\", where \"CC\" is the KAI C++ compiler.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs'\n\t    ;;\n\t  icpc* | ecpc* )\n\t    # Intel C++\n\t    with_gnu_ld=yes\n\t    # version 8.0 and above of icpc choke on multiply defined symbols\n\t    # if we add $predep_objects and $postdep_objects, however 7.1 and\n\t    # earlier do not add the objects themselves.\n\t    case `$CC -V 2>&1` in\n\t      *\"Version 7.\"*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t      *)  # Version 8.0 or newer\n\t        tmp_idyn=\n\t        case $host_cpu in\n\t\t  ia64*) tmp_idyn=' -i_dynamic';;\n\t\tesac\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t    esac\n\t    _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive$convenience ${wl}--no-whole-archive'\n\t    ;;\n          pgCC* | pgcpp*)\n            # Portland Group C++ compiler\n\t    case `$CC -V` in\n\t    *pgCC\\ [[1-5]].* | *pgcpp\\ [[1-5]].*)\n\t      _LT_TAGVAR(prelink_cmds, $1)='tpldir=Template.dir~\n\t\trm -rf $tpldir~\n\t\t$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n\t\tcompile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n\t      _LT_TAGVAR(old_archive_cmds, $1)='tpldir=Template.dir~\n\t\trm -rf $tpldir~\n\t\t$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n\t\t$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n\t\t$RANLIB $oldlib'\n\t      _LT_TAGVAR(archive_cmds, $1)='tpldir=Template.dir~\n\t\trm -rf $tpldir~\n\t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='tpldir=Template.dir~\n\t\trm -rf $tpldir~\n\t\t$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n\t\t$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n\t      ;;\n\t    *) # Version 6 and above use weak symbols\n\t      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n\t      ;;\n\t    esac\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}--rpath ${wl}$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n            ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname  -o $lib ${wl}-retain-symbols-file $wl$export_symbols'\n\n\t    runpath_var=LD_RUN_PATH\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld .*$\\)/\\1/\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"X$list\" | $Xsed'\n\t    ;;\n\t  xl* | mpixl* | bgxl*)\n\t    # IBM XL 8.0 on PPC, with GNU ld\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -qmkshrobj $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t    if test \"x$supports_anon_versioning\" = xyes; then\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n\t\tcat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n\t\techo \"local: *; };\" >> $output_objdir/$libname.ver~\n\t\t$CC -qmkshrobj $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'\n\t    fi\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t      _LT_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag} -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G${allow_undefined_flag} -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-retain-symbols-file ${wl}$export_symbols'\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t      _LT_TAGVAR(compiler_needs_object, $1)=yes\n\n\t      # Not sure whether something based on\n\t      # $CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1\n\t      # would be better.\n\t      output_verbose_link_cmd='func_echo_all'\n\n\t      # Archives containing C++ object files must be created using\n\t      # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t      # necessary to make sure instantiated templates are included\n\t      # in the archive.\n\t      _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n\n      lynxos*)\n        # FIXME: insert proper C++ library support\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      m88k*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      mvs*)\n        case $cc_basename in\n          cxx*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n\t  *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n\tesac\n\t;;\n\n      netbsd*)\n        if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable  -o $lib $predep_objects $libobjs $deplibs $postdep_objects $linker_flags'\n\t  wlarc=\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\tfi\n\t# Workaround some broken pre-1.5 toolchains\n\toutput_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP conftest.$objext | $SED -e \"s:-lgcc -lc -lgcc::\"'\n\t;;\n\n      *nto* | *qnx*)\n        _LT_TAGVAR(ld_shlibs, $1)=yes\n\t;;\n\n      openbsd2*)\n        # C++ shared libraries are fairly broken\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      openbsd*)\n\tif test -f /usr/libexec/ld.so; then\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t  if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-retain-symbols-file,$export_symbols -o $lib'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n\t  fi\n\t  output_verbose_link_cmd=func_echo_all\n\telse\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n\n      osf3* | osf4* | osf5*)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo \"$lib\" | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Archives containing C++ object files must be created using\n\t    # the KAI C++ compiler.\n\t    case $host in\n\t      osf3*) _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs' ;;\n\t      *) _LT_TAGVAR(old_archive_cmds, $1)='$CC -o $oldlib $oldobjs' ;;\n\t    esac\n\t    ;;\n          RCC*)\n\t    # Rational C++ 2.4.1\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          cxx*)\n\t    case $host in\n\t      osf3*)\n\t        _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\t        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t\t;;\n\t      *)\n\t        _LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done~\n\t          echo \"-hidden\">> $lib.exp~\n\t          $CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname ${wl}-input ${wl}$lib.exp  `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry ${output_objdir}/so_locations -o $lib~\n\t          $RM $lib.exp'\n\t        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t\t;;\n\t    esac\n\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\" | $GREP -v \"ld:\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld.*$\\)/\\1/\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n\t  *)\n\t    if test \"$GXX\" = yes && test \"$with_gnu_ld\" = no; then\n\t      _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t      case $host in\n\t        osf3*)\n\t          _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib ${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t\t  ;;\n\t        *)\n\t          _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib ${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n \"$verstring\" && func_echo_all \"${wl}-set_version ${wl}$verstring\"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t\t  ;;\n\t      esac\n\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t      # Commands to make compiler produce verbose output that lists\n\t      # what \"hidden\" libraries, object files and flags are used when\n\t      # linking a shared library.\n\t      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      _LT_TAGVAR(ld_shlibs, $1)=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      psos*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      sunos4*)\n        case $cc_basename in\n          CC*)\n\t    # Sun C++ 4.x\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          lcc*)\n\t    # Lucid\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      solaris*)\n        case $cc_basename in\n          CC* | sunCC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n            _LT_TAGVAR(archive_cmds_need_lc,$1)=yes\n\t    _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag}  -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t      $CC -G${allow_undefined_flag} ${wl}-M ${wl}$lib.exp -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t    _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t    case $host_os in\n\t      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t      *)\n\t\t# The compiler driver will combine and reorder linker options,\n\t\t# but understands `-z linker_flag'.\n\t        # Supported since Solaris 2.6 (maybe 2.5.1?)\n\t\t_LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'\n\t        ;;\n\t    esac\n\t    _LT_TAGVAR(link_all_deplibs, $1)=yes\n\n\t    output_verbose_link_cmd='func_echo_all'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t    ;;\n          gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'\n\n\t    # The C++ compiler must be used to create the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC $LDFLAGS -archive -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    # GNU C++ compiler with Solaris linker\n\t    if test \"$GXX\" = yes && test \"$with_gnu_ld\" = no; then\n\t      _LT_TAGVAR(no_undefined_flag, $1)=' ${wl}-z ${wl}defs'\n\t      if $CC --version | $GREP -v '^2\\.7' > /dev/null; then\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t\t  $CC -shared $pic_flag -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\t      else\n\t        # g++ 2.7 appears to require `-G' NOT `-shared' on this\n\t        # platform.\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -G -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n\t\t  $CC -G -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -G $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\t      fi\n\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $wl$libdir'\n\t      case $host_os in\n\t\tsolaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t\t*)\n\t\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}-z ${wl}allextract$convenience ${wl}-z ${wl}defaultextract'\n\t\t  ;;\n\t      esac\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n      _LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      case $cc_basename in\n        CC*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n      esac\n      ;;\n\n      sysv5* | sco3.2v5* | sco5v6*)\n\t# Note: We can NOT use -z defs as we might desire, because we do not\n\t# link with -lc, and that would cause any symbols used from libc to\n\t# always be unresolved, which means just about no library would\n\t# ever link correctly.  If we're not using GNU ld we use -z text\n\t# though, which does catch some bad symbols but isn't as heavy-handed\n\t# as -z defs.\n\t_LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n\t_LT_TAGVAR(allow_undefined_flag, $1)='${wl}-z,nodefs'\n\t_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R,$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n\t_LT_TAGVAR(link_all_deplibs, $1)=yes\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Bexport'\n\trunpath_var='LD_RUN_PATH'\n\n\tcase $cc_basename in\n          CC*)\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Tprelink_objects $oldobjs~\n\t      '\"$_LT_TAGVAR(old_archive_cmds, $1)\"\n\t    _LT_TAGVAR(reload_cmds, $1)='$CC -Tprelink_objects $reload_objs~\n\t      '\"$_LT_TAGVAR(reload_cmds, $1)\"\n\t    ;;\n\t  *)\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    ;;\n\tesac\n      ;;\n\n      tandem*)\n        case $cc_basename in\n          NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      vxworks*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      *)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n    esac\n\n    AC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])\n    test \"$_LT_TAGVAR(ld_shlibs, $1)\" = no && can_build_shared=no\n\n    _LT_TAGVAR(GCC, $1)=\"$GXX\"\n    _LT_TAGVAR(LD, $1)=\"$LD\"\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_SYS_HIDDEN_LIBDEPS($1)\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\n  LDCXX=$LD\n  LD=$lt_save_LD\n  GCC=$lt_save_GCC\n  with_gnu_ld=$lt_save_with_gnu_ld\n  lt_cv_path_LDCXX=$lt_cv_path_LD\n  lt_cv_path_LD=$lt_save_path_LD\n  lt_cv_prog_gnu_ldcxx=$lt_cv_prog_gnu_ld\n  lt_cv_prog_gnu_ld=$lt_save_with_gnu_ld\nfi # test \"$_lt_caught_CXX_error\" != yes\n\nAC_LANG_POP\n])# _LT_LANG_CXX_CONFIG\n\n\n# _LT_FUNC_STRIPNAME_CNF\n# ----------------------\n# func_stripname_cnf prefix suffix name\n# strip PREFIX and SUFFIX off of NAME.\n# PREFIX and SUFFIX must not contain globbing or regex special\n# characters, hashes, percent signs, but SUFFIX may contain a leading\n# dot (in which case that matches only a dot).\n#\n# This function is identical to the (non-XSI) version of func_stripname,\n# except this one can be used by m4 code that may be executed by configure,\n# rather than the libtool script.\nm4_defun([_LT_FUNC_STRIPNAME_CNF],[dnl\nAC_REQUIRE([_LT_DECL_SED])\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])\nfunc_stripname_cnf ()\n{\n  case ${2} in\n  .*) func_stripname_result=`$ECHO \"${3}\" | $SED \"s%^${1}%%; s%\\\\\\\\${2}\\$%%\"`;;\n  *)  func_stripname_result=`$ECHO \"${3}\" | $SED \"s%^${1}%%; s%${2}\\$%%\"`;;\n  esac\n} # func_stripname_cnf\n])# _LT_FUNC_STRIPNAME_CNF\n\n# _LT_SYS_HIDDEN_LIBDEPS([TAGNAME])\n# ---------------------------------\n# Figure out \"hidden\" library dependencies from verbose\n# compiler output when linking a shared library.\n# Parse the compiler output and extract the necessary\n# objects, libraries and library flags.\nm4_defun([_LT_SYS_HIDDEN_LIBDEPS],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nAC_REQUIRE([_LT_FUNC_STRIPNAME_CNF])dnl\n# Dependencies to place before and after the object being linked:\n_LT_TAGVAR(predep_objects, $1)=\n_LT_TAGVAR(postdep_objects, $1)=\n_LT_TAGVAR(predeps, $1)=\n_LT_TAGVAR(postdeps, $1)=\n_LT_TAGVAR(compiler_lib_search_path, $1)=\n\ndnl we can't use the lt_simple_compile_test_code here,\ndnl because it contains code intended for an executable,\ndnl not a library.  It's possible we should let each\ndnl tag define a new lt_????_link_test_code variable,\ndnl but it's only used here...\nm4_if([$1], [], [cat > conftest.$ac_ext <<_LT_EOF\nint a;\nvoid foo (void) { a = 0; }\n_LT_EOF\n], [$1], [CXX], [cat > conftest.$ac_ext <<_LT_EOF\nclass Foo\n{\npublic:\n  Foo (void) { a = 0; }\nprivate:\n  int a;\n};\n_LT_EOF\n], [$1], [F77], [cat > conftest.$ac_ext <<_LT_EOF\n      subroutine foo\n      implicit none\n      integer*4 a\n      a=0\n      return\n      end\n_LT_EOF\n], [$1], [FC], [cat > conftest.$ac_ext <<_LT_EOF\n      subroutine foo\n      implicit none\n      integer a\n      a=0\n      return\n      end\n_LT_EOF\n], [$1], [GCJ], [cat > conftest.$ac_ext <<_LT_EOF\npublic class foo {\n  private int a;\n  public void bar (void) {\n    a = 0;\n  }\n};\n_LT_EOF\n], [$1], [GO], [cat > conftest.$ac_ext <<_LT_EOF\npackage foo\nfunc foo() {\n}\n_LT_EOF\n])\n\n_lt_libdeps_save_CFLAGS=$CFLAGS\ncase \"$CC $CFLAGS \" in #(\n*\\ -flto*\\ *) CFLAGS=\"$CFLAGS -fno-lto\" ;;\n*\\ -fwhopr*\\ *) CFLAGS=\"$CFLAGS -fno-whopr\" ;;\n*\\ -fuse-linker-plugin*\\ *) CFLAGS=\"$CFLAGS -fno-use-linker-plugin\" ;;\nesac\n\ndnl Parse the compiler output and extract the necessary\ndnl objects, libraries and library flags.\nif AC_TRY_EVAL(ac_compile); then\n  # Parse the compiler output and extract the necessary\n  # objects, libraries and library flags.\n\n  # Sentinel used to keep track of whether or not we are before\n  # the conftest object file.\n  pre_test_object_deps_done=no\n\n  for p in `eval \"$output_verbose_link_cmd\"`; do\n    case ${prev}${p} in\n\n    -L* | -R* | -l*)\n       # Some compilers place space between \"-{L,R}\" and the path.\n       # Remove the space.\n       if test $p = \"-L\" ||\n          test $p = \"-R\"; then\n\t prev=$p\n\t continue\n       fi\n\n       # Expand the sysroot to ease extracting the directories later.\n       if test -z \"$prev\"; then\n         case $p in\n         -L*) func_stripname_cnf '-L' '' \"$p\"; prev=-L; p=$func_stripname_result ;;\n         -R*) func_stripname_cnf '-R' '' \"$p\"; prev=-R; p=$func_stripname_result ;;\n         -l*) func_stripname_cnf '-l' '' \"$p\"; prev=-l; p=$func_stripname_result ;;\n         esac\n       fi\n       case $p in\n       =*) func_stripname_cnf '=' '' \"$p\"; p=$lt_sysroot$func_stripname_result ;;\n       esac\n       if test \"$pre_test_object_deps_done\" = no; then\n\t case ${prev} in\n\t -L | -R)\n\t   # Internal compiler library paths should come after those\n\t   # provided the user.  The postdeps already come after the\n\t   # user supplied libs so there is no need to process them.\n\t   if test -z \"$_LT_TAGVAR(compiler_lib_search_path, $1)\"; then\n\t     _LT_TAGVAR(compiler_lib_search_path, $1)=\"${prev}${p}\"\n\t   else\n\t     _LT_TAGVAR(compiler_lib_search_path, $1)=\"${_LT_TAGVAR(compiler_lib_search_path, $1)} ${prev}${p}\"\n\t   fi\n\t   ;;\n\t # The \"-l\" case would never come before the object being\n\t # linked, so don't bother handling this case.\n\t esac\n       else\n\t if test -z \"$_LT_TAGVAR(postdeps, $1)\"; then\n\t   _LT_TAGVAR(postdeps, $1)=\"${prev}${p}\"\n\t else\n\t   _LT_TAGVAR(postdeps, $1)=\"${_LT_TAGVAR(postdeps, $1)} ${prev}${p}\"\n\t fi\n       fi\n       prev=\n       ;;\n\n    *.lto.$objext) ;; # Ignore GCC LTO objects\n    *.$objext)\n       # This assumes that the test object file only shows up\n       # once in the compiler output.\n       if test \"$p\" = \"conftest.$objext\"; then\n\t pre_test_object_deps_done=yes\n\t continue\n       fi\n\n       if test \"$pre_test_object_deps_done\" = no; then\n\t if test -z \"$_LT_TAGVAR(predep_objects, $1)\"; then\n\t   _LT_TAGVAR(predep_objects, $1)=\"$p\"\n\t else\n\t   _LT_TAGVAR(predep_objects, $1)=\"$_LT_TAGVAR(predep_objects, $1) $p\"\n\t fi\n       else\n\t if test -z \"$_LT_TAGVAR(postdep_objects, $1)\"; then\n\t   _LT_TAGVAR(postdep_objects, $1)=\"$p\"\n\t else\n\t   _LT_TAGVAR(postdep_objects, $1)=\"$_LT_TAGVAR(postdep_objects, $1) $p\"\n\t fi\n       fi\n       ;;\n\n    *) ;; # Ignore the rest.\n\n    esac\n  done\n\n  # Clean up.\n  rm -f a.out a.exe\nelse\n  echo \"libtool.m4: error: problem compiling $1 test program\"\nfi\n\n$RM -f confest.$objext\nCFLAGS=$_lt_libdeps_save_CFLAGS\n\n# PORTME: override above test on systems where it is broken\nm4_if([$1], [CXX],\n[case $host_os in\ninterix[[3-9]]*)\n  # Interix 3.5 installs completely hosed .la files for C++, so rather than\n  # hack all around it, let's just trust \"g++\" to DTRT.\n  _LT_TAGVAR(predep_objects,$1)=\n  _LT_TAGVAR(postdep_objects,$1)=\n  _LT_TAGVAR(postdeps,$1)=\n  ;;\n\nlinux*)\n  case `$CC -V 2>&1 | sed 5q` in\n  *Sun\\ C*)\n    # Sun C++ 5.9\n\n    # The more standards-conforming stlport4 library is\n    # incompatible with the Cstd library. Avoid specifying\n    # it if it's in CXXFLAGS. Ignore libCrun as\n    # -library=stlport4 depends on it.\n    case \" $CXX $CXXFLAGS \" in\n    *\" -library=stlport4 \"*)\n      solaris_use_stlport4=yes\n      ;;\n    esac\n\n    if test \"$solaris_use_stlport4\" != yes; then\n      _LT_TAGVAR(postdeps,$1)='-library=Cstd -library=Crun'\n    fi\n    ;;\n  esac\n  ;;\n\nsolaris*)\n  case $cc_basename in\n  CC* | sunCC*)\n    # The more standards-conforming stlport4 library is\n    # incompatible with the Cstd library. Avoid specifying\n    # it if it's in CXXFLAGS. Ignore libCrun as\n    # -library=stlport4 depends on it.\n    case \" $CXX $CXXFLAGS \" in\n    *\" -library=stlport4 \"*)\n      solaris_use_stlport4=yes\n      ;;\n    esac\n\n    # Adding this requires a known-good setup of shared libraries for\n    # Sun compiler versions before 5.6, else PIC objects from an old\n    # archive will be linked into the output, leading to subtle bugs.\n    if test \"$solaris_use_stlport4\" != yes; then\n      _LT_TAGVAR(postdeps,$1)='-library=Cstd -library=Crun'\n    fi\n    ;;\n  esac\n  ;;\nesac\n])\n\ncase \" $_LT_TAGVAR(postdeps, $1) \" in\n*\" -lc \"*) _LT_TAGVAR(archive_cmds_need_lc, $1)=no ;;\nesac\n _LT_TAGVAR(compiler_lib_search_dirs, $1)=\nif test -n \"${_LT_TAGVAR(compiler_lib_search_path, $1)}\"; then\n _LT_TAGVAR(compiler_lib_search_dirs, $1)=`echo \" ${_LT_TAGVAR(compiler_lib_search_path, $1)}\" | ${SED} -e 's! -L! !g' -e 's!^ !!'`\nfi\n_LT_TAGDECL([], [compiler_lib_search_dirs], [1],\n    [The directories searched by this compiler when creating a shared library])\n_LT_TAGDECL([], [predep_objects], [1],\n    [Dependencies to place before and after the objects being linked to\n    create a shared library])\n_LT_TAGDECL([], [postdep_objects], [1])\n_LT_TAGDECL([], [predeps], [1])\n_LT_TAGDECL([], [postdeps], [1])\n_LT_TAGDECL([], [compiler_lib_search_path], [1],\n    [The library search path used internally by the compiler when linking\n    a shared library])\n])# _LT_SYS_HIDDEN_LIBDEPS\n\n\n# _LT_LANG_F77_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for a Fortran 77 compiler are\n# suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_F77_CONFIG],\n[AC_LANG_PUSH(Fortran 77)\nif test -z \"$F77\" || test \"X$F77\" = \"Xno\"; then\n  _lt_disable_F77=yes\nfi\n\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for f77 test sources.\nac_ext=f\n\n# Object file extension for compiled f77 test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the F77 compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test \"$_lt_disable_F77\" != yes; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"\\\n      subroutine t\n      return\n      end\n\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code=\"\\\n      program t\n      end\n\"\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=\"$CC\"\n  lt_save_GCC=$GCC\n  lt_save_CFLAGS=$CFLAGS\n  CC=${F77-\"f77\"}\n  CFLAGS=$FFLAGS\n  compiler=$CC\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n  GCC=$G77\n  if test -n \"$compiler\"; then\n    AC_MSG_CHECKING([if libtool supports shared libraries])\n    AC_MSG_RESULT([$can_build_shared])\n\n    AC_MSG_CHECKING([whether to build shared libraries])\n    test \"$can_build_shared\" = \"no\" && enable_shared=no\n\n    # On AIX, shared libraries and static libraries use the same namespace, and\n    # are all built from PIC.\n    case $host_os in\n      aix3*)\n        test \"$enable_shared\" = yes && enable_static=no\n        if test -n \"$RANLIB\"; then\n          archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n          postinstall_cmds='$RANLIB $lib'\n        fi\n        ;;\n      aix[[4-9]]*)\n\tif test \"$host_cpu\" != ia64 && test \"$aix_use_runtimelinking\" = no ; then\n\t  test \"$enable_shared\" = yes && enable_static=no\n\tfi\n        ;;\n    esac\n    AC_MSG_RESULT([$enable_shared])\n\n    AC_MSG_CHECKING([whether to build static libraries])\n    # Make sure either enable_shared or enable_static is yes.\n    test \"$enable_shared\" = yes || enable_static=yes\n    AC_MSG_RESULT([$enable_static])\n\n    _LT_TAGVAR(GCC, $1)=\"$G77\"\n    _LT_TAGVAR(LD, $1)=\"$LD\"\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  GCC=$lt_save_GCC\n  CC=\"$lt_save_CC\"\n  CFLAGS=\"$lt_save_CFLAGS\"\nfi # test \"$_lt_disable_F77\" != yes\n\nAC_LANG_POP\n])# _LT_LANG_F77_CONFIG\n\n\n# _LT_LANG_FC_CONFIG([TAG])\n# -------------------------\n# Ensure that the configuration variables for a Fortran compiler are\n# suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_FC_CONFIG],\n[AC_LANG_PUSH(Fortran)\n\nif test -z \"$FC\" || test \"X$FC\" = \"Xno\"; then\n  _lt_disable_FC=yes\nfi\n\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for fc test sources.\nac_ext=${ac_fc_srcext-f}\n\n# Object file extension for compiled fc test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the FC compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test \"$_lt_disable_FC\" != yes; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"\\\n      subroutine t\n      return\n      end\n\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code=\"\\\n      program t\n      end\n\"\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=\"$CC\"\n  lt_save_GCC=$GCC\n  lt_save_CFLAGS=$CFLAGS\n  CC=${FC-\"f95\"}\n  CFLAGS=$FCFLAGS\n  compiler=$CC\n  GCC=$ac_cv_fc_compiler_gnu\n\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n\n  if test -n \"$compiler\"; then\n    AC_MSG_CHECKING([if libtool supports shared libraries])\n    AC_MSG_RESULT([$can_build_shared])\n\n    AC_MSG_CHECKING([whether to build shared libraries])\n    test \"$can_build_shared\" = \"no\" && enable_shared=no\n\n    # On AIX, shared libraries and static libraries use the same namespace, and\n    # are all built from PIC.\n    case $host_os in\n      aix3*)\n        test \"$enable_shared\" = yes && enable_static=no\n        if test -n \"$RANLIB\"; then\n          archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n          postinstall_cmds='$RANLIB $lib'\n        fi\n        ;;\n      aix[[4-9]]*)\n\tif test \"$host_cpu\" != ia64 && test \"$aix_use_runtimelinking\" = no ; then\n\t  test \"$enable_shared\" = yes && enable_static=no\n\tfi\n        ;;\n    esac\n    AC_MSG_RESULT([$enable_shared])\n\n    AC_MSG_CHECKING([whether to build static libraries])\n    # Make sure either enable_shared or enable_static is yes.\n    test \"$enable_shared\" = yes || enable_static=yes\n    AC_MSG_RESULT([$enable_static])\n\n    _LT_TAGVAR(GCC, $1)=\"$ac_cv_fc_compiler_gnu\"\n    _LT_TAGVAR(LD, $1)=\"$LD\"\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_SYS_HIDDEN_LIBDEPS($1)\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  GCC=$lt_save_GCC\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\nfi # test \"$_lt_disable_FC\" != yes\n\nAC_LANG_POP\n])# _LT_LANG_FC_CONFIG\n\n\n# _LT_LANG_GCJ_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for the GNU Java Compiler compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_GCJ_CONFIG],\n[AC_REQUIRE([LT_PROG_GCJ])dnl\nAC_LANG_SAVE\n\n# Source file extension for Java test sources.\nac_ext=java\n\n# Object file extension for compiled Java test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"class foo {}\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='public class conftest { public static void main(String[[]] argv) {}; }'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=yes\nCC=${GCJ-\"gcj\"}\nCFLAGS=$GCJFLAGS\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_TAGVAR(LD, $1)=\"$LD\"\n_LT_CC_BASENAME([$compiler])\n\n# GCJ did not exist at the time GCC didn't implicitly link libc in.\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n\n  _LT_CONFIG($1)\nfi\n\nAC_LANG_RESTORE\n\nGCC=$lt_save_GCC\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_GCJ_CONFIG\n\n\n# _LT_LANG_GO_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for the GNU Go compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_GO_CONFIG],\n[AC_REQUIRE([LT_PROG_GO])dnl\nAC_LANG_SAVE\n\n# Source file extension for Go test sources.\nac_ext=go\n\n# Object file extension for compiled Go test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"package main; func main() { }\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='package main; func main() { }'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=yes\nCC=${GOC-\"gccgo\"}\nCFLAGS=$GOFLAGS\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_TAGVAR(LD, $1)=\"$LD\"\n_LT_CC_BASENAME([$compiler])\n\n# Go did not exist at the time GCC didn't implicitly link libc in.\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n\n  _LT_CONFIG($1)\nfi\n\nAC_LANG_RESTORE\n\nGCC=$lt_save_GCC\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_GO_CONFIG\n\n\n# _LT_LANG_RC_CONFIG([TAG])\n# -------------------------\n# Ensure that the configuration variables for the Windows resource compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to `libtool'.\nm4_defun([_LT_LANG_RC_CONFIG],\n[AC_REQUIRE([LT_PROG_RC])dnl\nAC_LANG_SAVE\n\n# Source file extension for RC test sources.\nac_ext=rc\n\n# Object file extension for compiled RC test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code='sample MENU { MENUITEM \"&Soup\", 100, CHECKED }'\n\n# Code to be used in simple link tests\nlt_simple_link_test_code=\"$lt_simple_compile_test_code\"\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=\"$CC\"\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=\nCC=${RC-\"windres\"}\nCFLAGS=\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_CC_BASENAME([$compiler])\n_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n\nif test -n \"$compiler\"; then\n  :\n  _LT_CONFIG($1)\nfi\n\nGCC=$lt_save_GCC\nAC_LANG_RESTORE\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_RC_CONFIG\n\n\n# LT_PROG_GCJ\n# -----------\nAC_DEFUN([LT_PROG_GCJ],\n[m4_ifdef([AC_PROG_GCJ], [AC_PROG_GCJ],\n  [m4_ifdef([A][M_PROG_GCJ], [A][M_PROG_GCJ],\n    [AC_CHECK_TOOL(GCJ, gcj,)\n      test \"x${GCJFLAGS+set}\" = xset || GCJFLAGS=\"-g -O2\"\n      AC_SUBST(GCJFLAGS)])])[]dnl\n])\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_GCJ], [LT_PROG_GCJ])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_GCJ], [])\n\n\n# LT_PROG_GO\n# ----------\nAC_DEFUN([LT_PROG_GO],\n[AC_CHECK_TOOL(GOC, gccgo,)\n])\n\n\n# LT_PROG_RC\n# ----------\nAC_DEFUN([LT_PROG_RC],\n[AC_CHECK_TOOL(RC, windres,)\n])\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_RC], [LT_PROG_RC])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_RC], [])\n\n\n# _LT_DECL_EGREP\n# --------------\n# If we don't have a new enough Autoconf to choose the best grep\n# available, choose the one first in the user's PATH.\nm4_defun([_LT_DECL_EGREP],\n[AC_REQUIRE([AC_PROG_EGREP])dnl\nAC_REQUIRE([AC_PROG_FGREP])dnl\ntest -z \"$GREP\" && GREP=grep\n_LT_DECL([], [GREP], [1], [A grep program that handles long lines])\n_LT_DECL([], [EGREP], [1], [An ERE matcher])\n_LT_DECL([], [FGREP], [1], [A literal string matcher])\ndnl Non-bleeding-edge autoconf doesn't subst GREP, so do it here too\nAC_SUBST([GREP])\n])\n\n\n# _LT_DECL_OBJDUMP\n# --------------\n# If we don't have a new enough Autoconf to choose the best objdump\n# available, choose the one first in the user's PATH.\nm4_defun([_LT_DECL_OBJDUMP],\n[AC_CHECK_TOOL(OBJDUMP, objdump, false)\ntest -z \"$OBJDUMP\" && OBJDUMP=objdump\n_LT_DECL([], [OBJDUMP], [1], [An object symbol dumper])\nAC_SUBST([OBJDUMP])\n])\n\n# _LT_DECL_DLLTOOL\n# ----------------\n# Ensure DLLTOOL variable is set.\nm4_defun([_LT_DECL_DLLTOOL],\n[AC_CHECK_TOOL(DLLTOOL, dlltool, false)\ntest -z \"$DLLTOOL\" && DLLTOOL=dlltool\n_LT_DECL([], [DLLTOOL], [1], [DLL creation program])\nAC_SUBST([DLLTOOL])\n])\n\n# _LT_DECL_SED\n# ------------\n# Check for a fully-functional sed program, that truncates\n# as few characters as possible.  Prefer GNU sed if found.\nm4_defun([_LT_DECL_SED],\n[AC_PROG_SED\ntest -z \"$SED\" && SED=sed\nXsed=\"$SED -e 1s/^X//\"\n_LT_DECL([], [SED], [1], [A sed program that does not truncate output])\n_LT_DECL([], [Xsed], [\"\\$SED -e 1s/^X//\"],\n    [Sed that helps us avoid accidentally triggering echo(1) options like -n])\n])# _LT_DECL_SED\n\nm4_ifndef([AC_PROG_SED], [\n############################################################\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_SED.  When it is available in   #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\n############################################################\n\nm4_defun([AC_PROG_SED],\n[AC_MSG_CHECKING([for a sed that does not truncate output])\nAC_CACHE_VAL(lt_cv_path_SED,\n[# Loop through the user's path and test for sed and gsed.\n# Then use that list of sed's as ones to test for truncation.\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n  for lt_ac_prog in sed gsed; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      if $as_executable_p \"$as_dir/$lt_ac_prog$ac_exec_ext\"; then\n        lt_ac_sed_list=\"$lt_ac_sed_list $as_dir/$lt_ac_prog$ac_exec_ext\"\n      fi\n    done\n  done\ndone\nIFS=$as_save_IFS\nlt_ac_max=0\nlt_ac_count=0\n# Add /usr/xpg4/bin/sed as it is typically found on Solaris\n# along with /bin/sed that truncates output.\nfor lt_ac_sed in $lt_ac_sed_list /usr/xpg4/bin/sed; do\n  test ! -f $lt_ac_sed && continue\n  cat /dev/null > conftest.in\n  lt_ac_count=0\n  echo $ECHO_N \"0123456789$ECHO_C\" >conftest.in\n  # Check for GNU sed and select it if it is found.\n  if \"$lt_ac_sed\" --version 2>&1 < /dev/null | grep 'GNU' > /dev/null; then\n    lt_cv_path_SED=$lt_ac_sed\n    break\n  fi\n  while true; do\n    cat conftest.in conftest.in >conftest.tmp\n    mv conftest.tmp conftest.in\n    cp conftest.in conftest.nl\n    echo >>conftest.nl\n    $lt_ac_sed -e 's/a$//' < conftest.nl >conftest.out || break\n    cmp -s conftest.out conftest.nl || break\n    # 10000 chars as input seems more than enough\n    test $lt_ac_count -gt 10 && break\n    lt_ac_count=`expr $lt_ac_count + 1`\n    if test $lt_ac_count -gt $lt_ac_max; then\n      lt_ac_max=$lt_ac_count\n      lt_cv_path_SED=$lt_ac_sed\n    fi\n  done\ndone\n])\nSED=$lt_cv_path_SED\nAC_SUBST([SED])\nAC_MSG_RESULT([$SED])\n])#AC_PROG_SED\n])#m4_ifndef\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_SED], [AC_PROG_SED])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_SED], [])\n\n\n# _LT_CHECK_SHELL_FEATURES\n# ------------------------\n# Find out whether the shell is Bourne or XSI compatible,\n# or has some other useful features.\nm4_defun([_LT_CHECK_SHELL_FEATURES],\n[AC_MSG_CHECKING([whether the shell understands some XSI constructs])\n# Try some XSI features\nxsi_shell=no\n( _lt_dummy=\"a/b/c\"\n  test \"${_lt_dummy##*/},${_lt_dummy%/*},${_lt_dummy#??}\"${_lt_dummy%\"$_lt_dummy\"}, \\\n      = c,a/b,b/c, \\\n    && eval 'test $(( 1 + 1 )) -eq 2 \\\n    && test \"${#_lt_dummy}\" -eq 5' ) >/dev/null 2>&1 \\\n  && xsi_shell=yes\nAC_MSG_RESULT([$xsi_shell])\n_LT_CONFIG_LIBTOOL_INIT([xsi_shell='$xsi_shell'])\n\nAC_MSG_CHECKING([whether the shell understands \"+=\"])\nlt_shell_append=no\n( foo=bar; set foo baz; eval \"$[1]+=\\$[2]\" && test \"$foo\" = barbaz ) \\\n    >/dev/null 2>&1 \\\n  && lt_shell_append=yes\nAC_MSG_RESULT([$lt_shell_append])\n_LT_CONFIG_LIBTOOL_INIT([lt_shell_append='$lt_shell_append'])\n\nif ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then\n  lt_unset=unset\nelse\n  lt_unset=false\nfi\n_LT_DECL([], [lt_unset], [0], [whether the shell understands \"unset\"])dnl\n\n# test EBCDIC or ASCII\ncase `echo X|tr X '\\101'` in\n A) # ASCII based system\n    # \\n is not interpreted correctly by Solaris 8 /usr/ucb/tr\n  lt_SP2NL='tr \\040 \\012'\n  lt_NL2SP='tr \\015\\012 \\040\\040'\n  ;;\n *) # EBCDIC based system\n  lt_SP2NL='tr \\100 \\n'\n  lt_NL2SP='tr \\r\\n \\100\\100'\n  ;;\nesac\n_LT_DECL([SP2NL], [lt_SP2NL], [1], [turn spaces into newlines])dnl\n_LT_DECL([NL2SP], [lt_NL2SP], [1], [turn newlines into spaces])dnl\n])# _LT_CHECK_SHELL_FEATURES\n\n\n# _LT_PROG_FUNCTION_REPLACE (FUNCNAME, REPLACEMENT-BODY)\n# ------------------------------------------------------\n# In `$cfgfile', look for function FUNCNAME delimited by `^FUNCNAME ()$' and\n# '^} FUNCNAME ', and replace its body with REPLACEMENT-BODY.\nm4_defun([_LT_PROG_FUNCTION_REPLACE],\n[dnl {\nsed -e '/^$1 ()$/,/^} # $1 /c\\\n$1 ()\\\n{\\\nm4_bpatsubsts([$2], [$], [\\\\], [^\\([\t ]\\)], [\\\\\\1])\n} # Extended-shell $1 implementation' \"$cfgfile\" > $cfgfile.tmp \\\n  && mv -f \"$cfgfile.tmp\" \"$cfgfile\" \\\n    || (rm -f \"$cfgfile\" && cp \"$cfgfile.tmp\" \"$cfgfile\" && rm -f \"$cfgfile.tmp\")\ntest 0 -eq $? || _lt_function_replace_fail=:\n])\n\n\n# _LT_PROG_REPLACE_SHELLFNS\n# -------------------------\n# Replace existing portable implementations of several shell functions with\n# equivalent extended shell implementations where those features are available..\nm4_defun([_LT_PROG_REPLACE_SHELLFNS],\n[if test x\"$xsi_shell\" = xyes; then\n  _LT_PROG_FUNCTION_REPLACE([func_dirname], [dnl\n    case ${1} in\n      */*) func_dirname_result=\"${1%/*}${2}\" ;;\n      *  ) func_dirname_result=\"${3}\" ;;\n    esac])\n\n  _LT_PROG_FUNCTION_REPLACE([func_basename], [dnl\n    func_basename_result=\"${1##*/}\"])\n\n  _LT_PROG_FUNCTION_REPLACE([func_dirname_and_basename], [dnl\n    case ${1} in\n      */*) func_dirname_result=\"${1%/*}${2}\" ;;\n      *  ) func_dirname_result=\"${3}\" ;;\n    esac\n    func_basename_result=\"${1##*/}\"])\n\n  _LT_PROG_FUNCTION_REPLACE([func_stripname], [dnl\n    # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are\n    # positional parameters, so assign one to ordinary parameter first.\n    func_stripname_result=${3}\n    func_stripname_result=${func_stripname_result#\"${1}\"}\n    func_stripname_result=${func_stripname_result%\"${2}\"}])\n\n  _LT_PROG_FUNCTION_REPLACE([func_split_long_opt], [dnl\n    func_split_long_opt_name=${1%%=*}\n    func_split_long_opt_arg=${1#*=}])\n\n  _LT_PROG_FUNCTION_REPLACE([func_split_short_opt], [dnl\n    func_split_short_opt_arg=${1#??}\n    func_split_short_opt_name=${1%\"$func_split_short_opt_arg\"}])\n\n  _LT_PROG_FUNCTION_REPLACE([func_lo2o], [dnl\n    case ${1} in\n      *.lo) func_lo2o_result=${1%.lo}.${objext} ;;\n      *)    func_lo2o_result=${1} ;;\n    esac])\n\n  _LT_PROG_FUNCTION_REPLACE([func_xform], [    func_xform_result=${1%.*}.lo])\n\n  _LT_PROG_FUNCTION_REPLACE([func_arith], [    func_arith_result=$(( $[*] ))])\n\n  _LT_PROG_FUNCTION_REPLACE([func_len], [    func_len_result=${#1}])\nfi\n\nif test x\"$lt_shell_append\" = xyes; then\n  _LT_PROG_FUNCTION_REPLACE([func_append], [    eval \"${1}+=\\\\${2}\"])\n\n  _LT_PROG_FUNCTION_REPLACE([func_append_quoted], [dnl\n    func_quote_for_eval \"${2}\"\ndnl m4 expansion turns \\\\\\\\ into \\\\, and then the shell eval turns that into \\\n    eval \"${1}+=\\\\\\\\ \\\\$func_quote_for_eval_result\"])\n\n  # Save a `func_append' function call where possible by direct use of '+='\n  sed -e 's%func_append \\([[a-zA-Z_]]\\{1,\\}\\) \"%\\1+=\"%g' $cfgfile > $cfgfile.tmp \\\n    && mv -f \"$cfgfile.tmp\" \"$cfgfile\" \\\n      || (rm -f \"$cfgfile\" && cp \"$cfgfile.tmp\" \"$cfgfile\" && rm -f \"$cfgfile.tmp\")\n  test 0 -eq $? || _lt_function_replace_fail=:\nelse\n  # Save a `func_append' function call even when '+=' is not available\n  sed -e 's%func_append \\([[a-zA-Z_]]\\{1,\\}\\) \"%\\1=\"$\\1%g' $cfgfile > $cfgfile.tmp \\\n    && mv -f \"$cfgfile.tmp\" \"$cfgfile\" \\\n      || (rm -f \"$cfgfile\" && cp \"$cfgfile.tmp\" \"$cfgfile\" && rm -f \"$cfgfile.tmp\")\n  test 0 -eq $? || _lt_function_replace_fail=:\nfi\n\nif test x\"$_lt_function_replace_fail\" = x\":\"; then\n  AC_MSG_WARN([Unable to substitute extended shell functions in $ofile])\nfi\n])\n\n# _LT_PATH_CONVERSION_FUNCTIONS\n# -----------------------------\n# Determine which file name conversion functions should be used by\n# func_to_host_file (and, implicitly, by func_to_host_path).  These are needed\n# for certain cross-compile configurations and native mingw.\nm4_defun([_LT_PATH_CONVERSION_FUNCTIONS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_MSG_CHECKING([how to convert $build file names to $host format])\nAC_CACHE_VAL(lt_cv_to_host_file_cmd,\n[case $host in\n  *-*-mingw* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_host_file_cmd=func_convert_file_msys_to_w32\n        ;;\n      *-*-cygwin* )\n        lt_cv_to_host_file_cmd=func_convert_file_cygwin_to_w32\n        ;;\n      * ) # otherwise, assume *nix\n        lt_cv_to_host_file_cmd=func_convert_file_nix_to_w32\n        ;;\n    esac\n    ;;\n  *-*-cygwin* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_host_file_cmd=func_convert_file_msys_to_cygwin\n        ;;\n      *-*-cygwin* )\n        lt_cv_to_host_file_cmd=func_convert_file_noop\n        ;;\n      * ) # otherwise, assume *nix\n        lt_cv_to_host_file_cmd=func_convert_file_nix_to_cygwin\n        ;;\n    esac\n    ;;\n  * ) # unhandled hosts (and \"normal\" native builds)\n    lt_cv_to_host_file_cmd=func_convert_file_noop\n    ;;\nesac\n])\nto_host_file_cmd=$lt_cv_to_host_file_cmd\nAC_MSG_RESULT([$lt_cv_to_host_file_cmd])\n_LT_DECL([to_host_file_cmd], [lt_cv_to_host_file_cmd],\n         [0], [convert $build file names to $host format])dnl\n\nAC_MSG_CHECKING([how to convert $build file names to toolchain format])\nAC_CACHE_VAL(lt_cv_to_tool_file_cmd,\n[#assume ordinary cross tools, or native build.\nlt_cv_to_tool_file_cmd=func_convert_file_noop\ncase $host in\n  *-*-mingw* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_tool_file_cmd=func_convert_file_msys_to_w32\n        ;;\n    esac\n    ;;\nesac\n])\nto_tool_file_cmd=$lt_cv_to_tool_file_cmd\nAC_MSG_RESULT([$lt_cv_to_tool_file_cmd])\n_LT_DECL([to_tool_file_cmd], [lt_cv_to_tool_file_cmd],\n         [0], [convert $build files to toolchain format])dnl\n])# _LT_PATH_CONVERSION_FUNCTIONS\n",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/build/ltoptions.m4": "# Helper functions for option handling.                    -*- Autoconf -*-\n#\n#   Copyright (C) 2004, 2005, 2007, 2008, 2009 Free Software Foundation,\n#   Inc.\n#   Written by Gary V. Vaughan, 2004\n#\n# This file is free software; the Free Software Foundation gives\n# unlimited permission to copy and/or distribute it, with or without\n# modifications, as long as this notice is preserved.\n\n# serial 7 ltoptions.m4\n\n# This is to help aclocal find these macros, as it can't see m4_define.\nAC_DEFUN([LTOPTIONS_VERSION], [m4_if([1])])\n\n\n# _LT_MANGLE_OPTION(MACRO-NAME, OPTION-NAME)\n# ------------------------------------------\nm4_define([_LT_MANGLE_OPTION],\n[[_LT_OPTION_]m4_bpatsubst($1__$2, [[^a-zA-Z0-9_]], [_])])\n\n\n# _LT_SET_OPTION(MACRO-NAME, OPTION-NAME)\n# ---------------------------------------\n# Set option OPTION-NAME for macro MACRO-NAME, and if there is a\n# matching handler defined, dispatch to it.  Other OPTION-NAMEs are\n# saved as a flag.\nm4_define([_LT_SET_OPTION],\n[m4_define(_LT_MANGLE_OPTION([$1], [$2]))dnl\nm4_ifdef(_LT_MANGLE_DEFUN([$1], [$2]),\n        _LT_MANGLE_DEFUN([$1], [$2]),\n    [m4_warning([Unknown $1 option `$2'])])[]dnl\n])\n\n\n# _LT_IF_OPTION(MACRO-NAME, OPTION-NAME, IF-SET, [IF-NOT-SET])\n# ------------------------------------------------------------\n# Execute IF-SET if OPTION is set, IF-NOT-SET otherwise.\nm4_define([_LT_IF_OPTION],\n[m4_ifdef(_LT_MANGLE_OPTION([$1], [$2]), [$3], [$4])])\n\n\n# _LT_UNLESS_OPTIONS(MACRO-NAME, OPTION-LIST, IF-NOT-SET)\n# -------------------------------------------------------\n# Execute IF-NOT-SET unless all options in OPTION-LIST for MACRO-NAME\n# are set.\nm4_define([_LT_UNLESS_OPTIONS],\n[m4_foreach([_LT_Option], m4_split(m4_normalize([$2])),\n\t    [m4_ifdef(_LT_MANGLE_OPTION([$1], _LT_Option),\n\t\t      [m4_define([$0_found])])])[]dnl\nm4_ifdef([$0_found], [m4_undefine([$0_found])], [$3\n])[]dnl\n])\n\n\n# _LT_SET_OPTIONS(MACRO-NAME, OPTION-LIST)\n# ----------------------------------------\n# OPTION-LIST is a space-separated list of Libtool options associated\n# with MACRO-NAME.  If any OPTION has a matching handler declared with\n# LT_OPTION_DEFINE, dispatch to that macro; otherwise complain about\n# the unknown option and exit.\nm4_defun([_LT_SET_OPTIONS],\n[# Set options\nm4_foreach([_LT_Option], m4_split(m4_normalize([$2])),\n    [_LT_SET_OPTION([$1], _LT_Option)])\n\nm4_if([$1],[LT_INIT],[\n  dnl\n  dnl Simply set some default values (i.e off) if boolean options were not\n  dnl specified:\n  _LT_UNLESS_OPTIONS([LT_INIT], [dlopen], [enable_dlopen=no\n  ])\n  _LT_UNLESS_OPTIONS([LT_INIT], [win32-dll], [enable_win32_dll=no\n  ])\n  dnl\n  dnl If no reference was made to various pairs of opposing options, then\n  dnl we run the default mode handler for the pair.  For example, if neither\n  dnl `shared' nor `disable-shared' was passed, we enable building of shared\n  dnl archives by default:\n  _LT_UNLESS_OPTIONS([LT_INIT], [shared disable-shared], [_LT_ENABLE_SHARED])\n  _LT_UNLESS_OPTIONS([LT_INIT], [static disable-static], [_LT_ENABLE_STATIC])\n  _LT_UNLESS_OPTIONS([LT_INIT], [pic-only no-pic], [_LT_WITH_PIC])\n  _LT_UNLESS_OPTIONS([LT_INIT], [fast-install disable-fast-install],\n  \t\t   [_LT_ENABLE_FAST_INSTALL])\n  ])\n])# _LT_SET_OPTIONS\n\n\n## --------------------------------- ##\n## Macros to handle LT_INIT options. ##\n## --------------------------------- ##\n\n# _LT_MANGLE_DEFUN(MACRO-NAME, OPTION-NAME)\n# -----------------------------------------\nm4_define([_LT_MANGLE_DEFUN],\n[[_LT_OPTION_DEFUN_]m4_bpatsubst(m4_toupper([$1__$2]), [[^A-Z0-9_]], [_])])\n\n\n# LT_OPTION_DEFINE(MACRO-NAME, OPTION-NAME, CODE)\n# -----------------------------------------------\nm4_define([LT_OPTION_DEFINE],\n[m4_define(_LT_MANGLE_DEFUN([$1], [$2]), [$3])[]dnl\n])# LT_OPTION_DEFINE\n\n\n# dlopen\n# ------\nLT_OPTION_DEFINE([LT_INIT], [dlopen], [enable_dlopen=yes\n])\n\nAU_DEFUN([AC_LIBTOOL_DLOPEN],\n[_LT_SET_OPTION([LT_INIT], [dlopen])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you\nput the `dlopen' option into LT_INIT's first parameter.])\n])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_DLOPEN], [])\n\n\n# win32-dll\n# ---------\n# Declare package support for building win32 dll's.\nLT_OPTION_DEFINE([LT_INIT], [win32-dll],\n[enable_win32_dll=yes\n\ncase $host in\n*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-cegcc*)\n  AC_CHECK_TOOL(AS, as, false)\n  AC_CHECK_TOOL(DLLTOOL, dlltool, false)\n  AC_CHECK_TOOL(OBJDUMP, objdump, false)\n  ;;\nesac\n\ntest -z \"$AS\" && AS=as\n_LT_DECL([], [AS],      [1], [Assembler program])dnl\n\ntest -z \"$DLLTOOL\" && DLLTOOL=dlltool\n_LT_DECL([], [DLLTOOL], [1], [DLL creation program])dnl\n\ntest -z \"$OBJDUMP\" && OBJDUMP=objdump\n_LT_DECL([], [OBJDUMP], [1], [Object dumper program])dnl\n])# win32-dll\n\nAU_DEFUN([AC_LIBTOOL_WIN32_DLL],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\n_LT_SET_OPTION([LT_INIT], [win32-dll])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you\nput the `win32-dll' option into LT_INIT's first parameter.])\n])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_WIN32_DLL], [])\n\n\n# _LT_ENABLE_SHARED([DEFAULT])\n# ----------------------------\n# implement the --enable-shared flag, and supports the `shared' and\n# `disable-shared' LT_INIT options.\n# DEFAULT is either `yes' or `no'.  If omitted, it defaults to `yes'.\nm4_define([_LT_ENABLE_SHARED],\n[m4_define([_LT_ENABLE_SHARED_DEFAULT], [m4_if($1, no, no, yes)])dnl\nAC_ARG_ENABLE([shared],\n    [AS_HELP_STRING([--enable-shared@<:@=PKGS@:>@],\n\t[build shared libraries @<:@default=]_LT_ENABLE_SHARED_DEFAULT[@:>@])],\n    [p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_shared=yes ;;\n    no) enable_shared=no ;;\n    *)\n      enable_shared=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=\"$IFS\"; IFS=\"${IFS}$PATH_SEPARATOR,\"\n      for pkg in $enableval; do\n\tIFS=\"$lt_save_ifs\"\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_shared=yes\n\tfi\n      done\n      IFS=\"$lt_save_ifs\"\n      ;;\n    esac],\n    [enable_shared=]_LT_ENABLE_SHARED_DEFAULT)\n\n    _LT_DECL([build_libtool_libs], [enable_shared], [0],\n\t[Whether or not to build shared libraries])\n])# _LT_ENABLE_SHARED\n\nLT_OPTION_DEFINE([LT_INIT], [shared], [_LT_ENABLE_SHARED([yes])])\nLT_OPTION_DEFINE([LT_INIT], [disable-shared], [_LT_ENABLE_SHARED([no])])\n\n# Old names:\nAC_DEFUN([AC_ENABLE_SHARED],\n[_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[shared])\n])\n\nAC_DEFUN([AC_DISABLE_SHARED],\n[_LT_SET_OPTION([LT_INIT], [disable-shared])\n])\n\nAU_DEFUN([AM_ENABLE_SHARED], [AC_ENABLE_SHARED($@)])\nAU_DEFUN([AM_DISABLE_SHARED], [AC_DISABLE_SHARED($@)])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_ENABLE_SHARED], [])\ndnl AC_DEFUN([AM_DISABLE_SHARED], [])\n\n\n\n# _LT_ENABLE_STATIC([DEFAULT])\n# ----------------------------\n# implement the --enable-static flag, and support the `static' and\n# `disable-static' LT_INIT options.\n# DEFAULT is either `yes' or `no'.  If omitted, it defaults to `yes'.\nm4_define([_LT_ENABLE_STATIC],\n[m4_define([_LT_ENABLE_STATIC_DEFAULT], [m4_if($1, no, no, yes)])dnl\nAC_ARG_ENABLE([static],\n    [AS_HELP_STRING([--enable-static@<:@=PKGS@:>@],\n\t[build static libraries @<:@default=]_LT_ENABLE_STATIC_DEFAULT[@:>@])],\n    [p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_static=yes ;;\n    no) enable_static=no ;;\n    *)\n     enable_static=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=\"$IFS\"; IFS=\"${IFS}$PATH_SEPARATOR,\"\n      for pkg in $enableval; do\n\tIFS=\"$lt_save_ifs\"\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_static=yes\n\tfi\n      done\n      IFS=\"$lt_save_ifs\"\n      ;;\n    esac],\n    [enable_static=]_LT_ENABLE_STATIC_DEFAULT)\n\n    _LT_DECL([build_old_libs], [enable_static], [0],\n\t[Whether or not to build static libraries])\n])# _LT_ENABLE_STATIC\n\nLT_OPTION_DEFINE([LT_INIT], [static], [_LT_ENABLE_STATIC([yes])])\nLT_OPTION_DEFINE([LT_INIT], [disable-static], [_LT_ENABLE_STATIC([no])])\n\n# Old names:\nAC_DEFUN([AC_ENABLE_STATIC],\n[_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[static])\n])\n\nAC_DEFUN([AC_DISABLE_STATIC],\n[_LT_SET_OPTION([LT_INIT], [disable-static])\n])\n\nAU_DEFUN([AM_ENABLE_STATIC], [AC_ENABLE_STATIC($@)])\nAU_DEFUN([AM_DISABLE_STATIC], [AC_DISABLE_STATIC($@)])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_ENABLE_STATIC], [])\ndnl AC_DEFUN([AM_DISABLE_STATIC], [])\n\n\n\n# _LT_ENABLE_FAST_INSTALL([DEFAULT])\n# ----------------------------------\n# implement the --enable-fast-install flag, and support the `fast-install'\n# and `disable-fast-install' LT_INIT options.\n# DEFAULT is either `yes' or `no'.  If omitted, it defaults to `yes'.\nm4_define([_LT_ENABLE_FAST_INSTALL],\n[m4_define([_LT_ENABLE_FAST_INSTALL_DEFAULT], [m4_if($1, no, no, yes)])dnl\nAC_ARG_ENABLE([fast-install],\n    [AS_HELP_STRING([--enable-fast-install@<:@=PKGS@:>@],\n    [optimize for fast installation @<:@default=]_LT_ENABLE_FAST_INSTALL_DEFAULT[@:>@])],\n    [p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_fast_install=yes ;;\n    no) enable_fast_install=no ;;\n    *)\n      enable_fast_install=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=\"$IFS\"; IFS=\"${IFS}$PATH_SEPARATOR,\"\n      for pkg in $enableval; do\n\tIFS=\"$lt_save_ifs\"\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_fast_install=yes\n\tfi\n      done\n      IFS=\"$lt_save_ifs\"\n      ;;\n    esac],\n    [enable_fast_install=]_LT_ENABLE_FAST_INSTALL_DEFAULT)\n\n_LT_DECL([fast_install], [enable_fast_install], [0],\n\t [Whether or not to optimize for fast installation])dnl\n])# _LT_ENABLE_FAST_INSTALL\n\nLT_OPTION_DEFINE([LT_INIT], [fast-install], [_LT_ENABLE_FAST_INSTALL([yes])])\nLT_OPTION_DEFINE([LT_INIT], [disable-fast-install], [_LT_ENABLE_FAST_INSTALL([no])])\n\n# Old names:\nAU_DEFUN([AC_ENABLE_FAST_INSTALL],\n[_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[fast-install])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you put\nthe `fast-install' option into LT_INIT's first parameter.])\n])\n\nAU_DEFUN([AC_DISABLE_FAST_INSTALL],\n[_LT_SET_OPTION([LT_INIT], [disable-fast-install])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you put\nthe `disable-fast-install' option into LT_INIT's first parameter.])\n])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_ENABLE_FAST_INSTALL], [])\ndnl AC_DEFUN([AM_DISABLE_FAST_INSTALL], [])\n\n\n# _LT_WITH_PIC([MODE])\n# --------------------\n# implement the --with-pic flag, and support the `pic-only' and `no-pic'\n# LT_INIT options.\n# MODE is either `yes' or `no'.  If omitted, it defaults to `both'.\nm4_define([_LT_WITH_PIC],\n[AC_ARG_WITH([pic],\n    [AS_HELP_STRING([--with-pic@<:@=PKGS@:>@],\n\t[try to use only PIC/non-PIC objects @<:@default=use both@:>@])],\n    [lt_p=${PACKAGE-default}\n    case $withval in\n    yes|no) pic_mode=$withval ;;\n    *)\n      pic_mode=default\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=\"$IFS\"; IFS=\"${IFS}$PATH_SEPARATOR,\"\n      for lt_pkg in $withval; do\n\tIFS=\"$lt_save_ifs\"\n\tif test \"X$lt_pkg\" = \"X$lt_p\"; then\n\t  pic_mode=yes\n\tfi\n      done\n      IFS=\"$lt_save_ifs\"\n      ;;\n    esac],\n    [pic_mode=default])\n\ntest -z \"$pic_mode\" && pic_mode=m4_default([$1], [default])\n\n_LT_DECL([], [pic_mode], [0], [What type of objects to build])dnl\n])# _LT_WITH_PIC\n\nLT_OPTION_DEFINE([LT_INIT], [pic-only], [_LT_WITH_PIC([yes])])\nLT_OPTION_DEFINE([LT_INIT], [no-pic], [_LT_WITH_PIC([no])])\n\n# Old name:\nAU_DEFUN([AC_LIBTOOL_PICMODE],\n[_LT_SET_OPTION([LT_INIT], [pic-only])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you\nput the `pic-only' option into LT_INIT's first parameter.])\n])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_PICMODE], [])\n\n## ----------------- ##\n## LTDL_INIT Options ##\n## ----------------- ##\n\nm4_define([_LTDL_MODE], [])\nLT_OPTION_DEFINE([LTDL_INIT], [nonrecursive],\n\t\t [m4_define([_LTDL_MODE], [nonrecursive])])\nLT_OPTION_DEFINE([LTDL_INIT], [recursive],\n\t\t [m4_define([_LTDL_MODE], [recursive])])\nLT_OPTION_DEFINE([LTDL_INIT], [subproject],\n\t\t [m4_define([_LTDL_MODE], [subproject])])\n\nm4_define([_LTDL_TYPE], [])\nLT_OPTION_DEFINE([LTDL_INIT], [installable],\n\t\t [m4_define([_LTDL_TYPE], [installable])])\nLT_OPTION_DEFINE([LTDL_INIT], [convenience],\n\t\t [m4_define([_LTDL_TYPE], [convenience])])\n",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/build/ltmain.sh": "\n# libtool (GNU libtool) 2.4.2\n# Written by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n\n# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2006,\n# 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# GNU Libtool is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# As a special exception to the GNU General Public License,\n# if you distribute this file as part of a program or library that\n# is built using GNU Libtool, you may include this file under the\n# same distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with GNU Libtool; see the file COPYING.  If not, a copy\n# can be downloaded from http://www.gnu.org/licenses/gpl.html,\n# or obtained by writing to the Free Software Foundation, Inc.,\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n# Usage: $progname [OPTION]... [MODE-ARG]...\n#\n# Provide generalized library-building support services.\n#\n#       --config             show all configuration variables\n#       --debug              enable verbose shell tracing\n#   -n, --dry-run            display commands without modifying any files\n#       --features           display basic configuration information and exit\n#       --mode=MODE          use operation mode MODE\n#       --preserve-dup-deps  don't remove duplicate dependency libraries\n#       --quiet, --silent    don't print informational messages\n#       --no-quiet, --no-silent\n#                            print informational messages (default)\n#       --no-warn            don't display warning messages\n#       --tag=TAG            use configuration variables from tag TAG\n#   -v, --verbose            print more informational messages than default\n#       --no-verbose         don't print the extra informational messages\n#       --version            print version information\n#   -h, --help, --help-all   print short, long, or detailed help message\n#\n# MODE must be one of the following:\n#\n#         clean              remove files from the build directory\n#         compile            compile a source file into a libtool object\n#         execute            automatically set library path, then run a program\n#         finish             complete the installation of libtool libraries\n#         install            install libraries or executables\n#         link               create a library or an executable\n#         uninstall          remove libraries from an installed directory\n#\n# MODE-ARGS vary depending on the MODE.  When passed as first option,\n# `--mode=MODE' may be abbreviated as `MODE' or a unique abbreviation of that.\n# Try `$progname --help --mode=MODE' for a more detailed description of MODE.\n#\n# When reporting a bug, please describe a test case to reproduce it and\n# include the following information:\n#\n#         host-triplet:\t$host\n#         shell:\t\t$SHELL\n#         compiler:\t\t$LTCC\n#         compiler flags:\t\t$LTCFLAGS\n#         linker:\t\t$LD (gnu? $with_gnu_ld)\n#         $progname:\t(GNU libtool) 2.4.2 Debian-2.4.2-1ubuntu1\n#         automake:\t$automake_version\n#         autoconf:\t$autoconf_version\n#\n# Report bugs to <bug-libtool@gnu.org>.\n# GNU libtool home page: <http://www.gnu.org/software/libtool/>.\n# General help using GNU software: <http://www.gnu.org/gethelp/>.\n\nPROGRAM=libtool\nPACKAGE=libtool\nVERSION=\"2.4.2 Debian-2.4.2-1ubuntu1\"\nTIMESTAMP=\"\"\npackage_revision=1.3337\n\n# Be Bourne compatible\nif test -n \"${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then\n  emulate sh\n  NULLCMD=:\n  # Zsh 3.x and 4.x performs word splitting on ${1+\"$@\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '${1+\"$@\"}'='\"$@\"'\n  setopt NO_GLOB_SUBST\nelse\n  case `(set -o) 2>/dev/null` in *posix*) set -o posix;; esac\nfi\nBIN_SH=xpg4; export BIN_SH # for Tru64\nDUALCASE=1; export DUALCASE # for MKS sh\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n$1\n_LTECHO_EOF'\n}\n\n# NLS nuisances: We save the old values to restore during execute mode.\nlt_user_locale=\nlt_safe_locale=\nfor lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\ndo\n  eval \"if test \\\"\\${$lt_var+set}\\\" = set; then\n          save_$lt_var=\\$$lt_var\n          $lt_var=C\n\t  export $lt_var\n\t  lt_user_locale=\\\"$lt_var=\\\\\\$save_\\$lt_var; \\$lt_user_locale\\\"\n\t  lt_safe_locale=\\\"$lt_var=C; \\$lt_safe_locale\\\"\n\tfi\"\ndone\nLC_ALL=C\nLANGUAGE=C\nexport LANGUAGE LC_ALL\n\n$lt_unset CDPATH\n\n\n# Work around backward compatibility issue on IRIX 6.5. On IRIX 6.4+, sh\n# is ksh but when the shell is invoked as \"sh\" and the current value of\n# the _XPG environment variable is not equal to 1 (one), the special\n# positional parameter $0, within a function call, is the name of the\n# function.\nprogpath=\"$0\"\n\n\n\n: ${CP=\"cp -f\"}\ntest \"${ECHO+set}\" = set || ECHO=${as_echo-'printf %s\\n'}\n: ${MAKE=\"make\"}\n: ${MKDIR=\"mkdir\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n: ${SHELL=\"${CONFIG_SHELL-/bin/sh}\"}\n: ${Xsed=\"$SED -e 1s/^X//\"}\n\n# Global variables:\nEXIT_SUCCESS=0\nEXIT_FAILURE=1\nEXIT_MISMATCH=63  # $? = 63 is used to indicate version mismatch to missing.\nEXIT_SKIP=77\t  # $? = 77 is used to indicate a skipped test to automake.\n\nexit_status=$EXIT_SUCCESS\n\n# Make sure IFS has a sensible default\nlt_nl='\n'\nIFS=\" \t$lt_nl\"\n\ndirname=\"s,/[^/]*$,,\"\nbasename=\"s,^.*/,,\"\n\n# func_dirname file append nondir_replacement\n# Compute the dirname of FILE.  If nonempty, add APPEND to the result,\n# otherwise set result to NONDIR_REPLACEMENT.\nfunc_dirname ()\n{\n    func_dirname_result=`$ECHO \"${1}\" | $SED \"$dirname\"`\n    if test \"X$func_dirname_result\" = \"X${1}\"; then\n      func_dirname_result=\"${3}\"\n    else\n      func_dirname_result=\"$func_dirname_result${2}\"\n    fi\n} # func_dirname may be replaced by extended shell implementation\n\n\n# func_basename file\nfunc_basename ()\n{\n    func_basename_result=`$ECHO \"${1}\" | $SED \"$basename\"`\n} # func_basename may be replaced by extended shell implementation\n\n\n# func_dirname_and_basename file append nondir_replacement\n# perform func_basename and func_dirname in a single function\n# call:\n#   dirname:  Compute the dirname of FILE.  If nonempty,\n#             add APPEND to the result, otherwise set result\n#             to NONDIR_REPLACEMENT.\n#             value returned in \"$func_dirname_result\"\n#   basename: Compute filename of FILE.\n#             value retuned in \"$func_basename_result\"\n# Implementation must be kept synchronized with func_dirname\n# and func_basename. For efficiency, we do not delegate to\n# those functions but instead duplicate the functionality here.\nfunc_dirname_and_basename ()\n{\n    # Extract subdirectory from the argument.\n    func_dirname_result=`$ECHO \"${1}\" | $SED -e \"$dirname\"`\n    if test \"X$func_dirname_result\" = \"X${1}\"; then\n      func_dirname_result=\"${3}\"\n    else\n      func_dirname_result=\"$func_dirname_result${2}\"\n    fi\n    func_basename_result=`$ECHO \"${1}\" | $SED -e \"$basename\"`\n} # func_dirname_and_basename may be replaced by extended shell implementation\n\n\n# func_stripname prefix suffix name\n# strip PREFIX and SUFFIX off of NAME.\n# PREFIX and SUFFIX must not contain globbing or regex special\n# characters, hashes, percent signs, but SUFFIX may contain a leading\n# dot (in which case that matches only a dot).\n# func_strip_suffix prefix name\nfunc_stripname ()\n{\n    case ${2} in\n      .*) func_stripname_result=`$ECHO \"${3}\" | $SED \"s%^${1}%%; s%\\\\\\\\${2}\\$%%\"`;;\n      *)  func_stripname_result=`$ECHO \"${3}\" | $SED \"s%^${1}%%; s%${2}\\$%%\"`;;\n    esac\n} # func_stripname may be replaced by extended shell implementation\n\n\n# These SED scripts presuppose an absolute path with a trailing slash.\npathcar='s,^/\\([^/]*\\).*$,\\1,'\npathcdr='s,^/[^/]*,,'\nremovedotparts=':dotsl\n\t\ts@/\\./@/@g\n\t\tt dotsl\n\t\ts,/\\.$,/,'\ncollapseslashes='s@/\\{1,\\}@/@g'\nfinalslash='s,/*$,/,'\n\n# func_normal_abspath PATH\n# Remove doubled-up and trailing slashes, \".\" path components,\n# and cancel out any \"..\" path components in PATH after making\n# it an absolute path.\n#             value returned in \"$func_normal_abspath_result\"\nfunc_normal_abspath ()\n{\n  # Start from root dir and reassemble the path.\n  func_normal_abspath_result=\n  func_normal_abspath_tpath=$1\n  func_normal_abspath_altnamespace=\n  case $func_normal_abspath_tpath in\n    \"\")\n      # Empty path, that just means $cwd.\n      func_stripname '' '/' \"`pwd`\"\n      func_normal_abspath_result=$func_stripname_result\n      return\n    ;;\n    # The next three entries are used to spot a run of precisely\n    # two leading slashes without using negated character classes;\n    # we take advantage of case's first-match behaviour.\n    ///*)\n      # Unusual form of absolute path, do nothing.\n    ;;\n    //*)\n      # Not necessarily an ordinary path; POSIX reserves leading '//'\n      # and for example Cygwin uses it to access remote file shares\n      # over CIFS/SMB, so we conserve a leading double slash if found.\n      func_normal_abspath_altnamespace=/\n    ;;\n    /*)\n      # Absolute path, do nothing.\n    ;;\n    *)\n      # Relative path, prepend $cwd.\n      func_normal_abspath_tpath=`pwd`/$func_normal_abspath_tpath\n    ;;\n  esac\n  # Cancel out all the simple stuff to save iterations.  We also want\n  # the path to end with a slash for ease of parsing, so make sure\n  # there is one (and only one) here.\n  func_normal_abspath_tpath=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n        -e \"$removedotparts\" -e \"$collapseslashes\" -e \"$finalslash\"`\n  while :; do\n    # Processed it all yet?\n    if test \"$func_normal_abspath_tpath\" = / ; then\n      # If we ascended to the root using \"..\" the result may be empty now.\n      if test -z \"$func_normal_abspath_result\" ; then\n        func_normal_abspath_result=/\n      fi\n      break\n    fi\n    func_normal_abspath_tcomponent=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n        -e \"$pathcar\"`\n    func_normal_abspath_tpath=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n        -e \"$pathcdr\"`\n    # Figure out what to do with it\n    case $func_normal_abspath_tcomponent in\n      \"\")\n        # Trailing empty path component, ignore it.\n      ;;\n      ..)\n        # Parent dir; strip last assembled component from result.\n        func_dirname \"$func_normal_abspath_result\"\n        func_normal_abspath_result=$func_dirname_result\n      ;;\n      *)\n        # Actual path component, append it.\n        func_normal_abspath_result=$func_normal_abspath_result/$func_normal_abspath_tcomponent\n      ;;\n    esac\n  done\n  # Restore leading double-slash if one was found on entry.\n  func_normal_abspath_result=$func_normal_abspath_altnamespace$func_normal_abspath_result\n}\n\n# func_relative_path SRCDIR DSTDIR\n# generates a relative path from SRCDIR to DSTDIR, with a trailing\n# slash if non-empty, suitable for immediately appending a filename\n# without needing to append a separator.\n#             value returned in \"$func_relative_path_result\"\nfunc_relative_path ()\n{\n  func_relative_path_result=\n  func_normal_abspath \"$1\"\n  func_relative_path_tlibdir=$func_normal_abspath_result\n  func_normal_abspath \"$2\"\n  func_relative_path_tbindir=$func_normal_abspath_result\n\n  # Ascend the tree starting from libdir\n  while :; do\n    # check if we have found a prefix of bindir\n    case $func_relative_path_tbindir in\n      $func_relative_path_tlibdir)\n        # found an exact match\n        func_relative_path_tcancelled=\n        break\n        ;;\n      $func_relative_path_tlibdir*)\n        # found a matching prefix\n        func_stripname \"$func_relative_path_tlibdir\" '' \"$func_relative_path_tbindir\"\n        func_relative_path_tcancelled=$func_stripname_result\n        if test -z \"$func_relative_path_result\"; then\n          func_relative_path_result=.\n        fi\n        break\n        ;;\n      *)\n        func_dirname $func_relative_path_tlibdir\n        func_relative_path_tlibdir=${func_dirname_result}\n        if test \"x$func_relative_path_tlibdir\" = x ; then\n          # Have to descend all the way to the root!\n          func_relative_path_result=../$func_relative_path_result\n          func_relative_path_tcancelled=$func_relative_path_tbindir\n          break\n        fi\n        func_relative_path_result=../$func_relative_path_result\n        ;;\n    esac\n  done\n\n  # Now calculate path; take care to avoid doubling-up slashes.\n  func_stripname '' '/' \"$func_relative_path_result\"\n  func_relative_path_result=$func_stripname_result\n  func_stripname '/' '/' \"$func_relative_path_tcancelled\"\n  if test \"x$func_stripname_result\" != x ; then\n    func_relative_path_result=${func_relative_path_result}/${func_stripname_result}\n  fi\n\n  # Normalisation. If bindir is libdir, return empty string,\n  # else relative path ending with a slash; either way, target\n  # file name can be directly appended.\n  if test ! -z \"$func_relative_path_result\"; then\n    func_stripname './' '' \"$func_relative_path_result/\"\n    func_relative_path_result=$func_stripname_result\n  fi\n}\n\n# The name of this program:\nfunc_dirname_and_basename \"$progpath\"\nprogname=$func_basename_result\n\n# Make sure we have an absolute path for reexecution:\ncase $progpath in\n  [\\\\/]*|[A-Za-z]:\\\\*) ;;\n  *[\\\\/]*)\n     progdir=$func_dirname_result\n     progdir=`cd \"$progdir\" && pwd`\n     progpath=\"$progdir/$progname\"\n     ;;\n  *)\n     save_IFS=\"$IFS\"\n     IFS=${PATH_SEPARATOR-:}\n     for progdir in $PATH; do\n       IFS=\"$save_IFS\"\n       test -x \"$progdir/$progname\" && break\n     done\n     IFS=\"$save_IFS\"\n     test -n \"$progdir\" || progdir=`pwd`\n     progpath=\"$progdir/$progname\"\n     ;;\nesac\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nXsed=\"${SED}\"' -e 1s/^X//'\nsed_quote_subst='s/\\([`\"$\\\\]\\)/\\\\\\1/g'\n\n# Same as above, but do not quote variable references.\ndouble_quote_subst='s/\\([\"`\\\\]\\)/\\\\\\1/g'\n\n# Sed substitution that turns a string into a regex matching for the\n# string literally.\nsed_make_literal_regex='s,[].[^$\\\\*\\/],\\\\&,g'\n\n# Sed substitution that converts a w32 file name or path\n# which contains forward slashes, into one that contains\n# (escaped) backslashes.  A very naive implementation.\nlt_sed_naive_backslashify='s|\\\\\\\\*|\\\\|g;s|/|\\\\|g;s|\\\\|\\\\\\\\|g'\n\n# Re-`\\' parameter expansions in output of double_quote_subst that were\n# `\\'-ed in input to the same.  If an odd number of `\\' preceded a '$'\n# in input to double_quote_subst, that '$' was protected from expansion.\n# Since each input `\\' is now two `\\'s, look for any number of runs of\n# four `\\'s followed by two `\\'s and then a '$'.  `\\' that '$'.\nbs='\\\\'\nbs2='\\\\\\\\'\nbs4='\\\\\\\\\\\\\\\\'\ndollar='\\$'\nsed_double_backslash=\"\\\n  s/$bs4/&\\\\\n/g\n  s/^$bs2$dollar/$bs&/\n  s/\\\\([^$bs]\\\\)$bs2$dollar/\\\\1$bs2$bs$dollar/g\n  s/\\n//g\"\n\n# Standard options:\nopt_dry_run=false\nopt_help=false\nopt_quiet=false\nopt_verbose=false\nopt_warning=:\n\n# func_echo arg...\n# Echo program name prefixed message, along with the current mode\n# name if it has been set yet.\nfunc_echo ()\n{\n    $ECHO \"$progname: ${opt_mode+$opt_mode: }$*\"\n}\n\n# func_verbose arg...\n# Echo program name prefixed message in verbose mode only.\nfunc_verbose ()\n{\n    $opt_verbose && func_echo ${1+\"$@\"}\n\n    # A bug in bash halts the script if the last line of a function\n    # fails when set -e is in force, so we need another command to\n    # work around that:\n    :\n}\n\n# func_echo_all arg...\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"$*\"\n}\n\n# func_error arg...\n# Echo program name prefixed message to standard error.\nfunc_error ()\n{\n    $ECHO \"$progname: ${opt_mode+$opt_mode: }\"${1+\"$@\"} 1>&2\n}\n\n# func_warning arg...\n# Echo program name prefixed warning message to standard error.\nfunc_warning ()\n{\n    $opt_warning && $ECHO \"$progname: ${opt_mode+$opt_mode: }warning: \"${1+\"$@\"} 1>&2\n\n    # bash bug again:\n    :\n}\n\n# func_fatal_error arg...\n# Echo program name prefixed message to standard error, and exit.\nfunc_fatal_error ()\n{\n    func_error ${1+\"$@\"}\n    exit $EXIT_FAILURE\n}\n\n# func_fatal_help arg...\n# Echo program name prefixed message to standard error, followed by\n# a help hint, and exit.\nfunc_fatal_help ()\n{\n    func_error ${1+\"$@\"}\n    func_fatal_error \"$help\"\n}\nhelp=\"Try \\`$progname --help' for more information.\"  ## default\n\n\n# func_grep expression filename\n# Check whether EXPRESSION matches any line of FILENAME, without output.\nfunc_grep ()\n{\n    $GREP \"$1\" \"$2\" >/dev/null 2>&1\n}\n\n\n# func_mkdir_p directory-path\n# Make sure the entire path to DIRECTORY-PATH is available.\nfunc_mkdir_p ()\n{\n    my_directory_path=\"$1\"\n    my_dir_list=\n\n    if test -n \"$my_directory_path\" && test \"$opt_dry_run\" != \":\"; then\n\n      # Protect directory names starting with `-'\n      case $my_directory_path in\n        -*) my_directory_path=\"./$my_directory_path\" ;;\n      esac\n\n      # While some portion of DIR does not yet exist...\n      while test ! -d \"$my_directory_path\"; do\n        # ...make a list in topmost first order.  Use a colon delimited\n\t# list incase some portion of path contains whitespace.\n        my_dir_list=\"$my_directory_path:$my_dir_list\"\n\n        # If the last portion added has no slash in it, the list is done\n        case $my_directory_path in */*) ;; *) break ;; esac\n\n        # ...otherwise throw away the child directory and loop\n        my_directory_path=`$ECHO \"$my_directory_path\" | $SED -e \"$dirname\"`\n      done\n      my_dir_list=`$ECHO \"$my_dir_list\" | $SED 's,:*$,,'`\n\n      save_mkdir_p_IFS=\"$IFS\"; IFS=':'\n      for my_dir in $my_dir_list; do\n\tIFS=\"$save_mkdir_p_IFS\"\n        # mkdir can fail with a `File exist' error if two processes\n        # try to create one of the directories concurrently.  Don't\n        # stop in that case!\n        $MKDIR \"$my_dir\" 2>/dev/null || :\n      done\n      IFS=\"$save_mkdir_p_IFS\"\n\n      # Bail out if we (or some other process) failed to create a directory.\n      test -d \"$my_directory_path\" || \\\n        func_fatal_error \"Failed to create \\`$1'\"\n    fi\n}\n\n\n# func_mktempdir [string]\n# Make a temporary directory that won't clash with other running\n# libtool processes, and avoids race conditions if possible.  If\n# given, STRING is the basename for that directory.\nfunc_mktempdir ()\n{\n    my_template=\"${TMPDIR-/tmp}/${1-$progname}\"\n\n    if test \"$opt_dry_run\" = \":\"; then\n      # Return a directory name, but don't create it in dry-run mode\n      my_tmpdir=\"${my_template}-$$\"\n    else\n\n      # If mktemp works, use that first and foremost\n      my_tmpdir=`mktemp -d \"${my_template}-XXXXXXXX\" 2>/dev/null`\n\n      if test ! -d \"$my_tmpdir\"; then\n        # Failing that, at least try and use $RANDOM to avoid a race\n        my_tmpdir=\"${my_template}-${RANDOM-0}$$\"\n\n        save_mktempdir_umask=`umask`\n        umask 0077\n        $MKDIR \"$my_tmpdir\"\n        umask $save_mktempdir_umask\n      fi\n\n      # If we're not in dry-run mode, bomb out on failure\n      test -d \"$my_tmpdir\" || \\\n        func_fatal_error \"cannot create temporary directory \\`$my_tmpdir'\"\n    fi\n\n    $ECHO \"$my_tmpdir\"\n}\n\n\n# func_quote_for_eval arg\n# Aesthetically quote ARG to be evaled later.\n# This function returns two values: FUNC_QUOTE_FOR_EVAL_RESULT\n# is double-quoted, suitable for a subsequent eval, whereas\n# FUNC_QUOTE_FOR_EVAL_UNQUOTED_RESULT has merely all characters\n# which are still active within double quotes backslashified.\nfunc_quote_for_eval ()\n{\n    case $1 in\n      *[\\\\\\`\\\"\\$]*)\n\tfunc_quote_for_eval_unquoted_result=`$ECHO \"$1\" | $SED \"$sed_quote_subst\"` ;;\n      *)\n        func_quote_for_eval_unquoted_result=\"$1\" ;;\n    esac\n\n    case $func_quote_for_eval_unquoted_result in\n      # Double-quote args containing shell metacharacters to delay\n      # word splitting, command substitution and and variable\n      # expansion for a subsequent eval.\n      # Many Bourne shells cannot handle close brackets correctly\n      # in scan sets, so we specify it separately.\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n        func_quote_for_eval_result=\"\\\"$func_quote_for_eval_unquoted_result\\\"\"\n        ;;\n      *)\n        func_quote_for_eval_result=\"$func_quote_for_eval_unquoted_result\"\n    esac\n}\n\n\n# func_quote_for_expand arg\n# Aesthetically quote ARG to be evaled later; same as above,\n# but do not quote variable references.\nfunc_quote_for_expand ()\n{\n    case $1 in\n      *[\\\\\\`\\\"]*)\n\tmy_arg=`$ECHO \"$1\" | $SED \\\n\t    -e \"$double_quote_subst\" -e \"$sed_double_backslash\"` ;;\n      *)\n        my_arg=\"$1\" ;;\n    esac\n\n    case $my_arg in\n      # Double-quote args containing shell metacharacters to delay\n      # word splitting and command substitution for a subsequent eval.\n      # Many Bourne shells cannot handle close brackets correctly\n      # in scan sets, so we specify it separately.\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n        my_arg=\"\\\"$my_arg\\\"\"\n        ;;\n    esac\n\n    func_quote_for_expand_result=\"$my_arg\"\n}\n\n\n# func_show_eval cmd [fail_exp]\n# Unless opt_silent is true, then output CMD.  Then, if opt_dryrun is\n# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP\n# is given, then evaluate it.\nfunc_show_eval ()\n{\n    my_cmd=\"$1\"\n    my_fail_exp=\"${2-:}\"\n\n    ${opt_silent-false} || {\n      func_quote_for_expand \"$my_cmd\"\n      eval \"func_echo $func_quote_for_expand_result\"\n    }\n\n    if ${opt_dry_run-false}; then :; else\n      eval \"$my_cmd\"\n      my_status=$?\n      if test \"$my_status\" -eq 0; then :; else\n\teval \"(exit $my_status); $my_fail_exp\"\n      fi\n    fi\n}\n\n\n# func_show_eval_locale cmd [fail_exp]\n# Unless opt_silent is true, then output CMD.  Then, if opt_dryrun is\n# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP\n# is given, then evaluate it.  Use the saved locale for evaluation.\nfunc_show_eval_locale ()\n{\n    my_cmd=\"$1\"\n    my_fail_exp=\"${2-:}\"\n\n    ${opt_silent-false} || {\n      func_quote_for_expand \"$my_cmd\"\n      eval \"func_echo $func_quote_for_expand_result\"\n    }\n\n    if ${opt_dry_run-false}; then :; else\n      eval \"$lt_user_locale\n\t    $my_cmd\"\n      my_status=$?\n      eval \"$lt_safe_locale\"\n      if test \"$my_status\" -eq 0; then :; else\n\teval \"(exit $my_status); $my_fail_exp\"\n      fi\n    fi\n}\n\n# func_tr_sh\n# Turn $1 into a string suitable for a shell variable name.\n# Result is stored in $func_tr_sh_result.  All characters\n# not in the set a-zA-Z0-9_ are replaced with '_'. Further,\n# if $1 begins with a digit, a '_' is prepended as well.\nfunc_tr_sh ()\n{\n  case $1 in\n  [0-9]* | *[!a-zA-Z0-9_]*)\n    func_tr_sh_result=`$ECHO \"$1\" | $SED 's/^\\([0-9]\\)/_\\1/; s/[^a-zA-Z0-9_]/_/g'`\n    ;;\n  * )\n    func_tr_sh_result=$1\n    ;;\n  esac\n}\n\n\n# func_version\n# Echo version message to standard output and exit.\nfunc_version ()\n{\n    $opt_debug\n\n    $SED -n '/(C)/!b go\n\t:more\n\t/\\./!{\n\t  N\n\t  s/\\n# / /\n\t  b more\n\t}\n\t:go\n\t/^# '$PROGRAM' (GNU /,/# warranty; / {\n        s/^# //\n\ts/^# *$//\n        s/\\((C)\\)[ 0-9,-]*\\( [1-9][0-9]*\\)/\\1\\2/\n        p\n     }' < \"$progpath\"\n     exit $?\n}\n\n# func_usage\n# Echo short help message to standard output and exit.\nfunc_usage ()\n{\n    $opt_debug\n\n    $SED -n '/^# Usage:/,/^#  *.*--help/ {\n        s/^# //\n\ts/^# *$//\n\ts/\\$progname/'$progname'/\n\tp\n    }' < \"$progpath\"\n    echo\n    $ECHO \"run \\`$progname --help | more' for full usage\"\n    exit $?\n}\n\n# func_help [NOEXIT]\n# Echo long help message to standard output and exit,\n# unless 'noexit' is passed as argument.\nfunc_help ()\n{\n    $opt_debug\n\n    $SED -n '/^# Usage:/,/# Report bugs to/ {\n\t:print\n        s/^# //\n\ts/^# *$//\n\ts*\\$progname*'$progname'*\n\ts*\\$host*'\"$host\"'*\n\ts*\\$SHELL*'\"$SHELL\"'*\n\ts*\\$LTCC*'\"$LTCC\"'*\n\ts*\\$LTCFLAGS*'\"$LTCFLAGS\"'*\n\ts*\\$LD*'\"$LD\"'*\n\ts/\\$with_gnu_ld/'\"$with_gnu_ld\"'/\n\ts/\\$automake_version/'\"`(${AUTOMAKE-automake} --version) 2>/dev/null |$SED 1q`\"'/\n\ts/\\$autoconf_version/'\"`(${AUTOCONF-autoconf} --version) 2>/dev/null |$SED 1q`\"'/\n\tp\n\td\n     }\n     /^# .* home page:/b print\n     /^# General help using/b print\n     ' < \"$progpath\"\n    ret=$?\n    if test -z \"$1\"; then\n      exit $ret\n    fi\n}\n\n# func_missing_arg argname\n# Echo program name prefixed message to standard error and set global\n# exit_cmd.\nfunc_missing_arg ()\n{\n    $opt_debug\n\n    func_error \"missing argument for $1.\"\n    exit_cmd=exit\n}\n\n\n# func_split_short_opt shortopt\n# Set func_split_short_opt_name and func_split_short_opt_arg shell\n# variables after splitting SHORTOPT after the 2nd character.\nfunc_split_short_opt ()\n{\n    my_sed_short_opt='1s/^\\(..\\).*$/\\1/;q'\n    my_sed_short_rest='1s/^..\\(.*\\)$/\\1/;q'\n\n    func_split_short_opt_name=`$ECHO \"$1\" | $SED \"$my_sed_short_opt\"`\n    func_split_short_opt_arg=`$ECHO \"$1\" | $SED \"$my_sed_short_rest\"`\n} # func_split_short_opt may be replaced by extended shell implementation\n\n\n# func_split_long_opt longopt\n# Set func_split_long_opt_name and func_split_long_opt_arg shell\n# variables after splitting LONGOPT at the `=' sign.\nfunc_split_long_opt ()\n{\n    my_sed_long_opt='1s/^\\(--[^=]*\\)=.*/\\1/;q'\n    my_sed_long_arg='1s/^--[^=]*=//'\n\n    func_split_long_opt_name=`$ECHO \"$1\" | $SED \"$my_sed_long_opt\"`\n    func_split_long_opt_arg=`$ECHO \"$1\" | $SED \"$my_sed_long_arg\"`\n} # func_split_long_opt may be replaced by extended shell implementation\n\nexit_cmd=:\n\n\n\n\n\nmagic=\"%%%MAGIC variable%%%\"\nmagic_exe=\"%%%MAGIC EXE variable%%%\"\n\n# Global variables.\nnonopt=\npreserve_args=\nlo2o=\"s/\\\\.lo\\$/.${objext}/\"\no2lo=\"s/\\\\.${objext}\\$/.lo/\"\nextracted_archives=\nextracted_serial=0\n\n# If this variable is set in any of the actions, the command in it\n# will be execed at the end.  This prevents here-documents from being\n# left over by shells.\nexec_cmd=\n\n# func_append var value\n# Append VALUE to the end of shell variable VAR.\nfunc_append ()\n{\n    eval \"${1}=\\$${1}\\${2}\"\n} # func_append may be replaced by extended shell implementation\n\n# func_append_quoted var value\n# Quote VALUE and append to the end of shell variable VAR, separated\n# by a space.\nfunc_append_quoted ()\n{\n    func_quote_for_eval \"${2}\"\n    eval \"${1}=\\$${1}\\\\ \\$func_quote_for_eval_result\"\n} # func_append_quoted may be replaced by extended shell implementation\n\n\n# func_arith arithmetic-term...\nfunc_arith ()\n{\n    func_arith_result=`expr \"${@}\"`\n} # func_arith may be replaced by extended shell implementation\n\n\n# func_len string\n# STRING may not start with a hyphen.\nfunc_len ()\n{\n    func_len_result=`expr \"${1}\" : \".*\" 2>/dev/null || echo $max_cmd_len`\n} # func_len may be replaced by extended shell implementation\n\n\n# func_lo2o object\nfunc_lo2o ()\n{\n    func_lo2o_result=`$ECHO \"${1}\" | $SED \"$lo2o\"`\n} # func_lo2o may be replaced by extended shell implementation\n\n\n# func_xform libobj-or-source\nfunc_xform ()\n{\n    func_xform_result=`$ECHO \"${1}\" | $SED 's/\\.[^.]*$/.lo/'`\n} # func_xform may be replaced by extended shell implementation\n\n\n# func_fatal_configuration arg...\n# Echo program name prefixed message to standard error, followed by\n# a configuration failure hint, and exit.\nfunc_fatal_configuration ()\n{\n    func_error ${1+\"$@\"}\n    func_error \"See the $PACKAGE documentation for more information.\"\n    func_fatal_error \"Fatal configuration error.\"\n}\n\n\n# func_config\n# Display the configuration for all the tags in this script.\nfunc_config ()\n{\n    re_begincf='^# ### BEGIN LIBTOOL'\n    re_endcf='^# ### END LIBTOOL'\n\n    # Default configuration.\n    $SED \"1,/$re_begincf CONFIG/d;/$re_endcf CONFIG/,\\$d\" < \"$progpath\"\n\n    # Now print the configurations for the tags.\n    for tagname in $taglist; do\n      $SED -n \"/$re_begincf TAG CONFIG: $tagname\\$/,/$re_endcf TAG CONFIG: $tagname\\$/p\" < \"$progpath\"\n    done\n\n    exit $?\n}\n\n# func_features\n# Display the features supported by this script.\nfunc_features ()\n{\n    echo \"host: $host\"\n    if test \"$build_libtool_libs\" = yes; then\n      echo \"enable shared libraries\"\n    else\n      echo \"disable shared libraries\"\n    fi\n    if test \"$build_old_libs\" = yes; then\n      echo \"enable static libraries\"\n    else\n      echo \"disable static libraries\"\n    fi\n\n    exit $?\n}\n\n# func_enable_tag tagname\n# Verify that TAGNAME is valid, and either flag an error and exit, or\n# enable the TAGNAME tag.  We also add TAGNAME to the global $taglist\n# variable here.\nfunc_enable_tag ()\n{\n  # Global variable:\n  tagname=\"$1\"\n\n  re_begincf=\"^# ### BEGIN LIBTOOL TAG CONFIG: $tagname\\$\"\n  re_endcf=\"^# ### END LIBTOOL TAG CONFIG: $tagname\\$\"\n  sed_extractcf=\"/$re_begincf/,/$re_endcf/p\"\n\n  # Validate tagname.\n  case $tagname in\n    *[!-_A-Za-z0-9,/]*)\n      func_fatal_error \"invalid tag name: $tagname\"\n      ;;\n  esac\n\n  # Don't test for the \"default\" C tag, as we know it's\n  # there but not specially marked.\n  case $tagname in\n    CC) ;;\n    *)\n      if $GREP \"$re_begincf\" \"$progpath\" >/dev/null 2>&1; then\n\ttaglist=\"$taglist $tagname\"\n\n\t# Evaluate the configuration.  Be careful to quote the path\n\t# and the sed script, to avoid splitting on whitespace, but\n\t# also don't use non-portable quotes within backquotes within\n\t# quotes we have to do it in 2 steps:\n\textractedcf=`$SED -n -e \"$sed_extractcf\" < \"$progpath\"`\n\teval \"$extractedcf\"\n      else\n\tfunc_error \"ignoring unknown tag $tagname\"\n      fi\n      ;;\n  esac\n}\n\n# func_check_version_match\n# Ensure that we are using m4 macros, and libtool script from the same\n# release of libtool.\nfunc_check_version_match ()\n{\n  if test \"$package_revision\" != \"$macro_revision\"; then\n    if test \"$VERSION\" != \"$macro_version\"; then\n      if test -z \"$macro_version\"; then\n        cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from an older release.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n      else\n        cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from $PACKAGE $macro_version.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n      fi\n    else\n      cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, revision $package_revision,\n$progname: but the definition of this LT_INIT comes from revision $macro_revision.\n$progname: You should recreate aclocal.m4 with macros from revision $package_revision\n$progname: of $PACKAGE $VERSION and run autoconf again.\n_LT_EOF\n    fi\n\n    exit $EXIT_MISMATCH\n  fi\n}\n\n\n# Shorthand for --mode=foo, only valid as the first argument\ncase $1 in\nclean|clea|cle|cl)\n  shift; set dummy --mode clean ${1+\"$@\"}; shift\n  ;;\ncompile|compil|compi|comp|com|co|c)\n  shift; set dummy --mode compile ${1+\"$@\"}; shift\n  ;;\nexecute|execut|execu|exec|exe|ex|e)\n  shift; set dummy --mode execute ${1+\"$@\"}; shift\n  ;;\nfinish|finis|fini|fin|fi|f)\n  shift; set dummy --mode finish ${1+\"$@\"}; shift\n  ;;\ninstall|instal|insta|inst|ins|in|i)\n  shift; set dummy --mode install ${1+\"$@\"}; shift\n  ;;\nlink|lin|li|l)\n  shift; set dummy --mode link ${1+\"$@\"}; shift\n  ;;\nuninstall|uninstal|uninsta|uninst|unins|unin|uni|un|u)\n  shift; set dummy --mode uninstall ${1+\"$@\"}; shift\n  ;;\nesac\n\n\n\n# Option defaults:\nopt_debug=:\nopt_dry_run=false\nopt_config=false\nopt_preserve_dup_deps=false\nopt_features=false\nopt_finish=false\nopt_help=false\nopt_help_all=false\nopt_silent=:\nopt_warning=:\nopt_verbose=:\nopt_silent=false\nopt_verbose=false\n\n\n# Parse options once, thoroughly.  This comes as soon as possible in the\n# script to make things like `--version' happen as quickly as we can.\n{\n  # this just eases exit handling\n  while test $# -gt 0; do\n    opt=\"$1\"\n    shift\n    case $opt in\n      --debug|-x)\topt_debug='set -x'\n\t\t\tfunc_echo \"enabling shell trace mode\"\n\t\t\t$opt_debug\n\t\t\t;;\n      --dry-run|--dryrun|-n)\n\t\t\topt_dry_run=:\n\t\t\t;;\n      --config)\n\t\t\topt_config=:\nfunc_config\n\t\t\t;;\n      --dlopen|-dlopen)\n\t\t\toptarg=\"$1\"\n\t\t\topt_dlopen=\"${opt_dlopen+$opt_dlopen\n}$optarg\"\n\t\t\tshift\n\t\t\t;;\n      --preserve-dup-deps)\n\t\t\topt_preserve_dup_deps=:\n\t\t\t;;\n      --features)\n\t\t\topt_features=:\nfunc_features\n\t\t\t;;\n      --finish)\n\t\t\topt_finish=:\nset dummy --mode finish ${1+\"$@\"}; shift\n\t\t\t;;\n      --help)\n\t\t\topt_help=:\n\t\t\t;;\n      --help-all)\n\t\t\topt_help_all=:\nopt_help=': help-all'\n\t\t\t;;\n      --mode)\n\t\t\ttest $# = 0 && func_missing_arg $opt && break\n\t\t\toptarg=\"$1\"\n\t\t\topt_mode=\"$optarg\"\ncase $optarg in\n  # Valid mode arguments:\n  clean|compile|execute|finish|install|link|relink|uninstall) ;;\n\n  # Catch anything else as an error\n  *) func_error \"invalid argument for $opt\"\n     exit_cmd=exit\n     break\n     ;;\nesac\n\t\t\tshift\n\t\t\t;;\n      --no-silent|--no-quiet)\n\t\t\topt_silent=false\nfunc_append preserve_args \" $opt\"\n\t\t\t;;\n      --no-warning|--no-warn)\n\t\t\topt_warning=false\nfunc_append preserve_args \" $opt\"\n\t\t\t;;\n      --no-verbose)\n\t\t\topt_verbose=false\nfunc_append preserve_args \" $opt\"\n\t\t\t;;\n      --silent|--quiet)\n\t\t\topt_silent=:\nfunc_append preserve_args \" $opt\"\n        opt_verbose=false\n\t\t\t;;\n      --verbose|-v)\n\t\t\topt_verbose=:\nfunc_append preserve_args \" $opt\"\nopt_silent=false\n\t\t\t;;\n      --tag)\n\t\t\ttest $# = 0 && func_missing_arg $opt && break\n\t\t\toptarg=\"$1\"\n\t\t\topt_tag=\"$optarg\"\nfunc_append preserve_args \" $opt $optarg\"\nfunc_enable_tag \"$optarg\"\n\t\t\tshift\n\t\t\t;;\n\n      -\\?|-h)\t\tfunc_usage\t\t\t\t;;\n      --help)\t\tfunc_help\t\t\t\t;;\n      --version)\tfunc_version\t\t\t\t;;\n\n      # Separate optargs to long options:\n      --*=*)\n\t\t\tfunc_split_long_opt \"$opt\"\n\t\t\tset dummy \"$func_split_long_opt_name\" \"$func_split_long_opt_arg\" ${1+\"$@\"}\n\t\t\tshift\n\t\t\t;;\n\n      # Separate non-argument short options:\n      -\\?*|-h*|-n*|-v*)\n\t\t\tfunc_split_short_opt \"$opt\"\n\t\t\tset dummy \"$func_split_short_opt_name\" \"-$func_split_short_opt_arg\" ${1+\"$@\"}\n\t\t\tshift\n\t\t\t;;\n\n      --)\t\tbreak\t\t\t\t\t;;\n      -*)\t\tfunc_fatal_help \"unrecognized option \\`$opt'\" ;;\n      *)\t\tset dummy \"$opt\" ${1+\"$@\"};\tshift; break  ;;\n    esac\n  done\n\n  # Validate options:\n\n  # save first non-option argument\n  if test \"$#\" -gt 0; then\n    nonopt=\"$opt\"\n    shift\n  fi\n\n  # preserve --debug\n  test \"$opt_debug\" = : || func_append preserve_args \" --debug\"\n\n  case $host in\n    *cygwin* | *mingw* | *pw32* | *cegcc*)\n      # don't eliminate duplications in $postdeps and $predeps\n      opt_duplicate_compiler_generated_deps=:\n      ;;\n    *)\n      opt_duplicate_compiler_generated_deps=$opt_preserve_dup_deps\n      ;;\n  esac\n\n  $opt_help || {\n    # Sanity checks first:\n    func_check_version_match\n\n    if test \"$build_libtool_libs\" != yes && test \"$build_old_libs\" != yes; then\n      func_fatal_configuration \"not configured to build any kind of library\"\n    fi\n\n    # Darwin sucks\n    eval std_shrext=\\\"$shrext_cmds\\\"\n\n    # Only execute mode is allowed to have -dlopen flags.\n    if test -n \"$opt_dlopen\" && test \"$opt_mode\" != execute; then\n      func_error \"unrecognized option \\`-dlopen'\"\n      $ECHO \"$help\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n\n    # Change the help message to a mode-specific one.\n    generic_help=\"$help\"\n    help=\"Try \\`$progname --help --mode=$opt_mode' for more information.\"\n  }\n\n\n  # Bail if the options were screwed\n  $exit_cmd $EXIT_FAILURE\n}\n\n\n\n\n## ----------- ##\n##    Main.    ##\n## ----------- ##\n\n# func_lalib_p file\n# True iff FILE is a libtool `.la' library or `.lo' object file.\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_lalib_p ()\n{\n    test -f \"$1\" &&\n      $SED -e 4q \"$1\" 2>/dev/null \\\n        | $GREP \"^# Generated by .*$PACKAGE\" > /dev/null 2>&1\n}\n\n# func_lalib_unsafe_p file\n# True iff FILE is a libtool `.la' library or `.lo' object file.\n# This function implements the same check as func_lalib_p without\n# resorting to external programs.  To this end, it redirects stdin and\n# closes it afterwards, without saving the original file descriptor.\n# As a safety measure, use it only where a negative result would be\n# fatal anyway.  Works if `file' does not exist.\nfunc_lalib_unsafe_p ()\n{\n    lalib_p=no\n    if test -f \"$1\" && test -r \"$1\" && exec 5<&0 <\"$1\"; then\n\tfor lalib_p_l in 1 2 3 4\n\tdo\n\t    read lalib_p_line\n\t    case \"$lalib_p_line\" in\n\t\t\\#\\ Generated\\ by\\ *$PACKAGE* ) lalib_p=yes; break;;\n\t    esac\n\tdone\n\texec 0<&5 5<&-\n    fi\n    test \"$lalib_p\" = yes\n}\n\n# func_ltwrapper_script_p file\n# True iff FILE is a libtool wrapper script\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_script_p ()\n{\n    func_lalib_p \"$1\"\n}\n\n# func_ltwrapper_executable_p file\n# True iff FILE is a libtool wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_executable_p ()\n{\n    func_ltwrapper_exec_suffix=\n    case $1 in\n    *.exe) ;;\n    *) func_ltwrapper_exec_suffix=.exe ;;\n    esac\n    $GREP \"$magic_exe\" \"$1$func_ltwrapper_exec_suffix\" >/dev/null 2>&1\n}\n\n# func_ltwrapper_scriptname file\n# Assumes file is an ltwrapper_executable\n# uses $file to determine the appropriate filename for a\n# temporary ltwrapper_script.\nfunc_ltwrapper_scriptname ()\n{\n    func_dirname_and_basename \"$1\" \"\" \".\"\n    func_stripname '' '.exe' \"$func_basename_result\"\n    func_ltwrapper_scriptname_result=\"$func_dirname_result/$objdir/${func_stripname_result}_ltshwrapper\"\n}\n\n# func_ltwrapper_p file\n# True iff FILE is a libtool wrapper script or wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_p ()\n{\n    func_ltwrapper_script_p \"$1\" || func_ltwrapper_executable_p \"$1\"\n}\n\n\n# func_execute_cmds commands fail_cmd\n# Execute tilde-delimited COMMANDS.\n# If FAIL_CMD is given, eval that upon failure.\n# FAIL_CMD may read-access the current command in variable CMD!\nfunc_execute_cmds ()\n{\n    $opt_debug\n    save_ifs=$IFS; IFS='~'\n    for cmd in $1; do\n      IFS=$save_ifs\n      eval cmd=\\\"$cmd\\\"\n      func_show_eval \"$cmd\" \"${2-:}\"\n    done\n    IFS=$save_ifs\n}\n\n\n# func_source file\n# Source FILE, adding directory component if necessary.\n# Note that it is not necessary on cygwin/mingw to append a dot to\n# FILE even if both FILE and FILE.exe exist: automatic-append-.exe\n# behavior happens only for exec(3), not for open(2)!  Also, sourcing\n# `FILE.' does not work on cygwin managed mounts.\nfunc_source ()\n{\n    $opt_debug\n    case $1 in\n    */* | *\\\\*)\t. \"$1\" ;;\n    *)\t\t. \"./$1\" ;;\n    esac\n}\n\n\n# func_resolve_sysroot PATH\n# Replace a leading = in PATH with a sysroot.  Store the result into\n# func_resolve_sysroot_result\nfunc_resolve_sysroot ()\n{\n  func_resolve_sysroot_result=$1\n  case $func_resolve_sysroot_result in\n  =*)\n    func_stripname '=' '' \"$func_resolve_sysroot_result\"\n    func_resolve_sysroot_result=$lt_sysroot$func_stripname_result\n    ;;\n  esac\n}\n\n# func_replace_sysroot PATH\n# If PATH begins with the sysroot, replace it with = and\n# store the result into func_replace_sysroot_result.\nfunc_replace_sysroot ()\n{\n  case \"$lt_sysroot:$1\" in\n  ?*:\"$lt_sysroot\"*)\n    func_stripname \"$lt_sysroot\" '' \"$1\"\n    func_replace_sysroot_result=\"=$func_stripname_result\"\n    ;;\n  *)\n    # Including no sysroot.\n    func_replace_sysroot_result=$1\n    ;;\n  esac\n}\n\n# func_infer_tag arg\n# Infer tagged configuration to use if any are available and\n# if one wasn't chosen via the \"--tag\" command line option.\n# Only attempt this if the compiler in the base compile\n# command doesn't match the default compiler.\n# arg is usually of the form 'gcc ...'\nfunc_infer_tag ()\n{\n    $opt_debug\n    if test -n \"$available_tags\" && test -z \"$tagname\"; then\n      CC_quoted=\n      for arg in $CC; do\n\tfunc_append_quoted CC_quoted \"$arg\"\n      done\n      CC_expanded=`func_echo_all $CC`\n      CC_quoted_expanded=`func_echo_all $CC_quoted`\n      case $@ in\n      # Blanks in the command may have been stripped by the calling shell,\n      # but not from the CC environment variable when configure was run.\n      \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n      \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*) ;;\n      # Blanks at the start of $base_compile will cause this to fail\n      # if we don't check for them as well.\n      *)\n\tfor z in $available_tags; do\n\t  if $GREP \"^# ### BEGIN LIBTOOL TAG CONFIG: $z$\" < \"$progpath\" > /dev/null; then\n\t    # Evaluate the configuration.\n\t    eval \"`${SED} -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^# ### END LIBTOOL TAG CONFIG: '$z'$/p' < $progpath`\"\n\t    CC_quoted=\n\t    for arg in $CC; do\n\t      # Double-quote args containing other shell metacharacters.\n\t      func_append_quoted CC_quoted \"$arg\"\n\t    done\n\t    CC_expanded=`func_echo_all $CC`\n\t    CC_quoted_expanded=`func_echo_all $CC_quoted`\n\t    case \"$@ \" in\n\t    \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n\t    \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*)\n\t      # The compiler in the base compile command matches\n\t      # the one in the tagged configuration.\n\t      # Assume this is the tagged configuration we want.\n\t      tagname=$z\n\t      break\n\t      ;;\n\t    esac\n\t  fi\n\tdone\n\t# If $tagname still isn't set, then no tagged configuration\n\t# was found and let the user know that the \"--tag\" command\n\t# line option must be used.\n\tif test -z \"$tagname\"; then\n\t  func_echo \"unable to infer tagged configuration\"\n\t  func_fatal_error \"specify a tag with \\`--tag'\"\n#\telse\n#\t  func_verbose \"using $tagname tagged configuration\"\n\tfi\n\t;;\n      esac\n    fi\n}\n\n\n\n# func_write_libtool_object output_name pic_name nonpic_name\n# Create a libtool object file (analogous to a \".la\" file),\n# but don't create it if we're doing a dry run.\nfunc_write_libtool_object ()\n{\n    write_libobj=${1}\n    if test \"$build_libtool_libs\" = yes; then\n      write_lobj=\\'${2}\\'\n    else\n      write_lobj=none\n    fi\n\n    if test \"$build_old_libs\" = yes; then\n      write_oldobj=\\'${3}\\'\n    else\n      write_oldobj=none\n    fi\n\n    $opt_dry_run || {\n      cat >${write_libobj}T <<EOF\n# $write_libobj - a libtool object file\n# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# Name of the PIC object.\npic_object=$write_lobj\n\n# Name of the non-PIC object\nnon_pic_object=$write_oldobj\n\nEOF\n      $MV \"${write_libobj}T\" \"${write_libobj}\"\n    }\n}\n\n\n##################################################\n# FILE NAME AND PATH CONVERSION HELPER FUNCTIONS #\n##################################################\n\n# func_convert_core_file_wine_to_w32 ARG\n# Helper function used by file name conversion functions when $build is *nix,\n# and $host is mingw, cygwin, or some other w32 environment. Relies on a\n# correctly configured wine environment available, with the winepath program\n# in $build's $PATH.\n#\n# ARG is the $build file name to be converted to w32 format.\n# Result is available in $func_convert_core_file_wine_to_w32_result, and will\n# be empty on error (or when ARG is empty)\nfunc_convert_core_file_wine_to_w32 ()\n{\n  $opt_debug\n  func_convert_core_file_wine_to_w32_result=\"$1\"\n  if test -n \"$1\"; then\n    # Unfortunately, winepath does not exit with a non-zero error code, so we\n    # are forced to check the contents of stdout. On the other hand, if the\n    # command is not found, the shell will set an exit code of 127 and print\n    # *an error message* to stdout. So we must check for both error code of\n    # zero AND non-empty stdout, which explains the odd construction:\n    func_convert_core_file_wine_to_w32_tmp=`winepath -w \"$1\" 2>/dev/null`\n    if test \"$?\" -eq 0 && test -n \"${func_convert_core_file_wine_to_w32_tmp}\"; then\n      func_convert_core_file_wine_to_w32_result=`$ECHO \"$func_convert_core_file_wine_to_w32_tmp\" |\n        $SED -e \"$lt_sed_naive_backslashify\"`\n    else\n      func_convert_core_file_wine_to_w32_result=\n    fi\n  fi\n}\n# end: func_convert_core_file_wine_to_w32\n\n\n# func_convert_core_path_wine_to_w32 ARG\n# Helper function used by path conversion functions when $build is *nix, and\n# $host is mingw, cygwin, or some other w32 environment. Relies on a correctly\n# configured wine environment available, with the winepath program in $build's\n# $PATH. Assumes ARG has no leading or trailing path separator characters.\n#\n# ARG is path to be converted from $build format to win32.\n# Result is available in $func_convert_core_path_wine_to_w32_result.\n# Unconvertible file (directory) names in ARG are skipped; if no directory names\n# are convertible, then the result may be empty.\nfunc_convert_core_path_wine_to_w32 ()\n{\n  $opt_debug\n  # unfortunately, winepath doesn't convert paths, only file names\n  func_convert_core_path_wine_to_w32_result=\"\"\n  if test -n \"$1\"; then\n    oldIFS=$IFS\n    IFS=:\n    for func_convert_core_path_wine_to_w32_f in $1; do\n      IFS=$oldIFS\n      func_convert_core_file_wine_to_w32 \"$func_convert_core_path_wine_to_w32_f\"\n      if test -n \"$func_convert_core_file_wine_to_w32_result\" ; then\n        if test -z \"$func_convert_core_path_wine_to_w32_result\"; then\n          func_convert_core_path_wine_to_w32_result=\"$func_convert_core_file_wine_to_w32_result\"\n        else\n          func_append func_convert_core_path_wine_to_w32_result \";$func_convert_core_file_wine_to_w32_result\"\n        fi\n      fi\n    done\n    IFS=$oldIFS\n  fi\n}\n# end: func_convert_core_path_wine_to_w32\n\n\n# func_cygpath ARGS...\n# Wrapper around calling the cygpath program via LT_CYGPATH. This is used when\n# when (1) $build is *nix and Cygwin is hosted via a wine environment; or (2)\n# $build is MSYS and $host is Cygwin, or (3) $build is Cygwin. In case (1) or\n# (2), returns the Cygwin file name or path in func_cygpath_result (input\n# file name or path is assumed to be in w32 format, as previously converted\n# from $build's *nix or MSYS format). In case (3), returns the w32 file name\n# or path in func_cygpath_result (input file name or path is assumed to be in\n# Cygwin format). Returns an empty string on error.\n#\n# ARGS are passed to cygpath, with the last one being the file name or path to\n# be converted.\n#\n# Specify the absolute *nix (or w32) name to cygpath in the LT_CYGPATH\n# environment variable; do not put it in $PATH.\nfunc_cygpath ()\n{\n  $opt_debug\n  if test -n \"$LT_CYGPATH\" && test -f \"$LT_CYGPATH\"; then\n    func_cygpath_result=`$LT_CYGPATH \"$@\" 2>/dev/null`\n    if test \"$?\" -ne 0; then\n      # on failure, ensure result is empty\n      func_cygpath_result=\n    fi\n  else\n    func_cygpath_result=\n    func_error \"LT_CYGPATH is empty or specifies non-existent file: \\`$LT_CYGPATH'\"\n  fi\n}\n#end: func_cygpath\n\n\n# func_convert_core_msys_to_w32 ARG\n# Convert file name or path ARG from MSYS format to w32 format.  Return\n# result in func_convert_core_msys_to_w32_result.\nfunc_convert_core_msys_to_w32 ()\n{\n  $opt_debug\n  # awkward: cmd appends spaces to result\n  func_convert_core_msys_to_w32_result=`( cmd //c echo \"$1\" ) 2>/dev/null |\n    $SED -e 's/[ ]*$//' -e \"$lt_sed_naive_backslashify\"`\n}\n#end: func_convert_core_msys_to_w32\n\n\n# func_convert_file_check ARG1 ARG2\n# Verify that ARG1 (a file name in $build format) was converted to $host\n# format in ARG2. Otherwise, emit an error message, but continue (resetting\n# func_to_host_file_result to ARG1).\nfunc_convert_file_check ()\n{\n  $opt_debug\n  if test -z \"$2\" && test -n \"$1\" ; then\n    func_error \"Could not determine host file name corresponding to\"\n    func_error \"  \\`$1'\"\n    func_error \"Continuing, but uninstalled executables may not work.\"\n    # Fallback:\n    func_to_host_file_result=\"$1\"\n  fi\n}\n# end func_convert_file_check\n\n\n# func_convert_path_check FROM_PATHSEP TO_PATHSEP FROM_PATH TO_PATH\n# Verify that FROM_PATH (a path in $build format) was converted to $host\n# format in TO_PATH. Otherwise, emit an error message, but continue, resetting\n# func_to_host_file_result to a simplistic fallback value (see below).\nfunc_convert_path_check ()\n{\n  $opt_debug\n  if test -z \"$4\" && test -n \"$3\"; then\n    func_error \"Could not determine the host path corresponding to\"\n    func_error \"  \\`$3'\"\n    func_error \"Continuing, but uninstalled executables may not work.\"\n    # Fallback.  This is a deliberately simplistic \"conversion\" and\n    # should not be \"improved\".  See libtool.info.\n    if test \"x$1\" != \"x$2\"; then\n      lt_replace_pathsep_chars=\"s|$1|$2|g\"\n      func_to_host_path_result=`echo \"$3\" |\n        $SED -e \"$lt_replace_pathsep_chars\"`\n    else\n      func_to_host_path_result=\"$3\"\n    fi\n  fi\n}\n# end func_convert_path_check\n\n\n# func_convert_path_front_back_pathsep FRONTPAT BACKPAT REPL ORIG\n# Modifies func_to_host_path_result by prepending REPL if ORIG matches FRONTPAT\n# and appending REPL if ORIG matches BACKPAT.\nfunc_convert_path_front_back_pathsep ()\n{\n  $opt_debug\n  case $4 in\n  $1 ) func_to_host_path_result=\"$3$func_to_host_path_result\"\n    ;;\n  esac\n  case $4 in\n  $2 ) func_append func_to_host_path_result \"$3\"\n    ;;\n  esac\n}\n# end func_convert_path_front_back_pathsep\n\n\n##################################################\n# $build to $host FILE NAME CONVERSION FUNCTIONS #\n##################################################\n# invoked via `$to_host_file_cmd ARG'\n#\n# In each case, ARG is the path to be converted from $build to $host format.\n# Result will be available in $func_to_host_file_result.\n\n\n# func_to_host_file ARG\n# Converts the file name ARG from $build format to $host format. Return result\n# in func_to_host_file_result.\nfunc_to_host_file ()\n{\n  $opt_debug\n  $to_host_file_cmd \"$1\"\n}\n# end func_to_host_file\n\n\n# func_to_tool_file ARG LAZY\n# converts the file name ARG from $build format to toolchain format. Return\n# result in func_to_tool_file_result.  If the conversion in use is listed\n# in (the comma separated) LAZY, no conversion takes place.\nfunc_to_tool_file ()\n{\n  $opt_debug\n  case ,$2, in\n    *,\"$to_tool_file_cmd\",*)\n      func_to_tool_file_result=$1\n      ;;\n    *)\n      $to_tool_file_cmd \"$1\"\n      func_to_tool_file_result=$func_to_host_file_result\n      ;;\n  esac\n}\n# end func_to_tool_file\n\n\n# func_convert_file_noop ARG\n# Copy ARG to func_to_host_file_result.\nfunc_convert_file_noop ()\n{\n  func_to_host_file_result=\"$1\"\n}\n# end func_convert_file_noop\n\n\n# func_convert_file_msys_to_w32 ARG\n# Convert file name ARG from (mingw) MSYS to (mingw) w32 format; automatic\n# conversion to w32 is not available inside the cwrapper.  Returns result in\n# func_to_host_file_result.\nfunc_convert_file_msys_to_w32 ()\n{\n  $opt_debug\n  func_to_host_file_result=\"$1\"\n  if test -n \"$1\"; then\n    func_convert_core_msys_to_w32 \"$1\"\n    func_to_host_file_result=\"$func_convert_core_msys_to_w32_result\"\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_msys_to_w32\n\n\n# func_convert_file_cygwin_to_w32 ARG\n# Convert file name ARG from Cygwin to w32 format.  Returns result in\n# func_to_host_file_result.\nfunc_convert_file_cygwin_to_w32 ()\n{\n  $opt_debug\n  func_to_host_file_result=\"$1\"\n  if test -n \"$1\"; then\n    # because $build is cygwin, we call \"the\" cygpath in $PATH; no need to use\n    # LT_CYGPATH in this case.\n    func_to_host_file_result=`cygpath -m \"$1\"`\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_cygwin_to_w32\n\n\n# func_convert_file_nix_to_w32 ARG\n# Convert file name ARG from *nix to w32 format.  Requires a wine environment\n# and a working winepath. Returns result in func_to_host_file_result.\nfunc_convert_file_nix_to_w32 ()\n{\n  $opt_debug\n  func_to_host_file_result=\"$1\"\n  if test -n \"$1\"; then\n    func_convert_core_file_wine_to_w32 \"$1\"\n    func_to_host_file_result=\"$func_convert_core_file_wine_to_w32_result\"\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_nix_to_w32\n\n\n# func_convert_file_msys_to_cygwin ARG\n# Convert file name ARG from MSYS to Cygwin format.  Requires LT_CYGPATH set.\n# Returns result in func_to_host_file_result.\nfunc_convert_file_msys_to_cygwin ()\n{\n  $opt_debug\n  func_to_host_file_result=\"$1\"\n  if test -n \"$1\"; then\n    func_convert_core_msys_to_w32 \"$1\"\n    func_cygpath -u \"$func_convert_core_msys_to_w32_result\"\n    func_to_host_file_result=\"$func_cygpath_result\"\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_msys_to_cygwin\n\n\n# func_convert_file_nix_to_cygwin ARG\n# Convert file name ARG from *nix to Cygwin format.  Requires Cygwin installed\n# in a wine environment, working winepath, and LT_CYGPATH set.  Returns result\n# in func_to_host_file_result.\nfunc_convert_file_nix_to_cygwin ()\n{\n  $opt_debug\n  func_to_host_file_result=\"$1\"\n  if test -n \"$1\"; then\n    # convert from *nix to w32, then use cygpath to convert from w32 to cygwin.\n    func_convert_core_file_wine_to_w32 \"$1\"\n    func_cygpath -u \"$func_convert_core_file_wine_to_w32_result\"\n    func_to_host_file_result=\"$func_cygpath_result\"\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_nix_to_cygwin\n\n\n#############################################\n# $build to $host PATH CONVERSION FUNCTIONS #\n#############################################\n# invoked via `$to_host_path_cmd ARG'\n#\n# In each case, ARG is the path to be converted from $build to $host format.\n# The result will be available in $func_to_host_path_result.\n#\n# Path separators are also converted from $build format to $host format.  If\n# ARG begins or ends with a path separator character, it is preserved (but\n# converted to $host format) on output.\n#\n# All path conversion functions are named using the following convention:\n#   file name conversion function    : func_convert_file_X_to_Y ()\n#   path conversion function         : func_convert_path_X_to_Y ()\n# where, for any given $build/$host combination the 'X_to_Y' value is the\n# same.  If conversion functions are added for new $build/$host combinations,\n# the two new functions must follow this pattern, or func_init_to_host_path_cmd\n# will break.\n\n\n# func_init_to_host_path_cmd\n# Ensures that function \"pointer\" variable $to_host_path_cmd is set to the\n# appropriate value, based on the value of $to_host_file_cmd.\nto_host_path_cmd=\nfunc_init_to_host_path_cmd ()\n{\n  $opt_debug\n  if test -z \"$to_host_path_cmd\"; then\n    func_stripname 'func_convert_file_' '' \"$to_host_file_cmd\"\n    to_host_path_cmd=\"func_convert_path_${func_stripname_result}\"\n  fi\n}\n\n\n# func_to_host_path ARG\n# Converts the path ARG from $build format to $host format. Return result\n# in func_to_host_path_result.\nfunc_to_host_path ()\n{\n  $opt_debug\n  func_init_to_host_path_cmd\n  $to_host_path_cmd \"$1\"\n}\n# end func_to_host_path\n\n\n# func_convert_path_noop ARG\n# Copy ARG to func_to_host_path_result.\nfunc_convert_path_noop ()\n{\n  func_to_host_path_result=\"$1\"\n}\n# end func_convert_path_noop\n\n\n# func_convert_path_msys_to_w32 ARG\n# Convert path ARG from (mingw) MSYS to (mingw) w32 format; automatic\n# conversion to w32 is not available inside the cwrapper.  Returns result in\n# func_to_host_path_result.\nfunc_convert_path_msys_to_w32 ()\n{\n  $opt_debug\n  func_to_host_path_result=\"$1\"\n  if test -n \"$1\"; then\n    # Remove leading and trailing path separator characters from ARG.  MSYS\n    # behavior is inconsistent here; cygpath turns them into '.;' and ';.';\n    # and winepath ignores them completely.\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_msys_to_w32 \"$func_to_host_path_tmp1\"\n    func_to_host_path_result=\"$func_convert_core_msys_to_w32_result\"\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_msys_to_w32\n\n\n# func_convert_path_cygwin_to_w32 ARG\n# Convert path ARG from Cygwin to w32 format.  Returns result in\n# func_to_host_file_result.\nfunc_convert_path_cygwin_to_w32 ()\n{\n  $opt_debug\n  func_to_host_path_result=\"$1\"\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_to_host_path_result=`cygpath -m -p \"$func_to_host_path_tmp1\"`\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_cygwin_to_w32\n\n\n# func_convert_path_nix_to_w32 ARG\n# Convert path ARG from *nix to w32 format.  Requires a wine environment and\n# a working winepath.  Returns result in func_to_host_file_result.\nfunc_convert_path_nix_to_w32 ()\n{\n  $opt_debug\n  func_to_host_path_result=\"$1\"\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_path_wine_to_w32 \"$func_to_host_path_tmp1\"\n    func_to_host_path_result=\"$func_convert_core_path_wine_to_w32_result\"\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_nix_to_w32\n\n\n# func_convert_path_msys_to_cygwin ARG\n# Convert path ARG from MSYS to Cygwin format.  Requires LT_CYGPATH set.\n# Returns result in func_to_host_file_result.\nfunc_convert_path_msys_to_cygwin ()\n{\n  $opt_debug\n  func_to_host_path_result=\"$1\"\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_msys_to_w32 \"$func_to_host_path_tmp1\"\n    func_cygpath -u -p \"$func_convert_core_msys_to_w32_result\"\n    func_to_host_path_result=\"$func_cygpath_result\"\n    func_convert_path_check : : \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" : \"$1\"\n  fi\n}\n# end func_convert_path_msys_to_cygwin\n\n\n# func_convert_path_nix_to_cygwin ARG\n# Convert path ARG from *nix to Cygwin format.  Requires Cygwin installed in a\n# a wine environment, working winepath, and LT_CYGPATH set.  Returns result in\n# func_to_host_file_result.\nfunc_convert_path_nix_to_cygwin ()\n{\n  $opt_debug\n  func_to_host_path_result=\"$1\"\n  if test -n \"$1\"; then\n    # Remove leading and trailing path separator characters from\n    # ARG. msys behavior is inconsistent here, cygpath turns them\n    # into '.;' and ';.', and winepath ignores them completely.\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_path_wine_to_w32 \"$func_to_host_path_tmp1\"\n    func_cygpath -u -p \"$func_convert_core_path_wine_to_w32_result\"\n    func_to_host_path_result=\"$func_cygpath_result\"\n    func_convert_path_check : : \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" : \"$1\"\n  fi\n}\n# end func_convert_path_nix_to_cygwin\n\n\n# func_mode_compile arg...\nfunc_mode_compile ()\n{\n    $opt_debug\n    # Get the compilation command and the source file.\n    base_compile=\n    srcfile=\"$nonopt\"  #  always keep a non-empty value in \"srcfile\"\n    suppress_opt=yes\n    suppress_output=\n    arg_mode=normal\n    libobj=\n    later=\n    pie_flag=\n\n    for arg\n    do\n      case $arg_mode in\n      arg  )\n\t# do not \"continue\".  Instead, add this to base_compile\n\tlastarg=\"$arg\"\n\targ_mode=normal\n\t;;\n\n      target )\n\tlibobj=\"$arg\"\n\targ_mode=normal\n\tcontinue\n\t;;\n\n      normal )\n\t# Accept any command-line options.\n\tcase $arg in\n\t-o)\n\t  test -n \"$libobj\" && \\\n\t    func_fatal_error \"you cannot specify \\`-o' more than once\"\n\t  arg_mode=target\n\t  continue\n\t  ;;\n\n\t-pie | -fpie | -fPIE)\n          func_append pie_flag \" $arg\"\n\t  continue\n\t  ;;\n\n\t-shared | -static | -prefer-pic | -prefer-non-pic)\n\t  func_append later \" $arg\"\n\t  continue\n\t  ;;\n\n\t-no-suppress)\n\t  suppress_opt=no\n\t  continue\n\t  ;;\n\n\t-Xcompiler)\n\t  arg_mode=arg  #  the next one goes into the \"base_compile\" arg list\n\t  continue      #  The current \"srcfile\" will either be retained or\n\t  ;;            #  replaced later.  I would guess that would be a bug.\n\n\t-Wc,*)\n\t  func_stripname '-Wc,' '' \"$arg\"\n\t  args=$func_stripname_result\n\t  lastarg=\n\t  save_ifs=\"$IFS\"; IFS=','\n\t  for arg in $args; do\n\t    IFS=\"$save_ifs\"\n\t    func_append_quoted lastarg \"$arg\"\n\t  done\n\t  IFS=\"$save_ifs\"\n\t  func_stripname ' ' '' \"$lastarg\"\n\t  lastarg=$func_stripname_result\n\n\t  # Add the arguments to base_compile.\n\t  func_append base_compile \" $lastarg\"\n\t  continue\n\t  ;;\n\n\t*)\n\t  # Accept the current argument as the source file.\n\t  # The previous \"srcfile\" becomes the current argument.\n\t  #\n\t  lastarg=\"$srcfile\"\n\t  srcfile=\"$arg\"\n\t  ;;\n\tesac  #  case $arg\n\t;;\n      esac    #  case $arg_mode\n\n      # Aesthetically quote the previous argument.\n      func_append_quoted base_compile \"$lastarg\"\n    done # for arg\n\n    case $arg_mode in\n    arg)\n      func_fatal_error \"you must specify an argument for -Xcompile\"\n      ;;\n    target)\n      func_fatal_error \"you must specify a target with \\`-o'\"\n      ;;\n    *)\n      # Get the name of the library object.\n      test -z \"$libobj\" && {\n\tfunc_basename \"$srcfile\"\n\tlibobj=\"$func_basename_result\"\n      }\n      ;;\n    esac\n\n    # Recognize several different file suffixes.\n    # If the user specifies -o file.o, it is replaced with file.lo\n    case $libobj in\n    *.[cCFSifmso] | \\\n    *.ada | *.adb | *.ads | *.asm | \\\n    *.c++ | *.cc | *.ii | *.class | *.cpp | *.cxx | \\\n    *.[fF][09]? | *.for | *.java | *.go | *.obj | *.sx | *.cu | *.cup)\n      func_xform \"$libobj\"\n      libobj=$func_xform_result\n      ;;\n    esac\n\n    case $libobj in\n    *.lo) func_lo2o \"$libobj\"; obj=$func_lo2o_result ;;\n    *)\n      func_fatal_error \"cannot determine name of library object from \\`$libobj'\"\n      ;;\n    esac\n\n    func_infer_tag $base_compile\n\n    for arg in $later; do\n      case $arg in\n      -shared)\n\ttest \"$build_libtool_libs\" != yes && \\\n\t  func_fatal_configuration \"can not build a shared library\"\n\tbuild_old_libs=no\n\tcontinue\n\t;;\n\n      -static)\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tcontinue\n\t;;\n\n      -prefer-pic)\n\tpic_mode=yes\n\tcontinue\n\t;;\n\n      -prefer-non-pic)\n\tpic_mode=no\n\tcontinue\n\t;;\n      esac\n    done\n\n    func_quote_for_eval \"$libobj\"\n    test \"X$libobj\" != \"X$func_quote_for_eval_result\" \\\n      && $ECHO \"X$libobj\" | $GREP '[]~#^*{};<>?\"'\"'\"'\t &()|`$[]' \\\n      && func_warning \"libobj name \\`$libobj' may not contain shell special characters.\"\n    func_dirname_and_basename \"$obj\" \"/\" \"\"\n    objname=\"$func_basename_result\"\n    xdir=\"$func_dirname_result\"\n    lobj=${xdir}$objdir/$objname\n\n    test -z \"$base_compile\" && \\\n      func_fatal_help \"you must specify a compilation command\"\n\n    # Delete any leftover library objects.\n    if test \"$build_old_libs\" = yes; then\n      removelist=\"$obj $lobj $libobj ${libobj}T\"\n    else\n      removelist=\"$lobj $libobj ${libobj}T\"\n    fi\n\n    # On Cygwin there's no \"real\" PIC flag so we must build both object types\n    case $host_os in\n    cygwin* | mingw* | pw32* | os2* | cegcc*)\n      pic_mode=default\n      ;;\n    esac\n    if test \"$pic_mode\" = no && test \"$deplibs_check_method\" != pass_all; then\n      # non-PIC code in shared libraries is not supported\n      pic_mode=default\n    fi\n\n    # Calculate the filename of the output object if compiler does\n    # not support -o with -c\n    if test \"$compiler_c_o\" = no; then\n      output_obj=`$ECHO \"$srcfile\" | $SED 's%^.*/%%; s%\\.[^.]*$%%'`.${objext}\n      lockfile=\"$output_obj.lock\"\n    else\n      output_obj=\n      need_locks=no\n      lockfile=\n    fi\n\n    # Lock this critical section if it is needed\n    # We use this script file to make the link, it avoids creating a new file\n    if test \"$need_locks\" = yes; then\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    elif test \"$need_locks\" = warn; then\n      if test -f \"$lockfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile exists and contains:\n`cat $lockfile 2>/dev/null`\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n      func_append removelist \" $output_obj\"\n      $ECHO \"$srcfile\" > \"$lockfile\"\n    fi\n\n    $opt_dry_run || $RM $removelist\n    func_append removelist \" $lockfile\"\n    trap '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE' 1 2 15\n\n    func_to_tool_file \"$srcfile\" func_convert_file_msys_to_w32\n    srcfile=$func_to_tool_file_result\n    func_quote_for_eval \"$srcfile\"\n    qsrcfile=$func_quote_for_eval_result\n\n    # Only build a PIC object if we are building libtool libraries.\n    if test \"$build_libtool_libs\" = yes; then\n      # Without this assignment, base_compile gets emptied.\n      fbsd_hideous_sh_bug=$base_compile\n\n      if test \"$pic_mode\" != no; then\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      else\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile\"\n      fi\n\n      func_mkdir_p \"$xdir$objdir\"\n\n      if test -z \"$output_obj\"; then\n\t# Place PIC objects in $objdir\n\tfunc_append command \" -o $lobj\"\n      fi\n\n      func_show_eval_locale \"$command\"\t\\\n          'test -n \"$output_obj\" && $RM $removelist; exit $EXIT_FAILURE'\n\n      if test \"$need_locks\" = warn &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed, then go on to compile the next one\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$lobj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$lobj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n\n      # Allow error messages only from the first compilation.\n      if test \"$suppress_opt\" = yes; then\n\tsuppress_output=' >/dev/null 2>&1'\n      fi\n    fi\n\n    # Only build a position-dependent object if we build old libraries.\n    if test \"$build_old_libs\" = yes; then\n      if test \"$pic_mode\" != yes; then\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile$pie_flag\"\n      else\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      fi\n      if test \"$compiler_c_o\" = yes; then\n\tfunc_append command \" -o $obj\"\n      fi\n\n      # Suppress compiler output if we already did a PIC compilation.\n      func_append command \"$suppress_output\"\n      func_show_eval_locale \"$command\" \\\n        '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE'\n\n      if test \"$need_locks\" = warn &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$obj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$obj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n    fi\n\n    $opt_dry_run || {\n      func_write_libtool_object \"$libobj\" \"$objdir/$objname\" \"$objname\"\n\n      # Unlock the critical section if it was locked\n      if test \"$need_locks\" != no; then\n\tremovelist=$lockfile\n        $RM \"$lockfile\"\n      fi\n    }\n\n    exit $EXIT_SUCCESS\n}\n\n$opt_help || {\n  test \"$opt_mode\" = compile && func_mode_compile ${1+\"$@\"}\n}\n\nfunc_mode_help ()\n{\n    # We need to display help for each of the modes.\n    case $opt_mode in\n      \"\")\n        # Generic help is extracted from the usage comments\n        # at the start of this file.\n        func_help\n        ;;\n\n      clean)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=clean RM [RM-OPTION]... FILE...\n\nRemove files from the build directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically \\`/bin/rm').  RM-OPTIONS are options (such as \\`-f') to be passed\nto RM.\n\nIf FILE is a libtool library, object or program, all the files associated\nwith it are deleted. Otherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      compile)\n      $ECHO \\\n\"Usage: $progname [OPTION]... --mode=compile COMPILE-COMMAND... SOURCEFILE\n\nCompile a source file into a libtool library object.\n\nThis mode accepts the following additional options:\n\n  -o OUTPUT-FILE    set the output file name to OUTPUT-FILE\n  -no-suppress      do not suppress compiler output for multiple passes\n  -prefer-pic       try to build PIC objects only\n  -prefer-non-pic   try to build non-PIC objects only\n  -shared           do not build a \\`.o' file suitable for static linking\n  -static           only build a \\`.o' file suitable for static linking\n  -Wc,FLAG          pass FLAG directly to the compiler\n\nCOMPILE-COMMAND is a command to be used in creating a \\`standard' object file\nfrom the given SOURCEFILE.\n\nThe output file name is determined by removing the directory component from\nSOURCEFILE, then substituting the C source code suffix \\`.c' with the\nlibrary object suffix, \\`.lo'.\"\n        ;;\n\n      execute)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=execute COMMAND [ARGS]...\n\nAutomatically set library path, then run a program.\n\nThis mode accepts the following additional options:\n\n  -dlopen FILE      add the directory containing FILE to the library path\n\nThis mode sets the library path environment variable according to \\`-dlopen'\nflags.\n\nIf any of the ARGS are libtool executable wrappers, then they are translated\ninto their corresponding uninstalled binary, and any of their required library\ndirectories are added to the library path.\n\nThen, COMMAND is executed, with ARGS as arguments.\"\n        ;;\n\n      finish)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=finish [LIBDIR]...\n\nComplete the installation of libtool libraries.\n\nEach LIBDIR is a directory that contains libtool libraries.\n\nThe commands that this mode executes may require superuser privileges.  Use\nthe \\`--dry-run' option if you just want to see what would be executed.\"\n        ;;\n\n      install)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=install INSTALL-COMMAND...\n\nInstall executables or libraries.\n\nINSTALL-COMMAND is the installation command.  The first component should be\neither the \\`install' or \\`cp' program.\n\nThe following components of INSTALL-COMMAND are treated specially:\n\n  -inst-prefix-dir PREFIX-DIR  Use PREFIX-DIR as a staging area for installation\n\nThe rest of the components are interpreted as arguments to that command (only\nBSD-compatible install options are recognized).\"\n        ;;\n\n      link)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=link LINK-COMMAND...\n\nLink object files or libraries together to form another library, or to\ncreate an executable program.\n\nLINK-COMMAND is a command using the C compiler that you would use to create\na program from several object files.\n\nThe following components of LINK-COMMAND are treated specially:\n\n  -all-static       do not do any dynamic linking at all\n  -avoid-version    do not add a version suffix if possible\n  -bindir BINDIR    specify path to binaries directory (for systems where\n                    libraries must be found in the PATH setting at runtime)\n  -dlopen FILE      \\`-dlpreopen' FILE if it cannot be dlopened at runtime\n  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols\n  -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)\n  -export-symbols SYMFILE\n                    try to export only the symbols listed in SYMFILE\n  -export-symbols-regex REGEX\n                    try to export only the symbols matching REGEX\n  -LLIBDIR          search LIBDIR for required installed libraries\n  -lNAME            OUTPUT-FILE requires the installed library libNAME\n  -module           build a library that can dlopened\n  -no-fast-install  disable the fast-install mode\n  -no-install       link a not-installable executable\n  -no-undefined     declare that a library does not refer to external symbols\n  -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects\n  -objectlist FILE  Use a list of object files found in FILE to specify objects\n  -precious-files-regex REGEX\n                    don't remove output files matching REGEX\n  -release RELEASE  specify package release information\n  -rpath LIBDIR     the created library will eventually be installed in LIBDIR\n  -R[ ]LIBDIR       add LIBDIR to the runtime path of programs and libraries\n  -shared           only do dynamic linking of libtool libraries\n  -shrext SUFFIX    override the standard shared library file extension\n  -static           do not do any dynamic linking of uninstalled libtool libraries\n  -static-libtool-libs\n                    do not do any dynamic linking of libtool libraries\n  -version-info CURRENT[:REVISION[:AGE]]\n                    specify library version info [each variable defaults to 0]\n  -weak LIBNAME     declare that the target provides the LIBNAME interface\n  -Wc,FLAG\n  -Xcompiler FLAG   pass linker-specific FLAG directly to the compiler\n  -Wl,FLAG\n  -Xlinker FLAG     pass linker-specific FLAG directly to the linker\n  -XCClinker FLAG   pass link-specific FLAG to the compiler driver (CC)\n\nAll other options (arguments beginning with \\`-') are ignored.\n\nEvery other argument is treated as a filename.  Files ending in \\`.la' are\ntreated as uninstalled libtool libraries, other files are standard or library\nobject files.\n\nIf the OUTPUT-FILE ends in \\`.la', then a libtool library is created,\nonly library objects (\\`.lo' files) may be specified, and \\`-rpath' is\nrequired, except when creating a convenience library.\n\nIf OUTPUT-FILE ends in \\`.a' or \\`.lib', then a standard library is created\nusing \\`ar' and \\`ranlib', or on Windows using \\`lib'.\n\nIf OUTPUT-FILE ends in \\`.lo' or \\`.${objext}', then a reloadable object file\nis created, otherwise an executable program is created.\"\n        ;;\n\n      uninstall)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=uninstall RM [RM-OPTION]... FILE...\n\nRemove libraries from an installation directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically \\`/bin/rm').  RM-OPTIONS are options (such as \\`-f') to be passed\nto RM.\n\nIf FILE is a libtool library, all the files associated with it are deleted.\nOtherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      *)\n        func_fatal_help \"invalid operation mode \\`$opt_mode'\"\n        ;;\n    esac\n\n    echo\n    $ECHO \"Try \\`$progname --help' for more information about other modes.\"\n}\n\n# Now that we've collected a possible --mode arg, show help if necessary\nif $opt_help; then\n  if test \"$opt_help\" = :; then\n    func_mode_help\n  else\n    {\n      func_help noexit\n      for opt_mode in compile link execute install finish uninstall clean; do\n\tfunc_mode_help\n      done\n    } | sed -n '1p; 2,$s/^Usage:/  or: /p'\n    {\n      func_help noexit\n      for opt_mode in compile link execute install finish uninstall clean; do\n\techo\n\tfunc_mode_help\n      done\n    } |\n    sed '1d\n      /^When reporting/,/^Report/{\n\tH\n\td\n      }\n      $x\n      /information about other modes/d\n      /more detailed .*MODE/d\n      s/^Usage:.*--mode=\\([^ ]*\\) .*/Description of \\1 mode:/'\n  fi\n  exit $?\nfi\n\n\n# func_mode_execute arg...\nfunc_mode_execute ()\n{\n    $opt_debug\n    # The first argument is the command name.\n    cmd=\"$nonopt\"\n    test -z \"$cmd\" && \\\n      func_fatal_help \"you must specify a COMMAND\"\n\n    # Handle -dlopen flags immediately.\n    for file in $opt_dlopen; do\n      test -f \"$file\" \\\n\t|| func_fatal_help \"\\`$file' is not a file\"\n\n      dir=\n      case $file in\n      *.la)\n\tfunc_resolve_sysroot \"$file\"\n\tfile=$func_resolve_sysroot_result\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"\\`$lib' is not a valid libtool archive\"\n\n\t# Read the libtool library.\n\tdlname=\n\tlibrary_names=\n\tfunc_source \"$file\"\n\n\t# Skip this library if it cannot be dlopened.\n\tif test -z \"$dlname\"; then\n\t  # Warn if it was a shared library.\n\t  test -n \"$library_names\" && \\\n\t    func_warning \"\\`$file' was not linked with \\`-export-dynamic'\"\n\t  continue\n\tfi\n\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=\"$func_dirname_result\"\n\n\tif test -f \"$dir/$objdir/$dlname\"; then\n\t  func_append dir \"/$objdir\"\n\telse\n\t  if test ! -f \"$dir/$dlname\"; then\n\t    func_fatal_error \"cannot find \\`$dlname' in \\`$dir' or \\`$dir/$objdir'\"\n\t  fi\n\tfi\n\t;;\n\n      *.lo)\n\t# Just add the directory containing the .lo file.\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=\"$func_dirname_result\"\n\t;;\n\n      *)\n\tfunc_warning \"\\`-dlopen' is ignored for non-libtool libraries and objects\"\n\tcontinue\n\t;;\n      esac\n\n      # Get the absolute pathname.\n      absdir=`cd \"$dir\" && pwd`\n      test -n \"$absdir\" && dir=\"$absdir\"\n\n      # Now add the directory to shlibpath_var.\n      if eval \"test -z \\\"\\$$shlibpath_var\\\"\"; then\n\teval \"$shlibpath_var=\\\"\\$dir\\\"\"\n      else\n\teval \"$shlibpath_var=\\\"\\$dir:\\$$shlibpath_var\\\"\"\n      fi\n    done\n\n    # This variable tells wrapper scripts just to set shlibpath_var\n    # rather than running their programs.\n    libtool_execute_magic=\"$magic\"\n\n    # Check if any of the arguments is a wrapper script.\n    args=\n    for file\n    do\n      case $file in\n      -* | *.la | *.lo ) ;;\n      *)\n\t# Do a test to see if this is really a libtool program.\n\tif func_ltwrapper_script_p \"$file\"; then\n\t  func_source \"$file\"\n\t  # Transform arg to wrapped name.\n\t  file=\"$progdir/$program\"\n\telif func_ltwrapper_executable_p \"$file\"; then\n\t  func_ltwrapper_scriptname \"$file\"\n\t  func_source \"$func_ltwrapper_scriptname_result\"\n\t  # Transform arg to wrapped name.\n\t  file=\"$progdir/$program\"\n\tfi\n\t;;\n      esac\n      # Quote arguments (to preserve shell metacharacters).\n      func_append_quoted args \"$file\"\n    done\n\n    if test \"X$opt_dry_run\" = Xfalse; then\n      if test -n \"$shlibpath_var\"; then\n\t# Export the shlibpath_var.\n\teval \"export $shlibpath_var\"\n      fi\n\n      # Restore saved environment variables\n      for lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\n      do\n\teval \"if test \\\"\\${save_$lt_var+set}\\\" = set; then\n                $lt_var=\\$save_$lt_var; export $lt_var\n\t      else\n\t\t$lt_unset $lt_var\n\t      fi\"\n      done\n\n      # Now prepare to actually exec the command.\n      exec_cmd=\"\\$cmd$args\"\n    else\n      # Display what would be done.\n      if test -n \"$shlibpath_var\"; then\n\teval \"\\$ECHO \\\"\\$shlibpath_var=\\$$shlibpath_var\\\"\"\n\techo \"export $shlibpath_var\"\n      fi\n      $ECHO \"$cmd$args\"\n      exit $EXIT_SUCCESS\n    fi\n}\n\ntest \"$opt_mode\" = execute && func_mode_execute ${1+\"$@\"}\n\n\n# func_mode_finish arg...\nfunc_mode_finish ()\n{\n    $opt_debug\n    libs=\n    libdirs=\n    admincmds=\n\n    for opt in \"$nonopt\" ${1+\"$@\"}\n    do\n      if test -d \"$opt\"; then\n\tfunc_append libdirs \" $opt\"\n\n      elif test -f \"$opt\"; then\n\tif func_lalib_unsafe_p \"$opt\"; then\n\t  func_append libs \" $opt\"\n\telse\n\t  func_warning \"\\`$opt' is not a valid libtool archive\"\n\tfi\n\n      else\n\tfunc_fatal_error \"invalid argument \\`$opt'\"\n      fi\n    done\n\n    if test -n \"$libs\"; then\n      if test -n \"$lt_sysroot\"; then\n        sysroot_regex=`$ECHO \"$lt_sysroot\" | $SED \"$sed_make_literal_regex\"`\n        sysroot_cmd=\"s/\\([ ']\\)$sysroot_regex/\\1/g;\"\n      else\n        sysroot_cmd=\n      fi\n\n      # Remove sysroot references\n      if $opt_dry_run; then\n        for lib in $libs; do\n          echo \"removing references to $lt_sysroot and \\`=' prefixes from $lib\"\n        done\n      else\n        tmpdir=`func_mktempdir`\n        for lib in $libs; do\n\t  sed -e \"${sysroot_cmd} s/\\([ ']-[LR]\\)=/\\1/g; s/\\([ ']\\)=/\\1/g\" $lib \\\n\t    > $tmpdir/tmp-la\n\t  mv -f $tmpdir/tmp-la $lib\n\tdone\n        ${RM}r \"$tmpdir\"\n      fi\n    fi\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      for libdir in $libdirs; do\n\tif test -n \"$finish_cmds\"; then\n\t  # Do each command in the finish commands.\n\t  func_execute_cmds \"$finish_cmds\" 'admincmds=\"$admincmds\n'\"$cmd\"'\"'\n\tfi\n\tif test -n \"$finish_eval\"; then\n\t  # Do the single finish_eval.\n\t  eval cmds=\\\"$finish_eval\\\"\n\t  $opt_dry_run || eval \"$cmds\" || func_append admincmds \"\n       $cmds\"\n\tfi\n      done\n    fi\n\n    # Exit here if they wanted silent mode.\n    $opt_silent && exit $EXIT_SUCCESS\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      echo \"----------------------------------------------------------------------\"\n      echo \"Libraries have been installed in:\"\n      for libdir in $libdirs; do\n\t$ECHO \"   $libdir\"\n      done\n      echo\n      echo \"If you ever happen to want to link against installed libraries\"\n      echo \"in a given directory, LIBDIR, you must either use libtool, and\"\n      echo \"specify the full pathname of the library, or use the \\`-LLIBDIR'\"\n      echo \"flag during linking and do at least one of the following:\"\n      if test -n \"$shlibpath_var\"; then\n\techo \"   - add LIBDIR to the \\`$shlibpath_var' environment variable\"\n\techo \"     during execution\"\n      fi\n      if test -n \"$runpath_var\"; then\n\techo \"   - add LIBDIR to the \\`$runpath_var' environment variable\"\n\techo \"     during linking\"\n      fi\n      if test -n \"$hardcode_libdir_flag_spec\"; then\n\tlibdir=LIBDIR\n\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\n\t$ECHO \"   - use the \\`$flag' linker flag\"\n      fi\n      if test -n \"$admincmds\"; then\n\t$ECHO \"   - have your system administrator run these commands:$admincmds\"\n      fi\n      if test -f /etc/ld.so.conf; then\n\techo \"   - have your system administrator add LIBDIR to \\`/etc/ld.so.conf'\"\n      fi\n      echo\n\n      echo \"See any operating system documentation about shared libraries for\"\n      case $host in\n\tsolaris2.[6789]|solaris2.1[0-9])\n\t  echo \"more information, such as the ld(1), crle(1) and ld.so(8) manual\"\n\t  echo \"pages.\"\n\t  ;;\n\t*)\n\t  echo \"more information, such as the ld(1) and ld.so(8) manual pages.\"\n\t  ;;\n      esac\n      echo \"----------------------------------------------------------------------\"\n    fi\n    exit $EXIT_SUCCESS\n}\n\ntest \"$opt_mode\" = finish && func_mode_finish ${1+\"$@\"}\n\n\n# func_mode_install arg...\nfunc_mode_install ()\n{\n    $opt_debug\n    # There may be an optional sh(1) argument at the beginning of\n    # install_prog (especially on Windows NT).\n    if test \"$nonopt\" = \"$SHELL\" || test \"$nonopt\" = /bin/sh ||\n       # Allow the use of GNU shtool's install command.\n       case $nonopt in *shtool*) :;; *) false;; esac; then\n      # Aesthetically quote it.\n      func_quote_for_eval \"$nonopt\"\n      install_prog=\"$func_quote_for_eval_result \"\n      arg=$1\n      shift\n    else\n      install_prog=\n      arg=$nonopt\n    fi\n\n    # The real first argument should be the name of the installation program.\n    # Aesthetically quote it.\n    func_quote_for_eval \"$arg\"\n    func_append install_prog \"$func_quote_for_eval_result\"\n    install_shared_prog=$install_prog\n    case \" $install_prog \" in\n      *[\\\\\\ /]cp\\ *) install_cp=: ;;\n      *) install_cp=false ;;\n    esac\n\n    # We need to accept at least all the BSD install flags.\n    dest=\n    files=\n    opts=\n    prev=\n    install_type=\n    isdir=no\n    stripme=\n    no_mode=:\n    for arg\n    do\n      arg2=\n      if test -n \"$dest\"; then\n\tfunc_append files \" $dest\"\n\tdest=$arg\n\tcontinue\n      fi\n\n      case $arg in\n      -d) isdir=yes ;;\n      -f)\n\tif $install_cp; then :; else\n\t  prev=$arg\n\tfi\n\t;;\n      -g | -m | -o)\n\tprev=$arg\n\t;;\n      -s)\n\tstripme=\" -s\"\n\tcontinue\n\t;;\n      -*)\n\t;;\n      *)\n\t# If the previous option needed an argument, then skip it.\n\tif test -n \"$prev\"; then\n\t  if test \"x$prev\" = x-m && test -n \"$install_override_mode\"; then\n\t    arg2=$install_override_mode\n\t    no_mode=false\n\t  fi\n\t  prev=\n\telse\n\t  dest=$arg\n\t  continue\n\tfi\n\t;;\n      esac\n\n      # Aesthetically quote the argument.\n      func_quote_for_eval \"$arg\"\n      func_append install_prog \" $func_quote_for_eval_result\"\n      if test -n \"$arg2\"; then\n\tfunc_quote_for_eval \"$arg2\"\n      fi\n      func_append install_shared_prog \" $func_quote_for_eval_result\"\n    done\n\n    test -z \"$install_prog\" && \\\n      func_fatal_help \"you must specify an install program\"\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the \\`$prev' option requires an argument\"\n\n    if test -n \"$install_override_mode\" && $no_mode; then\n      if $install_cp; then :; else\n\tfunc_quote_for_eval \"$install_override_mode\"\n\tfunc_append install_shared_prog \" -m $func_quote_for_eval_result\"\n      fi\n    fi\n\n    if test -z \"$files\"; then\n      if test -z \"$dest\"; then\n\tfunc_fatal_help \"no file or destination specified\"\n      else\n\tfunc_fatal_help \"you must specify a destination\"\n      fi\n    fi\n\n    # Strip any trailing slash from the destination.\n    func_stripname '' '/' \"$dest\"\n    dest=$func_stripname_result\n\n    # Check to see that the destination is a directory.\n    test -d \"$dest\" && isdir=yes\n    if test \"$isdir\" = yes; then\n      destdir=\"$dest\"\n      destname=\n    else\n      func_dirname_and_basename \"$dest\" \"\" \".\"\n      destdir=\"$func_dirname_result\"\n      destname=\"$func_basename_result\"\n\n      # Not a directory, so check to see that there is only one file specified.\n      set dummy $files; shift\n      test \"$#\" -gt 1 && \\\n\tfunc_fatal_help \"\\`$dest' is not a directory\"\n    fi\n    case $destdir in\n    [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n    *)\n      for file in $files; do\n\tcase $file in\n\t*.lo) ;;\n\t*)\n\t  func_fatal_help \"\\`$destdir' must be an absolute directory name\"\n\t  ;;\n\tesac\n      done\n      ;;\n    esac\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=\"$magic\"\n\n    staticlibs=\n    future_libdirs=\n    current_libdirs=\n    for file in $files; do\n\n      # Do each installation.\n      case $file in\n      *.$libext)\n\t# Do the static libraries later.\n\tfunc_append staticlibs \" $file\"\n\t;;\n\n      *.la)\n\tfunc_resolve_sysroot \"$file\"\n\tfile=$func_resolve_sysroot_result\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"\\`$file' is not a valid libtool archive\"\n\n\tlibrary_names=\n\told_library=\n\trelink_command=\n\tfunc_source \"$file\"\n\n\t# Add the libdir to current_libdirs if it is the destination.\n\tif test \"X$destdir\" = \"X$libdir\"; then\n\t  case \"$current_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append current_libdirs \" $libdir\" ;;\n\t  esac\n\telse\n\t  # Note the libdir as a future libdir.\n\t  case \"$future_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append future_libdirs \" $libdir\" ;;\n\t  esac\n\tfi\n\n\tfunc_dirname \"$file\" \"/\" \"\"\n\tdir=\"$func_dirname_result\"\n\tfunc_append dir \"$objdir\"\n\n\tif test -n \"$relink_command\"; then\n\t  # Determine the prefix the user has applied to our future dir.\n\t  inst_prefix_dir=`$ECHO \"$destdir\" | $SED -e \"s%$libdir\\$%%\"`\n\n\t  # Don't allow the user to place us outside of our expected\n\t  # location b/c this prevents finding dependent libraries that\n\t  # are installed to the same prefix.\n\t  # At present, this check doesn't affect windows .dll's that\n\t  # are installed into $libdir/../bin (currently, that works fine)\n\t  # but it's something to keep an eye on.\n\t  test \"$inst_prefix_dir\" = \"$destdir\" && \\\n\t    func_fatal_error \"error: cannot install \\`$file' to a directory not ending in $libdir\"\n\n\t  if test -n \"$inst_prefix_dir\"; then\n\t    # Stick the inst_prefix_dir data into the link command.\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%-inst-prefix-dir $inst_prefix_dir%\"`\n\t  else\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%%\"`\n\t  fi\n\n\t  func_warning \"relinking \\`$file'\"\n\t  func_show_eval \"$relink_command\" \\\n\t    'func_fatal_error \"error: relink \\`$file'\\'' with the above command before installing it\"'\n\tfi\n\n\t# See the names of the shared library.\n\tset dummy $library_names; shift\n\tif test -n \"$1\"; then\n\t  realname=\"$1\"\n\t  shift\n\n\t  srcname=\"$realname\"\n\t  test -n \"$relink_command\" && srcname=\"$realname\"T\n\n\t  # Install the shared library and build the symlinks.\n\t  func_show_eval \"$install_shared_prog $dir/$srcname $destdir/$realname\" \\\n\t      'exit $?'\n\t  tstripme=\"$stripme\"\n\t  case $host_os in\n\t  cygwin* | mingw* | pw32* | cegcc*)\n\t    case $realname in\n\t    *.dll.a)\n\t      tstripme=\"\"\n\t      ;;\n\t    esac\n\t    ;;\n\t  esac\n\t  if test -n \"$tstripme\" && test -n \"$striplib\"; then\n\t    func_show_eval \"$striplib $destdir/$realname\" 'exit $?'\n\t  fi\n\n\t  if test \"$#\" -gt 0; then\n\t    # Delete the old symlinks, and create new ones.\n\t    # Try `ln -sf' first, because the `ln' binary might depend on\n\t    # the symlink we replace!  Solaris /bin/ln does not understand -f,\n\t    # so we also need to try rm && ln -s.\n\t    for linkname\n\t    do\n\t      test \"$linkname\" != \"$realname\" \\\n\t\t&& func_show_eval \"(cd $destdir && { $LN_S -f $realname $linkname || { $RM $linkname && $LN_S $realname $linkname; }; })\"\n\t    done\n\t  fi\n\n\t  # Do each command in the postinstall commands.\n\t  lib=\"$destdir/$realname\"\n\t  func_execute_cmds \"$postinstall_cmds\" 'exit $?'\n\tfi\n\n\t# Install the pseudo-library for information purposes.\n\tfunc_basename \"$file\"\n\tname=\"$func_basename_result\"\n\tinstname=\"$dir/$name\"i\n\tfunc_show_eval \"$install_prog $instname $destdir/$name\" 'exit $?'\n\n\t# Maybe install the static library, too.\n\ttest -n \"$old_library\" && func_append staticlibs \" $dir/$old_library\"\n\t;;\n\n      *.lo)\n\t# Install (i.e. copy) a libtool object.\n\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=\"$destdir/$destname\"\n\telse\n\t  func_basename \"$file\"\n\t  destfile=\"$func_basename_result\"\n\t  destfile=\"$destdir/$destfile\"\n\tfi\n\n\t# Deduce the name of the destination old-style object file.\n\tcase $destfile in\n\t*.lo)\n\t  func_lo2o \"$destfile\"\n\t  staticdest=$func_lo2o_result\n\t  ;;\n\t*.$objext)\n\t  staticdest=\"$destfile\"\n\t  destfile=\n\t  ;;\n\t*)\n\t  func_fatal_help \"cannot copy a libtool object to \\`$destfile'\"\n\t  ;;\n\tesac\n\n\t# Install the libtool object if requested.\n\ttest -n \"$destfile\" && \\\n\t  func_show_eval \"$install_prog $file $destfile\" 'exit $?'\n\n\t# Install the old object if enabled.\n\tif test \"$build_old_libs\" = yes; then\n\t  # Deduce the name of the old-style object file.\n\t  func_lo2o \"$file\"\n\t  staticobj=$func_lo2o_result\n\t  func_show_eval \"$install_prog \\$staticobj \\$staticdest\" 'exit $?'\n\tfi\n\texit $EXIT_SUCCESS\n\t;;\n\n      *)\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=\"$destdir/$destname\"\n\telse\n\t  func_basename \"$file\"\n\t  destfile=\"$func_basename_result\"\n\t  destfile=\"$destdir/$destfile\"\n\tfi\n\n\t# If the file is missing, and there is a .exe on the end, strip it\n\t# because it is most likely a libtool script we actually want to\n\t# install\n\tstripped_ext=\"\"\n\tcase $file in\n\t  *.exe)\n\t    if test ! -f \"$file\"; then\n\t      func_stripname '' '.exe' \"$file\"\n\t      file=$func_stripname_result\n\t      stripped_ext=\".exe\"\n\t    fi\n\t    ;;\n\tesac\n\n\t# Do a test to see if this is really a libtool program.\n\tcase $host in\n\t*cygwin* | *mingw*)\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      wrapper=$func_ltwrapper_scriptname_result\n\t    else\n\t      func_stripname '' '.exe' \"$file\"\n\t      wrapper=$func_stripname_result\n\t    fi\n\t    ;;\n\t*)\n\t    wrapper=$file\n\t    ;;\n\tesac\n\tif func_ltwrapper_script_p \"$wrapper\"; then\n\t  notinst_deplibs=\n\t  relink_command=\n\n\t  func_source \"$wrapper\"\n\n\t  # Check the variables that should have been set.\n\t  test -z \"$generated_by_libtool_version\" && \\\n\t    func_fatal_error \"invalid libtool wrapper script \\`$wrapper'\"\n\n\t  finalize=yes\n\t  for lib in $notinst_deplibs; do\n\t    # Check to see that each library is installed.\n\t    libdir=\n\t    if test -f \"$lib\"; then\n\t      func_source \"$lib\"\n\t    fi\n\t    libfile=\"$libdir/\"`$ECHO \"$lib\" | $SED 's%^.*/%%g'` ### testsuite: skip nested quoting test\n\t    if test -n \"$libdir\" && test ! -f \"$libfile\"; then\n\t      func_warning \"\\`$lib' has not been installed in \\`$libdir'\"\n\t      finalize=no\n\t    fi\n\t  done\n\n\t  relink_command=\n\t  func_source \"$wrapper\"\n\n\t  outputname=\n\t  if test \"$fast_install\" = no && test -n \"$relink_command\"; then\n\t    $opt_dry_run || {\n\t      if test \"$finalize\" = yes; then\n\t        tmpdir=`func_mktempdir`\n\t\tfunc_basename \"$file$stripped_ext\"\n\t\tfile=\"$func_basename_result\"\n\t        outputname=\"$tmpdir/$file\"\n\t        # Replace the output file specification.\n\t        relink_command=`$ECHO \"$relink_command\" | $SED 's%@OUTPUT@%'\"$outputname\"'%g'`\n\n\t        $opt_silent || {\n\t          func_quote_for_expand \"$relink_command\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t        }\n\t        if eval \"$relink_command\"; then :\n\t          else\n\t\t  func_error \"error: relink \\`$file' with the above command before installing it\"\n\t\t  $opt_dry_run || ${RM}r \"$tmpdir\"\n\t\t  continue\n\t        fi\n\t        file=\"$outputname\"\n\t      else\n\t        func_warning \"cannot relink \\`$file'\"\n\t      fi\n\t    }\n\t  else\n\t    # Install the binary that we compiled earlier.\n\t    file=`$ECHO \"$file$stripped_ext\" | $SED \"s%\\([^/]*\\)$%$objdir/\\1%\"`\n\t  fi\n\tfi\n\n\t# remove .exe since cygwin /usr/bin/install will append another\n\t# one anyway\n\tcase $install_prog,$host in\n\t*/usr/bin/install*,*cygwin*)\n\t  case $file:$destfile in\n\t  *.exe:*.exe)\n\t    # this is ok\n\t    ;;\n\t  *.exe:*)\n\t    destfile=$destfile.exe\n\t    ;;\n\t  *:*.exe)\n\t    func_stripname '' '.exe' \"$destfile\"\n\t    destfile=$func_stripname_result\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tfunc_show_eval \"$install_prog\\$stripme \\$file \\$destfile\" 'exit $?'\n\t$opt_dry_run || if test -n \"$outputname\"; then\n\t  ${RM}r \"$tmpdir\"\n\tfi\n\t;;\n      esac\n    done\n\n    for file in $staticlibs; do\n      func_basename \"$file\"\n      name=\"$func_basename_result\"\n\n      # Set up the ranlib parameters.\n      oldlib=\"$destdir/$name\"\n      func_to_tool_file \"$oldlib\" func_convert_file_msys_to_w32\n      tool_oldlib=$func_to_tool_file_result\n\n      func_show_eval \"$install_prog \\$file \\$oldlib\" 'exit $?'\n\n      if test -n \"$stripme\" && test -n \"$old_striplib\"; then\n\tfunc_show_eval \"$old_striplib $tool_oldlib\" 'exit $?'\n      fi\n\n      # Do each command in the postinstall commands.\n      func_execute_cmds \"$old_postinstall_cmds\" 'exit $?'\n    done\n\n    test -n \"$future_libdirs\" && \\\n      func_warning \"remember to run \\`$progname --finish$future_libdirs'\"\n\n    if test -n \"$current_libdirs\"; then\n      # Maybe just do a dry run.\n      $opt_dry_run && current_libdirs=\" -n$current_libdirs\"\n      exec_cmd='$SHELL $progpath $preserve_args --finish$current_libdirs'\n    else\n      exit $EXIT_SUCCESS\n    fi\n}\n\ntest \"$opt_mode\" = install && func_mode_install ${1+\"$@\"}\n\n\n# func_generate_dlsyms outputname originator pic_p\n# Extract symbols from dlprefiles and create ${outputname}S.o with\n# a dlpreopen symbol table.\nfunc_generate_dlsyms ()\n{\n    $opt_debug\n    my_outputname=\"$1\"\n    my_originator=\"$2\"\n    my_pic_p=\"${3-no}\"\n    my_prefix=`$ECHO \"$my_originator\" | sed 's%[^a-zA-Z0-9]%_%g'`\n    my_dlsyms=\n\n    if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n      if test -n \"$NM\" && test -n \"$global_symbol_pipe\"; then\n\tmy_dlsyms=\"${my_outputname}S.c\"\n      else\n\tfunc_error \"not configured to extract global symbols from dlpreopened files\"\n      fi\n    fi\n\n    if test -n \"$my_dlsyms\"; then\n      case $my_dlsyms in\n      \"\") ;;\n      *.c)\n\t# Discover the nlist of each of the dlfiles.\n\tnlist=\"$output_objdir/${my_outputname}.nm\"\n\n\tfunc_show_eval \"$RM $nlist ${nlist}S ${nlist}T\"\n\n\t# Parse the name list into a source file.\n\tfunc_verbose \"creating $output_objdir/$my_dlsyms\"\n\n\t$opt_dry_run || $ECHO > \"$output_objdir/$my_dlsyms\" \"\\\n/* $my_dlsyms - symbol resolution table for \\`$my_outputname' dlsym emulation. */\n/* Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION */\n\n#ifdef __cplusplus\nextern \\\"C\\\" {\n#endif\n\n#if defined(__GNUC__) && (((__GNUC__ == 4) && (__GNUC_MINOR__ >= 4)) || (__GNUC__ > 4))\n#pragma GCC diagnostic ignored \\\"-Wstrict-prototypes\\\"\n#endif\n\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined(_WIN32) || defined(__CYGWIN__) || defined(_WIN32_WCE)\n/* DATA imports from DLLs on WIN32 con't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT_DLSYM_CONST\n#elif defined(__osf__)\n/* This system does not cope well with relocations in const data.  */\n# define LT_DLSYM_CONST\n#else\n# define LT_DLSYM_CONST const\n#endif\n\n/* External symbol declarations for the compiler. */\\\n\"\n\n\tif test \"$dlself\" = yes; then\n\t  func_verbose \"generating symbol list for \\`$output'\"\n\n\t  $opt_dry_run || echo ': @PROGRAM@ ' > \"$nlist\"\n\n\t  # Add our own program objects to the symbol list.\n\t  progfiles=`$ECHO \"$objs$old_deplibs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\t  for progfile in $progfiles; do\n\t    func_to_tool_file \"$progfile\" func_convert_file_msys_to_w32\n\t    func_verbose \"extracting global C symbols from \\`$func_to_tool_file_result'\"\n\t    $opt_dry_run || eval \"$NM $func_to_tool_file_result | $global_symbol_pipe >> '$nlist'\"\n\t  done\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $opt_dry_run || {\n\t      eval '$EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t    }\n\t  fi\n\n\t  if test -n \"$export_symbols_regex\"; then\n\t    $opt_dry_run || {\n\t      eval '$EGREP -e \"$export_symbols_regex\" \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t    }\n\t  fi\n\n\t  # Prepare the list of exported symbols\n\t  if test -z \"$export_symbols\"; then\n\t    export_symbols=\"$output_objdir/$outputname.exp\"\n\t    $opt_dry_run || {\n\t      $RM $export_symbols\n\t      eval \"${SED} -n -e '/^: @PROGRAM@ $/d' -e 's/^.* \\(.*\\)$/\\1/p' \"'< \"$nlist\" > \"$export_symbols\"'\n\t      case $host in\n\t      *cygwin* | *mingw* | *cegcc* )\n                eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n                eval 'cat \"$export_symbols\" >> \"$output_objdir/$outputname.def\"'\n\t        ;;\n\t      esac\n\t    }\n\t  else\n\t    $opt_dry_run || {\n\t      eval \"${SED} -e 's/\\([].[*^$]\\)/\\\\\\\\\\1/g' -e 's/^/ /' -e 's/$/$/'\"' < \"$export_symbols\" > \"$output_objdir/$outputname.exp\"'\n\t      eval '$GREP -f \"$output_objdir/$outputname.exp\" < \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t      case $host in\n\t        *cygwin* | *mingw* | *cegcc* )\n\t          eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n\t          eval 'cat \"$nlist\" >> \"$output_objdir/$outputname.def\"'\n\t          ;;\n\t      esac\n\t    }\n\t  fi\n\tfi\n\n\tfor dlprefile in $dlprefiles; do\n\t  func_verbose \"extracting global C symbols from \\`$dlprefile'\"\n\t  func_basename \"$dlprefile\"\n\t  name=\"$func_basename_result\"\n          case $host in\n\t    *cygwin* | *mingw* | *cegcc* )\n\t      # if an import library, we need to obtain dlname\n\t      if func_win32_import_lib_p \"$dlprefile\"; then\n\t        func_tr_sh \"$dlprefile\"\n\t        eval \"curr_lafile=\\$libfile_$func_tr_sh_result\"\n\t        dlprefile_dlbasename=\"\"\n\t        if test -n \"$curr_lafile\" && func_lalib_p \"$curr_lafile\"; then\n\t          # Use subshell, to avoid clobbering current variable values\n\t          dlprefile_dlname=`source \"$curr_lafile\" && echo \"$dlname\"`\n\t          if test -n \"$dlprefile_dlname\" ; then\n\t            func_basename \"$dlprefile_dlname\"\n\t            dlprefile_dlbasename=\"$func_basename_result\"\n\t          else\n\t            # no lafile. user explicitly requested -dlpreopen <import library>.\n\t            $sharedlib_from_linklib_cmd \"$dlprefile\"\n\t            dlprefile_dlbasename=$sharedlib_from_linklib_result\n\t          fi\n\t        fi\n\t        $opt_dry_run || {\n\t          if test -n \"$dlprefile_dlbasename\" ; then\n\t            eval '$ECHO \": $dlprefile_dlbasename\" >> \"$nlist\"'\n\t          else\n\t            func_warning \"Could not compute DLL name from $name\"\n\t            eval '$ECHO \": $name \" >> \"$nlist\"'\n\t          fi\n\t          func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t          eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe |\n\t            $SED -e '/I __imp/d' -e 's/I __nm_/D /;s/_nm__//' >> '$nlist'\"\n\t        }\n\t      else # not an import lib\n\t        $opt_dry_run || {\n\t          eval '$ECHO \": $name \" >> \"$nlist\"'\n\t          func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t          eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t        }\n\t      fi\n\t    ;;\n\t    *)\n\t      $opt_dry_run || {\n\t        eval '$ECHO \": $name \" >> \"$nlist\"'\n\t        func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t        eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t      }\n\t    ;;\n          esac\n\tdone\n\n\t$opt_dry_run || {\n\t  # Make sure we have at least an empty file.\n\t  test -f \"$nlist\" || : > \"$nlist\"\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T\n\t    $MV \"$nlist\"T \"$nlist\"\n\t  fi\n\n\t  # Try sorting and uniquifying the output.\n\t  if $GREP -v \"^: \" < \"$nlist\" |\n\t      if sort -k 3 </dev/null >/dev/null 2>&1; then\n\t\tsort -k 3\n\t      else\n\t\tsort +2\n\t      fi |\n\t      uniq > \"$nlist\"S; then\n\t    :\n\t  else\n\t    $GREP -v \"^: \" < \"$nlist\" > \"$nlist\"S\n\t  fi\n\n\t  if test -f \"$nlist\"S; then\n\t    eval \"$global_symbol_to_cdecl\"' < \"$nlist\"S >> \"$output_objdir/$my_dlsyms\"'\n\t  else\n\t    echo '/* NONE */' >> \"$output_objdir/$my_dlsyms\"\n\t  fi\n\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n\n/* The mapping between symbol names and symbols.  */\ntypedef struct {\n  const char *name;\n  void *address;\n} lt_dlsymlist;\nextern LT_DLSYM_CONST lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[];\nLT_DLSYM_CONST lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[] =\n{\\\n  { \\\"$my_originator\\\", (void *) 0 },\"\n\n\t  case $need_lib_prefix in\n\t  no)\n\t    eval \"$global_symbol_to_c_name_address\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  *)\n\t    eval \"$global_symbol_to_c_name_address_lib_prefix\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  esac\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt_${my_prefix}_LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\\\n\"\n\t} # !$opt_dry_run\n\n\tpic_flag_for_symtable=\n\tcase \"$compile_command \" in\n\t*\" -static \"*) ;;\n\t*)\n\t  case $host in\n\t  # compiling the symbol table file with pic_flag works around\n\t  # a FreeBSD bug that causes programs to crash when -lm is\n\t  # linked before any other PIC object.  But we must not use\n\t  # pic_flag when linking with -static.  The problem exists in\n\t  # FreeBSD 2.2.6 and is fixed in FreeBSD 3.1.\n\t  *-*-freebsd2.*|*-*-freebsd3.0*|*-*-freebsdelf3.0*)\n\t    pic_flag_for_symtable=\" $pic_flag -DFREEBSD_WORKAROUND\" ;;\n\t  *-*-hpux*)\n\t    pic_flag_for_symtable=\" $pic_flag\"  ;;\n\t  *)\n\t    if test \"X$my_pic_p\" != Xno; then\n\t      pic_flag_for_symtable=\" $pic_flag\"\n\t    fi\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tsymtab_cflags=\n\tfor arg in $LTCFLAGS; do\n\t  case $arg in\n\t  -pie | -fpie | -fPIE) ;;\n\t  *) func_append symtab_cflags \" $arg\" ;;\n\t  esac\n\tdone\n\n\t# Now compile the dynamic symbol file.\n\tfunc_show_eval '(cd $output_objdir && $LTCC$symtab_cflags -c$no_builtin_flag$pic_flag_for_symtable \"$my_dlsyms\")' 'exit $?'\n\n\t# Clean up the generated files.\n\tfunc_show_eval '$RM \"$output_objdir/$my_dlsyms\" \"$nlist\" \"${nlist}S\" \"${nlist}T\"'\n\n\t# Transform the symbol file into the correct name.\n\tsymfileobj=\"$output_objdir/${my_outputname}S.$objext\"\n\tcase $host in\n\t*cygwin* | *mingw* | *cegcc* )\n\t  if test -f \"$output_objdir/$my_outputname.def\"; then\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t  else\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  fi\n\t  ;;\n\t*)\n\t  compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  ;;\n\tesac\n\t;;\n      *)\n\tfunc_fatal_error \"unknown suffix for \\`$my_dlsyms'\"\n\t;;\n      esac\n    else\n      # We keep going just in case the user didn't refer to\n      # lt_preloaded_symbols.  The linker will fail if global_symbol_pipe\n      # really was required.\n\n      # Nullify the symbol file.\n      compile_command=`$ECHO \"$compile_command\" | $SED \"s% @SYMFILE@%%\"`\n      finalize_command=`$ECHO \"$finalize_command\" | $SED \"s% @SYMFILE@%%\"`\n    fi\n}\n\n# func_win32_libid arg\n# return the library type of file 'arg'\n#\n# Need a lot of goo to handle *both* DLLs and import libs\n# Has to be a shell function in order to 'eat' the argument\n# that is supplied when $file_magic_command is called.\n# Despite the name, also deal with 64 bit binaries.\nfunc_win32_libid ()\n{\n  $opt_debug\n  win32_libid_type=\"unknown\"\n  win32_fileres=`file -L $1 2>/dev/null`\n  case $win32_fileres in\n  *ar\\ archive\\ import\\ library*) # definitely import\n    win32_libid_type=\"x86 archive import\"\n    ;;\n  *ar\\ archive*) # could be an import, or static\n    # Keep the egrep pattern in sync with the one in _LT_CHECK_MAGIC_METHOD.\n    if eval $OBJDUMP -f $1 | $SED -e '10q' 2>/dev/null |\n       $EGREP 'file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)' >/dev/null; then\n      func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n      win32_nmres=`eval $NM -f posix -A \\\"$func_to_tool_file_result\\\" |\n\t$SED -n -e '\n\t    1,100{\n\t\t/ I /{\n\t\t    s,.*,import,\n\t\t    p\n\t\t    q\n\t\t}\n\t    }'`\n      case $win32_nmres in\n      import*)  win32_libid_type=\"x86 archive import\";;\n      *)        win32_libid_type=\"x86 archive static\";;\n      esac\n    fi\n    ;;\n  *DLL*)\n    win32_libid_type=\"x86 DLL\"\n    ;;\n  *executable*) # but shell scripts are \"executable\" too...\n    case $win32_fileres in\n    *MS\\ Windows\\ PE\\ Intel*)\n      win32_libid_type=\"x86 DLL\"\n      ;;\n    esac\n    ;;\n  esac\n  $ECHO \"$win32_libid_type\"\n}\n\n# func_cygming_dll_for_implib ARG\n#\n# Platform-specific function to extract the\n# name of the DLL associated with the specified\n# import library ARG.\n# Invoked by eval'ing the libtool variable\n#    $sharedlib_from_linklib_cmd\n# Result is available in the variable\n#    $sharedlib_from_linklib_result\nfunc_cygming_dll_for_implib ()\n{\n  $opt_debug\n  sharedlib_from_linklib_result=`$DLLTOOL --identify-strict --identify \"$1\"`\n}\n\n# func_cygming_dll_for_implib_fallback_core SECTION_NAME LIBNAMEs\n#\n# The is the core of a fallback implementation of a\n# platform-specific function to extract the name of the\n# DLL associated with the specified import library LIBNAME.\n#\n# SECTION_NAME is either .idata$6 or .idata$7, depending\n# on the platform and compiler that created the implib.\n#\n# Echos the name of the DLL associated with the\n# specified import library.\nfunc_cygming_dll_for_implib_fallback_core ()\n{\n  $opt_debug\n  match_literal=`$ECHO \"$1\" | $SED \"$sed_make_literal_regex\"`\n  $OBJDUMP -s --section \"$1\" \"$2\" 2>/dev/null |\n    $SED '/^Contents of section '\"$match_literal\"':/{\n      # Place marker at beginning of archive member dllname section\n      s/.*/====MARK====/\n      p\n      d\n    }\n    # These lines can sometimes be longer than 43 characters, but\n    # are always uninteresting\n    /:[\t ]*file format pe[i]\\{,1\\}-/d\n    /^In archive [^:]*:/d\n    # Ensure marker is printed\n    /^====MARK====/p\n    # Remove all lines with less than 43 characters\n    /^.\\{43\\}/!d\n    # From remaining lines, remove first 43 characters\n    s/^.\\{43\\}//' |\n    $SED -n '\n      # Join marker and all lines until next marker into a single line\n      /^====MARK====/ b para\n      H\n      $ b para\n      b\n      :para\n      x\n      s/\\n//g\n      # Remove the marker\n      s/^====MARK====//\n      # Remove trailing dots and whitespace\n      s/[\\. \\t]*$//\n      # Print\n      /./p' |\n    # we now have a list, one entry per line, of the stringified\n    # contents of the appropriate section of all members of the\n    # archive which possess that section. Heuristic: eliminate\n    # all those which have a first or second character that is\n    # a '.' (that is, objdump's representation of an unprintable\n    # character.) This should work for all archives with less than\n    # 0x302f exports -- but will fail for DLLs whose name actually\n    # begins with a literal '.' or a single character followed by\n    # a '.'.\n    #\n    # Of those that remain, print the first one.\n    $SED -e '/^\\./d;/^.\\./d;q'\n}\n\n# func_cygming_gnu_implib_p ARG\n# This predicate returns with zero status (TRUE) if\n# ARG is a GNU/binutils-style import library. Returns\n# with nonzero status (FALSE) otherwise.\nfunc_cygming_gnu_implib_p ()\n{\n  $opt_debug\n  func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n  func_cygming_gnu_implib_tmp=`$NM \"$func_to_tool_file_result\" | eval \"$global_symbol_pipe\" | $EGREP ' (_head_[A-Za-z0-9_]+_[ad]l*|[A-Za-z0-9_]+_[ad]l*_iname)$'`\n  test -n \"$func_cygming_gnu_implib_tmp\"\n}\n\n# func_cygming_ms_implib_p ARG\n# This predicate returns with zero status (TRUE) if\n# ARG is an MS-style import library. Returns\n# with nonzero status (FALSE) otherwise.\nfunc_cygming_ms_implib_p ()\n{\n  $opt_debug\n  func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n  func_cygming_ms_implib_tmp=`$NM \"$func_to_tool_file_result\" | eval \"$global_symbol_pipe\" | $GREP '_NULL_IMPORT_DESCRIPTOR'`\n  test -n \"$func_cygming_ms_implib_tmp\"\n}\n\n# func_cygming_dll_for_implib_fallback ARG\n# Platform-specific function to extract the\n# name of the DLL associated with the specified\n# import library ARG.\n#\n# This fallback implementation is for use when $DLLTOOL\n# does not support the --identify-strict option.\n# Invoked by eval'ing the libtool variable\n#    $sharedlib_from_linklib_cmd\n# Result is available in the variable\n#    $sharedlib_from_linklib_result\nfunc_cygming_dll_for_implib_fallback ()\n{\n  $opt_debug\n  if func_cygming_gnu_implib_p \"$1\" ; then\n    # binutils import library\n    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$7' \"$1\"`\n  elif func_cygming_ms_implib_p \"$1\" ; then\n    # ms-generated import library\n    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$6' \"$1\"`\n  else\n    # unknown\n    sharedlib_from_linklib_result=\"\"\n  fi\n}\n\n\n# func_extract_an_archive dir oldlib\nfunc_extract_an_archive ()\n{\n    $opt_debug\n    f_ex_an_ar_dir=\"$1\"; shift\n    f_ex_an_ar_oldlib=\"$1\"\n    if test \"$lock_old_archive_extraction\" = yes; then\n      lockfile=$f_ex_an_ar_oldlib.lock\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    fi\n    func_show_eval \"(cd \\$f_ex_an_ar_dir && $AR x \\\"\\$f_ex_an_ar_oldlib\\\")\" \\\n\t\t   'stat=$?; rm -f \"$lockfile\"; exit $stat'\n    if test \"$lock_old_archive_extraction\" = yes; then\n      $opt_dry_run || rm -f \"$lockfile\"\n    fi\n    if ($AR t \"$f_ex_an_ar_oldlib\" | sort | sort -uc >/dev/null 2>&1); then\n     :\n    else\n      func_fatal_error \"object name conflicts in archive: $f_ex_an_ar_dir/$f_ex_an_ar_oldlib\"\n    fi\n}\n\n\n# func_extract_archives gentop oldlib ...\nfunc_extract_archives ()\n{\n    $opt_debug\n    my_gentop=\"$1\"; shift\n    my_oldlibs=${1+\"$@\"}\n    my_oldobjs=\"\"\n    my_xlib=\"\"\n    my_xabs=\"\"\n    my_xdir=\"\"\n\n    for my_xlib in $my_oldlibs; do\n      # Extract the objects.\n      case $my_xlib in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) my_xabs=\"$my_xlib\" ;;\n\t*) my_xabs=`pwd`\"/$my_xlib\" ;;\n      esac\n      func_basename \"$my_xlib\"\n      my_xlib=\"$func_basename_result\"\n      my_xlib_u=$my_xlib\n      while :; do\n        case \" $extracted_archives \" in\n\t*\" $my_xlib_u \"*)\n\t  func_arith $extracted_serial + 1\n\t  extracted_serial=$func_arith_result\n\t  my_xlib_u=lt$extracted_serial-$my_xlib ;;\n\t*) break ;;\n\tesac\n      done\n      extracted_archives=\"$extracted_archives $my_xlib_u\"\n      my_xdir=\"$my_gentop/$my_xlib_u\"\n\n      func_mkdir_p \"$my_xdir\"\n\n      case $host in\n      *-darwin*)\n\tfunc_verbose \"Extracting $my_xabs\"\n\t# Do not bother doing anything if just a dry run\n\t$opt_dry_run || {\n\t  darwin_orig_dir=`pwd`\n\t  cd $my_xdir || exit $?\n\t  darwin_archive=$my_xabs\n\t  darwin_curdir=`pwd`\n\t  darwin_base_archive=`basename \"$darwin_archive\"`\n\t  darwin_arches=`$LIPO -info \"$darwin_archive\" 2>/dev/null | $GREP Architectures 2>/dev/null || true`\n\t  if test -n \"$darwin_arches\"; then\n\t    darwin_arches=`$ECHO \"$darwin_arches\" | $SED -e 's/.*are://'`\n\t    darwin_arch=\n\t    func_verbose \"$darwin_base_archive has multiple architectures $darwin_arches\"\n\t    for darwin_arch in  $darwin_arches ; do\n\t      func_mkdir_p \"unfat-$$/${darwin_base_archive}-${darwin_arch}\"\n\t      $LIPO -thin $darwin_arch -output \"unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}\" \"${darwin_archive}\"\n\t      cd \"unfat-$$/${darwin_base_archive}-${darwin_arch}\"\n\t      func_extract_an_archive \"`pwd`\" \"${darwin_base_archive}\"\n\t      cd \"$darwin_curdir\"\n\t      $RM \"unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}\"\n\t    done # $darwin_arches\n            ## Okay now we've a bunch of thin objects, gotta fatten them up :)\n\t    darwin_filelist=`find unfat-$$ -type f -name \\*.o -print -o -name \\*.lo -print | $SED -e \"$basename\" | sort -u`\n\t    darwin_file=\n\t    darwin_files=\n\t    for darwin_file in $darwin_filelist; do\n\t      darwin_files=`find unfat-$$ -name $darwin_file -print | sort | $NL2SP`\n\t      $LIPO -create -output \"$darwin_file\" $darwin_files\n\t    done # $darwin_filelist\n\t    $RM -rf unfat-$$\n\t    cd \"$darwin_orig_dir\"\n\t  else\n\t    cd $darwin_orig_dir\n\t    func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t  fi # $darwin_arches\n\t} # !$opt_dry_run\n\t;;\n      *)\n        func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t;;\n      esac\n      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | sort | $NL2SP`\n    done\n\n    func_extract_archives_result=\"$my_oldobjs\"\n}\n\n\n# func_emit_wrapper [arg=no]\n#\n# Emit a libtool wrapper script on stdout.\n# Don't directly open a file because we may want to\n# incorporate the script contents within a cygwin/mingw\n# wrapper executable.  Must ONLY be called from within\n# func_mode_link because it depends on a number of variables\n# set therein.\n#\n# ARG is the value that the WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\n# variable will take.  If 'yes', then the emitted script\n# will assume that the directory in which it is stored is\n# the $objdir directory.  This is a cygwin/mingw-specific\n# behavior.\nfunc_emit_wrapper ()\n{\n\tfunc_emit_wrapper_arg1=${1-no}\n\n\t$ECHO \"\\\n#! $SHELL\n\n# $output - temporary wrapper script for $objdir/$outputname\n# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n#\n# The $output program cannot be directly executed until all the libtool\n# libraries that it depends on are installed.\n#\n# This wrapper script should never be moved out of the build directory.\n# If it is, it will not operate correctly.\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nsed_quote_subst='$sed_quote_subst'\n\n# Be Bourne compatible\nif test -n \\\"\\${ZSH_VERSION+set}\\\" && (emulate sh) >/dev/null 2>&1; then\n  emulate sh\n  NULLCMD=:\n  # Zsh 3.x and 4.x performs word splitting on \\${1+\\\"\\$@\\\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '\\${1+\\\"\\$@\\\"}'='\\\"\\$@\\\"'\n  setopt NO_GLOB_SUBST\nelse\n  case \\`(set -o) 2>/dev/null\\` in *posix*) set -o posix;; esac\nfi\nBIN_SH=xpg4; export BIN_SH # for Tru64\nDUALCASE=1; export DUALCASE # for MKS sh\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nrelink_command=\\\"$relink_command\\\"\n\n# This environment variable determines our operation mode.\nif test \\\"\\$libtool_install_magic\\\" = \\\"$magic\\\"; then\n  # install mode needs the following variables:\n  generated_by_libtool_version='$macro_version'\n  notinst_deplibs='$notinst_deplibs'\nelse\n  # When we are sourced in execute mode, \\$file and \\$ECHO are already set.\n  if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n    file=\\\"\\$0\\\"\"\n\n    qECHO=`$ECHO \"$ECHO\" | $SED \"$sed_quote_subst\"`\n    $ECHO \"\\\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$1\n_LTECHO_EOF'\n}\n    ECHO=\\\"$qECHO\\\"\n  fi\n\n# Very basic option parsing. These options are (a) specific to\n# the libtool wrapper, (b) are identical between the wrapper\n# /script/ and the wrapper /executable/ which is used only on\n# windows platforms, and (c) all begin with the string \"--lt-\"\n# (application programs are unlikely to have options which match\n# this pattern).\n#\n# There are only two supported options: --lt-debug and\n# --lt-dump-script. There is, deliberately, no --lt-help.\n#\n# The first argument to this parsing function should be the\n# script's $0 value, followed by \"$@\".\nlt_option_debug=\nfunc_parse_lt_options ()\n{\n  lt_script_arg0=\\$0\n  shift\n  for lt_opt\n  do\n    case \\\"\\$lt_opt\\\" in\n    --lt-debug) lt_option_debug=1 ;;\n    --lt-dump-script)\n        lt_dump_D=\\`\\$ECHO \\\"X\\$lt_script_arg0\\\" | $SED -e 's/^X//' -e 's%/[^/]*$%%'\\`\n        test \\\"X\\$lt_dump_D\\\" = \\\"X\\$lt_script_arg0\\\" && lt_dump_D=.\n        lt_dump_F=\\`\\$ECHO \\\"X\\$lt_script_arg0\\\" | $SED -e 's/^X//' -e 's%^.*/%%'\\`\n        cat \\\"\\$lt_dump_D/\\$lt_dump_F\\\"\n        exit 0\n      ;;\n    --lt-*)\n        \\$ECHO \\\"Unrecognized --lt- option: '\\$lt_opt'\\\" 1>&2\n        exit 1\n      ;;\n    esac\n  done\n\n  # Print the debug banner immediately:\n  if test -n \\\"\\$lt_option_debug\\\"; then\n    echo \\\"${outputname}:${output}:\\${LINENO}: libtool wrapper (GNU $PACKAGE$TIMESTAMP) $VERSION\\\" 1>&2\n  fi\n}\n\n# Used when --lt-debug. Prints its arguments to stdout\n# (redirection is the responsibility of the caller)\nfunc_lt_dump_args ()\n{\n  lt_dump_args_N=1;\n  for lt_arg\n  do\n    \\$ECHO \\\"${outputname}:${output}:\\${LINENO}: newargv[\\$lt_dump_args_N]: \\$lt_arg\\\"\n    lt_dump_args_N=\\`expr \\$lt_dump_args_N + 1\\`\n  done\n}\n\n# Core function for launching the target application\nfunc_exec_program_core ()\n{\n\"\n  case $host in\n  # Backslashes separate directories on plain windows\n  *-*-mingw | *-*-os2* | *-cegcc*)\n    $ECHO \"\\\n      if test -n \\\"\\$lt_option_debug\\\"; then\n        \\$ECHO \\\"${outputname}:${output}:\\${LINENO}: newargv[0]: \\$progdir\\\\\\\\\\$program\\\" 1>&2\n        func_lt_dump_args \\${1+\\\"\\$@\\\"} 1>&2\n      fi\n      exec \\\"\\$progdir\\\\\\\\\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n    ;;\n\n  *)\n    $ECHO \"\\\n      if test -n \\\"\\$lt_option_debug\\\"; then\n        \\$ECHO \\\"${outputname}:${output}:\\${LINENO}: newargv[0]: \\$progdir/\\$program\\\" 1>&2\n        func_lt_dump_args \\${1+\\\"\\$@\\\"} 1>&2\n      fi\n      exec \\\"\\$progdir/\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n    ;;\n  esac\n  $ECHO \"\\\n      \\$ECHO \\\"\\$0: cannot exec \\$program \\$*\\\" 1>&2\n      exit 1\n}\n\n# A function to encapsulate launching the target application\n# Strips options in the --lt-* namespace from \\$@ and\n# launches target application with the remaining arguments.\nfunc_exec_program ()\n{\n  case \\\" \\$* \\\" in\n  *\\\\ --lt-*)\n    for lt_wr_arg\n    do\n      case \\$lt_wr_arg in\n      --lt-*) ;;\n      *) set x \\\"\\$@\\\" \\\"\\$lt_wr_arg\\\"; shift;;\n      esac\n      shift\n    done ;;\n  esac\n  func_exec_program_core \\${1+\\\"\\$@\\\"}\n}\n\n  # Parse options\n  func_parse_lt_options \\\"\\$0\\\" \\${1+\\\"\\$@\\\"}\n\n  # Find the directory that this script lives in.\n  thisdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*$%%'\\`\n  test \\\"x\\$thisdir\\\" = \\\"x\\$file\\\" && thisdir=.\n\n  # Follow symbolic links until we get to the real thisdir.\n  file=\\`ls -ld \\\"\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  while test -n \\\"\\$file\\\"; do\n    destdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*\\$%%'\\`\n\n    # If there was a directory component, then change thisdir.\n    if test \\\"x\\$destdir\\\" != \\\"x\\$file\\\"; then\n      case \\\"\\$destdir\\\" in\n      [\\\\\\\\/]* | [A-Za-z]:[\\\\\\\\/]*) thisdir=\\\"\\$destdir\\\" ;;\n      *) thisdir=\\\"\\$thisdir/\\$destdir\\\" ;;\n      esac\n    fi\n\n    file=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%^.*/%%'\\`\n    file=\\`ls -ld \\\"\\$thisdir/\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  done\n\n  # Usually 'no', except on cygwin/mingw when embedded into\n  # the cwrapper.\n  WRAPPER_SCRIPT_BELONGS_IN_OBJDIR=$func_emit_wrapper_arg1\n  if test \\\"\\$WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\\\" = \\\"yes\\\"; then\n    # special case for '.'\n    if test \\\"\\$thisdir\\\" = \\\".\\\"; then\n      thisdir=\\`pwd\\`\n    fi\n    # remove .libs from thisdir\n    case \\\"\\$thisdir\\\" in\n    *[\\\\\\\\/]$objdir ) thisdir=\\`\\$ECHO \\\"\\$thisdir\\\" | $SED 's%[\\\\\\\\/][^\\\\\\\\/]*$%%'\\` ;;\n    $objdir )   thisdir=. ;;\n    esac\n  fi\n\n  # Try to get the absolute directory name.\n  absdir=\\`cd \\\"\\$thisdir\\\" && pwd\\`\n  test -n \\\"\\$absdir\\\" && thisdir=\\\"\\$absdir\\\"\n\"\n\n\tif test \"$fast_install\" = yes; then\n\t  $ECHO \"\\\n  program=lt-'$outputname'$exeext\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\n  if test ! -f \\\"\\$progdir/\\$program\\\" ||\n     { file=\\`ls -1dt \\\"\\$progdir/\\$program\\\" \\\"\\$progdir/../\\$program\\\" 2>/dev/null | ${SED} 1q\\`; \\\\\n       test \\\"X\\$file\\\" != \\\"X\\$progdir/\\$program\\\"; }; then\n\n    file=\\\"\\$\\$-\\$program\\\"\n\n    if test ! -d \\\"\\$progdir\\\"; then\n      $MKDIR \\\"\\$progdir\\\"\n    else\n      $RM \\\"\\$progdir/\\$file\\\"\n    fi\"\n\n\t  $ECHO \"\\\n\n    # relink executable if necessary\n    if test -n \\\"\\$relink_command\\\"; then\n      if relink_command_output=\\`eval \\$relink_command 2>&1\\`; then :\n      else\n\t$ECHO \\\"\\$relink_command_output\\\" >&2\n\t$RM \\\"\\$progdir/\\$file\\\"\n\texit 1\n      fi\n    fi\n\n    $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\" 2>/dev/null ||\n    { $RM \\\"\\$progdir/\\$program\\\";\n      $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\"; }\n    $RM \\\"\\$progdir/\\$file\\\"\n  fi\"\n\telse\n\t  $ECHO \"\\\n  program='$outputname'\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\"\n\tfi\n\n\t$ECHO \"\\\n\n  if test -f \\\"\\$progdir/\\$program\\\"; then\"\n\n\t# fixup the dll searchpath if we need to.\n\t#\n\t# Fix the DLL searchpath if we need to.  Do this before prepending\n\t# to shlibpath, because on Windows, both are PATH and uninstalled\n\t# libraries must come first.\n\tif test -n \"$dllsearchpath\"; then\n\t  $ECHO \"\\\n    # Add the dll search path components to the executable PATH\n    PATH=$dllsearchpath:\\$PATH\n\"\n\tfi\n\n\t# Export our shlibpath_var if we have one.\n\tif test \"$shlibpath_overrides_runpath\" = yes && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n\t  $ECHO \"\\\n    # Add our own library path to $shlibpath_var\n    $shlibpath_var=\\\"$temp_rpath\\$$shlibpath_var\\\"\n\n    # Some systems cannot cope with colon-terminated $shlibpath_var\n    # The second colon is a workaround for a bug in BeOS R4 sed\n    $shlibpath_var=\\`\\$ECHO \\\"\\$$shlibpath_var\\\" | $SED 's/::*\\$//'\\`\n\n    export $shlibpath_var\n\"\n\tfi\n\n\t$ECHO \"\\\n    if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n      # Run the actual program with our arguments.\n      func_exec_program \\${1+\\\"\\$@\\\"}\n    fi\n  else\n    # The program doesn't exist.\n    \\$ECHO \\\"\\$0: error: \\\\\\`\\$progdir/\\$program' does not exist\\\" 1>&2\n    \\$ECHO \\\"This script is just a wrapper for \\$program.\\\" 1>&2\n    \\$ECHO \\\"See the $PACKAGE documentation for more information.\\\" 1>&2\n    exit 1\n  fi\nfi\\\n\"\n}\n\n\n# func_emit_cwrapperexe_src\n# emit the source code for a wrapper executable on stdout\n# Must ONLY be called from within func_mode_link because\n# it depends on a number of variable set therein.\nfunc_emit_cwrapperexe_src ()\n{\n\tcat <<EOF\n\n/* $cwrappersource - temporary wrapper executable for $objdir/$outputname\n   Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n\n   The $output program cannot be directly executed until all the libtool\n   libraries that it depends on are installed.\n\n   This wrapper executable should never be moved out of the build directory.\n   If it is, it will not operate correctly.\n*/\nEOF\n\t    cat <<\"EOF\"\n#ifdef _MSC_VER\n# define _CRT_SECURE_NO_DEPRECATE 1\n#endif\n#include <stdio.h>\n#include <stdlib.h>\n#ifdef _MSC_VER\n# include <direct.h>\n# include <process.h>\n# include <io.h>\n#else\n# include <unistd.h>\n# include <stdint.h>\n# ifdef __CYGWIN__\n#  include <io.h>\n# endif\n#endif\n#include <malloc.h>\n#include <stdarg.h>\n#include <assert.h>\n#include <string.h>\n#include <ctype.h>\n#include <errno.h>\n#include <fcntl.h>\n#include <sys/stat.h>\n\n/* declarations of non-ANSI functions */\n#if defined(__MINGW32__)\n# ifdef __STRICT_ANSI__\nint _putenv (const char *);\n# endif\n#elif defined(__CYGWIN__)\n# ifdef __STRICT_ANSI__\nchar *realpath (const char *, char *);\nint putenv (char *);\nint setenv (const char *, const char *, int);\n# endif\n/* #elif defined (other platforms) ... */\n#endif\n\n/* portability defines, excluding path handling macros */\n#if defined(_MSC_VER)\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n# define S_IXUSR _S_IEXEC\n# ifndef _INTPTR_T_DEFINED\n#  define _INTPTR_T_DEFINED\n#  define intptr_t int\n# endif\n#elif defined(__MINGW32__)\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n#elif defined(__CYGWIN__)\n# define HAVE_SETENV\n# define FOPEN_WB \"wb\"\n/* #elif defined (other platforms) ... */\n#endif\n\n#if defined(PATH_MAX)\n# define LT_PATHMAX PATH_MAX\n#elif defined(MAXPATHLEN)\n# define LT_PATHMAX MAXPATHLEN\n#else\n# define LT_PATHMAX 1024\n#endif\n\n#ifndef S_IXOTH\n# define S_IXOTH 0\n#endif\n#ifndef S_IXGRP\n# define S_IXGRP 0\n#endif\n\n/* path handling portability macros */\n#ifndef DIR_SEPARATOR\n# define DIR_SEPARATOR '/'\n# define PATH_SEPARATOR ':'\n#endif\n\n#if defined (_WIN32) || defined (__MSDOS__) || defined (__DJGPP__) || \\\n  defined (__OS2__)\n# define HAVE_DOS_BASED_FILE_SYSTEM\n# define FOPEN_WB \"wb\"\n# ifndef DIR_SEPARATOR_2\n#  define DIR_SEPARATOR_2 '\\\\'\n# endif\n# ifndef PATH_SEPARATOR_2\n#  define PATH_SEPARATOR_2 ';'\n# endif\n#endif\n\n#ifndef DIR_SEPARATOR_2\n# define IS_DIR_SEPARATOR(ch) ((ch) == DIR_SEPARATOR)\n#else /* DIR_SEPARATOR_2 */\n# define IS_DIR_SEPARATOR(ch) \\\n\t(((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))\n#endif /* DIR_SEPARATOR_2 */\n\n#ifndef PATH_SEPARATOR_2\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR)\n#else /* PATH_SEPARATOR_2 */\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR_2)\n#endif /* PATH_SEPARATOR_2 */\n\n#ifndef FOPEN_WB\n# define FOPEN_WB \"w\"\n#endif\n#ifndef _O_BINARY\n# define _O_BINARY 0\n#endif\n\n#define XMALLOC(type, num)      ((type *) xmalloc ((num) * sizeof(type)))\n#define XFREE(stale) do { \\\n  if (stale) { free ((void *) stale); stale = 0; } \\\n} while (0)\n\n#if defined(LT_DEBUGWRAPPER)\nstatic int lt_debug = 1;\n#else\nstatic int lt_debug = 0;\n#endif\n\nconst char *program_name = \"libtool-wrapper\"; /* in case xstrdup fails */\n\nvoid *xmalloc (size_t num);\nchar *xstrdup (const char *string);\nconst char *base_name (const char *name);\nchar *find_executable (const char *wrapper);\nchar *chase_symlinks (const char *pathspec);\nint make_executable (const char *path);\nint check_executable (const char *path);\nchar *strendzap (char *str, const char *pat);\nvoid lt_debugprintf (const char *file, int line, const char *fmt, ...);\nvoid lt_fatal (const char *file, int line, const char *message, ...);\nstatic const char *nonnull (const char *s);\nstatic const char *nonempty (const char *s);\nvoid lt_setenv (const char *name, const char *value);\nchar *lt_extend_str (const char *orig_value, const char *add, int to_end);\nvoid lt_update_exe_path (const char *name, const char *value);\nvoid lt_update_lib_path (const char *name, const char *value);\nchar **prepare_spawn (char **argv);\nvoid lt_dump_script (FILE *f);\nEOF\n\n\t    cat <<EOF\nvolatile const char * MAGIC_EXE = \"$magic_exe\";\nconst char * LIB_PATH_VARNAME = \"$shlibpath_var\";\nEOF\n\n\t    if test \"$shlibpath_overrides_runpath\" = yes && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n              func_to_host_path \"$temp_rpath\"\n\t      cat <<EOF\nconst char * LIB_PATH_VALUE   = \"$func_to_host_path_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * LIB_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test -n \"$dllsearchpath\"; then\n              func_to_host_path \"$dllsearchpath:\"\n\t      cat <<EOF\nconst char * EXE_PATH_VARNAME = \"PATH\";\nconst char * EXE_PATH_VALUE   = \"$func_to_host_path_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * EXE_PATH_VARNAME = \"\";\nconst char * EXE_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test \"$fast_install\" = yes; then\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"lt-$outputname\"; /* hopefully, no .exe */\nEOF\n\t    else\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"$outputname\"; /* hopefully, no .exe */\nEOF\n\t    fi\n\n\n\t    cat <<\"EOF\"\n\n#define LTWRAPPER_OPTION_PREFIX         \"--lt-\"\n\nstatic const char *ltwrapper_option_prefix = LTWRAPPER_OPTION_PREFIX;\nstatic const char *dumpscript_opt       = LTWRAPPER_OPTION_PREFIX \"dump-script\";\nstatic const char *debug_opt            = LTWRAPPER_OPTION_PREFIX \"debug\";\n\nint\nmain (int argc, char *argv[])\n{\n  char **newargz;\n  int  newargc;\n  char *tmp_pathspec;\n  char *actual_cwrapper_path;\n  char *actual_cwrapper_name;\n  char *target_name;\n  char *lt_argv_zero;\n  intptr_t rval = 127;\n\n  int i;\n\n  program_name = (char *) xstrdup (base_name (argv[0]));\n  newargz = XMALLOC (char *, argc + 1);\n\n  /* very simple arg parsing; don't want to rely on getopt\n   * also, copy all non cwrapper options to newargz, except\n   * argz[0], which is handled differently\n   */\n  newargc=0;\n  for (i = 1; i < argc; i++)\n    {\n      if (strcmp (argv[i], dumpscript_opt) == 0)\n\t{\nEOF\n\t    case \"$host\" in\n\t      *mingw* | *cygwin* )\n\t\t# make stdout use \"unix\" line endings\n\t\techo \"          setmode(1,_O_BINARY);\"\n\t\t;;\n\t      esac\n\n\t    cat <<\"EOF\"\n\t  lt_dump_script (stdout);\n\t  return 0;\n\t}\n      if (strcmp (argv[i], debug_opt) == 0)\n\t{\n          lt_debug = 1;\n          continue;\n\t}\n      if (strcmp (argv[i], ltwrapper_option_prefix) == 0)\n        {\n          /* however, if there is an option in the LTWRAPPER_OPTION_PREFIX\n             namespace, but it is not one of the ones we know about and\n             have already dealt with, above (inluding dump-script), then\n             report an error. Otherwise, targets might begin to believe\n             they are allowed to use options in the LTWRAPPER_OPTION_PREFIX\n             namespace. The first time any user complains about this, we'll\n             need to make LTWRAPPER_OPTION_PREFIX a configure-time option\n             or a configure.ac-settable value.\n           */\n          lt_fatal (__FILE__, __LINE__,\n\t\t    \"unrecognized %s option: '%s'\",\n                    ltwrapper_option_prefix, argv[i]);\n        }\n      /* otherwise ... */\n      newargz[++newargc] = xstrdup (argv[i]);\n    }\n  newargz[++newargc] = NULL;\n\nEOF\n\t    cat <<EOF\n  /* The GNU banner must be the first non-error debug message */\n  lt_debugprintf (__FILE__, __LINE__, \"libtool wrapper (GNU $PACKAGE$TIMESTAMP) $VERSION\\n\");\nEOF\n\t    cat <<\"EOF\"\n  lt_debugprintf (__FILE__, __LINE__, \"(main) argv[0]: %s\\n\", argv[0]);\n  lt_debugprintf (__FILE__, __LINE__, \"(main) program_name: %s\\n\", program_name);\n\n  tmp_pathspec = find_executable (argv[0]);\n  if (tmp_pathspec == NULL)\n    lt_fatal (__FILE__, __LINE__, \"couldn't find %s\", argv[0]);\n  lt_debugprintf (__FILE__, __LINE__,\n                  \"(main) found exe (before symlink chase) at: %s\\n\",\n\t\t  tmp_pathspec);\n\n  actual_cwrapper_path = chase_symlinks (tmp_pathspec);\n  lt_debugprintf (__FILE__, __LINE__,\n                  \"(main) found exe (after symlink chase) at: %s\\n\",\n\t\t  actual_cwrapper_path);\n  XFREE (tmp_pathspec);\n\n  actual_cwrapper_name = xstrdup (base_name (actual_cwrapper_path));\n  strendzap (actual_cwrapper_path, actual_cwrapper_name);\n\n  /* wrapper name transforms */\n  strendzap (actual_cwrapper_name, \".exe\");\n  tmp_pathspec = lt_extend_str (actual_cwrapper_name, \".exe\", 1);\n  XFREE (actual_cwrapper_name);\n  actual_cwrapper_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  /* target_name transforms -- use actual target program name; might have lt- prefix */\n  target_name = xstrdup (base_name (TARGET_PROGRAM_NAME));\n  strendzap (target_name, \".exe\");\n  tmp_pathspec = lt_extend_str (target_name, \".exe\", 1);\n  XFREE (target_name);\n  target_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(main) libtool target name: %s\\n\",\n\t\t  target_name);\nEOF\n\n\t    cat <<EOF\n  newargz[0] =\n    XMALLOC (char, (strlen (actual_cwrapper_path) +\n\t\t    strlen (\"$objdir\") + 1 + strlen (actual_cwrapper_name) + 1));\n  strcpy (newargz[0], actual_cwrapper_path);\n  strcat (newargz[0], \"$objdir\");\n  strcat (newargz[0], \"/\");\nEOF\n\n\t    cat <<\"EOF\"\n  /* stop here, and copy so we don't have to do this twice */\n  tmp_pathspec = xstrdup (newargz[0]);\n\n  /* do NOT want the lt- prefix here, so use actual_cwrapper_name */\n  strcat (newargz[0], actual_cwrapper_name);\n\n  /* DO want the lt- prefix here if it exists, so use target_name */\n  lt_argv_zero = lt_extend_str (tmp_pathspec, target_name, 1);\n  XFREE (tmp_pathspec);\n  tmp_pathspec = NULL;\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t    cat <<\"EOF\"\n  {\n    char* p;\n    while ((p = strchr (newargz[0], '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n    while ((p = strchr (lt_argv_zero, '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n  }\nEOF\n\t    ;;\n\t    esac\n\n\t    cat <<\"EOF\"\n  XFREE (target_name);\n  XFREE (actual_cwrapper_path);\n  XFREE (actual_cwrapper_name);\n\n  lt_setenv (\"BIN_SH\", \"xpg4\"); /* for Tru64 */\n  lt_setenv (\"DUALCASE\", \"1\");  /* for MSK sh */\n  /* Update the DLL searchpath.  EXE_PATH_VALUE ($dllsearchpath) must\n     be prepended before (that is, appear after) LIB_PATH_VALUE ($temp_rpath)\n     because on Windows, both *_VARNAMEs are PATH but uninstalled\n     libraries must come first. */\n  lt_update_exe_path (EXE_PATH_VARNAME, EXE_PATH_VALUE);\n  lt_update_lib_path (LIB_PATH_VARNAME, LIB_PATH_VALUE);\n\n  lt_debugprintf (__FILE__, __LINE__, \"(main) lt_argv_zero: %s\\n\",\n\t\t  nonnull (lt_argv_zero));\n  for (i = 0; i < newargc; i++)\n    {\n      lt_debugprintf (__FILE__, __LINE__, \"(main) newargz[%d]: %s\\n\",\n\t\t      i, nonnull (newargz[i]));\n    }\n\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n  /* execv doesn't actually work on mingw as expected on unix */\n  newargz = prepare_spawn (newargz);\n  rval = _spawnv (_P_WAIT, lt_argv_zero, (const char * const *) newargz);\n  if (rval == -1)\n    {\n      /* failed to start process */\n      lt_debugprintf (__FILE__, __LINE__,\n\t\t      \"(main) failed to launch target \\\"%s\\\": %s\\n\",\n\t\t      lt_argv_zero, nonnull (strerror (errno)));\n      return 127;\n    }\n  return rval;\nEOF\n\t\t;;\n\t      *)\n\t\tcat <<\"EOF\"\n  execv (lt_argv_zero, newargz);\n  return rval; /* =127, but avoids unused variable warning */\nEOF\n\t\t;;\n\t    esac\n\n\t    cat <<\"EOF\"\n}\n\nvoid *\nxmalloc (size_t num)\n{\n  void *p = (void *) malloc (num);\n  if (!p)\n    lt_fatal (__FILE__, __LINE__, \"memory exhausted\");\n\n  return p;\n}\n\nchar *\nxstrdup (const char *string)\n{\n  return string ? strcpy ((char *) xmalloc (strlen (string) + 1),\n\t\t\t  string) : NULL;\n}\n\nconst char *\nbase_name (const char *name)\n{\n  const char *base;\n\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n  /* Skip over the disk name in MSDOS pathnames. */\n  if (isalpha ((unsigned char) name[0]) && name[1] == ':')\n    name += 2;\n#endif\n\n  for (base = name; *name; name++)\n    if (IS_DIR_SEPARATOR (*name))\n      base = name + 1;\n  return base;\n}\n\nint\ncheck_executable (const char *path)\n{\n  struct stat st;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(check_executable): %s\\n\",\n                  nonempty (path));\n  if ((!path) || (!*path))\n    return 0;\n\n  if ((stat (path, &st) >= 0)\n      && (st.st_mode & (S_IXUSR | S_IXGRP | S_IXOTH)))\n    return 1;\n  else\n    return 0;\n}\n\nint\nmake_executable (const char *path)\n{\n  int rval = 0;\n  struct stat st;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(make_executable): %s\\n\",\n                  nonempty (path));\n  if ((!path) || (!*path))\n    return 0;\n\n  if (stat (path, &st) >= 0)\n    {\n      rval = chmod (path, st.st_mode | S_IXOTH | S_IXGRP | S_IXUSR);\n    }\n  return rval;\n}\n\n/* Searches for the full path of the wrapper.  Returns\n   newly allocated full path name if found, NULL otherwise\n   Does not chase symlinks, even on platforms that support them.\n*/\nchar *\nfind_executable (const char *wrapper)\n{\n  int has_slash = 0;\n  const char *p;\n  const char *p_next;\n  /* static buffer for getcwd */\n  char tmp[LT_PATHMAX + 1];\n  int tmp_len;\n  char *concat_name;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(find_executable): %s\\n\",\n                  nonempty (wrapper));\n\n  if ((wrapper == NULL) || (*wrapper == '\\0'))\n    return NULL;\n\n  /* Absolute path? */\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n  if (isalpha ((unsigned char) wrapper[0]) && wrapper[1] == ':')\n    {\n      concat_name = xstrdup (wrapper);\n      if (check_executable (concat_name))\n\treturn concat_name;\n      XFREE (concat_name);\n    }\n  else\n    {\n#endif\n      if (IS_DIR_SEPARATOR (wrapper[0]))\n\t{\n\t  concat_name = xstrdup (wrapper);\n\t  if (check_executable (concat_name))\n\t    return concat_name;\n\t  XFREE (concat_name);\n\t}\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n    }\n#endif\n\n  for (p = wrapper; *p; p++)\n    if (*p == '/')\n      {\n\thas_slash = 1;\n\tbreak;\n      }\n  if (!has_slash)\n    {\n      /* no slashes; search PATH */\n      const char *path = getenv (\"PATH\");\n      if (path != NULL)\n\t{\n\t  for (p = path; *p; p = p_next)\n\t    {\n\t      const char *q;\n\t      size_t p_len;\n\t      for (q = p; *q; q++)\n\t\tif (IS_PATH_SEPARATOR (*q))\n\t\t  break;\n\t      p_len = q - p;\n\t      p_next = (*q == '\\0' ? q : q + 1);\n\t      if (p_len == 0)\n\t\t{\n\t\t  /* empty path: current directory */\n\t\t  if (getcwd (tmp, LT_PATHMAX) == NULL)\n\t\t    lt_fatal (__FILE__, __LINE__, \"getcwd failed: %s\",\n                              nonnull (strerror (errno)));\n\t\t  tmp_len = strlen (tmp);\n\t\t  concat_name =\n\t\t    XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, tmp, tmp_len);\n\t\t  concat_name[tmp_len] = '/';\n\t\t  strcpy (concat_name + tmp_len + 1, wrapper);\n\t\t}\n\t      else\n\t\t{\n\t\t  concat_name =\n\t\t    XMALLOC (char, p_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, p, p_len);\n\t\t  concat_name[p_len] = '/';\n\t\t  strcpy (concat_name + p_len + 1, wrapper);\n\t\t}\n\t      if (check_executable (concat_name))\n\t\treturn concat_name;\n\t      XFREE (concat_name);\n\t    }\n\t}\n      /* not found in PATH; assume curdir */\n    }\n  /* Relative path | not found in path: prepend cwd */\n  if (getcwd (tmp, LT_PATHMAX) == NULL)\n    lt_fatal (__FILE__, __LINE__, \"getcwd failed: %s\",\n              nonnull (strerror (errno)));\n  tmp_len = strlen (tmp);\n  concat_name = XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n  memcpy (concat_name, tmp, tmp_len);\n  concat_name[tmp_len] = '/';\n  strcpy (concat_name + tmp_len + 1, wrapper);\n\n  if (check_executable (concat_name))\n    return concat_name;\n  XFREE (concat_name);\n  return NULL;\n}\n\nchar *\nchase_symlinks (const char *pathspec)\n{\n#ifndef S_ISLNK\n  return xstrdup (pathspec);\n#else\n  char buf[LT_PATHMAX];\n  struct stat s;\n  char *tmp_pathspec = xstrdup (pathspec);\n  char *p;\n  int has_symlinks = 0;\n  while (strlen (tmp_pathspec) && !has_symlinks)\n    {\n      lt_debugprintf (__FILE__, __LINE__,\n\t\t      \"checking path component for symlinks: %s\\n\",\n\t\t      tmp_pathspec);\n      if (lstat (tmp_pathspec, &s) == 0)\n\t{\n\t  if (S_ISLNK (s.st_mode) != 0)\n\t    {\n\t      has_symlinks = 1;\n\t      break;\n\t    }\n\n\t  /* search backwards for last DIR_SEPARATOR */\n\t  p = tmp_pathspec + strlen (tmp_pathspec) - 1;\n\t  while ((p > tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    p--;\n\t  if ((p == tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    {\n\t      /* no more DIR_SEPARATORS left */\n\t      break;\n\t    }\n\t  *p = '\\0';\n\t}\n      else\n\t{\n\t  lt_fatal (__FILE__, __LINE__,\n\t\t    \"error accessing file \\\"%s\\\": %s\",\n\t\t    tmp_pathspec, nonnull (strerror (errno)));\n\t}\n    }\n  XFREE (tmp_pathspec);\n\n  if (!has_symlinks)\n    {\n      return xstrdup (pathspec);\n    }\n\n  tmp_pathspec = realpath (pathspec, buf);\n  if (tmp_pathspec == 0)\n    {\n      lt_fatal (__FILE__, __LINE__,\n\t\t\"could not follow symlinks for %s\", pathspec);\n    }\n  return xstrdup (tmp_pathspec);\n#endif\n}\n\nchar *\nstrendzap (char *str, const char *pat)\n{\n  size_t len, patlen;\n\n  assert (str != NULL);\n  assert (pat != NULL);\n\n  len = strlen (str);\n  patlen = strlen (pat);\n\n  if (patlen <= len)\n    {\n      str += len - patlen;\n      if (strcmp (str, pat) == 0)\n\t*str = '\\0';\n    }\n  return str;\n}\n\nvoid\nlt_debugprintf (const char *file, int line, const char *fmt, ...)\n{\n  va_list args;\n  if (lt_debug)\n    {\n      (void) fprintf (stderr, \"%s:%s:%d: \", program_name, file, line);\n      va_start (args, fmt);\n      (void) vfprintf (stderr, fmt, args);\n      va_end (args);\n    }\n}\n\nstatic void\nlt_error_core (int exit_status, const char *file,\n\t       int line, const char *mode,\n\t       const char *message, va_list ap)\n{\n  fprintf (stderr, \"%s:%s:%d: %s: \", program_name, file, line, mode);\n  vfprintf (stderr, message, ap);\n  fprintf (stderr, \".\\n\");\n\n  if (exit_status >= 0)\n    exit (exit_status);\n}\n\nvoid\nlt_fatal (const char *file, int line, const char *message, ...)\n{\n  va_list ap;\n  va_start (ap, message);\n  lt_error_core (EXIT_FAILURE, file, line, \"FATAL\", message, ap);\n  va_end (ap);\n}\n\nstatic const char *\nnonnull (const char *s)\n{\n  return s ? s : \"(null)\";\n}\n\nstatic const char *\nnonempty (const char *s)\n{\n  return (s && !*s) ? \"(empty)\" : nonnull (s);\n}\n\nvoid\nlt_setenv (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_setenv) setting '%s' to '%s'\\n\",\n                  nonnull (name), nonnull (value));\n  {\n#ifdef HAVE_SETENV\n    /* always make a copy, for consistency with !HAVE_SETENV */\n    char *str = xstrdup (value);\n    setenv (name, str, 1);\n#else\n    int len = strlen (name) + 1 + strlen (value) + 1;\n    char *str = XMALLOC (char, len);\n    sprintf (str, \"%s=%s\", name, value);\n    if (putenv (str) != EXIT_SUCCESS)\n      {\n        XFREE (str);\n      }\n#endif\n  }\n}\n\nchar *\nlt_extend_str (const char *orig_value, const char *add, int to_end)\n{\n  char *new_value;\n  if (orig_value && *orig_value)\n    {\n      int orig_value_len = strlen (orig_value);\n      int add_len = strlen (add);\n      new_value = XMALLOC (char, add_len + orig_value_len + 1);\n      if (to_end)\n        {\n          strcpy (new_value, orig_value);\n          strcpy (new_value + orig_value_len, add);\n        }\n      else\n        {\n          strcpy (new_value, add);\n          strcpy (new_value + add_len, orig_value);\n        }\n    }\n  else\n    {\n      new_value = xstrdup (add);\n    }\n  return new_value;\n}\n\nvoid\nlt_update_exe_path (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_update_exe_path) modifying '%s' by prepending '%s'\\n\",\n                  nonnull (name), nonnull (value));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      /* some systems can't cope with a ':'-terminated path #' */\n      int len = strlen (new_value);\n      while (((len = strlen (new_value)) > 0) && IS_PATH_SEPARATOR (new_value[len-1]))\n        {\n          new_value[len-1] = '\\0';\n        }\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nvoid\nlt_update_lib_path (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_update_lib_path) modifying '%s' by prepending '%s'\\n\",\n                  nonnull (name), nonnull (value));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nEOF\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n\n/* Prepares an argument vector before calling spawn().\n   Note that spawn() does not by itself call the command interpreter\n     (getenv (\"COMSPEC\") != NULL ? getenv (\"COMSPEC\") :\n      ({ OSVERSIONINFO v; v.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);\n         GetVersionEx(&v);\n         v.dwPlatformId == VER_PLATFORM_WIN32_NT;\n      }) ? \"cmd.exe\" : \"command.com\").\n   Instead it simply concatenates the arguments, separated by ' ', and calls\n   CreateProcess().  We must quote the arguments since Win32 CreateProcess()\n   interprets characters like ' ', '\\t', '\\\\', '\"' (but not '<' and '>') in a\n   special way:\n   - Space and tab are interpreted as delimiters. They are not treated as\n     delimiters if they are surrounded by double quotes: \"...\".\n   - Unescaped double quotes are removed from the input. Their only effect is\n     that within double quotes, space and tab are treated like normal\n     characters.\n   - Backslashes not followed by double quotes are not special.\n   - But 2*n+1 backslashes followed by a double quote become\n     n backslashes followed by a double quote (n >= 0):\n       \\\" -> \"\n       \\\\\\\" -> \\\"\n       \\\\\\\\\\\" -> \\\\\"\n */\n#define SHELL_SPECIAL_CHARS \"\\\"\\\\ \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\n#define SHELL_SPACE_CHARS \" \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\nchar **\nprepare_spawn (char **argv)\n{\n  size_t argc;\n  char **new_argv;\n  size_t i;\n\n  /* Count number of arguments.  */\n  for (argc = 0; argv[argc] != NULL; argc++)\n    ;\n\n  /* Allocate new argument vector.  */\n  new_argv = XMALLOC (char *, argc + 1);\n\n  /* Put quoted arguments into the new argument vector.  */\n  for (i = 0; i < argc; i++)\n    {\n      const char *string = argv[i];\n\n      if (string[0] == '\\0')\n\tnew_argv[i] = xstrdup (\"\\\"\\\"\");\n      else if (strpbrk (string, SHELL_SPECIAL_CHARS) != NULL)\n\t{\n\t  int quote_around = (strpbrk (string, SHELL_SPACE_CHARS) != NULL);\n\t  size_t length;\n\t  unsigned int backslashes;\n\t  const char *s;\n\t  char *quoted_string;\n\t  char *p;\n\n\t  length = 0;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    length++;\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\tlength += backslashes + 1;\n\t      length++;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    length += backslashes + 1;\n\n\t  quoted_string = XMALLOC (char, length + 1);\n\n\t  p = quoted_string;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    *p++ = '\"';\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\t{\n\t\t  unsigned int j;\n\t\t  for (j = backslashes + 1; j > 0; j--)\n\t\t    *p++ = '\\\\';\n\t\t}\n\t      *p++ = c;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    {\n\t      unsigned int j;\n\t      for (j = backslashes; j > 0; j--)\n\t\t*p++ = '\\\\';\n\t      *p++ = '\"';\n\t    }\n\t  *p = '\\0';\n\n\t  new_argv[i] = quoted_string;\n\t}\n      else\n\tnew_argv[i] = (char *) string;\n    }\n  new_argv[argc] = NULL;\n\n  return new_argv;\n}\nEOF\n\t\t;;\n\t    esac\n\n            cat <<\"EOF\"\nvoid lt_dump_script (FILE* f)\n{\nEOF\n\t    func_emit_wrapper yes |\n\t      $SED -n -e '\ns/^\\(.\\{79\\}\\)\\(..*\\)/\\1\\\n\\2/\nh\ns/\\([\\\\\"]\\)/\\\\\\1/g\ns/$/\\\\n/\ns/\\([^\\n]*\\).*/  fputs (\"\\1\", f);/p\ng\nD'\n            cat <<\"EOF\"\n}\nEOF\n}\n# end: func_emit_cwrapperexe_src\n\n# func_win32_import_lib_p ARG\n# True if ARG is an import lib, as indicated by $file_magic_cmd\nfunc_win32_import_lib_p ()\n{\n    $opt_debug\n    case `eval $file_magic_cmd \\\"\\$1\\\" 2>/dev/null | $SED -e 10q` in\n    *import*) : ;;\n    *) false ;;\n    esac\n}\n\n# func_mode_link arg...\nfunc_mode_link ()\n{\n    $opt_debug\n    case $host in\n    *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n      # It is impossible to link a dll without this setting, and\n      # we shouldn't force the makefile maintainer to figure out\n      # which system we are compiling for in order to pass an extra\n      # flag for every libtool invocation.\n      # allow_undefined=no\n\n      # FIXME: Unfortunately, there are problems with the above when trying\n      # to make a dll which has undefined symbols, in which case not\n      # even a static library is built.  For now, we need to specify\n      # -no-undefined on the libtool link line when we can be certain\n      # that all symbols are satisfied, otherwise we get a static library.\n      allow_undefined=yes\n      ;;\n    *)\n      allow_undefined=yes\n      ;;\n    esac\n    libtool_args=$nonopt\n    base_compile=\"$nonopt $@\"\n    compile_command=$nonopt\n    finalize_command=$nonopt\n\n    compile_rpath=\n    finalize_rpath=\n    compile_shlibpath=\n    finalize_shlibpath=\n    convenience=\n    old_convenience=\n    deplibs=\n    old_deplibs=\n    compiler_flags=\n    linker_flags=\n    dllsearchpath=\n    lib_search_path=`pwd`\n    inst_prefix_dir=\n    new_inherited_linker_flags=\n\n    avoid_version=no\n    bindir=\n    dlfiles=\n    dlprefiles=\n    dlself=no\n    export_dynamic=no\n    export_symbols=\n    export_symbols_regex=\n    generated=\n    libobjs=\n    ltlibs=\n    module=no\n    no_install=no\n    objs=\n    non_pic_objects=\n    precious_files_regex=\n    prefer_static_libs=no\n    preload=no\n    prev=\n    prevarg=\n    release=\n    rpath=\n    xrpath=\n    perm_rpath=\n    temp_rpath=\n    thread_safe=no\n    vinfo=\n    vinfo_number=no\n    weak_libs=\n    single_module=\"${wl}-single_module\"\n    func_infer_tag $base_compile\n\n    # We need to know -static, to get the right output filenames.\n    for arg\n    do\n      case $arg in\n      -shared)\n\ttest \"$build_libtool_libs\" != yes && \\\n\t  func_fatal_configuration \"can not build a shared library\"\n\tbuild_old_libs=no\n\tbreak\n\t;;\n      -all-static | -static | -static-libtool-libs)\n\tcase $arg in\n\t-all-static)\n\t  if test \"$build_libtool_libs\" = yes && test -z \"$link_static_flag\"; then\n\t    func_warning \"complete static linking is impossible in this configuration\"\n\t  fi\n\t  if test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\t-static)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=built\n\t  ;;\n\t-static-libtool-libs)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\tesac\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tbreak\n\t;;\n      esac\n    done\n\n    # See if our shared archives depend on static archives.\n    test -n \"$old_archive_from_new_cmds\" && build_old_libs=yes\n\n    # Go through the arguments, transforming them on the way.\n    while test \"$#\" -gt 0; do\n      arg=\"$1\"\n      shift\n      func_quote_for_eval \"$arg\"\n      qarg=$func_quote_for_eval_unquoted_result\n      func_append libtool_args \" $func_quote_for_eval_result\"\n\n      # If the previous option needs an argument, assign it.\n      if test -n \"$prev\"; then\n\tcase $prev in\n\toutput)\n\t  func_append compile_command \" @OUTPUT@\"\n\t  func_append finalize_command \" @OUTPUT@\"\n\t  ;;\n\tesac\n\n\tcase $prev in\n\tbindir)\n\t  bindir=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tdlfiles|dlprefiles)\n\t  if test \"$preload\" = no; then\n\t    # Add the symbol object into the linking commands.\n\t    func_append compile_command \" @SYMFILE@\"\n\t    func_append finalize_command \" @SYMFILE@\"\n\t    preload=yes\n\t  fi\n\t  case $arg in\n\t  *.la | *.lo) ;;  # We handle these cases below.\n\t  force)\n\t    if test \"$dlself\" = no; then\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  self)\n\t    if test \"$prev\" = dlprefiles; then\n\t      dlself=yes\n\t    elif test \"$prev\" = dlfiles && test \"$dlopen_self\" != yes; then\n\t      dlself=yes\n\t    else\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  *)\n\t    if test \"$prev\" = dlfiles; then\n\t      func_append dlfiles \" $arg\"\n\t    else\n\t      func_append dlprefiles \" $arg\"\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  esac\n\t  ;;\n\texpsyms)\n\t  export_symbols=\"$arg\"\n\t  test -f \"$arg\" \\\n\t    || func_fatal_error \"symbol file \\`$arg' does not exist\"\n\t  prev=\n\t  continue\n\t  ;;\n\texpsyms_regex)\n\t  export_symbols_regex=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tframework)\n\t  case $host in\n\t    *-*-darwin*)\n\t      case \"$deplibs \" in\n\t\t*\" $qarg.ltframework \"*) ;;\n\t\t*) func_append deplibs \" $qarg.ltframework\" # this is fixed later\n\t\t   ;;\n\t      esac\n\t      ;;\n\t  esac\n\t  prev=\n\t  continue\n\t  ;;\n\tinst_prefix)\n\t  inst_prefix_dir=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tobjectlist)\n\t  if test -f \"$arg\"; then\n\t    save_arg=$arg\n\t    moreargs=\n\t    for fil in `cat \"$save_arg\"`\n\t    do\n#\t      func_append moreargs \" $fil\"\n\t      arg=$fil\n\t      # A libtool-controlled object.\n\n\t      # Check to see that this really is a libtool object.\n\t      if func_lalib_unsafe_p \"$arg\"; then\n\t\tpic_object=\n\t\tnon_pic_object=\n\n\t\t# Read the .lo file\n\t\tfunc_source \"$arg\"\n\n\t\tif test -z \"$pic_object\" ||\n\t\t   test -z \"$non_pic_object\" ||\n\t\t   test \"$pic_object\" = none &&\n\t\t   test \"$non_pic_object\" = none; then\n\t\t  func_fatal_error \"cannot find name of object for \\`$arg'\"\n\t\tfi\n\n\t\t# Extract subdirectory from the argument.\n\t\tfunc_dirname \"$arg\" \"/\" \"\"\n\t\txdir=\"$func_dirname_result\"\n\n\t\tif test \"$pic_object\" != none; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  pic_object=\"$xdir$pic_object\"\n\n\t\t  if test \"$prev\" = dlfiles; then\n\t\t    if test \"$build_libtool_libs\" = yes && test \"$dlopen_support\" = yes; then\n\t\t      func_append dlfiles \" $pic_object\"\n\t\t      prev=\n\t\t      continue\n\t\t    else\n\t\t      # If libtool objects are unsupported, then we need to preload.\n\t\t      prev=dlprefiles\n\t\t    fi\n\t\t  fi\n\n\t\t  # CHECK ME:  I think I busted this.  -Ossama\n\t\t  if test \"$prev\" = dlprefiles; then\n\t\t    # Preload the old-style object.\n\t\t    func_append dlprefiles \" $pic_object\"\n\t\t    prev=\n\t\t  fi\n\n\t\t  # A PIC object.\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  arg=\"$pic_object\"\n\t\tfi\n\n\t\t# Non-PIC object.\n\t\tif test \"$non_pic_object\" != none; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  non_pic_object=\"$xdir$non_pic_object\"\n\n\t\t  # A standard non-PIC object\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\t  if test -z \"$pic_object\" || test \"$pic_object\" = none ; then\n\t\t    arg=\"$non_pic_object\"\n\t\t  fi\n\t\telse\n\t\t  # If the PIC object exists, use it instead.\n\t\t  # $xdir was prepended to $pic_object above.\n\t\t  non_pic_object=\"$pic_object\"\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\tfi\n\t      else\n\t\t# Only an error if not doing a dry-run.\n\t\tif $opt_dry_run; then\n\t\t  # Extract subdirectory from the argument.\n\t\t  func_dirname \"$arg\" \"/\" \"\"\n\t\t  xdir=\"$func_dirname_result\"\n\n\t\t  func_lo2o \"$arg\"\n\t\t  pic_object=$xdir$objdir/$func_lo2o_result\n\t\t  non_pic_object=$xdir$func_lo2o_result\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t        else\n\t\t  func_fatal_error \"\\`$arg' is not a valid libtool object\"\n\t\tfi\n\t      fi\n\t    done\n\t  else\n\t    func_fatal_error \"link input file \\`$arg' does not exist\"\n\t  fi\n\t  arg=$save_arg\n\t  prev=\n\t  continue\n\t  ;;\n\tprecious_regex)\n\t  precious_files_regex=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\trelease)\n\t  release=\"-$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\trpath | xrpath)\n\t  # We need an absolute path.\n\t  case $arg in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t  *)\n\t    func_fatal_error \"only absolute run-paths are allowed\"\n\t    ;;\n\t  esac\n\t  if test \"$prev\" = rpath; then\n\t    case \"$rpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) func_append rpath \" $arg\" ;;\n\t    esac\n\t  else\n\t    case \"$xrpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) func_append xrpath \" $arg\" ;;\n\t    esac\n\t  fi\n\t  prev=\n\t  continue\n\t  ;;\n\tshrext)\n\t  shrext_cmds=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tweak)\n\t  func_append weak_libs \" $arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\txcclinker)\n\t  func_append linker_flags \" $qarg\"\n\t  func_append compiler_flags \" $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txcompiler)\n\t  func_append compiler_flags \" $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txlinker)\n\t  func_append linker_flags \" $qarg\"\n\t  func_append compiler_flags \" $wl$qarg\"\n\t  prev=\n\t  func_append compile_command \" $wl$qarg\"\n\t  func_append finalize_command \" $wl$qarg\"\n\t  continue\n\t  ;;\n\t*)\n\t  eval \"$prev=\\\"\\$arg\\\"\"\n\t  prev=\n\t  continue\n\t  ;;\n\tesac\n      fi # test -n \"$prev\"\n\n      prevarg=\"$arg\"\n\n      case $arg in\n      -all-static)\n\tif test -n \"$link_static_flag\"; then\n\t  # See comment for -static flag below, for more details.\n\t  func_append compile_command \" $link_static_flag\"\n\t  func_append finalize_command \" $link_static_flag\"\n\tfi\n\tcontinue\n\t;;\n\n      -allow-undefined)\n\t# FIXME: remove this flag sometime in the future.\n\tfunc_fatal_error \"\\`-allow-undefined' must not be used because it is the default\"\n\t;;\n\n      -avoid-version)\n\tavoid_version=yes\n\tcontinue\n\t;;\n\n      -bindir)\n\tprev=bindir\n\tcontinue\n\t;;\n\n      -dlopen)\n\tprev=dlfiles\n\tcontinue\n\t;;\n\n      -dlpreopen)\n\tprev=dlprefiles\n\tcontinue\n\t;;\n\n      -export-dynamic)\n\texport_dynamic=yes\n\tcontinue\n\t;;\n\n      -export-symbols | -export-symbols-regex)\n\tif test -n \"$export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t  func_fatal_error \"more than one -exported-symbols argument is not allowed\"\n\tfi\n\tif test \"X$arg\" = \"X-export-symbols\"; then\n\t  prev=expsyms\n\telse\n\t  prev=expsyms_regex\n\tfi\n\tcontinue\n\t;;\n\n      -framework)\n\tprev=framework\n\tcontinue\n\t;;\n\n      -inst-prefix-dir)\n\tprev=inst_prefix\n\tcontinue\n\t;;\n\n      # The native IRIX linker understands -LANG:*, -LIST:* and -LNO:*\n      # so, if we see these flags be careful not to treat them like -L\n      -L[A-Z][A-Z]*:*)\n\tcase $with_gcc/$host in\n\tno/*-*-irix* | /*-*-irix*)\n\t  func_append compile_command \" $arg\"\n\t  func_append finalize_command \" $arg\"\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -L*)\n\tfunc_stripname \"-L\" '' \"$arg\"\n\tif test -z \"$func_stripname_result\"; then\n\t  if test \"$#\" -gt 0; then\n\t    func_fatal_error \"require no space between \\`-L' and \\`$1'\"\n\t  else\n\t    func_fatal_error \"need path for \\`-L' option\"\n\t  fi\n\tfi\n\tfunc_resolve_sysroot \"$func_stripname_result\"\n\tdir=$func_resolve_sysroot_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  absdir=`cd \"$dir\" && pwd`\n\t  test -z \"$absdir\" && \\\n\t    func_fatal_error \"cannot determine absolute directory name of \\`$dir'\"\n\t  dir=\"$absdir\"\n\t  ;;\n\tesac\n\tcase \"$deplibs \" in\n\t*\" -L$dir \"* | *\" $arg \"*)\n\t  # Will only happen for absolute or sysroot arguments\n\t  ;;\n\t*)\n\t  # Preserve sysroot, but never include relative directories\n\t  case $dir in\n\t    [\\\\/]* | [A-Za-z]:[\\\\/]* | =*) func_append deplibs \" $arg\" ;;\n\t    *) func_append deplibs \" -L$dir\" ;;\n\t  esac\n\t  func_append lib_search_path \" $dir\"\n\t  ;;\n\tesac\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`$ECHO \"$dir\" | $SED 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$dir:\"*) ;;\n\t  ::) dllsearchpath=$dir;;\n\t  *) func_append dllsearchpath \":$dir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) func_append dllsearchpath \":$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -l*)\n\tif test \"X$arg\" = \"X-lc\" || test \"X$arg\" = \"X-lm\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # These systems don't actually have a C or math library (as such)\n\t    continue\n\t    ;;\n\t  *-*-os2*)\n\t    # These systems don't actually have a C library (as such)\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C and math libraries are in the System framework\n\t    func_append deplibs \" System.ltframework\"\n\t    continue\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  esac\n\telif test \"X$arg\" = \"X-lc_r\"; then\n\t case $host in\n\t *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t   # Do not include libc_r directly, use -pthread flag.\n\t   continue\n\t   ;;\n\t esac\n\tfi\n\tfunc_append deplibs \" $arg\"\n\tcontinue\n\t;;\n\n      -module)\n\tmodule=yes\n\tcontinue\n\t;;\n\n      # Tru64 UNIX uses -model [arg] to determine the layout of C++\n      # classes, name mangling, and exception handling.\n      # Darwin uses the -arch flag to determine output architecture.\n      -model|-arch|-isysroot|--sysroot)\n\tfunc_append compiler_flags \" $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \\\n      |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)\n\tfunc_append compiler_flags \" $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tcase \"$new_inherited_linker_flags \" in\n\t    *\" $arg \"*) ;;\n\t    * ) func_append new_inherited_linker_flags \" $arg\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -multi_module)\n\tsingle_module=\"${wl}-multi_module\"\n\tcontinue\n\t;;\n\n      -no-fast-install)\n\tfast_install=no\n\tcontinue\n\t;;\n\n      -no-install)\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-darwin* | *-cegcc*)\n\t  # The PATH hackery in wrapper scripts is required on Windows\n\t  # and Darwin in order for the loader to find any dlls it needs.\n\t  func_warning \"\\`-no-install' is ignored for $host\"\n\t  func_warning \"assuming \\`-no-fast-install' instead\"\n\t  fast_install=no\n\t  ;;\n\t*) no_install=yes ;;\n\tesac\n\tcontinue\n\t;;\n\n      -no-undefined)\n\tallow_undefined=no\n\tcontinue\n\t;;\n\n      -objectlist)\n\tprev=objectlist\n\tcontinue\n\t;;\n\n      -o) prev=output ;;\n\n      -precious-files-regex)\n\tprev=precious_regex\n\tcontinue\n\t;;\n\n      -release)\n\tprev=release\n\tcontinue\n\t;;\n\n      -rpath)\n\tprev=rpath\n\tcontinue\n\t;;\n\n      -R)\n\tprev=xrpath\n\tcontinue\n\t;;\n\n      -R*)\n\tfunc_stripname '-R' '' \"$arg\"\n\tdir=$func_stripname_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t=*)\n\t  func_stripname '=' '' \"$dir\"\n\t  dir=$lt_sysroot$func_stripname_result\n\t  ;;\n\t*)\n\t  func_fatal_error \"only absolute run-paths are allowed\"\n\t  ;;\n\tesac\n\tcase \"$xrpath \" in\n\t*\" $dir \"*) ;;\n\t*) func_append xrpath \" $dir\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -shared)\n\t# The effects of -shared are defined in a previous loop.\n\tcontinue\n\t;;\n\n      -shrext)\n\tprev=shrext\n\tcontinue\n\t;;\n\n      -static | -static-libtool-libs)\n\t# The effects of -static are defined in a previous loop.\n\t# We used to do the same as -all-static on platforms that\n\t# didn't have a PIC flag, but the assumption that the effects\n\t# would be equivalent was wrong.  It would break on at least\n\t# Digital Unix and AIX.\n\tcontinue\n\t;;\n\n      -thread-safe)\n\tthread_safe=yes\n\tcontinue\n\t;;\n\n      -version-info)\n\tprev=vinfo\n\tcontinue\n\t;;\n\n      -version-number)\n\tprev=vinfo\n\tvinfo_number=yes\n\tcontinue\n\t;;\n\n      -weak)\n        prev=weak\n\tcontinue\n\t;;\n\n      -Wc,*)\n\tfunc_stripname '-Wc,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=\"$IFS\"; IFS=','\n\tfor flag in $args; do\n\t  IFS=\"$save_ifs\"\n          func_quote_for_eval \"$flag\"\n\t  func_append arg \" $func_quote_for_eval_result\"\n\t  func_append compiler_flags \" $func_quote_for_eval_result\"\n\tdone\n\tIFS=\"$save_ifs\"\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Wl,*)\n\tfunc_stripname '-Wl,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=\"$IFS\"; IFS=','\n\tfor flag in $args; do\n\t  IFS=\"$save_ifs\"\n          func_quote_for_eval \"$flag\"\n\t  func_append arg \" $wl$func_quote_for_eval_result\"\n\t  func_append compiler_flags \" $wl$func_quote_for_eval_result\"\n\t  func_append linker_flags \" $func_quote_for_eval_result\"\n\tdone\n\tIFS=\"$save_ifs\"\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Xcompiler)\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -Xlinker)\n\tprev=xlinker\n\tcontinue\n\t;;\n\n      -XCClinker)\n\tprev=xcclinker\n\tcontinue\n\t;;\n\n      # -msg_* for osf cc\n      -msg_*)\n\tfunc_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n\t;;\n\n      # Flags to be passed through unchanged, with rationale:\n      # -64, -mips[0-9]      enable 64-bit mode for the SGI compiler\n      # -r[0-9][0-9]*        specify processor for the SGI compiler\n      # -xarch=*, -xtarget=* enable 64-bit mode for the Sun compiler\n      # +DA*, +DD*           enable 64-bit mode for the HP compiler\n      # -q*                  compiler args for the IBM compiler\n      # -m*, -t[45]*, -txscale* architecture-specific flags for GCC\n      # -F/path              path to uninstalled frameworks, gcc on darwin\n      # -p, -pg, --coverage, -fprofile-*  profiling flags for GCC\n      # @file                GCC response files\n      # -tp=*                Portland pgcc target processor selection\n      # --sysroot=*          for sysroot support\n      # -O*, -flto*, -fwhopr*, -fuse-linker-plugin GCC link-time optimization\n      -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*| \\\n      -t[45]*|-txscale*|-p|-pg|--coverage|-fprofile-*|-F*|@*|-tp=*|--sysroot=*| \\\n      -O*|-flto*|-fwhopr*|-fuse-linker-plugin)\n        func_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n        func_append compile_command \" $arg\"\n        func_append finalize_command \" $arg\"\n        func_append compiler_flags \" $arg\"\n        continue\n        ;;\n\n      # Some other compiler flag.\n      -* | +*)\n        func_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n\t;;\n\n      *.$objext)\n\t# A standard object.\n\tfunc_append objs \" $arg\"\n\t;;\n\n      *.lo)\n\t# A libtool-controlled object.\n\n\t# Check to see that this really is a libtool object.\n\tif func_lalib_unsafe_p \"$arg\"; then\n\t  pic_object=\n\t  non_pic_object=\n\n\t  # Read the .lo file\n\t  func_source \"$arg\"\n\n\t  if test -z \"$pic_object\" ||\n\t     test -z \"$non_pic_object\" ||\n\t     test \"$pic_object\" = none &&\n\t     test \"$non_pic_object\" = none; then\n\t    func_fatal_error \"cannot find name of object for \\`$arg'\"\n\t  fi\n\n\t  # Extract subdirectory from the argument.\n\t  func_dirname \"$arg\" \"/\" \"\"\n\t  xdir=\"$func_dirname_result\"\n\n\t  if test \"$pic_object\" != none; then\n\t    # Prepend the subdirectory the object is found in.\n\t    pic_object=\"$xdir$pic_object\"\n\n\t    if test \"$prev\" = dlfiles; then\n\t      if test \"$build_libtool_libs\" = yes && test \"$dlopen_support\" = yes; then\n\t\tfunc_append dlfiles \" $pic_object\"\n\t\tprev=\n\t\tcontinue\n\t      else\n\t\t# If libtool objects are unsupported, then we need to preload.\n\t\tprev=dlprefiles\n\t      fi\n\t    fi\n\n\t    # CHECK ME:  I think I busted this.  -Ossama\n\t    if test \"$prev\" = dlprefiles; then\n\t      # Preload the old-style object.\n\t      func_append dlprefiles \" $pic_object\"\n\t      prev=\n\t    fi\n\n\t    # A PIC object.\n\t    func_append libobjs \" $pic_object\"\n\t    arg=\"$pic_object\"\n\t  fi\n\n\t  # Non-PIC object.\n\t  if test \"$non_pic_object\" != none; then\n\t    # Prepend the subdirectory the object is found in.\n\t    non_pic_object=\"$xdir$non_pic_object\"\n\n\t    # A standard non-PIC object\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t    if test -z \"$pic_object\" || test \"$pic_object\" = none ; then\n\t      arg=\"$non_pic_object\"\n\t    fi\n\t  else\n\t    # If the PIC object exists, use it instead.\n\t    # $xdir was prepended to $pic_object above.\n\t    non_pic_object=\"$pic_object\"\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  fi\n\telse\n\t  # Only an error if not doing a dry-run.\n\t  if $opt_dry_run; then\n\t    # Extract subdirectory from the argument.\n\t    func_dirname \"$arg\" \"/\" \"\"\n\t    xdir=\"$func_dirname_result\"\n\n\t    func_lo2o \"$arg\"\n\t    pic_object=$xdir$objdir/$func_lo2o_result\n\t    non_pic_object=$xdir$func_lo2o_result\n\t    func_append libobjs \" $pic_object\"\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  else\n\t    func_fatal_error \"\\`$arg' is not a valid libtool object\"\n\t  fi\n\tfi\n\t;;\n\n      *.$libext)\n\t# An archive.\n\tfunc_append deplibs \" $arg\"\n\tfunc_append old_deplibs \" $arg\"\n\tcontinue\n\t;;\n\n      *.la)\n\t# A libtool-controlled library.\n\n\tfunc_resolve_sysroot \"$arg\"\n\tif test \"$prev\" = dlfiles; then\n\t  # This library was specified with -dlopen.\n\t  func_append dlfiles \" $func_resolve_sysroot_result\"\n\t  prev=\n\telif test \"$prev\" = dlprefiles; then\n\t  # The library was specified with -dlpreopen.\n\t  func_append dlprefiles \" $func_resolve_sysroot_result\"\n\t  prev=\n\telse\n\t  func_append deplibs \" $func_resolve_sysroot_result\"\n\tfi\n\tcontinue\n\t;;\n\n      # Some other compiler argument.\n      *)\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\tfunc_quote_for_eval \"$arg\"\n\targ=\"$func_quote_for_eval_result\"\n\t;;\n      esac # arg\n\n      # Now actually substitute the argument into the commands.\n      if test -n \"$arg\"; then\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n      fi\n    done # argument parsing loop\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the \\`$prevarg' option requires an argument\"\n\n    if test \"$export_dynamic\" = yes && test -n \"$export_dynamic_flag_spec\"; then\n      eval arg=\\\"$export_dynamic_flag_spec\\\"\n      func_append compile_command \" $arg\"\n      func_append finalize_command \" $arg\"\n    fi\n\n    oldlibs=\n    # calculate the name of the file, without its directory\n    func_basename \"$output\"\n    outputname=\"$func_basename_result\"\n    libobjs_save=\"$libobjs\"\n\n    if test -n \"$shlibpath_var\"; then\n      # get the directories listed in $shlibpath_var\n      eval shlib_search_path=\\`\\$ECHO \\\"\\${$shlibpath_var}\\\" \\| \\$SED \\'s/:/ /g\\'\\`\n    else\n      shlib_search_path=\n    fi\n    eval sys_lib_search_path=\\\"$sys_lib_search_path_spec\\\"\n    eval sys_lib_dlsearch_path=\\\"$sys_lib_dlsearch_path_spec\\\"\n\n    func_dirname \"$output\" \"/\" \"\"\n    output_objdir=\"$func_dirname_result$objdir\"\n    func_to_tool_file \"$output_objdir/\"\n    tool_output_objdir=$func_to_tool_file_result\n    # Create the object directory.\n    func_mkdir_p \"$output_objdir\"\n\n    # Determine the type of output\n    case $output in\n    \"\")\n      func_fatal_help \"you must specify an output file\"\n      ;;\n    *.$libext) linkmode=oldlib ;;\n    *.lo | *.$objext) linkmode=obj ;;\n    *.la) linkmode=lib ;;\n    *) linkmode=prog ;; # Anything else should be a program.\n    esac\n\n    specialdeplibs=\n\n    libs=\n    # Find all interdependent deplibs by searching for libraries\n    # that are linked more than once (e.g. -la -lb -la)\n    for deplib in $deplibs; do\n      if $opt_preserve_dup_deps ; then\n\tcase \"$libs \" in\n\t*\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\tesac\n      fi\n      func_append libs \" $deplib\"\n    done\n\n    if test \"$linkmode\" = lib; then\n      libs=\"$predeps $libs $compiler_lib_search_path $postdeps\"\n\n      # Compute libraries that are listed more than once in $predeps\n      # $postdeps and mark them as special (i.e., whose duplicates are\n      # not to be eliminated).\n      pre_post_deps=\n      if $opt_duplicate_compiler_generated_deps; then\n\tfor pre_post_dep in $predeps $postdeps; do\n\t  case \"$pre_post_deps \" in\n\t  *\" $pre_post_dep \"*) func_append specialdeplibs \" $pre_post_deps\" ;;\n\t  esac\n\t  func_append pre_post_deps \" $pre_post_dep\"\n\tdone\n      fi\n      pre_post_deps=\n    fi\n\n    deplibs=\n    newdependency_libs=\n    newlib_search_path=\n    need_relink=no # whether we're linking any uninstalled libtool libraries\n    notinst_deplibs= # not-installed libtool libraries\n    notinst_path= # paths that contain not-installed libtool libraries\n\n    case $linkmode in\n    lib)\n\tpasses=\"conv dlpreopen link\"\n\tfor file in $dlfiles $dlprefiles; do\n\t  case $file in\n\t  *.la) ;;\n\t  *)\n\t    func_fatal_help \"libraries can \\`-dlopen' only libtool libraries: $file\"\n\t    ;;\n\t  esac\n\tdone\n\t;;\n    prog)\n\tcompile_deplibs=\n\tfinalize_deplibs=\n\talldeplibs=no\n\tnewdlfiles=\n\tnewdlprefiles=\n\tpasses=\"conv scan dlopen dlpreopen link\"\n\t;;\n    *)  passes=\"conv\"\n\t;;\n    esac\n\n    for pass in $passes; do\n      # The preopen pass in lib mode reverses $deplibs; put it back here\n      # so that -L comes before libs that need it for instance...\n      if test \"$linkmode,$pass\" = \"lib,link\"; then\n\t## FIXME: Find the place where the list is rebuilt in the wrong\n\t##        order, and fix it there properly\n        tmp_deplibs=\n\tfor deplib in $deplibs; do\n\t  tmp_deplibs=\"$deplib $tmp_deplibs\"\n\tdone\n\tdeplibs=\"$tmp_deplibs\"\n      fi\n\n      if test \"$linkmode,$pass\" = \"lib,link\" ||\n\t test \"$linkmode,$pass\" = \"prog,scan\"; then\n\tlibs=\"$deplibs\"\n\tdeplibs=\n      fi\n      if test \"$linkmode\" = prog; then\n\tcase $pass in\n\tdlopen) libs=\"$dlfiles\" ;;\n\tdlpreopen) libs=\"$dlprefiles\" ;;\n\tlink)\n\t  libs=\"$deplibs %DEPLIBS%\"\n\t  test \"X$link_all_deplibs\" != Xno && libs=\"$libs $dependency_libs\"\n\t  ;;\n\tesac\n      fi\n      if test \"$linkmode,$pass\" = \"lib,dlpreopen\"; then\n\t# Collect and forward deplibs of preopened libtool libs\n\tfor lib in $dlprefiles; do\n\t  # Ignore non-libtool-libs\n\t  dependency_libs=\n\t  func_resolve_sysroot \"$lib\"\n\t  case $lib in\n\t  *.la)\tfunc_source \"$func_resolve_sysroot_result\" ;;\n\t  esac\n\n\t  # Collect preopened libtool deplibs, except any this library\n\t  # has declared as weak libs\n\t  for deplib in $dependency_libs; do\n\t    func_basename \"$deplib\"\n            deplib_base=$func_basename_result\n\t    case \" $weak_libs \" in\n\t    *\" $deplib_base \"*) ;;\n\t    *) func_append deplibs \" $deplib\" ;;\n\t    esac\n\t  done\n\tdone\n\tlibs=\"$dlprefiles\"\n      fi\n      if test \"$pass\" = dlopen; then\n\t# Collect dlpreopened libraries\n\tsave_deplibs=\"$deplibs\"\n\tdeplibs=\n      fi\n\n      for deplib in $libs; do\n\tlib=\n\tfound=no\n\tcase $deplib in\n\t-mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \\\n        |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)\n\t  if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    func_append compiler_flags \" $deplib\"\n\t    if test \"$linkmode\" = lib ; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) func_append new_inherited_linker_flags \" $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-l*)\n\t  if test \"$linkmode\" != lib && test \"$linkmode\" != prog; then\n\t    func_warning \"\\`-l' is ignored for archives/objects\"\n\t    continue\n\t  fi\n\t  func_stripname '-l' '' \"$deplib\"\n\t  name=$func_stripname_result\n\t  if test \"$linkmode\" = lib; then\n\t    searchdirs=\"$newlib_search_path $lib_search_path $compiler_lib_search_dirs $sys_lib_search_path $shlib_search_path\"\n\t  else\n\t    searchdirs=\"$newlib_search_path $lib_search_path $sys_lib_search_path $shlib_search_path\"\n\t  fi\n\t  for searchdir in $searchdirs; do\n\t    for search_ext in .la $std_shrext .so .a; do\n\t      # Search the libtool library\n\t      lib=\"$searchdir/lib${name}${search_ext}\"\n\t      if test -f \"$lib\"; then\n\t\tif test \"$search_ext\" = \".la\"; then\n\t\t  found=yes\n\t\telse\n\t\t  found=no\n\t\tfi\n\t\tbreak 2\n\t      fi\n\t    done\n\t  done\n\t  if test \"$found\" != yes; then\n\t    # deplib doesn't seem to be a libtool library\n\t    if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      deplibs=\"$deplib $deplibs\"\n\t      test \"$linkmode\" = lib && newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    continue\n\t  else # deplib is a libtool library\n\t    # If $allow_libtool_libs_with_static_runtimes && $deplib is a stdlib,\n\t    # We need to do some special things here, and not later.\n\t    if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t      case \" $predeps $postdeps \" in\n\t      *\" $deplib \"*)\n\t\tif func_lalib_p \"$lib\"; then\n\t\t  library_names=\n\t\t  old_library=\n\t\t  func_source \"$lib\"\n\t\t  for l in $old_library $library_names; do\n\t\t    ll=\"$l\"\n\t\t  done\n\t\t  if test \"X$ll\" = \"X$old_library\" ; then # only static version available\n\t\t    found=no\n\t\t    func_dirname \"$lib\" \"\" \".\"\n\t\t    ladir=\"$func_dirname_result\"\n\t\t    lib=$ladir/$old_library\n\t\t    if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t\t    else\n\t\t      deplibs=\"$deplib $deplibs\"\n\t\t      test \"$linkmode\" = lib && newdependency_libs=\"$deplib $newdependency_libs\"\n\t\t    fi\n\t\t    continue\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *) ;;\n\t      esac\n\t    fi\n\t  fi\n\t  ;; # -l\n\t*.ltframework)\n\t  if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$deplib $deplibs\"\n\t    if test \"$linkmode\" = lib ; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) func_append new_inherited_linker_flags \" $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-L*)\n\t  case $linkmode in\n\t  lib)\n\t    deplibs=\"$deplib $deplibs\"\n\t    test \"$pass\" = conv && continue\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    func_stripname '-L' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t    ;;\n\t  prog)\n\t    if test \"$pass\" = conv; then\n\t      deplibs=\"$deplib $deplibs\"\n\t      continue\n\t    fi\n\t    if test \"$pass\" = scan; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    func_stripname '-L' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t    ;;\n\t  *)\n\t    func_warning \"\\`-L' is ignored for archives/objects\"\n\t    ;;\n\t  esac # linkmode\n\t  continue\n\t  ;; # -L\n\t-R*)\n\t  if test \"$pass\" = link; then\n\t    func_stripname '-R' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    dir=$func_resolve_sysroot_result\n\t    # Make sure the xrpath contains only unique directories.\n\t    case \"$xrpath \" in\n\t    *\" $dir \"*) ;;\n\t    *) func_append xrpath \" $dir\" ;;\n\t    esac\n\t  fi\n\t  deplibs=\"$deplib $deplibs\"\n\t  continue\n\t  ;;\n\t*.la)\n\t  func_resolve_sysroot \"$deplib\"\n\t  lib=$func_resolve_sysroot_result\n\t  ;;\n\t*.$libext)\n\t  if test \"$pass\" = conv; then\n\t    deplibs=\"$deplib $deplibs\"\n\t    continue\n\t  fi\n\t  case $linkmode in\n\t  lib)\n\t    # Linking convenience modules into shared libraries is allowed,\n\t    # but linking other static libraries is non-portable.\n\t    case \" $dlpreconveniencelibs \" in\n\t    *\" $deplib \"*) ;;\n\t    *)\n\t      valid_a_lib=no\n\t      case $deplibs_check_method in\n\t\tmatch_pattern*)\n\t\t  set dummy $deplibs_check_method; shift\n\t\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t\t  if eval \"\\$ECHO \\\"$deplib\\\"\" 2>/dev/null | $SED 10q \\\n\t\t    | $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t    valid_a_lib=yes\n\t\t  fi\n\t\t;;\n\t\tpass_all)\n\t\t  valid_a_lib=yes\n\t\t;;\n\t      esac\n\t      if test \"$valid_a_lib\" != yes; then\n\t\techo\n\t\t$ECHO \"*** Warning: Trying to link with static lib archive $deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because the file extensions .$libext of this argument makes me believe\"\n\t\techo \"*** that it is just a static archive that I should not use here.\"\n\t      else\n\t\techo\n\t\t$ECHO \"*** Warning: Linking the shared library $output against the\"\n\t\t$ECHO \"*** static library $deplib is not portable!\"\n\t\tdeplibs=\"$deplib $deplibs\"\n\t      fi\n\t      ;;\n\t    esac\n\t    continue\n\t    ;;\n\t  prog)\n\t    if test \"$pass\" != link; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    continue\n\t    ;;\n\t  esac # linkmode\n\t  ;; # *.$libext\n\t*.lo | *.$objext)\n\t  if test \"$pass\" = conv; then\n\t    deplibs=\"$deplib $deplibs\"\n\t  elif test \"$linkmode\" = prog; then\n\t    if test \"$pass\" = dlpreopen || test \"$dlopen_support\" != yes || test \"$build_libtool_libs\" = no; then\n\t      # If there is no dlopen support or we're linking statically,\n\t      # we need to preload.\n\t      func_append newdlprefiles \" $deplib\"\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      func_append newdlfiles \" $deplib\"\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t%DEPLIBS%)\n\t  alldeplibs=yes\n\t  continue\n\t  ;;\n\tesac # case $deplib\n\n\tif test \"$found\" = yes || test -f \"$lib\"; then :\n\telse\n\t  func_fatal_error \"cannot find the library \\`$lib' or unhandled argument \\`$deplib'\"\n\tfi\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$lib\" \\\n\t  || func_fatal_error \"\\`$lib' is not a valid libtool archive\"\n\n\tfunc_dirname \"$lib\" \"\" \".\"\n\tladir=\"$func_dirname_result\"\n\n\tdlname=\n\tdlopen=\n\tdlpreopen=\n\tlibdir=\n\tlibrary_names=\n\told_library=\n\tinherited_linker_flags=\n\t# If the library was installed with an old release of libtool,\n\t# it will not redefine variables installed, or shouldnotlink\n\tinstalled=yes\n\tshouldnotlink=no\n\tavoidtemprpath=\n\n\n\t# Read the .la file\n\tfunc_source \"$lib\"\n\n\t# Convert \"-framework foo\" to \"foo.ltframework\"\n\tif test -n \"$inherited_linker_flags\"; then\n\t  tmp_inherited_linker_flags=`$ECHO \"$inherited_linker_flags\" | $SED 's/-framework \\([^ $]*\\)/\\1.ltframework/g'`\n\t  for tmp_inherited_linker_flag in $tmp_inherited_linker_flags; do\n\t    case \" $new_inherited_linker_flags \" in\n\t      *\" $tmp_inherited_linker_flag \"*) ;;\n\t      *) func_append new_inherited_linker_flags \" $tmp_inherited_linker_flag\";;\n\t    esac\n\t  done\n\tfi\n\tdependency_libs=`$ECHO \" $dependency_libs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tif test \"$linkmode,$pass\" = \"lib,link\" ||\n\t   test \"$linkmode,$pass\" = \"prog,scan\" ||\n\t   { test \"$linkmode\" != prog && test \"$linkmode\" != lib; }; then\n\t  test -n \"$dlopen\" && func_append dlfiles \" $dlopen\"\n\t  test -n \"$dlpreopen\" && func_append dlprefiles \" $dlpreopen\"\n\tfi\n\n\tif test \"$pass\" = conv; then\n\t  # Only check for convenience libraries\n\t  deplibs=\"$lib $deplibs\"\n\t  if test -z \"$libdir\"; then\n\t    if test -z \"$old_library\"; then\n\t      func_fatal_error \"cannot find name of link library for \\`$lib'\"\n\t    fi\n\t    # It is a libtool convenience library, so add in its objects.\n\t    func_append convenience \" $ladir/$objdir/$old_library\"\n\t    func_append old_convenience \" $ladir/$objdir/$old_library\"\n\t    tmp_libs=\n\t    for deplib in $dependency_libs; do\n\t      deplibs=\"$deplib $deplibs\"\n\t      if $opt_preserve_dup_deps ; then\n\t\tcase \"$tmp_libs \" in\n\t\t*\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\t\tesac\n\t      fi\n\t      func_append tmp_libs \" $deplib\"\n\t    done\n\t  elif test \"$linkmode\" != prog && test \"$linkmode\" != lib; then\n\t    func_fatal_error \"\\`$lib' is not a convenience library\"\n\t  fi\n\t  continue\n\tfi # $pass = conv\n\n\n\t# Get the name of the library we link against.\n\tlinklib=\n\tif test -n \"$old_library\" &&\n\t   { test \"$prefer_static_libs\" = yes ||\n\t     test \"$prefer_static_libs,$installed\" = \"built,no\"; }; then\n\t  linklib=$old_library\n\telse\n\t  for l in $old_library $library_names; do\n\t    linklib=\"$l\"\n\t  done\n\tfi\n\tif test -z \"$linklib\"; then\n\t  func_fatal_error \"cannot find name of link library for \\`$lib'\"\n\tfi\n\n\t# This library was specified with -dlopen.\n\tif test \"$pass\" = dlopen; then\n\t  if test -z \"$libdir\"; then\n\t    func_fatal_error \"cannot -dlopen a convenience library: \\`$lib'\"\n\t  fi\n\t  if test -z \"$dlname\" ||\n\t     test \"$dlopen_support\" != yes ||\n\t     test \"$build_libtool_libs\" = no; then\n\t    # If there is no dlname, no dlopen support or we're linking\n\t    # statically, we need to preload.  We also need to preload any\n\t    # dependent libraries so libltdl's deplib preloader doesn't\n\t    # bomb out in the load deplibs phase.\n\t    func_append dlprefiles \" $lib $dependency_libs\"\n\t  else\n\t    func_append newdlfiles \" $lib\"\n\t  fi\n\t  continue\n\tfi # $pass = dlopen\n\n\t# We need an absolute path.\n\tcase $ladir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs_ladir=\"$ladir\" ;;\n\t*)\n\t  abs_ladir=`cd \"$ladir\" && pwd`\n\t  if test -z \"$abs_ladir\"; then\n\t    func_warning \"cannot determine absolute directory name of \\`$ladir'\"\n\t    func_warning \"passing it literally to the linker, although it might fail\"\n\t    abs_ladir=\"$ladir\"\n\t  fi\n\t  ;;\n\tesac\n\tfunc_basename \"$lib\"\n\tlaname=\"$func_basename_result\"\n\n\t# Find the relevant object directory and library name.\n\tif test \"X$installed\" = Xyes; then\n\t  if test ! -f \"$lt_sysroot$libdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    func_warning \"library \\`$lib' was moved.\"\n\t    dir=\"$ladir\"\n\t    absdir=\"$abs_ladir\"\n\t    libdir=\"$abs_ladir\"\n\t  else\n\t    dir=\"$lt_sysroot$libdir\"\n\t    absdir=\"$lt_sysroot$libdir\"\n\t  fi\n\t  test \"X$hardcode_automatic\" = Xyes && avoidtemprpath=yes\n\telse\n\t  if test ! -f \"$ladir/$objdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    dir=\"$ladir\"\n\t    absdir=\"$abs_ladir\"\n\t    # Remove this search path later\n\t    func_append notinst_path \" $abs_ladir\"\n\t  else\n\t    dir=\"$ladir/$objdir\"\n\t    absdir=\"$abs_ladir/$objdir\"\n\t    # Remove this search path later\n\t    func_append notinst_path \" $abs_ladir\"\n\t  fi\n\tfi # $installed = yes\n\tfunc_stripname 'lib' '.la' \"$laname\"\n\tname=$func_stripname_result\n\n\t# This library was specified with -dlpreopen.\n\tif test \"$pass\" = dlpreopen; then\n\t  if test -z \"$libdir\" && test \"$linkmode\" = prog; then\n\t    func_fatal_error \"only libraries may -dlpreopen a convenience library: \\`$lib'\"\n\t  fi\n\t  case \"$host\" in\n\t    # special handling for platforms with PE-DLLs.\n\t    *cygwin* | *mingw* | *cegcc* )\n\t      # Linker will automatically link against shared library if both\n\t      # static and shared are present.  Therefore, ensure we extract\n\t      # symbols from the import library if a shared library is present\n\t      # (otherwise, the dlopen module name will be incorrect).  We do\n\t      # this by putting the import library name into $newdlprefiles.\n\t      # We recover the dlopen module name by 'saving' the la file\n\t      # name in a special purpose variable, and (later) extracting the\n\t      # dlname from the la file.\n\t      if test -n \"$dlname\"; then\n\t        func_tr_sh \"$dir/$linklib\"\n\t        eval \"libfile_$func_tr_sh_result=\\$abs_ladir/\\$laname\"\n\t        func_append newdlprefiles \" $dir/$linklib\"\n\t      else\n\t        func_append newdlprefiles \" $dir/$old_library\"\n\t        # Keep a list of preopened convenience libraries to check\n\t        # that they are being used correctly in the link pass.\n\t        test -z \"$libdir\" && \\\n\t          func_append dlpreconveniencelibs \" $dir/$old_library\"\n\t      fi\n\t    ;;\n\t    * )\n\t      # Prefer using a static library (so that no silly _DYNAMIC symbols\n\t      # are required to link).\n\t      if test -n \"$old_library\"; then\n\t        func_append newdlprefiles \" $dir/$old_library\"\n\t        # Keep a list of preopened convenience libraries to check\n\t        # that they are being used correctly in the link pass.\n\t        test -z \"$libdir\" && \\\n\t          func_append dlpreconveniencelibs \" $dir/$old_library\"\n\t      # Otherwise, use the dlname, so that lt_dlopen finds it.\n\t      elif test -n \"$dlname\"; then\n\t        func_append newdlprefiles \" $dir/$dlname\"\n\t      else\n\t        func_append newdlprefiles \" $dir/$linklib\"\n\t      fi\n\t    ;;\n\t  esac\n\tfi # $pass = dlpreopen\n\n\tif test -z \"$libdir\"; then\n\t  # Link the convenience library\n\t  if test \"$linkmode\" = lib; then\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t  elif test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$dir/$old_library $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$old_library $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$lib $deplibs\" # used for prog,scan pass\n\t  fi\n\t  continue\n\tfi\n\n\n\tif test \"$linkmode\" = prog && test \"$pass\" != link; then\n\t  func_append newlib_search_path \" $ladir\"\n\t  deplibs=\"$lib $deplibs\"\n\n\t  linkalldeplibs=no\n\t  if test \"$link_all_deplibs\" != no || test -z \"$library_names\" ||\n\t     test \"$build_libtool_libs\" = no; then\n\t    linkalldeplibs=yes\n\t  fi\n\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    case $deplib in\n\t    -L*) func_stripname '-L' '' \"$deplib\"\n\t         func_resolve_sysroot \"$func_stripname_result\"\n\t         func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t\t ;;\n\t    esac\n\t    # Need to link against all dependency_libs?\n\t    if test \"$linkalldeplibs\" = yes; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      # Need to hardcode shared library paths\n\t      # or/and link against static libraries\n\t      newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    if $opt_preserve_dup_deps ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $deplib\"\n\t  done # for deplib\n\t  continue\n\tfi # $linkmode = prog...\n\n\tif test \"$linkmode,$pass\" = \"prog,link\"; then\n\t  if test -n \"$library_names\" &&\n\t     { { test \"$prefer_static_libs\" = no ||\n\t         test \"$prefer_static_libs,$installed\" = \"built,yes\"; } ||\n\t       test -z \"$old_library\"; }; then\n\t    # We need to hardcode the library path\n\t    if test -n \"$shlibpath_var\" && test -z \"$avoidtemprpath\" ; then\n\t      # Make sure the rpath contains only unique directories.\n\t      case \"$temp_rpath:\" in\n\t      *\"$absdir:\"*) ;;\n\t      *) func_append temp_rpath \"$absdir:\" ;;\n\t      esac\n\t    fi\n\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) func_append compile_rpath \" $absdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append finalize_rpath \" $libdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t  fi # $linkmode,$pass = prog,link...\n\n\t  if test \"$alldeplibs\" = yes &&\n\t     { test \"$deplibs_check_method\" = pass_all ||\n\t       { test \"$build_libtool_libs\" = yes &&\n\t\t test -n \"$library_names\"; }; }; then\n\t    # We only need to search for static libraries\n\t    continue\n\t  fi\n\tfi\n\n\tlink_static=no # Whether the deplib will be linked statically\n\tuse_static_libs=$prefer_static_libs\n\tif test \"$use_static_libs\" = built && test \"$installed\" = yes; then\n\t  use_static_libs=no\n\tfi\n\tif test -n \"$library_names\" &&\n\t   { test \"$use_static_libs\" = no || test -z \"$old_library\"; }; then\n\t  case $host in\n\t  *cygwin* | *mingw* | *cegcc*)\n\t      # No point in relinking DLLs because paths are not encoded\n\t      func_append notinst_deplibs \" $lib\"\n\t      need_relink=no\n\t    ;;\n\t  *)\n\t    if test \"$installed\" = no; then\n\t      func_append notinst_deplibs \" $lib\"\n\t      need_relink=yes\n\t    fi\n\t    ;;\n\t  esac\n\t  # This is a shared library\n\n\t  # Warn about portability, can't link against -module's on some\n\t  # systems (darwin).  Don't bleat about dlopened modules though!\n\t  dlopenmodule=\"\"\n\t  for dlpremoduletest in $dlprefiles; do\n\t    if test \"X$dlpremoduletest\" = \"X$lib\"; then\n\t      dlopenmodule=\"$dlpremoduletest\"\n\t      break\n\t    fi\n\t  done\n\t  if test -z \"$dlopenmodule\" && test \"$shouldnotlink\" = yes && test \"$pass\" = link; then\n\t    echo\n\t    if test \"$linkmode\" = prog; then\n\t      $ECHO \"*** Warning: Linking the executable $output against the loadable module\"\n\t    else\n\t      $ECHO \"*** Warning: Linking the shared library $output against the loadable module\"\n\t    fi\n\t    $ECHO \"*** $linklib is not portable!\"\n\t  fi\n\t  if test \"$linkmode\" = lib &&\n\t     test \"$hardcode_into_libs\" = yes; then\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) func_append compile_rpath \" $absdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append finalize_rpath \" $libdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t  fi\n\n\t  if test -n \"$old_archive_from_expsyms_cmds\"; then\n\t    # figure out the soname\n\t    set dummy $library_names\n\t    shift\n\t    realname=\"$1\"\n\t    shift\n\t    libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t    # use dlname if we got it. it's perfectly good, no?\n\t    if test -n \"$dlname\"; then\n\t      soname=\"$dlname\"\n\t    elif test -n \"$soname_spec\"; then\n\t      # bleh windows\n\t      case $host in\n\t      *cygwin* | mingw* | *cegcc*)\n\t        func_arith $current - $age\n\t\tmajor=$func_arith_result\n\t\tversuffix=\"-$major\"\n\t\t;;\n\t      esac\n\t      eval soname=\\\"$soname_spec\\\"\n\t    else\n\t      soname=\"$realname\"\n\t    fi\n\n\t    # Make a new name for the extract_expsyms_cmds to use\n\t    soroot=\"$soname\"\n\t    func_basename \"$soroot\"\n\t    soname=\"$func_basename_result\"\n\t    func_stripname 'lib' '.dll' \"$soname\"\n\t    newlib=libimp-$func_stripname_result.a\n\n\t    # If the library has no export list, then create one now\n\t    if test -f \"$output_objdir/$soname-def\"; then :\n\t    else\n\t      func_verbose \"extracting exported symbol list from \\`$soname'\"\n\t      func_execute_cmds \"$extract_expsyms_cmds\" 'exit $?'\n\t    fi\n\n\t    # Create $newlib\n\t    if test -f \"$output_objdir/$newlib\"; then :; else\n\t      func_verbose \"generating import library for \\`$soname'\"\n\t      func_execute_cmds \"$old_archive_from_expsyms_cmds\" 'exit $?'\n\t    fi\n\t    # make sure the library variables are pointing to the new library\n\t    dir=$output_objdir\n\t    linklib=$newlib\n\t  fi # test -n \"$old_archive_from_expsyms_cmds\"\n\n\t  if test \"$linkmode\" = prog || test \"$opt_mode\" != relink; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    lib_linked=yes\n\t    case $hardcode_action in\n\t    immediate | unsupported)\n\t      if test \"$hardcode_direct\" = no; then\n\t\tadd=\"$dir/$linklib\"\n\t\tcase $host in\n\t\t  *-*-sco3.2v5.0.[024]*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-sysv4*uw2*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-sysv5OpenUNIX* | *-*-sysv5UnixWare7.[01].[10]* | \\\n\t\t    *-*-unixware7*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-darwin* )\n\t\t    # if the lib is a (non-dlopened) module then we can not\n\t\t    # link against it, someone is ignoring the earlier warnings\n\t\t    if /usr/bin/file -L $add 2> /dev/null |\n\t\t\t $GREP \": [^:]* bundle\" >/dev/null ; then\n\t\t      if test \"X$dlopenmodule\" != \"X$lib\"; then\n\t\t\t$ECHO \"*** Warning: lib $linklib is a module, not a shared library\"\n\t\t\tif test -z \"$old_library\" ; then\n\t\t\t  echo\n\t\t\t  echo \"*** And there doesn't seem to be a static archive available\"\n\t\t\t  echo \"*** The link will probably fail, sorry\"\n\t\t\telse\n\t\t\t  add=\"$dir/$old_library\"\n\t\t\tfi\n\t\t      elif test -n \"$old_library\"; then\n\t\t\tadd=\"$dir/$old_library\"\n\t\t      fi\n\t\t    fi\n\t\tesac\n\t      elif test \"$hardcode_minus_L\" = no; then\n\t\tcase $host in\n\t\t*-*-sunos*) add_shlibpath=\"$dir\" ;;\n\t\tesac\n\t\tadd_dir=\"-L$dir\"\n\t\tadd=\"-l$name\"\n\t      elif test \"$hardcode_shlibpath_var\" = no; then\n\t\tadd_shlibpath=\"$dir\"\n\t\tadd=\"-l$name\"\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    relink)\n\t      if test \"$hardcode_direct\" = yes &&\n\t         test \"$hardcode_direct_absolute\" = no; then\n\t\tadd=\"$dir/$linklib\"\n\t      elif test \"$hardcode_minus_L\" = yes; then\n\t\tadd_dir=\"-L$absdir\"\n\t\t# Try looking first in the location we're being installed to.\n\t\tif test -n \"$inst_prefix_dir\"; then\n\t\t  case $libdir in\n\t\t    [\\\\/]*)\n\t\t      func_append add_dir \" -L$inst_prefix_dir$libdir\"\n\t\t      ;;\n\t\t  esac\n\t\tfi\n\t\tadd=\"-l$name\"\n\t      elif test \"$hardcode_shlibpath_var\" = yes; then\n\t\tadd_shlibpath=\"$dir\"\n\t\tadd=\"-l$name\"\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    *) lib_linked=no ;;\n\t    esac\n\n\t    if test \"$lib_linked\" != yes; then\n\t      func_fatal_configuration \"unsupported hardcode properties\"\n\t    fi\n\n\t    if test -n \"$add_shlibpath\"; then\n\t      case :$compile_shlibpath: in\n\t      *\":$add_shlibpath:\"*) ;;\n\t      *) func_append compile_shlibpath \"$add_shlibpath:\" ;;\n\t      esac\n\t    fi\n\t    if test \"$linkmode\" = prog; then\n\t      test -n \"$add_dir\" && compile_deplibs=\"$add_dir $compile_deplibs\"\n\t      test -n \"$add\" && compile_deplibs=\"$add $compile_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t      if test \"$hardcode_direct\" != yes &&\n\t\t test \"$hardcode_minus_L\" != yes &&\n\t\t test \"$hardcode_shlibpath_var\" = yes; then\n\t\tcase :$finalize_shlibpath: in\n\t\t*\":$libdir:\"*) ;;\n\t\t*) func_append finalize_shlibpath \"$libdir:\" ;;\n\t\tesac\n\t      fi\n\t    fi\n\t  fi\n\n\t  if test \"$linkmode\" = prog || test \"$opt_mode\" = relink; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    # Finalize command for both is simple: just hardcode it.\n\t    if test \"$hardcode_direct\" = yes &&\n\t       test \"$hardcode_direct_absolute\" = no; then\n\t      add=\"$libdir/$linklib\"\n\t    elif test \"$hardcode_minus_L\" = yes; then\n\t      add_dir=\"-L$libdir\"\n\t      add=\"-l$name\"\n\t    elif test \"$hardcode_shlibpath_var\" = yes; then\n\t      case :$finalize_shlibpath: in\n\t      *\":$libdir:\"*) ;;\n\t      *) func_append finalize_shlibpath \"$libdir:\" ;;\n\t      esac\n\t      add=\"-l$name\"\n\t    elif test \"$hardcode_automatic\" = yes; then\n\t      if test -n \"$inst_prefix_dir\" &&\n\t\t test -f \"$inst_prefix_dir$libdir/$linklib\" ; then\n\t\tadd=\"$inst_prefix_dir$libdir/$linklib\"\n\t      else\n\t\tadd=\"$libdir/$linklib\"\n\t      fi\n\t    else\n\t      # We cannot seem to hardcode it, guess we'll fake it.\n\t      add_dir=\"-L$libdir\"\n\t      # Try looking first in the location we're being installed to.\n\t      if test -n \"$inst_prefix_dir\"; then\n\t\tcase $libdir in\n\t\t  [\\\\/]*)\n\t\t    func_append add_dir \" -L$inst_prefix_dir$libdir\"\n\t\t    ;;\n\t\tesac\n\t      fi\n\t      add=\"-l$name\"\n\t    fi\n\n\t    if test \"$linkmode\" = prog; then\n\t      test -n \"$add_dir\" && finalize_deplibs=\"$add_dir $finalize_deplibs\"\n\t      test -n \"$add\" && finalize_deplibs=\"$add $finalize_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t    fi\n\t  fi\n\telif test \"$linkmode\" = prog; then\n\t  # Here we assume that one of hardcode_direct or hardcode_minus_L\n\t  # is not unsupported.  This is valid on all known static and\n\t  # shared platforms.\n\t  if test \"$hardcode_direct\" != unsupported; then\n\t    test -n \"$old_library\" && linklib=\"$old_library\"\n\t    compile_deplibs=\"$dir/$linklib $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$linklib $finalize_deplibs\"\n\t  else\n\t    compile_deplibs=\"-l$name -L$dir $compile_deplibs\"\n\t    finalize_deplibs=\"-l$name -L$dir $finalize_deplibs\"\n\t  fi\n\telif test \"$build_libtool_libs\" = yes; then\n\t  # Not a shared library\n\t  if test \"$deplibs_check_method\" != pass_all; then\n\t    # We're trying link a shared library against a static one\n\t    # but the system doesn't support it.\n\n\t    # Just print a warning and add the library to dependency_libs so\n\t    # that the program can be linked against the static library.\n\t    echo\n\t    $ECHO \"*** Warning: This system can not link to static lib archive $lib.\"\n\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t    echo \"*** shared version of the library, which you do not appear to have.\"\n\t    if test \"$module\" = yes; then\n\t      echo \"*** But as you try to build a module library, libtool will still create \"\n\t      echo \"*** a static module, that should work as long as the dlopening application\"\n\t      echo \"*** is linked with the -dlopen flag to resolve symbols at runtime.\"\n\t      if test -z \"$global_symbol_pipe\"; then\n\t\techo\n\t\techo \"*** However, this would only work if libtool was able to extract symbol\"\n\t\techo \"*** lists from a program, using \\`nm' or equivalent, but libtool could\"\n\t\techo \"*** not find such a program.  So, this module is probably useless.\"\n\t\techo \"*** \\`nm' from GNU binutils and a full rebuild may help.\"\n\t      fi\n\t      if test \"$build_old_libs\" = no; then\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  else\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t    link_static=yes\n\t  fi\n\tfi # link shared/static library?\n\n\tif test \"$linkmode\" = lib; then\n\t  if test -n \"$dependency_libs\" &&\n\t     { test \"$hardcode_into_libs\" != yes ||\n\t       test \"$build_old_libs\" = yes ||\n\t       test \"$link_static\" = yes; }; then\n\t    # Extract -R from dependency_libs\n\t    temp_deplibs=\n\t    for libdir in $dependency_libs; do\n\t      case $libdir in\n\t      -R*) func_stripname '-R' '' \"$libdir\"\n\t           temp_xrpath=$func_stripname_result\n\t\t   case \" $xrpath \" in\n\t\t   *\" $temp_xrpath \"*) ;;\n\t\t   *) func_append xrpath \" $temp_xrpath\";;\n\t\t   esac;;\n\t      *) func_append temp_deplibs \" $libdir\";;\n\t      esac\n\t    done\n\t    dependency_libs=\"$temp_deplibs\"\n\t  fi\n\n\t  func_append newlib_search_path \" $absdir\"\n\t  # Link against this library\n\t  test \"$link_static\" = no && newdependency_libs=\"$abs_ladir/$laname $newdependency_libs\"\n\t  # ... and its dependency_libs\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    case $deplib in\n              -L*) func_stripname '-L' '' \"$deplib\"\n                   func_resolve_sysroot \"$func_stripname_result\";;\n              *) func_resolve_sysroot \"$deplib\" ;;\n            esac\n\t    if $opt_preserve_dup_deps ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $func_resolve_sysroot_result \"*)\n                func_append specialdeplibs \" $func_resolve_sysroot_result\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $func_resolve_sysroot_result\"\n\t  done\n\n\t  if test \"$link_all_deplibs\" != no; then\n\t    # Add the search paths of all dependency libraries\n\t    for deplib in $dependency_libs; do\n\t      path=\n\t      case $deplib in\n\t      -L*) path=\"$deplib\" ;;\n\t      *.la)\n\t        func_resolve_sysroot \"$deplib\"\n\t        deplib=$func_resolve_sysroot_result\n\t        func_dirname \"$deplib\" \"\" \".\"\n\t\tdir=$func_dirname_result\n\t\t# We need an absolute path.\n\t\tcase $dir in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) absdir=\"$dir\" ;;\n\t\t*)\n\t\t  absdir=`cd \"$dir\" && pwd`\n\t\t  if test -z \"$absdir\"; then\n\t\t    func_warning \"cannot determine absolute directory name of \\`$dir'\"\n\t\t    absdir=\"$dir\"\n\t\t  fi\n\t\t  ;;\n\t\tesac\n\t\tif $GREP \"^installed=no\" $deplib > /dev/null; then\n\t\tcase $host in\n\t\t*-*-darwin*)\n\t\t  depdepl=\n\t\t  eval deplibrary_names=`${SED} -n -e 's/^library_names=\\(.*\\)$/\\1/p' $deplib`\n\t\t  if test -n \"$deplibrary_names\" ; then\n\t\t    for tmp in $deplibrary_names ; do\n\t\t      depdepl=$tmp\n\t\t    done\n\t\t    if test -f \"$absdir/$objdir/$depdepl\" ; then\n\t\t      depdepl=\"$absdir/$objdir/$depdepl\"\n\t\t      darwin_install_name=`${OTOOL} -L $depdepl | awk '{if (NR == 2) {print $1;exit}}'`\n                      if test -z \"$darwin_install_name\"; then\n                          darwin_install_name=`${OTOOL64} -L $depdepl  | awk '{if (NR == 2) {print $1;exit}}'`\n                      fi\n\t\t      func_append compiler_flags \" ${wl}-dylib_file ${wl}${darwin_install_name}:${depdepl}\"\n\t\t      func_append linker_flags \" -dylib_file ${darwin_install_name}:${depdepl}\"\n\t\t      path=\n\t\t    fi\n\t\t  fi\n\t\t  ;;\n\t\t*)\n\t\t  path=\"-L$absdir/$objdir\"\n\t\t  ;;\n\t\tesac\n\t\telse\n\t\t  eval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $deplib`\n\t\t  test -z \"$libdir\" && \\\n\t\t    func_fatal_error \"\\`$deplib' is not a valid libtool archive\"\n\t\t  test \"$absdir\" != \"$libdir\" && \\\n\t\t    func_warning \"\\`$deplib' seems to be moved\"\n\n\t\t  path=\"-L$absdir\"\n\t\tfi\n\t\t;;\n\t      esac\n\t      case \" $deplibs \" in\n\t      *\" $path \"*) ;;\n\t      *) deplibs=\"$path $deplibs\" ;;\n\t      esac\n\t    done\n\t  fi # link_all_deplibs != no\n\tfi # linkmode = lib\n      done # for deplib in $libs\n      if test \"$pass\" = link; then\n\tif test \"$linkmode\" = \"prog\"; then\n\t  compile_deplibs=\"$new_inherited_linker_flags $compile_deplibs\"\n\t  finalize_deplibs=\"$new_inherited_linker_flags $finalize_deplibs\"\n\telse\n\t  compiler_flags=\"$compiler_flags \"`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfi\n      fi\n      dependency_libs=\"$newdependency_libs\"\n      if test \"$pass\" = dlpreopen; then\n\t# Link the dlpreopened libraries before other libraries\n\tfor deplib in $save_deplibs; do\n\t  deplibs=\"$deplib $deplibs\"\n\tdone\n      fi\n      if test \"$pass\" != dlopen; then\n\tif test \"$pass\" != conv; then\n\t  # Make sure lib_search_path contains only unique directories.\n\t  lib_search_path=\n\t  for dir in $newlib_search_path; do\n\t    case \"$lib_search_path \" in\n\t    *\" $dir \"*) ;;\n\t    *) func_append lib_search_path \" $dir\" ;;\n\t    esac\n\t  done\n\t  newlib_search_path=\n\tfi\n\n\tif test \"$linkmode,$pass\" != \"prog,link\"; then\n\t  vars=\"deplibs\"\n\telse\n\t  vars=\"compile_deplibs finalize_deplibs\"\n\tfi\n\tfor var in $vars dependency_libs; do\n\t  # Add libraries to $var in reverse order\n\t  eval tmp_libs=\\\"\\$$var\\\"\n\t  new_libs=\n\t  for deplib in $tmp_libs; do\n\t    # FIXME: Pedantically, this is the right thing to do, so\n\t    #        that some nasty dependency loop isn't accidentally\n\t    #        broken:\n\t    #new_libs=\"$deplib $new_libs\"\n\t    # Pragmatically, this seems to cause very few problems in\n\t    # practice:\n\t    case $deplib in\n\t    -L*) new_libs=\"$deplib $new_libs\" ;;\n\t    -R*) ;;\n\t    *)\n\t      # And here is the reason: when a library appears more\n\t      # than once as an explicit dependence of a library, or\n\t      # is implicitly linked in more than once by the\n\t      # compiler, it is considered special, and multiple\n\t      # occurrences thereof are not removed.  Compare this\n\t      # with having the same library being listed as a\n\t      # dependency of multiple other libraries: in this case,\n\t      # we know (pedantically, we assume) the library does not\n\t      # need to be listed more than once, so we keep only the\n\t      # last copy.  This is not always right, but it is rare\n\t      # enough that we require users that really mean to play\n\t      # such unportable linking tricks to link the library\n\t      # using -Wl,-lname, so that libtool does not consider it\n\t      # for duplicate removal.\n\t      case \" $specialdeplibs \" in\n\t      *\" $deplib \"*) new_libs=\"$deplib $new_libs\" ;;\n\t      *)\n\t\tcase \" $new_libs \" in\n\t\t*\" $deplib \"*) ;;\n\t\t*) new_libs=\"$deplib $new_libs\" ;;\n\t\tesac\n\t\t;;\n\t      esac\n\t      ;;\n\t    esac\n\t  done\n\t  tmp_libs=\n\t  for deplib in $new_libs; do\n\t    case $deplib in\n\t    -L*)\n\t      case \" $tmp_libs \" in\n\t      *\" $deplib \"*) ;;\n\t      *) func_append tmp_libs \" $deplib\" ;;\n\t      esac\n\t      ;;\n\t    *) func_append tmp_libs \" $deplib\" ;;\n\t    esac\n\t  done\n\t  eval $var=\\\"$tmp_libs\\\"\n\tdone # for var\n      fi\n      # Last step: remove runtime libs from dependency_libs\n      # (they stay in deplibs)\n      tmp_libs=\n      for i in $dependency_libs ; do\n\tcase \" $predeps $postdeps $compiler_lib_search_path \" in\n\t*\" $i \"*)\n\t  i=\"\"\n\t  ;;\n\tesac\n\tif test -n \"$i\" ; then\n\t  func_append tmp_libs \" $i\"\n\tfi\n      done\n      dependency_libs=$tmp_libs\n    done # for pass\n    if test \"$linkmode\" = prog; then\n      dlfiles=\"$newdlfiles\"\n    fi\n    if test \"$linkmode\" = prog || test \"$linkmode\" = lib; then\n      dlprefiles=\"$newdlprefiles\"\n    fi\n\n    case $linkmode in\n    oldlib)\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\tfunc_warning \"\\`-dlopen' is ignored for archives\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"\\`-l' and \\`-L' are ignored for archives\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"\\`-rpath' is ignored for archives\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"\\`-R' is ignored for archives\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"\\`-version-info/-version-number' is ignored for archives\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"\\`-release' is ignored for archives\"\n\n      test -n \"$export_symbols$export_symbols_regex\" && \\\n\tfunc_warning \"\\`-export-symbols' is ignored for archives\"\n\n      # Now set the variables for building old libraries.\n      build_libtool_libs=no\n      oldlibs=\"$output\"\n      func_append objs \"$old_deplibs\"\n      ;;\n\n    lib)\n      # Make sure we only generate libraries of the form `libNAME.la'.\n      case $outputname in\n      lib*)\n\tfunc_stripname 'lib' '.la' \"$outputname\"\n\tname=$func_stripname_result\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval libname=\\\"$libname_spec\\\"\n\t;;\n      *)\n\ttest \"$module\" = no && \\\n\t  func_fatal_help \"libtool library \\`$output' must begin with \\`lib'\"\n\n\tif test \"$need_lib_prefix\" != no; then\n\t  # Add the \"lib\" prefix for modules if required\n\t  func_stripname '' '.la' \"$outputname\"\n\t  name=$func_stripname_result\n\t  eval shared_ext=\\\"$shrext_cmds\\\"\n\t  eval libname=\\\"$libname_spec\\\"\n\telse\n\t  func_stripname '' '.la' \"$outputname\"\n\t  libname=$func_stripname_result\n\tfi\n\t;;\n      esac\n\n      if test -n \"$objs\"; then\n\tif test \"$deplibs_check_method\" != pass_all; then\n\t  func_fatal_error \"cannot build libtool library \\`$output' from non-libtool objects on this host:$objs\"\n\telse\n\t  echo\n\t  $ECHO \"*** Warning: Linking the shared library $output against the non-libtool\"\n\t  $ECHO \"*** objects $objs is not portable!\"\n\t  func_append libobjs \" $objs\"\n\tfi\n      fi\n\n      test \"$dlself\" != no && \\\n\tfunc_warning \"\\`-dlopen self' is ignored for libtool libraries\"\n\n      set dummy $rpath\n      shift\n      test \"$#\" -gt 1 && \\\n\tfunc_warning \"ignoring multiple \\`-rpath's for a libtool library\"\n\n      install_libdir=\"$1\"\n\n      oldlibs=\n      if test -z \"$rpath\"; then\n\tif test \"$build_libtool_libs\" = yes; then\n\t  # Building a libtool convenience library.\n\t  # Some compilers have problems with a `.al' extension so\n\t  # convenience libraries should have the same extension an\n\t  # archive normally would.\n\t  oldlibs=\"$output_objdir/$libname.$libext $oldlibs\"\n\t  build_libtool_libs=convenience\n\t  build_old_libs=yes\n\tfi\n\n\ttest -n \"$vinfo\" && \\\n\t  func_warning \"\\`-version-info/-version-number' is ignored for convenience libraries\"\n\n\ttest -n \"$release\" && \\\n\t  func_warning \"\\`-release' is ignored for convenience libraries\"\n      else\n\n\t# Parse the version information argument.\n\tsave_ifs=\"$IFS\"; IFS=':'\n\tset dummy $vinfo 0 0 0\n\tshift\n\tIFS=\"$save_ifs\"\n\n\ttest -n \"$7\" && \\\n\t  func_fatal_help \"too many parameters to \\`-version-info'\"\n\n\t# convert absolute version numbers to libtool ages\n\t# this retains compatibility with .la files and attempts\n\t# to make the code below a bit more comprehensible\n\n\tcase $vinfo_number in\n\tyes)\n\t  number_major=\"$1\"\n\t  number_minor=\"$2\"\n\t  number_revision=\"$3\"\n\t  #\n\t  # There are really only two kinds -- those that\n\t  # use the current revision as the major version\n\t  # and those that subtract age and use age as\n\t  # a minor version.  But, then there is irix\n\t  # which has an extra 1 added just for fun\n\t  #\n\t  case $version_type in\n\t  # correct linux to gnu/linux during the next big refactor\n\t  darwin|linux|osf|windows|none)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=\"$number_minor\"\n\t    revision=\"$number_revision\"\n\t    ;;\n\t  freebsd-aout|freebsd-elf|qnx|sunos)\n\t    current=\"$number_major\"\n\t    revision=\"$number_minor\"\n\t    age=\"0\"\n\t    ;;\n\t  irix|nonstopux)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=\"$number_minor\"\n\t    revision=\"$number_minor\"\n\t    lt_irix_increment=no\n\t    ;;\n\t  *)\n\t    func_fatal_configuration \"$modename: unknown library version type \\`$version_type'\"\n\t    ;;\n\t  esac\n\t  ;;\n\tno)\n\t  current=\"$1\"\n\t  revision=\"$2\"\n\t  age=\"$3\"\n\t  ;;\n\tesac\n\n\t# Check that each of the things are valid numbers.\n\tcase $current in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"CURRENT \\`$current' must be a nonnegative integer\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $revision in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"REVISION \\`$revision' must be a nonnegative integer\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $age in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"AGE \\`$age' must be a nonnegative integer\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tif test \"$age\" -gt \"$current\"; then\n\t  func_error \"AGE \\`$age' is greater than the current interface number \\`$current'\"\n\t  func_fatal_error \"\\`$vinfo' is not valid version information\"\n\tfi\n\n\t# Calculate the version variables.\n\tmajor=\n\tversuffix=\n\tverstring=\n\tcase $version_type in\n\tnone) ;;\n\n\tdarwin)\n\t  # Like Linux, but with the current version available in\n\t  # verstring for coding it into the library header\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=\"$major.$age.$revision\"\n\t  # Darwin ld doesn't like 0 for these options...\n\t  func_arith $current + 1\n\t  minor_current=$func_arith_result\n\t  xlcverstring=\"${wl}-compatibility_version ${wl}$minor_current ${wl}-current_version ${wl}$minor_current.$revision\"\n\t  verstring=\"-compatibility_version $minor_current -current_version $minor_current.$revision\"\n\t  ;;\n\n\tfreebsd-aout)\n\t  major=\".$current\"\n\t  versuffix=\".$current.$revision\";\n\t  ;;\n\n\tfreebsd-elf)\n\t  major=\".$current\"\n\t  versuffix=\".$current\"\n\t  ;;\n\n\tirix | nonstopux)\n\t  if test \"X$lt_irix_increment\" = \"Xno\"; then\n\t    func_arith $current - $age\n\t  else\n\t    func_arith $current - $age + 1\n\t  fi\n\t  major=$func_arith_result\n\n\t  case $version_type in\n\t    nonstopux) verstring_prefix=nonstopux ;;\n\t    *)         verstring_prefix=sgi ;;\n\t  esac\n\t  verstring=\"$verstring_prefix$major.$revision\"\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$revision\n\t  while test \"$loop\" -ne 0; do\n\t    func_arith $revision - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=\"$verstring_prefix$major.$iface:$verstring\"\n\t  done\n\n\t  # Before this point, $major must not contain `.'.\n\t  major=.$major\n\t  versuffix=\"$major.$revision\"\n\t  ;;\n\n\tlinux) # correct to gnu/linux during the next big refactor\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=\"$major.$age.$revision\"\n\t  ;;\n\n\tosf)\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=\".$current.$age.$revision\"\n\t  verstring=\"$current.$age.$revision\"\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$age\n\t  while test \"$loop\" -ne 0; do\n\t    func_arith $current - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=\"$verstring:${iface}.0\"\n\t  done\n\n\t  # Make executables depend on our current version.\n\t  func_append verstring \":${current}.0\"\n\t  ;;\n\n\tqnx)\n\t  major=\".$current\"\n\t  versuffix=\".$current\"\n\t  ;;\n\n\tsunos)\n\t  major=\".$current\"\n\t  versuffix=\".$current.$revision\"\n\t  ;;\n\n\twindows)\n\t  # Use '-' rather than '.', since we only want one\n\t  # extension on DOS 8.3 filesystems.\n\t  func_arith $current - $age\n\t  major=$func_arith_result\n\t  versuffix=\"-$major\"\n\t  ;;\n\n\t*)\n\t  func_fatal_configuration \"unknown library version type \\`$version_type'\"\n\t  ;;\n\tesac\n\n\t# Clear the version info if we defaulted, and they specified a release.\n\tif test -z \"$vinfo\" && test -n \"$release\"; then\n\t  major=\n\t  case $version_type in\n\t  darwin)\n\t    # we can't check for \"0.0\" in archive_cmds due to quoting\n\t    # problems, so we reset it completely\n\t    verstring=\n\t    ;;\n\t  *)\n\t    verstring=\"0.0\"\n\t    ;;\n\t  esac\n\t  if test \"$need_version\" = no; then\n\t    versuffix=\n\t  else\n\t    versuffix=\".0.0\"\n\t  fi\n\tfi\n\n\t# Remove version info from name if versioning should be avoided\n\tif test \"$avoid_version\" = yes && test \"$need_version\" = no; then\n\t  major=\n\t  versuffix=\n\t  verstring=\"\"\n\tfi\n\n\t# Check to see if the archive will have undefined symbols.\n\tif test \"$allow_undefined\" = yes; then\n\t  if test \"$allow_undefined_flag\" = unsupported; then\n\t    func_warning \"undefined symbols not allowed in $host shared libraries\"\n\t    build_libtool_libs=no\n\t    build_old_libs=yes\n\t  fi\n\telse\n\t  # Don't allow undefined symbols.\n\t  allow_undefined_flag=\"$no_undefined_flag\"\n\tfi\n\n      fi\n\n      func_generate_dlsyms \"$libname\" \"$libname\" \"yes\"\n      func_append libobjs \" $symfileobj\"\n      test \"X$libobjs\" = \"X \" && libobjs=\n\n      if test \"$opt_mode\" != relink; then\n\t# Remove our outputs, but don't remove object files since they\n\t# may have been created when compiling PIC objects.\n\tremovelist=\n\ttempremovelist=`$ECHO \"$output_objdir/*\"`\n\tfor p in $tempremovelist; do\n\t  case $p in\n\t    *.$objext | *.gcno)\n\t       ;;\n\t    $output_objdir/$outputname | $output_objdir/$libname.* | $output_objdir/${libname}${release}.*)\n\t       if test \"X$precious_files_regex\" != \"X\"; then\n\t\t if $ECHO \"$p\" | $EGREP -e \"$precious_files_regex\" >/dev/null 2>&1\n\t\t then\n\t\t   continue\n\t\t fi\n\t       fi\n\t       func_append removelist \" $p\"\n\t       ;;\n\t    *) ;;\n\t  esac\n\tdone\n\ttest -n \"$removelist\" && \\\n\t  func_show_eval \"${RM}r \\$removelist\"\n      fi\n\n      # Now set the variables for building old libraries.\n      if test \"$build_old_libs\" = yes && test \"$build_libtool_libs\" != convenience ; then\n\tfunc_append oldlibs \" $output_objdir/$libname.$libext\"\n\n\t# Transform .lo files to .o files.\n\toldobjs=\"$objs \"`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.${libext}$/d; $lo2o\" | $NL2SP`\n      fi\n\n      # Eliminate all temporary directories.\n      #for path in $notinst_path; do\n      #\tlib_search_path=`$ECHO \"$lib_search_path \" | $SED \"s% $path % %g\"`\n      #\tdeplibs=`$ECHO \"$deplibs \" | $SED \"s% -L$path % %g\"`\n      #\tdependency_libs=`$ECHO \"$dependency_libs \" | $SED \"s% -L$path % %g\"`\n      #done\n\n      if test -n \"$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\ttemp_xrpath=\n\tfor libdir in $xrpath; do\n\t  func_replace_sysroot \"$libdir\"\n\t  func_append temp_xrpath \" -R$func_replace_sysroot_result\"\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_rpath \" $libdir\" ;;\n\t  esac\n\tdone\n\tif test \"$hardcode_into_libs\" != yes || test \"$build_old_libs\" = yes; then\n\t  dependency_libs=\"$temp_xrpath $dependency_libs\"\n\tfi\n      fi\n\n      # Make sure dlfiles contains only unique files that won't be dlpreopened\n      old_dlfiles=\"$dlfiles\"\n      dlfiles=\n      for lib in $old_dlfiles; do\n\tcase \" $dlprefiles $dlfiles \" in\n\t*\" $lib \"*) ;;\n\t*) func_append dlfiles \" $lib\" ;;\n\tesac\n      done\n\n      # Make sure dlprefiles contains only unique files\n      old_dlprefiles=\"$dlprefiles\"\n      dlprefiles=\n      for lib in $old_dlprefiles; do\n\tcase \"$dlprefiles \" in\n\t*\" $lib \"*) ;;\n\t*) func_append dlprefiles \" $lib\" ;;\n\tesac\n      done\n\n      if test \"$build_libtool_libs\" = yes; then\n\tif test -n \"$rpath\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # these systems don't actually have a c library (as such)!\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C library is in the System framework\n\t    func_append deplibs \" System.ltframework\"\n\t    ;;\n\t  *-*-netbsd*)\n\t    # Don't link with libc until the a.out ld.so is fixed.\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    ;;\n\t  *)\n\t    # Add libc to deplibs on all other systems if necessary.\n\t    if test \"$build_libtool_need_lc\" = \"yes\"; then\n\t      func_append deplibs \" -lc\"\n\t    fi\n\t    ;;\n\t  esac\n\tfi\n\n\t# Transform deplibs into only deplibs that can be linked in shared.\n\tname_save=$name\n\tlibname_save=$libname\n\trelease_save=$release\n\tversuffix_save=$versuffix\n\tmajor_save=$major\n\t# I'm not sure if I'm treating the release correctly.  I think\n\t# release should show up in the -l (ie -lgmp5) so we don't want to\n\t# add it in twice.  Is that correct?\n\trelease=\"\"\n\tversuffix=\"\"\n\tmajor=\"\"\n\tnewdeplibs=\n\tdroppeddeps=no\n\tcase $deplibs_check_method in\n\tpass_all)\n\t  # Don't check for shared/static.  Everything works.\n\t  # This might be a little naive.  We might want to check\n\t  # whether the library exists or not.  But this is on\n\t  # osf3 & osf4 and I'm not really sure... Just\n\t  # implementing what was already the behavior.\n\t  newdeplibs=$deplibs\n\t  ;;\n\ttest_compile)\n\t  # This code stresses the \"libraries are programs\" paradigm to its\n\t  # limits. Maybe even breaks it.  We compile a program, linking it\n\t  # against the deplibs as a proxy for the library.  Then we can check\n\t  # whether they linked in statically or dynamically with ldd.\n\t  $opt_dry_run || $RM conftest.c\n\t  cat > conftest.c <<EOF\n\t  int main() { return 0; }\nEOF\n\t  $opt_dry_run || $RM conftest\n\t  if $LTCC $LTCFLAGS -o conftest conftest.c $deplibs; then\n\t    ldd_output=`ldd conftest`\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\tif test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\t  case \" $predeps $postdeps \" in\n\t\t  *\" $i \"*)\n\t\t    func_append newdeplibs \" $i\"\n\t\t    i=\"\"\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t\tif test -n \"$i\" ; then\n\t\t  libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\t  deplib_matches=`eval \"\\\\$ECHO \\\"$library_names_spec\\\"\"`\n\t\t  set dummy $deplib_matches; shift\n\t\t  deplib_match=$1\n\t\t  if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0 ; then\n\t\t    func_append newdeplibs \" $i\"\n\t\t  else\n\t\t    droppeddeps=yes\n\t\t    echo\n\t\t    $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t    echo \"*** shared version of the library, which I believe you do not have\"\n\t\t    echo \"*** because a test_compile did reveal that the linker did not use it for\"\n\t\t    echo \"*** its dynamic dependency list that programs get resolved with at runtime.\"\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *)\n\t\tfunc_append newdeplibs \" $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  else\n\t    # Error occurred in the first compile.  Let's try to salvage\n\t    # the situation: Compile a separate program for each library.\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\t$opt_dry_run || $RM conftest\n\t\tif $LTCC $LTCFLAGS -o conftest conftest.c $i; then\n\t\t  ldd_output=`ldd conftest`\n\t\t  if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\t    case \" $predeps $postdeps \" in\n\t\t    *\" $i \"*)\n\t\t      func_append newdeplibs \" $i\"\n\t\t      i=\"\"\n\t\t      ;;\n\t\t    esac\n\t\t  fi\n\t\t  if test -n \"$i\" ; then\n\t\t    libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\t    deplib_matches=`eval \"\\\\$ECHO \\\"$library_names_spec\\\"\"`\n\t\t    set dummy $deplib_matches; shift\n\t\t    deplib_match=$1\n\t\t    if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0 ; then\n\t\t      func_append newdeplibs \" $i\"\n\t\t    else\n\t\t      droppeddeps=yes\n\t\t      echo\n\t\t      $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t      echo \"*** I have the capability to make that library automatically link in when\"\n\t\t      echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t      echo \"*** shared version of the library, which you do not appear to have\"\n\t\t      echo \"*** because a test_compile did reveal that the linker did not use this one\"\n\t\t      echo \"*** as a dynamic dependency that programs can get resolved with at runtime.\"\n\t\t    fi\n\t\t  fi\n\t\telse\n\t\t  droppeddeps=yes\n\t\t  echo\n\t\t  $ECHO \"*** Warning!  Library $i is needed by this library but I was not able to\"\n\t\t  echo \"*** make it link in!  You will probably need to install it or some\"\n\t\t  echo \"*** library that it depends on before this library will be fully\"\n\t\t  echo \"*** functional.  Installing it before continuing would be even better.\"\n\t\tfi\n\t\t;;\n\t      *)\n\t\tfunc_append newdeplibs \" $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  fi\n\t  ;;\n\tfile_magic*)\n\t  set dummy $deplibs_check_method; shift\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  func_append newdeplibs \" $a_deplib\"\n\t\t  a_deplib=\"\"\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tlibname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\tif test -n \"$file_magic_glob\"; then\n\t\t  libnameglob=`func_echo_all \"$libname\" | $SED -e $file_magic_glob`\n\t\telse\n\t\t  libnameglob=$libname\n\t\tfi\n\t\ttest \"$want_nocaseglob\" = yes && nocaseglob=`shopt -p nocaseglob`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  if test \"$want_nocaseglob\" = yes; then\n\t\t    shopt -s nocaseglob\n\t\t    potential_libs=`ls $i/$libnameglob[.-]* 2>/dev/null`\n\t\t    $nocaseglob\n\t\t  else\n\t\t    potential_libs=`ls $i/$libnameglob[.-]* 2>/dev/null`\n\t\t  fi\n\t\t  for potent_lib in $potential_libs; do\n\t\t      # Follow soft links.\n\t\t      if ls -lLd \"$potent_lib\" 2>/dev/null |\n\t\t\t $GREP \" -> \" >/dev/null; then\n\t\t\tcontinue\n\t\t      fi\n\t\t      # The statement above tries to avoid entering an\n\t\t      # endless loop below, in case of cyclic links.\n\t\t      # We might still enter an endless loop, since a link\n\t\t      # loop can be closed while we follow links,\n\t\t      # but so what?\n\t\t      potlib=\"$potent_lib\"\n\t\t      while test -h \"$potlib\" 2>/dev/null; do\n\t\t\tpotliblink=`ls -ld $potlib | ${SED} 's/.* -> //'`\n\t\t\tcase $potliblink in\n\t\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) potlib=\"$potliblink\";;\n\t\t\t*) potlib=`$ECHO \"$potlib\" | $SED 's,[^/]*$,,'`\"$potliblink\";;\n\t\t\tesac\n\t\t      done\n\t\t      if eval $file_magic_cmd \\\"\\$potlib\\\" 2>/dev/null |\n\t\t\t $SED -e 10q |\n\t\t\t $EGREP \"$file_magic_regex\" > /dev/null; then\n\t\t\tfunc_append newdeplibs \" $a_deplib\"\n\t\t\ta_deplib=\"\"\n\t\t\tbreak 2\n\t\t      fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\" ; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for file magic test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a file magic. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      func_append newdeplibs \" $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tmatch_pattern*)\n\t  set dummy $deplibs_check_method; shift\n\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  func_append newdeplibs \" $a_deplib\"\n\t\t  a_deplib=\"\"\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tlibname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t  for potent_lib in $potential_libs; do\n\t\t    potlib=\"$potent_lib\" # see symlink-check above in file_magic test\n\t\t    if eval \"\\$ECHO \\\"$potent_lib\\\"\" 2>/dev/null | $SED 10q | \\\n\t\t       $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t      func_append newdeplibs \" $a_deplib\"\n\t\t      a_deplib=\"\"\n\t\t      break 2\n\t\t    fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\" ; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for regex pattern test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a regex pattern. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      func_append newdeplibs \" $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tnone | unknown | *)\n\t  newdeplibs=\"\"\n\t  tmp_deplibs=`$ECHO \" $deplibs\" | $SED 's/ -lc$//; s/ -[LR][^ ]*//g'`\n\t  if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t    for i in $predeps $postdeps ; do\n\t      # can't use Xsed below, because $i might contain '/'\n\t      tmp_deplibs=`$ECHO \" $tmp_deplibs\" | $SED \"s,$i,,\"`\n\t    done\n\t  fi\n\t  case $tmp_deplibs in\n\t  *[!\\\t\\ ]*)\n\t    echo\n\t    if test \"X$deplibs_check_method\" = \"Xnone\"; then\n\t      echo \"*** Warning: inter-library dependencies are not supported in this platform.\"\n\t    else\n\t      echo \"*** Warning: inter-library dependencies are not known to be supported.\"\n\t    fi\n\t    echo \"*** All declared inter-library dependencies are being dropped.\"\n\t    droppeddeps=yes\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tversuffix=$versuffix_save\n\tmajor=$major_save\n\trelease=$release_save\n\tlibname=$libname_save\n\tname=$name_save\n\n\tcase $host in\n\t*-*-rhapsody* | *-*-darwin1.[012])\n\t  # On Rhapsody replace the C library with the System framework\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t  ;;\n\tesac\n\n\tif test \"$droppeddeps\" = yes; then\n\t  if test \"$module\" = yes; then\n\t    echo\n\t    echo \"*** Warning: libtool could not satisfy all declared inter-library\"\n\t    $ECHO \"*** dependencies of module $libname.  Therefore, libtool will create\"\n\t    echo \"*** a static module, that should work as long as the dlopening\"\n\t    echo \"*** application is linked with the -dlopen flag.\"\n\t    if test -z \"$global_symbol_pipe\"; then\n\t      echo\n\t      echo \"*** However, this would only work if libtool was able to extract symbol\"\n\t      echo \"*** lists from a program, using \\`nm' or equivalent, but libtool could\"\n\t      echo \"*** not find such a program.  So, this module is probably useless.\"\n\t      echo \"*** \\`nm' from GNU binutils and a full rebuild may help.\"\n\t    fi\n\t    if test \"$build_old_libs\" = no; then\n\t      oldlibs=\"$output_objdir/$libname.$libext\"\n\t      build_libtool_libs=module\n\t      build_old_libs=yes\n\t    else\n\t      build_libtool_libs=no\n\t    fi\n\t  else\n\t    echo \"*** The inter-library dependencies that have been dropped here will be\"\n\t    echo \"*** automatically added whenever a program is linked with this library\"\n\t    echo \"*** or is declared to -dlopen it.\"\n\n\t    if test \"$allow_undefined\" = no; then\n\t      echo\n\t      echo \"*** Since this library must not contain undefined symbols,\"\n\t      echo \"*** because either the platform does not support them or\"\n\t      echo \"*** it was explicitly requested with -no-undefined,\"\n\t      echo \"*** libtool will only create a static version of it.\"\n\t      if test \"$build_old_libs\" = no; then\n\t\toldlibs=\"$output_objdir/$libname.$libext\"\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  fi\n\tfi\n\t# Done checking deplibs!\n\tdeplibs=$newdeplibs\n      fi\n      # Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n      case $host in\n\t*-*-darwin*)\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  new_inherited_linker_flags=`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  deplibs=`$ECHO \" $deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  ;;\n      esac\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    func_append new_libs \" -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) func_append new_libs \" $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) func_append new_libs \" $deplib\" ;;\n\tesac\n      done\n      deplibs=\"$new_libs\"\n\n      # All the library-specific variables (install_libdir is set above).\n      library_names=\n      old_library=\n      dlname=\n\n      # Test again, we may have decided not to build it any more\n      if test \"$build_libtool_libs\" = yes; then\n\t# Remove ${wl} instances when linking with ld.\n\t# FIXME: should test the right _cmds variable.\n\tcase $archive_cmds in\n\t  *\\$LD\\ *) wl= ;;\n        esac\n\tif test \"$hardcode_into_libs\" = yes; then\n\t  # Hardcode the library paths\n\t  hardcode_libdirs=\n\t  dep_rpath=\n\t  rpath=\"$finalize_rpath\"\n\t  test \"$opt_mode\" != relink && rpath=\"$compile_rpath$rpath\"\n\t  for libdir in $rpath; do\n\t    if test -n \"$hardcode_libdir_flag_spec\"; then\n\t      if test -n \"$hardcode_libdir_separator\"; then\n\t\tfunc_replace_sysroot \"$libdir\"\n\t\tlibdir=$func_replace_sysroot_result\n\t\tif test -z \"$hardcode_libdirs\"; then\n\t\t  hardcode_libdirs=\"$libdir\"\n\t\telse\n\t\t  # Just accumulate the unique libdirs.\n\t\t  case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t\t  *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t    ;;\n\t\t  *)\n\t\t    func_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t      else\n\t\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t\tfunc_append dep_rpath \" $flag\"\n\t      fi\n\t    elif test -n \"$runpath_var\"; then\n\t      case \"$perm_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append perm_rpath \" $libdir\" ;;\n\t      esac\n\t    fi\n\t  done\n\t  # Substitute the hardcoded libdirs into the rpath.\n\t  if test -n \"$hardcode_libdir_separator\" &&\n\t     test -n \"$hardcode_libdirs\"; then\n\t    libdir=\"$hardcode_libdirs\"\n\t    eval \"dep_rpath=\\\"$hardcode_libdir_flag_spec\\\"\"\n\t  fi\n\t  if test -n \"$runpath_var\" && test -n \"$perm_rpath\"; then\n\t    # We should set the runpath_var.\n\t    rpath=\n\t    for dir in $perm_rpath; do\n\t      func_append rpath \"$dir:\"\n\t    done\n\t    eval \"$runpath_var='$rpath\\$$runpath_var'; export $runpath_var\"\n\t  fi\n\t  test -n \"$dep_rpath\" && deplibs=\"$dep_rpath $deplibs\"\n\tfi\n\n\tshlibpath=\"$finalize_shlibpath\"\n\ttest \"$opt_mode\" != relink && shlibpath=\"$compile_shlibpath$shlibpath\"\n\tif test -n \"$shlibpath\"; then\n\t  eval \"$shlibpath_var='$shlibpath\\$$shlibpath_var'; export $shlibpath_var\"\n\tfi\n\n\t# Get the real and link names of the library.\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval library_names=\\\"$library_names_spec\\\"\n\tset dummy $library_names\n\tshift\n\trealname=\"$1\"\n\tshift\n\n\tif test -n \"$soname_spec\"; then\n\t  eval soname=\\\"$soname_spec\\\"\n\telse\n\t  soname=\"$realname\"\n\tfi\n\tif test -z \"$dlname\"; then\n\t  dlname=$soname\n\tfi\n\n\tlib=\"$output_objdir/$realname\"\n\tlinknames=\n\tfor link\n\tdo\n\t  func_append linknames \" $link\"\n\tdone\n\n\t# Use standard objects if they are pic\n\ttest -z \"$pic_flag\" && libobjs=`$ECHO \"$libobjs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\ttest \"X$libobjs\" = \"X \" && libobjs=\n\n\tdelfiles=\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  $opt_dry_run || cp \"$export_symbols\" \"$output_objdir/$libname.uexp\"\n\t  export_symbols=\"$output_objdir/$libname.uexp\"\n\t  func_append delfiles \" $export_symbols\"\n\tfi\n\n\torig_export_symbols=\n\tcase $host_os in\n\tcygwin* | mingw* | cegcc*)\n\t  if test -n \"$export_symbols\" && test -z \"$export_symbols_regex\"; then\n\t    # exporting using user supplied symfile\n\t    if test \"x`$SED 1q $export_symbols`\" != xEXPORTS; then\n\t      # and it's NOT already a .def file. Must figure out\n\t      # which of the given symbols are data symbols and tag\n\t      # them as such. So, trigger use of export_symbols_cmds.\n\t      # export_symbols gets reassigned inside the \"prepare\n\t      # the list of exported symbols\" if statement, so the\n\t      # include_expsyms logic still works.\n\t      orig_export_symbols=\"$export_symbols\"\n\t      export_symbols=\n\t      always_export_symbols=yes\n\t    fi\n\t  fi\n\t  ;;\n\tesac\n\n\t# Prepare the list of exported symbols\n\tif test -z \"$export_symbols\"; then\n\t  if test \"$always_export_symbols\" = yes || test -n \"$export_symbols_regex\"; then\n\t    func_verbose \"generating symbol list for \\`$libname.la'\"\n\t    export_symbols=\"$output_objdir/$libname.exp\"\n\t    $opt_dry_run || $RM $export_symbols\n\t    cmds=$export_symbols_cmds\n\t    save_ifs=\"$IFS\"; IFS='~'\n\t    for cmd1 in $cmds; do\n\t      IFS=\"$save_ifs\"\n\t      # Take the normal branch if the nm_file_list_spec branch\n\t      # doesn't work or if tool conversion is not needed.\n\t      case $nm_file_list_spec~$to_tool_file_cmd in\n\t\t*~func_convert_file_noop | *~func_convert_file_msys_to_w32 | ~*)\n\t\t  try_normal_branch=yes\n\t\t  eval cmd=\\\"$cmd1\\\"\n\t\t  func_len \" $cmd\"\n\t\t  len=$func_len_result\n\t\t  ;;\n\t\t*)\n\t\t  try_normal_branch=no\n\t\t  ;;\n\t      esac\n\t      if test \"$try_normal_branch\" = yes \\\n\t\t && { test \"$len\" -lt \"$max_cmd_len\" \\\n\t\t      || test \"$max_cmd_len\" -le -1; }\n\t      then\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\tskipped_export=false\n\t      elif test -n \"$nm_file_list_spec\"; then\n\t\tfunc_basename \"$output\"\n\t\toutput_la=$func_basename_result\n\t\tsave_libobjs=$libobjs\n\t\tsave_output=$output\n\t\toutput=${output_objdir}/${output_la}.nm\n\t\tfunc_to_tool_file \"$output\"\n\t\tlibobjs=$nm_file_list_spec$func_to_tool_file_result\n\t\tfunc_append delfiles \" $output\"\n\t\tfunc_verbose \"creating $NM input file list: $output\"\n\t\tfor obj in $save_libobjs; do\n\t\t  func_to_tool_file \"$obj\"\n\t\t  $ECHO \"$func_to_tool_file_result\"\n\t\tdone > \"$output\"\n\t\teval cmd=\\\"$cmd1\\\"\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\toutput=$save_output\n\t\tlibobjs=$save_libobjs\n\t\tskipped_export=false\n\t      else\n\t\t# The command line is too long to execute in one step.\n\t\tfunc_verbose \"using reloadable object file for export list...\"\n\t\tskipped_export=:\n\t\t# Break out early, otherwise skipped_export may be\n\t\t# set to false by a later but shorter cmd.\n\t\tbreak\n\t      fi\n\t    done\n\t    IFS=\"$save_ifs\"\n\t    if test -n \"$export_symbols_regex\" && test \"X$skipped_export\" != \"X:\"; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  tmp_export_symbols=\"$export_symbols\"\n\t  test -n \"$orig_export_symbols\" && tmp_export_symbols=\"$orig_export_symbols\"\n\t  $opt_dry_run || eval '$ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"'\n\tfi\n\n\tif test \"X$skipped_export\" != \"X:\" && test -n \"$orig_export_symbols\"; then\n\t  # The given exports_symbols file has to be filtered, so filter it.\n\t  func_verbose \"filter symbol list for \\`$libname.la' to tag DATA exports\"\n\t  # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t  # 's' commands which not all seds can handle. GNU sed should be fine\n\t  # though. Also, the filter scales superlinearly with the number of\n\t  # global variables. join(1) would be nice here, but unfortunately\n\t  # isn't a blessed tool.\n\t  $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t  func_append delfiles \" $export_symbols $output_objdir/$libname.filter\"\n\t  export_symbols=$output_objdir/$libname.def\n\t  $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\tfi\n\n\ttmp_deplibs=\n\tfor test_deplib in $deplibs; do\n\t  case \" $convenience \" in\n\t  *\" $test_deplib \"*) ;;\n\t  *)\n\t    func_append tmp_deplibs \" $test_deplib\"\n\t    ;;\n\t  esac\n\tdone\n\tdeplibs=\"$tmp_deplibs\"\n\n\tif test -n \"$convenience\"; then\n\t  if test -n \"$whole_archive_flag_spec\" &&\n\t    test \"$compiler_needs_object\" = yes &&\n\t    test -z \"$libobjs\"; then\n\t    # extract the archives, so we have objects to list.\n\t    # TODO: could optimize this to just extract one archive.\n\t    whole_archive_flag_spec=\n\t  fi\n\t  if test -n \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  else\n\t    gentop=\"$output_objdir/${outputname}x\"\n\t    func_append generated \" $gentop\"\n\n\t    func_extract_archives $gentop $convenience\n\t    func_append libobjs \" $func_extract_archives_result\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\tfi\n\n\tif test \"$thread_safe\" = yes && test -n \"$thread_safe_flag_spec\"; then\n\t  eval flag=\\\"$thread_safe_flag_spec\\\"\n\t  func_append linker_flags \" $flag\"\n\tfi\n\n\t# Make a backup of the uninstalled library when relinking\n\tif test \"$opt_mode\" = relink; then\n\t  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}U && $MV $realname ${realname}U)' || exit $?\n\tfi\n\n\t# Do each of the archive commands.\n\tif test \"$module\" = yes && test -n \"$module_cmds\" ; then\n\t  if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$module_expsym_cmds\\\"\n\t    cmds=$module_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$module_cmds\\\"\n\t    cmds=$module_cmds\n\t  fi\n\telse\n\t  if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$archive_expsym_cmds\\\"\n\t    cmds=$archive_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$archive_cmds\\\"\n\t    cmds=$archive_cmds\n\t  fi\n\tfi\n\n\tif test \"X$skipped_export\" != \"X:\" &&\n\t   func_len \" $test_cmds\" &&\n\t   len=$func_len_result &&\n\t   test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  :\n\telse\n\t  # The command line is too long to link in one step, link piecewise\n\t  # or, if using GNU ld and skipped_export is not :, use a linker\n\t  # script.\n\n\t  # Save the value of $output and $libobjs because we want to\n\t  # use them later.  If we have whole_archive_flag_spec, we\n\t  # want to use save_libobjs as it was before\n\t  # whole_archive_flag_spec was expanded, because we can't\n\t  # assume the linker understands whole_archive_flag_spec.\n\t  # This may have to be revisited, in case too many\n\t  # convenience libraries get linked in and end up exceeding\n\t  # the spec.\n\t  if test -z \"$convenience\" || test -z \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t  fi\n\t  save_output=$output\n\t  func_basename \"$output\"\n\t  output_la=$func_basename_result\n\n\t  # Clear the reloadable object creation command queue and\n\t  # initialize k to one.\n\t  test_cmds=\n\t  concat_cmds=\n\t  objlist=\n\t  last_robj=\n\t  k=1\n\n\t  if test -n \"$save_libobjs\" && test \"X$skipped_export\" != \"X:\" && test \"$with_gnu_ld\" = yes; then\n\t    output=${output_objdir}/${output_la}.lnkscript\n\t    func_verbose \"creating GNU ld script: $output\"\n\t    echo 'INPUT (' > $output\n\t    for obj in $save_libobjs\n\t    do\n\t      func_to_tool_file \"$obj\"\n\t      $ECHO \"$func_to_tool_file_result\" >> $output\n\t    done\n\t    echo ')' >> $output\n\t    func_append delfiles \" $output\"\n\t    func_to_tool_file \"$output\"\n\t    output=$func_to_tool_file_result\n\t  elif test -n \"$save_libobjs\" && test \"X$skipped_export\" != \"X:\" && test \"X$file_list_spec\" != X; then\n\t    output=${output_objdir}/${output_la}.lnk\n\t    func_verbose \"creating linker input file list: $output\"\n\t    : > $output\n\t    set x $save_libobjs\n\t    shift\n\t    firstobj=\n\t    if test \"$compiler_needs_object\" = yes; then\n\t      firstobj=\"$1 \"\n\t      shift\n\t    fi\n\t    for obj\n\t    do\n\t      func_to_tool_file \"$obj\"\n\t      $ECHO \"$func_to_tool_file_result\" >> $output\n\t    done\n\t    func_append delfiles \" $output\"\n\t    func_to_tool_file \"$output\"\n\t    output=$firstobj\\\"$file_list_spec$func_to_tool_file_result\\\"\n\t  else\n\t    if test -n \"$save_libobjs\"; then\n\t      func_verbose \"creating reloadable object files...\"\n\t      output=$output_objdir/$output_la-${k}.$objext\n\t      eval test_cmds=\\\"$reload_cmds\\\"\n\t      func_len \" $test_cmds\"\n\t      len0=$func_len_result\n\t      len=$len0\n\n\t      # Loop over the list of objects to be linked.\n\t      for obj in $save_libobjs\n\t      do\n\t\tfunc_len \" $obj\"\n\t\tfunc_arith $len + $func_len_result\n\t\tlen=$func_arith_result\n\t\tif test \"X$objlist\" = X ||\n\t\t   test \"$len\" -lt \"$max_cmd_len\"; then\n\t\t  func_append objlist \" $obj\"\n\t\telse\n\t\t  # The command $test_cmds is almost too long, add a\n\t\t  # command to the queue.\n\t\t  if test \"$k\" -eq 1 ; then\n\t\t    # The first file doesn't have a previous command to add.\n\t\t    reload_objs=$objlist\n\t\t    eval concat_cmds=\\\"$reload_cmds\\\"\n\t\t  else\n\t\t    # All subsequent reloadable object files will link in\n\t\t    # the last one created.\n\t\t    reload_objs=\"$objlist $last_robj\"\n\t\t    eval concat_cmds=\\\"\\$concat_cmds~$reload_cmds~\\$RM $last_robj\\\"\n\t\t  fi\n\t\t  last_robj=$output_objdir/$output_la-${k}.$objext\n\t\t  func_arith $k + 1\n\t\t  k=$func_arith_result\n\t\t  output=$output_objdir/$output_la-${k}.$objext\n\t\t  objlist=\" $obj\"\n\t\t  func_len \" $last_robj\"\n\t\t  func_arith $len0 + $func_len_result\n\t\t  len=$func_arith_result\n\t\tfi\n\t      done\n\t      # Handle the remaining objects by creating one last\n\t      # reloadable object file.  All subsequent reloadable object\n\t      # files will link in the last one created.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      reload_objs=\"$objlist $last_robj\"\n\t      eval concat_cmds=\\\"\\${concat_cmds}$reload_cmds\\\"\n\t      if test -n \"$last_robj\"; then\n\t        eval concat_cmds=\\\"\\${concat_cmds}~\\$RM $last_robj\\\"\n\t      fi\n\t      func_append delfiles \" $output\"\n\n\t    else\n\t      output=\n\t    fi\n\n\t    if ${skipped_export-false}; then\n\t      func_verbose \"generating symbol list for \\`$libname.la'\"\n\t      export_symbols=\"$output_objdir/$libname.exp\"\n\t      $opt_dry_run || $RM $export_symbols\n\t      libobjs=$output\n\t      # Append the command to create the export file.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\$concat_cmds$export_symbols_cmds\\\"\n\t      if test -n \"$last_robj\"; then\n\t\teval concat_cmds=\\\"\\$concat_cmds~\\$RM $last_robj\\\"\n\t      fi\n\t    fi\n\n\t    test -n \"$save_libobjs\" &&\n\t      func_verbose \"creating a temporary reloadable object file: $output\"\n\n\t    # Loop through the commands generated above and execute them.\n\t    save_ifs=\"$IFS\"; IFS='~'\n\t    for cmd in $concat_cmds; do\n\t      IFS=\"$save_ifs\"\n\t      $opt_silent || {\n\t\t  func_quote_for_expand \"$cmd\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t      }\n\t      $opt_dry_run || eval \"$cmd\" || {\n\t\tlt_exit=$?\n\n\t\t# Restore the uninstalled library and exit\n\t\tif test \"$opt_mode\" = relink; then\n\t\t  ( cd \"$output_objdir\" && \\\n\t\t    $RM \"${realname}T\" && \\\n\t\t    $MV \"${realname}U\" \"$realname\" )\n\t\tfi\n\n\t\texit $lt_exit\n\t      }\n\t    done\n\t    IFS=\"$save_ifs\"\n\n\t    if test -n \"$export_symbols_regex\" && ${skipped_export-false}; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\n          if ${skipped_export-false}; then\n\t    if test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t      tmp_export_symbols=\"$export_symbols\"\n\t      test -n \"$orig_export_symbols\" && tmp_export_symbols=\"$orig_export_symbols\"\n\t      $opt_dry_run || eval '$ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"'\n\t    fi\n\n\t    if test -n \"$orig_export_symbols\"; then\n\t      # The given exports_symbols file has to be filtered, so filter it.\n\t      func_verbose \"filter symbol list for \\`$libname.la' to tag DATA exports\"\n\t      # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t      # 's' commands which not all seds can handle. GNU sed should be fine\n\t      # though. Also, the filter scales superlinearly with the number of\n\t      # global variables. join(1) would be nice here, but unfortunately\n\t      # isn't a blessed tool.\n\t      $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t      func_append delfiles \" $export_symbols $output_objdir/$libname.filter\"\n\t      export_symbols=$output_objdir/$libname.def\n\t      $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\t    fi\n\t  fi\n\n\t  libobjs=$output\n\t  # Restore the value of output.\n\t  output=$save_output\n\n\t  if test -n \"$convenience\" && test -n \"$whole_archive_flag_spec\"; then\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\t  # Expand the library linking commands again to reset the\n\t  # value of $libobjs for piecewise linking.\n\n\t  # Do each of the archive commands.\n\t  if test \"$module\" = yes && test -n \"$module_cmds\" ; then\n\t    if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t      cmds=$module_expsym_cmds\n\t    else\n\t      cmds=$module_cmds\n\t    fi\n\t  else\n\t    if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t      cmds=$archive_expsym_cmds\n\t    else\n\t      cmds=$archive_cmds\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$delfiles\"; then\n\t  # Append the command to remove temporary files to $cmds.\n\t  eval cmds=\\\"\\$cmds~\\$RM $delfiles\\\"\n\tfi\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=\"$output_objdir/${outputname}x\"\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  func_append libobjs \" $func_extract_archives_result\"\n\t  test \"X$libobjs\" = \"X \" && libobjs=\n\tfi\n\n\tsave_ifs=\"$IFS\"; IFS='~'\n\tfor cmd in $cmds; do\n\t  IFS=\"$save_ifs\"\n\t  eval cmd=\\\"$cmd\\\"\n\t  $opt_silent || {\n\t    func_quote_for_expand \"$cmd\"\n\t    eval \"func_echo $func_quote_for_expand_result\"\n\t  }\n\t  $opt_dry_run || eval \"$cmd\" || {\n\t    lt_exit=$?\n\n\t    # Restore the uninstalled library and exit\n\t    if test \"$opt_mode\" = relink; then\n\t      ( cd \"$output_objdir\" && \\\n\t        $RM \"${realname}T\" && \\\n\t\t$MV \"${realname}U\" \"$realname\" )\n\t    fi\n\n\t    exit $lt_exit\n\t  }\n\tdone\n\tIFS=\"$save_ifs\"\n\n\t# Restore the uninstalled library and exit\n\tif test \"$opt_mode\" = relink; then\n\t  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}T && $MV $realname ${realname}T && $MV ${realname}U $realname)' || exit $?\n\n\t  if test -n \"$convenience\"; then\n\t    if test -z \"$whole_archive_flag_spec\"; then\n\t      func_show_eval '${RM}r \"$gentop\"'\n\t    fi\n\t  fi\n\n\t  exit $EXIT_SUCCESS\n\tfi\n\n\t# Create links to the real library.\n\tfor linkname in $linknames; do\n\t  if test \"$realname\" != \"$linkname\"; then\n\t    func_show_eval '(cd \"$output_objdir\" && $RM \"$linkname\" && $LN_S \"$realname\" \"$linkname\")' 'exit $?'\n\t  fi\n\tdone\n\n\t# If -module or -export-dynamic was specified, set the dlname.\n\tif test \"$module\" = yes || test \"$export_dynamic\" = yes; then\n\t  # On all known operating systems, these are identical.\n\t  dlname=\"$soname\"\n\tfi\n      fi\n      ;;\n\n    obj)\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\tfunc_warning \"\\`-dlopen' is ignored for objects\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"\\`-l' and \\`-L' are ignored for objects\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"\\`-rpath' is ignored for objects\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"\\`-R' is ignored for objects\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"\\`-version-info' is ignored for objects\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"\\`-release' is ignored for objects\"\n\n      case $output in\n      *.lo)\n\ttest -n \"$objs$old_deplibs\" && \\\n\t  func_fatal_error \"cannot build library object \\`$output' from non-libtool objects\"\n\n\tlibobj=$output\n\tfunc_lo2o \"$libobj\"\n\tobj=$func_lo2o_result\n\t;;\n      *)\n\tlibobj=\n\tobj=\"$output\"\n\t;;\n      esac\n\n      # Delete the old objects.\n      $opt_dry_run || $RM $obj $libobj\n\n      # Objects from convenience libraries.  This assumes\n      # single-version convenience libraries.  Whenever we create\n      # different ones for PIC/non-PIC, this we'll have to duplicate\n      # the extraction.\n      reload_conv_objs=\n      gentop=\n      # reload_cmds runs $LD directly, so let us get rid of\n      # -Wl from whole_archive_flag_spec and hope we can get by with\n      # turning comma into space..\n      wl=\n\n      if test -n \"$convenience\"; then\n\tif test -n \"$whole_archive_flag_spec\"; then\n\t  eval tmp_whole_archive_flags=\\\"$whole_archive_flag_spec\\\"\n\t  reload_conv_objs=$reload_objs\\ `$ECHO \"$tmp_whole_archive_flags\" | $SED 's|,| |g'`\n\telse\n\t  gentop=\"$output_objdir/${obj}x\"\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $convenience\n\t  reload_conv_objs=\"$reload_objs $func_extract_archives_result\"\n\tfi\n      fi\n\n      # If we're not building shared, we need to use non_pic_objs\n      test \"$build_libtool_libs\" != yes && libobjs=\"$non_pic_objects\"\n\n      # Create the old-style object.\n      reload_objs=\"$objs$old_deplibs \"`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.${libext}$/d; /\\.lib$/d; $lo2o\" | $NL2SP`\" $reload_conv_objs\" ### testsuite: skip nested quoting test\n\n      output=\"$obj\"\n      func_execute_cmds \"$reload_cmds\" 'exit $?'\n\n      # Exit if we aren't doing a library object file.\n      if test -z \"$libobj\"; then\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      if test \"$build_libtool_libs\" != yes; then\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\t# Create an invalid libtool object if no PIC, so that we don't\n\t# accidentally link it into a program.\n\t# $show \"echo timestamp > $libobj\"\n\t# $opt_dry_run || eval \"echo timestamp > $libobj\" || exit $?\n\texit $EXIT_SUCCESS\n      fi\n\n      if test -n \"$pic_flag\" || test \"$pic_mode\" != default; then\n\t# Only do commands if we really have different PIC objects.\n\treload_objs=\"$libobjs $reload_conv_objs\"\n\toutput=\"$libobj\"\n\tfunc_execute_cmds \"$reload_cmds\" 'exit $?'\n      fi\n\n      if test -n \"$gentop\"; then\n\tfunc_show_eval '${RM}r \"$gentop\"'\n      fi\n\n      exit $EXIT_SUCCESS\n      ;;\n\n    prog)\n      case $host in\n\t*cygwin*) func_stripname '' '.exe' \"$output\"\n\t          output=$func_stripname_result.exe;;\n      esac\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"\\`-version-info' is ignored for programs\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"\\`-release' is ignored for programs\"\n\n      test \"$preload\" = yes \\\n        && test \"$dlopen_support\" = unknown \\\n\t&& test \"$dlopen_self\" = unknown \\\n\t&& test \"$dlopen_self_static\" = unknown && \\\n\t  func_warning \"\\`LT_INIT([dlopen])' not used. Assuming no dlopen support.\"\n\n      case $host in\n      *-*-rhapsody* | *-*-darwin1.[012])\n\t# On Rhapsody replace the C library is the System framework\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t;;\n      esac\n\n      case $host in\n      *-*-darwin*)\n\t# Don't allow lazy linking, it breaks C++ global constructors\n\t# But is supposedly fixed on 10.4 or later (yay!).\n\tif test \"$tagname\" = CXX ; then\n\t  case ${MACOSX_DEPLOYMENT_TARGET-10.0} in\n\t    10.[0123])\n\t      func_append compile_command \" ${wl}-bind_at_load\"\n\t      func_append finalize_command \" ${wl}-bind_at_load\"\n\t    ;;\n\t  esac\n\tfi\n\t# Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t;;\n      esac\n\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $compile_deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    func_append new_libs \" -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $compile_deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) func_append new_libs \" $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) func_append new_libs \" $deplib\" ;;\n\tesac\n      done\n      compile_deplibs=\"$new_libs\"\n\n\n      func_append compile_command \" $compile_deplibs\"\n      func_append finalize_command \" $finalize_deplibs\"\n\n      if test -n \"$rpath$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\tfor libdir in $rpath $xrpath; do\n\t  # This is the magic to use -rpath.\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_rpath \" $libdir\" ;;\n\t  esac\n\tdone\n      fi\n\n      # Now hardcode the library paths\n      rpath=\n      hardcode_libdirs=\n      for libdir in $compile_rpath $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=\"$libdir\"\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\tfunc_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    func_append rpath \" $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append perm_rpath \" $libdir\" ;;\n\t  esac\n\tfi\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`${ECHO} \"$libdir\" | ${SED} -e 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$libdir:\"*) ;;\n\t  ::) dllsearchpath=$libdir;;\n\t  *) func_append dllsearchpath \":$libdir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) func_append dllsearchpath \":$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=\"$hardcode_libdirs\"\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      compile_rpath=\"$rpath\"\n\n      rpath=\n      hardcode_libdirs=\n      for libdir in $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=\"$libdir\"\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\tfunc_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    func_append rpath \" $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$finalize_perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_perm_rpath \" $libdir\" ;;\n\t  esac\n\tfi\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=\"$hardcode_libdirs\"\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      finalize_rpath=\"$rpath\"\n\n      if test -n \"$libobjs\" && test \"$build_old_libs\" = yes; then\n\t# Transform all the library objects into standard objects.\n\tcompile_command=`$ECHO \"$compile_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\tfinalize_command=`$ECHO \"$finalize_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n      fi\n\n      func_generate_dlsyms \"$outputname\" \"@PROGRAM@\" \"no\"\n\n      # template prelinking step\n      if test -n \"$prelink_cmds\"; then\n\tfunc_execute_cmds \"$prelink_cmds\" 'exit $?'\n      fi\n\n      wrappers_required=yes\n      case $host in\n      *cegcc* | *mingw32ce*)\n        # Disable wrappers for cegcc and mingw32ce hosts, we are cross compiling anyway.\n        wrappers_required=no\n        ;;\n      *cygwin* | *mingw* )\n        if test \"$build_libtool_libs\" != yes; then\n          wrappers_required=no\n        fi\n        ;;\n      *)\n        if test \"$need_relink\" = no || test \"$build_libtool_libs\" != yes; then\n          wrappers_required=no\n        fi\n        ;;\n      esac\n      if test \"$wrappers_required\" = no; then\n\t# Replace the output file specification.\n\tcompile_command=`$ECHO \"$compile_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\tlink_command=\"$compile_command$compile_rpath\"\n\n\t# We have no uninstalled library dependencies, so finalize right now.\n\texit_status=0\n\tfunc_show_eval \"$link_command\" 'exit_status=$?'\n\n\tif test -n \"$postlink_cmds\"; then\n\t  func_to_tool_file \"$output\"\n\t  postlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\t  func_execute_cmds \"$postlink_cmds\" 'exit $?'\n\tfi\n\n\t# Delete the generated files.\n\tif test -f \"$output_objdir/${outputname}S.${objext}\"; then\n\t  func_show_eval '$RM \"$output_objdir/${outputname}S.${objext}\"'\n\tfi\n\n\texit $exit_status\n      fi\n\n      if test -n \"$compile_shlibpath$finalize_shlibpath\"; then\n\tcompile_command=\"$shlibpath_var=\\\"$compile_shlibpath$finalize_shlibpath\\$$shlibpath_var\\\" $compile_command\"\n      fi\n      if test -n \"$finalize_shlibpath\"; then\n\tfinalize_command=\"$shlibpath_var=\\\"$finalize_shlibpath\\$$shlibpath_var\\\" $finalize_command\"\n      fi\n\n      compile_var=\n      finalize_var=\n      if test -n \"$runpath_var\"; then\n\tif test -n \"$perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $perm_rpath; do\n\t    func_append rpath \"$dir:\"\n\t  done\n\t  compile_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n\tif test -n \"$finalize_perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $finalize_perm_rpath; do\n\t    func_append rpath \"$dir:\"\n\t  done\n\t  finalize_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n      fi\n\n      if test \"$no_install\" = yes; then\n\t# We don't need to create a wrapper script.\n\tlink_command=\"$compile_var$compile_command$compile_rpath\"\n\t# Replace the output file specification.\n\tlink_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\t# Delete the old output file.\n\t$opt_dry_run || $RM $output\n\t# Link the executable and exit\n\tfunc_show_eval \"$link_command\" 'exit $?'\n\n\tif test -n \"$postlink_cmds\"; then\n\t  func_to_tool_file \"$output\"\n\t  postlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\t  func_execute_cmds \"$postlink_cmds\" 'exit $?'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      if test \"$hardcode_action\" = relink; then\n\t# Fast installation is not supported\n\tlink_command=\"$compile_var$compile_command$compile_rpath\"\n\trelink_command=\"$finalize_var$finalize_command$finalize_rpath\"\n\n\tfunc_warning \"this platform does not like uninstalled shared libraries\"\n\tfunc_warning \"\\`$output' will be relinked during installation\"\n      else\n\tif test \"$fast_install\" != no; then\n\t  link_command=\"$finalize_var$compile_command$finalize_rpath\"\n\t  if test \"$fast_install\" = yes; then\n\t    relink_command=`$ECHO \"$compile_var$compile_command$compile_rpath\" | $SED 's%@OUTPUT@%\\$progdir/\\$file%g'`\n\t  else\n\t    # fast_install is set to needless\n\t    relink_command=\n\t  fi\n\telse\n\t  link_command=\"$compile_var$compile_command$compile_rpath\"\n\t  relink_command=\"$finalize_var$finalize_command$finalize_rpath\"\n\tfi\n      fi\n\n      # Replace the output file specification.\n      link_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g'`\n\n      # Delete the old output files.\n      $opt_dry_run || $RM $output $output_objdir/$outputname $output_objdir/lt-$outputname\n\n      func_show_eval \"$link_command\" 'exit $?'\n\n      if test -n \"$postlink_cmds\"; then\n\tfunc_to_tool_file \"$output_objdir/$outputname\"\n\tpostlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\tfunc_execute_cmds \"$postlink_cmds\" 'exit $?'\n      fi\n\n      # Now create the wrapper script.\n      func_verbose \"creating $output\"\n\n      # Quote the relink command for shipping.\n      if test -n \"$relink_command\"; then\n\t# Preserve any variables that may affect compiler behavior\n\tfor var in $variables_saved_for_relink; do\n\t  if eval test -z \\\"\\${$var+set}\\\"; then\n\t    relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\t  elif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t    relink_command=\"$var=; export $var; $relink_command\"\n\t  else\n\t    func_quote_for_eval \"$var_value\"\n\t    relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\t  fi\n\tdone\n\trelink_command=\"(cd `pwd`; $relink_command)\"\n\trelink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      fi\n\n      # Only actually do things if not in dry run mode.\n      $opt_dry_run || {\n\t# win32 will think the script is a binary if it has\n\t# a .exe suffix, so we strip it off here.\n\tcase $output in\n\t  *.exe) func_stripname '' '.exe' \"$output\"\n\t         output=$func_stripname_result ;;\n\tesac\n\t# test for cygwin because mv fails w/o .exe extensions\n\tcase $host in\n\t  *cygwin*)\n\t    exeext=.exe\n\t    func_stripname '' '.exe' \"$outputname\"\n\t    outputname=$func_stripname_result ;;\n\t  *) exeext= ;;\n\tesac\n\tcase $host in\n\t  *cygwin* | *mingw* )\n\t    func_dirname_and_basename \"$output\" \"\" \".\"\n\t    output_name=$func_basename_result\n\t    output_path=$func_dirname_result\n\t    cwrappersource=\"$output_path/$objdir/lt-$output_name.c\"\n\t    cwrapper=\"$output_path/$output_name.exe\"\n\t    $RM $cwrappersource $cwrapper\n\t    trap \"$RM $cwrappersource $cwrapper; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_cwrapperexe_src > $cwrappersource\n\n\t    # The wrapper executable is built using the $host compiler,\n\t    # because it contains $host paths and files. If cross-\n\t    # compiling, it, like the target executable, must be\n\t    # executed on the $host or under an emulation environment.\n\t    $opt_dry_run || {\n\t      $LTCC $LTCFLAGS -o $cwrapper $cwrappersource\n\t      $STRIP $cwrapper\n\t    }\n\n\t    # Now, create the wrapper script for func_source use:\n\t    func_ltwrapper_scriptname $cwrapper\n\t    $RM $func_ltwrapper_scriptname_result\n\t    trap \"$RM $func_ltwrapper_scriptname_result; exit $EXIT_FAILURE\" 1 2 15\n\t    $opt_dry_run || {\n\t      # note: this script will not be executed, so do not chmod.\n\t      if test \"x$build\" = \"x$host\" ; then\n\t\t$cwrapper --lt-dump-script > $func_ltwrapper_scriptname_result\n\t      else\n\t\tfunc_emit_wrapper no > $func_ltwrapper_scriptname_result\n\t      fi\n\t    }\n\t  ;;\n\t  * )\n\t    $RM $output\n\t    trap \"$RM $output; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_wrapper no > $output\n\t    chmod +x $output\n\t  ;;\n\tesac\n      }\n      exit $EXIT_SUCCESS\n      ;;\n    esac\n\n    # See if we need to build an old-fashioned archive.\n    for oldlib in $oldlibs; do\n\n      if test \"$build_libtool_libs\" = convenience; then\n\toldobjs=\"$libobjs_save $symfileobj\"\n\taddlibs=\"$convenience\"\n\tbuild_libtool_libs=no\n      else\n\tif test \"$build_libtool_libs\" = module; then\n\t  oldobjs=\"$libobjs_save\"\n\t  build_libtool_libs=no\n\telse\n\t  oldobjs=\"$old_deplibs $non_pic_objects\"\n\t  if test \"$preload\" = yes && test -f \"$symfileobj\"; then\n\t    func_append oldobjs \" $symfileobj\"\n\t  fi\n\tfi\n\taddlibs=\"$old_convenience\"\n      fi\n\n      if test -n \"$addlibs\"; then\n\tgentop=\"$output_objdir/${outputname}x\"\n\tfunc_append generated \" $gentop\"\n\n\tfunc_extract_archives $gentop $addlibs\n\tfunc_append oldobjs \" $func_extract_archives_result\"\n      fi\n\n      # Do each command in the archive commands.\n      if test -n \"$old_archive_from_new_cmds\" && test \"$build_libtool_libs\" = yes; then\n\tcmds=$old_archive_from_new_cmds\n      else\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=\"$output_objdir/${outputname}x\"\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  func_append oldobjs \" $func_extract_archives_result\"\n\tfi\n\n\t# POSIX demands no paths to be encoded in archives.  We have\n\t# to avoid creating archives with duplicate basenames if we\n\t# might have to extract them afterwards, e.g., when creating a\n\t# static archive out of a convenience library, or when linking\n\t# the entirety of a libtool archive into another (currently\n\t# not supported by libtool).\n\tif (for obj in $oldobjs\n\t    do\n\t      func_basename \"$obj\"\n\t      $ECHO \"$func_basename_result\"\n\t    done | sort | sort -uc >/dev/null 2>&1); then\n\t  :\n\telse\n\t  echo \"copying selected object files to avoid basename conflicts...\"\n\t  gentop=\"$output_objdir/${outputname}x\"\n\t  func_append generated \" $gentop\"\n\t  func_mkdir_p \"$gentop\"\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  counter=1\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_basename \"$obj\"\n\t    objbase=\"$func_basename_result\"\n\t    case \" $oldobjs \" in\n\t    \" \") oldobjs=$obj ;;\n\t    *[\\ /]\"$objbase \"*)\n\t      while :; do\n\t\t# Make sure we don't pick an alternate name that also\n\t\t# overlaps.\n\t\tnewobj=lt$counter-$objbase\n\t\tfunc_arith $counter + 1\n\t\tcounter=$func_arith_result\n\t\tcase \" $oldobjs \" in\n\t\t*[\\ /]\"$newobj \"*) ;;\n\t\t*) if test ! -f \"$gentop/$newobj\"; then break; fi ;;\n\t\tesac\n\t      done\n\t      func_show_eval \"ln $obj $gentop/$newobj || cp $obj $gentop/$newobj\"\n\t      func_append oldobjs \" $gentop/$newobj\"\n\t      ;;\n\t    *) func_append oldobjs \" $obj\" ;;\n\t    esac\n\t  done\n\tfi\n\tfunc_to_tool_file \"$oldlib\" func_convert_file_msys_to_w32\n\ttool_oldlib=$func_to_tool_file_result\n\teval cmds=\\\"$old_archive_cmds\\\"\n\n\tfunc_len \" $cmds\"\n\tlen=$func_len_result\n\tif test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  cmds=$old_archive_cmds\n\telif test -n \"$archiver_list_spec\"; then\n\t  func_verbose \"using command file archive linking...\"\n\t  for obj in $oldobjs\n\t  do\n\t    func_to_tool_file \"$obj\"\n\t    $ECHO \"$func_to_tool_file_result\"\n\t  done > $output_objdir/$libname.libcmd\n\t  func_to_tool_file \"$output_objdir/$libname.libcmd\"\n\t  oldobjs=\" $archiver_list_spec$func_to_tool_file_result\"\n\t  cmds=$old_archive_cmds\n\telse\n\t  # the command line is too long to link in one step, link in parts\n\t  func_verbose \"using piecewise archive linking...\"\n\t  save_RANLIB=$RANLIB\n\t  RANLIB=:\n\t  objlist=\n\t  concat_cmds=\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  # Is there a better way of finding the last object in the list?\n\t  for obj in $save_oldobjs\n\t  do\n\t    last_oldobj=$obj\n\t  done\n\t  eval test_cmds=\\\"$old_archive_cmds\\\"\n\t  func_len \" $test_cmds\"\n\t  len0=$func_len_result\n\t  len=$len0\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_len \" $obj\"\n\t    func_arith $len + $func_len_result\n\t    len=$func_arith_result\n\t    func_append objlist \" $obj\"\n\t    if test \"$len\" -lt \"$max_cmd_len\"; then\n\t      :\n\t    else\n\t      # the above command should be used before it gets too long\n\t      oldobjs=$objlist\n\t      if test \"$obj\" = \"$last_oldobj\" ; then\n\t\tRANLIB=$save_RANLIB\n\t      fi\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\${concat_cmds}$old_archive_cmds\\\"\n\t      objlist=\n\t      len=$len0\n\t    fi\n\t  done\n\t  RANLIB=$save_RANLIB\n\t  oldobjs=$objlist\n\t  if test \"X$oldobjs\" = \"X\" ; then\n\t    eval cmds=\\\"\\$concat_cmds\\\"\n\t  else\n\t    eval cmds=\\\"\\$concat_cmds~\\$old_archive_cmds\\\"\n\t  fi\n\tfi\n      fi\n      func_execute_cmds \"$cmds\" 'exit $?'\n    done\n\n    test -n \"$generated\" && \\\n      func_show_eval \"${RM}r$generated\"\n\n    # Now create the libtool archive.\n    case $output in\n    *.la)\n      old_library=\n      test \"$build_old_libs\" = yes && old_library=\"$libname.$libext\"\n      func_verbose \"creating $output\"\n\n      # Preserve any variables that may affect compiler behavior\n      for var in $variables_saved_for_relink; do\n\tif eval test -z \\\"\\${$var+set}\\\"; then\n\t  relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\telif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t  relink_command=\"$var=; export $var; $relink_command\"\n\telse\n\t  func_quote_for_eval \"$var_value\"\n\t  relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\tfi\n      done\n      # Quote the link command for shipping.\n      relink_command=\"(cd `pwd`; $SHELL $progpath $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)\"\n      relink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      if test \"$hardcode_automatic\" = yes ; then\n\trelink_command=\n      fi\n\n      # Only create the output if not a dry run.\n      $opt_dry_run || {\n\tfor installed in no yes; do\n\t  if test \"$installed\" = yes; then\n\t    if test -z \"$install_libdir\"; then\n\t      break\n\t    fi\n\t    output=\"$output_objdir/$outputname\"i\n\t    # Replace all uninstalled libtool libraries with the installed ones\n\t    newdependency_libs=\n\t    for deplib in $dependency_libs; do\n\t      case $deplib in\n\t      *.la)\n\t\tfunc_basename \"$deplib\"\n\t\tname=\"$func_basename_result\"\n\t\tfunc_resolve_sysroot \"$deplib\"\n\t\teval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $func_resolve_sysroot_result`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"\\`$deplib' is not a valid libtool archive\"\n\t\tfunc_append newdependency_libs \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      -L*)\n\t\tfunc_stripname -L '' \"$deplib\"\n\t\tfunc_replace_sysroot \"$func_stripname_result\"\n\t\tfunc_append newdependency_libs \" -L$func_replace_sysroot_result\"\n\t\t;;\n\t      -R*)\n\t\tfunc_stripname -R '' \"$deplib\"\n\t\tfunc_replace_sysroot \"$func_stripname_result\"\n\t\tfunc_append newdependency_libs \" -R$func_replace_sysroot_result\"\n\t\t;;\n\t      *) func_append newdependency_libs \" $deplib\" ;;\n\t      esac\n\t    done\n\t    dependency_libs=\"$newdependency_libs\"\n\t    newdlfiles=\n\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t      *.la)\n\t        func_basename \"$lib\"\n\t\tname=\"$func_basename_result\"\n\t\teval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"\\`$lib' is not a valid libtool archive\"\n\t\tfunc_append newdlfiles \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      *) func_append newdlfiles \" $lib\" ;;\n\t      esac\n\t    done\n\t    dlfiles=\"$newdlfiles\"\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t      *.la)\n\t\t# Only pass preopened files to the pseudo-archive (for\n\t\t# eventual linking with the app. that links it) if we\n\t\t# didn't already link the preopened objects directly into\n\t\t# the library:\n\t\tfunc_basename \"$lib\"\n\t\tname=\"$func_basename_result\"\n\t\teval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"\\`$lib' is not a valid libtool archive\"\n\t\tfunc_append newdlprefiles \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      esac\n\t    done\n\t    dlprefiles=\"$newdlprefiles\"\n\t  else\n\t    newdlfiles=\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=\"$lib\" ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      func_append newdlfiles \" $abs\"\n\t    done\n\t    dlfiles=\"$newdlfiles\"\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=\"$lib\" ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      func_append newdlprefiles \" $abs\"\n\t    done\n\t    dlprefiles=\"$newdlprefiles\"\n\t  fi\n\t  $RM $output\n\t  # place dlname in correct position for cygwin\n\t  # In fact, it would be nice if we could use this code for all target\n\t  # systems that can't hard-code library paths into their executables\n\t  # and that have no shared library path variable independent of PATH,\n\t  # but it turns out we can't easily determine that from inspecting\n\t  # libtool variables, so we have to hard-code the OSs to which it\n\t  # applies here; at the moment, that means platforms that use the PE\n\t  # object format with DLL files.  See the long comment at the top of\n\t  # tests/bindir.at for full details.\n\t  tdlname=$dlname\n\t  case $host,$output,$installed,$module,$dlname in\n\t    *cygwin*,*lai,yes,no,*.dll | *mingw*,*lai,yes,no,*.dll | *cegcc*,*lai,yes,no,*.dll)\n\t      # If a -bindir argument was supplied, place the dll there.\n\t      if test \"x$bindir\" != x ;\n\t      then\n\t\tfunc_relative_path \"$install_libdir\" \"$bindir\"\n\t\ttdlname=$func_relative_path_result$dlname\n\t      else\n\t\t# Otherwise fall back on heuristic.\n\t\ttdlname=../bin/$dlname\n\t      fi\n\t      ;;\n\t  esac\n\t  $ECHO > $output \"\\\n# $outputname - a libtool library file\n# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# The name that we can dlopen(3).\ndlname='$tdlname'\n\n# Names of this library.\nlibrary_names='$library_names'\n\n# The name of the static archive.\nold_library='$old_library'\n\n# Linker flags that can not go in dependency_libs.\ninherited_linker_flags='$new_inherited_linker_flags'\n\n# Libraries that this one depends upon.\ndependency_libs='$dependency_libs'\n\n# Names of additional weak libraries provided by this library\nweak_library_names='$weak_libs'\n\n# Version information for $libname.\ncurrent=$current\nage=$age\nrevision=$revision\n\n# Is this an already installed library?\ninstalled=$installed\n\n# Should we warn about portability when linking against -modules?\nshouldnotlink=$module\n\n# Files to dlopen/dlpreopen\ndlopen='$dlfiles'\ndlpreopen='$dlprefiles'\n\n# Directory that this library needs to be installed in:\nlibdir='$install_libdir'\"\n\t  if test \"$installed\" = no && test \"$need_relink\" = yes; then\n\t    $ECHO >> $output \"\\\nrelink_command=\\\"$relink_command\\\"\"\n\t  fi\n\tdone\n      }\n\n      # Do a symbolic link so that the libtool archive can be found in\n      # LD_LIBRARY_PATH before the program is installed.\n      func_show_eval '( cd \"$output_objdir\" && $RM \"$outputname\" && $LN_S \"../$outputname\" \"$outputname\" )' 'exit $?'\n      ;;\n    esac\n    exit $EXIT_SUCCESS\n}\n\n{ test \"$opt_mode\" = link || test \"$opt_mode\" = relink; } &&\n    func_mode_link ${1+\"$@\"}\n\n\n# func_mode_uninstall arg...\nfunc_mode_uninstall ()\n{\n    $opt_debug\n    RM=\"$nonopt\"\n    files=\n    rmforce=\n    exit_status=0\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=\"$magic\"\n\n    for arg\n    do\n      case $arg in\n      -f) func_append RM \" $arg\"; rmforce=yes ;;\n      -*) func_append RM \" $arg\" ;;\n      *) func_append files \" $arg\" ;;\n      esac\n    done\n\n    test -z \"$RM\" && \\\n      func_fatal_help \"you must specify an RM program\"\n\n    rmdirs=\n\n    for file in $files; do\n      func_dirname \"$file\" \"\" \".\"\n      dir=\"$func_dirname_result\"\n      if test \"X$dir\" = X.; then\n\todir=\"$objdir\"\n      else\n\todir=\"$dir/$objdir\"\n      fi\n      func_basename \"$file\"\n      name=\"$func_basename_result\"\n      test \"$opt_mode\" = uninstall && odir=\"$dir\"\n\n      # Remember odir for removal later, being careful to avoid duplicates\n      if test \"$opt_mode\" = clean; then\n\tcase \" $rmdirs \" in\n\t  *\" $odir \"*) ;;\n\t  *) func_append rmdirs \" $odir\" ;;\n\tesac\n      fi\n\n      # Don't error if the file doesn't exist and rm -f was used.\n      if { test -L \"$file\"; } >/dev/null 2>&1 ||\n\t { test -h \"$file\"; } >/dev/null 2>&1 ||\n\t test -f \"$file\"; then\n\t:\n      elif test -d \"$file\"; then\n\texit_status=1\n\tcontinue\n      elif test \"$rmforce\" = yes; then\n\tcontinue\n      fi\n\n      rmfiles=\"$file\"\n\n      case $name in\n      *.la)\n\t# Possibly a libtool archive, so verify it.\n\tif func_lalib_p \"$file\"; then\n\t  func_source $dir/$name\n\n\t  # Delete the libtool libraries and symlinks.\n\t  for n in $library_names; do\n\t    func_append rmfiles \" $odir/$n\"\n\t  done\n\t  test -n \"$old_library\" && func_append rmfiles \" $odir/$old_library\"\n\n\t  case \"$opt_mode\" in\n\t  clean)\n\t    case \" $library_names \" in\n\t    *\" $dlname \"*) ;;\n\t    *) test -n \"$dlname\" && func_append rmfiles \" $odir/$dlname\" ;;\n\t    esac\n\t    test -n \"$libdir\" && func_append rmfiles \" $odir/$name $odir/${name}i\"\n\t    ;;\n\t  uninstall)\n\t    if test -n \"$library_names\"; then\n\t      # Do each command in the postuninstall commands.\n\t      func_execute_cmds \"$postuninstall_cmds\" 'test \"$rmforce\" = yes || exit_status=1'\n\t    fi\n\n\t    if test -n \"$old_library\"; then\n\t      # Do each command in the old_postuninstall commands.\n\t      func_execute_cmds \"$old_postuninstall_cmds\" 'test \"$rmforce\" = yes || exit_status=1'\n\t    fi\n\t    # FIXME: should reinstall the best remaining shared library.\n\t    ;;\n\t  esac\n\tfi\n\t;;\n\n      *.lo)\n\t# Possibly a libtool object, so verify it.\n\tif func_lalib_p \"$file\"; then\n\n\t  # Read the .lo file\n\t  func_source $dir/$name\n\n\t  # Add PIC object to the list of files to remove.\n\t  if test -n \"$pic_object\" &&\n\t     test \"$pic_object\" != none; then\n\t    func_append rmfiles \" $dir/$pic_object\"\n\t  fi\n\n\t  # Add non-PIC object to the list of files to remove.\n\t  if test -n \"$non_pic_object\" &&\n\t     test \"$non_pic_object\" != none; then\n\t    func_append rmfiles \" $dir/$non_pic_object\"\n\t  fi\n\tfi\n\t;;\n\n      *)\n\tif test \"$opt_mode\" = clean ; then\n\t  noexename=$name\n\t  case $file in\n\t  *.exe)\n\t    func_stripname '' '.exe' \"$file\"\n\t    file=$func_stripname_result\n\t    func_stripname '' '.exe' \"$name\"\n\t    noexename=$func_stripname_result\n\t    # $file with .exe has already been added to rmfiles,\n\t    # add $file without .exe\n\t    func_append rmfiles \" $file\"\n\t    ;;\n\t  esac\n\t  # Do a test to see if this is a libtool program.\n\t  if func_ltwrapper_p \"$file\"; then\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      relink_command=\n\t      func_source $func_ltwrapper_scriptname_result\n\t      func_append rmfiles \" $func_ltwrapper_scriptname_result\"\n\t    else\n\t      relink_command=\n\t      func_source $dir/$noexename\n\t    fi\n\n\t    # note $name still contains .exe if it was in $file originally\n\t    # as does the version of $file that was added into $rmfiles\n\t    func_append rmfiles \" $odir/$name $odir/${name}S.${objext}\"\n\t    if test \"$fast_install\" = yes && test -n \"$relink_command\"; then\n\t      func_append rmfiles \" $odir/lt-$name\"\n\t    fi\n\t    if test \"X$noexename\" != \"X$name\" ; then\n\t      func_append rmfiles \" $odir/lt-${noexename}.c\"\n\t    fi\n\t  fi\n\tfi\n\t;;\n      esac\n      func_show_eval \"$RM $rmfiles\" 'exit_status=1'\n    done\n\n    # Try to remove the ${objdir}s in the directories where we deleted files\n    for dir in $rmdirs; do\n      if test -d \"$dir\"; then\n\tfunc_show_eval \"rmdir $dir >/dev/null 2>&1\"\n      fi\n    done\n\n    exit $exit_status\n}\n\n{ test \"$opt_mode\" = uninstall || test \"$opt_mode\" = clean; } &&\n    func_mode_uninstall ${1+\"$@\"}\n\ntest -z \"$opt_mode\" && {\n  help=\"$generic_help\"\n  func_fatal_help \"you must specify a MODE\"\n}\n\ntest -z \"$exec_cmd\" && \\\n  func_fatal_help \"invalid operation mode \\`$opt_mode'\"\n\nif test -n \"$exec_cmd\"; then\n  eval exec \"$exec_cmd\"\n  exit $EXIT_FAILURE\nfi\n\nexit $exit_status\n\n\n# The TAGs below are defined such that we never get into a situation\n# in which we disable both kinds of libraries.  Given conflicting\n# choices, we go for a static library, that is the most portable,\n# since we can't tell whether shared libraries were disabled because\n# the user asked for that or because the platform doesn't support\n# them.  This is particularly important on AIX, because we don't\n# support having both static and shared libraries enabled at the same\n# time on that platform, so we default to a shared-only configuration.\n# If a disable-shared tag is given, we'll fallback to a static-only\n# configuration.  But we'll never go from static-only to shared-only.\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-shared\nbuild_libtool_libs=no\nbuild_old_libs=yes\n# ### END LIBTOOL TAG CONFIG: disable-shared\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-static\nbuild_old_libs=`case $build_libtool_libs in yes) echo no;; *) echo yes;; esac`\n# ### END LIBTOOL TAG CONFIG: disable-static\n\n# Local Variables:\n# mode:shell-script\n# sh-indentation:2\n# End:\n# vi:sw=2\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/src/cairo-gl-dispatch.c": "/* cairo - a vector graphics library with display and print output\n *\n * Copyright \u00a9 2010 Linaro Limited\n *\n * This library is free software; you can redistribute it and/or\n * modify it either under the terms of the GNU Lesser General Public\n * License version 2.1 as published by the Free Software Foundation\n * (the \"LGPL\") or, at your option, under the terms of the Mozilla\n * Public License Version 1.1 (the \"MPL\"). If you do not alter this\n * notice, a recipient may use your version of this file under either\n * the MPL or the LGPL.\n *\n * You should have received a copy of the LGPL along with this library\n * in the file COPYING-LGPL-2.1; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA 02110-1335, USA\n * You should have received a copy of the MPL along with this library\n * in the file COPYING-MPL-1.1\n *\n * The contents of this file are subject to the Mozilla Public License\n * Version 1.1 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n * http://www.mozilla.org/MPL/\n *\n * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY\n * OF ANY KIND, either express or implied. See the LGPL or the MPL for\n * the specific language governing rights and limitations.\n *\n * Contributor(s):\n *      Alexandros Frantzis <alexandros.frantzis@linaro.org>\n */\n\n#include \"cairoint.h\"\n#include \"cairo-gl-private.h\"\n#include \"cairo-gl-dispatch-private.h\"\n#if CAIRO_HAS_DLSYM\n#include <dlfcn.h>\n#endif\n\n#if CAIRO_HAS_DLSYM\nstatic void *\n_cairo_gl_dispatch_open_lib (void)\n{\n    return dlopen (NULL, RTLD_LAZY);\n}\n\nstatic void\n_cairo_gl_dispatch_close_lib (void *handle)\n{\n    dlclose (handle);\n}\n\nstatic cairo_gl_generic_func_t\n_cairo_gl_dispatch_get_proc_addr (void *handle, const char *name)\n{\n    return (cairo_gl_generic_func_t) dlsym (handle, name);\n}\n#else\nstatic void *\n_cairo_gl_dispatch_open_lib (void)\n{\n    return NULL;\n}\n\nstatic void\n_cairo_gl_dispatch_close_lib (void *handle)\n{\n    return;\n}\n\nstatic cairo_gl_generic_func_t\n_cairo_gl_dispatch_get_proc_addr (void *handle, const char *name)\n{\n    return NULL;\n}\n#endif /* CAIRO_HAS_DLSYM */\n\n\nstatic void\n_cairo_gl_dispatch_init_entries (cairo_gl_dispatch_t *dispatch,\n\t\t\t\t cairo_gl_get_proc_addr_func_t get_proc_addr,\n\t\t\t\t cairo_gl_dispatch_entry_t *entries,\n\t\t\t\t cairo_gl_dispatch_name_t dispatch_name)\n{\n    cairo_gl_dispatch_entry_t *entry = entries;\n    void *handle = _cairo_gl_dispatch_open_lib ();\n\n    while (entry->name[CAIRO_GL_DISPATCH_NAME_CORE] != NULL) {\n\tvoid *dispatch_ptr = &((char *) dispatch)[entry->offset];\n\tconst char *name = entry->name[dispatch_name];\n\n\t/*\n\t * In strictly conforming EGL implementations, eglGetProcAddress() can\n\t * be used only to get extension functions, but some of the functions\n\t * we want belong to core GL(ES). If the *GetProcAddress function\n\t * provided by the context fails, try to get the address of the wanted\n\t * GL function using standard system facilities (eg dlsym() in *nix\n\t * systems).\n\t */\n\tcairo_gl_generic_func_t func = get_proc_addr (name);\n\tif (func == NULL)\n\t    func = _cairo_gl_dispatch_get_proc_addr (handle, name);\n\n\t*((cairo_gl_generic_func_t *) dispatch_ptr) = func;\n\n\t++entry;\n    }\n\n    _cairo_gl_dispatch_close_lib (handle);\n}\n\nstatic cairo_status_t\n_cairo_gl_dispatch_init_buffers (cairo_gl_dispatch_t *dispatch,\n\t\t\t\t cairo_gl_get_proc_addr_func_t get_proc_addr,\n\t\t\t\t int gl_version, cairo_gl_flavor_t gl_flavor)\n{\n    cairo_gl_dispatch_name_t dispatch_name;\n\n    if (gl_flavor == CAIRO_GL_FLAVOR_DESKTOP)\n    {\n\tif (gl_version >= CAIRO_GL_VERSION_ENCODE (1, 5))\n\t    dispatch_name = CAIRO_GL_DISPATCH_NAME_CORE;\n\telse if (_cairo_gl_has_extension (\"GL_ARB_vertex_buffer_object\"))\n\t    dispatch_name = CAIRO_GL_DISPATCH_NAME_EXT;\n\telse\n\t    return CAIRO_STATUS_DEVICE_ERROR;\n    }\n    else if (gl_flavor == CAIRO_GL_FLAVOR_ES &&\n\t     gl_version >= CAIRO_GL_VERSION_ENCODE (2, 0))\n    {\n\tdispatch_name = CAIRO_GL_DISPATCH_NAME_ES;\n    }\n    else\n    {\n\treturn CAIRO_STATUS_DEVICE_ERROR;\n    }\n\n    _cairo_gl_dispatch_init_entries (dispatch, get_proc_addr,\n\t\t\t\t     dispatch_buffers_entries, dispatch_name);\n\n    return CAIRO_STATUS_SUCCESS;\n}\n\nstatic cairo_status_t\n_cairo_gl_dispatch_init_shaders (cairo_gl_dispatch_t *dispatch,\n\t\t\t\t cairo_gl_get_proc_addr_func_t get_proc_addr,\n\t\t\t\t int gl_version, cairo_gl_flavor_t gl_flavor)\n{\n    cairo_gl_dispatch_name_t dispatch_name;\n\n    if (gl_flavor == CAIRO_GL_FLAVOR_DESKTOP)\n    {\n\tif (gl_version >= CAIRO_GL_VERSION_ENCODE (2, 0))\n\t    dispatch_name = CAIRO_GL_DISPATCH_NAME_CORE;\n\telse if (_cairo_gl_has_extension (\"GL_ARB_shader_objects\"))\n\t    dispatch_name = CAIRO_GL_DISPATCH_NAME_EXT;\n\telse\n\t    return CAIRO_STATUS_DEVICE_ERROR;\n    }\n    else if (gl_flavor == CAIRO_GL_FLAVOR_ES &&\n\t     gl_version >= CAIRO_GL_VERSION_ENCODE (2, 0))\n    {\n\tdispatch_name = CAIRO_GL_DISPATCH_NAME_ES;\n    }\n    else\n    {\n\treturn CAIRO_STATUS_DEVICE_ERROR;\n    }\n\n    _cairo_gl_dispatch_init_entries (dispatch, get_proc_addr,\n\t\t\t\t     dispatch_shaders_entries, dispatch_name);\n\n    return CAIRO_STATUS_SUCCESS;\n}\n\nstatic cairo_status_t\n_cairo_gl_dispatch_init_fbo (cairo_gl_dispatch_t *dispatch,\n\t\t\t     cairo_gl_get_proc_addr_func_t get_proc_addr,\n\t\t\t     int gl_version, cairo_gl_flavor_t gl_flavor)\n{\n    cairo_gl_dispatch_name_t dispatch_name;\n\n    if (gl_flavor == CAIRO_GL_FLAVOR_DESKTOP)\n    {\n\tif (gl_version >= CAIRO_GL_VERSION_ENCODE (3, 0) ||\n\t    _cairo_gl_has_extension (\"GL_ARB_framebuffer_object\"))\n\t    dispatch_name = CAIRO_GL_DISPATCH_NAME_CORE;\n\telse if (_cairo_gl_has_extension (\"GL_EXT_framebuffer_object\"))\n\t    dispatch_name = CAIRO_GL_DISPATCH_NAME_EXT;\n\telse\n\t    return CAIRO_STATUS_DEVICE_ERROR;\n    }\n    else if (gl_flavor == CAIRO_GL_FLAVOR_ES &&\n\t     gl_version >= CAIRO_GL_VERSION_ENCODE (2, 0))\n    {\n\tdispatch_name = CAIRO_GL_DISPATCH_NAME_ES;\n    }\n    else\n    {\n\treturn CAIRO_STATUS_DEVICE_ERROR;\n    }\n\n    _cairo_gl_dispatch_init_entries (dispatch, get_proc_addr,\n\t\t\t\t     dispatch_fbo_entries, dispatch_name);\n\n    return CAIRO_STATUS_SUCCESS;\n}\n\nstatic cairo_status_t\n_cairo_gl_dispatch_init_multisampling (cairo_gl_dispatch_t *dispatch,\n\t\t\t\t       cairo_gl_get_proc_addr_func_t get_proc_addr,\n\t\t\t\t       int gl_version,\n\t\t\t\t       cairo_gl_flavor_t gl_flavor)\n{\n    /* For the multisampling table, there are two GLES versions of the\n     * extension, so we put one in the EXT slot and one in the real ES slot.*/\n    cairo_gl_dispatch_name_t dispatch_name = CAIRO_GL_DISPATCH_NAME_CORE;\n    if (gl_flavor == CAIRO_GL_FLAVOR_ES) {\n\tif (_cairo_gl_has_extension (\"GL_EXT_multisampled_render_to_texture\"))\n\t    dispatch_name = CAIRO_GL_DISPATCH_NAME_EXT;\n\telse if (_cairo_gl_has_extension (\"GL_IMG_multisampled_render_to_texture\"))\n\t    dispatch_name = CAIRO_GL_DISPATCH_NAME_ES;\n    }\n    _cairo_gl_dispatch_init_entries (dispatch, get_proc_addr,\n\t\t\t\t     dispatch_multisampling_entries,\n\t\t\t\t     dispatch_name);\n    return CAIRO_STATUS_SUCCESS;\n}\n\ncairo_status_t\n_cairo_gl_dispatch_init (cairo_gl_dispatch_t *dispatch,\n\t\t\t cairo_gl_get_proc_addr_func_t get_proc_addr)\n{\n    cairo_status_t status;\n    int gl_version;\n    cairo_gl_flavor_t gl_flavor;\n\n    gl_version = _cairo_gl_get_version ();\n    gl_flavor = _cairo_gl_get_flavor ();\n\n    status = _cairo_gl_dispatch_init_buffers (dispatch, get_proc_addr,\n\t\t\t\t\t      gl_version, gl_flavor);\n    if (status != CAIRO_STATUS_SUCCESS)\n\treturn status;\n\n    status = _cairo_gl_dispatch_init_shaders (dispatch, get_proc_addr,\n\t\t\t\t\t      gl_version, gl_flavor);\n    if (status != CAIRO_STATUS_SUCCESS)\n\treturn status;\n\n    status = _cairo_gl_dispatch_init_fbo (dispatch, get_proc_addr,\n\t\t\t\t\t  gl_version, gl_flavor);\n    if (status != CAIRO_STATUS_SUCCESS)\n\treturn status;\n\n    status = _cairo_gl_dispatch_init_multisampling (dispatch, get_proc_addr,\n\t\t\t\t\t\t    gl_version, gl_flavor);\n    if (status != CAIRO_STATUS_SUCCESS)\n\treturn status;\n\n    return CAIRO_STATUS_SUCCESS;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/src/drm/cairo-drm-gallium-surface.c": "/* Cairo - a vector graphics library with display and print output\n *\n * Copyright \u00a9 2009 Chris Wilson\n * Copyright \u00a9 2009 Eric Anholt\n *\n * This library is free software; you can redistribute it and/or\n * modify it either under the terms of the GNU Lesser General Public\n * License version 2.1 as published by the Free Software Foundation\n * (the \"LGPL\") or, at your option, under the terms of the Mozilla\n * Public License Version 1.1 (the \"MPL\"). If you do not alter this\n * notice, a recipient may use your version of this file under either\n * the MPL or the LGPL.\n *\n * You should have received a copy of the LGPL along with this library\n * in the file COPYING-LGPL-2.1; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA 02110-1335, USA\n * You should have received a copy of the MPL along with this library\n * in the file COPYING-MPL-1.1\n *\n * The contents of this file are subject to the Mozilla Public License\n * Version 1.1 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n * http://www.mozilla.org/MPL/\n *\n * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY\n * OF ANY KIND, either express or implied. See the LGPL or the MPL for\n * the specific language governing rights and limitations.\n *\n * The Original Code is the cairo graphics library.\n *\n * The Initial Developer of the Original Code is Chris Wilson.\n */\n\n#include \"cairoint.h\"\n\n#include \"cairo-drm-private.h\"\n#include \"cairo-default-context-private.h\"\n#include \"cairo-error-private.h\"\n\n#include <dlfcn.h>\n\n#include <state_tracker/drm_api.h>\n#include <pipe/p_format.h>\n#include <pipe/p_screen.h>\n#include <pipe/p_context.h>\n#include <pipe/p_state.h>\n\n#include <util/u_inlines.h>\n\ntypedef struct _gallium_surface gallium_surface_t;\ntypedef struct _gallium_device gallium_device_t;\n\nstruct _gallium_device {\n    cairo_drm_device_t drm;\n\n    void *dlhandle;\n    struct drm_api *api;\n\n    struct pipe_screen *screen;\n    struct pipe_context *pipe;\n\n    int max_size;\n};\n\nstruct _gallium_surface {\n    cairo_drm_surface_t drm;\n\n    enum pipe_format pipe_format;\n\n    struct pipe_resource *texture;\n    struct pipe_transfer *map_transfer;\n\n    cairo_surface_t *fallback;\n};\n\nstatic cairo_surface_t *\ngallium_surface_create_internal (gallium_device_t *device,\n\t\t\t\t enum pipe_format format,\n\t\t\t\t int width, int height);\n\nstatic inline gallium_device_t *\ngallium_device (gallium_surface_t *surface)\n{\n    return (gallium_device_t *) surface->drm.base.device;\n}\n\nstatic cairo_format_t\n_cairo_format_from_pipe_format (enum pipe_format format)\n{\n    switch ((int) format) {\n    case PIPE_FORMAT_A8_UNORM:\n\treturn CAIRO_FORMAT_A8;\n    case PIPE_FORMAT_A8R8G8B8_UNORM:\n\treturn CAIRO_FORMAT_ARGB32;\n    default:\n\treturn CAIRO_FORMAT_INVALID;\n    }\n}\n\nstatic enum pipe_format\npipe_format_from_format (cairo_format_t format)\n{\n    switch ((int) format) {\n    case CAIRO_FORMAT_A8:\n\treturn PIPE_FORMAT_A8_UNORM;\n    case CAIRO_FORMAT_ARGB32:\n\treturn PIPE_FORMAT_A8R8G8B8_UNORM;\n    default:\n\treturn (enum pipe_format) -1;\n    }\n}\n\nstatic enum pipe_format\npipe_format_from_content (cairo_content_t content)\n{\n    if (content == CAIRO_CONTENT_ALPHA)\n\treturn PIPE_FORMAT_A8_UNORM;\n    else\n\treturn PIPE_FORMAT_A8R8G8B8_UNORM;\n}\n\nstatic cairo_bool_t\nformat_is_supported_destination (gallium_device_t *device,\n\t                         enum pipe_format format)\n{\n    if (format == (enum pipe_format) -1)\n\treturn FALSE;\n\n    return device->screen->is_format_supported (device->screen,\n\t\t\t\t\t        format,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tPIPE_BIND_RENDER_TARGET,\n\t\t\t\t\t\t0);\n}\n\n#if 0\nstatic cairo_bool_t\nformat_is_supported_source (gallium_device_t *device,\n\t                    enum pipe_format format)\n{\n    return device->screen->is_format_supported (device->screen,\n\t\t\t\t\t        format,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tPIPE_BIND_SAMPLER_VIEW,\n\t\t\t\t\t\t0);\n}\n#endif\n\nstatic cairo_surface_t *\ngallium_surface_create_similar (void\t\t\t*abstract_src,\n\t\t\t\tcairo_content_t\t\t content,\n\t\t\t\tint\t\t\t width,\n\t\t\t\tint\t\t\t height)\n{\n    gallium_surface_t *other = abstract_src;\n    gallium_device_t *device = gallium_device (other);\n    enum pipe_format pipe_format;\n    cairo_surface_t *surface = NULL;\n    cairo_status_t status;\n\n    status = cairo_device_acquire (&device->drm.base);\n    if (unlikely (status))\n\treturn _cairo_surface_create_in_error (status);\n\n    if (MAX (width, height) > device->max_size)\n\tgoto RELEASE;\n\n    if (content == other->drm.base.content)\n\tpipe_format = other->pipe_format;\n    else\n\tpipe_format = pipe_format_from_content (content);\n\n    if (! format_is_supported_destination (device, pipe_format))\n\tgoto RELEASE;\n\n    surface = gallium_surface_create_internal (device,\n\t\t\t\t\t       pipe_format,\n\t\t\t\t\t       width, height);\n\nRELEASE:\n    cairo_device_release (&device->drm.base);\n\n    return surface;\n}\n\nstatic cairo_status_t\ngallium_surface_finish (void *abstract_surface)\n{\n    gallium_surface_t *surface = abstract_surface;\n    gallium_device_t *device = gallium_device (surface);\n    cairo_status_t status;\n\n    status = cairo_device_acquire (&device->drm.base);\n    if (likely (status == CAIRO_STATUS_SUCCESS)) {\n\tpipe_resource_reference (&surface->texture, NULL);\n\tcairo_device_release (&device->drm.base);\n    }\n\n    return _cairo_drm_surface_finish (&surface->drm);\n}\n\nstatic cairo_surface_t *\ngallium_surface_map_to_image (gallium_surface_t *surface)\n{\n    gallium_device_t *device = gallium_device (surface);\n    cairo_status_t status;\n    void *ptr = NULL;\n\n    status = cairo_device_acquire (&device->drm.base);\n    if (unlikely (status))\n\treturn _cairo_surface_create_in_error (status);\n\n    surface->map_transfer =\n\t  pipe_get_transfer (device->pipe,\n\t\t\t     surface->texture, 0, 0, 0,\n\t\t\t     PIPE_TRANSFER_MAP_DIRECTLY |\n\t\t\t     PIPE_TRANSFER_READ_WRITE,\n\t\t\t     0, 0,\n\t\t\t     surface->drm.width,\n\t\t\t     surface->drm.height);\n    if (likely (surface->map_transfer != NULL))\n\tptr = device->pipe->transfer_map (device->pipe, surface->map_transfer);\n\n    cairo_device_release (&device->drm.base);\n\n    if (unlikely (ptr == NULL)) {\n\tif (surface->map_transfer != NULL) {\n\t    device->pipe->transfer_destroy (device->pipe,\n\t\t\t\t\t    surface->map_transfer);\n\t    surface->map_transfer = NULL;\n\t}\n\treturn _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));\n    }\n\n    return cairo_image_surface_create_for_data (ptr,\n\t\t\t\t\t\tsurface->drm.format,\n\t\t\t\t\t\tsurface->drm.width,\n\t\t\t\t\t\tsurface->drm.height,\n\t\t\t\t\t\tsurface->map_transfer->stride);\n}\n\nstatic cairo_status_t\ngallium_surface_acquire_source_image (void *abstract_surface,\n\t\t\t\t      cairo_image_surface_t **image_out,\n\t\t\t\t      void **image_extra)\n{\n    gallium_surface_t *surface = abstract_surface;\n    gallium_device_t *device = gallium_device (surface);\n    cairo_format_t format;\n    cairo_surface_t *image;\n    cairo_status_t status;\n    struct pipe_transfer *transfer;\n    void *ptr;\n\n    if (surface->fallback != NULL) {\n\t*image_out = (cairo_image_surface_t *)\n\t    cairo_surface_reference (surface->fallback);\n\t*image_extra = NULL;\n\treturn CAIRO_STATUS_SUCCESS;\n    }\n\n    if (unlikely (surface->drm.width == 0 || surface->drm.height == 0)) {\n\timage = cairo_image_surface_create (surface->drm.format, 0, 0);\n\tif (unlikely (image->status))\n\t    return image->status;\n\n\t*image_out = (cairo_image_surface_t *) image;\n\t*image_extra = NULL;\n\treturn CAIRO_STATUS_SUCCESS;\n    }\n\n    format = _cairo_format_from_pipe_format (surface->pipe_format);\n    if (format == CAIRO_FORMAT_INVALID)\n\treturn CAIRO_INT_STATUS_UNSUPPORTED;\n\n    status = cairo_device_acquire (&device->drm.base);\n    if (unlikely (status))\n\treturn status;\n\n    transfer = pipe_get_transfer (device->pipe,\n\t\t\t\t  surface->texture, 0, 0, 0,\n\t\t\t\t  PIPE_TRANSFER_READ,\n\t\t\t\t  0, 0,\n\t\t\t\t  surface->drm.width,\n\t\t\t\t  surface->drm.height);\n    ptr = device->pipe->transfer_map (device->pipe, transfer);\n    cairo_device_release (&device->drm.base);\n\n    image = cairo_image_surface_create_for_data (ptr, format,\n\t\t\t\t\t\t surface->drm.width,\n\t\t\t\t\t\t surface->drm.height,\n\t\t\t\t\t\t surface->drm.stride);\n    if (unlikely (image->status))\n\treturn image->status;\n\n    *image_out = (cairo_image_surface_t *) image;\n    *image_extra = transfer;\n    return CAIRO_STATUS_SUCCESS;\n}\n\nstatic void\ngallium_surface_release_source_image (void *abstract_surface,\n\t\t\t\t      cairo_image_surface_t *image,\n\t\t\t\t      void *image_extra)\n{\n    cairo_surface_destroy (&image->base);\n\n    if (image_extra != NULL) {\n\tgallium_device_t *device = gallium_device (abstract_surface);\n\n\tdevice->pipe->transfer_unmap (device->pipe, image_extra);\n\tdevice->pipe->transfer_destroy (device->pipe, image_extra);\n    }\n}\n\nstatic cairo_status_t\ngallium_surface_flush (void *abstract_surface,\n\t\t       unsigned flags)\n{\n    gallium_surface_t *surface = abstract_surface;\n    gallium_device_t *device = gallium_device (surface);\n    cairo_status_t status;\n\n    if (flags)\n\treturn CAIRO_STATUS_SUCCESS;\n\n    if (surface->fallback == NULL) {\n\tdevice->pipe->flush (device->pipe,\n\t\t\t     PIPE_FLUSH_RENDER_CACHE,\n\t\t\t     NULL);\n\treturn CAIRO_STATUS_SUCCESS;\n    }\n\n    /* kill any outstanding maps */\n    cairo_surface_finish (surface->fallback);\n\n    status = cairo_device_acquire (&device->drm.base);\n    if (likely (status == CAIRO_STATUS_SUCCESS)) {\n\tdevice->pipe->transfer_unmap (device->pipe,\n\t\t\t\t      surface->map_transfer);\n\tdevice->pipe->transfer_destroy (device->pipe,\n\t\t\t\t\tsurface->map_transfer);\n\tsurface->map_transfer = NULL;\n\tcairo_device_release (&device->drm.base);\n    }\n\n    status = cairo_surface_status (surface->fallback);\n    cairo_surface_destroy (surface->fallback);\n    surface->fallback = NULL;\n\n    return status;\n}\n\nstatic cairo_int_status_t\ngallium_surface_paint (void\t\t\t*abstract_surface,\n\t\t\t  cairo_operator_t\t op,\n\t\t\t  const cairo_pattern_t\t*source,\n\t\t\t  cairo_clip_t\t\t*clip)\n{\n    gallium_surface_t *surface = abstract_surface;\n\n    if (surface->fallback == NULL) {\n\t/* XXX insert magic */\n\tsurface->fallback = gallium_surface_map_to_image (surface);\n    }\n\n    return _cairo_surface_paint (surface->fallback, op, source, clip);\n}\n\nstatic cairo_int_status_t\ngallium_surface_mask (void\t\t\t*abstract_surface,\n\t\t\t cairo_operator_t\t op,\n\t\t\t const cairo_pattern_t\t*source,\n\t\t\t const cairo_pattern_t\t*mask,\n\t\t\t cairo_clip_t\t\t*clip)\n{\n    gallium_surface_t *surface = abstract_surface;\n\n    if (surface->fallback == NULL) {\n\t/* XXX insert magic */\n\tsurface->fallback = gallium_surface_map_to_image (surface);\n    }\n\n    return _cairo_surface_mask (surface->fallback,\n\t\t\t\top, source, mask,\n\t\t\t\tclip);\n}\n\nstatic cairo_int_status_t\ngallium_surface_stroke (void\t\t\t\t*abstract_surface,\n\t\t\t   cairo_operator_t\t\t op,\n\t\t\t   const cairo_pattern_t\t*source,\n\t\t\t   cairo_path_fixed_t\t\t*path,\n\t\t\t   const cairo_stroke_style_t\t*style,\n\t\t\t   const cairo_matrix_t\t\t*ctm,\n\t\t\t   const cairo_matrix_t\t\t*ctm_inverse,\n\t\t\t   double\t\t\t tolerance,\n\t\t\t   cairo_antialias_t\t\t antialias,\n\t\t\t   cairo_clip_t\t\t\t*clip)\n{\n    gallium_surface_t *surface = abstract_surface;\n\n    if (surface->fallback == NULL) {\n\t/* XXX insert magic */\n\tsurface->fallback = gallium_surface_map_to_image (surface);\n    }\n\n    return _cairo_surface_stroke (surface->fallback,\n\t\t\t\t  op, source,\n\t\t\t\t  path, style,\n\t\t\t\t  ctm, ctm_inverse,\n\t\t\t\t  tolerance, antialias,\n\t\t\t\t  clip);\n}\n\nstatic cairo_int_status_t\ngallium_surface_fill (void\t\t\t*abstract_surface,\n\t\t\t cairo_operator_t\t op,\n\t\t\t const cairo_pattern_t\t*source,\n\t\t\t cairo_path_fixed_t\t*path,\n\t\t\t cairo_fill_rule_t\t fill_rule,\n\t\t\t double\t\t\t tolerance,\n\t\t\t cairo_antialias_t\t antialias,\n\t\t\t cairo_clip_t\t\t*clip)\n{\n    gallium_surface_t *surface = abstract_surface;\n\n    if (surface->fallback == NULL) {\n\t/* XXX insert magic */\n\tsurface->fallback = gallium_surface_map_to_image (surface);\n    }\n\n    return _cairo_surface_fill (surface->fallback,\n\t\t\t\top, source,\n\t\t\t\tpath, fill_rule,\n\t\t\t\ttolerance, antialias,\n\t\t\t\tclip);\n}\n\nstatic cairo_int_status_t\ngallium_surface_glyphs (void\t\t\t\t*abstract_surface,\n\t\t\t   cairo_operator_t\t\t op,\n\t\t\t   const cairo_pattern_t\t*source,\n\t\t\t   cairo_glyph_t\t\t*glyphs,\n\t\t\t   int\t\t\t\t num_glyphs,\n\t\t\t   cairo_scaled_font_t\t\t*scaled_font,\n\t\t\t   cairo_clip_t\t\t\t*clip,\n\t\t\t   int *num_remaining)\n{\n    gallium_surface_t *surface = abstract_surface;\n\n    *num_remaining = 0;\n\n    if (surface->fallback == NULL) {\n\t/* XXX insert magic */\n\tsurface->fallback = gallium_surface_map_to_image (surface);\n    }\n\n    return _cairo_surface_show_text_glyphs (surface->fallback,\n\t\t\t\t\t    op, source,\n\t\t\t\t\t    NULL, 0,\n\t\t\t\t\t    glyphs, num_glyphs,\n\t\t\t\t\t    NULL, 0, 0,\n\t\t\t\t\t    scaled_font,\n\t\t\t\t\t    clip);\n}\n\nstatic const cairo_surface_backend_t gallium_surface_backend = {\n    CAIRO_SURFACE_TYPE_DRM,\n    _cairo_default_context_create,\n\n    gallium_surface_create_similar,\n    gallium_surface_finish,\n\n    NULL,\n    gallium_surface_acquire_source_image,\n    gallium_surface_release_source_image,\n\n    NULL, //gallium_surface_acquire_dest_image,\n    NULL, //gallium_surface_release_dest_image,\n    NULL, //gallium_surface_clone_similar,\n    NULL, //gallium_surface_composite,\n    NULL, //gallium_surface_fill_rectangles,\n    NULL, //gallium_surface_composite_trapezoids,\n    NULL, //gallium_surface_create_span_renderer,\n    NULL, //gallium_surface_check_span_renderer,\n    NULL, /* copy_page */\n    NULL, /* show_page */\n    _cairo_drm_surface_get_extents,\n    NULL, /* old_show_glyphs */\n    _cairo_drm_surface_get_font_options,\n    gallium_surface_flush,\n    NULL, /* mark_dirty_rectangle */\n    NULL, //gallium_surface_scaled_font_fini,\n    NULL, //gallium_surface_scaled_glyph_fini,\n\n    gallium_surface_paint,\n    gallium_surface_mask,\n    gallium_surface_stroke,\n    gallium_surface_fill,\n    gallium_surface_glyphs,\n\n    NULL, /* snapshot */\n\n    NULL, /* is_similar */\n\n    NULL, /* reset */\n};\n\nstatic int\ngallium_format_stride_for_width (enum pipe_format format, int width)\n{\n    int stride;\n\n    stride = 1024; /* XXX fugly */\n    while (stride < width)\n\tstride *= 2;\n\n    if (format == PIPE_FORMAT_A8R8G8B8_UNORM)\n\tstride *= 4;\n\n    return stride;\n}\n\nstatic cairo_drm_bo_t *\n_gallium_fake_bo_create (uint32_t size, uint32_t name)\n{\n    cairo_drm_bo_t *bo;\n\n    /* XXX integrate with winsys handle */\n\n    bo = malloc (sizeof (cairo_drm_bo_t));\n\n    CAIRO_REFERENCE_COUNT_INIT (&bo->ref_count, 1);\n    bo->name = name;\n    bo->handle = 0;\n    bo->size = size;\n\n    return bo;\n}\n\nstatic void\n_gallium_fake_bo_release (void *dev, void *bo)\n{\n    free (bo);\n}\n\nstatic cairo_surface_t *\ngallium_surface_create_internal (gallium_device_t *device,\n\t\t\t\t enum pipe_format pipe_format,\n\t\t\t\t int width, int height)\n{\n    gallium_surface_t *surface;\n    struct pipe_resource template;\n    cairo_status_t status;\n    cairo_format_t format;\n    int stride, size;\n\n    surface = malloc (sizeof (gallium_surface_t));\n    if (unlikely (surface == NULL))\n\treturn _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));\n\n    format = _cairo_format_from_pipe_format (pipe_format);\n    _cairo_surface_init (&surface->drm.base,\n\t\t\t &gallium_surface_backend,\n\t\t\t &device->drm.base,\n\t\t\t _cairo_content_from_format (format));\n    _cairo_drm_surface_init (&surface->drm, format, width, height);\n\n    stride = gallium_format_stride_for_width (pipe_format, width);\n    size = stride * height;\n\n    surface->drm.stride = stride;\n    surface->drm.bo = _gallium_fake_bo_create (size, 0);\n\n    memset(&template, 0, sizeof(template));\n    template.target = PIPE_TEXTURE_2D;\n    template.format = pipe_format;\n    template.width0 = width;\n    template.height0 = height;\n    template.depth0 = 1;\n    template.last_level = 0;\n    template.bind = PIPE_BIND_RENDER_TARGET;\n    surface->texture = device->screen->resource_create (device->screen,\n\t\t\t\t\t\t\t&template);\n\n    if (unlikely (surface->texture == NULL)) {\n\tstatus = _cairo_drm_surface_finish (&surface->drm);\n\tfree (surface);\n\treturn _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));\n    }\n\n    surface->pipe_format = pipe_format;\n    surface->texture = NULL;\n\n    return &surface->drm.base;\n}\n\nstatic cairo_surface_t *\ngallium_surface_create (cairo_drm_device_t *base_dev,\n\t\t\tcairo_format_t format,\n\t\t\tint width, int height)\n{\n    gallium_device_t *device = (gallium_device_t *) base_dev;\n    cairo_surface_t *surface;\n    enum pipe_format pipe_format;\n    cairo_status_t status;\n\n    status = cairo_device_acquire (&device->drm.base);\n\n    if (MAX (width, height) > device->max_size) {\n\tsurface = _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_INVALID_SIZE));\n\tgoto RELEASE;\n    }\n\n    pipe_format = pipe_format_from_format (format);\n    if (! format_is_supported_destination (device, pipe_format)) {\n\tsurface = _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_INVALID_FORMAT));\n\tgoto RELEASE;\n    }\n\n    surface = gallium_surface_create_internal (device,\n\t\t\t\t\t       pipe_format,\n\t\t\t\t\t       width, height);\n\nRELEASE:\n    cairo_device_release (&device->drm.base);\n\n    return surface;\n}\n\n#if 0\nstatic cairo_surface_t *\ngallium_surface_create_for_name (cairo_drm_device_t *base_dev,\n\t\t\t\t unsigned int name,\n\t\t\t\t cairo_format_t format,\n\t\t\t\t int width, int height, int stride)\n{\n    gallium_device_t *device;\n    gallium_surface_t *surface;\n    cairo_status_t status;\n    cairo_content_t content;\n\n    surface = malloc (sizeof (gallium_surface_t));\n    if (unlikely (surface == NULL))\n\treturn _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));\n\n    switch (format) {\n    default:\n    case CAIRO_FORMAT_INVALID:\n    case CAIRO_FORMAT_A1:\n\treturn _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_INVALID_FORMAT));\n    case CAIRO_FORMAT_A8:\n\tsurface->pipe_format = PIPE_FORMAT_A8_UNORM;\n\tbreak;\n    case CAIRO_FORMAT_RGB24:\n    case CAIRO_FORMAT_ARGB32:\n\tsurface->pipe_format = PIPE_FORMAT_A8R8G8B8_UNORM;\n\tbreak;\n    }\n\n    status = cairo_device_acquire (&device->drm.base);\n\n    if (MAX (width, height) > device->max_size) {\n\tcairo_device_release (&device->drm.base);\n\tfree (surface);\n\treturn _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_INVALID_SIZE));\n    }\n\n    if (! format_is_supported_destination (device, surface->pipe_format)) {\n\tcairo_device_release (&device->drm.base);\n\tfree (surface);\n\treturn _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_INVALID_FORMAT));\n    }\n\n    content = _cairo_content_from_format (format);\n    _cairo_surface_init (&surface->drm.base,\n\t\t\t &gallium_surface_backend,\n\t\t\t content);\n    _cairo_drm_surface_init (&surface->drm, base_dev);\n\n    surface->drm.bo = _gallium_fake_bo_create (height * stride, name);\n\n    surface->drm.width  = width;\n    surface->drm.height = height;\n    surface->drm.stride = stride;\n\n#if 0\n    /* XXX screen->create_from_handle */\n    surface->buffer = device->api->buffer_from_handle (device->api,\n\t\t\t\t\t\t       device->screen,\n\t\t\t\t\t\t       \"cairo-gallium alien\",\n\t\t\t\t\t\t       name);\n    if (unlikely (surface->buffer == NULL)) {\n\tstatus = _cairo_drm_surface_finish (&surface->drm);\n\tcairo_device_release (&device->drm.base);\n\tfree (surface);\n\treturn _cairo_surface_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));\n    }\n#endif\n\n    surface->texture = NULL;\n\n    surface->fallback = NULL;\n\n    cairo_device_release (&device->drm.base);\n\n    return &surface->drm.base;\n}\n\nstatic cairo_int_status_t\ngallium_surface_flink (void *abstract_surface)\n{\n    gallium_surface_t *surface = abstract_surface;\n    gallium_device_t *device;\n    cairo_status_t status = CAIRO_STATUS_SUCCESS;\n\n    status = cairo_device_acquire (&device->drm.base);\n    if (! device->api->global_handle_from_buffer (device->api,\n\t\t\t\t\t\t  device->screen,\n\t\t\t\t\t\t  surface->buffer,\n\t\t\t\t\t\t  &surface->drm.bo->name))\n    {\n\tstatus = _cairo_error (CAIRO_STATUS_NO_MEMORY);\n    }\n    cairo_device_release (&device->drm.base);\n\n    return status;\n}\n#endif\n\nstatic void\ngallium_device_destroy (void *abstract_device)\n{\n    gallium_device_t *device = abstract_device;\n\n    device->pipe->destroy (device->pipe);\n    device->screen->destroy (device->screen);\n    device->api->destroy (device->api);\n\n    dlclose (device->dlhandle);\n    free (device);\n}\n\ncairo_drm_device_t *\n_cairo_drm_gallium_device_create (int fd, dev_t dev, int vendor_id, int chip_id)\n{\n    gallium_device_t *device;\n    cairo_status_t status;\n    void *handle;\n    const char *libdir;\n    char buf[4096];\n    struct drm_api *(*ctor) (void);\n\n    /* XXX need search path + probe */\n    libdir = getenv (\"CAIRO_GALLIUM_LIBDIR\");\n    if (libdir == NULL)\n\tlibdir = \"/usr/lib/dri\";\n    buf[snprintf (buf, sizeof (buf)-1, \"%s/i915_dri.so\", libdir)] = '\\0';\n\n    handle = dlopen (buf, RTLD_LAZY);\n    if (handle == NULL)\n\treturn NULL;\n\n    ctor = dlsym (handle, \"drm_api_create\");\n    if (ctor == NULL) {\n\tdlclose (handle);\n\treturn NULL;\n    }\n\n    device = malloc (sizeof (gallium_device_t));\n    if (device == NULL) {\n\tdlclose (handle);\n\treturn _cairo_drm_device_create_in_error (_cairo_error (CAIRO_STATUS_NO_MEMORY));\n    }\n\n    device->dlhandle = handle;\n\n    device->drm.surface.create = gallium_surface_create;\n    device->drm.surface.create_for_name = NULL;\n    //device->drm.surface.create_for_name = gallium_surface_create_for_name;\n    device->drm.surface.enable_scan_out = NULL;\n    //device->drm.surface.flink = gallium_surface_flink;\n    device->drm.surface.flink = NULL;\n\n    device->drm.device.flush = NULL;\n    device->drm.device.throttle = NULL;\n    device->drm.device.destroy = gallium_device_destroy;\n\n    device->drm.bo.release = _gallium_fake_bo_release;\n\n    device->api = ctor ();\n    if (device->api == NULL) {\n\tstatus = _cairo_error (CAIRO_STATUS_NO_MEMORY);\n\tgoto CLEANUP;\n    }\n\n    device->screen = device->api->create_screen (device->api, fd, NULL);\n    if (device->screen == NULL) {\n\tstatus = _cairo_error (CAIRO_STATUS_NO_MEMORY);\n\tgoto CLEANUP_API;\n    }\n\n    device->max_size = 1 << device->screen->get_param (device->screen,\n\t\t\t\t\t\t       PIPE_CAP_MAX_TEXTURE_2D_LEVELS);\n\n    device->pipe = device->screen->context_create (device->screen, device);\n    if (device->pipe == NULL) {\n\tstatus = _cairo_error (CAIRO_STATUS_NO_MEMORY);\n\tgoto CLEANUP_SCREEN;\n    }\n\n    return _cairo_drm_device_init (&device->drm,\n\t\t\t\t   fd, dev,\n\t\t\t\t   0, 0,\n\t\t\t\t   device->max_size);\n\nCLEANUP_SCREEN:\n    device->screen->destroy (device->screen);\nCLEANUP_API:\n    device->api->destroy (device->api);\nCLEANUP:\n    free (device);\n    dlclose (handle);\n    return _cairo_drm_device_create_in_error (status);\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/util/backtrace-symbols.c": "/*\n  A hacky replacement for backtrace_symbols in glibc\n\n  backtrace_symbols in glibc looks up symbols using dladdr which is limited in\n  the symbols that it sees. libbacktracesymbols opens the executable and shared\n  libraries using libbfd and will look up backtrace information using the symbol\n  table and the dwarf line information.\n\n  It may make more sense for this program to use libelf instead of libbfd.\n  However, I have not investigated that yet.\n\n  Derived from addr2line.c from GNU Binutils by Jeff Muizelaar\n\n  Copyright 2007 Jeff Muizelaar\n*/\n\n/* addr2line.c -- convert addresses to line number and function name\n   Copyright 1997, 1998, 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n   Contributed by Ulrich Lauther <Ulrich.Lauther@mchp.siemens.de>\n\n   This file was part of GNU Binutils.\n\n   This program is free software; you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation; either version 2, or (at your option)\n   any later version.\n\n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n\n   You should have received a copy of the GNU General Public License\n   along with this program; if not, write to the Free Software\n   Foundation, 51 Franklin Street, Suite 500, Boston, MA 02110-1335, USA.  */\n\n#define fatal(a, b) exit(1)\n#define bfd_fatal(a) exit(1)\n#define bfd_nonfatal(a) exit(1)\n#define list_matching_formats(a) exit(1)\n\n/* 2 characters for each byte, plus 1 each for 0, x, and NULL */\n#define PTRSTR_LEN (sizeof(void *) * 2 + 3)\n#define true 1\n#define false 0\n\n#define _GNU_SOURCE\n#include <string.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <execinfo.h>\n#include <bfd.h>\n#include <libiberty.h>\n#include <dlfcn.h>\n#include <link.h>\n#if 0\n\nvoid (*dbfd_init)(void);\nbfd_vma (*dbfd_scan_vma)(const char *string, const char **end, int base);\nbfd* (*dbfd_openr)(const char *filename, const char *target);\nbfd_boolean (*dbfd_check_format)(bfd *abfd, bfd_format format);\nbfd_boolean (*dbfd_check_format_matches)(bfd *abfd, bfd_format format, char ***matching);\nbfd_boolean (*dbfd_close)(bfd *abfd);\nbfd_boolean (*dbfd_map_over_sections)(bfd *abfd, void (*func)(bfd *abfd, asection *sect, void *obj),\n\t\tvoid *obj);\n#define bfd_init dbfd_init\n\nstatic void load_funcs(void)\n{\n\tvoid * handle = dlopen(\"libbfd.so\", RTLD_NOW);\n\tdbfd_init = dlsym(handle, \"bfd_init\");\n\tdbfd_scan_vma = dlsym(handle, \"bfd_scan_vma\");\n\tdbfd_openr = dlsym(handle, \"bfd_openr\");\n\tdbfd_check_format = dlsym(handle, \"bfd_check_format\");\n\tdbfd_check_format_matches = dlsym(handle, \"bfd_check_format_matches\");\n\tdbfd_close = dlsym(handle, \"bfd_close\");\n\tdbfd_map_over_sections = dlsym(handle, \"bfd_map_over_sections\");\n}\n\n#endif\n\n\nstatic asymbol **syms;\t\t/* Symbol table.  */\n\n/* 150 isn't special; it's just an arbitrary non-ASCII char value.  */\n#define OPTION_DEMANGLER\t(150)\n\nstatic void slurp_symtab(bfd * abfd);\nstatic void find_address_in_section(bfd *abfd, asection *section, void *data);\n\n/* Read in the symbol table.  */\n\nstatic void slurp_symtab(bfd * abfd)\n{\n\tlong symcount;\n\tunsigned int size;\n\n\tif ((bfd_get_file_flags(abfd) & HAS_SYMS) == 0)\n\t\treturn;\n\n\tsymcount = bfd_read_minisymbols(abfd, false, (PTR) & syms, &size);\n\tif (symcount == 0)\n\t\tsymcount = bfd_read_minisymbols(abfd, true /* dynamic */ ,\n\t\t\t\t\t\t(PTR) & syms, &size);\n\n\tif (symcount < 0)\n\t\tbfd_fatal(bfd_get_filename(abfd));\n}\n\n/* These global variables are used to pass information between\n   translate_addresses and find_address_in_section.  */\n\nstatic bfd_vma pc;\nstatic const char *filename;\nstatic const char *functionname;\nstatic unsigned int line;\nstatic int found;\n\n/* Look for an address in a section.  This is called via\n   bfd_map_over_sections.  */\n\nstatic void find_address_in_section(bfd *abfd, asection *section, void *data __attribute__ ((__unused__)) )\n{\n\tbfd_vma vma;\n\tbfd_size_type size;\n\n\tif (found)\n\t\treturn;\n\n\tif ((bfd_get_section_flags(abfd, section) & SEC_ALLOC) == 0)\n\t\treturn;\n\n\tvma = bfd_get_section_vma(abfd, section);\n\tif (pc < vma)\n\t\treturn;\n\n\tsize = bfd_section_size(abfd, section);\n\tif (pc >= vma + size)\n\t\treturn;\n\n\tfound = bfd_find_nearest_line(abfd, section, syms, pc - vma,\n\t\t\t\t      &filename, &functionname, &line);\n}\n\n/* Read hexadecimal addresses from stdin, translate into\n   file_name:line_number and optionally function name.  */\n#if 0\nstatic void translate_addresses(bfd * abfd, char (*addr)[PTRSTR_LEN], int naddr)\n{\n\twhile (naddr) {\n\t\tpc = bfd_scan_vma(addr[naddr-1], NULL, 16);\n\n\t\tfound = false;\n\t\tbfd_map_over_sections(abfd, find_address_in_section,\n\t\t(PTR) NULL);\n\n\t\tif (!found) {\n\t\t\tprintf(\"[%s] \\?\\?() \\?\\?:0\\n\",addr[naddr-1]);\n\t\t} else {\n\t\t\tconst char *name;\n\n\t\t\tname = functionname;\n\t\t\tif (name == NULL || *name == '\\0')\n\t\t\t\tname = \"??\";\n\t\t\tif (filename != NULL) {\n\t\t\t\tchar *h;\n\n\t\t\t\th = strrchr(filename, '/');\n\t\t\t\tif (h != NULL)\n\t\t\t\t\tfilename = h + 1;\n\t\t\t}\n\n\t\t\tprintf(\"\\t%s:%u\\t\", filename ? filename : \"??\",\n\t\t\t       line);\n\n\t\t\tprintf(\"%s()\\n\", name);\n\n\t\t}\n\n\t\t/* fflush() is essential for using this command as a server\n\t\t   child process that reads addresses from a pipe and responds\n\t\t   with line number information, processing one address at a\n\t\t   time.  */\n\t\tfflush(stdout);\n\t\tnaddr--;\n\t}\n}\n#endif\n\nstatic char** translate_addresses_buf(bfd * abfd, bfd_vma *addr, int naddr)\n{\n\tint naddr_orig = naddr;\n\tchar b;\n\tint total  = 0;\n\tenum { Count, Print } state;\n\tchar *buf = &b;\n\tint len = 0;\n\tchar **ret_buf = NULL;\n\t/* iterate over the formating twice.\n\t * the first time we count how much space we need\n\t * the second time we do the actual printing */\n\tfor (state=Count; state<=Print; state++) {\n\tif (state == Print) {\n\t\tret_buf = malloc(total + sizeof(char*)*naddr);\n\t\tbuf = (char*)(ret_buf + naddr);\n\t\tlen = total;\n\t}\n\twhile (naddr) {\n\t\tif (state == Print)\n\t\t\tret_buf[naddr-1] = buf;\n\t\tpc = addr[naddr-1];\n\n\t\tfound = false;\n\t\tbfd_map_over_sections(abfd, find_address_in_section,\n\t\t(PTR) NULL);\n\n\t\tif (!found) {\n\t\t\ttotal += snprintf(buf, len, \"[0x%llx] \\?\\?() \\?\\?:0\",(long long unsigned int) addr[naddr-1]) + 1;\n\t\t} else {\n\t\t\tconst char *name;\n\n\t\t\tname = functionname;\n\t\t\tif (name == NULL || *name == '\\0')\n\t\t\t\tname = \"??\";\n\t\t\tif (filename != NULL) {\n\t\t\t\tchar *h;\n\n\t\t\t\th = strrchr(filename, '/');\n\t\t\t\tif (h != NULL)\n\t\t\t\t\tfilename = h + 1;\n\t\t\t}\n\t\t\ttotal += snprintf(buf, len, \"%s:%u\\t%s()\", filename ? filename : \"??\",\n\t\t\t       line, name) + 1;\n\n\t\t}\n\t\tif (state == Print) {\n\t\t\t/* set buf just past the end of string */\n\t\t\tbuf = buf + total + 1;\n\t\t}\n\t\tnaddr--;\n\t}\n\tnaddr = naddr_orig;\n\t}\n\treturn ret_buf;\n}\n/* Process a file.  */\n\nstatic char **process_file(const char *file_name, bfd_vma *addr, int naddr)\n{\n\tbfd *abfd;\n\tchar **matching;\n\tchar **ret_buf;\n\n\tabfd = bfd_openr(file_name, NULL);\n\n\tif (abfd == NULL)\n\t\tbfd_fatal(file_name);\n\n\tif (bfd_check_format(abfd, bfd_archive))\n\t\tfatal(\"%s: can not get addresses from archive\", file_name);\n\n\tif (!bfd_check_format_matches(abfd, bfd_object, &matching)) {\n\t\tbfd_nonfatal(bfd_get_filename(abfd));\n\t\tif (bfd_get_error() ==\n\t\t    bfd_error_file_ambiguously_recognized) {\n\t\t\tlist_matching_formats(matching);\n\t\t\tfree(matching);\n\t\t}\n\t\txexit(1);\n\t}\n\n\tslurp_symtab(abfd);\n\n\tret_buf = translate_addresses_buf(abfd, addr, naddr);\n\n\tfree (syms);\n\tsyms = NULL;\n\n\tbfd_close(abfd);\n\treturn ret_buf;\n}\n\n#define MAX_DEPTH 16\n\nstruct file_match {\n\tconst char *file;\n\tvoid *address;\n\tvoid *base;\n\tvoid *hdr;\n};\n\nstatic int find_matching_file(struct dl_phdr_info *info,\n\t\tsize_t size, void *data)\n{\n\tstruct file_match *match = data;\n\t/* This code is modeled from Gfind_proc_info-lsb.c:callback() from libunwind */\n\tlong n;\n\tconst ElfW(Phdr) *phdr;\n\tElfW(Addr) load_base = info->dlpi_addr;\n\tphdr = info->dlpi_phdr;\n\tfor (n = info->dlpi_phnum; --n >= 0; phdr++) {\n\t\tif (phdr->p_type == PT_LOAD) {\n\t\t\tElfW(Addr) vaddr = phdr->p_vaddr + load_base;\n\t\t\tif (match->address >= vaddr && match->address < vaddr + phdr->p_memsz) {\n\t\t\t\t/* we found a match */\n\t\t\t\tmatch->file = info->dlpi_name;\n\t\t\t\tmatch->base = info->dlpi_addr;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\nchar **backtrace_symbols(void *const *buffer, int size)\n{\n\tint stack_depth = size - 1;\n\tint x,y;\n\t/* discard calling function */\n\tint total = 0;\n\n\tchar ***locations;\n\tchar **final;\n\tchar *f_strings;\n\n\tlocations = malloc(sizeof(char**) * (stack_depth+1));\n\n\tbfd_init();\n\tfor(x=stack_depth, y=0; x>=0; x--, y++){\n\t\tstruct file_match match = { .address = buffer[x] };\n\t\tchar **ret_buf;\n\t\tbfd_vma addr;\n\t\tdl_iterate_phdr(find_matching_file, &match);\n\t\taddr = buffer[x] - match.base;\n\t\tif (match.file && strlen(match.file))\n\t\t\tret_buf = process_file(match.file, &addr, 1);\n\t\telse\n\t\t\tret_buf = process_file(\"/proc/self/exe\", &addr, 1);\n\t\tlocations[x] = ret_buf;\n\t\ttotal += strlen(ret_buf[0]) + 1;\n\t}\n\n\t/* allocate the array of char* we are going to return and extra space for\n\t * all of the strings */\n\tfinal = malloc(total + (stack_depth + 1) * sizeof(char*));\n\t/* get a pointer to the extra space */\n\tf_strings = (char*)(final + stack_depth + 1);\n\n\t/* fill in all of strings and pointers */\n\tfor(x=stack_depth; x>=0; x--){\n\t\tstrcpy(f_strings, locations[x][0]);\n\t\tfree(locations[x]);\n\t\tfinal[x] = f_strings;\n\t\tf_strings += strlen(f_strings) + 1;\n\t}\n\n\tfree(locations);\n\n\treturn final;\n}\n\nvoid\nbacktrace_symbols_fd(void *const *buffer, int size, int fd)\n{\n        int j;\n        char **strings;\n\n        strings = backtrace_symbols(buffer, size);\n        if (strings == NULL) {\n\t\tperror(\"backtrace_symbols\");\n\t\texit(EXIT_FAILURE);\n        }\n\n        for (j = 0; j < size; j++)\n\t\tprintf(\"%s\\n\", strings[j]);\n\n        free(strings);\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/util/cairo-fdr/fdr.c": "/* cairo-fdr - a 'flight data recorder', a black box, for cairo\n *\n * Copyright \u00a9 2009 Chris Wilson\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n#define _GNU_SOURCE\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include <cairo.h>\n#include <cairo-script.h>\n#include <cairo-tee.h>\n#include <stdlib.h>\n#include <assert.h>\n#include <signal.h>\n\n#include <dlfcn.h>\n\nstatic void *_dlhandle = RTLD_NEXT;\n#define DLCALL(name, args...) ({ \\\n    static typeof (&name) name##_real; \\\n    if (name##_real == NULL) { \\\n\tname##_real = dlsym (_dlhandle, #name); \\\n\tif (name##_real == NULL && _dlhandle == RTLD_NEXT) { \\\n\t    _dlhandle = dlopen (\"libcairo.so\", RTLD_LAZY); \\\n\t    name##_real = dlsym (_dlhandle, #name); \\\n\t    assert (name##_real != NULL); \\\n\t} \\\n    } \\\n    (*name##_real) (args);  \\\n})\n\n#define RINGBUFFER_SIZE 16\nstatic cairo_surface_t *fdr_ringbuffer[RINGBUFFER_SIZE];\nstatic int fdr_position;\nstatic int fdr_dump;\n\nstatic const cairo_user_data_key_t fdr_key;\n\nstatic void\nfdr_replay_to_script (cairo_surface_t *recording, cairo_device_t *ctx)\n{\n    if (recording != NULL) {\n\tDLCALL (cairo_script_write_comment, ctx, \"--- fdr ---\", -1);\n\tDLCALL (cairo_script_from_recording_surface, ctx, recording);\n    }\n}\n\nstatic void\nfdr_dump_ringbuffer (void)\n{\n    cairo_device_t *ctx;\n    int n;\n\n    ctx = DLCALL (cairo_script_create, \"/tmp/fdr.trace\");\n\n    for (n = fdr_position; n < RINGBUFFER_SIZE; n++)\n\tfdr_replay_to_script (fdr_ringbuffer[n], ctx);\n\n    for (n = 0; n < fdr_position; n++)\n\tfdr_replay_to_script (fdr_ringbuffer[n], ctx);\n\n    DLCALL (cairo_device_destroy, ctx);\n}\n\nstatic void\nfdr_sighandler (int sig)\n{\n    fdr_dump = 1;\n}\n\nstatic void\nfdr_urgent_sighandler (int sig)\n{\n    fdr_dump_ringbuffer ();\n}\n\nstatic void\nfdr_atexit (void)\n{\n    if (fdr_dump)\n\tfdr_dump_ringbuffer ();\n}\n\nstatic void\nfdr_pending_signals (void)\n{\n    static int initialized;\n\n    if (! initialized) {\n\tinitialized = 1;\n\n\tsignal (SIGUSR1, fdr_sighandler);\n\n\tsignal (SIGSEGV, fdr_urgent_sighandler);\n\tsignal (SIGABRT, fdr_urgent_sighandler);\n\tatexit (fdr_atexit);\n    }\n\n    if (fdr_dump) {\n\tfdr_dump_ringbuffer ();\n\tfdr_dump = 0;\n    }\n}\n\nstatic void\nfdr_get_extents (cairo_surface_t *surface,\n\t\t cairo_rectangle_t *extents)\n{\n    cairo_t *cr;\n\n    cr = DLCALL (cairo_create, surface);\n    DLCALL (cairo_clip_extents, cr,\n\t    &extents->x, &extents->y, &extents->width, &extents->height);\n    DLCALL (cairo_destroy, cr);\n\n    extents->width -= extents->x;\n    extents->height -= extents->y;\n}\n\nstatic void\nfdr_surface_destroy (void *surface)\n{\n    DLCALL (cairo_surface_destroy, surface);\n}\n\nstatic void\nfdr_surface_reference (void *surface)\n{\n    DLCALL (cairo_surface_reference, surface);\n}\n\nstatic cairo_surface_t *\nfdr_surface_get_tee (cairo_surface_t *surface)\n{\n    return DLCALL (cairo_surface_get_user_data, surface, &fdr_key);\n}\n\nstatic cairo_surface_t *\nfdr_tee_surface_index (cairo_surface_t *surface, int index)\n{\n    return DLCALL (cairo_tee_surface_index, surface, index);\n}\n\ncairo_t *\ncairo_create (cairo_surface_t *surface)\n{\n    cairo_surface_t *record, *tee;\n\n    fdr_pending_signals ();\n\n    tee = fdr_surface_get_tee (surface);\n    if (tee == NULL) {\n\tcairo_rectangle_t extents;\n\tcairo_content_t content;\n\n\tfdr_get_extents (surface, &extents);\n\tcontent = DLCALL (cairo_surface_get_content, surface);\n\n\ttee = DLCALL (cairo_tee_surface_create, surface);\n\trecord = DLCALL (cairo_recording_surface_create, content, &extents);\n\tDLCALL (cairo_tee_surface_add, tee, record);\n\n\tDLCALL (cairo_surface_set_user_data, surface,\n\t\t&fdr_key, tee, fdr_surface_destroy);\n    } else {\n\tint n;\n\n\trecord = fdr_tee_surface_index (tee, 1);\n\n\t/* update the position of the recording surface in the ringbuffer */\n\tfor (n = 0; n < RINGBUFFER_SIZE; n++) {\n\t    if (record == fdr_ringbuffer[n]) {\n\t\tfdr_ringbuffer[n] = NULL;\n\t\tbreak;\n\t    }\n\t}\n    }\n\n    fdr_surface_destroy (fdr_ringbuffer[fdr_position]);\n    fdr_ringbuffer[fdr_position] = record;\n    fdr_position = (fdr_position + 1) % RINGBUFFER_SIZE;\n\n    return DLCALL (cairo_create, tee);\n}\n\nstatic void\nfdr_remove_tee (cairo_surface_t *surface)\n{\n    fdr_surface_reference (surface);\n    DLCALL (cairo_surface_set_user_data, surface, &fdr_key, NULL, NULL);\n    fdr_surface_destroy (surface);\n}\n\nvoid\ncairo_destroy (cairo_t *cr)\n{\n    cairo_surface_t *tee;\n\n    tee = DLCALL (cairo_get_target, cr);\n    DLCALL (cairo_destroy, cr);\n\n    if (DLCALL (cairo_surface_get_reference_count, tee) == 1)\n\tfdr_remove_tee (fdr_tee_surface_index (tee, 0));\n}\n\nvoid\ncairo_pattern_destroy (cairo_pattern_t *pattern)\n{\n    if (DLCALL (cairo_pattern_get_type, pattern) == CAIRO_PATTERN_TYPE_SURFACE) {\n\tcairo_surface_t *surface;\n\n\tif (DLCALL (cairo_pattern_get_surface, pattern, &surface) == CAIRO_STATUS_SUCCESS &&\n\t    DLCALL (cairo_surface_get_type, surface) == CAIRO_SURFACE_TYPE_TEE &&\n\t    DLCALL (cairo_surface_get_reference_count, surface) == 2)\n\t{\n\t    fdr_remove_tee (fdr_tee_surface_index (surface, 0));\n\t}\n    }\n\n    DLCALL (cairo_pattern_destroy, pattern);\n}\n\ncairo_surface_t *\ncairo_get_target (cairo_t *cr)\n{\n    cairo_surface_t *tee;\n\n    tee = DLCALL (cairo_get_target, cr);\n    return fdr_tee_surface_index (tee, 0);\n}\n\ncairo_surface_t *\ncairo_get_group_target (cairo_t *cr)\n{\n    cairo_surface_t *tee;\n\n    tee = DLCALL (cairo_get_group_target, cr);\n    return fdr_tee_surface_index (tee, 0);\n}\n\ncairo_pattern_t *\ncairo_pattern_create_for_surface (cairo_surface_t *surface)\n{\n    cairo_surface_t *tee;\n\n    tee = fdr_surface_get_tee (surface);\n    if (tee != NULL)\n\tsurface = tee;\n\n    return DLCALL (cairo_pattern_create_for_surface, surface);\n}\n\ncairo_status_t\ncairo_pattern_get_surface (cairo_pattern_t *pattern,\n\t\t\t   cairo_surface_t **surface)\n{\n    cairo_status_t status;\n    cairo_surface_t *tee;\n\n    status = DLCALL (cairo_pattern_get_surface, pattern, surface);\n    if (status != CAIRO_STATUS_SUCCESS)\n\treturn status;\n\n    tee = fdr_surface_get_tee (*surface);\n    if (tee != NULL)\n\t*surface = tee;\n\n    return CAIRO_STATUS_SUCCESS;\n}\n\nvoid\ncairo_set_source_surface (cairo_t *cr,\n\t\t\t  cairo_surface_t *surface,\n\t\t\t  double x, double y)\n{\n    cairo_surface_t *tee;\n\n    tee = fdr_surface_get_tee (surface);\n    if (tee != NULL)\n\tsurface = tee;\n\n    DLCALL (cairo_set_source_surface, cr, surface, x, y);\n}\n\ncairo_surface_t *\ncairo_surface_create_similar (cairo_surface_t *surface,\n\t\t\t      cairo_content_t content,\n\t\t\t      int width, int height)\n{\n    cairo_surface_t *tee;\n\n    tee = fdr_surface_get_tee (surface);\n    if (tee != NULL)\n\tsurface = tee;\n\n    return DLCALL (cairo_surface_create_similar,\n\t\t   surface, content, width, height);\n}\n\ncairo_surface_t *\ncairo_surface_create_for_rectangle (cairo_surface_t *surface,\n                                    double\t\t x,\n                                    double\t\t y,\n                                    double\t\t width,\n                                    double\t\t height)\n{\n    cairo_surface_t *tee;\n\n    tee = fdr_surface_get_tee (surface);\n    if (tee != NULL)\n\tsurface = tee;\n\n    return DLCALL (cairo_surface_create_for_rectangle,\n\t\t   surface, x, y, width, height);\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/util/cairo-sphinx/fdr.c": "/* cairo-fdr - a 'flight data recorder', a black box, for cairo\n *\n * Copyright \u00a9 2009 Chris Wilson\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n#define _GNU_SOURCE\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include <cairo.h>\n#include <cairo-script.h>\n#include <cairo-tee.h>\n#include <stdlib.h>\n#include <stdint.h>\n#include <assert.h>\n#include <unistd.h>\n#include <errno.h>\n\n#include <dlfcn.h>\n\nstatic void *_dlhandle = RTLD_NEXT;\n#define DLCALL(name, args...) ({ \\\n    static typeof (&name) name##_real; \\\n    if (name##_real == NULL) { \\\n\tname##_real = dlsym (_dlhandle, #name); \\\n\tif (name##_real == NULL && _dlhandle == RTLD_NEXT) { \\\n\t    _dlhandle = dlopen (\"libcairo.so\", RTLD_LAZY); \\\n\t    name##_real = dlsym (_dlhandle, #name); \\\n\t    assert (name##_real != NULL); \\\n\t} \\\n    } \\\n    (*name##_real) (args);  \\\n})\n\nstatic cairo_device_t *fdr_context;\nstatic const cairo_user_data_key_t fdr_key;\n\nstatic void\nfdr_get_extents (cairo_surface_t *surface,\n\t\t cairo_rectangle_t *extents)\n{\n    cairo_t *cr;\n\n    cr = DLCALL (cairo_create, surface);\n    DLCALL (cairo_clip_extents, cr,\n\t    &extents->x, &extents->y, &extents->width, &extents->height);\n    DLCALL (cairo_destroy, cr);\n\n    extents->width -= extents->x;\n    extents->height -= extents->y;\n}\n\nstatic void\nfdr_surface_destroy (void *surface)\n{\n    DLCALL (cairo_surface_destroy, surface);\n}\n\nstatic void\nfdr_surface_reference (void *surface)\n{\n    DLCALL (cairo_surface_reference, surface);\n}\n\nstatic cairo_surface_t *\nfdr_surface_get_tee (cairo_surface_t *surface)\n{\n    return DLCALL (cairo_surface_get_user_data, surface, &fdr_key);\n}\n\nstatic cairo_surface_t *\nfdr_tee_surface_index (cairo_surface_t *surface, int index)\n{\n    return DLCALL (cairo_tee_surface_index, surface, index);\n}\n\nstatic cairo_status_t\nfdr_write (void *closure, const unsigned char *data, unsigned int len)\n{\n    int fd = (int) (intptr_t) closure;\n    while (len) {\n\tint ret = write (fd, data, len);\n\tif (ret < 0) {\n\t    switch (errno) {\n\t    case EAGAIN:\n\t    case EINTR:\n\t\tcontinue;\n\t    default:\n\t\treturn CAIRO_STATUS_WRITE_ERROR;\n\t    }\n\t} else if (ret == 0) {\n\t    return CAIRO_STATUS_WRITE_ERROR;\n\t} else {\n\t    data += ret;\n\t    len -= ret;\n\t}\n    }\n    return CAIRO_STATUS_SUCCESS;\n}\n\ncairo_t *\ncairo_create (cairo_surface_t *surface)\n{\n    cairo_surface_t *tee;\n\n    tee = fdr_surface_get_tee (surface);\n    if (tee == NULL) {\n\tcairo_surface_t *script;\n\tcairo_rectangle_t extents;\n\tcairo_content_t content;\n\n\tif (fdr_context == NULL) {\n\t    const char *env = getenv (\"CAIRO_SPHINX_FD\");\n\t    int fd = env ? atoi (env) : 1;\n\t    fdr_context = DLCALL (cairo_script_create_for_stream,\n\t\t\t\t  fdr_write, (void *) (intptr_t) fd);\n\t}\n\n\tfdr_get_extents (surface, &extents);\n\tcontent = DLCALL (cairo_surface_get_content, surface);\n\n\ttee = DLCALL (cairo_tee_surface_create, surface);\n\tscript = DLCALL (cairo_script_surface_create,\n\t\t\t fdr_context, content, extents.width, extents.height);\n\tDLCALL (cairo_tee_surface_add, tee, script);\n\n\tDLCALL (cairo_surface_set_user_data, surface,\n\t\t&fdr_key, tee, fdr_surface_destroy);\n    }\n\n    return DLCALL (cairo_create, tee);\n}\n\nstatic void\nfdr_remove_tee (cairo_surface_t *surface)\n{\n    fdr_surface_reference (surface);\n    DLCALL (cairo_surface_set_user_data, surface, &fdr_key, NULL, NULL);\n    fdr_surface_destroy (surface);\n}\n\nvoid\ncairo_destroy (cairo_t *cr)\n{\n    cairo_surface_t *tee;\n\n    tee = DLCALL (cairo_get_target, cr);\n    DLCALL (cairo_destroy, cr);\n\n    if (DLCALL (cairo_surface_get_reference_count, tee) == 1)\n\tfdr_remove_tee (fdr_tee_surface_index (tee, 0));\n}\n\nvoid\ncairo_pattern_destroy (cairo_pattern_t *pattern)\n{\n    if (DLCALL (cairo_pattern_get_type, pattern) == CAIRO_PATTERN_TYPE_SURFACE) {\n\tcairo_surface_t *surface;\n\n\tif (DLCALL (cairo_pattern_get_surface, pattern, &surface) == CAIRO_STATUS_SUCCESS &&\n\t    DLCALL (cairo_surface_get_type, surface) == CAIRO_SURFACE_TYPE_TEE &&\n\t    DLCALL (cairo_surface_get_reference_count, surface) == 2)\n\t{\n\t    fdr_remove_tee (fdr_tee_surface_index (surface, 0));\n\t}\n    }\n\n    DLCALL (cairo_pattern_destroy, pattern);\n}\n\ncairo_surface_t *\ncairo_get_target (cairo_t *cr)\n{\n    cairo_surface_t *tee;\n\n    tee = DLCALL (cairo_get_target, cr);\n    return fdr_tee_surface_index (tee, 0);\n}\n\ncairo_surface_t *\ncairo_get_group_target (cairo_t *cr)\n{\n    cairo_surface_t *tee;\n\n    tee = DLCALL (cairo_get_group_target, cr);\n    return fdr_tee_surface_index (tee, 0);\n}\n\ncairo_pattern_t *\ncairo_pattern_create_for_surface (cairo_surface_t *surface)\n{\n    cairo_surface_t *tee;\n\n    tee = fdr_surface_get_tee (surface);\n    if (tee != NULL)\n\tsurface = tee;\n\n    return DLCALL (cairo_pattern_create_for_surface, surface);\n}\n\ncairo_status_t\ncairo_pattern_get_surface (cairo_pattern_t *pattern,\n\t\t\t   cairo_surface_t **surface)\n{\n    cairo_status_t status;\n    cairo_surface_t *tee;\n\n    status = DLCALL (cairo_pattern_get_surface, pattern, surface);\n    if (status != CAIRO_STATUS_SUCCESS)\n\treturn status;\n\n    tee = fdr_surface_get_tee (*surface);\n    if (tee != NULL)\n\t*surface = tee;\n\n    return CAIRO_STATUS_SUCCESS;\n}\n\nvoid\ncairo_set_source_surface (cairo_t *cr,\n\t\t\t  cairo_surface_t *surface,\n\t\t\t  double x, double y)\n{\n    cairo_surface_t *tee;\n\n    tee = fdr_surface_get_tee (surface);\n    if (tee != NULL)\n\tsurface = tee;\n\n    DLCALL (cairo_set_source_surface, cr, surface, x, y);\n}\n\ncairo_surface_t *\ncairo_surface_create_similar (cairo_surface_t *surface,\n\t\t\t      cairo_content_t content,\n\t\t\t      int width, int height)\n{\n    cairo_surface_t *tee;\n\n    tee = fdr_surface_get_tee (surface);\n    if (tee != NULL)\n\tsurface = tee;\n\n    return DLCALL (cairo_surface_create_similar,\n\t\t   surface, content, width, height);\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/util/cairo-trace/trace.c": "/* cairo-trace - a utility to record and replay calls to the Cairo library.\n *\n * Copyright \u00a9 2008 Chris Wilson\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n#define _GNU_SOURCE\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n/* The autoconf on OpenBSD 4.5 produces the malformed constant name\n * SIZEOF_VOID__ rather than SIZEOF_VOID_P.  Work around that here. */\n#if !defined(SIZEOF_VOID_P) && defined(SIZEOF_VOID__)\n# define SIZEOF_VOID_P SIZEOF_VOID__\n#endif\n\n#include <dlfcn.h>\n#include <stdint.h>\n#include <stdbool.h>\n#include <stdio.h>\n#include <string.h>\n#include <sys/types.h>\n#include <unistd.h>\n#include <errno.h>\n#include <pthread.h>\n#include <zlib.h>\n#include <math.h>\n#include <locale.h> /* for locale independent %f printing */\n#include <ctype.h>\n#include <assert.h>\n#include <stdlib.h>\n#include <limits.h>\n#include <stdarg.h>\n\n#include <cairo.h>\n#if CAIRO_HAS_FT_FONT\n# include <cairo-ft.h>\n#endif\n\n#ifndef TRUE\n#define TRUE 1\n#define FALSE 0\n#endif\n\n#ifndef CAIRO_TRACE_OUTDIR\n#define CAIRO_TRACE_OUTDIR \".\"\n#endif\n\n#define DEBUG_STACK 0\n\n#if HAVE_BYTESWAP_H\n# include <byteswap.h>\n#endif\n#ifndef bswap_16\n# define bswap_16(p) \\\n\t(((((uint16_t)(p)) & 0x00ff) << 8) | \\\n\t  (((uint16_t)(p))           >> 8))\n#endif\n#ifndef bswap_32\n# define bswap_32(p) \\\n         (((((uint32_t)(p)) & 0x000000ff) << 24) | \\\n\t  ((((uint32_t)(p)) & 0x0000ff00) << 8)  | \\\n\t  ((((uint32_t)(p)) & 0x00ff0000) >> 8)  | \\\n\t  ((((uint32_t)(p)))              >> 24))\n#endif\n\n#if WORDS_BIGENDIAN\n#define le16(x) bswap_16 (x)\n#define le32(x) bswap_32 (x)\n#define be16(x) x\n#define be32(x) x\n#define to_be32(x) x\n#else\n#define le16(x) x\n#define le32(x) x\n#define be16(x) bswap_16 (x)\n#define be32(x) bswap_32 (x)\n#define to_be32(x) bswap_32 (x)\n#endif\n\n#if CAIRO_HAS_SYMBOL_LOOKUP\n#include \"lookup-symbol.h\"\n#endif\n\n/* Reverse the bits in a byte with 7 operations (no 64-bit):\n * Devised by Sean Anderson, July 13, 2001.\n * Source: http://graphics.stanford.edu/~seander/bithacks.html#ReverseByteWith32Bits\n */\n#define CAIRO_BITSWAP8(c) ((((c) * 0x0802LU & 0x22110LU) | ((c) * 0x8020LU & 0x88440LU)) * 0x10101LU >> 16)\n\n#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ > 4)\n#define CAIRO_PRINTF_FORMAT(fmt_index, va_index) \\\n\t__attribute__((__format__(__printf__, fmt_index, va_index)))\n#else\n#define CAIRO_PRINTF_FORMAT(fmt_index, va_index)\n#endif\n\n/* XXX implement manual vprintf so that the user can control precision of\n * printed numbers.\n */\n\nstatic void *_dlhandle = RTLD_NEXT;\n#define DLCALL(name, args...) ({ \\\n    static typeof (&name) name##_real; \\\n    if (name##_real == NULL) { \\\n\tname##_real = (typeof (&name))(dlsym (_dlhandle, #name));\t\\\n\tif (name##_real == NULL && _dlhandle == RTLD_NEXT) { \\\n\t    _dlhandle = dlopen (\"libcairo.\" SHARED_LIB_EXT, RTLD_LAZY); \\\n\t    name##_real = (typeof (&name))(dlsym (_dlhandle, #name));\t\\\n\t    assert (name##_real != NULL); \\\n\t} \\\n    } \\\n    (*name##_real) (args);  \\\n})\n\n#ifndef ARRAY_LENGTH\n#define ARRAY_LENGTH(__array) ((int) (sizeof (__array) / sizeof (__array[0])))\n#endif\n\n#if SIZEOF_VOID_P == 4\n#define PTR_SHIFT 2\n#elif SIZEOF_VOID_P == 8\n#define PTR_SHIFT 3\n#else\n#error Unexpected pointer size\n#endif\n#define BUCKET(b, ptr) (((unsigned long) (ptr) >> PTR_SHIFT) % ARRAY_LENGTH (b))\n\n#if defined(__GNUC__) && (__GNUC__ > 2) && defined(__OPTIMIZE__)\n#define _BOOLEAN_EXPR(expr)                   \\\n __extension__ ({                             \\\n   int _boolean_var_;                         \\\n   if (expr)                                  \\\n      _boolean_var_ = 1;                      \\\n   else                                       \\\n      _boolean_var_ = 0;                      \\\n   _boolean_var_;                             \\\n})\n#define LIKELY(expr) (__builtin_expect (_BOOLEAN_EXPR(expr), 1))\n#define UNLIKELY(expr) (__builtin_expect (_BOOLEAN_EXPR(expr), 0))\n#else\n#define LIKELY(expr) (expr)\n#define UNLIKELY(expr) (expr)\n#endif\n\ntypedef struct _object Object;\ntypedef struct _type Type;\n\nstruct _object {\n    const void *addr;\n    Type *type;\n    unsigned long int token;\n    int width, height;\n    cairo_bool_t foreign;\n    cairo_bool_t defined;\n    cairo_bool_t unknown;\n    int operand;\n    void *data;\n    void (*destroy)(void *);\n    Object *next, *prev;\n};\n\nstruct _type {\n    const char *name;\n\n    enum operand_type {\n\tNONE,\n\tSURFACE,\n\tCONTEXT,\n\tFONT_FACE,\n\tPATTERN,\n\tSCALED_FONT,\n\t_N_OP_TYPES\n    } op_type;\n    const char *op_code;\n\n    pthread_mutex_t mutex;\n    struct _bitmap {\n\tunsigned long int min;\n\tunsigned long int count;\n\tunsigned int map[64];\n\tstruct _bitmap *next;\n    } map;\n    Object *objects[607];\n    Type *next;\n};\n\nstatic struct _type_table {\n    pthread_mutex_t mutex;\n    Type *op_types[_N_OP_TYPES];\n} Types;\n\nstatic FILE *logfile;\nstatic cairo_bool_t _flush;\nstatic cairo_bool_t _error;\nstatic cairo_bool_t _line_info;\nstatic cairo_bool_t _mark_dirty;\nstatic const cairo_user_data_key_t destroy_key;\nstatic pthread_once_t once_control = PTHREAD_ONCE_INIT;\nstatic pthread_key_t counter_key;\n\nstatic void _init_trace (void);\n\n#define INIT_TRACE_ONCE() pthread_once (&once_control, _init_trace)\n\n#if __GNUC__ >= 3 && defined(__ELF__) && !defined(__sun)\n# define _enter_trace() INIT_TRACE_ONCE ()\n# define _exit_trace()  do { } while (0)\n# define _should_trace() 1\n# define USE_ENTER_EXIT 0\n#else\nstatic void _enter_trace (void);\nstatic void _exit_trace (void);\nstatic cairo_bool_t _should_trace (void);\n# define USE_ENTER_EXIT 1\n#endif\n\n#if HAVE_BUILTIN_RETURN_ADDRESS && CAIRO_HAS_SYMBOL_LOOKUP\n#define _emit_line_info() do { \\\n    if (_line_info && _write_lock ()) {\t\\\n\tvoid *addr = __builtin_return_address(0); \\\n\tchar caller[1024]; \\\n\t_trace_printf (\"%% %s() called by %s\\n\", __FUNCTION__, \\\n\t\t       lookup_symbol (caller, sizeof (caller), addr)); \\\n\t_write_unlock (); \\\n    } \\\n} while (0)\n#else\n#define _emit_line_info()\n#endif\n\nstatic void\n_type_release_token (Type *t, unsigned long int token)\n{\n    struct _bitmap *b, **prev = NULL;\n\n    b = &t->map;\n    while (b != NULL) {\n\tif (token < b->min + sizeof (b->map) * CHAR_BIT) {\n\t    unsigned int bit, elem;\n\n\t    token -= b->min;\n\t    elem = token / (sizeof (b->map[0]) * CHAR_BIT);\n\t    bit  = token % (sizeof (b->map[0]) * CHAR_BIT);\n\t    b->map[elem] &= ~(1 << bit);\n\t    if (! --b->count && prev) {\n\t\t*prev = b->next;\n\t\tfree (b);\n\t    }\n\t    return;\n\t}\n\tprev = &b->next;\n\tb = b->next;\n    }\n}\n\nstatic unsigned long int\n_type_next_token (Type *t)\n{\n    struct _bitmap *b, *bb, **prev = NULL;\n    unsigned long int min = 0;\n\n    b = &t->map;\n    while (b != NULL) {\n\tif (b->min != min)\n\t    break;\n\n\tif (b->count < sizeof (b->map) * CHAR_BIT) {\n\t    unsigned int n, m, bit;\n\t    for (n = 0; n < ARRAY_LENGTH (b->map); n++) {\n\t\tif (b->map[n] == (unsigned int) -1)\n\t\t    continue;\n\n\t\tfor (m=0, bit=1; m<sizeof (b->map[0])*CHAR_BIT; m++, bit<<=1) {\n\t\t    if ((b->map[n] & bit) == 0) {\n\t\t\tb->map[n] |= bit;\n\t\t\tb->count++;\n\t\t\treturn n * sizeof (b->map[0])*CHAR_BIT + m + b->min;\n\t\t    }\n\t\t}\n\t    }\n\t}\n\tmin += sizeof (b->map) * CHAR_BIT;\n\n\tprev = &b->next;\n\tb = b->next;\n    }\n\n    bb = malloc (sizeof (struct _bitmap));\n    *prev = bb;\n    bb->next = b;\n    bb->min = min;\n    bb->count = 1;\n    bb->map[0] = 0x1;\n    memset (bb->map + 1, 0, sizeof (bb->map) - sizeof (bb->map[0]));\n\n    return min;\n}\n\nstatic void\n_object_destroy (Object *obj)\n{\n    int bucket;\n\n    pthread_mutex_lock (&obj->type->mutex);\n    bucket = BUCKET (obj->type->objects, obj->addr);\n    _type_release_token (obj->type, obj->token);\n\n    if (obj->prev != NULL)\n\tobj->prev->next = obj->next;\n    else\n\tobj->type->objects[bucket] = obj->next;\n\n    if (obj->next != NULL)\n\tobj->next->prev = obj->prev;\n    pthread_mutex_unlock (&obj->type->mutex);\n\n    if (obj->data != NULL && obj->destroy != NULL)\n\tobj->destroy (obj->data);\n\n    free (obj);\n}\n\nstatic void\n_type_create (const char *typename,\n\t      enum operand_type op_type,\n\t      const char *op_code)\n{\n    Type *t;\n\n    pthread_mutex_lock (&Types.mutex);\n\n    t = malloc (sizeof (Type));\n    t->name = typename;\n    t->op_type = op_type;\n    t->op_code = op_code;\n\n    pthread_mutex_init (&t->mutex, NULL);\n\n    t->map.min = 0;\n    t->map.count = 0;\n    memset (t->map.map, 0, sizeof (t->map.map));\n    t->map.next = NULL;\n\n    memset (t->objects, 0, sizeof (t->objects));\n\n    t->next = NULL;\n\n    Types.op_types[op_type] = t;\n    pthread_mutex_unlock (&Types.mutex);\n}\n\nstatic Type *\n_get_type (enum operand_type type)\n{\n    return Types.op_types[type];\n}\n\nstatic void\n_type_destroy (Type *t)\n{\n    int n;\n    struct _bitmap *b;\n\n    for (n = 0; n < ARRAY_LENGTH (t->objects); n++) {\n\tObject *obj = t->objects[n];\n\twhile (obj != NULL) {\n\t    Object *next = obj->next;\n\t    _object_destroy (obj);\n\t    obj = next;\n\t}\n    }\n\n    b = t->map.next;\n    while (b != NULL) {\n\tstruct _bitmap *next = b->next;\n\tfree (b);\n\tb = next;\n    }\n\n    pthread_mutex_destroy (&t->mutex);\n    free (t);\n}\n\nstatic Object *\n_type_get_object (Type *type, const void *ptr)\n{\n    Object *obj;\n    int bucket = BUCKET (type->objects, ptr);\n\n    for (obj = type->objects[bucket]; obj != NULL; obj = obj->next) {\n\tif (obj->addr == ptr) {\n\t    if (obj->prev != NULL) { /* mru */\n\t\tobj->prev->next = obj->next;\n\t\tif (obj->next != NULL)\n\t\t    obj->next->prev = obj->prev;\n\t\tobj->prev = NULL;\n\t\ttype->objects[bucket]->prev = obj;\n\t\tobj->next = type->objects[bucket];\n\t\ttype->objects[bucket] = obj;\n\t    }\n\t    return obj;\n\t}\n    }\n\n    return NULL;\n}\n\nstatic Object *\n_object_create (Type *type, const void *ptr)\n{\n    Object *obj;\n    int bucket = BUCKET (type->objects, ptr);\n\n    obj = malloc (sizeof (Object));\n    obj->unknown = TRUE;\n    obj->defined = FALSE;\n    obj->foreign = FALSE;\n    obj->operand = -1;\n    obj->type = type;\n    obj->addr = ptr;\n    obj->token = _type_next_token (type);\n    obj->data = NULL;\n    obj->destroy = NULL;\n    obj->prev = NULL;\n    obj->next = type->objects[bucket];\n    if (type->objects[bucket] != NULL)\n\ttype->objects[bucket]->prev = obj;\n    type->objects[bucket] = obj;\n\n    return obj;\n}\n\n#if USE_ENTER_EXIT\nstatic int *\n_get_counter (void)\n{\n    int *counter = pthread_getspecific (counter_key);\n    if (counter == NULL) {\n\tcounter = calloc(1, sizeof(int));\n\tpthread_setspecific (counter_key, counter);\n    }\n    return counter;\n}\n\nstatic void\n_enter_trace (void)\n{\n    INIT_TRACE_ONCE ();\n    _get_counter ()[0]++;\n}\n\nstatic void\n_exit_trace (void)\n{\n    _get_counter ()[0]--;\n}\n\nstatic cairo_bool_t\n_should_trace (void)\n{\n    return _get_counter ()[0] <= 1;\n}\n#endif /* USE_ENTER_EXIT */\n\nstatic void\n_init_trace (void)\n{\n    pthread_mutex_init (&Types.mutex, NULL);\n    pthread_key_create (&counter_key, free);\n\n    _type_create (\"unclassed\", NONE, \"\");\n    _type_create (\"cairo_t\", CONTEXT, \"c\");\n    _type_create (\"cairo_font_face_t\", FONT_FACE, \"f\");\n    _type_create (\"cairo_pattern_t\", PATTERN, \"p\");\n    _type_create (\"cairo_scaled_font_t\", SCALED_FONT, \"sf\");\n    _type_create (\"cairo_surface_t\", SURFACE, \"s\");\n}\n\nstatic void\n_close_trace (void)\n{\n    if (logfile != NULL) {\n\tfclose (logfile);\n\tlogfile = NULL;\n    }\n}\n\nstatic void __attribute__ ((destructor))\n_fini_trace (void)\n{\n    int n;\n\n    _close_trace ();\n\n    for (n = 0; n < ARRAY_LENGTH (Types.op_types); n++) {\n\tif (Types.op_types[n]) {\n\t    _type_destroy (Types.op_types[n]);\n\t    Types.op_types[n] = NULL;\n\t}\n    }\n\n    pthread_mutex_destroy (&Types.mutex);\n}\n\n/* Format a double in a locale independent way and trim trailing\n * zeros.  Based on code from Alex Larson <alexl@redhat.com>.\n * http://mail.gnome.org/archives/gtk-devel-list/2001-October/msg00087.html\n *\n * The code in the patch is copyright Red Hat, Inc under the LGPL.\n */\n#define SIGNIFICANT_DIGITS_AFTER_DECIMAL 6\nstatic void\n_trace_dtostr (char *buffer, size_t size, double d)\n{\n    struct lconv *locale_data;\n    const char *decimal_point;\n    int decimal_point_len;\n    char *p;\n    int decimal_len;\n    int num_zeros, decimal_digits;\n\n    /* Omit the minus sign from negative zero. */\n    if (d == 0.0)\n\td = 0.0;\n\n    locale_data = localeconv ();\n    decimal_point = locale_data->decimal_point;\n    decimal_point_len = strlen (decimal_point);\n\n    /* Using \"%f\" to print numbers less than 0.1 will result in\n     * reduced precision due to the default 6 digits after the\n     * decimal point.\n     *\n     * For numbers is < 0.1, we print with maximum precision and count\n     * the number of zeros between the decimal point and the first\n     * significant digit. We then print the number again with the\n     * number of decimal places that gives us the required number of\n     * significant digits. This ensures the number is correctly\n     * rounded.\n     */\n    if (fabs (d) >= 0.1) {\n\tsnprintf (buffer, size, \"%f\", d);\n    } else {\n\tsnprintf (buffer, size, \"%.18f\", d);\n\tp = buffer;\n\n\tif (*p == '+' || *p == '-')\n\t    p++;\n\n\twhile (isdigit (*p))\n\t    p++;\n\n\tif (strncmp (p, decimal_point, decimal_point_len) == 0)\n\t    p += decimal_point_len;\n\n\tnum_zeros = 0;\n\twhile (*p++ == '0')\n\t    num_zeros++;\n\n\tdecimal_digits = num_zeros + SIGNIFICANT_DIGITS_AFTER_DECIMAL;\n\n\tif (decimal_digits < 18)\n\t    snprintf (buffer, size, \"%.*f\", decimal_digits, d);\n    }\n    p = buffer;\n\n    if (*p == '+' || *p == '-')\n\tp++;\n\n    while (isdigit (*p))\n\tp++;\n\n    if (strncmp (p, decimal_point, decimal_point_len) == 0) {\n\t*p = '.';\n\tdecimal_len = strlen (p + decimal_point_len);\n\tmemmove (p + 1, p + decimal_point_len, decimal_len);\n\tp[1 + decimal_len] = 0;\n\n\t/* Remove trailing zeros and decimal point if possible. */\n\tfor (p = p + decimal_len; *p == '0'; p--)\n\t    *p = 0;\n\n\tif (*p == '.') {\n\t    *p = 0;\n\t    p--;\n\t}\n    }\n}\n\nenum {\n    LENGTH_MODIFIER_LONG = 0x100\n};\n\n/* Here's a limited reimplementation of printf.  The reason for doing\n * this is primarily to special case handling of doubles.  We want\n * locale independent formatting of doubles and we want to trim\n * trailing zeros.  This is handled by dtostr() above, and the code\n * below handles everything else by calling snprintf() to do the\n * formatting.  This functionality is only for internal use and we\n * only implement the formats we actually use.\n */\nstatic void CAIRO_PRINTF_FORMAT(1, 0)\n_trace_vprintf (const char *fmt, va_list ap)\n{\n#define SINGLE_FMT_BUFFER_SIZE 32\n    char buffer[512], single_fmt[SINGLE_FMT_BUFFER_SIZE];\n    int single_fmt_length;\n    char *p;\n    const char *f, *start;\n    int length_modifier, width;\n    cairo_bool_t var_width;\n    int ret_ignored;\n\n    assert (_should_trace ());\n\n    f = fmt;\n    p = buffer;\n    while (*f != '\\0') {\n\tif (*f != '%') {\n\t    *p++ = *f++;\n\t    continue;\n\t}\n\n\tstart = f;\n\tf++;\n\n\tif (*f == '0')\n\t    f++;\n\n        var_width = 0;\n        if (*f == '*') {\n            var_width = 1;\n\t    f++;\n        }\n\n\twhile (isdigit (*f))\n\t    f++;\n\n\tlength_modifier = 0;\n\tif (*f == 'l') {\n\t    length_modifier = LENGTH_MODIFIER_LONG;\n\t    f++;\n\t}\n\n\t/* The only format strings exist in the cairo implementation\n\t * itself. So there's an internal consistency problem if any\n\t * of them is larger than our format buffer size. */\n\tsingle_fmt_length = f - start + 1;\n\n\t/* Reuse the format string for this conversion. */\n\tmemcpy (single_fmt, start, single_fmt_length);\n\tsingle_fmt[single_fmt_length] = '\\0';\n\n\t/* Flush contents of buffer before snprintf()'ing into it. */\n\tret_ignored = fwrite (buffer, 1, p-buffer, logfile);\n\n\t/* We group signed and unsigned together in this switch, the\n\t * only thing that matters here is the size of the arguments,\n\t * since we're just passing the data through to sprintf(). */\n\tswitch (*f | length_modifier) {\n\tcase '%':\n\t    buffer[0] = *f;\n\t    buffer[1] = 0;\n\t    break;\n\tcase 'd':\n\tcase 'u':\n\tcase 'o':\n\tcase 'x':\n\tcase 'X':\n            if (var_width) {\n                width = va_arg (ap, int);\n                snprintf (buffer, sizeof buffer,\n                          single_fmt, width, va_arg (ap, int));\n            } else {\n                snprintf (buffer, sizeof buffer, single_fmt, va_arg (ap, int));\n            }\n\t    break;\n\tcase 'd' | LENGTH_MODIFIER_LONG:\n\tcase 'u' | LENGTH_MODIFIER_LONG:\n\tcase 'o' | LENGTH_MODIFIER_LONG:\n\tcase 'x' | LENGTH_MODIFIER_LONG:\n\tcase 'X' | LENGTH_MODIFIER_LONG:\n            if (var_width) {\n                width = va_arg (ap, int);\n                snprintf (buffer, sizeof buffer,\n                          single_fmt, width, va_arg (ap, long int));\n            } else {\n                snprintf (buffer, sizeof buffer,\n                          single_fmt, va_arg (ap, long int));\n            }\n\t    break;\n\tcase 's':\n\t    snprintf (buffer, sizeof buffer,\n\t\t      single_fmt, va_arg (ap, const char *));\n\t    break;\n\tcase 'f':\n\tcase 'g':\n\t    _trace_dtostr (buffer, sizeof buffer, va_arg (ap, double));\n\t    break;\n\tcase 'c':\n\t    buffer[0] = va_arg (ap, int);\n\t    buffer[1] = 0;\n\t    break;\n\tdefault:\n\t    break;\n\t}\n\tp = buffer + strlen (buffer);\n\tf++;\n    }\n\n    ret_ignored = fwrite (buffer, 1, p-buffer, logfile);\n    (void)ret_ignored;\n}\n\nstatic void CAIRO_PRINTF_FORMAT(1, 2)\n_trace_printf (const char *fmt, ...)\n{\n    va_list ap;\n\n    va_start (ap, fmt);\n    _trace_vprintf (fmt, ap);\n    va_end (ap);\n}\n\nstatic void\nget_prog_name (char *buf, int length)\n{\n    char *slash;\n    FILE *file;\n\n    memset (buf, 0, length);\n    if (length == 0)\n\treturn;\n\n    file = fopen (\"/proc/self/cmdline\", \"rb\");\n    if (file != NULL) {\n\tslash = fgets (buf, length, file);\n\tfclose (file);\n\n\tif (slash == NULL)\n\t    return;\n    } else {\n\tchar const *name = getenv (\"CAIRO_TRACE_PROG_NAME\");\n\tif (name != NULL) {\n\t    strncpy (buf, name, length-1);\n\t}\n    }\n\n    slash = strrchr (buf, '/');\n    if (slash != NULL) {\n\tsize_t len = strlen (slash+1);\n\tmemmove (buf, slash+1, len+1);\n    }\n}\n\nstatic void\n_emit_header (void)\n{\n    char name[4096] = \"\";\n\n    get_prog_name (name, sizeof (name));\n\n    _trace_printf (\"%%!CairoScript - %s\\n\", name);\n}\n\nstatic cairo_bool_t\n_init_logfile (void)\n{\n    static cairo_bool_t initialized;\n    char buf[4096];\n    const char *filename;\n    const char *env;\n\n    if (initialized)\n\treturn logfile != NULL;\n\n    initialized = TRUE;\n\n    env = getenv (\"CAIRO_TRACE_FLUSH\");\n    if (env != NULL)\n\t_flush = atoi (env);\n\n    _line_info = TRUE;\n    env = getenv (\"CAIRO_TRACE_LINE_INFO\");\n    if (env != NULL)\n\t_line_info = atoi (env);\n\n    _mark_dirty = TRUE;\n    env = getenv (\"CAIRO_TRACE_MARK_DIRTY\");\n    if (env != NULL)\n\t_mark_dirty = atoi (env);\n\n    filename = getenv (\"CAIRO_TRACE_FD\");\n    if (filename != NULL) {\n\tint fd = atoi (filename);\n\tif (fd == -1)\n\t    return FALSE;\n\n\tlogfile = fdopen (fd, \"w\");\n\tif (logfile == NULL) {\n\t    fprintf (stderr, \"Failed to open trace file descriptor '%s': %s\\n\",\n\t\t       filename, strerror (errno));\n\t    return FALSE;\n\t}\n\n\tsetenv (\"CAIRO_TRACE_FD\", \"-1\", 1);\n\tgoto done;\n    }\n\n    filename = getenv (\"CAIRO_TRACE_OUTFILE_EXACT\");\n    if (filename == NULL) {\n\tchar name[4096] = \"\";\n\n\tfilename = getenv (\"CAIRO_TRACE_OUTDIR\");\n\tif (filename == NULL)\n\t    filename = CAIRO_TRACE_OUTDIR;\n\n\tget_prog_name (name, sizeof (name));\n\tif (*name == '\\0')\n\t    strcpy (name, \"cairo-trace.dat\");\n\n\tsnprintf (buf, sizeof (buf), \"%s/%s.%d.trace\",\n\t\tfilename, name, getpid());\n\n\tfilename = buf;\n    } else {\n\tsetenv (\"CAIRO_TRACE_FD\", \"-1\", 1);\n    }\n\n    logfile = fopen (filename, \"wb\");\n    if (logfile == NULL) {\n\tfprintf (stderr, \"Failed to open trace file '%s': %s\\n\",\n\t\t   filename, strerror (errno));\n\treturn FALSE;\n    }\n\n    fprintf (stderr, \"cairo-trace: Recording cairo trace data to %s\\n\",\n\t     filename);\n\ndone:\n    atexit (_close_trace);\n    _emit_header ();\n    return TRUE;\n}\n\nstatic cairo_bool_t\n_write_lock (void)\n{\n    if (_error)\n\treturn FALSE;\n\n    if (! _should_trace ())\n\treturn FALSE;\n\n    if (! _init_logfile ())\n\treturn FALSE;\n\n#if HAVE_FLOCKFILE && HAVE_FUNLOCKFILE\n    flockfile (logfile);\n#endif\n    return TRUE;\n}\n\nstatic void\n_write_unlock (void)\n{\n    if (logfile == NULL)\n\treturn;\n\n#if HAVE_FLOCKFILE && HAVE_FUNLOCKFILE\n    funlockfile (logfile);\n#endif\n\n    if (_flush)\n\tfflush (logfile);\n}\n\n\nstatic Object *\n_type_object_create (enum operand_type op_type, const void *ptr)\n{\n    Type *type;\n    Object *obj;\n\n    type = _get_type (op_type);\n\n    pthread_mutex_lock (&type->mutex);\n    obj = _object_create (type, ptr);\n    pthread_mutex_unlock (&type->mutex);\n\n    return obj;\n}\n\nstatic Object *\n_get_object (enum operand_type op_type, const void *ptr)\n{\n    Type *type;\n    Object *obj;\n\n    type = _get_type (op_type);\n    pthread_mutex_lock (&type->mutex);\n    obj = _type_get_object (type, ptr);\n    pthread_mutex_unlock (&type->mutex);\n\n    return obj;\n}\n\nstatic Object *current_object[2048]; /* XXX limit operand stack */\nstatic int current_stack_depth;\n\nstatic void\ndump_stack(const char *func)\n{\n#if DEBUG_STACK\n\tint n;\n\n\t_trace_printf (\"%% %s: stack[%d] = [\", func, current_stack_depth);\n\tfflush (logfile);\n\tfor (n = 0; n < current_stack_depth; n++) {\n\t\tObject *obj = current_object[n];\n\t\tassert(obj && obj->type);\n\t\t_trace_printf (\" %s%s%ld\",\n\t\t\t       obj->defined ? \"\" : \"*\",\n\t\t\t       obj->type->op_code, obj->token);\n\tfflush (logfile);\n\t}\n\t_trace_printf (\" ]\\n\");\n\tfflush (logfile);\n#endif\n}\n\nstatic void\nensure_operands (int num_operands)\n{\n    if (current_stack_depth < num_operands) {\n\tint n;\n\n\tfprintf (stderr, \"Operand stack underflow!\\n\");\n\tfor (n = 0; n < current_stack_depth; n++) {\n\t    Object *obj = current_object[n];\n\n\t    fprintf (stderr, \"  [%3d] = %s%ld\\n\",\n\t\t     n, obj->type->op_code, obj->token);\n\t}\n\n\tabort ();\n    }\n}\n\nstatic void\n_consume_operand (bool discard)\n{\n    Object *obj;\n\n    ensure_operands (1);\n    obj = current_object[--current_stack_depth];\n    if (!discard && ! obj->defined) {\n\t_trace_printf (\"dup /%s%ld exch def\\n\",\n\t\t       obj->type->op_code,\n\t\t       obj->token);\n\tobj->defined = TRUE;\n    }\n    obj->operand = -1;\n}\n\nstatic void\n_exch_operands (void)\n{\n    Object *tmp;\n\n    ensure_operands (2);\n    tmp = current_object[current_stack_depth-1];\n    tmp->operand--;\n    current_object[current_stack_depth-1] = current_object[current_stack_depth-2];\n    current_object[current_stack_depth-2] = tmp;\n    tmp = current_object[current_stack_depth-1];\n    tmp->operand++;\n}\n\nstatic cairo_bool_t\n_pop_operands_to_depth (int depth)\n{\n    if (depth < 0)\n\treturn FALSE;\n\n    assert(current_stack_depth >= depth);\n    if (current_stack_depth == depth)\n\treturn TRUE;\n\n    while (current_stack_depth > depth + 1) {\n\tObject *c_obj;\n\n\tensure_operands (1);\n\tc_obj = current_object[--current_stack_depth];\n\n\tassert(c_obj);\n\tassert(c_obj->type);\n\n\tif (! c_obj->defined) {\n\t    current_stack_depth++;\n\t    return FALSE;\n\t}\n\n\t_trace_printf (\"pop %% %s%ld\\n\",\n\t\t       c_obj->type->op_code, c_obj->token);\n\tc_obj->operand = -1;\n    }\n\n    _exch_operands ();\n    _trace_printf (\"exch\\n\");\n\n    dump_stack(__func__);\n    return TRUE;\n}\n\nstatic cairo_bool_t\n_pop_operands_to_object (Object *obj)\n{\n    if (!obj)\n\treturn FALSE;\n\n    if (obj->operand == -1)\n\treturn FALSE;\n\n    if (obj->operand == current_stack_depth - 1)\n\treturn TRUE;\n\n    if (obj->operand == current_stack_depth - 2) {\n\t_exch_operands ();\n\t_trace_printf (\"exch \");\n\treturn TRUE;\n    }\n\n    return _pop_operands_to_depth (obj->operand + 1);\n}\n\nstatic cairo_bool_t\n_pop_operands_to (enum operand_type t, const void *ptr)\n{\n    return _pop_operands_to_object (_get_object (t, ptr));\n}\n\nstatic cairo_bool_t\n_is_current_object (Object *obj, int depth)\n{\n    if (current_stack_depth <= depth)\n\treturn FALSE;\n    return current_object[current_stack_depth-depth-1] == obj;\n}\n\nstatic cairo_bool_t\n_is_current (enum operand_type type, const void *ptr, int depth)\n{\n    return _is_current_object (_get_object (type, ptr), depth);\n}\n\nstatic void\n_push_object(Object *obj)\n{\n    assert(obj->operand == -1);\n\n    if (current_stack_depth == ARRAY_LENGTH (current_object)) {\n\tint n;\n\n\tfprintf (stderr, \"Operand stack overflow!\\n\");\n\tfor (n = 0; n < current_stack_depth; n++) {\n\t    obj = current_object[n];\n\n\t    fprintf (stderr, \"  [%3d] = %s%ld\\n\",\n\t\t     n, obj->type->op_code, obj->token);\n\t}\n\n\tabort ();\n    }\n\n    obj->operand = current_stack_depth;\n    current_object[current_stack_depth++] = obj;\n}\n\nstatic void\n_push_operand (enum operand_type t, const void *ptr)\n{\n    _push_object(_get_object(t, ptr));\n}\n\nstatic void\n_object_remove (Object *obj)\n{\n    if (obj->operand != -1) {\n\tensure_operands (1);\n\tif (obj->operand == current_stack_depth - 1) {\n\t    _trace_printf (\"pop %% %s%ld destroyed\\n\",\n\t\t\t   obj->type->op_code, obj->token);\n\t} else if (obj->operand == current_stack_depth - 2) {\n\t    _exch_operands ();\n\t    _trace_printf (\"exch pop %% %s%ld destroyed\\n\",\n\t\t\t   obj->type->op_code, obj->token);\n\t} else {\n\t    int n;\n\n\t    _trace_printf (\"%d -1 roll pop %% %s%ld destroyed\\n\",\n\t\t\t   current_stack_depth - obj->operand,\n\t\t\t   obj->type->op_code, obj->token);\n\n\t    for (n = obj->operand; n < current_stack_depth - 1; n++) {\n\t\tcurrent_object[n] = current_object[n+1];\n\t\tcurrent_object[n]->operand = n;\n\t    }\n\t}\n\tobj->operand = -1;\n\n\tcurrent_stack_depth--;\n\tdump_stack(__func__);\n    }\n}\n\nstatic void\n_object_undef (void *ptr)\n{\n    Object *obj = ptr;\n\n    if (_write_lock ()) {\n\t_object_remove (obj);\n\n\tif (obj->defined) {\n\t    _trace_printf (\"/%s%ld undef\\n\",\n\t\t\t   obj->type->op_code, obj->token);\n\t}\n\n\t_write_unlock ();\n    }\n\n    _object_destroy (obj);\n}\n\nstatic long\n_create_context_id (cairo_t *cr)\n{\n    Object *obj;\n\n    obj = _get_object (CONTEXT, cr);\n    if (obj == NULL) {\n\tobj = _type_object_create (CONTEXT, cr);\n\tDLCALL (cairo_set_user_data,\n\t\tcr, &destroy_key, obj, _object_undef);\n    }\n\n    return obj->token;\n}\n\nstatic long\n_get_id (enum operand_type op_type, const void *ptr)\n{\n    Object *obj;\n\n    obj = _get_object (op_type, ptr);\n    if (obj == NULL) {\n\tif (logfile != NULL) {\n\t    _trace_printf (\"%% Unknown object of type %s, trace is incomplete.\",\n\t\t\t   _get_type (op_type)->name);\n\t}\n\t_error = TRUE;\n\treturn -1;\n    }\n\n    return obj->token;\n}\n\nstatic cairo_bool_t\n_has_id (enum operand_type op_type, const void *ptr)\n{\n    return _get_object (op_type, ptr) != NULL;\n}\n\nstatic long\n_create_font_face_id (cairo_font_face_t *font_face)\n{\n    Object *obj;\n\n    obj = _get_object (FONT_FACE, font_face);\n    if (obj == NULL) {\n\tobj = _type_object_create (FONT_FACE, font_face);\n\tDLCALL (cairo_font_face_set_user_data,\n\t\tfont_face, &destroy_key, obj, _object_undef);\n    }\n\n    return obj->token;\n}\n\nstatic long\n_get_font_face_id (cairo_font_face_t *font_face)\n{\n    return _get_id (FONT_FACE, font_face);\n}\n\nstatic void\n_emit_font_face_id (cairo_font_face_t *font_face)\n{\n    Object *obj = _get_object (FONT_FACE, font_face);\n    if (obj == NULL) {\n\t_trace_printf (\"null \");\n    } else {\n\tif (obj->defined) {\n\t    _trace_printf (\"f%ld \", obj->token);\n\t} else {\n\t    _trace_printf (\"%d index \", current_stack_depth - obj->operand - 1);\n\t}\n    }\n}\n\nstatic cairo_bool_t\n_has_pattern_id (cairo_pattern_t *pattern)\n{\n    return _has_id (PATTERN, pattern);\n}\n\nstatic long\n_create_pattern_id (cairo_pattern_t *pattern)\n{\n    Object *obj;\n\n    obj = _get_object (PATTERN, pattern);\n    if (obj == NULL) {\n\tobj = _type_object_create (PATTERN, pattern);\n\tDLCALL (cairo_pattern_set_user_data,\n\t\tpattern, &destroy_key, obj, _object_undef);\n    }\n\n    return obj->token;\n}\n\nstatic void\n_emit_pattern_id (cairo_pattern_t *pattern)\n{\n    Object *obj = _get_object (PATTERN, pattern);\n    if (obj == NULL) {\n\t_trace_printf (\"null \");\n    } else {\n\tif (obj->defined) {\n\t    _trace_printf (\"p%ld \", obj->token);\n\t} else {\n\t    _trace_printf (\"%d index \",\n\t\t\t   current_stack_depth - obj->operand - 1);\n\t}\n    }\n}\n\nstatic void\n_emit_scaled_font_id (const cairo_scaled_font_t *scaled_font)\n{\n    Object *obj = _get_object (SCALED_FONT, scaled_font);\n    if (obj == NULL) {\n\t_trace_printf (\"null \");\n    } else {\n\tif (obj->defined) {\n\t    _trace_printf (\"sf%ld \", obj->token);\n\t} else {\n\t    _trace_printf (\"%d index \",\n\t\t     current_stack_depth - obj->operand - 1);\n\t}\n    }\n}\n\nstatic long\n_create_scaled_font_id (cairo_scaled_font_t *font)\n{\n    Object *obj;\n\n    assert(_get_object (SCALED_FONT, font) == NULL);\n    obj = _type_object_create (SCALED_FONT, font);\n    DLCALL (cairo_scaled_font_set_user_data,\n\t    font, &destroy_key, obj, _object_undef);\n\n    return obj->token;\n}\n\nstatic cairo_bool_t\n_has_scaled_font_id (const cairo_scaled_font_t *font)\n{\n    return _has_id (SCALED_FONT, font);\n}\n\nstatic Object *\n_create_surface (cairo_surface_t *surface)\n{\n    Object *obj;\n\n    obj = _get_object (SURFACE, surface);\n    if (obj == NULL) {\n\tobj = _type_object_create (SURFACE, surface);\n\tDLCALL (cairo_surface_set_user_data,\n\t\tsurface, &destroy_key, obj, _object_undef);\n    }\n\n    return obj;\n}\n\nstatic long\n_get_surface_id (cairo_surface_t *surface)\n{\n    return _get_id (SURFACE, surface);\n}\n\nstatic cairo_bool_t\n_matrix_is_identity (const cairo_matrix_t *m)\n{\n    return m->xx == 1. && m->yx == 0. &&\n\t   m->xy == 0. && m->yy == 1. &&\n\t   m->x0 == 0. && m->y0 == 0.;\n}\n\n#define BUFFER_SIZE 16384\nstruct _data_stream {\n    z_stream zlib_stream;\n    unsigned char zin_buf[BUFFER_SIZE];\n    unsigned char zout_buf[BUFFER_SIZE];\n    unsigned char four_tuple[4];\n    int base85_pending;\n};\n\nstatic void\n_write_zlib_data_start (struct _data_stream *stream)\n{\n    stream->zlib_stream.zalloc = Z_NULL;\n    stream->zlib_stream.zfree  = Z_NULL;\n    stream->zlib_stream.opaque  = Z_NULL;\n\n    deflateInit (&stream->zlib_stream, Z_DEFAULT_COMPRESSION);\n\n    stream->zlib_stream.next_in = stream->zin_buf;\n    stream->zlib_stream.avail_in = 0;\n    stream->zlib_stream.next_out = stream->zout_buf;\n    stream->zlib_stream.avail_out = BUFFER_SIZE;\n}\n\nstatic void\n_write_base85_data_start (struct _data_stream *stream)\n{\n    stream->base85_pending = 0;\n}\n\nstatic cairo_bool_t\n_expand_four_tuple_to_five (unsigned char four_tuple[4],\n\t\t\t    unsigned char five_tuple[5])\n{\n    uint32_t value;\n    int digit, i;\n    cairo_bool_t all_zero = TRUE;\n\n    value = four_tuple[0] << 24 |\n\t    four_tuple[1] << 16 |\n\t    four_tuple[2] << 8  |\n\t    four_tuple[3] << 0;\n    for (i = 0; i < 5; i++) {\n\tdigit = value % 85;\n\tif (digit != 0 && all_zero)\n\t    all_zero = FALSE;\n\tfive_tuple[4-i] = digit + 33;\n\tvalue = value / 85;\n    }\n\n    return all_zero;\n}\n\nstatic void\n_write_base85_data (struct _data_stream *stream,\n\t\t    const unsigned char\t  *data,\n\t\t    unsigned long\t   length)\n{\n    unsigned char five_tuple[5];\n    int ret;\n\n    assert (_should_trace ());\n\n    while (length--) {\n\tstream->four_tuple[stream->base85_pending++] = *data++;\n\tif (stream->base85_pending == 4) {\n\t    if (_expand_four_tuple_to_five (stream->four_tuple, five_tuple))\n\t\tret = fwrite (\"z\", 1, 1, logfile);\n\t    else\n\t\tret = fwrite (five_tuple, 5, 1, logfile);\n\t    (void)ret;\n\t    stream->base85_pending = 0;\n\t}\n    }\n}\n\nstatic void\n_write_zlib_data (struct _data_stream *stream, cairo_bool_t flush)\n{\n    cairo_bool_t finished;\n\n    do {\n\tint ret = deflate (&stream->zlib_stream, flush ? Z_FINISH : Z_NO_FLUSH);\n\tif (flush || stream->zlib_stream.avail_out == 0) {\n\t    _write_base85_data (stream,\n\t\t\t\tstream->zout_buf,\n\t\t\t\tBUFFER_SIZE - stream->zlib_stream.avail_out);\n\t    stream->zlib_stream.next_out = stream->zout_buf;\n\t    stream->zlib_stream.avail_out = BUFFER_SIZE;\n\t}\n\n\tfinished = TRUE;\n\tif (stream->zlib_stream.avail_in != 0)\n\t    finished = FALSE;\n\tif (flush && ret != Z_STREAM_END)\n\t    finished = FALSE;\n    } while (! finished);\n\n    stream->zlib_stream.next_in = stream->zin_buf;\n}\n\nstatic void\n_write_data_start (struct _data_stream *stream, uint32_t len)\n{\n    _write_zlib_data_start (stream);\n    _write_base85_data_start (stream);\n\n    _trace_printf (\"<|\");\n    len = to_be32 (len);\n    _write_base85_data (stream, (unsigned char *) &len, sizeof (len));\n}\n\nstatic void\n_write_data (struct _data_stream *stream,\n\t     const void *data,\n\t     unsigned int length)\n{\n    unsigned int count;\n    const unsigned char *p = data;\n\n    while (length) {\n\tcount = length;\n\tif (count > BUFFER_SIZE - stream->zlib_stream.avail_in)\n\t    count = BUFFER_SIZE - stream->zlib_stream.avail_in;\n\tmemcpy (stream->zin_buf + stream->zlib_stream.avail_in, p, count);\n\tp += count;\n\tstream->zlib_stream.avail_in += count;\n\tlength -= count;\n\n\tif (stream->zlib_stream.avail_in == BUFFER_SIZE)\n\t    _write_zlib_data (stream, FALSE);\n    }\n}\n\nstatic void\n_write_zlib_data_end (struct _data_stream *stream)\n{\n    _write_zlib_data (stream, TRUE);\n    deflateEnd (&stream->zlib_stream);\n\n}\n\nstatic void\n_write_base85_data_end (struct _data_stream *stream)\n{\n    unsigned char five_tuple[5];\n    int ret;\n\n    assert (_should_trace ());\n\n    if (stream->base85_pending) {\n\tmemset (stream->four_tuple + stream->base85_pending,\n\t\t0, 4 - stream->base85_pending);\n\t_expand_four_tuple_to_five (stream->four_tuple, five_tuple);\n\tret = fwrite (five_tuple, stream->base85_pending+1, 1, logfile);\n\t(void) ret;\n    }\n}\n\nstatic void\n_write_data_end (struct _data_stream *stream)\n{\n    _write_zlib_data_end (stream);\n    _write_base85_data_end (stream);\n\n    _trace_printf (\"~>\");\n}\n\nstatic void\n_emit_data (const void *data, unsigned int length)\n{\n    struct _data_stream stream;\n\n    _write_data_start (&stream, length);\n    _write_data (&stream, data, length);\n    _write_data_end (&stream);\n}\n\nstatic const char *\n_format_to_string (cairo_format_t format)\n{\n#define f(name) case CAIRO_FORMAT_ ## name: return #name\n    switch (format) {\n\tf(INVALID);\n\tf(ARGB32);\n\tf(RGB30);\n\tf(RGB24);\n\tf(RGB16_565);\n\tf(A8);\n\tf(A1);\n    }\n#undef f\n    return \"UNKNOWN_FORMAT\";\n}\n\nstatic const char *\n_format_to_content_string (cairo_format_t format)\n{\n    switch (format) {\n    case CAIRO_FORMAT_INVALID:\n\treturn \"INVALID\";\n    case CAIRO_FORMAT_ARGB32:\n\treturn \"COLOR_ALPHA\";\n    case CAIRO_FORMAT_RGB30:\n    case CAIRO_FORMAT_RGB24:\n    case CAIRO_FORMAT_RGB16_565:\n\treturn \"COLOR\";\n    case CAIRO_FORMAT_A8:\n    case CAIRO_FORMAT_A1:\n\treturn \"ALPHA\";\n    }\n    return \"UNKNOWN\";\n}\n\nstatic const char *\n_status_to_string (cairo_status_t status)\n{\n#define f(name) case CAIRO_STATUS_ ## name: return \"STATUS_\" #name\n    switch (status) {\n\tf(SUCCESS);\n\tf(NO_MEMORY);\n\tf(INVALID_RESTORE);\n\tf(INVALID_POP_GROUP);\n\tf(NO_CURRENT_POINT);\n\tf(INVALID_MATRIX);\n\tf(INVALID_STATUS);\n\tf(NULL_POINTER);\n\tf(INVALID_STRING);\n\tf(INVALID_PATH_DATA);\n\tf(READ_ERROR);\n\tf(WRITE_ERROR);\n\tf(SURFACE_FINISHED);\n\tf(SURFACE_TYPE_MISMATCH);\n\tf(PATTERN_TYPE_MISMATCH);\n\tf(INVALID_CONTENT);\n\tf(INVALID_FORMAT);\n\tf(INVALID_VISUAL);\n\tf(FILE_NOT_FOUND);\n\tf(INVALID_DASH);\n\tf(INVALID_DSC_COMMENT);\n\tf(INVALID_INDEX);\n\tf(CLIP_NOT_REPRESENTABLE);\n\tf(TEMP_FILE_ERROR);\n\tf(INVALID_STRIDE);\n\tf(FONT_TYPE_MISMATCH);\n\tf(USER_FONT_IMMUTABLE);\n\tf(USER_FONT_ERROR);\n\tf(NEGATIVE_COUNT);\n\tf(INVALID_CLUSTERS);\n\tf(INVALID_SLANT);\n\tf(INVALID_WEIGHT);\n\tf(INVALID_SIZE);\n\tf(USER_FONT_NOT_IMPLEMENTED);\n\tf(DEVICE_TYPE_MISMATCH);\n\tf(DEVICE_ERROR);\n\tf(INVALID_MESH_CONSTRUCTION);\n\tf(DEVICE_FINISHED);\n\tf(JBIG2_GLOBAL_MISSING);\n    case CAIRO_STATUS_LAST_STATUS:\n\tbreak;\n    }\n    return \"UNKNOWN_STATUS\";\n#undef f\n}\n\nstatic void CAIRO_PRINTF_FORMAT(2, 3)\n_emit_image (cairo_surface_t *image,\n\t     const char *info,\n\t     ...)\n{\n    int stride, row, width, height;\n    uint32_t len;\n    cairo_format_t format;\n    uint8_t row_stack[BUFFER_SIZE];\n    uint8_t *rowdata;\n    uint8_t *data;\n    struct _data_stream stream;\n    cairo_status_t status;\n\n    status = DLCALL (cairo_surface_status, image);\n    if (status) {\n\t_trace_printf (\"<< /status //%s >> image\",\n\t\t       _status_to_string (status));\n\treturn;\n    }\n\n    width = DLCALL (cairo_image_surface_get_width, image);\n    height = DLCALL (cairo_image_surface_get_height, image);\n    stride = DLCALL (cairo_image_surface_get_stride, image);\n    format = DLCALL (cairo_image_surface_get_format, image);\n    data = DLCALL (cairo_image_surface_get_data, image);\n\n    _trace_printf (\"dict\\n\"\n\t\t   \"  /width %d set\\n\"\n\t\t   \"  /height %d set\\n\"\n\t\t   \"  /format //%s set\\n\",\n\t\t   width, height,\n\t\t   _format_to_string (format));\n    if (info != NULL) {\n\tva_list ap;\n\n\tva_start (ap, info);\n\t_trace_vprintf (info, ap);\n\tva_end (ap);\n    }\n\n    if (DLCALL (cairo_version) >= CAIRO_VERSION_ENCODE (1, 9, 0)) {\n\tconst char *mime_types[] = {\n\t    CAIRO_MIME_TYPE_JPEG,\n\t    CAIRO_MIME_TYPE_JP2,\n\t    CAIRO_MIME_TYPE_PNG,\n\t    NULL\n\t}, **mime_type;\n\n\tfor (mime_type = mime_types; *mime_type; mime_type++) {\n\t    const unsigned char *mime_data;\n\t    unsigned long mime_length;\n\n\t    DLCALL (cairo_surface_get_mime_data,\n\t\t    image, *mime_type, &mime_data, &mime_length);\n\t    if (mime_data != NULL) {\n\t\t_trace_printf (\"  /mime-type (%s) set\\n\"\n\t\t\t       \"  /source <~\",\n\t\t\t       *mime_type);\n\t\t_write_base85_data_start (&stream);\n\t\t_write_base85_data (&stream, mime_data, mime_length);\n\t\t_write_base85_data_end (&stream);\n\t\t_trace_printf (\"~> set\\n\"\n\t\t\t       \"  image\");\n\t\treturn;\n\t    }\n\t}\n    }\n\n    switch (format) {\n    case CAIRO_FORMAT_A1:        len = (width + 7)/8; break;\n    case CAIRO_FORMAT_A8:        len =  width; break;\n    case CAIRO_FORMAT_RGB16_565: len = 2*width; break;\n    case CAIRO_FORMAT_RGB24:     len = 3*width; break;\n    default:\n    case CAIRO_FORMAT_RGB30:\n    case CAIRO_FORMAT_INVALID:\n    case CAIRO_FORMAT_ARGB32: len = 4*width; break;\n    }\n\n    _trace_printf (\"  /source \");\n    _write_data_start (&stream, len * height);\n\n#ifdef WORDS_BIGENDIAN\n    switch (format) {\n    case CAIRO_FORMAT_A1:\n\tfor (row = height; row--; ) {\n\t    _write_data (&stream, data, (width+7)/8);\n\t    data += stride;\n\t}\n\tbreak;\n    case CAIRO_FORMAT_A8:\n\tfor (row = height; row--; ) {\n\t    _write_data (&stream, data, width);\n\t    data += stride;\n\t}\n\tbreak;\n    case CAIRO_FORMAT_RGB16_565:\n\tfor (row = height; row--; ) {\n\t    _write_data (&stream, data, 2*width);\n\t    data += stride;\n\t}\n\tbreak;\n    case CAIRO_FORMAT_RGB24:\n\tfor (row = height; row--; ) {\n\t    int col;\n\t    rowdata = data;\n\t    for (col = width; col--; ) {\n\t\t_write_data (&stream, rowdata, 3);\n\t\trowdata+=4;\n\t    }\n\t    data += stride;\n\t}\n\tbreak;\n    case CAIRO_FORMAT_RGB30:\n    case CAIRO_FORMAT_ARGB32:\n\tfor (row = height; row--; ) {\n\t    _write_data (&stream, data, 4*width);\n\t    data += stride;\n\t}\n\tbreak;\n    case CAIRO_FORMAT_INVALID:\n    default:\n\tbreak;\n    }\n#else\n    if (stride > ARRAY_LENGTH (row_stack)) {\n\trowdata = malloc (stride);\n\tif (rowdata == NULL)\n\t    goto BAIL;\n    } else\n\trowdata = row_stack;\n\n    switch (format) {\n    case CAIRO_FORMAT_A1:\n\tfor (row = height; row--; ) {\n\t    int col;\n\t    for (col = 0; col < (width + 7)/8; col++)\n\t\trowdata[col] = CAIRO_BITSWAP8 (data[col]);\n\t    _write_data (&stream, rowdata, (width+7)/8);\n\t    data += stride;\n\t}\n\tbreak;\n    case CAIRO_FORMAT_A8:\n\tfor (row = height; row--; ) {\n\t    _write_data (&stream, rowdata, width);\n\t    data += stride;\n\t}\n\tbreak;\n    case CAIRO_FORMAT_RGB16_565: /* XXX endianness */\n\tfor (row = height; row--; ) {\n\t    uint16_t *src = (uint16_t *) data;\n\t    uint16_t *dst = (uint16_t *)rowdata;\n\t    int col;\n\t    for (col = 0; col < width; col++)\n\t\tdst[col] = bswap_16 (src[col]);\n\t    _write_data (&stream, rowdata, 2*width);\n\t    data += stride;\n\t}\n\tbreak;\n    case CAIRO_FORMAT_RGB24:\n\tfor (row = height; row--; ) {\n\t    uint8_t *src = data;\n\t    int col;\n\t    for (col = 0; col < width; col++) {\n\t\trowdata[3*col+2] = *src++;\n\t\trowdata[3*col+1] = *src++;\n\t\trowdata[3*col+0] = *src++;\n\t\tsrc++;\n\t    }\n\t    _write_data (&stream, rowdata, 3*width);\n\t    data += stride;\n\t}\n\tbreak;\n    case CAIRO_FORMAT_RGB30:\n    case CAIRO_FORMAT_ARGB32:\n\tfor (row = height; row--; ) {\n\t    uint32_t *src = (uint32_t *) data;\n\t    uint32_t *dst = (uint32_t *) rowdata;\n\t    int col;\n\t    for (col = 0; col < width; col++)\n\t\tdst[col] = bswap_32 (src[col]);\n\t    _write_data (&stream, rowdata, 4*width);\n\t    data += stride;\n\t}\n\tbreak;\n    case CAIRO_FORMAT_INVALID:\n    default:\n\tbreak;\n    }\n    if (rowdata != row_stack)\n\tfree (rowdata);\n\nBAIL:\n    _write_data_end (&stream);\n#endif\n    _trace_printf (\" set\\n  image\");\n}\n\nstatic void\n_encode_string_literal (char *out, int max,\n\t\t\tconst char *utf8, int len)\n{\n    char c;\n    const char *end;\n\n    *out++ = '(';\n    max--;\n\n    if (utf8 == NULL)\n\tgoto DONE;\n\n    if (len < 0)\n\tlen = strlen (utf8);\n    end = utf8 + len;\n\n    while (utf8 < end) {\n\tif (max < 5)\n\t    break;\n\n\tswitch ((c = *utf8++)) {\n\tcase '\\n':\n\t    *out++ = '\\\\';\n\t    *out++ = 'n';\n\t    max -= 2;\n\t    break;\n\tcase '\\r':\n\t    *out++ = '\\\\';\n\t    *out++ = 'r';\n\t    max -= 2;\n\tcase '\\t':\n\t    *out++ = '\\\\';\n\t    *out++ = 't';\n\t    max -= 2;\n\t    break;\n\tcase '\\b':\n\t    *out++ = '\\\\';\n\t    *out++ = 'b';\n\t    max -= 2;\n\t    break;\n\tcase '\\f':\n\t    *out++ = '\\\\';\n\t    *out++ = 'f';\n\t    max -= 2;\n\t    break;\n\tcase '\\\\':\n\tcase '(':\n\tcase ')':\n\t    *out++ = '\\\\';\n\t    *out++ = c;\n\t    max -= 2;\n\t    break;\n\tdefault:\n\t    if (isprint (c) || isspace (c)) {\n\t\t*out++ = c;\n\t    } else {\n\t\tint octal = 0;\n\t\twhile (c) {\n\t\t    octal *= 10;\n\t\t    octal += c&7;\n\t\t    c /= 8;\n\t\t}\n\t\toctal = snprintf (out, max, \"\\\\%03d\", octal);\n\t\tout += octal;\n\t\tmax -= octal;\n\t    }\n\t    break;\n\t}\n    }\nDONE:\n    *out++ = ')';\n    *out = '\\0';\n}\n\nstatic void\nto_octal (int value, char *buf, size_t size)\n{\n    do {\n\tbuf[--size] = '0' + (value & 7);\n\tvalue >>= 3;\n    } while (size);\n}\n\nstatic void\n_emit_string_literal (const char *utf8, int len)\n{\n    char c;\n    const char *end;\n\n    if (utf8 == NULL) {\n\t_trace_printf (\"()\");\n\treturn;\n    }\n\n    if (len < 0)\n\tlen = strlen (utf8);\n    end = utf8 + len;\n\n    _trace_printf (\"(\");\n    while (utf8 < end) {\n\tswitch ((c = *utf8++)) {\n\tcase '\\n':\n\t    c = 'n';\n\t    goto ESCAPED_CHAR;\n\tcase '\\r':\n\t    c = 'r';\n\t    goto ESCAPED_CHAR;\n\tcase '\\t':\n\t    c = 't';\n\t    goto ESCAPED_CHAR;\n\tcase '\\b':\n\t    c = 'b';\n\t    goto ESCAPED_CHAR;\n\tcase '\\f':\n\t    c = 'f';\n\t    goto ESCAPED_CHAR;\n\tcase '\\\\':\n\tcase '(':\n\tcase ')':\nESCAPED_CHAR:\n\t    _trace_printf (\"\\\\%c\", c);\n\t    break;\n\tdefault:\n\t    if (isprint (c) || isspace (c)) {\n\t\t_trace_printf (\"%c\", c);\n\t    } else {\n\t\tchar buf[4] = { '\\\\' };\n\t\tint ret_ignored;\n\n\t\tto_octal (c, buf+1, 3);\n\t\tret_ignored = fwrite (buf, 4, 1, logfile);\n\t\t(void)ret_ignored;\n\t    }\n\t    break;\n\t}\n    }\n    _trace_printf (\")\");\n}\n\nstatic void\n_emit_current (Object *obj)\n{\n    if (obj != NULL && ! _pop_operands_to_object (obj)) {\n\tif (obj->operand != -1) {\n\t    int n;\n\n\t    _trace_printf (\"%d -1 roll %% %s%ld\\n\",\n\t\t\t   current_stack_depth - obj->operand,\n\t\t\t   obj->type->op_code, obj->token);\n\n\t    for (n = obj->operand; n < current_stack_depth - 1; n++) {\n\t\tcurrent_object[n] = current_object[n+1];\n\t\tcurrent_object[n]->operand = n;\n\t    }\n\t    obj->operand = -1;\n\t    current_stack_depth--;\n\t} else {\n\t    assert(obj->defined);\n\t    _trace_printf (\"%s%ld\\n\", obj->type->op_code, obj->token);\n\t}\n\n\t_push_object (obj);\n\tdump_stack(__func__);\n    }\n}\n\nstatic void\n_emit_context (cairo_t *cr)\n{\n    _emit_current (_get_object (CONTEXT, cr));\n}\n\nstatic void\n_emit_pattern (cairo_pattern_t *pattern)\n{\n    _emit_current (_get_object (PATTERN, pattern));\n}\n\nstatic void\n_emit_surface (cairo_surface_t *surface)\n{\n    _emit_current (_get_object (SURFACE, surface));\n}\n\nstatic void CAIRO_PRINTF_FORMAT(2, 3)\n_emit_cairo_op (cairo_t *cr, const char *fmt, ...)\n{\n    va_list ap;\n\n    if (cr == NULL || ! _write_lock ())\n\treturn;\n\n    _emit_context (cr);\n\n    va_start (ap, fmt);\n    _trace_vprintf ( fmt, ap);\n    va_end (ap);\n\n    _write_unlock ();\n}\n\ncairo_t *\ncairo_create (cairo_surface_t *target)\n{\n    cairo_t *ret;\n    long surface_id;\n    long context_id;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_create, target);\n    context_id = _create_context_id (ret);\n\n    _emit_line_info ();\n    if (target != NULL && _write_lock ()) {\n\tsurface_id = _get_surface_id (target);\n\tif (surface_id != -1) {\n\t    _get_object (SURFACE, target)->foreign = FALSE;\n\n\t    /* we presume that we will continue to use the context */\n\t    if (_pop_operands_to (SURFACE, target)){\n\t\t_consume_operand (false);\n\t    } else {\n\t\t_trace_printf (\"s%ld \", surface_id);\n\t    }\n\t    _trace_printf (\"context %% c%ld\\n\", context_id);\n\t    _push_operand (CONTEXT, ret);\n\t    dump_stack(__func__);\n\t}\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\nvoid\ncairo_save (cairo_t *cr)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"save\\n\");\n    DLCALL (cairo_save, cr);\n    _exit_trace ();\n}\n\nvoid\ncairo_restore (cairo_t *cr)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"restore\\n\");\n    DLCALL (cairo_restore, cr);\n    _exit_trace ();\n}\n\nvoid\ncairo_push_group (cairo_t *cr)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"//COLOR_ALPHA push-group\\n\");\n    DLCALL (cairo_push_group, cr);\n    _exit_trace ();\n}\n\nstatic const char *\n_content_to_string (cairo_content_t content)\n{\n    switch (content) {\n    case CAIRO_CONTENT_ALPHA: return \"ALPHA\";\n    case CAIRO_CONTENT_COLOR: return \"COLOR\";\n    default:\n    case CAIRO_CONTENT_COLOR_ALPHA: return \"COLOR_ALPHA\";\n    }\n}\n\nvoid\ncairo_push_group_with_content (cairo_t *cr, cairo_content_t content)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"//%s push-group\\n\", _content_to_string (content));\n    DLCALL (cairo_push_group_with_content, cr, content);\n    _exit_trace ();\n}\n\ncairo_pattern_t *\ncairo_pop_group (cairo_t *cr)\n{\n    cairo_pattern_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_pop_group, cr);\n\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"pop-group %% p%ld\\n\", _create_pattern_id (ret));\n    _push_operand (PATTERN, ret);\n    dump_stack(__func__);\n\n    _exit_trace ();\n    return ret;\n}\n\nvoid\ncairo_pop_group_to_source (cairo_t *cr)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"pop-group set-source\\n\");\n    DLCALL (cairo_pop_group_to_source, cr);\n    _exit_trace ();\n}\n\nstatic const char *\n_operator_to_string (cairo_operator_t op)\n{\n#define f(name) case CAIRO_OPERATOR_ ## name: return #name\n    switch (op) {\n\tf(OVER);\n\tf(SOURCE);\n\tf(CLEAR);\n\tf(IN);\n\tf(OUT);\n\tf(ATOP);\n\tf(DEST);\n\tf(DEST_OVER);\n\tf(DEST_IN);\n\tf(DEST_OUT);\n\tf(DEST_ATOP);\n\tf(XOR);\n\tf(ADD);\n\tf(SATURATE);\n\tf(MULTIPLY);\n\tf(SCREEN);\n\tf(OVERLAY);\n\tf(DARKEN);\n\tf(LIGHTEN);\n        case CAIRO_OPERATOR_COLOR_DODGE: return \"DODGE\";\n        case CAIRO_OPERATOR_COLOR_BURN: return \"BURN\";\n\tf(HARD_LIGHT);\n\tf(SOFT_LIGHT);\n\tf(DIFFERENCE);\n\tf(EXCLUSION);\n\tf(HSL_HUE);\n\tf(HSL_SATURATION);\n\tf(HSL_COLOR);\n\tf(HSL_LUMINOSITY);\n    }\n#undef f\n    return \"UNKNOWN_OPERATOR\";\n}\n\nvoid\ncairo_set_operator (cairo_t *cr, cairo_operator_t op)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"//%s set-operator\\n\", _operator_to_string (op));\n    DLCALL (cairo_set_operator, cr, op);\n    _exit_trace ();\n}\n\nvoid\ncairo_set_source_rgb (cairo_t *cr, double red, double green, double blue)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"%g %g %g set-source-rgb\\n\", red, green, blue);\n    DLCALL (cairo_set_source_rgb, cr, red, green, blue);\n    _exit_trace ();\n}\n\nvoid\ncairo_set_source_rgba (cairo_t *cr, double red, double green, double blue, double alpha)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"%g %g %g %g set-source-rgba\\n\",\n\t\t    red, green, blue, alpha);\n    DLCALL (cairo_set_source_rgba, cr, red, green, blue, alpha);\n    _exit_trace ();\n}\n\nstatic void\n_emit_source_image (cairo_surface_t *surface)\n{\n    Object *obj;\n    cairo_surface_t *image;\n    cairo_t *cr;\n\n    obj = _get_object (SURFACE, surface);\n    if (obj == NULL)\n\treturn;\n\n    image = DLCALL (cairo_image_surface_create,\n\t\t    CAIRO_FORMAT_ARGB32,\n\t\t    obj->width,\n\t\t    obj->height);\n    cr = DLCALL (cairo_create, image);\n    DLCALL (cairo_set_source_surface, cr, surface, 0, 0);\n    DLCALL (cairo_paint, cr);\n    DLCALL (cairo_destroy, cr);\n\n    _emit_image (image, NULL);\n    _trace_printf (\" set-source-image \");\n    DLCALL (cairo_surface_destroy, image);\n\n    obj->foreign = FALSE;\n}\n\nstatic void\n_emit_source_image_rectangle (cairo_surface_t *surface,\n\t\t\t      int x, int y,\n\t\t\t      int width, int height)\n{\n    Object *obj;\n    cairo_surface_t *image;\n    cairo_t *cr;\n\n    obj = _get_object (SURFACE, surface);\n    if (obj == NULL)\n\treturn;\n\n    if (obj->foreign) {\n\t_emit_source_image (surface);\n\treturn;\n    }\n\n    image = DLCALL (cairo_image_surface_create,\n\t\t    CAIRO_FORMAT_ARGB32,\n\t\t    width,\n\t\t    height);\n    cr = DLCALL (cairo_create, image);\n    DLCALL (cairo_set_source_surface, cr, surface, x, y);\n    DLCALL (cairo_paint, cr);\n    DLCALL (cairo_destroy, cr);\n\n    _emit_image (image, NULL);\n    _trace_printf (\" %d %d set-device-offset set-source-image \",\n\t     x, y);\n    DLCALL (cairo_surface_destroy, image);\n}\n\nvoid\ncairo_set_source_surface (cairo_t *cr, cairo_surface_t *surface, double x, double y)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    if (cr != NULL && surface != NULL && _write_lock ()) {\n\tObject *obj = _get_object (SURFACE, surface);\n\n\tif (_is_current (SURFACE, surface, 0) &&\n\t    _is_current (CONTEXT, cr, 1))\n\t{\n\t    _consume_operand (false);\n\t}\n\telse if (_is_current (SURFACE, surface, 1) &&\n\t\t _is_current (CONTEXT, cr, 0) &&\n\t\t obj->defined)\n\t{\n\t    _trace_printf (\"exch \");\n\t    _exch_operands ();\n\t    _consume_operand (false);\n\t} else if (obj->defined) {\n\t    _emit_context (cr);\n\t    _trace_printf (\"s%ld \", obj->token);\n\t} else {\n\t    _emit_context (cr);\n\t    _trace_printf (\"%d index \",\n\t\t\t   current_stack_depth - obj->operand - 1);\n\t}\n\n\tif (obj->foreign)\n\t    _emit_source_image (surface);\n\n\t_trace_printf (\"pattern\");\n\tif (x != 0. || y != 0.)\n\t    _trace_printf (\" %g %g translate\", -x, -y);\n\n\t_trace_printf (\" set-source\\n\");\n\t_write_unlock ();\n    }\n\n    DLCALL (cairo_set_source_surface, cr, surface, x, y);\n    _exit_trace ();\n}\n\nvoid\ncairo_set_source (cairo_t *cr, cairo_pattern_t *source)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    if (cr != NULL && source != NULL && _write_lock ()) {\n\tObject *obj = _get_object (PATTERN, source);\n\tcairo_bool_t need_context_and_pattern = TRUE;\n\n\tif (_is_current (PATTERN, source, 0) &&\n\t    _is_current (CONTEXT, cr, 1))\n\t{\n\t    if (obj->defined) {\n\t\t_consume_operand (false);\n\t    } else {\n\t\t_trace_printf (\"exch 1 index \");\n\t\t_exch_operands ();\n\t    }\n\t    need_context_and_pattern = FALSE;\n\t}\n\telse if (_is_current (PATTERN, source, 1) &&\n\t\t _is_current (CONTEXT, cr, 0))\n\t{\n\t    if (obj->defined) {\n\t\t_trace_printf (\"exch \");\n\t\t_exch_operands ();\n\t\t_consume_operand (false);\n\t\tneed_context_and_pattern = FALSE;\n\t    }\n\t}\n\n\tif (need_context_and_pattern) {\n\t    _emit_context (cr);\n\t    _emit_pattern_id (source);\n\t}\n\n\t_trace_printf (\"set-source %% p%ld\\n\", obj->token);\n\t_write_unlock ();\n    }\n\n    DLCALL (cairo_set_source, cr, source);\n    _exit_trace ();\n}\n\ncairo_pattern_t *\ncairo_get_source (cairo_t *cr)\n{\n    cairo_pattern_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_get_source, cr);\n\n    if (! _has_pattern_id (ret)) {\n\t_emit_cairo_op (cr, \"/source get /p%ld exch def\\n\",\n\t\t\t_create_pattern_id (ret));\n\t_get_object (PATTERN, ret)->defined = TRUE;\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\nvoid\ncairo_set_tolerance (cairo_t *cr, double tolerance)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"%g set-tolerance\\n\", tolerance);\n    DLCALL (cairo_set_tolerance, cr, tolerance);\n    _exit_trace ();\n}\n\nstatic const char *\n_antialias_to_string (cairo_antialias_t antialias)\n{\n#define f(name) case CAIRO_ANTIALIAS_ ## name: return \"ANTIALIAS_\" #name\n    switch (antialias) {\n\tf(DEFAULT);\n\n\tf(NONE);\n\tf(GRAY);\n\tf(SUBPIXEL);\n\n\tf(FAST);\n\tf(GOOD);\n\tf(BEST);\n    };\n#undef f\n    return \"UNKNOWN_ANTIALIAS\";\n}\n\nvoid\ncairo_set_antialias (cairo_t *cr, cairo_antialias_t antialias)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr,\n\t\t    \"//%s set-antialias\\n\", _antialias_to_string (antialias));\n    DLCALL (cairo_set_antialias, cr, antialias);\n    _exit_trace ();\n}\n\nstatic const char *\n_fill_rule_to_string (cairo_fill_rule_t rule)\n{\n#define f(name) case CAIRO_FILL_RULE_ ## name: return #name\n    switch (rule) {\n\tf(WINDING);\n\tf(EVEN_ODD);\n    };\n#undef f\n    return \"UNKNOWN_FILL_RULE\";\n}\n\nvoid\ncairo_set_fill_rule (cairo_t *cr, cairo_fill_rule_t fill_rule)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr,\n\t\t    \"//%s set-fill-rule\\n\", _fill_rule_to_string (fill_rule));\n    DLCALL (cairo_set_fill_rule, cr, fill_rule);\n    _exit_trace ();\n}\n\nvoid\ncairo_set_line_width (cairo_t *cr, double width)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"%g set-line-width\\n\", width);\n    DLCALL (cairo_set_line_width, cr, width);\n    _exit_trace ();\n}\n\nstatic const char *\n_line_cap_to_string (cairo_line_cap_t line_cap)\n{\n#define f(name) case CAIRO_LINE_CAP_ ## name: return \"LINE_CAP_\" #name\n    switch (line_cap) {\n\tf(BUTT);\n\tf(ROUND);\n\tf(SQUARE);\n    };\n#undef f\n    return \"UNKNOWN_LINE_CAP\";\n}\n\nvoid\ncairo_set_line_cap (cairo_t *cr, cairo_line_cap_t line_cap)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"//%s set-line-cap\\n\", _line_cap_to_string (line_cap));\n    DLCALL (cairo_set_line_cap, cr, line_cap);\n    _exit_trace ();\n}\n\nstatic const char *\n_line_join_to_string (cairo_line_join_t line_join)\n{\n#define f(name) case CAIRO_LINE_JOIN_ ## name: return \"LINE_JOIN_\" #name\n    switch (line_join) {\n\tf(MITER);\n\tf(ROUND);\n\tf(BEVEL);\n    };\n#undef f\n    return \"UNKNOWN_LINE_JOIN\";\n}\n\nvoid\ncairo_set_line_join (cairo_t *cr, cairo_line_join_t line_join)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr,\n\t\t    \"//%s set-line-join\\n\", _line_join_to_string (line_join));\n    DLCALL (cairo_set_line_join, cr, line_join);\n    _exit_trace ();\n}\n\nvoid\ncairo_set_dash (cairo_t *cr, const double *dashes, int num_dashes, double offset)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    if (cr != NULL && _write_lock ()) {\n\tint n;\n\n\t_emit_context (cr);\n\n\t_trace_printf (\"[\");\n\tfor (n = 0; n <  num_dashes; n++) {\n\t    if (n != 0)\n\t\t_trace_printf (\" \");\n\t    _trace_printf (\"%g\", dashes[n]);\n\t}\n\t_trace_printf (\"] %g set-dash\\n\", offset);\n\n\t_write_unlock ();\n    }\n\n    DLCALL (cairo_set_dash, cr, dashes, num_dashes, offset);\n    _exit_trace ();\n}\n\nvoid\ncairo_set_miter_limit (cairo_t *cr, double limit)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"%g set-miter-limit\\n\", limit);\n    DLCALL (cairo_set_miter_limit, cr, limit);\n    _exit_trace ();\n}\n\nvoid\ncairo_translate (cairo_t *cr, double tx, double ty)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"%g %g translate\\n\", tx, ty);\n    DLCALL (cairo_translate, cr, tx, ty);\n    _exit_trace ();\n}\n\nvoid\ncairo_scale (cairo_t *cr, double sx, double sy)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"%g %g scale\\n\", sx, sy);\n    DLCALL (cairo_scale, cr, sx, sy);\n    _exit_trace ();\n}\n\nvoid\ncairo_rotate (cairo_t *cr, double angle)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"%g rotate\\n\", angle);\n    DLCALL (cairo_rotate, cr, angle);\n    _exit_trace ();\n}\n\nvoid\ncairo_transform (cairo_t *cr, const cairo_matrix_t *matrix)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"%g %g %g %g %g %g matrix transform\\n\",\n\t\t    matrix->xx, matrix->yx,\n\t\t    matrix->xy, matrix->yy,\n\t\t    matrix->x0, matrix->y0);\n    DLCALL (cairo_transform, cr, matrix);\n    _exit_trace ();\n}\n\nvoid\ncairo_set_matrix (cairo_t *cr, const cairo_matrix_t *matrix)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    if (_matrix_is_identity (matrix)) {\n\t_emit_cairo_op (cr, \"identity set-matrix\\n\");\n    } else {\n\t_emit_cairo_op (cr, \"%g %g %g %g %g %g matrix set-matrix\\n\",\n\t\t\tmatrix->xx, matrix->yx,\n\t\t\tmatrix->xy, matrix->yy,\n\t\t\tmatrix->x0, matrix->y0);\n    }\n    DLCALL (cairo_set_matrix, cr, matrix);\n    _exit_trace ();\n}\n\ncairo_surface_t *\ncairo_get_target (cairo_t *cr)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_get_target, cr);\n    if (cr != NULL) {\n\tObject *obj = _create_surface (ret);\n\n\tif (! obj->defined) {\n\t    _emit_cairo_op (cr,\n\t\t\t    \"/target get /s%ld exch def\\n\",\n\t\t\t    obj->token);\n\t    obj->defined = TRUE;\n\t}\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\ncairo_surface_t *\ncairo_get_group_target (cairo_t *cr)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_get_group_target, cr);\n    if (cr != NULL) {\n\tObject *obj = _create_surface (ret);\n\n\tif (! obj->defined) {\n\t    _emit_cairo_op (cr,\n\t\t\t    \"/group-target get /s%ld exch def\\n\",\n\t\t\t    obj->token);\n\t    obj->defined = TRUE;\n\t}\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\nvoid\ncairo_identity_matrix (cairo_t *cr)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"identity set-matrix\\n\");\n    DLCALL (cairo_identity_matrix, cr);\n    _exit_trace ();\n}\n\nvoid\ncairo_new_path (cairo_t *cr)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"n \");\n    DLCALL (cairo_new_path, cr);\n    _exit_trace ();\n}\n\nvoid\ncairo_move_to (cairo_t *cr, double x, double y)\n{\n    _enter_trace ();\n    _emit_cairo_op (cr, \"%g %g m \", x, y);\n    DLCALL (cairo_move_to, cr, x, y);\n    _exit_trace ();\n}\n\nvoid\ncairo_new_sub_path (cairo_t *cr)\n{\n    _enter_trace ();\n    _emit_cairo_op (cr, \"N \");\n    DLCALL (cairo_new_sub_path, cr);\n    _exit_trace ();\n}\n\nvoid\ncairo_line_to (cairo_t *cr, double x, double y)\n{\n    _enter_trace ();\n    _emit_cairo_op (cr, \"%g %g l \", x, y);\n    DLCALL (cairo_line_to, cr, x, y);\n    _exit_trace ();\n}\n\nvoid\ncairo_curve_to (cairo_t *cr, double x1, double y1, double x2, double y2, double x3, double y3)\n{\n    _enter_trace ();\n    _emit_cairo_op (cr, \"%g %g %g %g %g %g c \", x1, y1, x2, y2, x3, y3);\n    DLCALL (cairo_curve_to, cr, x1, y1, x2, y2, x3, y3);\n    _exit_trace ();\n}\n\nvoid\ncairo_arc (cairo_t *cr, double xc, double yc, double radius, double angle1, double angle2)\n{\n    _enter_trace ();\n    _emit_cairo_op (cr, \"%g %g %g %g %g arc\\n\", xc, yc, radius, angle1, angle2);\n    DLCALL (cairo_arc, cr, xc, yc, radius, angle1, angle2);\n    _exit_trace ();\n}\n\nvoid\ncairo_arc_negative (cairo_t *cr, double xc, double yc, double radius, double angle1, double angle2)\n{\n    _enter_trace ();\n    _emit_cairo_op (cr, \"%g %g %g %g %g arc-\\n\",\n\t\t    xc, yc, radius, angle1, angle2);\n    DLCALL (cairo_arc_negative, cr, xc, yc, radius, angle1, angle2);\n    _exit_trace ();\n}\n\nvoid\ncairo_rel_move_to (cairo_t *cr, double dx, double dy)\n{\n    _enter_trace ();\n    _emit_cairo_op (cr, \"%g %g M \", dx, dy);\n    DLCALL (cairo_rel_move_to, cr, dx, dy);\n    _exit_trace ();\n}\n\nvoid\ncairo_rel_line_to (cairo_t *cr, double dx, double dy)\n{\n    _enter_trace ();\n    _emit_cairo_op (cr, \"%g %g L \", dx, dy);\n    DLCALL (cairo_rel_line_to, cr, dx, dy);\n    _exit_trace ();\n}\n\nvoid\ncairo_rel_curve_to (cairo_t *cr, double dx1, double dy1, double dx2, double dy2, double dx3, double dy3)\n{\n    _enter_trace ();\n    _emit_cairo_op (cr, \"%g %g %g %g %g %g C \",\n\t\t    dx1, dy1, dx2, dy2, dx3, dy3);\n    DLCALL (cairo_rel_curve_to, cr, dx1, dy1, dx2, dy2, dx3, dy3);\n    _exit_trace ();\n}\n\nvoid\ncairo_rectangle (cairo_t *cr, double x, double y, double width, double height)\n{\n    _enter_trace ();\n    _emit_cairo_op (cr, \"%g %g %g %g rectangle\\n\", x, y, width, height);\n    DLCALL (cairo_rectangle, cr, x, y, width, height);\n    _exit_trace ();\n}\n\nvoid\ncairo_close_path (cairo_t *cr)\n{\n    _enter_trace ();\n    _emit_cairo_op (cr, \"h\\n\");\n    DLCALL (cairo_close_path, cr);\n    _exit_trace ();\n}\n\nvoid\ncairo_paint (cairo_t *cr)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"paint\\n\");\n    DLCALL (cairo_paint, cr);\n    _exit_trace ();\n}\n\nvoid\ncairo_paint_with_alpha (cairo_t *cr, double alpha)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"%g paint-with-alpha\\n\", alpha);\n    DLCALL (cairo_paint_with_alpha, cr, alpha);\n    _exit_trace ();\n}\n\nvoid\ncairo_mask (cairo_t *cr, cairo_pattern_t *pattern)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    if (cr != NULL && pattern != NULL && _write_lock ()) {\n\tObject *obj = _get_object (PATTERN, pattern);\n\tcairo_bool_t need_context_and_pattern = TRUE;\n\n\tif (_is_current (PATTERN, pattern, 0) &&\n\t    _is_current (CONTEXT, cr, 1))\n\t{\n\t    if (obj->defined) {\n\t\t_consume_operand (false);\n\t\tneed_context_and_pattern = FALSE;\n\t    }\n\t}\n\telse if (_is_current (PATTERN, pattern, 1) &&\n\t\t _is_current (CONTEXT, cr, 0))\n\t{\n\t    if (obj->defined) {\n\t\t_trace_printf (\"exch \");\n\t\t_exch_operands ();\n\t\t_consume_operand (false);\n\t\tneed_context_and_pattern = FALSE;\n\t    }\n\t}\n\n\tif (need_context_and_pattern) {\n\t    _emit_context (cr);\n\t    _emit_pattern_id (pattern);\n\t}\n\n\t_trace_printf (\" mask\\n\");\n\t_write_unlock ();\n    }\n    DLCALL (cairo_mask, cr, pattern);\n    _exit_trace ();\n}\n\nvoid\ncairo_mask_surface (cairo_t *cr, cairo_surface_t *surface, double x, double y)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    if (cr != NULL && surface != NULL && _write_lock ()) {\n\tObject *obj = _get_object (SURFACE, surface);\n\tif (_is_current (SURFACE, surface, 0) &&\n\t    _is_current (CONTEXT, cr, 1))\n\t{\n\t    _consume_operand (false);\n\t}\n\telse if (_is_current (SURFACE, surface, 1) &&\n\t\t _is_current (CONTEXT, cr, 0))\n\t{\n\t    _trace_printf (\"exch \");\n\t    _exch_operands ();\n\t    _consume_operand (false);\n\t} else if (obj->defined){\n\t    _emit_context (cr);\n\t    _trace_printf (\"s%ld \", obj->token);\n\t} else {\n\t    _emit_context (cr);\n\t    _trace_printf (\"%d index \",\n\t\t\t   current_stack_depth - obj->operand - 1);\n\t}\n\t_trace_printf (\"pattern\");\n\n\tif (x != 0. || y != 0.)\n\t    _trace_printf (\" %g %g translate\", -x, -y);\n\n\t_trace_printf (\" mask\\n\");\n\t_write_unlock ();\n    }\n\n    DLCALL (cairo_mask_surface, cr, surface, x, y);\n    _exit_trace ();\n}\n\nvoid\ncairo_stroke (cairo_t *cr)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"stroke\\n\");\n    DLCALL (cairo_stroke, cr);\n    _exit_trace ();\n}\n\nvoid\ncairo_stroke_preserve (cairo_t *cr)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"stroke+\\n\");\n    DLCALL (cairo_stroke_preserve, cr);\n    _exit_trace ();\n}\n\nvoid\ncairo_fill (cairo_t *cr)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"fill\\n\");\n    DLCALL (cairo_fill, cr);\n    _exit_trace ();\n}\n\nvoid\ncairo_fill_preserve (cairo_t *cr)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"fill+\\n\");\n    DLCALL (cairo_fill_preserve, cr);\n    _exit_trace ();\n}\n\nvoid\ncairo_copy_page (cairo_t *cr)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"copy-page\\n\");\n    DLCALL (cairo_copy_page, cr);\n    _exit_trace ();\n}\n\nvoid\ncairo_show_page (cairo_t *cr)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"show-page\\n\");\n    DLCALL (cairo_show_page, cr);\n    _exit_trace ();\n}\n\nvoid\ncairo_clip (cairo_t *cr)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"clip\\n\");\n    DLCALL (cairo_clip, cr);\n    _exit_trace ();\n}\n\nvoid\ncairo_clip_preserve (cairo_t *cr)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"clip+\\n\");\n    DLCALL (cairo_clip_preserve, cr);\n    _exit_trace ();\n}\n\nvoid\ncairo_reset_clip (cairo_t *cr)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"reset-clip\\n\");\n    DLCALL (cairo_reset_clip, cr);\n    _exit_trace ();\n}\n\n\nstatic const char *\n_slant_to_string (cairo_font_slant_t font_slant)\n{\n#define f(name) case CAIRO_FONT_SLANT_ ## name: return \"SLANT_\" #name\n    switch (font_slant) {\n\tf(NORMAL);\n\tf(ITALIC);\n\tf(OBLIQUE);\n    };\n#undef f\n    return \"UNKNOWN_SLANT\";\n}\n\nstatic const char *\n_weight_to_string (cairo_font_weight_t font_weight)\n{\n#define f(name) case CAIRO_FONT_WEIGHT_ ## name: return \"WEIGHT_\" #name\n    switch (font_weight) {\n\tf(NORMAL);\n\tf(BOLD);\n    };\n#undef f\n    return \"UNKNOWN_WEIGHT\";\n}\n\nvoid\ncairo_select_font_face (cairo_t *cr, const char *family, cairo_font_slant_t slant, cairo_font_weight_t weight)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    if (cr != NULL && _write_lock ()) {\n\t_emit_context (cr);\n\t_emit_string_literal (family, -1);\n\t_trace_printf (\" //%s //%s select-font-face\\n\",\n\t\t       _slant_to_string (slant),\n\t\t       _weight_to_string (weight));\n\t_write_unlock ();\n    }\n    DLCALL (cairo_select_font_face, cr, family, slant, weight);\n    _exit_trace ();\n}\n\ncairo_font_face_t *\ncairo_get_font_face (cairo_t *cr)\n{\n    cairo_font_face_t *ret;\n    long font_face_id;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_get_font_face, cr);\n    font_face_id = _create_font_face_id (ret);\n\n    _emit_cairo_op (cr, \"/font-face get %% f%ld\\n\", font_face_id);\n    _push_operand (FONT_FACE, ret);\n    dump_stack(__func__);\n\n    _exit_trace ();\n    return ret;\n}\n\nvoid\ncairo_set_font_face (cairo_t *cr, cairo_font_face_t *font_face)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    if (cr != NULL && font_face != NULL && _write_lock ()) {\n\tif (_is_current (FONT_FACE, font_face, 0) &&\n\t    _is_current (CONTEXT, cr, 1))\n\t{\n\t    _consume_operand (false);\n\t}\n\telse if (_is_current (FONT_FACE, font_face, 1) &&\n\t\t _is_current (CONTEXT, cr, 0))\n\t{\n\t    _trace_printf (\"exch \");\n\t    _exch_operands ();\n\t    _consume_operand (false);\n\t}\n\telse\n\t{\n\t    _emit_context (cr);\n\t    _emit_font_face_id (font_face);\n\t}\n\n\t_trace_printf (\"set-font-face\\n\");\n\t_write_unlock ();\n    }\n\n    DLCALL (cairo_set_font_face, cr, font_face);\n    _exit_trace ();\n}\n\nvoid\ncairo_set_font_size (cairo_t *cr, double size)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"%g set-font-size\\n\", size);\n    DLCALL (cairo_set_font_size, cr, size);\n    _exit_trace ();\n}\n\nvoid\ncairo_set_font_matrix (cairo_t *cr, const cairo_matrix_t *matrix)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_cairo_op (cr, \"%g %g %g %g %g %g matrix set-font-matrix\\n\",\n\t\t    matrix->xx, matrix->yx,\n\t\t    matrix->xy, matrix->yy,\n\t\t    matrix->x0, matrix->y0);\n    DLCALL (cairo_set_font_matrix, cr, matrix);\n    _exit_trace ();\n}\n\nstatic const char *\n_subpixel_order_to_string (cairo_subpixel_order_t subpixel_order)\n{\n#define f(name) case CAIRO_SUBPIXEL_ORDER_ ## name: return \"SUBPIXEL_ORDER_\" #name\n    switch (subpixel_order) {\n\tf(DEFAULT);\n\tf(RGB);\n\tf(BGR);\n\tf(VRGB);\n\tf(VBGR);\n    };\n#undef f\n    return \"UNKNOWN_SUBPIXEL_ORDER\";\n}\n\nstatic const char *\n_hint_style_to_string (cairo_hint_style_t hint_style)\n{\n#define f(name) case CAIRO_HINT_STYLE_ ## name: return \"HINT_STYLE_\" #name\n    switch (hint_style) {\n\tf(DEFAULT);\n\tf(NONE);\n\tf(SLIGHT);\n\tf(MEDIUM);\n\tf(FULL);\n    };\n#undef f\n    return \"UNKNOWN_HINT_STYLE\";\n}\n\nstatic const char *\n_hint_metrics_to_string (cairo_hint_metrics_t hint_metrics)\n{\n#define f(name) case CAIRO_HINT_METRICS_ ## name: return \"HINT_METRICS_\" #name\n    switch (hint_metrics) {\n\tf(DEFAULT);\n\tf(OFF);\n\tf(ON);\n    };\n#undef f\n    return \"UNKNOWN_HINT_METRICS\";\n}\n\nstatic void\n_emit_font_options (const cairo_font_options_t *options)\n{\n    cairo_antialias_t antialias;\n    cairo_subpixel_order_t subpixel_order;\n    cairo_hint_style_t hint_style;\n    cairo_hint_metrics_t hint_metrics;\n\n    _trace_printf (\"<<\");\n\n    antialias = DLCALL (cairo_font_options_get_antialias, options);\n    if (antialias != CAIRO_ANTIALIAS_DEFAULT) {\n\t_trace_printf (\" /antialias //%s\",\n\t\t       _antialias_to_string (antialias));\n    }\n\n    subpixel_order = DLCALL (cairo_font_options_get_subpixel_order, options);\n    if (subpixel_order != CAIRO_SUBPIXEL_ORDER_DEFAULT) {\n\t_trace_printf (\" /subpixel-order //%s\",\n\t\t       _subpixel_order_to_string (subpixel_order));\n    }\n\n    hint_style = DLCALL (cairo_font_options_get_hint_style, options);\n    if (hint_style != CAIRO_HINT_STYLE_DEFAULT) {\n\t_trace_printf (\" /hint-style //%s\",\n\t\t       _hint_style_to_string (hint_style));\n    }\n\n    hint_metrics = DLCALL (cairo_font_options_get_hint_metrics, options);\n    if (hint_metrics != CAIRO_HINT_METRICS_DEFAULT) {\n\t_trace_printf (\" /hint-metrics //%s\",\n\t\t       _hint_metrics_to_string (hint_metrics));\n    }\n\n    _trace_printf (\" >>\");\n}\n\nvoid\ncairo_set_font_options (cairo_t *cr, const cairo_font_options_t *options)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    if (cr != NULL && options != NULL && _write_lock ()) {\n\t_emit_context (cr);\n\t_emit_font_options (options);\n\t_trace_printf (\" set-font-options\\n\");\n\t_write_unlock ();\n    }\n\n    DLCALL (cairo_set_font_options, cr, options);\n    _exit_trace ();\n}\n\ncairo_scaled_font_t *\ncairo_get_scaled_font (cairo_t *cr)\n{\n    cairo_scaled_font_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_get_scaled_font, cr);\n\n    if (cr != NULL && ! _has_scaled_font_id (ret)) {\n\t_emit_cairo_op (cr, \"/scaled-font get /sf%ld exch def\\n\",\n\t\t\t_create_scaled_font_id (ret));\n\t_get_object (SCALED_FONT, ret)->defined = TRUE;\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\nvoid\ncairo_set_scaled_font (cairo_t *cr, const cairo_scaled_font_t *scaled_font)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    if (cr != NULL && scaled_font != NULL && _write_lock ()) {\n\tObject *obj = _get_object (SCALED_FONT, scaled_font);\n\tcairo_bool_t need_context_and_font = TRUE;\n\n\tif (_is_current (SCALED_FONT, scaled_font, 0) &&\n\t    _is_current (CONTEXT, cr, 1))\n\t{\n\t    if (obj->defined) {\n\t\t_consume_operand (false);\n\t    } else {\n\t\t_trace_printf (\"exch 1 index \");\n\t\t_exch_operands ();\n\t    }\n\t    need_context_and_font = FALSE;\n\t}\n\telse if (_is_current (SCALED_FONT, scaled_font, 1) &&\n\t\t _is_current (CONTEXT, cr, 0))\n\t{\n\t    if (obj->defined) {\n\t\t_trace_printf (\"exch \");\n\t\t_exch_operands ();\n\t\t_consume_operand (false);\n\t\tneed_context_and_font = FALSE;\n\t    }\n\t}\n\n\tif (need_context_and_font) {\n\t    _emit_context (cr);\n\t    _emit_scaled_font_id (scaled_font);\n\t}\n\n\t_trace_printf (\"set-scaled-font\\n\");\n\n\t_write_unlock ();\n    }\n    DLCALL (cairo_set_scaled_font, cr, scaled_font);\n    _exit_trace ();\n}\n\nstatic void\n_emit_matrix (const cairo_matrix_t *m)\n{\n    if (_matrix_is_identity(m))\n    {\n\t_trace_printf (\"identity\");\n    }\n    else\n    {\n\t_trace_printf (\"%g %g %g %g %g %g matrix\",\n\t\t       m->xx, m->yx,\n\t\t       m->xy, m->yy,\n\t\t       m->x0, m->y0);\n    }\n}\n\ncairo_scaled_font_t *\ncairo_scaled_font_create (cairo_font_face_t *font_face,\n\t\t\t  const cairo_matrix_t *font_matrix,\n\t\t\t  const cairo_matrix_t *ctm,\n\t\t\t  const cairo_font_options_t *options)\n{\n    cairo_scaled_font_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_scaled_font_create, font_face, font_matrix, ctm, options);\n    if (_has_scaled_font_id (ret))\n\t    goto out;\n\n    _emit_line_info ();\n    if (font_face != NULL &&\n\tfont_matrix != NULL &&\n\tctm != NULL &&\n\toptions != NULL\n\t&& _write_lock ())\n    {\n\tObject *obj;\n\n\tobj = _type_object_create (SCALED_FONT, ret);\n\tDLCALL (cairo_scaled_font_set_user_data,\n\t\tret, &destroy_key, obj, _object_undef);\n\n\tif (_pop_operands_to (FONT_FACE, font_face))\n\t    _consume_operand (false);\n\telse\n\t    _trace_printf (\"f%ld \", _get_font_face_id (font_face));\n\n\t_emit_matrix (font_matrix);\n\t_trace_printf (\" \");\n\n\t_emit_matrix (ctm);\n\t_trace_printf (\" \");\n\n\t_emit_font_options (options);\n\n\t_trace_printf (\" scaled-font /sf%ld exch def\\n\",\n\t\t       obj->token);\n\tobj->defined = TRUE;\n\n\t_write_unlock ();\n    }\n\nout:\n    _exit_trace ();\n    return ret;\n}\n\nvoid\ncairo_show_text (cairo_t *cr, const char *utf8)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    if (cr != NULL && _write_lock ()) {\n\t_emit_context (cr);\n\t_emit_string_literal (utf8, -1);\n\t_trace_printf (\" show-text\\n\");\n\t_write_unlock ();\n    }\n    DLCALL (cairo_show_text, cr, utf8);\n    _exit_trace ();\n}\n\nstatic void\n_glyph_advance (cairo_scaled_font_t *font,\n\t\tconst cairo_glyph_t *glyph,\n\t\tdouble *x, double *y)\n{\n    cairo_text_extents_t extents;\n\n    DLCALL (cairo_scaled_font_glyph_extents, font, glyph, 1, &extents);\n    *x += extents.x_advance;\n    *y += extents.y_advance;\n}\n\n#define TOLERANCE 1e-5\nstatic void\n_emit_glyphs (cairo_scaled_font_t *font,\n\t      const cairo_glyph_t *glyphs,\n\t      int num_glyphs)\n{\n    double x,y;\n    int n;\n\n    if (num_glyphs == 0) {\n\t_trace_printf (\"[]\");\n\treturn;\n    }\n\n    for (n = 0; n < num_glyphs; n++) {\n\tif (glyphs[n].index > 255)\n\t    break;\n    }\n\n    x = glyphs->x;\n    y = glyphs->y;\n    if (n < num_glyphs) { /* need full glyph range */\n\tcairo_bool_t first;\n\n\t_trace_printf (\"[%g %g [\", x, y);\n\tfirst = TRUE;\n\twhile (num_glyphs--) {\n\t    if (fabs (glyphs->x - x) > TOLERANCE ||\n\t\tfabs (glyphs->y - y) > TOLERANCE)\n\t    {\n\t\tx = glyphs->x;\n\t\ty = glyphs->y;\n\t\t_trace_printf (\"] %g %g [\", x, y);\n\t\tfirst = TRUE;\n\t    }\n\n\t    if (! first)\n\t\t_trace_printf (\" \");\n\t    _trace_printf (\"%lu\", glyphs->index);\n\t    first = FALSE;\n\n\t    _glyph_advance (font, glyphs, &x, &y);\n\t    glyphs++;\n\t}\n\t_trace_printf (\"]]\");\n    } else {\n\tstruct _data_stream stream;\n\n\tif (num_glyphs == 1) {\n\t    _trace_printf (\"[%g %g <%02lx>]\", x, y,  glyphs->index);\n\t} else {\n\t    _trace_printf (\"[%g %g <~\", x, y);\n\t    _write_base85_data_start (&stream);\n\t    while (num_glyphs--) {\n\t\tunsigned char c;\n\n\t\tif (fabs (glyphs->x - x) > TOLERANCE ||\n\t\t    fabs (glyphs->y - y) > TOLERANCE)\n\t\t{\n\t\t    x = glyphs->x;\n\t\t    y = glyphs->y;\n\t\t    _write_base85_data_end (&stream);\n\t\t    _trace_printf (\"~> %g %g <~\", x, y);\n\t\t    _write_base85_data_start (&stream);\n\t\t}\n\n\t\tc = glyphs->index;\n\t\t_write_base85_data (&stream, &c, 1);\n\n\t\t_glyph_advance (font, glyphs, &x, &y);\n\t\tglyphs++;\n\t    }\n\t    _write_base85_data_end (&stream);\n\t    _trace_printf (\"~>]\");\n\t}\n    }\n}\n\nvoid\ncairo_show_glyphs (cairo_t *cr, const cairo_glyph_t *glyphs, int num_glyphs)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    if (cr != NULL && glyphs != NULL && _write_lock ()) {\n\tcairo_scaled_font_t *font;\n\n\t_emit_context (cr);\n\tfont = DLCALL (cairo_get_scaled_font, cr);\n\n\t_emit_glyphs (font, glyphs, num_glyphs);\n\t_trace_printf (\" show-glyphs\\n\");\n\t_write_unlock ();\n    }\n\n    DLCALL (cairo_show_glyphs, cr, glyphs, num_glyphs);\n    _exit_trace ();\n}\n\nstatic const char *\n_direction_to_string (cairo_bool_t backward)\n{\n    const char *names[] = {\n\t\"FORWARD\",\n\t\"BACKWARD\"\n    };\n    return names[!!backward];\n}\n\nvoid\ncairo_show_text_glyphs (cairo_t\t\t\t   *cr,\n\t\t\tconst char\t\t   *utf8,\n\t\t\tint\t\t\t    utf8_len,\n\t\t\tconst cairo_glyph_t\t   *glyphs,\n\t\t\tint\t\t\t    num_glyphs,\n\t\t\tconst cairo_text_cluster_t *clusters,\n\t\t\tint\t\t\t    num_clusters,\n\t\t\tcairo_text_cluster_flags_t  backward)\n{\n    cairo_scaled_font_t *font;\n\n    _enter_trace ();\n\n    font = DLCALL (cairo_get_scaled_font, cr);\n\n    _emit_line_info ();\n    if (cr != NULL && glyphs != NULL && clusters != NULL && _write_lock ()) {\n\tint n;\n\n\t_emit_context (cr);\n\n\t_emit_string_literal (utf8, utf8_len);\n\n\t_emit_glyphs (font, glyphs, num_glyphs);\n\t_trace_printf (\"  [\");\n\tfor (n = 0; n < num_clusters; n++) {\n\t    _trace_printf (\" %d %d\",\n\t\t\t   clusters[n].num_bytes,\n\t\t\t   clusters[n].num_glyphs);\n\t}\n\t_trace_printf (\" ] //%s show-text-glyphs\\n\",\n\t\t       _direction_to_string (backward));\n\n\t_write_unlock ();\n    }\n\n    DLCALL (cairo_show_text_glyphs, cr,\n\t                            utf8, utf8_len,\n\t\t\t\t    glyphs, num_glyphs,\n\t\t\t\t    clusters, num_clusters,\n\t\t\t\t    backward);\n    _exit_trace ();\n}\n\nvoid\ncairo_text_path (cairo_t *cr, const char *utf8)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    if (cr != NULL && _write_lock ()) {\n\t_emit_context (cr);\n\t_emit_string_literal (utf8, -1);\n\t_trace_printf (\" text-path\\n\");\n\t_write_unlock ();\n    }\n    DLCALL (cairo_text_path, cr, utf8);\n    _exit_trace ();\n}\n\nvoid\ncairo_glyph_path (cairo_t *cr, const cairo_glyph_t *glyphs, int num_glyphs)\n{\n    cairo_scaled_font_t *font;\n\n    _enter_trace ();\n\n    font = DLCALL (cairo_get_scaled_font, cr);\n\n    _emit_line_info ();\n    if (cr != NULL && glyphs != NULL && _write_lock ()) {\n\t_emit_context (cr);\n\t_emit_glyphs (font, glyphs, num_glyphs);\n\t_trace_printf (\" glyph-path\\n\");\n\n\t_write_unlock ();\n    }\n\n    DLCALL (cairo_glyph_path, cr, glyphs, num_glyphs);\n    _exit_trace ();\n}\n\nvoid\ncairo_append_path (cairo_t *cr, const cairo_path_t *path)\n{\n    /* XXX no support for named paths, so manually reconstruct */\n    int i;\n    cairo_path_data_t *p;\n\n    _enter_trace ();\n\n    _emit_line_info ();\n    if (cr == NULL || path == NULL) {\n\tDLCALL (cairo_append_path, cr, path);\n\t_exit_trace ();\n\treturn;\n    }\n\n    for (i=0; i < path->num_data; i += path->data[i].header.length) {\n\tp = &path->data[i];\n\tswitch (p->header.type) {\n\tcase CAIRO_PATH_MOVE_TO:\n\t    if (p->header.length >= 2)\n\t\tcairo_move_to (cr, p[1].point.x, p[1].point.y);\n\t    break;\n\tcase CAIRO_PATH_LINE_TO:\n\t    if (p->header.length >= 2)\n\t\tcairo_line_to (cr, p[1].point.x, p[1].point.y);\n\t    break;\n\tcase CAIRO_PATH_CURVE_TO:\n\t    if (p->header.length >= 4)\n\t\tcairo_curve_to (cr,\n\t\t\t\tp[1].point.x, p[1].point.y,\n\t\t\t\tp[2].point.x, p[2].point.y,\n\t\t\t\tp[3].point.x, p[3].point.y);\n\t    break;\n\tcase CAIRO_PATH_CLOSE_PATH:\n\t    if (p->header.length >= 1)\n\t\tcairo_close_path (cr);\n\t    break;\n\tdefault:\n\t    break;\n\t}\n    }\n    _exit_trace ();\n}\n\ncairo_surface_t *\ncairo_image_surface_create (cairo_format_t format, int width, int height)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_image_surface_create, format, width, height);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\tconst char *format_str = _format_to_string (format);\n\tconst char *content_str = _format_to_content_string (format);\n\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /width %d set\\n\"\n\t\t       \"  /height %d set\\n\"\n\t\t       \"  /format //%s set\\n\"\n\t\t       \"  /content //%s set\\n\"\n\t\t       \"  image dup /s%ld exch def\\n\",\n\t\t       width, height, format_str, content_str, obj->token);\n\tobj->width = width;\n\tobj->height = height;\n\tobj->defined = TRUE;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\ncairo_surface_t *\ncairo_image_surface_create_for_data (unsigned char *data, cairo_format_t format, int width, int height, int stride)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_image_surface_create_for_data, data, format, width, height, stride);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t/* cairo_image_surface_create_for_data() is both used to supply\n\t * foreign pixel data to cairo and in order to read pixels back.\n\t * Defer grabbing the pixel contents until we have to, but only for\n\t * \"large\" images, for small images the overhead of embedding pixels\n\t * is negligible.\n\t *\n\t * Choose 32x32 as that captures most icons which thanks to GdkPixbuf\n\t * are frequently reloaded.\n\t */\n\tif (width * height < 32*32) {\n\t    _emit_image (ret, NULL);\n\t    _trace_printf (\" dup /s%ld exch def\\n\",\n\t\t\t   obj->token);\n\t} else {\n\t    _trace_printf (\"dict\\n\"\n\t\t\t   \"  /width %d set\\n\"\n\t\t\t   \"  /height %d set\\n\"\n\t\t\t   \"  /format //%s set\\n\"\n\t\t\t   \"  image dup /s%ld exch def\\n\",\n\t\t\t   width, height,\n\t\t\t   _format_to_string (format),\n\t\t\t   obj->token);\n\n\t    obj->foreign = TRUE;\n\t}\n\n\tobj->width  = width;\n\tobj->height = height;\n\tobj->defined = TRUE;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\nunsigned char *\ncairo_image_surface_get_data (cairo_surface_t *surface)\n{\n    unsigned char *ptr;\n\n    /* Just leave some breadcrumbs */\n    _enter_trace ();\n    _emit_line_info ();\n    if (surface != NULL && _write_lock ()) {\n\t_trace_printf (\"%% s%ld get-data\\n\", _get_surface_id (surface));\n\t_write_unlock ();\n    }\n    ptr = DLCALL (cairo_image_surface_get_data, surface);\n    _exit_trace ();\n\n    return ptr;\n}\n\ncairo_pattern_t *\ncairo_pattern_create_raster_source (void *data, cairo_content_t content, int width, int height)\n{\n    cairo_pattern_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_pattern_create_raster_source, data, content, width, height);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tlong pattern_id = _create_pattern_id (ret);\n\tcairo_format_t format;\n\tcairo_surface_t *image;\n\tcairo_t *cr;\n\n\t/* Impossible to accurately record the interaction with this custom\n\t * pattern so just suck all the data into an image upfront */\n\tswitch (content) {\n\tcase CAIRO_CONTENT_ALPHA: format = CAIRO_FORMAT_A8; break;\n\tcase CAIRO_CONTENT_COLOR: format = CAIRO_FORMAT_RGB24; break;\n\tdefault:\n\tcase CAIRO_CONTENT_COLOR_ALPHA: format = CAIRO_FORMAT_ARGB32; break;\n\t}\n\n\t_trace_printf (\"%% raster-source\\n\");\n\n\timage = DLCALL (cairo_image_surface_create, format, width, height);\n\tcr = DLCALL (cairo_create, image);\n\tDLCALL (cairo_set_source, cr, ret);\n\tDLCALL (cairo_paint, cr);\n\tDLCALL (cairo_destroy, cr);\n\n\t_emit_image (image, NULL);\n\tDLCALL (cairo_surface_destroy, image);\n\t_trace_printf (\" pattern dup /s%ld exch def\\n\",\n\t\t       pattern_id);\n\n\t_push_operand (PATTERN, ret);\n\t_get_object (PATTERN, ret)->defined = TRUE;\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\ncairo_surface_t *\ncairo_surface_create_similar (cairo_surface_t *other,\n\t\t\t      cairo_content_t content,\n\t\t\t      int width, int height)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_surface_create_similar, other, content, width, height);\n\n    _emit_line_info ();\n    if (other != NULL && _write_lock ()) {\n\tObject *other_obj = _get_object(SURFACE, other);\n\tObject *new_obj = _create_surface (ret);\n\n\tif (other_obj->operand != -1) {\n\t    if (current_stack_depth == other_obj->operand + 1)\n\t\t_trace_printf (\"dup \");\n\t    else\n\t\t_trace_printf (\"%d index \",\n\t\t\t       current_stack_depth - other_obj->operand - 1);\n\t} else {\n\t    assert(other_obj->defined);\n\t    _trace_printf (\"s%ld \", other_obj->token);\n\t}\n\n\t_trace_printf (\"%d %d //%s similar dup /s%ld exch def\\n\",\n\t\t       width, height,\n\t\t       _content_to_string (content),\n\t\t       new_obj->token);\n\n\tnew_obj->width = width;\n\tnew_obj->height = height;\n\tnew_obj->defined = TRUE;\n\n\t_push_object (new_obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\ncairo_surface_t *\ncairo_surface_create_similar_image (cairo_surface_t *other,\n\t\t\t\t    cairo_format_t format,\n\t\t\t\t    int width, int height)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_surface_create_similar_image,\n\t\t  other, format, width, height);\n\n    _emit_line_info ();\n    if (other != NULL && _write_lock ()) {\n\tObject *other_obj = _get_object(SURFACE, other);\n\tObject *new_obj = _create_surface (ret);\n\n\tif (other_obj->defined)\n\t    _trace_printf (\"s%ld \", other_obj->token);\n\telse if (current_stack_depth == other_obj->operand + 1)\n\t    _trace_printf (\"dup \");\n\telse\n\t    _trace_printf (\"%d index \",\n\t\t\t   current_stack_depth - other_obj->operand - 1);\n\t_trace_printf (\"//%s %d %d similar-image %% s%ld\\n\",\n\t\t       _format_to_string (format),\n\t\t       width, height,\n\t\t       new_obj->token);\n\tnew_obj->width = width;\n\tnew_obj->height = height;\n\n\t_push_object (new_obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\ncairo_surface_t *\ncairo_surface_map_to_image (cairo_surface_t *surface,\n\t\t\t    const cairo_rectangle_int_t *extents)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_surface_map_to_image, surface, extents);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t_emit_surface (surface);\n\tif (extents) {\n\t    _trace_printf (\"[%d %d %d %d] map-to-image %% s%ld\\n\",\n\t\t\t   extents->x, extents->y,\n\t\t\t   extents->width, extents->height,\n\t\t\t   obj->token);\n\t    obj->width  = extents->width;\n\t    obj->height = extents->height;\n\t} else {\n\t    _trace_printf (\"[ ] map-to-image %% s%ld\\n\", obj->token);\n\t}\n\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\nvoid\ncairo_surface_unmap_image (cairo_surface_t *surface,\n\t\t\t   cairo_surface_t *image)\n{\n    _enter_trace ();\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *s = _get_object (SURFACE, surface);\n\tObject *i = _get_object (SURFACE, image);\n\tif (!(s->operand == current_stack_depth - 2 &&\n\t      i->operand == current_stack_depth - 1)) {\n\t    if (i->operand != s->operand + 1 || ! _pop_operands_to_depth (i->operand + 1)) {\n\t\t_emit_surface (surface);\n\t\t_emit_surface (image);\n\t    }\n\t}\n\t_trace_printf (\"unmap-image\\n\");\n\t_consume_operand (true);\n\t_write_unlock ();\n    }\n\n    DLCALL (cairo_surface_unmap_image, surface, image);\n\n    _exit_trace ();\n}\n\ncairo_surface_t *\ncairo_surface_create_for_rectangle (cairo_surface_t *target,\n                                    double x, double y,\n                                    double width, double height)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_surface_create_for_rectangle, target, x, y, width, height);\n\n    _emit_line_info ();\n    if (target != NULL && _write_lock ()) {\n\tObject *target_obj = _get_object (SURFACE, target);\n\tObject *child_obj = _create_surface (ret);\n\n\tif (target_obj->defined)\n\t    _trace_printf (\"s%ld \", target_obj->token);\n\telse if (current_stack_depth == target_obj->operand + 1)\n\t    _trace_printf (\"dup \");\n\telse\n\t    _trace_printf (\"%d index \", current_stack_depth - target_obj->operand - 1);\n\t_trace_printf (\"%f %f %f %f subsurface %% s%ld\\n\",\n\t\t       x, y, width, height,\n\t\t       child_obj->token);\n\n\t_push_object (child_obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\nstatic void CAIRO_PRINTF_FORMAT(2, 3)\n_emit_surface_op (cairo_surface_t *surface, const char *fmt, ...)\n{\n    va_list ap;\n\n    if (surface == NULL || ! _write_lock ())\n\treturn;\n\n    _emit_surface (surface);\n\n    va_start (ap, fmt);\n    _trace_vprintf ( fmt, ap);\n    va_end (ap);\n\n    _write_unlock ();\n}\n\nvoid\ncairo_surface_finish (cairo_surface_t *surface)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    DLCALL (cairo_surface_finish, surface);\n    _exit_trace ();\n}\n\nvoid\ncairo_surface_flush (cairo_surface_t *surface)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    if (surface != NULL && _write_lock ()) {\n\t_trace_printf (\"%% s%ld flush\\n\", _get_surface_id (surface));\n\t_write_unlock ();\n    }\n    DLCALL (cairo_surface_flush, surface);\n    _exit_trace ();\n}\n\nvoid\ncairo_surface_mark_dirty (cairo_surface_t *surface)\n{\n    _enter_trace ();\n    _emit_line_info ();\n\n    /* Call cairo before emitting the trace since _emit_surface() might cause\n     * snapshots to be creates while mark_dirty assert()s that there are none.\n     */\n    DLCALL (cairo_surface_mark_dirty, surface);\n\n    if (surface != NULL && _write_lock ()) {\n\tif (_mark_dirty) {\n\t    _emit_surface (surface);\n\t    _trace_printf (\"%% mark-dirty\\n\");\n\t    _emit_source_image (surface);\n\t} else\n\t    _trace_printf (\"%% s%ld mark-dirty\\n\", _get_surface_id (surface));\n\t_write_unlock ();\n    }\n    _exit_trace ();\n}\n\nvoid\ncairo_surface_mark_dirty_rectangle (cairo_surface_t *surface,\n\t\t\t\t    int x, int y, int width, int height)\n{\n    _enter_trace ();\n\n    /* Call cairo before emitting the trace since _emit_surface() might cause\n     * snapshots to be creates while mark_dirty assert()s that there are none.\n     */\n    DLCALL (cairo_surface_mark_dirty_rectangle, surface, x, y, width, height);\n\n    _emit_line_info ();\n    if (surface != NULL && _write_lock ()) {\n\tif (_mark_dirty) {\n\t    _emit_surface (surface);\n\t    _trace_printf (\"%% %d %d %d %d mark-dirty-rectangle\\n\",\n\t\t            x, y, width, height);\n\t    _emit_source_image_rectangle (surface, x,y, width, height);\n\t} else\n\t    _trace_printf (\"%% s%ld %d %d %d %d mark-dirty-rectangle\\n\",\n\t\t           _get_surface_id (surface), x, y, width, height);\n\t_write_unlock ();\n    }\n    _exit_trace ();\n}\n\nvoid\ncairo_surface_set_device_offset (cairo_surface_t *surface, double x_offset, double y_offset)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_surface_op (surface, \"%g %g set-device-offset\\n\",\n\t\t      x_offset, y_offset);\n    DLCALL (cairo_surface_set_device_offset, surface, x_offset, y_offset);\n    _exit_trace ();\n}\n\nvoid\ncairo_surface_set_device_scale (cairo_surface_t *surface, double x_offset, double y_offset)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_surface_op (surface, \"%g %g set-device-scale\\n\",\n\t\t      x_offset, y_offset);\n    DLCALL (cairo_surface_set_device_scale, surface, x_offset, y_offset);\n    _exit_trace ();\n}\n\n\nvoid\ncairo_surface_set_fallback_resolution (cairo_surface_t *surface, double x_pixels_per_inch, double y_pixels_per_inch)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_surface_op (surface, \"%g %g set-fallback-resolution\\n\",\n\t\t      x_pixels_per_inch, y_pixels_per_inch);\n    DLCALL (cairo_surface_set_fallback_resolution, surface, x_pixels_per_inch, y_pixels_per_inch);\n    _exit_trace ();\n}\n\nvoid\ncairo_surface_copy_page (cairo_surface_t *surface)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_surface_op (surface, \"copy-page\\n\");\n    DLCALL (cairo_surface_copy_page, surface);\n    _exit_trace ();\n}\n\nvoid\ncairo_surface_show_page (cairo_surface_t *surface)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_surface_op (surface, \"show-page\\n\");\n    DLCALL (cairo_surface_show_page, surface);\n    _exit_trace ();\n}\n\ncairo_status_t\ncairo_surface_set_mime_data (cairo_surface_t\t\t*surface,\n                             const char\t\t\t*mime_type,\n                             const unsigned char\t*data,\n                             unsigned long\t\t length,\n\t\t\t     cairo_destroy_func_t\t destroy,\n\t\t\t     void\t\t\t*closure)\n{\n    cairo_status_t ret;\n    _enter_trace ();\n    _emit_line_info ();\n    if (surface != NULL && _write_lock ()) {\n\t_emit_surface (surface);\n\t_emit_string_literal (mime_type, -1);\n\t_trace_printf (\" \");\n\t_emit_data (data, length);\n\t_trace_printf (\" /deflate filter set-mime-data\\n\");\n\n\t_write_unlock ();\n    }\n\n    ret = DLCALL (cairo_surface_set_mime_data,\n\t\t  surface,\n\t\t  mime_type,\n\t\t  data, length,\n\t\t  destroy,\n\t\t  closure);\n    _exit_trace ();\n    return ret;\n}\n\n#if CAIRO_HAS_PNG_FUNCTIONS\ncairo_status_t\ncairo_surface_write_to_png (cairo_surface_t *surface, const char *filename)\n{\n    cairo_status_t ret;\n    _enter_trace ();\n    _emit_line_info ();\n    if (surface != NULL && _write_lock ()) {\n\t_trace_printf (\"%% s%ld \", _get_surface_id (surface));\n\t_emit_string_literal (filename, -1);\n\t_trace_printf (\" write-to-png pop\\n\");\n\t_write_unlock ();\n    }\n    ret = DLCALL (cairo_surface_write_to_png, surface, filename);\n    _exit_trace ();\n    return ret;\n}\n\ncairo_status_t\ncairo_surface_write_to_png_stream (cairo_surface_t *surface,\n\t\t\t\t   cairo_write_func_t write_func,\n\t\t\t\t   void *data)\n{\n    cairo_status_t ret;\n    _enter_trace ();\n    _emit_line_info ();\n    if (surface != NULL && _write_lock ()) {\n\tchar symbol[1024];\n\n\t_trace_printf (\"%% s%ld \", _get_surface_id (surface));\n#if CAIRO_HAS_SYMBOL_LOOKUP\n\tlookup_symbol (symbol, sizeof (symbol), write_func);\n#else\n\tsymbol[0] = '\\0';\n#endif\n\t_emit_string_literal (symbol, -1);\n\t_trace_printf (\" write-to-png-stream pop\\n\");\n\t_write_unlock ();\n    }\n    ret = DLCALL (cairo_surface_write_to_png_stream,\n\t\t  surface, write_func, data);\n    _exit_trace ();\n    return ret;\n}\n#endif\n\nstatic void CAIRO_PRINTF_FORMAT(2, 3)\n_emit_pattern_op (cairo_pattern_t *pattern, const char *fmt, ...)\n{\n    va_list ap;\n\n    if (pattern == NULL || ! _write_lock ())\n\treturn;\n\n    _emit_pattern (pattern);\n\n    va_start (ap, fmt);\n    _trace_vprintf (fmt, ap);\n    va_end (ap);\n\n    _write_unlock ();\n}\n\ncairo_pattern_t *\ncairo_pattern_create_rgb (double red, double green, double blue)\n{\n    cairo_pattern_t *ret;\n    long pattern_id;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_pattern_create_rgb, red, green, blue);\n    pattern_id = _create_pattern_id (ret);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\t_trace_printf (\"/p%ld %g %g %g rgb def\\n\",\n\t\t       pattern_id, red, green, blue);\n\t_get_object (PATTERN, ret)->defined = TRUE;\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\ncairo_pattern_t *\ncairo_pattern_create_rgba (double red, double green, double blue, double alpha)\n{\n    cairo_pattern_t *ret;\n    long pattern_id;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_pattern_create_rgba, red, green, blue, alpha);\n    pattern_id = _create_pattern_id (ret);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\t_trace_printf (\"/p%ld %g %g %g %g rgba def\\n\",\n\t\t       pattern_id, red, green, blue, alpha);\n\t_get_object (PATTERN, ret)->defined = TRUE;\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\ncairo_pattern_t *\ncairo_pattern_create_for_surface (cairo_surface_t *surface)\n{\n    cairo_pattern_t *ret;\n    long pattern_id;\n    long surface_id;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_pattern_create_for_surface, surface);\n    pattern_id = _create_pattern_id (ret);\n\n    _emit_line_info ();\n    if (surface != NULL && _write_lock ()) {\n\tsurface_id = _get_surface_id (surface);\n\n\tif (_pop_operands_to (SURFACE, surface)) {\n\t    _consume_operand (false);\n\t} else {\n\t    _trace_printf (\"s%ld \", surface_id);\n\t}\n\n\tif (_get_object (SURFACE, surface)->foreign)\n\t    _emit_source_image (surface);\n\n\t_trace_printf (\"pattern %% p%ld\\n\", pattern_id);\n\t_push_operand (PATTERN, ret);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\ncairo_pattern_t *\ncairo_pattern_create_linear (double x0, double y0, double x1, double y1)\n{\n    cairo_pattern_t *ret;\n    long pattern_id;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_pattern_create_linear, x0, y0, x1, y1);\n    pattern_id = _create_pattern_id (ret);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\t_trace_printf (\"%g %g %g %g linear %% p%ld\\n\",\n\t\t       x0, y0, x1, y1, pattern_id);\n\t_push_operand (PATTERN, ret);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\ncairo_pattern_t *\ncairo_pattern_create_radial (double cx0, double cy0, double radius0, double cx1, double cy1, double radius1)\n{\n    cairo_pattern_t *ret;\n    long pattern_id;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_pattern_create_radial,\n\t\t  cx0, cy0, radius0,\n\t\t  cx1, cy1, radius1);\n    pattern_id = _create_pattern_id (ret);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\t_trace_printf (\"%g %g %g %g %g %g radial %% p%ld\\n\",\n\t\t       cx0, cy0, radius0, cx1, cy1, radius1,\n\t\t       pattern_id);\n\t_push_operand (PATTERN, ret);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\nvoid\ncairo_pattern_add_color_stop_rgb (cairo_pattern_t *pattern, double offset, double red, double green, double blue)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_pattern_op (pattern,\n\t\t      \"%g %g %g %g 1 add-color-stop\\n\",\n\t\t      offset, red, green, blue);\n    DLCALL (cairo_pattern_add_color_stop_rgb, pattern, offset, red, green, blue);\n    _exit_trace ();\n}\n\nvoid\ncairo_pattern_add_color_stop_rgba (cairo_pattern_t *pattern, double offset, double red, double green, double blue, double alpha)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_pattern_op (pattern,\n\t\t      \"%g %g %g %g %g add-color-stop\\n\",\n\t\t      offset, red, green, blue, alpha);\n    DLCALL (cairo_pattern_add_color_stop_rgba, pattern, offset, red, green, blue, alpha);\n    _exit_trace ();\n}\n\nvoid\ncairo_pattern_set_matrix (cairo_pattern_t *pattern, const cairo_matrix_t *matrix)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    if (_matrix_is_identity (matrix)) {\n\t_emit_pattern_op (pattern, \"identity set-matrix\\n\");\n    } else {\n\t_emit_pattern_op (pattern,\n\t\t\t  \"%g %g %g %g %g %g matrix set-matrix\\n\",\n\t\t\t  matrix->xx, matrix->yx,\n\t\t\t  matrix->xy, matrix->yy,\n\t\t\t  matrix->x0, matrix->y0);\n    }\n    DLCALL (cairo_pattern_set_matrix, pattern, matrix);\n    _exit_trace ();\n}\n\nstatic const char *\n_filter_to_string (cairo_filter_t filter)\n{\n#define f(name) case CAIRO_FILTER_ ## name: return \"FILTER_\" #name\n    switch (filter) {\n\tf(FAST);\n\tf(GOOD);\n\tf(BEST);\n\tf(NEAREST);\n\tf(BILINEAR);\n\tf(GAUSSIAN);\n    };\n#undef f\n    return \"UNKNOWN_FILTER\";\n}\n\nvoid\ncairo_pattern_set_filter (cairo_pattern_t *pattern, cairo_filter_t filter)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_pattern_op (pattern, \"//%s set-filter\\n\", _filter_to_string (filter));\n    DLCALL (cairo_pattern_set_filter, pattern, filter);\n    _exit_trace ();\n}\n\nstatic const char *\n_extend_to_string (cairo_extend_t extend)\n{\n#define f(name) case CAIRO_EXTEND_ ## name: return \"EXTEND_\" #name\n    switch (extend) {\n\tf(NONE);\n\tf(REPEAT);\n\tf(REFLECT);\n\tf(PAD);\n    };\n#undef f\n    return \"UNKNOWN_EXTEND\";\n}\n\nvoid\ncairo_pattern_set_extend (cairo_pattern_t *pattern, cairo_extend_t extend)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    _emit_pattern_op (pattern, \"//%s set-extend\\n\", _extend_to_string (extend));\n    DLCALL (cairo_pattern_set_extend, pattern, extend);\n    _exit_trace ();\n}\n\n#if CAIRO_HAS_FT_FONT\n#if CAIRO_HAS_FC_FONT\ncairo_font_face_t *\ncairo_ft_font_face_create_for_pattern (FcPattern *pattern)\n{\n    cairo_font_face_t *ret;\n    long font_face_id;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_ft_font_face_create_for_pattern, pattern);\n    font_face_id = _create_font_face_id (ret);\n\n    _emit_line_info ();\n    if (pattern != NULL && _write_lock ()) {\n\tObject *obj;\n\n\tobj = _get_object (FONT_FACE, ret);\n\tif (obj->unknown) {\n\t\tFcPattern *copy;\n\t\tFcChar8 *unparsed;\n\n\t\tcopy = DLCALL (FcPatternDuplicate, pattern);\n\t\tif (copy)\n\t\t{\n\t\t\tDLCALL (FcPatternDel, copy, FC_LANG);\n\t\t\tDLCALL (FcPatternDel, copy, FC_CHARSET);\n\t\t\tDLCALL (FcPatternDel, copy, FC_CAPABILITY);\n\t\t}\n\t\telse\n\t\t\tcopy = pattern;\n\n\t\tunparsed = DLCALL (FcNameUnparse, copy);\n\t\t_trace_printf (\"dict\\n\"\n\t\t\t       \"  /type 42 set\\n\"\n\t\t\t       \"  /pattern \");\n\t\t_emit_string_literal ((char *) unparsed, -1);\n\t\t_trace_printf (\" set\\n\"\n\t\t\t       \"  font %% f%ld\\n\",\n\t\t\t       font_face_id);\n\t\tobj->unknown = FALSE;\n\t\t_push_operand (FONT_FACE, ret);\n\t\tdump_stack(__func__);\n\n\t\tif (copy != pattern)\n\t\t\tDLCALL (FcPatternDestroy, copy);\n\t\tfree (unparsed);\n\t}\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n#endif /* CAIRO_HAS_FC_FONT*/\n\ntypedef struct _ft_face_data {\n    unsigned long index;\n    unsigned long size;\n    void *data;\n} FtFaceData;\n\nstatic void\n_ft_face_data_destroy (void *arg)\n{\n    FtFaceData *data = arg;\n    free (data->data);\n    free (data);\n}\n\ncairo_font_face_t *\ncairo_ft_font_face_create_for_ft_face (FT_Face face, int load_flags)\n{\n    cairo_font_face_t *ret;\n    Object *obj;\n    FtFaceData *data;\n    long font_face_id;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_ft_font_face_create_for_ft_face, face, load_flags);\n    font_face_id = _create_font_face_id (ret);\n\n    if (face == NULL) {\n\t_exit_trace ();\n\treturn ret;\n    }\n\n    obj = _get_object (NONE, face);\n    data = obj->data;\n    if (data == NULL) {\n\t_exit_trace ();\n\treturn ret;\n    }\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tobj = _get_object (FONT_FACE, ret);\n\tif (obj->operand != -1)\n\t    _object_remove (obj);\n\n\t_trace_printf (\"<< /type 42 /source \");\n\t_emit_data (data->data, data->size);\n\t_trace_printf (\" /index %lu /flags %d >> font %% f%ld\\n\",\n\t\t       data->index, load_flags, font_face_id);\n\t_push_operand (FONT_FACE, ret);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\nstatic cairo_bool_t\n_ft_read_file (FtFaceData *data, const char *path)\n{\n    char buf[8192];\n    FILE *file;\n\n    file = fopen (path, \"rb\");\n    if (file != NULL) {\n\tsize_t ret;\n\tunsigned long int allocated = sizeof (buf);\n\tdata->data = malloc (allocated);\n\tdo {\n\t    ret = fread (buf, 1, sizeof (buf), file);\n\t    if (ret == 0)\n\t\tbreak;\n\t    memcpy ((char *) data->data + data->size, buf, ret);\n\t    data->size += ret;\n\t    if (ret != sizeof (buf))\n\t\tbreak;\n\n\t    if (data->size == allocated) {\n\t\tallocated *= 2;\n\t\tdata->data = realloc (data->data, allocated);\n\t    }\n\t} while (TRUE);\n\tfclose (file);\n    }\n\n    return file != NULL;\n}\n\nFT_Error\nFT_New_Face (FT_Library library, const char *pathname, FT_Long index, FT_Face *face)\n{\n    FT_Error ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (FT_New_Face, library, pathname, index, face);\n    if (ret == 0) {\n\tObject *obj = _type_object_create (NONE, *face);\n\tFtFaceData *data = malloc (sizeof (FtFaceData));\n\tdata->index = index;\n\tdata->size = 0;\n\tdata->data = NULL;\n\t_ft_read_file (data, pathname);\n\tobj->data = data;\n\tobj->destroy = _ft_face_data_destroy;\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\nFT_Error\nFT_New_Memory_Face (FT_Library library, const FT_Byte *mem, FT_Long size, FT_Long index, FT_Face *face)\n{\n    FT_Error ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (FT_New_Memory_Face, library, mem, size, index, face);\n    if (ret == 0) {\n\tObject *obj = _type_object_create (NONE, *face);\n\tFtFaceData *data = malloc (sizeof (FtFaceData));\n\tdata->index = index;\n\tdata->size = size;\n\tdata->data = malloc (size);\n\tmemcpy (data->data, mem, size);\n\tobj->data = data;\n\tobj->destroy = _ft_face_data_destroy;\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\n/* XXX\n * FT_New_Memory_Face() and FT_New_Face() appear to wrap FT_Open_Face() so we\n * get a redundant call to FT_Open_Face() from those paths (no PLT hiding\n * within FT, naughty library!) but we do not intercept a direct call to\n * FT_Open_Face(). So far this has not caused any issues, but it will one\n * day...\n */\nFT_Error\nFT_Open_Face (FT_Library library, const FT_Open_Args *args, FT_Long index, FT_Face *face)\n{\n    FT_Error ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (FT_Open_Face, library, args, index, face);\n    if (ret == 0) {\n\tObject *obj = _get_object (NONE, *face);\n\tif (obj == NULL) {\n\t    FtFaceData *data;\n\n\t    data = malloc (sizeof (FtFaceData));\n\t    data->index = index;\n\t    if (args->flags & FT_OPEN_MEMORY) {\n\t\tdata->size = args->memory_size;\n\t\tdata->data = malloc (args->memory_size);\n\t\tmemcpy (data->data, args->memory_base, args->memory_size);\n\t    } else if (args->flags & FT_OPEN_STREAM) {\n\t\tfprintf (stderr, \"FT_Open_Face (stream, %ld) = %p\\n\",\n\t\t\t index, *face);\n\t\tabort ();\n\t    } else if (args->flags & FT_OPEN_PATHNAME) {\n\t\tdata->size = 0;\n\t\tdata->data = NULL;\n\t\t_ft_read_file (data, args->pathname);\n\t    }\n\n\t    obj = _type_object_create (NONE, *face);\n\t    obj->data = data;\n\t    obj->destroy = _ft_face_data_destroy;\n\t}\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\nFT_Error\nFT_Done_Face (FT_Face face)\n{\n    FT_Error ret;\n    _enter_trace ();\n\n    _object_destroy (_get_object (NONE, face));\n\n    ret = DLCALL (FT_Done_Face, face);\n    _exit_trace ();\n    return ret;\n}\n#endif\n\nstatic void\n_surface_object_set_size (cairo_surface_t *surface, int width, int height)\n{\n    Object *obj;\n\n    obj = _get_object (SURFACE, surface);\n    obj->width = width;\n    obj->height = height;\n}\n\nstatic void\n_surface_object_set_size_from_surface (cairo_surface_t *surface)\n{\n    _surface_object_set_size (surface,\n\t\t\t      DLCALL (cairo_image_surface_get_width, surface),\n\t\t\t      DLCALL (cairo_image_surface_get_height, surface));\n}\n\n#if CAIRO_HAS_PS_SURFACE\n#include<cairo-ps.h>\n\ncairo_surface_t *\ncairo_ps_surface_create (const char *filename, double width_in_points, double height_in_points)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_ps_surface_create, filename, width_in_points, height_in_points);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /type /PS set\\n\"\n\t\t       \"  /filename \");\n\t_emit_string_literal (filename, -1);\n\t_trace_printf (\" set\\n\"\n\t\t       \"  /width %g set\\n\"\n\t\t       \"  /height %g set\\n\"\n\t\t       \"  surface %% s%ld\\n\",\n\t\t       width_in_points,\n\t\t       height_in_points,\n\t\t       obj->token);\n\tobj->width = width_in_points;\n\tobj->height = height_in_points;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\ncairo_surface_t *\ncairo_ps_surface_create_for_stream (cairo_write_func_t write_func, void *closure, double width_in_points, double height_in_points)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_ps_surface_create_for_stream, write_func, closure, width_in_points, height_in_points);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /type /PS set\\n\"\n\t\t       \"  /width %g set\\n\"\n\t\t       \"  /height %g set\\n\"\n\t\t       \"  surface %% s%ld\\n\",\n\t\t       width_in_points,\n\t\t       height_in_points,\n\t\t       obj->token);\n\tobj->width = width_in_points;\n\tobj->height = height_in_points;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\nvoid\ncairo_ps_surface_set_size (cairo_surface_t *surface, double width_in_points, double height_in_points)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    DLCALL (cairo_ps_surface_set_size, surface, width_in_points, height_in_points);\n    _exit_trace ();\n}\n\n#endif\n\n#if CAIRO_HAS_PDF_SURFACE\n#include <cairo-pdf.h>\n\ncairo_surface_t *\ncairo_pdf_surface_create (const char *filename, double width_in_points, double height_in_points)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_pdf_surface_create, filename, width_in_points, height_in_points);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /type /PDF set\\n\"\n\t\t       \"  /filename \");\n\t_emit_string_literal (filename, -1);\n\t_trace_printf (\" set\\n\"\n\t\t       \"  /width %g set\\n\"\n\t\t       \"  /height %g set\\n\"\n\t\t       \"  surface %% s%ld\\n\",\n\t\t       width_in_points,\n\t\t       height_in_points,\n\t\t       obj->token);\n\tobj->width = width_in_points;\n\tobj->height = height_in_points;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\ncairo_surface_t *\ncairo_pdf_surface_create_for_stream (cairo_write_func_t write_func, void *closure, double width_in_points, double height_in_points)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_pdf_surface_create_for_stream, write_func, closure, width_in_points, height_in_points);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /type /PDF set\\n\"\n\t\t       \"  /width %g set\\n\"\n\t\t       \"  /height %g set\\n\"\n\t\t       \"  surface %% s%ld\\n\",\n\t\t       width_in_points,\n\t\t       height_in_points,\n\t\t       obj->token);\n\tobj->width = width_in_points;\n\tobj->height = height_in_points;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n    _exit_trace ();\n    return ret;\n}\n\nvoid\ncairo_pdf_surface_set_size (cairo_surface_t *surface, double width_in_points, double height_in_points)\n{\n    _enter_trace ();\n    _emit_line_info ();\n    DLCALL (cairo_pdf_surface_set_size, surface, width_in_points, height_in_points);\n    _exit_trace ();\n}\n#endif\n\n#if CAIRO_HAS_SVG_SURFACE\n#include <cairo-svg.h>\n\ncairo_surface_t *\ncairo_svg_surface_create (const char *filename, double width, double height)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_svg_surface_create, filename, width, height);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /type /SVG set\\n\"\n\t\t       \"  /filename \");\n\t_emit_string_literal (filename, -1);\n\t_trace_printf (\" set\\n\"\n\t\t       \"  /width %g set\\n\"\n\t\t       \"  /height %g set\\n\"\n\t\t       \"  surface %% s%ld\\n\",\n\t\t       width,\n\t\t       height,\n\t\t       obj->token);\n\tobj->width = width;\n\tobj->height = height;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\ncairo_surface_t *\ncairo_svg_surface_create_for_stream (cairo_write_func_t write_func, void *closure, double width, double height)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_svg_surface_create_for_stream, write_func, closure, width, height);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /type /SVG set\\n\"\n\t\t       \"  /width %g set\\n\"\n\t\t       \"  /height %g set\\n\"\n\t\t       \"  surface %% s%ld\\n\",\n\t\t       width,\n\t\t       height,\n\t\t       obj->token);\n\tobj->width = width;\n\tobj->height = height;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\n#endif\n\n#if CAIRO_HAS_PNG_FUNCTIONS\ncairo_surface_t *\ncairo_image_surface_create_from_png (const char *filename)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_image_surface_create_from_png, filename);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\tchar filename_string[4096];\n\n\t_encode_string_literal (filename_string, sizeof (filename_string),\n\t\t\t\tfilename, -1);\n\t_emit_image (ret, \"  /filename %s set\\n\", filename_string);\n\t_trace_printf (\" dup /s%ld exch def\\n\", obj->token);\n\t_surface_object_set_size_from_surface (ret);\n\tobj->defined = TRUE;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\ncairo_surface_t *\ncairo_image_surface_create_from_png_stream (cairo_read_func_t read_func, void *closure)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_image_surface_create_from_png_stream, read_func, closure);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t_emit_image (ret, NULL);\n\t_trace_printf (\" dup /s%ld exch def\\n\",\n\t\t       obj->token);\n\n\t_surface_object_set_size_from_surface (ret);\n\tobj->defined = TRUE;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n#endif\n\nstatic const char *\n_content_from_surface (cairo_surface_t *surface)\n{\n    return _content_to_string (DLCALL (cairo_surface_get_content, surface));\n}\n\n#if CAIRO_HAS_TEE_SURFACE\n#include <cairo-tee.h>\n\ncairo_surface_t *\ncairo_tee_surface_create (cairo_surface_t *master)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_tee_surface_create, master);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /type /tee set\\n\"\n\t\t       \"  /master s%ld set\\n\"\n\t\t       \"  surface dup /s%ld exch def\\n\",\n\t\t       _get_object (SURFACE, master)->token,\n\t\t       obj->token);\n\tobj->defined = TRUE;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\n#endif\n\n#if CAIRO_HAS_XLIB_SURFACE\n#include <cairo-xlib.h>\n\ncairo_surface_t *\ncairo_xlib_surface_create (Display *dpy,\n\t\t\t   Drawable drawable,\n\t\t\t   Visual *visual,\n\t\t\t   int width, int height)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_xlib_surface_create,\n\t          dpy, drawable, visual, width, height);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /type /xlib set\\n\"\n\t\t       \"  /drawable 16!%lx set\\n\"\n\t\t       \"  /content //%s set\\n\"\n\t\t       \"  /width %d set\\n\"\n\t\t       \"  /height %d set\\n\"\n\t\t       \"  surface dup /s%ld exch def\\n\",\n\t\t       drawable,\n\t\t       _content_from_surface (ret),\n\t\t       width, height,\n\t\t       obj->token);\n\tobj->defined = TRUE;\n\tobj->width = width;\n\tobj->height = height;\n\tobj->foreign = TRUE;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\ncairo_surface_t *\ncairo_xlib_surface_create_for_bitmap (Display *dpy,\n\t\t\t\t      Pixmap bitmap,\n\t\t\t\t      Screen *screen,\n\t\t\t\t      int width, int height)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_xlib_surface_create_for_bitmap,\n\t          dpy, bitmap, screen, width, height);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /type /xlib set\\n\"\n\t\t       \"  /drawable 16!%lx set\\n\"\n\t\t       \"  /content //%s set\\n\"\n\t\t       \"  /width %d set\\n\"\n\t\t       \"  /height %d set\\n\"\n\t\t       \"  /depth 1 set\\n\"\n\t\t       \"  surface dup /s%ld exch def\\n\",\n\t\t       bitmap,\n\t\t       _content_from_surface (ret),\n\t\t       width, height,\n\t\t       obj->token);\n\tobj->defined = TRUE;\n\tobj->width = width;\n\tobj->height = height;\n\tobj->foreign = TRUE;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\n#if CAIRO_HAS_XLIB_XRENDER_SURFACE\n#include <cairo-xlib-xrender.h>\ncairo_surface_t *\ncairo_xlib_surface_create_with_xrender_format (Display *dpy,\n\t\t\t\t\t       Drawable drawable,\n\t\t\t\t\t       Screen *screen,\n\t\t\t\t\t       XRenderPictFormat *format,\n\t\t\t\t\t       int width, int height)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_xlib_surface_create_with_xrender_format,\n\t          dpy, drawable, screen, format, width, height);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /type /xrender set\\n\"\n\t\t       \"  /drawable 16!%lx set\\n\"\n\t\t       \"  /content //%s set\\n\"\n\t\t       \"  /width %d set\\n\"\n\t\t       \"  /height %d set\\n\"\n\t\t       \"  /depth %d set\\n\"\n\t\t       \"  surface dup /s%ld exch def\\n\",\n\t\t       drawable,\n\t\t       _content_from_surface (ret),\n\t\t       width, height,\n\t\t       format->depth,\n\t\t       obj->token);\n\tobj->defined = TRUE;\n\tobj->width = width;\n\tobj->height = height;\n\tobj->foreign = TRUE;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n#endif\n#endif\n\n#if CAIRO_HAS_SCRIPT_SURFACE\n#include <cairo-script.h>\ncairo_surface_t *\ncairo_script_surface_create (cairo_device_t *device,\n\t\t\t     cairo_content_t content,\n\t\t\t     double width,\n\t\t\t     double height)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_script_surface_create, device, content, width, height);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /type /script set\\n\"\n\t\t       \"  /content %s set\\n\"\n\t\t       \"  /width %g set\\n\"\n\t\t       \"  /height %g set\\n\"\n\t\t       \"  surface dup /s%ld exch def\\n\",\n\t\t       _content_to_string (content),\n\t\t       width, height,\n\t\t       obj->token);\n\tobj->width = width;\n\tobj->height = height;\n\tobj->defined = TRUE;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\ncairo_surface_t *\ncairo_script_surface_create_for_target (cairo_device_t *device,\n\t\t\t\t\tcairo_surface_t *target)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_script_surface_create_for_target, device, target);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /type /script set\\n\"\n\t\t       \"  surface dup /s%ld exch def\\n\",\n\t\t       obj->token);\n\tobj->defined = TRUE;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n#endif\n\n#if CAIRO_HAS_TEST_SURFACES\n#include <test-paginated-surface.h>\ncairo_surface_t *\n_cairo_test_paginated_surface_create (cairo_surface_t *surface)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (_cairo_test_paginated_surface_create, surface);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t/* XXX store initial data? */\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /type /test-paginated set\\n\"\n\t\t       \"  /target s%ld set\\n\"\n\t\t       \"  surface dup /s%ld exch def\\n\",\n\t\t       _get_surface_id (surface),\n\t\t       obj->token);\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\n#include <test-compositor-surface.h>\n\ncairo_surface_t *\n_cairo_test_fallback_compositor_surface_create (cairo_content_t content, int width, int height)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (_cairo_test_fallback_compositor_surface_create, content, width, height);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /type /test-fallback-compositor set\\n\"\n\t\t       \"  /content //%s set\\n\"\n\t\t       \"  /width %d set\\n\"\n\t\t       \"  /height %d set\\n\"\n\t\t       \"  surface dup /s%ld exch def\\n\",\n\t\t       _content_to_string (content),\n\t\t       width, height,\n\t\t       obj->token);\n\tobj->defined = TRUE;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\ncairo_surface_t *\n_cairo_test_mask_compositor_surface_create (cairo_content_t content, int width, int height)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (_cairo_test_mask_compositor_surface_create, content, width, height);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /type /test-mask-compositor set\\n\"\n\t\t       \"  /content //%s set\\n\"\n\t\t       \"  /width %d set\\n\"\n\t\t       \"  /height %d set\\n\"\n\t\t       \"  surface dup /s%ld exch def\\n\",\n\t\t       _content_to_string (content),\n\t\t       width, height,\n\t\t       obj->token);\n\tobj->defined = TRUE;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\ncairo_surface_t *\n_cairo_test_spans_compositor_surface_create (cairo_content_t content, int width, int height)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (_cairo_test_spans_compositor_surface_create, content, width, height);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /type /test-spans-compositor set\\n\"\n\t\t       \"  /content //%s set\\n\"\n\t\t       \"  /width %d set\\n\"\n\t\t       \"  /height %d set\\n\"\n\t\t       \"  surface dup /s%ld exch def\\n\",\n\t\t       _content_to_string (content),\n\t\t       width, height,\n\t\t       obj->token);\n\tobj->defined = TRUE;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\ncairo_surface_t *\n_cairo_test_traps_compositor_surface_create (cairo_content_t content, int width, int height)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (_cairo_test_traps_compositor_surface_create, content, width, height);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /type /test-traps-compositor set\\n\"\n\t\t       \"  /content //%s set\\n\"\n\t\t       \"  /width %d set\\n\"\n\t\t       \"  /height %d set\\n\"\n\t\t       \"  surface dup /s%ld exch def\\n\",\n\t\t       _content_to_string (content),\n\t\t       width, height,\n\t\t       obj->token);\n\tobj->defined = TRUE;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\n#endif\n\ncairo_surface_t *\ncairo_recording_surface_create (cairo_content_t content,\n\t\t\t\tconst cairo_rectangle_t *extents)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_recording_surface_create, content, extents);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\tif (extents) {\n\t    _trace_printf (\"//%s [ %f %f %f %f ] record dup /s%ld exch def\\n\",\n\t\t\t   _content_to_string (content),\n\t\t\t   extents->x, extents->y,\n\t\t\t   extents->width, extents->height,\n\t\t\t   obj->token);\n\t    obj->width = extents->width;\n\t    obj->height = extents->height;\n\t} else {\n\t    _trace_printf (\"//%s [ ] record dup /s%ld exch def\\n\",\n\t\t\t   _content_to_string (content),\n\t\t\t   obj->token);\n\t}\n\tobj->defined = TRUE;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\n#if CAIRO_HAS_VG_SURFACE\n#include <cairo-vg.h>\ncairo_surface_t *\ncairo_vg_surface_create (cairo_vg_context_t *context,\n\t\t\t cairo_content_t content,\n\t\t\t int width, int height)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_vg_surface_create, context, content, width, height);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /type /vg set\\n\"\n\t\t       \"  /content //%s set\\n\"\n\t\t       \"  /width %d set\\n\"\n\t\t       \"  /height %d set\\n\"\n\t\t       \"  surface dup /s%ld exch def\\n\",\n\t\t       _content_to_string (content),\n\t\t       width, height,\n\t\t       obj->token);\n\tobj->width = width;\n\tobj->height = height;\n\tobj->defined = TRUE;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\ncairo_surface_t *\ncairo_vg_surface_create_for_image (cairo_vg_context_t *context,\n\t\t\t\t   VGImage image,\n\t\t\t\t   VGImageFormat format,\n\t\t\t\t   int width, int height)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_vg_surface_create_for_image,\n\t\t  context, image, format, width, height);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\tcairo_content_t content;\n\n\tcontent = DLCALL (cairo_surface_get_content, ret);\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /type /vg set\\n\"\n\t\t       \"  /content //%s set\\n\"\n\t\t       \"  /width %d set\\n\"\n\t\t       \"  /height %d set\\n\"\n\t\t       \"  surface dup /s%ld exch def\\n\",\n\t\t       _content_to_string (content),\n\t\t       width, height,\n\t\t       obj->token);\n\tobj->width = width;\n\tobj->height = height;\n\tobj->defined = TRUE;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n#endif\n\n#if CAIRO_HAS_GL_SURFACE || CAIRO_HAS_GLESV2_SURFACE\n#include <cairo-gl.h>\ncairo_surface_t *\ncairo_gl_surface_create (cairo_device_t\t\t*abstract_device,\n\t\t\t cairo_content_t\t content,\n\t\t\t int\t\t\t width,\n\t\t\t int\t\t\t height)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_gl_surface_create, abstract_device, content, width, height);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /type /gl set\\n\"\n\t\t       \"  /content //%s set\\n\"\n\t\t       \"  /width %d set\\n\"\n\t\t       \"  /height %d set\\n\"\n\t\t       \"  surface dup /s%ld exch def\\n\",\n\t\t       _content_to_string (content),\n\t\t       width, height,\n\t\t       obj->token);\n\tobj->width = width;\n\tobj->height = height;\n\tobj->defined = TRUE;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\ncairo_surface_t *\ncairo_gl_surface_create_for_texture (cairo_device_t\t*abstract_device,\n\t\t\t\t     cairo_content_t\t content,\n\t\t\t\t     unsigned int\t tex,\n\t\t\t\t     int\t\t width,\n\t\t\t\t     int\t\t height)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_gl_surface_create_for_texture, abstract_device, content, tex, width, height);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /type /gl set\\n\"\n\t\t       \"  /content //%s set\\n\"\n\t\t       \"  /width %d set\\n\"\n\t\t       \"  /height %d set\\n\"\n\t\t       \"  surface dup /s%ld exch def\\n\",\n\t\t       _content_to_string (content),\n\t\t       width, height,\n\t\t       obj->token);\n\tobj->width = width;\n\tobj->height = height;\n\tobj->defined = TRUE;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n\n#if CAIRO_HAS_GLX_FUNCTIONS\ncairo_surface_t *\ncairo_gl_surface_create_for_window (cairo_device_t *device,\n\t\t\t\t    Window win,\n\t\t\t\t    int width, int height)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_gl_surface_create_for_window, device, win, width, height);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /type /gl set\\n\"\n\t\t       \"  /width %d set\\n\"\n\t\t       \"  /height %d set\\n\"\n\t\t       \"  surface dup /s%ld exch def\\n\",\n\t\t       width, height,\n\t\t       obj->token);\n\tobj->width = width;\n\tobj->height = height;\n\tobj->defined = TRUE;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n#endif\n\n#if CAIRO_HAS_WGL_FUNCTIONS\ncairo_surface_t *\ncairo_gl_surface_create_for_dc (cairo_device_t\t\t*device,\n\t\t\t\tHDC\t\t\t dc,\n\t\t\t\tint\t\t\t width,\n\t\t\t\tint\t\t\t height)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_gl_surface_create_for_dc, device, dc, width, height);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /type /gl set\\n\"\n\t\t       \"  /width %d set\\n\"\n\t\t       \"  /height %d set\\n\"\n\t\t       \"  surface dup /s%ld exch def\\n\",\n\t\t       width, height,\n\t\t       obj->token);\n\tobj->width = width;\n\tobj->height = height;\n\tobj->defined = TRUE;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n#endif\n\n#if CAIRO_HAS_EGL_FUNCTIONS\ncairo_surface_t *\ncairo_gl_surface_create_for_egl (cairo_device_t\t*device,\n\t\t\t\t EGLSurface\t egl,\n\t\t\t\t int\t\t width,\n\t\t\t\t int\t\t height)\n{\n    cairo_surface_t *ret;\n\n    _enter_trace ();\n\n    ret = DLCALL (cairo_gl_surface_create_for_egl, device, egl, width, height);\n\n    _emit_line_info ();\n    if (_write_lock ()) {\n\tObject *obj = _create_surface (ret);\n\n\t_trace_printf (\"dict\\n\"\n\t\t       \"  /type /gl set\\n\"\n\t\t       \"  /width %d set\\n\"\n\t\t       \"  /height %d set\\n\"\n\t\t       \"  surface dup /s%ld exch def\\n\",\n\t\t       width, height,\n\t\t       obj->token);\n\tobj->width = width;\n\tobj->height = height;\n\tobj->defined = TRUE;\n\t_push_object (obj);\n\tdump_stack(__func__);\n\t_write_unlock ();\n    }\n\n    _exit_trace ();\n    return ret;\n}\n#endif\n#endif\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/ChangeLog.pre-1.0",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/src/cairo-quartz-image.h",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/src/cairo-quartz.h",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/src/cairo-vg.h",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/src/skia/cairo-skia-surface.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/romedalen.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/scarab.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/6x13.pcf",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/romedalen.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/jp2.jp2",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/jpeg.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/png.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-image.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-mask.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/show-glyphs-advance.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-fill.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-source.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-alpha.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-pad-border.svg.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-source.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/negative-stride-image.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback-resolution.ppi576x72.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-source-alpha.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-mixed.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/self-copy-overlap.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-similar.script.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcomposite-projection.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-and-stroke.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/overlapping-glyphs.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-extend-repeat.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-mixed-antialias.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-stroke.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-vertical-layout-type3.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pdf-surface-source.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-pad-similar.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-rule.pdf.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/source-surface-scale-paint.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dashed-rectangle.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/device-offset-fractional.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-group-shapes-unaligned-rectangles.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-push-group.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-self-intersecting.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-large-overlap-rotated.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-alpha.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dashed-stroke.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-vrgb.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-large.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke-unbounded.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-text.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-outer-focus.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-reflect.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/miter-precision.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/long-lines.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-reflect.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-scale.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pthread-show-text.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/finer-grained-fallbacks.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/show-glyphs-many.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-coverage-reference.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/large-source.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-gray.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-around-source.ps3.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-vrgb.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-complex-shape-eo-aa.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-image-mask.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-rotate.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-extend-pad.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recordflip-paint-alpha-solid-clip.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/overlapping-glyphs.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins-curve.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill.ps.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-rescale.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-pad.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-disjoint-hatching.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-disjoint.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-step-function.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha-solid-clip.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-vertical-layout-type3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/huge-radial.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/source-clip-scale.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-text.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/new-sub-path.ps3.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-twice.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-paint-alpha-clip.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-text.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-complex-shape-eo-mono.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dashed-stroke.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-polygon.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-below-source.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-rule.ps3.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/device-offset-fractional.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-mask.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-alpha.svg12.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-over.svg.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotate-image-surface-paint.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-fast-95.image16.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint-alpha-clip.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/self-intersecting.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/source-clip-scale.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-source-alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pattern-getters.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-down.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-image.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-similar.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-sample.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-pen.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/create-from-png.indexed-alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-operator.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-clip-text-top.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pattern-getters.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-step-function.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-none.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-disjoint.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-unbounded.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-paint-alpha-solid-clip.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/world-map-fill.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-zero-length.ps3.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pthread-show-text.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins-curve.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-image-sample.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-similar.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-select-font-face.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-clip-text-right.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-zero-length.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.test-traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-dash-scale-unaligned.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-rule.ps2.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-paint.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/inverted-clip.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-scale.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/egl-surface-source.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-down.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-image.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/halo-transform.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-extents.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-dash.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-paint-alpha-clip.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-path.quartz.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-curve.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-curve-to.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotated-clip.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/overlapping-glyphs.pdf.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback-resolution.ppi72x144.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/finer-grained-fallbacks.ps2.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap-flipped.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-large-overlap.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern-conical.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a8-clear.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-tiger.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-line.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-vertical-layout-type3.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-repeat-similar.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotate-image-surface-paint.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-clip-fill-equal.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-missed-stop.ps3.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/gradient-alpha.ps3.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-alpha-alpha.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-operator.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-ctm-caps.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/filter-nearest-offset.svg.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/gl-surface-source.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/device-offset-fractional.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/close-path-current-point.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-show-glyphs-table.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-gray.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotate-image-surface-paint.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-1.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-outer-focus.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-repeat.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/miter-precision.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcb-huge-subimage.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recordflip-whole-paint-alpha-solid-clip.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-scale.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clipped-surface.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins-loop.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-contexts.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-coverage-three-quarter-reference.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-caps-joins.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-bilinear-95.script.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/source-surface-scale-paint.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-coverage-overlap-three-quarter-triangles.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a8-clear.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke-unbounded.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-fill.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-pattern.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-vertical-layout-type3.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-eo.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-uniform.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-extents.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-below-source.svg12.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/coverage-intersecting-triangles.image.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback-resolution.ppi144x72.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-bug.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-glyphs.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-xlib-window.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/push-group.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pthread-show-text.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-over.pdf.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-self-intersecting.image16.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-vertical-layout-type1.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-mask.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-modify-child.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-alpha-pattern.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-fill.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint-alpha-clip-mask.base.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-transform.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-little-triangle.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/arc-direction.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/filter-nearest-offset.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-operator.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/path-stroke-twice.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern.ps.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-ctm.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-group-shapes-unaligned-rectangles.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-empty-box.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-arcs.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-down.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-arc.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/shape-general-convex.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unbounded-operator.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bitmap-font.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-image-mask.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/zero-mask.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-curve-to.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-paint.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins-loop.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-paint.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-missed-stop.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unaligned-box.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-below-source.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/hatchings.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-ctm-caps.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-and-stroke-alpha.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-extend-pad.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-solid.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator.svg12.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-tails-curve.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/gradient-zero-stops-mask.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/world-map-stroke.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-stroke.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins-loop.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-and-stroke.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-rectilinear-grid.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/quartz-surface-source.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/skew-extreme.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-mask.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-group-shapes-circles.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-infinite-loop.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/push-group.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/raster-source.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/self-intersecting.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-below-source.svg12.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint-alpha-clip.image16.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-over.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke-unbounded.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-show-glyphs-positioning.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/overlapping-dash-caps.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/source-clip-scale.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-nesting.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unaligned-box.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask.pdf.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-solid-alpha.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-source-surface-paint.svg.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clear-source.ps.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-subset.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-transformed-image.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-twice.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-intersect.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-operator.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pdf-isolated-group.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-reflect-similar.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-miter-limit.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-clip-fill-mono.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/inverse-text.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-mask.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/gradient-constant-alpha.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pass-through.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-show-glyphs-positioning.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-xlib-fallback.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/huge-radial.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-group-shapes-circles.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-glyph-range.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-zero-length.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/self-copy.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-coverage-rectangles.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-paint.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-one-stop.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-text-transform.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-vertical-layout-type1.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-and-stroke-alpha-add.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-similar.pdf.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-over.ps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-disjoint-quad.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-transformed-image.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/finer-grained-fallbacks.ps2.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-all.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/alpha-similar.ps.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-mask.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/overlapping-boxes.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-dash.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern.quartz.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-pattern.ps2.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-extend.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.xcb-window.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-large.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-glyphs.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap-rotated.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-glyph-range.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotated-clip.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-select-font-face.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/finer-grained-fallbacks.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-mixed-antialias.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-pattern.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern-fold.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/api-special-cases.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/self-copy-overlap.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-grid.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-path.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-large-overlap-flipped.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xlib-expose-event.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/world-map.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/copy-path.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-uniform.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-device-offset.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-nearest-95.image16.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recordflip-select-font-face.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/long-dashed-lines.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/show-text-current-point.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-eo-unbounded.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint-alpha-clip-mask.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-source.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-scale.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-clip-fill-aa.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/filter-nearest-transformed.svg.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-disjoint-hatching.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recordflip-self-intersecting.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-twice-rectangle.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/svg-surface-source.svg12.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.test-base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clipped-group.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xlib-expose-event.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-paint.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins-retrace.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-curve-to.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-bo-ricotz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-similar.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/world-map-stroke.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-coverage-overlap-half-triangles.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-select-font-face.image16.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-operator.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-missed-stop.pdf.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/coverage-row-triangles.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback.image16.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rel-path.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-pad-similar.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-tiger.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-none.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-twice.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-fast-95.svg11.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-show-glyphs-table.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/implicit-close.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rounded-rectangle-stroke.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bilevel-image.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcb-snapshot-assert.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-line.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/svg-surface-source.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pdf-isolated-group.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-missed-stop.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-show-glyphs-table.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-mask.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-pattern.ps3.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-nearest-95.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/filter-bilinear-extents.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-line-width.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-state.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern-control-points.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-seams.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-bilinear-95.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-alpha-pattern.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-rel-curve-to.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-fill-alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-none.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-push-group.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-polygon.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint-alpha.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/long-dashed-lines.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-alpha-pattern.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint-alpha-clip.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/show-glyphs-advance.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-image.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-nearest-95.svg11.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-one-stop.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback-resolution.ppi72x576.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/push-group.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-trap.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-empty-save.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/nil-surface.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/drunkard-tails.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-clip-fill-rule.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/image-surface-source.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-group-shapes-aligned-rectangles.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback-resolution.ppi144x72.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/group-unaligned.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-good-95.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/composite-integer-translate-source.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator.svg12.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-self-intersecting.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-rotate-image-surface-paint.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-group-shapes-circles.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-big-scale-down.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-transformed-similar.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-fast-96.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint-alpha-solid-clip.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/copy-path.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-dash.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-self-intersecting.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-40410.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-rgb.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-clip-text-bottom.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-large-overlap-offset.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-reflect.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask.pdf.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/large-twin-antialias-mixed.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcb-snapshot-assert.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/filter-nearest-transformed.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-alpha.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/curve-to-as-line-to.ps.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-bug.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-eo-unbounded.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-rgb.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-clear.svg12.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/composite-integer-translate-over-repeat.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/halo.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-nz-unbounded.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-ctm-caps.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-similar.xlib-fallback.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/copy-path.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/move-to-show-surface.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rounded-rectangle-fill.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/image-surface-source.svg12.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-image.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-source.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-clear.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-tolerance.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-tails-curve.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/push-group-path-offset.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-mask-source.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.xlib-render-0_0.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-self-intersecting.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-up.quartz.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-up.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/alpha-similar.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-clear.ps2.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-none.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/culled-glyphs.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-twice.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/huge-linear.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-mixed.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-fill-alpha.base.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/show-glyphs-advance.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pdf-isolated-group.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.xcb-render-0_0.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/filter-bilinear-extents.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/create-from-png.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-below-source.ps2.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-select-font-face.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/source-clip-scale.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-twice.ps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/nil-surface.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-rectilinear.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rgb24-ignore-alpha.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/overlapping-dash-caps.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-coverage-three-quarter-reference.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/implicit-close.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/shape-sierpinski.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-rescale.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/select-font-face.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/quartz-surface-source.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-fill-alpha.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/gradient-zero-stops.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a8-mask.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-text-transform.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-push-group.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-transformed-xlib.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-curves-eo.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-show-glyphs-table.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke-no-op.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-arc.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-vrgb.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clear-source.pdf.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-alpha.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-rule.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/show-glyphs-many.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-offset.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/gradient-zero-stops-mask.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-eo-unbounded.svg12.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-miter-limit.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-sub-paths.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-caps-joins.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-rgb.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-scale.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-sub-paths.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xlib-expose-event.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-pad.svg.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcomposite-projection.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/reflected-stroke.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-paint-alpha.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-arc.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-rectilinear.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-curve.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-operator.pdf.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-nesting.ps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-around-source.svg12.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/close-path.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-below-source.ps2.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-step-function.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/create-from-png.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/negative-stride-image.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-clip-text-right.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-paint-alpha-clip-mask.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint-alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-similar.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-large-overlap-offset.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-pad-similar.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/path-stroke-twice.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-subset.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/composite-integer-translate-over-repeat.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-around-source.svg12.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/shape-sierpinski.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/skew-extreme.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/filter-bilinear-extents.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ps-surface-source.svg12.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-similar.pdf.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap-offset.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-xlib-window.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/copy-disjoint.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-and-stroke.ps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-sub-paths.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-tiger.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-alpha-pattern.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-extend-none.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-source-surface-paint.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-extend-reflect.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-operator.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pdf-surface-source.svg12.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-down.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/select-font-face.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback-resolution.ppi72x288.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-extend-repeat.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-shape.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-clip-stroke.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unbounded-operator.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/image-surface-source.svg12.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/get-group-target.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-mask.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/white-in-noop.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-text.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-mask.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-reflect-similar.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xlib-expose-event.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-paint.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/reflected-stroke.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-repeat.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/gradient-alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clear.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-reflect.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/gradient-constant-alpha.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/halo.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-paint-alpha-clip.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback-resolution.ppi576x576.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins-star.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-image.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/overlapping-dash-caps.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-bgr.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-40410.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rounded-rectangle-stroke.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/curve-to-as-line-to.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotate-clip.surface-paint.image.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/self-copy-overlap.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/create-from-png.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-text-transform.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-rotate.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-fill.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-similar.gl.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/shape-sierpinski.pdf.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-caps-joins.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-mask-sample.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/miter-precision.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-over.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/reflected-stroke.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-pattern.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-rule.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha-clip-mask.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-and-stroke-alpha-add.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-degenerate-sort-order.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-degenerate-sort-order.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap-dashed.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/filter-nearest-transformed.quartz.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-disjoint.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/overlapping-dash-caps.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/reflected-stroke.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins-05.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/skew-extreme.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dash.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap-rotated.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-repeat.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/large-twin-antialias-mixed.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-above-source.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-fill-alpha.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins-alpha.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-source-alpha.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-vertical-layout-type3.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-line.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-down-extend-repeat.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/coverage-triangles.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-show-glyphs-table.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcomposite-projection.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcb-surface-source.ps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-extend-reflect.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pthread-show-text.xlib-fallback.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-down-extend-pad.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-extend-repeat.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-miter-limit.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-outer-focus.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-alpha.svg12.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback-resolution.ppi72x144.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/arc-looping-dash.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/glyph-cache-pressure.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/reflected-stroke.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-paint-alpha-solid-clip.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-extend.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-vrgb.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-mask.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-grid.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clipped-group.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/negative-stride-image.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha-clip.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/filter-nearest-offset.pdf.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mime-data.script.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-ctm-caps.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/finer-grained-fallbacks.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-source.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-40410.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-paint-alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bitmap-font.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-alpha.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-reflect-similar.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-path.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-extents.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-xlib-fallback.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-disjoint.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-twice.test-paginated.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/halo.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-subpixel.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-proxy.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/self-intersecting.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-eo-unbounded.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-show-glyphs-positioning.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-and-stroke-alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-coverage-three-quarter-reference.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-rgb.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-surface-ctm.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-paint-alpha-clip-mask.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-clip-stroke.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-alpha.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pthread-show-text.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/image-surface-source.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-curves-nz.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-sample.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint-alpha-solid-clip.image16.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/map-all-to-image.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/get-group-target.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-subset.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-zero-length.ps2.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/world-map.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unaligned-box.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern-control-points.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rel-path.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-grid.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-vertical-layout-type3.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint-alpha-clip-mask.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unbounded-operator.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unbounded-operator.gl.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins-alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotate-clip-image-surface-paint.xlib-fallback.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mime-data.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/path-append.xlib-fallback.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pthread-show-text.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-clip.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xlib-surface-source.ps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint-alpha-solid-clip.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-clip.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-over.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pthread-same-source.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-subset.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/tighten-bounds.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-source.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-rescale.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/halo.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-solid-dash.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-tolerance.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-group-shapes-circles.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins-alpha.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-pad-border.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/simple-edge.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-nonzero.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unantialiased-shapes.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-source.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/push-group.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unbounded-operator.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recordflip-whole-text-transform.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-push-group.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins-2.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/source-clip-scale.recording.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/device-offset-fractional.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-nz-unbounded.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-degenerate-sort-order.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/map-all-to-xlib.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-clear.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/group-clip.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-extend-pad.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-outside-target.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/new-sub-path.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/close-path.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/halo.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/source-clip-scale.ps2.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/move-to-show-surface.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-twice.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clear.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins-alpha.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/transforms.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-vertical-layout-type1.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-extend.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-dash.quartz.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-ctm-caps.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-image-repeat.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-state.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback-resolution.ppi144x144.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-paint-alpha-clip-mask.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stride-12-xlib-fallback.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-arc.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recordflip-whole-paint-alpha-clip.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-below-source.ps3.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-mask.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-nz-unbounded.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-text-transform.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-paint-alpha-clip.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/path-append.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-text.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/self-copy-overlap.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rounded-rectangle-fill.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/image-bug-710072-unaligned.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-modify-parent.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins-curve.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/gradient-zero-stops.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-select-font-face.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-large-overlap-flopped.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-unbounded.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/self-copy-overlap.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-offset-negative.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-alpha-alpha.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/overlapping-boxes.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-xlib-window.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/world-map.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-clip-text-left.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-gray.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-select-font-face.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-tails-curve.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-vbgr.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dash.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/close-path.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-and-stroke.ps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/finer-grained-fallbacks.ps3.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-source.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/filter-nearest-offset.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-similar.xlib.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-repeat-similar.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-text-transform.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-alpha.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-rescale.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unaligned-box.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-image.script.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/inverse-text.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-05.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/composite-integer-translate-source.svg12.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-group-shapes-unaligned-rectangles.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-sub-paths.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/filter-bilinear-extents.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha-solid-clip.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-vrgb.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha-clip-mask.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-between-source.svg12.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-bgr.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-scale.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-none.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins-curve.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/group-unaligned.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-group-shapes-circles.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dashed-stroke.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-stroke.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-state.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mime-data.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-mask-sample.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-seams.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-shape.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap-flopped.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-source.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/push-group-color.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-05.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-nesting.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/huge-linear.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha-clip-mask.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-little-triangle.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/self-intersecting.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-one-stop.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-xlib-fallback.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/spline-decomposition.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-curves-eo.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap-dashed.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcb-stress-cache.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/coverage-column-triangles.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/filter-nearest-offset.gl.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-nz-unbounded.svg12.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unbounded-operator.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint-alpha.image16.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/world-map-stroke.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-dash.quartz.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-above-source.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern-transformed.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rounded-rectangle-fill.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-pad-similar.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/skew-extreme.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/new-sub-path.pdf.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/tighten-bounds.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recordflip-paint-alpha-clip-mask.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-state.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-contexts.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-show-glyphs-table.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/coverage-intersecting-triangles.xlib.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-disjoint-hatching.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-bo-rectangular.ps.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-fill-alpha.base.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/show-glyphs-many.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rel-path.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-nonzero.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xlib-expose-event.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/trap-clip.ps2.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-bug.quartz.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-shape.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-caps-joins.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-reflect-similar.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/horizontal-clip.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/arc-infinite-loop.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-modify-parent.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-extend-repeat.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/composite-integer-translate-over-repeat.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-nearest-96.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel.base.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/show-text-current-point.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clipped-group.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-twice.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-group-shapes-unaligned-rectangles.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/skew-extreme.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-clip-fill.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.xcb.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-text.xlib-fallback.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-show-glyphs-table.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pass-through.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/create-from-png.alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-line-width.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-fill.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-reflect.pdf.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-stroke.quartz.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/group-unaligned.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/group-unaligned.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-image.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-eo-unbounded.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/coverage-rhombus.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-self-intersecting.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-large-overlap-flopped.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/tighten-bounds.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/new-sub-path.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-fill-alpha.base.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/aliasing.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-text-transform.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-alpha.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-curves-nz.xlib-fallback.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-pad-border.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-mixed.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-transform.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unantialiased-shapes.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-clip-text-top.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-text.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/device-offset-scale.svg.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-proxy.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotate-image-surface-paint.svg.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/large-font.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/halo.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint-alpha-solid-clip.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-solid.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-group-shapes-aligned-rectangles.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-rasterisation-rectangles.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unbounded-operator.pdf.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/world-map-stroke.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-transform.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-curves-nz.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-up.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/large-clip.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-select-font-face.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-clip-text-left.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap-flopped.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-alpha-alpha.pdf.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-image-mask.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-alpha.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/select-font-face.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/sample-diagonal.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mime-data.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rel-path.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.test-spans.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-reflect-similar.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/composite-integer-translate-over.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-tolerance.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xlib-surface-source.svg12.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-polygon.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-twice.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-subpixel.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/push-group-color.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-curve-to.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-path.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-missed-stop.ps3.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-down.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-little-triangle.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rounded-rectangle-stroke.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint-alpha-clip-mask.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/overlapping-boxes.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-zero-length.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-modify-child.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-paint-alpha.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins-05.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-ctm-caps.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcb-huge-image-shm.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-curve-to.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback-resolution.ppi288x288.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-transformed-similar.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-repeat.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recordflip-paint-alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-pad-similar.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a8-clear.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/tighten-bounds.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/device-offset-fractional.pdf.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dashed-rectangle.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-down-extend-pad.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-operator.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/group-paint.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-disjoint.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/culled-glyphs.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/alpha-similar.svg.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-fill-alpha.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-pen.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/aliasing.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/create-from-png.gray.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-little-box.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rel-path.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-image.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-above-source.ps2.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-vertical-layout-type1.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-tails-curve.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-large-overlap.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-reflect.pdf.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xlib-surface-source.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-path.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/culled-glyphs.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/overlapping-glyphs.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/trap-clip.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pdf-surface-source.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-group-shapes-unaligned-rectangles.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pthread-similar.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-mixed.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/hatchings.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-up.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-text.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-nesting.test-paginated.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/zero-mask.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/show-glyphs-advance.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/infinite-join.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-alpha-alpha.ps.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/curve-to-as-line-to.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins-1.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-repeat-similar.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-show-glyphs-positioning.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask.pdf.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-solid-alpha.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-image.xlib-fallback.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-between-source.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/large-font.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/coverage-row-triangles.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/create-from-png.indexed.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-nonzero.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/push-group.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-over.pdf.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-empty.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clear.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-reflect.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-clip.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-disjoint.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pthread-show-text.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins-2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotate-clip-image-surface-paint.xlib-window.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-down-extend-reflect.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectangle-rounding-error.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-eo.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint-alpha-clip.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-above-source.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/large-source-roi.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-text.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-alpha.ps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/map-bit-to-xlib-fallback.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clipped-group.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-xlib.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/create-from-png.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rounded-rectangle-stroke.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/drunkard-tails.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-vertical-layout-type3.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-disjoint-quad.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-fill.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-extend-none.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-none.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-bilinear-24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-fill.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/push-group-color.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/egl-surface-source.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-rule.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/inverse-text.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/self-copy.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-none-similar.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/trap-clip.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-solid-alpha.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-coverage-half-reference.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-zero-length.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-rescale.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/device-offset.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-traps-sample.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-transform.pdf.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-transformed-xlib-fallback.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-similar-repeat.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/push-group-color.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-source.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint-alpha-clip.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-extend.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-group-shapes-circles.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-solid.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset.image.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha-clip.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-select-font-face.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-rel-curve-to.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/egl-surface-source.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pdf-surface-source.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-fill.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-clear.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unbounded-operator.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-around-source.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-empty.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-paint-alpha-clip-mask.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern.svg.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcb-huge-image-shm.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-big-scale-down.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-subpixel.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/overlapping-glyphs.pdf.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotated-clip.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/shape-general-convex.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-transformed-image.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-eo-unbounded.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-path.ps.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-disjoint.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-infinite-loop.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins-alpha.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-arc.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-curves-eo.xlib-fallback.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/image-bug-710072-unaligned.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-image.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/huge-linear.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-large-overlap-dashed.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/composite-integer-translate-source.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-fill-alpha.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-operator.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clipped-surface.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/alpha-similar.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-mask-source.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-curves-nz.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-unbounded.pdf.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-image.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-extend.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bilevel-xlib-window.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-group-shapes-circles.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/halo.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-transformed-similar.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/trap-clip.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-bug.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-extend-reflect.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/long-lines.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/path-append.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-extend-none.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-none-similar.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-curves-eo.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/filter-bilinear-extents.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-bgr.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-image.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-image.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/select-font-face.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-gray.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-operator.pdf.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-paint.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-antialias-none.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/glyph-cache-pressure.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/large-source.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-extend.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha-clip-mask.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins-star.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern-conical.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask.script.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-reflect-similar.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-rule.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/transforms.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/map-all-to-image.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/infinite-join.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/path-append.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke.ps.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-source.xlib-fallback.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rel-path.ps3.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/solid-pattern-cache-stress.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/checkerboard.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-shape.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/image-bug-710072-unaligned.xlib-window.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-image-repeat.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-all.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/zero-mask.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-show-glyphs-table.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/image-bug-710072-aligned.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-scale.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-dash.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-source-cu.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap-rotated.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-image-mask.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clear-source.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-rule.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-xlib.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-reflect.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-image.pdf.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/move-to-show-surface.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-image.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/gradient-constant-alpha.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-rotate.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-pattern.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-line-width.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-rule.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-curve-to.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-empty-triangle.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-step-function.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-disjoint-hatching.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-rectilinear.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-subpixel.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-nesting.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-eo.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/font-matrix-translation.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-rule.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stride-12-image.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-mask-source.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/gl-surface-source.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-gray.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/coverage-rhombus.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/tiger.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dashed-rectangle.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pattern-getters.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins-loop.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-twice.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/curve-to-as-line-to.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-degenerate-sort-order.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-mask.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcb-stress-cache.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-rotate.xlib-fallback.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-repeat.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/self-intersecting.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/show-text-current-point.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-alpha.svg.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/source-clip-scale.ps3.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unclosed-strokes.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcb-snapshot-assert.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-shape.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/close-path-current-point.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-push-group.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap-dashed.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-large-overlap-dashed.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clear-source.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/large-font.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-curve-to.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-around-source.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-paint-alpha-clip-mask.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins-retrace.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-around-source.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-nz-unbounded.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/halo-transform.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/api-special-cases.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-similar.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke.image.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-self-intersecting.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pthread-show-text.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/spline-decomposition.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/filter-nearest-transformed.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/culled-glyphs.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/device-offset-scale.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-nz-unbounded.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback-resolution.ppi288x288.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/composite-integer-translate-over.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-mesh.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/spline-decomposition.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/image-bug-710072-unaligned.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/close-path.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/alpha-similar.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-alpha.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-large-overlap-dashed.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-clip-paint.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-operator.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dash.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-arc.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/arc-looping-dash.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcomposite-projection.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-zero-length.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcomposite-projection.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-tiger.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-large-overlap-dashed.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/finer-grained-fallbacks.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-rasterisation-triangles.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/source-clip.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-select-font-face.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-extend-none.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/long-dashed-lines.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-image.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotate-clip.surface-paint.image.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-glyph-range.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill.image.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-offset-negative.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-extend-reflect.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/drunkard-tails.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-twice-rectangle.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/drunkard-tails.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap-offset.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotate-image-surface-paint.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/trap-clip.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-large-overlap-flipped.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/coverage-triangles.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-rotate-image-surface-paint.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/tiger.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-unbounded.pdf.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/overlapping-dash-caps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/font-matrix-translation.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-rule.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-proxy.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern-overlap.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-vrgb.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/coverage-triangles.xlib.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/device-offset-scale.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-transformed-image.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-polygons.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/implicit-close.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-clip-fill-mono.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-and-stroke-alpha.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-open-box.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/create-from-png-stream.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-mixed-antialias.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-tolerance.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/raster-source.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-down-extend-pad.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-rotate.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-source.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bilevel-xlib.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-rule-pixel-aligned.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-none.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-shape.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/trap-clip.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins-retrace.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xlib-surface-source.ps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-rule.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-repeat-similar.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-pad.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-gray.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-eo.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/large-clip.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-operator.pdf.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-pad-border.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-tails-curve.xcb.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-text-transform.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-glyphs.gl.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/self-copy.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/long-dashed-lines.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clear.svg12.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-mask.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-alpha.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-pad-similar.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-operator.ps2.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-seams.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback-resolution.ppi72x72.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint-alpha-clip-mask.image16.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-linear-gradient.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mime-data.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-pad.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-spline.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-solid-alpha.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-fill-alpha.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-pad-similar.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-transform.pdf.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-source.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-polygon.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-little-triangle.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-mask-source.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-rel-curve-to.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-text-transform.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-group-shapes-circles.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-none-similar.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/coverage-column-triangles.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-alpha-pattern.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-arc.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-clip.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins-star.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-offset.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/checkerboard.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-group-shapes-circles.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-shape.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-alpha-mask.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-clip-fill-rule.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-rotate.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/close-path.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-between-source.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins-curve.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-curves-eo.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ps-surface-source.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-select-font-face.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-rotate.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-similar.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-infinite-loop.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-trap.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/hatchings.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/finer-grained-fallbacks.svg12.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-nesting.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/coverage-intersecting-quads.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-none.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-curves-eo.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-clip-fill-aa.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/composite-integer-translate-source.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-source-surface-paint.pdf.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-subset.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-rule.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke-unbounded.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-complex-bug61592.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill.xlib-fallback.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-nearest-95.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/world-map-stroke.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-shape.xlib-fallback.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/font-matrix-translation.ps3.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/map-to-image-fill.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-operator.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/long-dashed-lines.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-alpha.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-extend-reflect.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern.pdf.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-xlib-window.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dashed-rectangle.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/gradient-alpha.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-bo-rectangular.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-around-source.ps2.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/nil-surface.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-dash.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill.image.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-clip-text-top.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-fast-95.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-source-alpha.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-clip-fill.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-pad-border.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/finer-grained-fallbacks.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins-retrace.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xlib-surface-source.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-antialias-none.ps2.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotate-stroke-box.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback-resolution.ppi288x72.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/self-copy.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-transform.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clear-source.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.test-fallback.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-line.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-disjoint-hatching.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/white-in-noop.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/transforms.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/transforms.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/push-group-path-offset.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-rel-curve-to.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-down.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-rotate.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-offset-negative.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-ctm.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-arcs.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-paint.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/spline-decomposition.quartz.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mime-data.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/map-all-to-image.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/curve-to-as-line-to.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-scale.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a8-clear.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pdf-surface-source.svg12.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unbounded-operator.ps2.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke-unbounded.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-transformed-xlib-window.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern-accuracy.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/font-matrix-translation.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/close-path-current-point.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-operator.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-dash.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-source-alpha.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/hatchings.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-source-surface-paint.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/path-stroke-twice.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-over.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback-resolution.ppi72x576.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-between-source.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/trap-clip.ps3.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recordflip-whole-select-font-face.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.test-mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-rel-curve-to.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-pattern.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-eo-unbounded.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-text-transform.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-caps-joins.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/path-append.test-fallback.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unclosed-strokes.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-nesting.ps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-state.quartz.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/map-bit-to-xlib-window.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/push-group-color.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-rule.ps2.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-seams.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-step-function.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-84115.xlib.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-mask.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/checkerboard.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/long-dashed-lines.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/solid-pattern-cache-stress.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-nesting.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/trap-clip.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-image-repeat.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-and-stroke.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clipped-group.xlib-fallback.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-transformed-similar.recording.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-ctm-caps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-subpixel.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/huge-radial.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-empty.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-clip-fill-equal.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-state.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-curves-eo.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-curves-nz.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/large-source-roi.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-subpixel.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-paint-alpha-clip-mask.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/skew-extreme.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rgb24-ignore-alpha.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rounded-rectangle-fill.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-one-stop.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-good-95.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotate-image-surface-paint.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-caps-joins.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-pad.quartz.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/svg-surface-source.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-select-font-face.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-nesting.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap-dashed.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-none.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/font-matrix-translation.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/map-bit-to-image.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-ctm-caps.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clipped-surface.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-coverage-half-reference.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset.image.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-image.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ps-surface-source.svg12.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-repeat.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern-fold.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern-transformed.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/huge-radial.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-paint-alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-big-scale-down.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-miter-limit.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-repeat-similar.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/filter-nearest-offset.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-contexts.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-polygon.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/shape-general-convex.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-line.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.xcb-fallback.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-rotate.ps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-operator.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-disjoint-hatching.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-rotate.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/inverted-clip.base.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-paint-alpha-clip-mask.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/push-group.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-text.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-and-stroke.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/select-font-face.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-text.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/gradient-constant-alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-alpha-pattern.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-subset.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-scale.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-image-repeat.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-large-overlap-flipped.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/composite-integer-translate-source.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/finer-grained-fallbacks.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/zero-alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-seams.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/push-group-color.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-40410.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-down.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-rasterisation-triangles.quartz.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/alpha-similar.pdf.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-twice.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-similar.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-transformed-similar.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-eo-unbounded.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern-transformed.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dashed-stroke.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/path-append.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/create-from-png.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-paint-alpha-solid-clip.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-good-24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-missed-stop.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unantialiased-shapes.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-source-cu.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-operator.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-over.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/svg-surface-source.svg12.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-fast-95.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-text-transform.image16.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/map-to-image-fill.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-coverage-half-triangles.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-above-source.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-text.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-down-extend-reflect.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-alpha.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcb-surface-source.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-rectilinear.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-polygons.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-rule.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-clear.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-around-source.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha-clip.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern-overlap.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/overlapping-glyphs.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-good-95.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-alpha-mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-paint.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/glyph-cache-pressure.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-curve.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-and-stroke-alpha-add.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-source.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-rotate-image-surface-paint.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/inverted-clip.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-radial-gradient.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dash.ps2.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-bgr.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unbounded-operator.gl.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-xlib-fallback.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-vbgr.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend.svg12.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recordflip-text-transform.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/new-sub-path.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-large-overlap-dashed.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-down-source-surface-paint.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-fast-95.svg12.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-select-font-face.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-glyph-range.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/large-twin-antialias-mixed.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/sample-vertical.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-pattern.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/gradient-alpha.ps2.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/get-group-target.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-alpha.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-gray.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/device-offset-positive.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-pad-similar.svg.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/glyph-cache-pressure.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-curves-nz.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotate-clip-image-surface-paint.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap-dashed.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha-clip.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/arc-looping-dash.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-seams.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/world-map-fill.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/map-all-to-xlib-fallback.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-alpha-mask.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-intersect.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-clear.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/world-map-fill.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-fill-alpha.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-fill.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-proxy.pdf.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/halo-transform.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-alpha-alpha.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/huge-linear.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-coverage-intersecting-triangles.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-reflect.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-clip.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/new-sub-path.ps2.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-twice-rectangle.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/finer-grained-fallbacks.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dashed-stroke.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stride-12-image.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-mask.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-large-overlap-dashed.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-between-source.ps3.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stride-12-image.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/coverage-row-triangles.xlib.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-down-extend-repeat.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-self-intersecting.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ps-surface-source.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-alpha.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-mask.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-polygons.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcomposite-projection.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback-resolution.ppi288x72.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback-resolution.ppi576x576.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/coverage-rectangles.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke-unbounded.xlib-fallback.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-offset.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/translate-show-surface.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-extend.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-large-overlap-rotated.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-offset-negative.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-bug.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-traps-sample.quartz.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-clip-text-right.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-clear.ps3.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clipped-group.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/transforms.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern-fold.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stride-12-xlib-window.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcb-surface-source.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/push-group-color.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotated-clip.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/group-clip.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/push-group-color.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-and-stroke-alpha-add.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-nesting.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-subpixel.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-self-intersecting.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-big-scale-down.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/overlapping-glyphs.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern-conical.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/overlapping-dash-caps.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-over.svg.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-source.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-down-source-surface-paint.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-rotate.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-one-stop.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-repeat.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-above-source.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/sample-horizontal.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-vertical-layout-type1.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins-curve.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.xlib-window.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-vbgr.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-ctm.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotate-image-surface-paint.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/world-map-fill.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/miter-precision.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-fill-alpha.image16.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-text.script.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/coverage-intersecting-triangles.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rounded-rectangle-stroke.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-similar-repeat.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/overlapping-boxes.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/finer-grained-fallbacks.ps3.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/long-dashed-lines.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-nesting.pdf.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-miter-limit.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/alpha-similar.pdf.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-curve.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stride-12-image.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/show-text-current-point.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-one-stop.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha-solid-clip.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-source.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/glyph-cache-pressure.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/solid-pattern-cache-stress.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/drunkard-tails.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-stroke.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-image.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-pad.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/horizontal-clip.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-image.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-rasterisation-triangles.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/trap-clip.test-paginated.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-degenerate-sort-order.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/image-bug-710072-aligned.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcb-huge-image-shm.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/gl-surface-source.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-up.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha-solid-clip.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/miter-precision.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-extend.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-up.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-step-function.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/gradient-constant-alpha.ps3.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/image-surface-source.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-surface-ctm.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-uniform.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/egl-surface-source.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-pad.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern-accuracy.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/filter-nearest-transformed.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-around-source.pdf.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-transformed-image.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/push-group-path-offset.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-little-triangle.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unantialiased-shapes.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-rule.ps3.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-gray.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-image.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/self-copy.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/transforms.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-twice.pdf.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-paint.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotate-clip-image-surface-paint.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-around-source.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-paint-alpha.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/overlapping-dash-caps.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/group-unaligned.svg.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-pattern.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-push-group.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unantialiased-shapes.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-glyphs.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-path.ps.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-operator.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-pen.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a8-clear.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/glyph-cache-pressure.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-around-source.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/device-offset-fractional.gl.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap-flipped.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotated-clip.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap-dashed.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-curves-nz.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-paint.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-between-source.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-nz-unbounded.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-gray.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/push-group-color.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/filter-bilinear-extents.pdf.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-fast-95.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-arc.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-empty-save.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint-alpha-solid-clip.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-text-transform.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/implicit-close.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-below-source.ps3.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/trap-clip.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-reflect-similar.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/inverted-clip.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-image.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/copy-path.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/inverse-text.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-text.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/arc-direction.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/world-map.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-curves-eo.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-none.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-rule.test-paginated.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/hatchings.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-reflect.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-operator.ps3.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/source-clip-scale.gl.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clear-source.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/glyph-cache-pressure.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-paint-alpha-clip.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-source.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-gray.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint-alpha.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-no-op.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-traps-sample.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/aliasing.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/create-from-png.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-pattern.pdf.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-alpha.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins-retrace.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/spline-decomposition.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-mixed.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-vertical-layout-type3.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/coverage-rectangles.xlib.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-image.gl.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-missed-stop.ps2.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/font-matrix-translation.ps2.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/image-bug-710072-aligned.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-repeat-similar.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask.svg.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-push-group.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-empty-group.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/set-source.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-repeat.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-down-extend-repeat.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-scale.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-rule.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-xlib.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dashed-rectangle.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-curves-eo.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-image.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-vbgr.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/drunkard-tails.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-pattern.ps3.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/tighten-bounds.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-line.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-scale.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.xlib-fallback.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-none.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-pen.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-mask.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/arc-looping-dash.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/shape-general-convex.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/halo.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins-retrace.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-bo-ricotz.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-around-source.ps2.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/long-lines.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.xlib.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-above-source.svg12.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-traps-sample.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-polygon.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-above-source.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-grid.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dashed-stroke.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-trap.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/close-path-current-point.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke-unbounded.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-mask-source.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/source-clip-scale.ps2.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-and-stroke-alpha.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/shape-sierpinski.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-alpha-alpha.svg.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-rgb.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/coverage-intersecting-quads.xlib.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-stroke.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-clear.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-miter-limit.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-mask-source.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint-alpha-clip-mask.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/copy-path.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-large-overlap-flopped.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-over.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-disjoint-hatching.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-gray.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-linear-gradient.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/copy-path.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-clear.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-dash.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/path-stroke-twice.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-dash.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/arc-direction.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/map-all-to-xlib-window.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-paint-alpha-solid-clip.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-pattern.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-paint-alpha-clip-mask.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/gl-surface-source.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-rotate.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/hatchings.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-mixed.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-empty-save.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dashed-stroke.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-seams.image.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-polygons.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-path.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/arc-direction.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-empty-box.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-none.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-clip.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unbounded-operator.ps3.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins-alpha.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-operator.svg12.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-operator.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-operator.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-paint-alpha-solid-clip.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-fill-alpha.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-transformed-similar.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-empty.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/close-path-current-point.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotated-clip.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-nearest-95.svg12.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-image-sample.gl.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-bo-rectangular.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-push-group.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-mixed-antialias.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask.svg.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-modify-child.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-image.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-down-extend-none.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-over.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-glyph-range.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-stroke.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/infinite-join.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/show-glyphs-advance.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/trap-clip.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-clip-fill-aa.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-extents.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-source.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-empty-group.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-rule.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-empty-box.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-nonzero.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-pad-border.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-show-glyphs-positioning.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-coverage-half-reference.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-subpixel.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/font-matrix-translation.ps3.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-alpha-alpha.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-glyph-range.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-step-function.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-clip-fill-mono.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-reflect-similar.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recordflip-fill-alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/finer-grained-fallbacks.gl.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/composite-integer-translate-over.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-outer-focus.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-pattern.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-rgb.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-bilinear-95.image16.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-scale.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-mask.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/finer-grained-fallbacks.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-source.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-below-source.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-curve.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-curves-nz.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/gradient-alpha.ps3.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha-clip.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern-conical.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-rule.ps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-down-extend-reflect.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-clip-fill.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-curve-to.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/gradient-alpha.ps2.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/map-bit-to-image.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-source-cu.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clipped-group.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/filter-nearest-transformed.pdf.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/alpha-similar.gl.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-repeat.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/gradient-zero-stops.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern-control-points.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/skew-extreme.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/source-clip-scale.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha-group-clip.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-image.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-pattern.ps2.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/miter-precision.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-alpha.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/hatchings.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a8-mask.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-around-source.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/svg-surface-source.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/halo-transform.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-large-overlap-rotated.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke-unbounded.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/large-source-roi.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-twice.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-dash-scale-unaligned.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-fill.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-tiger.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-subset.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-mask.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-clip-text-top.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-rectilinear-grid.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-bug.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/source-clip.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/svg-surface-source.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-pen.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-and-stroke-alpha-add.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-paint-alpha-clip.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-fill.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-pad-border.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint-alpha-clip.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-image.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-source.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/huge-radial.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/infinite-join.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-operator.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-nonzero.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-vertical-layout-type1.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-extend.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/quartz-surface-source.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/large-clip.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/show-glyphs-advance.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/overlapping-boxes.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-down.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bitmap-font.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rgb24-ignore-alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins-1.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-show-glyphs-table.quartz.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-pad-border.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-reflect.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/copy-disjoint.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-rescale.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-repeat.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-pad.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unbounded-operator.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/world-map-fill.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-operator.ps3.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/self-copy.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/alpha-similar.svg.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/close-path.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-fill-alpha.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/zero-alpha.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-between-source.svg12.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-zero-length.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clipped-trapezoids.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-state.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-caps-joins.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-nesting.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-select-font-face.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-rule.ps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-similar.recording.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-reflect.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke-unbounded.image16.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-image.pdf.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/outline-tolerance.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clear.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-vbgr.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-solid.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke-no-op.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap-flipped.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rel-path.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-clip.base.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-over.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-shape.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clear-source.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-good-96.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-surface-ctm.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/show-glyphs-advance.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern-accuracy.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.recording.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-trap.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rel-path.ps2.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/arc-infinite-loop.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-proxy.pdf.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-ctm-caps.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-self-intersecting.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/gradient-constant-alpha.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke.image.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-outer-focus.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-bilinear-95.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-vertical-layout-type3.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-mask.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/path-stroke-twice.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-big-scale-down.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clipped-group.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/shape-sierpinski.ps3.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-rotate.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-below-source.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-complex-shape-eo-mono.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-curves-eo.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-trap.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-scale.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-alpha-mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-clip-text-left.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clipped-group.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/transforms.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-one-stop.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-show-glyphs-positioning.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins-star.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-select-font-face.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/huge-linear.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-alpha.svg12.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback-resolution.ppi576x576.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/trap-clip.ps2.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/tiger.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-between-source.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/horizontal-clip.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-operator.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/negative-stride-image.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/drunkard-tails.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/composite-integer-translate-source.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/culled-glyphs.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-infinite-loop.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-between-source.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-and-stroke-alpha.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotate-clip-image-surface-paint.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/large-source.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unbounded-operator.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-alpha-pattern.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-intersect.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-alpha.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-modify-parent.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha-clip-mask.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/create-from-png-stream.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-line-width.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/gradient-zero-stops-mask.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-alpha.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-fill-alpha.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-nearest-24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-extend.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-no-op.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unbounded-operator.svg12.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-repeat-similar.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-text.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-uniform.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-line.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dash.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-eo-unbounded.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-disjoint.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-pattern.pdf.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-pen.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-offset-negative.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-paint-alpha-solid-clip.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-rectilinear.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clear.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/long-dashed-lines.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-sub-paths.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-repeat.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-coverage-intersecting-quads.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotated-clip.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-paint-alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-extend-pad.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unclosed-strokes.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-proxy.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pthread-similar.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-repeat-similar.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unaligned-box.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-text.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/copy-path.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke-no-op.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clear.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-eo.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-degenerate-sort-order.ps.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/group-unaligned.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins-star.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-operator.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/curve-to-as-line-to.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dash.ps2.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-up.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/overlapping-glyphs.svg.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-extend-repeat.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/aliasing.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-text.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-alpha.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-below-source.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/world-map.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-tails-curve.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-rgb.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/overlapping-glyphs.svg.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/new-sub-path.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-pad.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-linear-gradient.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/arc-looping-dash.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/reflected-stroke.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/font-matrix-translation.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern-overlap.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/long-lines.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/reflected-stroke.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback-resolution.ppi576x72.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/miter-precision.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-open-box.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/map-bit-to-image.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-over.gl.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-paint.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-none-similar.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-trap.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unbounded-operator.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-curve.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/group-unaligned.ps.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-mask.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-2.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-scale.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins-loop.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap-rotated.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-empty.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/aliasing.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-intersect.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-extend-pad.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-around-source.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-coverage-intersecting-quads.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-bug.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-proxy.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-disjoint.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-scale.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-line-width.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-unbounded.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-eo.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-alpha.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/finer-grained-fallbacks.svg12.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins-curve.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-offset-negative.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern-accuracy.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-fill.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap-rotated.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-large.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-alpha-alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/arc-looping-dash.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-paint-alpha.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-84115.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-extents.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-rasterisation-triangles.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-and-stroke.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dashed-rectangle.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-empty-triangle.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-paint.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-curves-nz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/culled-glyphs.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-push-group.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-vertical-layout-type1.quartz.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/long-lines.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke-unbounded.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-disjoint.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-extents.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.xcb-window&.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-rule.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-show-glyphs-positioning.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/finer-grained-fallbacks.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-coverage-triangles.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-no-dash.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/api-special-cases.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-fill-alpha.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-clip-paint.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unantialiased-shapes.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-rule.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.image.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback-resolution.ppi288x288.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bilevel-image.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/create-from-png.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/spline-decomposition.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-fill-alpha.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/tiger.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unbounded-operator.svg12.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/image-surface-source.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bilevel-xlib-fallback.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-coverage-reference.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-mesh.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha-solid-clip.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-path.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bilevel-image.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-scale.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-dash.ps.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-glyph-range.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-no-op.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-dash.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-repeat-similar.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rounded-rectangle-stroke.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-rectilinear.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/shape-sierpinski.pdf.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-fill-alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/reflected-stroke.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-alpha.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-rel-curve-to.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-mask-sample.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-bilinear-95.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/inverse-text.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/arc-looping-dash.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-self-intersecting.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-miter-limit.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/large-twin-antialias-mixed.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/inverse-text.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clear-source.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-alpha.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-text.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/tiger.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/composite-integer-translate-source.svg12.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-scale.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/composite-integer-translate-over.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-shape.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-pattern.svg.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-bo-rectangular.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcb-surface-source.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/select-font-face.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-bo-ricotz.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha-clip.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-caps-joins.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/close-path-current-point.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-arc.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-nz-unbounded.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-large.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-rel-curve-to.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcb-surface-source.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-large-overlap-dashed.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke.xlib-fallback.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-image.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-complex-shape-eo-aa.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcomposite-projection.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/gradient-alpha.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-and-stroke.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/device-offset-scale.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-arcs.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/set-source.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/huge-linear.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-fill.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/push-group.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-proxy.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-paint-alpha-clip.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/show-text-current-point.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/curve-to-as-line-to.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-polygons.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-operator.pdf.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-gray.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/trap-clip.ps3.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-operator.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-degenerate-sort-order.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-similar.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-empty-triangle.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/path-append.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-paint-alpha.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recordflip-paint-alpha-clip.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-fill-alpha.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha-clip-mask.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-grid.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xlib-surface-source.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/select-font-face.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-dash.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-zero-length.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-disjoint.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-mask.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/finer-grained-fallbacks.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-antialias-none.ps3.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-good-95.script.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-rule.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-clip-text-right.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-outer-focus.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke-unbounded.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-seams.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint-alpha-clip-mask.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-little-box.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-sample.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/push-group.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-rasterisation-rectangles.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-clip.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/halo-transform.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/arc-looping-dash.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-dash.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-nz-unbounded.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-clip-text-top.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-pad-similar.quartz.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/image-bug-710072-unaligned.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unclosed-strokes.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-vertical-layout-type1.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-rel-curve-to.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-extend-reflect.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/implicit-close.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/halo-transform.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-bug.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/shape-general-convex.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/new-sub-path.ps2.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-show-glyphs-positioning.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcb-stress-cache.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-clip-text-top.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotated-clip.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-group-shapes-aligned-rectangles.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/new-sub-path.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/device-offset.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-complex-shape-eo-aa.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/shape-sierpinski.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-nz-unbounded.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ps-surface-source.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotate-clip-image-surface-paint.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-degenerate-sort-order.ps.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clear.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rounded-rectangle-stroke.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/shape-sierpinski.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-missed-stop.ps2.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/twin-antialias-gray.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/world-map-stroke.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/group-unaligned.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-stroke.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/finer-grained-fallbacks.xlib-fallback.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recordflip-whole-paint-alpha-clip-mask.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-down-extend-pad.quartz.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rounded-rectangle-stroke.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotate-image-surface-paint.pdf.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/huge-radial.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/font-matrix-translation.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/create-from-png.gray-alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-curve.quartz.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-intersect.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recordflip-whole-fill-alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-similar.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-reflect.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rounded-rectangle-fill.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/zero-alpha.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.svg11.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcomposite-projection.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-pen.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/filter-nearest-transformed.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/close-path.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-missed-stop.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-nearest-95.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-pad-similar.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-paint-alpha-clip.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dashed-rectangle.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-mixed-antialias.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-source-surface-paint.pdf.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/trap-clip.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-clear.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-subset.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-operator.test-paginated.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unclosed-strokes.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/world-map.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-extend-none.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/aliasing.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/world-map-stroke.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-polygons.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-radial-gradient.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/group-paint.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-image.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-no-op.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/alpha-similar.ps.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-reflect.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/filter-nearest-transformed.gl.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-disjoint.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/copy-disjoint.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-reflect-similar.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/set-source.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-extend-none.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke-no-op.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-show-glyphs-positioning.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/shape-sierpinski.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/map-bit-to-xlib.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-down-extend-none.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/finer-grained-fallbacks.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/composite-integer-translate-over-repeat.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-glyphs.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clipped-group.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-little-triangle.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-text.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-paint.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-above-source.ps3.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recordflip-whole-paint-alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xlib-surface-source.svg12.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/source-clip.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/long-lines.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-good-95.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-text.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clipped-group.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-mask.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-similar-repeat.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/new-sub-path.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-alpha-pattern.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/large-twin-antialias-mixed.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-path.quartz.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-self-intersecting.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-operator.xlib-fallback.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-line.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-solid-alpha.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/translate-show-surface.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-eo.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-source.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-operator.gl.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dashed-rectangle.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-tiger.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel.base.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/show-text-current-point.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/implicit-close.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-rotate.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-fill-alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-grid.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/huge-linear.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/group-unaligned.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-vbgr.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-arc.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/close-path-current-point.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-rule-pixel-aligned.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/world-map-stroke.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dashed-stroke.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-40410.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-source-surface-paint.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unbounded-operator.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-clear.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-and-stroke.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-empty.svg12.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-alpha-pattern.ps3.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-eo-unbounded.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/show-glyphs-advance.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-clip-fill-rule.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pthread-same-source.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-self-intersecting.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-large-overlap-rotated.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-mesh.image16.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-pad.quartz.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stride-12-xlib.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rounded-rectangle-stroke.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha-solid-clip.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-mesh.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-fill-alpha.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/trap-clip.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-and-stroke-alpha.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap-offset.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/group-paint.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/composite-integer-translate-source.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-reflect-similar.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-nonzero.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-alpha.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-paint-alpha-solid-clip.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-and-stroke.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-operator.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recordflip-whole-self-intersecting.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-rescale.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-no-dash.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-transformed-image.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pass-through.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-sub-paths.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/composite-integer-translate-over-repeat.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap-flopped.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-arc.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-scale.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-image.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/negative-stride-image.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-dash.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clear.ps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clear.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-below-source.pdf.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-gray.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/self-intersecting.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-paint-alpha-clip-mask.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-alpha.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-image.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-unbounded.svg12.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-arcs.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/new-sub-path.ps3.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-clip.base.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-bo-ricotz.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-above-source.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/path-append.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-dash.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-down-extend-none.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xlib-surface-source.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-eo.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-clip-text-top.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-group-shapes-unaligned-rectangles.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-above-source.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/group-unaligned.svg.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-over.ps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/alpha-similar.gl.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-no-dash.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/device-offset-positive.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-text.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-alpha.svg12.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-outside-target.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-outside-target.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pthread-similar.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins-curve.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-image-sample.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.test-paginated.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-pad.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-rectilinear-grid.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-transformed-similar.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-image-sample.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-transform.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-reflect.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/coverage-abutting.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-zero-length.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-device-offset.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-all.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a8-mask.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-rotate.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/create-from-png-stream.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-offset-image.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback-resolution.ppi72x288.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/path-append.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/composite-integer-translate-over.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-eo-unbounded.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-pad.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/white-in-noop.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke-unbounded.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-fill.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-extend-pad.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clear.pdf.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/self-copy.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/tighten-bounds.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-paint.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/filter-bilinear-extents.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-repeat.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-and-stroke-alpha-add.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recordflip-paint.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-degenerate-sort-order.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/arc-direction.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-rel-curve-to.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/translate-show-surface.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-51910.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcb-surface-source.ps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-nz-unbounded.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-complex-shape-eo-mono.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recordflip-whole-paint.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-nonzero.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/select-font-face.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern-transformed.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/simple-edge.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-clip-paint.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-outer-focus.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-clip-fill-equal.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/inverted-clip.traps.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rounded-rectangle-fill.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-scale.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-vrgb.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-degenerate-sort-order.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-between-source.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-transformed-similar.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-open-box.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/long-dashed-lines.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend-solid.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/aliasing.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-image.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.svg12.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/raster-source.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-tolerance.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern-overlap.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-extents.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-bo-collins.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-bilinear-95.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/path-stroke-twice.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-group-shapes-unaligned-rectangles.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-between-source.ps2.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-infinite-loop.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/trap-clip.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-vertical-layout-type3.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-coverage-reference.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint-alpha-clip-mask.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-up.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-curve.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-extend-repeat.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-stroke.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-sub-paths.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-nearest-95.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-caps-joins.quartz.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-fill-alpha.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-fill.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-paint-alpha-solid-clip.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-rule.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/infinite-join.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-radial-gradient.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clipped-group.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/show-text-current-point.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/shape-sierpinski.ps3.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-empty-group.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/coverage-column-triangles.xlib.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-paint-alpha-solid-clip.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-rasterisation-rectangles.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-bilinear-96.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-empty.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/halo.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha-clip.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rounded-rectangle-fill.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/image-bug-710072-unaligned.xlib-fallback.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-large-overlap.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-vertical-layout-type3.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.script.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask-alpha.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-mask-source.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-disjoint.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-reflect.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/image-surface-source.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern-control-points.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-repeat-similar.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-text.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-paint-alpha.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-pattern.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/glyph-cache-pressure.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-nonzero.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stride-12-image.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-eo-unbounded.xlib-fallback.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/reflected-stroke.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-bgr.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a8-clear.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-rule-pixel-aligned.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-twice.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-paint.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pdf-surface-source.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pthread-same-source.quartz.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ps-eps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/device-offset-positive.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dash.ps3.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/arc-infinite-loop.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-image.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-shape.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-degenerate-sort-order.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-around-source.ps3.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dashed-rectangle.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extended-blend.svg12.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectangle-rounding-error.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-down-extend-reflect.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/spline-decomposition.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/group-unaligned.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/drunkard-tails.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/group-clip.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/big-little-box.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectilinear-dash-scale.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-transform.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-dash.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-curve-to.ps.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ps-surface-source.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke-unbounded.svg12.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/world-map-fill.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-image.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-fill-alpha.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-xlib.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-caps-joins.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fallback-resolution.ppi144x144.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/xcomposite-projection.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/self-intersecting.quartz.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rectangle-rounding-error.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-antialias-none.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/overlapping-glyphs.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-bug.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/over-below-source.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-stroke.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/large-font.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-clipped.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-device-offset.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-reflect.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-fast-24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clipped-group.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clipped-group.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-text-transform.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-repeat.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-vertical-layout-type1.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-infinite-loop.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha-solid-clip.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-rotate.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-nesting.quartz.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-operator.svg12.argb32.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/close-path-current-point.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-bgr.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-proxy.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/filter-nearest-offset.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/recording-surface-over.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-good-95.image16.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-mask-source.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-source-surface-paint.svg.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-extents.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-state.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mask.quartz.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-clip-stroke.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/subsurface-repeat.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-clear.svg12.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/group-unaligned.xlib-fallback.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-nz-unbounded.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/raster-source.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-stroke.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-transform.svg.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-eo-unbounded.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-paint-alpha-solid-clip.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/operator-alpha-alpha.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-text.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-reflect.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clipped-surface.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-joins-alpha.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-proxy.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-and-stroke-alpha-add.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-text.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-repeat.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/show-text-current-point.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/map-to-image-fill.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/world-map.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-image.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/linear-gradient-reflect.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-1.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/infinite-join.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/filter-bilinear-extents.quartz.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mime-data.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-extend.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/source-clip-scale.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/unbounded-operator.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask-stroke.pdf.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/group-clip.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-vertical-layout-type3.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-curve.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-stroke.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-polygon.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/composite-integer-translate-over.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-twice.test-paginated.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-ctm-caps.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-rescale.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-reflect.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/push-group.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-proxy.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/paint-with-alpha-clip-mask.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-pattern.svg.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-coverage-overlap-half-triangles-eo.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-clip-text-bottom.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-vbgr.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotated-clip.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins-retrace.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-reflect-similar.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-large-overlap-offset.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-image.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/image-bug-710072-unaligned.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-text-transform.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/caps-tails-curve.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/device-offset-fractional.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-text.ps.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-vertical-layout-type1.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/world-map.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/self-copy-overlap.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-mask.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-pad.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-96.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-twice.ps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rounded-rectangle-fill.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-fast-95.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap-offset.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-overlap-dashed.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/scale-down-source-surface-paint.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-rasterisation-rectangles.quartz.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-pattern.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/shape-general-convex.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-scale.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clear.svg12.rgb24.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record2x-paint-alpha-clip.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/mesh-pattern-fold.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/image-surface-source.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/path-append.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-and-stroke-alpha-add.svg12.xfail.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/source-surface-scale-paint.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/device-offset.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/line-width-scale.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/joins.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/radial-gradient-source.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-curve-to.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pixman-downscale-best-95.image16.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/font-matrix-translation.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-bo-rectangular.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/source-clip-scale.ps3.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/spline-decomposition.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-image.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/text-antialias-subpixel-bgr.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-missed-stop.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-rel-curve-to.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/spline-decomposition.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/path-stroke-twice.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill-nz-unbounded.xlib-fallback.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/random-intersections-curves-nz.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotate-clip-image-surface-paint.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/spline-decomposition.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/curve-to-as-line-to.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/stroke-ctm-caps.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-fill.quartz.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/filter-nearest-offset.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-state.ps3.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font-mask.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/transforms.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/dash-scale.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/overlapping-glyphs.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/halo-transform.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/degenerate-path.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-down-extend-repeat.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-vertical-layout-type1.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/rotated-clip.image16.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/user-font.pdf.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/clip-push-group.traps.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern-scale-down-extend-none.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/extend-repeat-similar.ps2.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record-extend-none-similar.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/pthread-show-text.traps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/fill-image.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/surface-pattern.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record1414x-paint-alpha-clip.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/ft-text-antialias-none.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/bug-seams.xlib-fallback.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/partial-clip-text-bottom.base.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/a1-tiger.mask.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/finer-grained-fallbacks.mask.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/smask.xlib-fallback.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/font-matrix-translation.ps2.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/leaky-dash.ps3.argb32.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/large-twin-antialias-mixed.traps.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/infinite-join.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/record90-paint-alpha-clip-mask.base.rgb24.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/test/reference/close-path-current-point.ps.ref.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/doc/public/html/right-insensitive.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/doc/public/html/left.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/doc/public/html/home.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/doc/public/html/up-insensitive.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/doc/public/html/right.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/doc/public/html/left-insensitive.png",
        "/tmp/vanessa/spack-stage/spack-stage-cairo-1.14.8-ooct5iujw7irhxdyrv54dsreszbnx4gz/spack-src/doc/public/html/up.png"
    ],
    "total_files": 4237
}