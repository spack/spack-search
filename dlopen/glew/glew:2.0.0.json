{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-glew-2.0.0-kmg2vapmbw6kcqxsewolaw2vsq7fqfyi/spack-src/src/glew.c": "/*\n** The OpenGL Extension Wrangler Library\n** Copyright (C) 2008-2015, Nigel Stewart <nigels[]users sourceforge net>\n** Copyright (C) 2002-2008, Milan Ikits <milan ikits[]ieee org>\n** Copyright (C) 2002-2008, Marcelo E. Magallon <mmagallo[]debian org>\n** Copyright (C) 2002, Lev Povalahev\n** All rights reserved.\n** \n** Redistribution and use in source and binary forms, with or without \n** modification, are permitted provided that the following conditions are met:\n** \n** * Redistributions of source code must retain the above copyright notice, \n**   this list of conditions and the following disclaimer.\n** * Redistributions in binary form must reproduce the above copyright notice, \n**   this list of conditions and the following disclaimer in the documentation \n**   and/or other materials provided with the distribution.\n** * The name of the author may be used to endorse or promote products \n**   derived from this software without specific prior written permission.\n**\n** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" \n** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE \n** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n** ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE \n** LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR \n** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\n** THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n#include <GL/glew.h>\n\n#if defined(GLEW_OSMESA)\n#  define GLAPI extern\n#  include <GL/osmesa.h>\n#elif defined(GLEW_EGL)\n#  include <GL/eglew.h>\n#elif defined(_WIN32)\n#  include <GL/wglew.h>\n#elif !defined(__ANDROID__) && !defined(__native_client__) && !defined(__HAIKU__) && (!defined(__APPLE__) || defined(GLEW_APPLE_GLX))\n#  include <GL/glxew.h>\n#endif\n\n#include <stddef.h>  /* For size_t */\n\n#if defined(GLEW_EGL)\n#elif defined(GLEW_REGAL)\n\n/* In GLEW_REGAL mode we call direcly into the linked\n   libRegal.so glGetProcAddressREGAL for looking up\n   the GL function pointers. */\n\n#  undef glGetProcAddressREGAL\n#  ifdef WIN32\nextern void *  __stdcall glGetProcAddressREGAL(const GLchar *name);\nstatic void * (__stdcall * regalGetProcAddress) (const GLchar *) = glGetProcAddressREGAL;\n#    else\nextern void * glGetProcAddressREGAL(const GLchar *name);\nstatic void * (*regalGetProcAddress) (const GLchar *) = glGetProcAddressREGAL;\n#  endif\n#  define glGetProcAddressREGAL GLEW_GET_FUN(__glewGetProcAddressREGAL)\n\n#elif defined(__sgi) || defined (__sun) || defined(__HAIKU__) || defined(GLEW_APPLE_GLX)\n#include <dlfcn.h>\n#include <stdio.h>\n#include <stdlib.h>\n\nvoid* dlGetProcAddress (const GLubyte* name)\n{\n  static void* h = NULL;\n  static void* gpa;\n\n  if (h == NULL)\n  {\n    if ((h = dlopen(NULL, RTLD_LAZY | RTLD_LOCAL)) == NULL) return NULL;\n    gpa = dlsym(h, \"glXGetProcAddress\");\n  }\n\n  if (gpa != NULL)\n    return ((void*(*)(const GLubyte*))gpa)(name);\n  else\n    return dlsym(h, (const char*)name);\n}\n#endif /* __sgi || __sun || GLEW_APPLE_GLX */\n\n#if defined(__APPLE__)\n#include <stdlib.h>\n#include <string.h>\n#include <AvailabilityMacros.h>\n\n#ifdef MAC_OS_X_VERSION_10_3\n\n#include <dlfcn.h>\n\nvoid* NSGLGetProcAddress (const GLubyte *name)\n{\n  static void* image = NULL;\n  void* addr;\n  if (NULL == image)\n  {\n    image = dlopen(\"/System/Library/Frameworks/OpenGL.framework/Versions/Current/OpenGL\", RTLD_LAZY);\n  }\n  if( !image ) return NULL;\n  addr = dlsym(image, (const char*)name);\n  if( addr ) return addr;\n#ifdef GLEW_APPLE_GLX\n  return dlGetProcAddress( name ); // try next for glx symbols\n#else\n  return NULL;\n#endif\n}\n#else\n\n#include <mach-o/dyld.h>\n\nvoid* NSGLGetProcAddress (const GLubyte *name)\n{\n  static const struct mach_header* image = NULL;\n  NSSymbol symbol;\n  char* symbolName;\n  if (NULL == image)\n  {\n    image = NSAddImage(\"/System/Library/Frameworks/OpenGL.framework/Versions/Current/OpenGL\", NSADDIMAGE_OPTION_RETURN_ON_ERROR);\n  }\n  /* prepend a '_' for the Unix C symbol mangling convention */\n  symbolName = malloc(strlen((const char*)name) + 2);\n  strcpy(symbolName+1, (const char*)name);\n  symbolName[0] = '_';\n  symbol = NULL;\n  /* if (NSIsSymbolNameDefined(symbolName))\n\t symbol = NSLookupAndBindSymbol(symbolName); */\n  symbol = image ? NSLookupSymbolInImage(image, symbolName, NSLOOKUPSYMBOLINIMAGE_OPTION_BIND | NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR) : NULL;\n  free(symbolName);\n  if( symbol ) return NSAddressOfSymbol(symbol);\n#ifdef GLEW_APPLE_GLX\n  return dlGetProcAddress( name ); // try next for glx symbols\n#else\n  return NULL;\n#endif\n}\n#endif /* MAC_OS_X_VERSION_10_3 */\n#endif /* __APPLE__ */\n\n/*\n * Define glewGetProcAddress.\n */\n#if defined(GLEW_REGAL)\n#  define glewGetProcAddress(name) regalGetProcAddress((const GLchar *)name)\n#elif defined(GLEW_OSMESA)\n#  define glewGetProcAddress(name) OSMesaGetProcAddress((const char *)name)\n#elif defined(GLEW_EGL)\n#  define glewGetProcAddress(name) eglGetProcAddress((const char *)name)\n#elif defined(_WIN32)\n#  define glewGetProcAddress(name) wglGetProcAddress((LPCSTR)name)\n#elif defined(__APPLE__) && !defined(GLEW_APPLE_GLX)\n#  define glewGetProcAddress(name) NSGLGetProcAddress(name)\n#elif defined(__sgi) || defined(__sun) || defined(__HAIKU__)\n#  define glewGetProcAddress(name) dlGetProcAddress(name)\n#elif defined(__ANDROID__)\n#  define glewGetProcAddress(name) NULL /* TODO */\n#elif defined(__native_client__)\n#  define glewGetProcAddress(name) NULL /* TODO */\n#else /* __linux */\n#  define glewGetProcAddress(name) (*glXGetProcAddressARB)(name)\n#endif\n\n/*\n * Redefine GLEW_GET_VAR etc without const cast\n */\n\n#undef GLEW_GET_VAR\n# define GLEW_GET_VAR(x) (x)\n\n#ifdef WGLEW_GET_VAR\n# undef WGLEW_GET_VAR\n# define WGLEW_GET_VAR(x) (x)\n#endif /* WGLEW_GET_VAR */\n\n#ifdef GLXEW_GET_VAR\n# undef GLXEW_GET_VAR\n# define GLXEW_GET_VAR(x) (x)\n#endif /* GLXEW_GET_VAR */\n\n#ifdef EGLEW_GET_VAR\n# undef EGLEW_GET_VAR\n# define EGLEW_GET_VAR(x) (x)\n#endif /* EGLEW_GET_VAR */\n\n/*\n * GLEW, just like OpenGL or GLU, does not rely on the standard C library.\n * These functions implement the functionality required in this file.\n */\n\nstatic GLuint _glewStrLen (const GLubyte* s)\n{\n  GLuint i=0;\n  if (s == NULL) return 0;\n  while (s[i] != '\\0') i++;\n  return i;\n}\n\nstatic GLuint _glewStrCLen (const GLubyte* s, GLubyte c)\n{\n  GLuint i=0;\n  if (s == NULL) return 0;\n  while (s[i] != '\\0' && s[i] != c) i++;\n  return i;\n}\n\nstatic GLuint _glewStrCopy(char *d, const char *s, char c)\n{\n  GLuint i=0;\n  if (s == NULL) return 0;\n  while (s[i] != '\\0' && s[i] != c) { d[i] = s[i]; i++; }\n  d[i] = '\\0';\n  return i;\n}\n\n#if !defined(GLEW_OSMESA)\n#if !defined(__APPLE__) || defined(GLEW_APPLE_GLX)\nstatic GLboolean _glewStrSame (const GLubyte* a, const GLubyte* b, GLuint n)\n{\n  GLuint i=0;\n  if(a == NULL || b == NULL)\n    return (a == NULL && b == NULL && n == 0) ? GL_TRUE : GL_FALSE;\n  while (i < n && a[i] != '\\0' && b[i] != '\\0' && a[i] == b[i]) i++;\n  return i == n ? GL_TRUE : GL_FALSE;\n}\n#endif\n#endif\n\nstatic GLboolean _glewStrSame1 (const GLubyte** a, GLuint* na, const GLubyte* b, GLuint nb)\n{\n  while (*na > 0 && (**a == ' ' || **a == '\\n' || **a == '\\r' || **a == '\\t'))\n  {\n    (*a)++;\n    (*na)--;\n  }\n  if(*na >= nb)\n  {\n    GLuint i=0;\n    while (i < nb && (*a)+i != NULL && b+i != NULL && (*a)[i] == b[i]) i++;\n    if(i == nb)\n    {\n      *a = *a + nb;\n      *na = *na - nb;\n      return GL_TRUE;\n    }\n  }\n  return GL_FALSE;\n}\n\nstatic GLboolean _glewStrSame2 (const GLubyte** a, GLuint* na, const GLubyte* b, GLuint nb)\n{\n  if(*na >= nb)\n  {\n    GLuint i=0;\n    while (i < nb && (*a)+i != NULL && b+i != NULL && (*a)[i] == b[i]) i++;\n    if(i == nb)\n    {\n      *a = *a + nb;\n      *na = *na - nb;\n      return GL_TRUE;\n    }\n  }\n  return GL_FALSE;\n}\n\nstatic GLboolean _glewStrSame3 (const GLubyte** a, GLuint* na, const GLubyte* b, GLuint nb)\n{\n  if(*na >= nb)\n  {\n    GLuint i=0;\n    while (i < nb && (*a)+i != NULL && b+i != NULL && (*a)[i] == b[i]) i++;\n    if (i == nb && (*na == nb || (*a)[i] == ' ' || (*a)[i] == '\\n' || (*a)[i] == '\\r' || (*a)[i] == '\\t'))\n    {\n      *a = *a + nb;\n      *na = *na - nb;\n      return GL_TRUE;\n    }\n  }\n  return GL_FALSE;\n}\n\n/*\n * Search for name in the extensions string. Use of strstr()\n * is not sufficient because extension names can be prefixes of\n * other extension names. Could use strtok() but the constant\n * string returned by glGetString might be in read-only memory.\n */\n#if !defined(GLEW_OSMESA)\n#if !defined(__APPLE__) || defined(GLEW_APPLE_GLX)\nstatic GLboolean _glewSearchExtension (const char* name, const GLubyte *start, const GLubyte *end)\n{\n  const GLubyte* p;\n  GLuint len = _glewStrLen((const GLubyte*)name);\n  p = start;\n  while (p < end)\n  {\n    GLuint n = _glewStrCLen(p, ' ');\n    if (len == n && _glewStrSame((const GLubyte*)name, p, n)) return GL_TRUE;\n    p += n+1;\n  }\n  return GL_FALSE;\n}\n#endif\n#endif\n\nPFNGLCOPYTEXSUBIMAGE3DPROC __glewCopyTexSubImage3D = NULL;\nPFNGLDRAWRANGEELEMENTSPROC __glewDrawRangeElements = NULL;\nPFNGLTEXIMAGE3DPROC __glewTexImage3D = NULL;\nPFNGLTEXSUBIMAGE3DPROC __glewTexSubImage3D = NULL;\n\nPFNGLACTIVETEXTUREPROC __glewActiveTexture = NULL;\nPFNGLCLIENTACTIVETEXTUREPROC __glewClientActiveTexture = NULL;\nPFNGLCOMPRESSEDTEXIMAGE1DPROC __glewCompressedTexImage1D = NULL;\nPFNGLCOMPRESSEDTEXIMAGE2DPROC __glewCompressedTexImage2D = NULL;\nPFNGLCOMPRESSEDTEXIMAGE3DPROC __glewCompressedTexImage3D = NULL;\nPFNGLCOMPRESSEDTEXSUBIMAGE1DPROC __glewCompressedTexSubImage1D = NULL;\nPFNGLCOMPRESSEDTEXSUBIMAGE2DPROC __glewCompressedTexSubImage2D = NULL;\nPFNGLCOMPRESSEDTEXSUBIMAGE3DPROC __glewCompressedTexSubImage3D = NULL;\nPFNGLGETCOMPRESSEDTEXIMAGEPROC __glewGetCompressedTexImage = NULL;\nPFNGLLOADTRANSPOSEMATRIXDPROC __glewLoadTransposeMatrixd = NULL;\nPFNGLLOADTRANSPOSEMATRIXFPROC __glewLoadTransposeMatrixf = NULL;\nPFNGLMULTTRANSPOSEMATRIXDPROC __glewMultTransposeMatrixd = NULL;\nPFNGLMULTTRANSPOSEMATRIXFPROC __glewMultTransposeMatrixf = NULL;\nPFNGLMULTITEXCOORD1DPROC __glewMultiTexCoord1d = NULL;\nPFNGLMULTITEXCOORD1DVPROC __glewMultiTexCoord1dv = NULL;\nPFNGLMULTITEXCOORD1FPROC __glewMultiTexCoord1f = NULL;\nPFNGLMULTITEXCOORD1FVPROC __glewMultiTexCoord1fv = NULL;\nPFNGLMULTITEXCOORD1IPROC __glewMultiTexCoord1i = NULL;\nPFNGLMULTITEXCOORD1IVPROC __glewMultiTexCoord1iv = NULL;\nPFNGLMULTITEXCOORD1SPROC __glewMultiTexCoord1s = NULL;\nPFNGLMULTITEXCOORD1SVPROC __glewMultiTexCoord1sv = NULL;\nPFNGLMULTITEXCOORD2DPROC __glewMultiTexCoord2d = NULL;\nPFNGLMULTITEXCOORD2DVPROC __glewMultiTexCoord2dv = NULL;\nPFNGLMULTITEXCOORD2FPROC __glewMultiTexCoord2f = NULL;\nPFNGLMULTITEXCOORD2FVPROC __glewMultiTexCoord2fv = NULL;\nPFNGLMULTITEXCOORD2IPROC __glewMultiTexCoord2i = NULL;\nPFNGLMULTITEXCOORD2IVPROC __glewMultiTexCoord2iv = NULL;\nPFNGLMULTITEXCOORD2SPROC __glewMultiTexCoord2s = NULL;\nPFNGLMULTITEXCOORD2SVPROC __glewMultiTexCoord2sv = NULL;\nPFNGLMULTITEXCOORD3DPROC __glewMultiTexCoord3d = NULL;\nPFNGLMULTITEXCOORD3DVPROC __glewMultiTexCoord3dv = NULL;\nPFNGLMULTITEXCOORD3FPROC __glewMultiTexCoord3f = NULL;\nPFNGLMULTITEXCOORD3FVPROC __glewMultiTexCoord3fv = NULL;\nPFNGLMULTITEXCOORD3IPROC __glewMultiTexCoord3i = NULL;\nPFNGLMULTITEXCOORD3IVPROC __glewMultiTexCoord3iv = NULL;\nPFNGLMULTITEXCOORD3SPROC __glewMultiTexCoord3s = NULL;\nPFNGLMULTITEXCOORD3SVPROC __glewMultiTexCoord3sv = NULL;\nPFNGLMULTITEXCOORD4DPROC __glewMultiTexCoord4d = NULL;\nPFNGLMULTITEXCOORD4DVPROC __glewMultiTexCoord4dv = NULL;\nPFNGLMULTITEXCOORD4FPROC __glewMultiTexCoord4f = NULL;\nPFNGLMULTITEXCOORD4FVPROC __glewMultiTexCoord4fv = NULL;\nPFNGLMULTITEXCOORD4IPROC __glewMultiTexCoord4i = NULL;\nPFNGLMULTITEXCOORD4IVPROC __glewMultiTexCoord4iv = NULL;\nPFNGLMULTITEXCOORD4SPROC __glewMultiTexCoord4s = NULL;\nPFNGLMULTITEXCOORD4SVPROC __glewMultiTexCoord4sv = NULL;\nPFNGLSAMPLECOVERAGEPROC __glewSampleCoverage = NULL;\n\nPFNGLBLENDCOLORPROC __glewBlendColor = NULL;\nPFNGLBLENDEQUATIONPROC __glewBlendEquation = NULL;\nPFNGLBLENDFUNCSEPARATEPROC __glewBlendFuncSeparate = NULL;\nPFNGLFOGCOORDPOINTERPROC __glewFogCoordPointer = NULL;\nPFNGLFOGCOORDDPROC __glewFogCoordd = NULL;\nPFNGLFOGCOORDDVPROC __glewFogCoorddv = NULL;\nPFNGLFOGCOORDFPROC __glewFogCoordf = NULL;\nPFNGLFOGCOORDFVPROC __glewFogCoordfv = NULL;\nPFNGLMULTIDRAWARRAYSPROC __glewMultiDrawArrays = NULL;\nPFNGLMULTIDRAWELEMENTSPROC __glewMultiDrawElements = NULL;\nPFNGLPOINTPARAMETERFPROC __glewPointParameterf = NULL;\nPFNGLPOINTPARAMETERFVPROC __glewPointParameterfv = NULL;\nPFNGLPOINTPARAMETERIPROC __glewPointParameteri = NULL;\nPFNGLPOINTPARAMETERIVPROC __glewPointParameteriv = NULL;\nPFNGLSECONDARYCOLOR3BPROC __glewSecondaryColor3b = NULL;\nPFNGLSECONDARYCOLOR3BVPROC __glewSecondaryColor3bv = NULL;\nPFNGLSECONDARYCOLOR3DPROC __glewSecondaryColor3d = NULL;\nPFNGLSECONDARYCOLOR3DVPROC __glewSecondaryColor3dv = NULL;\nPFNGLSECONDARYCOLOR3FPROC __glewSecondaryColor3f = NULL;\nPFNGLSECONDARYCOLOR3FVPROC __glewSecondaryColor3fv = NULL;\nPFNGLSECONDARYCOLOR3IPROC __glewSecondaryColor3i = NULL;\nPFNGLSECONDARYCOLOR3IVPROC __glewSecondaryColor3iv = NULL;\nPFNGLSECONDARYCOLOR3SPROC __glewSecondaryColor3s = NULL;\nPFNGLSECONDARYCOLOR3SVPROC __glewSecondaryColor3sv = NULL;\nPFNGLSECONDARYCOLOR3UBPROC __glewSecondaryColor3ub = NULL;\nPFNGLSECONDARYCOLOR3UBVPROC __glewSecondaryColor3ubv = NULL;\nPFNGLSECONDARYCOLOR3UIPROC __glewSecondaryColor3ui = NULL;\nPFNGLSECONDARYCOLOR3UIVPROC __glewSecondaryColor3uiv = NULL;\nPFNGLSECONDARYCOLOR3USPROC __glewSecondaryColor3us = NULL;\nPFNGLSECONDARYCOLOR3USVPROC __glewSecondaryColor3usv = NULL;\nPFNGLSECONDARYCOLORPOINTERPROC __glewSecondaryColorPointer = NULL;\nPFNGLWINDOWPOS2DPROC __glewWindowPos2d = NULL;\nPFNGLWINDOWPOS2DVPROC __glewWindowPos2dv = NULL;\nPFNGLWINDOWPOS2FPROC __glewWindowPos2f = NULL;\nPFNGLWINDOWPOS2FVPROC __glewWindowPos2fv = NULL;\nPFNGLWINDOWPOS2IPROC __glewWindowPos2i = NULL;\nPFNGLWINDOWPOS2IVPROC __glewWindowPos2iv = NULL;\nPFNGLWINDOWPOS2SPROC __glewWindowPos2s = NULL;\nPFNGLWINDOWPOS2SVPROC __glewWindowPos2sv = NULL;\nPFNGLWINDOWPOS3DPROC __glewWindowPos3d = NULL;\nPFNGLWINDOWPOS3DVPROC __glewWindowPos3dv = NULL;\nPFNGLWINDOWPOS3FPROC __glewWindowPos3f = NULL;\nPFNGLWINDOWPOS3FVPROC __glewWindowPos3fv = NULL;\nPFNGLWINDOWPOS3IPROC __glewWindowPos3i = NULL;\nPFNGLWINDOWPOS3IVPROC __glewWindowPos3iv = NULL;\nPFNGLWINDOWPOS3SPROC __glewWindowPos3s = NULL;\nPFNGLWINDOWPOS3SVPROC __glewWindowPos3sv = NULL;\n\nPFNGLBEGINQUERYPROC __glewBeginQuery = NULL;\nPFNGLBINDBUFFERPROC __glewBindBuffer = NULL;\nPFNGLBUFFERDATAPROC __glewBufferData = NULL;\nPFNGLBUFFERSUBDATAPROC __glewBufferSubData = NULL;\nPFNGLDELETEBUFFERSPROC __glewDeleteBuffers = NULL;\nPFNGLDELETEQUERIESPROC __glewDeleteQueries = NULL;\nPFNGLENDQUERYPROC __glewEndQuery = NULL;\nPFNGLGENBUFFERSPROC __glewGenBuffers = NULL;\nPFNGLGENQUERIESPROC __glewGenQueries = NULL;\nPFNGLGETBUFFERPARAMETERIVPROC __glewGetBufferParameteriv = NULL;\nPFNGLGETBUFFERPOINTERVPROC __glewGetBufferPointerv = NULL;\nPFNGLGETBUFFERSUBDATAPROC __glewGetBufferSubData = NULL;\nPFNGLGETQUERYOBJECTIVPROC __glewGetQueryObjectiv = NULL;\nPFNGLGETQUERYOBJECTUIVPROC __glewGetQueryObjectuiv = NULL;\nPFNGLGETQUERYIVPROC __glewGetQueryiv = NULL;\nPFNGLISBUFFERPROC __glewIsBuffer = NULL;\nPFNGLISQUERYPROC __glewIsQuery = NULL;\nPFNGLMAPBUFFERPROC __glewMapBuffer = NULL;\nPFNGLUNMAPBUFFERPROC __glewUnmapBuffer = NULL;\n\nPFNGLATTACHSHADERPROC __glewAttachShader = NULL;\nPFNGLBINDATTRIBLOCATIONPROC __glewBindAttribLocation = NULL;\nPFNGLBLENDEQUATIONSEPARATEPROC __glewBlendEquationSeparate = NULL;\nPFNGLCOMPILESHADERPROC __glewCompileShader = NULL;\nPFNGLCREATEPROGRAMPROC __glewCreateProgram = NULL;\nPFNGLCREATESHADERPROC __glewCreateShader = NULL;\nPFNGLDELETEPROGRAMPROC __glewDeleteProgram = NULL;\nPFNGLDELETESHADERPROC __glewDeleteShader = NULL;\nPFNGLDETACHSHADERPROC __glewDetachShader = NULL;\nPFNGLDISABLEVERTEXATTRIBARRAYPROC __glewDisableVertexAttribArray = NULL;\nPFNGLDRAWBUFFERSPROC __glewDrawBuffers = NULL;\nPFNGLENABLEVERTEXATTRIBARRAYPROC __glewEnableVertexAttribArray = NULL;\nPFNGLGETACTIVEATTRIBPROC __glewGetActiveAttrib = NULL;\nPFNGLGETACTIVEUNIFORMPROC __glewGetActiveUniform = NULL;\nPFNGLGETATTACHEDSHADERSPROC __glewGetAttachedShaders = NULL;\nPFNGLGETATTRIBLOCATIONPROC __glewGetAttribLocation = NULL;\nPFNGLGETPROGRAMINFOLOGPROC __glewGetProgramInfoLog = NULL;\nPFNGLGETPROGRAMIVPROC __glewGetProgramiv = NULL;\nPFNGLGETSHADERINFOLOGPROC __glewGetShaderInfoLog = NULL;\nPFNGLGETSHADERSOURCEPROC __glewGetShaderSource = NULL;\nPFNGLGETSHADERIVPROC __glewGetShaderiv = NULL;\nPFNGLGETUNIFORMLOCATIONPROC __glewGetUniformLocation = NULL;\nPFNGLGETUNIFORMFVPROC __glewGetUniformfv = NULL;\nPFNGLGETUNIFORMIVPROC __glewGetUniformiv = NULL;\nPFNGLGETVERTEXATTRIBPOINTERVPROC __glewGetVertexAttribPointerv = NULL;\nPFNGLGETVERTEXATTRIBDVPROC __glewGetVertexAttribdv = NULL;\nPFNGLGETVERTEXATTRIBFVPROC __glewGetVertexAttribfv = NULL;\nPFNGLGETVERTEXATTRIBIVPROC __glewGetVertexAttribiv = NULL;\nPFNGLISPROGRAMPROC __glewIsProgram = NULL;\nPFNGLISSHADERPROC __glewIsShader = NULL;\nPFNGLLINKPROGRAMPROC __glewLinkProgram = NULL;\nPFNGLSHADERSOURCEPROC __glewShaderSource = NULL;\nPFNGLSTENCILFUNCSEPARATEPROC __glewStencilFuncSeparate = NULL;\nPFNGLSTENCILMASKSEPARATEPROC __glewStencilMaskSeparate = NULL;\nPFNGLSTENCILOPSEPARATEPROC __glewStencilOpSeparate = NULL;\nPFNGLUNIFORM1FPROC __glewUniform1f = NULL;\nPFNGLUNIFORM1FVPROC __glewUniform1fv = NULL;\nPFNGLUNIFORM1IPROC __glewUniform1i = NULL;\nPFNGLUNIFORM1IVPROC __glewUniform1iv = NULL;\nPFNGLUNIFORM2FPROC __glewUniform2f = NULL;\nPFNGLUNIFORM2FVPROC __glewUniform2fv = NULL;\nPFNGLUNIFORM2IPROC __glewUniform2i = NULL;\nPFNGLUNIFORM2IVPROC __glewUniform2iv = NULL;\nPFNGLUNIFORM3FPROC __glewUniform3f = NULL;\nPFNGLUNIFORM3FVPROC __glewUniform3fv = NULL;\nPFNGLUNIFORM3IPROC __glewUniform3i = NULL;\nPFNGLUNIFORM3IVPROC __glewUniform3iv = NULL;\nPFNGLUNIFORM4FPROC __glewUniform4f = NULL;\nPFNGLUNIFORM4FVPROC __glewUniform4fv = NULL;\nPFNGLUNIFORM4IPROC __glewUniform4i = NULL;\nPFNGLUNIFORM4IVPROC __glewUniform4iv = NULL;\nPFNGLUNIFORMMATRIX2FVPROC __glewUniformMatrix2fv = NULL;\nPFNGLUNIFORMMATRIX3FVPROC __glewUniformMatrix3fv = NULL;\nPFNGLUNIFORMMATRIX4FVPROC __glewUniformMatrix4fv = NULL;\nPFNGLUSEPROGRAMPROC __glewUseProgram = NULL;\nPFNGLVALIDATEPROGRAMPROC __glewValidateProgram = NULL;\nPFNGLVERTEXATTRIB1DPROC __glewVertexAttrib1d = NULL;\nPFNGLVERTEXATTRIB1DVPROC __glewVertexAttrib1dv = NULL;\nPFNGLVERTEXATTRIB1FPROC __glewVertexAttrib1f = NULL;\nPFNGLVERTEXATTRIB1FVPROC __glewVertexAttrib1fv = NULL;\nPFNGLVERTEXATTRIB1SPROC __glewVertexAttrib1s = NULL;\nPFNGLVERTEXATTRIB1SVPROC __glewVertexAttrib1sv = NULL;\nPFNGLVERTEXATTRIB2DPROC __glewVertexAttrib2d = NULL;\nPFNGLVERTEXATTRIB2DVPROC __glewVertexAttrib2dv = NULL;\nPFNGLVERTEXATTRIB2FPROC __glewVertexAttrib2f = NULL;\nPFNGLVERTEXATTRIB2FVPROC __glewVertexAttrib2fv = NULL;\nPFNGLVERTEXATTRIB2SPROC __glewVertexAttrib2s = NULL;\nPFNGLVERTEXATTRIB2SVPROC __glewVertexAttrib2sv = NULL;\nPFNGLVERTEXATTRIB3DPROC __glewVertexAttrib3d = NULL;\nPFNGLVERTEXATTRIB3DVPROC __glewVertexAttrib3dv = NULL;\nPFNGLVERTEXATTRIB3FPROC __glewVertexAttrib3f = NULL;\nPFNGLVERTEXATTRIB3FVPROC __glewVertexAttrib3fv = NULL;\nPFNGLVERTEXATTRIB3SPROC __glewVertexAttrib3s = NULL;\nPFNGLVERTEXATTRIB3SVPROC __glewVertexAttrib3sv = NULL;\nPFNGLVERTEXATTRIB4NBVPROC __glewVertexAttrib4Nbv = NULL;\nPFNGLVERTEXATTRIB4NIVPROC __glewVertexAttrib4Niv = NULL;\nPFNGLVERTEXATTRIB4NSVPROC __glewVertexAttrib4Nsv = NULL;\nPFNGLVERTEXATTRIB4NUBPROC __glewVertexAttrib4Nub = NULL;\nPFNGLVERTEXATTRIB4NUBVPROC __glewVertexAttrib4Nubv = NULL;\nPFNGLVERTEXATTRIB4NUIVPROC __glewVertexAttrib4Nuiv = NULL;\nPFNGLVERTEXATTRIB4NUSVPROC __glewVertexAttrib4Nusv = NULL;\nPFNGLVERTEXATTRIB4BVPROC __glewVertexAttrib4bv = NULL;\nPFNGLVERTEXATTRIB4DPROC __glewVertexAttrib4d = NULL;\nPFNGLVERTEXATTRIB4DVPROC __glewVertexAttrib4dv = NULL;\nPFNGLVERTEXATTRIB4FPROC __glewVertexAttrib4f = NULL;\nPFNGLVERTEXATTRIB4FVPROC __glewVertexAttrib4fv = NULL;\nPFNGLVERTEXATTRIB4IVPROC __glewVertexAttrib4iv = NULL;\nPFNGLVERTEXATTRIB4SPROC __glewVertexAttrib4s = NULL;\nPFNGLVERTEXATTRIB4SVPROC __glewVertexAttrib4sv = NULL;\nPFNGLVERTEXATTRIB4UBVPROC __glewVertexAttrib4ubv = NULL;\nPFNGLVERTEXATTRIB4UIVPROC __glewVertexAttrib4uiv = NULL;\nPFNGLVERTEXATTRIB4USVPROC __glewVertexAttrib4usv = NULL;\nPFNGLVERTEXATTRIBPOINTERPROC __glewVertexAttribPointer = NULL;\n\nPFNGLUNIFORMMATRIX2X3FVPROC __glewUniformMatrix2x3fv = NULL;\nPFNGLUNIFORMMATRIX2X4FVPROC __glewUniformMatrix2x4fv = NULL;\nPFNGLUNIFORMMATRIX3X2FVPROC __glewUniformMatrix3x2fv = NULL;\nPFNGLUNIFORMMATRIX3X4FVPROC __glewUniformMatrix3x4fv = NULL;\nPFNGLUNIFORMMATRIX4X2FVPROC __glewUniformMatrix4x2fv = NULL;\nPFNGLUNIFORMMATRIX4X3FVPROC __glewUniformMatrix4x3fv = NULL;\n\nPFNGLBEGINCONDITIONALRENDERPROC __glewBeginConditionalRender = NULL;\nPFNGLBEGINTRANSFORMFEEDBACKPROC __glewBeginTransformFeedback = NULL;\nPFNGLBINDFRAGDATALOCATIONPROC __glewBindFragDataLocation = NULL;\nPFNGLCLAMPCOLORPROC __glewClampColor = NULL;\nPFNGLCLEARBUFFERFIPROC __glewClearBufferfi = NULL;\nPFNGLCLEARBUFFERFVPROC __glewClearBufferfv = NULL;\nPFNGLCLEARBUFFERIVPROC __glewClearBufferiv = NULL;\nPFNGLCLEARBUFFERUIVPROC __glewClearBufferuiv = NULL;\nPFNGLCOLORMASKIPROC __glewColorMaski = NULL;\nPFNGLDISABLEIPROC __glewDisablei = NULL;\nPFNGLENABLEIPROC __glewEnablei = NULL;\nPFNGLENDCONDITIONALRENDERPROC __glewEndConditionalRender = NULL;\nPFNGLENDTRANSFORMFEEDBACKPROC __glewEndTransformFeedback = NULL;\nPFNGLGETBOOLEANI_VPROC __glewGetBooleani_v = NULL;\nPFNGLGETFRAGDATALOCATIONPROC __glewGetFragDataLocation = NULL;\nPFNGLGETSTRINGIPROC __glewGetStringi = NULL;\nPFNGLGETTEXPARAMETERIIVPROC __glewGetTexParameterIiv = NULL;\nPFNGLGETTEXPARAMETERIUIVPROC __glewGetTexParameterIuiv = NULL;\nPFNGLGETTRANSFORMFEEDBACKVARYINGPROC __glewGetTransformFeedbackVarying = NULL;\nPFNGLGETUNIFORMUIVPROC __glewGetUniformuiv = NULL;\nPFNGLGETVERTEXATTRIBIIVPROC __glewGetVertexAttribIiv = NULL;\nPFNGLGETVERTEXATTRIBIUIVPROC __glewGetVertexAttribIuiv = NULL;\nPFNGLISENABLEDIPROC __glewIsEnabledi = NULL;\nPFNGLTEXPARAMETERIIVPROC __glewTexParameterIiv = NULL;\nPFNGLTEXPARAMETERIUIVPROC __glewTexParameterIuiv = NULL;\nPFNGLTRANSFORMFEEDBACKVARYINGSPROC __glewTransformFeedbackVaryings = NULL;\nPFNGLUNIFORM1UIPROC __glewUniform1ui = NULL;\nPFNGLUNIFORM1UIVPROC __glewUniform1uiv = NULL;\nPFNGLUNIFORM2UIPROC __glewUniform2ui = NULL;\nPFNGLUNIFORM2UIVPROC __glewUniform2uiv = NULL;\nPFNGLUNIFORM3UIPROC __glewUniform3ui = NULL;\nPFNGLUNIFORM3UIVPROC __glewUniform3uiv = NULL;\nPFNGLUNIFORM4UIPROC __glewUniform4ui = NULL;\nPFNGLUNIFORM4UIVPROC __glewUniform4uiv = NULL;\nPFNGLVERTEXATTRIBI1IPROC __glewVertexAttribI1i = NULL;\nPFNGLVERTEXATTRIBI1IVPROC __glewVertexAttribI1iv = NULL;\nPFNGLVERTEXATTRIBI1UIPROC __glewVertexAttribI1ui = NULL;\nPFNGLVERTEXATTRIBI1UIVPROC __glewVertexAttribI1uiv = NULL;\nPFNGLVERTEXATTRIBI2IPROC __glewVertexAttribI2i = NULL;\nPFNGLVERTEXATTRIBI2IVPROC __glewVertexAttribI2iv = NULL;\nPFNGLVERTEXATTRIBI2UIPROC __glewVertexAttribI2ui = NULL;\nPFNGLVERTEXATTRIBI2UIVPROC __glewVertexAttribI2uiv = NULL;\nPFNGLVERTEXATTRIBI3IPROC __glewVertexAttribI3i = NULL;\nPFNGLVERTEXATTRIBI3IVPROC __glewVertexAttribI3iv = NULL;\nPFNGLVERTEXATTRIBI3UIPROC __glewVertexAttribI3ui = NULL;\nPFNGLVERTEXATTRIBI3UIVPROC __glewVertexAttribI3uiv = NULL;\nPFNGLVERTEXATTRIBI4BVPROC __glewVertexAttribI4bv = NULL;\nPFNGLVERTEXATTRIBI4IPROC __glewVertexAttribI4i = NULL;\nPFNGLVERTEXATTRIBI4IVPROC __glewVertexAttribI4iv = NULL;\nPFNGLVERTEXATTRIBI4SVPROC __glewVertexAttribI4sv = NULL;\nPFNGLVERTEXATTRIBI4UBVPROC __glewVertexAttribI4ubv = NULL;\nPFNGLVERTEXATTRIBI4UIPROC __glewVertexAttribI4ui = NULL;\nPFNGLVERTEXATTRIBI4UIVPROC __glewVertexAttribI4uiv = NULL;\nPFNGLVERTEXATTRIBI4USVPROC __glewVertexAttribI4usv = NULL;\nPFNGLVERTEXATTRIBIPOINTERPROC __glewVertexAttribIPointer = NULL;\n\nPFNGLDRAWARRAYSINSTANCEDPROC __glewDrawArraysInstanced = NULL;\nPFNGLDRAWELEMENTSINSTANCEDPROC __glewDrawElementsInstanced = NULL;\nPFNGLPRIMITIVERESTARTINDEXPROC __glewPrimitiveRestartIndex = NULL;\nPFNGLTEXBUFFERPROC __glewTexBuffer = NULL;\n\nPFNGLFRAMEBUFFERTEXTUREPROC __glewFramebufferTexture = NULL;\nPFNGLGETBUFFERPARAMETERI64VPROC __glewGetBufferParameteri64v = NULL;\nPFNGLGETINTEGER64I_VPROC __glewGetInteger64i_v = NULL;\n\nPFNGLVERTEXATTRIBDIVISORPROC __glewVertexAttribDivisor = NULL;\n\nPFNGLBLENDEQUATIONSEPARATEIPROC __glewBlendEquationSeparatei = NULL;\nPFNGLBLENDEQUATIONIPROC __glewBlendEquationi = NULL;\nPFNGLBLENDFUNCSEPARATEIPROC __glewBlendFuncSeparatei = NULL;\nPFNGLBLENDFUNCIPROC __glewBlendFunci = NULL;\nPFNGLMINSAMPLESHADINGPROC __glewMinSampleShading = NULL;\n\nPFNGLGETGRAPHICSRESETSTATUSPROC __glewGetGraphicsResetStatus = NULL;\nPFNGLGETNCOMPRESSEDTEXIMAGEPROC __glewGetnCompressedTexImage = NULL;\nPFNGLGETNTEXIMAGEPROC __glewGetnTexImage = NULL;\nPFNGLGETNUNIFORMDVPROC __glewGetnUniformdv = NULL;\n\nPFNGLTBUFFERMASK3DFXPROC __glewTbufferMask3DFX = NULL;\n\nPFNGLDEBUGMESSAGECALLBACKAMDPROC __glewDebugMessageCallbackAMD = NULL;\nPFNGLDEBUGMESSAGEENABLEAMDPROC __glewDebugMessageEnableAMD = NULL;\nPFNGLDEBUGMESSAGEINSERTAMDPROC __glewDebugMessageInsertAMD = NULL;\nPFNGLGETDEBUGMESSAGELOGAMDPROC __glewGetDebugMessageLogAMD = NULL;\n\nPFNGLBLENDEQUATIONINDEXEDAMDPROC __glewBlendEquationIndexedAMD = NULL;\nPFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC __glewBlendEquationSeparateIndexedAMD = NULL;\nPFNGLBLENDFUNCINDEXEDAMDPROC __glewBlendFuncIndexedAMD = NULL;\nPFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC __glewBlendFuncSeparateIndexedAMD = NULL;\n\nPFNGLVERTEXATTRIBPARAMETERIAMDPROC __glewVertexAttribParameteriAMD = NULL;\n\nPFNGLMULTIDRAWARRAYSINDIRECTAMDPROC __glewMultiDrawArraysIndirectAMD = NULL;\nPFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC __glewMultiDrawElementsIndirectAMD = NULL;\n\nPFNGLDELETENAMESAMDPROC __glewDeleteNamesAMD = NULL;\nPFNGLGENNAMESAMDPROC __glewGenNamesAMD = NULL;\nPFNGLISNAMEAMDPROC __glewIsNameAMD = NULL;\n\nPFNGLQUERYOBJECTPARAMETERUIAMDPROC __glewQueryObjectParameteruiAMD = NULL;\n\nPFNGLBEGINPERFMONITORAMDPROC __glewBeginPerfMonitorAMD = NULL;\nPFNGLDELETEPERFMONITORSAMDPROC __glewDeletePerfMonitorsAMD = NULL;\nPFNGLENDPERFMONITORAMDPROC __glewEndPerfMonitorAMD = NULL;\nPFNGLGENPERFMONITORSAMDPROC __glewGenPerfMonitorsAMD = NULL;\nPFNGLGETPERFMONITORCOUNTERDATAAMDPROC __glewGetPerfMonitorCounterDataAMD = NULL;\nPFNGLGETPERFMONITORCOUNTERINFOAMDPROC __glewGetPerfMonitorCounterInfoAMD = NULL;\nPFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC __glewGetPerfMonitorCounterStringAMD = NULL;\nPFNGLGETPERFMONITORCOUNTERSAMDPROC __glewGetPerfMonitorCountersAMD = NULL;\nPFNGLGETPERFMONITORGROUPSTRINGAMDPROC __glewGetPerfMonitorGroupStringAMD = NULL;\nPFNGLGETPERFMONITORGROUPSAMDPROC __glewGetPerfMonitorGroupsAMD = NULL;\nPFNGLSELECTPERFMONITORCOUNTERSAMDPROC __glewSelectPerfMonitorCountersAMD = NULL;\n\nPFNGLSETMULTISAMPLEFVAMDPROC __glewSetMultisamplefvAMD = NULL;\n\nPFNGLTEXSTORAGESPARSEAMDPROC __glewTexStorageSparseAMD = NULL;\nPFNGLTEXTURESTORAGESPARSEAMDPROC __glewTextureStorageSparseAMD = NULL;\n\nPFNGLSTENCILOPVALUEAMDPROC __glewStencilOpValueAMD = NULL;\n\nPFNGLTESSELLATIONFACTORAMDPROC __glewTessellationFactorAMD = NULL;\nPFNGLTESSELLATIONMODEAMDPROC __glewTessellationModeAMD = NULL;\n\nPFNGLBLITFRAMEBUFFERANGLEPROC __glewBlitFramebufferANGLE = NULL;\n\nPFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC __glewRenderbufferStorageMultisampleANGLE = NULL;\n\nPFNGLDRAWARRAYSINSTANCEDANGLEPROC __glewDrawArraysInstancedANGLE = NULL;\nPFNGLDRAWELEMENTSINSTANCEDANGLEPROC __glewDrawElementsInstancedANGLE = NULL;\nPFNGLVERTEXATTRIBDIVISORANGLEPROC __glewVertexAttribDivisorANGLE = NULL;\n\nPFNGLBEGINQUERYANGLEPROC __glewBeginQueryANGLE = NULL;\nPFNGLDELETEQUERIESANGLEPROC __glewDeleteQueriesANGLE = NULL;\nPFNGLENDQUERYANGLEPROC __glewEndQueryANGLE = NULL;\nPFNGLGENQUERIESANGLEPROC __glewGenQueriesANGLE = NULL;\nPFNGLGETQUERYOBJECTI64VANGLEPROC __glewGetQueryObjecti64vANGLE = NULL;\nPFNGLGETQUERYOBJECTIVANGLEPROC __glewGetQueryObjectivANGLE = NULL;\nPFNGLGETQUERYOBJECTUI64VANGLEPROC __glewGetQueryObjectui64vANGLE = NULL;\nPFNGLGETQUERYOBJECTUIVANGLEPROC __glewGetQueryObjectuivANGLE = NULL;\nPFNGLGETQUERYIVANGLEPROC __glewGetQueryivANGLE = NULL;\nPFNGLISQUERYANGLEPROC __glewIsQueryANGLE = NULL;\nPFNGLQUERYCOUNTERANGLEPROC __glewQueryCounterANGLE = NULL;\n\nPFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC __glewGetTranslatedShaderSourceANGLE = NULL;\n\nPFNGLDRAWELEMENTARRAYAPPLEPROC __glewDrawElementArrayAPPLE = NULL;\nPFNGLDRAWRANGEELEMENTARRAYAPPLEPROC __glewDrawRangeElementArrayAPPLE = NULL;\nPFNGLELEMENTPOINTERAPPLEPROC __glewElementPointerAPPLE = NULL;\nPFNGLMULTIDRAWELEMENTARRAYAPPLEPROC __glewMultiDrawElementArrayAPPLE = NULL;\nPFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC __glewMultiDrawRangeElementArrayAPPLE = NULL;\n\nPFNGLDELETEFENCESAPPLEPROC __glewDeleteFencesAPPLE = NULL;\nPFNGLFINISHFENCEAPPLEPROC __glewFinishFenceAPPLE = NULL;\nPFNGLFINISHOBJECTAPPLEPROC __glewFinishObjectAPPLE = NULL;\nPFNGLGENFENCESAPPLEPROC __glewGenFencesAPPLE = NULL;\nPFNGLISFENCEAPPLEPROC __glewIsFenceAPPLE = NULL;\nPFNGLSETFENCEAPPLEPROC __glewSetFenceAPPLE = NULL;\nPFNGLTESTFENCEAPPLEPROC __glewTestFenceAPPLE = NULL;\nPFNGLTESTOBJECTAPPLEPROC __glewTestObjectAPPLE = NULL;\n\nPFNGLBUFFERPARAMETERIAPPLEPROC __glewBufferParameteriAPPLE = NULL;\nPFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC __glewFlushMappedBufferRangeAPPLE = NULL;\n\nPFNGLGETOBJECTPARAMETERIVAPPLEPROC __glewGetObjectParameterivAPPLE = NULL;\nPFNGLOBJECTPURGEABLEAPPLEPROC __glewObjectPurgeableAPPLE = NULL;\nPFNGLOBJECTUNPURGEABLEAPPLEPROC __glewObjectUnpurgeableAPPLE = NULL;\n\nPFNGLGETTEXPARAMETERPOINTERVAPPLEPROC __glewGetTexParameterPointervAPPLE = NULL;\nPFNGLTEXTURERANGEAPPLEPROC __glewTextureRangeAPPLE = NULL;\n\nPFNGLBINDVERTEXARRAYAPPLEPROC __glewBindVertexArrayAPPLE = NULL;\nPFNGLDELETEVERTEXARRAYSAPPLEPROC __glewDeleteVertexArraysAPPLE = NULL;\nPFNGLGENVERTEXARRAYSAPPLEPROC __glewGenVertexArraysAPPLE = NULL;\nPFNGLISVERTEXARRAYAPPLEPROC __glewIsVertexArrayAPPLE = NULL;\n\nPFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC __glewFlushVertexArrayRangeAPPLE = NULL;\nPFNGLVERTEXARRAYPARAMETERIAPPLEPROC __glewVertexArrayParameteriAPPLE = NULL;\nPFNGLVERTEXARRAYRANGEAPPLEPROC __glewVertexArrayRangeAPPLE = NULL;\n\nPFNGLDISABLEVERTEXATTRIBAPPLEPROC __glewDisableVertexAttribAPPLE = NULL;\nPFNGLENABLEVERTEXATTRIBAPPLEPROC __glewEnableVertexAttribAPPLE = NULL;\nPFNGLISVERTEXATTRIBENABLEDAPPLEPROC __glewIsVertexAttribEnabledAPPLE = NULL;\nPFNGLMAPVERTEXATTRIB1DAPPLEPROC __glewMapVertexAttrib1dAPPLE = NULL;\nPFNGLMAPVERTEXATTRIB1FAPPLEPROC __glewMapVertexAttrib1fAPPLE = NULL;\nPFNGLMAPVERTEXATTRIB2DAPPLEPROC __glewMapVertexAttrib2dAPPLE = NULL;\nPFNGLMAPVERTEXATTRIB2FAPPLEPROC __glewMapVertexAttrib2fAPPLE = NULL;\n\nPFNGLCLEARDEPTHFPROC __glewClearDepthf = NULL;\nPFNGLDEPTHRANGEFPROC __glewDepthRangef = NULL;\nPFNGLGETSHADERPRECISIONFORMATPROC __glewGetShaderPrecisionFormat = NULL;\nPFNGLRELEASESHADERCOMPILERPROC __glewReleaseShaderCompiler = NULL;\nPFNGLSHADERBINARYPROC __glewShaderBinary = NULL;\n\nPFNGLMEMORYBARRIERBYREGIONPROC __glewMemoryBarrierByRegion = NULL;\n\nPFNGLPRIMITIVEBOUNDINGBOXARBPROC __glewPrimitiveBoundingBoxARB = NULL;\n\nPFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC __glewDrawArraysInstancedBaseInstance = NULL;\nPFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC __glewDrawElementsInstancedBaseInstance = NULL;\nPFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC __glewDrawElementsInstancedBaseVertexBaseInstance = NULL;\n\nPFNGLGETIMAGEHANDLEARBPROC __glewGetImageHandleARB = NULL;\nPFNGLGETTEXTUREHANDLEARBPROC __glewGetTextureHandleARB = NULL;\nPFNGLGETTEXTURESAMPLERHANDLEARBPROC __glewGetTextureSamplerHandleARB = NULL;\nPFNGLGETVERTEXATTRIBLUI64VARBPROC __glewGetVertexAttribLui64vARB = NULL;\nPFNGLISIMAGEHANDLERESIDENTARBPROC __glewIsImageHandleResidentARB = NULL;\nPFNGLISTEXTUREHANDLERESIDENTARBPROC __glewIsTextureHandleResidentARB = NULL;\nPFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC __glewMakeImageHandleNonResidentARB = NULL;\nPFNGLMAKEIMAGEHANDLERESIDENTARBPROC __glewMakeImageHandleResidentARB = NULL;\nPFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC __glewMakeTextureHandleNonResidentARB = NULL;\nPFNGLMAKETEXTUREHANDLERESIDENTARBPROC __glewMakeTextureHandleResidentARB = NULL;\nPFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC __glewProgramUniformHandleui64ARB = NULL;\nPFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC __glewProgramUniformHandleui64vARB = NULL;\nPFNGLUNIFORMHANDLEUI64ARBPROC __glewUniformHandleui64ARB = NULL;\nPFNGLUNIFORMHANDLEUI64VARBPROC __glewUniformHandleui64vARB = NULL;\nPFNGLVERTEXATTRIBL1UI64ARBPROC __glewVertexAttribL1ui64ARB = NULL;\nPFNGLVERTEXATTRIBL1UI64VARBPROC __glewVertexAttribL1ui64vARB = NULL;\n\nPFNGLBINDFRAGDATALOCATIONINDEXEDPROC __glewBindFragDataLocationIndexed = NULL;\nPFNGLGETFRAGDATAINDEXPROC __glewGetFragDataIndex = NULL;\n\nPFNGLBUFFERSTORAGEPROC __glewBufferStorage = NULL;\nPFNGLNAMEDBUFFERSTORAGEEXTPROC __glewNamedBufferStorageEXT = NULL;\n\nPFNGLCREATESYNCFROMCLEVENTARBPROC __glewCreateSyncFromCLeventARB = NULL;\n\nPFNGLCLEARBUFFERDATAPROC __glewClearBufferData = NULL;\nPFNGLCLEARBUFFERSUBDATAPROC __glewClearBufferSubData = NULL;\nPFNGLCLEARNAMEDBUFFERDATAEXTPROC __glewClearNamedBufferDataEXT = NULL;\nPFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC __glewClearNamedBufferSubDataEXT = NULL;\n\nPFNGLCLEARTEXIMAGEPROC __glewClearTexImage = NULL;\nPFNGLCLEARTEXSUBIMAGEPROC __glewClearTexSubImage = NULL;\n\nPFNGLCLIPCONTROLPROC __glewClipControl = NULL;\n\nPFNGLCLAMPCOLORARBPROC __glewClampColorARB = NULL;\n\nPFNGLDISPATCHCOMPUTEPROC __glewDispatchCompute = NULL;\nPFNGLDISPATCHCOMPUTEINDIRECTPROC __glewDispatchComputeIndirect = NULL;\n\nPFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC __glewDispatchComputeGroupSizeARB = NULL;\n\nPFNGLCOPYBUFFERSUBDATAPROC __glewCopyBufferSubData = NULL;\n\nPFNGLCOPYIMAGESUBDATAPROC __glewCopyImageSubData = NULL;\n\nPFNGLDEBUGMESSAGECALLBACKARBPROC __glewDebugMessageCallbackARB = NULL;\nPFNGLDEBUGMESSAGECONTROLARBPROC __glewDebugMessageControlARB = NULL;\nPFNGLDEBUGMESSAGEINSERTARBPROC __glewDebugMessageInsertARB = NULL;\nPFNGLGETDEBUGMESSAGELOGARBPROC __glewGetDebugMessageLogARB = NULL;\n\nPFNGLBINDTEXTUREUNITPROC __glewBindTextureUnit = NULL;\nPFNGLBLITNAMEDFRAMEBUFFERPROC __glewBlitNamedFramebuffer = NULL;\nPFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC __glewCheckNamedFramebufferStatus = NULL;\nPFNGLCLEARNAMEDBUFFERDATAPROC __glewClearNamedBufferData = NULL;\nPFNGLCLEARNAMEDBUFFERSUBDATAPROC __glewClearNamedBufferSubData = NULL;\nPFNGLCLEARNAMEDFRAMEBUFFERFIPROC __glewClearNamedFramebufferfi = NULL;\nPFNGLCLEARNAMEDFRAMEBUFFERFVPROC __glewClearNamedFramebufferfv = NULL;\nPFNGLCLEARNAMEDFRAMEBUFFERIVPROC __glewClearNamedFramebufferiv = NULL;\nPFNGLCLEARNAMEDFRAMEBUFFERUIVPROC __glewClearNamedFramebufferuiv = NULL;\nPFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC __glewCompressedTextureSubImage1D = NULL;\nPFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC __glewCompressedTextureSubImage2D = NULL;\nPFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC __glewCompressedTextureSubImage3D = NULL;\nPFNGLCOPYNAMEDBUFFERSUBDATAPROC __glewCopyNamedBufferSubData = NULL;\nPFNGLCOPYTEXTURESUBIMAGE1DPROC __glewCopyTextureSubImage1D = NULL;\nPFNGLCOPYTEXTURESUBIMAGE2DPROC __glewCopyTextureSubImage2D = NULL;\nPFNGLCOPYTEXTURESUBIMAGE3DPROC __glewCopyTextureSubImage3D = NULL;\nPFNGLCREATEBUFFERSPROC __glewCreateBuffers = NULL;\nPFNGLCREATEFRAMEBUFFERSPROC __glewCreateFramebuffers = NULL;\nPFNGLCREATEPROGRAMPIPELINESPROC __glewCreateProgramPipelines = NULL;\nPFNGLCREATEQUERIESPROC __glewCreateQueries = NULL;\nPFNGLCREATERENDERBUFFERSPROC __glewCreateRenderbuffers = NULL;\nPFNGLCREATESAMPLERSPROC __glewCreateSamplers = NULL;\nPFNGLCREATETEXTURESPROC __glewCreateTextures = NULL;\nPFNGLCREATETRANSFORMFEEDBACKSPROC __glewCreateTransformFeedbacks = NULL;\nPFNGLCREATEVERTEXARRAYSPROC __glewCreateVertexArrays = NULL;\nPFNGLDISABLEVERTEXARRAYATTRIBPROC __glewDisableVertexArrayAttrib = NULL;\nPFNGLENABLEVERTEXARRAYATTRIBPROC __glewEnableVertexArrayAttrib = NULL;\nPFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC __glewFlushMappedNamedBufferRange = NULL;\nPFNGLGENERATETEXTUREMIPMAPPROC __glewGenerateTextureMipmap = NULL;\nPFNGLGETCOMPRESSEDTEXTUREIMAGEPROC __glewGetCompressedTextureImage = NULL;\nPFNGLGETNAMEDBUFFERPARAMETERI64VPROC __glewGetNamedBufferParameteri64v = NULL;\nPFNGLGETNAMEDBUFFERPARAMETERIVPROC __glewGetNamedBufferParameteriv = NULL;\nPFNGLGETNAMEDBUFFERPOINTERVPROC __glewGetNamedBufferPointerv = NULL;\nPFNGLGETNAMEDBUFFERSUBDATAPROC __glewGetNamedBufferSubData = NULL;\nPFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC __glewGetNamedFramebufferAttachmentParameteriv = NULL;\nPFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC __glewGetNamedFramebufferParameteriv = NULL;\nPFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC __glewGetNamedRenderbufferParameteriv = NULL;\nPFNGLGETQUERYBUFFEROBJECTI64VPROC __glewGetQueryBufferObjecti64v = NULL;\nPFNGLGETQUERYBUFFEROBJECTIVPROC __glewGetQueryBufferObjectiv = NULL;\nPFNGLGETQUERYBUFFEROBJECTUI64VPROC __glewGetQueryBufferObjectui64v = NULL;\nPFNGLGETQUERYBUFFEROBJECTUIVPROC __glewGetQueryBufferObjectuiv = NULL;\nPFNGLGETTEXTUREIMAGEPROC __glewGetTextureImage = NULL;\nPFNGLGETTEXTURELEVELPARAMETERFVPROC __glewGetTextureLevelParameterfv = NULL;\nPFNGLGETTEXTURELEVELPARAMETERIVPROC __glewGetTextureLevelParameteriv = NULL;\nPFNGLGETTEXTUREPARAMETERIIVPROC __glewGetTextureParameterIiv = NULL;\nPFNGLGETTEXTUREPARAMETERIUIVPROC __glewGetTextureParameterIuiv = NULL;\nPFNGLGETTEXTUREPARAMETERFVPROC __glewGetTextureParameterfv = NULL;\nPFNGLGETTEXTUREPARAMETERIVPROC __glewGetTextureParameteriv = NULL;\nPFNGLGETTRANSFORMFEEDBACKI64_VPROC __glewGetTransformFeedbacki64_v = NULL;\nPFNGLGETTRANSFORMFEEDBACKI_VPROC __glewGetTransformFeedbacki_v = NULL;\nPFNGLGETTRANSFORMFEEDBACKIVPROC __glewGetTransformFeedbackiv = NULL;\nPFNGLGETVERTEXARRAYINDEXED64IVPROC __glewGetVertexArrayIndexed64iv = NULL;\nPFNGLGETVERTEXARRAYINDEXEDIVPROC __glewGetVertexArrayIndexediv = NULL;\nPFNGLGETVERTEXARRAYIVPROC __glewGetVertexArrayiv = NULL;\nPFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC __glewInvalidateNamedFramebufferData = NULL;\nPFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC __glewInvalidateNamedFramebufferSubData = NULL;\nPFNGLMAPNAMEDBUFFERPROC __glewMapNamedBuffer = NULL;\nPFNGLMAPNAMEDBUFFERRANGEPROC __glewMapNamedBufferRange = NULL;\nPFNGLNAMEDBUFFERDATAPROC __glewNamedBufferData = NULL;\nPFNGLNAMEDBUFFERSTORAGEPROC __glewNamedBufferStorage = NULL;\nPFNGLNAMEDBUFFERSUBDATAPROC __glewNamedBufferSubData = NULL;\nPFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC __glewNamedFramebufferDrawBuffer = NULL;\nPFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC __glewNamedFramebufferDrawBuffers = NULL;\nPFNGLNAMEDFRAMEBUFFERPARAMETERIPROC __glewNamedFramebufferParameteri = NULL;\nPFNGLNAMEDFRAMEBUFFERREADBUFFERPROC __glewNamedFramebufferReadBuffer = NULL;\nPFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC __glewNamedFramebufferRenderbuffer = NULL;\nPFNGLNAMEDFRAMEBUFFERTEXTUREPROC __glewNamedFramebufferTexture = NULL;\nPFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC __glewNamedFramebufferTextureLayer = NULL;\nPFNGLNAMEDRENDERBUFFERSTORAGEPROC __glewNamedRenderbufferStorage = NULL;\nPFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC __glewNamedRenderbufferStorageMultisample = NULL;\nPFNGLTEXTUREBUFFERPROC __glewTextureBuffer = NULL;\nPFNGLTEXTUREBUFFERRANGEPROC __glewTextureBufferRange = NULL;\nPFNGLTEXTUREPARAMETERIIVPROC __glewTextureParameterIiv = NULL;\nPFNGLTEXTUREPARAMETERIUIVPROC __glewTextureParameterIuiv = NULL;\nPFNGLTEXTUREPARAMETERFPROC __glewTextureParameterf = NULL;\nPFNGLTEXTUREPARAMETERFVPROC __glewTextureParameterfv = NULL;\nPFNGLTEXTUREPARAMETERIPROC __glewTextureParameteri = NULL;\nPFNGLTEXTUREPARAMETERIVPROC __glewTextureParameteriv = NULL;\nPFNGLTEXTURESTORAGE1DPROC __glewTextureStorage1D = NULL;\nPFNGLTEXTURESTORAGE2DPROC __glewTextureStorage2D = NULL;\nPFNGLTEXTURESTORAGE2DMULTISAMPLEPROC __glewTextureStorage2DMultisample = NULL;\nPFNGLTEXTURESTORAGE3DPROC __glewTextureStorage3D = NULL;\nPFNGLTEXTURESTORAGE3DMULTISAMPLEPROC __glewTextureStorage3DMultisample = NULL;\nPFNGLTEXTURESUBIMAGE1DPROC __glewTextureSubImage1D = NULL;\nPFNGLTEXTURESUBIMAGE2DPROC __glewTextureSubImage2D = NULL;\nPFNGLTEXTURESUBIMAGE3DPROC __glewTextureSubImage3D = NULL;\nPFNGLTRANSFORMFEEDBACKBUFFERBASEPROC __glewTransformFeedbackBufferBase = NULL;\nPFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC __glewTransformFeedbackBufferRange = NULL;\nPFNGLUNMAPNAMEDBUFFERPROC __glewUnmapNamedBuffer = NULL;\nPFNGLVERTEXARRAYATTRIBBINDINGPROC __glewVertexArrayAttribBinding = NULL;\nPFNGLVERTEXARRAYATTRIBFORMATPROC __glewVertexArrayAttribFormat = NULL;\nPFNGLVERTEXARRAYATTRIBIFORMATPROC __glewVertexArrayAttribIFormat = NULL;\nPFNGLVERTEXARRAYATTRIBLFORMATPROC __glewVertexArrayAttribLFormat = NULL;\nPFNGLVERTEXARRAYBINDINGDIVISORPROC __glewVertexArrayBindingDivisor = NULL;\nPFNGLVERTEXARRAYELEMENTBUFFERPROC __glewVertexArrayElementBuffer = NULL;\nPFNGLVERTEXARRAYVERTEXBUFFERPROC __glewVertexArrayVertexBuffer = NULL;\nPFNGLVERTEXARRAYVERTEXBUFFERSPROC __glewVertexArrayVertexBuffers = NULL;\n\nPFNGLDRAWBUFFERSARBPROC __glewDrawBuffersARB = NULL;\n\nPFNGLBLENDEQUATIONSEPARATEIARBPROC __glewBlendEquationSeparateiARB = NULL;\nPFNGLBLENDEQUATIONIARBPROC __glewBlendEquationiARB = NULL;\nPFNGLBLENDFUNCSEPARATEIARBPROC __glewBlendFuncSeparateiARB = NULL;\nPFNGLBLENDFUNCIARBPROC __glewBlendFunciARB = NULL;\n\nPFNGLDRAWELEMENTSBASEVERTEXPROC __glewDrawElementsBaseVertex = NULL;\nPFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC __glewDrawElementsInstancedBaseVertex = NULL;\nPFNGLDRAWRANGEELEMENTSBASEVERTEXPROC __glewDrawRangeElementsBaseVertex = NULL;\nPFNGLMULTIDRAWELEMENTSBASEVERTEXPROC __glewMultiDrawElementsBaseVertex = NULL;\n\nPFNGLDRAWARRAYSINDIRECTPROC __glewDrawArraysIndirect = NULL;\nPFNGLDRAWELEMENTSINDIRECTPROC __glewDrawElementsIndirect = NULL;\n\nPFNGLFRAMEBUFFERPARAMETERIPROC __glewFramebufferParameteri = NULL;\nPFNGLGETFRAMEBUFFERPARAMETERIVPROC __glewGetFramebufferParameteriv = NULL;\nPFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC __glewGetNamedFramebufferParameterivEXT = NULL;\nPFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC __glewNamedFramebufferParameteriEXT = NULL;\n\nPFNGLBINDFRAMEBUFFERPROC __glewBindFramebuffer = NULL;\nPFNGLBINDRENDERBUFFERPROC __glewBindRenderbuffer = NULL;\nPFNGLBLITFRAMEBUFFERPROC __glewBlitFramebuffer = NULL;\nPFNGLCHECKFRAMEBUFFERSTATUSPROC __glewCheckFramebufferStatus = NULL;\nPFNGLDELETEFRAMEBUFFERSPROC __glewDeleteFramebuffers = NULL;\nPFNGLDELETERENDERBUFFERSPROC __glewDeleteRenderbuffers = NULL;\nPFNGLFRAMEBUFFERRENDERBUFFERPROC __glewFramebufferRenderbuffer = NULL;\nPFNGLFRAMEBUFFERTEXTURE1DPROC __glewFramebufferTexture1D = NULL;\nPFNGLFRAMEBUFFERTEXTURE2DPROC __glewFramebufferTexture2D = NULL;\nPFNGLFRAMEBUFFERTEXTURE3DPROC __glewFramebufferTexture3D = NULL;\nPFNGLFRAMEBUFFERTEXTURELAYERPROC __glewFramebufferTextureLayer = NULL;\nPFNGLGENFRAMEBUFFERSPROC __glewGenFramebuffers = NULL;\nPFNGLGENRENDERBUFFERSPROC __glewGenRenderbuffers = NULL;\nPFNGLGENERATEMIPMAPPROC __glewGenerateMipmap = NULL;\nPFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC __glewGetFramebufferAttachmentParameteriv = NULL;\nPFNGLGETRENDERBUFFERPARAMETERIVPROC __glewGetRenderbufferParameteriv = NULL;\nPFNGLISFRAMEBUFFERPROC __glewIsFramebuffer = NULL;\nPFNGLISRENDERBUFFERPROC __glewIsRenderbuffer = NULL;\nPFNGLRENDERBUFFERSTORAGEPROC __glewRenderbufferStorage = NULL;\nPFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC __glewRenderbufferStorageMultisample = NULL;\n\nPFNGLFRAMEBUFFERTEXTUREARBPROC __glewFramebufferTextureARB = NULL;\nPFNGLFRAMEBUFFERTEXTUREFACEARBPROC __glewFramebufferTextureFaceARB = NULL;\nPFNGLFRAMEBUFFERTEXTURELAYERARBPROC __glewFramebufferTextureLayerARB = NULL;\nPFNGLPROGRAMPARAMETERIARBPROC __glewProgramParameteriARB = NULL;\n\nPFNGLGETPROGRAMBINARYPROC __glewGetProgramBinary = NULL;\nPFNGLPROGRAMBINARYPROC __glewProgramBinary = NULL;\nPFNGLPROGRAMPARAMETERIPROC __glewProgramParameteri = NULL;\n\nPFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC __glewGetCompressedTextureSubImage = NULL;\nPFNGLGETTEXTURESUBIMAGEPROC __glewGetTextureSubImage = NULL;\n\nPFNGLSPECIALIZESHADERARBPROC __glewSpecializeShaderARB = NULL;\n\nPFNGLGETUNIFORMDVPROC __glewGetUniformdv = NULL;\nPFNGLUNIFORM1DPROC __glewUniform1d = NULL;\nPFNGLUNIFORM1DVPROC __glewUniform1dv = NULL;\nPFNGLUNIFORM2DPROC __glewUniform2d = NULL;\nPFNGLUNIFORM2DVPROC __glewUniform2dv = NULL;\nPFNGLUNIFORM3DPROC __glewUniform3d = NULL;\nPFNGLUNIFORM3DVPROC __glewUniform3dv = NULL;\nPFNGLUNIFORM4DPROC __glewUniform4d = NULL;\nPFNGLUNIFORM4DVPROC __glewUniform4dv = NULL;\nPFNGLUNIFORMMATRIX2DVPROC __glewUniformMatrix2dv = NULL;\nPFNGLUNIFORMMATRIX2X3DVPROC __glewUniformMatrix2x3dv = NULL;\nPFNGLUNIFORMMATRIX2X4DVPROC __glewUniformMatrix2x4dv = NULL;\nPFNGLUNIFORMMATRIX3DVPROC __glewUniformMatrix3dv = NULL;\nPFNGLUNIFORMMATRIX3X2DVPROC __glewUniformMatrix3x2dv = NULL;\nPFNGLUNIFORMMATRIX3X4DVPROC __glewUniformMatrix3x4dv = NULL;\nPFNGLUNIFORMMATRIX4DVPROC __glewUniformMatrix4dv = NULL;\nPFNGLUNIFORMMATRIX4X2DVPROC __glewUniformMatrix4x2dv = NULL;\nPFNGLUNIFORMMATRIX4X3DVPROC __glewUniformMatrix4x3dv = NULL;\n\nPFNGLGETUNIFORMI64VARBPROC __glewGetUniformi64vARB = NULL;\nPFNGLGETUNIFORMUI64VARBPROC __glewGetUniformui64vARB = NULL;\nPFNGLGETNUNIFORMI64VARBPROC __glewGetnUniformi64vARB = NULL;\nPFNGLGETNUNIFORMUI64VARBPROC __glewGetnUniformui64vARB = NULL;\nPFNGLPROGRAMUNIFORM1I64ARBPROC __glewProgramUniform1i64ARB = NULL;\nPFNGLPROGRAMUNIFORM1I64VARBPROC __glewProgramUniform1i64vARB = NULL;\nPFNGLPROGRAMUNIFORM1UI64ARBPROC __glewProgramUniform1ui64ARB = NULL;\nPFNGLPROGRAMUNIFORM1UI64VARBPROC __glewProgramUniform1ui64vARB = NULL;\nPFNGLPROGRAMUNIFORM2I64ARBPROC __glewProgramUniform2i64ARB = NULL;\nPFNGLPROGRAMUNIFORM2I64VARBPROC __glewProgramUniform2i64vARB = NULL;\nPFNGLPROGRAMUNIFORM2UI64ARBPROC __glewProgramUniform2ui64ARB = NULL;\nPFNGLPROGRAMUNIFORM2UI64VARBPROC __glewProgramUniform2ui64vARB = NULL;\nPFNGLPROGRAMUNIFORM3I64ARBPROC __glewProgramUniform3i64ARB = NULL;\nPFNGLPROGRAMUNIFORM3I64VARBPROC __glewProgramUniform3i64vARB = NULL;\nPFNGLPROGRAMUNIFORM3UI64ARBPROC __glewProgramUniform3ui64ARB = NULL;\nPFNGLPROGRAMUNIFORM3UI64VARBPROC __glewProgramUniform3ui64vARB = NULL;\nPFNGLPROGRAMUNIFORM4I64ARBPROC __glewProgramUniform4i64ARB = NULL;\nPFNGLPROGRAMUNIFORM4I64VARBPROC __glewProgramUniform4i64vARB = NULL;\nPFNGLPROGRAMUNIFORM4UI64ARBPROC __glewProgramUniform4ui64ARB = NULL;\nPFNGLPROGRAMUNIFORM4UI64VARBPROC __glewProgramUniform4ui64vARB = NULL;\nPFNGLUNIFORM1I64ARBPROC __glewUniform1i64ARB = NULL;\nPFNGLUNIFORM1I64VARBPROC __glewUniform1i64vARB = NULL;\nPFNGLUNIFORM1UI64ARBPROC __glewUniform1ui64ARB = NULL;\nPFNGLUNIFORM1UI64VARBPROC __glewUniform1ui64vARB = NULL;\nPFNGLUNIFORM2I64ARBPROC __glewUniform2i64ARB = NULL;\nPFNGLUNIFORM2I64VARBPROC __glewUniform2i64vARB = NULL;\nPFNGLUNIFORM2UI64ARBPROC __glewUniform2ui64ARB = NULL;\nPFNGLUNIFORM2UI64VARBPROC __glewUniform2ui64vARB = NULL;\nPFNGLUNIFORM3I64ARBPROC __glewUniform3i64ARB = NULL;\nPFNGLUNIFORM3I64VARBPROC __glewUniform3i64vARB = NULL;\nPFNGLUNIFORM3UI64ARBPROC __glewUniform3ui64ARB = NULL;\nPFNGLUNIFORM3UI64VARBPROC __glewUniform3ui64vARB = NULL;\nPFNGLUNIFORM4I64ARBPROC __glewUniform4i64ARB = NULL;\nPFNGLUNIFORM4I64VARBPROC __glewUniform4i64vARB = NULL;\nPFNGLUNIFORM4UI64ARBPROC __glewUniform4ui64ARB = NULL;\nPFNGLUNIFORM4UI64VARBPROC __glewUniform4ui64vARB = NULL;\n\nPFNGLCOLORSUBTABLEPROC __glewColorSubTable = NULL;\nPFNGLCOLORTABLEPROC __glewColorTable = NULL;\nPFNGLCOLORTABLEPARAMETERFVPROC __glewColorTableParameterfv = NULL;\nPFNGLCOLORTABLEPARAMETERIVPROC __glewColorTableParameteriv = NULL;\nPFNGLCONVOLUTIONFILTER1DPROC __glewConvolutionFilter1D = NULL;\nPFNGLCONVOLUTIONFILTER2DPROC __glewConvolutionFilter2D = NULL;\nPFNGLCONVOLUTIONPARAMETERFPROC __glewConvolutionParameterf = NULL;\nPFNGLCONVOLUTIONPARAMETERFVPROC __glewConvolutionParameterfv = NULL;\nPFNGLCONVOLUTIONPARAMETERIPROC __glewConvolutionParameteri = NULL;\nPFNGLCONVOLUTIONPARAMETERIVPROC __glewConvolutionParameteriv = NULL;\nPFNGLCOPYCOLORSUBTABLEPROC __glewCopyColorSubTable = NULL;\nPFNGLCOPYCOLORTABLEPROC __glewCopyColorTable = NULL;\nPFNGLCOPYCONVOLUTIONFILTER1DPROC __glewCopyConvolutionFilter1D = NULL;\nPFNGLCOPYCONVOLUTIONFILTER2DPROC __glewCopyConvolutionFilter2D = NULL;\nPFNGLGETCOLORTABLEPROC __glewGetColorTable = NULL;\nPFNGLGETCOLORTABLEPARAMETERFVPROC __glewGetColorTableParameterfv = NULL;\nPFNGLGETCOLORTABLEPARAMETERIVPROC __glewGetColorTableParameteriv = NULL;\nPFNGLGETCONVOLUTIONFILTERPROC __glewGetConvolutionFilter = NULL;\nPFNGLGETCONVOLUTIONPARAMETERFVPROC __glewGetConvolutionParameterfv = NULL;\nPFNGLGETCONVOLUTIONPARAMETERIVPROC __glewGetConvolutionParameteriv = NULL;\nPFNGLGETHISTOGRAMPROC __glewGetHistogram = NULL;\nPFNGLGETHISTOGRAMPARAMETERFVPROC __glewGetHistogramParameterfv = NULL;\nPFNGLGETHISTOGRAMPARAMETERIVPROC __glewGetHistogramParameteriv = NULL;\nPFNGLGETMINMAXPROC __glewGetMinmax = NULL;\nPFNGLGETMINMAXPARAMETERFVPROC __glewGetMinmaxParameterfv = NULL;\nPFNGLGETMINMAXPARAMETERIVPROC __glewGetMinmaxParameteriv = NULL;\nPFNGLGETSEPARABLEFILTERPROC __glewGetSeparableFilter = NULL;\nPFNGLHISTOGRAMPROC __glewHistogram = NULL;\nPFNGLMINMAXPROC __glewMinmax = NULL;\nPFNGLRESETHISTOGRAMPROC __glewResetHistogram = NULL;\nPFNGLRESETMINMAXPROC __glewResetMinmax = NULL;\nPFNGLSEPARABLEFILTER2DPROC __glewSeparableFilter2D = NULL;\n\nPFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC __glewMultiDrawArraysIndirectCountARB = NULL;\nPFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC __glewMultiDrawElementsIndirectCountARB = NULL;\n\nPFNGLDRAWARRAYSINSTANCEDARBPROC __glewDrawArraysInstancedARB = NULL;\nPFNGLDRAWELEMENTSINSTANCEDARBPROC __glewDrawElementsInstancedARB = NULL;\nPFNGLVERTEXATTRIBDIVISORARBPROC __glewVertexAttribDivisorARB = NULL;\n\nPFNGLGETINTERNALFORMATIVPROC __glewGetInternalformativ = NULL;\n\nPFNGLGETINTERNALFORMATI64VPROC __glewGetInternalformati64v = NULL;\n\nPFNGLINVALIDATEBUFFERDATAPROC __glewInvalidateBufferData = NULL;\nPFNGLINVALIDATEBUFFERSUBDATAPROC __glewInvalidateBufferSubData = NULL;\nPFNGLINVALIDATEFRAMEBUFFERPROC __glewInvalidateFramebuffer = NULL;\nPFNGLINVALIDATESUBFRAMEBUFFERPROC __glewInvalidateSubFramebuffer = NULL;\nPFNGLINVALIDATETEXIMAGEPROC __glewInvalidateTexImage = NULL;\nPFNGLINVALIDATETEXSUBIMAGEPROC __glewInvalidateTexSubImage = NULL;\n\nPFNGLFLUSHMAPPEDBUFFERRANGEPROC __glewFlushMappedBufferRange = NULL;\nPFNGLMAPBUFFERRANGEPROC __glewMapBufferRange = NULL;\n\nPFNGLCURRENTPALETTEMATRIXARBPROC __glewCurrentPaletteMatrixARB = NULL;\nPFNGLMATRIXINDEXPOINTERARBPROC __glewMatrixIndexPointerARB = NULL;\nPFNGLMATRIXINDEXUBVARBPROC __glewMatrixIndexubvARB = NULL;\nPFNGLMATRIXINDEXUIVARBPROC __glewMatrixIndexuivARB = NULL;\nPFNGLMATRIXINDEXUSVARBPROC __glewMatrixIndexusvARB = NULL;\n\nPFNGLBINDBUFFERSBASEPROC __glewBindBuffersBase = NULL;\nPFNGLBINDBUFFERSRANGEPROC __glewBindBuffersRange = NULL;\nPFNGLBINDIMAGETEXTURESPROC __glewBindImageTextures = NULL;\nPFNGLBINDSAMPLERSPROC __glewBindSamplers = NULL;\nPFNGLBINDTEXTURESPROC __glewBindTextures = NULL;\nPFNGLBINDVERTEXBUFFERSPROC __glewBindVertexBuffers = NULL;\n\nPFNGLMULTIDRAWARRAYSINDIRECTPROC __glewMultiDrawArraysIndirect = NULL;\nPFNGLMULTIDRAWELEMENTSINDIRECTPROC __glewMultiDrawElementsIndirect = NULL;\n\nPFNGLSAMPLECOVERAGEARBPROC __glewSampleCoverageARB = NULL;\n\nPFNGLACTIVETEXTUREARBPROC __glewActiveTextureARB = NULL;\nPFNGLCLIENTACTIVETEXTUREARBPROC __glewClientActiveTextureARB = NULL;\nPFNGLMULTITEXCOORD1DARBPROC __glewMultiTexCoord1dARB = NULL;\nPFNGLMULTITEXCOORD1DVARBPROC __glewMultiTexCoord1dvARB = NULL;\nPFNGLMULTITEXCOORD1FARBPROC __glewMultiTexCoord1fARB = NULL;\nPFNGLMULTITEXCOORD1FVARBPROC __glewMultiTexCoord1fvARB = NULL;\nPFNGLMULTITEXCOORD1IARBPROC __glewMultiTexCoord1iARB = NULL;\nPFNGLMULTITEXCOORD1IVARBPROC __glewMultiTexCoord1ivARB = NULL;\nPFNGLMULTITEXCOORD1SARBPROC __glewMultiTexCoord1sARB = NULL;\nPFNGLMULTITEXCOORD1SVARBPROC __glewMultiTexCoord1svARB = NULL;\nPFNGLMULTITEXCOORD2DARBPROC __glewMultiTexCoord2dARB = NULL;\nPFNGLMULTITEXCOORD2DVARBPROC __glewMultiTexCoord2dvARB = NULL;\nPFNGLMULTITEXCOORD2FARBPROC __glewMultiTexCoord2fARB = NULL;\nPFNGLMULTITEXCOORD2FVARBPROC __glewMultiTexCoord2fvARB = NULL;\nPFNGLMULTITEXCOORD2IARBPROC __glewMultiTexCoord2iARB = NULL;\nPFNGLMULTITEXCOORD2IVARBPROC __glewMultiTexCoord2ivARB = NULL;\nPFNGLMULTITEXCOORD2SARBPROC __glewMultiTexCoord2sARB = NULL;\nPFNGLMULTITEXCOORD2SVARBPROC __glewMultiTexCoord2svARB = NULL;\nPFNGLMULTITEXCOORD3DARBPROC __glewMultiTexCoord3dARB = NULL;\nPFNGLMULTITEXCOORD3DVARBPROC __glewMultiTexCoord3dvARB = NULL;\nPFNGLMULTITEXCOORD3FARBPROC __glewMultiTexCoord3fARB = NULL;\nPFNGLMULTITEXCOORD3FVARBPROC __glewMultiTexCoord3fvARB = NULL;\nPFNGLMULTITEXCOORD3IARBPROC __glewMultiTexCoord3iARB = NULL;\nPFNGLMULTITEXCOORD3IVARBPROC __glewMultiTexCoord3ivARB = NULL;\nPFNGLMULTITEXCOORD3SARBPROC __glewMultiTexCoord3sARB = NULL;\nPFNGLMULTITEXCOORD3SVARBPROC __glewMultiTexCoord3svARB = NULL;\nPFNGLMULTITEXCOORD4DARBPROC __glewMultiTexCoord4dARB = NULL;\nPFNGLMULTITEXCOORD4DVARBPROC __glewMultiTexCoord4dvARB = NULL;\nPFNGLMULTITEXCOORD4FARBPROC __glewMultiTexCoord4fARB = NULL;\nPFNGLMULTITEXCOORD4FVARBPROC __glewMultiTexCoord4fvARB = NULL;\nPFNGLMULTITEXCOORD4IARBPROC __glewMultiTexCoord4iARB = NULL;\nPFNGLMULTITEXCOORD4IVARBPROC __glewMultiTexCoord4ivARB = NULL;\nPFNGLMULTITEXCOORD4SARBPROC __glewMultiTexCoord4sARB = NULL;\nPFNGLMULTITEXCOORD4SVARBPROC __glewMultiTexCoord4svARB = NULL;\n\nPFNGLBEGINQUERYARBPROC __glewBeginQueryARB = NULL;\nPFNGLDELETEQUERIESARBPROC __glewDeleteQueriesARB = NULL;\nPFNGLENDQUERYARBPROC __glewEndQueryARB = NULL;\nPFNGLGENQUERIESARBPROC __glewGenQueriesARB = NULL;\nPFNGLGETQUERYOBJECTIVARBPROC __glewGetQueryObjectivARB = NULL;\nPFNGLGETQUERYOBJECTUIVARBPROC __glewGetQueryObjectuivARB = NULL;\nPFNGLGETQUERYIVARBPROC __glewGetQueryivARB = NULL;\nPFNGLISQUERYARBPROC __glewIsQueryARB = NULL;\n\nPFNGLMAXSHADERCOMPILERTHREADSARBPROC __glewMaxShaderCompilerThreadsARB = NULL;\n\nPFNGLPOINTPARAMETERFARBPROC __glewPointParameterfARB = NULL;\nPFNGLPOINTPARAMETERFVARBPROC __glewPointParameterfvARB = NULL;\n\nPFNGLGETPROGRAMINTERFACEIVPROC __glewGetProgramInterfaceiv = NULL;\nPFNGLGETPROGRAMRESOURCEINDEXPROC __glewGetProgramResourceIndex = NULL;\nPFNGLGETPROGRAMRESOURCELOCATIONPROC __glewGetProgramResourceLocation = NULL;\nPFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC __glewGetProgramResourceLocationIndex = NULL;\nPFNGLGETPROGRAMRESOURCENAMEPROC __glewGetProgramResourceName = NULL;\nPFNGLGETPROGRAMRESOURCEIVPROC __glewGetProgramResourceiv = NULL;\n\nPFNGLPROVOKINGVERTEXPROC __glewProvokingVertex = NULL;\n\nPFNGLGETGRAPHICSRESETSTATUSARBPROC __glewGetGraphicsResetStatusARB = NULL;\nPFNGLGETNCOLORTABLEARBPROC __glewGetnColorTableARB = NULL;\nPFNGLGETNCOMPRESSEDTEXIMAGEARBPROC __glewGetnCompressedTexImageARB = NULL;\nPFNGLGETNCONVOLUTIONFILTERARBPROC __glewGetnConvolutionFilterARB = NULL;\nPFNGLGETNHISTOGRAMARBPROC __glewGetnHistogramARB = NULL;\nPFNGLGETNMAPDVARBPROC __glewGetnMapdvARB = NULL;\nPFNGLGETNMAPFVARBPROC __glewGetnMapfvARB = NULL;\nPFNGLGETNMAPIVARBPROC __glewGetnMapivARB = NULL;\nPFNGLGETNMINMAXARBPROC __glewGetnMinmaxARB = NULL;\nPFNGLGETNPIXELMAPFVARBPROC __glewGetnPixelMapfvARB = NULL;\nPFNGLGETNPIXELMAPUIVARBPROC __glewGetnPixelMapuivARB = NULL;\nPFNGLGETNPIXELMAPUSVARBPROC __glewGetnPixelMapusvARB = NULL;\nPFNGLGETNPOLYGONSTIPPLEARBPROC __glewGetnPolygonStippleARB = NULL;\nPFNGLGETNSEPARABLEFILTERARBPROC __glewGetnSeparableFilterARB = NULL;\nPFNGLGETNTEXIMAGEARBPROC __glewGetnTexImageARB = NULL;\nPFNGLGETNUNIFORMDVARBPROC __glewGetnUniformdvARB = NULL;\nPFNGLGETNUNIFORMFVARBPROC __glewGetnUniformfvARB = NULL;\nPFNGLGETNUNIFORMIVARBPROC __glewGetnUniformivARB = NULL;\nPFNGLGETNUNIFORMUIVARBPROC __glewGetnUniformuivARB = NULL;\nPFNGLREADNPIXELSARBPROC __glewReadnPixelsARB = NULL;\n\nPFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC __glewFramebufferSampleLocationsfvARB = NULL;\nPFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC __glewNamedFramebufferSampleLocationsfvARB = NULL;\n\nPFNGLMINSAMPLESHADINGARBPROC __glewMinSampleShadingARB = NULL;\n\nPFNGLBINDSAMPLERPROC __glewBindSampler = NULL;\nPFNGLDELETESAMPLERSPROC __glewDeleteSamplers = NULL;\nPFNGLGENSAMPLERSPROC __glewGenSamplers = NULL;\nPFNGLGETSAMPLERPARAMETERIIVPROC __glewGetSamplerParameterIiv = NULL;\nPFNGLGETSAMPLERPARAMETERIUIVPROC __glewGetSamplerParameterIuiv = NULL;\nPFNGLGETSAMPLERPARAMETERFVPROC __glewGetSamplerParameterfv = NULL;\nPFNGLGETSAMPLERPARAMETERIVPROC __glewGetSamplerParameteriv = NULL;\nPFNGLISSAMPLERPROC __glewIsSampler = NULL;\nPFNGLSAMPLERPARAMETERIIVPROC __glewSamplerParameterIiv = NULL;\nPFNGLSAMPLERPARAMETERIUIVPROC __glewSamplerParameterIuiv = NULL;\nPFNGLSAMPLERPARAMETERFPROC __glewSamplerParameterf = NULL;\nPFNGLSAMPLERPARAMETERFVPROC __glewSamplerParameterfv = NULL;\nPFNGLSAMPLERPARAMETERIPROC __glewSamplerParameteri = NULL;\nPFNGLSAMPLERPARAMETERIVPROC __glewSamplerParameteriv = NULL;\n\nPFNGLACTIVESHADERPROGRAMPROC __glewActiveShaderProgram = NULL;\nPFNGLBINDPROGRAMPIPELINEPROC __glewBindProgramPipeline = NULL;\nPFNGLCREATESHADERPROGRAMVPROC __glewCreateShaderProgramv = NULL;\nPFNGLDELETEPROGRAMPIPELINESPROC __glewDeleteProgramPipelines = NULL;\nPFNGLGENPROGRAMPIPELINESPROC __glewGenProgramPipelines = NULL;\nPFNGLGETPROGRAMPIPELINEINFOLOGPROC __glewGetProgramPipelineInfoLog = NULL;\nPFNGLGETPROGRAMPIPELINEIVPROC __glewGetProgramPipelineiv = NULL;\nPFNGLISPROGRAMPIPELINEPROC __glewIsProgramPipeline = NULL;\nPFNGLPROGRAMUNIFORM1DPROC __glewProgramUniform1d = NULL;\nPFNGLPROGRAMUNIFORM1DVPROC __glewProgramUniform1dv = NULL;\nPFNGLPROGRAMUNIFORM1FPROC __glewProgramUniform1f = NULL;\nPFNGLPROGRAMUNIFORM1FVPROC __glewProgramUniform1fv = NULL;\nPFNGLPROGRAMUNIFORM1IPROC __glewProgramUniform1i = NULL;\nPFNGLPROGRAMUNIFORM1IVPROC __glewProgramUniform1iv = NULL;\nPFNGLPROGRAMUNIFORM1UIPROC __glewProgramUniform1ui = NULL;\nPFNGLPROGRAMUNIFORM1UIVPROC __glewProgramUniform1uiv = NULL;\nPFNGLPROGRAMUNIFORM2DPROC __glewProgramUniform2d = NULL;\nPFNGLPROGRAMUNIFORM2DVPROC __glewProgramUniform2dv = NULL;\nPFNGLPROGRAMUNIFORM2FPROC __glewProgramUniform2f = NULL;\nPFNGLPROGRAMUNIFORM2FVPROC __glewProgramUniform2fv = NULL;\nPFNGLPROGRAMUNIFORM2IPROC __glewProgramUniform2i = NULL;\nPFNGLPROGRAMUNIFORM2IVPROC __glewProgramUniform2iv = NULL;\nPFNGLPROGRAMUNIFORM2UIPROC __glewProgramUniform2ui = NULL;\nPFNGLPROGRAMUNIFORM2UIVPROC __glewProgramUniform2uiv = NULL;\nPFNGLPROGRAMUNIFORM3DPROC __glewProgramUniform3d = NULL;\nPFNGLPROGRAMUNIFORM3DVPROC __glewProgramUniform3dv = NULL;\nPFNGLPROGRAMUNIFORM3FPROC __glewProgramUniform3f = NULL;\nPFNGLPROGRAMUNIFORM3FVPROC __glewProgramUniform3fv = NULL;\nPFNGLPROGRAMUNIFORM3IPROC __glewProgramUniform3i = NULL;\nPFNGLPROGRAMUNIFORM3IVPROC __glewProgramUniform3iv = NULL;\nPFNGLPROGRAMUNIFORM3UIPROC __glewProgramUniform3ui = NULL;\nPFNGLPROGRAMUNIFORM3UIVPROC __glewProgramUniform3uiv = NULL;\nPFNGLPROGRAMUNIFORM4DPROC __glewProgramUniform4d = NULL;\nPFNGLPROGRAMUNIFORM4DVPROC __glewProgramUniform4dv = NULL;\nPFNGLPROGRAMUNIFORM4FPROC __glewProgramUniform4f = NULL;\nPFNGLPROGRAMUNIFORM4FVPROC __glewProgramUniform4fv = NULL;\nPFNGLPROGRAMUNIFORM4IPROC __glewProgramUniform4i = NULL;\nPFNGLPROGRAMUNIFORM4IVPROC __glewProgramUniform4iv = NULL;\nPFNGLPROGRAMUNIFORM4UIPROC __glewProgramUniform4ui = NULL;\nPFNGLPROGRAMUNIFORM4UIVPROC __glewProgramUniform4uiv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX2DVPROC __glewProgramUniformMatrix2dv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX2FVPROC __glewProgramUniformMatrix2fv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX2X3DVPROC __glewProgramUniformMatrix2x3dv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX2X3FVPROC __glewProgramUniformMatrix2x3fv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX2X4DVPROC __glewProgramUniformMatrix2x4dv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX2X4FVPROC __glewProgramUniformMatrix2x4fv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX3DVPROC __glewProgramUniformMatrix3dv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX3FVPROC __glewProgramUniformMatrix3fv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX3X2DVPROC __glewProgramUniformMatrix3x2dv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX3X2FVPROC __glewProgramUniformMatrix3x2fv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX3X4DVPROC __glewProgramUniformMatrix3x4dv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX3X4FVPROC __glewProgramUniformMatrix3x4fv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX4DVPROC __glewProgramUniformMatrix4dv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX4FVPROC __glewProgramUniformMatrix4fv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX4X2DVPROC __glewProgramUniformMatrix4x2dv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX4X2FVPROC __glewProgramUniformMatrix4x2fv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX4X3DVPROC __glewProgramUniformMatrix4x3dv = NULL;\nPFNGLPROGRAMUNIFORMMATRIX4X3FVPROC __glewProgramUniformMatrix4x3fv = NULL;\nPFNGLUSEPROGRAMSTAGESPROC __glewUseProgramStages = NULL;\nPFNGLVALIDATEPROGRAMPIPELINEPROC __glewValidateProgramPipeline = NULL;\n\nPFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC __glewGetActiveAtomicCounterBufferiv = NULL;\n\nPFNGLBINDIMAGETEXTUREPROC __glewBindImageTexture = NULL;\nPFNGLMEMORYBARRIERPROC __glewMemoryBarrier = NULL;\n\nPFNGLATTACHOBJECTARBPROC __glewAttachObjectARB = NULL;\nPFNGLCOMPILESHADERARBPROC __glewCompileShaderARB = NULL;\nPFNGLCREATEPROGRAMOBJECTARBPROC __glewCreateProgramObjectARB = NULL;\nPFNGLCREATESHADEROBJECTARBPROC __glewCreateShaderObjectARB = NULL;\nPFNGLDELETEOBJECTARBPROC __glewDeleteObjectARB = NULL;\nPFNGLDETACHOBJECTARBPROC __glewDetachObjectARB = NULL;\nPFNGLGETACTIVEUNIFORMARBPROC __glewGetActiveUniformARB = NULL;\nPFNGLGETATTACHEDOBJECTSARBPROC __glewGetAttachedObjectsARB = NULL;\nPFNGLGETHANDLEARBPROC __glewGetHandleARB = NULL;\nPFNGLGETINFOLOGARBPROC __glewGetInfoLogARB = NULL;\nPFNGLGETOBJECTPARAMETERFVARBPROC __glewGetObjectParameterfvARB = NULL;\nPFNGLGETOBJECTPARAMETERIVARBPROC __glewGetObjectParameterivARB = NULL;\nPFNGLGETSHADERSOURCEARBPROC __glewGetShaderSourceARB = NULL;\nPFNGLGETUNIFORMLOCATIONARBPROC __glewGetUniformLocationARB = NULL;\nPFNGLGETUNIFORMFVARBPROC __glewGetUniformfvARB = NULL;\nPFNGLGETUNIFORMIVARBPROC __glewGetUniformivARB = NULL;\nPFNGLLINKPROGRAMARBPROC __glewLinkProgramARB = NULL;\nPFNGLSHADERSOURCEARBPROC __glewShaderSourceARB = NULL;\nPFNGLUNIFORM1FARBPROC __glewUniform1fARB = NULL;\nPFNGLUNIFORM1FVARBPROC __glewUniform1fvARB = NULL;\nPFNGLUNIFORM1IARBPROC __glewUniform1iARB = NULL;\nPFNGLUNIFORM1IVARBPROC __glewUniform1ivARB = NULL;\nPFNGLUNIFORM2FARBPROC __glewUniform2fARB = NULL;\nPFNGLUNIFORM2FVARBPROC __glewUniform2fvARB = NULL;\nPFNGLUNIFORM2IARBPROC __glewUniform2iARB = NULL;\nPFNGLUNIFORM2IVARBPROC __glewUniform2ivARB = NULL;\nPFNGLUNIFORM3FARBPROC __glewUniform3fARB = NULL;\nPFNGLUNIFORM3FVARBPROC __glewUniform3fvARB = NULL;\nPFNGLUNIFORM3IARBPROC __glewUniform3iARB = NULL;\nPFNGLUNIFORM3IVARBPROC __glewUniform3ivARB = NULL;\nPFNGLUNIFORM4FARBPROC __glewUniform4fARB = NULL;\nPFNGLUNIFORM4FVARBPROC __glewUniform4fvARB = NULL;\nPFNGLUNIFORM4IARBPROC __glewUniform4iARB = NULL;\nPFNGLUNIFORM4IVARBPROC __glewUniform4ivARB = NULL;\nPFNGLUNIFORMMATRIX2FVARBPROC __glewUniformMatrix2fvARB = NULL;\nPFNGLUNIFORMMATRIX3FVARBPROC __glewUniformMatrix3fvARB = NULL;\nPFNGLUNIFORMMATRIX4FVARBPROC __glewUniformMatrix4fvARB = NULL;\nPFNGLUSEPROGRAMOBJECTARBPROC __glewUseProgramObjectARB = NULL;\nPFNGLVALIDATEPROGRAMARBPROC __glewValidateProgramARB = NULL;\n\nPFNGLSHADERSTORAGEBLOCKBINDINGPROC __glewShaderStorageBlockBinding = NULL;\n\nPFNGLGETACTIVESUBROUTINENAMEPROC __glewGetActiveSubroutineName = NULL;\nPFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC __glewGetActiveSubroutineUniformName = NULL;\nPFNGLGETACTIVESUBROUTINEUNIFORMIVPROC __glewGetActiveSubroutineUniformiv = NULL;\nPFNGLGETPROGRAMSTAGEIVPROC __glewGetProgramStageiv = NULL;\nPFNGLGETSUBROUTINEINDEXPROC __glewGetSubroutineIndex = NULL;\nPFNGLGETSUBROUTINEUNIFORMLOCATIONPROC __glewGetSubroutineUniformLocation = NULL;\nPFNGLGETUNIFORMSUBROUTINEUIVPROC __glewGetUniformSubroutineuiv = NULL;\nPFNGLUNIFORMSUBROUTINESUIVPROC __glewUniformSubroutinesuiv = NULL;\n\nPFNGLCOMPILESHADERINCLUDEARBPROC __glewCompileShaderIncludeARB = NULL;\nPFNGLDELETENAMEDSTRINGARBPROC __glewDeleteNamedStringARB = NULL;\nPFNGLGETNAMEDSTRINGARBPROC __glewGetNamedStringARB = NULL;\nPFNGLGETNAMEDSTRINGIVARBPROC __glewGetNamedStringivARB = NULL;\nPFNGLISNAMEDSTRINGARBPROC __glewIsNamedStringARB = NULL;\nPFNGLNAMEDSTRINGARBPROC __glewNamedStringARB = NULL;\n\nPFNGLBUFFERPAGECOMMITMENTARBPROC __glewBufferPageCommitmentARB = NULL;\n\nPFNGLTEXPAGECOMMITMENTARBPROC __glewTexPageCommitmentARB = NULL;\nPFNGLTEXTUREPAGECOMMITMENTEXTPROC __glewTexturePageCommitmentEXT = NULL;\n\nPFNGLCLIENTWAITSYNCPROC __glewClientWaitSync = NULL;\nPFNGLDELETESYNCPROC __glewDeleteSync = NULL;\nPFNGLFENCESYNCPROC __glewFenceSync = NULL;\nPFNGLGETINTEGER64VPROC __glewGetInteger64v = NULL;\nPFNGLGETSYNCIVPROC __glewGetSynciv = NULL;\nPFNGLISSYNCPROC __glewIsSync = NULL;\nPFNGLWAITSYNCPROC __glewWaitSync = NULL;\n\nPFNGLPATCHPARAMETERFVPROC __glewPatchParameterfv = NULL;\nPFNGLPATCHPARAMETERIPROC __glewPatchParameteri = NULL;\n\nPFNGLTEXTUREBARRIERPROC __glewTextureBarrier = NULL;\n\nPFNGLTEXBUFFERARBPROC __glewTexBufferARB = NULL;\n\nPFNGLTEXBUFFERRANGEPROC __glewTexBufferRange = NULL;\nPFNGLTEXTUREBUFFERRANGEEXTPROC __glewTextureBufferRangeEXT = NULL;\n\nPFNGLCOMPRESSEDTEXIMAGE1DARBPROC __glewCompressedTexImage1DARB = NULL;\nPFNGLCOMPRESSEDTEXIMAGE2DARBPROC __glewCompressedTexImage2DARB = NULL;\nPFNGLCOMPRESSEDTEXIMAGE3DARBPROC __glewCompressedTexImage3DARB = NULL;\nPFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC __glewCompressedTexSubImage1DARB = NULL;\nPFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC __glewCompressedTexSubImage2DARB = NULL;\nPFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC __glewCompressedTexSubImage3DARB = NULL;\nPFNGLGETCOMPRESSEDTEXIMAGEARBPROC __glewGetCompressedTexImageARB = NULL;\n\nPFNGLGETMULTISAMPLEFVPROC __glewGetMultisamplefv = NULL;\nPFNGLSAMPLEMASKIPROC __glewSampleMaski = NULL;\nPFNGLTEXIMAGE2DMULTISAMPLEPROC __glewTexImage2DMultisample = NULL;\nPFNGLTEXIMAGE3DMULTISAMPLEPROC __glewTexImage3DMultisample = NULL;\n\nPFNGLTEXSTORAGE1DPROC __glewTexStorage1D = NULL;\nPFNGLTEXSTORAGE2DPROC __glewTexStorage2D = NULL;\nPFNGLTEXSTORAGE3DPROC __glewTexStorage3D = NULL;\nPFNGLTEXTURESTORAGE1DEXTPROC __glewTextureStorage1DEXT = NULL;\nPFNGLTEXTURESTORAGE2DEXTPROC __glewTextureStorage2DEXT = NULL;\nPFNGLTEXTURESTORAGE3DEXTPROC __glewTextureStorage3DEXT = NULL;\n\nPFNGLTEXSTORAGE2DMULTISAMPLEPROC __glewTexStorage2DMultisample = NULL;\nPFNGLTEXSTORAGE3DMULTISAMPLEPROC __glewTexStorage3DMultisample = NULL;\nPFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC __glewTextureStorage2DMultisampleEXT = NULL;\nPFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC __glewTextureStorage3DMultisampleEXT = NULL;\n\nPFNGLTEXTUREVIEWPROC __glewTextureView = NULL;\n\nPFNGLGETQUERYOBJECTI64VPROC __glewGetQueryObjecti64v = NULL;\nPFNGLGETQUERYOBJECTUI64VPROC __glewGetQueryObjectui64v = NULL;\nPFNGLQUERYCOUNTERPROC __glewQueryCounter = NULL;\n\nPFNGLBINDTRANSFORMFEEDBACKPROC __glewBindTransformFeedback = NULL;\nPFNGLDELETETRANSFORMFEEDBACKSPROC __glewDeleteTransformFeedbacks = NULL;\nPFNGLDRAWTRANSFORMFEEDBACKPROC __glewDrawTransformFeedback = NULL;\nPFNGLGENTRANSFORMFEEDBACKSPROC __glewGenTransformFeedbacks = NULL;\nPFNGLISTRANSFORMFEEDBACKPROC __glewIsTransformFeedback = NULL;\nPFNGLPAUSETRANSFORMFEEDBACKPROC __glewPauseTransformFeedback = NULL;\nPFNGLRESUMETRANSFORMFEEDBACKPROC __glewResumeTransformFeedback = NULL;\n\nPFNGLBEGINQUERYINDEXEDPROC __glewBeginQueryIndexed = NULL;\nPFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC __glewDrawTransformFeedbackStream = NULL;\nPFNGLENDQUERYINDEXEDPROC __glewEndQueryIndexed = NULL;\nPFNGLGETQUERYINDEXEDIVPROC __glewGetQueryIndexediv = NULL;\n\nPFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC __glewDrawTransformFeedbackInstanced = NULL;\nPFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC __glewDrawTransformFeedbackStreamInstanced = NULL;\n\nPFNGLLOADTRANSPOSEMATRIXDARBPROC __glewLoadTransposeMatrixdARB = NULL;\nPFNGLLOADTRANSPOSEMATRIXFARBPROC __glewLoadTransposeMatrixfARB = NULL;\nPFNGLMULTTRANSPOSEMATRIXDARBPROC __glewMultTransposeMatrixdARB = NULL;\nPFNGLMULTTRANSPOSEMATRIXFARBPROC __glewMultTransposeMatrixfARB = NULL;\n\nPFNGLBINDBUFFERBASEPROC __glewBindBufferBase = NULL;\nPFNGLBINDBUFFERRANGEPROC __glewBindBufferRange = NULL;\nPFNGLGETACTIVEUNIFORMBLOCKNAMEPROC __glewGetActiveUniformBlockName = NULL;\nPFNGLGETACTIVEUNIFORMBLOCKIVPROC __glewGetActiveUniformBlockiv = NULL;\nPFNGLGETACTIVEUNIFORMNAMEPROC __glewGetActiveUniformName = NULL;\nPFNGLGETACTIVEUNIFORMSIVPROC __glewGetActiveUniformsiv = NULL;\nPFNGLGETINTEGERI_VPROC __glewGetIntegeri_v = NULL;\nPFNGLGETUNIFORMBLOCKINDEXPROC __glewGetUniformBlockIndex = NULL;\nPFNGLGETUNIFORMINDICESPROC __glewGetUniformIndices = NULL;\nPFNGLUNIFORMBLOCKBINDINGPROC __glewUniformBlockBinding = NULL;\n\nPFNGLBINDVERTEXARRAYPROC __glewBindVertexArray = NULL;\nPFNGLDELETEVERTEXARRAYSPROC __glewDeleteVertexArrays = NULL;\nPFNGLGENVERTEXARRAYSPROC __glewGenVertexArrays = NULL;\nPFNGLISVERTEXARRAYPROC __glewIsVertexArray = NULL;\n\nPFNGLGETVERTEXATTRIBLDVPROC __glewGetVertexAttribLdv = NULL;\nPFNGLVERTEXATTRIBL1DPROC __glewVertexAttribL1d = NULL;\nPFNGLVERTEXATTRIBL1DVPROC __glewVertexAttribL1dv = NULL;\nPFNGLVERTEXATTRIBL2DPROC __glewVertexAttribL2d = NULL;\nPFNGLVERTEXATTRIBL2DVPROC __glewVertexAttribL2dv = NULL;\nPFNGLVERTEXATTRIBL3DPROC __glewVertexAttribL3d = NULL;\nPFNGLVERTEXATTRIBL3DVPROC __glewVertexAttribL3dv = NULL;\nPFNGLVERTEXATTRIBL4DPROC __glewVertexAttribL4d = NULL;\nPFNGLVERTEXATTRIBL4DVPROC __glewVertexAttribL4dv = NULL;\nPFNGLVERTEXATTRIBLPOINTERPROC __glewVertexAttribLPointer = NULL;\n\nPFNGLBINDVERTEXBUFFERPROC __glewBindVertexBuffer = NULL;\nPFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC __glewVertexArrayBindVertexBufferEXT = NULL;\nPFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC __glewVertexArrayVertexAttribBindingEXT = NULL;\nPFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC __glewVertexArrayVertexAttribFormatEXT = NULL;\nPFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC __glewVertexArrayVertexAttribIFormatEXT = NULL;\nPFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC __glewVertexArrayVertexAttribLFormatEXT = NULL;\nPFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC __glewVertexArrayVertexBindingDivisorEXT = NULL;\nPFNGLVERTEXATTRIBBINDINGPROC __glewVertexAttribBinding = NULL;\nPFNGLVERTEXATTRIBFORMATPROC __glewVertexAttribFormat = NULL;\nPFNGLVERTEXATTRIBIFORMATPROC __glewVertexAttribIFormat = NULL;\nPFNGLVERTEXATTRIBLFORMATPROC __glewVertexAttribLFormat = NULL;\nPFNGLVERTEXBINDINGDIVISORPROC __glewVertexBindingDivisor = NULL;\n\nPFNGLVERTEXBLENDARBPROC __glewVertexBlendARB = NULL;\nPFNGLWEIGHTPOINTERARBPROC __glewWeightPointerARB = NULL;\nPFNGLWEIGHTBVARBPROC __glewWeightbvARB = NULL;\nPFNGLWEIGHTDVARBPROC __glewWeightdvARB = NULL;\nPFNGLWEIGHTFVARBPROC __glewWeightfvARB = NULL;\nPFNGLWEIGHTIVARBPROC __glewWeightivARB = NULL;\nPFNGLWEIGHTSVARBPROC __glewWeightsvARB = NULL;\nPFNGLWEIGHTUBVARBPROC __glewWeightubvARB = NULL;\nPFNGLWEIGHTUIVARBPROC __glewWeightuivARB = NULL;\nPFNGLWEIGHTUSVARBPROC __glewWeightusvARB = NULL;\n\nPFNGLBINDBUFFERARBPROC __glewBindBufferARB = NULL;\nPFNGLBUFFERDATAARBPROC __glewBufferDataARB = NULL;\nPFNGLBUFFERSUBDATAARBPROC __glewBufferSubDataARB = NULL;\nPFNGLDELETEBUFFERSARBPROC __glewDeleteBuffersARB = NULL;\nPFNGLGENBUFFERSARBPROC __glewGenBuffersARB = NULL;\nPFNGLGETBUFFERPARAMETERIVARBPROC __glewGetBufferParameterivARB = NULL;\nPFNGLGETBUFFERPOINTERVARBPROC __glewGetBufferPointervARB = NULL;\nPFNGLGETBUFFERSUBDATAARBPROC __glewGetBufferSubDataARB = NULL;\nPFNGLISBUFFERARBPROC __glewIsBufferARB = NULL;\nPFNGLMAPBUFFERARBPROC __glewMapBufferARB = NULL;\nPFNGLUNMAPBUFFERARBPROC __glewUnmapBufferARB = NULL;\n\nPFNGLBINDPROGRAMARBPROC __glewBindProgramARB = NULL;\nPFNGLDELETEPROGRAMSARBPROC __glewDeleteProgramsARB = NULL;\nPFNGLDISABLEVERTEXATTRIBARRAYARBPROC __glewDisableVertexAttribArrayARB = NULL;\nPFNGLENABLEVERTEXATTRIBARRAYARBPROC __glewEnableVertexAttribArrayARB = NULL;\nPFNGLGENPROGRAMSARBPROC __glewGenProgramsARB = NULL;\nPFNGLGETPROGRAMENVPARAMETERDVARBPROC __glewGetProgramEnvParameterdvARB = NULL;\nPFNGLGETPROGRAMENVPARAMETERFVARBPROC __glewGetProgramEnvParameterfvARB = NULL;\nPFNGLGETPROGRAMLOCALPARAMETERDVARBPROC __glewGetProgramLocalParameterdvARB = NULL;\nPFNGLGETPROGRAMLOCALPARAMETERFVARBPROC __glewGetProgramLocalParameterfvARB = NULL;\nPFNGLGETPROGRAMSTRINGARBPROC __glewGetProgramStringARB = NULL;\nPFNGLGETPROGRAMIVARBPROC __glewGetProgramivARB = NULL;\nPFNGLGETVERTEXATTRIBPOINTERVARBPROC __glewGetVertexAttribPointervARB = NULL;\nPFNGLGETVERTEXATTRIBDVARBPROC __glewGetVertexAttribdvARB = NULL;\nPFNGLGETVERTEXATTRIBFVARBPROC __glewGetVertexAttribfvARB = NULL;\nPFNGLGETVERTEXATTRIBIVARBPROC __glewGetVertexAttribivARB = NULL;\nPFNGLISPROGRAMARBPROC __glewIsProgramARB = NULL;\nPFNGLPROGRAMENVPARAMETER4DARBPROC __glewProgramEnvParameter4dARB = NULL;\nPFNGLPROGRAMENVPARAMETER4DVARBPROC __glewProgramEnvParameter4dvARB = NULL;\nPFNGLPROGRAMENVPARAMETER4FARBPROC __glewProgramEnvParameter4fARB = NULL;\nPFNGLPROGRAMENVPARAMETER4FVARBPROC __glewProgramEnvParameter4fvARB = NULL;\nPFNGLPROGRAMLOCALPARAMETER4DARBPROC __glewProgramLocalParameter4dARB = NULL;\nPFNGLPROGRAMLOCALPARAMETER4DVARBPROC __glewProgramLocalParameter4dvARB = NULL;\nPFNGLPROGRAMLOCALPARAMETER4FARBPROC __glewProgramLocalParameter4fARB = NULL;\nPFNGLPROGRAMLOCALPARAMETER4FVARBPROC __glewProgramLocalParameter4fvARB = NULL;\nPFNGLPROGRAMSTRINGARBPROC __glewProgramStringARB = NULL;\nPFNGLVERTEXATTRIB1DARBPROC __glewVertexAttrib1dARB = NULL;\nPFNGLVERTEXATTRIB1DVARBPROC __glewVertexAttrib1dvARB = NULL;\nPFNGLVERTEXATTRIB1FARBPROC __glewVertexAttrib1fARB = NULL;\nPFNGLVERTEXATTRIB1FVARBPROC __glewVertexAttrib1fvARB = NULL;\nPFNGLVERTEXATTRIB1SARBPROC __glewVertexAttrib1sARB = NULL;\nPFNGLVERTEXATTRIB1SVARBPROC __glewVertexAttrib1svARB = NULL;\nPFNGLVERTEXATTRIB2DARBPROC __glewVertexAttrib2dARB = NULL;\nPFNGLVERTEXATTRIB2DVARBPROC __glewVertexAttrib2dvARB = NULL;\nPFNGLVERTEXATTRIB2FARBPROC __glewVertexAttrib2fARB = NULL;\nPFNGLVERTEXATTRIB2FVARBPROC __glewVertexAttrib2fvARB = NULL;\nPFNGLVERTEXATTRIB2SARBPROC __glewVertexAttrib2sARB = NULL;\nPFNGLVERTEXATTRIB2SVARBPROC __glewVertexAttrib2svARB = NULL;\nPFNGLVERTEXATTRIB3DARBPROC __glewVertexAttrib3dARB = NULL;\nPFNGLVERTEXATTRIB3DVARBPROC __glewVertexAttrib3dvARB = NULL;\nPFNGLVERTEXATTRIB3FARBPROC __glewVertexAttrib3fARB = NULL;\nPFNGLVERTEXATTRIB3FVARBPROC __glewVertexAttrib3fvARB = NULL;\nPFNGLVERTEXATTRIB3SARBPROC __glewVertexAttrib3sARB = NULL;\nPFNGLVERTEXATTRIB3SVARBPROC __glewVertexAttrib3svARB = NULL;\nPFNGLVERTEXATTRIB4NBVARBPROC __glewVertexAttrib4NbvARB = NULL;\nPFNGLVERTEXATTRIB4NIVARBPROC __glewVertexAttrib4NivARB = NULL;\nPFNGLVERTEXATTRIB4NSVARBPROC __glewVertexAttrib4NsvARB = NULL;\nPFNGLVERTEXATTRIB4NUBARBPROC __glewVertexAttrib4NubARB = NULL;\nPFNGLVERTEXATTRIB4NUBVARBPROC __glewVertexAttrib4NubvARB = NULL;\nPFNGLVERTEXATTRIB4NUIVARBPROC __glewVertexAttrib4NuivARB = NULL;\nPFNGLVERTEXATTRIB4NUSVARBPROC __glewVertexAttrib4NusvARB = NULL;\nPFNGLVERTEXATTRIB4BVARBPROC __glewVertexAttrib4bvARB = NULL;\nPFNGLVERTEXATTRIB4DARBPROC __glewVertexAttrib4dARB = NULL;\nPFNGLVERTEXATTRIB4DVARBPROC __glewVertexAttrib4dvARB = NULL;\nPFNGLVERTEXATTRIB4FARBPROC __glewVertexAttrib4fARB = NULL;\nPFNGLVERTEXATTRIB4FVARBPROC __glewVertexAttrib4fvARB = NULL;\nPFNGLVERTEXATTRIB4IVARBPROC __glewVertexAttrib4ivARB = NULL;\nPFNGLVERTEXATTRIB4SARBPROC __glewVertexAttrib4sARB = NULL;\nPFNGLVERTEXATTRIB4SVARBPROC __glewVertexAttrib4svARB = NULL;\nPFNGLVERTEXATTRIB4UBVARBPROC __glewVertexAttrib4ubvARB = NULL;\nPFNGLVERTEXATTRIB4UIVARBPROC __glewVertexAttrib4uivARB = NULL;\nPFNGLVERTEXATTRIB4USVARBPROC __glewVertexAttrib4usvARB = NULL;\nPFNGLVERTEXATTRIBPOINTERARBPROC __glewVertexAttribPointerARB = NULL;\n\nPFNGLBINDATTRIBLOCATIONARBPROC __glewBindAttribLocationARB = NULL;\nPFNGLGETACTIVEATTRIBARBPROC __glewGetActiveAttribARB = NULL;\nPFNGLGETATTRIBLOCATIONARBPROC __glewGetAttribLocationARB = NULL;\n\nPFNGLCOLORP3UIPROC __glewColorP3ui = NULL;\nPFNGLCOLORP3UIVPROC __glewColorP3uiv = NULL;\nPFNGLCOLORP4UIPROC __glewColorP4ui = NULL;\nPFNGLCOLORP4UIVPROC __glewColorP4uiv = NULL;\nPFNGLMULTITEXCOORDP1UIPROC __glewMultiTexCoordP1ui = NULL;\nPFNGLMULTITEXCOORDP1UIVPROC __glewMultiTexCoordP1uiv = NULL;\nPFNGLMULTITEXCOORDP2UIPROC __glewMultiTexCoordP2ui = NULL;\nPFNGLMULTITEXCOORDP2UIVPROC __glewMultiTexCoordP2uiv = NULL;\nPFNGLMULTITEXCOORDP3UIPROC __glewMultiTexCoordP3ui = NULL;\nPFNGLMULTITEXCOORDP3UIVPROC __glewMultiTexCoordP3uiv = NULL;\nPFNGLMULTITEXCOORDP4UIPROC __glewMultiTexCoordP4ui = NULL;\nPFNGLMULTITEXCOORDP4UIVPROC __glewMultiTexCoordP4uiv = NULL;\nPFNGLNORMALP3UIPROC __glewNormalP3ui = NULL;\nPFNGLNORMALP3UIVPROC __glewNormalP3uiv = NULL;\nPFNGLSECONDARYCOLORP3UIPROC __glewSecondaryColorP3ui = NULL;\nPFNGLSECONDARYCOLORP3UIVPROC __glewSecondaryColorP3uiv = NULL;\nPFNGLTEXCOORDP1UIPROC __glewTexCoordP1ui = NULL;\nPFNGLTEXCOORDP1UIVPROC __glewTexCoordP1uiv = NULL;\nPFNGLTEXCOORDP2UIPROC __glewTexCoordP2ui = NULL;\nPFNGLTEXCOORDP2UIVPROC __glewTexCoordP2uiv = NULL;\nPFNGLTEXCOORDP3UIPROC __glewTexCoordP3ui = NULL;\nPFNGLTEXCOORDP3UIVPROC __glewTexCoordP3uiv = NULL;\nPFNGLTEXCOORDP4UIPROC __glewTexCoordP4ui = NULL;\nPFNGLTEXCOORDP4UIVPROC __glewTexCoordP4uiv = NULL;\nPFNGLVERTEXATTRIBP1UIPROC __glewVertexAttribP1ui = NULL;\nPFNGLVERTEXATTRIBP1UIVPROC __glewVertexAttribP1uiv = NULL;\nPFNGLVERTEXATTRIBP2UIPROC __glewVertexAttribP2ui = NULL;\nPFNGLVERTEXATTRIBP2UIVPROC __glewVertexAttribP2uiv = NULL;\nPFNGLVERTEXATTRIBP3UIPROC __glewVertexAttribP3ui = NULL;\nPFNGLVERTEXATTRIBP3UIVPROC __glewVertexAttribP3uiv = NULL;\nPFNGLVERTEXATTRIBP4UIPROC __glewVertexAttribP4ui = NULL;\nPFNGLVERTEXATTRIBP4UIVPROC __glewVertexAttribP4uiv = NULL;\nPFNGLVERTEXP2UIPROC __glewVertexP2ui = NULL;\nPFNGLVERTEXP2UIVPROC __glewVertexP2uiv = NULL;\nPFNGLVERTEXP3UIPROC __glewVertexP3ui = NULL;\nPFNGLVERTEXP3UIVPROC __glewVertexP3uiv = NULL;\nPFNGLVERTEXP4UIPROC __glewVertexP4ui = NULL;\nPFNGLVERTEXP4UIVPROC __glewVertexP4uiv = NULL;\n\nPFNGLDEPTHRANGEARRAYVPROC __glewDepthRangeArrayv = NULL;\nPFNGLDEPTHRANGEINDEXEDPROC __glewDepthRangeIndexed = NULL;\nPFNGLGETDOUBLEI_VPROC __glewGetDoublei_v = NULL;\nPFNGLGETFLOATI_VPROC __glewGetFloati_v = NULL;\nPFNGLSCISSORARRAYVPROC __glewScissorArrayv = NULL;\nPFNGLSCISSORINDEXEDPROC __glewScissorIndexed = NULL;\nPFNGLSCISSORINDEXEDVPROC __glewScissorIndexedv = NULL;\nPFNGLVIEWPORTARRAYVPROC __glewViewportArrayv = NULL;\nPFNGLVIEWPORTINDEXEDFPROC __glewViewportIndexedf = NULL;\nPFNGLVIEWPORTINDEXEDFVPROC __glewViewportIndexedfv = NULL;\n\nPFNGLWINDOWPOS2DARBPROC __glewWindowPos2dARB = NULL;\nPFNGLWINDOWPOS2DVARBPROC __glewWindowPos2dvARB = NULL;\nPFNGLWINDOWPOS2FARBPROC __glewWindowPos2fARB = NULL;\nPFNGLWINDOWPOS2FVARBPROC __glewWindowPos2fvARB = NULL;\nPFNGLWINDOWPOS2IARBPROC __glewWindowPos2iARB = NULL;\nPFNGLWINDOWPOS2IVARBPROC __glewWindowPos2ivARB = NULL;\nPFNGLWINDOWPOS2SARBPROC __glewWindowPos2sARB = NULL;\nPFNGLWINDOWPOS2SVARBPROC __glewWindowPos2svARB = NULL;\nPFNGLWINDOWPOS3DARBPROC __glewWindowPos3dARB = NULL;\nPFNGLWINDOWPOS3DVARBPROC __glewWindowPos3dvARB = NULL;\nPFNGLWINDOWPOS3FARBPROC __glewWindowPos3fARB = NULL;\nPFNGLWINDOWPOS3FVARBPROC __glewWindowPos3fvARB = NULL;\nPFNGLWINDOWPOS3IARBPROC __glewWindowPos3iARB = NULL;\nPFNGLWINDOWPOS3IVARBPROC __glewWindowPos3ivARB = NULL;\nPFNGLWINDOWPOS3SARBPROC __glewWindowPos3sARB = NULL;\nPFNGLWINDOWPOS3SVARBPROC __glewWindowPos3svARB = NULL;\n\nPFNGLDRAWBUFFERSATIPROC __glewDrawBuffersATI = NULL;\n\nPFNGLDRAWELEMENTARRAYATIPROC __glewDrawElementArrayATI = NULL;\nPFNGLDRAWRANGEELEMENTARRAYATIPROC __glewDrawRangeElementArrayATI = NULL;\nPFNGLELEMENTPOINTERATIPROC __glewElementPointerATI = NULL;\n\nPFNGLGETTEXBUMPPARAMETERFVATIPROC __glewGetTexBumpParameterfvATI = NULL;\nPFNGLGETTEXBUMPPARAMETERIVATIPROC __glewGetTexBumpParameterivATI = NULL;\nPFNGLTEXBUMPPARAMETERFVATIPROC __glewTexBumpParameterfvATI = NULL;\nPFNGLTEXBUMPPARAMETERIVATIPROC __glewTexBumpParameterivATI = NULL;\n\nPFNGLALPHAFRAGMENTOP1ATIPROC __glewAlphaFragmentOp1ATI = NULL;\nPFNGLALPHAFRAGMENTOP2ATIPROC __glewAlphaFragmentOp2ATI = NULL;\nPFNGLALPHAFRAGMENTOP3ATIPROC __glewAlphaFragmentOp3ATI = NULL;\nPFNGLBEGINFRAGMENTSHADERATIPROC __glewBeginFragmentShaderATI = NULL;\nPFNGLBINDFRAGMENTSHADERATIPROC __glewBindFragmentShaderATI = NULL;\nPFNGLCOLORFRAGMENTOP1ATIPROC __glewColorFragmentOp1ATI = NULL;\nPFNGLCOLORFRAGMENTOP2ATIPROC __glewColorFragmentOp2ATI = NULL;\nPFNGLCOLORFRAGMENTOP3ATIPROC __glewColorFragmentOp3ATI = NULL;\nPFNGLDELETEFRAGMENTSHADERATIPROC __glewDeleteFragmentShaderATI = NULL;\nPFNGLENDFRAGMENTSHADERATIPROC __glewEndFragmentShaderATI = NULL;\nPFNGLGENFRAGMENTSHADERSATIPROC __glewGenFragmentShadersATI = NULL;\nPFNGLPASSTEXCOORDATIPROC __glewPassTexCoordATI = NULL;\nPFNGLSAMPLEMAPATIPROC __glewSampleMapATI = NULL;\nPFNGLSETFRAGMENTSHADERCONSTANTATIPROC __glewSetFragmentShaderConstantATI = NULL;\n\nPFNGLMAPOBJECTBUFFERATIPROC __glewMapObjectBufferATI = NULL;\nPFNGLUNMAPOBJECTBUFFERATIPROC __glewUnmapObjectBufferATI = NULL;\n\nPFNGLPNTRIANGLESFATIPROC __glewPNTrianglesfATI = NULL;\nPFNGLPNTRIANGLESIATIPROC __glewPNTrianglesiATI = NULL;\n\nPFNGLSTENCILFUNCSEPARATEATIPROC __glewStencilFuncSeparateATI = NULL;\nPFNGLSTENCILOPSEPARATEATIPROC __glewStencilOpSeparateATI = NULL;\n\nPFNGLARRAYOBJECTATIPROC __glewArrayObjectATI = NULL;\nPFNGLFREEOBJECTBUFFERATIPROC __glewFreeObjectBufferATI = NULL;\nPFNGLGETARRAYOBJECTFVATIPROC __glewGetArrayObjectfvATI = NULL;\nPFNGLGETARRAYOBJECTIVATIPROC __glewGetArrayObjectivATI = NULL;\nPFNGLGETOBJECTBUFFERFVATIPROC __glewGetObjectBufferfvATI = NULL;\nPFNGLGETOBJECTBUFFERIVATIPROC __glewGetObjectBufferivATI = NULL;\nPFNGLGETVARIANTARRAYOBJECTFVATIPROC __glewGetVariantArrayObjectfvATI = NULL;\nPFNGLGETVARIANTARRAYOBJECTIVATIPROC __glewGetVariantArrayObjectivATI = NULL;\nPFNGLISOBJECTBUFFERATIPROC __glewIsObjectBufferATI = NULL;\nPFNGLNEWOBJECTBUFFERATIPROC __glewNewObjectBufferATI = NULL;\nPFNGLUPDATEOBJECTBUFFERATIPROC __glewUpdateObjectBufferATI = NULL;\nPFNGLVARIANTARRAYOBJECTATIPROC __glewVariantArrayObjectATI = NULL;\n\nPFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC __glewGetVertexAttribArrayObjectfvATI = NULL;\nPFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC __glewGetVertexAttribArrayObjectivATI = NULL;\nPFNGLVERTEXATTRIBARRAYOBJECTATIPROC __glewVertexAttribArrayObjectATI = NULL;\n\nPFNGLCLIENTACTIVEVERTEXSTREAMATIPROC __glewClientActiveVertexStreamATI = NULL;\nPFNGLNORMALSTREAM3BATIPROC __glewNormalStream3bATI = NULL;\nPFNGLNORMALSTREAM3BVATIPROC __glewNormalStream3bvATI = NULL;\nPFNGLNORMALSTREAM3DATIPROC __glewNormalStream3dATI = NULL;\nPFNGLNORMALSTREAM3DVATIPROC __glewNormalStream3dvATI = NULL;\nPFNGLNORMALSTREAM3FATIPROC __glewNormalStream3fATI = NULL;\nPFNGLNORMALSTREAM3FVATIPROC __glewNormalStream3fvATI = NULL;\nPFNGLNORMALSTREAM3IATIPROC __glewNormalStream3iATI = NULL;\nPFNGLNORMALSTREAM3IVATIPROC __glewNormalStream3ivATI = NULL;\nPFNGLNORMALSTREAM3SATIPROC __glewNormalStream3sATI = NULL;\nPFNGLNORMALSTREAM3SVATIPROC __glewNormalStream3svATI = NULL;\nPFNGLVERTEXBLENDENVFATIPROC __glewVertexBlendEnvfATI = NULL;\nPFNGLVERTEXBLENDENVIATIPROC __glewVertexBlendEnviATI = NULL;\nPFNGLVERTEXSTREAM1DATIPROC __glewVertexStream1dATI = NULL;\nPFNGLVERTEXSTREAM1DVATIPROC __glewVertexStream1dvATI = NULL;\nPFNGLVERTEXSTREAM1FATIPROC __glewVertexStream1fATI = NULL;\nPFNGLVERTEXSTREAM1FVATIPROC __glewVertexStream1fvATI = NULL;\nPFNGLVERTEXSTREAM1IATIPROC __glewVertexStream1iATI = NULL;\nPFNGLVERTEXSTREAM1IVATIPROC __glewVertexStream1ivATI = NULL;\nPFNGLVERTEXSTREAM1SATIPROC __glewVertexStream1sATI = NULL;\nPFNGLVERTEXSTREAM1SVATIPROC __glewVertexStream1svATI = NULL;\nPFNGLVERTEXSTREAM2DATIPROC __glewVertexStream2dATI = NULL;\nPFNGLVERTEXSTREAM2DVATIPROC __glewVertexStream2dvATI = NULL;\nPFNGLVERTEXSTREAM2FATIPROC __glewVertexStream2fATI = NULL;\nPFNGLVERTEXSTREAM2FVATIPROC __glewVertexStream2fvATI = NULL;\nPFNGLVERTEXSTREAM2IATIPROC __glewVertexStream2iATI = NULL;\nPFNGLVERTEXSTREAM2IVATIPROC __glewVertexStream2ivATI = NULL;\nPFNGLVERTEXSTREAM2SATIPROC __glewVertexStream2sATI = NULL;\nPFNGLVERTEXSTREAM2SVATIPROC __glewVertexStream2svATI = NULL;\nPFNGLVERTEXSTREAM3DATIPROC __glewVertexStream3dATI = NULL;\nPFNGLVERTEXSTREAM3DVATIPROC __glewVertexStream3dvATI = NULL;\nPFNGLVERTEXSTREAM3FATIPROC __glewVertexStream3fATI = NULL;\nPFNGLVERTEXSTREAM3FVATIPROC __glewVertexStream3fvATI = NULL;\nPFNGLVERTEXSTREAM3IATIPROC __glewVertexStream3iATI = NULL;\nPFNGLVERTEXSTREAM3IVATIPROC __glewVertexStream3ivATI = NULL;\nPFNGLVERTEXSTREAM3SATIPROC __glewVertexStream3sATI = NULL;\nPFNGLVERTEXSTREAM3SVATIPROC __glewVertexStream3svATI = NULL;\nPFNGLVERTEXSTREAM4DATIPROC __glewVertexStream4dATI = NULL;\nPFNGLVERTEXSTREAM4DVATIPROC __glewVertexStream4dvATI = NULL;\nPFNGLVERTEXSTREAM4FATIPROC __glewVertexStream4fATI = NULL;\nPFNGLVERTEXSTREAM4FVATIPROC __glewVertexStream4fvATI = NULL;\nPFNGLVERTEXSTREAM4IATIPROC __glewVertexStream4iATI = NULL;\nPFNGLVERTEXSTREAM4IVATIPROC __glewVertexStream4ivATI = NULL;\nPFNGLVERTEXSTREAM4SATIPROC __glewVertexStream4sATI = NULL;\nPFNGLVERTEXSTREAM4SVATIPROC __glewVertexStream4svATI = NULL;\n\nPFNGLGETUNIFORMBUFFERSIZEEXTPROC __glewGetUniformBufferSizeEXT = NULL;\nPFNGLGETUNIFORMOFFSETEXTPROC __glewGetUniformOffsetEXT = NULL;\nPFNGLUNIFORMBUFFEREXTPROC __glewUniformBufferEXT = NULL;\n\nPFNGLBLENDCOLOREXTPROC __glewBlendColorEXT = NULL;\n\nPFNGLBLENDEQUATIONSEPARATEEXTPROC __glewBlendEquationSeparateEXT = NULL;\n\nPFNGLBLENDFUNCSEPARATEEXTPROC __glewBlendFuncSeparateEXT = NULL;\n\nPFNGLBLENDEQUATIONEXTPROC __glewBlendEquationEXT = NULL;\n\nPFNGLCOLORSUBTABLEEXTPROC __glewColorSubTableEXT = NULL;\nPFNGLCOPYCOLORSUBTABLEEXTPROC __glewCopyColorSubTableEXT = NULL;\n\nPFNGLLOCKARRAYSEXTPROC __glewLockArraysEXT = NULL;\nPFNGLUNLOCKARRAYSEXTPROC __glewUnlockArraysEXT = NULL;\n\nPFNGLCONVOLUTIONFILTER1DEXTPROC __glewConvolutionFilter1DEXT = NULL;\nPFNGLCONVOLUTIONFILTER2DEXTPROC __glewConvolutionFilter2DEXT = NULL;\nPFNGLCONVOLUTIONPARAMETERFEXTPROC __glewConvolutionParameterfEXT = NULL;\nPFNGLCONVOLUTIONPARAMETERFVEXTPROC __glewConvolutionParameterfvEXT = NULL;\nPFNGLCONVOLUTIONPARAMETERIEXTPROC __glewConvolutionParameteriEXT = NULL;\nPFNGLCONVOLUTIONPARAMETERIVEXTPROC __glewConvolutionParameterivEXT = NULL;\nPFNGLCOPYCONVOLUTIONFILTER1DEXTPROC __glewCopyConvolutionFilter1DEXT = NULL;\nPFNGLCOPYCONVOLUTIONFILTER2DEXTPROC __glewCopyConvolutionFilter2DEXT = NULL;\nPFNGLGETCONVOLUTIONFILTEREXTPROC __glewGetConvolutionFilterEXT = NULL;\nPFNGLGETCONVOLUTIONPARAMETERFVEXTPROC __glewGetConvolutionParameterfvEXT = NULL;\nPFNGLGETCONVOLUTIONPARAMETERIVEXTPROC __glewGetConvolutionParameterivEXT = NULL;\nPFNGLGETSEPARABLEFILTEREXTPROC __glewGetSeparableFilterEXT = NULL;\nPFNGLSEPARABLEFILTER2DEXTPROC __glewSeparableFilter2DEXT = NULL;\n\nPFNGLBINORMALPOINTEREXTPROC __glewBinormalPointerEXT = NULL;\nPFNGLTANGENTPOINTEREXTPROC __glewTangentPointerEXT = NULL;\n\nPFNGLCOPYTEXIMAGE1DEXTPROC __glewCopyTexImage1DEXT = NULL;\nPFNGLCOPYTEXIMAGE2DEXTPROC __glewCopyTexImage2DEXT = NULL;\nPFNGLCOPYTEXSUBIMAGE1DEXTPROC __glewCopyTexSubImage1DEXT = NULL;\nPFNGLCOPYTEXSUBIMAGE2DEXTPROC __glewCopyTexSubImage2DEXT = NULL;\nPFNGLCOPYTEXSUBIMAGE3DEXTPROC __glewCopyTexSubImage3DEXT = NULL;\n\nPFNGLCULLPARAMETERDVEXTPROC __glewCullParameterdvEXT = NULL;\nPFNGLCULLPARAMETERFVEXTPROC __glewCullParameterfvEXT = NULL;\n\nPFNGLGETOBJECTLABELEXTPROC __glewGetObjectLabelEXT = NULL;\nPFNGLLABELOBJECTEXTPROC __glewLabelObjectEXT = NULL;\n\nPFNGLINSERTEVENTMARKEREXTPROC __glewInsertEventMarkerEXT = NULL;\nPFNGLPOPGROUPMARKEREXTPROC __glewPopGroupMarkerEXT = NULL;\nPFNGLPUSHGROUPMARKEREXTPROC __glewPushGroupMarkerEXT = NULL;\n\nPFNGLDEPTHBOUNDSEXTPROC __glewDepthBoundsEXT = NULL;\n\nPFNGLBINDMULTITEXTUREEXTPROC __glewBindMultiTextureEXT = NULL;\nPFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC __glewCheckNamedFramebufferStatusEXT = NULL;\nPFNGLCLIENTATTRIBDEFAULTEXTPROC __glewClientAttribDefaultEXT = NULL;\nPFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC __glewCompressedMultiTexImage1DEXT = NULL;\nPFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC __glewCompressedMultiTexImage2DEXT = NULL;\nPFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC __glewCompressedMultiTexImage3DEXT = NULL;\nPFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC __glewCompressedMultiTexSubImage1DEXT = NULL;\nPFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC __glewCompressedMultiTexSubImage2DEXT = NULL;\nPFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC __glewCompressedMultiTexSubImage3DEXT = NULL;\nPFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC __glewCompressedTextureImage1DEXT = NULL;\nPFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC __glewCompressedTextureImage2DEXT = NULL;\nPFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC __glewCompressedTextureImage3DEXT = NULL;\nPFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC __glewCompressedTextureSubImage1DEXT = NULL;\nPFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC __glewCompressedTextureSubImage2DEXT = NULL;\nPFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC __glewCompressedTextureSubImage3DEXT = NULL;\nPFNGLCOPYMULTITEXIMAGE1DEXTPROC __glewCopyMultiTexImage1DEXT = NULL;\nPFNGLCOPYMULTITEXIMAGE2DEXTPROC __glewCopyMultiTexImage2DEXT = NULL;\nPFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC __glewCopyMultiTexSubImage1DEXT = NULL;\nPFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC __glewCopyMultiTexSubImage2DEXT = NULL;\nPFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC __glewCopyMultiTexSubImage3DEXT = NULL;\nPFNGLCOPYTEXTUREIMAGE1DEXTPROC __glewCopyTextureImage1DEXT = NULL;\nPFNGLCOPYTEXTUREIMAGE2DEXTPROC __glewCopyTextureImage2DEXT = NULL;\nPFNGLCOPYTEXTURESUBIMAGE1DEXTPROC __glewCopyTextureSubImage1DEXT = NULL;\nPFNGLCOPYTEXTURESUBIMAGE2DEXTPROC __glewCopyTextureSubImage2DEXT = NULL;\nPFNGLCOPYTEXTURESUBIMAGE3DEXTPROC __glewCopyTextureSubImage3DEXT = NULL;\nPFNGLDISABLECLIENTSTATEINDEXEDEXTPROC __glewDisableClientStateIndexedEXT = NULL;\nPFNGLDISABLECLIENTSTATEIEXTPROC __glewDisableClientStateiEXT = NULL;\nPFNGLDISABLEVERTEXARRAYATTRIBEXTPROC __glewDisableVertexArrayAttribEXT = NULL;\nPFNGLDISABLEVERTEXARRAYEXTPROC __glewDisableVertexArrayEXT = NULL;\nPFNGLENABLECLIENTSTATEINDEXEDEXTPROC __glewEnableClientStateIndexedEXT = NULL;\nPFNGLENABLECLIENTSTATEIEXTPROC __glewEnableClientStateiEXT = NULL;\nPFNGLENABLEVERTEXARRAYATTRIBEXTPROC __glewEnableVertexArrayAttribEXT = NULL;\nPFNGLENABLEVERTEXARRAYEXTPROC __glewEnableVertexArrayEXT = NULL;\nPFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC __glewFlushMappedNamedBufferRangeEXT = NULL;\nPFNGLFRAMEBUFFERDRAWBUFFEREXTPROC __glewFramebufferDrawBufferEXT = NULL;\nPFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC __glewFramebufferDrawBuffersEXT = NULL;\nPFNGLFRAMEBUFFERREADBUFFEREXTPROC __glewFramebufferReadBufferEXT = NULL;\nPFNGLGENERATEMULTITEXMIPMAPEXTPROC __glewGenerateMultiTexMipmapEXT = NULL;\nPFNGLGENERATETEXTUREMIPMAPEXTPROC __glewGenerateTextureMipmapEXT = NULL;\nPFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC __glewGetCompressedMultiTexImageEXT = NULL;\nPFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC __glewGetCompressedTextureImageEXT = NULL;\nPFNGLGETDOUBLEINDEXEDVEXTPROC __glewGetDoubleIndexedvEXT = NULL;\nPFNGLGETDOUBLEI_VEXTPROC __glewGetDoublei_vEXT = NULL;\nPFNGLGETFLOATINDEXEDVEXTPROC __glewGetFloatIndexedvEXT = NULL;\nPFNGLGETFLOATI_VEXTPROC __glewGetFloati_vEXT = NULL;\nPFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC __glewGetFramebufferParameterivEXT = NULL;\nPFNGLGETMULTITEXENVFVEXTPROC __glewGetMultiTexEnvfvEXT = NULL;\nPFNGLGETMULTITEXENVIVEXTPROC __glewGetMultiTexEnvivEXT = NULL;\nPFNGLGETMULTITEXGENDVEXTPROC __glewGetMultiTexGendvEXT = NULL;\nPFNGLGETMULTITEXGENFVEXTPROC __glewGetMultiTexGenfvEXT = NULL;\nPFNGLGETMULTITEXGENIVEXTPROC __glewGetMultiTexGenivEXT = NULL;\nPFNGLGETMULTITEXIMAGEEXTPROC __glewGetMultiTexImageEXT = NULL;\nPFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC __glewGetMultiTexLevelParameterfvEXT = NULL;\nPFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC __glewGetMultiTexLevelParameterivEXT = NULL;\nPFNGLGETMULTITEXPARAMETERIIVEXTPROC __glewGetMultiTexParameterIivEXT = NULL;\nPFNGLGETMULTITEXPARAMETERIUIVEXTPROC __glewGetMultiTexParameterIuivEXT = NULL;\nPFNGLGETMULTITEXPARAMETERFVEXTPROC __glewGetMultiTexParameterfvEXT = NULL;\nPFNGLGETMULTITEXPARAMETERIVEXTPROC __glewGetMultiTexParameterivEXT = NULL;\nPFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC __glewGetNamedBufferParameterivEXT = NULL;\nPFNGLGETNAMEDBUFFERPOINTERVEXTPROC __glewGetNamedBufferPointervEXT = NULL;\nPFNGLGETNAMEDBUFFERSUBDATAEXTPROC __glewGetNamedBufferSubDataEXT = NULL;\nPFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC __glewGetNamedFramebufferAttachmentParameterivEXT = NULL;\nPFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC __glewGetNamedProgramLocalParameterIivEXT = NULL;\nPFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC __glewGetNamedProgramLocalParameterIuivEXT = NULL;\nPFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC __glewGetNamedProgramLocalParameterdvEXT = NULL;\nPFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC __glewGetNamedProgramLocalParameterfvEXT = NULL;\nPFNGLGETNAMEDPROGRAMSTRINGEXTPROC __glewGetNamedProgramStringEXT = NULL;\nPFNGLGETNAMEDPROGRAMIVEXTPROC __glewGetNamedProgramivEXT = NULL;\nPFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC __glewGetNamedRenderbufferParameterivEXT = NULL;\nPFNGLGETPOINTERINDEXEDVEXTPROC __glewGetPointerIndexedvEXT = NULL;\nPFNGLGETPOINTERI_VEXTPROC __glewGetPointeri_vEXT = NULL;\nPFNGLGETTEXTUREIMAGEEXTPROC __glewGetTextureImageEXT = NULL;\nPFNGLGETTEXTURELEVELPARAMETERFVEXTPROC __glewGetTextureLevelParameterfvEXT = NULL;\nPFNGLGETTEXTURELEVELPARAMETERIVEXTPROC __glewGetTextureLevelParameterivEXT = NULL;\nPFNGLGETTEXTUREPARAMETERIIVEXTPROC __glewGetTextureParameterIivEXT = NULL;\nPFNGLGETTEXTUREPARAMETERIUIVEXTPROC __glewGetTextureParameterIuivEXT = NULL;\nPFNGLGETTEXTUREPARAMETERFVEXTPROC __glewGetTextureParameterfvEXT = NULL;\nPFNGLGETTEXTUREPARAMETERIVEXTPROC __glewGetTextureParameterivEXT = NULL;\nPFNGLGETVERTEXARRAYINTEGERI_VEXTPROC __glewGetVertexArrayIntegeri_vEXT = NULL;\nPFNGLGETVERTEXARRAYINTEGERVEXTPROC __glewGetVertexArrayIntegervEXT = NULL;\nPFNGLGETVERTEXARRAYPOINTERI_VEXTPROC __glewGetVertexArrayPointeri_vEXT = NULL;\nPFNGLGETVERTEXARRAYPOINTERVEXTPROC __glewGetVertexArrayPointervEXT = NULL;\nPFNGLMAPNAMEDBUFFEREXTPROC __glewMapNamedBufferEXT = NULL;\nPFNGLMAPNAMEDBUFFERRANGEEXTPROC __glewMapNamedBufferRangeEXT = NULL;\nPFNGLMATRIXFRUSTUMEXTPROC __glewMatrixFrustumEXT = NULL;\nPFNGLMATRIXLOADIDENTITYEXTPROC __glewMatrixLoadIdentityEXT = NULL;\nPFNGLMATRIXLOADTRANSPOSEDEXTPROC __glewMatrixLoadTransposedEXT = NULL;\nPFNGLMATRIXLOADTRANSPOSEFEXTPROC __glewMatrixLoadTransposefEXT = NULL;\nPFNGLMATRIXLOADDEXTPROC __glewMatrixLoaddEXT = NULL;\nPFNGLMATRIXLOADFEXTPROC __glewMatrixLoadfEXT = NULL;\nPFNGLMATRIXMULTTRANSPOSEDEXTPROC __glewMatrixMultTransposedEXT = NULL;\nPFNGLMATRIXMULTTRANSPOSEFEXTPROC __glewMatrixMultTransposefEXT = NULL;\nPFNGLMATRIXMULTDEXTPROC __glewMatrixMultdEXT = NULL;\nPFNGLMATRIXMULTFEXTPROC __glewMatrixMultfEXT = NULL;\nPFNGLMATRIXORTHOEXTPROC __glewMatrixOrthoEXT = NULL;\nPFNGLMATRIXPOPEXTPROC __glewMatrixPopEXT = NULL;\nPFNGLMATRIXPUSHEXTPROC __glewMatrixPushEXT = NULL;\nPFNGLMATRIXROTATEDEXTPROC __glewMatrixRotatedEXT = NULL;\nPFNGLMATRIXROTATEFEXTPROC __glewMatrixRotatefEXT = NULL;\nPFNGLMATRIXSCALEDEXTPROC __glewMatrixScaledEXT = NULL;\nPFNGLMATRIXSCALEFEXTPROC __glewMatrixScalefEXT = NULL;\nPFNGLMATRIXTRANSLATEDEXTPROC __glewMatrixTranslatedEXT = NULL;\nPFNGLMATRIXTRANSLATEFEXTPROC __glewMatrixTranslatefEXT = NULL;\nPFNGLMULTITEXBUFFEREXTPROC __glewMultiTexBufferEXT = NULL;\nPFNGLMULTITEXCOORDPOINTEREXTPROC __glewMultiTexCoordPointerEXT = NULL;\nPFNGLMULTITEXENVFEXTPROC __glewMultiTexEnvfEXT = NULL;\nPFNGLMULTITEXENVFVEXTPROC __glewMultiTexEnvfvEXT = NULL;\nPFNGLMULTITEXENVIEXTPROC __glewMultiTexEnviEXT = NULL;\nPFNGLMULTITEXENVIVEXTPROC __glewMultiTexEnvivEXT = NULL;\nPFNGLMULTITEXGENDEXTPROC __glewMultiTexGendEXT = NULL;\nPFNGLMULTITEXGENDVEXTPROC __glewMultiTexGendvEXT = NULL;\nPFNGLMULTITEXGENFEXTPROC __glewMultiTexGenfEXT = NULL;\nPFNGLMULTITEXGENFVEXTPROC __glewMultiTexGenfvEXT = NULL;\nPFNGLMULTITEXGENIEXTPROC __glewMultiTexGeniEXT = NULL;\nPFNGLMULTITEXGENIVEXTPROC __glewMultiTexGenivEXT = NULL;\nPFNGLMULTITEXIMAGE1DEXTPROC __glewMultiTexImage1DEXT = NULL;\nPFNGLMULTITEXIMAGE2DEXTPROC __glewMultiTexImage2DEXT = NULL;\nPFNGLMULTITEXIMAGE3DEXTPROC __glewMultiTexImage3DEXT = NULL;\nPFNGLMULTITEXPARAMETERIIVEXTPROC __glewMultiTexParameterIivEXT = NULL;\nPFNGLMULTITEXPARAMETERIUIVEXTPROC __glewMultiTexParameterIuivEXT = NULL;\nPFNGLMULTITEXPARAMETERFEXTPROC __glewMultiTexParameterfEXT = NULL;\nPFNGLMULTITEXPARAMETERFVEXTPROC __glewMultiTexParameterfvEXT = NULL;\nPFNGLMULTITEXPARAMETERIEXTPROC __glewMultiTexParameteriEXT = NULL;\nPFNGLMULTITEXPARAMETERIVEXTPROC __glewMultiTexParameterivEXT = NULL;\nPFNGLMULTITEXRENDERBUFFEREXTPROC __glewMultiTexRenderbufferEXT = NULL;\nPFNGLMULTITEXSUBIMAGE1DEXTPROC __glewMultiTexSubImage1DEXT = NULL;\nPFNGLMULTITEXSUBIMAGE2DEXTPROC __glewMultiTexSubImage2DEXT = NULL;\nPFNGLMULTITEXSUBIMAGE3DEXTPROC __glewMultiTexSubImage3DEXT = NULL;\nPFNGLNAMEDBUFFERDATAEXTPROC __glewNamedBufferDataEXT = NULL;\nPFNGLNAMEDBUFFERSUBDATAEXTPROC __glewNamedBufferSubDataEXT = NULL;\nPFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC __glewNamedCopyBufferSubDataEXT = NULL;\nPFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC __glewNamedFramebufferRenderbufferEXT = NULL;\nPFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC __glewNamedFramebufferTexture1DEXT = NULL;\nPFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC __glewNamedFramebufferTexture2DEXT = NULL;\nPFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC __glewNamedFramebufferTexture3DEXT = NULL;\nPFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC __glewNamedFramebufferTextureEXT = NULL;\nPFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC __glewNamedFramebufferTextureFaceEXT = NULL;\nPFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC __glewNamedFramebufferTextureLayerEXT = NULL;\nPFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC __glewNamedProgramLocalParameter4dEXT = NULL;\nPFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC __glewNamedProgramLocalParameter4dvEXT = NULL;\nPFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC __glewNamedProgramLocalParameter4fEXT = NULL;\nPFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC __glewNamedProgramLocalParameter4fvEXT = NULL;\nPFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC __glewNamedProgramLocalParameterI4iEXT = NULL;\nPFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC __glewNamedProgramLocalParameterI4ivEXT = NULL;\nPFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC __glewNamedProgramLocalParameterI4uiEXT = NULL;\nPFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC __glewNamedProgramLocalParameterI4uivEXT = NULL;\nPFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC __glewNamedProgramLocalParameters4fvEXT = NULL;\nPFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC __glewNamedProgramLocalParametersI4ivEXT = NULL;\nPFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC __glewNamedProgramLocalParametersI4uivEXT = NULL;\nPFNGLNAMEDPROGRAMSTRINGEXTPROC __glewNamedProgramStringEXT = NULL;\nPFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC __glewNamedRenderbufferStorageEXT = NULL;\nPFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC __glewNamedRenderbufferStorageMultisampleCoverageEXT = NULL;\nPFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC __glewNamedRenderbufferStorageMultisampleEXT = NULL;\nPFNGLPROGRAMUNIFORM1FEXTPROC __glewProgramUniform1fEXT = NULL;\nPFNGLPROGRAMUNIFORM1FVEXTPROC __glewProgramUniform1fvEXT = NULL;\nPFNGLPROGRAMUNIFORM1IEXTPROC __glewProgramUniform1iEXT = NULL;\nPFNGLPROGRAMUNIFORM1IVEXTPROC __glewProgramUniform1ivEXT = NULL;\nPFNGLPROGRAMUNIFORM1UIEXTPROC __glewProgramUniform1uiEXT = NULL;\nPFNGLPROGRAMUNIFORM1UIVEXTPROC __glewProgramUniform1uivEXT = NULL;\nPFNGLPROGRAMUNIFORM2FEXTPROC __glewProgramUniform2fEXT = NULL;\nPFNGLPROGRAMUNIFORM2FVEXTPROC __glewProgramUniform2fvEXT = NULL;\nPFNGLPROGRAMUNIFORM2IEXTPROC __glewProgramUniform2iEXT = NULL;\nPFNGLPROGRAMUNIFORM2IVEXTPROC __glewProgramUniform2ivEXT = NULL;\nPFNGLPROGRAMUNIFORM2UIEXTPROC __glewProgramUniform2uiEXT = NULL;\nPFNGLPROGRAMUNIFORM2UIVEXTPROC __glewProgramUniform2uivEXT = NULL;\nPFNGLPROGRAMUNIFORM3FEXTPROC __glewProgramUniform3fEXT = NULL;\nPFNGLPROGRAMUNIFORM3FVEXTPROC __glewProgramUniform3fvEXT = NULL;\nPFNGLPROGRAMUNIFORM3IEXTPROC __glewProgramUniform3iEXT = NULL;\nPFNGLPROGRAMUNIFORM3IVEXTPROC __glewProgramUniform3ivEXT = NULL;\nPFNGLPROGRAMUNIFORM3UIEXTPROC __glewProgramUniform3uiEXT = NULL;\nPFNGLPROGRAMUNIFORM3UIVEXTPROC __glewProgramUniform3uivEXT = NULL;\nPFNGLPROGRAMUNIFORM4FEXTPROC __glewProgramUniform4fEXT = NULL;\nPFNGLPROGRAMUNIFORM4FVEXTPROC __glewProgramUniform4fvEXT = NULL;\nPFNGLPROGRAMUNIFORM4IEXTPROC __glewProgramUniform4iEXT = NULL;\nPFNGLPROGRAMUNIFORM4IVEXTPROC __glewProgramUniform4ivEXT = NULL;\nPFNGLPROGRAMUNIFORM4UIEXTPROC __glewProgramUniform4uiEXT = NULL;\nPFNGLPROGRAMUNIFORM4UIVEXTPROC __glewProgramUniform4uivEXT = NULL;\nPFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC __glewProgramUniformMatrix2fvEXT = NULL;\nPFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC __glewProgramUniformMatrix2x3fvEXT = NULL;\nPFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC __glewProgramUniformMatrix2x4fvEXT = NULL;\nPFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC __glewProgramUniformMatrix3fvEXT = NULL;\nPFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC __glewProgramUniformMatrix3x2fvEXT = NULL;\nPFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC __glewProgramUniformMatrix3x4fvEXT = NULL;\nPFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC __glewProgramUniformMatrix4fvEXT = NULL;\nPFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC __glewProgramUniformMatrix4x2fvEXT = NULL;\nPFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC __glewProgramUniformMatrix4x3fvEXT = NULL;\nPFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC __glewPushClientAttribDefaultEXT = NULL;\nPFNGLTEXTUREBUFFEREXTPROC __glewTextureBufferEXT = NULL;\nPFNGLTEXTUREIMAGE1DEXTPROC __glewTextureImage1DEXT = NULL;\nPFNGLTEXTUREIMAGE2DEXTPROC __glewTextureImage2DEXT = NULL;\nPFNGLTEXTUREIMAGE3DEXTPROC __glewTextureImage3DEXT = NULL;\nPFNGLTEXTUREPARAMETERIIVEXTPROC __glewTextureParameterIivEXT = NULL;\nPFNGLTEXTUREPARAMETERIUIVEXTPROC __glewTextureParameterIuivEXT = NULL;\nPFNGLTEXTUREPARAMETERFEXTPROC __glewTextureParameterfEXT = NULL;\nPFNGLTEXTUREPARAMETERFVEXTPROC __glewTextureParameterfvEXT = NULL;\nPFNGLTEXTUREPARAMETERIEXTPROC __glewTextureParameteriEXT = NULL;\nPFNGLTEXTUREPARAMETERIVEXTPROC __glewTextureParameterivEXT = NULL;\nPFNGLTEXTURERENDERBUFFEREXTPROC __glewTextureRenderbufferEXT = NULL;\nPFNGLTEXTURESUBIMAGE1DEXTPROC __glewTextureSubImage1DEXT = NULL;\nPFNGLTEXTURESUBIMAGE2DEXTPROC __glewTextureSubImage2DEXT = NULL;\nPFNGLTEXTURESUBIMAGE3DEXTPROC __glewTextureSubImage3DEXT = NULL;\nPFNGLUNMAPNAMEDBUFFEREXTPROC __glewUnmapNamedBufferEXT = NULL;\nPFNGLVERTEXARRAYCOLOROFFSETEXTPROC __glewVertexArrayColorOffsetEXT = NULL;\nPFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC __glewVertexArrayEdgeFlagOffsetEXT = NULL;\nPFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC __glewVertexArrayFogCoordOffsetEXT = NULL;\nPFNGLVERTEXARRAYINDEXOFFSETEXTPROC __glewVertexArrayIndexOffsetEXT = NULL;\nPFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC __glewVertexArrayMultiTexCoordOffsetEXT = NULL;\nPFNGLVERTEXARRAYNORMALOFFSETEXTPROC __glewVertexArrayNormalOffsetEXT = NULL;\nPFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC __glewVertexArraySecondaryColorOffsetEXT = NULL;\nPFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC __glewVertexArrayTexCoordOffsetEXT = NULL;\nPFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC __glewVertexArrayVertexAttribDivisorEXT = NULL;\nPFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC __glewVertexArrayVertexAttribIOffsetEXT = NULL;\nPFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC __glewVertexArrayVertexAttribOffsetEXT = NULL;\nPFNGLVERTEXARRAYVERTEXOFFSETEXTPROC __glewVertexArrayVertexOffsetEXT = NULL;\n\nPFNGLCOLORMASKINDEXEDEXTPROC __glewColorMaskIndexedEXT = NULL;\nPFNGLDISABLEINDEXEDEXTPROC __glewDisableIndexedEXT = NULL;\nPFNGLENABLEINDEXEDEXTPROC __glewEnableIndexedEXT = NULL;\nPFNGLGETBOOLEANINDEXEDVEXTPROC __glewGetBooleanIndexedvEXT = NULL;\nPFNGLGETINTEGERINDEXEDVEXTPROC __glewGetIntegerIndexedvEXT = NULL;\nPFNGLISENABLEDINDEXEDEXTPROC __glewIsEnabledIndexedEXT = NULL;\n\nPFNGLDRAWARRAYSINSTANCEDEXTPROC __glewDrawArraysInstancedEXT = NULL;\nPFNGLDRAWELEMENTSINSTANCEDEXTPROC __glewDrawElementsInstancedEXT = NULL;\n\nPFNGLDRAWRANGEELEMENTSEXTPROC __glewDrawRangeElementsEXT = NULL;\n\nPFNGLFOGCOORDPOINTEREXTPROC __glewFogCoordPointerEXT = NULL;\nPFNGLFOGCOORDDEXTPROC __glewFogCoorddEXT = NULL;\nPFNGLFOGCOORDDVEXTPROC __glewFogCoorddvEXT = NULL;\nPFNGLFOGCOORDFEXTPROC __glewFogCoordfEXT = NULL;\nPFNGLFOGCOORDFVEXTPROC __glewFogCoordfvEXT = NULL;\n\nPFNGLFRAGMENTCOLORMATERIALEXTPROC __glewFragmentColorMaterialEXT = NULL;\nPFNGLFRAGMENTLIGHTMODELFEXTPROC __glewFragmentLightModelfEXT = NULL;\nPFNGLFRAGMENTLIGHTMODELFVEXTPROC __glewFragmentLightModelfvEXT = NULL;\nPFNGLFRAGMENTLIGHTMODELIEXTPROC __glewFragmentLightModeliEXT = NULL;\nPFNGLFRAGMENTLIGHTMODELIVEXTPROC __glewFragmentLightModelivEXT = NULL;\nPFNGLFRAGMENTLIGHTFEXTPROC __glewFragmentLightfEXT = NULL;\nPFNGLFRAGMENTLIGHTFVEXTPROC __glewFragmentLightfvEXT = NULL;\nPFNGLFRAGMENTLIGHTIEXTPROC __glewFragmentLightiEXT = NULL;\nPFNGLFRAGMENTLIGHTIVEXTPROC __glewFragmentLightivEXT = NULL;\nPFNGLFRAGMENTMATERIALFEXTPROC __glewFragmentMaterialfEXT = NULL;\nPFNGLFRAGMENTMATERIALFVEXTPROC __glewFragmentMaterialfvEXT = NULL;\nPFNGLFRAGMENTMATERIALIEXTPROC __glewFragmentMaterialiEXT = NULL;\nPFNGLFRAGMENTMATERIALIVEXTPROC __glewFragmentMaterialivEXT = NULL;\nPFNGLGETFRAGMENTLIGHTFVEXTPROC __glewGetFragmentLightfvEXT = NULL;\nPFNGLGETFRAGMENTLIGHTIVEXTPROC __glewGetFragmentLightivEXT = NULL;\nPFNGLGETFRAGMENTMATERIALFVEXTPROC __glewGetFragmentMaterialfvEXT = NULL;\nPFNGLGETFRAGMENTMATERIALIVEXTPROC __glewGetFragmentMaterialivEXT = NULL;\nPFNGLLIGHTENVIEXTPROC __glewLightEnviEXT = NULL;\n\nPFNGLBLITFRAMEBUFFEREXTPROC __glewBlitFramebufferEXT = NULL;\n\nPFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC __glewRenderbufferStorageMultisampleEXT = NULL;\n\nPFNGLBINDFRAMEBUFFEREXTPROC __glewBindFramebufferEXT = NULL;\nPFNGLBINDRENDERBUFFEREXTPROC __glewBindRenderbufferEXT = NULL;\nPFNGLCHECKFRAMEBUFFERSTATUSEXTPROC __glewCheckFramebufferStatusEXT = NULL;\nPFNGLDELETEFRAMEBUFFERSEXTPROC __glewDeleteFramebuffersEXT = NULL;\nPFNGLDELETERENDERBUFFERSEXTPROC __glewDeleteRenderbuffersEXT = NULL;\nPFNGLFRAMEBUFFERRENDERBUFFEREXTPROC __glewFramebufferRenderbufferEXT = NULL;\nPFNGLFRAMEBUFFERTEXTURE1DEXTPROC __glewFramebufferTexture1DEXT = NULL;\nPFNGLFRAMEBUFFERTEXTURE2DEXTPROC __glewFramebufferTexture2DEXT = NULL;\nPFNGLFRAMEBUFFERTEXTURE3DEXTPROC __glewFramebufferTexture3DEXT = NULL;\nPFNGLGENFRAMEBUFFERSEXTPROC __glewGenFramebuffersEXT = NULL;\nPFNGLGENRENDERBUFFERSEXTPROC __glewGenRenderbuffersEXT = NULL;\nPFNGLGENERATEMIPMAPEXTPROC __glewGenerateMipmapEXT = NULL;\nPFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC __glewGetFramebufferAttachmentParameterivEXT = NULL;\nPFNGLGETRENDERBUFFERPARAMETERIVEXTPROC __glewGetRenderbufferParameterivEXT = NULL;\nPFNGLISFRAMEBUFFEREXTPROC __glewIsFramebufferEXT = NULL;\nPFNGLISRENDERBUFFEREXTPROC __glewIsRenderbufferEXT = NULL;\nPFNGLRENDERBUFFERSTORAGEEXTPROC __glewRenderbufferStorageEXT = NULL;\n\nPFNGLFRAMEBUFFERTEXTUREEXTPROC __glewFramebufferTextureEXT = NULL;\nPFNGLFRAMEBUFFERTEXTUREFACEEXTPROC __glewFramebufferTextureFaceEXT = NULL;\nPFNGLPROGRAMPARAMETERIEXTPROC __glewProgramParameteriEXT = NULL;\n\nPFNGLPROGRAMENVPARAMETERS4FVEXTPROC __glewProgramEnvParameters4fvEXT = NULL;\nPFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC __glewProgramLocalParameters4fvEXT = NULL;\n\nPFNGLBINDFRAGDATALOCATIONEXTPROC __glewBindFragDataLocationEXT = NULL;\nPFNGLGETFRAGDATALOCATIONEXTPROC __glewGetFragDataLocationEXT = NULL;\nPFNGLGETUNIFORMUIVEXTPROC __glewGetUniformuivEXT = NULL;\nPFNGLGETVERTEXATTRIBIIVEXTPROC __glewGetVertexAttribIivEXT = NULL;\nPFNGLGETVERTEXATTRIBIUIVEXTPROC __glewGetVertexAttribIuivEXT = NULL;\nPFNGLUNIFORM1UIEXTPROC __glewUniform1uiEXT = NULL;\nPFNGLUNIFORM1UIVEXTPROC __glewUniform1uivEXT = NULL;\nPFNGLUNIFORM2UIEXTPROC __glewUniform2uiEXT = NULL;\nPFNGLUNIFORM2UIVEXTPROC __glewUniform2uivEXT = NULL;\nPFNGLUNIFORM3UIEXTPROC __glewUniform3uiEXT = NULL;\nPFNGLUNIFORM3UIVEXTPROC __glewUniform3uivEXT = NULL;\nPFNGLUNIFORM4UIEXTPROC __glewUniform4uiEXT = NULL;\nPFNGLUNIFORM4UIVEXTPROC __glewUniform4uivEXT = NULL;\nPFNGLVERTEXATTRIBI1IEXTPROC __glewVertexAttribI1iEXT = NULL;\nPFNGLVERTEXATTRIBI1IVEXTPROC __glewVertexAttribI1ivEXT = NULL;\nPFNGLVERTEXATTRIBI1UIEXTPROC __glewVertexAttribI1uiEXT = NULL;\nPFNGLVERTEXATTRIBI1UIVEXTPROC __glewVertexAttribI1uivEXT = NULL;\nPFNGLVERTEXATTRIBI2IEXTPROC __glewVertexAttribI2iEXT = NULL;\nPFNGLVERTEXATTRIBI2IVEXTPROC __glewVertexAttribI2ivEXT = NULL;\nPFNGLVERTEXATTRIBI2UIEXTPROC __glewVertexAttribI2uiEXT = NULL;\nPFNGLVERTEXATTRIBI2UIVEXTPROC __glewVertexAttribI2uivEXT = NULL;\nPFNGLVERTEXATTRIBI3IEXTPROC __glewVertexAttribI3iEXT = NULL;\nPFNGLVERTEXATTRIBI3IVEXTPROC __glewVertexAttribI3ivEXT = NULL;\nPFNGLVERTEXATTRIBI3UIEXTPROC __glewVertexAttribI3uiEXT = NULL;\nPFNGLVERTEXATTRIBI3UIVEXTPROC __glewVertexAttribI3uivEXT = NULL;\nPFNGLVERTEXATTRIBI4BVEXTPROC __glewVertexAttribI4bvEXT = NULL;\nPFNGLVERTEXATTRIBI4IEXTPROC __glewVertexAttribI4iEXT = NULL;\nPFNGLVERTEXATTRIBI4IVEXTPROC __glewVertexAttribI4ivEXT = NULL;\nPFNGLVERTEXATTRIBI4SVEXTPROC __glewVertexAttribI4svEXT = NULL;\nPFNGLVERTEXATTRIBI4UBVEXTPROC __glewVertexAttribI4ubvEXT = NULL;\nPFNGLVERTEXATTRIBI4UIEXTPROC __glewVertexAttribI4uiEXT = NULL;\nPFNGLVERTEXATTRIBI4UIVEXTPROC __glewVertexAttribI4uivEXT = NULL;\nPFNGLVERTEXATTRIBI4USVEXTPROC __glewVertexAttribI4usvEXT = NULL;\nPFNGLVERTEXATTRIBIPOINTEREXTPROC __glewVertexAttribIPointerEXT = NULL;\n\nPFNGLGETHISTOGRAMEXTPROC __glewGetHistogramEXT = NULL;\nPFNGLGETHISTOGRAMPARAMETERFVEXTPROC __glewGetHistogramParameterfvEXT = NULL;\nPFNGLGETHISTOGRAMPARAMETERIVEXTPROC __glewGetHistogramParameterivEXT = NULL;\nPFNGLGETMINMAXEXTPROC __glewGetMinmaxEXT = NULL;\nPFNGLGETMINMAXPARAMETERFVEXTPROC __glewGetMinmaxParameterfvEXT = NULL;\nPFNGLGETMINMAXPARAMETERIVEXTPROC __glewGetMinmaxParameterivEXT = NULL;\nPFNGLHISTOGRAMEXTPROC __glewHistogramEXT = NULL;\nPFNGLMINMAXEXTPROC __glewMinmaxEXT = NULL;\nPFNGLRESETHISTOGRAMEXTPROC __glewResetHistogramEXT = NULL;\nPFNGLRESETMINMAXEXTPROC __glewResetMinmaxEXT = NULL;\n\nPFNGLINDEXFUNCEXTPROC __glewIndexFuncEXT = NULL;\n\nPFNGLINDEXMATERIALEXTPROC __glewIndexMaterialEXT = NULL;\n\nPFNGLAPPLYTEXTUREEXTPROC __glewApplyTextureEXT = NULL;\nPFNGLTEXTURELIGHTEXTPROC __glewTextureLightEXT = NULL;\nPFNGLTEXTUREMATERIALEXTPROC __glewTextureMaterialEXT = NULL;\n\nPFNGLMULTIDRAWARRAYSEXTPROC __glewMultiDrawArraysEXT = NULL;\nPFNGLMULTIDRAWELEMENTSEXTPROC __glewMultiDrawElementsEXT = NULL;\n\nPFNGLSAMPLEMASKEXTPROC __glewSampleMaskEXT = NULL;\nPFNGLSAMPLEPATTERNEXTPROC __glewSamplePatternEXT = NULL;\n\nPFNGLCOLORTABLEEXTPROC __glewColorTableEXT = NULL;\nPFNGLGETCOLORTABLEEXTPROC __glewGetColorTableEXT = NULL;\nPFNGLGETCOLORTABLEPARAMETERFVEXTPROC __glewGetColorTableParameterfvEXT = NULL;\nPFNGLGETCOLORTABLEPARAMETERIVEXTPROC __glewGetColorTableParameterivEXT = NULL;\n\nPFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC __glewGetPixelTransformParameterfvEXT = NULL;\nPFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC __glewGetPixelTransformParameterivEXT = NULL;\nPFNGLPIXELTRANSFORMPARAMETERFEXTPROC __glewPixelTransformParameterfEXT = NULL;\nPFNGLPIXELTRANSFORMPARAMETERFVEXTPROC __glewPixelTransformParameterfvEXT = NULL;\nPFNGLPIXELTRANSFORMPARAMETERIEXTPROC __glewPixelTransformParameteriEXT = NULL;\nPFNGLPIXELTRANSFORMPARAMETERIVEXTPROC __glewPixelTransformParameterivEXT = NULL;\n\nPFNGLPOINTPARAMETERFEXTPROC __glewPointParameterfEXT = NULL;\nPFNGLPOINTPARAMETERFVEXTPROC __glewPointParameterfvEXT = NULL;\n\nPFNGLPOLYGONOFFSETEXTPROC __glewPolygonOffsetEXT = NULL;\n\nPFNGLPOLYGONOFFSETCLAMPEXTPROC __glewPolygonOffsetClampEXT = NULL;\n\nPFNGLPROVOKINGVERTEXEXTPROC __glewProvokingVertexEXT = NULL;\n\nPFNGLCOVERAGEMODULATIONNVPROC __glewCoverageModulationNV = NULL;\nPFNGLCOVERAGEMODULATIONTABLENVPROC __glewCoverageModulationTableNV = NULL;\nPFNGLGETCOVERAGEMODULATIONTABLENVPROC __glewGetCoverageModulationTableNV = NULL;\nPFNGLRASTERSAMPLESEXTPROC __glewRasterSamplesEXT = NULL;\n\nPFNGLBEGINSCENEEXTPROC __glewBeginSceneEXT = NULL;\nPFNGLENDSCENEEXTPROC __glewEndSceneEXT = NULL;\n\nPFNGLSECONDARYCOLOR3BEXTPROC __glewSecondaryColor3bEXT = NULL;\nPFNGLSECONDARYCOLOR3BVEXTPROC __glewSecondaryColor3bvEXT = NULL;\nPFNGLSECONDARYCOLOR3DEXTPROC __glewSecondaryColor3dEXT = NULL;\nPFNGLSECONDARYCOLOR3DVEXTPROC __glewSecondaryColor3dvEXT = NULL;\nPFNGLSECONDARYCOLOR3FEXTPROC __glewSecondaryColor3fEXT = NULL;\nPFNGLSECONDARYCOLOR3FVEXTPROC __glewSecondaryColor3fvEXT = NULL;\nPFNGLSECONDARYCOLOR3IEXTPROC __glewSecondaryColor3iEXT = NULL;\nPFNGLSECONDARYCOLOR3IVEXTPROC __glewSecondaryColor3ivEXT = NULL;\nPFNGLSECONDARYCOLOR3SEXTPROC __glewSecondaryColor3sEXT = NULL;\nPFNGLSECONDARYCOLOR3SVEXTPROC __glewSecondaryColor3svEXT = NULL;\nPFNGLSECONDARYCOLOR3UBEXTPROC __glewSecondaryColor3ubEXT = NULL;\nPFNGLSECONDARYCOLOR3UBVEXTPROC __glewSecondaryColor3ubvEXT = NULL;\nPFNGLSECONDARYCOLOR3UIEXTPROC __glewSecondaryColor3uiEXT = NULL;\nPFNGLSECONDARYCOLOR3UIVEXTPROC __glewSecondaryColor3uivEXT = NULL;\nPFNGLSECONDARYCOLOR3USEXTPROC __glewSecondaryColor3usEXT = NULL;\nPFNGLSECONDARYCOLOR3USVEXTPROC __glewSecondaryColor3usvEXT = NULL;\nPFNGLSECONDARYCOLORPOINTEREXTPROC __glewSecondaryColorPointerEXT = NULL;\n\nPFNGLACTIVEPROGRAMEXTPROC __glewActiveProgramEXT = NULL;\nPFNGLCREATESHADERPROGRAMEXTPROC __glewCreateShaderProgramEXT = NULL;\nPFNGLUSESHADERPROGRAMEXTPROC __glewUseShaderProgramEXT = NULL;\n\nPFNGLBINDIMAGETEXTUREEXTPROC __glewBindImageTextureEXT = NULL;\nPFNGLMEMORYBARRIEREXTPROC __glewMemoryBarrierEXT = NULL;\n\nPFNGLACTIVESTENCILFACEEXTPROC __glewActiveStencilFaceEXT = NULL;\n\nPFNGLTEXSUBIMAGE1DEXTPROC __glewTexSubImage1DEXT = NULL;\nPFNGLTEXSUBIMAGE2DEXTPROC __glewTexSubImage2DEXT = NULL;\nPFNGLTEXSUBIMAGE3DEXTPROC __glewTexSubImage3DEXT = NULL;\n\nPFNGLTEXIMAGE3DEXTPROC __glewTexImage3DEXT = NULL;\n\nPFNGLFRAMEBUFFERTEXTURELAYEREXTPROC __glewFramebufferTextureLayerEXT = NULL;\n\nPFNGLTEXBUFFEREXTPROC __glewTexBufferEXT = NULL;\n\nPFNGLCLEARCOLORIIEXTPROC __glewClearColorIiEXT = NULL;\nPFNGLCLEARCOLORIUIEXTPROC __glewClearColorIuiEXT = NULL;\nPFNGLGETTEXPARAMETERIIVEXTPROC __glewGetTexParameterIivEXT = NULL;\nPFNGLGETTEXPARAMETERIUIVEXTPROC __glewGetTexParameterIuivEXT = NULL;\nPFNGLTEXPARAMETERIIVEXTPROC __glewTexParameterIivEXT = NULL;\nPFNGLTEXPARAMETERIUIVEXTPROC __glewTexParameterIuivEXT = NULL;\n\nPFNGLARETEXTURESRESIDENTEXTPROC __glewAreTexturesResidentEXT = NULL;\nPFNGLBINDTEXTUREEXTPROC __glewBindTextureEXT = NULL;\nPFNGLDELETETEXTURESEXTPROC __glewDeleteTexturesEXT = NULL;\nPFNGLGENTEXTURESEXTPROC __glewGenTexturesEXT = NULL;\nPFNGLISTEXTUREEXTPROC __glewIsTextureEXT = NULL;\nPFNGLPRIORITIZETEXTURESEXTPROC __glewPrioritizeTexturesEXT = NULL;\n\nPFNGLTEXTURENORMALEXTPROC __glewTextureNormalEXT = NULL;\n\nPFNGLGETQUERYOBJECTI64VEXTPROC __glewGetQueryObjecti64vEXT = NULL;\nPFNGLGETQUERYOBJECTUI64VEXTPROC __glewGetQueryObjectui64vEXT = NULL;\n\nPFNGLBEGINTRANSFORMFEEDBACKEXTPROC __glewBeginTransformFeedbackEXT = NULL;\nPFNGLBINDBUFFERBASEEXTPROC __glewBindBufferBaseEXT = NULL;\nPFNGLBINDBUFFEROFFSETEXTPROC __glewBindBufferOffsetEXT = NULL;\nPFNGLBINDBUFFERRANGEEXTPROC __glewBindBufferRangeEXT = NULL;\nPFNGLENDTRANSFORMFEEDBACKEXTPROC __glewEndTransformFeedbackEXT = NULL;\nPFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC __glewGetTransformFeedbackVaryingEXT = NULL;\nPFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC __glewTransformFeedbackVaryingsEXT = NULL;\n\nPFNGLARRAYELEMENTEXTPROC __glewArrayElementEXT = NULL;\nPFNGLCOLORPOINTEREXTPROC __glewColorPointerEXT = NULL;\nPFNGLDRAWARRAYSEXTPROC __glewDrawArraysEXT = NULL;\nPFNGLEDGEFLAGPOINTEREXTPROC __glewEdgeFlagPointerEXT = NULL;\nPFNGLINDEXPOINTEREXTPROC __glewIndexPointerEXT = NULL;\nPFNGLNORMALPOINTEREXTPROC __glewNormalPointerEXT = NULL;\nPFNGLTEXCOORDPOINTEREXTPROC __glewTexCoordPointerEXT = NULL;\nPFNGLVERTEXPOINTEREXTPROC __glewVertexPointerEXT = NULL;\n\nPFNGLGETVERTEXATTRIBLDVEXTPROC __glewGetVertexAttribLdvEXT = NULL;\nPFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC __glewVertexArrayVertexAttribLOffsetEXT = NULL;\nPFNGLVERTEXATTRIBL1DEXTPROC __glewVertexAttribL1dEXT = NULL;\nPFNGLVERTEXATTRIBL1DVEXTPROC __glewVertexAttribL1dvEXT = NULL;\nPFNGLVERTEXATTRIBL2DEXTPROC __glewVertexAttribL2dEXT = NULL;\nPFNGLVERTEXATTRIBL2DVEXTPROC __glewVertexAttribL2dvEXT = NULL;\nPFNGLVERTEXATTRIBL3DEXTPROC __glewVertexAttribL3dEXT = NULL;\nPFNGLVERTEXATTRIBL3DVEXTPROC __glewVertexAttribL3dvEXT = NULL;\nPFNGLVERTEXATTRIBL4DEXTPROC __glewVertexAttribL4dEXT = NULL;\nPFNGLVERTEXATTRIBL4DVEXTPROC __glewVertexAttribL4dvEXT = NULL;\nPFNGLVERTEXATTRIBLPOINTEREXTPROC __glewVertexAttribLPointerEXT = NULL;\n\nPFNGLBEGINVERTEXSHADEREXTPROC __glewBeginVertexShaderEXT = NULL;\nPFNGLBINDLIGHTPARAMETEREXTPROC __glewBindLightParameterEXT = NULL;\nPFNGLBINDMATERIALPARAMETEREXTPROC __glewBindMaterialParameterEXT = NULL;\nPFNGLBINDPARAMETEREXTPROC __glewBindParameterEXT = NULL;\nPFNGLBINDTEXGENPARAMETEREXTPROC __glewBindTexGenParameterEXT = NULL;\nPFNGLBINDTEXTUREUNITPARAMETEREXTPROC __glewBindTextureUnitParameterEXT = NULL;\nPFNGLBINDVERTEXSHADEREXTPROC __glewBindVertexShaderEXT = NULL;\nPFNGLDELETEVERTEXSHADEREXTPROC __glewDeleteVertexShaderEXT = NULL;\nPFNGLDISABLEVARIANTCLIENTSTATEEXTPROC __glewDisableVariantClientStateEXT = NULL;\nPFNGLENABLEVARIANTCLIENTSTATEEXTPROC __glewEnableVariantClientStateEXT = NULL;\nPFNGLENDVERTEXSHADEREXTPROC __glewEndVertexShaderEXT = NULL;\nPFNGLEXTRACTCOMPONENTEXTPROC __glewExtractComponentEXT = NULL;\nPFNGLGENSYMBOLSEXTPROC __glewGenSymbolsEXT = NULL;\nPFNGLGENVERTEXSHADERSEXTPROC __glewGenVertexShadersEXT = NULL;\nPFNGLGETINVARIANTBOOLEANVEXTPROC __glewGetInvariantBooleanvEXT = NULL;\nPFNGLGETINVARIANTFLOATVEXTPROC __glewGetInvariantFloatvEXT = NULL;\nPFNGLGETINVARIANTINTEGERVEXTPROC __glewGetInvariantIntegervEXT = NULL;\nPFNGLGETLOCALCONSTANTBOOLEANVEXTPROC __glewGetLocalConstantBooleanvEXT = NULL;\nPFNGLGETLOCALCONSTANTFLOATVEXTPROC __glewGetLocalConstantFloatvEXT = NULL;\nPFNGLGETLOCALCONSTANTINTEGERVEXTPROC __glewGetLocalConstantIntegervEXT = NULL;\nPFNGLGETVARIANTBOOLEANVEXTPROC __glewGetVariantBooleanvEXT = NULL;\nPFNGLGETVARIANTFLOATVEXTPROC __glewGetVariantFloatvEXT = NULL;\nPFNGLGETVARIANTINTEGERVEXTPROC __glewGetVariantIntegervEXT = NULL;\nPFNGLGETVARIANTPOINTERVEXTPROC __glewGetVariantPointervEXT = NULL;\nPFNGLINSERTCOMPONENTEXTPROC __glewInsertComponentEXT = NULL;\nPFNGLISVARIANTENABLEDEXTPROC __glewIsVariantEnabledEXT = NULL;\nPFNGLSETINVARIANTEXTPROC __glewSetInvariantEXT = NULL;\nPFNGLSETLOCALCONSTANTEXTPROC __glewSetLocalConstantEXT = NULL;\nPFNGLSHADEROP1EXTPROC __glewShaderOp1EXT = NULL;\nPFNGLSHADEROP2EXTPROC __glewShaderOp2EXT = NULL;\nPFNGLSHADEROP3EXTPROC __glewShaderOp3EXT = NULL;\nPFNGLSWIZZLEEXTPROC __glewSwizzleEXT = NULL;\nPFNGLVARIANTPOINTEREXTPROC __glewVariantPointerEXT = NULL;\nPFNGLVARIANTBVEXTPROC __glewVariantbvEXT = NULL;\nPFNGLVARIANTDVEXTPROC __glewVariantdvEXT = NULL;\nPFNGLVARIANTFVEXTPROC __glewVariantfvEXT = NULL;\nPFNGLVARIANTIVEXTPROC __glewVariantivEXT = NULL;\nPFNGLVARIANTSVEXTPROC __glewVariantsvEXT = NULL;\nPFNGLVARIANTUBVEXTPROC __glewVariantubvEXT = NULL;\nPFNGLVARIANTUIVEXTPROC __glewVariantuivEXT = NULL;\nPFNGLVARIANTUSVEXTPROC __glewVariantusvEXT = NULL;\nPFNGLWRITEMASKEXTPROC __glewWriteMaskEXT = NULL;\n\nPFNGLVERTEXWEIGHTPOINTEREXTPROC __glewVertexWeightPointerEXT = NULL;\nPFNGLVERTEXWEIGHTFEXTPROC __glewVertexWeightfEXT = NULL;\nPFNGLVERTEXWEIGHTFVEXTPROC __glewVertexWeightfvEXT = NULL;\n\nPFNGLWINDOWRECTANGLESEXTPROC __glewWindowRectanglesEXT = NULL;\n\nPFNGLIMPORTSYNCEXTPROC __glewImportSyncEXT = NULL;\n\nPFNGLFRAMETERMINATORGREMEDYPROC __glewFrameTerminatorGREMEDY = NULL;\n\nPFNGLSTRINGMARKERGREMEDYPROC __glewStringMarkerGREMEDY = NULL;\n\nPFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC __glewGetImageTransformParameterfvHP = NULL;\nPFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC __glewGetImageTransformParameterivHP = NULL;\nPFNGLIMAGETRANSFORMPARAMETERFHPPROC __glewImageTransformParameterfHP = NULL;\nPFNGLIMAGETRANSFORMPARAMETERFVHPPROC __glewImageTransformParameterfvHP = NULL;\nPFNGLIMAGETRANSFORMPARAMETERIHPPROC __glewImageTransformParameteriHP = NULL;\nPFNGLIMAGETRANSFORMPARAMETERIVHPPROC __glewImageTransformParameterivHP = NULL;\n\nPFNGLMULTIMODEDRAWARRAYSIBMPROC __glewMultiModeDrawArraysIBM = NULL;\nPFNGLMULTIMODEDRAWELEMENTSIBMPROC __glewMultiModeDrawElementsIBM = NULL;\n\nPFNGLCOLORPOINTERLISTIBMPROC __glewColorPointerListIBM = NULL;\nPFNGLEDGEFLAGPOINTERLISTIBMPROC __glewEdgeFlagPointerListIBM = NULL;\nPFNGLFOGCOORDPOINTERLISTIBMPROC __glewFogCoordPointerListIBM = NULL;\nPFNGLINDEXPOINTERLISTIBMPROC __glewIndexPointerListIBM = NULL;\nPFNGLNORMALPOINTERLISTIBMPROC __glewNormalPointerListIBM = NULL;\nPFNGLSECONDARYCOLORPOINTERLISTIBMPROC __glewSecondaryColorPointerListIBM = NULL;\nPFNGLTEXCOORDPOINTERLISTIBMPROC __glewTexCoordPointerListIBM = NULL;\nPFNGLVERTEXPOINTERLISTIBMPROC __glewVertexPointerListIBM = NULL;\n\nPFNGLMAPTEXTURE2DINTELPROC __glewMapTexture2DINTEL = NULL;\nPFNGLSYNCTEXTUREINTELPROC __glewSyncTextureINTEL = NULL;\nPFNGLUNMAPTEXTURE2DINTELPROC __glewUnmapTexture2DINTEL = NULL;\n\nPFNGLCOLORPOINTERVINTELPROC __glewColorPointervINTEL = NULL;\nPFNGLNORMALPOINTERVINTELPROC __glewNormalPointervINTEL = NULL;\nPFNGLTEXCOORDPOINTERVINTELPROC __glewTexCoordPointervINTEL = NULL;\nPFNGLVERTEXPOINTERVINTELPROC __glewVertexPointervINTEL = NULL;\n\nPFNGLBEGINPERFQUERYINTELPROC __glewBeginPerfQueryINTEL = NULL;\nPFNGLCREATEPERFQUERYINTELPROC __glewCreatePerfQueryINTEL = NULL;\nPFNGLDELETEPERFQUERYINTELPROC __glewDeletePerfQueryINTEL = NULL;\nPFNGLENDPERFQUERYINTELPROC __glewEndPerfQueryINTEL = NULL;\nPFNGLGETFIRSTPERFQUERYIDINTELPROC __glewGetFirstPerfQueryIdINTEL = NULL;\nPFNGLGETNEXTPERFQUERYIDINTELPROC __glewGetNextPerfQueryIdINTEL = NULL;\nPFNGLGETPERFCOUNTERINFOINTELPROC __glewGetPerfCounterInfoINTEL = NULL;\nPFNGLGETPERFQUERYDATAINTELPROC __glewGetPerfQueryDataINTEL = NULL;\nPFNGLGETPERFQUERYIDBYNAMEINTELPROC __glewGetPerfQueryIdByNameINTEL = NULL;\nPFNGLGETPERFQUERYINFOINTELPROC __glewGetPerfQueryInfoINTEL = NULL;\n\nPFNGLTEXSCISSORFUNCINTELPROC __glewTexScissorFuncINTEL = NULL;\nPFNGLTEXSCISSORINTELPROC __glewTexScissorINTEL = NULL;\n\nPFNGLBLENDBARRIERKHRPROC __glewBlendBarrierKHR = NULL;\n\nPFNGLDEBUGMESSAGECALLBACKPROC __glewDebugMessageCallback = NULL;\nPFNGLDEBUGMESSAGECONTROLPROC __glewDebugMessageControl = NULL;\nPFNGLDEBUGMESSAGEINSERTPROC __glewDebugMessageInsert = NULL;\nPFNGLGETDEBUGMESSAGELOGPROC __glewGetDebugMessageLog = NULL;\nPFNGLGETOBJECTLABELPROC __glewGetObjectLabel = NULL;\nPFNGLGETOBJECTPTRLABELPROC __glewGetObjectPtrLabel = NULL;\nPFNGLOBJECTLABELPROC __glewObjectLabel = NULL;\nPFNGLOBJECTPTRLABELPROC __glewObjectPtrLabel = NULL;\nPFNGLPOPDEBUGGROUPPROC __glewPopDebugGroup = NULL;\nPFNGLPUSHDEBUGGROUPPROC __glewPushDebugGroup = NULL;\n\nPFNGLGETNUNIFORMFVPROC __glewGetnUniformfv = NULL;\nPFNGLGETNUNIFORMIVPROC __glewGetnUniformiv = NULL;\nPFNGLGETNUNIFORMUIVPROC __glewGetnUniformuiv = NULL;\nPFNGLREADNPIXELSPROC __glewReadnPixels = NULL;\n\nPFNGLBUFFERREGIONENABLEDPROC __glewBufferRegionEnabled = NULL;\nPFNGLDELETEBUFFERREGIONPROC __glewDeleteBufferRegion = NULL;\nPFNGLDRAWBUFFERREGIONPROC __glewDrawBufferRegion = NULL;\nPFNGLNEWBUFFERREGIONPROC __glewNewBufferRegion = NULL;\nPFNGLREADBUFFERREGIONPROC __glewReadBufferRegion = NULL;\n\nPFNGLRESIZEBUFFERSMESAPROC __glewResizeBuffersMESA = NULL;\n\nPFNGLWINDOWPOS2DMESAPROC __glewWindowPos2dMESA = NULL;\nPFNGLWINDOWPOS2DVMESAPROC __glewWindowPos2dvMESA = NULL;\nPFNGLWINDOWPOS2FMESAPROC __glewWindowPos2fMESA = NULL;\nPFNGLWINDOWPOS2FVMESAPROC __glewWindowPos2fvMESA = NULL;\nPFNGLWINDOWPOS2IMESAPROC __glewWindowPos2iMESA = NULL;\nPFNGLWINDOWPOS2IVMESAPROC __glewWindowPos2ivMESA = NULL;\nPFNGLWINDOWPOS2SMESAPROC __glewWindowPos2sMESA = NULL;\nPFNGLWINDOWPOS2SVMESAPROC __glewWindowPos2svMESA = NULL;\nPFNGLWINDOWPOS3DMESAPROC __glewWindowPos3dMESA = NULL;\nPFNGLWINDOWPOS3DVMESAPROC __glewWindowPos3dvMESA = NULL;\nPFNGLWINDOWPOS3FMESAPROC __glewWindowPos3fMESA = NULL;\nPFNGLWINDOWPOS3FVMESAPROC __glewWindowPos3fvMESA = NULL;\nPFNGLWINDOWPOS3IMESAPROC __glewWindowPos3iMESA = NULL;\nPFNGLWINDOWPOS3IVMESAPROC __glewWindowPos3ivMESA = NULL;\nPFNGLWINDOWPOS3SMESAPROC __glewWindowPos3sMESA = NULL;\nPFNGLWINDOWPOS3SVMESAPROC __glewWindowPos3svMESA = NULL;\nPFNGLWINDOWPOS4DMESAPROC __glewWindowPos4dMESA = NULL;\nPFNGLWINDOWPOS4DVMESAPROC __glewWindowPos4dvMESA = NULL;\nPFNGLWINDOWPOS4FMESAPROC __glewWindowPos4fMESA = NULL;\nPFNGLWINDOWPOS4FVMESAPROC __glewWindowPos4fvMESA = NULL;\nPFNGLWINDOWPOS4IMESAPROC __glewWindowPos4iMESA = NULL;\nPFNGLWINDOWPOS4IVMESAPROC __glewWindowPos4ivMESA = NULL;\nPFNGLWINDOWPOS4SMESAPROC __glewWindowPos4sMESA = NULL;\nPFNGLWINDOWPOS4SVMESAPROC __glewWindowPos4svMESA = NULL;\n\nPFNGLBEGINCONDITIONALRENDERNVXPROC __glewBeginConditionalRenderNVX = NULL;\nPFNGLENDCONDITIONALRENDERNVXPROC __glewEndConditionalRenderNVX = NULL;\n\nPFNGLLGPUCOPYIMAGESUBDATANVXPROC __glewLGPUCopyImageSubDataNVX = NULL;\nPFNGLLGPUINTERLOCKNVXPROC __glewLGPUInterlockNVX = NULL;\nPFNGLLGPUNAMEDBUFFERSUBDATANVXPROC __glewLGPUNamedBufferSubDataNVX = NULL;\n\nPFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC __glewMultiDrawArraysIndirectBindlessNV = NULL;\nPFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC __glewMultiDrawElementsIndirectBindlessNV = NULL;\n\nPFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC __glewMultiDrawArraysIndirectBindlessCountNV = NULL;\nPFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC __glewMultiDrawElementsIndirectBindlessCountNV = NULL;\n\nPFNGLGETIMAGEHANDLENVPROC __glewGetImageHandleNV = NULL;\nPFNGLGETTEXTUREHANDLENVPROC __glewGetTextureHandleNV = NULL;\nPFNGLGETTEXTURESAMPLERHANDLENVPROC __glewGetTextureSamplerHandleNV = NULL;\nPFNGLISIMAGEHANDLERESIDENTNVPROC __glewIsImageHandleResidentNV = NULL;\nPFNGLISTEXTUREHANDLERESIDENTNVPROC __glewIsTextureHandleResidentNV = NULL;\nPFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC __glewMakeImageHandleNonResidentNV = NULL;\nPFNGLMAKEIMAGEHANDLERESIDENTNVPROC __glewMakeImageHandleResidentNV = NULL;\nPFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC __glewMakeTextureHandleNonResidentNV = NULL;\nPFNGLMAKETEXTUREHANDLERESIDENTNVPROC __glewMakeTextureHandleResidentNV = NULL;\nPFNGLPROGRAMUNIFORMHANDLEUI64NVPROC __glewProgramUniformHandleui64NV = NULL;\nPFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC __glewProgramUniformHandleui64vNV = NULL;\nPFNGLUNIFORMHANDLEUI64NVPROC __glewUniformHandleui64NV = NULL;\nPFNGLUNIFORMHANDLEUI64VNVPROC __glewUniformHandleui64vNV = NULL;\n\nPFNGLBLENDBARRIERNVPROC __glewBlendBarrierNV = NULL;\nPFNGLBLENDPARAMETERINVPROC __glewBlendParameteriNV = NULL;\n\nPFNGLVIEWPORTPOSITIONWSCALENVPROC __glewViewportPositionWScaleNV = NULL;\n\nPFNGLCALLCOMMANDLISTNVPROC __glewCallCommandListNV = NULL;\nPFNGLCOMMANDLISTSEGMENTSNVPROC __glewCommandListSegmentsNV = NULL;\nPFNGLCOMPILECOMMANDLISTNVPROC __glewCompileCommandListNV = NULL;\nPFNGLCREATECOMMANDLISTSNVPROC __glewCreateCommandListsNV = NULL;\nPFNGLCREATESTATESNVPROC __glewCreateStatesNV = NULL;\nPFNGLDELETECOMMANDLISTSNVPROC __glewDeleteCommandListsNV = NULL;\nPFNGLDELETESTATESNVPROC __glewDeleteStatesNV = NULL;\nPFNGLDRAWCOMMANDSADDRESSNVPROC __glewDrawCommandsAddressNV = NULL;\nPFNGLDRAWCOMMANDSNVPROC __glewDrawCommandsNV = NULL;\nPFNGLDRAWCOMMANDSSTATESADDRESSNVPROC __glewDrawCommandsStatesAddressNV = NULL;\nPFNGLDRAWCOMMANDSSTATESNVPROC __glewDrawCommandsStatesNV = NULL;\nPFNGLGETCOMMANDHEADERNVPROC __glewGetCommandHeaderNV = NULL;\nPFNGLGETSTAGEINDEXNVPROC __glewGetStageIndexNV = NULL;\nPFNGLISCOMMANDLISTNVPROC __glewIsCommandListNV = NULL;\nPFNGLISSTATENVPROC __glewIsStateNV = NULL;\nPFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC __glewListDrawCommandsStatesClientNV = NULL;\nPFNGLSTATECAPTURENVPROC __glewStateCaptureNV = NULL;\n\nPFNGLBEGINCONDITIONALRENDERNVPROC __glewBeginConditionalRenderNV = NULL;\nPFNGLENDCONDITIONALRENDERNVPROC __glewEndConditionalRenderNV = NULL;\n\nPFNGLSUBPIXELPRECISIONBIASNVPROC __glewSubpixelPrecisionBiasNV = NULL;\n\nPFNGLCONSERVATIVERASTERPARAMETERFNVPROC __glewConservativeRasterParameterfNV = NULL;\n\nPFNGLCONSERVATIVERASTERPARAMETERINVPROC __glewConservativeRasterParameteriNV = NULL;\n\nPFNGLCOPYIMAGESUBDATANVPROC __glewCopyImageSubDataNV = NULL;\n\nPFNGLCLEARDEPTHDNVPROC __glewClearDepthdNV = NULL;\nPFNGLDEPTHBOUNDSDNVPROC __glewDepthBoundsdNV = NULL;\nPFNGLDEPTHRANGEDNVPROC __glewDepthRangedNV = NULL;\n\nPFNGLDRAWTEXTURENVPROC __glewDrawTextureNV = NULL;\n\nPFNGLDRAWVKIMAGENVPROC __glewDrawVkImageNV = NULL;\nPFNGLGETVKPROCADDRNVPROC __glewGetVkProcAddrNV = NULL;\nPFNGLSIGNALVKFENCENVPROC __glewSignalVkFenceNV = NULL;\nPFNGLSIGNALVKSEMAPHORENVPROC __glewSignalVkSemaphoreNV = NULL;\nPFNGLWAITVKSEMAPHORENVPROC __glewWaitVkSemaphoreNV = NULL;\n\nPFNGLEVALMAPSNVPROC __glewEvalMapsNV = NULL;\nPFNGLGETMAPATTRIBPARAMETERFVNVPROC __glewGetMapAttribParameterfvNV = NULL;\nPFNGLGETMAPATTRIBPARAMETERIVNVPROC __glewGetMapAttribParameterivNV = NULL;\nPFNGLGETMAPCONTROLPOINTSNVPROC __glewGetMapControlPointsNV = NULL;\nPFNGLGETMAPPARAMETERFVNVPROC __glewGetMapParameterfvNV = NULL;\nPFNGLGETMAPPARAMETERIVNVPROC __glewGetMapParameterivNV = NULL;\nPFNGLMAPCONTROLPOINTSNVPROC __glewMapControlPointsNV = NULL;\nPFNGLMAPPARAMETERFVNVPROC __glewMapParameterfvNV = NULL;\nPFNGLMAPPARAMETERIVNVPROC __glewMapParameterivNV = NULL;\n\nPFNGLGETMULTISAMPLEFVNVPROC __glewGetMultisamplefvNV = NULL;\nPFNGLSAMPLEMASKINDEXEDNVPROC __glewSampleMaskIndexedNV = NULL;\nPFNGLTEXRENDERBUFFERNVPROC __glewTexRenderbufferNV = NULL;\n\nPFNGLDELETEFENCESNVPROC __glewDeleteFencesNV = NULL;\nPFNGLFINISHFENCENVPROC __glewFinishFenceNV = NULL;\nPFNGLGENFENCESNVPROC __glewGenFencesNV = NULL;\nPFNGLGETFENCEIVNVPROC __glewGetFenceivNV = NULL;\nPFNGLISFENCENVPROC __glewIsFenceNV = NULL;\nPFNGLSETFENCENVPROC __glewSetFenceNV = NULL;\nPFNGLTESTFENCENVPROC __glewTestFenceNV = NULL;\n\nPFNGLFRAGMENTCOVERAGECOLORNVPROC __glewFragmentCoverageColorNV = NULL;\n\nPFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC __glewGetProgramNamedParameterdvNV = NULL;\nPFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC __glewGetProgramNamedParameterfvNV = NULL;\nPFNGLPROGRAMNAMEDPARAMETER4DNVPROC __glewProgramNamedParameter4dNV = NULL;\nPFNGLPROGRAMNAMEDPARAMETER4DVNVPROC __glewProgramNamedParameter4dvNV = NULL;\nPFNGLPROGRAMNAMEDPARAMETER4FNVPROC __glewProgramNamedParameter4fNV = NULL;\nPFNGLPROGRAMNAMEDPARAMETER4FVNVPROC __glewProgramNamedParameter4fvNV = NULL;\n\nPFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC __glewRenderbufferStorageMultisampleCoverageNV = NULL;\n\nPFNGLPROGRAMVERTEXLIMITNVPROC __glewProgramVertexLimitNV = NULL;\n\nPFNGLMULTICASTBARRIERNVPROC __glewMulticastBarrierNV = NULL;\nPFNGLMULTICASTBLITFRAMEBUFFERNVPROC __glewMulticastBlitFramebufferNV = NULL;\nPFNGLMULTICASTBUFFERSUBDATANVPROC __glewMulticastBufferSubDataNV = NULL;\nPFNGLMULTICASTCOPYBUFFERSUBDATANVPROC __glewMulticastCopyBufferSubDataNV = NULL;\nPFNGLMULTICASTCOPYIMAGESUBDATANVPROC __glewMulticastCopyImageSubDataNV = NULL;\nPFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC __glewMulticastFramebufferSampleLocationsfvNV = NULL;\nPFNGLMULTICASTGETQUERYOBJECTI64VNVPROC __glewMulticastGetQueryObjecti64vNV = NULL;\nPFNGLMULTICASTGETQUERYOBJECTIVNVPROC __glewMulticastGetQueryObjectivNV = NULL;\nPFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC __glewMulticastGetQueryObjectui64vNV = NULL;\nPFNGLMULTICASTGETQUERYOBJECTUIVNVPROC __glewMulticastGetQueryObjectuivNV = NULL;\nPFNGLMULTICASTWAITSYNCNVPROC __glewMulticastWaitSyncNV = NULL;\nPFNGLRENDERGPUMASKNVPROC __glewRenderGpuMaskNV = NULL;\n\nPFNGLPROGRAMENVPARAMETERI4INVPROC __glewProgramEnvParameterI4iNV = NULL;\nPFNGLPROGRAMENVPARAMETERI4IVNVPROC __glewProgramEnvParameterI4ivNV = NULL;\nPFNGLPROGRAMENVPARAMETERI4UINVPROC __glewProgramEnvParameterI4uiNV = NULL;\nPFNGLPROGRAMENVPARAMETERI4UIVNVPROC __glewProgramEnvParameterI4uivNV = NULL;\nPFNGLPROGRAMENVPARAMETERSI4IVNVPROC __glewProgramEnvParametersI4ivNV = NULL;\nPFNGLPROGRAMENVPARAMETERSI4UIVNVPROC __glewProgramEnvParametersI4uivNV = NULL;\nPFNGLPROGRAMLOCALPARAMETERI4INVPROC __glewProgramLocalParameterI4iNV = NULL;\nPFNGLPROGRAMLOCALPARAMETERI4IVNVPROC __glewProgramLocalParameterI4ivNV = NULL;\nPFNGLPROGRAMLOCALPARAMETERI4UINVPROC __glewProgramLocalParameterI4uiNV = NULL;\nPFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC __glewProgramLocalParameterI4uivNV = NULL;\nPFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC __glewProgramLocalParametersI4ivNV = NULL;\nPFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC __glewProgramLocalParametersI4uivNV = NULL;\n\nPFNGLGETUNIFORMI64VNVPROC __glewGetUniformi64vNV = NULL;\nPFNGLGETUNIFORMUI64VNVPROC __glewGetUniformui64vNV = NULL;\nPFNGLPROGRAMUNIFORM1I64NVPROC __glewProgramUniform1i64NV = NULL;\nPFNGLPROGRAMUNIFORM1I64VNVPROC __glewProgramUniform1i64vNV = NULL;\nPFNGLPROGRAMUNIFORM1UI64NVPROC __glewProgramUniform1ui64NV = NULL;\nPFNGLPROGRAMUNIFORM1UI64VNVPROC __glewProgramUniform1ui64vNV = NULL;\nPFNGLPROGRAMUNIFORM2I64NVPROC __glewProgramUniform2i64NV = NULL;\nPFNGLPROGRAMUNIFORM2I64VNVPROC __glewProgramUniform2i64vNV = NULL;\nPFNGLPROGRAMUNIFORM2UI64NVPROC __glewProgramUniform2ui64NV = NULL;\nPFNGLPROGRAMUNIFORM2UI64VNVPROC __glewProgramUniform2ui64vNV = NULL;\nPFNGLPROGRAMUNIFORM3I64NVPROC __glewProgramUniform3i64NV = NULL;\nPFNGLPROGRAMUNIFORM3I64VNVPROC __glewProgramUniform3i64vNV = NULL;\nPFNGLPROGRAMUNIFORM3UI64NVPROC __glewProgramUniform3ui64NV = NULL;\nPFNGLPROGRAMUNIFORM3UI64VNVPROC __glewProgramUniform3ui64vNV = NULL;\nPFNGLPROGRAMUNIFORM4I64NVPROC __glewProgramUniform4i64NV = NULL;\nPFNGLPROGRAMUNIFORM4I64VNVPROC __glewProgramUniform4i64vNV = NULL;\nPFNGLPROGRAMUNIFORM4UI64NVPROC __glewProgramUniform4ui64NV = NULL;\nPFNGLPROGRAMUNIFORM4UI64VNVPROC __glewProgramUniform4ui64vNV = NULL;\nPFNGLUNIFORM1I64NVPROC __glewUniform1i64NV = NULL;\nPFNGLUNIFORM1I64VNVPROC __glewUniform1i64vNV = NULL;\nPFNGLUNIFORM1UI64NVPROC __glewUniform1ui64NV = NULL;\nPFNGLUNIFORM1UI64VNVPROC __glewUniform1ui64vNV = NULL;\nPFNGLUNIFORM2I64NVPROC __glewUniform2i64NV = NULL;\nPFNGLUNIFORM2I64VNVPROC __glewUniform2i64vNV = NULL;\nPFNGLUNIFORM2UI64NVPROC __glewUniform2ui64NV = NULL;\nPFNGLUNIFORM2UI64VNVPROC __glewUniform2ui64vNV = NULL;\nPFNGLUNIFORM3I64NVPROC __glewUniform3i64NV = NULL;\nPFNGLUNIFORM3I64VNVPROC __glewUniform3i64vNV = NULL;\nPFNGLUNIFORM3UI64NVPROC __glewUniform3ui64NV = NULL;\nPFNGLUNIFORM3UI64VNVPROC __glewUniform3ui64vNV = NULL;\nPFNGLUNIFORM4I64NVPROC __glewUniform4i64NV = NULL;\nPFNGLUNIFORM4I64VNVPROC __glewUniform4i64vNV = NULL;\nPFNGLUNIFORM4UI64NVPROC __glewUniform4ui64NV = NULL;\nPFNGLUNIFORM4UI64VNVPROC __glewUniform4ui64vNV = NULL;\n\nPFNGLCOLOR3HNVPROC __glewColor3hNV = NULL;\nPFNGLCOLOR3HVNVPROC __glewColor3hvNV = NULL;\nPFNGLCOLOR4HNVPROC __glewColor4hNV = NULL;\nPFNGLCOLOR4HVNVPROC __glewColor4hvNV = NULL;\nPFNGLFOGCOORDHNVPROC __glewFogCoordhNV = NULL;\nPFNGLFOGCOORDHVNVPROC __glewFogCoordhvNV = NULL;\nPFNGLMULTITEXCOORD1HNVPROC __glewMultiTexCoord1hNV = NULL;\nPFNGLMULTITEXCOORD1HVNVPROC __glewMultiTexCoord1hvNV = NULL;\nPFNGLMULTITEXCOORD2HNVPROC __glewMultiTexCoord2hNV = NULL;\nPFNGLMULTITEXCOORD2HVNVPROC __glewMultiTexCoord2hvNV = NULL;\nPFNGLMULTITEXCOORD3HNVPROC __glewMultiTexCoord3hNV = NULL;\nPFNGLMULTITEXCOORD3HVNVPROC __glewMultiTexCoord3hvNV = NULL;\nPFNGLMULTITEXCOORD4HNVPROC __glewMultiTexCoord4hNV = NULL;\nPFNGLMULTITEXCOORD4HVNVPROC __glewMultiTexCoord4hvNV = NULL;\nPFNGLNORMAL3HNVPROC __glewNormal3hNV = NULL;\nPFNGLNORMAL3HVNVPROC __glewNormal3hvNV = NULL;\nPFNGLSECONDARYCOLOR3HNVPROC __glewSecondaryColor3hNV = NULL;\nPFNGLSECONDARYCOLOR3HVNVPROC __glewSecondaryColor3hvNV = NULL;\nPFNGLTEXCOORD1HNVPROC __glewTexCoord1hNV = NULL;\nPFNGLTEXCOORD1HVNVPROC __glewTexCoord1hvNV = NULL;\nPFNGLTEXCOORD2HNVPROC __glewTexCoord2hNV = NULL;\nPFNGLTEXCOORD2HVNVPROC __glewTexCoord2hvNV = NULL;\nPFNGLTEXCOORD3HNVPROC __glewTexCoord3hNV = NULL;\nPFNGLTEXCOORD3HVNVPROC __glewTexCoord3hvNV = NULL;\nPFNGLTEXCOORD4HNVPROC __glewTexCoord4hNV = NULL;\nPFNGLTEXCOORD4HVNVPROC __glewTexCoord4hvNV = NULL;\nPFNGLVERTEX2HNVPROC __glewVertex2hNV = NULL;\nPFNGLVERTEX2HVNVPROC __glewVertex2hvNV = NULL;\nPFNGLVERTEX3HNVPROC __glewVertex3hNV = NULL;\nPFNGLVERTEX3HVNVPROC __glewVertex3hvNV = NULL;\nPFNGLVERTEX4HNVPROC __glewVertex4hNV = NULL;\nPFNGLVERTEX4HVNVPROC __glewVertex4hvNV = NULL;\nPFNGLVERTEXATTRIB1HNVPROC __glewVertexAttrib1hNV = NULL;\nPFNGLVERTEXATTRIB1HVNVPROC __glewVertexAttrib1hvNV = NULL;\nPFNGLVERTEXATTRIB2HNVPROC __glewVertexAttrib2hNV = NULL;\nPFNGLVERTEXATTRIB2HVNVPROC __glewVertexAttrib2hvNV = NULL;\nPFNGLVERTEXATTRIB3HNVPROC __glewVertexAttrib3hNV = NULL;\nPFNGLVERTEXATTRIB3HVNVPROC __glewVertexAttrib3hvNV = NULL;\nPFNGLVERTEXATTRIB4HNVPROC __glewVertexAttrib4hNV = NULL;\nPFNGLVERTEXATTRIB4HVNVPROC __glewVertexAttrib4hvNV = NULL;\nPFNGLVERTEXATTRIBS1HVNVPROC __glewVertexAttribs1hvNV = NULL;\nPFNGLVERTEXATTRIBS2HVNVPROC __glewVertexAttribs2hvNV = NULL;\nPFNGLVERTEXATTRIBS3HVNVPROC __glewVertexAttribs3hvNV = NULL;\nPFNGLVERTEXATTRIBS4HVNVPROC __glewVertexAttribs4hvNV = NULL;\nPFNGLVERTEXWEIGHTHNVPROC __glewVertexWeighthNV = NULL;\nPFNGLVERTEXWEIGHTHVNVPROC __glewVertexWeighthvNV = NULL;\n\nPFNGLGETINTERNALFORMATSAMPLEIVNVPROC __glewGetInternalformatSampleivNV = NULL;\n\nPFNGLBEGINOCCLUSIONQUERYNVPROC __glewBeginOcclusionQueryNV = NULL;\nPFNGLDELETEOCCLUSIONQUERIESNVPROC __glewDeleteOcclusionQueriesNV = NULL;\nPFNGLENDOCCLUSIONQUERYNVPROC __glewEndOcclusionQueryNV = NULL;\nPFNGLGENOCCLUSIONQUERIESNVPROC __glewGenOcclusionQueriesNV = NULL;\nPFNGLGETOCCLUSIONQUERYIVNVPROC __glewGetOcclusionQueryivNV = NULL;\nPFNGLGETOCCLUSIONQUERYUIVNVPROC __glewGetOcclusionQueryuivNV = NULL;\nPFNGLISOCCLUSIONQUERYNVPROC __glewIsOcclusionQueryNV = NULL;\n\nPFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC __glewProgramBufferParametersIivNV = NULL;\nPFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC __glewProgramBufferParametersIuivNV = NULL;\nPFNGLPROGRAMBUFFERPARAMETERSFVNVPROC __glewProgramBufferParametersfvNV = NULL;\n\nPFNGLCOPYPATHNVPROC __glewCopyPathNV = NULL;\nPFNGLCOVERFILLPATHINSTANCEDNVPROC __glewCoverFillPathInstancedNV = NULL;\nPFNGLCOVERFILLPATHNVPROC __glewCoverFillPathNV = NULL;\nPFNGLCOVERSTROKEPATHINSTANCEDNVPROC __glewCoverStrokePathInstancedNV = NULL;\nPFNGLCOVERSTROKEPATHNVPROC __glewCoverStrokePathNV = NULL;\nPFNGLDELETEPATHSNVPROC __glewDeletePathsNV = NULL;\nPFNGLGENPATHSNVPROC __glewGenPathsNV = NULL;\nPFNGLGETPATHCOLORGENFVNVPROC __glewGetPathColorGenfvNV = NULL;\nPFNGLGETPATHCOLORGENIVNVPROC __glewGetPathColorGenivNV = NULL;\nPFNGLGETPATHCOMMANDSNVPROC __glewGetPathCommandsNV = NULL;\nPFNGLGETPATHCOORDSNVPROC __glewGetPathCoordsNV = NULL;\nPFNGLGETPATHDASHARRAYNVPROC __glewGetPathDashArrayNV = NULL;\nPFNGLGETPATHLENGTHNVPROC __glewGetPathLengthNV = NULL;\nPFNGLGETPATHMETRICRANGENVPROC __glewGetPathMetricRangeNV = NULL;\nPFNGLGETPATHMETRICSNVPROC __glewGetPathMetricsNV = NULL;\nPFNGLGETPATHPARAMETERFVNVPROC __glewGetPathParameterfvNV = NULL;\nPFNGLGETPATHPARAMETERIVNVPROC __glewGetPathParameterivNV = NULL;\nPFNGLGETPATHSPACINGNVPROC __glewGetPathSpacingNV = NULL;\nPFNGLGETPATHTEXGENFVNVPROC __glewGetPathTexGenfvNV = NULL;\nPFNGLGETPATHTEXGENIVNVPROC __glewGetPathTexGenivNV = NULL;\nPFNGLGETPROGRAMRESOURCEFVNVPROC __glewGetProgramResourcefvNV = NULL;\nPFNGLINTERPOLATEPATHSNVPROC __glewInterpolatePathsNV = NULL;\nPFNGLISPATHNVPROC __glewIsPathNV = NULL;\nPFNGLISPOINTINFILLPATHNVPROC __glewIsPointInFillPathNV = NULL;\nPFNGLISPOINTINSTROKEPATHNVPROC __glewIsPointInStrokePathNV = NULL;\nPFNGLMATRIXLOAD3X2FNVPROC __glewMatrixLoad3x2fNV = NULL;\nPFNGLMATRIXLOAD3X3FNVPROC __glewMatrixLoad3x3fNV = NULL;\nPFNGLMATRIXLOADTRANSPOSE3X3FNVPROC __glewMatrixLoadTranspose3x3fNV = NULL;\nPFNGLMATRIXMULT3X2FNVPROC __glewMatrixMult3x2fNV = NULL;\nPFNGLMATRIXMULT3X3FNVPROC __glewMatrixMult3x3fNV = NULL;\nPFNGLMATRIXMULTTRANSPOSE3X3FNVPROC __glewMatrixMultTranspose3x3fNV = NULL;\nPFNGLPATHCOLORGENNVPROC __glewPathColorGenNV = NULL;\nPFNGLPATHCOMMANDSNVPROC __glewPathCommandsNV = NULL;\nPFNGLPATHCOORDSNVPROC __glewPathCoordsNV = NULL;\nPFNGLPATHCOVERDEPTHFUNCNVPROC __glewPathCoverDepthFuncNV = NULL;\nPFNGLPATHDASHARRAYNVPROC __glewPathDashArrayNV = NULL;\nPFNGLPATHFOGGENNVPROC __glewPathFogGenNV = NULL;\nPFNGLPATHGLYPHINDEXARRAYNVPROC __glewPathGlyphIndexArrayNV = NULL;\nPFNGLPATHGLYPHINDEXRANGENVPROC __glewPathGlyphIndexRangeNV = NULL;\nPFNGLPATHGLYPHRANGENVPROC __glewPathGlyphRangeNV = NULL;\nPFNGLPATHGLYPHSNVPROC __glewPathGlyphsNV = NULL;\nPFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC __glewPathMemoryGlyphIndexArrayNV = NULL;\nPFNGLPATHPARAMETERFNVPROC __glewPathParameterfNV = NULL;\nPFNGLPATHPARAMETERFVNVPROC __glewPathParameterfvNV = NULL;\nPFNGLPATHPARAMETERINVPROC __glewPathParameteriNV = NULL;\nPFNGLPATHPARAMETERIVNVPROC __glewPathParameterivNV = NULL;\nPFNGLPATHSTENCILDEPTHOFFSETNVPROC __glewPathStencilDepthOffsetNV = NULL;\nPFNGLPATHSTENCILFUNCNVPROC __glewPathStencilFuncNV = NULL;\nPFNGLPATHSTRINGNVPROC __glewPathStringNV = NULL;\nPFNGLPATHSUBCOMMANDSNVPROC __glewPathSubCommandsNV = NULL;\nPFNGLPATHSUBCOORDSNVPROC __glewPathSubCoordsNV = NULL;\nPFNGLPATHTEXGENNVPROC __glewPathTexGenNV = NULL;\nPFNGLPOINTALONGPATHNVPROC __glewPointAlongPathNV = NULL;\nPFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC __glewProgramPathFragmentInputGenNV = NULL;\nPFNGLSTENCILFILLPATHINSTANCEDNVPROC __glewStencilFillPathInstancedNV = NULL;\nPFNGLSTENCILFILLPATHNVPROC __glewStencilFillPathNV = NULL;\nPFNGLSTENCILSTROKEPATHINSTANCEDNVPROC __glewStencilStrokePathInstancedNV = NULL;\nPFNGLSTENCILSTROKEPATHNVPROC __glewStencilStrokePathNV = NULL;\nPFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC __glewStencilThenCoverFillPathInstancedNV = NULL;\nPFNGLSTENCILTHENCOVERFILLPATHNVPROC __glewStencilThenCoverFillPathNV = NULL;\nPFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC __glewStencilThenCoverStrokePathInstancedNV = NULL;\nPFNGLSTENCILTHENCOVERSTROKEPATHNVPROC __glewStencilThenCoverStrokePathNV = NULL;\nPFNGLTRANSFORMPATHNVPROC __glewTransformPathNV = NULL;\nPFNGLWEIGHTPATHSNVPROC __glewWeightPathsNV = NULL;\n\nPFNGLFLUSHPIXELDATARANGENVPROC __glewFlushPixelDataRangeNV = NULL;\nPFNGLPIXELDATARANGENVPROC __glewPixelDataRangeNV = NULL;\n\nPFNGLPOINTPARAMETERINVPROC __glewPointParameteriNV = NULL;\nPFNGLPOINTPARAMETERIVNVPROC __glewPointParameterivNV = NULL;\n\nPFNGLGETVIDEOI64VNVPROC __glewGetVideoi64vNV = NULL;\nPFNGLGETVIDEOIVNVPROC __glewGetVideoivNV = NULL;\nPFNGLGETVIDEOUI64VNVPROC __glewGetVideoui64vNV = NULL;\nPFNGLGETVIDEOUIVNVPROC __glewGetVideouivNV = NULL;\nPFNGLPRESENTFRAMEDUALFILLNVPROC __glewPresentFrameDualFillNV = NULL;\nPFNGLPRESENTFRAMEKEYEDNVPROC __glewPresentFrameKeyedNV = NULL;\n\nPFNGLPRIMITIVERESTARTINDEXNVPROC __glewPrimitiveRestartIndexNV = NULL;\nPFNGLPRIMITIVERESTARTNVPROC __glewPrimitiveRestartNV = NULL;\n\nPFNGLCOMBINERINPUTNVPROC __glewCombinerInputNV = NULL;\nPFNGLCOMBINEROUTPUTNVPROC __glewCombinerOutputNV = NULL;\nPFNGLCOMBINERPARAMETERFNVPROC __glewCombinerParameterfNV = NULL;\nPFNGLCOMBINERPARAMETERFVNVPROC __glewCombinerParameterfvNV = NULL;\nPFNGLCOMBINERPARAMETERINVPROC __glewCombinerParameteriNV = NULL;\nPFNGLCOMBINERPARAMETERIVNVPROC __glewCombinerParameterivNV = NULL;\nPFNGLFINALCOMBINERINPUTNVPROC __glewFinalCombinerInputNV = NULL;\nPFNGLGETCOMBINERINPUTPARAMETERFVNVPROC __glewGetCombinerInputParameterfvNV = NULL;\nPFNGLGETCOMBINERINPUTPARAMETERIVNVPROC __glewGetCombinerInputParameterivNV = NULL;\nPFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC __glewGetCombinerOutputParameterfvNV = NULL;\nPFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC __glewGetCombinerOutputParameterivNV = NULL;\nPFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC __glewGetFinalCombinerInputParameterfvNV = NULL;\nPFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC __glewGetFinalCombinerInputParameterivNV = NULL;\n\nPFNGLCOMBINERSTAGEPARAMETERFVNVPROC __glewCombinerStageParameterfvNV = NULL;\nPFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC __glewGetCombinerStageParameterfvNV = NULL;\n\nPFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC __glewFramebufferSampleLocationsfvNV = NULL;\nPFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC __glewNamedFramebufferSampleLocationsfvNV = NULL;\n\nPFNGLGETBUFFERPARAMETERUI64VNVPROC __glewGetBufferParameterui64vNV = NULL;\nPFNGLGETINTEGERUI64VNVPROC __glewGetIntegerui64vNV = NULL;\nPFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC __glewGetNamedBufferParameterui64vNV = NULL;\nPFNGLISBUFFERRESIDENTNVPROC __glewIsBufferResidentNV = NULL;\nPFNGLISNAMEDBUFFERRESIDENTNVPROC __glewIsNamedBufferResidentNV = NULL;\nPFNGLMAKEBUFFERNONRESIDENTNVPROC __glewMakeBufferNonResidentNV = NULL;\nPFNGLMAKEBUFFERRESIDENTNVPROC __glewMakeBufferResidentNV = NULL;\nPFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC __glewMakeNamedBufferNonResidentNV = NULL;\nPFNGLMAKENAMEDBUFFERRESIDENTNVPROC __glewMakeNamedBufferResidentNV = NULL;\nPFNGLPROGRAMUNIFORMUI64NVPROC __glewProgramUniformui64NV = NULL;\nPFNGLPROGRAMUNIFORMUI64VNVPROC __glewProgramUniformui64vNV = NULL;\nPFNGLUNIFORMUI64NVPROC __glewUniformui64NV = NULL;\nPFNGLUNIFORMUI64VNVPROC __glewUniformui64vNV = NULL;\n\nPFNGLTEXTUREBARRIERNVPROC __glewTextureBarrierNV = NULL;\n\nPFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC __glewTexImage2DMultisampleCoverageNV = NULL;\nPFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC __glewTexImage3DMultisampleCoverageNV = NULL;\nPFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC __glewTextureImage2DMultisampleCoverageNV = NULL;\nPFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC __glewTextureImage2DMultisampleNV = NULL;\nPFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC __glewTextureImage3DMultisampleCoverageNV = NULL;\nPFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC __glewTextureImage3DMultisampleNV = NULL;\n\nPFNGLACTIVEVARYINGNVPROC __glewActiveVaryingNV = NULL;\nPFNGLBEGINTRANSFORMFEEDBACKNVPROC __glewBeginTransformFeedbackNV = NULL;\nPFNGLBINDBUFFERBASENVPROC __glewBindBufferBaseNV = NULL;\nPFNGLBINDBUFFEROFFSETNVPROC __glewBindBufferOffsetNV = NULL;\nPFNGLBINDBUFFERRANGENVPROC __glewBindBufferRangeNV = NULL;\nPFNGLENDTRANSFORMFEEDBACKNVPROC __glewEndTransformFeedbackNV = NULL;\nPFNGLGETACTIVEVARYINGNVPROC __glewGetActiveVaryingNV = NULL;\nPFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC __glewGetTransformFeedbackVaryingNV = NULL;\nPFNGLGETVARYINGLOCATIONNVPROC __glewGetVaryingLocationNV = NULL;\nPFNGLTRANSFORMFEEDBACKATTRIBSNVPROC __glewTransformFeedbackAttribsNV = NULL;\nPFNGLTRANSFORMFEEDBACKVARYINGSNVPROC __glewTransformFeedbackVaryingsNV = NULL;\n\nPFNGLBINDTRANSFORMFEEDBACKNVPROC __glewBindTransformFeedbackNV = NULL;\nPFNGLDELETETRANSFORMFEEDBACKSNVPROC __glewDeleteTransformFeedbacksNV = NULL;\nPFNGLDRAWTRANSFORMFEEDBACKNVPROC __glewDrawTransformFeedbackNV = NULL;\nPFNGLGENTRANSFORMFEEDBACKSNVPROC __glewGenTransformFeedbacksNV = NULL;\nPFNGLISTRANSFORMFEEDBACKNVPROC __glewIsTransformFeedbackNV = NULL;\nPFNGLPAUSETRANSFORMFEEDBACKNVPROC __glewPauseTransformFeedbackNV = NULL;\nPFNGLRESUMETRANSFORMFEEDBACKNVPROC __glewResumeTransformFeedbackNV = NULL;\n\nPFNGLVDPAUFININVPROC __glewVDPAUFiniNV = NULL;\nPFNGLVDPAUGETSURFACEIVNVPROC __glewVDPAUGetSurfaceivNV = NULL;\nPFNGLVDPAUINITNVPROC __glewVDPAUInitNV = NULL;\nPFNGLVDPAUISSURFACENVPROC __glewVDPAUIsSurfaceNV = NULL;\nPFNGLVDPAUMAPSURFACESNVPROC __glewVDPAUMapSurfacesNV = NULL;\nPFNGLVDPAUREGISTEROUTPUTSURFACENVPROC __glewVDPAURegisterOutputSurfaceNV = NULL;\nPFNGLVDPAUREGISTERVIDEOSURFACENVPROC __glewVDPAURegisterVideoSurfaceNV = NULL;\nPFNGLVDPAUSURFACEACCESSNVPROC __glewVDPAUSurfaceAccessNV = NULL;\nPFNGLVDPAUUNMAPSURFACESNVPROC __glewVDPAUUnmapSurfacesNV = NULL;\nPFNGLVDPAUUNREGISTERSURFACENVPROC __glewVDPAUUnregisterSurfaceNV = NULL;\n\nPFNGLFLUSHVERTEXARRAYRANGENVPROC __glewFlushVertexArrayRangeNV = NULL;\nPFNGLVERTEXARRAYRANGENVPROC __glewVertexArrayRangeNV = NULL;\n\nPFNGLGETVERTEXATTRIBLI64VNVPROC __glewGetVertexAttribLi64vNV = NULL;\nPFNGLGETVERTEXATTRIBLUI64VNVPROC __glewGetVertexAttribLui64vNV = NULL;\nPFNGLVERTEXATTRIBL1I64NVPROC __glewVertexAttribL1i64NV = NULL;\nPFNGLVERTEXATTRIBL1I64VNVPROC __glewVertexAttribL1i64vNV = NULL;\nPFNGLVERTEXATTRIBL1UI64NVPROC __glewVertexAttribL1ui64NV = NULL;\nPFNGLVERTEXATTRIBL1UI64VNVPROC __glewVertexAttribL1ui64vNV = NULL;\nPFNGLVERTEXATTRIBL2I64NVPROC __glewVertexAttribL2i64NV = NULL;\nPFNGLVERTEXATTRIBL2I64VNVPROC __glewVertexAttribL2i64vNV = NULL;\nPFNGLVERTEXATTRIBL2UI64NVPROC __glewVertexAttribL2ui64NV = NULL;\nPFNGLVERTEXATTRIBL2UI64VNVPROC __glewVertexAttribL2ui64vNV = NULL;\nPFNGLVERTEXATTRIBL3I64NVPROC __glewVertexAttribL3i64NV = NULL;\nPFNGLVERTEXATTRIBL3I64VNVPROC __glewVertexAttribL3i64vNV = NULL;\nPFNGLVERTEXATTRIBL3UI64NVPROC __glewVertexAttribL3ui64NV = NULL;\nPFNGLVERTEXATTRIBL3UI64VNVPROC __glewVertexAttribL3ui64vNV = NULL;\nPFNGLVERTEXATTRIBL4I64NVPROC __glewVertexAttribL4i64NV = NULL;\nPFNGLVERTEXATTRIBL4I64VNVPROC __glewVertexAttribL4i64vNV = NULL;\nPFNGLVERTEXATTRIBL4UI64NVPROC __glewVertexAttribL4ui64NV = NULL;\nPFNGLVERTEXATTRIBL4UI64VNVPROC __glewVertexAttribL4ui64vNV = NULL;\nPFNGLVERTEXATTRIBLFORMATNVPROC __glewVertexAttribLFormatNV = NULL;\n\nPFNGLBUFFERADDRESSRANGENVPROC __glewBufferAddressRangeNV = NULL;\nPFNGLCOLORFORMATNVPROC __glewColorFormatNV = NULL;\nPFNGLEDGEFLAGFORMATNVPROC __glewEdgeFlagFormatNV = NULL;\nPFNGLFOGCOORDFORMATNVPROC __glewFogCoordFormatNV = NULL;\nPFNGLGETINTEGERUI64I_VNVPROC __glewGetIntegerui64i_vNV = NULL;\nPFNGLINDEXFORMATNVPROC __glewIndexFormatNV = NULL;\nPFNGLNORMALFORMATNVPROC __glewNormalFormatNV = NULL;\nPFNGLSECONDARYCOLORFORMATNVPROC __glewSecondaryColorFormatNV = NULL;\nPFNGLTEXCOORDFORMATNVPROC __glewTexCoordFormatNV = NULL;\nPFNGLVERTEXATTRIBFORMATNVPROC __glewVertexAttribFormatNV = NULL;\nPFNGLVERTEXATTRIBIFORMATNVPROC __glewVertexAttribIFormatNV = NULL;\nPFNGLVERTEXFORMATNVPROC __glewVertexFormatNV = NULL;\n\nPFNGLAREPROGRAMSRESIDENTNVPROC __glewAreProgramsResidentNV = NULL;\nPFNGLBINDPROGRAMNVPROC __glewBindProgramNV = NULL;\nPFNGLDELETEPROGRAMSNVPROC __glewDeleteProgramsNV = NULL;\nPFNGLEXECUTEPROGRAMNVPROC __glewExecuteProgramNV = NULL;\nPFNGLGENPROGRAMSNVPROC __glewGenProgramsNV = NULL;\nPFNGLGETPROGRAMPARAMETERDVNVPROC __glewGetProgramParameterdvNV = NULL;\nPFNGLGETPROGRAMPARAMETERFVNVPROC __glewGetProgramParameterfvNV = NULL;\nPFNGLGETPROGRAMSTRINGNVPROC __glewGetProgramStringNV = NULL;\nPFNGLGETPROGRAMIVNVPROC __glewGetProgramivNV = NULL;\nPFNGLGETTRACKMATRIXIVNVPROC __glewGetTrackMatrixivNV = NULL;\nPFNGLGETVERTEXATTRIBPOINTERVNVPROC __glewGetVertexAttribPointervNV = NULL;\nPFNGLGETVERTEXATTRIBDVNVPROC __glewGetVertexAttribdvNV = NULL;\nPFNGLGETVERTEXATTRIBFVNVPROC __glewGetVertexAttribfvNV = NULL;\nPFNGLGETVERTEXATTRIBIVNVPROC __glewGetVertexAttribivNV = NULL;\nPFNGLISPROGRAMNVPROC __glewIsProgramNV = NULL;\nPFNGLLOADPROGRAMNVPROC __glewLoadProgramNV = NULL;\nPFNGLPROGRAMPARAMETER4DNVPROC __glewProgramParameter4dNV = NULL;\nPFNGLPROGRAMPARAMETER4DVNVPROC __glewProgramParameter4dvNV = NULL;\nPFNGLPROGRAMPARAMETER4FNVPROC __glewProgramParameter4fNV = NULL;\nPFNGLPROGRAMPARAMETER4FVNVPROC __glewProgramParameter4fvNV = NULL;\nPFNGLPROGRAMPARAMETERS4DVNVPROC __glewProgramParameters4dvNV = NULL;\nPFNGLPROGRAMPARAMETERS4FVNVPROC __glewProgramParameters4fvNV = NULL;\nPFNGLREQUESTRESIDENTPROGRAMSNVPROC __glewRequestResidentProgramsNV = NULL;\nPFNGLTRACKMATRIXNVPROC __glewTrackMatrixNV = NULL;\nPFNGLVERTEXATTRIB1DNVPROC __glewVertexAttrib1dNV = NULL;\nPFNGLVERTEXATTRIB1DVNVPROC __glewVertexAttrib1dvNV = NULL;\nPFNGLVERTEXATTRIB1FNVPROC __glewVertexAttrib1fNV = NULL;\nPFNGLVERTEXATTRIB1FVNVPROC __glewVertexAttrib1fvNV = NULL;\nPFNGLVERTEXATTRIB1SNVPROC __glewVertexAttrib1sNV = NULL;\nPFNGLVERTEXATTRIB1SVNVPROC __glewVertexAttrib1svNV = NULL;\nPFNGLVERTEXATTRIB2DNVPROC __glewVertexAttrib2dNV = NULL;\nPFNGLVERTEXATTRIB2DVNVPROC __glewVertexAttrib2dvNV = NULL;\nPFNGLVERTEXATTRIB2FNVPROC __glewVertexAttrib2fNV = NULL;\nPFNGLVERTEXATTRIB2FVNVPROC __glewVertexAttrib2fvNV = NULL;\nPFNGLVERTEXATTRIB2SNVPROC __glewVertexAttrib2sNV = NULL;\nPFNGLVERTEXATTRIB2SVNVPROC __glewVertexAttrib2svNV = NULL;\nPFNGLVERTEXATTRIB3DNVPROC __glewVertexAttrib3dNV = NULL;\nPFNGLVERTEXATTRIB3DVNVPROC __glewVertexAttrib3dvNV = NULL;\nPFNGLVERTEXATTRIB3FNVPROC __glewVertexAttrib3fNV = NULL;\nPFNGLVERTEXATTRIB3FVNVPROC __glewVertexAttrib3fvNV = NULL;\nPFNGLVERTEXATTRIB3SNVPROC __glewVertexAttrib3sNV = NULL;\nPFNGLVERTEXATTRIB3SVNVPROC __glewVertexAttrib3svNV = NULL;\nPFNGLVERTEXATTRIB4DNVPROC __glewVertexAttrib4dNV = NULL;\nPFNGLVERTEXATTRIB4DVNVPROC __glewVertexAttrib4dvNV = NULL;\nPFNGLVERTEXATTRIB4FNVPROC __glewVertexAttrib4fNV = NULL;\nPFNGLVERTEXATTRIB4FVNVPROC __glewVertexAttrib4fvNV = NULL;\nPFNGLVERTEXATTRIB4SNVPROC __glewVertexAttrib4sNV = NULL;\nPFNGLVERTEXATTRIB4SVNVPROC __glewVertexAttrib4svNV = NULL;\nPFNGLVERTEXATTRIB4UBNVPROC __glewVertexAttrib4ubNV = NULL;\nPFNGLVERTEXATTRIB4UBVNVPROC __glewVertexAttrib4ubvNV = NULL;\nPFNGLVERTEXATTRIBPOINTERNVPROC __glewVertexAttribPointerNV = NULL;\nPFNGLVERTEXATTRIBS1DVNVPROC __glewVertexAttribs1dvNV = NULL;\nPFNGLVERTEXATTRIBS1FVNVPROC __glewVertexAttribs1fvNV = NULL;\nPFNGLVERTEXATTRIBS1SVNVPROC __glewVertexAttribs1svNV = NULL;\nPFNGLVERTEXATTRIBS2DVNVPROC __glewVertexAttribs2dvNV = NULL;\nPFNGLVERTEXATTRIBS2FVNVPROC __glewVertexAttribs2fvNV = NULL;\nPFNGLVERTEXATTRIBS2SVNVPROC __glewVertexAttribs2svNV = NULL;\nPFNGLVERTEXATTRIBS3DVNVPROC __glewVertexAttribs3dvNV = NULL;\nPFNGLVERTEXATTRIBS3FVNVPROC __glewVertexAttribs3fvNV = NULL;\nPFNGLVERTEXATTRIBS3SVNVPROC __glewVertexAttribs3svNV = NULL;\nPFNGLVERTEXATTRIBS4DVNVPROC __glewVertexAttribs4dvNV = NULL;\nPFNGLVERTEXATTRIBS4FVNVPROC __glewVertexAttribs4fvNV = NULL;\nPFNGLVERTEXATTRIBS4SVNVPROC __glewVertexAttribs4svNV = NULL;\nPFNGLVERTEXATTRIBS4UBVNVPROC __glewVertexAttribs4ubvNV = NULL;\n\nPFNGLBEGINVIDEOCAPTURENVPROC __glewBeginVideoCaptureNV = NULL;\nPFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC __glewBindVideoCaptureStreamBufferNV = NULL;\nPFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC __glewBindVideoCaptureStreamTextureNV = NULL;\nPFNGLENDVIDEOCAPTURENVPROC __glewEndVideoCaptureNV = NULL;\nPFNGLGETVIDEOCAPTURESTREAMDVNVPROC __glewGetVideoCaptureStreamdvNV = NULL;\nPFNGLGETVIDEOCAPTURESTREAMFVNVPROC __glewGetVideoCaptureStreamfvNV = NULL;\nPFNGLGETVIDEOCAPTURESTREAMIVNVPROC __glewGetVideoCaptureStreamivNV = NULL;\nPFNGLGETVIDEOCAPTUREIVNVPROC __glewGetVideoCaptureivNV = NULL;\nPFNGLVIDEOCAPTURENVPROC __glewVideoCaptureNV = NULL;\nPFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC __glewVideoCaptureStreamParameterdvNV = NULL;\nPFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC __glewVideoCaptureStreamParameterfvNV = NULL;\nPFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC __glewVideoCaptureStreamParameterivNV = NULL;\n\nPFNGLVIEWPORTSWIZZLENVPROC __glewViewportSwizzleNV = NULL;\n\nPFNGLCLEARDEPTHFOESPROC __glewClearDepthfOES = NULL;\nPFNGLCLIPPLANEFOESPROC __glewClipPlanefOES = NULL;\nPFNGLDEPTHRANGEFOESPROC __glewDepthRangefOES = NULL;\nPFNGLFRUSTUMFOESPROC __glewFrustumfOES = NULL;\nPFNGLGETCLIPPLANEFOESPROC __glewGetClipPlanefOES = NULL;\nPFNGLORTHOFOESPROC __glewOrthofOES = NULL;\n\nPFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC __glewFramebufferTextureMultiviewOVR = NULL;\n\nPFNGLALPHAFUNCXPROC __glewAlphaFuncx = NULL;\nPFNGLCLEARCOLORXPROC __glewClearColorx = NULL;\nPFNGLCLEARDEPTHXPROC __glewClearDepthx = NULL;\nPFNGLCOLOR4XPROC __glewColor4x = NULL;\nPFNGLDEPTHRANGEXPROC __glewDepthRangex = NULL;\nPFNGLFOGXPROC __glewFogx = NULL;\nPFNGLFOGXVPROC __glewFogxv = NULL;\nPFNGLFRUSTUMFPROC __glewFrustumf = NULL;\nPFNGLFRUSTUMXPROC __glewFrustumx = NULL;\nPFNGLLIGHTMODELXPROC __glewLightModelx = NULL;\nPFNGLLIGHTMODELXVPROC __glewLightModelxv = NULL;\nPFNGLLIGHTXPROC __glewLightx = NULL;\nPFNGLLIGHTXVPROC __glewLightxv = NULL;\nPFNGLLINEWIDTHXPROC __glewLineWidthx = NULL;\nPFNGLLOADMATRIXXPROC __glewLoadMatrixx = NULL;\nPFNGLMATERIALXPROC __glewMaterialx = NULL;\nPFNGLMATERIALXVPROC __glewMaterialxv = NULL;\nPFNGLMULTMATRIXXPROC __glewMultMatrixx = NULL;\nPFNGLMULTITEXCOORD4XPROC __glewMultiTexCoord4x = NULL;\nPFNGLNORMAL3XPROC __glewNormal3x = NULL;\nPFNGLORTHOFPROC __glewOrthof = NULL;\nPFNGLORTHOXPROC __glewOrthox = NULL;\nPFNGLPOINTSIZEXPROC __glewPointSizex = NULL;\nPFNGLPOLYGONOFFSETXPROC __glewPolygonOffsetx = NULL;\nPFNGLROTATEXPROC __glewRotatex = NULL;\nPFNGLSAMPLECOVERAGEXPROC __glewSampleCoveragex = NULL;\nPFNGLSCALEXPROC __glewScalex = NULL;\nPFNGLTEXENVXPROC __glewTexEnvx = NULL;\nPFNGLTEXENVXVPROC __glewTexEnvxv = NULL;\nPFNGLTEXPARAMETERXPROC __glewTexParameterx = NULL;\nPFNGLTRANSLATEXPROC __glewTranslatex = NULL;\n\nPFNGLCLIPPLANEFPROC __glewClipPlanef = NULL;\nPFNGLCLIPPLANEXPROC __glewClipPlanex = NULL;\nPFNGLGETCLIPPLANEFPROC __glewGetClipPlanef = NULL;\nPFNGLGETCLIPPLANEXPROC __glewGetClipPlanex = NULL;\nPFNGLGETFIXEDVPROC __glewGetFixedv = NULL;\nPFNGLGETLIGHTXVPROC __glewGetLightxv = NULL;\nPFNGLGETMATERIALXVPROC __glewGetMaterialxv = NULL;\nPFNGLGETTEXENVXVPROC __glewGetTexEnvxv = NULL;\nPFNGLGETTEXPARAMETERXVPROC __glewGetTexParameterxv = NULL;\nPFNGLPOINTPARAMETERXPROC __glewPointParameterx = NULL;\nPFNGLPOINTPARAMETERXVPROC __glewPointParameterxv = NULL;\nPFNGLPOINTSIZEPOINTEROESPROC __glewPointSizePointerOES = NULL;\nPFNGLTEXPARAMETERXVPROC __glewTexParameterxv = NULL;\n\nPFNGLERRORSTRINGREGALPROC __glewErrorStringREGAL = NULL;\n\nPFNGLGETEXTENSIONREGALPROC __glewGetExtensionREGAL = NULL;\nPFNGLISSUPPORTEDREGALPROC __glewIsSupportedREGAL = NULL;\n\nPFNGLLOGMESSAGECALLBACKREGALPROC __glewLogMessageCallbackREGAL = NULL;\n\nPFNGLGETPROCADDRESSREGALPROC __glewGetProcAddressREGAL = NULL;\n\nPFNGLDETAILTEXFUNCSGISPROC __glewDetailTexFuncSGIS = NULL;\nPFNGLGETDETAILTEXFUNCSGISPROC __glewGetDetailTexFuncSGIS = NULL;\n\nPFNGLFOGFUNCSGISPROC __glewFogFuncSGIS = NULL;\nPFNGLGETFOGFUNCSGISPROC __glewGetFogFuncSGIS = NULL;\n\nPFNGLSAMPLEMASKSGISPROC __glewSampleMaskSGIS = NULL;\nPFNGLSAMPLEPATTERNSGISPROC __glewSamplePatternSGIS = NULL;\n\nPFNGLGETSHARPENTEXFUNCSGISPROC __glewGetSharpenTexFuncSGIS = NULL;\nPFNGLSHARPENTEXFUNCSGISPROC __glewSharpenTexFuncSGIS = NULL;\n\nPFNGLTEXIMAGE4DSGISPROC __glewTexImage4DSGIS = NULL;\nPFNGLTEXSUBIMAGE4DSGISPROC __glewTexSubImage4DSGIS = NULL;\n\nPFNGLGETTEXFILTERFUNCSGISPROC __glewGetTexFilterFuncSGIS = NULL;\nPFNGLTEXFILTERFUNCSGISPROC __glewTexFilterFuncSGIS = NULL;\n\nPFNGLASYNCMARKERSGIXPROC __glewAsyncMarkerSGIX = NULL;\nPFNGLDELETEASYNCMARKERSSGIXPROC __glewDeleteAsyncMarkersSGIX = NULL;\nPFNGLFINISHASYNCSGIXPROC __glewFinishAsyncSGIX = NULL;\nPFNGLGENASYNCMARKERSSGIXPROC __glewGenAsyncMarkersSGIX = NULL;\nPFNGLISASYNCMARKERSGIXPROC __glewIsAsyncMarkerSGIX = NULL;\nPFNGLPOLLASYNCSGIXPROC __glewPollAsyncSGIX = NULL;\n\nPFNGLFLUSHRASTERSGIXPROC __glewFlushRasterSGIX = NULL;\n\nPFNGLTEXTUREFOGSGIXPROC __glewTextureFogSGIX = NULL;\n\nPFNGLFRAGMENTCOLORMATERIALSGIXPROC __glewFragmentColorMaterialSGIX = NULL;\nPFNGLFRAGMENTLIGHTMODELFSGIXPROC __glewFragmentLightModelfSGIX = NULL;\nPFNGLFRAGMENTLIGHTMODELFVSGIXPROC __glewFragmentLightModelfvSGIX = NULL;\nPFNGLFRAGMENTLIGHTMODELISGIXPROC __glewFragmentLightModeliSGIX = NULL;\nPFNGLFRAGMENTLIGHTMODELIVSGIXPROC __glewFragmentLightModelivSGIX = NULL;\nPFNGLFRAGMENTLIGHTFSGIXPROC __glewFragmentLightfSGIX = NULL;\nPFNGLFRAGMENTLIGHTFVSGIXPROC __glewFragmentLightfvSGIX = NULL;\nPFNGLFRAGMENTLIGHTISGIXPROC __glewFragmentLightiSGIX = NULL;\nPFNGLFRAGMENTLIGHTIVSGIXPROC __glewFragmentLightivSGIX = NULL;\nPFNGLFRAGMENTMATERIALFSGIXPROC __glewFragmentMaterialfSGIX = NULL;\nPFNGLFRAGMENTMATERIALFVSGIXPROC __glewFragmentMaterialfvSGIX = NULL;\nPFNGLFRAGMENTMATERIALISGIXPROC __glewFragmentMaterialiSGIX = NULL;\nPFNGLFRAGMENTMATERIALIVSGIXPROC __glewFragmentMaterialivSGIX = NULL;\nPFNGLGETFRAGMENTLIGHTFVSGIXPROC __glewGetFragmentLightfvSGIX = NULL;\nPFNGLGETFRAGMENTLIGHTIVSGIXPROC __glewGetFragmentLightivSGIX = NULL;\nPFNGLGETFRAGMENTMATERIALFVSGIXPROC __glewGetFragmentMaterialfvSGIX = NULL;\nPFNGLGETFRAGMENTMATERIALIVSGIXPROC __glewGetFragmentMaterialivSGIX = NULL;\n\nPFNGLFRAMEZOOMSGIXPROC __glewFrameZoomSGIX = NULL;\n\nPFNGLPIXELTEXGENSGIXPROC __glewPixelTexGenSGIX = NULL;\n\nPFNGLREFERENCEPLANESGIXPROC __glewReferencePlaneSGIX = NULL;\n\nPFNGLSPRITEPARAMETERFSGIXPROC __glewSpriteParameterfSGIX = NULL;\nPFNGLSPRITEPARAMETERFVSGIXPROC __glewSpriteParameterfvSGIX = NULL;\nPFNGLSPRITEPARAMETERISGIXPROC __glewSpriteParameteriSGIX = NULL;\nPFNGLSPRITEPARAMETERIVSGIXPROC __glewSpriteParameterivSGIX = NULL;\n\nPFNGLTAGSAMPLEBUFFERSGIXPROC __glewTagSampleBufferSGIX = NULL;\n\nPFNGLCOLORTABLEPARAMETERFVSGIPROC __glewColorTableParameterfvSGI = NULL;\nPFNGLCOLORTABLEPARAMETERIVSGIPROC __glewColorTableParameterivSGI = NULL;\nPFNGLCOLORTABLESGIPROC __glewColorTableSGI = NULL;\nPFNGLCOPYCOLORTABLESGIPROC __glewCopyColorTableSGI = NULL;\nPFNGLGETCOLORTABLEPARAMETERFVSGIPROC __glewGetColorTableParameterfvSGI = NULL;\nPFNGLGETCOLORTABLEPARAMETERIVSGIPROC __glewGetColorTableParameterivSGI = NULL;\nPFNGLGETCOLORTABLESGIPROC __glewGetColorTableSGI = NULL;\n\nPFNGLFINISHTEXTURESUNXPROC __glewFinishTextureSUNX = NULL;\n\nPFNGLGLOBALALPHAFACTORBSUNPROC __glewGlobalAlphaFactorbSUN = NULL;\nPFNGLGLOBALALPHAFACTORDSUNPROC __glewGlobalAlphaFactordSUN = NULL;\nPFNGLGLOBALALPHAFACTORFSUNPROC __glewGlobalAlphaFactorfSUN = NULL;\nPFNGLGLOBALALPHAFACTORISUNPROC __glewGlobalAlphaFactoriSUN = NULL;\nPFNGLGLOBALALPHAFACTORSSUNPROC __glewGlobalAlphaFactorsSUN = NULL;\nPFNGLGLOBALALPHAFACTORUBSUNPROC __glewGlobalAlphaFactorubSUN = NULL;\nPFNGLGLOBALALPHAFACTORUISUNPROC __glewGlobalAlphaFactoruiSUN = NULL;\nPFNGLGLOBALALPHAFACTORUSSUNPROC __glewGlobalAlphaFactorusSUN = NULL;\n\nPFNGLREADVIDEOPIXELSSUNPROC __glewReadVideoPixelsSUN = NULL;\n\nPFNGLREPLACEMENTCODEPOINTERSUNPROC __glewReplacementCodePointerSUN = NULL;\nPFNGLREPLACEMENTCODEUBSUNPROC __glewReplacementCodeubSUN = NULL;\nPFNGLREPLACEMENTCODEUBVSUNPROC __glewReplacementCodeubvSUN = NULL;\nPFNGLREPLACEMENTCODEUISUNPROC __glewReplacementCodeuiSUN = NULL;\nPFNGLREPLACEMENTCODEUIVSUNPROC __glewReplacementCodeuivSUN = NULL;\nPFNGLREPLACEMENTCODEUSSUNPROC __glewReplacementCodeusSUN = NULL;\nPFNGLREPLACEMENTCODEUSVSUNPROC __glewReplacementCodeusvSUN = NULL;\n\nPFNGLCOLOR3FVERTEX3FSUNPROC __glewColor3fVertex3fSUN = NULL;\nPFNGLCOLOR3FVERTEX3FVSUNPROC __glewColor3fVertex3fvSUN = NULL;\nPFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC __glewColor4fNormal3fVertex3fSUN = NULL;\nPFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC __glewColor4fNormal3fVertex3fvSUN = NULL;\nPFNGLCOLOR4UBVERTEX2FSUNPROC __glewColor4ubVertex2fSUN = NULL;\nPFNGLCOLOR4UBVERTEX2FVSUNPROC __glewColor4ubVertex2fvSUN = NULL;\nPFNGLCOLOR4UBVERTEX3FSUNPROC __glewColor4ubVertex3fSUN = NULL;\nPFNGLCOLOR4UBVERTEX3FVSUNPROC __glewColor4ubVertex3fvSUN = NULL;\nPFNGLNORMAL3FVERTEX3FSUNPROC __glewNormal3fVertex3fSUN = NULL;\nPFNGLNORMAL3FVERTEX3FVSUNPROC __glewNormal3fVertex3fvSUN = NULL;\nPFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC __glewReplacementCodeuiColor3fVertex3fSUN = NULL;\nPFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC __glewReplacementCodeuiColor3fVertex3fvSUN = NULL;\nPFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC __glewReplacementCodeuiColor4fNormal3fVertex3fSUN = NULL;\nPFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC __glewReplacementCodeuiColor4fNormal3fVertex3fvSUN = NULL;\nPFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC __glewReplacementCodeuiColor4ubVertex3fSUN = NULL;\nPFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC __glewReplacementCodeuiColor4ubVertex3fvSUN = NULL;\nPFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC __glewReplacementCodeuiNormal3fVertex3fSUN = NULL;\nPFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC __glewReplacementCodeuiNormal3fVertex3fvSUN = NULL;\nPFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC __glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = NULL;\nPFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC __glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = NULL;\nPFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC __glewReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = NULL;\nPFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC __glewReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = NULL;\nPFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC __glewReplacementCodeuiTexCoord2fVertex3fSUN = NULL;\nPFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC __glewReplacementCodeuiTexCoord2fVertex3fvSUN = NULL;\nPFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC __glewReplacementCodeuiVertex3fSUN = NULL;\nPFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC __glewReplacementCodeuiVertex3fvSUN = NULL;\nPFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC __glewTexCoord2fColor3fVertex3fSUN = NULL;\nPFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC __glewTexCoord2fColor3fVertex3fvSUN = NULL;\nPFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC __glewTexCoord2fColor4fNormal3fVertex3fSUN = NULL;\nPFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC __glewTexCoord2fColor4fNormal3fVertex3fvSUN = NULL;\nPFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC __glewTexCoord2fColor4ubVertex3fSUN = NULL;\nPFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC __glewTexCoord2fColor4ubVertex3fvSUN = NULL;\nPFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC __glewTexCoord2fNormal3fVertex3fSUN = NULL;\nPFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC __glewTexCoord2fNormal3fVertex3fvSUN = NULL;\nPFNGLTEXCOORD2FVERTEX3FSUNPROC __glewTexCoord2fVertex3fSUN = NULL;\nPFNGLTEXCOORD2FVERTEX3FVSUNPROC __glewTexCoord2fVertex3fvSUN = NULL;\nPFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC __glewTexCoord4fColor4fNormal3fVertex4fSUN = NULL;\nPFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC __glewTexCoord4fColor4fNormal3fVertex4fvSUN = NULL;\nPFNGLTEXCOORD4FVERTEX4FSUNPROC __glewTexCoord4fVertex4fSUN = NULL;\nPFNGLTEXCOORD4FVERTEX4FVSUNPROC __glewTexCoord4fVertex4fvSUN = NULL;\n\nPFNGLADDSWAPHINTRECTWINPROC __glewAddSwapHintRectWIN = NULL;\n\nGLboolean __GLEW_VERSION_1_1 = GL_FALSE;\nGLboolean __GLEW_VERSION_1_2 = GL_FALSE;\nGLboolean __GLEW_VERSION_1_2_1 = GL_FALSE;\nGLboolean __GLEW_VERSION_1_3 = GL_FALSE;\nGLboolean __GLEW_VERSION_1_4 = GL_FALSE;\nGLboolean __GLEW_VERSION_1_5 = GL_FALSE;\nGLboolean __GLEW_VERSION_2_0 = GL_FALSE;\nGLboolean __GLEW_VERSION_2_1 = GL_FALSE;\nGLboolean __GLEW_VERSION_3_0 = GL_FALSE;\nGLboolean __GLEW_VERSION_3_1 = GL_FALSE;\nGLboolean __GLEW_VERSION_3_2 = GL_FALSE;\nGLboolean __GLEW_VERSION_3_3 = GL_FALSE;\nGLboolean __GLEW_VERSION_4_0 = GL_FALSE;\nGLboolean __GLEW_VERSION_4_1 = GL_FALSE;\nGLboolean __GLEW_VERSION_4_2 = GL_FALSE;\nGLboolean __GLEW_VERSION_4_3 = GL_FALSE;\nGLboolean __GLEW_VERSION_4_4 = GL_FALSE;\nGLboolean __GLEW_VERSION_4_5 = GL_FALSE;\nGLboolean __GLEW_3DFX_multisample = GL_FALSE;\nGLboolean __GLEW_3DFX_tbuffer = GL_FALSE;\nGLboolean __GLEW_3DFX_texture_compression_FXT1 = GL_FALSE;\nGLboolean __GLEW_AMD_blend_minmax_factor = GL_FALSE;\nGLboolean __GLEW_AMD_conservative_depth = GL_FALSE;\nGLboolean __GLEW_AMD_debug_output = GL_FALSE;\nGLboolean __GLEW_AMD_depth_clamp_separate = GL_FALSE;\nGLboolean __GLEW_AMD_draw_buffers_blend = GL_FALSE;\nGLboolean __GLEW_AMD_gcn_shader = GL_FALSE;\nGLboolean __GLEW_AMD_gpu_shader_int64 = GL_FALSE;\nGLboolean __GLEW_AMD_interleaved_elements = GL_FALSE;\nGLboolean __GLEW_AMD_multi_draw_indirect = GL_FALSE;\nGLboolean __GLEW_AMD_name_gen_delete = GL_FALSE;\nGLboolean __GLEW_AMD_occlusion_query_event = GL_FALSE;\nGLboolean __GLEW_AMD_performance_monitor = GL_FALSE;\nGLboolean __GLEW_AMD_pinned_memory = GL_FALSE;\nGLboolean __GLEW_AMD_query_buffer_object = GL_FALSE;\nGLboolean __GLEW_AMD_sample_positions = GL_FALSE;\nGLboolean __GLEW_AMD_seamless_cubemap_per_texture = GL_FALSE;\nGLboolean __GLEW_AMD_shader_atomic_counter_ops = GL_FALSE;\nGLboolean __GLEW_AMD_shader_explicit_vertex_parameter = GL_FALSE;\nGLboolean __GLEW_AMD_shader_stencil_export = GL_FALSE;\nGLboolean __GLEW_AMD_shader_stencil_value_export = GL_FALSE;\nGLboolean __GLEW_AMD_shader_trinary_minmax = GL_FALSE;\nGLboolean __GLEW_AMD_sparse_texture = GL_FALSE;\nGLboolean __GLEW_AMD_stencil_operation_extended = GL_FALSE;\nGLboolean __GLEW_AMD_texture_texture4 = GL_FALSE;\nGLboolean __GLEW_AMD_transform_feedback3_lines_triangles = GL_FALSE;\nGLboolean __GLEW_AMD_transform_feedback4 = GL_FALSE;\nGLboolean __GLEW_AMD_vertex_shader_layer = GL_FALSE;\nGLboolean __GLEW_AMD_vertex_shader_tessellator = GL_FALSE;\nGLboolean __GLEW_AMD_vertex_shader_viewport_index = GL_FALSE;\nGLboolean __GLEW_ANGLE_depth_texture = GL_FALSE;\nGLboolean __GLEW_ANGLE_framebuffer_blit = GL_FALSE;\nGLboolean __GLEW_ANGLE_framebuffer_multisample = GL_FALSE;\nGLboolean __GLEW_ANGLE_instanced_arrays = GL_FALSE;\nGLboolean __GLEW_ANGLE_pack_reverse_row_order = GL_FALSE;\nGLboolean __GLEW_ANGLE_program_binary = GL_FALSE;\nGLboolean __GLEW_ANGLE_texture_compression_dxt1 = GL_FALSE;\nGLboolean __GLEW_ANGLE_texture_compression_dxt3 = GL_FALSE;\nGLboolean __GLEW_ANGLE_texture_compression_dxt5 = GL_FALSE;\nGLboolean __GLEW_ANGLE_texture_usage = GL_FALSE;\nGLboolean __GLEW_ANGLE_timer_query = GL_FALSE;\nGLboolean __GLEW_ANGLE_translated_shader_source = GL_FALSE;\nGLboolean __GLEW_APPLE_aux_depth_stencil = GL_FALSE;\nGLboolean __GLEW_APPLE_client_storage = GL_FALSE;\nGLboolean __GLEW_APPLE_element_array = GL_FALSE;\nGLboolean __GLEW_APPLE_fence = GL_FALSE;\nGLboolean __GLEW_APPLE_float_pixels = GL_FALSE;\nGLboolean __GLEW_APPLE_flush_buffer_range = GL_FALSE;\nGLboolean __GLEW_APPLE_object_purgeable = GL_FALSE;\nGLboolean __GLEW_APPLE_pixel_buffer = GL_FALSE;\nGLboolean __GLEW_APPLE_rgb_422 = GL_FALSE;\nGLboolean __GLEW_APPLE_row_bytes = GL_FALSE;\nGLboolean __GLEW_APPLE_specular_vector = GL_FALSE;\nGLboolean __GLEW_APPLE_texture_range = GL_FALSE;\nGLboolean __GLEW_APPLE_transform_hint = GL_FALSE;\nGLboolean __GLEW_APPLE_vertex_array_object = GL_FALSE;\nGLboolean __GLEW_APPLE_vertex_array_range = GL_FALSE;\nGLboolean __GLEW_APPLE_vertex_program_evaluators = GL_FALSE;\nGLboolean __GLEW_APPLE_ycbcr_422 = GL_FALSE;\nGLboolean __GLEW_ARB_ES2_compatibility = GL_FALSE;\nGLboolean __GLEW_ARB_ES3_1_compatibility = GL_FALSE;\nGLboolean __GLEW_ARB_ES3_2_compatibility = GL_FALSE;\nGLboolean __GLEW_ARB_ES3_compatibility = GL_FALSE;\nGLboolean __GLEW_ARB_arrays_of_arrays = GL_FALSE;\nGLboolean __GLEW_ARB_base_instance = GL_FALSE;\nGLboolean __GLEW_ARB_bindless_texture = GL_FALSE;\nGLboolean __GLEW_ARB_blend_func_extended = GL_FALSE;\nGLboolean __GLEW_ARB_buffer_storage = GL_FALSE;\nGLboolean __GLEW_ARB_cl_event = GL_FALSE;\nGLboolean __GLEW_ARB_clear_buffer_object = GL_FALSE;\nGLboolean __GLEW_ARB_clear_texture = GL_FALSE;\nGLboolean __GLEW_ARB_clip_control = GL_FALSE;\nGLboolean __GLEW_ARB_color_buffer_float = GL_FALSE;\nGLboolean __GLEW_ARB_compatibility = GL_FALSE;\nGLboolean __GLEW_ARB_compressed_texture_pixel_storage = GL_FALSE;\nGLboolean __GLEW_ARB_compute_shader = GL_FALSE;\nGLboolean __GLEW_ARB_compute_variable_group_size = GL_FALSE;\nGLboolean __GLEW_ARB_conditional_render_inverted = GL_FALSE;\nGLboolean __GLEW_ARB_conservative_depth = GL_FALSE;\nGLboolean __GLEW_ARB_copy_buffer = GL_FALSE;\nGLboolean __GLEW_ARB_copy_image = GL_FALSE;\nGLboolean __GLEW_ARB_cull_distance = GL_FALSE;\nGLboolean __GLEW_ARB_debug_output = GL_FALSE;\nGLboolean __GLEW_ARB_depth_buffer_float = GL_FALSE;\nGLboolean __GLEW_ARB_depth_clamp = GL_FALSE;\nGLboolean __GLEW_ARB_depth_texture = GL_FALSE;\nGLboolean __GLEW_ARB_derivative_control = GL_FALSE;\nGLboolean __GLEW_ARB_direct_state_access = GL_FALSE;\nGLboolean __GLEW_ARB_draw_buffers = GL_FALSE;\nGLboolean __GLEW_ARB_draw_buffers_blend = GL_FALSE;\nGLboolean __GLEW_ARB_draw_elements_base_vertex = GL_FALSE;\nGLboolean __GLEW_ARB_draw_indirect = GL_FALSE;\nGLboolean __GLEW_ARB_draw_instanced = GL_FALSE;\nGLboolean __GLEW_ARB_enhanced_layouts = GL_FALSE;\nGLboolean __GLEW_ARB_explicit_attrib_location = GL_FALSE;\nGLboolean __GLEW_ARB_explicit_uniform_location = GL_FALSE;\nGLboolean __GLEW_ARB_fragment_coord_conventions = GL_FALSE;\nGLboolean __GLEW_ARB_fragment_layer_viewport = GL_FALSE;\nGLboolean __GLEW_ARB_fragment_program = GL_FALSE;\nGLboolean __GLEW_ARB_fragment_program_shadow = GL_FALSE;\nGLboolean __GLEW_ARB_fragment_shader = GL_FALSE;\nGLboolean __GLEW_ARB_fragment_shader_interlock = GL_FALSE;\nGLboolean __GLEW_ARB_framebuffer_no_attachments = GL_FALSE;\nGLboolean __GLEW_ARB_framebuffer_object = GL_FALSE;\nGLboolean __GLEW_ARB_framebuffer_sRGB = GL_FALSE;\nGLboolean __GLEW_ARB_geometry_shader4 = GL_FALSE;\nGLboolean __GLEW_ARB_get_program_binary = GL_FALSE;\nGLboolean __GLEW_ARB_get_texture_sub_image = GL_FALSE;\nGLboolean __GLEW_ARB_gl_spirv = GL_FALSE;\nGLboolean __GLEW_ARB_gpu_shader5 = GL_FALSE;\nGLboolean __GLEW_ARB_gpu_shader_fp64 = GL_FALSE;\nGLboolean __GLEW_ARB_gpu_shader_int64 = GL_FALSE;\nGLboolean __GLEW_ARB_half_float_pixel = GL_FALSE;\nGLboolean __GLEW_ARB_half_float_vertex = GL_FALSE;\nGLboolean __GLEW_ARB_imaging = GL_FALSE;\nGLboolean __GLEW_ARB_indirect_parameters = GL_FALSE;\nGLboolean __GLEW_ARB_instanced_arrays = GL_FALSE;\nGLboolean __GLEW_ARB_internalformat_query = GL_FALSE;\nGLboolean __GLEW_ARB_internalformat_query2 = GL_FALSE;\nGLboolean __GLEW_ARB_invalidate_subdata = GL_FALSE;\nGLboolean __GLEW_ARB_map_buffer_alignment = GL_FALSE;\nGLboolean __GLEW_ARB_map_buffer_range = GL_FALSE;\nGLboolean __GLEW_ARB_matrix_palette = GL_FALSE;\nGLboolean __GLEW_ARB_multi_bind = GL_FALSE;\nGLboolean __GLEW_ARB_multi_draw_indirect = GL_FALSE;\nGLboolean __GLEW_ARB_multisample = GL_FALSE;\nGLboolean __GLEW_ARB_multitexture = GL_FALSE;\nGLboolean __GLEW_ARB_occlusion_query = GL_FALSE;\nGLboolean __GLEW_ARB_occlusion_query2 = GL_FALSE;\nGLboolean __GLEW_ARB_parallel_shader_compile = GL_FALSE;\nGLboolean __GLEW_ARB_pipeline_statistics_query = GL_FALSE;\nGLboolean __GLEW_ARB_pixel_buffer_object = GL_FALSE;\nGLboolean __GLEW_ARB_point_parameters = GL_FALSE;\nGLboolean __GLEW_ARB_point_sprite = GL_FALSE;\nGLboolean __GLEW_ARB_post_depth_coverage = GL_FALSE;\nGLboolean __GLEW_ARB_program_interface_query = GL_FALSE;\nGLboolean __GLEW_ARB_provoking_vertex = GL_FALSE;\nGLboolean __GLEW_ARB_query_buffer_object = GL_FALSE;\nGLboolean __GLEW_ARB_robust_buffer_access_behavior = GL_FALSE;\nGLboolean __GLEW_ARB_robustness = GL_FALSE;\nGLboolean __GLEW_ARB_robustness_application_isolation = GL_FALSE;\nGLboolean __GLEW_ARB_robustness_share_group_isolation = GL_FALSE;\nGLboolean __GLEW_ARB_sample_locations = GL_FALSE;\nGLboolean __GLEW_ARB_sample_shading = GL_FALSE;\nGLboolean __GLEW_ARB_sampler_objects = GL_FALSE;\nGLboolean __GLEW_ARB_seamless_cube_map = GL_FALSE;\nGLboolean __GLEW_ARB_seamless_cubemap_per_texture = GL_FALSE;\nGLboolean __GLEW_ARB_separate_shader_objects = GL_FALSE;\nGLboolean __GLEW_ARB_shader_atomic_counter_ops = GL_FALSE;\nGLboolean __GLEW_ARB_shader_atomic_counters = GL_FALSE;\nGLboolean __GLEW_ARB_shader_ballot = GL_FALSE;\nGLboolean __GLEW_ARB_shader_bit_encoding = GL_FALSE;\nGLboolean __GLEW_ARB_shader_clock = GL_FALSE;\nGLboolean __GLEW_ARB_shader_draw_parameters = GL_FALSE;\nGLboolean __GLEW_ARB_shader_group_vote = GL_FALSE;\nGLboolean __GLEW_ARB_shader_image_load_store = GL_FALSE;\nGLboolean __GLEW_ARB_shader_image_size = GL_FALSE;\nGLboolean __GLEW_ARB_shader_objects = GL_FALSE;\nGLboolean __GLEW_ARB_shader_precision = GL_FALSE;\nGLboolean __GLEW_ARB_shader_stencil_export = GL_FALSE;\nGLboolean __GLEW_ARB_shader_storage_buffer_object = GL_FALSE;\nGLboolean __GLEW_ARB_shader_subroutine = GL_FALSE;\nGLboolean __GLEW_ARB_shader_texture_image_samples = GL_FALSE;\nGLboolean __GLEW_ARB_shader_texture_lod = GL_FALSE;\nGLboolean __GLEW_ARB_shader_viewport_layer_array = GL_FALSE;\nGLboolean __GLEW_ARB_shading_language_100 = GL_FALSE;\nGLboolean __GLEW_ARB_shading_language_420pack = GL_FALSE;\nGLboolean __GLEW_ARB_shading_language_include = GL_FALSE;\nGLboolean __GLEW_ARB_shading_language_packing = GL_FALSE;\nGLboolean __GLEW_ARB_shadow = GL_FALSE;\nGLboolean __GLEW_ARB_shadow_ambient = GL_FALSE;\nGLboolean __GLEW_ARB_sparse_buffer = GL_FALSE;\nGLboolean __GLEW_ARB_sparse_texture = GL_FALSE;\nGLboolean __GLEW_ARB_sparse_texture2 = GL_FALSE;\nGLboolean __GLEW_ARB_sparse_texture_clamp = GL_FALSE;\nGLboolean __GLEW_ARB_stencil_texturing = GL_FALSE;\nGLboolean __GLEW_ARB_sync = GL_FALSE;\nGLboolean __GLEW_ARB_tessellation_shader = GL_FALSE;\nGLboolean __GLEW_ARB_texture_barrier = GL_FALSE;\nGLboolean __GLEW_ARB_texture_border_clamp = GL_FALSE;\nGLboolean __GLEW_ARB_texture_buffer_object = GL_FALSE;\nGLboolean __GLEW_ARB_texture_buffer_object_rgb32 = GL_FALSE;\nGLboolean __GLEW_ARB_texture_buffer_range = GL_FALSE;\nGLboolean __GLEW_ARB_texture_compression = GL_FALSE;\nGLboolean __GLEW_ARB_texture_compression_bptc = GL_FALSE;\nGLboolean __GLEW_ARB_texture_compression_rgtc = GL_FALSE;\nGLboolean __GLEW_ARB_texture_cube_map = GL_FALSE;\nGLboolean __GLEW_ARB_texture_cube_map_array = GL_FALSE;\nGLboolean __GLEW_ARB_texture_env_add = GL_FALSE;\nGLboolean __GLEW_ARB_texture_env_combine = GL_FALSE;\nGLboolean __GLEW_ARB_texture_env_crossbar = GL_FALSE;\nGLboolean __GLEW_ARB_texture_env_dot3 = GL_FALSE;\nGLboolean __GLEW_ARB_texture_filter_minmax = GL_FALSE;\nGLboolean __GLEW_ARB_texture_float = GL_FALSE;\nGLboolean __GLEW_ARB_texture_gather = GL_FALSE;\nGLboolean __GLEW_ARB_texture_mirror_clamp_to_edge = GL_FALSE;\nGLboolean __GLEW_ARB_texture_mirrored_repeat = GL_FALSE;\nGLboolean __GLEW_ARB_texture_multisample = GL_FALSE;\nGLboolean __GLEW_ARB_texture_non_power_of_two = GL_FALSE;\nGLboolean __GLEW_ARB_texture_query_levels = GL_FALSE;\nGLboolean __GLEW_ARB_texture_query_lod = GL_FALSE;\nGLboolean __GLEW_ARB_texture_rectangle = GL_FALSE;\nGLboolean __GLEW_ARB_texture_rg = GL_FALSE;\nGLboolean __GLEW_ARB_texture_rgb10_a2ui = GL_FALSE;\nGLboolean __GLEW_ARB_texture_stencil8 = GL_FALSE;\nGLboolean __GLEW_ARB_texture_storage = GL_FALSE;\nGLboolean __GLEW_ARB_texture_storage_multisample = GL_FALSE;\nGLboolean __GLEW_ARB_texture_swizzle = GL_FALSE;\nGLboolean __GLEW_ARB_texture_view = GL_FALSE;\nGLboolean __GLEW_ARB_timer_query = GL_FALSE;\nGLboolean __GLEW_ARB_transform_feedback2 = GL_FALSE;\nGLboolean __GLEW_ARB_transform_feedback3 = GL_FALSE;\nGLboolean __GLEW_ARB_transform_feedback_instanced = GL_FALSE;\nGLboolean __GLEW_ARB_transform_feedback_overflow_query = GL_FALSE;\nGLboolean __GLEW_ARB_transpose_matrix = GL_FALSE;\nGLboolean __GLEW_ARB_uniform_buffer_object = GL_FALSE;\nGLboolean __GLEW_ARB_vertex_array_bgra = GL_FALSE;\nGLboolean __GLEW_ARB_vertex_array_object = GL_FALSE;\nGLboolean __GLEW_ARB_vertex_attrib_64bit = GL_FALSE;\nGLboolean __GLEW_ARB_vertex_attrib_binding = GL_FALSE;\nGLboolean __GLEW_ARB_vertex_blend = GL_FALSE;\nGLboolean __GLEW_ARB_vertex_buffer_object = GL_FALSE;\nGLboolean __GLEW_ARB_vertex_program = GL_FALSE;\nGLboolean __GLEW_ARB_vertex_shader = GL_FALSE;\nGLboolean __GLEW_ARB_vertex_type_10f_11f_11f_rev = GL_FALSE;\nGLboolean __GLEW_ARB_vertex_type_2_10_10_10_rev = GL_FALSE;\nGLboolean __GLEW_ARB_viewport_array = GL_FALSE;\nGLboolean __GLEW_ARB_window_pos = GL_FALSE;\nGLboolean __GLEW_ATIX_point_sprites = GL_FALSE;\nGLboolean __GLEW_ATIX_texture_env_combine3 = GL_FALSE;\nGLboolean __GLEW_ATIX_texture_env_route = GL_FALSE;\nGLboolean __GLEW_ATIX_vertex_shader_output_point_size = GL_FALSE;\nGLboolean __GLEW_ATI_draw_buffers = GL_FALSE;\nGLboolean __GLEW_ATI_element_array = GL_FALSE;\nGLboolean __GLEW_ATI_envmap_bumpmap = GL_FALSE;\nGLboolean __GLEW_ATI_fragment_shader = GL_FALSE;\nGLboolean __GLEW_ATI_map_object_buffer = GL_FALSE;\nGLboolean __GLEW_ATI_meminfo = GL_FALSE;\nGLboolean __GLEW_ATI_pn_triangles = GL_FALSE;\nGLboolean __GLEW_ATI_separate_stencil = GL_FALSE;\nGLboolean __GLEW_ATI_shader_texture_lod = GL_FALSE;\nGLboolean __GLEW_ATI_text_fragment_shader = GL_FALSE;\nGLboolean __GLEW_ATI_texture_compression_3dc = GL_FALSE;\nGLboolean __GLEW_ATI_texture_env_combine3 = GL_FALSE;\nGLboolean __GLEW_ATI_texture_float = GL_FALSE;\nGLboolean __GLEW_ATI_texture_mirror_once = GL_FALSE;\nGLboolean __GLEW_ATI_vertex_array_object = GL_FALSE;\nGLboolean __GLEW_ATI_vertex_attrib_array_object = GL_FALSE;\nGLboolean __GLEW_ATI_vertex_streams = GL_FALSE;\nGLboolean __GLEW_EGL_NV_robustness_video_memory_purge = GL_FALSE;\nGLboolean __GLEW_EXT_422_pixels = GL_FALSE;\nGLboolean __GLEW_EXT_Cg_shader = GL_FALSE;\nGLboolean __GLEW_EXT_abgr = GL_FALSE;\nGLboolean __GLEW_EXT_bgra = GL_FALSE;\nGLboolean __GLEW_EXT_bindable_uniform = GL_FALSE;\nGLboolean __GLEW_EXT_blend_color = GL_FALSE;\nGLboolean __GLEW_EXT_blend_equation_separate = GL_FALSE;\nGLboolean __GLEW_EXT_blend_func_separate = GL_FALSE;\nGLboolean __GLEW_EXT_blend_logic_op = GL_FALSE;\nGLboolean __GLEW_EXT_blend_minmax = GL_FALSE;\nGLboolean __GLEW_EXT_blend_subtract = GL_FALSE;\nGLboolean __GLEW_EXT_clip_volume_hint = GL_FALSE;\nGLboolean __GLEW_EXT_cmyka = GL_FALSE;\nGLboolean __GLEW_EXT_color_subtable = GL_FALSE;\nGLboolean __GLEW_EXT_compiled_vertex_array = GL_FALSE;\nGLboolean __GLEW_EXT_convolution = GL_FALSE;\nGLboolean __GLEW_EXT_coordinate_frame = GL_FALSE;\nGLboolean __GLEW_EXT_copy_texture = GL_FALSE;\nGLboolean __GLEW_EXT_cull_vertex = GL_FALSE;\nGLboolean __GLEW_EXT_debug_label = GL_FALSE;\nGLboolean __GLEW_EXT_debug_marker = GL_FALSE;\nGLboolean __GLEW_EXT_depth_bounds_test = GL_FALSE;\nGLboolean __GLEW_EXT_direct_state_access = GL_FALSE;\nGLboolean __GLEW_EXT_draw_buffers2 = GL_FALSE;\nGLboolean __GLEW_EXT_draw_instanced = GL_FALSE;\nGLboolean __GLEW_EXT_draw_range_elements = GL_FALSE;\nGLboolean __GLEW_EXT_fog_coord = GL_FALSE;\nGLboolean __GLEW_EXT_fragment_lighting = GL_FALSE;\nGLboolean __GLEW_EXT_framebuffer_blit = GL_FALSE;\nGLboolean __GLEW_EXT_framebuffer_multisample = GL_FALSE;\nGLboolean __GLEW_EXT_framebuffer_multisample_blit_scaled = GL_FALSE;\nGLboolean __GLEW_EXT_framebuffer_object = GL_FALSE;\nGLboolean __GLEW_EXT_framebuffer_sRGB = GL_FALSE;\nGLboolean __GLEW_EXT_geometry_shader4 = GL_FALSE;\nGLboolean __GLEW_EXT_gpu_program_parameters = GL_FALSE;\nGLboolean __GLEW_EXT_gpu_shader4 = GL_FALSE;\nGLboolean __GLEW_EXT_histogram = GL_FALSE;\nGLboolean __GLEW_EXT_index_array_formats = GL_FALSE;\nGLboolean __GLEW_EXT_index_func = GL_FALSE;\nGLboolean __GLEW_EXT_index_material = GL_FALSE;\nGLboolean __GLEW_EXT_index_texture = GL_FALSE;\nGLboolean __GLEW_EXT_light_texture = GL_FALSE;\nGLboolean __GLEW_EXT_misc_attribute = GL_FALSE;\nGLboolean __GLEW_EXT_multi_draw_arrays = GL_FALSE;\nGLboolean __GLEW_EXT_multisample = GL_FALSE;\nGLboolean __GLEW_EXT_packed_depth_stencil = GL_FALSE;\nGLboolean __GLEW_EXT_packed_float = GL_FALSE;\nGLboolean __GLEW_EXT_packed_pixels = GL_FALSE;\nGLboolean __GLEW_EXT_paletted_texture = GL_FALSE;\nGLboolean __GLEW_EXT_pixel_buffer_object = GL_FALSE;\nGLboolean __GLEW_EXT_pixel_transform = GL_FALSE;\nGLboolean __GLEW_EXT_pixel_transform_color_table = GL_FALSE;\nGLboolean __GLEW_EXT_point_parameters = GL_FALSE;\nGLboolean __GLEW_EXT_polygon_offset = GL_FALSE;\nGLboolean __GLEW_EXT_polygon_offset_clamp = GL_FALSE;\nGLboolean __GLEW_EXT_post_depth_coverage = GL_FALSE;\nGLboolean __GLEW_EXT_provoking_vertex = GL_FALSE;\nGLboolean __GLEW_EXT_raster_multisample = GL_FALSE;\nGLboolean __GLEW_EXT_rescale_normal = GL_FALSE;\nGLboolean __GLEW_EXT_scene_marker = GL_FALSE;\nGLboolean __GLEW_EXT_secondary_color = GL_FALSE;\nGLboolean __GLEW_EXT_separate_shader_objects = GL_FALSE;\nGLboolean __GLEW_EXT_separate_specular_color = GL_FALSE;\nGLboolean __GLEW_EXT_shader_image_load_formatted = GL_FALSE;\nGLboolean __GLEW_EXT_shader_image_load_store = GL_FALSE;\nGLboolean __GLEW_EXT_shader_integer_mix = GL_FALSE;\nGLboolean __GLEW_EXT_shadow_funcs = GL_FALSE;\nGLboolean __GLEW_EXT_shared_texture_palette = GL_FALSE;\nGLboolean __GLEW_EXT_sparse_texture2 = GL_FALSE;\nGLboolean __GLEW_EXT_stencil_clear_tag = GL_FALSE;\nGLboolean __GLEW_EXT_stencil_two_side = GL_FALSE;\nGLboolean __GLEW_EXT_stencil_wrap = GL_FALSE;\nGLboolean __GLEW_EXT_subtexture = GL_FALSE;\nGLboolean __GLEW_EXT_texture = GL_FALSE;\nGLboolean __GLEW_EXT_texture3D = GL_FALSE;\nGLboolean __GLEW_EXT_texture_array = GL_FALSE;\nGLboolean __GLEW_EXT_texture_buffer_object = GL_FALSE;\nGLboolean __GLEW_EXT_texture_compression_dxt1 = GL_FALSE;\nGLboolean __GLEW_EXT_texture_compression_latc = GL_FALSE;\nGLboolean __GLEW_EXT_texture_compression_rgtc = GL_FALSE;\nGLboolean __GLEW_EXT_texture_compression_s3tc = GL_FALSE;\nGLboolean __GLEW_EXT_texture_cube_map = GL_FALSE;\nGLboolean __GLEW_EXT_texture_edge_clamp = GL_FALSE;\nGLboolean __GLEW_EXT_texture_env = GL_FALSE;\nGLboolean __GLEW_EXT_texture_env_add = GL_FALSE;\nGLboolean __GLEW_EXT_texture_env_combine = GL_FALSE;\nGLboolean __GLEW_EXT_texture_env_dot3 = GL_FALSE;\nGLboolean __GLEW_EXT_texture_filter_anisotropic = GL_FALSE;\nGLboolean __GLEW_EXT_texture_filter_minmax = GL_FALSE;\nGLboolean __GLEW_EXT_texture_integer = GL_FALSE;\nGLboolean __GLEW_EXT_texture_lod_bias = GL_FALSE;\nGLboolean __GLEW_EXT_texture_mirror_clamp = GL_FALSE;\nGLboolean __GLEW_EXT_texture_object = GL_FALSE;\nGLboolean __GLEW_EXT_texture_perturb_normal = GL_FALSE;\nGLboolean __GLEW_EXT_texture_rectangle = GL_FALSE;\nGLboolean __GLEW_EXT_texture_sRGB = GL_FALSE;\nGLboolean __GLEW_EXT_texture_sRGB_decode = GL_FALSE;\nGLboolean __GLEW_EXT_texture_shared_exponent = GL_FALSE;\nGLboolean __GLEW_EXT_texture_snorm = GL_FALSE;\nGLboolean __GLEW_EXT_texture_swizzle = GL_FALSE;\nGLboolean __GLEW_EXT_timer_query = GL_FALSE;\nGLboolean __GLEW_EXT_transform_feedback = GL_FALSE;\nGLboolean __GLEW_EXT_vertex_array = GL_FALSE;\nGLboolean __GLEW_EXT_vertex_array_bgra = GL_FALSE;\nGLboolean __GLEW_EXT_vertex_attrib_64bit = GL_FALSE;\nGLboolean __GLEW_EXT_vertex_shader = GL_FALSE;\nGLboolean __GLEW_EXT_vertex_weighting = GL_FALSE;\nGLboolean __GLEW_EXT_window_rectangles = GL_FALSE;\nGLboolean __GLEW_EXT_x11_sync_object = GL_FALSE;\nGLboolean __GLEW_GREMEDY_frame_terminator = GL_FALSE;\nGLboolean __GLEW_GREMEDY_string_marker = GL_FALSE;\nGLboolean __GLEW_HP_convolution_border_modes = GL_FALSE;\nGLboolean __GLEW_HP_image_transform = GL_FALSE;\nGLboolean __GLEW_HP_occlusion_test = GL_FALSE;\nGLboolean __GLEW_HP_texture_lighting = GL_FALSE;\nGLboolean __GLEW_IBM_cull_vertex = GL_FALSE;\nGLboolean __GLEW_IBM_multimode_draw_arrays = GL_FALSE;\nGLboolean __GLEW_IBM_rasterpos_clip = GL_FALSE;\nGLboolean __GLEW_IBM_static_data = GL_FALSE;\nGLboolean __GLEW_IBM_texture_mirrored_repeat = GL_FALSE;\nGLboolean __GLEW_IBM_vertex_array_lists = GL_FALSE;\nGLboolean __GLEW_INGR_color_clamp = GL_FALSE;\nGLboolean __GLEW_INGR_interlace_read = GL_FALSE;\nGLboolean __GLEW_INTEL_conservative_rasterization = GL_FALSE;\nGLboolean __GLEW_INTEL_fragment_shader_ordering = GL_FALSE;\nGLboolean __GLEW_INTEL_framebuffer_CMAA = GL_FALSE;\nGLboolean __GLEW_INTEL_map_texture = GL_FALSE;\nGLboolean __GLEW_INTEL_parallel_arrays = GL_FALSE;\nGLboolean __GLEW_INTEL_performance_query = GL_FALSE;\nGLboolean __GLEW_INTEL_texture_scissor = GL_FALSE;\nGLboolean __GLEW_KHR_blend_equation_advanced = GL_FALSE;\nGLboolean __GLEW_KHR_blend_equation_advanced_coherent = GL_FALSE;\nGLboolean __GLEW_KHR_context_flush_control = GL_FALSE;\nGLboolean __GLEW_KHR_debug = GL_FALSE;\nGLboolean __GLEW_KHR_no_error = GL_FALSE;\nGLboolean __GLEW_KHR_robust_buffer_access_behavior = GL_FALSE;\nGLboolean __GLEW_KHR_robustness = GL_FALSE;\nGLboolean __GLEW_KHR_texture_compression_astc_hdr = GL_FALSE;\nGLboolean __GLEW_KHR_texture_compression_astc_ldr = GL_FALSE;\nGLboolean __GLEW_KHR_texture_compression_astc_sliced_3d = GL_FALSE;\nGLboolean __GLEW_KTX_buffer_region = GL_FALSE;\nGLboolean __GLEW_MESAX_texture_stack = GL_FALSE;\nGLboolean __GLEW_MESA_pack_invert = GL_FALSE;\nGLboolean __GLEW_MESA_resize_buffers = GL_FALSE;\nGLboolean __GLEW_MESA_shader_integer_functions = GL_FALSE;\nGLboolean __GLEW_MESA_window_pos = GL_FALSE;\nGLboolean __GLEW_MESA_ycbcr_texture = GL_FALSE;\nGLboolean __GLEW_NVX_blend_equation_advanced_multi_draw_buffers = GL_FALSE;\nGLboolean __GLEW_NVX_conditional_render = GL_FALSE;\nGLboolean __GLEW_NVX_gpu_memory_info = GL_FALSE;\nGLboolean __GLEW_NVX_linked_gpu_multicast = GL_FALSE;\nGLboolean __GLEW_NV_bindless_multi_draw_indirect = GL_FALSE;\nGLboolean __GLEW_NV_bindless_multi_draw_indirect_count = GL_FALSE;\nGLboolean __GLEW_NV_bindless_texture = GL_FALSE;\nGLboolean __GLEW_NV_blend_equation_advanced = GL_FALSE;\nGLboolean __GLEW_NV_blend_equation_advanced_coherent = GL_FALSE;\nGLboolean __GLEW_NV_blend_square = GL_FALSE;\nGLboolean __GLEW_NV_clip_space_w_scaling = GL_FALSE;\nGLboolean __GLEW_NV_command_list = GL_FALSE;\nGLboolean __GLEW_NV_compute_program5 = GL_FALSE;\nGLboolean __GLEW_NV_conditional_render = GL_FALSE;\nGLboolean __GLEW_NV_conservative_raster = GL_FALSE;\nGLboolean __GLEW_NV_conservative_raster_dilate = GL_FALSE;\nGLboolean __GLEW_NV_conservative_raster_pre_snap_triangles = GL_FALSE;\nGLboolean __GLEW_NV_copy_depth_to_color = GL_FALSE;\nGLboolean __GLEW_NV_copy_image = GL_FALSE;\nGLboolean __GLEW_NV_deep_texture3D = GL_FALSE;\nGLboolean __GLEW_NV_depth_buffer_float = GL_FALSE;\nGLboolean __GLEW_NV_depth_clamp = GL_FALSE;\nGLboolean __GLEW_NV_depth_range_unclamped = GL_FALSE;\nGLboolean __GLEW_NV_draw_texture = GL_FALSE;\nGLboolean __GLEW_NV_draw_vulkan_image = GL_FALSE;\nGLboolean __GLEW_NV_evaluators = GL_FALSE;\nGLboolean __GLEW_NV_explicit_multisample = GL_FALSE;\nGLboolean __GLEW_NV_fence = GL_FALSE;\nGLboolean __GLEW_NV_fill_rectangle = GL_FALSE;\nGLboolean __GLEW_NV_float_buffer = GL_FALSE;\nGLboolean __GLEW_NV_fog_distance = GL_FALSE;\nGLboolean __GLEW_NV_fragment_coverage_to_color = GL_FALSE;\nGLboolean __GLEW_NV_fragment_program = GL_FALSE;\nGLboolean __GLEW_NV_fragment_program2 = GL_FALSE;\nGLboolean __GLEW_NV_fragment_program4 = GL_FALSE;\nGLboolean __GLEW_NV_fragment_program_option = GL_FALSE;\nGLboolean __GLEW_NV_fragment_shader_interlock = GL_FALSE;\nGLboolean __GLEW_NV_framebuffer_mixed_samples = GL_FALSE;\nGLboolean __GLEW_NV_framebuffer_multisample_coverage = GL_FALSE;\nGLboolean __GLEW_NV_geometry_program4 = GL_FALSE;\nGLboolean __GLEW_NV_geometry_shader4 = GL_FALSE;\nGLboolean __GLEW_NV_geometry_shader_passthrough = GL_FALSE;\nGLboolean __GLEW_NV_gpu_multicast = GL_FALSE;\nGLboolean __GLEW_NV_gpu_program4 = GL_FALSE;\nGLboolean __GLEW_NV_gpu_program5 = GL_FALSE;\nGLboolean __GLEW_NV_gpu_program5_mem_extended = GL_FALSE;\nGLboolean __GLEW_NV_gpu_program_fp64 = GL_FALSE;\nGLboolean __GLEW_NV_gpu_shader5 = GL_FALSE;\nGLboolean __GLEW_NV_half_float = GL_FALSE;\nGLboolean __GLEW_NV_internalformat_sample_query = GL_FALSE;\nGLboolean __GLEW_NV_light_max_exponent = GL_FALSE;\nGLboolean __GLEW_NV_multisample_coverage = GL_FALSE;\nGLboolean __GLEW_NV_multisample_filter_hint = GL_FALSE;\nGLboolean __GLEW_NV_occlusion_query = GL_FALSE;\nGLboolean __GLEW_NV_packed_depth_stencil = GL_FALSE;\nGLboolean __GLEW_NV_parameter_buffer_object = GL_FALSE;\nGLboolean __GLEW_NV_parameter_buffer_object2 = GL_FALSE;\nGLboolean __GLEW_NV_path_rendering = GL_FALSE;\nGLboolean __GLEW_NV_path_rendering_shared_edge = GL_FALSE;\nGLboolean __GLEW_NV_pixel_data_range = GL_FALSE;\nGLboolean __GLEW_NV_point_sprite = GL_FALSE;\nGLboolean __GLEW_NV_present_video = GL_FALSE;\nGLboolean __GLEW_NV_primitive_restart = GL_FALSE;\nGLboolean __GLEW_NV_register_combiners = GL_FALSE;\nGLboolean __GLEW_NV_register_combiners2 = GL_FALSE;\nGLboolean __GLEW_NV_robustness_video_memory_purge = GL_FALSE;\nGLboolean __GLEW_NV_sample_locations = GL_FALSE;\nGLboolean __GLEW_NV_sample_mask_override_coverage = GL_FALSE;\nGLboolean __GLEW_NV_shader_atomic_counters = GL_FALSE;\nGLboolean __GLEW_NV_shader_atomic_float = GL_FALSE;\nGLboolean __GLEW_NV_shader_atomic_float64 = GL_FALSE;\nGLboolean __GLEW_NV_shader_atomic_fp16_vector = GL_FALSE;\nGLboolean __GLEW_NV_shader_atomic_int64 = GL_FALSE;\nGLboolean __GLEW_NV_shader_buffer_load = GL_FALSE;\nGLboolean __GLEW_NV_shader_storage_buffer_object = GL_FALSE;\nGLboolean __GLEW_NV_shader_thread_group = GL_FALSE;\nGLboolean __GLEW_NV_shader_thread_shuffle = GL_FALSE;\nGLboolean __GLEW_NV_stereo_view_rendering = GL_FALSE;\nGLboolean __GLEW_NV_tessellation_program5 = GL_FALSE;\nGLboolean __GLEW_NV_texgen_emboss = GL_FALSE;\nGLboolean __GLEW_NV_texgen_reflection = GL_FALSE;\nGLboolean __GLEW_NV_texture_barrier = GL_FALSE;\nGLboolean __GLEW_NV_texture_compression_vtc = GL_FALSE;\nGLboolean __GLEW_NV_texture_env_combine4 = GL_FALSE;\nGLboolean __GLEW_NV_texture_expand_normal = GL_FALSE;\nGLboolean __GLEW_NV_texture_multisample = GL_FALSE;\nGLboolean __GLEW_NV_texture_rectangle = GL_FALSE;\nGLboolean __GLEW_NV_texture_shader = GL_FALSE;\nGLboolean __GLEW_NV_texture_shader2 = GL_FALSE;\nGLboolean __GLEW_NV_texture_shader3 = GL_FALSE;\nGLboolean __GLEW_NV_transform_feedback = GL_FALSE;\nGLboolean __GLEW_NV_transform_feedback2 = GL_FALSE;\nGLboolean __GLEW_NV_uniform_buffer_unified_memory = GL_FALSE;\nGLboolean __GLEW_NV_vdpau_interop = GL_FALSE;\nGLboolean __GLEW_NV_vertex_array_range = GL_FALSE;\nGLboolean __GLEW_NV_vertex_array_range2 = GL_FALSE;\nGLboolean __GLEW_NV_vertex_attrib_integer_64bit = GL_FALSE;\nGLboolean __GLEW_NV_vertex_buffer_unified_memory = GL_FALSE;\nGLboolean __GLEW_NV_vertex_program = GL_FALSE;\nGLboolean __GLEW_NV_vertex_program1_1 = GL_FALSE;\nGLboolean __GLEW_NV_vertex_program2 = GL_FALSE;\nGLboolean __GLEW_NV_vertex_program2_option = GL_FALSE;\nGLboolean __GLEW_NV_vertex_program3 = GL_FALSE;\nGLboolean __GLEW_NV_vertex_program4 = GL_FALSE;\nGLboolean __GLEW_NV_video_capture = GL_FALSE;\nGLboolean __GLEW_NV_viewport_array2 = GL_FALSE;\nGLboolean __GLEW_NV_viewport_swizzle = GL_FALSE;\nGLboolean __GLEW_OES_byte_coordinates = GL_FALSE;\nGLboolean __GLEW_OES_compressed_paletted_texture = GL_FALSE;\nGLboolean __GLEW_OES_read_format = GL_FALSE;\nGLboolean __GLEW_OES_single_precision = GL_FALSE;\nGLboolean __GLEW_OML_interlace = GL_FALSE;\nGLboolean __GLEW_OML_resample = GL_FALSE;\nGLboolean __GLEW_OML_subsample = GL_FALSE;\nGLboolean __GLEW_OVR_multiview = GL_FALSE;\nGLboolean __GLEW_OVR_multiview2 = GL_FALSE;\nGLboolean __GLEW_PGI_misc_hints = GL_FALSE;\nGLboolean __GLEW_PGI_vertex_hints = GL_FALSE;\nGLboolean __GLEW_REGAL_ES1_0_compatibility = GL_FALSE;\nGLboolean __GLEW_REGAL_ES1_1_compatibility = GL_FALSE;\nGLboolean __GLEW_REGAL_enable = GL_FALSE;\nGLboolean __GLEW_REGAL_error_string = GL_FALSE;\nGLboolean __GLEW_REGAL_extension_query = GL_FALSE;\nGLboolean __GLEW_REGAL_log = GL_FALSE;\nGLboolean __GLEW_REGAL_proc_address = GL_FALSE;\nGLboolean __GLEW_REND_screen_coordinates = GL_FALSE;\nGLboolean __GLEW_S3_s3tc = GL_FALSE;\nGLboolean __GLEW_SGIS_color_range = GL_FALSE;\nGLboolean __GLEW_SGIS_detail_texture = GL_FALSE;\nGLboolean __GLEW_SGIS_fog_function = GL_FALSE;\nGLboolean __GLEW_SGIS_generate_mipmap = GL_FALSE;\nGLboolean __GLEW_SGIS_multisample = GL_FALSE;\nGLboolean __GLEW_SGIS_pixel_texture = GL_FALSE;\nGLboolean __GLEW_SGIS_point_line_texgen = GL_FALSE;\nGLboolean __GLEW_SGIS_sharpen_texture = GL_FALSE;\nGLboolean __GLEW_SGIS_texture4D = GL_FALSE;\nGLboolean __GLEW_SGIS_texture_border_clamp = GL_FALSE;\nGLboolean __GLEW_SGIS_texture_edge_clamp = GL_FALSE;\nGLboolean __GLEW_SGIS_texture_filter4 = GL_FALSE;\nGLboolean __GLEW_SGIS_texture_lod = GL_FALSE;\nGLboolean __GLEW_SGIS_texture_select = GL_FALSE;\nGLboolean __GLEW_SGIX_async = GL_FALSE;\nGLboolean __GLEW_SGIX_async_histogram = GL_FALSE;\nGLboolean __GLEW_SGIX_async_pixel = GL_FALSE;\nGLboolean __GLEW_SGIX_blend_alpha_minmax = GL_FALSE;\nGLboolean __GLEW_SGIX_clipmap = GL_FALSE;\nGLboolean __GLEW_SGIX_convolution_accuracy = GL_FALSE;\nGLboolean __GLEW_SGIX_depth_texture = GL_FALSE;\nGLboolean __GLEW_SGIX_flush_raster = GL_FALSE;\nGLboolean __GLEW_SGIX_fog_offset = GL_FALSE;\nGLboolean __GLEW_SGIX_fog_texture = GL_FALSE;\nGLboolean __GLEW_SGIX_fragment_specular_lighting = GL_FALSE;\nGLboolean __GLEW_SGIX_framezoom = GL_FALSE;\nGLboolean __GLEW_SGIX_interlace = GL_FALSE;\nGLboolean __GLEW_SGIX_ir_instrument1 = GL_FALSE;\nGLboolean __GLEW_SGIX_list_priority = GL_FALSE;\nGLboolean __GLEW_SGIX_pixel_texture = GL_FALSE;\nGLboolean __GLEW_SGIX_pixel_texture_bits = GL_FALSE;\nGLboolean __GLEW_SGIX_reference_plane = GL_FALSE;\nGLboolean __GLEW_SGIX_resample = GL_FALSE;\nGLboolean __GLEW_SGIX_shadow = GL_FALSE;\nGLboolean __GLEW_SGIX_shadow_ambient = GL_FALSE;\nGLboolean __GLEW_SGIX_sprite = GL_FALSE;\nGLboolean __GLEW_SGIX_tag_sample_buffer = GL_FALSE;\nGLboolean __GLEW_SGIX_texture_add_env = GL_FALSE;\nGLboolean __GLEW_SGIX_texture_coordinate_clamp = GL_FALSE;\nGLboolean __GLEW_SGIX_texture_lod_bias = GL_FALSE;\nGLboolean __GLEW_SGIX_texture_multi_buffer = GL_FALSE;\nGLboolean __GLEW_SGIX_texture_range = GL_FALSE;\nGLboolean __GLEW_SGIX_texture_scale_bias = GL_FALSE;\nGLboolean __GLEW_SGIX_vertex_preclip = GL_FALSE;\nGLboolean __GLEW_SGIX_vertex_preclip_hint = GL_FALSE;\nGLboolean __GLEW_SGIX_ycrcb = GL_FALSE;\nGLboolean __GLEW_SGI_color_matrix = GL_FALSE;\nGLboolean __GLEW_SGI_color_table = GL_FALSE;\nGLboolean __GLEW_SGI_texture_color_table = GL_FALSE;\nGLboolean __GLEW_SUNX_constant_data = GL_FALSE;\nGLboolean __GLEW_SUN_convolution_border_modes = GL_FALSE;\nGLboolean __GLEW_SUN_global_alpha = GL_FALSE;\nGLboolean __GLEW_SUN_mesh_array = GL_FALSE;\nGLboolean __GLEW_SUN_read_video_pixels = GL_FALSE;\nGLboolean __GLEW_SUN_slice_accum = GL_FALSE;\nGLboolean __GLEW_SUN_triangle_list = GL_FALSE;\nGLboolean __GLEW_SUN_vertex = GL_FALSE;\nGLboolean __GLEW_WIN_phong_shading = GL_FALSE;\nGLboolean __GLEW_WIN_specular_fog = GL_FALSE;\nGLboolean __GLEW_WIN_swap_hint = GL_FALSE;\n\nstatic const char * _glewExtensionLookup[] = {\n#ifdef GL_VERSION_1_2\n  \"GL_VERSION_1_2\",\n#endif\n#ifdef GL_VERSION_1_2_1\n  \"GL_VERSION_1_2_1\",\n#endif\n#ifdef GL_VERSION_1_3\n  \"GL_VERSION_1_3\",\n#endif\n#ifdef GL_VERSION_1_4\n  \"GL_VERSION_1_4\",\n#endif\n#ifdef GL_VERSION_1_5\n  \"GL_VERSION_1_5\",\n#endif\n#ifdef GL_VERSION_2_0\n  \"GL_VERSION_2_0\",\n#endif\n#ifdef GL_VERSION_2_1\n  \"GL_VERSION_2_1\",\n#endif\n#ifdef GL_VERSION_3_0\n  \"GL_VERSION_3_0\",\n#endif\n#ifdef GL_VERSION_3_1\n  \"GL_VERSION_3_1\",\n#endif\n#ifdef GL_VERSION_3_2\n  \"GL_VERSION_3_2\",\n#endif\n#ifdef GL_VERSION_3_3\n  \"GL_VERSION_3_3\",\n#endif\n#ifdef GL_VERSION_4_0\n  \"GL_VERSION_4_0\",\n#endif\n#ifdef GL_VERSION_4_1\n  \"GL_VERSION_4_1\",\n#endif\n#ifdef GL_VERSION_4_2\n  \"GL_VERSION_4_2\",\n#endif\n#ifdef GL_VERSION_4_3\n  \"GL_VERSION_4_3\",\n#endif\n#ifdef GL_VERSION_4_4\n  \"GL_VERSION_4_4\",\n#endif\n#ifdef GL_VERSION_4_5\n  \"GL_VERSION_4_5\",\n#endif\n#ifdef GL_3DFX_multisample\n  \"GL_3DFX_multisample\",\n#endif\n#ifdef GL_3DFX_tbuffer\n  \"GL_3DFX_tbuffer\",\n#endif\n#ifdef GL_3DFX_texture_compression_FXT1\n  \"GL_3DFX_texture_compression_FXT1\",\n#endif\n#ifdef GL_AMD_blend_minmax_factor\n  \"GL_AMD_blend_minmax_factor\",\n#endif\n#ifdef GL_AMD_conservative_depth\n  \"GL_AMD_conservative_depth\",\n#endif\n#ifdef GL_AMD_debug_output\n  \"GL_AMD_debug_output\",\n#endif\n#ifdef GL_AMD_depth_clamp_separate\n  \"GL_AMD_depth_clamp_separate\",\n#endif\n#ifdef GL_AMD_draw_buffers_blend\n  \"GL_AMD_draw_buffers_blend\",\n#endif\n#ifdef GL_AMD_gcn_shader\n  \"GL_AMD_gcn_shader\",\n#endif\n#ifdef GL_AMD_gpu_shader_int64\n  \"GL_AMD_gpu_shader_int64\",\n#endif\n#ifdef GL_AMD_interleaved_elements\n  \"GL_AMD_interleaved_elements\",\n#endif\n#ifdef GL_AMD_multi_draw_indirect\n  \"GL_AMD_multi_draw_indirect\",\n#endif\n#ifdef GL_AMD_name_gen_delete\n  \"GL_AMD_name_gen_delete\",\n#endif\n#ifdef GL_AMD_occlusion_query_event\n  \"GL_AMD_occlusion_query_event\",\n#endif\n#ifdef GL_AMD_performance_monitor\n  \"GL_AMD_performance_monitor\",\n#endif\n#ifdef GL_AMD_pinned_memory\n  \"GL_AMD_pinned_memory\",\n#endif\n#ifdef GL_AMD_query_buffer_object\n  \"GL_AMD_query_buffer_object\",\n#endif\n#ifdef GL_AMD_sample_positions\n  \"GL_AMD_sample_positions\",\n#endif\n#ifdef GL_AMD_seamless_cubemap_per_texture\n  \"GL_AMD_seamless_cubemap_per_texture\",\n#endif\n#ifdef GL_AMD_shader_atomic_counter_ops\n  \"GL_AMD_shader_atomic_counter_ops\",\n#endif\n#ifdef GL_AMD_shader_explicit_vertex_parameter\n  \"GL_AMD_shader_explicit_vertex_parameter\",\n#endif\n#ifdef GL_AMD_shader_stencil_export\n  \"GL_AMD_shader_stencil_export\",\n#endif\n#ifdef GL_AMD_shader_stencil_value_export\n  \"GL_AMD_shader_stencil_value_export\",\n#endif\n#ifdef GL_AMD_shader_trinary_minmax\n  \"GL_AMD_shader_trinary_minmax\",\n#endif\n#ifdef GL_AMD_sparse_texture\n  \"GL_AMD_sparse_texture\",\n#endif\n#ifdef GL_AMD_stencil_operation_extended\n  \"GL_AMD_stencil_operation_extended\",\n#endif\n#ifdef GL_AMD_texture_texture4\n  \"GL_AMD_texture_texture4\",\n#endif\n#ifdef GL_AMD_transform_feedback3_lines_triangles\n  \"GL_AMD_transform_feedback3_lines_triangles\",\n#endif\n#ifdef GL_AMD_transform_feedback4\n  \"GL_AMD_transform_feedback4\",\n#endif\n#ifdef GL_AMD_vertex_shader_layer\n  \"GL_AMD_vertex_shader_layer\",\n#endif\n#ifdef GL_AMD_vertex_shader_tessellator\n  \"GL_AMD_vertex_shader_tessellator\",\n#endif\n#ifdef GL_AMD_vertex_shader_viewport_index\n  \"GL_AMD_vertex_shader_viewport_index\",\n#endif\n#ifdef GL_ANGLE_depth_texture\n  \"GL_ANGLE_depth_texture\",\n#endif\n#ifdef GL_ANGLE_framebuffer_blit\n  \"GL_ANGLE_framebuffer_blit\",\n#endif\n#ifdef GL_ANGLE_framebuffer_multisample\n  \"GL_ANGLE_framebuffer_multisample\",\n#endif\n#ifdef GL_ANGLE_instanced_arrays\n  \"GL_ANGLE_instanced_arrays\",\n#endif\n#ifdef GL_ANGLE_pack_reverse_row_order\n  \"GL_ANGLE_pack_reverse_row_order\",\n#endif\n#ifdef GL_ANGLE_program_binary\n  \"GL_ANGLE_program_binary\",\n#endif\n#ifdef GL_ANGLE_texture_compression_dxt1\n  \"GL_ANGLE_texture_compression_dxt1\",\n#endif\n#ifdef GL_ANGLE_texture_compression_dxt3\n  \"GL_ANGLE_texture_compression_dxt3\",\n#endif\n#ifdef GL_ANGLE_texture_compression_dxt5\n  \"GL_ANGLE_texture_compression_dxt5\",\n#endif\n#ifdef GL_ANGLE_texture_usage\n  \"GL_ANGLE_texture_usage\",\n#endif\n#ifdef GL_ANGLE_timer_query\n  \"GL_ANGLE_timer_query\",\n#endif\n#ifdef GL_ANGLE_translated_shader_source\n  \"GL_ANGLE_translated_shader_source\",\n#endif\n#ifdef GL_APPLE_aux_depth_stencil\n  \"GL_APPLE_aux_depth_stencil\",\n#endif\n#ifdef GL_APPLE_client_storage\n  \"GL_APPLE_client_storage\",\n#endif\n#ifdef GL_APPLE_element_array\n  \"GL_APPLE_element_array\",\n#endif\n#ifdef GL_APPLE_fence\n  \"GL_APPLE_fence\",\n#endif\n#ifdef GL_APPLE_float_pixels\n  \"GL_APPLE_float_pixels\",\n#endif\n#ifdef GL_APPLE_flush_buffer_range\n  \"GL_APPLE_flush_buffer_range\",\n#endif\n#ifdef GL_APPLE_object_purgeable\n  \"GL_APPLE_object_purgeable\",\n#endif\n#ifdef GL_APPLE_pixel_buffer\n  \"GL_APPLE_pixel_buffer\",\n#endif\n#ifdef GL_APPLE_rgb_422\n  \"GL_APPLE_rgb_422\",\n#endif\n#ifdef GL_APPLE_row_bytes\n  \"GL_APPLE_row_bytes\",\n#endif\n#ifdef GL_APPLE_specular_vector\n  \"GL_APPLE_specular_vector\",\n#endif\n#ifdef GL_APPLE_texture_range\n  \"GL_APPLE_texture_range\",\n#endif\n#ifdef GL_APPLE_transform_hint\n  \"GL_APPLE_transform_hint\",\n#endif\n#ifdef GL_APPLE_vertex_array_object\n  \"GL_APPLE_vertex_array_object\",\n#endif\n#ifdef GL_APPLE_vertex_array_range\n  \"GL_APPLE_vertex_array_range\",\n#endif\n#ifdef GL_APPLE_vertex_program_evaluators\n  \"GL_APPLE_vertex_program_evaluators\",\n#endif\n#ifdef GL_APPLE_ycbcr_422\n  \"GL_APPLE_ycbcr_422\",\n#endif\n#ifdef GL_ARB_ES2_compatibility\n  \"GL_ARB_ES2_compatibility\",\n#endif\n#ifdef GL_ARB_ES3_1_compatibility\n  \"GL_ARB_ES3_1_compatibility\",\n#endif\n#ifdef GL_ARB_ES3_2_compatibility\n  \"GL_ARB_ES3_2_compatibility\",\n#endif\n#ifdef GL_ARB_ES3_compatibility\n  \"GL_ARB_ES3_compatibility\",\n#endif\n#ifdef GL_ARB_arrays_of_arrays\n  \"GL_ARB_arrays_of_arrays\",\n#endif\n#ifdef GL_ARB_base_instance\n  \"GL_ARB_base_instance\",\n#endif\n#ifdef GL_ARB_bindless_texture\n  \"GL_ARB_bindless_texture\",\n#endif\n#ifdef GL_ARB_blend_func_extended\n  \"GL_ARB_blend_func_extended\",\n#endif\n#ifdef GL_ARB_buffer_storage\n  \"GL_ARB_buffer_storage\",\n#endif\n#ifdef GL_ARB_cl_event\n  \"GL_ARB_cl_event\",\n#endif\n#ifdef GL_ARB_clear_buffer_object\n  \"GL_ARB_clear_buffer_object\",\n#endif\n#ifdef GL_ARB_clear_texture\n  \"GL_ARB_clear_texture\",\n#endif\n#ifdef GL_ARB_clip_control\n  \"GL_ARB_clip_control\",\n#endif\n#ifdef GL_ARB_color_buffer_float\n  \"GL_ARB_color_buffer_float\",\n#endif\n#ifdef GL_ARB_compatibility\n  \"GL_ARB_compatibility\",\n#endif\n#ifdef GL_ARB_compressed_texture_pixel_storage\n  \"GL_ARB_compressed_texture_pixel_storage\",\n#endif\n#ifdef GL_ARB_compute_shader\n  \"GL_ARB_compute_shader\",\n#endif\n#ifdef GL_ARB_compute_variable_group_size\n  \"GL_ARB_compute_variable_group_size\",\n#endif\n#ifdef GL_ARB_conditional_render_inverted\n  \"GL_ARB_conditional_render_inverted\",\n#endif\n#ifdef GL_ARB_conservative_depth\n  \"GL_ARB_conservative_depth\",\n#endif\n#ifdef GL_ARB_copy_buffer\n  \"GL_ARB_copy_buffer\",\n#endif\n#ifdef GL_ARB_copy_image\n  \"GL_ARB_copy_image\",\n#endif\n#ifdef GL_ARB_cull_distance\n  \"GL_ARB_cull_distance\",\n#endif\n#ifdef GL_ARB_debug_output\n  \"GL_ARB_debug_output\",\n#endif\n#ifdef GL_ARB_depth_buffer_float\n  \"GL_ARB_depth_buffer_float\",\n#endif\n#ifdef GL_ARB_depth_clamp\n  \"GL_ARB_depth_clamp\",\n#endif\n#ifdef GL_ARB_depth_texture\n  \"GL_ARB_depth_texture\",\n#endif\n#ifdef GL_ARB_derivative_control\n  \"GL_ARB_derivative_control\",\n#endif\n#ifdef GL_ARB_direct_state_access\n  \"GL_ARB_direct_state_access\",\n#endif\n#ifdef GL_ARB_draw_buffers\n  \"GL_ARB_draw_buffers\",\n#endif\n#ifdef GL_ARB_draw_buffers_blend\n  \"GL_ARB_draw_buffers_blend\",\n#endif\n#ifdef GL_ARB_draw_elements_base_vertex\n  \"GL_ARB_draw_elements_base_vertex\",\n#endif\n#ifdef GL_ARB_draw_indirect\n  \"GL_ARB_draw_indirect\",\n#endif\n#ifdef GL_ARB_draw_instanced\n  \"GL_ARB_draw_instanced\",\n#endif\n#ifdef GL_ARB_enhanced_layouts\n  \"GL_ARB_enhanced_layouts\",\n#endif\n#ifdef GL_ARB_explicit_attrib_location\n  \"GL_ARB_explicit_attrib_location\",\n#endif\n#ifdef GL_ARB_explicit_uniform_location\n  \"GL_ARB_explicit_uniform_location\",\n#endif\n#ifdef GL_ARB_fragment_coord_conventions\n  \"GL_ARB_fragment_coord_conventions\",\n#endif\n#ifdef GL_ARB_fragment_layer_viewport\n  \"GL_ARB_fragment_layer_viewport\",\n#endif\n#ifdef GL_ARB_fragment_program\n  \"GL_ARB_fragment_program\",\n#endif\n#ifdef GL_ARB_fragment_program_shadow\n  \"GL_ARB_fragment_program_shadow\",\n#endif\n#ifdef GL_ARB_fragment_shader\n  \"GL_ARB_fragment_shader\",\n#endif\n#ifdef GL_ARB_fragment_shader_interlock\n  \"GL_ARB_fragment_shader_interlock\",\n#endif\n#ifdef GL_ARB_framebuffer_no_attachments\n  \"GL_ARB_framebuffer_no_attachments\",\n#endif\n#ifdef GL_ARB_framebuffer_object\n  \"GL_ARB_framebuffer_object\",\n#endif\n#ifdef GL_ARB_framebuffer_sRGB\n  \"GL_ARB_framebuffer_sRGB\",\n#endif\n#ifdef GL_ARB_geometry_shader4\n  \"GL_ARB_geometry_shader4\",\n#endif\n#ifdef GL_ARB_get_program_binary\n  \"GL_ARB_get_program_binary\",\n#endif\n#ifdef GL_ARB_get_texture_sub_image\n  \"GL_ARB_get_texture_sub_image\",\n#endif\n#ifdef GL_ARB_gl_spirv\n  \"GL_ARB_gl_spirv\",\n#endif\n#ifdef GL_ARB_gpu_shader5\n  \"GL_ARB_gpu_shader5\",\n#endif\n#ifdef GL_ARB_gpu_shader_fp64\n  \"GL_ARB_gpu_shader_fp64\",\n#endif\n#ifdef GL_ARB_gpu_shader_int64\n  \"GL_ARB_gpu_shader_int64\",\n#endif\n#ifdef GL_ARB_half_float_pixel\n  \"GL_ARB_half_float_pixel\",\n#endif\n#ifdef GL_ARB_half_float_vertex\n  \"GL_ARB_half_float_vertex\",\n#endif\n#ifdef GL_ARB_imaging\n  \"GL_ARB_imaging\",\n#endif\n#ifdef GL_ARB_indirect_parameters\n  \"GL_ARB_indirect_parameters\",\n#endif\n#ifdef GL_ARB_instanced_arrays\n  \"GL_ARB_instanced_arrays\",\n#endif\n#ifdef GL_ARB_internalformat_query\n  \"GL_ARB_internalformat_query\",\n#endif\n#ifdef GL_ARB_internalformat_query2\n  \"GL_ARB_internalformat_query2\",\n#endif\n#ifdef GL_ARB_invalidate_subdata\n  \"GL_ARB_invalidate_subdata\",\n#endif\n#ifdef GL_ARB_map_buffer_alignment\n  \"GL_ARB_map_buffer_alignment\",\n#endif\n#ifdef GL_ARB_map_buffer_range\n  \"GL_ARB_map_buffer_range\",\n#endif\n#ifdef GL_ARB_matrix_palette\n  \"GL_ARB_matrix_palette\",\n#endif\n#ifdef GL_ARB_multi_bind\n  \"GL_ARB_multi_bind\",\n#endif\n#ifdef GL_ARB_multi_draw_indirect\n  \"GL_ARB_multi_draw_indirect\",\n#endif\n#ifdef GL_ARB_multisample\n  \"GL_ARB_multisample\",\n#endif\n#ifdef GL_ARB_multitexture\n  \"GL_ARB_multitexture\",\n#endif\n#ifdef GL_ARB_occlusion_query\n  \"GL_ARB_occlusion_query\",\n#endif\n#ifdef GL_ARB_occlusion_query2\n  \"GL_ARB_occlusion_query2\",\n#endif\n#ifdef GL_ARB_parallel_shader_compile\n  \"GL_ARB_parallel_shader_compile\",\n#endif\n#ifdef GL_ARB_pipeline_statistics_query\n  \"GL_ARB_pipeline_statistics_query\",\n#endif\n#ifdef GL_ARB_pixel_buffer_object\n  \"GL_ARB_pixel_buffer_object\",\n#endif\n#ifdef GL_ARB_point_parameters\n  \"GL_ARB_point_parameters\",\n#endif\n#ifdef GL_ARB_point_sprite\n  \"GL_ARB_point_sprite\",\n#endif\n#ifdef GL_ARB_post_depth_coverage\n  \"GL_ARB_post_depth_coverage\",\n#endif\n#ifdef GL_ARB_program_interface_query\n  \"GL_ARB_program_interface_query\",\n#endif\n#ifdef GL_ARB_provoking_vertex\n  \"GL_ARB_provoking_vertex\",\n#endif\n#ifdef GL_ARB_query_buffer_object\n  \"GL_ARB_query_buffer_object\",\n#endif\n#ifdef GL_ARB_robust_buffer_access_behavior\n  \"GL_ARB_robust_buffer_access_behavior\",\n#endif\n#ifdef GL_ARB_robustness\n  \"GL_ARB_robustness\",\n#endif\n#ifdef GL_ARB_robustness_application_isolation\n  \"GL_ARB_robustness_application_isolation\",\n#endif\n#ifdef GL_ARB_robustness_share_group_isolation\n  \"GL_ARB_robustness_share_group_isolation\",\n#endif\n#ifdef GL_ARB_sample_locations\n  \"GL_ARB_sample_locations\",\n#endif\n#ifdef GL_ARB_sample_shading\n  \"GL_ARB_sample_shading\",\n#endif\n#ifdef GL_ARB_sampler_objects\n  \"GL_ARB_sampler_objects\",\n#endif\n#ifdef GL_ARB_seamless_cube_map\n  \"GL_ARB_seamless_cube_map\",\n#endif\n#ifdef GL_ARB_seamless_cubemap_per_texture\n  \"GL_ARB_seamless_cubemap_per_texture\",\n#endif\n#ifdef GL_ARB_separate_shader_objects\n  \"GL_ARB_separate_shader_objects\",\n#endif\n#ifdef GL_ARB_shader_atomic_counter_ops\n  \"GL_ARB_shader_atomic_counter_ops\",\n#endif\n#ifdef GL_ARB_shader_atomic_counters\n  \"GL_ARB_shader_atomic_counters\",\n#endif\n#ifdef GL_ARB_shader_ballot\n  \"GL_ARB_shader_ballot\",\n#endif\n#ifdef GL_ARB_shader_bit_encoding\n  \"GL_ARB_shader_bit_encoding\",\n#endif\n#ifdef GL_ARB_shader_clock\n  \"GL_ARB_shader_clock\",\n#endif\n#ifdef GL_ARB_shader_draw_parameters\n  \"GL_ARB_shader_draw_parameters\",\n#endif\n#ifdef GL_ARB_shader_group_vote\n  \"GL_ARB_shader_group_vote\",\n#endif\n#ifdef GL_ARB_shader_image_load_store\n  \"GL_ARB_shader_image_load_store\",\n#endif\n#ifdef GL_ARB_shader_image_size\n  \"GL_ARB_shader_image_size\",\n#endif\n#ifdef GL_ARB_shader_objects\n  \"GL_ARB_shader_objects\",\n#endif\n#ifdef GL_ARB_shader_precision\n  \"GL_ARB_shader_precision\",\n#endif\n#ifdef GL_ARB_shader_stencil_export\n  \"GL_ARB_shader_stencil_export\",\n#endif\n#ifdef GL_ARB_shader_storage_buffer_object\n  \"GL_ARB_shader_storage_buffer_object\",\n#endif\n#ifdef GL_ARB_shader_subroutine\n  \"GL_ARB_shader_subroutine\",\n#endif\n#ifdef GL_ARB_shader_texture_image_samples\n  \"GL_ARB_shader_texture_image_samples\",\n#endif\n#ifdef GL_ARB_shader_texture_lod\n  \"GL_ARB_shader_texture_lod\",\n#endif\n#ifdef GL_ARB_shader_viewport_layer_array\n  \"GL_ARB_shader_viewport_layer_array\",\n#endif\n#ifdef GL_ARB_shading_language_100\n  \"GL_ARB_shading_language_100\",\n#endif\n#ifdef GL_ARB_shading_language_420pack\n  \"GL_ARB_shading_language_420pack\",\n#endif\n#ifdef GL_ARB_shading_language_include\n  \"GL_ARB_shading_language_include\",\n#endif\n#ifdef GL_ARB_shading_language_packing\n  \"GL_ARB_shading_language_packing\",\n#endif\n#ifdef GL_ARB_shadow\n  \"GL_ARB_shadow\",\n#endif\n#ifdef GL_ARB_shadow_ambient\n  \"GL_ARB_shadow_ambient\",\n#endif\n#ifdef GL_ARB_sparse_buffer\n  \"GL_ARB_sparse_buffer\",\n#endif\n#ifdef GL_ARB_sparse_texture\n  \"GL_ARB_sparse_texture\",\n#endif\n#ifdef GL_ARB_sparse_texture2\n  \"GL_ARB_sparse_texture2\",\n#endif\n#ifdef GL_ARB_sparse_texture_clamp\n  \"GL_ARB_sparse_texture_clamp\",\n#endif\n#ifdef GL_ARB_stencil_texturing\n  \"GL_ARB_stencil_texturing\",\n#endif\n#ifdef GL_ARB_sync\n  \"GL_ARB_sync\",\n#endif\n#ifdef GL_ARB_tessellation_shader\n  \"GL_ARB_tessellation_shader\",\n#endif\n#ifdef GL_ARB_texture_barrier\n  \"GL_ARB_texture_barrier\",\n#endif\n#ifdef GL_ARB_texture_border_clamp\n  \"GL_ARB_texture_border_clamp\",\n#endif\n#ifdef GL_ARB_texture_buffer_object\n  \"GL_ARB_texture_buffer_object\",\n#endif\n#ifdef GL_ARB_texture_buffer_object_rgb32\n  \"GL_ARB_texture_buffer_object_rgb32\",\n#endif\n#ifdef GL_ARB_texture_buffer_range\n  \"GL_ARB_texture_buffer_range\",\n#endif\n#ifdef GL_ARB_texture_compression\n  \"GL_ARB_texture_compression\",\n#endif\n#ifdef GL_ARB_texture_compression_bptc\n  \"GL_ARB_texture_compression_bptc\",\n#endif\n#ifdef GL_ARB_texture_compression_rgtc\n  \"GL_ARB_texture_compression_rgtc\",\n#endif\n#ifdef GL_ARB_texture_cube_map\n  \"GL_ARB_texture_cube_map\",\n#endif\n#ifdef GL_ARB_texture_cube_map_array\n  \"GL_ARB_texture_cube_map_array\",\n#endif\n#ifdef GL_ARB_texture_env_add\n  \"GL_ARB_texture_env_add\",\n#endif\n#ifdef GL_ARB_texture_env_combine\n  \"GL_ARB_texture_env_combine\",\n#endif\n#ifdef GL_ARB_texture_env_crossbar\n  \"GL_ARB_texture_env_crossbar\",\n#endif\n#ifdef GL_ARB_texture_env_dot3\n  \"GL_ARB_texture_env_dot3\",\n#endif\n#ifdef GL_ARB_texture_filter_minmax\n  \"GL_ARB_texture_filter_minmax\",\n#endif\n#ifdef GL_ARB_texture_float\n  \"GL_ARB_texture_float\",\n#endif\n#ifdef GL_ARB_texture_gather\n  \"GL_ARB_texture_gather\",\n#endif\n#ifdef GL_ARB_texture_mirror_clamp_to_edge\n  \"GL_ARB_texture_mirror_clamp_to_edge\",\n#endif\n#ifdef GL_ARB_texture_mirrored_repeat\n  \"GL_ARB_texture_mirrored_repeat\",\n#endif\n#ifdef GL_ARB_texture_multisample\n  \"GL_ARB_texture_multisample\",\n#endif\n#ifdef GL_ARB_texture_non_power_of_two\n  \"GL_ARB_texture_non_power_of_two\",\n#endif\n#ifdef GL_ARB_texture_query_levels\n  \"GL_ARB_texture_query_levels\",\n#endif\n#ifdef GL_ARB_texture_query_lod\n  \"GL_ARB_texture_query_lod\",\n#endif\n#ifdef GL_ARB_texture_rectangle\n  \"GL_ARB_texture_rectangle\",\n#endif\n#ifdef GL_ARB_texture_rg\n  \"GL_ARB_texture_rg\",\n#endif\n#ifdef GL_ARB_texture_rgb10_a2ui\n  \"GL_ARB_texture_rgb10_a2ui\",\n#endif\n#ifdef GL_ARB_texture_stencil8\n  \"GL_ARB_texture_stencil8\",\n#endif\n#ifdef GL_ARB_texture_storage\n  \"GL_ARB_texture_storage\",\n#endif\n#ifdef GL_ARB_texture_storage_multisample\n  \"GL_ARB_texture_storage_multisample\",\n#endif\n#ifdef GL_ARB_texture_swizzle\n  \"GL_ARB_texture_swizzle\",\n#endif\n#ifdef GL_ARB_texture_view\n  \"GL_ARB_texture_view\",\n#endif\n#ifdef GL_ARB_timer_query\n  \"GL_ARB_timer_query\",\n#endif\n#ifdef GL_ARB_transform_feedback2\n  \"GL_ARB_transform_feedback2\",\n#endif\n#ifdef GL_ARB_transform_feedback3\n  \"GL_ARB_transform_feedback3\",\n#endif\n#ifdef GL_ARB_transform_feedback_instanced\n  \"GL_ARB_transform_feedback_instanced\",\n#endif\n#ifdef GL_ARB_transform_feedback_overflow_query\n  \"GL_ARB_transform_feedback_overflow_query\",\n#endif\n#ifdef GL_ARB_transpose_matrix\n  \"GL_ARB_transpose_matrix\",\n#endif\n#ifdef GL_ARB_uniform_buffer_object\n  \"GL_ARB_uniform_buffer_object\",\n#endif\n#ifdef GL_ARB_vertex_array_bgra\n  \"GL_ARB_vertex_array_bgra\",\n#endif\n#ifdef GL_ARB_vertex_array_object\n  \"GL_ARB_vertex_array_object\",\n#endif\n#ifdef GL_ARB_vertex_attrib_64bit\n  \"GL_ARB_vertex_attrib_64bit\",\n#endif\n#ifdef GL_ARB_vertex_attrib_binding\n  \"GL_ARB_vertex_attrib_binding\",\n#endif\n#ifdef GL_ARB_vertex_blend\n  \"GL_ARB_vertex_blend\",\n#endif\n#ifdef GL_ARB_vertex_buffer_object\n  \"GL_ARB_vertex_buffer_object\",\n#endif\n#ifdef GL_ARB_vertex_program\n  \"GL_ARB_vertex_program\",\n#endif\n#ifdef GL_ARB_vertex_shader\n  \"GL_ARB_vertex_shader\",\n#endif\n#ifdef GL_ARB_vertex_type_10f_11f_11f_rev\n  \"GL_ARB_vertex_type_10f_11f_11f_rev\",\n#endif\n#ifdef GL_ARB_vertex_type_2_10_10_10_rev\n  \"GL_ARB_vertex_type_2_10_10_10_rev\",\n#endif\n#ifdef GL_ARB_viewport_array\n  \"GL_ARB_viewport_array\",\n#endif\n#ifdef GL_ARB_window_pos\n  \"GL_ARB_window_pos\",\n#endif\n#ifdef GL_ATIX_point_sprites\n  \"GL_ATIX_point_sprites\",\n#endif\n#ifdef GL_ATIX_texture_env_combine3\n  \"GL_ATIX_texture_env_combine3\",\n#endif\n#ifdef GL_ATIX_texture_env_route\n  \"GL_ATIX_texture_env_route\",\n#endif\n#ifdef GL_ATIX_vertex_shader_output_point_size\n  \"GL_ATIX_vertex_shader_output_point_size\",\n#endif\n#ifdef GL_ATI_draw_buffers\n  \"GL_ATI_draw_buffers\",\n#endif\n#ifdef GL_ATI_element_array\n  \"GL_ATI_element_array\",\n#endif\n#ifdef GL_ATI_envmap_bumpmap\n  \"GL_ATI_envmap_bumpmap\",\n#endif\n#ifdef GL_ATI_fragment_shader\n  \"GL_ATI_fragment_shader\",\n#endif\n#ifdef GL_ATI_map_object_buffer\n  \"GL_ATI_map_object_buffer\",\n#endif\n#ifdef GL_ATI_meminfo\n  \"GL_ATI_meminfo\",\n#endif\n#ifdef GL_ATI_pn_triangles\n  \"GL_ATI_pn_triangles\",\n#endif\n#ifdef GL_ATI_separate_stencil\n  \"GL_ATI_separate_stencil\",\n#endif\n#ifdef GL_ATI_shader_texture_lod\n  \"GL_ATI_shader_texture_lod\",\n#endif\n#ifdef GL_ATI_text_fragment_shader\n  \"GL_ATI_text_fragment_shader\",\n#endif\n#ifdef GL_ATI_texture_compression_3dc\n  \"GL_ATI_texture_compression_3dc\",\n#endif\n#ifdef GL_ATI_texture_env_combine3\n  \"GL_ATI_texture_env_combine3\",\n#endif\n#ifdef GL_ATI_texture_float\n  \"GL_ATI_texture_float\",\n#endif\n#ifdef GL_ATI_texture_mirror_once\n  \"GL_ATI_texture_mirror_once\",\n#endif\n#ifdef GL_ATI_vertex_array_object\n  \"GL_ATI_vertex_array_object\",\n#endif\n#ifdef GL_ATI_vertex_attrib_array_object\n  \"GL_ATI_vertex_attrib_array_object\",\n#endif\n#ifdef GL_ATI_vertex_streams\n  \"GL_ATI_vertex_streams\",\n#endif\n#ifdef GL_EGL_NV_robustness_video_memory_purge\n  \"GL_EGL_NV_robustness_video_memory_purge\",\n#endif\n#ifdef GL_EXT_422_pixels\n  \"GL_EXT_422_pixels\",\n#endif\n#ifdef GL_EXT_Cg_shader\n  \"GL_EXT_Cg_shader\",\n#endif\n#ifdef GL_EXT_abgr\n  \"GL_EXT_abgr\",\n#endif\n#ifdef GL_EXT_bgra\n  \"GL_EXT_bgra\",\n#endif\n#ifdef GL_EXT_bindable_uniform\n  \"GL_EXT_bindable_uniform\",\n#endif\n#ifdef GL_EXT_blend_color\n  \"GL_EXT_blend_color\",\n#endif\n#ifdef GL_EXT_blend_equation_separate\n  \"GL_EXT_blend_equation_separate\",\n#endif\n#ifdef GL_EXT_blend_func_separate\n  \"GL_EXT_blend_func_separate\",\n#endif\n#ifdef GL_EXT_blend_logic_op\n  \"GL_EXT_blend_logic_op\",\n#endif\n#ifdef GL_EXT_blend_minmax\n  \"GL_EXT_blend_minmax\",\n#endif\n#ifdef GL_EXT_blend_subtract\n  \"GL_EXT_blend_subtract\",\n#endif\n#ifdef GL_EXT_clip_volume_hint\n  \"GL_EXT_clip_volume_hint\",\n#endif\n#ifdef GL_EXT_cmyka\n  \"GL_EXT_cmyka\",\n#endif\n#ifdef GL_EXT_color_subtable\n  \"GL_EXT_color_subtable\",\n#endif\n#ifdef GL_EXT_compiled_vertex_array\n  \"GL_EXT_compiled_vertex_array\",\n#endif\n#ifdef GL_EXT_convolution\n  \"GL_EXT_convolution\",\n#endif\n#ifdef GL_EXT_coordinate_frame\n  \"GL_EXT_coordinate_frame\",\n#endif\n#ifdef GL_EXT_copy_texture\n  \"GL_EXT_copy_texture\",\n#endif\n#ifdef GL_EXT_cull_vertex\n  \"GL_EXT_cull_vertex\",\n#endif\n#ifdef GL_EXT_debug_label\n  \"GL_EXT_debug_label\",\n#endif\n#ifdef GL_EXT_debug_marker\n  \"GL_EXT_debug_marker\",\n#endif\n#ifdef GL_EXT_depth_bounds_test\n  \"GL_EXT_depth_bounds_test\",\n#endif\n#ifdef GL_EXT_direct_state_access\n  \"GL_EXT_direct_state_access\",\n#endif\n#ifdef GL_EXT_draw_buffers2\n  \"GL_EXT_draw_buffers2\",\n#endif\n#ifdef GL_EXT_draw_instanced\n  \"GL_EXT_draw_instanced\",\n#endif\n#ifdef GL_EXT_draw_range_elements\n  \"GL_EXT_draw_range_elements\",\n#endif\n#ifdef GL_EXT_fog_coord\n  \"GL_EXT_fog_coord\",\n#endif\n#ifdef GL_EXT_fragment_lighting\n  \"GL_EXT_fragment_lighting\",\n#endif\n#ifdef GL_EXT_framebuffer_blit\n  \"GL_EXT_framebuffer_blit\",\n#endif\n#ifdef GL_EXT_framebuffer_multisample\n  \"GL_EXT_framebuffer_multisample\",\n#endif\n#ifdef GL_EXT_framebuffer_multisample_blit_scaled\n  \"GL_EXT_framebuffer_multisample_blit_scaled\",\n#endif\n#ifdef GL_EXT_framebuffer_object\n  \"GL_EXT_framebuffer_object\",\n#endif\n#ifdef GL_EXT_framebuffer_sRGB\n  \"GL_EXT_framebuffer_sRGB\",\n#endif\n#ifdef GL_EXT_geometry_shader4\n  \"GL_EXT_geometry_shader4\",\n#endif\n#ifdef GL_EXT_gpu_program_parameters\n  \"GL_EXT_gpu_program_parameters\",\n#endif\n#ifdef GL_EXT_gpu_shader4\n  \"GL_EXT_gpu_shader4\",\n#endif\n#ifdef GL_EXT_histogram\n  \"GL_EXT_histogram\",\n#endif\n#ifdef GL_EXT_index_array_formats\n  \"GL_EXT_index_array_formats\",\n#endif\n#ifdef GL_EXT_index_func\n  \"GL_EXT_index_func\",\n#endif\n#ifdef GL_EXT_index_material\n  \"GL_EXT_index_material\",\n#endif\n#ifdef GL_EXT_index_texture\n  \"GL_EXT_index_texture\",\n#endif\n#ifdef GL_EXT_light_texture\n  \"GL_EXT_light_texture\",\n#endif\n#ifdef GL_EXT_misc_attribute\n  \"GL_EXT_misc_attribute\",\n#endif\n#ifdef GL_EXT_multi_draw_arrays\n  \"GL_EXT_multi_draw_arrays\",\n#endif\n#ifdef GL_EXT_multisample\n  \"GL_EXT_multisample\",\n#endif\n#ifdef GL_EXT_packed_depth_stencil\n  \"GL_EXT_packed_depth_stencil\",\n#endif\n#ifdef GL_EXT_packed_float\n  \"GL_EXT_packed_float\",\n#endif\n#ifdef GL_EXT_packed_pixels\n  \"GL_EXT_packed_pixels\",\n#endif\n#ifdef GL_EXT_paletted_texture\n  \"GL_EXT_paletted_texture\",\n#endif\n#ifdef GL_EXT_pixel_buffer_object\n  \"GL_EXT_pixel_buffer_object\",\n#endif\n#ifdef GL_EXT_pixel_transform\n  \"GL_EXT_pixel_transform\",\n#endif\n#ifdef GL_EXT_pixel_transform_color_table\n  \"GL_EXT_pixel_transform_color_table\",\n#endif\n#ifdef GL_EXT_point_parameters\n  \"GL_EXT_point_parameters\",\n#endif\n#ifdef GL_EXT_polygon_offset\n  \"GL_EXT_polygon_offset\",\n#endif\n#ifdef GL_EXT_polygon_offset_clamp\n  \"GL_EXT_polygon_offset_clamp\",\n#endif\n#ifdef GL_EXT_post_depth_coverage\n  \"GL_EXT_post_depth_coverage\",\n#endif\n#ifdef GL_EXT_provoking_vertex\n  \"GL_EXT_provoking_vertex\",\n#endif\n#ifdef GL_EXT_raster_multisample\n  \"GL_EXT_raster_multisample\",\n#endif\n#ifdef GL_EXT_rescale_normal\n  \"GL_EXT_rescale_normal\",\n#endif\n#ifdef GL_EXT_scene_marker\n  \"GL_EXT_scene_marker\",\n#endif\n#ifdef GL_EXT_secondary_color\n  \"GL_EXT_secondary_color\",\n#endif\n#ifdef GL_EXT_separate_shader_objects\n  \"GL_EXT_separate_shader_objects\",\n#endif\n#ifdef GL_EXT_separate_specular_color\n  \"GL_EXT_separate_specular_color\",\n#endif\n#ifdef GL_EXT_shader_image_load_formatted\n  \"GL_EXT_shader_image_load_formatted\",\n#endif\n#ifdef GL_EXT_shader_image_load_store\n  \"GL_EXT_shader_image_load_store\",\n#endif\n#ifdef GL_EXT_shader_integer_mix\n  \"GL_EXT_shader_integer_mix\",\n#endif\n#ifdef GL_EXT_shadow_funcs\n  \"GL_EXT_shadow_funcs\",\n#endif\n#ifdef GL_EXT_shared_texture_palette\n  \"GL_EXT_shared_texture_palette\",\n#endif\n#ifdef GL_EXT_sparse_texture2\n  \"GL_EXT_sparse_texture2\",\n#endif\n#ifdef GL_EXT_stencil_clear_tag\n  \"GL_EXT_stencil_clear_tag\",\n#endif\n#ifdef GL_EXT_stencil_two_side\n  \"GL_EXT_stencil_two_side\",\n#endif\n#ifdef GL_EXT_stencil_wrap\n  \"GL_EXT_stencil_wrap\",\n#endif\n#ifdef GL_EXT_subtexture\n  \"GL_EXT_subtexture\",\n#endif\n#ifdef GL_EXT_texture\n  \"GL_EXT_texture\",\n#endif\n#ifdef GL_EXT_texture3D\n  \"GL_EXT_texture3D\",\n#endif\n#ifdef GL_EXT_texture_array\n  \"GL_EXT_texture_array\",\n#endif\n#ifdef GL_EXT_texture_buffer_object\n  \"GL_EXT_texture_buffer_object\",\n#endif\n#ifdef GL_EXT_texture_compression_dxt1\n  \"GL_EXT_texture_compression_dxt1\",\n#endif\n#ifdef GL_EXT_texture_compression_latc\n  \"GL_EXT_texture_compression_latc\",\n#endif\n#ifdef GL_EXT_texture_compression_rgtc\n  \"GL_EXT_texture_compression_rgtc\",\n#endif\n#ifdef GL_EXT_texture_compression_s3tc\n  \"GL_EXT_texture_compression_s3tc\",\n#endif\n#ifdef GL_EXT_texture_cube_map\n  \"GL_EXT_texture_cube_map\",\n#endif\n#ifdef GL_EXT_texture_edge_clamp\n  \"GL_EXT_texture_edge_clamp\",\n#endif\n#ifdef GL_EXT_texture_env\n  \"GL_EXT_texture_env\",\n#endif\n#ifdef GL_EXT_texture_env_add\n  \"GL_EXT_texture_env_add\",\n#endif\n#ifdef GL_EXT_texture_env_combine\n  \"GL_EXT_texture_env_combine\",\n#endif\n#ifdef GL_EXT_texture_env_dot3\n  \"GL_EXT_texture_env_dot3\",\n#endif\n#ifdef GL_EXT_texture_filter_anisotropic\n  \"GL_EXT_texture_filter_anisotropic\",\n#endif\n#ifdef GL_EXT_texture_filter_minmax\n  \"GL_EXT_texture_filter_minmax\",\n#endif\n#ifdef GL_EXT_texture_integer\n  \"GL_EXT_texture_integer\",\n#endif\n#ifdef GL_EXT_texture_lod_bias\n  \"GL_EXT_texture_lod_bias\",\n#endif\n#ifdef GL_EXT_texture_mirror_clamp\n  \"GL_EXT_texture_mirror_clamp\",\n#endif\n#ifdef GL_EXT_texture_object\n  \"GL_EXT_texture_object\",\n#endif\n#ifdef GL_EXT_texture_perturb_normal\n  \"GL_EXT_texture_perturb_normal\",\n#endif\n#ifdef GL_EXT_texture_rectangle\n  \"GL_EXT_texture_rectangle\",\n#endif\n#ifdef GL_EXT_texture_sRGB\n  \"GL_EXT_texture_sRGB\",\n#endif\n#ifdef GL_EXT_texture_sRGB_decode\n  \"GL_EXT_texture_sRGB_decode\",\n#endif\n#ifdef GL_EXT_texture_shared_exponent\n  \"GL_EXT_texture_shared_exponent\",\n#endif\n#ifdef GL_EXT_texture_snorm\n  \"GL_EXT_texture_snorm\",\n#endif\n#ifdef GL_EXT_texture_swizzle\n  \"GL_EXT_texture_swizzle\",\n#endif\n#ifdef GL_EXT_timer_query\n  \"GL_EXT_timer_query\",\n#endif\n#ifdef GL_EXT_transform_feedback\n  \"GL_EXT_transform_feedback\",\n#endif\n#ifdef GL_EXT_vertex_array\n  \"GL_EXT_vertex_array\",\n#endif\n#ifdef GL_EXT_vertex_array_bgra\n  \"GL_EXT_vertex_array_bgra\",\n#endif\n#ifdef GL_EXT_vertex_attrib_64bit\n  \"GL_EXT_vertex_attrib_64bit\",\n#endif\n#ifdef GL_EXT_vertex_shader\n  \"GL_EXT_vertex_shader\",\n#endif\n#ifdef GL_EXT_vertex_weighting\n  \"GL_EXT_vertex_weighting\",\n#endif\n#ifdef GL_EXT_window_rectangles\n  \"GL_EXT_window_rectangles\",\n#endif\n#ifdef GL_EXT_x11_sync_object\n  \"GL_EXT_x11_sync_object\",\n#endif\n#ifdef GL_GREMEDY_frame_terminator\n  \"GL_GREMEDY_frame_terminator\",\n#endif\n#ifdef GL_GREMEDY_string_marker\n  \"GL_GREMEDY_string_marker\",\n#endif\n#ifdef GL_HP_convolution_border_modes\n  \"GL_HP_convolution_border_modes\",\n#endif\n#ifdef GL_HP_image_transform\n  \"GL_HP_image_transform\",\n#endif\n#ifdef GL_HP_occlusion_test\n  \"GL_HP_occlusion_test\",\n#endif\n#ifdef GL_HP_texture_lighting\n  \"GL_HP_texture_lighting\",\n#endif\n#ifdef GL_IBM_cull_vertex\n  \"GL_IBM_cull_vertex\",\n#endif\n#ifdef GL_IBM_multimode_draw_arrays\n  \"GL_IBM_multimode_draw_arrays\",\n#endif\n#ifdef GL_IBM_rasterpos_clip\n  \"GL_IBM_rasterpos_clip\",\n#endif\n#ifdef GL_IBM_static_data\n  \"GL_IBM_static_data\",\n#endif\n#ifdef GL_IBM_texture_mirrored_repeat\n  \"GL_IBM_texture_mirrored_repeat\",\n#endif\n#ifdef GL_IBM_vertex_array_lists\n  \"GL_IBM_vertex_array_lists\",\n#endif\n#ifdef GL_INGR_color_clamp\n  \"GL_INGR_color_clamp\",\n#endif\n#ifdef GL_INGR_interlace_read\n  \"GL_INGR_interlace_read\",\n#endif\n#ifdef GL_INTEL_conservative_rasterization\n  \"GL_INTEL_conservative_rasterization\",\n#endif\n#ifdef GL_INTEL_fragment_shader_ordering\n  \"GL_INTEL_fragment_shader_ordering\",\n#endif\n#ifdef GL_INTEL_framebuffer_CMAA\n  \"GL_INTEL_framebuffer_CMAA\",\n#endif\n#ifdef GL_INTEL_map_texture\n  \"GL_INTEL_map_texture\",\n#endif\n#ifdef GL_INTEL_parallel_arrays\n  \"GL_INTEL_parallel_arrays\",\n#endif\n#ifdef GL_INTEL_performance_query\n  \"GL_INTEL_performance_query\",\n#endif\n#ifdef GL_INTEL_texture_scissor\n  \"GL_INTEL_texture_scissor\",\n#endif\n#ifdef GL_KHR_blend_equation_advanced\n  \"GL_KHR_blend_equation_advanced\",\n#endif\n#ifdef GL_KHR_blend_equation_advanced_coherent\n  \"GL_KHR_blend_equation_advanced_coherent\",\n#endif\n#ifdef GL_KHR_context_flush_control\n  \"GL_KHR_context_flush_control\",\n#endif\n#ifdef GL_KHR_debug\n  \"GL_KHR_debug\",\n#endif\n#ifdef GL_KHR_no_error\n  \"GL_KHR_no_error\",\n#endif\n#ifdef GL_KHR_robust_buffer_access_behavior\n  \"GL_KHR_robust_buffer_access_behavior\",\n#endif\n#ifdef GL_KHR_robustness\n  \"GL_KHR_robustness\",\n#endif\n#ifdef GL_KHR_texture_compression_astc_hdr\n  \"GL_KHR_texture_compression_astc_hdr\",\n#endif\n#ifdef GL_KHR_texture_compression_astc_ldr\n  \"GL_KHR_texture_compression_astc_ldr\",\n#endif\n#ifdef GL_KHR_texture_compression_astc_sliced_3d\n  \"GL_KHR_texture_compression_astc_sliced_3d\",\n#endif\n#ifdef GL_KTX_buffer_region\n  \"GL_KTX_buffer_region\",\n#endif\n#ifdef GL_MESAX_texture_stack\n  \"GL_MESAX_texture_stack\",\n#endif\n#ifdef GL_MESA_pack_invert\n  \"GL_MESA_pack_invert\",\n#endif\n#ifdef GL_MESA_resize_buffers\n  \"GL_MESA_resize_buffers\",\n#endif\n#ifdef GL_MESA_shader_integer_functions\n  \"GL_MESA_shader_integer_functions\",\n#endif\n#ifdef GL_MESA_window_pos\n  \"GL_MESA_window_pos\",\n#endif\n#ifdef GL_MESA_ycbcr_texture\n  \"GL_MESA_ycbcr_texture\",\n#endif\n#ifdef GL_NVX_blend_equation_advanced_multi_draw_buffers\n  \"GL_NVX_blend_equation_advanced_multi_draw_buffers\",\n#endif\n#ifdef GL_NVX_conditional_render\n  \"GL_NVX_conditional_render\",\n#endif\n#ifdef GL_NVX_gpu_memory_info\n  \"GL_NVX_gpu_memory_info\",\n#endif\n#ifdef GL_NVX_linked_gpu_multicast\n  \"GL_NVX_linked_gpu_multicast\",\n#endif\n#ifdef GL_NV_bindless_multi_draw_indirect\n  \"GL_NV_bindless_multi_draw_indirect\",\n#endif\n#ifdef GL_NV_bindless_multi_draw_indirect_count\n  \"GL_NV_bindless_multi_draw_indirect_count\",\n#endif\n#ifdef GL_NV_bindless_texture\n  \"GL_NV_bindless_texture\",\n#endif\n#ifdef GL_NV_blend_equation_advanced\n  \"GL_NV_blend_equation_advanced\",\n#endif\n#ifdef GL_NV_blend_equation_advanced_coherent\n  \"GL_NV_blend_equation_advanced_coherent\",\n#endif\n#ifdef GL_NV_blend_square\n  \"GL_NV_blend_square\",\n#endif\n#ifdef GL_NV_clip_space_w_scaling\n  \"GL_NV_clip_space_w_scaling\",\n#endif\n#ifdef GL_NV_command_list\n  \"GL_NV_command_list\",\n#endif\n#ifdef GL_NV_compute_program5\n  \"GL_NV_compute_program5\",\n#endif\n#ifdef GL_NV_conditional_render\n  \"GL_NV_conditional_render\",\n#endif\n#ifdef GL_NV_conservative_raster\n  \"GL_NV_conservative_raster\",\n#endif\n#ifdef GL_NV_conservative_raster_dilate\n  \"GL_NV_conservative_raster_dilate\",\n#endif\n#ifdef GL_NV_conservative_raster_pre_snap_triangles\n  \"GL_NV_conservative_raster_pre_snap_triangles\",\n#endif\n#ifdef GL_NV_copy_depth_to_color\n  \"GL_NV_copy_depth_to_color\",\n#endif\n#ifdef GL_NV_copy_image\n  \"GL_NV_copy_image\",\n#endif\n#ifdef GL_NV_deep_texture3D\n  \"GL_NV_deep_texture3D\",\n#endif\n#ifdef GL_NV_depth_buffer_float\n  \"GL_NV_depth_buffer_float\",\n#endif\n#ifdef GL_NV_depth_clamp\n  \"GL_NV_depth_clamp\",\n#endif\n#ifdef GL_NV_depth_range_unclamped\n  \"GL_NV_depth_range_unclamped\",\n#endif\n#ifdef GL_NV_draw_texture\n  \"GL_NV_draw_texture\",\n#endif\n#ifdef GL_NV_draw_vulkan_image\n  \"GL_NV_draw_vulkan_image\",\n#endif\n#ifdef GL_NV_evaluators\n  \"GL_NV_evaluators\",\n#endif\n#ifdef GL_NV_explicit_multisample\n  \"GL_NV_explicit_multisample\",\n#endif\n#ifdef GL_NV_fence\n  \"GL_NV_fence\",\n#endif\n#ifdef GL_NV_fill_rectangle\n  \"GL_NV_fill_rectangle\",\n#endif\n#ifdef GL_NV_float_buffer\n  \"GL_NV_float_buffer\",\n#endif\n#ifdef GL_NV_fog_distance\n  \"GL_NV_fog_distance\",\n#endif\n#ifdef GL_NV_fragment_coverage_to_color\n  \"GL_NV_fragment_coverage_to_color\",\n#endif\n#ifdef GL_NV_fragment_program\n  \"GL_NV_fragment_program\",\n#endif\n#ifdef GL_NV_fragment_program2\n  \"GL_NV_fragment_program2\",\n#endif\n#ifdef GL_NV_fragment_program4\n  \"GL_NV_fragment_program4\",\n#endif\n#ifdef GL_NV_fragment_program_option\n  \"GL_NV_fragment_program_option\",\n#endif\n#ifdef GL_NV_fragment_shader_interlock\n  \"GL_NV_fragment_shader_interlock\",\n#endif\n#ifdef GL_NV_framebuffer_mixed_samples\n  \"GL_NV_framebuffer_mixed_samples\",\n#endif\n#ifdef GL_NV_framebuffer_multisample_coverage\n  \"GL_NV_framebuffer_multisample_coverage\",\n#endif\n#ifdef GL_NV_geometry_program4\n  \"GL_NV_geometry_program4\",\n#endif\n#ifdef GL_NV_geometry_shader4\n  \"GL_NV_geometry_shader4\",\n#endif\n#ifdef GL_NV_geometry_shader_passthrough\n  \"GL_NV_geometry_shader_passthrough\",\n#endif\n#ifdef GL_NV_gpu_multicast\n  \"GL_NV_gpu_multicast\",\n#endif\n#ifdef GL_NV_gpu_program4\n  \"GL_NV_gpu_program4\",\n#endif\n#ifdef GL_NV_gpu_program5\n  \"GL_NV_gpu_program5\",\n#endif\n#ifdef GL_NV_gpu_program5_mem_extended\n  \"GL_NV_gpu_program5_mem_extended\",\n#endif\n#ifdef GL_NV_gpu_program_fp64\n  \"GL_NV_gpu_program_fp64\",\n#endif\n#ifdef GL_NV_gpu_shader5\n  \"GL_NV_gpu_shader5\",\n#endif\n#ifdef GL_NV_half_float\n  \"GL_NV_half_float\",\n#endif\n#ifdef GL_NV_internalformat_sample_query\n  \"GL_NV_internalformat_sample_query\",\n#endif\n#ifdef GL_NV_light_max_exponent\n  \"GL_NV_light_max_exponent\",\n#endif\n#ifdef GL_NV_multisample_coverage\n  \"GL_NV_multisample_coverage\",\n#endif\n#ifdef GL_NV_multisample_filter_hint\n  \"GL_NV_multisample_filter_hint\",\n#endif\n#ifdef GL_NV_occlusion_query\n  \"GL_NV_occlusion_query\",\n#endif\n#ifdef GL_NV_packed_depth_stencil\n  \"GL_NV_packed_depth_stencil\",\n#endif\n#ifdef GL_NV_parameter_buffer_object\n  \"GL_NV_parameter_buffer_object\",\n#endif\n#ifdef GL_NV_parameter_buffer_object2\n  \"GL_NV_parameter_buffer_object2\",\n#endif\n#ifdef GL_NV_path_rendering\n  \"GL_NV_path_rendering\",\n#endif\n#ifdef GL_NV_path_rendering_shared_edge\n  \"GL_NV_path_rendering_shared_edge\",\n#endif\n#ifdef GL_NV_pixel_data_range\n  \"GL_NV_pixel_data_range\",\n#endif\n#ifdef GL_NV_point_sprite\n  \"GL_NV_point_sprite\",\n#endif\n#ifdef GL_NV_present_video\n  \"GL_NV_present_video\",\n#endif\n#ifdef GL_NV_primitive_restart\n  \"GL_NV_primitive_restart\",\n#endif\n#ifdef GL_NV_register_combiners\n  \"GL_NV_register_combiners\",\n#endif\n#ifdef GL_NV_register_combiners2\n  \"GL_NV_register_combiners2\",\n#endif\n#ifdef GL_NV_robustness_video_memory_purge\n  \"GL_NV_robustness_video_memory_purge\",\n#endif\n#ifdef GL_NV_sample_locations\n  \"GL_NV_sample_locations\",\n#endif\n#ifdef GL_NV_sample_mask_override_coverage\n  \"GL_NV_sample_mask_override_coverage\",\n#endif\n#ifdef GL_NV_shader_atomic_counters\n  \"GL_NV_shader_atomic_counters\",\n#endif\n#ifdef GL_NV_shader_atomic_float\n  \"GL_NV_shader_atomic_float\",\n#endif\n#ifdef GL_NV_shader_atomic_float64\n  \"GL_NV_shader_atomic_float64\",\n#endif\n#ifdef GL_NV_shader_atomic_fp16_vector\n  \"GL_NV_shader_atomic_fp16_vector\",\n#endif\n#ifdef GL_NV_shader_atomic_int64\n  \"GL_NV_shader_atomic_int64\",\n#endif\n#ifdef GL_NV_shader_buffer_load\n  \"GL_NV_shader_buffer_load\",\n#endif\n#ifdef GL_NV_shader_storage_buffer_object\n  \"GL_NV_shader_storage_buffer_object\",\n#endif\n#ifdef GL_NV_shader_thread_group\n  \"GL_NV_shader_thread_group\",\n#endif\n#ifdef GL_NV_shader_thread_shuffle\n  \"GL_NV_shader_thread_shuffle\",\n#endif\n#ifdef GL_NV_stereo_view_rendering\n  \"GL_NV_stereo_view_rendering\",\n#endif\n#ifdef GL_NV_tessellation_program5\n  \"GL_NV_tessellation_program5\",\n#endif\n#ifdef GL_NV_texgen_emboss\n  \"GL_NV_texgen_emboss\",\n#endif\n#ifdef GL_NV_texgen_reflection\n  \"GL_NV_texgen_reflection\",\n#endif\n#ifdef GL_NV_texture_barrier\n  \"GL_NV_texture_barrier\",\n#endif\n#ifdef GL_NV_texture_compression_vtc\n  \"GL_NV_texture_compression_vtc\",\n#endif\n#ifdef GL_NV_texture_env_combine4\n  \"GL_NV_texture_env_combine4\",\n#endif\n#ifdef GL_NV_texture_expand_normal\n  \"GL_NV_texture_expand_normal\",\n#endif\n#ifdef GL_NV_texture_multisample\n  \"GL_NV_texture_multisample\",\n#endif\n#ifdef GL_NV_texture_rectangle\n  \"GL_NV_texture_rectangle\",\n#endif\n#ifdef GL_NV_texture_shader\n  \"GL_NV_texture_shader\",\n#endif\n#ifdef GL_NV_texture_shader2\n  \"GL_NV_texture_shader2\",\n#endif\n#ifdef GL_NV_texture_shader3\n  \"GL_NV_texture_shader3\",\n#endif\n#ifdef GL_NV_transform_feedback\n  \"GL_NV_transform_feedback\",\n#endif\n#ifdef GL_NV_transform_feedback2\n  \"GL_NV_transform_feedback2\",\n#endif\n#ifdef GL_NV_uniform_buffer_unified_memory\n  \"GL_NV_uniform_buffer_unified_memory\",\n#endif\n#ifdef GL_NV_vdpau_interop\n  \"GL_NV_vdpau_interop\",\n#endif\n#ifdef GL_NV_vertex_array_range\n  \"GL_NV_vertex_array_range\",\n#endif\n#ifdef GL_NV_vertex_array_range2\n  \"GL_NV_vertex_array_range2\",\n#endif\n#ifdef GL_NV_vertex_attrib_integer_64bit\n  \"GL_NV_vertex_attrib_integer_64bit\",\n#endif\n#ifdef GL_NV_vertex_buffer_unified_memory\n  \"GL_NV_vertex_buffer_unified_memory\",\n#endif\n#ifdef GL_NV_vertex_program\n  \"GL_NV_vertex_program\",\n#endif\n#ifdef GL_NV_vertex_program1_1\n  \"GL_NV_vertex_program1_1\",\n#endif\n#ifdef GL_NV_vertex_program2\n  \"GL_NV_vertex_program2\",\n#endif\n#ifdef GL_NV_vertex_program2_option\n  \"GL_NV_vertex_program2_option\",\n#endif\n#ifdef GL_NV_vertex_program3\n  \"GL_NV_vertex_program3\",\n#endif\n#ifdef GL_NV_vertex_program4\n  \"GL_NV_vertex_program4\",\n#endif\n#ifdef GL_NV_video_capture\n  \"GL_NV_video_capture\",\n#endif\n#ifdef GL_NV_viewport_array2\n  \"GL_NV_viewport_array2\",\n#endif\n#ifdef GL_NV_viewport_swizzle\n  \"GL_NV_viewport_swizzle\",\n#endif\n#ifdef GL_OES_byte_coordinates\n  \"GL_OES_byte_coordinates\",\n#endif\n#ifdef GL_OES_compressed_paletted_texture\n  \"GL_OES_compressed_paletted_texture\",\n#endif\n#ifdef GL_OES_read_format\n  \"GL_OES_read_format\",\n#endif\n#ifdef GL_OES_single_precision\n  \"GL_OES_single_precision\",\n#endif\n#ifdef GL_OML_interlace\n  \"GL_OML_interlace\",\n#endif\n#ifdef GL_OML_resample\n  \"GL_OML_resample\",\n#endif\n#ifdef GL_OML_subsample\n  \"GL_OML_subsample\",\n#endif\n#ifdef GL_OVR_multiview\n  \"GL_OVR_multiview\",\n#endif\n#ifdef GL_OVR_multiview2\n  \"GL_OVR_multiview2\",\n#endif\n#ifdef GL_PGI_misc_hints\n  \"GL_PGI_misc_hints\",\n#endif\n#ifdef GL_PGI_vertex_hints\n  \"GL_PGI_vertex_hints\",\n#endif\n#ifdef GL_REGAL_ES1_0_compatibility\n  \"GL_REGAL_ES1_0_compatibility\",\n#endif\n#ifdef GL_REGAL_ES1_1_compatibility\n  \"GL_REGAL_ES1_1_compatibility\",\n#endif\n#ifdef GL_REGAL_enable\n  \"GL_REGAL_enable\",\n#endif\n#ifdef GL_REGAL_error_string\n  \"GL_REGAL_error_string\",\n#endif\n#ifdef GL_REGAL_extension_query\n  \"GL_REGAL_extension_query\",\n#endif\n#ifdef GL_REGAL_log\n  \"GL_REGAL_log\",\n#endif\n#ifdef GL_REGAL_proc_address\n  \"GL_REGAL_proc_address\",\n#endif\n#ifdef GL_REND_screen_coordinates\n  \"GL_REND_screen_coordinates\",\n#endif\n#ifdef GL_S3_s3tc\n  \"GL_S3_s3tc\",\n#endif\n#ifdef GL_SGIS_color_range\n  \"GL_SGIS_color_range\",\n#endif\n#ifdef GL_SGIS_detail_texture\n  \"GL_SGIS_detail_texture\",\n#endif\n#ifdef GL_SGIS_fog_function\n  \"GL_SGIS_fog_function\",\n#endif\n#ifdef GL_SGIS_generate_mipmap\n  \"GL_SGIS_generate_mipmap\",\n#endif\n#ifdef GL_SGIS_multisample\n  \"GL_SGIS_multisample\",\n#endif\n#ifdef GL_SGIS_pixel_texture\n  \"GL_SGIS_pixel_texture\",\n#endif\n#ifdef GL_SGIS_point_line_texgen\n  \"GL_SGIS_point_line_texgen\",\n#endif\n#ifdef GL_SGIS_sharpen_texture\n  \"GL_SGIS_sharpen_texture\",\n#endif\n#ifdef GL_SGIS_texture4D\n  \"GL_SGIS_texture4D\",\n#endif\n#ifdef GL_SGIS_texture_border_clamp\n  \"GL_SGIS_texture_border_clamp\",\n#endif\n#ifdef GL_SGIS_texture_edge_clamp\n  \"GL_SGIS_texture_edge_clamp\",\n#endif\n#ifdef GL_SGIS_texture_filter4\n  \"GL_SGIS_texture_filter4\",\n#endif\n#ifdef GL_SGIS_texture_lod\n  \"GL_SGIS_texture_lod\",\n#endif\n#ifdef GL_SGIS_texture_select\n  \"GL_SGIS_texture_select\",\n#endif\n#ifdef GL_SGIX_async\n  \"GL_SGIX_async\",\n#endif\n#ifdef GL_SGIX_async_histogram\n  \"GL_SGIX_async_histogram\",\n#endif\n#ifdef GL_SGIX_async_pixel\n  \"GL_SGIX_async_pixel\",\n#endif\n#ifdef GL_SGIX_blend_alpha_minmax\n  \"GL_SGIX_blend_alpha_minmax\",\n#endif\n#ifdef GL_SGIX_clipmap\n  \"GL_SGIX_clipmap\",\n#endif\n#ifdef GL_SGIX_convolution_accuracy\n  \"GL_SGIX_convolution_accuracy\",\n#endif\n#ifdef GL_SGIX_depth_texture\n  \"GL_SGIX_depth_texture\",\n#endif\n#ifdef GL_SGIX_flush_raster\n  \"GL_SGIX_flush_raster\",\n#endif\n#ifdef GL_SGIX_fog_offset\n  \"GL_SGIX_fog_offset\",\n#endif\n#ifdef GL_SGIX_fog_texture\n  \"GL_SGIX_fog_texture\",\n#endif\n#ifdef GL_SGIX_fragment_specular_lighting\n  \"GL_SGIX_fragment_specular_lighting\",\n#endif\n#ifdef GL_SGIX_framezoom\n  \"GL_SGIX_framezoom\",\n#endif\n#ifdef GL_SGIX_interlace\n  \"GL_SGIX_interlace\",\n#endif\n#ifdef GL_SGIX_ir_instrument1\n  \"GL_SGIX_ir_instrument1\",\n#endif\n#ifdef GL_SGIX_list_priority\n  \"GL_SGIX_list_priority\",\n#endif\n#ifdef GL_SGIX_pixel_texture\n  \"GL_SGIX_pixel_texture\",\n#endif\n#ifdef GL_SGIX_pixel_texture_bits\n  \"GL_SGIX_pixel_texture_bits\",\n#endif\n#ifdef GL_SGIX_reference_plane\n  \"GL_SGIX_reference_plane\",\n#endif\n#ifdef GL_SGIX_resample\n  \"GL_SGIX_resample\",\n#endif\n#ifdef GL_SGIX_shadow\n  \"GL_SGIX_shadow\",\n#endif\n#ifdef GL_SGIX_shadow_ambient\n  \"GL_SGIX_shadow_ambient\",\n#endif\n#ifdef GL_SGIX_sprite\n  \"GL_SGIX_sprite\",\n#endif\n#ifdef GL_SGIX_tag_sample_buffer\n  \"GL_SGIX_tag_sample_buffer\",\n#endif\n#ifdef GL_SGIX_texture_add_env\n  \"GL_SGIX_texture_add_env\",\n#endif\n#ifdef GL_SGIX_texture_coordinate_clamp\n  \"GL_SGIX_texture_coordinate_clamp\",\n#endif\n#ifdef GL_SGIX_texture_lod_bias\n  \"GL_SGIX_texture_lod_bias\",\n#endif\n#ifdef GL_SGIX_texture_multi_buffer\n  \"GL_SGIX_texture_multi_buffer\",\n#endif\n#ifdef GL_SGIX_texture_range\n  \"GL_SGIX_texture_range\",\n#endif\n#ifdef GL_SGIX_texture_scale_bias\n  \"GL_SGIX_texture_scale_bias\",\n#endif\n#ifdef GL_SGIX_vertex_preclip\n  \"GL_SGIX_vertex_preclip\",\n#endif\n#ifdef GL_SGIX_vertex_preclip_hint\n  \"GL_SGIX_vertex_preclip_hint\",\n#endif\n#ifdef GL_SGIX_ycrcb\n  \"GL_SGIX_ycrcb\",\n#endif\n#ifdef GL_SGI_color_matrix\n  \"GL_SGI_color_matrix\",\n#endif\n#ifdef GL_SGI_color_table\n  \"GL_SGI_color_table\",\n#endif\n#ifdef GL_SGI_texture_color_table\n  \"GL_SGI_texture_color_table\",\n#endif\n#ifdef GL_SUNX_constant_data\n  \"GL_SUNX_constant_data\",\n#endif\n#ifdef GL_SUN_convolution_border_modes\n  \"GL_SUN_convolution_border_modes\",\n#endif\n#ifdef GL_SUN_global_alpha\n  \"GL_SUN_global_alpha\",\n#endif\n#ifdef GL_SUN_mesh_array\n  \"GL_SUN_mesh_array\",\n#endif\n#ifdef GL_SUN_read_video_pixels\n  \"GL_SUN_read_video_pixels\",\n#endif\n#ifdef GL_SUN_slice_accum\n  \"GL_SUN_slice_accum\",\n#endif\n#ifdef GL_SUN_triangle_list\n  \"GL_SUN_triangle_list\",\n#endif\n#ifdef GL_SUN_vertex\n  \"GL_SUN_vertex\",\n#endif\n#ifdef GL_WIN_phong_shading\n  \"GL_WIN_phong_shading\",\n#endif\n#ifdef GL_WIN_specular_fog\n  \"GL_WIN_specular_fog\",\n#endif\n#ifdef GL_WIN_swap_hint\n  \"GL_WIN_swap_hint\",\n#endif\n  NULL\n};\n\n/* Detected in the extension string or strings */\nstatic GLboolean  _glewExtensionString[603];\n/* Detected via extension string or experimental mode */\nstatic GLboolean* _glewExtensionEnabled[] = {\n#ifdef GL_VERSION_1_2\n  &__GLEW_VERSION_1_2,\n#endif\n#ifdef GL_VERSION_1_2_1\n  &__GLEW_VERSION_1_2_1,\n#endif\n#ifdef GL_VERSION_1_3\n  &__GLEW_VERSION_1_3,\n#endif\n#ifdef GL_VERSION_1_4\n  &__GLEW_VERSION_1_4,\n#endif\n#ifdef GL_VERSION_1_5\n  &__GLEW_VERSION_1_5,\n#endif\n#ifdef GL_VERSION_2_0\n  &__GLEW_VERSION_2_0,\n#endif\n#ifdef GL_VERSION_2_1\n  &__GLEW_VERSION_2_1,\n#endif\n#ifdef GL_VERSION_3_0\n  &__GLEW_VERSION_3_0,\n#endif\n#ifdef GL_VERSION_3_1\n  &__GLEW_VERSION_3_1,\n#endif\n#ifdef GL_VERSION_3_2\n  &__GLEW_VERSION_3_2,\n#endif\n#ifdef GL_VERSION_3_3\n  &__GLEW_VERSION_3_3,\n#endif\n#ifdef GL_VERSION_4_0\n  &__GLEW_VERSION_4_0,\n#endif\n#ifdef GL_VERSION_4_1\n  &__GLEW_VERSION_4_1,\n#endif\n#ifdef GL_VERSION_4_2\n  &__GLEW_VERSION_4_2,\n#endif\n#ifdef GL_VERSION_4_3\n  &__GLEW_VERSION_4_3,\n#endif\n#ifdef GL_VERSION_4_4\n  &__GLEW_VERSION_4_4,\n#endif\n#ifdef GL_VERSION_4_5\n  &__GLEW_VERSION_4_5,\n#endif\n#ifdef GL_3DFX_multisample\n  &__GLEW_3DFX_multisample,\n#endif\n#ifdef GL_3DFX_tbuffer\n  &__GLEW_3DFX_tbuffer,\n#endif\n#ifdef GL_3DFX_texture_compression_FXT1\n  &__GLEW_3DFX_texture_compression_FXT1,\n#endif\n#ifdef GL_AMD_blend_minmax_factor\n  &__GLEW_AMD_blend_minmax_factor,\n#endif\n#ifdef GL_AMD_conservative_depth\n  &__GLEW_AMD_conservative_depth,\n#endif\n#ifdef GL_AMD_debug_output\n  &__GLEW_AMD_debug_output,\n#endif\n#ifdef GL_AMD_depth_clamp_separate\n  &__GLEW_AMD_depth_clamp_separate,\n#endif\n#ifdef GL_AMD_draw_buffers_blend\n  &__GLEW_AMD_draw_buffers_blend,\n#endif\n#ifdef GL_AMD_gcn_shader\n  &__GLEW_AMD_gcn_shader,\n#endif\n#ifdef GL_AMD_gpu_shader_int64\n  &__GLEW_AMD_gpu_shader_int64,\n#endif\n#ifdef GL_AMD_interleaved_elements\n  &__GLEW_AMD_interleaved_elements,\n#endif\n#ifdef GL_AMD_multi_draw_indirect\n  &__GLEW_AMD_multi_draw_indirect,\n#endif\n#ifdef GL_AMD_name_gen_delete\n  &__GLEW_AMD_name_gen_delete,\n#endif\n#ifdef GL_AMD_occlusion_query_event\n  &__GLEW_AMD_occlusion_query_event,\n#endif\n#ifdef GL_AMD_performance_monitor\n  &__GLEW_AMD_performance_monitor,\n#endif\n#ifdef GL_AMD_pinned_memory\n  &__GLEW_AMD_pinned_memory,\n#endif\n#ifdef GL_AMD_query_buffer_object\n  &__GLEW_AMD_query_buffer_object,\n#endif\n#ifdef GL_AMD_sample_positions\n  &__GLEW_AMD_sample_positions,\n#endif\n#ifdef GL_AMD_seamless_cubemap_per_texture\n  &__GLEW_AMD_seamless_cubemap_per_texture,\n#endif\n#ifdef GL_AMD_shader_atomic_counter_ops\n  &__GLEW_AMD_shader_atomic_counter_ops,\n#endif\n#ifdef GL_AMD_shader_explicit_vertex_parameter\n  &__GLEW_AMD_shader_explicit_vertex_parameter,\n#endif\n#ifdef GL_AMD_shader_stencil_export\n  &__GLEW_AMD_shader_stencil_export,\n#endif\n#ifdef GL_AMD_shader_stencil_value_export\n  &__GLEW_AMD_shader_stencil_value_export,\n#endif\n#ifdef GL_AMD_shader_trinary_minmax\n  &__GLEW_AMD_shader_trinary_minmax,\n#endif\n#ifdef GL_AMD_sparse_texture\n  &__GLEW_AMD_sparse_texture,\n#endif\n#ifdef GL_AMD_stencil_operation_extended\n  &__GLEW_AMD_stencil_operation_extended,\n#endif\n#ifdef GL_AMD_texture_texture4\n  &__GLEW_AMD_texture_texture4,\n#endif\n#ifdef GL_AMD_transform_feedback3_lines_triangles\n  &__GLEW_AMD_transform_feedback3_lines_triangles,\n#endif\n#ifdef GL_AMD_transform_feedback4\n  &__GLEW_AMD_transform_feedback4,\n#endif\n#ifdef GL_AMD_vertex_shader_layer\n  &__GLEW_AMD_vertex_shader_layer,\n#endif\n#ifdef GL_AMD_vertex_shader_tessellator\n  &__GLEW_AMD_vertex_shader_tessellator,\n#endif\n#ifdef GL_AMD_vertex_shader_viewport_index\n  &__GLEW_AMD_vertex_shader_viewport_index,\n#endif\n#ifdef GL_ANGLE_depth_texture\n  &__GLEW_ANGLE_depth_texture,\n#endif\n#ifdef GL_ANGLE_framebuffer_blit\n  &__GLEW_ANGLE_framebuffer_blit,\n#endif\n#ifdef GL_ANGLE_framebuffer_multisample\n  &__GLEW_ANGLE_framebuffer_multisample,\n#endif\n#ifdef GL_ANGLE_instanced_arrays\n  &__GLEW_ANGLE_instanced_arrays,\n#endif\n#ifdef GL_ANGLE_pack_reverse_row_order\n  &__GLEW_ANGLE_pack_reverse_row_order,\n#endif\n#ifdef GL_ANGLE_program_binary\n  &__GLEW_ANGLE_program_binary,\n#endif\n#ifdef GL_ANGLE_texture_compression_dxt1\n  &__GLEW_ANGLE_texture_compression_dxt1,\n#endif\n#ifdef GL_ANGLE_texture_compression_dxt3\n  &__GLEW_ANGLE_texture_compression_dxt3,\n#endif\n#ifdef GL_ANGLE_texture_compression_dxt5\n  &__GLEW_ANGLE_texture_compression_dxt5,\n#endif\n#ifdef GL_ANGLE_texture_usage\n  &__GLEW_ANGLE_texture_usage,\n#endif\n#ifdef GL_ANGLE_timer_query\n  &__GLEW_ANGLE_timer_query,\n#endif\n#ifdef GL_ANGLE_translated_shader_source\n  &__GLEW_ANGLE_translated_shader_source,\n#endif\n#ifdef GL_APPLE_aux_depth_stencil\n  &__GLEW_APPLE_aux_depth_stencil,\n#endif\n#ifdef GL_APPLE_client_storage\n  &__GLEW_APPLE_client_storage,\n#endif\n#ifdef GL_APPLE_element_array\n  &__GLEW_APPLE_element_array,\n#endif\n#ifdef GL_APPLE_fence\n  &__GLEW_APPLE_fence,\n#endif\n#ifdef GL_APPLE_float_pixels\n  &__GLEW_APPLE_float_pixels,\n#endif\n#ifdef GL_APPLE_flush_buffer_range\n  &__GLEW_APPLE_flush_buffer_range,\n#endif\n#ifdef GL_APPLE_object_purgeable\n  &__GLEW_APPLE_object_purgeable,\n#endif\n#ifdef GL_APPLE_pixel_buffer\n  &__GLEW_APPLE_pixel_buffer,\n#endif\n#ifdef GL_APPLE_rgb_422\n  &__GLEW_APPLE_rgb_422,\n#endif\n#ifdef GL_APPLE_row_bytes\n  &__GLEW_APPLE_row_bytes,\n#endif\n#ifdef GL_APPLE_specular_vector\n  &__GLEW_APPLE_specular_vector,\n#endif\n#ifdef GL_APPLE_texture_range\n  &__GLEW_APPLE_texture_range,\n#endif\n#ifdef GL_APPLE_transform_hint\n  &__GLEW_APPLE_transform_hint,\n#endif\n#ifdef GL_APPLE_vertex_array_object\n  &__GLEW_APPLE_vertex_array_object,\n#endif\n#ifdef GL_APPLE_vertex_array_range\n  &__GLEW_APPLE_vertex_array_range,\n#endif\n#ifdef GL_APPLE_vertex_program_evaluators\n  &__GLEW_APPLE_vertex_program_evaluators,\n#endif\n#ifdef GL_APPLE_ycbcr_422\n  &__GLEW_APPLE_ycbcr_422,\n#endif\n#ifdef GL_ARB_ES2_compatibility\n  &__GLEW_ARB_ES2_compatibility,\n#endif\n#ifdef GL_ARB_ES3_1_compatibility\n  &__GLEW_ARB_ES3_1_compatibility,\n#endif\n#ifdef GL_ARB_ES3_2_compatibility\n  &__GLEW_ARB_ES3_2_compatibility,\n#endif\n#ifdef GL_ARB_ES3_compatibility\n  &__GLEW_ARB_ES3_compatibility,\n#endif\n#ifdef GL_ARB_arrays_of_arrays\n  &__GLEW_ARB_arrays_of_arrays,\n#endif\n#ifdef GL_ARB_base_instance\n  &__GLEW_ARB_base_instance,\n#endif\n#ifdef GL_ARB_bindless_texture\n  &__GLEW_ARB_bindless_texture,\n#endif\n#ifdef GL_ARB_blend_func_extended\n  &__GLEW_ARB_blend_func_extended,\n#endif\n#ifdef GL_ARB_buffer_storage\n  &__GLEW_ARB_buffer_storage,\n#endif\n#ifdef GL_ARB_cl_event\n  &__GLEW_ARB_cl_event,\n#endif\n#ifdef GL_ARB_clear_buffer_object\n  &__GLEW_ARB_clear_buffer_object,\n#endif\n#ifdef GL_ARB_clear_texture\n  &__GLEW_ARB_clear_texture,\n#endif\n#ifdef GL_ARB_clip_control\n  &__GLEW_ARB_clip_control,\n#endif\n#ifdef GL_ARB_color_buffer_float\n  &__GLEW_ARB_color_buffer_float,\n#endif\n#ifdef GL_ARB_compatibility\n  &__GLEW_ARB_compatibility,\n#endif\n#ifdef GL_ARB_compressed_texture_pixel_storage\n  &__GLEW_ARB_compressed_texture_pixel_storage,\n#endif\n#ifdef GL_ARB_compute_shader\n  &__GLEW_ARB_compute_shader,\n#endif\n#ifdef GL_ARB_compute_variable_group_size\n  &__GLEW_ARB_compute_variable_group_size,\n#endif\n#ifdef GL_ARB_conditional_render_inverted\n  &__GLEW_ARB_conditional_render_inverted,\n#endif\n#ifdef GL_ARB_conservative_depth\n  &__GLEW_ARB_conservative_depth,\n#endif\n#ifdef GL_ARB_copy_buffer\n  &__GLEW_ARB_copy_buffer,\n#endif\n#ifdef GL_ARB_copy_image\n  &__GLEW_ARB_copy_image,\n#endif\n#ifdef GL_ARB_cull_distance\n  &__GLEW_ARB_cull_distance,\n#endif\n#ifdef GL_ARB_debug_output\n  &__GLEW_ARB_debug_output,\n#endif\n#ifdef GL_ARB_depth_buffer_float\n  &__GLEW_ARB_depth_buffer_float,\n#endif\n#ifdef GL_ARB_depth_clamp\n  &__GLEW_ARB_depth_clamp,\n#endif\n#ifdef GL_ARB_depth_texture\n  &__GLEW_ARB_depth_texture,\n#endif\n#ifdef GL_ARB_derivative_control\n  &__GLEW_ARB_derivative_control,\n#endif\n#ifdef GL_ARB_direct_state_access\n  &__GLEW_ARB_direct_state_access,\n#endif\n#ifdef GL_ARB_draw_buffers\n  &__GLEW_ARB_draw_buffers,\n#endif\n#ifdef GL_ARB_draw_buffers_blend\n  &__GLEW_ARB_draw_buffers_blend,\n#endif\n#ifdef GL_ARB_draw_elements_base_vertex\n  &__GLEW_ARB_draw_elements_base_vertex,\n#endif\n#ifdef GL_ARB_draw_indirect\n  &__GLEW_ARB_draw_indirect,\n#endif\n#ifdef GL_ARB_draw_instanced\n  &__GLEW_ARB_draw_instanced,\n#endif\n#ifdef GL_ARB_enhanced_layouts\n  &__GLEW_ARB_enhanced_layouts,\n#endif\n#ifdef GL_ARB_explicit_attrib_location\n  &__GLEW_ARB_explicit_attrib_location,\n#endif\n#ifdef GL_ARB_explicit_uniform_location\n  &__GLEW_ARB_explicit_uniform_location,\n#endif\n#ifdef GL_ARB_fragment_coord_conventions\n  &__GLEW_ARB_fragment_coord_conventions,\n#endif\n#ifdef GL_ARB_fragment_layer_viewport\n  &__GLEW_ARB_fragment_layer_viewport,\n#endif\n#ifdef GL_ARB_fragment_program\n  &__GLEW_ARB_fragment_program,\n#endif\n#ifdef GL_ARB_fragment_program_shadow\n  &__GLEW_ARB_fragment_program_shadow,\n#endif\n#ifdef GL_ARB_fragment_shader\n  &__GLEW_ARB_fragment_shader,\n#endif\n#ifdef GL_ARB_fragment_shader_interlock\n  &__GLEW_ARB_fragment_shader_interlock,\n#endif\n#ifdef GL_ARB_framebuffer_no_attachments\n  &__GLEW_ARB_framebuffer_no_attachments,\n#endif\n#ifdef GL_ARB_framebuffer_object\n  &__GLEW_ARB_framebuffer_object,\n#endif\n#ifdef GL_ARB_framebuffer_sRGB\n  &__GLEW_ARB_framebuffer_sRGB,\n#endif\n#ifdef GL_ARB_geometry_shader4\n  &__GLEW_ARB_geometry_shader4,\n#endif\n#ifdef GL_ARB_get_program_binary\n  &__GLEW_ARB_get_program_binary,\n#endif\n#ifdef GL_ARB_get_texture_sub_image\n  &__GLEW_ARB_get_texture_sub_image,\n#endif\n#ifdef GL_ARB_gl_spirv\n  &__GLEW_ARB_gl_spirv,\n#endif\n#ifdef GL_ARB_gpu_shader5\n  &__GLEW_ARB_gpu_shader5,\n#endif\n#ifdef GL_ARB_gpu_shader_fp64\n  &__GLEW_ARB_gpu_shader_fp64,\n#endif\n#ifdef GL_ARB_gpu_shader_int64\n  &__GLEW_ARB_gpu_shader_int64,\n#endif\n#ifdef GL_ARB_half_float_pixel\n  &__GLEW_ARB_half_float_pixel,\n#endif\n#ifdef GL_ARB_half_float_vertex\n  &__GLEW_ARB_half_float_vertex,\n#endif\n#ifdef GL_ARB_imaging\n  &__GLEW_ARB_imaging,\n#endif\n#ifdef GL_ARB_indirect_parameters\n  &__GLEW_ARB_indirect_parameters,\n#endif\n#ifdef GL_ARB_instanced_arrays\n  &__GLEW_ARB_instanced_arrays,\n#endif\n#ifdef GL_ARB_internalformat_query\n  &__GLEW_ARB_internalformat_query,\n#endif\n#ifdef GL_ARB_internalformat_query2\n  &__GLEW_ARB_internalformat_query2,\n#endif\n#ifdef GL_ARB_invalidate_subdata\n  &__GLEW_ARB_invalidate_subdata,\n#endif\n#ifdef GL_ARB_map_buffer_alignment\n  &__GLEW_ARB_map_buffer_alignment,\n#endif\n#ifdef GL_ARB_map_buffer_range\n  &__GLEW_ARB_map_buffer_range,\n#endif\n#ifdef GL_ARB_matrix_palette\n  &__GLEW_ARB_matrix_palette,\n#endif\n#ifdef GL_ARB_multi_bind\n  &__GLEW_ARB_multi_bind,\n#endif\n#ifdef GL_ARB_multi_draw_indirect\n  &__GLEW_ARB_multi_draw_indirect,\n#endif\n#ifdef GL_ARB_multisample\n  &__GLEW_ARB_multisample,\n#endif\n#ifdef GL_ARB_multitexture\n  &__GLEW_ARB_multitexture,\n#endif\n#ifdef GL_ARB_occlusion_query\n  &__GLEW_ARB_occlusion_query,\n#endif\n#ifdef GL_ARB_occlusion_query2\n  &__GLEW_ARB_occlusion_query2,\n#endif\n#ifdef GL_ARB_parallel_shader_compile\n  &__GLEW_ARB_parallel_shader_compile,\n#endif\n#ifdef GL_ARB_pipeline_statistics_query\n  &__GLEW_ARB_pipeline_statistics_query,\n#endif\n#ifdef GL_ARB_pixel_buffer_object\n  &__GLEW_ARB_pixel_buffer_object,\n#endif\n#ifdef GL_ARB_point_parameters\n  &__GLEW_ARB_point_parameters,\n#endif\n#ifdef GL_ARB_point_sprite\n  &__GLEW_ARB_point_sprite,\n#endif\n#ifdef GL_ARB_post_depth_coverage\n  &__GLEW_ARB_post_depth_coverage,\n#endif\n#ifdef GL_ARB_program_interface_query\n  &__GLEW_ARB_program_interface_query,\n#endif\n#ifdef GL_ARB_provoking_vertex\n  &__GLEW_ARB_provoking_vertex,\n#endif\n#ifdef GL_ARB_query_buffer_object\n  &__GLEW_ARB_query_buffer_object,\n#endif\n#ifdef GL_ARB_robust_buffer_access_behavior\n  &__GLEW_ARB_robust_buffer_access_behavior,\n#endif\n#ifdef GL_ARB_robustness\n  &__GLEW_ARB_robustness,\n#endif\n#ifdef GL_ARB_robustness_application_isolation\n  &__GLEW_ARB_robustness_application_isolation,\n#endif\n#ifdef GL_ARB_robustness_share_group_isolation\n  &__GLEW_ARB_robustness_share_group_isolation,\n#endif\n#ifdef GL_ARB_sample_locations\n  &__GLEW_ARB_sample_locations,\n#endif\n#ifdef GL_ARB_sample_shading\n  &__GLEW_ARB_sample_shading,\n#endif\n#ifdef GL_ARB_sampler_objects\n  &__GLEW_ARB_sampler_objects,\n#endif\n#ifdef GL_ARB_seamless_cube_map\n  &__GLEW_ARB_seamless_cube_map,\n#endif\n#ifdef GL_ARB_seamless_cubemap_per_texture\n  &__GLEW_ARB_seamless_cubemap_per_texture,\n#endif\n#ifdef GL_ARB_separate_shader_objects\n  &__GLEW_ARB_separate_shader_objects,\n#endif\n#ifdef GL_ARB_shader_atomic_counter_ops\n  &__GLEW_ARB_shader_atomic_counter_ops,\n#endif\n#ifdef GL_ARB_shader_atomic_counters\n  &__GLEW_ARB_shader_atomic_counters,\n#endif\n#ifdef GL_ARB_shader_ballot\n  &__GLEW_ARB_shader_ballot,\n#endif\n#ifdef GL_ARB_shader_bit_encoding\n  &__GLEW_ARB_shader_bit_encoding,\n#endif\n#ifdef GL_ARB_shader_clock\n  &__GLEW_ARB_shader_clock,\n#endif\n#ifdef GL_ARB_shader_draw_parameters\n  &__GLEW_ARB_shader_draw_parameters,\n#endif\n#ifdef GL_ARB_shader_group_vote\n  &__GLEW_ARB_shader_group_vote,\n#endif\n#ifdef GL_ARB_shader_image_load_store\n  &__GLEW_ARB_shader_image_load_store,\n#endif\n#ifdef GL_ARB_shader_image_size\n  &__GLEW_ARB_shader_image_size,\n#endif\n#ifdef GL_ARB_shader_objects\n  &__GLEW_ARB_shader_objects,\n#endif\n#ifdef GL_ARB_shader_precision\n  &__GLEW_ARB_shader_precision,\n#endif\n#ifdef GL_ARB_shader_stencil_export\n  &__GLEW_ARB_shader_stencil_export,\n#endif\n#ifdef GL_ARB_shader_storage_buffer_object\n  &__GLEW_ARB_shader_storage_buffer_object,\n#endif\n#ifdef GL_ARB_shader_subroutine\n  &__GLEW_ARB_shader_subroutine,\n#endif\n#ifdef GL_ARB_shader_texture_image_samples\n  &__GLEW_ARB_shader_texture_image_samples,\n#endif\n#ifdef GL_ARB_shader_texture_lod\n  &__GLEW_ARB_shader_texture_lod,\n#endif\n#ifdef GL_ARB_shader_viewport_layer_array\n  &__GLEW_ARB_shader_viewport_layer_array,\n#endif\n#ifdef GL_ARB_shading_language_100\n  &__GLEW_ARB_shading_language_100,\n#endif\n#ifdef GL_ARB_shading_language_420pack\n  &__GLEW_ARB_shading_language_420pack,\n#endif\n#ifdef GL_ARB_shading_language_include\n  &__GLEW_ARB_shading_language_include,\n#endif\n#ifdef GL_ARB_shading_language_packing\n  &__GLEW_ARB_shading_language_packing,\n#endif\n#ifdef GL_ARB_shadow\n  &__GLEW_ARB_shadow,\n#endif\n#ifdef GL_ARB_shadow_ambient\n  &__GLEW_ARB_shadow_ambient,\n#endif\n#ifdef GL_ARB_sparse_buffer\n  &__GLEW_ARB_sparse_buffer,\n#endif\n#ifdef GL_ARB_sparse_texture\n  &__GLEW_ARB_sparse_texture,\n#endif\n#ifdef GL_ARB_sparse_texture2\n  &__GLEW_ARB_sparse_texture2,\n#endif\n#ifdef GL_ARB_sparse_texture_clamp\n  &__GLEW_ARB_sparse_texture_clamp,\n#endif\n#ifdef GL_ARB_stencil_texturing\n  &__GLEW_ARB_stencil_texturing,\n#endif\n#ifdef GL_ARB_sync\n  &__GLEW_ARB_sync,\n#endif\n#ifdef GL_ARB_tessellation_shader\n  &__GLEW_ARB_tessellation_shader,\n#endif\n#ifdef GL_ARB_texture_barrier\n  &__GLEW_ARB_texture_barrier,\n#endif\n#ifdef GL_ARB_texture_border_clamp\n  &__GLEW_ARB_texture_border_clamp,\n#endif\n#ifdef GL_ARB_texture_buffer_object\n  &__GLEW_ARB_texture_buffer_object,\n#endif\n#ifdef GL_ARB_texture_buffer_object_rgb32\n  &__GLEW_ARB_texture_buffer_object_rgb32,\n#endif\n#ifdef GL_ARB_texture_buffer_range\n  &__GLEW_ARB_texture_buffer_range,\n#endif\n#ifdef GL_ARB_texture_compression\n  &__GLEW_ARB_texture_compression,\n#endif\n#ifdef GL_ARB_texture_compression_bptc\n  &__GLEW_ARB_texture_compression_bptc,\n#endif\n#ifdef GL_ARB_texture_compression_rgtc\n  &__GLEW_ARB_texture_compression_rgtc,\n#endif\n#ifdef GL_ARB_texture_cube_map\n  &__GLEW_ARB_texture_cube_map,\n#endif\n#ifdef GL_ARB_texture_cube_map_array\n  &__GLEW_ARB_texture_cube_map_array,\n#endif\n#ifdef GL_ARB_texture_env_add\n  &__GLEW_ARB_texture_env_add,\n#endif\n#ifdef GL_ARB_texture_env_combine\n  &__GLEW_ARB_texture_env_combine,\n#endif\n#ifdef GL_ARB_texture_env_crossbar\n  &__GLEW_ARB_texture_env_crossbar,\n#endif\n#ifdef GL_ARB_texture_env_dot3\n  &__GLEW_ARB_texture_env_dot3,\n#endif\n#ifdef GL_ARB_texture_filter_minmax\n  &__GLEW_ARB_texture_filter_minmax,\n#endif\n#ifdef GL_ARB_texture_float\n  &__GLEW_ARB_texture_float,\n#endif\n#ifdef GL_ARB_texture_gather\n  &__GLEW_ARB_texture_gather,\n#endif\n#ifdef GL_ARB_texture_mirror_clamp_to_edge\n  &__GLEW_ARB_texture_mirror_clamp_to_edge,\n#endif\n#ifdef GL_ARB_texture_mirrored_repeat\n  &__GLEW_ARB_texture_mirrored_repeat,\n#endif\n#ifdef GL_ARB_texture_multisample\n  &__GLEW_ARB_texture_multisample,\n#endif\n#ifdef GL_ARB_texture_non_power_of_two\n  &__GLEW_ARB_texture_non_power_of_two,\n#endif\n#ifdef GL_ARB_texture_query_levels\n  &__GLEW_ARB_texture_query_levels,\n#endif\n#ifdef GL_ARB_texture_query_lod\n  &__GLEW_ARB_texture_query_lod,\n#endif\n#ifdef GL_ARB_texture_rectangle\n  &__GLEW_ARB_texture_rectangle,\n#endif\n#ifdef GL_ARB_texture_rg\n  &__GLEW_ARB_texture_rg,\n#endif\n#ifdef GL_ARB_texture_rgb10_a2ui\n  &__GLEW_ARB_texture_rgb10_a2ui,\n#endif\n#ifdef GL_ARB_texture_stencil8\n  &__GLEW_ARB_texture_stencil8,\n#endif\n#ifdef GL_ARB_texture_storage\n  &__GLEW_ARB_texture_storage,\n#endif\n#ifdef GL_ARB_texture_storage_multisample\n  &__GLEW_ARB_texture_storage_multisample,\n#endif\n#ifdef GL_ARB_texture_swizzle\n  &__GLEW_ARB_texture_swizzle,\n#endif\n#ifdef GL_ARB_texture_view\n  &__GLEW_ARB_texture_view,\n#endif\n#ifdef GL_ARB_timer_query\n  &__GLEW_ARB_timer_query,\n#endif\n#ifdef GL_ARB_transform_feedback2\n  &__GLEW_ARB_transform_feedback2,\n#endif\n#ifdef GL_ARB_transform_feedback3\n  &__GLEW_ARB_transform_feedback3,\n#endif\n#ifdef GL_ARB_transform_feedback_instanced\n  &__GLEW_ARB_transform_feedback_instanced,\n#endif\n#ifdef GL_ARB_transform_feedback_overflow_query\n  &__GLEW_ARB_transform_feedback_overflow_query,\n#endif\n#ifdef GL_ARB_transpose_matrix\n  &__GLEW_ARB_transpose_matrix,\n#endif\n#ifdef GL_ARB_uniform_buffer_object\n  &__GLEW_ARB_uniform_buffer_object,\n#endif\n#ifdef GL_ARB_vertex_array_bgra\n  &__GLEW_ARB_vertex_array_bgra,\n#endif\n#ifdef GL_ARB_vertex_array_object\n  &__GLEW_ARB_vertex_array_object,\n#endif\n#ifdef GL_ARB_vertex_attrib_64bit\n  &__GLEW_ARB_vertex_attrib_64bit,\n#endif\n#ifdef GL_ARB_vertex_attrib_binding\n  &__GLEW_ARB_vertex_attrib_binding,\n#endif\n#ifdef GL_ARB_vertex_blend\n  &__GLEW_ARB_vertex_blend,\n#endif\n#ifdef GL_ARB_vertex_buffer_object\n  &__GLEW_ARB_vertex_buffer_object,\n#endif\n#ifdef GL_ARB_vertex_program\n  &__GLEW_ARB_vertex_program,\n#endif\n#ifdef GL_ARB_vertex_shader\n  &__GLEW_ARB_vertex_shader,\n#endif\n#ifdef GL_ARB_vertex_type_10f_11f_11f_rev\n  &__GLEW_ARB_vertex_type_10f_11f_11f_rev,\n#endif\n#ifdef GL_ARB_vertex_type_2_10_10_10_rev\n  &__GLEW_ARB_vertex_type_2_10_10_10_rev,\n#endif\n#ifdef GL_ARB_viewport_array\n  &__GLEW_ARB_viewport_array,\n#endif\n#ifdef GL_ARB_window_pos\n  &__GLEW_ARB_window_pos,\n#endif\n#ifdef GL_ATIX_point_sprites\n  &__GLEW_ATIX_point_sprites,\n#endif\n#ifdef GL_ATIX_texture_env_combine3\n  &__GLEW_ATIX_texture_env_combine3,\n#endif\n#ifdef GL_ATIX_texture_env_route\n  &__GLEW_ATIX_texture_env_route,\n#endif\n#ifdef GL_ATIX_vertex_shader_output_point_size\n  &__GLEW_ATIX_vertex_shader_output_point_size,\n#endif\n#ifdef GL_ATI_draw_buffers\n  &__GLEW_ATI_draw_buffers,\n#endif\n#ifdef GL_ATI_element_array\n  &__GLEW_ATI_element_array,\n#endif\n#ifdef GL_ATI_envmap_bumpmap\n  &__GLEW_ATI_envmap_bumpmap,\n#endif\n#ifdef GL_ATI_fragment_shader\n  &__GLEW_ATI_fragment_shader,\n#endif\n#ifdef GL_ATI_map_object_buffer\n  &__GLEW_ATI_map_object_buffer,\n#endif\n#ifdef GL_ATI_meminfo\n  &__GLEW_ATI_meminfo,\n#endif\n#ifdef GL_ATI_pn_triangles\n  &__GLEW_ATI_pn_triangles,\n#endif\n#ifdef GL_ATI_separate_stencil\n  &__GLEW_ATI_separate_stencil,\n#endif\n#ifdef GL_ATI_shader_texture_lod\n  &__GLEW_ATI_shader_texture_lod,\n#endif\n#ifdef GL_ATI_text_fragment_shader\n  &__GLEW_ATI_text_fragment_shader,\n#endif\n#ifdef GL_ATI_texture_compression_3dc\n  &__GLEW_ATI_texture_compression_3dc,\n#endif\n#ifdef GL_ATI_texture_env_combine3\n  &__GLEW_ATI_texture_env_combine3,\n#endif\n#ifdef GL_ATI_texture_float\n  &__GLEW_ATI_texture_float,\n#endif\n#ifdef GL_ATI_texture_mirror_once\n  &__GLEW_ATI_texture_mirror_once,\n#endif\n#ifdef GL_ATI_vertex_array_object\n  &__GLEW_ATI_vertex_array_object,\n#endif\n#ifdef GL_ATI_vertex_attrib_array_object\n  &__GLEW_ATI_vertex_attrib_array_object,\n#endif\n#ifdef GL_ATI_vertex_streams\n  &__GLEW_ATI_vertex_streams,\n#endif\n#ifdef GL_EGL_NV_robustness_video_memory_purge\n  &__GLEW_EGL_NV_robustness_video_memory_purge,\n#endif\n#ifdef GL_EXT_422_pixels\n  &__GLEW_EXT_422_pixels,\n#endif\n#ifdef GL_EXT_Cg_shader\n  &__GLEW_EXT_Cg_shader,\n#endif\n#ifdef GL_EXT_abgr\n  &__GLEW_EXT_abgr,\n#endif\n#ifdef GL_EXT_bgra\n  &__GLEW_EXT_bgra,\n#endif\n#ifdef GL_EXT_bindable_uniform\n  &__GLEW_EXT_bindable_uniform,\n#endif\n#ifdef GL_EXT_blend_color\n  &__GLEW_EXT_blend_color,\n#endif\n#ifdef GL_EXT_blend_equation_separate\n  &__GLEW_EXT_blend_equation_separate,\n#endif\n#ifdef GL_EXT_blend_func_separate\n  &__GLEW_EXT_blend_func_separate,\n#endif\n#ifdef GL_EXT_blend_logic_op\n  &__GLEW_EXT_blend_logic_op,\n#endif\n#ifdef GL_EXT_blend_minmax\n  &__GLEW_EXT_blend_minmax,\n#endif\n#ifdef GL_EXT_blend_subtract\n  &__GLEW_EXT_blend_subtract,\n#endif\n#ifdef GL_EXT_clip_volume_hint\n  &__GLEW_EXT_clip_volume_hint,\n#endif\n#ifdef GL_EXT_cmyka\n  &__GLEW_EXT_cmyka,\n#endif\n#ifdef GL_EXT_color_subtable\n  &__GLEW_EXT_color_subtable,\n#endif\n#ifdef GL_EXT_compiled_vertex_array\n  &__GLEW_EXT_compiled_vertex_array,\n#endif\n#ifdef GL_EXT_convolution\n  &__GLEW_EXT_convolution,\n#endif\n#ifdef GL_EXT_coordinate_frame\n  &__GLEW_EXT_coordinate_frame,\n#endif\n#ifdef GL_EXT_copy_texture\n  &__GLEW_EXT_copy_texture,\n#endif\n#ifdef GL_EXT_cull_vertex\n  &__GLEW_EXT_cull_vertex,\n#endif\n#ifdef GL_EXT_debug_label\n  &__GLEW_EXT_debug_label,\n#endif\n#ifdef GL_EXT_debug_marker\n  &__GLEW_EXT_debug_marker,\n#endif\n#ifdef GL_EXT_depth_bounds_test\n  &__GLEW_EXT_depth_bounds_test,\n#endif\n#ifdef GL_EXT_direct_state_access\n  &__GLEW_EXT_direct_state_access,\n#endif\n#ifdef GL_EXT_draw_buffers2\n  &__GLEW_EXT_draw_buffers2,\n#endif\n#ifdef GL_EXT_draw_instanced\n  &__GLEW_EXT_draw_instanced,\n#endif\n#ifdef GL_EXT_draw_range_elements\n  &__GLEW_EXT_draw_range_elements,\n#endif\n#ifdef GL_EXT_fog_coord\n  &__GLEW_EXT_fog_coord,\n#endif\n#ifdef GL_EXT_fragment_lighting\n  &__GLEW_EXT_fragment_lighting,\n#endif\n#ifdef GL_EXT_framebuffer_blit\n  &__GLEW_EXT_framebuffer_blit,\n#endif\n#ifdef GL_EXT_framebuffer_multisample\n  &__GLEW_EXT_framebuffer_multisample,\n#endif\n#ifdef GL_EXT_framebuffer_multisample_blit_scaled\n  &__GLEW_EXT_framebuffer_multisample_blit_scaled,\n#endif\n#ifdef GL_EXT_framebuffer_object\n  &__GLEW_EXT_framebuffer_object,\n#endif\n#ifdef GL_EXT_framebuffer_sRGB\n  &__GLEW_EXT_framebuffer_sRGB,\n#endif\n#ifdef GL_EXT_geometry_shader4\n  &__GLEW_EXT_geometry_shader4,\n#endif\n#ifdef GL_EXT_gpu_program_parameters\n  &__GLEW_EXT_gpu_program_parameters,\n#endif\n#ifdef GL_EXT_gpu_shader4\n  &__GLEW_EXT_gpu_shader4,\n#endif\n#ifdef GL_EXT_histogram\n  &__GLEW_EXT_histogram,\n#endif\n#ifdef GL_EXT_index_array_formats\n  &__GLEW_EXT_index_array_formats,\n#endif\n#ifdef GL_EXT_index_func\n  &__GLEW_EXT_index_func,\n#endif\n#ifdef GL_EXT_index_material\n  &__GLEW_EXT_index_material,\n#endif\n#ifdef GL_EXT_index_texture\n  &__GLEW_EXT_index_texture,\n#endif\n#ifdef GL_EXT_light_texture\n  &__GLEW_EXT_light_texture,\n#endif\n#ifdef GL_EXT_misc_attribute\n  &__GLEW_EXT_misc_attribute,\n#endif\n#ifdef GL_EXT_multi_draw_arrays\n  &__GLEW_EXT_multi_draw_arrays,\n#endif\n#ifdef GL_EXT_multisample\n  &__GLEW_EXT_multisample,\n#endif\n#ifdef GL_EXT_packed_depth_stencil\n  &__GLEW_EXT_packed_depth_stencil,\n#endif\n#ifdef GL_EXT_packed_float\n  &__GLEW_EXT_packed_float,\n#endif\n#ifdef GL_EXT_packed_pixels\n  &__GLEW_EXT_packed_pixels,\n#endif\n#ifdef GL_EXT_paletted_texture\n  &__GLEW_EXT_paletted_texture,\n#endif\n#ifdef GL_EXT_pixel_buffer_object\n  &__GLEW_EXT_pixel_buffer_object,\n#endif\n#ifdef GL_EXT_pixel_transform\n  &__GLEW_EXT_pixel_transform,\n#endif\n#ifdef GL_EXT_pixel_transform_color_table\n  &__GLEW_EXT_pixel_transform_color_table,\n#endif\n#ifdef GL_EXT_point_parameters\n  &__GLEW_EXT_point_parameters,\n#endif\n#ifdef GL_EXT_polygon_offset\n  &__GLEW_EXT_polygon_offset,\n#endif\n#ifdef GL_EXT_polygon_offset_clamp\n  &__GLEW_EXT_polygon_offset_clamp,\n#endif\n#ifdef GL_EXT_post_depth_coverage\n  &__GLEW_EXT_post_depth_coverage,\n#endif\n#ifdef GL_EXT_provoking_vertex\n  &__GLEW_EXT_provoking_vertex,\n#endif\n#ifdef GL_EXT_raster_multisample\n  &__GLEW_EXT_raster_multisample,\n#endif\n#ifdef GL_EXT_rescale_normal\n  &__GLEW_EXT_rescale_normal,\n#endif\n#ifdef GL_EXT_scene_marker\n  &__GLEW_EXT_scene_marker,\n#endif\n#ifdef GL_EXT_secondary_color\n  &__GLEW_EXT_secondary_color,\n#endif\n#ifdef GL_EXT_separate_shader_objects\n  &__GLEW_EXT_separate_shader_objects,\n#endif\n#ifdef GL_EXT_separate_specular_color\n  &__GLEW_EXT_separate_specular_color,\n#endif\n#ifdef GL_EXT_shader_image_load_formatted\n  &__GLEW_EXT_shader_image_load_formatted,\n#endif\n#ifdef GL_EXT_shader_image_load_store\n  &__GLEW_EXT_shader_image_load_store,\n#endif\n#ifdef GL_EXT_shader_integer_mix\n  &__GLEW_EXT_shader_integer_mix,\n#endif\n#ifdef GL_EXT_shadow_funcs\n  &__GLEW_EXT_shadow_funcs,\n#endif\n#ifdef GL_EXT_shared_texture_palette\n  &__GLEW_EXT_shared_texture_palette,\n#endif\n#ifdef GL_EXT_sparse_texture2\n  &__GLEW_EXT_sparse_texture2,\n#endif\n#ifdef GL_EXT_stencil_clear_tag\n  &__GLEW_EXT_stencil_clear_tag,\n#endif\n#ifdef GL_EXT_stencil_two_side\n  &__GLEW_EXT_stencil_two_side,\n#endif\n#ifdef GL_EXT_stencil_wrap\n  &__GLEW_EXT_stencil_wrap,\n#endif\n#ifdef GL_EXT_subtexture\n  &__GLEW_EXT_subtexture,\n#endif\n#ifdef GL_EXT_texture\n  &__GLEW_EXT_texture,\n#endif\n#ifdef GL_EXT_texture3D\n  &__GLEW_EXT_texture3D,\n#endif\n#ifdef GL_EXT_texture_array\n  &__GLEW_EXT_texture_array,\n#endif\n#ifdef GL_EXT_texture_buffer_object\n  &__GLEW_EXT_texture_buffer_object,\n#endif\n#ifdef GL_EXT_texture_compression_dxt1\n  &__GLEW_EXT_texture_compression_dxt1,\n#endif\n#ifdef GL_EXT_texture_compression_latc\n  &__GLEW_EXT_texture_compression_latc,\n#endif\n#ifdef GL_EXT_texture_compression_rgtc\n  &__GLEW_EXT_texture_compression_rgtc,\n#endif\n#ifdef GL_EXT_texture_compression_s3tc\n  &__GLEW_EXT_texture_compression_s3tc,\n#endif\n#ifdef GL_EXT_texture_cube_map\n  &__GLEW_EXT_texture_cube_map,\n#endif\n#ifdef GL_EXT_texture_edge_clamp\n  &__GLEW_EXT_texture_edge_clamp,\n#endif\n#ifdef GL_EXT_texture_env\n  &__GLEW_EXT_texture_env,\n#endif\n#ifdef GL_EXT_texture_env_add\n  &__GLEW_EXT_texture_env_add,\n#endif\n#ifdef GL_EXT_texture_env_combine\n  &__GLEW_EXT_texture_env_combine,\n#endif\n#ifdef GL_EXT_texture_env_dot3\n  &__GLEW_EXT_texture_env_dot3,\n#endif\n#ifdef GL_EXT_texture_filter_anisotropic\n  &__GLEW_EXT_texture_filter_anisotropic,\n#endif\n#ifdef GL_EXT_texture_filter_minmax\n  &__GLEW_EXT_texture_filter_minmax,\n#endif\n#ifdef GL_EXT_texture_integer\n  &__GLEW_EXT_texture_integer,\n#endif\n#ifdef GL_EXT_texture_lod_bias\n  &__GLEW_EXT_texture_lod_bias,\n#endif\n#ifdef GL_EXT_texture_mirror_clamp\n  &__GLEW_EXT_texture_mirror_clamp,\n#endif\n#ifdef GL_EXT_texture_object\n  &__GLEW_EXT_texture_object,\n#endif\n#ifdef GL_EXT_texture_perturb_normal\n  &__GLEW_EXT_texture_perturb_normal,\n#endif\n#ifdef GL_EXT_texture_rectangle\n  &__GLEW_EXT_texture_rectangle,\n#endif\n#ifdef GL_EXT_texture_sRGB\n  &__GLEW_EXT_texture_sRGB,\n#endif\n#ifdef GL_EXT_texture_sRGB_decode\n  &__GLEW_EXT_texture_sRGB_decode,\n#endif\n#ifdef GL_EXT_texture_shared_exponent\n  &__GLEW_EXT_texture_shared_exponent,\n#endif\n#ifdef GL_EXT_texture_snorm\n  &__GLEW_EXT_texture_snorm,\n#endif\n#ifdef GL_EXT_texture_swizzle\n  &__GLEW_EXT_texture_swizzle,\n#endif\n#ifdef GL_EXT_timer_query\n  &__GLEW_EXT_timer_query,\n#endif\n#ifdef GL_EXT_transform_feedback\n  &__GLEW_EXT_transform_feedback,\n#endif\n#ifdef GL_EXT_vertex_array\n  &__GLEW_EXT_vertex_array,\n#endif\n#ifdef GL_EXT_vertex_array_bgra\n  &__GLEW_EXT_vertex_array_bgra,\n#endif\n#ifdef GL_EXT_vertex_attrib_64bit\n  &__GLEW_EXT_vertex_attrib_64bit,\n#endif\n#ifdef GL_EXT_vertex_shader\n  &__GLEW_EXT_vertex_shader,\n#endif\n#ifdef GL_EXT_vertex_weighting\n  &__GLEW_EXT_vertex_weighting,\n#endif\n#ifdef GL_EXT_window_rectangles\n  &__GLEW_EXT_window_rectangles,\n#endif\n#ifdef GL_EXT_x11_sync_object\n  &__GLEW_EXT_x11_sync_object,\n#endif\n#ifdef GL_GREMEDY_frame_terminator\n  &__GLEW_GREMEDY_frame_terminator,\n#endif\n#ifdef GL_GREMEDY_string_marker\n  &__GLEW_GREMEDY_string_marker,\n#endif\n#ifdef GL_HP_convolution_border_modes\n  &__GLEW_HP_convolution_border_modes,\n#endif\n#ifdef GL_HP_image_transform\n  &__GLEW_HP_image_transform,\n#endif\n#ifdef GL_HP_occlusion_test\n  &__GLEW_HP_occlusion_test,\n#endif\n#ifdef GL_HP_texture_lighting\n  &__GLEW_HP_texture_lighting,\n#endif\n#ifdef GL_IBM_cull_vertex\n  &__GLEW_IBM_cull_vertex,\n#endif\n#ifdef GL_IBM_multimode_draw_arrays\n  &__GLEW_IBM_multimode_draw_arrays,\n#endif\n#ifdef GL_IBM_rasterpos_clip\n  &__GLEW_IBM_rasterpos_clip,\n#endif\n#ifdef GL_IBM_static_data\n  &__GLEW_IBM_static_data,\n#endif\n#ifdef GL_IBM_texture_mirrored_repeat\n  &__GLEW_IBM_texture_mirrored_repeat,\n#endif\n#ifdef GL_IBM_vertex_array_lists\n  &__GLEW_IBM_vertex_array_lists,\n#endif\n#ifdef GL_INGR_color_clamp\n  &__GLEW_INGR_color_clamp,\n#endif\n#ifdef GL_INGR_interlace_read\n  &__GLEW_INGR_interlace_read,\n#endif\n#ifdef GL_INTEL_conservative_rasterization\n  &__GLEW_INTEL_conservative_rasterization,\n#endif\n#ifdef GL_INTEL_fragment_shader_ordering\n  &__GLEW_INTEL_fragment_shader_ordering,\n#endif\n#ifdef GL_INTEL_framebuffer_CMAA\n  &__GLEW_INTEL_framebuffer_CMAA,\n#endif\n#ifdef GL_INTEL_map_texture\n  &__GLEW_INTEL_map_texture,\n#endif\n#ifdef GL_INTEL_parallel_arrays\n  &__GLEW_INTEL_parallel_arrays,\n#endif\n#ifdef GL_INTEL_performance_query\n  &__GLEW_INTEL_performance_query,\n#endif\n#ifdef GL_INTEL_texture_scissor\n  &__GLEW_INTEL_texture_scissor,\n#endif\n#ifdef GL_KHR_blend_equation_advanced\n  &__GLEW_KHR_blend_equation_advanced,\n#endif\n#ifdef GL_KHR_blend_equation_advanced_coherent\n  &__GLEW_KHR_blend_equation_advanced_coherent,\n#endif\n#ifdef GL_KHR_context_flush_control\n  &__GLEW_KHR_context_flush_control,\n#endif\n#ifdef GL_KHR_debug\n  &__GLEW_KHR_debug,\n#endif\n#ifdef GL_KHR_no_error\n  &__GLEW_KHR_no_error,\n#endif\n#ifdef GL_KHR_robust_buffer_access_behavior\n  &__GLEW_KHR_robust_buffer_access_behavior,\n#endif\n#ifdef GL_KHR_robustness\n  &__GLEW_KHR_robustness,\n#endif\n#ifdef GL_KHR_texture_compression_astc_hdr\n  &__GLEW_KHR_texture_compression_astc_hdr,\n#endif\n#ifdef GL_KHR_texture_compression_astc_ldr\n  &__GLEW_KHR_texture_compression_astc_ldr,\n#endif\n#ifdef GL_KHR_texture_compression_astc_sliced_3d\n  &__GLEW_KHR_texture_compression_astc_sliced_3d,\n#endif\n#ifdef GL_KTX_buffer_region\n  &__GLEW_KTX_buffer_region,\n#endif\n#ifdef GL_MESAX_texture_stack\n  &__GLEW_MESAX_texture_stack,\n#endif\n#ifdef GL_MESA_pack_invert\n  &__GLEW_MESA_pack_invert,\n#endif\n#ifdef GL_MESA_resize_buffers\n  &__GLEW_MESA_resize_buffers,\n#endif\n#ifdef GL_MESA_shader_integer_functions\n  &__GLEW_MESA_shader_integer_functions,\n#endif\n#ifdef GL_MESA_window_pos\n  &__GLEW_MESA_window_pos,\n#endif\n#ifdef GL_MESA_ycbcr_texture\n  &__GLEW_MESA_ycbcr_texture,\n#endif\n#ifdef GL_NVX_blend_equation_advanced_multi_draw_buffers\n  &__GLEW_NVX_blend_equation_advanced_multi_draw_buffers,\n#endif\n#ifdef GL_NVX_conditional_render\n  &__GLEW_NVX_conditional_render,\n#endif\n#ifdef GL_NVX_gpu_memory_info\n  &__GLEW_NVX_gpu_memory_info,\n#endif\n#ifdef GL_NVX_linked_gpu_multicast\n  &__GLEW_NVX_linked_gpu_multicast,\n#endif\n#ifdef GL_NV_bindless_multi_draw_indirect\n  &__GLEW_NV_bindless_multi_draw_indirect,\n#endif\n#ifdef GL_NV_bindless_multi_draw_indirect_count\n  &__GLEW_NV_bindless_multi_draw_indirect_count,\n#endif\n#ifdef GL_NV_bindless_texture\n  &__GLEW_NV_bindless_texture,\n#endif\n#ifdef GL_NV_blend_equation_advanced\n  &__GLEW_NV_blend_equation_advanced,\n#endif\n#ifdef GL_NV_blend_equation_advanced_coherent\n  &__GLEW_NV_blend_equation_advanced_coherent,\n#endif\n#ifdef GL_NV_blend_square\n  &__GLEW_NV_blend_square,\n#endif\n#ifdef GL_NV_clip_space_w_scaling\n  &__GLEW_NV_clip_space_w_scaling,\n#endif\n#ifdef GL_NV_command_list\n  &__GLEW_NV_command_list,\n#endif\n#ifdef GL_NV_compute_program5\n  &__GLEW_NV_compute_program5,\n#endif\n#ifdef GL_NV_conditional_render\n  &__GLEW_NV_conditional_render,\n#endif\n#ifdef GL_NV_conservative_raster\n  &__GLEW_NV_conservative_raster,\n#endif\n#ifdef GL_NV_conservative_raster_dilate\n  &__GLEW_NV_conservative_raster_dilate,\n#endif\n#ifdef GL_NV_conservative_raster_pre_snap_triangles\n  &__GLEW_NV_conservative_raster_pre_snap_triangles,\n#endif\n#ifdef GL_NV_copy_depth_to_color\n  &__GLEW_NV_copy_depth_to_color,\n#endif\n#ifdef GL_NV_copy_image\n  &__GLEW_NV_copy_image,\n#endif\n#ifdef GL_NV_deep_texture3D\n  &__GLEW_NV_deep_texture3D,\n#endif\n#ifdef GL_NV_depth_buffer_float\n  &__GLEW_NV_depth_buffer_float,\n#endif\n#ifdef GL_NV_depth_clamp\n  &__GLEW_NV_depth_clamp,\n#endif\n#ifdef GL_NV_depth_range_unclamped\n  &__GLEW_NV_depth_range_unclamped,\n#endif\n#ifdef GL_NV_draw_texture\n  &__GLEW_NV_draw_texture,\n#endif\n#ifdef GL_NV_draw_vulkan_image\n  &__GLEW_NV_draw_vulkan_image,\n#endif\n#ifdef GL_NV_evaluators\n  &__GLEW_NV_evaluators,\n#endif\n#ifdef GL_NV_explicit_multisample\n  &__GLEW_NV_explicit_multisample,\n#endif\n#ifdef GL_NV_fence\n  &__GLEW_NV_fence,\n#endif\n#ifdef GL_NV_fill_rectangle\n  &__GLEW_NV_fill_rectangle,\n#endif\n#ifdef GL_NV_float_buffer\n  &__GLEW_NV_float_buffer,\n#endif\n#ifdef GL_NV_fog_distance\n  &__GLEW_NV_fog_distance,\n#endif\n#ifdef GL_NV_fragment_coverage_to_color\n  &__GLEW_NV_fragment_coverage_to_color,\n#endif\n#ifdef GL_NV_fragment_program\n  &__GLEW_NV_fragment_program,\n#endif\n#ifdef GL_NV_fragment_program2\n  &__GLEW_NV_fragment_program2,\n#endif\n#ifdef GL_NV_fragment_program4\n  &__GLEW_NV_fragment_program4,\n#endif\n#ifdef GL_NV_fragment_program_option\n  &__GLEW_NV_fragment_program_option,\n#endif\n#ifdef GL_NV_fragment_shader_interlock\n  &__GLEW_NV_fragment_shader_interlock,\n#endif\n#ifdef GL_NV_framebuffer_mixed_samples\n  &__GLEW_NV_framebuffer_mixed_samples,\n#endif\n#ifdef GL_NV_framebuffer_multisample_coverage\n  &__GLEW_NV_framebuffer_multisample_coverage,\n#endif\n#ifdef GL_NV_geometry_program4\n  &__GLEW_NV_geometry_program4,\n#endif\n#ifdef GL_NV_geometry_shader4\n  &__GLEW_NV_geometry_shader4,\n#endif\n#ifdef GL_NV_geometry_shader_passthrough\n  &__GLEW_NV_geometry_shader_passthrough,\n#endif\n#ifdef GL_NV_gpu_multicast\n  &__GLEW_NV_gpu_multicast,\n#endif\n#ifdef GL_NV_gpu_program4\n  &__GLEW_NV_gpu_program4,\n#endif\n#ifdef GL_NV_gpu_program5\n  &__GLEW_NV_gpu_program5,\n#endif\n#ifdef GL_NV_gpu_program5_mem_extended\n  &__GLEW_NV_gpu_program5_mem_extended,\n#endif\n#ifdef GL_NV_gpu_program_fp64\n  &__GLEW_NV_gpu_program_fp64,\n#endif\n#ifdef GL_NV_gpu_shader5\n  &__GLEW_NV_gpu_shader5,\n#endif\n#ifdef GL_NV_half_float\n  &__GLEW_NV_half_float,\n#endif\n#ifdef GL_NV_internalformat_sample_query\n  &__GLEW_NV_internalformat_sample_query,\n#endif\n#ifdef GL_NV_light_max_exponent\n  &__GLEW_NV_light_max_exponent,\n#endif\n#ifdef GL_NV_multisample_coverage\n  &__GLEW_NV_multisample_coverage,\n#endif\n#ifdef GL_NV_multisample_filter_hint\n  &__GLEW_NV_multisample_filter_hint,\n#endif\n#ifdef GL_NV_occlusion_query\n  &__GLEW_NV_occlusion_query,\n#endif\n#ifdef GL_NV_packed_depth_stencil\n  &__GLEW_NV_packed_depth_stencil,\n#endif\n#ifdef GL_NV_parameter_buffer_object\n  &__GLEW_NV_parameter_buffer_object,\n#endif\n#ifdef GL_NV_parameter_buffer_object2\n  &__GLEW_NV_parameter_buffer_object2,\n#endif\n#ifdef GL_NV_path_rendering\n  &__GLEW_NV_path_rendering,\n#endif\n#ifdef GL_NV_path_rendering_shared_edge\n  &__GLEW_NV_path_rendering_shared_edge,\n#endif\n#ifdef GL_NV_pixel_data_range\n  &__GLEW_NV_pixel_data_range,\n#endif\n#ifdef GL_NV_point_sprite\n  &__GLEW_NV_point_sprite,\n#endif\n#ifdef GL_NV_present_video\n  &__GLEW_NV_present_video,\n#endif\n#ifdef GL_NV_primitive_restart\n  &__GLEW_NV_primitive_restart,\n#endif\n#ifdef GL_NV_register_combiners\n  &__GLEW_NV_register_combiners,\n#endif\n#ifdef GL_NV_register_combiners2\n  &__GLEW_NV_register_combiners2,\n#endif\n#ifdef GL_NV_robustness_video_memory_purge\n  &__GLEW_NV_robustness_video_memory_purge,\n#endif\n#ifdef GL_NV_sample_locations\n  &__GLEW_NV_sample_locations,\n#endif\n#ifdef GL_NV_sample_mask_override_coverage\n  &__GLEW_NV_sample_mask_override_coverage,\n#endif\n#ifdef GL_NV_shader_atomic_counters\n  &__GLEW_NV_shader_atomic_counters,\n#endif\n#ifdef GL_NV_shader_atomic_float\n  &__GLEW_NV_shader_atomic_float,\n#endif\n#ifdef GL_NV_shader_atomic_float64\n  &__GLEW_NV_shader_atomic_float64,\n#endif\n#ifdef GL_NV_shader_atomic_fp16_vector\n  &__GLEW_NV_shader_atomic_fp16_vector,\n#endif\n#ifdef GL_NV_shader_atomic_int64\n  &__GLEW_NV_shader_atomic_int64,\n#endif\n#ifdef GL_NV_shader_buffer_load\n  &__GLEW_NV_shader_buffer_load,\n#endif\n#ifdef GL_NV_shader_storage_buffer_object\n  &__GLEW_NV_shader_storage_buffer_object,\n#endif\n#ifdef GL_NV_shader_thread_group\n  &__GLEW_NV_shader_thread_group,\n#endif\n#ifdef GL_NV_shader_thread_shuffle\n  &__GLEW_NV_shader_thread_shuffle,\n#endif\n#ifdef GL_NV_stereo_view_rendering\n  &__GLEW_NV_stereo_view_rendering,\n#endif\n#ifdef GL_NV_tessellation_program5\n  &__GLEW_NV_tessellation_program5,\n#endif\n#ifdef GL_NV_texgen_emboss\n  &__GLEW_NV_texgen_emboss,\n#endif\n#ifdef GL_NV_texgen_reflection\n  &__GLEW_NV_texgen_reflection,\n#endif\n#ifdef GL_NV_texture_barrier\n  &__GLEW_NV_texture_barrier,\n#endif\n#ifdef GL_NV_texture_compression_vtc\n  &__GLEW_NV_texture_compression_vtc,\n#endif\n#ifdef GL_NV_texture_env_combine4\n  &__GLEW_NV_texture_env_combine4,\n#endif\n#ifdef GL_NV_texture_expand_normal\n  &__GLEW_NV_texture_expand_normal,\n#endif\n#ifdef GL_NV_texture_multisample\n  &__GLEW_NV_texture_multisample,\n#endif\n#ifdef GL_NV_texture_rectangle\n  &__GLEW_NV_texture_rectangle,\n#endif\n#ifdef GL_NV_texture_shader\n  &__GLEW_NV_texture_shader,\n#endif\n#ifdef GL_NV_texture_shader2\n  &__GLEW_NV_texture_shader2,\n#endif\n#ifdef GL_NV_texture_shader3\n  &__GLEW_NV_texture_shader3,\n#endif\n#ifdef GL_NV_transform_feedback\n  &__GLEW_NV_transform_feedback,\n#endif\n#ifdef GL_NV_transform_feedback2\n  &__GLEW_NV_transform_feedback2,\n#endif\n#ifdef GL_NV_uniform_buffer_unified_memory\n  &__GLEW_NV_uniform_buffer_unified_memory,\n#endif\n#ifdef GL_NV_vdpau_interop\n  &__GLEW_NV_vdpau_interop,\n#endif\n#ifdef GL_NV_vertex_array_range\n  &__GLEW_NV_vertex_array_range,\n#endif\n#ifdef GL_NV_vertex_array_range2\n  &__GLEW_NV_vertex_array_range2,\n#endif\n#ifdef GL_NV_vertex_attrib_integer_64bit\n  &__GLEW_NV_vertex_attrib_integer_64bit,\n#endif\n#ifdef GL_NV_vertex_buffer_unified_memory\n  &__GLEW_NV_vertex_buffer_unified_memory,\n#endif\n#ifdef GL_NV_vertex_program\n  &__GLEW_NV_vertex_program,\n#endif\n#ifdef GL_NV_vertex_program1_1\n  &__GLEW_NV_vertex_program1_1,\n#endif\n#ifdef GL_NV_vertex_program2\n  &__GLEW_NV_vertex_program2,\n#endif\n#ifdef GL_NV_vertex_program2_option\n  &__GLEW_NV_vertex_program2_option,\n#endif\n#ifdef GL_NV_vertex_program3\n  &__GLEW_NV_vertex_program3,\n#endif\n#ifdef GL_NV_vertex_program4\n  &__GLEW_NV_vertex_program4,\n#endif\n#ifdef GL_NV_video_capture\n  &__GLEW_NV_video_capture,\n#endif\n#ifdef GL_NV_viewport_array2\n  &__GLEW_NV_viewport_array2,\n#endif\n#ifdef GL_NV_viewport_swizzle\n  &__GLEW_NV_viewport_swizzle,\n#endif\n#ifdef GL_OES_byte_coordinates\n  &__GLEW_OES_byte_coordinates,\n#endif\n#ifdef GL_OES_compressed_paletted_texture\n  &__GLEW_OES_compressed_paletted_texture,\n#endif\n#ifdef GL_OES_read_format\n  &__GLEW_OES_read_format,\n#endif\n#ifdef GL_OES_single_precision\n  &__GLEW_OES_single_precision,\n#endif\n#ifdef GL_OML_interlace\n  &__GLEW_OML_interlace,\n#endif\n#ifdef GL_OML_resample\n  &__GLEW_OML_resample,\n#endif\n#ifdef GL_OML_subsample\n  &__GLEW_OML_subsample,\n#endif\n#ifdef GL_OVR_multiview\n  &__GLEW_OVR_multiview,\n#endif\n#ifdef GL_OVR_multiview2\n  &__GLEW_OVR_multiview2,\n#endif\n#ifdef GL_PGI_misc_hints\n  &__GLEW_PGI_misc_hints,\n#endif\n#ifdef GL_PGI_vertex_hints\n  &__GLEW_PGI_vertex_hints,\n#endif\n#ifdef GL_REGAL_ES1_0_compatibility\n  &__GLEW_REGAL_ES1_0_compatibility,\n#endif\n#ifdef GL_REGAL_ES1_1_compatibility\n  &__GLEW_REGAL_ES1_1_compatibility,\n#endif\n#ifdef GL_REGAL_enable\n  &__GLEW_REGAL_enable,\n#endif\n#ifdef GL_REGAL_error_string\n  &__GLEW_REGAL_error_string,\n#endif\n#ifdef GL_REGAL_extension_query\n  &__GLEW_REGAL_extension_query,\n#endif\n#ifdef GL_REGAL_log\n  &__GLEW_REGAL_log,\n#endif\n#ifdef GL_REGAL_proc_address\n  &__GLEW_REGAL_proc_address,\n#endif\n#ifdef GL_REND_screen_coordinates\n  &__GLEW_REND_screen_coordinates,\n#endif\n#ifdef GL_S3_s3tc\n  &__GLEW_S3_s3tc,\n#endif\n#ifdef GL_SGIS_color_range\n  &__GLEW_SGIS_color_range,\n#endif\n#ifdef GL_SGIS_detail_texture\n  &__GLEW_SGIS_detail_texture,\n#endif\n#ifdef GL_SGIS_fog_function\n  &__GLEW_SGIS_fog_function,\n#endif\n#ifdef GL_SGIS_generate_mipmap\n  &__GLEW_SGIS_generate_mipmap,\n#endif\n#ifdef GL_SGIS_multisample\n  &__GLEW_SGIS_multisample,\n#endif\n#ifdef GL_SGIS_pixel_texture\n  &__GLEW_SGIS_pixel_texture,\n#endif\n#ifdef GL_SGIS_point_line_texgen\n  &__GLEW_SGIS_point_line_texgen,\n#endif\n#ifdef GL_SGIS_sharpen_texture\n  &__GLEW_SGIS_sharpen_texture,\n#endif\n#ifdef GL_SGIS_texture4D\n  &__GLEW_SGIS_texture4D,\n#endif\n#ifdef GL_SGIS_texture_border_clamp\n  &__GLEW_SGIS_texture_border_clamp,\n#endif\n#ifdef GL_SGIS_texture_edge_clamp\n  &__GLEW_SGIS_texture_edge_clamp,\n#endif\n#ifdef GL_SGIS_texture_filter4\n  &__GLEW_SGIS_texture_filter4,\n#endif\n#ifdef GL_SGIS_texture_lod\n  &__GLEW_SGIS_texture_lod,\n#endif\n#ifdef GL_SGIS_texture_select\n  &__GLEW_SGIS_texture_select,\n#endif\n#ifdef GL_SGIX_async\n  &__GLEW_SGIX_async,\n#endif\n#ifdef GL_SGIX_async_histogram\n  &__GLEW_SGIX_async_histogram,\n#endif\n#ifdef GL_SGIX_async_pixel\n  &__GLEW_SGIX_async_pixel,\n#endif\n#ifdef GL_SGIX_blend_alpha_minmax\n  &__GLEW_SGIX_blend_alpha_minmax,\n#endif\n#ifdef GL_SGIX_clipmap\n  &__GLEW_SGIX_clipmap,\n#endif\n#ifdef GL_SGIX_convolution_accuracy\n  &__GLEW_SGIX_convolution_accuracy,\n#endif\n#ifdef GL_SGIX_depth_texture\n  &__GLEW_SGIX_depth_texture,\n#endif\n#ifdef GL_SGIX_flush_raster\n  &__GLEW_SGIX_flush_raster,\n#endif\n#ifdef GL_SGIX_fog_offset\n  &__GLEW_SGIX_fog_offset,\n#endif\n#ifdef GL_SGIX_fog_texture\n  &__GLEW_SGIX_fog_texture,\n#endif\n#ifdef GL_SGIX_fragment_specular_lighting\n  &__GLEW_SGIX_fragment_specular_lighting,\n#endif\n#ifdef GL_SGIX_framezoom\n  &__GLEW_SGIX_framezoom,\n#endif\n#ifdef GL_SGIX_interlace\n  &__GLEW_SGIX_interlace,\n#endif\n#ifdef GL_SGIX_ir_instrument1\n  &__GLEW_SGIX_ir_instrument1,\n#endif\n#ifdef GL_SGIX_list_priority\n  &__GLEW_SGIX_list_priority,\n#endif\n#ifdef GL_SGIX_pixel_texture\n  &__GLEW_SGIX_pixel_texture,\n#endif\n#ifdef GL_SGIX_pixel_texture_bits\n  &__GLEW_SGIX_pixel_texture_bits,\n#endif\n#ifdef GL_SGIX_reference_plane\n  &__GLEW_SGIX_reference_plane,\n#endif\n#ifdef GL_SGIX_resample\n  &__GLEW_SGIX_resample,\n#endif\n#ifdef GL_SGIX_shadow\n  &__GLEW_SGIX_shadow,\n#endif\n#ifdef GL_SGIX_shadow_ambient\n  &__GLEW_SGIX_shadow_ambient,\n#endif\n#ifdef GL_SGIX_sprite\n  &__GLEW_SGIX_sprite,\n#endif\n#ifdef GL_SGIX_tag_sample_buffer\n  &__GLEW_SGIX_tag_sample_buffer,\n#endif\n#ifdef GL_SGIX_texture_add_env\n  &__GLEW_SGIX_texture_add_env,\n#endif\n#ifdef GL_SGIX_texture_coordinate_clamp\n  &__GLEW_SGIX_texture_coordinate_clamp,\n#endif\n#ifdef GL_SGIX_texture_lod_bias\n  &__GLEW_SGIX_texture_lod_bias,\n#endif\n#ifdef GL_SGIX_texture_multi_buffer\n  &__GLEW_SGIX_texture_multi_buffer,\n#endif\n#ifdef GL_SGIX_texture_range\n  &__GLEW_SGIX_texture_range,\n#endif\n#ifdef GL_SGIX_texture_scale_bias\n  &__GLEW_SGIX_texture_scale_bias,\n#endif\n#ifdef GL_SGIX_vertex_preclip\n  &__GLEW_SGIX_vertex_preclip,\n#endif\n#ifdef GL_SGIX_vertex_preclip_hint\n  &__GLEW_SGIX_vertex_preclip_hint,\n#endif\n#ifdef GL_SGIX_ycrcb\n  &__GLEW_SGIX_ycrcb,\n#endif\n#ifdef GL_SGI_color_matrix\n  &__GLEW_SGI_color_matrix,\n#endif\n#ifdef GL_SGI_color_table\n  &__GLEW_SGI_color_table,\n#endif\n#ifdef GL_SGI_texture_color_table\n  &__GLEW_SGI_texture_color_table,\n#endif\n#ifdef GL_SUNX_constant_data\n  &__GLEW_SUNX_constant_data,\n#endif\n#ifdef GL_SUN_convolution_border_modes\n  &__GLEW_SUN_convolution_border_modes,\n#endif\n#ifdef GL_SUN_global_alpha\n  &__GLEW_SUN_global_alpha,\n#endif\n#ifdef GL_SUN_mesh_array\n  &__GLEW_SUN_mesh_array,\n#endif\n#ifdef GL_SUN_read_video_pixels\n  &__GLEW_SUN_read_video_pixels,\n#endif\n#ifdef GL_SUN_slice_accum\n  &__GLEW_SUN_slice_accum,\n#endif\n#ifdef GL_SUN_triangle_list\n  &__GLEW_SUN_triangle_list,\n#endif\n#ifdef GL_SUN_vertex\n  &__GLEW_SUN_vertex,\n#endif\n#ifdef GL_WIN_phong_shading\n  &__GLEW_WIN_phong_shading,\n#endif\n#ifdef GL_WIN_specular_fog\n  &__GLEW_WIN_specular_fog,\n#endif\n#ifdef GL_WIN_swap_hint\n  &__GLEW_WIN_swap_hint,\n#endif\n  NULL\n};\nstatic GLboolean _glewInit_GL_VERSION_1_2 ();\nstatic GLboolean _glewInit_GL_VERSION_1_3 ();\nstatic GLboolean _glewInit_GL_VERSION_1_4 ();\nstatic GLboolean _glewInit_GL_VERSION_1_5 ();\nstatic GLboolean _glewInit_GL_VERSION_2_0 ();\nstatic GLboolean _glewInit_GL_VERSION_2_1 ();\nstatic GLboolean _glewInit_GL_VERSION_3_0 ();\nstatic GLboolean _glewInit_GL_VERSION_3_1 ();\nstatic GLboolean _glewInit_GL_VERSION_3_2 ();\nstatic GLboolean _glewInit_GL_VERSION_3_3 ();\nstatic GLboolean _glewInit_GL_VERSION_4_0 ();\nstatic GLboolean _glewInit_GL_VERSION_4_5 ();\nstatic GLboolean _glewInit_GL_3DFX_tbuffer ();\nstatic GLboolean _glewInit_GL_AMD_debug_output ();\nstatic GLboolean _glewInit_GL_AMD_draw_buffers_blend ();\nstatic GLboolean _glewInit_GL_AMD_interleaved_elements ();\nstatic GLboolean _glewInit_GL_AMD_multi_draw_indirect ();\nstatic GLboolean _glewInit_GL_AMD_name_gen_delete ();\nstatic GLboolean _glewInit_GL_AMD_occlusion_query_event ();\nstatic GLboolean _glewInit_GL_AMD_performance_monitor ();\nstatic GLboolean _glewInit_GL_AMD_sample_positions ();\nstatic GLboolean _glewInit_GL_AMD_sparse_texture ();\nstatic GLboolean _glewInit_GL_AMD_stencil_operation_extended ();\nstatic GLboolean _glewInit_GL_AMD_vertex_shader_tessellator ();\nstatic GLboolean _glewInit_GL_ANGLE_framebuffer_blit ();\nstatic GLboolean _glewInit_GL_ANGLE_framebuffer_multisample ();\nstatic GLboolean _glewInit_GL_ANGLE_instanced_arrays ();\nstatic GLboolean _glewInit_GL_ANGLE_timer_query ();\nstatic GLboolean _glewInit_GL_ANGLE_translated_shader_source ();\nstatic GLboolean _glewInit_GL_APPLE_element_array ();\nstatic GLboolean _glewInit_GL_APPLE_fence ();\nstatic GLboolean _glewInit_GL_APPLE_flush_buffer_range ();\nstatic GLboolean _glewInit_GL_APPLE_object_purgeable ();\nstatic GLboolean _glewInit_GL_APPLE_texture_range ();\nstatic GLboolean _glewInit_GL_APPLE_vertex_array_object ();\nstatic GLboolean _glewInit_GL_APPLE_vertex_array_range ();\nstatic GLboolean _glewInit_GL_APPLE_vertex_program_evaluators ();\nstatic GLboolean _glewInit_GL_ARB_ES2_compatibility ();\nstatic GLboolean _glewInit_GL_ARB_ES3_1_compatibility ();\nstatic GLboolean _glewInit_GL_ARB_ES3_2_compatibility ();\nstatic GLboolean _glewInit_GL_ARB_base_instance ();\nstatic GLboolean _glewInit_GL_ARB_bindless_texture ();\nstatic GLboolean _glewInit_GL_ARB_blend_func_extended ();\nstatic GLboolean _glewInit_GL_ARB_buffer_storage ();\nstatic GLboolean _glewInit_GL_ARB_cl_event ();\nstatic GLboolean _glewInit_GL_ARB_clear_buffer_object ();\nstatic GLboolean _glewInit_GL_ARB_clear_texture ();\nstatic GLboolean _glewInit_GL_ARB_clip_control ();\nstatic GLboolean _glewInit_GL_ARB_color_buffer_float ();\nstatic GLboolean _glewInit_GL_ARB_compute_shader ();\nstatic GLboolean _glewInit_GL_ARB_compute_variable_group_size ();\nstatic GLboolean _glewInit_GL_ARB_copy_buffer ();\nstatic GLboolean _glewInit_GL_ARB_copy_image ();\nstatic GLboolean _glewInit_GL_ARB_debug_output ();\nstatic GLboolean _glewInit_GL_ARB_direct_state_access ();\nstatic GLboolean _glewInit_GL_ARB_draw_buffers ();\nstatic GLboolean _glewInit_GL_ARB_draw_buffers_blend ();\nstatic GLboolean _glewInit_GL_ARB_draw_elements_base_vertex ();\nstatic GLboolean _glewInit_GL_ARB_draw_indirect ();\nstatic GLboolean _glewInit_GL_ARB_framebuffer_no_attachments ();\nstatic GLboolean _glewInit_GL_ARB_framebuffer_object ();\nstatic GLboolean _glewInit_GL_ARB_geometry_shader4 ();\nstatic GLboolean _glewInit_GL_ARB_get_program_binary ();\nstatic GLboolean _glewInit_GL_ARB_get_texture_sub_image ();\nstatic GLboolean _glewInit_GL_ARB_gl_spirv ();\nstatic GLboolean _glewInit_GL_ARB_gpu_shader_fp64 ();\nstatic GLboolean _glewInit_GL_ARB_gpu_shader_int64 ();\nstatic GLboolean _glewInit_GL_ARB_imaging ();\nstatic GLboolean _glewInit_GL_ARB_indirect_parameters ();\nstatic GLboolean _glewInit_GL_ARB_instanced_arrays ();\nstatic GLboolean _glewInit_GL_ARB_internalformat_query ();\nstatic GLboolean _glewInit_GL_ARB_internalformat_query2 ();\nstatic GLboolean _glewInit_GL_ARB_invalidate_subdata ();\nstatic GLboolean _glewInit_GL_ARB_map_buffer_range ();\nstatic GLboolean _glewInit_GL_ARB_matrix_palette ();\nstatic GLboolean _glewInit_GL_ARB_multi_bind ();\nstatic GLboolean _glewInit_GL_ARB_multi_draw_indirect ();\nstatic GLboolean _glewInit_GL_ARB_multisample ();\nstatic GLboolean _glewInit_GL_ARB_multitexture ();\nstatic GLboolean _glewInit_GL_ARB_occlusion_query ();\nstatic GLboolean _glewInit_GL_ARB_parallel_shader_compile ();\nstatic GLboolean _glewInit_GL_ARB_point_parameters ();\nstatic GLboolean _glewInit_GL_ARB_program_interface_query ();\nstatic GLboolean _glewInit_GL_ARB_provoking_vertex ();\nstatic GLboolean _glewInit_GL_ARB_robustness ();\nstatic GLboolean _glewInit_GL_ARB_sample_locations ();\nstatic GLboolean _glewInit_GL_ARB_sample_shading ();\nstatic GLboolean _glewInit_GL_ARB_sampler_objects ();\nstatic GLboolean _glewInit_GL_ARB_separate_shader_objects ();\nstatic GLboolean _glewInit_GL_ARB_shader_atomic_counters ();\nstatic GLboolean _glewInit_GL_ARB_shader_image_load_store ();\nstatic GLboolean _glewInit_GL_ARB_shader_objects ();\nstatic GLboolean _glewInit_GL_ARB_shader_storage_buffer_object ();\nstatic GLboolean _glewInit_GL_ARB_shader_subroutine ();\nstatic GLboolean _glewInit_GL_ARB_shading_language_include ();\nstatic GLboolean _glewInit_GL_ARB_sparse_buffer ();\nstatic GLboolean _glewInit_GL_ARB_sparse_texture ();\nstatic GLboolean _glewInit_GL_ARB_sync ();\nstatic GLboolean _glewInit_GL_ARB_tessellation_shader ();\nstatic GLboolean _glewInit_GL_ARB_texture_barrier ();\nstatic GLboolean _glewInit_GL_ARB_texture_buffer_object ();\nstatic GLboolean _glewInit_GL_ARB_texture_buffer_range ();\nstatic GLboolean _glewInit_GL_ARB_texture_compression ();\nstatic GLboolean _glewInit_GL_ARB_texture_multisample ();\nstatic GLboolean _glewInit_GL_ARB_texture_storage ();\nstatic GLboolean _glewInit_GL_ARB_texture_storage_multisample ();\nstatic GLboolean _glewInit_GL_ARB_texture_view ();\nstatic GLboolean _glewInit_GL_ARB_timer_query ();\nstatic GLboolean _glewInit_GL_ARB_transform_feedback2 ();\nstatic GLboolean _glewInit_GL_ARB_transform_feedback3 ();\nstatic GLboolean _glewInit_GL_ARB_transform_feedback_instanced ();\nstatic GLboolean _glewInit_GL_ARB_transpose_matrix ();\nstatic GLboolean _glewInit_GL_ARB_uniform_buffer_object ();\nstatic GLboolean _glewInit_GL_ARB_vertex_array_object ();\nstatic GLboolean _glewInit_GL_ARB_vertex_attrib_64bit ();\nstatic GLboolean _glewInit_GL_ARB_vertex_attrib_binding ();\nstatic GLboolean _glewInit_GL_ARB_vertex_blend ();\nstatic GLboolean _glewInit_GL_ARB_vertex_buffer_object ();\nstatic GLboolean _glewInit_GL_ARB_vertex_program ();\nstatic GLboolean _glewInit_GL_ARB_vertex_shader ();\nstatic GLboolean _glewInit_GL_ARB_vertex_type_2_10_10_10_rev ();\nstatic GLboolean _glewInit_GL_ARB_viewport_array ();\nstatic GLboolean _glewInit_GL_ARB_window_pos ();\nstatic GLboolean _glewInit_GL_ATI_draw_buffers ();\nstatic GLboolean _glewInit_GL_ATI_element_array ();\nstatic GLboolean _glewInit_GL_ATI_envmap_bumpmap ();\nstatic GLboolean _glewInit_GL_ATI_fragment_shader ();\nstatic GLboolean _glewInit_GL_ATI_map_object_buffer ();\nstatic GLboolean _glewInit_GL_ATI_pn_triangles ();\nstatic GLboolean _glewInit_GL_ATI_separate_stencil ();\nstatic GLboolean _glewInit_GL_ATI_vertex_array_object ();\nstatic GLboolean _glewInit_GL_ATI_vertex_attrib_array_object ();\nstatic GLboolean _glewInit_GL_ATI_vertex_streams ();\nstatic GLboolean _glewInit_GL_EXT_bindable_uniform ();\nstatic GLboolean _glewInit_GL_EXT_blend_color ();\nstatic GLboolean _glewInit_GL_EXT_blend_equation_separate ();\nstatic GLboolean _glewInit_GL_EXT_blend_func_separate ();\nstatic GLboolean _glewInit_GL_EXT_blend_minmax ();\nstatic GLboolean _glewInit_GL_EXT_color_subtable ();\nstatic GLboolean _glewInit_GL_EXT_compiled_vertex_array ();\nstatic GLboolean _glewInit_GL_EXT_convolution ();\nstatic GLboolean _glewInit_GL_EXT_coordinate_frame ();\nstatic GLboolean _glewInit_GL_EXT_copy_texture ();\nstatic GLboolean _glewInit_GL_EXT_cull_vertex ();\nstatic GLboolean _glewInit_GL_EXT_debug_label ();\nstatic GLboolean _glewInit_GL_EXT_debug_marker ();\nstatic GLboolean _glewInit_GL_EXT_depth_bounds_test ();\nstatic GLboolean _glewInit_GL_EXT_direct_state_access ();\nstatic GLboolean _glewInit_GL_EXT_draw_buffers2 ();\nstatic GLboolean _glewInit_GL_EXT_draw_instanced ();\nstatic GLboolean _glewInit_GL_EXT_draw_range_elements ();\nstatic GLboolean _glewInit_GL_EXT_fog_coord ();\nstatic GLboolean _glewInit_GL_EXT_fragment_lighting ();\nstatic GLboolean _glewInit_GL_EXT_framebuffer_blit ();\nstatic GLboolean _glewInit_GL_EXT_framebuffer_multisample ();\nstatic GLboolean _glewInit_GL_EXT_framebuffer_object ();\nstatic GLboolean _glewInit_GL_EXT_geometry_shader4 ();\nstatic GLboolean _glewInit_GL_EXT_gpu_program_parameters ();\nstatic GLboolean _glewInit_GL_EXT_gpu_shader4 ();\nstatic GLboolean _glewInit_GL_EXT_histogram ();\nstatic GLboolean _glewInit_GL_EXT_index_func ();\nstatic GLboolean _glewInit_GL_EXT_index_material ();\nstatic GLboolean _glewInit_GL_EXT_light_texture ();\nstatic GLboolean _glewInit_GL_EXT_multi_draw_arrays ();\nstatic GLboolean _glewInit_GL_EXT_multisample ();\nstatic GLboolean _glewInit_GL_EXT_paletted_texture ();\nstatic GLboolean _glewInit_GL_EXT_pixel_transform ();\nstatic GLboolean _glewInit_GL_EXT_point_parameters ();\nstatic GLboolean _glewInit_GL_EXT_polygon_offset ();\nstatic GLboolean _glewInit_GL_EXT_polygon_offset_clamp ();\nstatic GLboolean _glewInit_GL_EXT_provoking_vertex ();\nstatic GLboolean _glewInit_GL_EXT_raster_multisample ();\nstatic GLboolean _glewInit_GL_EXT_scene_marker ();\nstatic GLboolean _glewInit_GL_EXT_secondary_color ();\nstatic GLboolean _glewInit_GL_EXT_separate_shader_objects ();\nstatic GLboolean _glewInit_GL_EXT_shader_image_load_store ();\nstatic GLboolean _glewInit_GL_EXT_stencil_two_side ();\nstatic GLboolean _glewInit_GL_EXT_subtexture ();\nstatic GLboolean _glewInit_GL_EXT_texture3D ();\nstatic GLboolean _glewInit_GL_EXT_texture_array ();\nstatic GLboolean _glewInit_GL_EXT_texture_buffer_object ();\nstatic GLboolean _glewInit_GL_EXT_texture_integer ();\nstatic GLboolean _glewInit_GL_EXT_texture_object ();\nstatic GLboolean _glewInit_GL_EXT_texture_perturb_normal ();\nstatic GLboolean _glewInit_GL_EXT_timer_query ();\nstatic GLboolean _glewInit_GL_EXT_transform_feedback ();\nstatic GLboolean _glewInit_GL_EXT_vertex_array ();\nstatic GLboolean _glewInit_GL_EXT_vertex_attrib_64bit ();\nstatic GLboolean _glewInit_GL_EXT_vertex_shader ();\nstatic GLboolean _glewInit_GL_EXT_vertex_weighting ();\nstatic GLboolean _glewInit_GL_EXT_window_rectangles ();\nstatic GLboolean _glewInit_GL_EXT_x11_sync_object ();\nstatic GLboolean _glewInit_GL_GREMEDY_frame_terminator ();\nstatic GLboolean _glewInit_GL_GREMEDY_string_marker ();\nstatic GLboolean _glewInit_GL_HP_image_transform ();\nstatic GLboolean _glewInit_GL_IBM_multimode_draw_arrays ();\nstatic GLboolean _glewInit_GL_IBM_vertex_array_lists ();\nstatic GLboolean _glewInit_GL_INTEL_map_texture ();\nstatic GLboolean _glewInit_GL_INTEL_parallel_arrays ();\nstatic GLboolean _glewInit_GL_INTEL_performance_query ();\nstatic GLboolean _glewInit_GL_INTEL_texture_scissor ();\nstatic GLboolean _glewInit_GL_KHR_blend_equation_advanced ();\nstatic GLboolean _glewInit_GL_KHR_debug ();\nstatic GLboolean _glewInit_GL_KHR_robustness ();\nstatic GLboolean _glewInit_GL_KTX_buffer_region ();\nstatic GLboolean _glewInit_GL_MESA_resize_buffers ();\nstatic GLboolean _glewInit_GL_MESA_window_pos ();\nstatic GLboolean _glewInit_GL_NVX_conditional_render ();\nstatic GLboolean _glewInit_GL_NVX_linked_gpu_multicast ();\nstatic GLboolean _glewInit_GL_NV_bindless_multi_draw_indirect ();\nstatic GLboolean _glewInit_GL_NV_bindless_multi_draw_indirect_count ();\nstatic GLboolean _glewInit_GL_NV_bindless_texture ();\nstatic GLboolean _glewInit_GL_NV_blend_equation_advanced ();\nstatic GLboolean _glewInit_GL_NV_clip_space_w_scaling ();\nstatic GLboolean _glewInit_GL_NV_command_list ();\nstatic GLboolean _glewInit_GL_NV_conditional_render ();\nstatic GLboolean _glewInit_GL_NV_conservative_raster ();\nstatic GLboolean _glewInit_GL_NV_conservative_raster_dilate ();\nstatic GLboolean _glewInit_GL_NV_conservative_raster_pre_snap_triangles ();\nstatic GLboolean _glewInit_GL_NV_copy_image ();\nstatic GLboolean _glewInit_GL_NV_depth_buffer_float ();\nstatic GLboolean _glewInit_GL_NV_draw_texture ();\nstatic GLboolean _glewInit_GL_NV_draw_vulkan_image ();\nstatic GLboolean _glewInit_GL_NV_evaluators ();\nstatic GLboolean _glewInit_GL_NV_explicit_multisample ();\nstatic GLboolean _glewInit_GL_NV_fence ();\nstatic GLboolean _glewInit_GL_NV_fragment_coverage_to_color ();\nstatic GLboolean _glewInit_GL_NV_fragment_program ();\nstatic GLboolean _glewInit_GL_NV_framebuffer_multisample_coverage ();\nstatic GLboolean _glewInit_GL_NV_geometry_program4 ();\nstatic GLboolean _glewInit_GL_NV_gpu_multicast ();\nstatic GLboolean _glewInit_GL_NV_gpu_program4 ();\nstatic GLboolean _glewInit_GL_NV_gpu_shader5 ();\nstatic GLboolean _glewInit_GL_NV_half_float ();\nstatic GLboolean _glewInit_GL_NV_internalformat_sample_query ();\nstatic GLboolean _glewInit_GL_NV_occlusion_query ();\nstatic GLboolean _glewInit_GL_NV_parameter_buffer_object ();\nstatic GLboolean _glewInit_GL_NV_path_rendering ();\nstatic GLboolean _glewInit_GL_NV_pixel_data_range ();\nstatic GLboolean _glewInit_GL_NV_point_sprite ();\nstatic GLboolean _glewInit_GL_NV_present_video ();\nstatic GLboolean _glewInit_GL_NV_primitive_restart ();\nstatic GLboolean _glewInit_GL_NV_register_combiners ();\nstatic GLboolean _glewInit_GL_NV_register_combiners2 ();\nstatic GLboolean _glewInit_GL_NV_sample_locations ();\nstatic GLboolean _glewInit_GL_NV_shader_buffer_load ();\nstatic GLboolean _glewInit_GL_NV_texture_barrier ();\nstatic GLboolean _glewInit_GL_NV_texture_multisample ();\nstatic GLboolean _glewInit_GL_NV_transform_feedback ();\nstatic GLboolean _glewInit_GL_NV_transform_feedback2 ();\nstatic GLboolean _glewInit_GL_NV_vdpau_interop ();\nstatic GLboolean _glewInit_GL_NV_vertex_array_range ();\nstatic GLboolean _glewInit_GL_NV_vertex_attrib_integer_64bit ();\nstatic GLboolean _glewInit_GL_NV_vertex_buffer_unified_memory ();\nstatic GLboolean _glewInit_GL_NV_vertex_program ();\nstatic GLboolean _glewInit_GL_NV_video_capture ();\nstatic GLboolean _glewInit_GL_NV_viewport_swizzle ();\nstatic GLboolean _glewInit_GL_OES_single_precision ();\nstatic GLboolean _glewInit_GL_OVR_multiview ();\nstatic GLboolean _glewInit_GL_REGAL_ES1_0_compatibility ();\nstatic GLboolean _glewInit_GL_REGAL_ES1_1_compatibility ();\nstatic GLboolean _glewInit_GL_REGAL_error_string ();\nstatic GLboolean _glewInit_GL_REGAL_extension_query ();\nstatic GLboolean _glewInit_GL_REGAL_log ();\nstatic GLboolean _glewInit_GL_REGAL_proc_address ();\nstatic GLboolean _glewInit_GL_SGIS_detail_texture ();\nstatic GLboolean _glewInit_GL_SGIS_fog_function ();\nstatic GLboolean _glewInit_GL_SGIS_multisample ();\nstatic GLboolean _glewInit_GL_SGIS_sharpen_texture ();\nstatic GLboolean _glewInit_GL_SGIS_texture4D ();\nstatic GLboolean _glewInit_GL_SGIS_texture_filter4 ();\nstatic GLboolean _glewInit_GL_SGIX_async ();\nstatic GLboolean _glewInit_GL_SGIX_flush_raster ();\nstatic GLboolean _glewInit_GL_SGIX_fog_texture ();\nstatic GLboolean _glewInit_GL_SGIX_fragment_specular_lighting ();\nstatic GLboolean _glewInit_GL_SGIX_framezoom ();\nstatic GLboolean _glewInit_GL_SGIX_pixel_texture ();\nstatic GLboolean _glewInit_GL_SGIX_reference_plane ();\nstatic GLboolean _glewInit_GL_SGIX_sprite ();\nstatic GLboolean _glewInit_GL_SGIX_tag_sample_buffer ();\nstatic GLboolean _glewInit_GL_SGI_color_table ();\nstatic GLboolean _glewInit_GL_SUNX_constant_data ();\nstatic GLboolean _glewInit_GL_SUN_global_alpha ();\nstatic GLboolean _glewInit_GL_SUN_read_video_pixels ();\nstatic GLboolean _glewInit_GL_SUN_triangle_list ();\nstatic GLboolean _glewInit_GL_SUN_vertex ();\nstatic GLboolean _glewInit_GL_WIN_swap_hint ();\n\n#ifdef GL_VERSION_1_2\n\nstatic GLboolean _glewInit_GL_VERSION_1_2 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glCopyTexSubImage3D = (PFNGLCOPYTEXSUBIMAGE3DPROC)glewGetProcAddress((const GLubyte*)\"glCopyTexSubImage3D\")) == NULL) || r;\n  r = ((glDrawRangeElements = (PFNGLDRAWRANGEELEMENTSPROC)glewGetProcAddress((const GLubyte*)\"glDrawRangeElements\")) == NULL) || r;\n  r = ((glTexImage3D = (PFNGLTEXIMAGE3DPROC)glewGetProcAddress((const GLubyte*)\"glTexImage3D\")) == NULL) || r;\n  r = ((glTexSubImage3D = (PFNGLTEXSUBIMAGE3DPROC)glewGetProcAddress((const GLubyte*)\"glTexSubImage3D\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_VERSION_1_2 */\n\n#ifdef GL_VERSION_1_3\n\nstatic GLboolean _glewInit_GL_VERSION_1_3 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glActiveTexture = (PFNGLACTIVETEXTUREPROC)glewGetProcAddress((const GLubyte*)\"glActiveTexture\")) == NULL) || r;\n  r = ((glClientActiveTexture = (PFNGLCLIENTACTIVETEXTUREPROC)glewGetProcAddress((const GLubyte*)\"glClientActiveTexture\")) == NULL) || r;\n  r = ((glCompressedTexImage1D = (PFNGLCOMPRESSEDTEXIMAGE1DPROC)glewGetProcAddress((const GLubyte*)\"glCompressedTexImage1D\")) == NULL) || r;\n  r = ((glCompressedTexImage2D = (PFNGLCOMPRESSEDTEXIMAGE2DPROC)glewGetProcAddress((const GLubyte*)\"glCompressedTexImage2D\")) == NULL) || r;\n  r = ((glCompressedTexImage3D = (PFNGLCOMPRESSEDTEXIMAGE3DPROC)glewGetProcAddress((const GLubyte*)\"glCompressedTexImage3D\")) == NULL) || r;\n  r = ((glCompressedTexSubImage1D = (PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)glewGetProcAddress((const GLubyte*)\"glCompressedTexSubImage1D\")) == NULL) || r;\n  r = ((glCompressedTexSubImage2D = (PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)glewGetProcAddress((const GLubyte*)\"glCompressedTexSubImage2D\")) == NULL) || r;\n  r = ((glCompressedTexSubImage3D = (PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)glewGetProcAddress((const GLubyte*)\"glCompressedTexSubImage3D\")) == NULL) || r;\n  r = ((glGetCompressedTexImage = (PFNGLGETCOMPRESSEDTEXIMAGEPROC)glewGetProcAddress((const GLubyte*)\"glGetCompressedTexImage\")) == NULL) || r;\n  r = ((glLoadTransposeMatrixd = (PFNGLLOADTRANSPOSEMATRIXDPROC)glewGetProcAddress((const GLubyte*)\"glLoadTransposeMatrixd\")) == NULL) || r;\n  r = ((glLoadTransposeMatrixf = (PFNGLLOADTRANSPOSEMATRIXFPROC)glewGetProcAddress((const GLubyte*)\"glLoadTransposeMatrixf\")) == NULL) || r;\n  r = ((glMultTransposeMatrixd = (PFNGLMULTTRANSPOSEMATRIXDPROC)glewGetProcAddress((const GLubyte*)\"glMultTransposeMatrixd\")) == NULL) || r;\n  r = ((glMultTransposeMatrixf = (PFNGLMULTTRANSPOSEMATRIXFPROC)glewGetProcAddress((const GLubyte*)\"glMultTransposeMatrixf\")) == NULL) || r;\n  r = ((glMultiTexCoord1d = (PFNGLMULTITEXCOORD1DPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord1d\")) == NULL) || r;\n  r = ((glMultiTexCoord1dv = (PFNGLMULTITEXCOORD1DVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord1dv\")) == NULL) || r;\n  r = ((glMultiTexCoord1f = (PFNGLMULTITEXCOORD1FPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord1f\")) == NULL) || r;\n  r = ((glMultiTexCoord1fv = (PFNGLMULTITEXCOORD1FVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord1fv\")) == NULL) || r;\n  r = ((glMultiTexCoord1i = (PFNGLMULTITEXCOORD1IPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord1i\")) == NULL) || r;\n  r = ((glMultiTexCoord1iv = (PFNGLMULTITEXCOORD1IVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord1iv\")) == NULL) || r;\n  r = ((glMultiTexCoord1s = (PFNGLMULTITEXCOORD1SPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord1s\")) == NULL) || r;\n  r = ((glMultiTexCoord1sv = (PFNGLMULTITEXCOORD1SVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord1sv\")) == NULL) || r;\n  r = ((glMultiTexCoord2d = (PFNGLMULTITEXCOORD2DPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord2d\")) == NULL) || r;\n  r = ((glMultiTexCoord2dv = (PFNGLMULTITEXCOORD2DVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord2dv\")) == NULL) || r;\n  r = ((glMultiTexCoord2f = (PFNGLMULTITEXCOORD2FPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord2f\")) == NULL) || r;\n  r = ((glMultiTexCoord2fv = (PFNGLMULTITEXCOORD2FVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord2fv\")) == NULL) || r;\n  r = ((glMultiTexCoord2i = (PFNGLMULTITEXCOORD2IPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord2i\")) == NULL) || r;\n  r = ((glMultiTexCoord2iv = (PFNGLMULTITEXCOORD2IVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord2iv\")) == NULL) || r;\n  r = ((glMultiTexCoord2s = (PFNGLMULTITEXCOORD2SPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord2s\")) == NULL) || r;\n  r = ((glMultiTexCoord2sv = (PFNGLMULTITEXCOORD2SVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord2sv\")) == NULL) || r;\n  r = ((glMultiTexCoord3d = (PFNGLMULTITEXCOORD3DPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord3d\")) == NULL) || r;\n  r = ((glMultiTexCoord3dv = (PFNGLMULTITEXCOORD3DVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord3dv\")) == NULL) || r;\n  r = ((glMultiTexCoord3f = (PFNGLMULTITEXCOORD3FPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord3f\")) == NULL) || r;\n  r = ((glMultiTexCoord3fv = (PFNGLMULTITEXCOORD3FVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord3fv\")) == NULL) || r;\n  r = ((glMultiTexCoord3i = (PFNGLMULTITEXCOORD3IPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord3i\")) == NULL) || r;\n  r = ((glMultiTexCoord3iv = (PFNGLMULTITEXCOORD3IVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord3iv\")) == NULL) || r;\n  r = ((glMultiTexCoord3s = (PFNGLMULTITEXCOORD3SPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord3s\")) == NULL) || r;\n  r = ((glMultiTexCoord3sv = (PFNGLMULTITEXCOORD3SVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord3sv\")) == NULL) || r;\n  r = ((glMultiTexCoord4d = (PFNGLMULTITEXCOORD4DPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord4d\")) == NULL) || r;\n  r = ((glMultiTexCoord4dv = (PFNGLMULTITEXCOORD4DVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord4dv\")) == NULL) || r;\n  r = ((glMultiTexCoord4f = (PFNGLMULTITEXCOORD4FPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord4f\")) == NULL) || r;\n  r = ((glMultiTexCoord4fv = (PFNGLMULTITEXCOORD4FVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord4fv\")) == NULL) || r;\n  r = ((glMultiTexCoord4i = (PFNGLMULTITEXCOORD4IPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord4i\")) == NULL) || r;\n  r = ((glMultiTexCoord4iv = (PFNGLMULTITEXCOORD4IVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord4iv\")) == NULL) || r;\n  r = ((glMultiTexCoord4s = (PFNGLMULTITEXCOORD4SPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord4s\")) == NULL) || r;\n  r = ((glMultiTexCoord4sv = (PFNGLMULTITEXCOORD4SVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord4sv\")) == NULL) || r;\n  r = ((glSampleCoverage = (PFNGLSAMPLECOVERAGEPROC)glewGetProcAddress((const GLubyte*)\"glSampleCoverage\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_VERSION_1_3 */\n\n#ifdef GL_VERSION_1_4\n\nstatic GLboolean _glewInit_GL_VERSION_1_4 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBlendColor = (PFNGLBLENDCOLORPROC)glewGetProcAddress((const GLubyte*)\"glBlendColor\")) == NULL) || r;\n  r = ((glBlendEquation = (PFNGLBLENDEQUATIONPROC)glewGetProcAddress((const GLubyte*)\"glBlendEquation\")) == NULL) || r;\n  r = ((glBlendFuncSeparate = (PFNGLBLENDFUNCSEPARATEPROC)glewGetProcAddress((const GLubyte*)\"glBlendFuncSeparate\")) == NULL) || r;\n  r = ((glFogCoordPointer = (PFNGLFOGCOORDPOINTERPROC)glewGetProcAddress((const GLubyte*)\"glFogCoordPointer\")) == NULL) || r;\n  r = ((glFogCoordd = (PFNGLFOGCOORDDPROC)glewGetProcAddress((const GLubyte*)\"glFogCoordd\")) == NULL) || r;\n  r = ((glFogCoorddv = (PFNGLFOGCOORDDVPROC)glewGetProcAddress((const GLubyte*)\"glFogCoorddv\")) == NULL) || r;\n  r = ((glFogCoordf = (PFNGLFOGCOORDFPROC)glewGetProcAddress((const GLubyte*)\"glFogCoordf\")) == NULL) || r;\n  r = ((glFogCoordfv = (PFNGLFOGCOORDFVPROC)glewGetProcAddress((const GLubyte*)\"glFogCoordfv\")) == NULL) || r;\n  r = ((glMultiDrawArrays = (PFNGLMULTIDRAWARRAYSPROC)glewGetProcAddress((const GLubyte*)\"glMultiDrawArrays\")) == NULL) || r;\n  r = ((glMultiDrawElements = (PFNGLMULTIDRAWELEMENTSPROC)glewGetProcAddress((const GLubyte*)\"glMultiDrawElements\")) == NULL) || r;\n  r = ((glPointParameterf = (PFNGLPOINTPARAMETERFPROC)glewGetProcAddress((const GLubyte*)\"glPointParameterf\")) == NULL) || r;\n  r = ((glPointParameterfv = (PFNGLPOINTPARAMETERFVPROC)glewGetProcAddress((const GLubyte*)\"glPointParameterfv\")) == NULL) || r;\n  r = ((glPointParameteri = (PFNGLPOINTPARAMETERIPROC)glewGetProcAddress((const GLubyte*)\"glPointParameteri\")) == NULL) || r;\n  r = ((glPointParameteriv = (PFNGLPOINTPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glPointParameteriv\")) == NULL) || r;\n  r = ((glSecondaryColor3b = (PFNGLSECONDARYCOLOR3BPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3b\")) == NULL) || r;\n  r = ((glSecondaryColor3bv = (PFNGLSECONDARYCOLOR3BVPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3bv\")) == NULL) || r;\n  r = ((glSecondaryColor3d = (PFNGLSECONDARYCOLOR3DPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3d\")) == NULL) || r;\n  r = ((glSecondaryColor3dv = (PFNGLSECONDARYCOLOR3DVPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3dv\")) == NULL) || r;\n  r = ((glSecondaryColor3f = (PFNGLSECONDARYCOLOR3FPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3f\")) == NULL) || r;\n  r = ((glSecondaryColor3fv = (PFNGLSECONDARYCOLOR3FVPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3fv\")) == NULL) || r;\n  r = ((glSecondaryColor3i = (PFNGLSECONDARYCOLOR3IPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3i\")) == NULL) || r;\n  r = ((glSecondaryColor3iv = (PFNGLSECONDARYCOLOR3IVPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3iv\")) == NULL) || r;\n  r = ((glSecondaryColor3s = (PFNGLSECONDARYCOLOR3SPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3s\")) == NULL) || r;\n  r = ((glSecondaryColor3sv = (PFNGLSECONDARYCOLOR3SVPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3sv\")) == NULL) || r;\n  r = ((glSecondaryColor3ub = (PFNGLSECONDARYCOLOR3UBPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3ub\")) == NULL) || r;\n  r = ((glSecondaryColor3ubv = (PFNGLSECONDARYCOLOR3UBVPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3ubv\")) == NULL) || r;\n  r = ((glSecondaryColor3ui = (PFNGLSECONDARYCOLOR3UIPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3ui\")) == NULL) || r;\n  r = ((glSecondaryColor3uiv = (PFNGLSECONDARYCOLOR3UIVPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3uiv\")) == NULL) || r;\n  r = ((glSecondaryColor3us = (PFNGLSECONDARYCOLOR3USPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3us\")) == NULL) || r;\n  r = ((glSecondaryColor3usv = (PFNGLSECONDARYCOLOR3USVPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3usv\")) == NULL) || r;\n  r = ((glSecondaryColorPointer = (PFNGLSECONDARYCOLORPOINTERPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColorPointer\")) == NULL) || r;\n  r = ((glWindowPos2d = (PFNGLWINDOWPOS2DPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos2d\")) == NULL) || r;\n  r = ((glWindowPos2dv = (PFNGLWINDOWPOS2DVPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos2dv\")) == NULL) || r;\n  r = ((glWindowPos2f = (PFNGLWINDOWPOS2FPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos2f\")) == NULL) || r;\n  r = ((glWindowPos2fv = (PFNGLWINDOWPOS2FVPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos2fv\")) == NULL) || r;\n  r = ((glWindowPos2i = (PFNGLWINDOWPOS2IPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos2i\")) == NULL) || r;\n  r = ((glWindowPos2iv = (PFNGLWINDOWPOS2IVPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos2iv\")) == NULL) || r;\n  r = ((glWindowPos2s = (PFNGLWINDOWPOS2SPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos2s\")) == NULL) || r;\n  r = ((glWindowPos2sv = (PFNGLWINDOWPOS2SVPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos2sv\")) == NULL) || r;\n  r = ((glWindowPos3d = (PFNGLWINDOWPOS3DPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos3d\")) == NULL) || r;\n  r = ((glWindowPos3dv = (PFNGLWINDOWPOS3DVPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos3dv\")) == NULL) || r;\n  r = ((glWindowPos3f = (PFNGLWINDOWPOS3FPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos3f\")) == NULL) || r;\n  r = ((glWindowPos3fv = (PFNGLWINDOWPOS3FVPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos3fv\")) == NULL) || r;\n  r = ((glWindowPos3i = (PFNGLWINDOWPOS3IPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos3i\")) == NULL) || r;\n  r = ((glWindowPos3iv = (PFNGLWINDOWPOS3IVPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos3iv\")) == NULL) || r;\n  r = ((glWindowPos3s = (PFNGLWINDOWPOS3SPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos3s\")) == NULL) || r;\n  r = ((glWindowPos3sv = (PFNGLWINDOWPOS3SVPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos3sv\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_VERSION_1_4 */\n\n#ifdef GL_VERSION_1_5\n\nstatic GLboolean _glewInit_GL_VERSION_1_5 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBeginQuery = (PFNGLBEGINQUERYPROC)glewGetProcAddress((const GLubyte*)\"glBeginQuery\")) == NULL) || r;\n  r = ((glBindBuffer = (PFNGLBINDBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glBindBuffer\")) == NULL) || r;\n  r = ((glBufferData = (PFNGLBUFFERDATAPROC)glewGetProcAddress((const GLubyte*)\"glBufferData\")) == NULL) || r;\n  r = ((glBufferSubData = (PFNGLBUFFERSUBDATAPROC)glewGetProcAddress((const GLubyte*)\"glBufferSubData\")) == NULL) || r;\n  r = ((glDeleteBuffers = (PFNGLDELETEBUFFERSPROC)glewGetProcAddress((const GLubyte*)\"glDeleteBuffers\")) == NULL) || r;\n  r = ((glDeleteQueries = (PFNGLDELETEQUERIESPROC)glewGetProcAddress((const GLubyte*)\"glDeleteQueries\")) == NULL) || r;\n  r = ((glEndQuery = (PFNGLENDQUERYPROC)glewGetProcAddress((const GLubyte*)\"glEndQuery\")) == NULL) || r;\n  r = ((glGenBuffers = (PFNGLGENBUFFERSPROC)glewGetProcAddress((const GLubyte*)\"glGenBuffers\")) == NULL) || r;\n  r = ((glGenQueries = (PFNGLGENQUERIESPROC)glewGetProcAddress((const GLubyte*)\"glGenQueries\")) == NULL) || r;\n  r = ((glGetBufferParameteriv = (PFNGLGETBUFFERPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetBufferParameteriv\")) == NULL) || r;\n  r = ((glGetBufferPointerv = (PFNGLGETBUFFERPOINTERVPROC)glewGetProcAddress((const GLubyte*)\"glGetBufferPointerv\")) == NULL) || r;\n  r = ((glGetBufferSubData = (PFNGLGETBUFFERSUBDATAPROC)glewGetProcAddress((const GLubyte*)\"glGetBufferSubData\")) == NULL) || r;\n  r = ((glGetQueryObjectiv = (PFNGLGETQUERYOBJECTIVPROC)glewGetProcAddress((const GLubyte*)\"glGetQueryObjectiv\")) == NULL) || r;\n  r = ((glGetQueryObjectuiv = (PFNGLGETQUERYOBJECTUIVPROC)glewGetProcAddress((const GLubyte*)\"glGetQueryObjectuiv\")) == NULL) || r;\n  r = ((glGetQueryiv = (PFNGLGETQUERYIVPROC)glewGetProcAddress((const GLubyte*)\"glGetQueryiv\")) == NULL) || r;\n  r = ((glIsBuffer = (PFNGLISBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glIsBuffer\")) == NULL) || r;\n  r = ((glIsQuery = (PFNGLISQUERYPROC)glewGetProcAddress((const GLubyte*)\"glIsQuery\")) == NULL) || r;\n  r = ((glMapBuffer = (PFNGLMAPBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glMapBuffer\")) == NULL) || r;\n  r = ((glUnmapBuffer = (PFNGLUNMAPBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glUnmapBuffer\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_VERSION_1_5 */\n\n#ifdef GL_VERSION_2_0\n\nstatic GLboolean _glewInit_GL_VERSION_2_0 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glAttachShader = (PFNGLATTACHSHADERPROC)glewGetProcAddress((const GLubyte*)\"glAttachShader\")) == NULL) || r;\n  r = ((glBindAttribLocation = (PFNGLBINDATTRIBLOCATIONPROC)glewGetProcAddress((const GLubyte*)\"glBindAttribLocation\")) == NULL) || r;\n  r = ((glBlendEquationSeparate = (PFNGLBLENDEQUATIONSEPARATEPROC)glewGetProcAddress((const GLubyte*)\"glBlendEquationSeparate\")) == NULL) || r;\n  r = ((glCompileShader = (PFNGLCOMPILESHADERPROC)glewGetProcAddress((const GLubyte*)\"glCompileShader\")) == NULL) || r;\n  r = ((glCreateProgram = (PFNGLCREATEPROGRAMPROC)glewGetProcAddress((const GLubyte*)\"glCreateProgram\")) == NULL) || r;\n  r = ((glCreateShader = (PFNGLCREATESHADERPROC)glewGetProcAddress((const GLubyte*)\"glCreateShader\")) == NULL) || r;\n  r = ((glDeleteProgram = (PFNGLDELETEPROGRAMPROC)glewGetProcAddress((const GLubyte*)\"glDeleteProgram\")) == NULL) || r;\n  r = ((glDeleteShader = (PFNGLDELETESHADERPROC)glewGetProcAddress((const GLubyte*)\"glDeleteShader\")) == NULL) || r;\n  r = ((glDetachShader = (PFNGLDETACHSHADERPROC)glewGetProcAddress((const GLubyte*)\"glDetachShader\")) == NULL) || r;\n  r = ((glDisableVertexAttribArray = (PFNGLDISABLEVERTEXATTRIBARRAYPROC)glewGetProcAddress((const GLubyte*)\"glDisableVertexAttribArray\")) == NULL) || r;\n  r = ((glDrawBuffers = (PFNGLDRAWBUFFERSPROC)glewGetProcAddress((const GLubyte*)\"glDrawBuffers\")) == NULL) || r;\n  r = ((glEnableVertexAttribArray = (PFNGLENABLEVERTEXATTRIBARRAYPROC)glewGetProcAddress((const GLubyte*)\"glEnableVertexAttribArray\")) == NULL) || r;\n  r = ((glGetActiveAttrib = (PFNGLGETACTIVEATTRIBPROC)glewGetProcAddress((const GLubyte*)\"glGetActiveAttrib\")) == NULL) || r;\n  r = ((glGetActiveUniform = (PFNGLGETACTIVEUNIFORMPROC)glewGetProcAddress((const GLubyte*)\"glGetActiveUniform\")) == NULL) || r;\n  r = ((glGetAttachedShaders = (PFNGLGETATTACHEDSHADERSPROC)glewGetProcAddress((const GLubyte*)\"glGetAttachedShaders\")) == NULL) || r;\n  r = ((glGetAttribLocation = (PFNGLGETATTRIBLOCATIONPROC)glewGetProcAddress((const GLubyte*)\"glGetAttribLocation\")) == NULL) || r;\n  r = ((glGetProgramInfoLog = (PFNGLGETPROGRAMINFOLOGPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramInfoLog\")) == NULL) || r;\n  r = ((glGetProgramiv = (PFNGLGETPROGRAMIVPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramiv\")) == NULL) || r;\n  r = ((glGetShaderInfoLog = (PFNGLGETSHADERINFOLOGPROC)glewGetProcAddress((const GLubyte*)\"glGetShaderInfoLog\")) == NULL) || r;\n  r = ((glGetShaderSource = (PFNGLGETSHADERSOURCEPROC)glewGetProcAddress((const GLubyte*)\"glGetShaderSource\")) == NULL) || r;\n  r = ((glGetShaderiv = (PFNGLGETSHADERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetShaderiv\")) == NULL) || r;\n  r = ((glGetUniformLocation = (PFNGLGETUNIFORMLOCATIONPROC)glewGetProcAddress((const GLubyte*)\"glGetUniformLocation\")) == NULL) || r;\n  r = ((glGetUniformfv = (PFNGLGETUNIFORMFVPROC)glewGetProcAddress((const GLubyte*)\"glGetUniformfv\")) == NULL) || r;\n  r = ((glGetUniformiv = (PFNGLGETUNIFORMIVPROC)glewGetProcAddress((const GLubyte*)\"glGetUniformiv\")) == NULL) || r;\n  r = ((glGetVertexAttribPointerv = (PFNGLGETVERTEXATTRIBPOINTERVPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexAttribPointerv\")) == NULL) || r;\n  r = ((glGetVertexAttribdv = (PFNGLGETVERTEXATTRIBDVPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexAttribdv\")) == NULL) || r;\n  r = ((glGetVertexAttribfv = (PFNGLGETVERTEXATTRIBFVPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexAttribfv\")) == NULL) || r;\n  r = ((glGetVertexAttribiv = (PFNGLGETVERTEXATTRIBIVPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexAttribiv\")) == NULL) || r;\n  r = ((glIsProgram = (PFNGLISPROGRAMPROC)glewGetProcAddress((const GLubyte*)\"glIsProgram\")) == NULL) || r;\n  r = ((glIsShader = (PFNGLISSHADERPROC)glewGetProcAddress((const GLubyte*)\"glIsShader\")) == NULL) || r;\n  r = ((glLinkProgram = (PFNGLLINKPROGRAMPROC)glewGetProcAddress((const GLubyte*)\"glLinkProgram\")) == NULL) || r;\n  r = ((glShaderSource = (PFNGLSHADERSOURCEPROC)glewGetProcAddress((const GLubyte*)\"glShaderSource\")) == NULL) || r;\n  r = ((glStencilFuncSeparate = (PFNGLSTENCILFUNCSEPARATEPROC)glewGetProcAddress((const GLubyte*)\"glStencilFuncSeparate\")) == NULL) || r;\n  r = ((glStencilMaskSeparate = (PFNGLSTENCILMASKSEPARATEPROC)glewGetProcAddress((const GLubyte*)\"glStencilMaskSeparate\")) == NULL) || r;\n  r = ((glStencilOpSeparate = (PFNGLSTENCILOPSEPARATEPROC)glewGetProcAddress((const GLubyte*)\"glStencilOpSeparate\")) == NULL) || r;\n  r = ((glUniform1f = (PFNGLUNIFORM1FPROC)glewGetProcAddress((const GLubyte*)\"glUniform1f\")) == NULL) || r;\n  r = ((glUniform1fv = (PFNGLUNIFORM1FVPROC)glewGetProcAddress((const GLubyte*)\"glUniform1fv\")) == NULL) || r;\n  r = ((glUniform1i = (PFNGLUNIFORM1IPROC)glewGetProcAddress((const GLubyte*)\"glUniform1i\")) == NULL) || r;\n  r = ((glUniform1iv = (PFNGLUNIFORM1IVPROC)glewGetProcAddress((const GLubyte*)\"glUniform1iv\")) == NULL) || r;\n  r = ((glUniform2f = (PFNGLUNIFORM2FPROC)glewGetProcAddress((const GLubyte*)\"glUniform2f\")) == NULL) || r;\n  r = ((glUniform2fv = (PFNGLUNIFORM2FVPROC)glewGetProcAddress((const GLubyte*)\"glUniform2fv\")) == NULL) || r;\n  r = ((glUniform2i = (PFNGLUNIFORM2IPROC)glewGetProcAddress((const GLubyte*)\"glUniform2i\")) == NULL) || r;\n  r = ((glUniform2iv = (PFNGLUNIFORM2IVPROC)glewGetProcAddress((const GLubyte*)\"glUniform2iv\")) == NULL) || r;\n  r = ((glUniform3f = (PFNGLUNIFORM3FPROC)glewGetProcAddress((const GLubyte*)\"glUniform3f\")) == NULL) || r;\n  r = ((glUniform3fv = (PFNGLUNIFORM3FVPROC)glewGetProcAddress((const GLubyte*)\"glUniform3fv\")) == NULL) || r;\n  r = ((glUniform3i = (PFNGLUNIFORM3IPROC)glewGetProcAddress((const GLubyte*)\"glUniform3i\")) == NULL) || r;\n  r = ((glUniform3iv = (PFNGLUNIFORM3IVPROC)glewGetProcAddress((const GLubyte*)\"glUniform3iv\")) == NULL) || r;\n  r = ((glUniform4f = (PFNGLUNIFORM4FPROC)glewGetProcAddress((const GLubyte*)\"glUniform4f\")) == NULL) || r;\n  r = ((glUniform4fv = (PFNGLUNIFORM4FVPROC)glewGetProcAddress((const GLubyte*)\"glUniform4fv\")) == NULL) || r;\n  r = ((glUniform4i = (PFNGLUNIFORM4IPROC)glewGetProcAddress((const GLubyte*)\"glUniform4i\")) == NULL) || r;\n  r = ((glUniform4iv = (PFNGLUNIFORM4IVPROC)glewGetProcAddress((const GLubyte*)\"glUniform4iv\")) == NULL) || r;\n  r = ((glUniformMatrix2fv = (PFNGLUNIFORMMATRIX2FVPROC)glewGetProcAddress((const GLubyte*)\"glUniformMatrix2fv\")) == NULL) || r;\n  r = ((glUniformMatrix3fv = (PFNGLUNIFORMMATRIX3FVPROC)glewGetProcAddress((const GLubyte*)\"glUniformMatrix3fv\")) == NULL) || r;\n  r = ((glUniformMatrix4fv = (PFNGLUNIFORMMATRIX4FVPROC)glewGetProcAddress((const GLubyte*)\"glUniformMatrix4fv\")) == NULL) || r;\n  r = ((glUseProgram = (PFNGLUSEPROGRAMPROC)glewGetProcAddress((const GLubyte*)\"glUseProgram\")) == NULL) || r;\n  r = ((glValidateProgram = (PFNGLVALIDATEPROGRAMPROC)glewGetProcAddress((const GLubyte*)\"glValidateProgram\")) == NULL) || r;\n  r = ((glVertexAttrib1d = (PFNGLVERTEXATTRIB1DPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib1d\")) == NULL) || r;\n  r = ((glVertexAttrib1dv = (PFNGLVERTEXATTRIB1DVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib1dv\")) == NULL) || r;\n  r = ((glVertexAttrib1f = (PFNGLVERTEXATTRIB1FPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib1f\")) == NULL) || r;\n  r = ((glVertexAttrib1fv = (PFNGLVERTEXATTRIB1FVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib1fv\")) == NULL) || r;\n  r = ((glVertexAttrib1s = (PFNGLVERTEXATTRIB1SPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib1s\")) == NULL) || r;\n  r = ((glVertexAttrib1sv = (PFNGLVERTEXATTRIB1SVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib1sv\")) == NULL) || r;\n  r = ((glVertexAttrib2d = (PFNGLVERTEXATTRIB2DPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib2d\")) == NULL) || r;\n  r = ((glVertexAttrib2dv = (PFNGLVERTEXATTRIB2DVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib2dv\")) == NULL) || r;\n  r = ((glVertexAttrib2f = (PFNGLVERTEXATTRIB2FPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib2f\")) == NULL) || r;\n  r = ((glVertexAttrib2fv = (PFNGLVERTEXATTRIB2FVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib2fv\")) == NULL) || r;\n  r = ((glVertexAttrib2s = (PFNGLVERTEXATTRIB2SPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib2s\")) == NULL) || r;\n  r = ((glVertexAttrib2sv = (PFNGLVERTEXATTRIB2SVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib2sv\")) == NULL) || r;\n  r = ((glVertexAttrib3d = (PFNGLVERTEXATTRIB3DPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib3d\")) == NULL) || r;\n  r = ((glVertexAttrib3dv = (PFNGLVERTEXATTRIB3DVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib3dv\")) == NULL) || r;\n  r = ((glVertexAttrib3f = (PFNGLVERTEXATTRIB3FPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib3f\")) == NULL) || r;\n  r = ((glVertexAttrib3fv = (PFNGLVERTEXATTRIB3FVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib3fv\")) == NULL) || r;\n  r = ((glVertexAttrib3s = (PFNGLVERTEXATTRIB3SPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib3s\")) == NULL) || r;\n  r = ((glVertexAttrib3sv = (PFNGLVERTEXATTRIB3SVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib3sv\")) == NULL) || r;\n  r = ((glVertexAttrib4Nbv = (PFNGLVERTEXATTRIB4NBVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4Nbv\")) == NULL) || r;\n  r = ((glVertexAttrib4Niv = (PFNGLVERTEXATTRIB4NIVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4Niv\")) == NULL) || r;\n  r = ((glVertexAttrib4Nsv = (PFNGLVERTEXATTRIB4NSVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4Nsv\")) == NULL) || r;\n  r = ((glVertexAttrib4Nub = (PFNGLVERTEXATTRIB4NUBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4Nub\")) == NULL) || r;\n  r = ((glVertexAttrib4Nubv = (PFNGLVERTEXATTRIB4NUBVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4Nubv\")) == NULL) || r;\n  r = ((glVertexAttrib4Nuiv = (PFNGLVERTEXATTRIB4NUIVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4Nuiv\")) == NULL) || r;\n  r = ((glVertexAttrib4Nusv = (PFNGLVERTEXATTRIB4NUSVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4Nusv\")) == NULL) || r;\n  r = ((glVertexAttrib4bv = (PFNGLVERTEXATTRIB4BVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4bv\")) == NULL) || r;\n  r = ((glVertexAttrib4d = (PFNGLVERTEXATTRIB4DPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4d\")) == NULL) || r;\n  r = ((glVertexAttrib4dv = (PFNGLVERTEXATTRIB4DVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4dv\")) == NULL) || r;\n  r = ((glVertexAttrib4f = (PFNGLVERTEXATTRIB4FPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4f\")) == NULL) || r;\n  r = ((glVertexAttrib4fv = (PFNGLVERTEXATTRIB4FVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4fv\")) == NULL) || r;\n  r = ((glVertexAttrib4iv = (PFNGLVERTEXATTRIB4IVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4iv\")) == NULL) || r;\n  r = ((glVertexAttrib4s = (PFNGLVERTEXATTRIB4SPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4s\")) == NULL) || r;\n  r = ((glVertexAttrib4sv = (PFNGLVERTEXATTRIB4SVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4sv\")) == NULL) || r;\n  r = ((glVertexAttrib4ubv = (PFNGLVERTEXATTRIB4UBVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4ubv\")) == NULL) || r;\n  r = ((glVertexAttrib4uiv = (PFNGLVERTEXATTRIB4UIVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4uiv\")) == NULL) || r;\n  r = ((glVertexAttrib4usv = (PFNGLVERTEXATTRIB4USVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4usv\")) == NULL) || r;\n  r = ((glVertexAttribPointer = (PFNGLVERTEXATTRIBPOINTERPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribPointer\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_VERSION_2_0 */\n\n#ifdef GL_VERSION_2_1\n\nstatic GLboolean _glewInit_GL_VERSION_2_1 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glUniformMatrix2x3fv = (PFNGLUNIFORMMATRIX2X3FVPROC)glewGetProcAddress((const GLubyte*)\"glUniformMatrix2x3fv\")) == NULL) || r;\n  r = ((glUniformMatrix2x4fv = (PFNGLUNIFORMMATRIX2X4FVPROC)glewGetProcAddress((const GLubyte*)\"glUniformMatrix2x4fv\")) == NULL) || r;\n  r = ((glUniformMatrix3x2fv = (PFNGLUNIFORMMATRIX3X2FVPROC)glewGetProcAddress((const GLubyte*)\"glUniformMatrix3x2fv\")) == NULL) || r;\n  r = ((glUniformMatrix3x4fv = (PFNGLUNIFORMMATRIX3X4FVPROC)glewGetProcAddress((const GLubyte*)\"glUniformMatrix3x4fv\")) == NULL) || r;\n  r = ((glUniformMatrix4x2fv = (PFNGLUNIFORMMATRIX4X2FVPROC)glewGetProcAddress((const GLubyte*)\"glUniformMatrix4x2fv\")) == NULL) || r;\n  r = ((glUniformMatrix4x3fv = (PFNGLUNIFORMMATRIX4X3FVPROC)glewGetProcAddress((const GLubyte*)\"glUniformMatrix4x3fv\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_VERSION_2_1 */\n\n#ifdef GL_VERSION_3_0\n\nstatic GLboolean _glewInit_GL_VERSION_3_0 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = _glewInit_GL_ARB_framebuffer_object() || r;\n  r = _glewInit_GL_ARB_map_buffer_range() || r;\n  r = _glewInit_GL_ARB_uniform_buffer_object() || r;\n  r = _glewInit_GL_ARB_vertex_array_object() || r;\n\n  r = ((glBeginConditionalRender = (PFNGLBEGINCONDITIONALRENDERPROC)glewGetProcAddress((const GLubyte*)\"glBeginConditionalRender\")) == NULL) || r;\n  r = ((glBeginTransformFeedback = (PFNGLBEGINTRANSFORMFEEDBACKPROC)glewGetProcAddress((const GLubyte*)\"glBeginTransformFeedback\")) == NULL) || r;\n  r = ((glBindFragDataLocation = (PFNGLBINDFRAGDATALOCATIONPROC)glewGetProcAddress((const GLubyte*)\"glBindFragDataLocation\")) == NULL) || r;\n  r = ((glClampColor = (PFNGLCLAMPCOLORPROC)glewGetProcAddress((const GLubyte*)\"glClampColor\")) == NULL) || r;\n  r = ((glClearBufferfi = (PFNGLCLEARBUFFERFIPROC)glewGetProcAddress((const GLubyte*)\"glClearBufferfi\")) == NULL) || r;\n  r = ((glClearBufferfv = (PFNGLCLEARBUFFERFVPROC)glewGetProcAddress((const GLubyte*)\"glClearBufferfv\")) == NULL) || r;\n  r = ((glClearBufferiv = (PFNGLCLEARBUFFERIVPROC)glewGetProcAddress((const GLubyte*)\"glClearBufferiv\")) == NULL) || r;\n  r = ((glClearBufferuiv = (PFNGLCLEARBUFFERUIVPROC)glewGetProcAddress((const GLubyte*)\"glClearBufferuiv\")) == NULL) || r;\n  r = ((glColorMaski = (PFNGLCOLORMASKIPROC)glewGetProcAddress((const GLubyte*)\"glColorMaski\")) == NULL) || r;\n  r = ((glDisablei = (PFNGLDISABLEIPROC)glewGetProcAddress((const GLubyte*)\"glDisablei\")) == NULL) || r;\n  r = ((glEnablei = (PFNGLENABLEIPROC)glewGetProcAddress((const GLubyte*)\"glEnablei\")) == NULL) || r;\n  r = ((glEndConditionalRender = (PFNGLENDCONDITIONALRENDERPROC)glewGetProcAddress((const GLubyte*)\"glEndConditionalRender\")) == NULL) || r;\n  r = ((glEndTransformFeedback = (PFNGLENDTRANSFORMFEEDBACKPROC)glewGetProcAddress((const GLubyte*)\"glEndTransformFeedback\")) == NULL) || r;\n  r = ((glGetBooleani_v = (PFNGLGETBOOLEANI_VPROC)glewGetProcAddress((const GLubyte*)\"glGetBooleani_v\")) == NULL) || r;\n  r = ((glGetFragDataLocation = (PFNGLGETFRAGDATALOCATIONPROC)glewGetProcAddress((const GLubyte*)\"glGetFragDataLocation\")) == NULL) || r;\n  r = ((glGetStringi = (PFNGLGETSTRINGIPROC)glewGetProcAddress((const GLubyte*)\"glGetStringi\")) == NULL) || r;\n  r = ((glGetTexParameterIiv = (PFNGLGETTEXPARAMETERIIVPROC)glewGetProcAddress((const GLubyte*)\"glGetTexParameterIiv\")) == NULL) || r;\n  r = ((glGetTexParameterIuiv = (PFNGLGETTEXPARAMETERIUIVPROC)glewGetProcAddress((const GLubyte*)\"glGetTexParameterIuiv\")) == NULL) || r;\n  r = ((glGetTransformFeedbackVarying = (PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)glewGetProcAddress((const GLubyte*)\"glGetTransformFeedbackVarying\")) == NULL) || r;\n  r = ((glGetUniformuiv = (PFNGLGETUNIFORMUIVPROC)glewGetProcAddress((const GLubyte*)\"glGetUniformuiv\")) == NULL) || r;\n  r = ((glGetVertexAttribIiv = (PFNGLGETVERTEXATTRIBIIVPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexAttribIiv\")) == NULL) || r;\n  r = ((glGetVertexAttribIuiv = (PFNGLGETVERTEXATTRIBIUIVPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexAttribIuiv\")) == NULL) || r;\n  r = ((glIsEnabledi = (PFNGLISENABLEDIPROC)glewGetProcAddress((const GLubyte*)\"glIsEnabledi\")) == NULL) || r;\n  r = ((glTexParameterIiv = (PFNGLTEXPARAMETERIIVPROC)glewGetProcAddress((const GLubyte*)\"glTexParameterIiv\")) == NULL) || r;\n  r = ((glTexParameterIuiv = (PFNGLTEXPARAMETERIUIVPROC)glewGetProcAddress((const GLubyte*)\"glTexParameterIuiv\")) == NULL) || r;\n  r = ((glTransformFeedbackVaryings = (PFNGLTRANSFORMFEEDBACKVARYINGSPROC)glewGetProcAddress((const GLubyte*)\"glTransformFeedbackVaryings\")) == NULL) || r;\n  r = ((glUniform1ui = (PFNGLUNIFORM1UIPROC)glewGetProcAddress((const GLubyte*)\"glUniform1ui\")) == NULL) || r;\n  r = ((glUniform1uiv = (PFNGLUNIFORM1UIVPROC)glewGetProcAddress((const GLubyte*)\"glUniform1uiv\")) == NULL) || r;\n  r = ((glUniform2ui = (PFNGLUNIFORM2UIPROC)glewGetProcAddress((const GLubyte*)\"glUniform2ui\")) == NULL) || r;\n  r = ((glUniform2uiv = (PFNGLUNIFORM2UIVPROC)glewGetProcAddress((const GLubyte*)\"glUniform2uiv\")) == NULL) || r;\n  r = ((glUniform3ui = (PFNGLUNIFORM3UIPROC)glewGetProcAddress((const GLubyte*)\"glUniform3ui\")) == NULL) || r;\n  r = ((glUniform3uiv = (PFNGLUNIFORM3UIVPROC)glewGetProcAddress((const GLubyte*)\"glUniform3uiv\")) == NULL) || r;\n  r = ((glUniform4ui = (PFNGLUNIFORM4UIPROC)glewGetProcAddress((const GLubyte*)\"glUniform4ui\")) == NULL) || r;\n  r = ((glUniform4uiv = (PFNGLUNIFORM4UIVPROC)glewGetProcAddress((const GLubyte*)\"glUniform4uiv\")) == NULL) || r;\n  r = ((glVertexAttribI1i = (PFNGLVERTEXATTRIBI1IPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI1i\")) == NULL) || r;\n  r = ((glVertexAttribI1iv = (PFNGLVERTEXATTRIBI1IVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI1iv\")) == NULL) || r;\n  r = ((glVertexAttribI1ui = (PFNGLVERTEXATTRIBI1UIPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI1ui\")) == NULL) || r;\n  r = ((glVertexAttribI1uiv = (PFNGLVERTEXATTRIBI1UIVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI1uiv\")) == NULL) || r;\n  r = ((glVertexAttribI2i = (PFNGLVERTEXATTRIBI2IPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI2i\")) == NULL) || r;\n  r = ((glVertexAttribI2iv = (PFNGLVERTEXATTRIBI2IVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI2iv\")) == NULL) || r;\n  r = ((glVertexAttribI2ui = (PFNGLVERTEXATTRIBI2UIPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI2ui\")) == NULL) || r;\n  r = ((glVertexAttribI2uiv = (PFNGLVERTEXATTRIBI2UIVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI2uiv\")) == NULL) || r;\n  r = ((glVertexAttribI3i = (PFNGLVERTEXATTRIBI3IPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI3i\")) == NULL) || r;\n  r = ((glVertexAttribI3iv = (PFNGLVERTEXATTRIBI3IVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI3iv\")) == NULL) || r;\n  r = ((glVertexAttribI3ui = (PFNGLVERTEXATTRIBI3UIPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI3ui\")) == NULL) || r;\n  r = ((glVertexAttribI3uiv = (PFNGLVERTEXATTRIBI3UIVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI3uiv\")) == NULL) || r;\n  r = ((glVertexAttribI4bv = (PFNGLVERTEXATTRIBI4BVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI4bv\")) == NULL) || r;\n  r = ((glVertexAttribI4i = (PFNGLVERTEXATTRIBI4IPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI4i\")) == NULL) || r;\n  r = ((glVertexAttribI4iv = (PFNGLVERTEXATTRIBI4IVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI4iv\")) == NULL) || r;\n  r = ((glVertexAttribI4sv = (PFNGLVERTEXATTRIBI4SVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI4sv\")) == NULL) || r;\n  r = ((glVertexAttribI4ubv = (PFNGLVERTEXATTRIBI4UBVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI4ubv\")) == NULL) || r;\n  r = ((glVertexAttribI4ui = (PFNGLVERTEXATTRIBI4UIPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI4ui\")) == NULL) || r;\n  r = ((glVertexAttribI4uiv = (PFNGLVERTEXATTRIBI4UIVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI4uiv\")) == NULL) || r;\n  r = ((glVertexAttribI4usv = (PFNGLVERTEXATTRIBI4USVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI4usv\")) == NULL) || r;\n  r = ((glVertexAttribIPointer = (PFNGLVERTEXATTRIBIPOINTERPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribIPointer\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_VERSION_3_0 */\n\n#ifdef GL_VERSION_3_1\n\nstatic GLboolean _glewInit_GL_VERSION_3_1 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = _glewInit_GL_ARB_copy_buffer() || r;\n\n  r = ((glDrawArraysInstanced = (PFNGLDRAWARRAYSINSTANCEDPROC)glewGetProcAddress((const GLubyte*)\"glDrawArraysInstanced\")) == NULL) || r;\n  r = ((glDrawElementsInstanced = (PFNGLDRAWELEMENTSINSTANCEDPROC)glewGetProcAddress((const GLubyte*)\"glDrawElementsInstanced\")) == NULL) || r;\n  r = ((glPrimitiveRestartIndex = (PFNGLPRIMITIVERESTARTINDEXPROC)glewGetProcAddress((const GLubyte*)\"glPrimitiveRestartIndex\")) == NULL) || r;\n  r = ((glTexBuffer = (PFNGLTEXBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glTexBuffer\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_VERSION_3_1 */\n\n#ifdef GL_VERSION_3_2\n\nstatic GLboolean _glewInit_GL_VERSION_3_2 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = _glewInit_GL_ARB_draw_elements_base_vertex() || r;\n  r = _glewInit_GL_ARB_provoking_vertex() || r;\n  r = _glewInit_GL_ARB_sync() || r;\n  r = _glewInit_GL_ARB_texture_multisample() || r;\n\n  r = ((glFramebufferTexture = (PFNGLFRAMEBUFFERTEXTUREPROC)glewGetProcAddress((const GLubyte*)\"glFramebufferTexture\")) == NULL) || r;\n  r = ((glGetBufferParameteri64v = (PFNGLGETBUFFERPARAMETERI64VPROC)glewGetProcAddress((const GLubyte*)\"glGetBufferParameteri64v\")) == NULL) || r;\n  r = ((glGetInteger64i_v = (PFNGLGETINTEGER64I_VPROC)glewGetProcAddress((const GLubyte*)\"glGetInteger64i_v\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_VERSION_3_2 */\n\n#ifdef GL_VERSION_3_3\n\nstatic GLboolean _glewInit_GL_VERSION_3_3 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glVertexAttribDivisor = (PFNGLVERTEXATTRIBDIVISORPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribDivisor\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_VERSION_3_3 */\n\n#ifdef GL_VERSION_4_0\n\nstatic GLboolean _glewInit_GL_VERSION_4_0 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBlendEquationSeparatei = (PFNGLBLENDEQUATIONSEPARATEIPROC)glewGetProcAddress((const GLubyte*)\"glBlendEquationSeparatei\")) == NULL) || r;\n  r = ((glBlendEquationi = (PFNGLBLENDEQUATIONIPROC)glewGetProcAddress((const GLubyte*)\"glBlendEquationi\")) == NULL) || r;\n  r = ((glBlendFuncSeparatei = (PFNGLBLENDFUNCSEPARATEIPROC)glewGetProcAddress((const GLubyte*)\"glBlendFuncSeparatei\")) == NULL) || r;\n  r = ((glBlendFunci = (PFNGLBLENDFUNCIPROC)glewGetProcAddress((const GLubyte*)\"glBlendFunci\")) == NULL) || r;\n  r = ((glMinSampleShading = (PFNGLMINSAMPLESHADINGPROC)glewGetProcAddress((const GLubyte*)\"glMinSampleShading\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_VERSION_4_0 */\n\n#ifdef GL_VERSION_4_5\n\nstatic GLboolean _glewInit_GL_VERSION_4_5 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetGraphicsResetStatus = (PFNGLGETGRAPHICSRESETSTATUSPROC)glewGetProcAddress((const GLubyte*)\"glGetGraphicsResetStatus\")) == NULL) || r;\n  r = ((glGetnCompressedTexImage = (PFNGLGETNCOMPRESSEDTEXIMAGEPROC)glewGetProcAddress((const GLubyte*)\"glGetnCompressedTexImage\")) == NULL) || r;\n  r = ((glGetnTexImage = (PFNGLGETNTEXIMAGEPROC)glewGetProcAddress((const GLubyte*)\"glGetnTexImage\")) == NULL) || r;\n  r = ((glGetnUniformdv = (PFNGLGETNUNIFORMDVPROC)glewGetProcAddress((const GLubyte*)\"glGetnUniformdv\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_VERSION_4_5 */\n\n#ifdef GL_3DFX_tbuffer\n\nstatic GLboolean _glewInit_GL_3DFX_tbuffer ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glTbufferMask3DFX = (PFNGLTBUFFERMASK3DFXPROC)glewGetProcAddress((const GLubyte*)\"glTbufferMask3DFX\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_3DFX_tbuffer */\n\n#ifdef GL_AMD_debug_output\n\nstatic GLboolean _glewInit_GL_AMD_debug_output ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDebugMessageCallbackAMD = (PFNGLDEBUGMESSAGECALLBACKAMDPROC)glewGetProcAddress((const GLubyte*)\"glDebugMessageCallbackAMD\")) == NULL) || r;\n  r = ((glDebugMessageEnableAMD = (PFNGLDEBUGMESSAGEENABLEAMDPROC)glewGetProcAddress((const GLubyte*)\"glDebugMessageEnableAMD\")) == NULL) || r;\n  r = ((glDebugMessageInsertAMD = (PFNGLDEBUGMESSAGEINSERTAMDPROC)glewGetProcAddress((const GLubyte*)\"glDebugMessageInsertAMD\")) == NULL) || r;\n  r = ((glGetDebugMessageLogAMD = (PFNGLGETDEBUGMESSAGELOGAMDPROC)glewGetProcAddress((const GLubyte*)\"glGetDebugMessageLogAMD\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_AMD_debug_output */\n\n#ifdef GL_AMD_draw_buffers_blend\n\nstatic GLboolean _glewInit_GL_AMD_draw_buffers_blend ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBlendEquationIndexedAMD = (PFNGLBLENDEQUATIONINDEXEDAMDPROC)glewGetProcAddress((const GLubyte*)\"glBlendEquationIndexedAMD\")) == NULL) || r;\n  r = ((glBlendEquationSeparateIndexedAMD = (PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC)glewGetProcAddress((const GLubyte*)\"glBlendEquationSeparateIndexedAMD\")) == NULL) || r;\n  r = ((glBlendFuncIndexedAMD = (PFNGLBLENDFUNCINDEXEDAMDPROC)glewGetProcAddress((const GLubyte*)\"glBlendFuncIndexedAMD\")) == NULL) || r;\n  r = ((glBlendFuncSeparateIndexedAMD = (PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC)glewGetProcAddress((const GLubyte*)\"glBlendFuncSeparateIndexedAMD\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_AMD_draw_buffers_blend */\n\n#ifdef GL_AMD_interleaved_elements\n\nstatic GLboolean _glewInit_GL_AMD_interleaved_elements ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glVertexAttribParameteriAMD = (PFNGLVERTEXATTRIBPARAMETERIAMDPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribParameteriAMD\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_AMD_interleaved_elements */\n\n#ifdef GL_AMD_multi_draw_indirect\n\nstatic GLboolean _glewInit_GL_AMD_multi_draw_indirect ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glMultiDrawArraysIndirectAMD = (PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC)glewGetProcAddress((const GLubyte*)\"glMultiDrawArraysIndirectAMD\")) == NULL) || r;\n  r = ((glMultiDrawElementsIndirectAMD = (PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC)glewGetProcAddress((const GLubyte*)\"glMultiDrawElementsIndirectAMD\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_AMD_multi_draw_indirect */\n\n#ifdef GL_AMD_name_gen_delete\n\nstatic GLboolean _glewInit_GL_AMD_name_gen_delete ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDeleteNamesAMD = (PFNGLDELETENAMESAMDPROC)glewGetProcAddress((const GLubyte*)\"glDeleteNamesAMD\")) == NULL) || r;\n  r = ((glGenNamesAMD = (PFNGLGENNAMESAMDPROC)glewGetProcAddress((const GLubyte*)\"glGenNamesAMD\")) == NULL) || r;\n  r = ((glIsNameAMD = (PFNGLISNAMEAMDPROC)glewGetProcAddress((const GLubyte*)\"glIsNameAMD\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_AMD_name_gen_delete */\n\n#ifdef GL_AMD_occlusion_query_event\n\nstatic GLboolean _glewInit_GL_AMD_occlusion_query_event ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glQueryObjectParameteruiAMD = (PFNGLQUERYOBJECTPARAMETERUIAMDPROC)glewGetProcAddress((const GLubyte*)\"glQueryObjectParameteruiAMD\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_AMD_occlusion_query_event */\n\n#ifdef GL_AMD_performance_monitor\n\nstatic GLboolean _glewInit_GL_AMD_performance_monitor ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBeginPerfMonitorAMD = (PFNGLBEGINPERFMONITORAMDPROC)glewGetProcAddress((const GLubyte*)\"glBeginPerfMonitorAMD\")) == NULL) || r;\n  r = ((glDeletePerfMonitorsAMD = (PFNGLDELETEPERFMONITORSAMDPROC)glewGetProcAddress((const GLubyte*)\"glDeletePerfMonitorsAMD\")) == NULL) || r;\n  r = ((glEndPerfMonitorAMD = (PFNGLENDPERFMONITORAMDPROC)glewGetProcAddress((const GLubyte*)\"glEndPerfMonitorAMD\")) == NULL) || r;\n  r = ((glGenPerfMonitorsAMD = (PFNGLGENPERFMONITORSAMDPROC)glewGetProcAddress((const GLubyte*)\"glGenPerfMonitorsAMD\")) == NULL) || r;\n  r = ((glGetPerfMonitorCounterDataAMD = (PFNGLGETPERFMONITORCOUNTERDATAAMDPROC)glewGetProcAddress((const GLubyte*)\"glGetPerfMonitorCounterDataAMD\")) == NULL) || r;\n  r = ((glGetPerfMonitorCounterInfoAMD = (PFNGLGETPERFMONITORCOUNTERINFOAMDPROC)glewGetProcAddress((const GLubyte*)\"glGetPerfMonitorCounterInfoAMD\")) == NULL) || r;\n  r = ((glGetPerfMonitorCounterStringAMD = (PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC)glewGetProcAddress((const GLubyte*)\"glGetPerfMonitorCounterStringAMD\")) == NULL) || r;\n  r = ((glGetPerfMonitorCountersAMD = (PFNGLGETPERFMONITORCOUNTERSAMDPROC)glewGetProcAddress((const GLubyte*)\"glGetPerfMonitorCountersAMD\")) == NULL) || r;\n  r = ((glGetPerfMonitorGroupStringAMD = (PFNGLGETPERFMONITORGROUPSTRINGAMDPROC)glewGetProcAddress((const GLubyte*)\"glGetPerfMonitorGroupStringAMD\")) == NULL) || r;\n  r = ((glGetPerfMonitorGroupsAMD = (PFNGLGETPERFMONITORGROUPSAMDPROC)glewGetProcAddress((const GLubyte*)\"glGetPerfMonitorGroupsAMD\")) == NULL) || r;\n  r = ((glSelectPerfMonitorCountersAMD = (PFNGLSELECTPERFMONITORCOUNTERSAMDPROC)glewGetProcAddress((const GLubyte*)\"glSelectPerfMonitorCountersAMD\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_AMD_performance_monitor */\n\n#ifdef GL_AMD_sample_positions\n\nstatic GLboolean _glewInit_GL_AMD_sample_positions ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glSetMultisamplefvAMD = (PFNGLSETMULTISAMPLEFVAMDPROC)glewGetProcAddress((const GLubyte*)\"glSetMultisamplefvAMD\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_AMD_sample_positions */\n\n#ifdef GL_AMD_sparse_texture\n\nstatic GLboolean _glewInit_GL_AMD_sparse_texture ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glTexStorageSparseAMD = (PFNGLTEXSTORAGESPARSEAMDPROC)glewGetProcAddress((const GLubyte*)\"glTexStorageSparseAMD\")) == NULL) || r;\n  r = ((glTextureStorageSparseAMD = (PFNGLTEXTURESTORAGESPARSEAMDPROC)glewGetProcAddress((const GLubyte*)\"glTextureStorageSparseAMD\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_AMD_sparse_texture */\n\n#ifdef GL_AMD_stencil_operation_extended\n\nstatic GLboolean _glewInit_GL_AMD_stencil_operation_extended ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glStencilOpValueAMD = (PFNGLSTENCILOPVALUEAMDPROC)glewGetProcAddress((const GLubyte*)\"glStencilOpValueAMD\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_AMD_stencil_operation_extended */\n\n#ifdef GL_AMD_vertex_shader_tessellator\n\nstatic GLboolean _glewInit_GL_AMD_vertex_shader_tessellator ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glTessellationFactorAMD = (PFNGLTESSELLATIONFACTORAMDPROC)glewGetProcAddress((const GLubyte*)\"glTessellationFactorAMD\")) == NULL) || r;\n  r = ((glTessellationModeAMD = (PFNGLTESSELLATIONMODEAMDPROC)glewGetProcAddress((const GLubyte*)\"glTessellationModeAMD\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_AMD_vertex_shader_tessellator */\n\n#ifdef GL_ANGLE_framebuffer_blit\n\nstatic GLboolean _glewInit_GL_ANGLE_framebuffer_blit ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBlitFramebufferANGLE = (PFNGLBLITFRAMEBUFFERANGLEPROC)glewGetProcAddress((const GLubyte*)\"glBlitFramebufferANGLE\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ANGLE_framebuffer_blit */\n\n#ifdef GL_ANGLE_framebuffer_multisample\n\nstatic GLboolean _glewInit_GL_ANGLE_framebuffer_multisample ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glRenderbufferStorageMultisampleANGLE = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC)glewGetProcAddress((const GLubyte*)\"glRenderbufferStorageMultisampleANGLE\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ANGLE_framebuffer_multisample */\n\n#ifdef GL_ANGLE_instanced_arrays\n\nstatic GLboolean _glewInit_GL_ANGLE_instanced_arrays ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDrawArraysInstancedANGLE = (PFNGLDRAWARRAYSINSTANCEDANGLEPROC)glewGetProcAddress((const GLubyte*)\"glDrawArraysInstancedANGLE\")) == NULL) || r;\n  r = ((glDrawElementsInstancedANGLE = (PFNGLDRAWELEMENTSINSTANCEDANGLEPROC)glewGetProcAddress((const GLubyte*)\"glDrawElementsInstancedANGLE\")) == NULL) || r;\n  r = ((glVertexAttribDivisorANGLE = (PFNGLVERTEXATTRIBDIVISORANGLEPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribDivisorANGLE\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ANGLE_instanced_arrays */\n\n#ifdef GL_ANGLE_timer_query\n\nstatic GLboolean _glewInit_GL_ANGLE_timer_query ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBeginQueryANGLE = (PFNGLBEGINQUERYANGLEPROC)glewGetProcAddress((const GLubyte*)\"glBeginQueryANGLE\")) == NULL) || r;\n  r = ((glDeleteQueriesANGLE = (PFNGLDELETEQUERIESANGLEPROC)glewGetProcAddress((const GLubyte*)\"glDeleteQueriesANGLE\")) == NULL) || r;\n  r = ((glEndQueryANGLE = (PFNGLENDQUERYANGLEPROC)glewGetProcAddress((const GLubyte*)\"glEndQueryANGLE\")) == NULL) || r;\n  r = ((glGenQueriesANGLE = (PFNGLGENQUERIESANGLEPROC)glewGetProcAddress((const GLubyte*)\"glGenQueriesANGLE\")) == NULL) || r;\n  r = ((glGetQueryObjecti64vANGLE = (PFNGLGETQUERYOBJECTI64VANGLEPROC)glewGetProcAddress((const GLubyte*)\"glGetQueryObjecti64vANGLE\")) == NULL) || r;\n  r = ((glGetQueryObjectivANGLE = (PFNGLGETQUERYOBJECTIVANGLEPROC)glewGetProcAddress((const GLubyte*)\"glGetQueryObjectivANGLE\")) == NULL) || r;\n  r = ((glGetQueryObjectui64vANGLE = (PFNGLGETQUERYOBJECTUI64VANGLEPROC)glewGetProcAddress((const GLubyte*)\"glGetQueryObjectui64vANGLE\")) == NULL) || r;\n  r = ((glGetQueryObjectuivANGLE = (PFNGLGETQUERYOBJECTUIVANGLEPROC)glewGetProcAddress((const GLubyte*)\"glGetQueryObjectuivANGLE\")) == NULL) || r;\n  r = ((glGetQueryivANGLE = (PFNGLGETQUERYIVANGLEPROC)glewGetProcAddress((const GLubyte*)\"glGetQueryivANGLE\")) == NULL) || r;\n  r = ((glIsQueryANGLE = (PFNGLISQUERYANGLEPROC)glewGetProcAddress((const GLubyte*)\"glIsQueryANGLE\")) == NULL) || r;\n  r = ((glQueryCounterANGLE = (PFNGLQUERYCOUNTERANGLEPROC)glewGetProcAddress((const GLubyte*)\"glQueryCounterANGLE\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ANGLE_timer_query */\n\n#ifdef GL_ANGLE_translated_shader_source\n\nstatic GLboolean _glewInit_GL_ANGLE_translated_shader_source ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetTranslatedShaderSourceANGLE = (PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC)glewGetProcAddress((const GLubyte*)\"glGetTranslatedShaderSourceANGLE\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ANGLE_translated_shader_source */\n\n#ifdef GL_APPLE_element_array\n\nstatic GLboolean _glewInit_GL_APPLE_element_array ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDrawElementArrayAPPLE = (PFNGLDRAWELEMENTARRAYAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glDrawElementArrayAPPLE\")) == NULL) || r;\n  r = ((glDrawRangeElementArrayAPPLE = (PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glDrawRangeElementArrayAPPLE\")) == NULL) || r;\n  r = ((glElementPointerAPPLE = (PFNGLELEMENTPOINTERAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glElementPointerAPPLE\")) == NULL) || r;\n  r = ((glMultiDrawElementArrayAPPLE = (PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glMultiDrawElementArrayAPPLE\")) == NULL) || r;\n  r = ((glMultiDrawRangeElementArrayAPPLE = (PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glMultiDrawRangeElementArrayAPPLE\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_APPLE_element_array */\n\n#ifdef GL_APPLE_fence\n\nstatic GLboolean _glewInit_GL_APPLE_fence ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDeleteFencesAPPLE = (PFNGLDELETEFENCESAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glDeleteFencesAPPLE\")) == NULL) || r;\n  r = ((glFinishFenceAPPLE = (PFNGLFINISHFENCEAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glFinishFenceAPPLE\")) == NULL) || r;\n  r = ((glFinishObjectAPPLE = (PFNGLFINISHOBJECTAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glFinishObjectAPPLE\")) == NULL) || r;\n  r = ((glGenFencesAPPLE = (PFNGLGENFENCESAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glGenFencesAPPLE\")) == NULL) || r;\n  r = ((glIsFenceAPPLE = (PFNGLISFENCEAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glIsFenceAPPLE\")) == NULL) || r;\n  r = ((glSetFenceAPPLE = (PFNGLSETFENCEAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glSetFenceAPPLE\")) == NULL) || r;\n  r = ((glTestFenceAPPLE = (PFNGLTESTFENCEAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glTestFenceAPPLE\")) == NULL) || r;\n  r = ((glTestObjectAPPLE = (PFNGLTESTOBJECTAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glTestObjectAPPLE\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_APPLE_fence */\n\n#ifdef GL_APPLE_flush_buffer_range\n\nstatic GLboolean _glewInit_GL_APPLE_flush_buffer_range ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBufferParameteriAPPLE = (PFNGLBUFFERPARAMETERIAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glBufferParameteriAPPLE\")) == NULL) || r;\n  r = ((glFlushMappedBufferRangeAPPLE = (PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glFlushMappedBufferRangeAPPLE\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_APPLE_flush_buffer_range */\n\n#ifdef GL_APPLE_object_purgeable\n\nstatic GLboolean _glewInit_GL_APPLE_object_purgeable ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetObjectParameterivAPPLE = (PFNGLGETOBJECTPARAMETERIVAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glGetObjectParameterivAPPLE\")) == NULL) || r;\n  r = ((glObjectPurgeableAPPLE = (PFNGLOBJECTPURGEABLEAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glObjectPurgeableAPPLE\")) == NULL) || r;\n  r = ((glObjectUnpurgeableAPPLE = (PFNGLOBJECTUNPURGEABLEAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glObjectUnpurgeableAPPLE\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_APPLE_object_purgeable */\n\n#ifdef GL_APPLE_texture_range\n\nstatic GLboolean _glewInit_GL_APPLE_texture_range ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetTexParameterPointervAPPLE = (PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glGetTexParameterPointervAPPLE\")) == NULL) || r;\n  r = ((glTextureRangeAPPLE = (PFNGLTEXTURERANGEAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glTextureRangeAPPLE\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_APPLE_texture_range */\n\n#ifdef GL_APPLE_vertex_array_object\n\nstatic GLboolean _glewInit_GL_APPLE_vertex_array_object ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBindVertexArrayAPPLE = (PFNGLBINDVERTEXARRAYAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glBindVertexArrayAPPLE\")) == NULL) || r;\n  r = ((glDeleteVertexArraysAPPLE = (PFNGLDELETEVERTEXARRAYSAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glDeleteVertexArraysAPPLE\")) == NULL) || r;\n  r = ((glGenVertexArraysAPPLE = (PFNGLGENVERTEXARRAYSAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glGenVertexArraysAPPLE\")) == NULL) || r;\n  r = ((glIsVertexArrayAPPLE = (PFNGLISVERTEXARRAYAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glIsVertexArrayAPPLE\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_APPLE_vertex_array_object */\n\n#ifdef GL_APPLE_vertex_array_range\n\nstatic GLboolean _glewInit_GL_APPLE_vertex_array_range ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glFlushVertexArrayRangeAPPLE = (PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glFlushVertexArrayRangeAPPLE\")) == NULL) || r;\n  r = ((glVertexArrayParameteriAPPLE = (PFNGLVERTEXARRAYPARAMETERIAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayParameteriAPPLE\")) == NULL) || r;\n  r = ((glVertexArrayRangeAPPLE = (PFNGLVERTEXARRAYRANGEAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayRangeAPPLE\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_APPLE_vertex_array_range */\n\n#ifdef GL_APPLE_vertex_program_evaluators\n\nstatic GLboolean _glewInit_GL_APPLE_vertex_program_evaluators ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDisableVertexAttribAPPLE = (PFNGLDISABLEVERTEXATTRIBAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glDisableVertexAttribAPPLE\")) == NULL) || r;\n  r = ((glEnableVertexAttribAPPLE = (PFNGLENABLEVERTEXATTRIBAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glEnableVertexAttribAPPLE\")) == NULL) || r;\n  r = ((glIsVertexAttribEnabledAPPLE = (PFNGLISVERTEXATTRIBENABLEDAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glIsVertexAttribEnabledAPPLE\")) == NULL) || r;\n  r = ((glMapVertexAttrib1dAPPLE = (PFNGLMAPVERTEXATTRIB1DAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glMapVertexAttrib1dAPPLE\")) == NULL) || r;\n  r = ((glMapVertexAttrib1fAPPLE = (PFNGLMAPVERTEXATTRIB1FAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glMapVertexAttrib1fAPPLE\")) == NULL) || r;\n  r = ((glMapVertexAttrib2dAPPLE = (PFNGLMAPVERTEXATTRIB2DAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glMapVertexAttrib2dAPPLE\")) == NULL) || r;\n  r = ((glMapVertexAttrib2fAPPLE = (PFNGLMAPVERTEXATTRIB2FAPPLEPROC)glewGetProcAddress((const GLubyte*)\"glMapVertexAttrib2fAPPLE\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_APPLE_vertex_program_evaluators */\n\n#ifdef GL_ARB_ES2_compatibility\n\nstatic GLboolean _glewInit_GL_ARB_ES2_compatibility ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glClearDepthf = (PFNGLCLEARDEPTHFPROC)glewGetProcAddress((const GLubyte*)\"glClearDepthf\")) == NULL) || r;\n  r = ((glDepthRangef = (PFNGLDEPTHRANGEFPROC)glewGetProcAddress((const GLubyte*)\"glDepthRangef\")) == NULL) || r;\n  r = ((glGetShaderPrecisionFormat = (PFNGLGETSHADERPRECISIONFORMATPROC)glewGetProcAddress((const GLubyte*)\"glGetShaderPrecisionFormat\")) == NULL) || r;\n  r = ((glReleaseShaderCompiler = (PFNGLRELEASESHADERCOMPILERPROC)glewGetProcAddress((const GLubyte*)\"glReleaseShaderCompiler\")) == NULL) || r;\n  r = ((glShaderBinary = (PFNGLSHADERBINARYPROC)glewGetProcAddress((const GLubyte*)\"glShaderBinary\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_ES2_compatibility */\n\n#ifdef GL_ARB_ES3_1_compatibility\n\nstatic GLboolean _glewInit_GL_ARB_ES3_1_compatibility ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glMemoryBarrierByRegion = (PFNGLMEMORYBARRIERBYREGIONPROC)glewGetProcAddress((const GLubyte*)\"glMemoryBarrierByRegion\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_ES3_1_compatibility */\n\n#ifdef GL_ARB_ES3_2_compatibility\n\nstatic GLboolean _glewInit_GL_ARB_ES3_2_compatibility ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glPrimitiveBoundingBoxARB = (PFNGLPRIMITIVEBOUNDINGBOXARBPROC)glewGetProcAddress((const GLubyte*)\"glPrimitiveBoundingBoxARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_ES3_2_compatibility */\n\n#ifdef GL_ARB_base_instance\n\nstatic GLboolean _glewInit_GL_ARB_base_instance ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDrawArraysInstancedBaseInstance = (PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)glewGetProcAddress((const GLubyte*)\"glDrawArraysInstancedBaseInstance\")) == NULL) || r;\n  r = ((glDrawElementsInstancedBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)glewGetProcAddress((const GLubyte*)\"glDrawElementsInstancedBaseInstance\")) == NULL) || r;\n  r = ((glDrawElementsInstancedBaseVertexBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC)glewGetProcAddress((const GLubyte*)\"glDrawElementsInstancedBaseVertexBaseInstance\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_base_instance */\n\n#ifdef GL_ARB_bindless_texture\n\nstatic GLboolean _glewInit_GL_ARB_bindless_texture ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetImageHandleARB = (PFNGLGETIMAGEHANDLEARBPROC)glewGetProcAddress((const GLubyte*)\"glGetImageHandleARB\")) == NULL) || r;\n  r = ((glGetTextureHandleARB = (PFNGLGETTEXTUREHANDLEARBPROC)glewGetProcAddress((const GLubyte*)\"glGetTextureHandleARB\")) == NULL) || r;\n  r = ((glGetTextureSamplerHandleARB = (PFNGLGETTEXTURESAMPLERHANDLEARBPROC)glewGetProcAddress((const GLubyte*)\"glGetTextureSamplerHandleARB\")) == NULL) || r;\n  r = ((glGetVertexAttribLui64vARB = (PFNGLGETVERTEXATTRIBLUI64VARBPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexAttribLui64vARB\")) == NULL) || r;\n  r = ((glIsImageHandleResidentARB = (PFNGLISIMAGEHANDLERESIDENTARBPROC)glewGetProcAddress((const GLubyte*)\"glIsImageHandleResidentARB\")) == NULL) || r;\n  r = ((glIsTextureHandleResidentARB = (PFNGLISTEXTUREHANDLERESIDENTARBPROC)glewGetProcAddress((const GLubyte*)\"glIsTextureHandleResidentARB\")) == NULL) || r;\n  r = ((glMakeImageHandleNonResidentARB = (PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC)glewGetProcAddress((const GLubyte*)\"glMakeImageHandleNonResidentARB\")) == NULL) || r;\n  r = ((glMakeImageHandleResidentARB = (PFNGLMAKEIMAGEHANDLERESIDENTARBPROC)glewGetProcAddress((const GLubyte*)\"glMakeImageHandleResidentARB\")) == NULL) || r;\n  r = ((glMakeTextureHandleNonResidentARB = (PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC)glewGetProcAddress((const GLubyte*)\"glMakeTextureHandleNonResidentARB\")) == NULL) || r;\n  r = ((glMakeTextureHandleResidentARB = (PFNGLMAKETEXTUREHANDLERESIDENTARBPROC)glewGetProcAddress((const GLubyte*)\"glMakeTextureHandleResidentARB\")) == NULL) || r;\n  r = ((glProgramUniformHandleui64ARB = (PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformHandleui64ARB\")) == NULL) || r;\n  r = ((glProgramUniformHandleui64vARB = (PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformHandleui64vARB\")) == NULL) || r;\n  r = ((glUniformHandleui64ARB = (PFNGLUNIFORMHANDLEUI64ARBPROC)glewGetProcAddress((const GLubyte*)\"glUniformHandleui64ARB\")) == NULL) || r;\n  r = ((glUniformHandleui64vARB = (PFNGLUNIFORMHANDLEUI64VARBPROC)glewGetProcAddress((const GLubyte*)\"glUniformHandleui64vARB\")) == NULL) || r;\n  r = ((glVertexAttribL1ui64ARB = (PFNGLVERTEXATTRIBL1UI64ARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL1ui64ARB\")) == NULL) || r;\n  r = ((glVertexAttribL1ui64vARB = (PFNGLVERTEXATTRIBL1UI64VARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL1ui64vARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_bindless_texture */\n\n#ifdef GL_ARB_blend_func_extended\n\nstatic GLboolean _glewInit_GL_ARB_blend_func_extended ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBindFragDataLocationIndexed = (PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)glewGetProcAddress((const GLubyte*)\"glBindFragDataLocationIndexed\")) == NULL) || r;\n  r = ((glGetFragDataIndex = (PFNGLGETFRAGDATAINDEXPROC)glewGetProcAddress((const GLubyte*)\"glGetFragDataIndex\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_blend_func_extended */\n\n#ifdef GL_ARB_buffer_storage\n\nstatic GLboolean _glewInit_GL_ARB_buffer_storage ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBufferStorage = (PFNGLBUFFERSTORAGEPROC)glewGetProcAddress((const GLubyte*)\"glBufferStorage\")) == NULL) || r;\n  r = ((glNamedBufferStorageEXT = (PFNGLNAMEDBUFFERSTORAGEEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedBufferStorageEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_buffer_storage */\n\n#ifdef GL_ARB_cl_event\n\nstatic GLboolean _glewInit_GL_ARB_cl_event ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glCreateSyncFromCLeventARB = (PFNGLCREATESYNCFROMCLEVENTARBPROC)glewGetProcAddress((const GLubyte*)\"glCreateSyncFromCLeventARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_cl_event */\n\n#ifdef GL_ARB_clear_buffer_object\n\nstatic GLboolean _glewInit_GL_ARB_clear_buffer_object ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glClearBufferData = (PFNGLCLEARBUFFERDATAPROC)glewGetProcAddress((const GLubyte*)\"glClearBufferData\")) == NULL) || r;\n  r = ((glClearBufferSubData = (PFNGLCLEARBUFFERSUBDATAPROC)glewGetProcAddress((const GLubyte*)\"glClearBufferSubData\")) == NULL) || r;\n  r = ((glClearNamedBufferDataEXT = (PFNGLCLEARNAMEDBUFFERDATAEXTPROC)glewGetProcAddress((const GLubyte*)\"glClearNamedBufferDataEXT\")) == NULL) || r;\n  r = ((glClearNamedBufferSubDataEXT = (PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC)glewGetProcAddress((const GLubyte*)\"glClearNamedBufferSubDataEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_clear_buffer_object */\n\n#ifdef GL_ARB_clear_texture\n\nstatic GLboolean _glewInit_GL_ARB_clear_texture ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glClearTexImage = (PFNGLCLEARTEXIMAGEPROC)glewGetProcAddress((const GLubyte*)\"glClearTexImage\")) == NULL) || r;\n  r = ((glClearTexSubImage = (PFNGLCLEARTEXSUBIMAGEPROC)glewGetProcAddress((const GLubyte*)\"glClearTexSubImage\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_clear_texture */\n\n#ifdef GL_ARB_clip_control\n\nstatic GLboolean _glewInit_GL_ARB_clip_control ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glClipControl = (PFNGLCLIPCONTROLPROC)glewGetProcAddress((const GLubyte*)\"glClipControl\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_clip_control */\n\n#ifdef GL_ARB_color_buffer_float\n\nstatic GLboolean _glewInit_GL_ARB_color_buffer_float ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glClampColorARB = (PFNGLCLAMPCOLORARBPROC)glewGetProcAddress((const GLubyte*)\"glClampColorARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_color_buffer_float */\n\n#ifdef GL_ARB_compute_shader\n\nstatic GLboolean _glewInit_GL_ARB_compute_shader ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDispatchCompute = (PFNGLDISPATCHCOMPUTEPROC)glewGetProcAddress((const GLubyte*)\"glDispatchCompute\")) == NULL) || r;\n  r = ((glDispatchComputeIndirect = (PFNGLDISPATCHCOMPUTEINDIRECTPROC)glewGetProcAddress((const GLubyte*)\"glDispatchComputeIndirect\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_compute_shader */\n\n#ifdef GL_ARB_compute_variable_group_size\n\nstatic GLboolean _glewInit_GL_ARB_compute_variable_group_size ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDispatchComputeGroupSizeARB = (PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC)glewGetProcAddress((const GLubyte*)\"glDispatchComputeGroupSizeARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_compute_variable_group_size */\n\n#ifdef GL_ARB_copy_buffer\n\nstatic GLboolean _glewInit_GL_ARB_copy_buffer ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glCopyBufferSubData = (PFNGLCOPYBUFFERSUBDATAPROC)glewGetProcAddress((const GLubyte*)\"glCopyBufferSubData\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_copy_buffer */\n\n#ifdef GL_ARB_copy_image\n\nstatic GLboolean _glewInit_GL_ARB_copy_image ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glCopyImageSubData = (PFNGLCOPYIMAGESUBDATAPROC)glewGetProcAddress((const GLubyte*)\"glCopyImageSubData\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_copy_image */\n\n#ifdef GL_ARB_debug_output\n\nstatic GLboolean _glewInit_GL_ARB_debug_output ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDebugMessageCallbackARB = (PFNGLDEBUGMESSAGECALLBACKARBPROC)glewGetProcAddress((const GLubyte*)\"glDebugMessageCallbackARB\")) == NULL) || r;\n  r = ((glDebugMessageControlARB = (PFNGLDEBUGMESSAGECONTROLARBPROC)glewGetProcAddress((const GLubyte*)\"glDebugMessageControlARB\")) == NULL) || r;\n  r = ((glDebugMessageInsertARB = (PFNGLDEBUGMESSAGEINSERTARBPROC)glewGetProcAddress((const GLubyte*)\"glDebugMessageInsertARB\")) == NULL) || r;\n  r = ((glGetDebugMessageLogARB = (PFNGLGETDEBUGMESSAGELOGARBPROC)glewGetProcAddress((const GLubyte*)\"glGetDebugMessageLogARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_debug_output */\n\n#ifdef GL_ARB_direct_state_access\n\nstatic GLboolean _glewInit_GL_ARB_direct_state_access ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBindTextureUnit = (PFNGLBINDTEXTUREUNITPROC)glewGetProcAddress((const GLubyte*)\"glBindTextureUnit\")) == NULL) || r;\n  r = ((glBlitNamedFramebuffer = (PFNGLBLITNAMEDFRAMEBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glBlitNamedFramebuffer\")) == NULL) || r;\n  r = ((glCheckNamedFramebufferStatus = (PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC)glewGetProcAddress((const GLubyte*)\"glCheckNamedFramebufferStatus\")) == NULL) || r;\n  r = ((glClearNamedBufferData = (PFNGLCLEARNAMEDBUFFERDATAPROC)glewGetProcAddress((const GLubyte*)\"glClearNamedBufferData\")) == NULL) || r;\n  r = ((glClearNamedBufferSubData = (PFNGLCLEARNAMEDBUFFERSUBDATAPROC)glewGetProcAddress((const GLubyte*)\"glClearNamedBufferSubData\")) == NULL) || r;\n  r = ((glClearNamedFramebufferfi = (PFNGLCLEARNAMEDFRAMEBUFFERFIPROC)glewGetProcAddress((const GLubyte*)\"glClearNamedFramebufferfi\")) == NULL) || r;\n  r = ((glClearNamedFramebufferfv = (PFNGLCLEARNAMEDFRAMEBUFFERFVPROC)glewGetProcAddress((const GLubyte*)\"glClearNamedFramebufferfv\")) == NULL) || r;\n  r = ((glClearNamedFramebufferiv = (PFNGLCLEARNAMEDFRAMEBUFFERIVPROC)glewGetProcAddress((const GLubyte*)\"glClearNamedFramebufferiv\")) == NULL) || r;\n  r = ((glClearNamedFramebufferuiv = (PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC)glewGetProcAddress((const GLubyte*)\"glClearNamedFramebufferuiv\")) == NULL) || r;\n  r = ((glCompressedTextureSubImage1D = (PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC)glewGetProcAddress((const GLubyte*)\"glCompressedTextureSubImage1D\")) == NULL) || r;\n  r = ((glCompressedTextureSubImage2D = (PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC)glewGetProcAddress((const GLubyte*)\"glCompressedTextureSubImage2D\")) == NULL) || r;\n  r = ((glCompressedTextureSubImage3D = (PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC)glewGetProcAddress((const GLubyte*)\"glCompressedTextureSubImage3D\")) == NULL) || r;\n  r = ((glCopyNamedBufferSubData = (PFNGLCOPYNAMEDBUFFERSUBDATAPROC)glewGetProcAddress((const GLubyte*)\"glCopyNamedBufferSubData\")) == NULL) || r;\n  r = ((glCopyTextureSubImage1D = (PFNGLCOPYTEXTURESUBIMAGE1DPROC)glewGetProcAddress((const GLubyte*)\"glCopyTextureSubImage1D\")) == NULL) || r;\n  r = ((glCopyTextureSubImage2D = (PFNGLCOPYTEXTURESUBIMAGE2DPROC)glewGetProcAddress((const GLubyte*)\"glCopyTextureSubImage2D\")) == NULL) || r;\n  r = ((glCopyTextureSubImage3D = (PFNGLCOPYTEXTURESUBIMAGE3DPROC)glewGetProcAddress((const GLubyte*)\"glCopyTextureSubImage3D\")) == NULL) || r;\n  r = ((glCreateBuffers = (PFNGLCREATEBUFFERSPROC)glewGetProcAddress((const GLubyte*)\"glCreateBuffers\")) == NULL) || r;\n  r = ((glCreateFramebuffers = (PFNGLCREATEFRAMEBUFFERSPROC)glewGetProcAddress((const GLubyte*)\"glCreateFramebuffers\")) == NULL) || r;\n  r = ((glCreateProgramPipelines = (PFNGLCREATEPROGRAMPIPELINESPROC)glewGetProcAddress((const GLubyte*)\"glCreateProgramPipelines\")) == NULL) || r;\n  r = ((glCreateQueries = (PFNGLCREATEQUERIESPROC)glewGetProcAddress((const GLubyte*)\"glCreateQueries\")) == NULL) || r;\n  r = ((glCreateRenderbuffers = (PFNGLCREATERENDERBUFFERSPROC)glewGetProcAddress((const GLubyte*)\"glCreateRenderbuffers\")) == NULL) || r;\n  r = ((glCreateSamplers = (PFNGLCREATESAMPLERSPROC)glewGetProcAddress((const GLubyte*)\"glCreateSamplers\")) == NULL) || r;\n  r = ((glCreateTextures = (PFNGLCREATETEXTURESPROC)glewGetProcAddress((const GLubyte*)\"glCreateTextures\")) == NULL) || r;\n  r = ((glCreateTransformFeedbacks = (PFNGLCREATETRANSFORMFEEDBACKSPROC)glewGetProcAddress((const GLubyte*)\"glCreateTransformFeedbacks\")) == NULL) || r;\n  r = ((glCreateVertexArrays = (PFNGLCREATEVERTEXARRAYSPROC)glewGetProcAddress((const GLubyte*)\"glCreateVertexArrays\")) == NULL) || r;\n  r = ((glDisableVertexArrayAttrib = (PFNGLDISABLEVERTEXARRAYATTRIBPROC)glewGetProcAddress((const GLubyte*)\"glDisableVertexArrayAttrib\")) == NULL) || r;\n  r = ((glEnableVertexArrayAttrib = (PFNGLENABLEVERTEXARRAYATTRIBPROC)glewGetProcAddress((const GLubyte*)\"glEnableVertexArrayAttrib\")) == NULL) || r;\n  r = ((glFlushMappedNamedBufferRange = (PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC)glewGetProcAddress((const GLubyte*)\"glFlushMappedNamedBufferRange\")) == NULL) || r;\n  r = ((glGenerateTextureMipmap = (PFNGLGENERATETEXTUREMIPMAPPROC)glewGetProcAddress((const GLubyte*)\"glGenerateTextureMipmap\")) == NULL) || r;\n  r = ((glGetCompressedTextureImage = (PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC)glewGetProcAddress((const GLubyte*)\"glGetCompressedTextureImage\")) == NULL) || r;\n  r = ((glGetNamedBufferParameteri64v = (PFNGLGETNAMEDBUFFERPARAMETERI64VPROC)glewGetProcAddress((const GLubyte*)\"glGetNamedBufferParameteri64v\")) == NULL) || r;\n  r = ((glGetNamedBufferParameteriv = (PFNGLGETNAMEDBUFFERPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetNamedBufferParameteriv\")) == NULL) || r;\n  r = ((glGetNamedBufferPointerv = (PFNGLGETNAMEDBUFFERPOINTERVPROC)glewGetProcAddress((const GLubyte*)\"glGetNamedBufferPointerv\")) == NULL) || r;\n  r = ((glGetNamedBufferSubData = (PFNGLGETNAMEDBUFFERSUBDATAPROC)glewGetProcAddress((const GLubyte*)\"glGetNamedBufferSubData\")) == NULL) || r;\n  r = ((glGetNamedFramebufferAttachmentParameteriv = (PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetNamedFramebufferAttachmentParameteriv\")) == NULL) || r;\n  r = ((glGetNamedFramebufferParameteriv = (PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetNamedFramebufferParameteriv\")) == NULL) || r;\n  r = ((glGetNamedRenderbufferParameteriv = (PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetNamedRenderbufferParameteriv\")) == NULL) || r;\n  r = ((glGetQueryBufferObjecti64v = (PFNGLGETQUERYBUFFEROBJECTI64VPROC)glewGetProcAddress((const GLubyte*)\"glGetQueryBufferObjecti64v\")) == NULL) || r;\n  r = ((glGetQueryBufferObjectiv = (PFNGLGETQUERYBUFFEROBJECTIVPROC)glewGetProcAddress((const GLubyte*)\"glGetQueryBufferObjectiv\")) == NULL) || r;\n  r = ((glGetQueryBufferObjectui64v = (PFNGLGETQUERYBUFFEROBJECTUI64VPROC)glewGetProcAddress((const GLubyte*)\"glGetQueryBufferObjectui64v\")) == NULL) || r;\n  r = ((glGetQueryBufferObjectuiv = (PFNGLGETQUERYBUFFEROBJECTUIVPROC)glewGetProcAddress((const GLubyte*)\"glGetQueryBufferObjectuiv\")) == NULL) || r;\n  r = ((glGetTextureImage = (PFNGLGETTEXTUREIMAGEPROC)glewGetProcAddress((const GLubyte*)\"glGetTextureImage\")) == NULL) || r;\n  r = ((glGetTextureLevelParameterfv = (PFNGLGETTEXTURELEVELPARAMETERFVPROC)glewGetProcAddress((const GLubyte*)\"glGetTextureLevelParameterfv\")) == NULL) || r;\n  r = ((glGetTextureLevelParameteriv = (PFNGLGETTEXTURELEVELPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetTextureLevelParameteriv\")) == NULL) || r;\n  r = ((glGetTextureParameterIiv = (PFNGLGETTEXTUREPARAMETERIIVPROC)glewGetProcAddress((const GLubyte*)\"glGetTextureParameterIiv\")) == NULL) || r;\n  r = ((glGetTextureParameterIuiv = (PFNGLGETTEXTUREPARAMETERIUIVPROC)glewGetProcAddress((const GLubyte*)\"glGetTextureParameterIuiv\")) == NULL) || r;\n  r = ((glGetTextureParameterfv = (PFNGLGETTEXTUREPARAMETERFVPROC)glewGetProcAddress((const GLubyte*)\"glGetTextureParameterfv\")) == NULL) || r;\n  r = ((glGetTextureParameteriv = (PFNGLGETTEXTUREPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetTextureParameteriv\")) == NULL) || r;\n  r = ((glGetTransformFeedbacki64_v = (PFNGLGETTRANSFORMFEEDBACKI64_VPROC)glewGetProcAddress((const GLubyte*)\"glGetTransformFeedbacki64_v\")) == NULL) || r;\n  r = ((glGetTransformFeedbacki_v = (PFNGLGETTRANSFORMFEEDBACKI_VPROC)glewGetProcAddress((const GLubyte*)\"glGetTransformFeedbacki_v\")) == NULL) || r;\n  r = ((glGetTransformFeedbackiv = (PFNGLGETTRANSFORMFEEDBACKIVPROC)glewGetProcAddress((const GLubyte*)\"glGetTransformFeedbackiv\")) == NULL) || r;\n  r = ((glGetVertexArrayIndexed64iv = (PFNGLGETVERTEXARRAYINDEXED64IVPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexArrayIndexed64iv\")) == NULL) || r;\n  r = ((glGetVertexArrayIndexediv = (PFNGLGETVERTEXARRAYINDEXEDIVPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexArrayIndexediv\")) == NULL) || r;\n  r = ((glGetVertexArrayiv = (PFNGLGETVERTEXARRAYIVPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexArrayiv\")) == NULL) || r;\n  r = ((glInvalidateNamedFramebufferData = (PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC)glewGetProcAddress((const GLubyte*)\"glInvalidateNamedFramebufferData\")) == NULL) || r;\n  r = ((glInvalidateNamedFramebufferSubData = (PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC)glewGetProcAddress((const GLubyte*)\"glInvalidateNamedFramebufferSubData\")) == NULL) || r;\n  r = ((glMapNamedBuffer = (PFNGLMAPNAMEDBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glMapNamedBuffer\")) == NULL) || r;\n  r = ((glMapNamedBufferRange = (PFNGLMAPNAMEDBUFFERRANGEPROC)glewGetProcAddress((const GLubyte*)\"glMapNamedBufferRange\")) == NULL) || r;\n  r = ((glNamedBufferData = (PFNGLNAMEDBUFFERDATAPROC)glewGetProcAddress((const GLubyte*)\"glNamedBufferData\")) == NULL) || r;\n  r = ((glNamedBufferStorage = (PFNGLNAMEDBUFFERSTORAGEPROC)glewGetProcAddress((const GLubyte*)\"glNamedBufferStorage\")) == NULL) || r;\n  r = ((glNamedBufferSubData = (PFNGLNAMEDBUFFERSUBDATAPROC)glewGetProcAddress((const GLubyte*)\"glNamedBufferSubData\")) == NULL) || r;\n  r = ((glNamedFramebufferDrawBuffer = (PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glNamedFramebufferDrawBuffer\")) == NULL) || r;\n  r = ((glNamedFramebufferDrawBuffers = (PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC)glewGetProcAddress((const GLubyte*)\"glNamedFramebufferDrawBuffers\")) == NULL) || r;\n  r = ((glNamedFramebufferParameteri = (PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC)glewGetProcAddress((const GLubyte*)\"glNamedFramebufferParameteri\")) == NULL) || r;\n  r = ((glNamedFramebufferReadBuffer = (PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glNamedFramebufferReadBuffer\")) == NULL) || r;\n  r = ((glNamedFramebufferRenderbuffer = (PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glNamedFramebufferRenderbuffer\")) == NULL) || r;\n  r = ((glNamedFramebufferTexture = (PFNGLNAMEDFRAMEBUFFERTEXTUREPROC)glewGetProcAddress((const GLubyte*)\"glNamedFramebufferTexture\")) == NULL) || r;\n  r = ((glNamedFramebufferTextureLayer = (PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC)glewGetProcAddress((const GLubyte*)\"glNamedFramebufferTextureLayer\")) == NULL) || r;\n  r = ((glNamedRenderbufferStorage = (PFNGLNAMEDRENDERBUFFERSTORAGEPROC)glewGetProcAddress((const GLubyte*)\"glNamedRenderbufferStorage\")) == NULL) || r;\n  r = ((glNamedRenderbufferStorageMultisample = (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC)glewGetProcAddress((const GLubyte*)\"glNamedRenderbufferStorageMultisample\")) == NULL) || r;\n  r = ((glTextureBuffer = (PFNGLTEXTUREBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glTextureBuffer\")) == NULL) || r;\n  r = ((glTextureBufferRange = (PFNGLTEXTUREBUFFERRANGEPROC)glewGetProcAddress((const GLubyte*)\"glTextureBufferRange\")) == NULL) || r;\n  r = ((glTextureParameterIiv = (PFNGLTEXTUREPARAMETERIIVPROC)glewGetProcAddress((const GLubyte*)\"glTextureParameterIiv\")) == NULL) || r;\n  r = ((glTextureParameterIuiv = (PFNGLTEXTUREPARAMETERIUIVPROC)glewGetProcAddress((const GLubyte*)\"glTextureParameterIuiv\")) == NULL) || r;\n  r = ((glTextureParameterf = (PFNGLTEXTUREPARAMETERFPROC)glewGetProcAddress((const GLubyte*)\"glTextureParameterf\")) == NULL) || r;\n  r = ((glTextureParameterfv = (PFNGLTEXTUREPARAMETERFVPROC)glewGetProcAddress((const GLubyte*)\"glTextureParameterfv\")) == NULL) || r;\n  r = ((glTextureParameteri = (PFNGLTEXTUREPARAMETERIPROC)glewGetProcAddress((const GLubyte*)\"glTextureParameteri\")) == NULL) || r;\n  r = ((glTextureParameteriv = (PFNGLTEXTUREPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glTextureParameteriv\")) == NULL) || r;\n  r = ((glTextureStorage1D = (PFNGLTEXTURESTORAGE1DPROC)glewGetProcAddress((const GLubyte*)\"glTextureStorage1D\")) == NULL) || r;\n  r = ((glTextureStorage2D = (PFNGLTEXTURESTORAGE2DPROC)glewGetProcAddress((const GLubyte*)\"glTextureStorage2D\")) == NULL) || r;\n  r = ((glTextureStorage2DMultisample = (PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC)glewGetProcAddress((const GLubyte*)\"glTextureStorage2DMultisample\")) == NULL) || r;\n  r = ((glTextureStorage3D = (PFNGLTEXTURESTORAGE3DPROC)glewGetProcAddress((const GLubyte*)\"glTextureStorage3D\")) == NULL) || r;\n  r = ((glTextureStorage3DMultisample = (PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC)glewGetProcAddress((const GLubyte*)\"glTextureStorage3DMultisample\")) == NULL) || r;\n  r = ((glTextureSubImage1D = (PFNGLTEXTURESUBIMAGE1DPROC)glewGetProcAddress((const GLubyte*)\"glTextureSubImage1D\")) == NULL) || r;\n  r = ((glTextureSubImage2D = (PFNGLTEXTURESUBIMAGE2DPROC)glewGetProcAddress((const GLubyte*)\"glTextureSubImage2D\")) == NULL) || r;\n  r = ((glTextureSubImage3D = (PFNGLTEXTURESUBIMAGE3DPROC)glewGetProcAddress((const GLubyte*)\"glTextureSubImage3D\")) == NULL) || r;\n  r = ((glTransformFeedbackBufferBase = (PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC)glewGetProcAddress((const GLubyte*)\"glTransformFeedbackBufferBase\")) == NULL) || r;\n  r = ((glTransformFeedbackBufferRange = (PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC)glewGetProcAddress((const GLubyte*)\"glTransformFeedbackBufferRange\")) == NULL) || r;\n  r = ((glUnmapNamedBuffer = (PFNGLUNMAPNAMEDBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glUnmapNamedBuffer\")) == NULL) || r;\n  r = ((glVertexArrayAttribBinding = (PFNGLVERTEXARRAYATTRIBBINDINGPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayAttribBinding\")) == NULL) || r;\n  r = ((glVertexArrayAttribFormat = (PFNGLVERTEXARRAYATTRIBFORMATPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayAttribFormat\")) == NULL) || r;\n  r = ((glVertexArrayAttribIFormat = (PFNGLVERTEXARRAYATTRIBIFORMATPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayAttribIFormat\")) == NULL) || r;\n  r = ((glVertexArrayAttribLFormat = (PFNGLVERTEXARRAYATTRIBLFORMATPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayAttribLFormat\")) == NULL) || r;\n  r = ((glVertexArrayBindingDivisor = (PFNGLVERTEXARRAYBINDINGDIVISORPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayBindingDivisor\")) == NULL) || r;\n  r = ((glVertexArrayElementBuffer = (PFNGLVERTEXARRAYELEMENTBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayElementBuffer\")) == NULL) || r;\n  r = ((glVertexArrayVertexBuffer = (PFNGLVERTEXARRAYVERTEXBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayVertexBuffer\")) == NULL) || r;\n  r = ((glVertexArrayVertexBuffers = (PFNGLVERTEXARRAYVERTEXBUFFERSPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayVertexBuffers\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_direct_state_access */\n\n#ifdef GL_ARB_draw_buffers\n\nstatic GLboolean _glewInit_GL_ARB_draw_buffers ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDrawBuffersARB = (PFNGLDRAWBUFFERSARBPROC)glewGetProcAddress((const GLubyte*)\"glDrawBuffersARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_draw_buffers */\n\n#ifdef GL_ARB_draw_buffers_blend\n\nstatic GLboolean _glewInit_GL_ARB_draw_buffers_blend ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBlendEquationSeparateiARB = (PFNGLBLENDEQUATIONSEPARATEIARBPROC)glewGetProcAddress((const GLubyte*)\"glBlendEquationSeparateiARB\")) == NULL) || r;\n  r = ((glBlendEquationiARB = (PFNGLBLENDEQUATIONIARBPROC)glewGetProcAddress((const GLubyte*)\"glBlendEquationiARB\")) == NULL) || r;\n  r = ((glBlendFuncSeparateiARB = (PFNGLBLENDFUNCSEPARATEIARBPROC)glewGetProcAddress((const GLubyte*)\"glBlendFuncSeparateiARB\")) == NULL) || r;\n  r = ((glBlendFunciARB = (PFNGLBLENDFUNCIARBPROC)glewGetProcAddress((const GLubyte*)\"glBlendFunciARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_draw_buffers_blend */\n\n#ifdef GL_ARB_draw_elements_base_vertex\n\nstatic GLboolean _glewInit_GL_ARB_draw_elements_base_vertex ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDrawElementsBaseVertex = (PFNGLDRAWELEMENTSBASEVERTEXPROC)glewGetProcAddress((const GLubyte*)\"glDrawElementsBaseVertex\")) == NULL) || r;\n  r = ((glDrawElementsInstancedBaseVertex = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)glewGetProcAddress((const GLubyte*)\"glDrawElementsInstancedBaseVertex\")) == NULL) || r;\n  r = ((glDrawRangeElementsBaseVertex = (PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)glewGetProcAddress((const GLubyte*)\"glDrawRangeElementsBaseVertex\")) == NULL) || r;\n  r = ((glMultiDrawElementsBaseVertex = (PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)glewGetProcAddress((const GLubyte*)\"glMultiDrawElementsBaseVertex\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_draw_elements_base_vertex */\n\n#ifdef GL_ARB_draw_indirect\n\nstatic GLboolean _glewInit_GL_ARB_draw_indirect ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDrawArraysIndirect = (PFNGLDRAWARRAYSINDIRECTPROC)glewGetProcAddress((const GLubyte*)\"glDrawArraysIndirect\")) == NULL) || r;\n  r = ((glDrawElementsIndirect = (PFNGLDRAWELEMENTSINDIRECTPROC)glewGetProcAddress((const GLubyte*)\"glDrawElementsIndirect\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_draw_indirect */\n\n#ifdef GL_ARB_framebuffer_no_attachments\n\nstatic GLboolean _glewInit_GL_ARB_framebuffer_no_attachments ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glFramebufferParameteri = (PFNGLFRAMEBUFFERPARAMETERIPROC)glewGetProcAddress((const GLubyte*)\"glFramebufferParameteri\")) == NULL) || r;\n  r = ((glGetFramebufferParameteriv = (PFNGLGETFRAMEBUFFERPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetFramebufferParameteriv\")) == NULL) || r;\n  r = ((glGetNamedFramebufferParameterivEXT = (PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetNamedFramebufferParameterivEXT\")) == NULL) || r;\n  r = ((glNamedFramebufferParameteriEXT = (PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedFramebufferParameteriEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_framebuffer_no_attachments */\n\n#ifdef GL_ARB_framebuffer_object\n\nstatic GLboolean _glewInit_GL_ARB_framebuffer_object ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBindFramebuffer = (PFNGLBINDFRAMEBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glBindFramebuffer\")) == NULL) || r;\n  r = ((glBindRenderbuffer = (PFNGLBINDRENDERBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glBindRenderbuffer\")) == NULL) || r;\n  r = ((glBlitFramebuffer = (PFNGLBLITFRAMEBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glBlitFramebuffer\")) == NULL) || r;\n  r = ((glCheckFramebufferStatus = (PFNGLCHECKFRAMEBUFFERSTATUSPROC)glewGetProcAddress((const GLubyte*)\"glCheckFramebufferStatus\")) == NULL) || r;\n  r = ((glDeleteFramebuffers = (PFNGLDELETEFRAMEBUFFERSPROC)glewGetProcAddress((const GLubyte*)\"glDeleteFramebuffers\")) == NULL) || r;\n  r = ((glDeleteRenderbuffers = (PFNGLDELETERENDERBUFFERSPROC)glewGetProcAddress((const GLubyte*)\"glDeleteRenderbuffers\")) == NULL) || r;\n  r = ((glFramebufferRenderbuffer = (PFNGLFRAMEBUFFERRENDERBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glFramebufferRenderbuffer\")) == NULL) || r;\n  r = ((glFramebufferTexture1D = (PFNGLFRAMEBUFFERTEXTURE1DPROC)glewGetProcAddress((const GLubyte*)\"glFramebufferTexture1D\")) == NULL) || r;\n  r = ((glFramebufferTexture2D = (PFNGLFRAMEBUFFERTEXTURE2DPROC)glewGetProcAddress((const GLubyte*)\"glFramebufferTexture2D\")) == NULL) || r;\n  r = ((glFramebufferTexture3D = (PFNGLFRAMEBUFFERTEXTURE3DPROC)glewGetProcAddress((const GLubyte*)\"glFramebufferTexture3D\")) == NULL) || r;\n  r = ((glFramebufferTextureLayer = (PFNGLFRAMEBUFFERTEXTURELAYERPROC)glewGetProcAddress((const GLubyte*)\"glFramebufferTextureLayer\")) == NULL) || r;\n  r = ((glGenFramebuffers = (PFNGLGENFRAMEBUFFERSPROC)glewGetProcAddress((const GLubyte*)\"glGenFramebuffers\")) == NULL) || r;\n  r = ((glGenRenderbuffers = (PFNGLGENRENDERBUFFERSPROC)glewGetProcAddress((const GLubyte*)\"glGenRenderbuffers\")) == NULL) || r;\n  r = ((glGenerateMipmap = (PFNGLGENERATEMIPMAPPROC)glewGetProcAddress((const GLubyte*)\"glGenerateMipmap\")) == NULL) || r;\n  r = ((glGetFramebufferAttachmentParameteriv = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetFramebufferAttachmentParameteriv\")) == NULL) || r;\n  r = ((glGetRenderbufferParameteriv = (PFNGLGETRENDERBUFFERPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetRenderbufferParameteriv\")) == NULL) || r;\n  r = ((glIsFramebuffer = (PFNGLISFRAMEBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glIsFramebuffer\")) == NULL) || r;\n  r = ((glIsRenderbuffer = (PFNGLISRENDERBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glIsRenderbuffer\")) == NULL) || r;\n  r = ((glRenderbufferStorage = (PFNGLRENDERBUFFERSTORAGEPROC)glewGetProcAddress((const GLubyte*)\"glRenderbufferStorage\")) == NULL) || r;\n  r = ((glRenderbufferStorageMultisample = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)glewGetProcAddress((const GLubyte*)\"glRenderbufferStorageMultisample\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_framebuffer_object */\n\n#ifdef GL_ARB_geometry_shader4\n\nstatic GLboolean _glewInit_GL_ARB_geometry_shader4 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glFramebufferTextureARB = (PFNGLFRAMEBUFFERTEXTUREARBPROC)glewGetProcAddress((const GLubyte*)\"glFramebufferTextureARB\")) == NULL) || r;\n  r = ((glFramebufferTextureFaceARB = (PFNGLFRAMEBUFFERTEXTUREFACEARBPROC)glewGetProcAddress((const GLubyte*)\"glFramebufferTextureFaceARB\")) == NULL) || r;\n  r = ((glFramebufferTextureLayerARB = (PFNGLFRAMEBUFFERTEXTURELAYERARBPROC)glewGetProcAddress((const GLubyte*)\"glFramebufferTextureLayerARB\")) == NULL) || r;\n  r = ((glProgramParameteriARB = (PFNGLPROGRAMPARAMETERIARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramParameteriARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_geometry_shader4 */\n\n#ifdef GL_ARB_get_program_binary\n\nstatic GLboolean _glewInit_GL_ARB_get_program_binary ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetProgramBinary = (PFNGLGETPROGRAMBINARYPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramBinary\")) == NULL) || r;\n  r = ((glProgramBinary = (PFNGLPROGRAMBINARYPROC)glewGetProcAddress((const GLubyte*)\"glProgramBinary\")) == NULL) || r;\n  r = ((glProgramParameteri = (PFNGLPROGRAMPARAMETERIPROC)glewGetProcAddress((const GLubyte*)\"glProgramParameteri\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_get_program_binary */\n\n#ifdef GL_ARB_get_texture_sub_image\n\nstatic GLboolean _glewInit_GL_ARB_get_texture_sub_image ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetCompressedTextureSubImage = (PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC)glewGetProcAddress((const GLubyte*)\"glGetCompressedTextureSubImage\")) == NULL) || r;\n  r = ((glGetTextureSubImage = (PFNGLGETTEXTURESUBIMAGEPROC)glewGetProcAddress((const GLubyte*)\"glGetTextureSubImage\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_get_texture_sub_image */\n\n#ifdef GL_ARB_gl_spirv\n\nstatic GLboolean _glewInit_GL_ARB_gl_spirv ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glSpecializeShaderARB = (PFNGLSPECIALIZESHADERARBPROC)glewGetProcAddress((const GLubyte*)\"glSpecializeShaderARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_gl_spirv */\n\n#ifdef GL_ARB_gpu_shader_fp64\n\nstatic GLboolean _glewInit_GL_ARB_gpu_shader_fp64 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetUniformdv = (PFNGLGETUNIFORMDVPROC)glewGetProcAddress((const GLubyte*)\"glGetUniformdv\")) == NULL) || r;\n  r = ((glUniform1d = (PFNGLUNIFORM1DPROC)glewGetProcAddress((const GLubyte*)\"glUniform1d\")) == NULL) || r;\n  r = ((glUniform1dv = (PFNGLUNIFORM1DVPROC)glewGetProcAddress((const GLubyte*)\"glUniform1dv\")) == NULL) || r;\n  r = ((glUniform2d = (PFNGLUNIFORM2DPROC)glewGetProcAddress((const GLubyte*)\"glUniform2d\")) == NULL) || r;\n  r = ((glUniform2dv = (PFNGLUNIFORM2DVPROC)glewGetProcAddress((const GLubyte*)\"glUniform2dv\")) == NULL) || r;\n  r = ((glUniform3d = (PFNGLUNIFORM3DPROC)glewGetProcAddress((const GLubyte*)\"glUniform3d\")) == NULL) || r;\n  r = ((glUniform3dv = (PFNGLUNIFORM3DVPROC)glewGetProcAddress((const GLubyte*)\"glUniform3dv\")) == NULL) || r;\n  r = ((glUniform4d = (PFNGLUNIFORM4DPROC)glewGetProcAddress((const GLubyte*)\"glUniform4d\")) == NULL) || r;\n  r = ((glUniform4dv = (PFNGLUNIFORM4DVPROC)glewGetProcAddress((const GLubyte*)\"glUniform4dv\")) == NULL) || r;\n  r = ((glUniformMatrix2dv = (PFNGLUNIFORMMATRIX2DVPROC)glewGetProcAddress((const GLubyte*)\"glUniformMatrix2dv\")) == NULL) || r;\n  r = ((glUniformMatrix2x3dv = (PFNGLUNIFORMMATRIX2X3DVPROC)glewGetProcAddress((const GLubyte*)\"glUniformMatrix2x3dv\")) == NULL) || r;\n  r = ((glUniformMatrix2x4dv = (PFNGLUNIFORMMATRIX2X4DVPROC)glewGetProcAddress((const GLubyte*)\"glUniformMatrix2x4dv\")) == NULL) || r;\n  r = ((glUniformMatrix3dv = (PFNGLUNIFORMMATRIX3DVPROC)glewGetProcAddress((const GLubyte*)\"glUniformMatrix3dv\")) == NULL) || r;\n  r = ((glUniformMatrix3x2dv = (PFNGLUNIFORMMATRIX3X2DVPROC)glewGetProcAddress((const GLubyte*)\"glUniformMatrix3x2dv\")) == NULL) || r;\n  r = ((glUniformMatrix3x4dv = (PFNGLUNIFORMMATRIX3X4DVPROC)glewGetProcAddress((const GLubyte*)\"glUniformMatrix3x4dv\")) == NULL) || r;\n  r = ((glUniformMatrix4dv = (PFNGLUNIFORMMATRIX4DVPROC)glewGetProcAddress((const GLubyte*)\"glUniformMatrix4dv\")) == NULL) || r;\n  r = ((glUniformMatrix4x2dv = (PFNGLUNIFORMMATRIX4X2DVPROC)glewGetProcAddress((const GLubyte*)\"glUniformMatrix4x2dv\")) == NULL) || r;\n  r = ((glUniformMatrix4x3dv = (PFNGLUNIFORMMATRIX4X3DVPROC)glewGetProcAddress((const GLubyte*)\"glUniformMatrix4x3dv\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_gpu_shader_fp64 */\n\n#ifdef GL_ARB_gpu_shader_int64\n\nstatic GLboolean _glewInit_GL_ARB_gpu_shader_int64 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetUniformi64vARB = (PFNGLGETUNIFORMI64VARBPROC)glewGetProcAddress((const GLubyte*)\"glGetUniformi64vARB\")) == NULL) || r;\n  r = ((glGetUniformui64vARB = (PFNGLGETUNIFORMUI64VARBPROC)glewGetProcAddress((const GLubyte*)\"glGetUniformui64vARB\")) == NULL) || r;\n  r = ((glGetnUniformi64vARB = (PFNGLGETNUNIFORMI64VARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnUniformi64vARB\")) == NULL) || r;\n  r = ((glGetnUniformui64vARB = (PFNGLGETNUNIFORMUI64VARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnUniformui64vARB\")) == NULL) || r;\n  r = ((glProgramUniform1i64ARB = (PFNGLPROGRAMUNIFORM1I64ARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform1i64ARB\")) == NULL) || r;\n  r = ((glProgramUniform1i64vARB = (PFNGLPROGRAMUNIFORM1I64VARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform1i64vARB\")) == NULL) || r;\n  r = ((glProgramUniform1ui64ARB = (PFNGLPROGRAMUNIFORM1UI64ARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform1ui64ARB\")) == NULL) || r;\n  r = ((glProgramUniform1ui64vARB = (PFNGLPROGRAMUNIFORM1UI64VARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform1ui64vARB\")) == NULL) || r;\n  r = ((glProgramUniform2i64ARB = (PFNGLPROGRAMUNIFORM2I64ARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform2i64ARB\")) == NULL) || r;\n  r = ((glProgramUniform2i64vARB = (PFNGLPROGRAMUNIFORM2I64VARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform2i64vARB\")) == NULL) || r;\n  r = ((glProgramUniform2ui64ARB = (PFNGLPROGRAMUNIFORM2UI64ARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform2ui64ARB\")) == NULL) || r;\n  r = ((glProgramUniform2ui64vARB = (PFNGLPROGRAMUNIFORM2UI64VARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform2ui64vARB\")) == NULL) || r;\n  r = ((glProgramUniform3i64ARB = (PFNGLPROGRAMUNIFORM3I64ARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform3i64ARB\")) == NULL) || r;\n  r = ((glProgramUniform3i64vARB = (PFNGLPROGRAMUNIFORM3I64VARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform3i64vARB\")) == NULL) || r;\n  r = ((glProgramUniform3ui64ARB = (PFNGLPROGRAMUNIFORM3UI64ARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform3ui64ARB\")) == NULL) || r;\n  r = ((glProgramUniform3ui64vARB = (PFNGLPROGRAMUNIFORM3UI64VARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform3ui64vARB\")) == NULL) || r;\n  r = ((glProgramUniform4i64ARB = (PFNGLPROGRAMUNIFORM4I64ARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform4i64ARB\")) == NULL) || r;\n  r = ((glProgramUniform4i64vARB = (PFNGLPROGRAMUNIFORM4I64VARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform4i64vARB\")) == NULL) || r;\n  r = ((glProgramUniform4ui64ARB = (PFNGLPROGRAMUNIFORM4UI64ARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform4ui64ARB\")) == NULL) || r;\n  r = ((glProgramUniform4ui64vARB = (PFNGLPROGRAMUNIFORM4UI64VARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform4ui64vARB\")) == NULL) || r;\n  r = ((glUniform1i64ARB = (PFNGLUNIFORM1I64ARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform1i64ARB\")) == NULL) || r;\n  r = ((glUniform1i64vARB = (PFNGLUNIFORM1I64VARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform1i64vARB\")) == NULL) || r;\n  r = ((glUniform1ui64ARB = (PFNGLUNIFORM1UI64ARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform1ui64ARB\")) == NULL) || r;\n  r = ((glUniform1ui64vARB = (PFNGLUNIFORM1UI64VARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform1ui64vARB\")) == NULL) || r;\n  r = ((glUniform2i64ARB = (PFNGLUNIFORM2I64ARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform2i64ARB\")) == NULL) || r;\n  r = ((glUniform2i64vARB = (PFNGLUNIFORM2I64VARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform2i64vARB\")) == NULL) || r;\n  r = ((glUniform2ui64ARB = (PFNGLUNIFORM2UI64ARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform2ui64ARB\")) == NULL) || r;\n  r = ((glUniform2ui64vARB = (PFNGLUNIFORM2UI64VARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform2ui64vARB\")) == NULL) || r;\n  r = ((glUniform3i64ARB = (PFNGLUNIFORM3I64ARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform3i64ARB\")) == NULL) || r;\n  r = ((glUniform3i64vARB = (PFNGLUNIFORM3I64VARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform3i64vARB\")) == NULL) || r;\n  r = ((glUniform3ui64ARB = (PFNGLUNIFORM3UI64ARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform3ui64ARB\")) == NULL) || r;\n  r = ((glUniform3ui64vARB = (PFNGLUNIFORM3UI64VARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform3ui64vARB\")) == NULL) || r;\n  r = ((glUniform4i64ARB = (PFNGLUNIFORM4I64ARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform4i64ARB\")) == NULL) || r;\n  r = ((glUniform4i64vARB = (PFNGLUNIFORM4I64VARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform4i64vARB\")) == NULL) || r;\n  r = ((glUniform4ui64ARB = (PFNGLUNIFORM4UI64ARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform4ui64ARB\")) == NULL) || r;\n  r = ((glUniform4ui64vARB = (PFNGLUNIFORM4UI64VARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform4ui64vARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_gpu_shader_int64 */\n\n#ifdef GL_ARB_imaging\n\nstatic GLboolean _glewInit_GL_ARB_imaging ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBlendEquation = (PFNGLBLENDEQUATIONPROC)glewGetProcAddress((const GLubyte*)\"glBlendEquation\")) == NULL) || r;\n  r = ((glColorSubTable = (PFNGLCOLORSUBTABLEPROC)glewGetProcAddress((const GLubyte*)\"glColorSubTable\")) == NULL) || r;\n  r = ((glColorTable = (PFNGLCOLORTABLEPROC)glewGetProcAddress((const GLubyte*)\"glColorTable\")) == NULL) || r;\n  r = ((glColorTableParameterfv = (PFNGLCOLORTABLEPARAMETERFVPROC)glewGetProcAddress((const GLubyte*)\"glColorTableParameterfv\")) == NULL) || r;\n  r = ((glColorTableParameteriv = (PFNGLCOLORTABLEPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glColorTableParameteriv\")) == NULL) || r;\n  r = ((glConvolutionFilter1D = (PFNGLCONVOLUTIONFILTER1DPROC)glewGetProcAddress((const GLubyte*)\"glConvolutionFilter1D\")) == NULL) || r;\n  r = ((glConvolutionFilter2D = (PFNGLCONVOLUTIONFILTER2DPROC)glewGetProcAddress((const GLubyte*)\"glConvolutionFilter2D\")) == NULL) || r;\n  r = ((glConvolutionParameterf = (PFNGLCONVOLUTIONPARAMETERFPROC)glewGetProcAddress((const GLubyte*)\"glConvolutionParameterf\")) == NULL) || r;\n  r = ((glConvolutionParameterfv = (PFNGLCONVOLUTIONPARAMETERFVPROC)glewGetProcAddress((const GLubyte*)\"glConvolutionParameterfv\")) == NULL) || r;\n  r = ((glConvolutionParameteri = (PFNGLCONVOLUTIONPARAMETERIPROC)glewGetProcAddress((const GLubyte*)\"glConvolutionParameteri\")) == NULL) || r;\n  r = ((glConvolutionParameteriv = (PFNGLCONVOLUTIONPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glConvolutionParameteriv\")) == NULL) || r;\n  r = ((glCopyColorSubTable = (PFNGLCOPYCOLORSUBTABLEPROC)glewGetProcAddress((const GLubyte*)\"glCopyColorSubTable\")) == NULL) || r;\n  r = ((glCopyColorTable = (PFNGLCOPYCOLORTABLEPROC)glewGetProcAddress((const GLubyte*)\"glCopyColorTable\")) == NULL) || r;\n  r = ((glCopyConvolutionFilter1D = (PFNGLCOPYCONVOLUTIONFILTER1DPROC)glewGetProcAddress((const GLubyte*)\"glCopyConvolutionFilter1D\")) == NULL) || r;\n  r = ((glCopyConvolutionFilter2D = (PFNGLCOPYCONVOLUTIONFILTER2DPROC)glewGetProcAddress((const GLubyte*)\"glCopyConvolutionFilter2D\")) == NULL) || r;\n  r = ((glGetColorTable = (PFNGLGETCOLORTABLEPROC)glewGetProcAddress((const GLubyte*)\"glGetColorTable\")) == NULL) || r;\n  r = ((glGetColorTableParameterfv = (PFNGLGETCOLORTABLEPARAMETERFVPROC)glewGetProcAddress((const GLubyte*)\"glGetColorTableParameterfv\")) == NULL) || r;\n  r = ((glGetColorTableParameteriv = (PFNGLGETCOLORTABLEPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetColorTableParameteriv\")) == NULL) || r;\n  r = ((glGetConvolutionFilter = (PFNGLGETCONVOLUTIONFILTERPROC)glewGetProcAddress((const GLubyte*)\"glGetConvolutionFilter\")) == NULL) || r;\n  r = ((glGetConvolutionParameterfv = (PFNGLGETCONVOLUTIONPARAMETERFVPROC)glewGetProcAddress((const GLubyte*)\"glGetConvolutionParameterfv\")) == NULL) || r;\n  r = ((glGetConvolutionParameteriv = (PFNGLGETCONVOLUTIONPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetConvolutionParameteriv\")) == NULL) || r;\n  r = ((glGetHistogram = (PFNGLGETHISTOGRAMPROC)glewGetProcAddress((const GLubyte*)\"glGetHistogram\")) == NULL) || r;\n  r = ((glGetHistogramParameterfv = (PFNGLGETHISTOGRAMPARAMETERFVPROC)glewGetProcAddress((const GLubyte*)\"glGetHistogramParameterfv\")) == NULL) || r;\n  r = ((glGetHistogramParameteriv = (PFNGLGETHISTOGRAMPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetHistogramParameteriv\")) == NULL) || r;\n  r = ((glGetMinmax = (PFNGLGETMINMAXPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmax\")) == NULL) || r;\n  r = ((glGetMinmaxParameterfv = (PFNGLGETMINMAXPARAMETERFVPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxParameterfv\")) == NULL) || r;\n  r = ((glGetMinmaxParameteriv = (PFNGLGETMINMAXPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxParameteriv\")) == NULL) || r;\n  r = ((glGetSeparableFilter = (PFNGLGETSEPARABLEFILTERPROC)glewGetProcAddress((const GLubyte*)\"glGetSeparableFilter\")) == NULL) || r;\n  r = ((glHistogram = (PFNGLHISTOGRAMPROC)glewGetProcAddress((const GLubyte*)\"glHistogram\")) == NULL) || r;\n  r = ((glMinmax = (PFNGLMINMAXPROC)glewGetProcAddress((const GLubyte*)\"glMinmax\")) == NULL) || r;\n  r = ((glResetHistogram = (PFNGLRESETHISTOGRAMPROC)glewGetProcAddress((const GLubyte*)\"glResetHistogram\")) == NULL) || r;\n  r = ((glResetMinmax = (PFNGLRESETMINMAXPROC)glewGetProcAddress((const GLubyte*)\"glResetMinmax\")) == NULL) || r;\n  r = ((glSeparableFilter2D = (PFNGLSEPARABLEFILTER2DPROC)glewGetProcAddress((const GLubyte*)\"glSeparableFilter2D\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_imaging */\n\n#ifdef GL_ARB_indirect_parameters\n\nstatic GLboolean _glewInit_GL_ARB_indirect_parameters ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glMultiDrawArraysIndirectCountARB = (PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiDrawArraysIndirectCountARB\")) == NULL) || r;\n  r = ((glMultiDrawElementsIndirectCountARB = (PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiDrawElementsIndirectCountARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_indirect_parameters */\n\n#ifdef GL_ARB_instanced_arrays\n\nstatic GLboolean _glewInit_GL_ARB_instanced_arrays ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDrawArraysInstancedARB = (PFNGLDRAWARRAYSINSTANCEDARBPROC)glewGetProcAddress((const GLubyte*)\"glDrawArraysInstancedARB\")) == NULL) || r;\n  r = ((glDrawElementsInstancedARB = (PFNGLDRAWELEMENTSINSTANCEDARBPROC)glewGetProcAddress((const GLubyte*)\"glDrawElementsInstancedARB\")) == NULL) || r;\n  r = ((glVertexAttribDivisorARB = (PFNGLVERTEXATTRIBDIVISORARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribDivisorARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_instanced_arrays */\n\n#ifdef GL_ARB_internalformat_query\n\nstatic GLboolean _glewInit_GL_ARB_internalformat_query ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetInternalformativ = (PFNGLGETINTERNALFORMATIVPROC)glewGetProcAddress((const GLubyte*)\"glGetInternalformativ\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_internalformat_query */\n\n#ifdef GL_ARB_internalformat_query2\n\nstatic GLboolean _glewInit_GL_ARB_internalformat_query2 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetInternalformati64v = (PFNGLGETINTERNALFORMATI64VPROC)glewGetProcAddress((const GLubyte*)\"glGetInternalformati64v\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_internalformat_query2 */\n\n#ifdef GL_ARB_invalidate_subdata\n\nstatic GLboolean _glewInit_GL_ARB_invalidate_subdata ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glInvalidateBufferData = (PFNGLINVALIDATEBUFFERDATAPROC)glewGetProcAddress((const GLubyte*)\"glInvalidateBufferData\")) == NULL) || r;\n  r = ((glInvalidateBufferSubData = (PFNGLINVALIDATEBUFFERSUBDATAPROC)glewGetProcAddress((const GLubyte*)\"glInvalidateBufferSubData\")) == NULL) || r;\n  r = ((glInvalidateFramebuffer = (PFNGLINVALIDATEFRAMEBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glInvalidateFramebuffer\")) == NULL) || r;\n  r = ((glInvalidateSubFramebuffer = (PFNGLINVALIDATESUBFRAMEBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glInvalidateSubFramebuffer\")) == NULL) || r;\n  r = ((glInvalidateTexImage = (PFNGLINVALIDATETEXIMAGEPROC)glewGetProcAddress((const GLubyte*)\"glInvalidateTexImage\")) == NULL) || r;\n  r = ((glInvalidateTexSubImage = (PFNGLINVALIDATETEXSUBIMAGEPROC)glewGetProcAddress((const GLubyte*)\"glInvalidateTexSubImage\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_invalidate_subdata */\n\n#ifdef GL_ARB_map_buffer_range\n\nstatic GLboolean _glewInit_GL_ARB_map_buffer_range ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glFlushMappedBufferRange = (PFNGLFLUSHMAPPEDBUFFERRANGEPROC)glewGetProcAddress((const GLubyte*)\"glFlushMappedBufferRange\")) == NULL) || r;\n  r = ((glMapBufferRange = (PFNGLMAPBUFFERRANGEPROC)glewGetProcAddress((const GLubyte*)\"glMapBufferRange\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_map_buffer_range */\n\n#ifdef GL_ARB_matrix_palette\n\nstatic GLboolean _glewInit_GL_ARB_matrix_palette ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glCurrentPaletteMatrixARB = (PFNGLCURRENTPALETTEMATRIXARBPROC)glewGetProcAddress((const GLubyte*)\"glCurrentPaletteMatrixARB\")) == NULL) || r;\n  r = ((glMatrixIndexPointerARB = (PFNGLMATRIXINDEXPOINTERARBPROC)glewGetProcAddress((const GLubyte*)\"glMatrixIndexPointerARB\")) == NULL) || r;\n  r = ((glMatrixIndexubvARB = (PFNGLMATRIXINDEXUBVARBPROC)glewGetProcAddress((const GLubyte*)\"glMatrixIndexubvARB\")) == NULL) || r;\n  r = ((glMatrixIndexuivARB = (PFNGLMATRIXINDEXUIVARBPROC)glewGetProcAddress((const GLubyte*)\"glMatrixIndexuivARB\")) == NULL) || r;\n  r = ((glMatrixIndexusvARB = (PFNGLMATRIXINDEXUSVARBPROC)glewGetProcAddress((const GLubyte*)\"glMatrixIndexusvARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_matrix_palette */\n\n#ifdef GL_ARB_multi_bind\n\nstatic GLboolean _glewInit_GL_ARB_multi_bind ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBindBuffersBase = (PFNGLBINDBUFFERSBASEPROC)glewGetProcAddress((const GLubyte*)\"glBindBuffersBase\")) == NULL) || r;\n  r = ((glBindBuffersRange = (PFNGLBINDBUFFERSRANGEPROC)glewGetProcAddress((const GLubyte*)\"glBindBuffersRange\")) == NULL) || r;\n  r = ((glBindImageTextures = (PFNGLBINDIMAGETEXTURESPROC)glewGetProcAddress((const GLubyte*)\"glBindImageTextures\")) == NULL) || r;\n  r = ((glBindSamplers = (PFNGLBINDSAMPLERSPROC)glewGetProcAddress((const GLubyte*)\"glBindSamplers\")) == NULL) || r;\n  r = ((glBindTextures = (PFNGLBINDTEXTURESPROC)glewGetProcAddress((const GLubyte*)\"glBindTextures\")) == NULL) || r;\n  r = ((glBindVertexBuffers = (PFNGLBINDVERTEXBUFFERSPROC)glewGetProcAddress((const GLubyte*)\"glBindVertexBuffers\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_multi_bind */\n\n#ifdef GL_ARB_multi_draw_indirect\n\nstatic GLboolean _glewInit_GL_ARB_multi_draw_indirect ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glMultiDrawArraysIndirect = (PFNGLMULTIDRAWARRAYSINDIRECTPROC)glewGetProcAddress((const GLubyte*)\"glMultiDrawArraysIndirect\")) == NULL) || r;\n  r = ((glMultiDrawElementsIndirect = (PFNGLMULTIDRAWELEMENTSINDIRECTPROC)glewGetProcAddress((const GLubyte*)\"glMultiDrawElementsIndirect\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_multi_draw_indirect */\n\n#ifdef GL_ARB_multisample\n\nstatic GLboolean _glewInit_GL_ARB_multisample ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glSampleCoverageARB = (PFNGLSAMPLECOVERAGEARBPROC)glewGetProcAddress((const GLubyte*)\"glSampleCoverageARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_multisample */\n\n#ifdef GL_ARB_multitexture\n\nstatic GLboolean _glewInit_GL_ARB_multitexture ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glActiveTextureARB = (PFNGLACTIVETEXTUREARBPROC)glewGetProcAddress((const GLubyte*)\"glActiveTextureARB\")) == NULL) || r;\n  r = ((glClientActiveTextureARB = (PFNGLCLIENTACTIVETEXTUREARBPROC)glewGetProcAddress((const GLubyte*)\"glClientActiveTextureARB\")) == NULL) || r;\n  r = ((glMultiTexCoord1dARB = (PFNGLMULTITEXCOORD1DARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord1dARB\")) == NULL) || r;\n  r = ((glMultiTexCoord1dvARB = (PFNGLMULTITEXCOORD1DVARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord1dvARB\")) == NULL) || r;\n  r = ((glMultiTexCoord1fARB = (PFNGLMULTITEXCOORD1FARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord1fARB\")) == NULL) || r;\n  r = ((glMultiTexCoord1fvARB = (PFNGLMULTITEXCOORD1FVARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord1fvARB\")) == NULL) || r;\n  r = ((glMultiTexCoord1iARB = (PFNGLMULTITEXCOORD1IARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord1iARB\")) == NULL) || r;\n  r = ((glMultiTexCoord1ivARB = (PFNGLMULTITEXCOORD1IVARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord1ivARB\")) == NULL) || r;\n  r = ((glMultiTexCoord1sARB = (PFNGLMULTITEXCOORD1SARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord1sARB\")) == NULL) || r;\n  r = ((glMultiTexCoord1svARB = (PFNGLMULTITEXCOORD1SVARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord1svARB\")) == NULL) || r;\n  r = ((glMultiTexCoord2dARB = (PFNGLMULTITEXCOORD2DARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord2dARB\")) == NULL) || r;\n  r = ((glMultiTexCoord2dvARB = (PFNGLMULTITEXCOORD2DVARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord2dvARB\")) == NULL) || r;\n  r = ((glMultiTexCoord2fARB = (PFNGLMULTITEXCOORD2FARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord2fARB\")) == NULL) || r;\n  r = ((glMultiTexCoord2fvARB = (PFNGLMULTITEXCOORD2FVARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord2fvARB\")) == NULL) || r;\n  r = ((glMultiTexCoord2iARB = (PFNGLMULTITEXCOORD2IARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord2iARB\")) == NULL) || r;\n  r = ((glMultiTexCoord2ivARB = (PFNGLMULTITEXCOORD2IVARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord2ivARB\")) == NULL) || r;\n  r = ((glMultiTexCoord2sARB = (PFNGLMULTITEXCOORD2SARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord2sARB\")) == NULL) || r;\n  r = ((glMultiTexCoord2svARB = (PFNGLMULTITEXCOORD2SVARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord2svARB\")) == NULL) || r;\n  r = ((glMultiTexCoord3dARB = (PFNGLMULTITEXCOORD3DARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord3dARB\")) == NULL) || r;\n  r = ((glMultiTexCoord3dvARB = (PFNGLMULTITEXCOORD3DVARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord3dvARB\")) == NULL) || r;\n  r = ((glMultiTexCoord3fARB = (PFNGLMULTITEXCOORD3FARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord3fARB\")) == NULL) || r;\n  r = ((glMultiTexCoord3fvARB = (PFNGLMULTITEXCOORD3FVARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord3fvARB\")) == NULL) || r;\n  r = ((glMultiTexCoord3iARB = (PFNGLMULTITEXCOORD3IARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord3iARB\")) == NULL) || r;\n  r = ((glMultiTexCoord3ivARB = (PFNGLMULTITEXCOORD3IVARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord3ivARB\")) == NULL) || r;\n  r = ((glMultiTexCoord3sARB = (PFNGLMULTITEXCOORD3SARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord3sARB\")) == NULL) || r;\n  r = ((glMultiTexCoord3svARB = (PFNGLMULTITEXCOORD3SVARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord3svARB\")) == NULL) || r;\n  r = ((glMultiTexCoord4dARB = (PFNGLMULTITEXCOORD4DARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord4dARB\")) == NULL) || r;\n  r = ((glMultiTexCoord4dvARB = (PFNGLMULTITEXCOORD4DVARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord4dvARB\")) == NULL) || r;\n  r = ((glMultiTexCoord4fARB = (PFNGLMULTITEXCOORD4FARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord4fARB\")) == NULL) || r;\n  r = ((glMultiTexCoord4fvARB = (PFNGLMULTITEXCOORD4FVARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord4fvARB\")) == NULL) || r;\n  r = ((glMultiTexCoord4iARB = (PFNGLMULTITEXCOORD4IARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord4iARB\")) == NULL) || r;\n  r = ((glMultiTexCoord4ivARB = (PFNGLMULTITEXCOORD4IVARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord4ivARB\")) == NULL) || r;\n  r = ((glMultiTexCoord4sARB = (PFNGLMULTITEXCOORD4SARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord4sARB\")) == NULL) || r;\n  r = ((glMultiTexCoord4svARB = (PFNGLMULTITEXCOORD4SVARBPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord4svARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_multitexture */\n\n#ifdef GL_ARB_occlusion_query\n\nstatic GLboolean _glewInit_GL_ARB_occlusion_query ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBeginQueryARB = (PFNGLBEGINQUERYARBPROC)glewGetProcAddress((const GLubyte*)\"glBeginQueryARB\")) == NULL) || r;\n  r = ((glDeleteQueriesARB = (PFNGLDELETEQUERIESARBPROC)glewGetProcAddress((const GLubyte*)\"glDeleteQueriesARB\")) == NULL) || r;\n  r = ((glEndQueryARB = (PFNGLENDQUERYARBPROC)glewGetProcAddress((const GLubyte*)\"glEndQueryARB\")) == NULL) || r;\n  r = ((glGenQueriesARB = (PFNGLGENQUERIESARBPROC)glewGetProcAddress((const GLubyte*)\"glGenQueriesARB\")) == NULL) || r;\n  r = ((glGetQueryObjectivARB = (PFNGLGETQUERYOBJECTIVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetQueryObjectivARB\")) == NULL) || r;\n  r = ((glGetQueryObjectuivARB = (PFNGLGETQUERYOBJECTUIVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetQueryObjectuivARB\")) == NULL) || r;\n  r = ((glGetQueryivARB = (PFNGLGETQUERYIVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetQueryivARB\")) == NULL) || r;\n  r = ((glIsQueryARB = (PFNGLISQUERYARBPROC)glewGetProcAddress((const GLubyte*)\"glIsQueryARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_occlusion_query */\n\n#ifdef GL_ARB_parallel_shader_compile\n\nstatic GLboolean _glewInit_GL_ARB_parallel_shader_compile ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glMaxShaderCompilerThreadsARB = (PFNGLMAXSHADERCOMPILERTHREADSARBPROC)glewGetProcAddress((const GLubyte*)\"glMaxShaderCompilerThreadsARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_parallel_shader_compile */\n\n#ifdef GL_ARB_point_parameters\n\nstatic GLboolean _glewInit_GL_ARB_point_parameters ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glPointParameterfARB = (PFNGLPOINTPARAMETERFARBPROC)glewGetProcAddress((const GLubyte*)\"glPointParameterfARB\")) == NULL) || r;\n  r = ((glPointParameterfvARB = (PFNGLPOINTPARAMETERFVARBPROC)glewGetProcAddress((const GLubyte*)\"glPointParameterfvARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_point_parameters */\n\n#ifdef GL_ARB_program_interface_query\n\nstatic GLboolean _glewInit_GL_ARB_program_interface_query ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetProgramInterfaceiv = (PFNGLGETPROGRAMINTERFACEIVPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramInterfaceiv\")) == NULL) || r;\n  r = ((glGetProgramResourceIndex = (PFNGLGETPROGRAMRESOURCEINDEXPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramResourceIndex\")) == NULL) || r;\n  r = ((glGetProgramResourceLocation = (PFNGLGETPROGRAMRESOURCELOCATIONPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramResourceLocation\")) == NULL) || r;\n  r = ((glGetProgramResourceLocationIndex = (PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramResourceLocationIndex\")) == NULL) || r;\n  r = ((glGetProgramResourceName = (PFNGLGETPROGRAMRESOURCENAMEPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramResourceName\")) == NULL) || r;\n  r = ((glGetProgramResourceiv = (PFNGLGETPROGRAMRESOURCEIVPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramResourceiv\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_program_interface_query */\n\n#ifdef GL_ARB_provoking_vertex\n\nstatic GLboolean _glewInit_GL_ARB_provoking_vertex ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glProvokingVertex = (PFNGLPROVOKINGVERTEXPROC)glewGetProcAddress((const GLubyte*)\"glProvokingVertex\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_provoking_vertex */\n\n#ifdef GL_ARB_robustness\n\nstatic GLboolean _glewInit_GL_ARB_robustness ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetGraphicsResetStatusARB = (PFNGLGETGRAPHICSRESETSTATUSARBPROC)glewGetProcAddress((const GLubyte*)\"glGetGraphicsResetStatusARB\")) == NULL) || r;\n  r = ((glGetnColorTableARB = (PFNGLGETNCOLORTABLEARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnColorTableARB\")) == NULL) || r;\n  r = ((glGetnCompressedTexImageARB = (PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnCompressedTexImageARB\")) == NULL) || r;\n  r = ((glGetnConvolutionFilterARB = (PFNGLGETNCONVOLUTIONFILTERARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnConvolutionFilterARB\")) == NULL) || r;\n  r = ((glGetnHistogramARB = (PFNGLGETNHISTOGRAMARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnHistogramARB\")) == NULL) || r;\n  r = ((glGetnMapdvARB = (PFNGLGETNMAPDVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnMapdvARB\")) == NULL) || r;\n  r = ((glGetnMapfvARB = (PFNGLGETNMAPFVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnMapfvARB\")) == NULL) || r;\n  r = ((glGetnMapivARB = (PFNGLGETNMAPIVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnMapivARB\")) == NULL) || r;\n  r = ((glGetnMinmaxARB = (PFNGLGETNMINMAXARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnMinmaxARB\")) == NULL) || r;\n  r = ((glGetnPixelMapfvARB = (PFNGLGETNPIXELMAPFVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnPixelMapfvARB\")) == NULL) || r;\n  r = ((glGetnPixelMapuivARB = (PFNGLGETNPIXELMAPUIVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnPixelMapuivARB\")) == NULL) || r;\n  r = ((glGetnPixelMapusvARB = (PFNGLGETNPIXELMAPUSVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnPixelMapusvARB\")) == NULL) || r;\n  r = ((glGetnPolygonStippleARB = (PFNGLGETNPOLYGONSTIPPLEARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnPolygonStippleARB\")) == NULL) || r;\n  r = ((glGetnSeparableFilterARB = (PFNGLGETNSEPARABLEFILTERARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnSeparableFilterARB\")) == NULL) || r;\n  r = ((glGetnTexImageARB = (PFNGLGETNTEXIMAGEARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnTexImageARB\")) == NULL) || r;\n  r = ((glGetnUniformdvARB = (PFNGLGETNUNIFORMDVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnUniformdvARB\")) == NULL) || r;\n  r = ((glGetnUniformfvARB = (PFNGLGETNUNIFORMFVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnUniformfvARB\")) == NULL) || r;\n  r = ((glGetnUniformivARB = (PFNGLGETNUNIFORMIVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnUniformivARB\")) == NULL) || r;\n  r = ((glGetnUniformuivARB = (PFNGLGETNUNIFORMUIVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetnUniformuivARB\")) == NULL) || r;\n  r = ((glReadnPixelsARB = (PFNGLREADNPIXELSARBPROC)glewGetProcAddress((const GLubyte*)\"glReadnPixelsARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_robustness */\n\n#ifdef GL_ARB_sample_locations\n\nstatic GLboolean _glewInit_GL_ARB_sample_locations ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glFramebufferSampleLocationsfvARB = (PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC)glewGetProcAddress((const GLubyte*)\"glFramebufferSampleLocationsfvARB\")) == NULL) || r;\n  r = ((glNamedFramebufferSampleLocationsfvARB = (PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC)glewGetProcAddress((const GLubyte*)\"glNamedFramebufferSampleLocationsfvARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_sample_locations */\n\n#ifdef GL_ARB_sample_shading\n\nstatic GLboolean _glewInit_GL_ARB_sample_shading ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glMinSampleShadingARB = (PFNGLMINSAMPLESHADINGARBPROC)glewGetProcAddress((const GLubyte*)\"glMinSampleShadingARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_sample_shading */\n\n#ifdef GL_ARB_sampler_objects\n\nstatic GLboolean _glewInit_GL_ARB_sampler_objects ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBindSampler = (PFNGLBINDSAMPLERPROC)glewGetProcAddress((const GLubyte*)\"glBindSampler\")) == NULL) || r;\n  r = ((glDeleteSamplers = (PFNGLDELETESAMPLERSPROC)glewGetProcAddress((const GLubyte*)\"glDeleteSamplers\")) == NULL) || r;\n  r = ((glGenSamplers = (PFNGLGENSAMPLERSPROC)glewGetProcAddress((const GLubyte*)\"glGenSamplers\")) == NULL) || r;\n  r = ((glGetSamplerParameterIiv = (PFNGLGETSAMPLERPARAMETERIIVPROC)glewGetProcAddress((const GLubyte*)\"glGetSamplerParameterIiv\")) == NULL) || r;\n  r = ((glGetSamplerParameterIuiv = (PFNGLGETSAMPLERPARAMETERIUIVPROC)glewGetProcAddress((const GLubyte*)\"glGetSamplerParameterIuiv\")) == NULL) || r;\n  r = ((glGetSamplerParameterfv = (PFNGLGETSAMPLERPARAMETERFVPROC)glewGetProcAddress((const GLubyte*)\"glGetSamplerParameterfv\")) == NULL) || r;\n  r = ((glGetSamplerParameteriv = (PFNGLGETSAMPLERPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetSamplerParameteriv\")) == NULL) || r;\n  r = ((glIsSampler = (PFNGLISSAMPLERPROC)glewGetProcAddress((const GLubyte*)\"glIsSampler\")) == NULL) || r;\n  r = ((glSamplerParameterIiv = (PFNGLSAMPLERPARAMETERIIVPROC)glewGetProcAddress((const GLubyte*)\"glSamplerParameterIiv\")) == NULL) || r;\n  r = ((glSamplerParameterIuiv = (PFNGLSAMPLERPARAMETERIUIVPROC)glewGetProcAddress((const GLubyte*)\"glSamplerParameterIuiv\")) == NULL) || r;\n  r = ((glSamplerParameterf = (PFNGLSAMPLERPARAMETERFPROC)glewGetProcAddress((const GLubyte*)\"glSamplerParameterf\")) == NULL) || r;\n  r = ((glSamplerParameterfv = (PFNGLSAMPLERPARAMETERFVPROC)glewGetProcAddress((const GLubyte*)\"glSamplerParameterfv\")) == NULL) || r;\n  r = ((glSamplerParameteri = (PFNGLSAMPLERPARAMETERIPROC)glewGetProcAddress((const GLubyte*)\"glSamplerParameteri\")) == NULL) || r;\n  r = ((glSamplerParameteriv = (PFNGLSAMPLERPARAMETERIVPROC)glewGetProcAddress((const GLubyte*)\"glSamplerParameteriv\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_sampler_objects */\n\n#ifdef GL_ARB_separate_shader_objects\n\nstatic GLboolean _glewInit_GL_ARB_separate_shader_objects ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glActiveShaderProgram = (PFNGLACTIVESHADERPROGRAMPROC)glewGetProcAddress((const GLubyte*)\"glActiveShaderProgram\")) == NULL) || r;\n  r = ((glBindProgramPipeline = (PFNGLBINDPROGRAMPIPELINEPROC)glewGetProcAddress((const GLubyte*)\"glBindProgramPipeline\")) == NULL) || r;\n  r = ((glCreateShaderProgramv = (PFNGLCREATESHADERPROGRAMVPROC)glewGetProcAddress((const GLubyte*)\"glCreateShaderProgramv\")) == NULL) || r;\n  r = ((glDeleteProgramPipelines = (PFNGLDELETEPROGRAMPIPELINESPROC)glewGetProcAddress((const GLubyte*)\"glDeleteProgramPipelines\")) == NULL) || r;\n  r = ((glGenProgramPipelines = (PFNGLGENPROGRAMPIPELINESPROC)glewGetProcAddress((const GLubyte*)\"glGenProgramPipelines\")) == NULL) || r;\n  r = ((glGetProgramPipelineInfoLog = (PFNGLGETPROGRAMPIPELINEINFOLOGPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramPipelineInfoLog\")) == NULL) || r;\n  r = ((glGetProgramPipelineiv = (PFNGLGETPROGRAMPIPELINEIVPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramPipelineiv\")) == NULL) || r;\n  r = ((glIsProgramPipeline = (PFNGLISPROGRAMPIPELINEPROC)glewGetProcAddress((const GLubyte*)\"glIsProgramPipeline\")) == NULL) || r;\n  r = ((glProgramUniform1d = (PFNGLPROGRAMUNIFORM1DPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform1d\")) == NULL) || r;\n  r = ((glProgramUniform1dv = (PFNGLPROGRAMUNIFORM1DVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform1dv\")) == NULL) || r;\n  r = ((glProgramUniform1f = (PFNGLPROGRAMUNIFORM1FPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform1f\")) == NULL) || r;\n  r = ((glProgramUniform1fv = (PFNGLPROGRAMUNIFORM1FVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform1fv\")) == NULL) || r;\n  r = ((glProgramUniform1i = (PFNGLPROGRAMUNIFORM1IPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform1i\")) == NULL) || r;\n  r = ((glProgramUniform1iv = (PFNGLPROGRAMUNIFORM1IVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform1iv\")) == NULL) || r;\n  r = ((glProgramUniform1ui = (PFNGLPROGRAMUNIFORM1UIPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform1ui\")) == NULL) || r;\n  r = ((glProgramUniform1uiv = (PFNGLPROGRAMUNIFORM1UIVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform1uiv\")) == NULL) || r;\n  r = ((glProgramUniform2d = (PFNGLPROGRAMUNIFORM2DPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform2d\")) == NULL) || r;\n  r = ((glProgramUniform2dv = (PFNGLPROGRAMUNIFORM2DVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform2dv\")) == NULL) || r;\n  r = ((glProgramUniform2f = (PFNGLPROGRAMUNIFORM2FPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform2f\")) == NULL) || r;\n  r = ((glProgramUniform2fv = (PFNGLPROGRAMUNIFORM2FVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform2fv\")) == NULL) || r;\n  r = ((glProgramUniform2i = (PFNGLPROGRAMUNIFORM2IPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform2i\")) == NULL) || r;\n  r = ((glProgramUniform2iv = (PFNGLPROGRAMUNIFORM2IVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform2iv\")) == NULL) || r;\n  r = ((glProgramUniform2ui = (PFNGLPROGRAMUNIFORM2UIPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform2ui\")) == NULL) || r;\n  r = ((glProgramUniform2uiv = (PFNGLPROGRAMUNIFORM2UIVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform2uiv\")) == NULL) || r;\n  r = ((glProgramUniform3d = (PFNGLPROGRAMUNIFORM3DPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform3d\")) == NULL) || r;\n  r = ((glProgramUniform3dv = (PFNGLPROGRAMUNIFORM3DVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform3dv\")) == NULL) || r;\n  r = ((glProgramUniform3f = (PFNGLPROGRAMUNIFORM3FPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform3f\")) == NULL) || r;\n  r = ((glProgramUniform3fv = (PFNGLPROGRAMUNIFORM3FVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform3fv\")) == NULL) || r;\n  r = ((glProgramUniform3i = (PFNGLPROGRAMUNIFORM3IPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform3i\")) == NULL) || r;\n  r = ((glProgramUniform3iv = (PFNGLPROGRAMUNIFORM3IVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform3iv\")) == NULL) || r;\n  r = ((glProgramUniform3ui = (PFNGLPROGRAMUNIFORM3UIPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform3ui\")) == NULL) || r;\n  r = ((glProgramUniform3uiv = (PFNGLPROGRAMUNIFORM3UIVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform3uiv\")) == NULL) || r;\n  r = ((glProgramUniform4d = (PFNGLPROGRAMUNIFORM4DPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform4d\")) == NULL) || r;\n  r = ((glProgramUniform4dv = (PFNGLPROGRAMUNIFORM4DVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform4dv\")) == NULL) || r;\n  r = ((glProgramUniform4f = (PFNGLPROGRAMUNIFORM4FPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform4f\")) == NULL) || r;\n  r = ((glProgramUniform4fv = (PFNGLPROGRAMUNIFORM4FVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform4fv\")) == NULL) || r;\n  r = ((glProgramUniform4i = (PFNGLPROGRAMUNIFORM4IPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform4i\")) == NULL) || r;\n  r = ((glProgramUniform4iv = (PFNGLPROGRAMUNIFORM4IVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform4iv\")) == NULL) || r;\n  r = ((glProgramUniform4ui = (PFNGLPROGRAMUNIFORM4UIPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform4ui\")) == NULL) || r;\n  r = ((glProgramUniform4uiv = (PFNGLPROGRAMUNIFORM4UIVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform4uiv\")) == NULL) || r;\n  r = ((glProgramUniformMatrix2dv = (PFNGLPROGRAMUNIFORMMATRIX2DVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix2dv\")) == NULL) || r;\n  r = ((glProgramUniformMatrix2fv = (PFNGLPROGRAMUNIFORMMATRIX2FVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix2fv\")) == NULL) || r;\n  r = ((glProgramUniformMatrix2x3dv = (PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix2x3dv\")) == NULL) || r;\n  r = ((glProgramUniformMatrix2x3fv = (PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix2x3fv\")) == NULL) || r;\n  r = ((glProgramUniformMatrix2x4dv = (PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix2x4dv\")) == NULL) || r;\n  r = ((glProgramUniformMatrix2x4fv = (PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix2x4fv\")) == NULL) || r;\n  r = ((glProgramUniformMatrix3dv = (PFNGLPROGRAMUNIFORMMATRIX3DVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix3dv\")) == NULL) || r;\n  r = ((glProgramUniformMatrix3fv = (PFNGLPROGRAMUNIFORMMATRIX3FVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix3fv\")) == NULL) || r;\n  r = ((glProgramUniformMatrix3x2dv = (PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix3x2dv\")) == NULL) || r;\n  r = ((glProgramUniformMatrix3x2fv = (PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix3x2fv\")) == NULL) || r;\n  r = ((glProgramUniformMatrix3x4dv = (PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix3x4dv\")) == NULL) || r;\n  r = ((glProgramUniformMatrix3x4fv = (PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix3x4fv\")) == NULL) || r;\n  r = ((glProgramUniformMatrix4dv = (PFNGLPROGRAMUNIFORMMATRIX4DVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix4dv\")) == NULL) || r;\n  r = ((glProgramUniformMatrix4fv = (PFNGLPROGRAMUNIFORMMATRIX4FVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix4fv\")) == NULL) || r;\n  r = ((glProgramUniformMatrix4x2dv = (PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix4x2dv\")) == NULL) || r;\n  r = ((glProgramUniformMatrix4x2fv = (PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix4x2fv\")) == NULL) || r;\n  r = ((glProgramUniformMatrix4x3dv = (PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix4x3dv\")) == NULL) || r;\n  r = ((glProgramUniformMatrix4x3fv = (PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix4x3fv\")) == NULL) || r;\n  r = ((glUseProgramStages = (PFNGLUSEPROGRAMSTAGESPROC)glewGetProcAddress((const GLubyte*)\"glUseProgramStages\")) == NULL) || r;\n  r = ((glValidateProgramPipeline = (PFNGLVALIDATEPROGRAMPIPELINEPROC)glewGetProcAddress((const GLubyte*)\"glValidateProgramPipeline\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_separate_shader_objects */\n\n#ifdef GL_ARB_shader_atomic_counters\n\nstatic GLboolean _glewInit_GL_ARB_shader_atomic_counters ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetActiveAtomicCounterBufferiv = (PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)glewGetProcAddress((const GLubyte*)\"glGetActiveAtomicCounterBufferiv\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_shader_atomic_counters */\n\n#ifdef GL_ARB_shader_image_load_store\n\nstatic GLboolean _glewInit_GL_ARB_shader_image_load_store ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBindImageTexture = (PFNGLBINDIMAGETEXTUREPROC)glewGetProcAddress((const GLubyte*)\"glBindImageTexture\")) == NULL) || r;\n  r = ((glMemoryBarrier = (PFNGLMEMORYBARRIERPROC)glewGetProcAddress((const GLubyte*)\"glMemoryBarrier\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_shader_image_load_store */\n\n#ifdef GL_ARB_shader_objects\n\nstatic GLboolean _glewInit_GL_ARB_shader_objects ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glAttachObjectARB = (PFNGLATTACHOBJECTARBPROC)glewGetProcAddress((const GLubyte*)\"glAttachObjectARB\")) == NULL) || r;\n  r = ((glCompileShaderARB = (PFNGLCOMPILESHADERARBPROC)glewGetProcAddress((const GLubyte*)\"glCompileShaderARB\")) == NULL) || r;\n  r = ((glCreateProgramObjectARB = (PFNGLCREATEPROGRAMOBJECTARBPROC)glewGetProcAddress((const GLubyte*)\"glCreateProgramObjectARB\")) == NULL) || r;\n  r = ((glCreateShaderObjectARB = (PFNGLCREATESHADEROBJECTARBPROC)glewGetProcAddress((const GLubyte*)\"glCreateShaderObjectARB\")) == NULL) || r;\n  r = ((glDeleteObjectARB = (PFNGLDELETEOBJECTARBPROC)glewGetProcAddress((const GLubyte*)\"glDeleteObjectARB\")) == NULL) || r;\n  r = ((glDetachObjectARB = (PFNGLDETACHOBJECTARBPROC)glewGetProcAddress((const GLubyte*)\"glDetachObjectARB\")) == NULL) || r;\n  r = ((glGetActiveUniformARB = (PFNGLGETACTIVEUNIFORMARBPROC)glewGetProcAddress((const GLubyte*)\"glGetActiveUniformARB\")) == NULL) || r;\n  r = ((glGetAttachedObjectsARB = (PFNGLGETATTACHEDOBJECTSARBPROC)glewGetProcAddress((const GLubyte*)\"glGetAttachedObjectsARB\")) == NULL) || r;\n  r = ((glGetHandleARB = (PFNGLGETHANDLEARBPROC)glewGetProcAddress((const GLubyte*)\"glGetHandleARB\")) == NULL) || r;\n  r = ((glGetInfoLogARB = (PFNGLGETINFOLOGARBPROC)glewGetProcAddress((const GLubyte*)\"glGetInfoLogARB\")) == NULL) || r;\n  r = ((glGetObjectParameterfvARB = (PFNGLGETOBJECTPARAMETERFVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetObjectParameterfvARB\")) == NULL) || r;\n  r = ((glGetObjectParameterivARB = (PFNGLGETOBJECTPARAMETERIVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetObjectParameterivARB\")) == NULL) || r;\n  r = ((glGetShaderSourceARB = (PFNGLGETSHADERSOURCEARBPROC)glewGetProcAddress((const GLubyte*)\"glGetShaderSourceARB\")) == NULL) || r;\n  r = ((glGetUniformLocationARB = (PFNGLGETUNIFORMLOCATIONARBPROC)glewGetProcAddress((const GLubyte*)\"glGetUniformLocationARB\")) == NULL) || r;\n  r = ((glGetUniformfvARB = (PFNGLGETUNIFORMFVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetUniformfvARB\")) == NULL) || r;\n  r = ((glGetUniformivARB = (PFNGLGETUNIFORMIVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetUniformivARB\")) == NULL) || r;\n  r = ((glLinkProgramARB = (PFNGLLINKPROGRAMARBPROC)glewGetProcAddress((const GLubyte*)\"glLinkProgramARB\")) == NULL) || r;\n  r = ((glShaderSourceARB = (PFNGLSHADERSOURCEARBPROC)glewGetProcAddress((const GLubyte*)\"glShaderSourceARB\")) == NULL) || r;\n  r = ((glUniform1fARB = (PFNGLUNIFORM1FARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform1fARB\")) == NULL) || r;\n  r = ((glUniform1fvARB = (PFNGLUNIFORM1FVARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform1fvARB\")) == NULL) || r;\n  r = ((glUniform1iARB = (PFNGLUNIFORM1IARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform1iARB\")) == NULL) || r;\n  r = ((glUniform1ivARB = (PFNGLUNIFORM1IVARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform1ivARB\")) == NULL) || r;\n  r = ((glUniform2fARB = (PFNGLUNIFORM2FARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform2fARB\")) == NULL) || r;\n  r = ((glUniform2fvARB = (PFNGLUNIFORM2FVARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform2fvARB\")) == NULL) || r;\n  r = ((glUniform2iARB = (PFNGLUNIFORM2IARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform2iARB\")) == NULL) || r;\n  r = ((glUniform2ivARB = (PFNGLUNIFORM2IVARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform2ivARB\")) == NULL) || r;\n  r = ((glUniform3fARB = (PFNGLUNIFORM3FARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform3fARB\")) == NULL) || r;\n  r = ((glUniform3fvARB = (PFNGLUNIFORM3FVARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform3fvARB\")) == NULL) || r;\n  r = ((glUniform3iARB = (PFNGLUNIFORM3IARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform3iARB\")) == NULL) || r;\n  r = ((glUniform3ivARB = (PFNGLUNIFORM3IVARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform3ivARB\")) == NULL) || r;\n  r = ((glUniform4fARB = (PFNGLUNIFORM4FARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform4fARB\")) == NULL) || r;\n  r = ((glUniform4fvARB = (PFNGLUNIFORM4FVARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform4fvARB\")) == NULL) || r;\n  r = ((glUniform4iARB = (PFNGLUNIFORM4IARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform4iARB\")) == NULL) || r;\n  r = ((glUniform4ivARB = (PFNGLUNIFORM4IVARBPROC)glewGetProcAddress((const GLubyte*)\"glUniform4ivARB\")) == NULL) || r;\n  r = ((glUniformMatrix2fvARB = (PFNGLUNIFORMMATRIX2FVARBPROC)glewGetProcAddress((const GLubyte*)\"glUniformMatrix2fvARB\")) == NULL) || r;\n  r = ((glUniformMatrix3fvARB = (PFNGLUNIFORMMATRIX3FVARBPROC)glewGetProcAddress((const GLubyte*)\"glUniformMatrix3fvARB\")) == NULL) || r;\n  r = ((glUniformMatrix4fvARB = (PFNGLUNIFORMMATRIX4FVARBPROC)glewGetProcAddress((const GLubyte*)\"glUniformMatrix4fvARB\")) == NULL) || r;\n  r = ((glUseProgramObjectARB = (PFNGLUSEPROGRAMOBJECTARBPROC)glewGetProcAddress((const GLubyte*)\"glUseProgramObjectARB\")) == NULL) || r;\n  r = ((glValidateProgramARB = (PFNGLVALIDATEPROGRAMARBPROC)glewGetProcAddress((const GLubyte*)\"glValidateProgramARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_shader_objects */\n\n#ifdef GL_ARB_shader_storage_buffer_object\n\nstatic GLboolean _glewInit_GL_ARB_shader_storage_buffer_object ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glShaderStorageBlockBinding = (PFNGLSHADERSTORAGEBLOCKBINDINGPROC)glewGetProcAddress((const GLubyte*)\"glShaderStorageBlockBinding\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_shader_storage_buffer_object */\n\n#ifdef GL_ARB_shader_subroutine\n\nstatic GLboolean _glewInit_GL_ARB_shader_subroutine ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetActiveSubroutineName = (PFNGLGETACTIVESUBROUTINENAMEPROC)glewGetProcAddress((const GLubyte*)\"glGetActiveSubroutineName\")) == NULL) || r;\n  r = ((glGetActiveSubroutineUniformName = (PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)glewGetProcAddress((const GLubyte*)\"glGetActiveSubroutineUniformName\")) == NULL) || r;\n  r = ((glGetActiveSubroutineUniformiv = (PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)glewGetProcAddress((const GLubyte*)\"glGetActiveSubroutineUniformiv\")) == NULL) || r;\n  r = ((glGetProgramStageiv = (PFNGLGETPROGRAMSTAGEIVPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramStageiv\")) == NULL) || r;\n  r = ((glGetSubroutineIndex = (PFNGLGETSUBROUTINEINDEXPROC)glewGetProcAddress((const GLubyte*)\"glGetSubroutineIndex\")) == NULL) || r;\n  r = ((glGetSubroutineUniformLocation = (PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)glewGetProcAddress((const GLubyte*)\"glGetSubroutineUniformLocation\")) == NULL) || r;\n  r = ((glGetUniformSubroutineuiv = (PFNGLGETUNIFORMSUBROUTINEUIVPROC)glewGetProcAddress((const GLubyte*)\"glGetUniformSubroutineuiv\")) == NULL) || r;\n  r = ((glUniformSubroutinesuiv = (PFNGLUNIFORMSUBROUTINESUIVPROC)glewGetProcAddress((const GLubyte*)\"glUniformSubroutinesuiv\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_shader_subroutine */\n\n#ifdef GL_ARB_shading_language_include\n\nstatic GLboolean _glewInit_GL_ARB_shading_language_include ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glCompileShaderIncludeARB = (PFNGLCOMPILESHADERINCLUDEARBPROC)glewGetProcAddress((const GLubyte*)\"glCompileShaderIncludeARB\")) == NULL) || r;\n  r = ((glDeleteNamedStringARB = (PFNGLDELETENAMEDSTRINGARBPROC)glewGetProcAddress((const GLubyte*)\"glDeleteNamedStringARB\")) == NULL) || r;\n  r = ((glGetNamedStringARB = (PFNGLGETNAMEDSTRINGARBPROC)glewGetProcAddress((const GLubyte*)\"glGetNamedStringARB\")) == NULL) || r;\n  r = ((glGetNamedStringivARB = (PFNGLGETNAMEDSTRINGIVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetNamedStringivARB\")) == NULL) || r;\n  r = ((glIsNamedStringARB = (PFNGLISNAMEDSTRINGARBPROC)glewGetProcAddress((const GLubyte*)\"glIsNamedStringARB\")) == NULL) || r;\n  r = ((glNamedStringARB = (PFNGLNAMEDSTRINGARBPROC)glewGetProcAddress((const GLubyte*)\"glNamedStringARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_shading_language_include */\n\n#ifdef GL_ARB_sparse_buffer\n\nstatic GLboolean _glewInit_GL_ARB_sparse_buffer ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBufferPageCommitmentARB = (PFNGLBUFFERPAGECOMMITMENTARBPROC)glewGetProcAddress((const GLubyte*)\"glBufferPageCommitmentARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_sparse_buffer */\n\n#ifdef GL_ARB_sparse_texture\n\nstatic GLboolean _glewInit_GL_ARB_sparse_texture ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glTexPageCommitmentARB = (PFNGLTEXPAGECOMMITMENTARBPROC)glewGetProcAddress((const GLubyte*)\"glTexPageCommitmentARB\")) == NULL) || r;\n  r = ((glTexturePageCommitmentEXT = (PFNGLTEXTUREPAGECOMMITMENTEXTPROC)glewGetProcAddress((const GLubyte*)\"glTexturePageCommitmentEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_sparse_texture */\n\n#ifdef GL_ARB_sync\n\nstatic GLboolean _glewInit_GL_ARB_sync ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glClientWaitSync = (PFNGLCLIENTWAITSYNCPROC)glewGetProcAddress((const GLubyte*)\"glClientWaitSync\")) == NULL) || r;\n  r = ((glDeleteSync = (PFNGLDELETESYNCPROC)glewGetProcAddress((const GLubyte*)\"glDeleteSync\")) == NULL) || r;\n  r = ((glFenceSync = (PFNGLFENCESYNCPROC)glewGetProcAddress((const GLubyte*)\"glFenceSync\")) == NULL) || r;\n  r = ((glGetInteger64v = (PFNGLGETINTEGER64VPROC)glewGetProcAddress((const GLubyte*)\"glGetInteger64v\")) == NULL) || r;\n  r = ((glGetSynciv = (PFNGLGETSYNCIVPROC)glewGetProcAddress((const GLubyte*)\"glGetSynciv\")) == NULL) || r;\n  r = ((glIsSync = (PFNGLISSYNCPROC)glewGetProcAddress((const GLubyte*)\"glIsSync\")) == NULL) || r;\n  r = ((glWaitSync = (PFNGLWAITSYNCPROC)glewGetProcAddress((const GLubyte*)\"glWaitSync\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_sync */\n\n#ifdef GL_ARB_tessellation_shader\n\nstatic GLboolean _glewInit_GL_ARB_tessellation_shader ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glPatchParameterfv = (PFNGLPATCHPARAMETERFVPROC)glewGetProcAddress((const GLubyte*)\"glPatchParameterfv\")) == NULL) || r;\n  r = ((glPatchParameteri = (PFNGLPATCHPARAMETERIPROC)glewGetProcAddress((const GLubyte*)\"glPatchParameteri\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_tessellation_shader */\n\n#ifdef GL_ARB_texture_barrier\n\nstatic GLboolean _glewInit_GL_ARB_texture_barrier ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glTextureBarrier = (PFNGLTEXTUREBARRIERPROC)glewGetProcAddress((const GLubyte*)\"glTextureBarrier\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_texture_barrier */\n\n#ifdef GL_ARB_texture_buffer_object\n\nstatic GLboolean _glewInit_GL_ARB_texture_buffer_object ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glTexBufferARB = (PFNGLTEXBUFFERARBPROC)glewGetProcAddress((const GLubyte*)\"glTexBufferARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_texture_buffer_object */\n\n#ifdef GL_ARB_texture_buffer_range\n\nstatic GLboolean _glewInit_GL_ARB_texture_buffer_range ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glTexBufferRange = (PFNGLTEXBUFFERRANGEPROC)glewGetProcAddress((const GLubyte*)\"glTexBufferRange\")) == NULL) || r;\n  r = ((glTextureBufferRangeEXT = (PFNGLTEXTUREBUFFERRANGEEXTPROC)glewGetProcAddress((const GLubyte*)\"glTextureBufferRangeEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_texture_buffer_range */\n\n#ifdef GL_ARB_texture_compression\n\nstatic GLboolean _glewInit_GL_ARB_texture_compression ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glCompressedTexImage1DARB = (PFNGLCOMPRESSEDTEXIMAGE1DARBPROC)glewGetProcAddress((const GLubyte*)\"glCompressedTexImage1DARB\")) == NULL) || r;\n  r = ((glCompressedTexImage2DARB = (PFNGLCOMPRESSEDTEXIMAGE2DARBPROC)glewGetProcAddress((const GLubyte*)\"glCompressedTexImage2DARB\")) == NULL) || r;\n  r = ((glCompressedTexImage3DARB = (PFNGLCOMPRESSEDTEXIMAGE3DARBPROC)glewGetProcAddress((const GLubyte*)\"glCompressedTexImage3DARB\")) == NULL) || r;\n  r = ((glCompressedTexSubImage1DARB = (PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC)glewGetProcAddress((const GLubyte*)\"glCompressedTexSubImage1DARB\")) == NULL) || r;\n  r = ((glCompressedTexSubImage2DARB = (PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC)glewGetProcAddress((const GLubyte*)\"glCompressedTexSubImage2DARB\")) == NULL) || r;\n  r = ((glCompressedTexSubImage3DARB = (PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC)glewGetProcAddress((const GLubyte*)\"glCompressedTexSubImage3DARB\")) == NULL) || r;\n  r = ((glGetCompressedTexImageARB = (PFNGLGETCOMPRESSEDTEXIMAGEARBPROC)glewGetProcAddress((const GLubyte*)\"glGetCompressedTexImageARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_texture_compression */\n\n#ifdef GL_ARB_texture_multisample\n\nstatic GLboolean _glewInit_GL_ARB_texture_multisample ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetMultisamplefv = (PFNGLGETMULTISAMPLEFVPROC)glewGetProcAddress((const GLubyte*)\"glGetMultisamplefv\")) == NULL) || r;\n  r = ((glSampleMaski = (PFNGLSAMPLEMASKIPROC)glewGetProcAddress((const GLubyte*)\"glSampleMaski\")) == NULL) || r;\n  r = ((glTexImage2DMultisample = (PFNGLTEXIMAGE2DMULTISAMPLEPROC)glewGetProcAddress((const GLubyte*)\"glTexImage2DMultisample\")) == NULL) || r;\n  r = ((glTexImage3DMultisample = (PFNGLTEXIMAGE3DMULTISAMPLEPROC)glewGetProcAddress((const GLubyte*)\"glTexImage3DMultisample\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_texture_multisample */\n\n#ifdef GL_ARB_texture_storage\n\nstatic GLboolean _glewInit_GL_ARB_texture_storage ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glTexStorage1D = (PFNGLTEXSTORAGE1DPROC)glewGetProcAddress((const GLubyte*)\"glTexStorage1D\")) == NULL) || r;\n  r = ((glTexStorage2D = (PFNGLTEXSTORAGE2DPROC)glewGetProcAddress((const GLubyte*)\"glTexStorage2D\")) == NULL) || r;\n  r = ((glTexStorage3D = (PFNGLTEXSTORAGE3DPROC)glewGetProcAddress((const GLubyte*)\"glTexStorage3D\")) == NULL) || r;\n  r = ((glTextureStorage1DEXT = (PFNGLTEXTURESTORAGE1DEXTPROC)glewGetProcAddress((const GLubyte*)\"glTextureStorage1DEXT\")) == NULL) || r;\n  r = ((glTextureStorage2DEXT = (PFNGLTEXTURESTORAGE2DEXTPROC)glewGetProcAddress((const GLubyte*)\"glTextureStorage2DEXT\")) == NULL) || r;\n  r = ((glTextureStorage3DEXT = (PFNGLTEXTURESTORAGE3DEXTPROC)glewGetProcAddress((const GLubyte*)\"glTextureStorage3DEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_texture_storage */\n\n#ifdef GL_ARB_texture_storage_multisample\n\nstatic GLboolean _glewInit_GL_ARB_texture_storage_multisample ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glTexStorage2DMultisample = (PFNGLTEXSTORAGE2DMULTISAMPLEPROC)glewGetProcAddress((const GLubyte*)\"glTexStorage2DMultisample\")) == NULL) || r;\n  r = ((glTexStorage3DMultisample = (PFNGLTEXSTORAGE3DMULTISAMPLEPROC)glewGetProcAddress((const GLubyte*)\"glTexStorage3DMultisample\")) == NULL) || r;\n  r = ((glTextureStorage2DMultisampleEXT = (PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC)glewGetProcAddress((const GLubyte*)\"glTextureStorage2DMultisampleEXT\")) == NULL) || r;\n  r = ((glTextureStorage3DMultisampleEXT = (PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC)glewGetProcAddress((const GLubyte*)\"glTextureStorage3DMultisampleEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_texture_storage_multisample */\n\n#ifdef GL_ARB_texture_view\n\nstatic GLboolean _glewInit_GL_ARB_texture_view ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glTextureView = (PFNGLTEXTUREVIEWPROC)glewGetProcAddress((const GLubyte*)\"glTextureView\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_texture_view */\n\n#ifdef GL_ARB_timer_query\n\nstatic GLboolean _glewInit_GL_ARB_timer_query ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetQueryObjecti64v = (PFNGLGETQUERYOBJECTI64VPROC)glewGetProcAddress((const GLubyte*)\"glGetQueryObjecti64v\")) == NULL) || r;\n  r = ((glGetQueryObjectui64v = (PFNGLGETQUERYOBJECTUI64VPROC)glewGetProcAddress((const GLubyte*)\"glGetQueryObjectui64v\")) == NULL) || r;\n  r = ((glQueryCounter = (PFNGLQUERYCOUNTERPROC)glewGetProcAddress((const GLubyte*)\"glQueryCounter\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_timer_query */\n\n#ifdef GL_ARB_transform_feedback2\n\nstatic GLboolean _glewInit_GL_ARB_transform_feedback2 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBindTransformFeedback = (PFNGLBINDTRANSFORMFEEDBACKPROC)glewGetProcAddress((const GLubyte*)\"glBindTransformFeedback\")) == NULL) || r;\n  r = ((glDeleteTransformFeedbacks = (PFNGLDELETETRANSFORMFEEDBACKSPROC)glewGetProcAddress((const GLubyte*)\"glDeleteTransformFeedbacks\")) == NULL) || r;\n  r = ((glDrawTransformFeedback = (PFNGLDRAWTRANSFORMFEEDBACKPROC)glewGetProcAddress((const GLubyte*)\"glDrawTransformFeedback\")) == NULL) || r;\n  r = ((glGenTransformFeedbacks = (PFNGLGENTRANSFORMFEEDBACKSPROC)glewGetProcAddress((const GLubyte*)\"glGenTransformFeedbacks\")) == NULL) || r;\n  r = ((glIsTransformFeedback = (PFNGLISTRANSFORMFEEDBACKPROC)glewGetProcAddress((const GLubyte*)\"glIsTransformFeedback\")) == NULL) || r;\n  r = ((glPauseTransformFeedback = (PFNGLPAUSETRANSFORMFEEDBACKPROC)glewGetProcAddress((const GLubyte*)\"glPauseTransformFeedback\")) == NULL) || r;\n  r = ((glResumeTransformFeedback = (PFNGLRESUMETRANSFORMFEEDBACKPROC)glewGetProcAddress((const GLubyte*)\"glResumeTransformFeedback\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_transform_feedback2 */\n\n#ifdef GL_ARB_transform_feedback3\n\nstatic GLboolean _glewInit_GL_ARB_transform_feedback3 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBeginQueryIndexed = (PFNGLBEGINQUERYINDEXEDPROC)glewGetProcAddress((const GLubyte*)\"glBeginQueryIndexed\")) == NULL) || r;\n  r = ((glDrawTransformFeedbackStream = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)glewGetProcAddress((const GLubyte*)\"glDrawTransformFeedbackStream\")) == NULL) || r;\n  r = ((glEndQueryIndexed = (PFNGLENDQUERYINDEXEDPROC)glewGetProcAddress((const GLubyte*)\"glEndQueryIndexed\")) == NULL) || r;\n  r = ((glGetQueryIndexediv = (PFNGLGETQUERYINDEXEDIVPROC)glewGetProcAddress((const GLubyte*)\"glGetQueryIndexediv\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_transform_feedback3 */\n\n#ifdef GL_ARB_transform_feedback_instanced\n\nstatic GLboolean _glewInit_GL_ARB_transform_feedback_instanced ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDrawTransformFeedbackInstanced = (PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)glewGetProcAddress((const GLubyte*)\"glDrawTransformFeedbackInstanced\")) == NULL) || r;\n  r = ((glDrawTransformFeedbackStreamInstanced = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)glewGetProcAddress((const GLubyte*)\"glDrawTransformFeedbackStreamInstanced\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_transform_feedback_instanced */\n\n#ifdef GL_ARB_transpose_matrix\n\nstatic GLboolean _glewInit_GL_ARB_transpose_matrix ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glLoadTransposeMatrixdARB = (PFNGLLOADTRANSPOSEMATRIXDARBPROC)glewGetProcAddress((const GLubyte*)\"glLoadTransposeMatrixdARB\")) == NULL) || r;\n  r = ((glLoadTransposeMatrixfARB = (PFNGLLOADTRANSPOSEMATRIXFARBPROC)glewGetProcAddress((const GLubyte*)\"glLoadTransposeMatrixfARB\")) == NULL) || r;\n  r = ((glMultTransposeMatrixdARB = (PFNGLMULTTRANSPOSEMATRIXDARBPROC)glewGetProcAddress((const GLubyte*)\"glMultTransposeMatrixdARB\")) == NULL) || r;\n  r = ((glMultTransposeMatrixfARB = (PFNGLMULTTRANSPOSEMATRIXFARBPROC)glewGetProcAddress((const GLubyte*)\"glMultTransposeMatrixfARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_transpose_matrix */\n\n#ifdef GL_ARB_uniform_buffer_object\n\nstatic GLboolean _glewInit_GL_ARB_uniform_buffer_object ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBindBufferBase = (PFNGLBINDBUFFERBASEPROC)glewGetProcAddress((const GLubyte*)\"glBindBufferBase\")) == NULL) || r;\n  r = ((glBindBufferRange = (PFNGLBINDBUFFERRANGEPROC)glewGetProcAddress((const GLubyte*)\"glBindBufferRange\")) == NULL) || r;\n  r = ((glGetActiveUniformBlockName = (PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)glewGetProcAddress((const GLubyte*)\"glGetActiveUniformBlockName\")) == NULL) || r;\n  r = ((glGetActiveUniformBlockiv = (PFNGLGETACTIVEUNIFORMBLOCKIVPROC)glewGetProcAddress((const GLubyte*)\"glGetActiveUniformBlockiv\")) == NULL) || r;\n  r = ((glGetActiveUniformName = (PFNGLGETACTIVEUNIFORMNAMEPROC)glewGetProcAddress((const GLubyte*)\"glGetActiveUniformName\")) == NULL) || r;\n  r = ((glGetActiveUniformsiv = (PFNGLGETACTIVEUNIFORMSIVPROC)glewGetProcAddress((const GLubyte*)\"glGetActiveUniformsiv\")) == NULL) || r;\n  r = ((glGetIntegeri_v = (PFNGLGETINTEGERI_VPROC)glewGetProcAddress((const GLubyte*)\"glGetIntegeri_v\")) == NULL) || r;\n  r = ((glGetUniformBlockIndex = (PFNGLGETUNIFORMBLOCKINDEXPROC)glewGetProcAddress((const GLubyte*)\"glGetUniformBlockIndex\")) == NULL) || r;\n  r = ((glGetUniformIndices = (PFNGLGETUNIFORMINDICESPROC)glewGetProcAddress((const GLubyte*)\"glGetUniformIndices\")) == NULL) || r;\n  r = ((glUniformBlockBinding = (PFNGLUNIFORMBLOCKBINDINGPROC)glewGetProcAddress((const GLubyte*)\"glUniformBlockBinding\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_uniform_buffer_object */\n\n#ifdef GL_ARB_vertex_array_object\n\nstatic GLboolean _glewInit_GL_ARB_vertex_array_object ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBindVertexArray = (PFNGLBINDVERTEXARRAYPROC)glewGetProcAddress((const GLubyte*)\"glBindVertexArray\")) == NULL) || r;\n  r = ((glDeleteVertexArrays = (PFNGLDELETEVERTEXARRAYSPROC)glewGetProcAddress((const GLubyte*)\"glDeleteVertexArrays\")) == NULL) || r;\n  r = ((glGenVertexArrays = (PFNGLGENVERTEXARRAYSPROC)glewGetProcAddress((const GLubyte*)\"glGenVertexArrays\")) == NULL) || r;\n  r = ((glIsVertexArray = (PFNGLISVERTEXARRAYPROC)glewGetProcAddress((const GLubyte*)\"glIsVertexArray\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_vertex_array_object */\n\n#ifdef GL_ARB_vertex_attrib_64bit\n\nstatic GLboolean _glewInit_GL_ARB_vertex_attrib_64bit ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetVertexAttribLdv = (PFNGLGETVERTEXATTRIBLDVPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexAttribLdv\")) == NULL) || r;\n  r = ((glVertexAttribL1d = (PFNGLVERTEXATTRIBL1DPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL1d\")) == NULL) || r;\n  r = ((glVertexAttribL1dv = (PFNGLVERTEXATTRIBL1DVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL1dv\")) == NULL) || r;\n  r = ((glVertexAttribL2d = (PFNGLVERTEXATTRIBL2DPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL2d\")) == NULL) || r;\n  r = ((glVertexAttribL2dv = (PFNGLVERTEXATTRIBL2DVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL2dv\")) == NULL) || r;\n  r = ((glVertexAttribL3d = (PFNGLVERTEXATTRIBL3DPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL3d\")) == NULL) || r;\n  r = ((glVertexAttribL3dv = (PFNGLVERTEXATTRIBL3DVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL3dv\")) == NULL) || r;\n  r = ((glVertexAttribL4d = (PFNGLVERTEXATTRIBL4DPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL4d\")) == NULL) || r;\n  r = ((glVertexAttribL4dv = (PFNGLVERTEXATTRIBL4DVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL4dv\")) == NULL) || r;\n  r = ((glVertexAttribLPointer = (PFNGLVERTEXATTRIBLPOINTERPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribLPointer\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_vertex_attrib_64bit */\n\n#ifdef GL_ARB_vertex_attrib_binding\n\nstatic GLboolean _glewInit_GL_ARB_vertex_attrib_binding ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBindVertexBuffer = (PFNGLBINDVERTEXBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glBindVertexBuffer\")) == NULL) || r;\n  r = ((glVertexArrayBindVertexBufferEXT = (PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayBindVertexBufferEXT\")) == NULL) || r;\n  r = ((glVertexArrayVertexAttribBindingEXT = (PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayVertexAttribBindingEXT\")) == NULL) || r;\n  r = ((glVertexArrayVertexAttribFormatEXT = (PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayVertexAttribFormatEXT\")) == NULL) || r;\n  r = ((glVertexArrayVertexAttribIFormatEXT = (PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayVertexAttribIFormatEXT\")) == NULL) || r;\n  r = ((glVertexArrayVertexAttribLFormatEXT = (PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayVertexAttribLFormatEXT\")) == NULL) || r;\n  r = ((glVertexArrayVertexBindingDivisorEXT = (PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayVertexBindingDivisorEXT\")) == NULL) || r;\n  r = ((glVertexAttribBinding = (PFNGLVERTEXATTRIBBINDINGPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribBinding\")) == NULL) || r;\n  r = ((glVertexAttribFormat = (PFNGLVERTEXATTRIBFORMATPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribFormat\")) == NULL) || r;\n  r = ((glVertexAttribIFormat = (PFNGLVERTEXATTRIBIFORMATPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribIFormat\")) == NULL) || r;\n  r = ((glVertexAttribLFormat = (PFNGLVERTEXATTRIBLFORMATPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribLFormat\")) == NULL) || r;\n  r = ((glVertexBindingDivisor = (PFNGLVERTEXBINDINGDIVISORPROC)glewGetProcAddress((const GLubyte*)\"glVertexBindingDivisor\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_vertex_attrib_binding */\n\n#ifdef GL_ARB_vertex_blend\n\nstatic GLboolean _glewInit_GL_ARB_vertex_blend ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glVertexBlendARB = (PFNGLVERTEXBLENDARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexBlendARB\")) == NULL) || r;\n  r = ((glWeightPointerARB = (PFNGLWEIGHTPOINTERARBPROC)glewGetProcAddress((const GLubyte*)\"glWeightPointerARB\")) == NULL) || r;\n  r = ((glWeightbvARB = (PFNGLWEIGHTBVARBPROC)glewGetProcAddress((const GLubyte*)\"glWeightbvARB\")) == NULL) || r;\n  r = ((glWeightdvARB = (PFNGLWEIGHTDVARBPROC)glewGetProcAddress((const GLubyte*)\"glWeightdvARB\")) == NULL) || r;\n  r = ((glWeightfvARB = (PFNGLWEIGHTFVARBPROC)glewGetProcAddress((const GLubyte*)\"glWeightfvARB\")) == NULL) || r;\n  r = ((glWeightivARB = (PFNGLWEIGHTIVARBPROC)glewGetProcAddress((const GLubyte*)\"glWeightivARB\")) == NULL) || r;\n  r = ((glWeightsvARB = (PFNGLWEIGHTSVARBPROC)glewGetProcAddress((const GLubyte*)\"glWeightsvARB\")) == NULL) || r;\n  r = ((glWeightubvARB = (PFNGLWEIGHTUBVARBPROC)glewGetProcAddress((const GLubyte*)\"glWeightubvARB\")) == NULL) || r;\n  r = ((glWeightuivARB = (PFNGLWEIGHTUIVARBPROC)glewGetProcAddress((const GLubyte*)\"glWeightuivARB\")) == NULL) || r;\n  r = ((glWeightusvARB = (PFNGLWEIGHTUSVARBPROC)glewGetProcAddress((const GLubyte*)\"glWeightusvARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_vertex_blend */\n\n#ifdef GL_ARB_vertex_buffer_object\n\nstatic GLboolean _glewInit_GL_ARB_vertex_buffer_object ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBindBufferARB = (PFNGLBINDBUFFERARBPROC)glewGetProcAddress((const GLubyte*)\"glBindBufferARB\")) == NULL) || r;\n  r = ((glBufferDataARB = (PFNGLBUFFERDATAARBPROC)glewGetProcAddress((const GLubyte*)\"glBufferDataARB\")) == NULL) || r;\n  r = ((glBufferSubDataARB = (PFNGLBUFFERSUBDATAARBPROC)glewGetProcAddress((const GLubyte*)\"glBufferSubDataARB\")) == NULL) || r;\n  r = ((glDeleteBuffersARB = (PFNGLDELETEBUFFERSARBPROC)glewGetProcAddress((const GLubyte*)\"glDeleteBuffersARB\")) == NULL) || r;\n  r = ((glGenBuffersARB = (PFNGLGENBUFFERSARBPROC)glewGetProcAddress((const GLubyte*)\"glGenBuffersARB\")) == NULL) || r;\n  r = ((glGetBufferParameterivARB = (PFNGLGETBUFFERPARAMETERIVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetBufferParameterivARB\")) == NULL) || r;\n  r = ((glGetBufferPointervARB = (PFNGLGETBUFFERPOINTERVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetBufferPointervARB\")) == NULL) || r;\n  r = ((glGetBufferSubDataARB = (PFNGLGETBUFFERSUBDATAARBPROC)glewGetProcAddress((const GLubyte*)\"glGetBufferSubDataARB\")) == NULL) || r;\n  r = ((glIsBufferARB = (PFNGLISBUFFERARBPROC)glewGetProcAddress((const GLubyte*)\"glIsBufferARB\")) == NULL) || r;\n  r = ((glMapBufferARB = (PFNGLMAPBUFFERARBPROC)glewGetProcAddress((const GLubyte*)\"glMapBufferARB\")) == NULL) || r;\n  r = ((glUnmapBufferARB = (PFNGLUNMAPBUFFERARBPROC)glewGetProcAddress((const GLubyte*)\"glUnmapBufferARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_vertex_buffer_object */\n\n#ifdef GL_ARB_vertex_program\n\nstatic GLboolean _glewInit_GL_ARB_vertex_program ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBindProgramARB = (PFNGLBINDPROGRAMARBPROC)glewGetProcAddress((const GLubyte*)\"glBindProgramARB\")) == NULL) || r;\n  r = ((glDeleteProgramsARB = (PFNGLDELETEPROGRAMSARBPROC)glewGetProcAddress((const GLubyte*)\"glDeleteProgramsARB\")) == NULL) || r;\n  r = ((glDisableVertexAttribArrayARB = (PFNGLDISABLEVERTEXATTRIBARRAYARBPROC)glewGetProcAddress((const GLubyte*)\"glDisableVertexAttribArrayARB\")) == NULL) || r;\n  r = ((glEnableVertexAttribArrayARB = (PFNGLENABLEVERTEXATTRIBARRAYARBPROC)glewGetProcAddress((const GLubyte*)\"glEnableVertexAttribArrayARB\")) == NULL) || r;\n  r = ((glGenProgramsARB = (PFNGLGENPROGRAMSARBPROC)glewGetProcAddress((const GLubyte*)\"glGenProgramsARB\")) == NULL) || r;\n  r = ((glGetProgramEnvParameterdvARB = (PFNGLGETPROGRAMENVPARAMETERDVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramEnvParameterdvARB\")) == NULL) || r;\n  r = ((glGetProgramEnvParameterfvARB = (PFNGLGETPROGRAMENVPARAMETERFVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramEnvParameterfvARB\")) == NULL) || r;\n  r = ((glGetProgramLocalParameterdvARB = (PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramLocalParameterdvARB\")) == NULL) || r;\n  r = ((glGetProgramLocalParameterfvARB = (PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramLocalParameterfvARB\")) == NULL) || r;\n  r = ((glGetProgramStringARB = (PFNGLGETPROGRAMSTRINGARBPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramStringARB\")) == NULL) || r;\n  r = ((glGetProgramivARB = (PFNGLGETPROGRAMIVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramivARB\")) == NULL) || r;\n  r = ((glGetVertexAttribPointervARB = (PFNGLGETVERTEXATTRIBPOINTERVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexAttribPointervARB\")) == NULL) || r;\n  r = ((glGetVertexAttribdvARB = (PFNGLGETVERTEXATTRIBDVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexAttribdvARB\")) == NULL) || r;\n  r = ((glGetVertexAttribfvARB = (PFNGLGETVERTEXATTRIBFVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexAttribfvARB\")) == NULL) || r;\n  r = ((glGetVertexAttribivARB = (PFNGLGETVERTEXATTRIBIVARBPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexAttribivARB\")) == NULL) || r;\n  r = ((glIsProgramARB = (PFNGLISPROGRAMARBPROC)glewGetProcAddress((const GLubyte*)\"glIsProgramARB\")) == NULL) || r;\n  r = ((glProgramEnvParameter4dARB = (PFNGLPROGRAMENVPARAMETER4DARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramEnvParameter4dARB\")) == NULL) || r;\n  r = ((glProgramEnvParameter4dvARB = (PFNGLPROGRAMENVPARAMETER4DVARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramEnvParameter4dvARB\")) == NULL) || r;\n  r = ((glProgramEnvParameter4fARB = (PFNGLPROGRAMENVPARAMETER4FARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramEnvParameter4fARB\")) == NULL) || r;\n  r = ((glProgramEnvParameter4fvARB = (PFNGLPROGRAMENVPARAMETER4FVARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramEnvParameter4fvARB\")) == NULL) || r;\n  r = ((glProgramLocalParameter4dARB = (PFNGLPROGRAMLOCALPARAMETER4DARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramLocalParameter4dARB\")) == NULL) || r;\n  r = ((glProgramLocalParameter4dvARB = (PFNGLPROGRAMLOCALPARAMETER4DVARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramLocalParameter4dvARB\")) == NULL) || r;\n  r = ((glProgramLocalParameter4fARB = (PFNGLPROGRAMLOCALPARAMETER4FARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramLocalParameter4fARB\")) == NULL) || r;\n  r = ((glProgramLocalParameter4fvARB = (PFNGLPROGRAMLOCALPARAMETER4FVARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramLocalParameter4fvARB\")) == NULL) || r;\n  r = ((glProgramStringARB = (PFNGLPROGRAMSTRINGARBPROC)glewGetProcAddress((const GLubyte*)\"glProgramStringARB\")) == NULL) || r;\n  r = ((glVertexAttrib1dARB = (PFNGLVERTEXATTRIB1DARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib1dARB\")) == NULL) || r;\n  r = ((glVertexAttrib1dvARB = (PFNGLVERTEXATTRIB1DVARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib1dvARB\")) == NULL) || r;\n  r = ((glVertexAttrib1fARB = (PFNGLVERTEXATTRIB1FARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib1fARB\")) == NULL) || r;\n  r = ((glVertexAttrib1fvARB = (PFNGLVERTEXATTRIB1FVARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib1fvARB\")) == NULL) || r;\n  r = ((glVertexAttrib1sARB = (PFNGLVERTEXATTRIB1SARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib1sARB\")) == NULL) || r;\n  r = ((glVertexAttrib1svARB = (PFNGLVERTEXATTRIB1SVARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib1svARB\")) == NULL) || r;\n  r = ((glVertexAttrib2dARB = (PFNGLVERTEXATTRIB2DARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib2dARB\")) == NULL) || r;\n  r = ((glVertexAttrib2dvARB = (PFNGLVERTEXATTRIB2DVARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib2dvARB\")) == NULL) || r;\n  r = ((glVertexAttrib2fARB = (PFNGLVERTEXATTRIB2FARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib2fARB\")) == NULL) || r;\n  r = ((glVertexAttrib2fvARB = (PFNGLVERTEXATTRIB2FVARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib2fvARB\")) == NULL) || r;\n  r = ((glVertexAttrib2sARB = (PFNGLVERTEXATTRIB2SARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib2sARB\")) == NULL) || r;\n  r = ((glVertexAttrib2svARB = (PFNGLVERTEXATTRIB2SVARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib2svARB\")) == NULL) || r;\n  r = ((glVertexAttrib3dARB = (PFNGLVERTEXATTRIB3DARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib3dARB\")) == NULL) || r;\n  r = ((glVertexAttrib3dvARB = (PFNGLVERTEXATTRIB3DVARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib3dvARB\")) == NULL) || r;\n  r = ((glVertexAttrib3fARB = (PFNGLVERTEXATTRIB3FARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib3fARB\")) == NULL) || r;\n  r = ((glVertexAttrib3fvARB = (PFNGLVERTEXATTRIB3FVARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib3fvARB\")) == NULL) || r;\n  r = ((glVertexAttrib3sARB = (PFNGLVERTEXATTRIB3SARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib3sARB\")) == NULL) || r;\n  r = ((glVertexAttrib3svARB = (PFNGLVERTEXATTRIB3SVARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib3svARB\")) == NULL) || r;\n  r = ((glVertexAttrib4NbvARB = (PFNGLVERTEXATTRIB4NBVARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4NbvARB\")) == NULL) || r;\n  r = ((glVertexAttrib4NivARB = (PFNGLVERTEXATTRIB4NIVARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4NivARB\")) == NULL) || r;\n  r = ((glVertexAttrib4NsvARB = (PFNGLVERTEXATTRIB4NSVARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4NsvARB\")) == NULL) || r;\n  r = ((glVertexAttrib4NubARB = (PFNGLVERTEXATTRIB4NUBARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4NubARB\")) == NULL) || r;\n  r = ((glVertexAttrib4NubvARB = (PFNGLVERTEXATTRIB4NUBVARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4NubvARB\")) == NULL) || r;\n  r = ((glVertexAttrib4NuivARB = (PFNGLVERTEXATTRIB4NUIVARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4NuivARB\")) == NULL) || r;\n  r = ((glVertexAttrib4NusvARB = (PFNGLVERTEXATTRIB4NUSVARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4NusvARB\")) == NULL) || r;\n  r = ((glVertexAttrib4bvARB = (PFNGLVERTEXATTRIB4BVARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4bvARB\")) == NULL) || r;\n  r = ((glVertexAttrib4dARB = (PFNGLVERTEXATTRIB4DARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4dARB\")) == NULL) || r;\n  r = ((glVertexAttrib4dvARB = (PFNGLVERTEXATTRIB4DVARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4dvARB\")) == NULL) || r;\n  r = ((glVertexAttrib4fARB = (PFNGLVERTEXATTRIB4FARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4fARB\")) == NULL) || r;\n  r = ((glVertexAttrib4fvARB = (PFNGLVERTEXATTRIB4FVARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4fvARB\")) == NULL) || r;\n  r = ((glVertexAttrib4ivARB = (PFNGLVERTEXATTRIB4IVARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4ivARB\")) == NULL) || r;\n  r = ((glVertexAttrib4sARB = (PFNGLVERTEXATTRIB4SARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4sARB\")) == NULL) || r;\n  r = ((glVertexAttrib4svARB = (PFNGLVERTEXATTRIB4SVARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4svARB\")) == NULL) || r;\n  r = ((glVertexAttrib4ubvARB = (PFNGLVERTEXATTRIB4UBVARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4ubvARB\")) == NULL) || r;\n  r = ((glVertexAttrib4uivARB = (PFNGLVERTEXATTRIB4UIVARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4uivARB\")) == NULL) || r;\n  r = ((glVertexAttrib4usvARB = (PFNGLVERTEXATTRIB4USVARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4usvARB\")) == NULL) || r;\n  r = ((glVertexAttribPointerARB = (PFNGLVERTEXATTRIBPOINTERARBPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribPointerARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_vertex_program */\n\n#ifdef GL_ARB_vertex_shader\n\nstatic GLboolean _glewInit_GL_ARB_vertex_shader ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBindAttribLocationARB = (PFNGLBINDATTRIBLOCATIONARBPROC)glewGetProcAddress((const GLubyte*)\"glBindAttribLocationARB\")) == NULL) || r;\n  r = ((glGetActiveAttribARB = (PFNGLGETACTIVEATTRIBARBPROC)glewGetProcAddress((const GLubyte*)\"glGetActiveAttribARB\")) == NULL) || r;\n  r = ((glGetAttribLocationARB = (PFNGLGETATTRIBLOCATIONARBPROC)glewGetProcAddress((const GLubyte*)\"glGetAttribLocationARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_vertex_shader */\n\n#ifdef GL_ARB_vertex_type_2_10_10_10_rev\n\nstatic GLboolean _glewInit_GL_ARB_vertex_type_2_10_10_10_rev ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glColorP3ui = (PFNGLCOLORP3UIPROC)glewGetProcAddress((const GLubyte*)\"glColorP3ui\")) == NULL) || r;\n  r = ((glColorP3uiv = (PFNGLCOLORP3UIVPROC)glewGetProcAddress((const GLubyte*)\"glColorP3uiv\")) == NULL) || r;\n  r = ((glColorP4ui = (PFNGLCOLORP4UIPROC)glewGetProcAddress((const GLubyte*)\"glColorP4ui\")) == NULL) || r;\n  r = ((glColorP4uiv = (PFNGLCOLORP4UIVPROC)glewGetProcAddress((const GLubyte*)\"glColorP4uiv\")) == NULL) || r;\n  r = ((glMultiTexCoordP1ui = (PFNGLMULTITEXCOORDP1UIPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoordP1ui\")) == NULL) || r;\n  r = ((glMultiTexCoordP1uiv = (PFNGLMULTITEXCOORDP1UIVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoordP1uiv\")) == NULL) || r;\n  r = ((glMultiTexCoordP2ui = (PFNGLMULTITEXCOORDP2UIPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoordP2ui\")) == NULL) || r;\n  r = ((glMultiTexCoordP2uiv = (PFNGLMULTITEXCOORDP2UIVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoordP2uiv\")) == NULL) || r;\n  r = ((glMultiTexCoordP3ui = (PFNGLMULTITEXCOORDP3UIPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoordP3ui\")) == NULL) || r;\n  r = ((glMultiTexCoordP3uiv = (PFNGLMULTITEXCOORDP3UIVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoordP3uiv\")) == NULL) || r;\n  r = ((glMultiTexCoordP4ui = (PFNGLMULTITEXCOORDP4UIPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoordP4ui\")) == NULL) || r;\n  r = ((glMultiTexCoordP4uiv = (PFNGLMULTITEXCOORDP4UIVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoordP4uiv\")) == NULL) || r;\n  r = ((glNormalP3ui = (PFNGLNORMALP3UIPROC)glewGetProcAddress((const GLubyte*)\"glNormalP3ui\")) == NULL) || r;\n  r = ((glNormalP3uiv = (PFNGLNORMALP3UIVPROC)glewGetProcAddress((const GLubyte*)\"glNormalP3uiv\")) == NULL) || r;\n  r = ((glSecondaryColorP3ui = (PFNGLSECONDARYCOLORP3UIPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColorP3ui\")) == NULL) || r;\n  r = ((glSecondaryColorP3uiv = (PFNGLSECONDARYCOLORP3UIVPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColorP3uiv\")) == NULL) || r;\n  r = ((glTexCoordP1ui = (PFNGLTEXCOORDP1UIPROC)glewGetProcAddress((const GLubyte*)\"glTexCoordP1ui\")) == NULL) || r;\n  r = ((glTexCoordP1uiv = (PFNGLTEXCOORDP1UIVPROC)glewGetProcAddress((const GLubyte*)\"glTexCoordP1uiv\")) == NULL) || r;\n  r = ((glTexCoordP2ui = (PFNGLTEXCOORDP2UIPROC)glewGetProcAddress((const GLubyte*)\"glTexCoordP2ui\")) == NULL) || r;\n  r = ((glTexCoordP2uiv = (PFNGLTEXCOORDP2UIVPROC)glewGetProcAddress((const GLubyte*)\"glTexCoordP2uiv\")) == NULL) || r;\n  r = ((glTexCoordP3ui = (PFNGLTEXCOORDP3UIPROC)glewGetProcAddress((const GLubyte*)\"glTexCoordP3ui\")) == NULL) || r;\n  r = ((glTexCoordP3uiv = (PFNGLTEXCOORDP3UIVPROC)glewGetProcAddress((const GLubyte*)\"glTexCoordP3uiv\")) == NULL) || r;\n  r = ((glTexCoordP4ui = (PFNGLTEXCOORDP4UIPROC)glewGetProcAddress((const GLubyte*)\"glTexCoordP4ui\")) == NULL) || r;\n  r = ((glTexCoordP4uiv = (PFNGLTEXCOORDP4UIVPROC)glewGetProcAddress((const GLubyte*)\"glTexCoordP4uiv\")) == NULL) || r;\n  r = ((glVertexAttribP1ui = (PFNGLVERTEXATTRIBP1UIPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribP1ui\")) == NULL) || r;\n  r = ((glVertexAttribP1uiv = (PFNGLVERTEXATTRIBP1UIVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribP1uiv\")) == NULL) || r;\n  r = ((glVertexAttribP2ui = (PFNGLVERTEXATTRIBP2UIPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribP2ui\")) == NULL) || r;\n  r = ((glVertexAttribP2uiv = (PFNGLVERTEXATTRIBP2UIVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribP2uiv\")) == NULL) || r;\n  r = ((glVertexAttribP3ui = (PFNGLVERTEXATTRIBP3UIPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribP3ui\")) == NULL) || r;\n  r = ((glVertexAttribP3uiv = (PFNGLVERTEXATTRIBP3UIVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribP3uiv\")) == NULL) || r;\n  r = ((glVertexAttribP4ui = (PFNGLVERTEXATTRIBP4UIPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribP4ui\")) == NULL) || r;\n  r = ((glVertexAttribP4uiv = (PFNGLVERTEXATTRIBP4UIVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribP4uiv\")) == NULL) || r;\n  r = ((glVertexP2ui = (PFNGLVERTEXP2UIPROC)glewGetProcAddress((const GLubyte*)\"glVertexP2ui\")) == NULL) || r;\n  r = ((glVertexP2uiv = (PFNGLVERTEXP2UIVPROC)glewGetProcAddress((const GLubyte*)\"glVertexP2uiv\")) == NULL) || r;\n  r = ((glVertexP3ui = (PFNGLVERTEXP3UIPROC)glewGetProcAddress((const GLubyte*)\"glVertexP3ui\")) == NULL) || r;\n  r = ((glVertexP3uiv = (PFNGLVERTEXP3UIVPROC)glewGetProcAddress((const GLubyte*)\"glVertexP3uiv\")) == NULL) || r;\n  r = ((glVertexP4ui = (PFNGLVERTEXP4UIPROC)glewGetProcAddress((const GLubyte*)\"glVertexP4ui\")) == NULL) || r;\n  r = ((glVertexP4uiv = (PFNGLVERTEXP4UIVPROC)glewGetProcAddress((const GLubyte*)\"glVertexP4uiv\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_vertex_type_2_10_10_10_rev */\n\n#ifdef GL_ARB_viewport_array\n\nstatic GLboolean _glewInit_GL_ARB_viewport_array ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDepthRangeArrayv = (PFNGLDEPTHRANGEARRAYVPROC)glewGetProcAddress((const GLubyte*)\"glDepthRangeArrayv\")) == NULL) || r;\n  r = ((glDepthRangeIndexed = (PFNGLDEPTHRANGEINDEXEDPROC)glewGetProcAddress((const GLubyte*)\"glDepthRangeIndexed\")) == NULL) || r;\n  r = ((glGetDoublei_v = (PFNGLGETDOUBLEI_VPROC)glewGetProcAddress((const GLubyte*)\"glGetDoublei_v\")) == NULL) || r;\n  r = ((glGetFloati_v = (PFNGLGETFLOATI_VPROC)glewGetProcAddress((const GLubyte*)\"glGetFloati_v\")) == NULL) || r;\n  r = ((glScissorArrayv = (PFNGLSCISSORARRAYVPROC)glewGetProcAddress((const GLubyte*)\"glScissorArrayv\")) == NULL) || r;\n  r = ((glScissorIndexed = (PFNGLSCISSORINDEXEDPROC)glewGetProcAddress((const GLubyte*)\"glScissorIndexed\")) == NULL) || r;\n  r = ((glScissorIndexedv = (PFNGLSCISSORINDEXEDVPROC)glewGetProcAddress((const GLubyte*)\"glScissorIndexedv\")) == NULL) || r;\n  r = ((glViewportArrayv = (PFNGLVIEWPORTARRAYVPROC)glewGetProcAddress((const GLubyte*)\"glViewportArrayv\")) == NULL) || r;\n  r = ((glViewportIndexedf = (PFNGLVIEWPORTINDEXEDFPROC)glewGetProcAddress((const GLubyte*)\"glViewportIndexedf\")) == NULL) || r;\n  r = ((glViewportIndexedfv = (PFNGLVIEWPORTINDEXEDFVPROC)glewGetProcAddress((const GLubyte*)\"glViewportIndexedfv\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_viewport_array */\n\n#ifdef GL_ARB_window_pos\n\nstatic GLboolean _glewInit_GL_ARB_window_pos ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glWindowPos2dARB = (PFNGLWINDOWPOS2DARBPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos2dARB\")) == NULL) || r;\n  r = ((glWindowPos2dvARB = (PFNGLWINDOWPOS2DVARBPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos2dvARB\")) == NULL) || r;\n  r = ((glWindowPos2fARB = (PFNGLWINDOWPOS2FARBPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos2fARB\")) == NULL) || r;\n  r = ((glWindowPos2fvARB = (PFNGLWINDOWPOS2FVARBPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos2fvARB\")) == NULL) || r;\n  r = ((glWindowPos2iARB = (PFNGLWINDOWPOS2IARBPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos2iARB\")) == NULL) || r;\n  r = ((glWindowPos2ivARB = (PFNGLWINDOWPOS2IVARBPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos2ivARB\")) == NULL) || r;\n  r = ((glWindowPos2sARB = (PFNGLWINDOWPOS2SARBPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos2sARB\")) == NULL) || r;\n  r = ((glWindowPos2svARB = (PFNGLWINDOWPOS2SVARBPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos2svARB\")) == NULL) || r;\n  r = ((glWindowPos3dARB = (PFNGLWINDOWPOS3DARBPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos3dARB\")) == NULL) || r;\n  r = ((glWindowPos3dvARB = (PFNGLWINDOWPOS3DVARBPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos3dvARB\")) == NULL) || r;\n  r = ((glWindowPos3fARB = (PFNGLWINDOWPOS3FARBPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos3fARB\")) == NULL) || r;\n  r = ((glWindowPos3fvARB = (PFNGLWINDOWPOS3FVARBPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos3fvARB\")) == NULL) || r;\n  r = ((glWindowPos3iARB = (PFNGLWINDOWPOS3IARBPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos3iARB\")) == NULL) || r;\n  r = ((glWindowPos3ivARB = (PFNGLWINDOWPOS3IVARBPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos3ivARB\")) == NULL) || r;\n  r = ((glWindowPos3sARB = (PFNGLWINDOWPOS3SARBPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos3sARB\")) == NULL) || r;\n  r = ((glWindowPos3svARB = (PFNGLWINDOWPOS3SVARBPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos3svARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ARB_window_pos */\n\n#ifdef GL_ATI_draw_buffers\n\nstatic GLboolean _glewInit_GL_ATI_draw_buffers ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDrawBuffersATI = (PFNGLDRAWBUFFERSATIPROC)glewGetProcAddress((const GLubyte*)\"glDrawBuffersATI\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ATI_draw_buffers */\n\n#ifdef GL_ATI_element_array\n\nstatic GLboolean _glewInit_GL_ATI_element_array ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDrawElementArrayATI = (PFNGLDRAWELEMENTARRAYATIPROC)glewGetProcAddress((const GLubyte*)\"glDrawElementArrayATI\")) == NULL) || r;\n  r = ((glDrawRangeElementArrayATI = (PFNGLDRAWRANGEELEMENTARRAYATIPROC)glewGetProcAddress((const GLubyte*)\"glDrawRangeElementArrayATI\")) == NULL) || r;\n  r = ((glElementPointerATI = (PFNGLELEMENTPOINTERATIPROC)glewGetProcAddress((const GLubyte*)\"glElementPointerATI\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ATI_element_array */\n\n#ifdef GL_ATI_envmap_bumpmap\n\nstatic GLboolean _glewInit_GL_ATI_envmap_bumpmap ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetTexBumpParameterfvATI = (PFNGLGETTEXBUMPPARAMETERFVATIPROC)glewGetProcAddress((const GLubyte*)\"glGetTexBumpParameterfvATI\")) == NULL) || r;\n  r = ((glGetTexBumpParameterivATI = (PFNGLGETTEXBUMPPARAMETERIVATIPROC)glewGetProcAddress((const GLubyte*)\"glGetTexBumpParameterivATI\")) == NULL) || r;\n  r = ((glTexBumpParameterfvATI = (PFNGLTEXBUMPPARAMETERFVATIPROC)glewGetProcAddress((const GLubyte*)\"glTexBumpParameterfvATI\")) == NULL) || r;\n  r = ((glTexBumpParameterivATI = (PFNGLTEXBUMPPARAMETERIVATIPROC)glewGetProcAddress((const GLubyte*)\"glTexBumpParameterivATI\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ATI_envmap_bumpmap */\n\n#ifdef GL_ATI_fragment_shader\n\nstatic GLboolean _glewInit_GL_ATI_fragment_shader ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glAlphaFragmentOp1ATI = (PFNGLALPHAFRAGMENTOP1ATIPROC)glewGetProcAddress((const GLubyte*)\"glAlphaFragmentOp1ATI\")) == NULL) || r;\n  r = ((glAlphaFragmentOp2ATI = (PFNGLALPHAFRAGMENTOP2ATIPROC)glewGetProcAddress((const GLubyte*)\"glAlphaFragmentOp2ATI\")) == NULL) || r;\n  r = ((glAlphaFragmentOp3ATI = (PFNGLALPHAFRAGMENTOP3ATIPROC)glewGetProcAddress((const GLubyte*)\"glAlphaFragmentOp3ATI\")) == NULL) || r;\n  r = ((glBeginFragmentShaderATI = (PFNGLBEGINFRAGMENTSHADERATIPROC)glewGetProcAddress((const GLubyte*)\"glBeginFragmentShaderATI\")) == NULL) || r;\n  r = ((glBindFragmentShaderATI = (PFNGLBINDFRAGMENTSHADERATIPROC)glewGetProcAddress((const GLubyte*)\"glBindFragmentShaderATI\")) == NULL) || r;\n  r = ((glColorFragmentOp1ATI = (PFNGLCOLORFRAGMENTOP1ATIPROC)glewGetProcAddress((const GLubyte*)\"glColorFragmentOp1ATI\")) == NULL) || r;\n  r = ((glColorFragmentOp2ATI = (PFNGLCOLORFRAGMENTOP2ATIPROC)glewGetProcAddress((const GLubyte*)\"glColorFragmentOp2ATI\")) == NULL) || r;\n  r = ((glColorFragmentOp3ATI = (PFNGLCOLORFRAGMENTOP3ATIPROC)glewGetProcAddress((const GLubyte*)\"glColorFragmentOp3ATI\")) == NULL) || r;\n  r = ((glDeleteFragmentShaderATI = (PFNGLDELETEFRAGMENTSHADERATIPROC)glewGetProcAddress((const GLubyte*)\"glDeleteFragmentShaderATI\")) == NULL) || r;\n  r = ((glEndFragmentShaderATI = (PFNGLENDFRAGMENTSHADERATIPROC)glewGetProcAddress((const GLubyte*)\"glEndFragmentShaderATI\")) == NULL) || r;\n  r = ((glGenFragmentShadersATI = (PFNGLGENFRAGMENTSHADERSATIPROC)glewGetProcAddress((const GLubyte*)\"glGenFragmentShadersATI\")) == NULL) || r;\n  r = ((glPassTexCoordATI = (PFNGLPASSTEXCOORDATIPROC)glewGetProcAddress((const GLubyte*)\"glPassTexCoordATI\")) == NULL) || r;\n  r = ((glSampleMapATI = (PFNGLSAMPLEMAPATIPROC)glewGetProcAddress((const GLubyte*)\"glSampleMapATI\")) == NULL) || r;\n  r = ((glSetFragmentShaderConstantATI = (PFNGLSETFRAGMENTSHADERCONSTANTATIPROC)glewGetProcAddress((const GLubyte*)\"glSetFragmentShaderConstantATI\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ATI_fragment_shader */\n\n#ifdef GL_ATI_map_object_buffer\n\nstatic GLboolean _glewInit_GL_ATI_map_object_buffer ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glMapObjectBufferATI = (PFNGLMAPOBJECTBUFFERATIPROC)glewGetProcAddress((const GLubyte*)\"glMapObjectBufferATI\")) == NULL) || r;\n  r = ((glUnmapObjectBufferATI = (PFNGLUNMAPOBJECTBUFFERATIPROC)glewGetProcAddress((const GLubyte*)\"glUnmapObjectBufferATI\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ATI_map_object_buffer */\n\n#ifdef GL_ATI_pn_triangles\n\nstatic GLboolean _glewInit_GL_ATI_pn_triangles ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glPNTrianglesfATI = (PFNGLPNTRIANGLESFATIPROC)glewGetProcAddress((const GLubyte*)\"glPNTrianglesfATI\")) == NULL) || r;\n  r = ((glPNTrianglesiATI = (PFNGLPNTRIANGLESIATIPROC)glewGetProcAddress((const GLubyte*)\"glPNTrianglesiATI\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ATI_pn_triangles */\n\n#ifdef GL_ATI_separate_stencil\n\nstatic GLboolean _glewInit_GL_ATI_separate_stencil ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glStencilFuncSeparateATI = (PFNGLSTENCILFUNCSEPARATEATIPROC)glewGetProcAddress((const GLubyte*)\"glStencilFuncSeparateATI\")) == NULL) || r;\n  r = ((glStencilOpSeparateATI = (PFNGLSTENCILOPSEPARATEATIPROC)glewGetProcAddress((const GLubyte*)\"glStencilOpSeparateATI\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ATI_separate_stencil */\n\n#ifdef GL_ATI_vertex_array_object\n\nstatic GLboolean _glewInit_GL_ATI_vertex_array_object ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glArrayObjectATI = (PFNGLARRAYOBJECTATIPROC)glewGetProcAddress((const GLubyte*)\"glArrayObjectATI\")) == NULL) || r;\n  r = ((glFreeObjectBufferATI = (PFNGLFREEOBJECTBUFFERATIPROC)glewGetProcAddress((const GLubyte*)\"glFreeObjectBufferATI\")) == NULL) || r;\n  r = ((glGetArrayObjectfvATI = (PFNGLGETARRAYOBJECTFVATIPROC)glewGetProcAddress((const GLubyte*)\"glGetArrayObjectfvATI\")) == NULL) || r;\n  r = ((glGetArrayObjectivATI = (PFNGLGETARRAYOBJECTIVATIPROC)glewGetProcAddress((const GLubyte*)\"glGetArrayObjectivATI\")) == NULL) || r;\n  r = ((glGetObjectBufferfvATI = (PFNGLGETOBJECTBUFFERFVATIPROC)glewGetProcAddress((const GLubyte*)\"glGetObjectBufferfvATI\")) == NULL) || r;\n  r = ((glGetObjectBufferivATI = (PFNGLGETOBJECTBUFFERIVATIPROC)glewGetProcAddress((const GLubyte*)\"glGetObjectBufferivATI\")) == NULL) || r;\n  r = ((glGetVariantArrayObjectfvATI = (PFNGLGETVARIANTARRAYOBJECTFVATIPROC)glewGetProcAddress((const GLubyte*)\"glGetVariantArrayObjectfvATI\")) == NULL) || r;\n  r = ((glGetVariantArrayObjectivATI = (PFNGLGETVARIANTARRAYOBJECTIVATIPROC)glewGetProcAddress((const GLubyte*)\"glGetVariantArrayObjectivATI\")) == NULL) || r;\n  r = ((glIsObjectBufferATI = (PFNGLISOBJECTBUFFERATIPROC)glewGetProcAddress((const GLubyte*)\"glIsObjectBufferATI\")) == NULL) || r;\n  r = ((glNewObjectBufferATI = (PFNGLNEWOBJECTBUFFERATIPROC)glewGetProcAddress((const GLubyte*)\"glNewObjectBufferATI\")) == NULL) || r;\n  r = ((glUpdateObjectBufferATI = (PFNGLUPDATEOBJECTBUFFERATIPROC)glewGetProcAddress((const GLubyte*)\"glUpdateObjectBufferATI\")) == NULL) || r;\n  r = ((glVariantArrayObjectATI = (PFNGLVARIANTARRAYOBJECTATIPROC)glewGetProcAddress((const GLubyte*)\"glVariantArrayObjectATI\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ATI_vertex_array_object */\n\n#ifdef GL_ATI_vertex_attrib_array_object\n\nstatic GLboolean _glewInit_GL_ATI_vertex_attrib_array_object ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetVertexAttribArrayObjectfvATI = (PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexAttribArrayObjectfvATI\")) == NULL) || r;\n  r = ((glGetVertexAttribArrayObjectivATI = (PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexAttribArrayObjectivATI\")) == NULL) || r;\n  r = ((glVertexAttribArrayObjectATI = (PFNGLVERTEXATTRIBARRAYOBJECTATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribArrayObjectATI\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ATI_vertex_attrib_array_object */\n\n#ifdef GL_ATI_vertex_streams\n\nstatic GLboolean _glewInit_GL_ATI_vertex_streams ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glClientActiveVertexStreamATI = (PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC)glewGetProcAddress((const GLubyte*)\"glClientActiveVertexStreamATI\")) == NULL) || r;\n  r = ((glNormalStream3bATI = (PFNGLNORMALSTREAM3BATIPROC)glewGetProcAddress((const GLubyte*)\"glNormalStream3bATI\")) == NULL) || r;\n  r = ((glNormalStream3bvATI = (PFNGLNORMALSTREAM3BVATIPROC)glewGetProcAddress((const GLubyte*)\"glNormalStream3bvATI\")) == NULL) || r;\n  r = ((glNormalStream3dATI = (PFNGLNORMALSTREAM3DATIPROC)glewGetProcAddress((const GLubyte*)\"glNormalStream3dATI\")) == NULL) || r;\n  r = ((glNormalStream3dvATI = (PFNGLNORMALSTREAM3DVATIPROC)glewGetProcAddress((const GLubyte*)\"glNormalStream3dvATI\")) == NULL) || r;\n  r = ((glNormalStream3fATI = (PFNGLNORMALSTREAM3FATIPROC)glewGetProcAddress((const GLubyte*)\"glNormalStream3fATI\")) == NULL) || r;\n  r = ((glNormalStream3fvATI = (PFNGLNORMALSTREAM3FVATIPROC)glewGetProcAddress((const GLubyte*)\"glNormalStream3fvATI\")) == NULL) || r;\n  r = ((glNormalStream3iATI = (PFNGLNORMALSTREAM3IATIPROC)glewGetProcAddress((const GLubyte*)\"glNormalStream3iATI\")) == NULL) || r;\n  r = ((glNormalStream3ivATI = (PFNGLNORMALSTREAM3IVATIPROC)glewGetProcAddress((const GLubyte*)\"glNormalStream3ivATI\")) == NULL) || r;\n  r = ((glNormalStream3sATI = (PFNGLNORMALSTREAM3SATIPROC)glewGetProcAddress((const GLubyte*)\"glNormalStream3sATI\")) == NULL) || r;\n  r = ((glNormalStream3svATI = (PFNGLNORMALSTREAM3SVATIPROC)glewGetProcAddress((const GLubyte*)\"glNormalStream3svATI\")) == NULL) || r;\n  r = ((glVertexBlendEnvfATI = (PFNGLVERTEXBLENDENVFATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexBlendEnvfATI\")) == NULL) || r;\n  r = ((glVertexBlendEnviATI = (PFNGLVERTEXBLENDENVIATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexBlendEnviATI\")) == NULL) || r;\n  r = ((glVertexStream1dATI = (PFNGLVERTEXSTREAM1DATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream1dATI\")) == NULL) || r;\n  r = ((glVertexStream1dvATI = (PFNGLVERTEXSTREAM1DVATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream1dvATI\")) == NULL) || r;\n  r = ((glVertexStream1fATI = (PFNGLVERTEXSTREAM1FATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream1fATI\")) == NULL) || r;\n  r = ((glVertexStream1fvATI = (PFNGLVERTEXSTREAM1FVATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream1fvATI\")) == NULL) || r;\n  r = ((glVertexStream1iATI = (PFNGLVERTEXSTREAM1IATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream1iATI\")) == NULL) || r;\n  r = ((glVertexStream1ivATI = (PFNGLVERTEXSTREAM1IVATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream1ivATI\")) == NULL) || r;\n  r = ((glVertexStream1sATI = (PFNGLVERTEXSTREAM1SATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream1sATI\")) == NULL) || r;\n  r = ((glVertexStream1svATI = (PFNGLVERTEXSTREAM1SVATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream1svATI\")) == NULL) || r;\n  r = ((glVertexStream2dATI = (PFNGLVERTEXSTREAM2DATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream2dATI\")) == NULL) || r;\n  r = ((glVertexStream2dvATI = (PFNGLVERTEXSTREAM2DVATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream2dvATI\")) == NULL) || r;\n  r = ((glVertexStream2fATI = (PFNGLVERTEXSTREAM2FATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream2fATI\")) == NULL) || r;\n  r = ((glVertexStream2fvATI = (PFNGLVERTEXSTREAM2FVATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream2fvATI\")) == NULL) || r;\n  r = ((glVertexStream2iATI = (PFNGLVERTEXSTREAM2IATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream2iATI\")) == NULL) || r;\n  r = ((glVertexStream2ivATI = (PFNGLVERTEXSTREAM2IVATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream2ivATI\")) == NULL) || r;\n  r = ((glVertexStream2sATI = (PFNGLVERTEXSTREAM2SATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream2sATI\")) == NULL) || r;\n  r = ((glVertexStream2svATI = (PFNGLVERTEXSTREAM2SVATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream2svATI\")) == NULL) || r;\n  r = ((glVertexStream3dATI = (PFNGLVERTEXSTREAM3DATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream3dATI\")) == NULL) || r;\n  r = ((glVertexStream3dvATI = (PFNGLVERTEXSTREAM3DVATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream3dvATI\")) == NULL) || r;\n  r = ((glVertexStream3fATI = (PFNGLVERTEXSTREAM3FATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream3fATI\")) == NULL) || r;\n  r = ((glVertexStream3fvATI = (PFNGLVERTEXSTREAM3FVATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream3fvATI\")) == NULL) || r;\n  r = ((glVertexStream3iATI = (PFNGLVERTEXSTREAM3IATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream3iATI\")) == NULL) || r;\n  r = ((glVertexStream3ivATI = (PFNGLVERTEXSTREAM3IVATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream3ivATI\")) == NULL) || r;\n  r = ((glVertexStream3sATI = (PFNGLVERTEXSTREAM3SATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream3sATI\")) == NULL) || r;\n  r = ((glVertexStream3svATI = (PFNGLVERTEXSTREAM3SVATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream3svATI\")) == NULL) || r;\n  r = ((glVertexStream4dATI = (PFNGLVERTEXSTREAM4DATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream4dATI\")) == NULL) || r;\n  r = ((glVertexStream4dvATI = (PFNGLVERTEXSTREAM4DVATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream4dvATI\")) == NULL) || r;\n  r = ((glVertexStream4fATI = (PFNGLVERTEXSTREAM4FATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream4fATI\")) == NULL) || r;\n  r = ((glVertexStream4fvATI = (PFNGLVERTEXSTREAM4FVATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream4fvATI\")) == NULL) || r;\n  r = ((glVertexStream4iATI = (PFNGLVERTEXSTREAM4IATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream4iATI\")) == NULL) || r;\n  r = ((glVertexStream4ivATI = (PFNGLVERTEXSTREAM4IVATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream4ivATI\")) == NULL) || r;\n  r = ((glVertexStream4sATI = (PFNGLVERTEXSTREAM4SATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream4sATI\")) == NULL) || r;\n  r = ((glVertexStream4svATI = (PFNGLVERTEXSTREAM4SVATIPROC)glewGetProcAddress((const GLubyte*)\"glVertexStream4svATI\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_ATI_vertex_streams */\n\n#ifdef GL_EXT_bindable_uniform\n\nstatic GLboolean _glewInit_GL_EXT_bindable_uniform ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetUniformBufferSizeEXT = (PFNGLGETUNIFORMBUFFERSIZEEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetUniformBufferSizeEXT\")) == NULL) || r;\n  r = ((glGetUniformOffsetEXT = (PFNGLGETUNIFORMOFFSETEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetUniformOffsetEXT\")) == NULL) || r;\n  r = ((glUniformBufferEXT = (PFNGLUNIFORMBUFFEREXTPROC)glewGetProcAddress((const GLubyte*)\"glUniformBufferEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_bindable_uniform */\n\n#ifdef GL_EXT_blend_color\n\nstatic GLboolean _glewInit_GL_EXT_blend_color ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBlendColorEXT = (PFNGLBLENDCOLOREXTPROC)glewGetProcAddress((const GLubyte*)\"glBlendColorEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_blend_color */\n\n#ifdef GL_EXT_blend_equation_separate\n\nstatic GLboolean _glewInit_GL_EXT_blend_equation_separate ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBlendEquationSeparateEXT = (PFNGLBLENDEQUATIONSEPARATEEXTPROC)glewGetProcAddress((const GLubyte*)\"glBlendEquationSeparateEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_blend_equation_separate */\n\n#ifdef GL_EXT_blend_func_separate\n\nstatic GLboolean _glewInit_GL_EXT_blend_func_separate ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBlendFuncSeparateEXT = (PFNGLBLENDFUNCSEPARATEEXTPROC)glewGetProcAddress((const GLubyte*)\"glBlendFuncSeparateEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_blend_func_separate */\n\n#ifdef GL_EXT_blend_minmax\n\nstatic GLboolean _glewInit_GL_EXT_blend_minmax ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBlendEquationEXT = (PFNGLBLENDEQUATIONEXTPROC)glewGetProcAddress((const GLubyte*)\"glBlendEquationEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_blend_minmax */\n\n#ifdef GL_EXT_color_subtable\n\nstatic GLboolean _glewInit_GL_EXT_color_subtable ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glColorSubTableEXT = (PFNGLCOLORSUBTABLEEXTPROC)glewGetProcAddress((const GLubyte*)\"glColorSubTableEXT\")) == NULL) || r;\n  r = ((glCopyColorSubTableEXT = (PFNGLCOPYCOLORSUBTABLEEXTPROC)glewGetProcAddress((const GLubyte*)\"glCopyColorSubTableEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_color_subtable */\n\n#ifdef GL_EXT_compiled_vertex_array\n\nstatic GLboolean _glewInit_GL_EXT_compiled_vertex_array ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glLockArraysEXT = (PFNGLLOCKARRAYSEXTPROC)glewGetProcAddress((const GLubyte*)\"glLockArraysEXT\")) == NULL) || r;\n  r = ((glUnlockArraysEXT = (PFNGLUNLOCKARRAYSEXTPROC)glewGetProcAddress((const GLubyte*)\"glUnlockArraysEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_compiled_vertex_array */\n\n#ifdef GL_EXT_convolution\n\nstatic GLboolean _glewInit_GL_EXT_convolution ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glConvolutionFilter1DEXT = (PFNGLCONVOLUTIONFILTER1DEXTPROC)glewGetProcAddress((const GLubyte*)\"glConvolutionFilter1DEXT\")) == NULL) || r;\n  r = ((glConvolutionFilter2DEXT = (PFNGLCONVOLUTIONFILTER2DEXTPROC)glewGetProcAddress((const GLubyte*)\"glConvolutionFilter2DEXT\")) == NULL) || r;\n  r = ((glConvolutionParameterfEXT = (PFNGLCONVOLUTIONPARAMETERFEXTPROC)glewGetProcAddress((const GLubyte*)\"glConvolutionParameterfEXT\")) == NULL) || r;\n  r = ((glConvolutionParameterfvEXT = (PFNGLCONVOLUTIONPARAMETERFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glConvolutionParameterfvEXT\")) == NULL) || r;\n  r = ((glConvolutionParameteriEXT = (PFNGLCONVOLUTIONPARAMETERIEXTPROC)glewGetProcAddress((const GLubyte*)\"glConvolutionParameteriEXT\")) == NULL) || r;\n  r = ((glConvolutionParameterivEXT = (PFNGLCONVOLUTIONPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glConvolutionParameterivEXT\")) == NULL) || r;\n  r = ((glCopyConvolutionFilter1DEXT = (PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCopyConvolutionFilter1DEXT\")) == NULL) || r;\n  r = ((glCopyConvolutionFilter2DEXT = (PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCopyConvolutionFilter2DEXT\")) == NULL) || r;\n  r = ((glGetConvolutionFilterEXT = (PFNGLGETCONVOLUTIONFILTEREXTPROC)glewGetProcAddress((const GLubyte*)\"glGetConvolutionFilterEXT\")) == NULL) || r;\n  r = ((glGetConvolutionParameterfvEXT = (PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetConvolutionParameterfvEXT\")) == NULL) || r;\n  r = ((glGetConvolutionParameterivEXT = (PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetConvolutionParameterivEXT\")) == NULL) || r;\n  r = ((glGetSeparableFilterEXT = (PFNGLGETSEPARABLEFILTEREXTPROC)glewGetProcAddress((const GLubyte*)\"glGetSeparableFilterEXT\")) == NULL) || r;\n  r = ((glSeparableFilter2DEXT = (PFNGLSEPARABLEFILTER2DEXTPROC)glewGetProcAddress((const GLubyte*)\"glSeparableFilter2DEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_convolution */\n\n#ifdef GL_EXT_coordinate_frame\n\nstatic GLboolean _glewInit_GL_EXT_coordinate_frame ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBinormalPointerEXT = (PFNGLBINORMALPOINTEREXTPROC)glewGetProcAddress((const GLubyte*)\"glBinormalPointerEXT\")) == NULL) || r;\n  r = ((glTangentPointerEXT = (PFNGLTANGENTPOINTEREXTPROC)glewGetProcAddress((const GLubyte*)\"glTangentPointerEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_coordinate_frame */\n\n#ifdef GL_EXT_copy_texture\n\nstatic GLboolean _glewInit_GL_EXT_copy_texture ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glCopyTexImage1DEXT = (PFNGLCOPYTEXIMAGE1DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCopyTexImage1DEXT\")) == NULL) || r;\n  r = ((glCopyTexImage2DEXT = (PFNGLCOPYTEXIMAGE2DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCopyTexImage2DEXT\")) == NULL) || r;\n  r = ((glCopyTexSubImage1DEXT = (PFNGLCOPYTEXSUBIMAGE1DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCopyTexSubImage1DEXT\")) == NULL) || r;\n  r = ((glCopyTexSubImage2DEXT = (PFNGLCOPYTEXSUBIMAGE2DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCopyTexSubImage2DEXT\")) == NULL) || r;\n  r = ((glCopyTexSubImage3DEXT = (PFNGLCOPYTEXSUBIMAGE3DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCopyTexSubImage3DEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_copy_texture */\n\n#ifdef GL_EXT_cull_vertex\n\nstatic GLboolean _glewInit_GL_EXT_cull_vertex ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glCullParameterdvEXT = (PFNGLCULLPARAMETERDVEXTPROC)glewGetProcAddress((const GLubyte*)\"glCullParameterdvEXT\")) == NULL) || r;\n  r = ((glCullParameterfvEXT = (PFNGLCULLPARAMETERFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glCullParameterfvEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_cull_vertex */\n\n#ifdef GL_EXT_debug_label\n\nstatic GLboolean _glewInit_GL_EXT_debug_label ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetObjectLabelEXT = (PFNGLGETOBJECTLABELEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetObjectLabelEXT\")) == NULL) || r;\n  r = ((glLabelObjectEXT = (PFNGLLABELOBJECTEXTPROC)glewGetProcAddress((const GLubyte*)\"glLabelObjectEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_debug_label */\n\n#ifdef GL_EXT_debug_marker\n\nstatic GLboolean _glewInit_GL_EXT_debug_marker ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glInsertEventMarkerEXT = (PFNGLINSERTEVENTMARKEREXTPROC)glewGetProcAddress((const GLubyte*)\"glInsertEventMarkerEXT\")) == NULL) || r;\n  r = ((glPopGroupMarkerEXT = (PFNGLPOPGROUPMARKEREXTPROC)glewGetProcAddress((const GLubyte*)\"glPopGroupMarkerEXT\")) == NULL) || r;\n  r = ((glPushGroupMarkerEXT = (PFNGLPUSHGROUPMARKEREXTPROC)glewGetProcAddress((const GLubyte*)\"glPushGroupMarkerEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_debug_marker */\n\n#ifdef GL_EXT_depth_bounds_test\n\nstatic GLboolean _glewInit_GL_EXT_depth_bounds_test ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDepthBoundsEXT = (PFNGLDEPTHBOUNDSEXTPROC)glewGetProcAddress((const GLubyte*)\"glDepthBoundsEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_depth_bounds_test */\n\n#ifdef GL_EXT_direct_state_access\n\nstatic GLboolean _glewInit_GL_EXT_direct_state_access ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBindMultiTextureEXT = (PFNGLBINDMULTITEXTUREEXTPROC)glewGetProcAddress((const GLubyte*)\"glBindMultiTextureEXT\")) == NULL) || r;\n  r = ((glCheckNamedFramebufferStatusEXT = (PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC)glewGetProcAddress((const GLubyte*)\"glCheckNamedFramebufferStatusEXT\")) == NULL) || r;\n  r = ((glClientAttribDefaultEXT = (PFNGLCLIENTATTRIBDEFAULTEXTPROC)glewGetProcAddress((const GLubyte*)\"glClientAttribDefaultEXT\")) == NULL) || r;\n  r = ((glCompressedMultiTexImage1DEXT = (PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCompressedMultiTexImage1DEXT\")) == NULL) || r;\n  r = ((glCompressedMultiTexImage2DEXT = (PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCompressedMultiTexImage2DEXT\")) == NULL) || r;\n  r = ((glCompressedMultiTexImage3DEXT = (PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCompressedMultiTexImage3DEXT\")) == NULL) || r;\n  r = ((glCompressedMultiTexSubImage1DEXT = (PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCompressedMultiTexSubImage1DEXT\")) == NULL) || r;\n  r = ((glCompressedMultiTexSubImage2DEXT = (PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCompressedMultiTexSubImage2DEXT\")) == NULL) || r;\n  r = ((glCompressedMultiTexSubImage3DEXT = (PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCompressedMultiTexSubImage3DEXT\")) == NULL) || r;\n  r = ((glCompressedTextureImage1DEXT = (PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCompressedTextureImage1DEXT\")) == NULL) || r;\n  r = ((glCompressedTextureImage2DEXT = (PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCompressedTextureImage2DEXT\")) == NULL) || r;\n  r = ((glCompressedTextureImage3DEXT = (PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCompressedTextureImage3DEXT\")) == NULL) || r;\n  r = ((glCompressedTextureSubImage1DEXT = (PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCompressedTextureSubImage1DEXT\")) == NULL) || r;\n  r = ((glCompressedTextureSubImage2DEXT = (PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCompressedTextureSubImage2DEXT\")) == NULL) || r;\n  r = ((glCompressedTextureSubImage3DEXT = (PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCompressedTextureSubImage3DEXT\")) == NULL) || r;\n  r = ((glCopyMultiTexImage1DEXT = (PFNGLCOPYMULTITEXIMAGE1DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCopyMultiTexImage1DEXT\")) == NULL) || r;\n  r = ((glCopyMultiTexImage2DEXT = (PFNGLCOPYMULTITEXIMAGE2DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCopyMultiTexImage2DEXT\")) == NULL) || r;\n  r = ((glCopyMultiTexSubImage1DEXT = (PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCopyMultiTexSubImage1DEXT\")) == NULL) || r;\n  r = ((glCopyMultiTexSubImage2DEXT = (PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCopyMultiTexSubImage2DEXT\")) == NULL) || r;\n  r = ((glCopyMultiTexSubImage3DEXT = (PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCopyMultiTexSubImage3DEXT\")) == NULL) || r;\n  r = ((glCopyTextureImage1DEXT = (PFNGLCOPYTEXTUREIMAGE1DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCopyTextureImage1DEXT\")) == NULL) || r;\n  r = ((glCopyTextureImage2DEXT = (PFNGLCOPYTEXTUREIMAGE2DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCopyTextureImage2DEXT\")) == NULL) || r;\n  r = ((glCopyTextureSubImage1DEXT = (PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCopyTextureSubImage1DEXT\")) == NULL) || r;\n  r = ((glCopyTextureSubImage2DEXT = (PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCopyTextureSubImage2DEXT\")) == NULL) || r;\n  r = ((glCopyTextureSubImage3DEXT = (PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC)glewGetProcAddress((const GLubyte*)\"glCopyTextureSubImage3DEXT\")) == NULL) || r;\n  r = ((glDisableClientStateIndexedEXT = (PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC)glewGetProcAddress((const GLubyte*)\"glDisableClientStateIndexedEXT\")) == NULL) || r;\n  r = ((glDisableClientStateiEXT = (PFNGLDISABLECLIENTSTATEIEXTPROC)glewGetProcAddress((const GLubyte*)\"glDisableClientStateiEXT\")) == NULL) || r;\n  r = ((glDisableVertexArrayAttribEXT = (PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC)glewGetProcAddress((const GLubyte*)\"glDisableVertexArrayAttribEXT\")) == NULL) || r;\n  r = ((glDisableVertexArrayEXT = (PFNGLDISABLEVERTEXARRAYEXTPROC)glewGetProcAddress((const GLubyte*)\"glDisableVertexArrayEXT\")) == NULL) || r;\n  r = ((glEnableClientStateIndexedEXT = (PFNGLENABLECLIENTSTATEINDEXEDEXTPROC)glewGetProcAddress((const GLubyte*)\"glEnableClientStateIndexedEXT\")) == NULL) || r;\n  r = ((glEnableClientStateiEXT = (PFNGLENABLECLIENTSTATEIEXTPROC)glewGetProcAddress((const GLubyte*)\"glEnableClientStateiEXT\")) == NULL) || r;\n  r = ((glEnableVertexArrayAttribEXT = (PFNGLENABLEVERTEXARRAYATTRIBEXTPROC)glewGetProcAddress((const GLubyte*)\"glEnableVertexArrayAttribEXT\")) == NULL) || r;\n  r = ((glEnableVertexArrayEXT = (PFNGLENABLEVERTEXARRAYEXTPROC)glewGetProcAddress((const GLubyte*)\"glEnableVertexArrayEXT\")) == NULL) || r;\n  r = ((glFlushMappedNamedBufferRangeEXT = (PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC)glewGetProcAddress((const GLubyte*)\"glFlushMappedNamedBufferRangeEXT\")) == NULL) || r;\n  r = ((glFramebufferDrawBufferEXT = (PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC)glewGetProcAddress((const GLubyte*)\"glFramebufferDrawBufferEXT\")) == NULL) || r;\n  r = ((glFramebufferDrawBuffersEXT = (PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC)glewGetProcAddress((const GLubyte*)\"glFramebufferDrawBuffersEXT\")) == NULL) || r;\n  r = ((glFramebufferReadBufferEXT = (PFNGLFRAMEBUFFERREADBUFFEREXTPROC)glewGetProcAddress((const GLubyte*)\"glFramebufferReadBufferEXT\")) == NULL) || r;\n  r = ((glGenerateMultiTexMipmapEXT = (PFNGLGENERATEMULTITEXMIPMAPEXTPROC)glewGetProcAddress((const GLubyte*)\"glGenerateMultiTexMipmapEXT\")) == NULL) || r;\n  r = ((glGenerateTextureMipmapEXT = (PFNGLGENERATETEXTUREMIPMAPEXTPROC)glewGetProcAddress((const GLubyte*)\"glGenerateTextureMipmapEXT\")) == NULL) || r;\n  r = ((glGetCompressedMultiTexImageEXT = (PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetCompressedMultiTexImageEXT\")) == NULL) || r;\n  r = ((glGetCompressedTextureImageEXT = (PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetCompressedTextureImageEXT\")) == NULL) || r;\n  r = ((glGetDoubleIndexedvEXT = (PFNGLGETDOUBLEINDEXEDVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetDoubleIndexedvEXT\")) == NULL) || r;\n  r = ((glGetDoublei_vEXT = (PFNGLGETDOUBLEI_VEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetDoublei_vEXT\")) == NULL) || r;\n  r = ((glGetFloatIndexedvEXT = (PFNGLGETFLOATINDEXEDVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetFloatIndexedvEXT\")) == NULL) || r;\n  r = ((glGetFloati_vEXT = (PFNGLGETFLOATI_VEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetFloati_vEXT\")) == NULL) || r;\n  r = ((glGetFramebufferParameterivEXT = (PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetFramebufferParameterivEXT\")) == NULL) || r;\n  r = ((glGetMultiTexEnvfvEXT = (PFNGLGETMULTITEXENVFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMultiTexEnvfvEXT\")) == NULL) || r;\n  r = ((glGetMultiTexEnvivEXT = (PFNGLGETMULTITEXENVIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMultiTexEnvivEXT\")) == NULL) || r;\n  r = ((glGetMultiTexGendvEXT = (PFNGLGETMULTITEXGENDVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMultiTexGendvEXT\")) == NULL) || r;\n  r = ((glGetMultiTexGenfvEXT = (PFNGLGETMULTITEXGENFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMultiTexGenfvEXT\")) == NULL) || r;\n  r = ((glGetMultiTexGenivEXT = (PFNGLGETMULTITEXGENIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMultiTexGenivEXT\")) == NULL) || r;\n  r = ((glGetMultiTexImageEXT = (PFNGLGETMULTITEXIMAGEEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMultiTexImageEXT\")) == NULL) || r;\n  r = ((glGetMultiTexLevelParameterfvEXT = (PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMultiTexLevelParameterfvEXT\")) == NULL) || r;\n  r = ((glGetMultiTexLevelParameterivEXT = (PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMultiTexLevelParameterivEXT\")) == NULL) || r;\n  r = ((glGetMultiTexParameterIivEXT = (PFNGLGETMULTITEXPARAMETERIIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMultiTexParameterIivEXT\")) == NULL) || r;\n  r = ((glGetMultiTexParameterIuivEXT = (PFNGLGETMULTITEXPARAMETERIUIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMultiTexParameterIuivEXT\")) == NULL) || r;\n  r = ((glGetMultiTexParameterfvEXT = (PFNGLGETMULTITEXPARAMETERFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMultiTexParameterfvEXT\")) == NULL) || r;\n  r = ((glGetMultiTexParameterivEXT = (PFNGLGETMULTITEXPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMultiTexParameterivEXT\")) == NULL) || r;\n  r = ((glGetNamedBufferParameterivEXT = (PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetNamedBufferParameterivEXT\")) == NULL) || r;\n  r = ((glGetNamedBufferPointervEXT = (PFNGLGETNAMEDBUFFERPOINTERVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetNamedBufferPointervEXT\")) == NULL) || r;\n  r = ((glGetNamedBufferSubDataEXT = (PFNGLGETNAMEDBUFFERSUBDATAEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetNamedBufferSubDataEXT\")) == NULL) || r;\n  r = ((glGetNamedFramebufferAttachmentParameterivEXT = (PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetNamedFramebufferAttachmentParameterivEXT\")) == NULL) || r;\n  r = ((glGetNamedProgramLocalParameterIivEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetNamedProgramLocalParameterIivEXT\")) == NULL) || r;\n  r = ((glGetNamedProgramLocalParameterIuivEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetNamedProgramLocalParameterIuivEXT\")) == NULL) || r;\n  r = ((glGetNamedProgramLocalParameterdvEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetNamedProgramLocalParameterdvEXT\")) == NULL) || r;\n  r = ((glGetNamedProgramLocalParameterfvEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetNamedProgramLocalParameterfvEXT\")) == NULL) || r;\n  r = ((glGetNamedProgramStringEXT = (PFNGLGETNAMEDPROGRAMSTRINGEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetNamedProgramStringEXT\")) == NULL) || r;\n  r = ((glGetNamedProgramivEXT = (PFNGLGETNAMEDPROGRAMIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetNamedProgramivEXT\")) == NULL) || r;\n  r = ((glGetNamedRenderbufferParameterivEXT = (PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetNamedRenderbufferParameterivEXT\")) == NULL) || r;\n  r = ((glGetPointerIndexedvEXT = (PFNGLGETPOINTERINDEXEDVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetPointerIndexedvEXT\")) == NULL) || r;\n  r = ((glGetPointeri_vEXT = (PFNGLGETPOINTERI_VEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetPointeri_vEXT\")) == NULL) || r;\n  r = ((glGetTextureImageEXT = (PFNGLGETTEXTUREIMAGEEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetTextureImageEXT\")) == NULL) || r;\n  r = ((glGetTextureLevelParameterfvEXT = (PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetTextureLevelParameterfvEXT\")) == NULL) || r;\n  r = ((glGetTextureLevelParameterivEXT = (PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetTextureLevelParameterivEXT\")) == NULL) || r;\n  r = ((glGetTextureParameterIivEXT = (PFNGLGETTEXTUREPARAMETERIIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetTextureParameterIivEXT\")) == NULL) || r;\n  r = ((glGetTextureParameterIuivEXT = (PFNGLGETTEXTUREPARAMETERIUIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetTextureParameterIuivEXT\")) == NULL) || r;\n  r = ((glGetTextureParameterfvEXT = (PFNGLGETTEXTUREPARAMETERFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetTextureParameterfvEXT\")) == NULL) || r;\n  r = ((glGetTextureParameterivEXT = (PFNGLGETTEXTUREPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetTextureParameterivEXT\")) == NULL) || r;\n  r = ((glGetVertexArrayIntegeri_vEXT = (PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexArrayIntegeri_vEXT\")) == NULL) || r;\n  r = ((glGetVertexArrayIntegervEXT = (PFNGLGETVERTEXARRAYINTEGERVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexArrayIntegervEXT\")) == NULL) || r;\n  r = ((glGetVertexArrayPointeri_vEXT = (PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexArrayPointeri_vEXT\")) == NULL) || r;\n  r = ((glGetVertexArrayPointervEXT = (PFNGLGETVERTEXARRAYPOINTERVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexArrayPointervEXT\")) == NULL) || r;\n  r = ((glMapNamedBufferEXT = (PFNGLMAPNAMEDBUFFEREXTPROC)glewGetProcAddress((const GLubyte*)\"glMapNamedBufferEXT\")) == NULL) || r;\n  r = ((glMapNamedBufferRangeEXT = (PFNGLMAPNAMEDBUFFERRANGEEXTPROC)glewGetProcAddress((const GLubyte*)\"glMapNamedBufferRangeEXT\")) == NULL) || r;\n  r = ((glMatrixFrustumEXT = (PFNGLMATRIXFRUSTUMEXTPROC)glewGetProcAddress((const GLubyte*)\"glMatrixFrustumEXT\")) == NULL) || r;\n  r = ((glMatrixLoadIdentityEXT = (PFNGLMATRIXLOADIDENTITYEXTPROC)glewGetProcAddress((const GLubyte*)\"glMatrixLoadIdentityEXT\")) == NULL) || r;\n  r = ((glMatrixLoadTransposedEXT = (PFNGLMATRIXLOADTRANSPOSEDEXTPROC)glewGetProcAddress((const GLubyte*)\"glMatrixLoadTransposedEXT\")) == NULL) || r;\n  r = ((glMatrixLoadTransposefEXT = (PFNGLMATRIXLOADTRANSPOSEFEXTPROC)glewGetProcAddress((const GLubyte*)\"glMatrixLoadTransposefEXT\")) == NULL) || r;\n  r = ((glMatrixLoaddEXT = (PFNGLMATRIXLOADDEXTPROC)glewGetProcAddress((const GLubyte*)\"glMatrixLoaddEXT\")) == NULL) || r;\n  r = ((glMatrixLoadfEXT = (PFNGLMATRIXLOADFEXTPROC)glewGetProcAddress((const GLubyte*)\"glMatrixLoadfEXT\")) == NULL) || r;\n  r = ((glMatrixMultTransposedEXT = (PFNGLMATRIXMULTTRANSPOSEDEXTPROC)glewGetProcAddress((const GLubyte*)\"glMatrixMultTransposedEXT\")) == NULL) || r;\n  r = ((glMatrixMultTransposefEXT = (PFNGLMATRIXMULTTRANSPOSEFEXTPROC)glewGetProcAddress((const GLubyte*)\"glMatrixMultTransposefEXT\")) == NULL) || r;\n  r = ((glMatrixMultdEXT = (PFNGLMATRIXMULTDEXTPROC)glewGetProcAddress((const GLubyte*)\"glMatrixMultdEXT\")) == NULL) || r;\n  r = ((glMatrixMultfEXT = (PFNGLMATRIXMULTFEXTPROC)glewGetProcAddress((const GLubyte*)\"glMatrixMultfEXT\")) == NULL) || r;\n  r = ((glMatrixOrthoEXT = (PFNGLMATRIXORTHOEXTPROC)glewGetProcAddress((const GLubyte*)\"glMatrixOrthoEXT\")) == NULL) || r;\n  r = ((glMatrixPopEXT = (PFNGLMATRIXPOPEXTPROC)glewGetProcAddress((const GLubyte*)\"glMatrixPopEXT\")) == NULL) || r;\n  r = ((glMatrixPushEXT = (PFNGLMATRIXPUSHEXTPROC)glewGetProcAddress((const GLubyte*)\"glMatrixPushEXT\")) == NULL) || r;\n  r = ((glMatrixRotatedEXT = (PFNGLMATRIXROTATEDEXTPROC)glewGetProcAddress((const GLubyte*)\"glMatrixRotatedEXT\")) == NULL) || r;\n  r = ((glMatrixRotatefEXT = (PFNGLMATRIXROTATEFEXTPROC)glewGetProcAddress((const GLubyte*)\"glMatrixRotatefEXT\")) == NULL) || r;\n  r = ((glMatrixScaledEXT = (PFNGLMATRIXSCALEDEXTPROC)glewGetProcAddress((const GLubyte*)\"glMatrixScaledEXT\")) == NULL) || r;\n  r = ((glMatrixScalefEXT = (PFNGLMATRIXSCALEFEXTPROC)glewGetProcAddress((const GLubyte*)\"glMatrixScalefEXT\")) == NULL) || r;\n  r = ((glMatrixTranslatedEXT = (PFNGLMATRIXTRANSLATEDEXTPROC)glewGetProcAddress((const GLubyte*)\"glMatrixTranslatedEXT\")) == NULL) || r;\n  r = ((glMatrixTranslatefEXT = (PFNGLMATRIXTRANSLATEFEXTPROC)glewGetProcAddress((const GLubyte*)\"glMatrixTranslatefEXT\")) == NULL) || r;\n  r = ((glMultiTexBufferEXT = (PFNGLMULTITEXBUFFEREXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexBufferEXT\")) == NULL) || r;\n  r = ((glMultiTexCoordPointerEXT = (PFNGLMULTITEXCOORDPOINTEREXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoordPointerEXT\")) == NULL) || r;\n  r = ((glMultiTexEnvfEXT = (PFNGLMULTITEXENVFEXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexEnvfEXT\")) == NULL) || r;\n  r = ((glMultiTexEnvfvEXT = (PFNGLMULTITEXENVFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexEnvfvEXT\")) == NULL) || r;\n  r = ((glMultiTexEnviEXT = (PFNGLMULTITEXENVIEXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexEnviEXT\")) == NULL) || r;\n  r = ((glMultiTexEnvivEXT = (PFNGLMULTITEXENVIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexEnvivEXT\")) == NULL) || r;\n  r = ((glMultiTexGendEXT = (PFNGLMULTITEXGENDEXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexGendEXT\")) == NULL) || r;\n  r = ((glMultiTexGendvEXT = (PFNGLMULTITEXGENDVEXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexGendvEXT\")) == NULL) || r;\n  r = ((glMultiTexGenfEXT = (PFNGLMULTITEXGENFEXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexGenfEXT\")) == NULL) || r;\n  r = ((glMultiTexGenfvEXT = (PFNGLMULTITEXGENFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexGenfvEXT\")) == NULL) || r;\n  r = ((glMultiTexGeniEXT = (PFNGLMULTITEXGENIEXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexGeniEXT\")) == NULL) || r;\n  r = ((glMultiTexGenivEXT = (PFNGLMULTITEXGENIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexGenivEXT\")) == NULL) || r;\n  r = ((glMultiTexImage1DEXT = (PFNGLMULTITEXIMAGE1DEXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexImage1DEXT\")) == NULL) || r;\n  r = ((glMultiTexImage2DEXT = (PFNGLMULTITEXIMAGE2DEXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexImage2DEXT\")) == NULL) || r;\n  r = ((glMultiTexImage3DEXT = (PFNGLMULTITEXIMAGE3DEXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexImage3DEXT\")) == NULL) || r;\n  r = ((glMultiTexParameterIivEXT = (PFNGLMULTITEXPARAMETERIIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexParameterIivEXT\")) == NULL) || r;\n  r = ((glMultiTexParameterIuivEXT = (PFNGLMULTITEXPARAMETERIUIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexParameterIuivEXT\")) == NULL) || r;\n  r = ((glMultiTexParameterfEXT = (PFNGLMULTITEXPARAMETERFEXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexParameterfEXT\")) == NULL) || r;\n  r = ((glMultiTexParameterfvEXT = (PFNGLMULTITEXPARAMETERFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexParameterfvEXT\")) == NULL) || r;\n  r = ((glMultiTexParameteriEXT = (PFNGLMULTITEXPARAMETERIEXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexParameteriEXT\")) == NULL) || r;\n  r = ((glMultiTexParameterivEXT = (PFNGLMULTITEXPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexParameterivEXT\")) == NULL) || r;\n  r = ((glMultiTexRenderbufferEXT = (PFNGLMULTITEXRENDERBUFFEREXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexRenderbufferEXT\")) == NULL) || r;\n  r = ((glMultiTexSubImage1DEXT = (PFNGLMULTITEXSUBIMAGE1DEXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexSubImage1DEXT\")) == NULL) || r;\n  r = ((glMultiTexSubImage2DEXT = (PFNGLMULTITEXSUBIMAGE2DEXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexSubImage2DEXT\")) == NULL) || r;\n  r = ((glMultiTexSubImage3DEXT = (PFNGLMULTITEXSUBIMAGE3DEXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexSubImage3DEXT\")) == NULL) || r;\n  r = ((glNamedBufferDataEXT = (PFNGLNAMEDBUFFERDATAEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedBufferDataEXT\")) == NULL) || r;\n  r = ((glNamedBufferSubDataEXT = (PFNGLNAMEDBUFFERSUBDATAEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedBufferSubDataEXT\")) == NULL) || r;\n  r = ((glNamedCopyBufferSubDataEXT = (PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedCopyBufferSubDataEXT\")) == NULL) || r;\n  r = ((glNamedFramebufferRenderbufferEXT = (PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedFramebufferRenderbufferEXT\")) == NULL) || r;\n  r = ((glNamedFramebufferTexture1DEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedFramebufferTexture1DEXT\")) == NULL) || r;\n  r = ((glNamedFramebufferTexture2DEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedFramebufferTexture2DEXT\")) == NULL) || r;\n  r = ((glNamedFramebufferTexture3DEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedFramebufferTexture3DEXT\")) == NULL) || r;\n  r = ((glNamedFramebufferTextureEXT = (PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedFramebufferTextureEXT\")) == NULL) || r;\n  r = ((glNamedFramebufferTextureFaceEXT = (PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedFramebufferTextureFaceEXT\")) == NULL) || r;\n  r = ((glNamedFramebufferTextureLayerEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedFramebufferTextureLayerEXT\")) == NULL) || r;\n  r = ((glNamedProgramLocalParameter4dEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedProgramLocalParameter4dEXT\")) == NULL) || r;\n  r = ((glNamedProgramLocalParameter4dvEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedProgramLocalParameter4dvEXT\")) == NULL) || r;\n  r = ((glNamedProgramLocalParameter4fEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedProgramLocalParameter4fEXT\")) == NULL) || r;\n  r = ((glNamedProgramLocalParameter4fvEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedProgramLocalParameter4fvEXT\")) == NULL) || r;\n  r = ((glNamedProgramLocalParameterI4iEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedProgramLocalParameterI4iEXT\")) == NULL) || r;\n  r = ((glNamedProgramLocalParameterI4ivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedProgramLocalParameterI4ivEXT\")) == NULL) || r;\n  r = ((glNamedProgramLocalParameterI4uiEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedProgramLocalParameterI4uiEXT\")) == NULL) || r;\n  r = ((glNamedProgramLocalParameterI4uivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedProgramLocalParameterI4uivEXT\")) == NULL) || r;\n  r = ((glNamedProgramLocalParameters4fvEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedProgramLocalParameters4fvEXT\")) == NULL) || r;\n  r = ((glNamedProgramLocalParametersI4ivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedProgramLocalParametersI4ivEXT\")) == NULL) || r;\n  r = ((glNamedProgramLocalParametersI4uivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedProgramLocalParametersI4uivEXT\")) == NULL) || r;\n  r = ((glNamedProgramStringEXT = (PFNGLNAMEDPROGRAMSTRINGEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedProgramStringEXT\")) == NULL) || r;\n  r = ((glNamedRenderbufferStorageEXT = (PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedRenderbufferStorageEXT\")) == NULL) || r;\n  r = ((glNamedRenderbufferStorageMultisampleCoverageEXT = (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedRenderbufferStorageMultisampleCoverageEXT\")) == NULL) || r;\n  r = ((glNamedRenderbufferStorageMultisampleEXT = (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)glewGetProcAddress((const GLubyte*)\"glNamedRenderbufferStorageMultisampleEXT\")) == NULL) || r;\n  r = ((glProgramUniform1fEXT = (PFNGLPROGRAMUNIFORM1FEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform1fEXT\")) == NULL) || r;\n  r = ((glProgramUniform1fvEXT = (PFNGLPROGRAMUNIFORM1FVEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform1fvEXT\")) == NULL) || r;\n  r = ((glProgramUniform1iEXT = (PFNGLPROGRAMUNIFORM1IEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform1iEXT\")) == NULL) || r;\n  r = ((glProgramUniform1ivEXT = (PFNGLPROGRAMUNIFORM1IVEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform1ivEXT\")) == NULL) || r;\n  r = ((glProgramUniform1uiEXT = (PFNGLPROGRAMUNIFORM1UIEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform1uiEXT\")) == NULL) || r;\n  r = ((glProgramUniform1uivEXT = (PFNGLPROGRAMUNIFORM1UIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform1uivEXT\")) == NULL) || r;\n  r = ((glProgramUniform2fEXT = (PFNGLPROGRAMUNIFORM2FEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform2fEXT\")) == NULL) || r;\n  r = ((glProgramUniform2fvEXT = (PFNGLPROGRAMUNIFORM2FVEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform2fvEXT\")) == NULL) || r;\n  r = ((glProgramUniform2iEXT = (PFNGLPROGRAMUNIFORM2IEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform2iEXT\")) == NULL) || r;\n  r = ((glProgramUniform2ivEXT = (PFNGLPROGRAMUNIFORM2IVEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform2ivEXT\")) == NULL) || r;\n  r = ((glProgramUniform2uiEXT = (PFNGLPROGRAMUNIFORM2UIEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform2uiEXT\")) == NULL) || r;\n  r = ((glProgramUniform2uivEXT = (PFNGLPROGRAMUNIFORM2UIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform2uivEXT\")) == NULL) || r;\n  r = ((glProgramUniform3fEXT = (PFNGLPROGRAMUNIFORM3FEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform3fEXT\")) == NULL) || r;\n  r = ((glProgramUniform3fvEXT = (PFNGLPROGRAMUNIFORM3FVEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform3fvEXT\")) == NULL) || r;\n  r = ((glProgramUniform3iEXT = (PFNGLPROGRAMUNIFORM3IEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform3iEXT\")) == NULL) || r;\n  r = ((glProgramUniform3ivEXT = (PFNGLPROGRAMUNIFORM3IVEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform3ivEXT\")) == NULL) || r;\n  r = ((glProgramUniform3uiEXT = (PFNGLPROGRAMUNIFORM3UIEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform3uiEXT\")) == NULL) || r;\n  r = ((glProgramUniform3uivEXT = (PFNGLPROGRAMUNIFORM3UIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform3uivEXT\")) == NULL) || r;\n  r = ((glProgramUniform4fEXT = (PFNGLPROGRAMUNIFORM4FEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform4fEXT\")) == NULL) || r;\n  r = ((glProgramUniform4fvEXT = (PFNGLPROGRAMUNIFORM4FVEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform4fvEXT\")) == NULL) || r;\n  r = ((glProgramUniform4iEXT = (PFNGLPROGRAMUNIFORM4IEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform4iEXT\")) == NULL) || r;\n  r = ((glProgramUniform4ivEXT = (PFNGLPROGRAMUNIFORM4IVEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform4ivEXT\")) == NULL) || r;\n  r = ((glProgramUniform4uiEXT = (PFNGLPROGRAMUNIFORM4UIEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform4uiEXT\")) == NULL) || r;\n  r = ((glProgramUniform4uivEXT = (PFNGLPROGRAMUNIFORM4UIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform4uivEXT\")) == NULL) || r;\n  r = ((glProgramUniformMatrix2fvEXT = (PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix2fvEXT\")) == NULL) || r;\n  r = ((glProgramUniformMatrix2x3fvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix2x3fvEXT\")) == NULL) || r;\n  r = ((glProgramUniformMatrix2x4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix2x4fvEXT\")) == NULL) || r;\n  r = ((glProgramUniformMatrix3fvEXT = (PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix3fvEXT\")) == NULL) || r;\n  r = ((glProgramUniformMatrix3x2fvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix3x2fvEXT\")) == NULL) || r;\n  r = ((glProgramUniformMatrix3x4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix3x4fvEXT\")) == NULL) || r;\n  r = ((glProgramUniformMatrix4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix4fvEXT\")) == NULL) || r;\n  r = ((glProgramUniformMatrix4x2fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix4x2fvEXT\")) == NULL) || r;\n  r = ((glProgramUniformMatrix4x3fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformMatrix4x3fvEXT\")) == NULL) || r;\n  r = ((glPushClientAttribDefaultEXT = (PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC)glewGetProcAddress((const GLubyte*)\"glPushClientAttribDefaultEXT\")) == NULL) || r;\n  r = ((glTextureBufferEXT = (PFNGLTEXTUREBUFFEREXTPROC)glewGetProcAddress((const GLubyte*)\"glTextureBufferEXT\")) == NULL) || r;\n  r = ((glTextureImage1DEXT = (PFNGLTEXTUREIMAGE1DEXTPROC)glewGetProcAddress((const GLubyte*)\"glTextureImage1DEXT\")) == NULL) || r;\n  r = ((glTextureImage2DEXT = (PFNGLTEXTUREIMAGE2DEXTPROC)glewGetProcAddress((const GLubyte*)\"glTextureImage2DEXT\")) == NULL) || r;\n  r = ((glTextureImage3DEXT = (PFNGLTEXTUREIMAGE3DEXTPROC)glewGetProcAddress((const GLubyte*)\"glTextureImage3DEXT\")) == NULL) || r;\n  r = ((glTextureParameterIivEXT = (PFNGLTEXTUREPARAMETERIIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glTextureParameterIivEXT\")) == NULL) || r;\n  r = ((glTextureParameterIuivEXT = (PFNGLTEXTUREPARAMETERIUIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glTextureParameterIuivEXT\")) == NULL) || r;\n  r = ((glTextureParameterfEXT = (PFNGLTEXTUREPARAMETERFEXTPROC)glewGetProcAddress((const GLubyte*)\"glTextureParameterfEXT\")) == NULL) || r;\n  r = ((glTextureParameterfvEXT = (PFNGLTEXTUREPARAMETERFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glTextureParameterfvEXT\")) == NULL) || r;\n  r = ((glTextureParameteriEXT = (PFNGLTEXTUREPARAMETERIEXTPROC)glewGetProcAddress((const GLubyte*)\"glTextureParameteriEXT\")) == NULL) || r;\n  r = ((glTextureParameterivEXT = (PFNGLTEXTUREPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glTextureParameterivEXT\")) == NULL) || r;\n  r = ((glTextureRenderbufferEXT = (PFNGLTEXTURERENDERBUFFEREXTPROC)glewGetProcAddress((const GLubyte*)\"glTextureRenderbufferEXT\")) == NULL) || r;\n  r = ((glTextureSubImage1DEXT = (PFNGLTEXTURESUBIMAGE1DEXTPROC)glewGetProcAddress((const GLubyte*)\"glTextureSubImage1DEXT\")) == NULL) || r;\n  r = ((glTextureSubImage2DEXT = (PFNGLTEXTURESUBIMAGE2DEXTPROC)glewGetProcAddress((const GLubyte*)\"glTextureSubImage2DEXT\")) == NULL) || r;\n  r = ((glTextureSubImage3DEXT = (PFNGLTEXTURESUBIMAGE3DEXTPROC)glewGetProcAddress((const GLubyte*)\"glTextureSubImage3DEXT\")) == NULL) || r;\n  r = ((glUnmapNamedBufferEXT = (PFNGLUNMAPNAMEDBUFFEREXTPROC)glewGetProcAddress((const GLubyte*)\"glUnmapNamedBufferEXT\")) == NULL) || r;\n  r = ((glVertexArrayColorOffsetEXT = (PFNGLVERTEXARRAYCOLOROFFSETEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayColorOffsetEXT\")) == NULL) || r;\n  r = ((glVertexArrayEdgeFlagOffsetEXT = (PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayEdgeFlagOffsetEXT\")) == NULL) || r;\n  r = ((glVertexArrayFogCoordOffsetEXT = (PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayFogCoordOffsetEXT\")) == NULL) || r;\n  r = ((glVertexArrayIndexOffsetEXT = (PFNGLVERTEXARRAYINDEXOFFSETEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayIndexOffsetEXT\")) == NULL) || r;\n  r = ((glVertexArrayMultiTexCoordOffsetEXT = (PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayMultiTexCoordOffsetEXT\")) == NULL) || r;\n  r = ((glVertexArrayNormalOffsetEXT = (PFNGLVERTEXARRAYNORMALOFFSETEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayNormalOffsetEXT\")) == NULL) || r;\n  r = ((glVertexArraySecondaryColorOffsetEXT = (PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexArraySecondaryColorOffsetEXT\")) == NULL) || r;\n  r = ((glVertexArrayTexCoordOffsetEXT = (PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayTexCoordOffsetEXT\")) == NULL) || r;\n  r = ((glVertexArrayVertexAttribDivisorEXT = (PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayVertexAttribDivisorEXT\")) == NULL) || r;\n  r = ((glVertexArrayVertexAttribIOffsetEXT = (PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayVertexAttribIOffsetEXT\")) == NULL) || r;\n  r = ((glVertexArrayVertexAttribOffsetEXT = (PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayVertexAttribOffsetEXT\")) == NULL) || r;\n  r = ((glVertexArrayVertexOffsetEXT = (PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayVertexOffsetEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_direct_state_access */\n\n#ifdef GL_EXT_draw_buffers2\n\nstatic GLboolean _glewInit_GL_EXT_draw_buffers2 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glColorMaskIndexedEXT = (PFNGLCOLORMASKINDEXEDEXTPROC)glewGetProcAddress((const GLubyte*)\"glColorMaskIndexedEXT\")) == NULL) || r;\n  r = ((glDisableIndexedEXT = (PFNGLDISABLEINDEXEDEXTPROC)glewGetProcAddress((const GLubyte*)\"glDisableIndexedEXT\")) == NULL) || r;\n  r = ((glEnableIndexedEXT = (PFNGLENABLEINDEXEDEXTPROC)glewGetProcAddress((const GLubyte*)\"glEnableIndexedEXT\")) == NULL) || r;\n  r = ((glGetBooleanIndexedvEXT = (PFNGLGETBOOLEANINDEXEDVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetBooleanIndexedvEXT\")) == NULL) || r;\n  r = ((glGetIntegerIndexedvEXT = (PFNGLGETINTEGERINDEXEDVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetIntegerIndexedvEXT\")) == NULL) || r;\n  r = ((glIsEnabledIndexedEXT = (PFNGLISENABLEDINDEXEDEXTPROC)glewGetProcAddress((const GLubyte*)\"glIsEnabledIndexedEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_draw_buffers2 */\n\n#ifdef GL_EXT_draw_instanced\n\nstatic GLboolean _glewInit_GL_EXT_draw_instanced ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDrawArraysInstancedEXT = (PFNGLDRAWARRAYSINSTANCEDEXTPROC)glewGetProcAddress((const GLubyte*)\"glDrawArraysInstancedEXT\")) == NULL) || r;\n  r = ((glDrawElementsInstancedEXT = (PFNGLDRAWELEMENTSINSTANCEDEXTPROC)glewGetProcAddress((const GLubyte*)\"glDrawElementsInstancedEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_draw_instanced */\n\n#ifdef GL_EXT_draw_range_elements\n\nstatic GLboolean _glewInit_GL_EXT_draw_range_elements ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDrawRangeElementsEXT = (PFNGLDRAWRANGEELEMENTSEXTPROC)glewGetProcAddress((const GLubyte*)\"glDrawRangeElementsEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_draw_range_elements */\n\n#ifdef GL_EXT_fog_coord\n\nstatic GLboolean _glewInit_GL_EXT_fog_coord ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glFogCoordPointerEXT = (PFNGLFOGCOORDPOINTEREXTPROC)glewGetProcAddress((const GLubyte*)\"glFogCoordPointerEXT\")) == NULL) || r;\n  r = ((glFogCoorddEXT = (PFNGLFOGCOORDDEXTPROC)glewGetProcAddress((const GLubyte*)\"glFogCoorddEXT\")) == NULL) || r;\n  r = ((glFogCoorddvEXT = (PFNGLFOGCOORDDVEXTPROC)glewGetProcAddress((const GLubyte*)\"glFogCoorddvEXT\")) == NULL) || r;\n  r = ((glFogCoordfEXT = (PFNGLFOGCOORDFEXTPROC)glewGetProcAddress((const GLubyte*)\"glFogCoordfEXT\")) == NULL) || r;\n  r = ((glFogCoordfvEXT = (PFNGLFOGCOORDFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glFogCoordfvEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_fog_coord */\n\n#ifdef GL_EXT_fragment_lighting\n\nstatic GLboolean _glewInit_GL_EXT_fragment_lighting ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glFragmentColorMaterialEXT = (PFNGLFRAGMENTCOLORMATERIALEXTPROC)glewGetProcAddress((const GLubyte*)\"glFragmentColorMaterialEXT\")) == NULL) || r;\n  r = ((glFragmentLightModelfEXT = (PFNGLFRAGMENTLIGHTMODELFEXTPROC)glewGetProcAddress((const GLubyte*)\"glFragmentLightModelfEXT\")) == NULL) || r;\n  r = ((glFragmentLightModelfvEXT = (PFNGLFRAGMENTLIGHTMODELFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glFragmentLightModelfvEXT\")) == NULL) || r;\n  r = ((glFragmentLightModeliEXT = (PFNGLFRAGMENTLIGHTMODELIEXTPROC)glewGetProcAddress((const GLubyte*)\"glFragmentLightModeliEXT\")) == NULL) || r;\n  r = ((glFragmentLightModelivEXT = (PFNGLFRAGMENTLIGHTMODELIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glFragmentLightModelivEXT\")) == NULL) || r;\n  r = ((glFragmentLightfEXT = (PFNGLFRAGMENTLIGHTFEXTPROC)glewGetProcAddress((const GLubyte*)\"glFragmentLightfEXT\")) == NULL) || r;\n  r = ((glFragmentLightfvEXT = (PFNGLFRAGMENTLIGHTFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glFragmentLightfvEXT\")) == NULL) || r;\n  r = ((glFragmentLightiEXT = (PFNGLFRAGMENTLIGHTIEXTPROC)glewGetProcAddress((const GLubyte*)\"glFragmentLightiEXT\")) == NULL) || r;\n  r = ((glFragmentLightivEXT = (PFNGLFRAGMENTLIGHTIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glFragmentLightivEXT\")) == NULL) || r;\n  r = ((glFragmentMaterialfEXT = (PFNGLFRAGMENTMATERIALFEXTPROC)glewGetProcAddress((const GLubyte*)\"glFragmentMaterialfEXT\")) == NULL) || r;\n  r = ((glFragmentMaterialfvEXT = (PFNGLFRAGMENTMATERIALFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glFragmentMaterialfvEXT\")) == NULL) || r;\n  r = ((glFragmentMaterialiEXT = (PFNGLFRAGMENTMATERIALIEXTPROC)glewGetProcAddress((const GLubyte*)\"glFragmentMaterialiEXT\")) == NULL) || r;\n  r = ((glFragmentMaterialivEXT = (PFNGLFRAGMENTMATERIALIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glFragmentMaterialivEXT\")) == NULL) || r;\n  r = ((glGetFragmentLightfvEXT = (PFNGLGETFRAGMENTLIGHTFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetFragmentLightfvEXT\")) == NULL) || r;\n  r = ((glGetFragmentLightivEXT = (PFNGLGETFRAGMENTLIGHTIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetFragmentLightivEXT\")) == NULL) || r;\n  r = ((glGetFragmentMaterialfvEXT = (PFNGLGETFRAGMENTMATERIALFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetFragmentMaterialfvEXT\")) == NULL) || r;\n  r = ((glGetFragmentMaterialivEXT = (PFNGLGETFRAGMENTMATERIALIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetFragmentMaterialivEXT\")) == NULL) || r;\n  r = ((glLightEnviEXT = (PFNGLLIGHTENVIEXTPROC)glewGetProcAddress((const GLubyte*)\"glLightEnviEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_fragment_lighting */\n\n#ifdef GL_EXT_framebuffer_blit\n\nstatic GLboolean _glewInit_GL_EXT_framebuffer_blit ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBlitFramebufferEXT = (PFNGLBLITFRAMEBUFFEREXTPROC)glewGetProcAddress((const GLubyte*)\"glBlitFramebufferEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_framebuffer_blit */\n\n#ifdef GL_EXT_framebuffer_multisample\n\nstatic GLboolean _glewInit_GL_EXT_framebuffer_multisample ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glRenderbufferStorageMultisampleEXT = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)glewGetProcAddress((const GLubyte*)\"glRenderbufferStorageMultisampleEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_framebuffer_multisample */\n\n#ifdef GL_EXT_framebuffer_object\n\nstatic GLboolean _glewInit_GL_EXT_framebuffer_object ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBindFramebufferEXT = (PFNGLBINDFRAMEBUFFEREXTPROC)glewGetProcAddress((const GLubyte*)\"glBindFramebufferEXT\")) == NULL) || r;\n  r = ((glBindRenderbufferEXT = (PFNGLBINDRENDERBUFFEREXTPROC)glewGetProcAddress((const GLubyte*)\"glBindRenderbufferEXT\")) == NULL) || r;\n  r = ((glCheckFramebufferStatusEXT = (PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC)glewGetProcAddress((const GLubyte*)\"glCheckFramebufferStatusEXT\")) == NULL) || r;\n  r = ((glDeleteFramebuffersEXT = (PFNGLDELETEFRAMEBUFFERSEXTPROC)glewGetProcAddress((const GLubyte*)\"glDeleteFramebuffersEXT\")) == NULL) || r;\n  r = ((glDeleteRenderbuffersEXT = (PFNGLDELETERENDERBUFFERSEXTPROC)glewGetProcAddress((const GLubyte*)\"glDeleteRenderbuffersEXT\")) == NULL) || r;\n  r = ((glFramebufferRenderbufferEXT = (PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC)glewGetProcAddress((const GLubyte*)\"glFramebufferRenderbufferEXT\")) == NULL) || r;\n  r = ((glFramebufferTexture1DEXT = (PFNGLFRAMEBUFFERTEXTURE1DEXTPROC)glewGetProcAddress((const GLubyte*)\"glFramebufferTexture1DEXT\")) == NULL) || r;\n  r = ((glFramebufferTexture2DEXT = (PFNGLFRAMEBUFFERTEXTURE2DEXTPROC)glewGetProcAddress((const GLubyte*)\"glFramebufferTexture2DEXT\")) == NULL) || r;\n  r = ((glFramebufferTexture3DEXT = (PFNGLFRAMEBUFFERTEXTURE3DEXTPROC)glewGetProcAddress((const GLubyte*)\"glFramebufferTexture3DEXT\")) == NULL) || r;\n  r = ((glGenFramebuffersEXT = (PFNGLGENFRAMEBUFFERSEXTPROC)glewGetProcAddress((const GLubyte*)\"glGenFramebuffersEXT\")) == NULL) || r;\n  r = ((glGenRenderbuffersEXT = (PFNGLGENRENDERBUFFERSEXTPROC)glewGetProcAddress((const GLubyte*)\"glGenRenderbuffersEXT\")) == NULL) || r;\n  r = ((glGenerateMipmapEXT = (PFNGLGENERATEMIPMAPEXTPROC)glewGetProcAddress((const GLubyte*)\"glGenerateMipmapEXT\")) == NULL) || r;\n  r = ((glGetFramebufferAttachmentParameterivEXT = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetFramebufferAttachmentParameterivEXT\")) == NULL) || r;\n  r = ((glGetRenderbufferParameterivEXT = (PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetRenderbufferParameterivEXT\")) == NULL) || r;\n  r = ((glIsFramebufferEXT = (PFNGLISFRAMEBUFFEREXTPROC)glewGetProcAddress((const GLubyte*)\"glIsFramebufferEXT\")) == NULL) || r;\n  r = ((glIsRenderbufferEXT = (PFNGLISRENDERBUFFEREXTPROC)glewGetProcAddress((const GLubyte*)\"glIsRenderbufferEXT\")) == NULL) || r;\n  r = ((glRenderbufferStorageEXT = (PFNGLRENDERBUFFERSTORAGEEXTPROC)glewGetProcAddress((const GLubyte*)\"glRenderbufferStorageEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_framebuffer_object */\n\n#ifdef GL_EXT_geometry_shader4\n\nstatic GLboolean _glewInit_GL_EXT_geometry_shader4 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glFramebufferTextureEXT = (PFNGLFRAMEBUFFERTEXTUREEXTPROC)glewGetProcAddress((const GLubyte*)\"glFramebufferTextureEXT\")) == NULL) || r;\n  r = ((glFramebufferTextureFaceEXT = (PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC)glewGetProcAddress((const GLubyte*)\"glFramebufferTextureFaceEXT\")) == NULL) || r;\n  r = ((glProgramParameteriEXT = (PFNGLPROGRAMPARAMETERIEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramParameteriEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_geometry_shader4 */\n\n#ifdef GL_EXT_gpu_program_parameters\n\nstatic GLboolean _glewInit_GL_EXT_gpu_program_parameters ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glProgramEnvParameters4fvEXT = (PFNGLPROGRAMENVPARAMETERS4FVEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramEnvParameters4fvEXT\")) == NULL) || r;\n  r = ((glProgramLocalParameters4fvEXT = (PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC)glewGetProcAddress((const GLubyte*)\"glProgramLocalParameters4fvEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_gpu_program_parameters */\n\n#ifdef GL_EXT_gpu_shader4\n\nstatic GLboolean _glewInit_GL_EXT_gpu_shader4 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBindFragDataLocationEXT = (PFNGLBINDFRAGDATALOCATIONEXTPROC)glewGetProcAddress((const GLubyte*)\"glBindFragDataLocationEXT\")) == NULL) || r;\n  r = ((glGetFragDataLocationEXT = (PFNGLGETFRAGDATALOCATIONEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetFragDataLocationEXT\")) == NULL) || r;\n  r = ((glGetUniformuivEXT = (PFNGLGETUNIFORMUIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetUniformuivEXT\")) == NULL) || r;\n  r = ((glGetVertexAttribIivEXT = (PFNGLGETVERTEXATTRIBIIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexAttribIivEXT\")) == NULL) || r;\n  r = ((glGetVertexAttribIuivEXT = (PFNGLGETVERTEXATTRIBIUIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexAttribIuivEXT\")) == NULL) || r;\n  r = ((glUniform1uiEXT = (PFNGLUNIFORM1UIEXTPROC)glewGetProcAddress((const GLubyte*)\"glUniform1uiEXT\")) == NULL) || r;\n  r = ((glUniform1uivEXT = (PFNGLUNIFORM1UIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glUniform1uivEXT\")) == NULL) || r;\n  r = ((glUniform2uiEXT = (PFNGLUNIFORM2UIEXTPROC)glewGetProcAddress((const GLubyte*)\"glUniform2uiEXT\")) == NULL) || r;\n  r = ((glUniform2uivEXT = (PFNGLUNIFORM2UIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glUniform2uivEXT\")) == NULL) || r;\n  r = ((glUniform3uiEXT = (PFNGLUNIFORM3UIEXTPROC)glewGetProcAddress((const GLubyte*)\"glUniform3uiEXT\")) == NULL) || r;\n  r = ((glUniform3uivEXT = (PFNGLUNIFORM3UIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glUniform3uivEXT\")) == NULL) || r;\n  r = ((glUniform4uiEXT = (PFNGLUNIFORM4UIEXTPROC)glewGetProcAddress((const GLubyte*)\"glUniform4uiEXT\")) == NULL) || r;\n  r = ((glUniform4uivEXT = (PFNGLUNIFORM4UIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glUniform4uivEXT\")) == NULL) || r;\n  r = ((glVertexAttribI1iEXT = (PFNGLVERTEXATTRIBI1IEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI1iEXT\")) == NULL) || r;\n  r = ((glVertexAttribI1ivEXT = (PFNGLVERTEXATTRIBI1IVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI1ivEXT\")) == NULL) || r;\n  r = ((glVertexAttribI1uiEXT = (PFNGLVERTEXATTRIBI1UIEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI1uiEXT\")) == NULL) || r;\n  r = ((glVertexAttribI1uivEXT = (PFNGLVERTEXATTRIBI1UIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI1uivEXT\")) == NULL) || r;\n  r = ((glVertexAttribI2iEXT = (PFNGLVERTEXATTRIBI2IEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI2iEXT\")) == NULL) || r;\n  r = ((glVertexAttribI2ivEXT = (PFNGLVERTEXATTRIBI2IVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI2ivEXT\")) == NULL) || r;\n  r = ((glVertexAttribI2uiEXT = (PFNGLVERTEXATTRIBI2UIEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI2uiEXT\")) == NULL) || r;\n  r = ((glVertexAttribI2uivEXT = (PFNGLVERTEXATTRIBI2UIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI2uivEXT\")) == NULL) || r;\n  r = ((glVertexAttribI3iEXT = (PFNGLVERTEXATTRIBI3IEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI3iEXT\")) == NULL) || r;\n  r = ((glVertexAttribI3ivEXT = (PFNGLVERTEXATTRIBI3IVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI3ivEXT\")) == NULL) || r;\n  r = ((glVertexAttribI3uiEXT = (PFNGLVERTEXATTRIBI3UIEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI3uiEXT\")) == NULL) || r;\n  r = ((glVertexAttribI3uivEXT = (PFNGLVERTEXATTRIBI3UIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI3uivEXT\")) == NULL) || r;\n  r = ((glVertexAttribI4bvEXT = (PFNGLVERTEXATTRIBI4BVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI4bvEXT\")) == NULL) || r;\n  r = ((glVertexAttribI4iEXT = (PFNGLVERTEXATTRIBI4IEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI4iEXT\")) == NULL) || r;\n  r = ((glVertexAttribI4ivEXT = (PFNGLVERTEXATTRIBI4IVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI4ivEXT\")) == NULL) || r;\n  r = ((glVertexAttribI4svEXT = (PFNGLVERTEXATTRIBI4SVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI4svEXT\")) == NULL) || r;\n  r = ((glVertexAttribI4ubvEXT = (PFNGLVERTEXATTRIBI4UBVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI4ubvEXT\")) == NULL) || r;\n  r = ((glVertexAttribI4uiEXT = (PFNGLVERTEXATTRIBI4UIEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI4uiEXT\")) == NULL) || r;\n  r = ((glVertexAttribI4uivEXT = (PFNGLVERTEXATTRIBI4UIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI4uivEXT\")) == NULL) || r;\n  r = ((glVertexAttribI4usvEXT = (PFNGLVERTEXATTRIBI4USVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribI4usvEXT\")) == NULL) || r;\n  r = ((glVertexAttribIPointerEXT = (PFNGLVERTEXATTRIBIPOINTEREXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribIPointerEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_gpu_shader4 */\n\n#ifdef GL_EXT_histogram\n\nstatic GLboolean _glewInit_GL_EXT_histogram ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetHistogramEXT = (PFNGLGETHISTOGRAMEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetHistogramEXT\")) == NULL) || r;\n  r = ((glGetHistogramParameterfvEXT = (PFNGLGETHISTOGRAMPARAMETERFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetHistogramParameterfvEXT\")) == NULL) || r;\n  r = ((glGetHistogramParameterivEXT = (PFNGLGETHISTOGRAMPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetHistogramParameterivEXT\")) == NULL) || r;\n  r = ((glGetMinmaxEXT = (PFNGLGETMINMAXEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxEXT\")) == NULL) || r;\n  r = ((glGetMinmaxParameterfvEXT = (PFNGLGETMINMAXPARAMETERFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxParameterfvEXT\")) == NULL) || r;\n  r = ((glGetMinmaxParameterivEXT = (PFNGLGETMINMAXPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetMinmaxParameterivEXT\")) == NULL) || r;\n  r = ((glHistogramEXT = (PFNGLHISTOGRAMEXTPROC)glewGetProcAddress((const GLubyte*)\"glHistogramEXT\")) == NULL) || r;\n  r = ((glMinmaxEXT = (PFNGLMINMAXEXTPROC)glewGetProcAddress((const GLubyte*)\"glMinmaxEXT\")) == NULL) || r;\n  r = ((glResetHistogramEXT = (PFNGLRESETHISTOGRAMEXTPROC)glewGetProcAddress((const GLubyte*)\"glResetHistogramEXT\")) == NULL) || r;\n  r = ((glResetMinmaxEXT = (PFNGLRESETMINMAXEXTPROC)glewGetProcAddress((const GLubyte*)\"glResetMinmaxEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_histogram */\n\n#ifdef GL_EXT_index_func\n\nstatic GLboolean _glewInit_GL_EXT_index_func ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glIndexFuncEXT = (PFNGLINDEXFUNCEXTPROC)glewGetProcAddress((const GLubyte*)\"glIndexFuncEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_index_func */\n\n#ifdef GL_EXT_index_material\n\nstatic GLboolean _glewInit_GL_EXT_index_material ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glIndexMaterialEXT = (PFNGLINDEXMATERIALEXTPROC)glewGetProcAddress((const GLubyte*)\"glIndexMaterialEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_index_material */\n\n#ifdef GL_EXT_light_texture\n\nstatic GLboolean _glewInit_GL_EXT_light_texture ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glApplyTextureEXT = (PFNGLAPPLYTEXTUREEXTPROC)glewGetProcAddress((const GLubyte*)\"glApplyTextureEXT\")) == NULL) || r;\n  r = ((glTextureLightEXT = (PFNGLTEXTURELIGHTEXTPROC)glewGetProcAddress((const GLubyte*)\"glTextureLightEXT\")) == NULL) || r;\n  r = ((glTextureMaterialEXT = (PFNGLTEXTUREMATERIALEXTPROC)glewGetProcAddress((const GLubyte*)\"glTextureMaterialEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_light_texture */\n\n#ifdef GL_EXT_multi_draw_arrays\n\nstatic GLboolean _glewInit_GL_EXT_multi_draw_arrays ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glMultiDrawArraysEXT = (PFNGLMULTIDRAWARRAYSEXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiDrawArraysEXT\")) == NULL) || r;\n  r = ((glMultiDrawElementsEXT = (PFNGLMULTIDRAWELEMENTSEXTPROC)glewGetProcAddress((const GLubyte*)\"glMultiDrawElementsEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_multi_draw_arrays */\n\n#ifdef GL_EXT_multisample\n\nstatic GLboolean _glewInit_GL_EXT_multisample ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glSampleMaskEXT = (PFNGLSAMPLEMASKEXTPROC)glewGetProcAddress((const GLubyte*)\"glSampleMaskEXT\")) == NULL) || r;\n  r = ((glSamplePatternEXT = (PFNGLSAMPLEPATTERNEXTPROC)glewGetProcAddress((const GLubyte*)\"glSamplePatternEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_multisample */\n\n#ifdef GL_EXT_paletted_texture\n\nstatic GLboolean _glewInit_GL_EXT_paletted_texture ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glColorTableEXT = (PFNGLCOLORTABLEEXTPROC)glewGetProcAddress((const GLubyte*)\"glColorTableEXT\")) == NULL) || r;\n  r = ((glGetColorTableEXT = (PFNGLGETCOLORTABLEEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetColorTableEXT\")) == NULL) || r;\n  r = ((glGetColorTableParameterfvEXT = (PFNGLGETCOLORTABLEPARAMETERFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetColorTableParameterfvEXT\")) == NULL) || r;\n  r = ((glGetColorTableParameterivEXT = (PFNGLGETCOLORTABLEPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetColorTableParameterivEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_paletted_texture */\n\n#ifdef GL_EXT_pixel_transform\n\nstatic GLboolean _glewInit_GL_EXT_pixel_transform ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetPixelTransformParameterfvEXT = (PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetPixelTransformParameterfvEXT\")) == NULL) || r;\n  r = ((glGetPixelTransformParameterivEXT = (PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetPixelTransformParameterivEXT\")) == NULL) || r;\n  r = ((glPixelTransformParameterfEXT = (PFNGLPIXELTRANSFORMPARAMETERFEXTPROC)glewGetProcAddress((const GLubyte*)\"glPixelTransformParameterfEXT\")) == NULL) || r;\n  r = ((glPixelTransformParameterfvEXT = (PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glPixelTransformParameterfvEXT\")) == NULL) || r;\n  r = ((glPixelTransformParameteriEXT = (PFNGLPIXELTRANSFORMPARAMETERIEXTPROC)glewGetProcAddress((const GLubyte*)\"glPixelTransformParameteriEXT\")) == NULL) || r;\n  r = ((glPixelTransformParameterivEXT = (PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glPixelTransformParameterivEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_pixel_transform */\n\n#ifdef GL_EXT_point_parameters\n\nstatic GLboolean _glewInit_GL_EXT_point_parameters ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glPointParameterfEXT = (PFNGLPOINTPARAMETERFEXTPROC)glewGetProcAddress((const GLubyte*)\"glPointParameterfEXT\")) == NULL) || r;\n  r = ((glPointParameterfvEXT = (PFNGLPOINTPARAMETERFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glPointParameterfvEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_point_parameters */\n\n#ifdef GL_EXT_polygon_offset\n\nstatic GLboolean _glewInit_GL_EXT_polygon_offset ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glPolygonOffsetEXT = (PFNGLPOLYGONOFFSETEXTPROC)glewGetProcAddress((const GLubyte*)\"glPolygonOffsetEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_polygon_offset */\n\n#ifdef GL_EXT_polygon_offset_clamp\n\nstatic GLboolean _glewInit_GL_EXT_polygon_offset_clamp ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glPolygonOffsetClampEXT = (PFNGLPOLYGONOFFSETCLAMPEXTPROC)glewGetProcAddress((const GLubyte*)\"glPolygonOffsetClampEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_polygon_offset_clamp */\n\n#ifdef GL_EXT_provoking_vertex\n\nstatic GLboolean _glewInit_GL_EXT_provoking_vertex ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glProvokingVertexEXT = (PFNGLPROVOKINGVERTEXEXTPROC)glewGetProcAddress((const GLubyte*)\"glProvokingVertexEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_provoking_vertex */\n\n#ifdef GL_EXT_raster_multisample\n\nstatic GLboolean _glewInit_GL_EXT_raster_multisample ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glCoverageModulationNV = (PFNGLCOVERAGEMODULATIONNVPROC)glewGetProcAddress((const GLubyte*)\"glCoverageModulationNV\")) == NULL) || r;\n  r = ((glCoverageModulationTableNV = (PFNGLCOVERAGEMODULATIONTABLENVPROC)glewGetProcAddress((const GLubyte*)\"glCoverageModulationTableNV\")) == NULL) || r;\n  r = ((glGetCoverageModulationTableNV = (PFNGLGETCOVERAGEMODULATIONTABLENVPROC)glewGetProcAddress((const GLubyte*)\"glGetCoverageModulationTableNV\")) == NULL) || r;\n  r = ((glRasterSamplesEXT = (PFNGLRASTERSAMPLESEXTPROC)glewGetProcAddress((const GLubyte*)\"glRasterSamplesEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_raster_multisample */\n\n#ifdef GL_EXT_scene_marker\n\nstatic GLboolean _glewInit_GL_EXT_scene_marker ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBeginSceneEXT = (PFNGLBEGINSCENEEXTPROC)glewGetProcAddress((const GLubyte*)\"glBeginSceneEXT\")) == NULL) || r;\n  r = ((glEndSceneEXT = (PFNGLENDSCENEEXTPROC)glewGetProcAddress((const GLubyte*)\"glEndSceneEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_scene_marker */\n\n#ifdef GL_EXT_secondary_color\n\nstatic GLboolean _glewInit_GL_EXT_secondary_color ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glSecondaryColor3bEXT = (PFNGLSECONDARYCOLOR3BEXTPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3bEXT\")) == NULL) || r;\n  r = ((glSecondaryColor3bvEXT = (PFNGLSECONDARYCOLOR3BVEXTPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3bvEXT\")) == NULL) || r;\n  r = ((glSecondaryColor3dEXT = (PFNGLSECONDARYCOLOR3DEXTPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3dEXT\")) == NULL) || r;\n  r = ((glSecondaryColor3dvEXT = (PFNGLSECONDARYCOLOR3DVEXTPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3dvEXT\")) == NULL) || r;\n  r = ((glSecondaryColor3fEXT = (PFNGLSECONDARYCOLOR3FEXTPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3fEXT\")) == NULL) || r;\n  r = ((glSecondaryColor3fvEXT = (PFNGLSECONDARYCOLOR3FVEXTPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3fvEXT\")) == NULL) || r;\n  r = ((glSecondaryColor3iEXT = (PFNGLSECONDARYCOLOR3IEXTPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3iEXT\")) == NULL) || r;\n  r = ((glSecondaryColor3ivEXT = (PFNGLSECONDARYCOLOR3IVEXTPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3ivEXT\")) == NULL) || r;\n  r = ((glSecondaryColor3sEXT = (PFNGLSECONDARYCOLOR3SEXTPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3sEXT\")) == NULL) || r;\n  r = ((glSecondaryColor3svEXT = (PFNGLSECONDARYCOLOR3SVEXTPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3svEXT\")) == NULL) || r;\n  r = ((glSecondaryColor3ubEXT = (PFNGLSECONDARYCOLOR3UBEXTPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3ubEXT\")) == NULL) || r;\n  r = ((glSecondaryColor3ubvEXT = (PFNGLSECONDARYCOLOR3UBVEXTPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3ubvEXT\")) == NULL) || r;\n  r = ((glSecondaryColor3uiEXT = (PFNGLSECONDARYCOLOR3UIEXTPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3uiEXT\")) == NULL) || r;\n  r = ((glSecondaryColor3uivEXT = (PFNGLSECONDARYCOLOR3UIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3uivEXT\")) == NULL) || r;\n  r = ((glSecondaryColor3usEXT = (PFNGLSECONDARYCOLOR3USEXTPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3usEXT\")) == NULL) || r;\n  r = ((glSecondaryColor3usvEXT = (PFNGLSECONDARYCOLOR3USVEXTPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3usvEXT\")) == NULL) || r;\n  r = ((glSecondaryColorPointerEXT = (PFNGLSECONDARYCOLORPOINTEREXTPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColorPointerEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_secondary_color */\n\n#ifdef GL_EXT_separate_shader_objects\n\nstatic GLboolean _glewInit_GL_EXT_separate_shader_objects ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glActiveProgramEXT = (PFNGLACTIVEPROGRAMEXTPROC)glewGetProcAddress((const GLubyte*)\"glActiveProgramEXT\")) == NULL) || r;\n  r = ((glCreateShaderProgramEXT = (PFNGLCREATESHADERPROGRAMEXTPROC)glewGetProcAddress((const GLubyte*)\"glCreateShaderProgramEXT\")) == NULL) || r;\n  r = ((glUseShaderProgramEXT = (PFNGLUSESHADERPROGRAMEXTPROC)glewGetProcAddress((const GLubyte*)\"glUseShaderProgramEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_separate_shader_objects */\n\n#ifdef GL_EXT_shader_image_load_store\n\nstatic GLboolean _glewInit_GL_EXT_shader_image_load_store ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBindImageTextureEXT = (PFNGLBINDIMAGETEXTUREEXTPROC)glewGetProcAddress((const GLubyte*)\"glBindImageTextureEXT\")) == NULL) || r;\n  r = ((glMemoryBarrierEXT = (PFNGLMEMORYBARRIEREXTPROC)glewGetProcAddress((const GLubyte*)\"glMemoryBarrierEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_shader_image_load_store */\n\n#ifdef GL_EXT_stencil_two_side\n\nstatic GLboolean _glewInit_GL_EXT_stencil_two_side ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glActiveStencilFaceEXT = (PFNGLACTIVESTENCILFACEEXTPROC)glewGetProcAddress((const GLubyte*)\"glActiveStencilFaceEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_stencil_two_side */\n\n#ifdef GL_EXT_subtexture\n\nstatic GLboolean _glewInit_GL_EXT_subtexture ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glTexSubImage1DEXT = (PFNGLTEXSUBIMAGE1DEXTPROC)glewGetProcAddress((const GLubyte*)\"glTexSubImage1DEXT\")) == NULL) || r;\n  r = ((glTexSubImage2DEXT = (PFNGLTEXSUBIMAGE2DEXTPROC)glewGetProcAddress((const GLubyte*)\"glTexSubImage2DEXT\")) == NULL) || r;\n  r = ((glTexSubImage3DEXT = (PFNGLTEXSUBIMAGE3DEXTPROC)glewGetProcAddress((const GLubyte*)\"glTexSubImage3DEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_subtexture */\n\n#ifdef GL_EXT_texture3D\n\nstatic GLboolean _glewInit_GL_EXT_texture3D ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glTexImage3DEXT = (PFNGLTEXIMAGE3DEXTPROC)glewGetProcAddress((const GLubyte*)\"glTexImage3DEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_texture3D */\n\n#ifdef GL_EXT_texture_array\n\nstatic GLboolean _glewInit_GL_EXT_texture_array ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glFramebufferTextureLayerEXT = (PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC)glewGetProcAddress((const GLubyte*)\"glFramebufferTextureLayerEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_texture_array */\n\n#ifdef GL_EXT_texture_buffer_object\n\nstatic GLboolean _glewInit_GL_EXT_texture_buffer_object ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glTexBufferEXT = (PFNGLTEXBUFFEREXTPROC)glewGetProcAddress((const GLubyte*)\"glTexBufferEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_texture_buffer_object */\n\n#ifdef GL_EXT_texture_integer\n\nstatic GLboolean _glewInit_GL_EXT_texture_integer ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glClearColorIiEXT = (PFNGLCLEARCOLORIIEXTPROC)glewGetProcAddress((const GLubyte*)\"glClearColorIiEXT\")) == NULL) || r;\n  r = ((glClearColorIuiEXT = (PFNGLCLEARCOLORIUIEXTPROC)glewGetProcAddress((const GLubyte*)\"glClearColorIuiEXT\")) == NULL) || r;\n  r = ((glGetTexParameterIivEXT = (PFNGLGETTEXPARAMETERIIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetTexParameterIivEXT\")) == NULL) || r;\n  r = ((glGetTexParameterIuivEXT = (PFNGLGETTEXPARAMETERIUIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetTexParameterIuivEXT\")) == NULL) || r;\n  r = ((glTexParameterIivEXT = (PFNGLTEXPARAMETERIIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glTexParameterIivEXT\")) == NULL) || r;\n  r = ((glTexParameterIuivEXT = (PFNGLTEXPARAMETERIUIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glTexParameterIuivEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_texture_integer */\n\n#ifdef GL_EXT_texture_object\n\nstatic GLboolean _glewInit_GL_EXT_texture_object ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glAreTexturesResidentEXT = (PFNGLARETEXTURESRESIDENTEXTPROC)glewGetProcAddress((const GLubyte*)\"glAreTexturesResidentEXT\")) == NULL) || r;\n  r = ((glBindTextureEXT = (PFNGLBINDTEXTUREEXTPROC)glewGetProcAddress((const GLubyte*)\"glBindTextureEXT\")) == NULL) || r;\n  r = ((glDeleteTexturesEXT = (PFNGLDELETETEXTURESEXTPROC)glewGetProcAddress((const GLubyte*)\"glDeleteTexturesEXT\")) == NULL) || r;\n  r = ((glGenTexturesEXT = (PFNGLGENTEXTURESEXTPROC)glewGetProcAddress((const GLubyte*)\"glGenTexturesEXT\")) == NULL) || r;\n  r = ((glIsTextureEXT = (PFNGLISTEXTUREEXTPROC)glewGetProcAddress((const GLubyte*)\"glIsTextureEXT\")) == NULL) || r;\n  r = ((glPrioritizeTexturesEXT = (PFNGLPRIORITIZETEXTURESEXTPROC)glewGetProcAddress((const GLubyte*)\"glPrioritizeTexturesEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_texture_object */\n\n#ifdef GL_EXT_texture_perturb_normal\n\nstatic GLboolean _glewInit_GL_EXT_texture_perturb_normal ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glTextureNormalEXT = (PFNGLTEXTURENORMALEXTPROC)glewGetProcAddress((const GLubyte*)\"glTextureNormalEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_texture_perturb_normal */\n\n#ifdef GL_EXT_timer_query\n\nstatic GLboolean _glewInit_GL_EXT_timer_query ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetQueryObjecti64vEXT = (PFNGLGETQUERYOBJECTI64VEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetQueryObjecti64vEXT\")) == NULL) || r;\n  r = ((glGetQueryObjectui64vEXT = (PFNGLGETQUERYOBJECTUI64VEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetQueryObjectui64vEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_timer_query */\n\n#ifdef GL_EXT_transform_feedback\n\nstatic GLboolean _glewInit_GL_EXT_transform_feedback ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBeginTransformFeedbackEXT = (PFNGLBEGINTRANSFORMFEEDBACKEXTPROC)glewGetProcAddress((const GLubyte*)\"glBeginTransformFeedbackEXT\")) == NULL) || r;\n  r = ((glBindBufferBaseEXT = (PFNGLBINDBUFFERBASEEXTPROC)glewGetProcAddress((const GLubyte*)\"glBindBufferBaseEXT\")) == NULL) || r;\n  r = ((glBindBufferOffsetEXT = (PFNGLBINDBUFFEROFFSETEXTPROC)glewGetProcAddress((const GLubyte*)\"glBindBufferOffsetEXT\")) == NULL) || r;\n  r = ((glBindBufferRangeEXT = (PFNGLBINDBUFFERRANGEEXTPROC)glewGetProcAddress((const GLubyte*)\"glBindBufferRangeEXT\")) == NULL) || r;\n  r = ((glEndTransformFeedbackEXT = (PFNGLENDTRANSFORMFEEDBACKEXTPROC)glewGetProcAddress((const GLubyte*)\"glEndTransformFeedbackEXT\")) == NULL) || r;\n  r = ((glGetTransformFeedbackVaryingEXT = (PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetTransformFeedbackVaryingEXT\")) == NULL) || r;\n  r = ((glTransformFeedbackVaryingsEXT = (PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC)glewGetProcAddress((const GLubyte*)\"glTransformFeedbackVaryingsEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_transform_feedback */\n\n#ifdef GL_EXT_vertex_array\n\nstatic GLboolean _glewInit_GL_EXT_vertex_array ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glArrayElementEXT = (PFNGLARRAYELEMENTEXTPROC)glewGetProcAddress((const GLubyte*)\"glArrayElementEXT\")) == NULL) || r;\n  r = ((glColorPointerEXT = (PFNGLCOLORPOINTEREXTPROC)glewGetProcAddress((const GLubyte*)\"glColorPointerEXT\")) == NULL) || r;\n  r = ((glDrawArraysEXT = (PFNGLDRAWARRAYSEXTPROC)glewGetProcAddress((const GLubyte*)\"glDrawArraysEXT\")) == NULL) || r;\n  r = ((glEdgeFlagPointerEXT = (PFNGLEDGEFLAGPOINTEREXTPROC)glewGetProcAddress((const GLubyte*)\"glEdgeFlagPointerEXT\")) == NULL) || r;\n  r = ((glIndexPointerEXT = (PFNGLINDEXPOINTEREXTPROC)glewGetProcAddress((const GLubyte*)\"glIndexPointerEXT\")) == NULL) || r;\n  r = ((glNormalPointerEXT = (PFNGLNORMALPOINTEREXTPROC)glewGetProcAddress((const GLubyte*)\"glNormalPointerEXT\")) == NULL) || r;\n  r = ((glTexCoordPointerEXT = (PFNGLTEXCOORDPOINTEREXTPROC)glewGetProcAddress((const GLubyte*)\"glTexCoordPointerEXT\")) == NULL) || r;\n  r = ((glVertexPointerEXT = (PFNGLVERTEXPOINTEREXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexPointerEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_vertex_array */\n\n#ifdef GL_EXT_vertex_attrib_64bit\n\nstatic GLboolean _glewInit_GL_EXT_vertex_attrib_64bit ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetVertexAttribLdvEXT = (PFNGLGETVERTEXATTRIBLDVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexAttribLdvEXT\")) == NULL) || r;\n  r = ((glVertexArrayVertexAttribLOffsetEXT = (PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayVertexAttribLOffsetEXT\")) == NULL) || r;\n  r = ((glVertexAttribL1dEXT = (PFNGLVERTEXATTRIBL1DEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL1dEXT\")) == NULL) || r;\n  r = ((glVertexAttribL1dvEXT = (PFNGLVERTEXATTRIBL1DVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL1dvEXT\")) == NULL) || r;\n  r = ((glVertexAttribL2dEXT = (PFNGLVERTEXATTRIBL2DEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL2dEXT\")) == NULL) || r;\n  r = ((glVertexAttribL2dvEXT = (PFNGLVERTEXATTRIBL2DVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL2dvEXT\")) == NULL) || r;\n  r = ((glVertexAttribL3dEXT = (PFNGLVERTEXATTRIBL3DEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL3dEXT\")) == NULL) || r;\n  r = ((glVertexAttribL3dvEXT = (PFNGLVERTEXATTRIBL3DVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL3dvEXT\")) == NULL) || r;\n  r = ((glVertexAttribL4dEXT = (PFNGLVERTEXATTRIBL4DEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL4dEXT\")) == NULL) || r;\n  r = ((glVertexAttribL4dvEXT = (PFNGLVERTEXATTRIBL4DVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL4dvEXT\")) == NULL) || r;\n  r = ((glVertexAttribLPointerEXT = (PFNGLVERTEXATTRIBLPOINTEREXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribLPointerEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_vertex_attrib_64bit */\n\n#ifdef GL_EXT_vertex_shader\n\nstatic GLboolean _glewInit_GL_EXT_vertex_shader ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBeginVertexShaderEXT = (PFNGLBEGINVERTEXSHADEREXTPROC)glewGetProcAddress((const GLubyte*)\"glBeginVertexShaderEXT\")) == NULL) || r;\n  r = ((glBindLightParameterEXT = (PFNGLBINDLIGHTPARAMETEREXTPROC)glewGetProcAddress((const GLubyte*)\"glBindLightParameterEXT\")) == NULL) || r;\n  r = ((glBindMaterialParameterEXT = (PFNGLBINDMATERIALPARAMETEREXTPROC)glewGetProcAddress((const GLubyte*)\"glBindMaterialParameterEXT\")) == NULL) || r;\n  r = ((glBindParameterEXT = (PFNGLBINDPARAMETEREXTPROC)glewGetProcAddress((const GLubyte*)\"glBindParameterEXT\")) == NULL) || r;\n  r = ((glBindTexGenParameterEXT = (PFNGLBINDTEXGENPARAMETEREXTPROC)glewGetProcAddress((const GLubyte*)\"glBindTexGenParameterEXT\")) == NULL) || r;\n  r = ((glBindTextureUnitParameterEXT = (PFNGLBINDTEXTUREUNITPARAMETEREXTPROC)glewGetProcAddress((const GLubyte*)\"glBindTextureUnitParameterEXT\")) == NULL) || r;\n  r = ((glBindVertexShaderEXT = (PFNGLBINDVERTEXSHADEREXTPROC)glewGetProcAddress((const GLubyte*)\"glBindVertexShaderEXT\")) == NULL) || r;\n  r = ((glDeleteVertexShaderEXT = (PFNGLDELETEVERTEXSHADEREXTPROC)glewGetProcAddress((const GLubyte*)\"glDeleteVertexShaderEXT\")) == NULL) || r;\n  r = ((glDisableVariantClientStateEXT = (PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC)glewGetProcAddress((const GLubyte*)\"glDisableVariantClientStateEXT\")) == NULL) || r;\n  r = ((glEnableVariantClientStateEXT = (PFNGLENABLEVARIANTCLIENTSTATEEXTPROC)glewGetProcAddress((const GLubyte*)\"glEnableVariantClientStateEXT\")) == NULL) || r;\n  r = ((glEndVertexShaderEXT = (PFNGLENDVERTEXSHADEREXTPROC)glewGetProcAddress((const GLubyte*)\"glEndVertexShaderEXT\")) == NULL) || r;\n  r = ((glExtractComponentEXT = (PFNGLEXTRACTCOMPONENTEXTPROC)glewGetProcAddress((const GLubyte*)\"glExtractComponentEXT\")) == NULL) || r;\n  r = ((glGenSymbolsEXT = (PFNGLGENSYMBOLSEXTPROC)glewGetProcAddress((const GLubyte*)\"glGenSymbolsEXT\")) == NULL) || r;\n  r = ((glGenVertexShadersEXT = (PFNGLGENVERTEXSHADERSEXTPROC)glewGetProcAddress((const GLubyte*)\"glGenVertexShadersEXT\")) == NULL) || r;\n  r = ((glGetInvariantBooleanvEXT = (PFNGLGETINVARIANTBOOLEANVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetInvariantBooleanvEXT\")) == NULL) || r;\n  r = ((glGetInvariantFloatvEXT = (PFNGLGETINVARIANTFLOATVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetInvariantFloatvEXT\")) == NULL) || r;\n  r = ((glGetInvariantIntegervEXT = (PFNGLGETINVARIANTINTEGERVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetInvariantIntegervEXT\")) == NULL) || r;\n  r = ((glGetLocalConstantBooleanvEXT = (PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetLocalConstantBooleanvEXT\")) == NULL) || r;\n  r = ((glGetLocalConstantFloatvEXT = (PFNGLGETLOCALCONSTANTFLOATVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetLocalConstantFloatvEXT\")) == NULL) || r;\n  r = ((glGetLocalConstantIntegervEXT = (PFNGLGETLOCALCONSTANTINTEGERVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetLocalConstantIntegervEXT\")) == NULL) || r;\n  r = ((glGetVariantBooleanvEXT = (PFNGLGETVARIANTBOOLEANVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetVariantBooleanvEXT\")) == NULL) || r;\n  r = ((glGetVariantFloatvEXT = (PFNGLGETVARIANTFLOATVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetVariantFloatvEXT\")) == NULL) || r;\n  r = ((glGetVariantIntegervEXT = (PFNGLGETVARIANTINTEGERVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetVariantIntegervEXT\")) == NULL) || r;\n  r = ((glGetVariantPointervEXT = (PFNGLGETVARIANTPOINTERVEXTPROC)glewGetProcAddress((const GLubyte*)\"glGetVariantPointervEXT\")) == NULL) || r;\n  r = ((glInsertComponentEXT = (PFNGLINSERTCOMPONENTEXTPROC)glewGetProcAddress((const GLubyte*)\"glInsertComponentEXT\")) == NULL) || r;\n  r = ((glIsVariantEnabledEXT = (PFNGLISVARIANTENABLEDEXTPROC)glewGetProcAddress((const GLubyte*)\"glIsVariantEnabledEXT\")) == NULL) || r;\n  r = ((glSetInvariantEXT = (PFNGLSETINVARIANTEXTPROC)glewGetProcAddress((const GLubyte*)\"glSetInvariantEXT\")) == NULL) || r;\n  r = ((glSetLocalConstantEXT = (PFNGLSETLOCALCONSTANTEXTPROC)glewGetProcAddress((const GLubyte*)\"glSetLocalConstantEXT\")) == NULL) || r;\n  r = ((glShaderOp1EXT = (PFNGLSHADEROP1EXTPROC)glewGetProcAddress((const GLubyte*)\"glShaderOp1EXT\")) == NULL) || r;\n  r = ((glShaderOp2EXT = (PFNGLSHADEROP2EXTPROC)glewGetProcAddress((const GLubyte*)\"glShaderOp2EXT\")) == NULL) || r;\n  r = ((glShaderOp3EXT = (PFNGLSHADEROP3EXTPROC)glewGetProcAddress((const GLubyte*)\"glShaderOp3EXT\")) == NULL) || r;\n  r = ((glSwizzleEXT = (PFNGLSWIZZLEEXTPROC)glewGetProcAddress((const GLubyte*)\"glSwizzleEXT\")) == NULL) || r;\n  r = ((glVariantPointerEXT = (PFNGLVARIANTPOINTEREXTPROC)glewGetProcAddress((const GLubyte*)\"glVariantPointerEXT\")) == NULL) || r;\n  r = ((glVariantbvEXT = (PFNGLVARIANTBVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVariantbvEXT\")) == NULL) || r;\n  r = ((glVariantdvEXT = (PFNGLVARIANTDVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVariantdvEXT\")) == NULL) || r;\n  r = ((glVariantfvEXT = (PFNGLVARIANTFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVariantfvEXT\")) == NULL) || r;\n  r = ((glVariantivEXT = (PFNGLVARIANTIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVariantivEXT\")) == NULL) || r;\n  r = ((glVariantsvEXT = (PFNGLVARIANTSVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVariantsvEXT\")) == NULL) || r;\n  r = ((glVariantubvEXT = (PFNGLVARIANTUBVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVariantubvEXT\")) == NULL) || r;\n  r = ((glVariantuivEXT = (PFNGLVARIANTUIVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVariantuivEXT\")) == NULL) || r;\n  r = ((glVariantusvEXT = (PFNGLVARIANTUSVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVariantusvEXT\")) == NULL) || r;\n  r = ((glWriteMaskEXT = (PFNGLWRITEMASKEXTPROC)glewGetProcAddress((const GLubyte*)\"glWriteMaskEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_vertex_shader */\n\n#ifdef GL_EXT_vertex_weighting\n\nstatic GLboolean _glewInit_GL_EXT_vertex_weighting ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glVertexWeightPointerEXT = (PFNGLVERTEXWEIGHTPOINTEREXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexWeightPointerEXT\")) == NULL) || r;\n  r = ((glVertexWeightfEXT = (PFNGLVERTEXWEIGHTFEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexWeightfEXT\")) == NULL) || r;\n  r = ((glVertexWeightfvEXT = (PFNGLVERTEXWEIGHTFVEXTPROC)glewGetProcAddress((const GLubyte*)\"glVertexWeightfvEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_vertex_weighting */\n\n#ifdef GL_EXT_window_rectangles\n\nstatic GLboolean _glewInit_GL_EXT_window_rectangles ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glWindowRectanglesEXT = (PFNGLWINDOWRECTANGLESEXTPROC)glewGetProcAddress((const GLubyte*)\"glWindowRectanglesEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_window_rectangles */\n\n#ifdef GL_EXT_x11_sync_object\n\nstatic GLboolean _glewInit_GL_EXT_x11_sync_object ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glImportSyncEXT = (PFNGLIMPORTSYNCEXTPROC)glewGetProcAddress((const GLubyte*)\"glImportSyncEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_EXT_x11_sync_object */\n\n#ifdef GL_GREMEDY_frame_terminator\n\nstatic GLboolean _glewInit_GL_GREMEDY_frame_terminator ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glFrameTerminatorGREMEDY = (PFNGLFRAMETERMINATORGREMEDYPROC)glewGetProcAddress((const GLubyte*)\"glFrameTerminatorGREMEDY\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_GREMEDY_frame_terminator */\n\n#ifdef GL_GREMEDY_string_marker\n\nstatic GLboolean _glewInit_GL_GREMEDY_string_marker ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glStringMarkerGREMEDY = (PFNGLSTRINGMARKERGREMEDYPROC)glewGetProcAddress((const GLubyte*)\"glStringMarkerGREMEDY\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_GREMEDY_string_marker */\n\n#ifdef GL_HP_image_transform\n\nstatic GLboolean _glewInit_GL_HP_image_transform ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetImageTransformParameterfvHP = (PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC)glewGetProcAddress((const GLubyte*)\"glGetImageTransformParameterfvHP\")) == NULL) || r;\n  r = ((glGetImageTransformParameterivHP = (PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC)glewGetProcAddress((const GLubyte*)\"glGetImageTransformParameterivHP\")) == NULL) || r;\n  r = ((glImageTransformParameterfHP = (PFNGLIMAGETRANSFORMPARAMETERFHPPROC)glewGetProcAddress((const GLubyte*)\"glImageTransformParameterfHP\")) == NULL) || r;\n  r = ((glImageTransformParameterfvHP = (PFNGLIMAGETRANSFORMPARAMETERFVHPPROC)glewGetProcAddress((const GLubyte*)\"glImageTransformParameterfvHP\")) == NULL) || r;\n  r = ((glImageTransformParameteriHP = (PFNGLIMAGETRANSFORMPARAMETERIHPPROC)glewGetProcAddress((const GLubyte*)\"glImageTransformParameteriHP\")) == NULL) || r;\n  r = ((glImageTransformParameterivHP = (PFNGLIMAGETRANSFORMPARAMETERIVHPPROC)glewGetProcAddress((const GLubyte*)\"glImageTransformParameterivHP\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_HP_image_transform */\n\n#ifdef GL_IBM_multimode_draw_arrays\n\nstatic GLboolean _glewInit_GL_IBM_multimode_draw_arrays ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glMultiModeDrawArraysIBM = (PFNGLMULTIMODEDRAWARRAYSIBMPROC)glewGetProcAddress((const GLubyte*)\"glMultiModeDrawArraysIBM\")) == NULL) || r;\n  r = ((glMultiModeDrawElementsIBM = (PFNGLMULTIMODEDRAWELEMENTSIBMPROC)glewGetProcAddress((const GLubyte*)\"glMultiModeDrawElementsIBM\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_IBM_multimode_draw_arrays */\n\n#ifdef GL_IBM_vertex_array_lists\n\nstatic GLboolean _glewInit_GL_IBM_vertex_array_lists ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glColorPointerListIBM = (PFNGLCOLORPOINTERLISTIBMPROC)glewGetProcAddress((const GLubyte*)\"glColorPointerListIBM\")) == NULL) || r;\n  r = ((glEdgeFlagPointerListIBM = (PFNGLEDGEFLAGPOINTERLISTIBMPROC)glewGetProcAddress((const GLubyte*)\"glEdgeFlagPointerListIBM\")) == NULL) || r;\n  r = ((glFogCoordPointerListIBM = (PFNGLFOGCOORDPOINTERLISTIBMPROC)glewGetProcAddress((const GLubyte*)\"glFogCoordPointerListIBM\")) == NULL) || r;\n  r = ((glIndexPointerListIBM = (PFNGLINDEXPOINTERLISTIBMPROC)glewGetProcAddress((const GLubyte*)\"glIndexPointerListIBM\")) == NULL) || r;\n  r = ((glNormalPointerListIBM = (PFNGLNORMALPOINTERLISTIBMPROC)glewGetProcAddress((const GLubyte*)\"glNormalPointerListIBM\")) == NULL) || r;\n  r = ((glSecondaryColorPointerListIBM = (PFNGLSECONDARYCOLORPOINTERLISTIBMPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColorPointerListIBM\")) == NULL) || r;\n  r = ((glTexCoordPointerListIBM = (PFNGLTEXCOORDPOINTERLISTIBMPROC)glewGetProcAddress((const GLubyte*)\"glTexCoordPointerListIBM\")) == NULL) || r;\n  r = ((glVertexPointerListIBM = (PFNGLVERTEXPOINTERLISTIBMPROC)glewGetProcAddress((const GLubyte*)\"glVertexPointerListIBM\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_IBM_vertex_array_lists */\n\n#ifdef GL_INTEL_map_texture\n\nstatic GLboolean _glewInit_GL_INTEL_map_texture ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glMapTexture2DINTEL = (PFNGLMAPTEXTURE2DINTELPROC)glewGetProcAddress((const GLubyte*)\"glMapTexture2DINTEL\")) == NULL) || r;\n  r = ((glSyncTextureINTEL = (PFNGLSYNCTEXTUREINTELPROC)glewGetProcAddress((const GLubyte*)\"glSyncTextureINTEL\")) == NULL) || r;\n  r = ((glUnmapTexture2DINTEL = (PFNGLUNMAPTEXTURE2DINTELPROC)glewGetProcAddress((const GLubyte*)\"glUnmapTexture2DINTEL\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_INTEL_map_texture */\n\n#ifdef GL_INTEL_parallel_arrays\n\nstatic GLboolean _glewInit_GL_INTEL_parallel_arrays ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glColorPointervINTEL = (PFNGLCOLORPOINTERVINTELPROC)glewGetProcAddress((const GLubyte*)\"glColorPointervINTEL\")) == NULL) || r;\n  r = ((glNormalPointervINTEL = (PFNGLNORMALPOINTERVINTELPROC)glewGetProcAddress((const GLubyte*)\"glNormalPointervINTEL\")) == NULL) || r;\n  r = ((glTexCoordPointervINTEL = (PFNGLTEXCOORDPOINTERVINTELPROC)glewGetProcAddress((const GLubyte*)\"glTexCoordPointervINTEL\")) == NULL) || r;\n  r = ((glVertexPointervINTEL = (PFNGLVERTEXPOINTERVINTELPROC)glewGetProcAddress((const GLubyte*)\"glVertexPointervINTEL\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_INTEL_parallel_arrays */\n\n#ifdef GL_INTEL_performance_query\n\nstatic GLboolean _glewInit_GL_INTEL_performance_query ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBeginPerfQueryINTEL = (PFNGLBEGINPERFQUERYINTELPROC)glewGetProcAddress((const GLubyte*)\"glBeginPerfQueryINTEL\")) == NULL) || r;\n  r = ((glCreatePerfQueryINTEL = (PFNGLCREATEPERFQUERYINTELPROC)glewGetProcAddress((const GLubyte*)\"glCreatePerfQueryINTEL\")) == NULL) || r;\n  r = ((glDeletePerfQueryINTEL = (PFNGLDELETEPERFQUERYINTELPROC)glewGetProcAddress((const GLubyte*)\"glDeletePerfQueryINTEL\")) == NULL) || r;\n  r = ((glEndPerfQueryINTEL = (PFNGLENDPERFQUERYINTELPROC)glewGetProcAddress((const GLubyte*)\"glEndPerfQueryINTEL\")) == NULL) || r;\n  r = ((glGetFirstPerfQueryIdINTEL = (PFNGLGETFIRSTPERFQUERYIDINTELPROC)glewGetProcAddress((const GLubyte*)\"glGetFirstPerfQueryIdINTEL\")) == NULL) || r;\n  r = ((glGetNextPerfQueryIdINTEL = (PFNGLGETNEXTPERFQUERYIDINTELPROC)glewGetProcAddress((const GLubyte*)\"glGetNextPerfQueryIdINTEL\")) == NULL) || r;\n  r = ((glGetPerfCounterInfoINTEL = (PFNGLGETPERFCOUNTERINFOINTELPROC)glewGetProcAddress((const GLubyte*)\"glGetPerfCounterInfoINTEL\")) == NULL) || r;\n  r = ((glGetPerfQueryDataINTEL = (PFNGLGETPERFQUERYDATAINTELPROC)glewGetProcAddress((const GLubyte*)\"glGetPerfQueryDataINTEL\")) == NULL) || r;\n  r = ((glGetPerfQueryIdByNameINTEL = (PFNGLGETPERFQUERYIDBYNAMEINTELPROC)glewGetProcAddress((const GLubyte*)\"glGetPerfQueryIdByNameINTEL\")) == NULL) || r;\n  r = ((glGetPerfQueryInfoINTEL = (PFNGLGETPERFQUERYINFOINTELPROC)glewGetProcAddress((const GLubyte*)\"glGetPerfQueryInfoINTEL\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_INTEL_performance_query */\n\n#ifdef GL_INTEL_texture_scissor\n\nstatic GLboolean _glewInit_GL_INTEL_texture_scissor ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glTexScissorFuncINTEL = (PFNGLTEXSCISSORFUNCINTELPROC)glewGetProcAddress((const GLubyte*)\"glTexScissorFuncINTEL\")) == NULL) || r;\n  r = ((glTexScissorINTEL = (PFNGLTEXSCISSORINTELPROC)glewGetProcAddress((const GLubyte*)\"glTexScissorINTEL\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_INTEL_texture_scissor */\n\n#ifdef GL_KHR_blend_equation_advanced\n\nstatic GLboolean _glewInit_GL_KHR_blend_equation_advanced ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBlendBarrierKHR = (PFNGLBLENDBARRIERKHRPROC)glewGetProcAddress((const GLubyte*)\"glBlendBarrierKHR\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_KHR_blend_equation_advanced */\n\n#ifdef GL_KHR_debug\n\nstatic GLboolean _glewInit_GL_KHR_debug ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDebugMessageCallback = (PFNGLDEBUGMESSAGECALLBACKPROC)glewGetProcAddress((const GLubyte*)\"glDebugMessageCallback\")) == NULL) || r;\n  r = ((glDebugMessageControl = (PFNGLDEBUGMESSAGECONTROLPROC)glewGetProcAddress((const GLubyte*)\"glDebugMessageControl\")) == NULL) || r;\n  r = ((glDebugMessageInsert = (PFNGLDEBUGMESSAGEINSERTPROC)glewGetProcAddress((const GLubyte*)\"glDebugMessageInsert\")) == NULL) || r;\n  r = ((glGetDebugMessageLog = (PFNGLGETDEBUGMESSAGELOGPROC)glewGetProcAddress((const GLubyte*)\"glGetDebugMessageLog\")) == NULL) || r;\n  r = ((glGetObjectLabel = (PFNGLGETOBJECTLABELPROC)glewGetProcAddress((const GLubyte*)\"glGetObjectLabel\")) == NULL) || r;\n  r = ((glGetObjectPtrLabel = (PFNGLGETOBJECTPTRLABELPROC)glewGetProcAddress((const GLubyte*)\"glGetObjectPtrLabel\")) == NULL) || r;\n  r = ((glObjectLabel = (PFNGLOBJECTLABELPROC)glewGetProcAddress((const GLubyte*)\"glObjectLabel\")) == NULL) || r;\n  r = ((glObjectPtrLabel = (PFNGLOBJECTPTRLABELPROC)glewGetProcAddress((const GLubyte*)\"glObjectPtrLabel\")) == NULL) || r;\n  r = ((glPopDebugGroup = (PFNGLPOPDEBUGGROUPPROC)glewGetProcAddress((const GLubyte*)\"glPopDebugGroup\")) == NULL) || r;\n  r = ((glPushDebugGroup = (PFNGLPUSHDEBUGGROUPPROC)glewGetProcAddress((const GLubyte*)\"glPushDebugGroup\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_KHR_debug */\n\n#ifdef GL_KHR_robustness\n\nstatic GLboolean _glewInit_GL_KHR_robustness ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetnUniformfv = (PFNGLGETNUNIFORMFVPROC)glewGetProcAddress((const GLubyte*)\"glGetnUniformfv\")) == NULL) || r;\n  r = ((glGetnUniformiv = (PFNGLGETNUNIFORMIVPROC)glewGetProcAddress((const GLubyte*)\"glGetnUniformiv\")) == NULL) || r;\n  r = ((glGetnUniformuiv = (PFNGLGETNUNIFORMUIVPROC)glewGetProcAddress((const GLubyte*)\"glGetnUniformuiv\")) == NULL) || r;\n  r = ((glReadnPixels = (PFNGLREADNPIXELSPROC)glewGetProcAddress((const GLubyte*)\"glReadnPixels\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_KHR_robustness */\n\n#ifdef GL_KTX_buffer_region\n\nstatic GLboolean _glewInit_GL_KTX_buffer_region ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBufferRegionEnabled = (PFNGLBUFFERREGIONENABLEDPROC)glewGetProcAddress((const GLubyte*)\"glBufferRegionEnabled\")) == NULL) || r;\n  r = ((glDeleteBufferRegion = (PFNGLDELETEBUFFERREGIONPROC)glewGetProcAddress((const GLubyte*)\"glDeleteBufferRegion\")) == NULL) || r;\n  r = ((glDrawBufferRegion = (PFNGLDRAWBUFFERREGIONPROC)glewGetProcAddress((const GLubyte*)\"glDrawBufferRegion\")) == NULL) || r;\n  r = ((glNewBufferRegion = (PFNGLNEWBUFFERREGIONPROC)glewGetProcAddress((const GLubyte*)\"glNewBufferRegion\")) == NULL) || r;\n  r = ((glReadBufferRegion = (PFNGLREADBUFFERREGIONPROC)glewGetProcAddress((const GLubyte*)\"glReadBufferRegion\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_KTX_buffer_region */\n\n#ifdef GL_MESA_resize_buffers\n\nstatic GLboolean _glewInit_GL_MESA_resize_buffers ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glResizeBuffersMESA = (PFNGLRESIZEBUFFERSMESAPROC)glewGetProcAddress((const GLubyte*)\"glResizeBuffersMESA\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_MESA_resize_buffers */\n\n#ifdef GL_MESA_window_pos\n\nstatic GLboolean _glewInit_GL_MESA_window_pos ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glWindowPos2dMESA = (PFNGLWINDOWPOS2DMESAPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos2dMESA\")) == NULL) || r;\n  r = ((glWindowPos2dvMESA = (PFNGLWINDOWPOS2DVMESAPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos2dvMESA\")) == NULL) || r;\n  r = ((glWindowPos2fMESA = (PFNGLWINDOWPOS2FMESAPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos2fMESA\")) == NULL) || r;\n  r = ((glWindowPos2fvMESA = (PFNGLWINDOWPOS2FVMESAPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos2fvMESA\")) == NULL) || r;\n  r = ((glWindowPos2iMESA = (PFNGLWINDOWPOS2IMESAPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos2iMESA\")) == NULL) || r;\n  r = ((glWindowPos2ivMESA = (PFNGLWINDOWPOS2IVMESAPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos2ivMESA\")) == NULL) || r;\n  r = ((glWindowPos2sMESA = (PFNGLWINDOWPOS2SMESAPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos2sMESA\")) == NULL) || r;\n  r = ((glWindowPos2svMESA = (PFNGLWINDOWPOS2SVMESAPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos2svMESA\")) == NULL) || r;\n  r = ((glWindowPos3dMESA = (PFNGLWINDOWPOS3DMESAPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos3dMESA\")) == NULL) || r;\n  r = ((glWindowPos3dvMESA = (PFNGLWINDOWPOS3DVMESAPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos3dvMESA\")) == NULL) || r;\n  r = ((glWindowPos3fMESA = (PFNGLWINDOWPOS3FMESAPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos3fMESA\")) == NULL) || r;\n  r = ((glWindowPos3fvMESA = (PFNGLWINDOWPOS3FVMESAPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos3fvMESA\")) == NULL) || r;\n  r = ((glWindowPos3iMESA = (PFNGLWINDOWPOS3IMESAPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos3iMESA\")) == NULL) || r;\n  r = ((glWindowPos3ivMESA = (PFNGLWINDOWPOS3IVMESAPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos3ivMESA\")) == NULL) || r;\n  r = ((glWindowPos3sMESA = (PFNGLWINDOWPOS3SMESAPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos3sMESA\")) == NULL) || r;\n  r = ((glWindowPos3svMESA = (PFNGLWINDOWPOS3SVMESAPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos3svMESA\")) == NULL) || r;\n  r = ((glWindowPos4dMESA = (PFNGLWINDOWPOS4DMESAPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos4dMESA\")) == NULL) || r;\n  r = ((glWindowPos4dvMESA = (PFNGLWINDOWPOS4DVMESAPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos4dvMESA\")) == NULL) || r;\n  r = ((glWindowPos4fMESA = (PFNGLWINDOWPOS4FMESAPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos4fMESA\")) == NULL) || r;\n  r = ((glWindowPos4fvMESA = (PFNGLWINDOWPOS4FVMESAPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos4fvMESA\")) == NULL) || r;\n  r = ((glWindowPos4iMESA = (PFNGLWINDOWPOS4IMESAPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos4iMESA\")) == NULL) || r;\n  r = ((glWindowPos4ivMESA = (PFNGLWINDOWPOS4IVMESAPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos4ivMESA\")) == NULL) || r;\n  r = ((glWindowPos4sMESA = (PFNGLWINDOWPOS4SMESAPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos4sMESA\")) == NULL) || r;\n  r = ((glWindowPos4svMESA = (PFNGLWINDOWPOS4SVMESAPROC)glewGetProcAddress((const GLubyte*)\"glWindowPos4svMESA\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_MESA_window_pos */\n\n#ifdef GL_NVX_conditional_render\n\nstatic GLboolean _glewInit_GL_NVX_conditional_render ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBeginConditionalRenderNVX = (PFNGLBEGINCONDITIONALRENDERNVXPROC)glewGetProcAddress((const GLubyte*)\"glBeginConditionalRenderNVX\")) == NULL) || r;\n  r = ((glEndConditionalRenderNVX = (PFNGLENDCONDITIONALRENDERNVXPROC)glewGetProcAddress((const GLubyte*)\"glEndConditionalRenderNVX\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NVX_conditional_render */\n\n#ifdef GL_NVX_linked_gpu_multicast\n\nstatic GLboolean _glewInit_GL_NVX_linked_gpu_multicast ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glLGPUCopyImageSubDataNVX = (PFNGLLGPUCOPYIMAGESUBDATANVXPROC)glewGetProcAddress((const GLubyte*)\"glLGPUCopyImageSubDataNVX\")) == NULL) || r;\n  r = ((glLGPUInterlockNVX = (PFNGLLGPUINTERLOCKNVXPROC)glewGetProcAddress((const GLubyte*)\"glLGPUInterlockNVX\")) == NULL) || r;\n  r = ((glLGPUNamedBufferSubDataNVX = (PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC)glewGetProcAddress((const GLubyte*)\"glLGPUNamedBufferSubDataNVX\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NVX_linked_gpu_multicast */\n\n#ifdef GL_NV_bindless_multi_draw_indirect\n\nstatic GLboolean _glewInit_GL_NV_bindless_multi_draw_indirect ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glMultiDrawArraysIndirectBindlessNV = (PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC)glewGetProcAddress((const GLubyte*)\"glMultiDrawArraysIndirectBindlessNV\")) == NULL) || r;\n  r = ((glMultiDrawElementsIndirectBindlessNV = (PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC)glewGetProcAddress((const GLubyte*)\"glMultiDrawElementsIndirectBindlessNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_bindless_multi_draw_indirect */\n\n#ifdef GL_NV_bindless_multi_draw_indirect_count\n\nstatic GLboolean _glewInit_GL_NV_bindless_multi_draw_indirect_count ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glMultiDrawArraysIndirectBindlessCountNV = (PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC)glewGetProcAddress((const GLubyte*)\"glMultiDrawArraysIndirectBindlessCountNV\")) == NULL) || r;\n  r = ((glMultiDrawElementsIndirectBindlessCountNV = (PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC)glewGetProcAddress((const GLubyte*)\"glMultiDrawElementsIndirectBindlessCountNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_bindless_multi_draw_indirect_count */\n\n#ifdef GL_NV_bindless_texture\n\nstatic GLboolean _glewInit_GL_NV_bindless_texture ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetImageHandleNV = (PFNGLGETIMAGEHANDLENVPROC)glewGetProcAddress((const GLubyte*)\"glGetImageHandleNV\")) == NULL) || r;\n  r = ((glGetTextureHandleNV = (PFNGLGETTEXTUREHANDLENVPROC)glewGetProcAddress((const GLubyte*)\"glGetTextureHandleNV\")) == NULL) || r;\n  r = ((glGetTextureSamplerHandleNV = (PFNGLGETTEXTURESAMPLERHANDLENVPROC)glewGetProcAddress((const GLubyte*)\"glGetTextureSamplerHandleNV\")) == NULL) || r;\n  r = ((glIsImageHandleResidentNV = (PFNGLISIMAGEHANDLERESIDENTNVPROC)glewGetProcAddress((const GLubyte*)\"glIsImageHandleResidentNV\")) == NULL) || r;\n  r = ((glIsTextureHandleResidentNV = (PFNGLISTEXTUREHANDLERESIDENTNVPROC)glewGetProcAddress((const GLubyte*)\"glIsTextureHandleResidentNV\")) == NULL) || r;\n  r = ((glMakeImageHandleNonResidentNV = (PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC)glewGetProcAddress((const GLubyte*)\"glMakeImageHandleNonResidentNV\")) == NULL) || r;\n  r = ((glMakeImageHandleResidentNV = (PFNGLMAKEIMAGEHANDLERESIDENTNVPROC)glewGetProcAddress((const GLubyte*)\"glMakeImageHandleResidentNV\")) == NULL) || r;\n  r = ((glMakeTextureHandleNonResidentNV = (PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC)glewGetProcAddress((const GLubyte*)\"glMakeTextureHandleNonResidentNV\")) == NULL) || r;\n  r = ((glMakeTextureHandleResidentNV = (PFNGLMAKETEXTUREHANDLERESIDENTNVPROC)glewGetProcAddress((const GLubyte*)\"glMakeTextureHandleResidentNV\")) == NULL) || r;\n  r = ((glProgramUniformHandleui64NV = (PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformHandleui64NV\")) == NULL) || r;\n  r = ((glProgramUniformHandleui64vNV = (PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformHandleui64vNV\")) == NULL) || r;\n  r = ((glUniformHandleui64NV = (PFNGLUNIFORMHANDLEUI64NVPROC)glewGetProcAddress((const GLubyte*)\"glUniformHandleui64NV\")) == NULL) || r;\n  r = ((glUniformHandleui64vNV = (PFNGLUNIFORMHANDLEUI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glUniformHandleui64vNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_bindless_texture */\n\n#ifdef GL_NV_blend_equation_advanced\n\nstatic GLboolean _glewInit_GL_NV_blend_equation_advanced ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBlendBarrierNV = (PFNGLBLENDBARRIERNVPROC)glewGetProcAddress((const GLubyte*)\"glBlendBarrierNV\")) == NULL) || r;\n  r = ((glBlendParameteriNV = (PFNGLBLENDPARAMETERINVPROC)glewGetProcAddress((const GLubyte*)\"glBlendParameteriNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_blend_equation_advanced */\n\n#ifdef GL_NV_clip_space_w_scaling\n\nstatic GLboolean _glewInit_GL_NV_clip_space_w_scaling ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glViewportPositionWScaleNV = (PFNGLVIEWPORTPOSITIONWSCALENVPROC)glewGetProcAddress((const GLubyte*)\"glViewportPositionWScaleNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_clip_space_w_scaling */\n\n#ifdef GL_NV_command_list\n\nstatic GLboolean _glewInit_GL_NV_command_list ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glCallCommandListNV = (PFNGLCALLCOMMANDLISTNVPROC)glewGetProcAddress((const GLubyte*)\"glCallCommandListNV\")) == NULL) || r;\n  r = ((glCommandListSegmentsNV = (PFNGLCOMMANDLISTSEGMENTSNVPROC)glewGetProcAddress((const GLubyte*)\"glCommandListSegmentsNV\")) == NULL) || r;\n  r = ((glCompileCommandListNV = (PFNGLCOMPILECOMMANDLISTNVPROC)glewGetProcAddress((const GLubyte*)\"glCompileCommandListNV\")) == NULL) || r;\n  r = ((glCreateCommandListsNV = (PFNGLCREATECOMMANDLISTSNVPROC)glewGetProcAddress((const GLubyte*)\"glCreateCommandListsNV\")) == NULL) || r;\n  r = ((glCreateStatesNV = (PFNGLCREATESTATESNVPROC)glewGetProcAddress((const GLubyte*)\"glCreateStatesNV\")) == NULL) || r;\n  r = ((glDeleteCommandListsNV = (PFNGLDELETECOMMANDLISTSNVPROC)glewGetProcAddress((const GLubyte*)\"glDeleteCommandListsNV\")) == NULL) || r;\n  r = ((glDeleteStatesNV = (PFNGLDELETESTATESNVPROC)glewGetProcAddress((const GLubyte*)\"glDeleteStatesNV\")) == NULL) || r;\n  r = ((glDrawCommandsAddressNV = (PFNGLDRAWCOMMANDSADDRESSNVPROC)glewGetProcAddress((const GLubyte*)\"glDrawCommandsAddressNV\")) == NULL) || r;\n  r = ((glDrawCommandsNV = (PFNGLDRAWCOMMANDSNVPROC)glewGetProcAddress((const GLubyte*)\"glDrawCommandsNV\")) == NULL) || r;\n  r = ((glDrawCommandsStatesAddressNV = (PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC)glewGetProcAddress((const GLubyte*)\"glDrawCommandsStatesAddressNV\")) == NULL) || r;\n  r = ((glDrawCommandsStatesNV = (PFNGLDRAWCOMMANDSSTATESNVPROC)glewGetProcAddress((const GLubyte*)\"glDrawCommandsStatesNV\")) == NULL) || r;\n  r = ((glGetCommandHeaderNV = (PFNGLGETCOMMANDHEADERNVPROC)glewGetProcAddress((const GLubyte*)\"glGetCommandHeaderNV\")) == NULL) || r;\n  r = ((glGetStageIndexNV = (PFNGLGETSTAGEINDEXNVPROC)glewGetProcAddress((const GLubyte*)\"glGetStageIndexNV\")) == NULL) || r;\n  r = ((glIsCommandListNV = (PFNGLISCOMMANDLISTNVPROC)glewGetProcAddress((const GLubyte*)\"glIsCommandListNV\")) == NULL) || r;\n  r = ((glIsStateNV = (PFNGLISSTATENVPROC)glewGetProcAddress((const GLubyte*)\"glIsStateNV\")) == NULL) || r;\n  r = ((glListDrawCommandsStatesClientNV = (PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC)glewGetProcAddress((const GLubyte*)\"glListDrawCommandsStatesClientNV\")) == NULL) || r;\n  r = ((glStateCaptureNV = (PFNGLSTATECAPTURENVPROC)glewGetProcAddress((const GLubyte*)\"glStateCaptureNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_command_list */\n\n#ifdef GL_NV_conditional_render\n\nstatic GLboolean _glewInit_GL_NV_conditional_render ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBeginConditionalRenderNV = (PFNGLBEGINCONDITIONALRENDERNVPROC)glewGetProcAddress((const GLubyte*)\"glBeginConditionalRenderNV\")) == NULL) || r;\n  r = ((glEndConditionalRenderNV = (PFNGLENDCONDITIONALRENDERNVPROC)glewGetProcAddress((const GLubyte*)\"glEndConditionalRenderNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_conditional_render */\n\n#ifdef GL_NV_conservative_raster\n\nstatic GLboolean _glewInit_GL_NV_conservative_raster ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glSubpixelPrecisionBiasNV = (PFNGLSUBPIXELPRECISIONBIASNVPROC)glewGetProcAddress((const GLubyte*)\"glSubpixelPrecisionBiasNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_conservative_raster */\n\n#ifdef GL_NV_conservative_raster_dilate\n\nstatic GLboolean _glewInit_GL_NV_conservative_raster_dilate ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glConservativeRasterParameterfNV = (PFNGLCONSERVATIVERASTERPARAMETERFNVPROC)glewGetProcAddress((const GLubyte*)\"glConservativeRasterParameterfNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_conservative_raster_dilate */\n\n#ifdef GL_NV_conservative_raster_pre_snap_triangles\n\nstatic GLboolean _glewInit_GL_NV_conservative_raster_pre_snap_triangles ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glConservativeRasterParameteriNV = (PFNGLCONSERVATIVERASTERPARAMETERINVPROC)glewGetProcAddress((const GLubyte*)\"glConservativeRasterParameteriNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_conservative_raster_pre_snap_triangles */\n\n#ifdef GL_NV_copy_image\n\nstatic GLboolean _glewInit_GL_NV_copy_image ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glCopyImageSubDataNV = (PFNGLCOPYIMAGESUBDATANVPROC)glewGetProcAddress((const GLubyte*)\"glCopyImageSubDataNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_copy_image */\n\n#ifdef GL_NV_depth_buffer_float\n\nstatic GLboolean _glewInit_GL_NV_depth_buffer_float ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glClearDepthdNV = (PFNGLCLEARDEPTHDNVPROC)glewGetProcAddress((const GLubyte*)\"glClearDepthdNV\")) == NULL) || r;\n  r = ((glDepthBoundsdNV = (PFNGLDEPTHBOUNDSDNVPROC)glewGetProcAddress((const GLubyte*)\"glDepthBoundsdNV\")) == NULL) || r;\n  r = ((glDepthRangedNV = (PFNGLDEPTHRANGEDNVPROC)glewGetProcAddress((const GLubyte*)\"glDepthRangedNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_depth_buffer_float */\n\n#ifdef GL_NV_draw_texture\n\nstatic GLboolean _glewInit_GL_NV_draw_texture ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDrawTextureNV = (PFNGLDRAWTEXTURENVPROC)glewGetProcAddress((const GLubyte*)\"glDrawTextureNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_draw_texture */\n\n#ifdef GL_NV_draw_vulkan_image\n\nstatic GLboolean _glewInit_GL_NV_draw_vulkan_image ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDrawVkImageNV = (PFNGLDRAWVKIMAGENVPROC)glewGetProcAddress((const GLubyte*)\"glDrawVkImageNV\")) == NULL) || r;\n  r = ((glGetVkProcAddrNV = (PFNGLGETVKPROCADDRNVPROC)glewGetProcAddress((const GLubyte*)\"glGetVkProcAddrNV\")) == NULL) || r;\n  r = ((glSignalVkFenceNV = (PFNGLSIGNALVKFENCENVPROC)glewGetProcAddress((const GLubyte*)\"glSignalVkFenceNV\")) == NULL) || r;\n  r = ((glSignalVkSemaphoreNV = (PFNGLSIGNALVKSEMAPHORENVPROC)glewGetProcAddress((const GLubyte*)\"glSignalVkSemaphoreNV\")) == NULL) || r;\n  r = ((glWaitVkSemaphoreNV = (PFNGLWAITVKSEMAPHORENVPROC)glewGetProcAddress((const GLubyte*)\"glWaitVkSemaphoreNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_draw_vulkan_image */\n\n#ifdef GL_NV_evaluators\n\nstatic GLboolean _glewInit_GL_NV_evaluators ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glEvalMapsNV = (PFNGLEVALMAPSNVPROC)glewGetProcAddress((const GLubyte*)\"glEvalMapsNV\")) == NULL) || r;\n  r = ((glGetMapAttribParameterfvNV = (PFNGLGETMAPATTRIBPARAMETERFVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetMapAttribParameterfvNV\")) == NULL) || r;\n  r = ((glGetMapAttribParameterivNV = (PFNGLGETMAPATTRIBPARAMETERIVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetMapAttribParameterivNV\")) == NULL) || r;\n  r = ((glGetMapControlPointsNV = (PFNGLGETMAPCONTROLPOINTSNVPROC)glewGetProcAddress((const GLubyte*)\"glGetMapControlPointsNV\")) == NULL) || r;\n  r = ((glGetMapParameterfvNV = (PFNGLGETMAPPARAMETERFVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetMapParameterfvNV\")) == NULL) || r;\n  r = ((glGetMapParameterivNV = (PFNGLGETMAPPARAMETERIVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetMapParameterivNV\")) == NULL) || r;\n  r = ((glMapControlPointsNV = (PFNGLMAPCONTROLPOINTSNVPROC)glewGetProcAddress((const GLubyte*)\"glMapControlPointsNV\")) == NULL) || r;\n  r = ((glMapParameterfvNV = (PFNGLMAPPARAMETERFVNVPROC)glewGetProcAddress((const GLubyte*)\"glMapParameterfvNV\")) == NULL) || r;\n  r = ((glMapParameterivNV = (PFNGLMAPPARAMETERIVNVPROC)glewGetProcAddress((const GLubyte*)\"glMapParameterivNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_evaluators */\n\n#ifdef GL_NV_explicit_multisample\n\nstatic GLboolean _glewInit_GL_NV_explicit_multisample ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetMultisamplefvNV = (PFNGLGETMULTISAMPLEFVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetMultisamplefvNV\")) == NULL) || r;\n  r = ((glSampleMaskIndexedNV = (PFNGLSAMPLEMASKINDEXEDNVPROC)glewGetProcAddress((const GLubyte*)\"glSampleMaskIndexedNV\")) == NULL) || r;\n  r = ((glTexRenderbufferNV = (PFNGLTEXRENDERBUFFERNVPROC)glewGetProcAddress((const GLubyte*)\"glTexRenderbufferNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_explicit_multisample */\n\n#ifdef GL_NV_fence\n\nstatic GLboolean _glewInit_GL_NV_fence ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDeleteFencesNV = (PFNGLDELETEFENCESNVPROC)glewGetProcAddress((const GLubyte*)\"glDeleteFencesNV\")) == NULL) || r;\n  r = ((glFinishFenceNV = (PFNGLFINISHFENCENVPROC)glewGetProcAddress((const GLubyte*)\"glFinishFenceNV\")) == NULL) || r;\n  r = ((glGenFencesNV = (PFNGLGENFENCESNVPROC)glewGetProcAddress((const GLubyte*)\"glGenFencesNV\")) == NULL) || r;\n  r = ((glGetFenceivNV = (PFNGLGETFENCEIVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetFenceivNV\")) == NULL) || r;\n  r = ((glIsFenceNV = (PFNGLISFENCENVPROC)glewGetProcAddress((const GLubyte*)\"glIsFenceNV\")) == NULL) || r;\n  r = ((glSetFenceNV = (PFNGLSETFENCENVPROC)glewGetProcAddress((const GLubyte*)\"glSetFenceNV\")) == NULL) || r;\n  r = ((glTestFenceNV = (PFNGLTESTFENCENVPROC)glewGetProcAddress((const GLubyte*)\"glTestFenceNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_fence */\n\n#ifdef GL_NV_fragment_coverage_to_color\n\nstatic GLboolean _glewInit_GL_NV_fragment_coverage_to_color ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glFragmentCoverageColorNV = (PFNGLFRAGMENTCOVERAGECOLORNVPROC)glewGetProcAddress((const GLubyte*)\"glFragmentCoverageColorNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_fragment_coverage_to_color */\n\n#ifdef GL_NV_fragment_program\n\nstatic GLboolean _glewInit_GL_NV_fragment_program ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetProgramNamedParameterdvNV = (PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramNamedParameterdvNV\")) == NULL) || r;\n  r = ((glGetProgramNamedParameterfvNV = (PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramNamedParameterfvNV\")) == NULL) || r;\n  r = ((glProgramNamedParameter4dNV = (PFNGLPROGRAMNAMEDPARAMETER4DNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramNamedParameter4dNV\")) == NULL) || r;\n  r = ((glProgramNamedParameter4dvNV = (PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramNamedParameter4dvNV\")) == NULL) || r;\n  r = ((glProgramNamedParameter4fNV = (PFNGLPROGRAMNAMEDPARAMETER4FNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramNamedParameter4fNV\")) == NULL) || r;\n  r = ((glProgramNamedParameter4fvNV = (PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramNamedParameter4fvNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_fragment_program */\n\n#ifdef GL_NV_framebuffer_multisample_coverage\n\nstatic GLboolean _glewInit_GL_NV_framebuffer_multisample_coverage ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glRenderbufferStorageMultisampleCoverageNV = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC)glewGetProcAddress((const GLubyte*)\"glRenderbufferStorageMultisampleCoverageNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_framebuffer_multisample_coverage */\n\n#ifdef GL_NV_geometry_program4\n\nstatic GLboolean _glewInit_GL_NV_geometry_program4 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glProgramVertexLimitNV = (PFNGLPROGRAMVERTEXLIMITNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramVertexLimitNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_geometry_program4 */\n\n#ifdef GL_NV_gpu_multicast\n\nstatic GLboolean _glewInit_GL_NV_gpu_multicast ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glMulticastBarrierNV = (PFNGLMULTICASTBARRIERNVPROC)glewGetProcAddress((const GLubyte*)\"glMulticastBarrierNV\")) == NULL) || r;\n  r = ((glMulticastBlitFramebufferNV = (PFNGLMULTICASTBLITFRAMEBUFFERNVPROC)glewGetProcAddress((const GLubyte*)\"glMulticastBlitFramebufferNV\")) == NULL) || r;\n  r = ((glMulticastBufferSubDataNV = (PFNGLMULTICASTBUFFERSUBDATANVPROC)glewGetProcAddress((const GLubyte*)\"glMulticastBufferSubDataNV\")) == NULL) || r;\n  r = ((glMulticastCopyBufferSubDataNV = (PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC)glewGetProcAddress((const GLubyte*)\"glMulticastCopyBufferSubDataNV\")) == NULL) || r;\n  r = ((glMulticastCopyImageSubDataNV = (PFNGLMULTICASTCOPYIMAGESUBDATANVPROC)glewGetProcAddress((const GLubyte*)\"glMulticastCopyImageSubDataNV\")) == NULL) || r;\n  r = ((glMulticastFramebufferSampleLocationsfvNV = (PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC)glewGetProcAddress((const GLubyte*)\"glMulticastFramebufferSampleLocationsfvNV\")) == NULL) || r;\n  r = ((glMulticastGetQueryObjecti64vNV = (PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glMulticastGetQueryObjecti64vNV\")) == NULL) || r;\n  r = ((glMulticastGetQueryObjectivNV = (PFNGLMULTICASTGETQUERYOBJECTIVNVPROC)glewGetProcAddress((const GLubyte*)\"glMulticastGetQueryObjectivNV\")) == NULL) || r;\n  r = ((glMulticastGetQueryObjectui64vNV = (PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glMulticastGetQueryObjectui64vNV\")) == NULL) || r;\n  r = ((glMulticastGetQueryObjectuivNV = (PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC)glewGetProcAddress((const GLubyte*)\"glMulticastGetQueryObjectuivNV\")) == NULL) || r;\n  r = ((glMulticastWaitSyncNV = (PFNGLMULTICASTWAITSYNCNVPROC)glewGetProcAddress((const GLubyte*)\"glMulticastWaitSyncNV\")) == NULL) || r;\n  r = ((glRenderGpuMaskNV = (PFNGLRENDERGPUMASKNVPROC)glewGetProcAddress((const GLubyte*)\"glRenderGpuMaskNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_gpu_multicast */\n\n#ifdef GL_NV_gpu_program4\n\nstatic GLboolean _glewInit_GL_NV_gpu_program4 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glProgramEnvParameterI4iNV = (PFNGLPROGRAMENVPARAMETERI4INVPROC)glewGetProcAddress((const GLubyte*)\"glProgramEnvParameterI4iNV\")) == NULL) || r;\n  r = ((glProgramEnvParameterI4ivNV = (PFNGLPROGRAMENVPARAMETERI4IVNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramEnvParameterI4ivNV\")) == NULL) || r;\n  r = ((glProgramEnvParameterI4uiNV = (PFNGLPROGRAMENVPARAMETERI4UINVPROC)glewGetProcAddress((const GLubyte*)\"glProgramEnvParameterI4uiNV\")) == NULL) || r;\n  r = ((glProgramEnvParameterI4uivNV = (PFNGLPROGRAMENVPARAMETERI4UIVNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramEnvParameterI4uivNV\")) == NULL) || r;\n  r = ((glProgramEnvParametersI4ivNV = (PFNGLPROGRAMENVPARAMETERSI4IVNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramEnvParametersI4ivNV\")) == NULL) || r;\n  r = ((glProgramEnvParametersI4uivNV = (PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramEnvParametersI4uivNV\")) == NULL) || r;\n  r = ((glProgramLocalParameterI4iNV = (PFNGLPROGRAMLOCALPARAMETERI4INVPROC)glewGetProcAddress((const GLubyte*)\"glProgramLocalParameterI4iNV\")) == NULL) || r;\n  r = ((glProgramLocalParameterI4ivNV = (PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramLocalParameterI4ivNV\")) == NULL) || r;\n  r = ((glProgramLocalParameterI4uiNV = (PFNGLPROGRAMLOCALPARAMETERI4UINVPROC)glewGetProcAddress((const GLubyte*)\"glProgramLocalParameterI4uiNV\")) == NULL) || r;\n  r = ((glProgramLocalParameterI4uivNV = (PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramLocalParameterI4uivNV\")) == NULL) || r;\n  r = ((glProgramLocalParametersI4ivNV = (PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramLocalParametersI4ivNV\")) == NULL) || r;\n  r = ((glProgramLocalParametersI4uivNV = (PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramLocalParametersI4uivNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_gpu_program4 */\n\n#ifdef GL_NV_gpu_shader5\n\nstatic GLboolean _glewInit_GL_NV_gpu_shader5 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetUniformi64vNV = (PFNGLGETUNIFORMI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glGetUniformi64vNV\")) == NULL) || r;\n  r = ((glGetUniformui64vNV = (PFNGLGETUNIFORMUI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glGetUniformui64vNV\")) == NULL) || r;\n  r = ((glProgramUniform1i64NV = (PFNGLPROGRAMUNIFORM1I64NVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform1i64NV\")) == NULL) || r;\n  r = ((glProgramUniform1i64vNV = (PFNGLPROGRAMUNIFORM1I64VNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform1i64vNV\")) == NULL) || r;\n  r = ((glProgramUniform1ui64NV = (PFNGLPROGRAMUNIFORM1UI64NVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform1ui64NV\")) == NULL) || r;\n  r = ((glProgramUniform1ui64vNV = (PFNGLPROGRAMUNIFORM1UI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform1ui64vNV\")) == NULL) || r;\n  r = ((glProgramUniform2i64NV = (PFNGLPROGRAMUNIFORM2I64NVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform2i64NV\")) == NULL) || r;\n  r = ((glProgramUniform2i64vNV = (PFNGLPROGRAMUNIFORM2I64VNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform2i64vNV\")) == NULL) || r;\n  r = ((glProgramUniform2ui64NV = (PFNGLPROGRAMUNIFORM2UI64NVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform2ui64NV\")) == NULL) || r;\n  r = ((glProgramUniform2ui64vNV = (PFNGLPROGRAMUNIFORM2UI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform2ui64vNV\")) == NULL) || r;\n  r = ((glProgramUniform3i64NV = (PFNGLPROGRAMUNIFORM3I64NVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform3i64NV\")) == NULL) || r;\n  r = ((glProgramUniform3i64vNV = (PFNGLPROGRAMUNIFORM3I64VNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform3i64vNV\")) == NULL) || r;\n  r = ((glProgramUniform3ui64NV = (PFNGLPROGRAMUNIFORM3UI64NVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform3ui64NV\")) == NULL) || r;\n  r = ((glProgramUniform3ui64vNV = (PFNGLPROGRAMUNIFORM3UI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform3ui64vNV\")) == NULL) || r;\n  r = ((glProgramUniform4i64NV = (PFNGLPROGRAMUNIFORM4I64NVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform4i64NV\")) == NULL) || r;\n  r = ((glProgramUniform4i64vNV = (PFNGLPROGRAMUNIFORM4I64VNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform4i64vNV\")) == NULL) || r;\n  r = ((glProgramUniform4ui64NV = (PFNGLPROGRAMUNIFORM4UI64NVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform4ui64NV\")) == NULL) || r;\n  r = ((glProgramUniform4ui64vNV = (PFNGLPROGRAMUNIFORM4UI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniform4ui64vNV\")) == NULL) || r;\n  r = ((glUniform1i64NV = (PFNGLUNIFORM1I64NVPROC)glewGetProcAddress((const GLubyte*)\"glUniform1i64NV\")) == NULL) || r;\n  r = ((glUniform1i64vNV = (PFNGLUNIFORM1I64VNVPROC)glewGetProcAddress((const GLubyte*)\"glUniform1i64vNV\")) == NULL) || r;\n  r = ((glUniform1ui64NV = (PFNGLUNIFORM1UI64NVPROC)glewGetProcAddress((const GLubyte*)\"glUniform1ui64NV\")) == NULL) || r;\n  r = ((glUniform1ui64vNV = (PFNGLUNIFORM1UI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glUniform1ui64vNV\")) == NULL) || r;\n  r = ((glUniform2i64NV = (PFNGLUNIFORM2I64NVPROC)glewGetProcAddress((const GLubyte*)\"glUniform2i64NV\")) == NULL) || r;\n  r = ((glUniform2i64vNV = (PFNGLUNIFORM2I64VNVPROC)glewGetProcAddress((const GLubyte*)\"glUniform2i64vNV\")) == NULL) || r;\n  r = ((glUniform2ui64NV = (PFNGLUNIFORM2UI64NVPROC)glewGetProcAddress((const GLubyte*)\"glUniform2ui64NV\")) == NULL) || r;\n  r = ((glUniform2ui64vNV = (PFNGLUNIFORM2UI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glUniform2ui64vNV\")) == NULL) || r;\n  r = ((glUniform3i64NV = (PFNGLUNIFORM3I64NVPROC)glewGetProcAddress((const GLubyte*)\"glUniform3i64NV\")) == NULL) || r;\n  r = ((glUniform3i64vNV = (PFNGLUNIFORM3I64VNVPROC)glewGetProcAddress((const GLubyte*)\"glUniform3i64vNV\")) == NULL) || r;\n  r = ((glUniform3ui64NV = (PFNGLUNIFORM3UI64NVPROC)glewGetProcAddress((const GLubyte*)\"glUniform3ui64NV\")) == NULL) || r;\n  r = ((glUniform3ui64vNV = (PFNGLUNIFORM3UI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glUniform3ui64vNV\")) == NULL) || r;\n  r = ((glUniform4i64NV = (PFNGLUNIFORM4I64NVPROC)glewGetProcAddress((const GLubyte*)\"glUniform4i64NV\")) == NULL) || r;\n  r = ((glUniform4i64vNV = (PFNGLUNIFORM4I64VNVPROC)glewGetProcAddress((const GLubyte*)\"glUniform4i64vNV\")) == NULL) || r;\n  r = ((glUniform4ui64NV = (PFNGLUNIFORM4UI64NVPROC)glewGetProcAddress((const GLubyte*)\"glUniform4ui64NV\")) == NULL) || r;\n  r = ((glUniform4ui64vNV = (PFNGLUNIFORM4UI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glUniform4ui64vNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_gpu_shader5 */\n\n#ifdef GL_NV_half_float\n\nstatic GLboolean _glewInit_GL_NV_half_float ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glColor3hNV = (PFNGLCOLOR3HNVPROC)glewGetProcAddress((const GLubyte*)\"glColor3hNV\")) == NULL) || r;\n  r = ((glColor3hvNV = (PFNGLCOLOR3HVNVPROC)glewGetProcAddress((const GLubyte*)\"glColor3hvNV\")) == NULL) || r;\n  r = ((glColor4hNV = (PFNGLCOLOR4HNVPROC)glewGetProcAddress((const GLubyte*)\"glColor4hNV\")) == NULL) || r;\n  r = ((glColor4hvNV = (PFNGLCOLOR4HVNVPROC)glewGetProcAddress((const GLubyte*)\"glColor4hvNV\")) == NULL) || r;\n  r = ((glFogCoordhNV = (PFNGLFOGCOORDHNVPROC)glewGetProcAddress((const GLubyte*)\"glFogCoordhNV\")) == NULL) || r;\n  r = ((glFogCoordhvNV = (PFNGLFOGCOORDHVNVPROC)glewGetProcAddress((const GLubyte*)\"glFogCoordhvNV\")) == NULL) || r;\n  r = ((glMultiTexCoord1hNV = (PFNGLMULTITEXCOORD1HNVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord1hNV\")) == NULL) || r;\n  r = ((glMultiTexCoord1hvNV = (PFNGLMULTITEXCOORD1HVNVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord1hvNV\")) == NULL) || r;\n  r = ((glMultiTexCoord2hNV = (PFNGLMULTITEXCOORD2HNVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord2hNV\")) == NULL) || r;\n  r = ((glMultiTexCoord2hvNV = (PFNGLMULTITEXCOORD2HVNVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord2hvNV\")) == NULL) || r;\n  r = ((glMultiTexCoord3hNV = (PFNGLMULTITEXCOORD3HNVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord3hNV\")) == NULL) || r;\n  r = ((glMultiTexCoord3hvNV = (PFNGLMULTITEXCOORD3HVNVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord3hvNV\")) == NULL) || r;\n  r = ((glMultiTexCoord4hNV = (PFNGLMULTITEXCOORD4HNVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord4hNV\")) == NULL) || r;\n  r = ((glMultiTexCoord4hvNV = (PFNGLMULTITEXCOORD4HVNVPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord4hvNV\")) == NULL) || r;\n  r = ((glNormal3hNV = (PFNGLNORMAL3HNVPROC)glewGetProcAddress((const GLubyte*)\"glNormal3hNV\")) == NULL) || r;\n  r = ((glNormal3hvNV = (PFNGLNORMAL3HVNVPROC)glewGetProcAddress((const GLubyte*)\"glNormal3hvNV\")) == NULL) || r;\n  r = ((glSecondaryColor3hNV = (PFNGLSECONDARYCOLOR3HNVPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3hNV\")) == NULL) || r;\n  r = ((glSecondaryColor3hvNV = (PFNGLSECONDARYCOLOR3HVNVPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColor3hvNV\")) == NULL) || r;\n  r = ((glTexCoord1hNV = (PFNGLTEXCOORD1HNVPROC)glewGetProcAddress((const GLubyte*)\"glTexCoord1hNV\")) == NULL) || r;\n  r = ((glTexCoord1hvNV = (PFNGLTEXCOORD1HVNVPROC)glewGetProcAddress((const GLubyte*)\"glTexCoord1hvNV\")) == NULL) || r;\n  r = ((glTexCoord2hNV = (PFNGLTEXCOORD2HNVPROC)glewGetProcAddress((const GLubyte*)\"glTexCoord2hNV\")) == NULL) || r;\n  r = ((glTexCoord2hvNV = (PFNGLTEXCOORD2HVNVPROC)glewGetProcAddress((const GLubyte*)\"glTexCoord2hvNV\")) == NULL) || r;\n  r = ((glTexCoord3hNV = (PFNGLTEXCOORD3HNVPROC)glewGetProcAddress((const GLubyte*)\"glTexCoord3hNV\")) == NULL) || r;\n  r = ((glTexCoord3hvNV = (PFNGLTEXCOORD3HVNVPROC)glewGetProcAddress((const GLubyte*)\"glTexCoord3hvNV\")) == NULL) || r;\n  r = ((glTexCoord4hNV = (PFNGLTEXCOORD4HNVPROC)glewGetProcAddress((const GLubyte*)\"glTexCoord4hNV\")) == NULL) || r;\n  r = ((glTexCoord4hvNV = (PFNGLTEXCOORD4HVNVPROC)glewGetProcAddress((const GLubyte*)\"glTexCoord4hvNV\")) == NULL) || r;\n  r = ((glVertex2hNV = (PFNGLVERTEX2HNVPROC)glewGetProcAddress((const GLubyte*)\"glVertex2hNV\")) == NULL) || r;\n  r = ((glVertex2hvNV = (PFNGLVERTEX2HVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertex2hvNV\")) == NULL) || r;\n  r = ((glVertex3hNV = (PFNGLVERTEX3HNVPROC)glewGetProcAddress((const GLubyte*)\"glVertex3hNV\")) == NULL) || r;\n  r = ((glVertex3hvNV = (PFNGLVERTEX3HVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertex3hvNV\")) == NULL) || r;\n  r = ((glVertex4hNV = (PFNGLVERTEX4HNVPROC)glewGetProcAddress((const GLubyte*)\"glVertex4hNV\")) == NULL) || r;\n  r = ((glVertex4hvNV = (PFNGLVERTEX4HVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertex4hvNV\")) == NULL) || r;\n  r = ((glVertexAttrib1hNV = (PFNGLVERTEXATTRIB1HNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib1hNV\")) == NULL) || r;\n  r = ((glVertexAttrib1hvNV = (PFNGLVERTEXATTRIB1HVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib1hvNV\")) == NULL) || r;\n  r = ((glVertexAttrib2hNV = (PFNGLVERTEXATTRIB2HNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib2hNV\")) == NULL) || r;\n  r = ((glVertexAttrib2hvNV = (PFNGLVERTEXATTRIB2HVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib2hvNV\")) == NULL) || r;\n  r = ((glVertexAttrib3hNV = (PFNGLVERTEXATTRIB3HNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib3hNV\")) == NULL) || r;\n  r = ((glVertexAttrib3hvNV = (PFNGLVERTEXATTRIB3HVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib3hvNV\")) == NULL) || r;\n  r = ((glVertexAttrib4hNV = (PFNGLVERTEXATTRIB4HNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4hNV\")) == NULL) || r;\n  r = ((glVertexAttrib4hvNV = (PFNGLVERTEXATTRIB4HVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4hvNV\")) == NULL) || r;\n  r = ((glVertexAttribs1hvNV = (PFNGLVERTEXATTRIBS1HVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribs1hvNV\")) == NULL) || r;\n  r = ((glVertexAttribs2hvNV = (PFNGLVERTEXATTRIBS2HVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribs2hvNV\")) == NULL) || r;\n  r = ((glVertexAttribs3hvNV = (PFNGLVERTEXATTRIBS3HVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribs3hvNV\")) == NULL) || r;\n  r = ((glVertexAttribs4hvNV = (PFNGLVERTEXATTRIBS4HVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribs4hvNV\")) == NULL) || r;\n  r = ((glVertexWeighthNV = (PFNGLVERTEXWEIGHTHNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexWeighthNV\")) == NULL) || r;\n  r = ((glVertexWeighthvNV = (PFNGLVERTEXWEIGHTHVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexWeighthvNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_half_float */\n\n#ifdef GL_NV_internalformat_sample_query\n\nstatic GLboolean _glewInit_GL_NV_internalformat_sample_query ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetInternalformatSampleivNV = (PFNGLGETINTERNALFORMATSAMPLEIVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetInternalformatSampleivNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_internalformat_sample_query */\n\n#ifdef GL_NV_occlusion_query\n\nstatic GLboolean _glewInit_GL_NV_occlusion_query ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBeginOcclusionQueryNV = (PFNGLBEGINOCCLUSIONQUERYNVPROC)glewGetProcAddress((const GLubyte*)\"glBeginOcclusionQueryNV\")) == NULL) || r;\n  r = ((glDeleteOcclusionQueriesNV = (PFNGLDELETEOCCLUSIONQUERIESNVPROC)glewGetProcAddress((const GLubyte*)\"glDeleteOcclusionQueriesNV\")) == NULL) || r;\n  r = ((glEndOcclusionQueryNV = (PFNGLENDOCCLUSIONQUERYNVPROC)glewGetProcAddress((const GLubyte*)\"glEndOcclusionQueryNV\")) == NULL) || r;\n  r = ((glGenOcclusionQueriesNV = (PFNGLGENOCCLUSIONQUERIESNVPROC)glewGetProcAddress((const GLubyte*)\"glGenOcclusionQueriesNV\")) == NULL) || r;\n  r = ((glGetOcclusionQueryivNV = (PFNGLGETOCCLUSIONQUERYIVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetOcclusionQueryivNV\")) == NULL) || r;\n  r = ((glGetOcclusionQueryuivNV = (PFNGLGETOCCLUSIONQUERYUIVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetOcclusionQueryuivNV\")) == NULL) || r;\n  r = ((glIsOcclusionQueryNV = (PFNGLISOCCLUSIONQUERYNVPROC)glewGetProcAddress((const GLubyte*)\"glIsOcclusionQueryNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_occlusion_query */\n\n#ifdef GL_NV_parameter_buffer_object\n\nstatic GLboolean _glewInit_GL_NV_parameter_buffer_object ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glProgramBufferParametersIivNV = (PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramBufferParametersIivNV\")) == NULL) || r;\n  r = ((glProgramBufferParametersIuivNV = (PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramBufferParametersIuivNV\")) == NULL) || r;\n  r = ((glProgramBufferParametersfvNV = (PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramBufferParametersfvNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_parameter_buffer_object */\n\n#ifdef GL_NV_path_rendering\n\nstatic GLboolean _glewInit_GL_NV_path_rendering ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glCopyPathNV = (PFNGLCOPYPATHNVPROC)glewGetProcAddress((const GLubyte*)\"glCopyPathNV\")) == NULL) || r;\n  r = ((glCoverFillPathInstancedNV = (PFNGLCOVERFILLPATHINSTANCEDNVPROC)glewGetProcAddress((const GLubyte*)\"glCoverFillPathInstancedNV\")) == NULL) || r;\n  r = ((glCoverFillPathNV = (PFNGLCOVERFILLPATHNVPROC)glewGetProcAddress((const GLubyte*)\"glCoverFillPathNV\")) == NULL) || r;\n  r = ((glCoverStrokePathInstancedNV = (PFNGLCOVERSTROKEPATHINSTANCEDNVPROC)glewGetProcAddress((const GLubyte*)\"glCoverStrokePathInstancedNV\")) == NULL) || r;\n  r = ((glCoverStrokePathNV = (PFNGLCOVERSTROKEPATHNVPROC)glewGetProcAddress((const GLubyte*)\"glCoverStrokePathNV\")) == NULL) || r;\n  r = ((glDeletePathsNV = (PFNGLDELETEPATHSNVPROC)glewGetProcAddress((const GLubyte*)\"glDeletePathsNV\")) == NULL) || r;\n  r = ((glGenPathsNV = (PFNGLGENPATHSNVPROC)glewGetProcAddress((const GLubyte*)\"glGenPathsNV\")) == NULL) || r;\n  r = ((glGetPathColorGenfvNV = (PFNGLGETPATHCOLORGENFVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetPathColorGenfvNV\")) == NULL) || r;\n  r = ((glGetPathColorGenivNV = (PFNGLGETPATHCOLORGENIVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetPathColorGenivNV\")) == NULL) || r;\n  r = ((glGetPathCommandsNV = (PFNGLGETPATHCOMMANDSNVPROC)glewGetProcAddress((const GLubyte*)\"glGetPathCommandsNV\")) == NULL) || r;\n  r = ((glGetPathCoordsNV = (PFNGLGETPATHCOORDSNVPROC)glewGetProcAddress((const GLubyte*)\"glGetPathCoordsNV\")) == NULL) || r;\n  r = ((glGetPathDashArrayNV = (PFNGLGETPATHDASHARRAYNVPROC)glewGetProcAddress((const GLubyte*)\"glGetPathDashArrayNV\")) == NULL) || r;\n  r = ((glGetPathLengthNV = (PFNGLGETPATHLENGTHNVPROC)glewGetProcAddress((const GLubyte*)\"glGetPathLengthNV\")) == NULL) || r;\n  r = ((glGetPathMetricRangeNV = (PFNGLGETPATHMETRICRANGENVPROC)glewGetProcAddress((const GLubyte*)\"glGetPathMetricRangeNV\")) == NULL) || r;\n  r = ((glGetPathMetricsNV = (PFNGLGETPATHMETRICSNVPROC)glewGetProcAddress((const GLubyte*)\"glGetPathMetricsNV\")) == NULL) || r;\n  r = ((glGetPathParameterfvNV = (PFNGLGETPATHPARAMETERFVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetPathParameterfvNV\")) == NULL) || r;\n  r = ((glGetPathParameterivNV = (PFNGLGETPATHPARAMETERIVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetPathParameterivNV\")) == NULL) || r;\n  r = ((glGetPathSpacingNV = (PFNGLGETPATHSPACINGNVPROC)glewGetProcAddress((const GLubyte*)\"glGetPathSpacingNV\")) == NULL) || r;\n  r = ((glGetPathTexGenfvNV = (PFNGLGETPATHTEXGENFVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetPathTexGenfvNV\")) == NULL) || r;\n  r = ((glGetPathTexGenivNV = (PFNGLGETPATHTEXGENIVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetPathTexGenivNV\")) == NULL) || r;\n  r = ((glGetProgramResourcefvNV = (PFNGLGETPROGRAMRESOURCEFVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramResourcefvNV\")) == NULL) || r;\n  r = ((glInterpolatePathsNV = (PFNGLINTERPOLATEPATHSNVPROC)glewGetProcAddress((const GLubyte*)\"glInterpolatePathsNV\")) == NULL) || r;\n  r = ((glIsPathNV = (PFNGLISPATHNVPROC)glewGetProcAddress((const GLubyte*)\"glIsPathNV\")) == NULL) || r;\n  r = ((glIsPointInFillPathNV = (PFNGLISPOINTINFILLPATHNVPROC)glewGetProcAddress((const GLubyte*)\"glIsPointInFillPathNV\")) == NULL) || r;\n  r = ((glIsPointInStrokePathNV = (PFNGLISPOINTINSTROKEPATHNVPROC)glewGetProcAddress((const GLubyte*)\"glIsPointInStrokePathNV\")) == NULL) || r;\n  r = ((glMatrixLoad3x2fNV = (PFNGLMATRIXLOAD3X2FNVPROC)glewGetProcAddress((const GLubyte*)\"glMatrixLoad3x2fNV\")) == NULL) || r;\n  r = ((glMatrixLoad3x3fNV = (PFNGLMATRIXLOAD3X3FNVPROC)glewGetProcAddress((const GLubyte*)\"glMatrixLoad3x3fNV\")) == NULL) || r;\n  r = ((glMatrixLoadTranspose3x3fNV = (PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC)glewGetProcAddress((const GLubyte*)\"glMatrixLoadTranspose3x3fNV\")) == NULL) || r;\n  r = ((glMatrixMult3x2fNV = (PFNGLMATRIXMULT3X2FNVPROC)glewGetProcAddress((const GLubyte*)\"glMatrixMult3x2fNV\")) == NULL) || r;\n  r = ((glMatrixMult3x3fNV = (PFNGLMATRIXMULT3X3FNVPROC)glewGetProcAddress((const GLubyte*)\"glMatrixMult3x3fNV\")) == NULL) || r;\n  r = ((glMatrixMultTranspose3x3fNV = (PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC)glewGetProcAddress((const GLubyte*)\"glMatrixMultTranspose3x3fNV\")) == NULL) || r;\n  r = ((glPathColorGenNV = (PFNGLPATHCOLORGENNVPROC)glewGetProcAddress((const GLubyte*)\"glPathColorGenNV\")) == NULL) || r;\n  r = ((glPathCommandsNV = (PFNGLPATHCOMMANDSNVPROC)glewGetProcAddress((const GLubyte*)\"glPathCommandsNV\")) == NULL) || r;\n  r = ((glPathCoordsNV = (PFNGLPATHCOORDSNVPROC)glewGetProcAddress((const GLubyte*)\"glPathCoordsNV\")) == NULL) || r;\n  r = ((glPathCoverDepthFuncNV = (PFNGLPATHCOVERDEPTHFUNCNVPROC)glewGetProcAddress((const GLubyte*)\"glPathCoverDepthFuncNV\")) == NULL) || r;\n  r = ((glPathDashArrayNV = (PFNGLPATHDASHARRAYNVPROC)glewGetProcAddress((const GLubyte*)\"glPathDashArrayNV\")) == NULL) || r;\n  r = ((glPathFogGenNV = (PFNGLPATHFOGGENNVPROC)glewGetProcAddress((const GLubyte*)\"glPathFogGenNV\")) == NULL) || r;\n  r = ((glPathGlyphIndexArrayNV = (PFNGLPATHGLYPHINDEXARRAYNVPROC)glewGetProcAddress((const GLubyte*)\"glPathGlyphIndexArrayNV\")) == NULL) || r;\n  r = ((glPathGlyphIndexRangeNV = (PFNGLPATHGLYPHINDEXRANGENVPROC)glewGetProcAddress((const GLubyte*)\"glPathGlyphIndexRangeNV\")) == NULL) || r;\n  r = ((glPathGlyphRangeNV = (PFNGLPATHGLYPHRANGENVPROC)glewGetProcAddress((const GLubyte*)\"glPathGlyphRangeNV\")) == NULL) || r;\n  r = ((glPathGlyphsNV = (PFNGLPATHGLYPHSNVPROC)glewGetProcAddress((const GLubyte*)\"glPathGlyphsNV\")) == NULL) || r;\n  r = ((glPathMemoryGlyphIndexArrayNV = (PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC)glewGetProcAddress((const GLubyte*)\"glPathMemoryGlyphIndexArrayNV\")) == NULL) || r;\n  r = ((glPathParameterfNV = (PFNGLPATHPARAMETERFNVPROC)glewGetProcAddress((const GLubyte*)\"glPathParameterfNV\")) == NULL) || r;\n  r = ((glPathParameterfvNV = (PFNGLPATHPARAMETERFVNVPROC)glewGetProcAddress((const GLubyte*)\"glPathParameterfvNV\")) == NULL) || r;\n  r = ((glPathParameteriNV = (PFNGLPATHPARAMETERINVPROC)glewGetProcAddress((const GLubyte*)\"glPathParameteriNV\")) == NULL) || r;\n  r = ((glPathParameterivNV = (PFNGLPATHPARAMETERIVNVPROC)glewGetProcAddress((const GLubyte*)\"glPathParameterivNV\")) == NULL) || r;\n  r = ((glPathStencilDepthOffsetNV = (PFNGLPATHSTENCILDEPTHOFFSETNVPROC)glewGetProcAddress((const GLubyte*)\"glPathStencilDepthOffsetNV\")) == NULL) || r;\n  r = ((glPathStencilFuncNV = (PFNGLPATHSTENCILFUNCNVPROC)glewGetProcAddress((const GLubyte*)\"glPathStencilFuncNV\")) == NULL) || r;\n  r = ((glPathStringNV = (PFNGLPATHSTRINGNVPROC)glewGetProcAddress((const GLubyte*)\"glPathStringNV\")) == NULL) || r;\n  r = ((glPathSubCommandsNV = (PFNGLPATHSUBCOMMANDSNVPROC)glewGetProcAddress((const GLubyte*)\"glPathSubCommandsNV\")) == NULL) || r;\n  r = ((glPathSubCoordsNV = (PFNGLPATHSUBCOORDSNVPROC)glewGetProcAddress((const GLubyte*)\"glPathSubCoordsNV\")) == NULL) || r;\n  r = ((glPathTexGenNV = (PFNGLPATHTEXGENNVPROC)glewGetProcAddress((const GLubyte*)\"glPathTexGenNV\")) == NULL) || r;\n  r = ((glPointAlongPathNV = (PFNGLPOINTALONGPATHNVPROC)glewGetProcAddress((const GLubyte*)\"glPointAlongPathNV\")) == NULL) || r;\n  r = ((glProgramPathFragmentInputGenNV = (PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramPathFragmentInputGenNV\")) == NULL) || r;\n  r = ((glStencilFillPathInstancedNV = (PFNGLSTENCILFILLPATHINSTANCEDNVPROC)glewGetProcAddress((const GLubyte*)\"glStencilFillPathInstancedNV\")) == NULL) || r;\n  r = ((glStencilFillPathNV = (PFNGLSTENCILFILLPATHNVPROC)glewGetProcAddress((const GLubyte*)\"glStencilFillPathNV\")) == NULL) || r;\n  r = ((glStencilStrokePathInstancedNV = (PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC)glewGetProcAddress((const GLubyte*)\"glStencilStrokePathInstancedNV\")) == NULL) || r;\n  r = ((glStencilStrokePathNV = (PFNGLSTENCILSTROKEPATHNVPROC)glewGetProcAddress((const GLubyte*)\"glStencilStrokePathNV\")) == NULL) || r;\n  r = ((glStencilThenCoverFillPathInstancedNV = (PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC)glewGetProcAddress((const GLubyte*)\"glStencilThenCoverFillPathInstancedNV\")) == NULL) || r;\n  r = ((glStencilThenCoverFillPathNV = (PFNGLSTENCILTHENCOVERFILLPATHNVPROC)glewGetProcAddress((const GLubyte*)\"glStencilThenCoverFillPathNV\")) == NULL) || r;\n  r = ((glStencilThenCoverStrokePathInstancedNV = (PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC)glewGetProcAddress((const GLubyte*)\"glStencilThenCoverStrokePathInstancedNV\")) == NULL) || r;\n  r = ((glStencilThenCoverStrokePathNV = (PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC)glewGetProcAddress((const GLubyte*)\"glStencilThenCoverStrokePathNV\")) == NULL) || r;\n  r = ((glTransformPathNV = (PFNGLTRANSFORMPATHNVPROC)glewGetProcAddress((const GLubyte*)\"glTransformPathNV\")) == NULL) || r;\n  r = ((glWeightPathsNV = (PFNGLWEIGHTPATHSNVPROC)glewGetProcAddress((const GLubyte*)\"glWeightPathsNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_path_rendering */\n\n#ifdef GL_NV_pixel_data_range\n\nstatic GLboolean _glewInit_GL_NV_pixel_data_range ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glFlushPixelDataRangeNV = (PFNGLFLUSHPIXELDATARANGENVPROC)glewGetProcAddress((const GLubyte*)\"glFlushPixelDataRangeNV\")) == NULL) || r;\n  r = ((glPixelDataRangeNV = (PFNGLPIXELDATARANGENVPROC)glewGetProcAddress((const GLubyte*)\"glPixelDataRangeNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_pixel_data_range */\n\n#ifdef GL_NV_point_sprite\n\nstatic GLboolean _glewInit_GL_NV_point_sprite ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glPointParameteriNV = (PFNGLPOINTPARAMETERINVPROC)glewGetProcAddress((const GLubyte*)\"glPointParameteriNV\")) == NULL) || r;\n  r = ((glPointParameterivNV = (PFNGLPOINTPARAMETERIVNVPROC)glewGetProcAddress((const GLubyte*)\"glPointParameterivNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_point_sprite */\n\n#ifdef GL_NV_present_video\n\nstatic GLboolean _glewInit_GL_NV_present_video ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetVideoi64vNV = (PFNGLGETVIDEOI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glGetVideoi64vNV\")) == NULL) || r;\n  r = ((glGetVideoivNV = (PFNGLGETVIDEOIVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetVideoivNV\")) == NULL) || r;\n  r = ((glGetVideoui64vNV = (PFNGLGETVIDEOUI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glGetVideoui64vNV\")) == NULL) || r;\n  r = ((glGetVideouivNV = (PFNGLGETVIDEOUIVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetVideouivNV\")) == NULL) || r;\n  r = ((glPresentFrameDualFillNV = (PFNGLPRESENTFRAMEDUALFILLNVPROC)glewGetProcAddress((const GLubyte*)\"glPresentFrameDualFillNV\")) == NULL) || r;\n  r = ((glPresentFrameKeyedNV = (PFNGLPRESENTFRAMEKEYEDNVPROC)glewGetProcAddress((const GLubyte*)\"glPresentFrameKeyedNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_present_video */\n\n#ifdef GL_NV_primitive_restart\n\nstatic GLboolean _glewInit_GL_NV_primitive_restart ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glPrimitiveRestartIndexNV = (PFNGLPRIMITIVERESTARTINDEXNVPROC)glewGetProcAddress((const GLubyte*)\"glPrimitiveRestartIndexNV\")) == NULL) || r;\n  r = ((glPrimitiveRestartNV = (PFNGLPRIMITIVERESTARTNVPROC)glewGetProcAddress((const GLubyte*)\"glPrimitiveRestartNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_primitive_restart */\n\n#ifdef GL_NV_register_combiners\n\nstatic GLboolean _glewInit_GL_NV_register_combiners ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glCombinerInputNV = (PFNGLCOMBINERINPUTNVPROC)glewGetProcAddress((const GLubyte*)\"glCombinerInputNV\")) == NULL) || r;\n  r = ((glCombinerOutputNV = (PFNGLCOMBINEROUTPUTNVPROC)glewGetProcAddress((const GLubyte*)\"glCombinerOutputNV\")) == NULL) || r;\n  r = ((glCombinerParameterfNV = (PFNGLCOMBINERPARAMETERFNVPROC)glewGetProcAddress((const GLubyte*)\"glCombinerParameterfNV\")) == NULL) || r;\n  r = ((glCombinerParameterfvNV = (PFNGLCOMBINERPARAMETERFVNVPROC)glewGetProcAddress((const GLubyte*)\"glCombinerParameterfvNV\")) == NULL) || r;\n  r = ((glCombinerParameteriNV = (PFNGLCOMBINERPARAMETERINVPROC)glewGetProcAddress((const GLubyte*)\"glCombinerParameteriNV\")) == NULL) || r;\n  r = ((glCombinerParameterivNV = (PFNGLCOMBINERPARAMETERIVNVPROC)glewGetProcAddress((const GLubyte*)\"glCombinerParameterivNV\")) == NULL) || r;\n  r = ((glFinalCombinerInputNV = (PFNGLFINALCOMBINERINPUTNVPROC)glewGetProcAddress((const GLubyte*)\"glFinalCombinerInputNV\")) == NULL) || r;\n  r = ((glGetCombinerInputParameterfvNV = (PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetCombinerInputParameterfvNV\")) == NULL) || r;\n  r = ((glGetCombinerInputParameterivNV = (PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetCombinerInputParameterivNV\")) == NULL) || r;\n  r = ((glGetCombinerOutputParameterfvNV = (PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetCombinerOutputParameterfvNV\")) == NULL) || r;\n  r = ((glGetCombinerOutputParameterivNV = (PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetCombinerOutputParameterivNV\")) == NULL) || r;\n  r = ((glGetFinalCombinerInputParameterfvNV = (PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetFinalCombinerInputParameterfvNV\")) == NULL) || r;\n  r = ((glGetFinalCombinerInputParameterivNV = (PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetFinalCombinerInputParameterivNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_register_combiners */\n\n#ifdef GL_NV_register_combiners2\n\nstatic GLboolean _glewInit_GL_NV_register_combiners2 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glCombinerStageParameterfvNV = (PFNGLCOMBINERSTAGEPARAMETERFVNVPROC)glewGetProcAddress((const GLubyte*)\"glCombinerStageParameterfvNV\")) == NULL) || r;\n  r = ((glGetCombinerStageParameterfvNV = (PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetCombinerStageParameterfvNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_register_combiners2 */\n\n#ifdef GL_NV_sample_locations\n\nstatic GLboolean _glewInit_GL_NV_sample_locations ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glFramebufferSampleLocationsfvNV = (PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC)glewGetProcAddress((const GLubyte*)\"glFramebufferSampleLocationsfvNV\")) == NULL) || r;\n  r = ((glNamedFramebufferSampleLocationsfvNV = (PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC)glewGetProcAddress((const GLubyte*)\"glNamedFramebufferSampleLocationsfvNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_sample_locations */\n\n#ifdef GL_NV_shader_buffer_load\n\nstatic GLboolean _glewInit_GL_NV_shader_buffer_load ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetBufferParameterui64vNV = (PFNGLGETBUFFERPARAMETERUI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glGetBufferParameterui64vNV\")) == NULL) || r;\n  r = ((glGetIntegerui64vNV = (PFNGLGETINTEGERUI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glGetIntegerui64vNV\")) == NULL) || r;\n  r = ((glGetNamedBufferParameterui64vNV = (PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glGetNamedBufferParameterui64vNV\")) == NULL) || r;\n  r = ((glIsBufferResidentNV = (PFNGLISBUFFERRESIDENTNVPROC)glewGetProcAddress((const GLubyte*)\"glIsBufferResidentNV\")) == NULL) || r;\n  r = ((glIsNamedBufferResidentNV = (PFNGLISNAMEDBUFFERRESIDENTNVPROC)glewGetProcAddress((const GLubyte*)\"glIsNamedBufferResidentNV\")) == NULL) || r;\n  r = ((glMakeBufferNonResidentNV = (PFNGLMAKEBUFFERNONRESIDENTNVPROC)glewGetProcAddress((const GLubyte*)\"glMakeBufferNonResidentNV\")) == NULL) || r;\n  r = ((glMakeBufferResidentNV = (PFNGLMAKEBUFFERRESIDENTNVPROC)glewGetProcAddress((const GLubyte*)\"glMakeBufferResidentNV\")) == NULL) || r;\n  r = ((glMakeNamedBufferNonResidentNV = (PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC)glewGetProcAddress((const GLubyte*)\"glMakeNamedBufferNonResidentNV\")) == NULL) || r;\n  r = ((glMakeNamedBufferResidentNV = (PFNGLMAKENAMEDBUFFERRESIDENTNVPROC)glewGetProcAddress((const GLubyte*)\"glMakeNamedBufferResidentNV\")) == NULL) || r;\n  r = ((glProgramUniformui64NV = (PFNGLPROGRAMUNIFORMUI64NVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformui64NV\")) == NULL) || r;\n  r = ((glProgramUniformui64vNV = (PFNGLPROGRAMUNIFORMUI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramUniformui64vNV\")) == NULL) || r;\n  r = ((glUniformui64NV = (PFNGLUNIFORMUI64NVPROC)glewGetProcAddress((const GLubyte*)\"glUniformui64NV\")) == NULL) || r;\n  r = ((glUniformui64vNV = (PFNGLUNIFORMUI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glUniformui64vNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_shader_buffer_load */\n\n#ifdef GL_NV_texture_barrier\n\nstatic GLboolean _glewInit_GL_NV_texture_barrier ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glTextureBarrierNV = (PFNGLTEXTUREBARRIERNVPROC)glewGetProcAddress((const GLubyte*)\"glTextureBarrierNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_texture_barrier */\n\n#ifdef GL_NV_texture_multisample\n\nstatic GLboolean _glewInit_GL_NV_texture_multisample ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glTexImage2DMultisampleCoverageNV = (PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC)glewGetProcAddress((const GLubyte*)\"glTexImage2DMultisampleCoverageNV\")) == NULL) || r;\n  r = ((glTexImage3DMultisampleCoverageNV = (PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC)glewGetProcAddress((const GLubyte*)\"glTexImage3DMultisampleCoverageNV\")) == NULL) || r;\n  r = ((glTextureImage2DMultisampleCoverageNV = (PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC)glewGetProcAddress((const GLubyte*)\"glTextureImage2DMultisampleCoverageNV\")) == NULL) || r;\n  r = ((glTextureImage2DMultisampleNV = (PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC)glewGetProcAddress((const GLubyte*)\"glTextureImage2DMultisampleNV\")) == NULL) || r;\n  r = ((glTextureImage3DMultisampleCoverageNV = (PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC)glewGetProcAddress((const GLubyte*)\"glTextureImage3DMultisampleCoverageNV\")) == NULL) || r;\n  r = ((glTextureImage3DMultisampleNV = (PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC)glewGetProcAddress((const GLubyte*)\"glTextureImage3DMultisampleNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_texture_multisample */\n\n#ifdef GL_NV_transform_feedback\n\nstatic GLboolean _glewInit_GL_NV_transform_feedback ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glActiveVaryingNV = (PFNGLACTIVEVARYINGNVPROC)glewGetProcAddress((const GLubyte*)\"glActiveVaryingNV\")) == NULL) || r;\n  r = ((glBeginTransformFeedbackNV = (PFNGLBEGINTRANSFORMFEEDBACKNVPROC)glewGetProcAddress((const GLubyte*)\"glBeginTransformFeedbackNV\")) == NULL) || r;\n  r = ((glBindBufferBaseNV = (PFNGLBINDBUFFERBASENVPROC)glewGetProcAddress((const GLubyte*)\"glBindBufferBaseNV\")) == NULL) || r;\n  r = ((glBindBufferOffsetNV = (PFNGLBINDBUFFEROFFSETNVPROC)glewGetProcAddress((const GLubyte*)\"glBindBufferOffsetNV\")) == NULL) || r;\n  r = ((glBindBufferRangeNV = (PFNGLBINDBUFFERRANGENVPROC)glewGetProcAddress((const GLubyte*)\"glBindBufferRangeNV\")) == NULL) || r;\n  r = ((glEndTransformFeedbackNV = (PFNGLENDTRANSFORMFEEDBACKNVPROC)glewGetProcAddress((const GLubyte*)\"glEndTransformFeedbackNV\")) == NULL) || r;\n  r = ((glGetActiveVaryingNV = (PFNGLGETACTIVEVARYINGNVPROC)glewGetProcAddress((const GLubyte*)\"glGetActiveVaryingNV\")) == NULL) || r;\n  r = ((glGetTransformFeedbackVaryingNV = (PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC)glewGetProcAddress((const GLubyte*)\"glGetTransformFeedbackVaryingNV\")) == NULL) || r;\n  r = ((glGetVaryingLocationNV = (PFNGLGETVARYINGLOCATIONNVPROC)glewGetProcAddress((const GLubyte*)\"glGetVaryingLocationNV\")) == NULL) || r;\n  r = ((glTransformFeedbackAttribsNV = (PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC)glewGetProcAddress((const GLubyte*)\"glTransformFeedbackAttribsNV\")) == NULL) || r;\n  r = ((glTransformFeedbackVaryingsNV = (PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC)glewGetProcAddress((const GLubyte*)\"glTransformFeedbackVaryingsNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_transform_feedback */\n\n#ifdef GL_NV_transform_feedback2\n\nstatic GLboolean _glewInit_GL_NV_transform_feedback2 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBindTransformFeedbackNV = (PFNGLBINDTRANSFORMFEEDBACKNVPROC)glewGetProcAddress((const GLubyte*)\"glBindTransformFeedbackNV\")) == NULL) || r;\n  r = ((glDeleteTransformFeedbacksNV = (PFNGLDELETETRANSFORMFEEDBACKSNVPROC)glewGetProcAddress((const GLubyte*)\"glDeleteTransformFeedbacksNV\")) == NULL) || r;\n  r = ((glDrawTransformFeedbackNV = (PFNGLDRAWTRANSFORMFEEDBACKNVPROC)glewGetProcAddress((const GLubyte*)\"glDrawTransformFeedbackNV\")) == NULL) || r;\n  r = ((glGenTransformFeedbacksNV = (PFNGLGENTRANSFORMFEEDBACKSNVPROC)glewGetProcAddress((const GLubyte*)\"glGenTransformFeedbacksNV\")) == NULL) || r;\n  r = ((glIsTransformFeedbackNV = (PFNGLISTRANSFORMFEEDBACKNVPROC)glewGetProcAddress((const GLubyte*)\"glIsTransformFeedbackNV\")) == NULL) || r;\n  r = ((glPauseTransformFeedbackNV = (PFNGLPAUSETRANSFORMFEEDBACKNVPROC)glewGetProcAddress((const GLubyte*)\"glPauseTransformFeedbackNV\")) == NULL) || r;\n  r = ((glResumeTransformFeedbackNV = (PFNGLRESUMETRANSFORMFEEDBACKNVPROC)glewGetProcAddress((const GLubyte*)\"glResumeTransformFeedbackNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_transform_feedback2 */\n\n#ifdef GL_NV_vdpau_interop\n\nstatic GLboolean _glewInit_GL_NV_vdpau_interop ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glVDPAUFiniNV = (PFNGLVDPAUFININVPROC)glewGetProcAddress((const GLubyte*)\"glVDPAUFiniNV\")) == NULL) || r;\n  r = ((glVDPAUGetSurfaceivNV = (PFNGLVDPAUGETSURFACEIVNVPROC)glewGetProcAddress((const GLubyte*)\"glVDPAUGetSurfaceivNV\")) == NULL) || r;\n  r = ((glVDPAUInitNV = (PFNGLVDPAUINITNVPROC)glewGetProcAddress((const GLubyte*)\"glVDPAUInitNV\")) == NULL) || r;\n  r = ((glVDPAUIsSurfaceNV = (PFNGLVDPAUISSURFACENVPROC)glewGetProcAddress((const GLubyte*)\"glVDPAUIsSurfaceNV\")) == NULL) || r;\n  r = ((glVDPAUMapSurfacesNV = (PFNGLVDPAUMAPSURFACESNVPROC)glewGetProcAddress((const GLubyte*)\"glVDPAUMapSurfacesNV\")) == NULL) || r;\n  r = ((glVDPAURegisterOutputSurfaceNV = (PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC)glewGetProcAddress((const GLubyte*)\"glVDPAURegisterOutputSurfaceNV\")) == NULL) || r;\n  r = ((glVDPAURegisterVideoSurfaceNV = (PFNGLVDPAUREGISTERVIDEOSURFACENVPROC)glewGetProcAddress((const GLubyte*)\"glVDPAURegisterVideoSurfaceNV\")) == NULL) || r;\n  r = ((glVDPAUSurfaceAccessNV = (PFNGLVDPAUSURFACEACCESSNVPROC)glewGetProcAddress((const GLubyte*)\"glVDPAUSurfaceAccessNV\")) == NULL) || r;\n  r = ((glVDPAUUnmapSurfacesNV = (PFNGLVDPAUUNMAPSURFACESNVPROC)glewGetProcAddress((const GLubyte*)\"glVDPAUUnmapSurfacesNV\")) == NULL) || r;\n  r = ((glVDPAUUnregisterSurfaceNV = (PFNGLVDPAUUNREGISTERSURFACENVPROC)glewGetProcAddress((const GLubyte*)\"glVDPAUUnregisterSurfaceNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_vdpau_interop */\n\n#ifdef GL_NV_vertex_array_range\n\nstatic GLboolean _glewInit_GL_NV_vertex_array_range ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glFlushVertexArrayRangeNV = (PFNGLFLUSHVERTEXARRAYRANGENVPROC)glewGetProcAddress((const GLubyte*)\"glFlushVertexArrayRangeNV\")) == NULL) || r;\n  r = ((glVertexArrayRangeNV = (PFNGLVERTEXARRAYRANGENVPROC)glewGetProcAddress((const GLubyte*)\"glVertexArrayRangeNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_vertex_array_range */\n\n#ifdef GL_NV_vertex_attrib_integer_64bit\n\nstatic GLboolean _glewInit_GL_NV_vertex_attrib_integer_64bit ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetVertexAttribLi64vNV = (PFNGLGETVERTEXATTRIBLI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexAttribLi64vNV\")) == NULL) || r;\n  r = ((glGetVertexAttribLui64vNV = (PFNGLGETVERTEXATTRIBLUI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexAttribLui64vNV\")) == NULL) || r;\n  r = ((glVertexAttribL1i64NV = (PFNGLVERTEXATTRIBL1I64NVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL1i64NV\")) == NULL) || r;\n  r = ((glVertexAttribL1i64vNV = (PFNGLVERTEXATTRIBL1I64VNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL1i64vNV\")) == NULL) || r;\n  r = ((glVertexAttribL1ui64NV = (PFNGLVERTEXATTRIBL1UI64NVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL1ui64NV\")) == NULL) || r;\n  r = ((glVertexAttribL1ui64vNV = (PFNGLVERTEXATTRIBL1UI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL1ui64vNV\")) == NULL) || r;\n  r = ((glVertexAttribL2i64NV = (PFNGLVERTEXATTRIBL2I64NVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL2i64NV\")) == NULL) || r;\n  r = ((glVertexAttribL2i64vNV = (PFNGLVERTEXATTRIBL2I64VNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL2i64vNV\")) == NULL) || r;\n  r = ((glVertexAttribL2ui64NV = (PFNGLVERTEXATTRIBL2UI64NVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL2ui64NV\")) == NULL) || r;\n  r = ((glVertexAttribL2ui64vNV = (PFNGLVERTEXATTRIBL2UI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL2ui64vNV\")) == NULL) || r;\n  r = ((glVertexAttribL3i64NV = (PFNGLVERTEXATTRIBL3I64NVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL3i64NV\")) == NULL) || r;\n  r = ((glVertexAttribL3i64vNV = (PFNGLVERTEXATTRIBL3I64VNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL3i64vNV\")) == NULL) || r;\n  r = ((glVertexAttribL3ui64NV = (PFNGLVERTEXATTRIBL3UI64NVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL3ui64NV\")) == NULL) || r;\n  r = ((glVertexAttribL3ui64vNV = (PFNGLVERTEXATTRIBL3UI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL3ui64vNV\")) == NULL) || r;\n  r = ((glVertexAttribL4i64NV = (PFNGLVERTEXATTRIBL4I64NVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL4i64NV\")) == NULL) || r;\n  r = ((glVertexAttribL4i64vNV = (PFNGLVERTEXATTRIBL4I64VNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL4i64vNV\")) == NULL) || r;\n  r = ((glVertexAttribL4ui64NV = (PFNGLVERTEXATTRIBL4UI64NVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL4ui64NV\")) == NULL) || r;\n  r = ((glVertexAttribL4ui64vNV = (PFNGLVERTEXATTRIBL4UI64VNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribL4ui64vNV\")) == NULL) || r;\n  r = ((glVertexAttribLFormatNV = (PFNGLVERTEXATTRIBLFORMATNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribLFormatNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_vertex_attrib_integer_64bit */\n\n#ifdef GL_NV_vertex_buffer_unified_memory\n\nstatic GLboolean _glewInit_GL_NV_vertex_buffer_unified_memory ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBufferAddressRangeNV = (PFNGLBUFFERADDRESSRANGENVPROC)glewGetProcAddress((const GLubyte*)\"glBufferAddressRangeNV\")) == NULL) || r;\n  r = ((glColorFormatNV = (PFNGLCOLORFORMATNVPROC)glewGetProcAddress((const GLubyte*)\"glColorFormatNV\")) == NULL) || r;\n  r = ((glEdgeFlagFormatNV = (PFNGLEDGEFLAGFORMATNVPROC)glewGetProcAddress((const GLubyte*)\"glEdgeFlagFormatNV\")) == NULL) || r;\n  r = ((glFogCoordFormatNV = (PFNGLFOGCOORDFORMATNVPROC)glewGetProcAddress((const GLubyte*)\"glFogCoordFormatNV\")) == NULL) || r;\n  r = ((glGetIntegerui64i_vNV = (PFNGLGETINTEGERUI64I_VNVPROC)glewGetProcAddress((const GLubyte*)\"glGetIntegerui64i_vNV\")) == NULL) || r;\n  r = ((glIndexFormatNV = (PFNGLINDEXFORMATNVPROC)glewGetProcAddress((const GLubyte*)\"glIndexFormatNV\")) == NULL) || r;\n  r = ((glNormalFormatNV = (PFNGLNORMALFORMATNVPROC)glewGetProcAddress((const GLubyte*)\"glNormalFormatNV\")) == NULL) || r;\n  r = ((glSecondaryColorFormatNV = (PFNGLSECONDARYCOLORFORMATNVPROC)glewGetProcAddress((const GLubyte*)\"glSecondaryColorFormatNV\")) == NULL) || r;\n  r = ((glTexCoordFormatNV = (PFNGLTEXCOORDFORMATNVPROC)glewGetProcAddress((const GLubyte*)\"glTexCoordFormatNV\")) == NULL) || r;\n  r = ((glVertexAttribFormatNV = (PFNGLVERTEXATTRIBFORMATNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribFormatNV\")) == NULL) || r;\n  r = ((glVertexAttribIFormatNV = (PFNGLVERTEXATTRIBIFORMATNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribIFormatNV\")) == NULL) || r;\n  r = ((glVertexFormatNV = (PFNGLVERTEXFORMATNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexFormatNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_vertex_buffer_unified_memory */\n\n#ifdef GL_NV_vertex_program\n\nstatic GLboolean _glewInit_GL_NV_vertex_program ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glAreProgramsResidentNV = (PFNGLAREPROGRAMSRESIDENTNVPROC)glewGetProcAddress((const GLubyte*)\"glAreProgramsResidentNV\")) == NULL) || r;\n  r = ((glBindProgramNV = (PFNGLBINDPROGRAMNVPROC)glewGetProcAddress((const GLubyte*)\"glBindProgramNV\")) == NULL) || r;\n  r = ((glDeleteProgramsNV = (PFNGLDELETEPROGRAMSNVPROC)glewGetProcAddress((const GLubyte*)\"glDeleteProgramsNV\")) == NULL) || r;\n  r = ((glExecuteProgramNV = (PFNGLEXECUTEPROGRAMNVPROC)glewGetProcAddress((const GLubyte*)\"glExecuteProgramNV\")) == NULL) || r;\n  r = ((glGenProgramsNV = (PFNGLGENPROGRAMSNVPROC)glewGetProcAddress((const GLubyte*)\"glGenProgramsNV\")) == NULL) || r;\n  r = ((glGetProgramParameterdvNV = (PFNGLGETPROGRAMPARAMETERDVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramParameterdvNV\")) == NULL) || r;\n  r = ((glGetProgramParameterfvNV = (PFNGLGETPROGRAMPARAMETERFVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramParameterfvNV\")) == NULL) || r;\n  r = ((glGetProgramStringNV = (PFNGLGETPROGRAMSTRINGNVPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramStringNV\")) == NULL) || r;\n  r = ((glGetProgramivNV = (PFNGLGETPROGRAMIVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetProgramivNV\")) == NULL) || r;\n  r = ((glGetTrackMatrixivNV = (PFNGLGETTRACKMATRIXIVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetTrackMatrixivNV\")) == NULL) || r;\n  r = ((glGetVertexAttribPointervNV = (PFNGLGETVERTEXATTRIBPOINTERVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexAttribPointervNV\")) == NULL) || r;\n  r = ((glGetVertexAttribdvNV = (PFNGLGETVERTEXATTRIBDVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexAttribdvNV\")) == NULL) || r;\n  r = ((glGetVertexAttribfvNV = (PFNGLGETVERTEXATTRIBFVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexAttribfvNV\")) == NULL) || r;\n  r = ((glGetVertexAttribivNV = (PFNGLGETVERTEXATTRIBIVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetVertexAttribivNV\")) == NULL) || r;\n  r = ((glIsProgramNV = (PFNGLISPROGRAMNVPROC)glewGetProcAddress((const GLubyte*)\"glIsProgramNV\")) == NULL) || r;\n  r = ((glLoadProgramNV = (PFNGLLOADPROGRAMNVPROC)glewGetProcAddress((const GLubyte*)\"glLoadProgramNV\")) == NULL) || r;\n  r = ((glProgramParameter4dNV = (PFNGLPROGRAMPARAMETER4DNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramParameter4dNV\")) == NULL) || r;\n  r = ((glProgramParameter4dvNV = (PFNGLPROGRAMPARAMETER4DVNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramParameter4dvNV\")) == NULL) || r;\n  r = ((glProgramParameter4fNV = (PFNGLPROGRAMPARAMETER4FNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramParameter4fNV\")) == NULL) || r;\n  r = ((glProgramParameter4fvNV = (PFNGLPROGRAMPARAMETER4FVNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramParameter4fvNV\")) == NULL) || r;\n  r = ((glProgramParameters4dvNV = (PFNGLPROGRAMPARAMETERS4DVNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramParameters4dvNV\")) == NULL) || r;\n  r = ((glProgramParameters4fvNV = (PFNGLPROGRAMPARAMETERS4FVNVPROC)glewGetProcAddress((const GLubyte*)\"glProgramParameters4fvNV\")) == NULL) || r;\n  r = ((glRequestResidentProgramsNV = (PFNGLREQUESTRESIDENTPROGRAMSNVPROC)glewGetProcAddress((const GLubyte*)\"glRequestResidentProgramsNV\")) == NULL) || r;\n  r = ((glTrackMatrixNV = (PFNGLTRACKMATRIXNVPROC)glewGetProcAddress((const GLubyte*)\"glTrackMatrixNV\")) == NULL) || r;\n  r = ((glVertexAttrib1dNV = (PFNGLVERTEXATTRIB1DNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib1dNV\")) == NULL) || r;\n  r = ((glVertexAttrib1dvNV = (PFNGLVERTEXATTRIB1DVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib1dvNV\")) == NULL) || r;\n  r = ((glVertexAttrib1fNV = (PFNGLVERTEXATTRIB1FNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib1fNV\")) == NULL) || r;\n  r = ((glVertexAttrib1fvNV = (PFNGLVERTEXATTRIB1FVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib1fvNV\")) == NULL) || r;\n  r = ((glVertexAttrib1sNV = (PFNGLVERTEXATTRIB1SNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib1sNV\")) == NULL) || r;\n  r = ((glVertexAttrib1svNV = (PFNGLVERTEXATTRIB1SVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib1svNV\")) == NULL) || r;\n  r = ((glVertexAttrib2dNV = (PFNGLVERTEXATTRIB2DNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib2dNV\")) == NULL) || r;\n  r = ((glVertexAttrib2dvNV = (PFNGLVERTEXATTRIB2DVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib2dvNV\")) == NULL) || r;\n  r = ((glVertexAttrib2fNV = (PFNGLVERTEXATTRIB2FNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib2fNV\")) == NULL) || r;\n  r = ((glVertexAttrib2fvNV = (PFNGLVERTEXATTRIB2FVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib2fvNV\")) == NULL) || r;\n  r = ((glVertexAttrib2sNV = (PFNGLVERTEXATTRIB2SNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib2sNV\")) == NULL) || r;\n  r = ((glVertexAttrib2svNV = (PFNGLVERTEXATTRIB2SVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib2svNV\")) == NULL) || r;\n  r = ((glVertexAttrib3dNV = (PFNGLVERTEXATTRIB3DNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib3dNV\")) == NULL) || r;\n  r = ((glVertexAttrib3dvNV = (PFNGLVERTEXATTRIB3DVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib3dvNV\")) == NULL) || r;\n  r = ((glVertexAttrib3fNV = (PFNGLVERTEXATTRIB3FNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib3fNV\")) == NULL) || r;\n  r = ((glVertexAttrib3fvNV = (PFNGLVERTEXATTRIB3FVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib3fvNV\")) == NULL) || r;\n  r = ((glVertexAttrib3sNV = (PFNGLVERTEXATTRIB3SNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib3sNV\")) == NULL) || r;\n  r = ((glVertexAttrib3svNV = (PFNGLVERTEXATTRIB3SVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib3svNV\")) == NULL) || r;\n  r = ((glVertexAttrib4dNV = (PFNGLVERTEXATTRIB4DNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4dNV\")) == NULL) || r;\n  r = ((glVertexAttrib4dvNV = (PFNGLVERTEXATTRIB4DVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4dvNV\")) == NULL) || r;\n  r = ((glVertexAttrib4fNV = (PFNGLVERTEXATTRIB4FNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4fNV\")) == NULL) || r;\n  r = ((glVertexAttrib4fvNV = (PFNGLVERTEXATTRIB4FVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4fvNV\")) == NULL) || r;\n  r = ((glVertexAttrib4sNV = (PFNGLVERTEXATTRIB4SNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4sNV\")) == NULL) || r;\n  r = ((glVertexAttrib4svNV = (PFNGLVERTEXATTRIB4SVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4svNV\")) == NULL) || r;\n  r = ((glVertexAttrib4ubNV = (PFNGLVERTEXATTRIB4UBNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4ubNV\")) == NULL) || r;\n  r = ((glVertexAttrib4ubvNV = (PFNGLVERTEXATTRIB4UBVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttrib4ubvNV\")) == NULL) || r;\n  r = ((glVertexAttribPointerNV = (PFNGLVERTEXATTRIBPOINTERNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribPointerNV\")) == NULL) || r;\n  r = ((glVertexAttribs1dvNV = (PFNGLVERTEXATTRIBS1DVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribs1dvNV\")) == NULL) || r;\n  r = ((glVertexAttribs1fvNV = (PFNGLVERTEXATTRIBS1FVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribs1fvNV\")) == NULL) || r;\n  r = ((glVertexAttribs1svNV = (PFNGLVERTEXATTRIBS1SVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribs1svNV\")) == NULL) || r;\n  r = ((glVertexAttribs2dvNV = (PFNGLVERTEXATTRIBS2DVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribs2dvNV\")) == NULL) || r;\n  r = ((glVertexAttribs2fvNV = (PFNGLVERTEXATTRIBS2FVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribs2fvNV\")) == NULL) || r;\n  r = ((glVertexAttribs2svNV = (PFNGLVERTEXATTRIBS2SVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribs2svNV\")) == NULL) || r;\n  r = ((glVertexAttribs3dvNV = (PFNGLVERTEXATTRIBS3DVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribs3dvNV\")) == NULL) || r;\n  r = ((glVertexAttribs3fvNV = (PFNGLVERTEXATTRIBS3FVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribs3fvNV\")) == NULL) || r;\n  r = ((glVertexAttribs3svNV = (PFNGLVERTEXATTRIBS3SVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribs3svNV\")) == NULL) || r;\n  r = ((glVertexAttribs4dvNV = (PFNGLVERTEXATTRIBS4DVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribs4dvNV\")) == NULL) || r;\n  r = ((glVertexAttribs4fvNV = (PFNGLVERTEXATTRIBS4FVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribs4fvNV\")) == NULL) || r;\n  r = ((glVertexAttribs4svNV = (PFNGLVERTEXATTRIBS4SVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribs4svNV\")) == NULL) || r;\n  r = ((glVertexAttribs4ubvNV = (PFNGLVERTEXATTRIBS4UBVNVPROC)glewGetProcAddress((const GLubyte*)\"glVertexAttribs4ubvNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_vertex_program */\n\n#ifdef GL_NV_video_capture\n\nstatic GLboolean _glewInit_GL_NV_video_capture ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glBeginVideoCaptureNV = (PFNGLBEGINVIDEOCAPTURENVPROC)glewGetProcAddress((const GLubyte*)\"glBeginVideoCaptureNV\")) == NULL) || r;\n  r = ((glBindVideoCaptureStreamBufferNV = (PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC)glewGetProcAddress((const GLubyte*)\"glBindVideoCaptureStreamBufferNV\")) == NULL) || r;\n  r = ((glBindVideoCaptureStreamTextureNV = (PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC)glewGetProcAddress((const GLubyte*)\"glBindVideoCaptureStreamTextureNV\")) == NULL) || r;\n  r = ((glEndVideoCaptureNV = (PFNGLENDVIDEOCAPTURENVPROC)glewGetProcAddress((const GLubyte*)\"glEndVideoCaptureNV\")) == NULL) || r;\n  r = ((glGetVideoCaptureStreamdvNV = (PFNGLGETVIDEOCAPTURESTREAMDVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetVideoCaptureStreamdvNV\")) == NULL) || r;\n  r = ((glGetVideoCaptureStreamfvNV = (PFNGLGETVIDEOCAPTURESTREAMFVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetVideoCaptureStreamfvNV\")) == NULL) || r;\n  r = ((glGetVideoCaptureStreamivNV = (PFNGLGETVIDEOCAPTURESTREAMIVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetVideoCaptureStreamivNV\")) == NULL) || r;\n  r = ((glGetVideoCaptureivNV = (PFNGLGETVIDEOCAPTUREIVNVPROC)glewGetProcAddress((const GLubyte*)\"glGetVideoCaptureivNV\")) == NULL) || r;\n  r = ((glVideoCaptureNV = (PFNGLVIDEOCAPTURENVPROC)glewGetProcAddress((const GLubyte*)\"glVideoCaptureNV\")) == NULL) || r;\n  r = ((glVideoCaptureStreamParameterdvNV = (PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC)glewGetProcAddress((const GLubyte*)\"glVideoCaptureStreamParameterdvNV\")) == NULL) || r;\n  r = ((glVideoCaptureStreamParameterfvNV = (PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC)glewGetProcAddress((const GLubyte*)\"glVideoCaptureStreamParameterfvNV\")) == NULL) || r;\n  r = ((glVideoCaptureStreamParameterivNV = (PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC)glewGetProcAddress((const GLubyte*)\"glVideoCaptureStreamParameterivNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_video_capture */\n\n#ifdef GL_NV_viewport_swizzle\n\nstatic GLboolean _glewInit_GL_NV_viewport_swizzle ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glViewportSwizzleNV = (PFNGLVIEWPORTSWIZZLENVPROC)glewGetProcAddress((const GLubyte*)\"glViewportSwizzleNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_NV_viewport_swizzle */\n\n#ifdef GL_OES_single_precision\n\nstatic GLboolean _glewInit_GL_OES_single_precision ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glClearDepthfOES = (PFNGLCLEARDEPTHFOESPROC)glewGetProcAddress((const GLubyte*)\"glClearDepthfOES\")) == NULL) || r;\n  r = ((glClipPlanefOES = (PFNGLCLIPPLANEFOESPROC)glewGetProcAddress((const GLubyte*)\"glClipPlanefOES\")) == NULL) || r;\n  r = ((glDepthRangefOES = (PFNGLDEPTHRANGEFOESPROC)glewGetProcAddress((const GLubyte*)\"glDepthRangefOES\")) == NULL) || r;\n  r = ((glFrustumfOES = (PFNGLFRUSTUMFOESPROC)glewGetProcAddress((const GLubyte*)\"glFrustumfOES\")) == NULL) || r;\n  r = ((glGetClipPlanefOES = (PFNGLGETCLIPPLANEFOESPROC)glewGetProcAddress((const GLubyte*)\"glGetClipPlanefOES\")) == NULL) || r;\n  r = ((glOrthofOES = (PFNGLORTHOFOESPROC)glewGetProcAddress((const GLubyte*)\"glOrthofOES\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_OES_single_precision */\n\n#ifdef GL_OVR_multiview\n\nstatic GLboolean _glewInit_GL_OVR_multiview ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glFramebufferTextureMultiviewOVR = (PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC)glewGetProcAddress((const GLubyte*)\"glFramebufferTextureMultiviewOVR\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_OVR_multiview */\n\n#ifdef GL_REGAL_ES1_0_compatibility\n\nstatic GLboolean _glewInit_GL_REGAL_ES1_0_compatibility ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glAlphaFuncx = (PFNGLALPHAFUNCXPROC)glewGetProcAddress((const GLubyte*)\"glAlphaFuncx\")) == NULL) || r;\n  r = ((glClearColorx = (PFNGLCLEARCOLORXPROC)glewGetProcAddress((const GLubyte*)\"glClearColorx\")) == NULL) || r;\n  r = ((glClearDepthx = (PFNGLCLEARDEPTHXPROC)glewGetProcAddress((const GLubyte*)\"glClearDepthx\")) == NULL) || r;\n  r = ((glColor4x = (PFNGLCOLOR4XPROC)glewGetProcAddress((const GLubyte*)\"glColor4x\")) == NULL) || r;\n  r = ((glDepthRangex = (PFNGLDEPTHRANGEXPROC)glewGetProcAddress((const GLubyte*)\"glDepthRangex\")) == NULL) || r;\n  r = ((glFogx = (PFNGLFOGXPROC)glewGetProcAddress((const GLubyte*)\"glFogx\")) == NULL) || r;\n  r = ((glFogxv = (PFNGLFOGXVPROC)glewGetProcAddress((const GLubyte*)\"glFogxv\")) == NULL) || r;\n  r = ((glFrustumf = (PFNGLFRUSTUMFPROC)glewGetProcAddress((const GLubyte*)\"glFrustumf\")) == NULL) || r;\n  r = ((glFrustumx = (PFNGLFRUSTUMXPROC)glewGetProcAddress((const GLubyte*)\"glFrustumx\")) == NULL) || r;\n  r = ((glLightModelx = (PFNGLLIGHTMODELXPROC)glewGetProcAddress((const GLubyte*)\"glLightModelx\")) == NULL) || r;\n  r = ((glLightModelxv = (PFNGLLIGHTMODELXVPROC)glewGetProcAddress((const GLubyte*)\"glLightModelxv\")) == NULL) || r;\n  r = ((glLightx = (PFNGLLIGHTXPROC)glewGetProcAddress((const GLubyte*)\"glLightx\")) == NULL) || r;\n  r = ((glLightxv = (PFNGLLIGHTXVPROC)glewGetProcAddress((const GLubyte*)\"glLightxv\")) == NULL) || r;\n  r = ((glLineWidthx = (PFNGLLINEWIDTHXPROC)glewGetProcAddress((const GLubyte*)\"glLineWidthx\")) == NULL) || r;\n  r = ((glLoadMatrixx = (PFNGLLOADMATRIXXPROC)glewGetProcAddress((const GLubyte*)\"glLoadMatrixx\")) == NULL) || r;\n  r = ((glMaterialx = (PFNGLMATERIALXPROC)glewGetProcAddress((const GLubyte*)\"glMaterialx\")) == NULL) || r;\n  r = ((glMaterialxv = (PFNGLMATERIALXVPROC)glewGetProcAddress((const GLubyte*)\"glMaterialxv\")) == NULL) || r;\n  r = ((glMultMatrixx = (PFNGLMULTMATRIXXPROC)glewGetProcAddress((const GLubyte*)\"glMultMatrixx\")) == NULL) || r;\n  r = ((glMultiTexCoord4x = (PFNGLMULTITEXCOORD4XPROC)glewGetProcAddress((const GLubyte*)\"glMultiTexCoord4x\")) == NULL) || r;\n  r = ((glNormal3x = (PFNGLNORMAL3XPROC)glewGetProcAddress((const GLubyte*)\"glNormal3x\")) == NULL) || r;\n  r = ((glOrthof = (PFNGLORTHOFPROC)glewGetProcAddress((const GLubyte*)\"glOrthof\")) == NULL) || r;\n  r = ((glOrthox = (PFNGLORTHOXPROC)glewGetProcAddress((const GLubyte*)\"glOrthox\")) == NULL) || r;\n  r = ((glPointSizex = (PFNGLPOINTSIZEXPROC)glewGetProcAddress((const GLubyte*)\"glPointSizex\")) == NULL) || r;\n  r = ((glPolygonOffsetx = (PFNGLPOLYGONOFFSETXPROC)glewGetProcAddress((const GLubyte*)\"glPolygonOffsetx\")) == NULL) || r;\n  r = ((glRotatex = (PFNGLROTATEXPROC)glewGetProcAddress((const GLubyte*)\"glRotatex\")) == NULL) || r;\n  r = ((glSampleCoveragex = (PFNGLSAMPLECOVERAGEXPROC)glewGetProcAddress((const GLubyte*)\"glSampleCoveragex\")) == NULL) || r;\n  r = ((glScalex = (PFNGLSCALEXPROC)glewGetProcAddress((const GLubyte*)\"glScalex\")) == NULL) || r;\n  r = ((glTexEnvx = (PFNGLTEXENVXPROC)glewGetProcAddress((const GLubyte*)\"glTexEnvx\")) == NULL) || r;\n  r = ((glTexEnvxv = (PFNGLTEXENVXVPROC)glewGetProcAddress((const GLubyte*)\"glTexEnvxv\")) == NULL) || r;\n  r = ((glTexParameterx = (PFNGLTEXPARAMETERXPROC)glewGetProcAddress((const GLubyte*)\"glTexParameterx\")) == NULL) || r;\n  r = ((glTranslatex = (PFNGLTRANSLATEXPROC)glewGetProcAddress((const GLubyte*)\"glTranslatex\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_REGAL_ES1_0_compatibility */\n\n#ifdef GL_REGAL_ES1_1_compatibility\n\nstatic GLboolean _glewInit_GL_REGAL_ES1_1_compatibility ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glClipPlanef = (PFNGLCLIPPLANEFPROC)glewGetProcAddress((const GLubyte*)\"glClipPlanef\")) == NULL) || r;\n  r = ((glClipPlanex = (PFNGLCLIPPLANEXPROC)glewGetProcAddress((const GLubyte*)\"glClipPlanex\")) == NULL) || r;\n  r = ((glGetClipPlanef = (PFNGLGETCLIPPLANEFPROC)glewGetProcAddress((const GLubyte*)\"glGetClipPlanef\")) == NULL) || r;\n  r = ((glGetClipPlanex = (PFNGLGETCLIPPLANEXPROC)glewGetProcAddress((const GLubyte*)\"glGetClipPlanex\")) == NULL) || r;\n  r = ((glGetFixedv = (PFNGLGETFIXEDVPROC)glewGetProcAddress((const GLubyte*)\"glGetFixedv\")) == NULL) || r;\n  r = ((glGetLightxv = (PFNGLGETLIGHTXVPROC)glewGetProcAddress((const GLubyte*)\"glGetLightxv\")) == NULL) || r;\n  r = ((glGetMaterialxv = (PFNGLGETMATERIALXVPROC)glewGetProcAddress((const GLubyte*)\"glGetMaterialxv\")) == NULL) || r;\n  r = ((glGetTexEnvxv = (PFNGLGETTEXENVXVPROC)glewGetProcAddress((const GLubyte*)\"glGetTexEnvxv\")) == NULL) || r;\n  r = ((glGetTexParameterxv = (PFNGLGETTEXPARAMETERXVPROC)glewGetProcAddress((const GLubyte*)\"glGetTexParameterxv\")) == NULL) || r;\n  r = ((glPointParameterx = (PFNGLPOINTPARAMETERXPROC)glewGetProcAddress((const GLubyte*)\"glPointParameterx\")) == NULL) || r;\n  r = ((glPointParameterxv = (PFNGLPOINTPARAMETERXVPROC)glewGetProcAddress((const GLubyte*)\"glPointParameterxv\")) == NULL) || r;\n  r = ((glPointSizePointerOES = (PFNGLPOINTSIZEPOINTEROESPROC)glewGetProcAddress((const GLubyte*)\"glPointSizePointerOES\")) == NULL) || r;\n  r = ((glTexParameterxv = (PFNGLTEXPARAMETERXVPROC)glewGetProcAddress((const GLubyte*)\"glTexParameterxv\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_REGAL_ES1_1_compatibility */\n\n#ifdef GL_REGAL_error_string\n\nstatic GLboolean _glewInit_GL_REGAL_error_string ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glErrorStringREGAL = (PFNGLERRORSTRINGREGALPROC)glewGetProcAddress((const GLubyte*)\"glErrorStringREGAL\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_REGAL_error_string */\n\n#ifdef GL_REGAL_extension_query\n\nstatic GLboolean _glewInit_GL_REGAL_extension_query ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetExtensionREGAL = (PFNGLGETEXTENSIONREGALPROC)glewGetProcAddress((const GLubyte*)\"glGetExtensionREGAL\")) == NULL) || r;\n  r = ((glIsSupportedREGAL = (PFNGLISSUPPORTEDREGALPROC)glewGetProcAddress((const GLubyte*)\"glIsSupportedREGAL\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_REGAL_extension_query */\n\n#ifdef GL_REGAL_log\n\nstatic GLboolean _glewInit_GL_REGAL_log ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glLogMessageCallbackREGAL = (PFNGLLOGMESSAGECALLBACKREGALPROC)glewGetProcAddress((const GLubyte*)\"glLogMessageCallbackREGAL\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_REGAL_log */\n\n#ifdef GL_REGAL_proc_address\n\nstatic GLboolean _glewInit_GL_REGAL_proc_address ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetProcAddressREGAL = (PFNGLGETPROCADDRESSREGALPROC)glewGetProcAddress((const GLubyte*)\"glGetProcAddressREGAL\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_REGAL_proc_address */\n\n#ifdef GL_SGIS_detail_texture\n\nstatic GLboolean _glewInit_GL_SGIS_detail_texture ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glDetailTexFuncSGIS = (PFNGLDETAILTEXFUNCSGISPROC)glewGetProcAddress((const GLubyte*)\"glDetailTexFuncSGIS\")) == NULL) || r;\n  r = ((glGetDetailTexFuncSGIS = (PFNGLGETDETAILTEXFUNCSGISPROC)glewGetProcAddress((const GLubyte*)\"glGetDetailTexFuncSGIS\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_SGIS_detail_texture */\n\n#ifdef GL_SGIS_fog_function\n\nstatic GLboolean _glewInit_GL_SGIS_fog_function ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glFogFuncSGIS = (PFNGLFOGFUNCSGISPROC)glewGetProcAddress((const GLubyte*)\"glFogFuncSGIS\")) == NULL) || r;\n  r = ((glGetFogFuncSGIS = (PFNGLGETFOGFUNCSGISPROC)glewGetProcAddress((const GLubyte*)\"glGetFogFuncSGIS\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_SGIS_fog_function */\n\n#ifdef GL_SGIS_multisample\n\nstatic GLboolean _glewInit_GL_SGIS_multisample ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glSampleMaskSGIS = (PFNGLSAMPLEMASKSGISPROC)glewGetProcAddress((const GLubyte*)\"glSampleMaskSGIS\")) == NULL) || r;\n  r = ((glSamplePatternSGIS = (PFNGLSAMPLEPATTERNSGISPROC)glewGetProcAddress((const GLubyte*)\"glSamplePatternSGIS\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_SGIS_multisample */\n\n#ifdef GL_SGIS_sharpen_texture\n\nstatic GLboolean _glewInit_GL_SGIS_sharpen_texture ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetSharpenTexFuncSGIS = (PFNGLGETSHARPENTEXFUNCSGISPROC)glewGetProcAddress((const GLubyte*)\"glGetSharpenTexFuncSGIS\")) == NULL) || r;\n  r = ((glSharpenTexFuncSGIS = (PFNGLSHARPENTEXFUNCSGISPROC)glewGetProcAddress((const GLubyte*)\"glSharpenTexFuncSGIS\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_SGIS_sharpen_texture */\n\n#ifdef GL_SGIS_texture4D\n\nstatic GLboolean _glewInit_GL_SGIS_texture4D ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glTexImage4DSGIS = (PFNGLTEXIMAGE4DSGISPROC)glewGetProcAddress((const GLubyte*)\"glTexImage4DSGIS\")) == NULL) || r;\n  r = ((glTexSubImage4DSGIS = (PFNGLTEXSUBIMAGE4DSGISPROC)glewGetProcAddress((const GLubyte*)\"glTexSubImage4DSGIS\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_SGIS_texture4D */\n\n#ifdef GL_SGIS_texture_filter4\n\nstatic GLboolean _glewInit_GL_SGIS_texture_filter4 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGetTexFilterFuncSGIS = (PFNGLGETTEXFILTERFUNCSGISPROC)glewGetProcAddress((const GLubyte*)\"glGetTexFilterFuncSGIS\")) == NULL) || r;\n  r = ((glTexFilterFuncSGIS = (PFNGLTEXFILTERFUNCSGISPROC)glewGetProcAddress((const GLubyte*)\"glTexFilterFuncSGIS\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_SGIS_texture_filter4 */\n\n#ifdef GL_SGIX_async\n\nstatic GLboolean _glewInit_GL_SGIX_async ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glAsyncMarkerSGIX = (PFNGLASYNCMARKERSGIXPROC)glewGetProcAddress((const GLubyte*)\"glAsyncMarkerSGIX\")) == NULL) || r;\n  r = ((glDeleteAsyncMarkersSGIX = (PFNGLDELETEASYNCMARKERSSGIXPROC)glewGetProcAddress((const GLubyte*)\"glDeleteAsyncMarkersSGIX\")) == NULL) || r;\n  r = ((glFinishAsyncSGIX = (PFNGLFINISHASYNCSGIXPROC)glewGetProcAddress((const GLubyte*)\"glFinishAsyncSGIX\")) == NULL) || r;\n  r = ((glGenAsyncMarkersSGIX = (PFNGLGENASYNCMARKERSSGIXPROC)glewGetProcAddress((const GLubyte*)\"glGenAsyncMarkersSGIX\")) == NULL) || r;\n  r = ((glIsAsyncMarkerSGIX = (PFNGLISASYNCMARKERSGIXPROC)glewGetProcAddress((const GLubyte*)\"glIsAsyncMarkerSGIX\")) == NULL) || r;\n  r = ((glPollAsyncSGIX = (PFNGLPOLLASYNCSGIXPROC)glewGetProcAddress((const GLubyte*)\"glPollAsyncSGIX\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_SGIX_async */\n\n#ifdef GL_SGIX_flush_raster\n\nstatic GLboolean _glewInit_GL_SGIX_flush_raster ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glFlushRasterSGIX = (PFNGLFLUSHRASTERSGIXPROC)glewGetProcAddress((const GLubyte*)\"glFlushRasterSGIX\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_SGIX_flush_raster */\n\n#ifdef GL_SGIX_fog_texture\n\nstatic GLboolean _glewInit_GL_SGIX_fog_texture ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glTextureFogSGIX = (PFNGLTEXTUREFOGSGIXPROC)glewGetProcAddress((const GLubyte*)\"glTextureFogSGIX\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_SGIX_fog_texture */\n\n#ifdef GL_SGIX_fragment_specular_lighting\n\nstatic GLboolean _glewInit_GL_SGIX_fragment_specular_lighting ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glFragmentColorMaterialSGIX = (PFNGLFRAGMENTCOLORMATERIALSGIXPROC)glewGetProcAddress((const GLubyte*)\"glFragmentColorMaterialSGIX\")) == NULL) || r;\n  r = ((glFragmentLightModelfSGIX = (PFNGLFRAGMENTLIGHTMODELFSGIXPROC)glewGetProcAddress((const GLubyte*)\"glFragmentLightModelfSGIX\")) == NULL) || r;\n  r = ((glFragmentLightModelfvSGIX = (PFNGLFRAGMENTLIGHTMODELFVSGIXPROC)glewGetProcAddress((const GLubyte*)\"glFragmentLightModelfvSGIX\")) == NULL) || r;\n  r = ((glFragmentLightModeliSGIX = (PFNGLFRAGMENTLIGHTMODELISGIXPROC)glewGetProcAddress((const GLubyte*)\"glFragmentLightModeliSGIX\")) == NULL) || r;\n  r = ((glFragmentLightModelivSGIX = (PFNGLFRAGMENTLIGHTMODELIVSGIXPROC)glewGetProcAddress((const GLubyte*)\"glFragmentLightModelivSGIX\")) == NULL) || r;\n  r = ((glFragmentLightfSGIX = (PFNGLFRAGMENTLIGHTFSGIXPROC)glewGetProcAddress((const GLubyte*)\"glFragmentLightfSGIX\")) == NULL) || r;\n  r = ((glFragmentLightfvSGIX = (PFNGLFRAGMENTLIGHTFVSGIXPROC)glewGetProcAddress((const GLubyte*)\"glFragmentLightfvSGIX\")) == NULL) || r;\n  r = ((glFragmentLightiSGIX = (PFNGLFRAGMENTLIGHTISGIXPROC)glewGetProcAddress((const GLubyte*)\"glFragmentLightiSGIX\")) == NULL) || r;\n  r = ((glFragmentLightivSGIX = (PFNGLFRAGMENTLIGHTIVSGIXPROC)glewGetProcAddress((const GLubyte*)\"glFragmentLightivSGIX\")) == NULL) || r;\n  r = ((glFragmentMaterialfSGIX = (PFNGLFRAGMENTMATERIALFSGIXPROC)glewGetProcAddress((const GLubyte*)\"glFragmentMaterialfSGIX\")) == NULL) || r;\n  r = ((glFragmentMaterialfvSGIX = (PFNGLFRAGMENTMATERIALFVSGIXPROC)glewGetProcAddress((const GLubyte*)\"glFragmentMaterialfvSGIX\")) == NULL) || r;\n  r = ((glFragmentMaterialiSGIX = (PFNGLFRAGMENTMATERIALISGIXPROC)glewGetProcAddress((const GLubyte*)\"glFragmentMaterialiSGIX\")) == NULL) || r;\n  r = ((glFragmentMaterialivSGIX = (PFNGLFRAGMENTMATERIALIVSGIXPROC)glewGetProcAddress((const GLubyte*)\"glFragmentMaterialivSGIX\")) == NULL) || r;\n  r = ((glGetFragmentLightfvSGIX = (PFNGLGETFRAGMENTLIGHTFVSGIXPROC)glewGetProcAddress((const GLubyte*)\"glGetFragmentLightfvSGIX\")) == NULL) || r;\n  r = ((glGetFragmentLightivSGIX = (PFNGLGETFRAGMENTLIGHTIVSGIXPROC)glewGetProcAddress((const GLubyte*)\"glGetFragmentLightivSGIX\")) == NULL) || r;\n  r = ((glGetFragmentMaterialfvSGIX = (PFNGLGETFRAGMENTMATERIALFVSGIXPROC)glewGetProcAddress((const GLubyte*)\"glGetFragmentMaterialfvSGIX\")) == NULL) || r;\n  r = ((glGetFragmentMaterialivSGIX = (PFNGLGETFRAGMENTMATERIALIVSGIXPROC)glewGetProcAddress((const GLubyte*)\"glGetFragmentMaterialivSGIX\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_SGIX_fragment_specular_lighting */\n\n#ifdef GL_SGIX_framezoom\n\nstatic GLboolean _glewInit_GL_SGIX_framezoom ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glFrameZoomSGIX = (PFNGLFRAMEZOOMSGIXPROC)glewGetProcAddress((const GLubyte*)\"glFrameZoomSGIX\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_SGIX_framezoom */\n\n#ifdef GL_SGIX_pixel_texture\n\nstatic GLboolean _glewInit_GL_SGIX_pixel_texture ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glPixelTexGenSGIX = (PFNGLPIXELTEXGENSGIXPROC)glewGetProcAddress((const GLubyte*)\"glPixelTexGenSGIX\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_SGIX_pixel_texture */\n\n#ifdef GL_SGIX_reference_plane\n\nstatic GLboolean _glewInit_GL_SGIX_reference_plane ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glReferencePlaneSGIX = (PFNGLREFERENCEPLANESGIXPROC)glewGetProcAddress((const GLubyte*)\"glReferencePlaneSGIX\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_SGIX_reference_plane */\n\n#ifdef GL_SGIX_sprite\n\nstatic GLboolean _glewInit_GL_SGIX_sprite ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glSpriteParameterfSGIX = (PFNGLSPRITEPARAMETERFSGIXPROC)glewGetProcAddress((const GLubyte*)\"glSpriteParameterfSGIX\")) == NULL) || r;\n  r = ((glSpriteParameterfvSGIX = (PFNGLSPRITEPARAMETERFVSGIXPROC)glewGetProcAddress((const GLubyte*)\"glSpriteParameterfvSGIX\")) == NULL) || r;\n  r = ((glSpriteParameteriSGIX = (PFNGLSPRITEPARAMETERISGIXPROC)glewGetProcAddress((const GLubyte*)\"glSpriteParameteriSGIX\")) == NULL) || r;\n  r = ((glSpriteParameterivSGIX = (PFNGLSPRITEPARAMETERIVSGIXPROC)glewGetProcAddress((const GLubyte*)\"glSpriteParameterivSGIX\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_SGIX_sprite */\n\n#ifdef GL_SGIX_tag_sample_buffer\n\nstatic GLboolean _glewInit_GL_SGIX_tag_sample_buffer ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glTagSampleBufferSGIX = (PFNGLTAGSAMPLEBUFFERSGIXPROC)glewGetProcAddress((const GLubyte*)\"glTagSampleBufferSGIX\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_SGIX_tag_sample_buffer */\n\n#ifdef GL_SGI_color_table\n\nstatic GLboolean _glewInit_GL_SGI_color_table ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glColorTableParameterfvSGI = (PFNGLCOLORTABLEPARAMETERFVSGIPROC)glewGetProcAddress((const GLubyte*)\"glColorTableParameterfvSGI\")) == NULL) || r;\n  r = ((glColorTableParameterivSGI = (PFNGLCOLORTABLEPARAMETERIVSGIPROC)glewGetProcAddress((const GLubyte*)\"glColorTableParameterivSGI\")) == NULL) || r;\n  r = ((glColorTableSGI = (PFNGLCOLORTABLESGIPROC)glewGetProcAddress((const GLubyte*)\"glColorTableSGI\")) == NULL) || r;\n  r = ((glCopyColorTableSGI = (PFNGLCOPYCOLORTABLESGIPROC)glewGetProcAddress((const GLubyte*)\"glCopyColorTableSGI\")) == NULL) || r;\n  r = ((glGetColorTableParameterfvSGI = (PFNGLGETCOLORTABLEPARAMETERFVSGIPROC)glewGetProcAddress((const GLubyte*)\"glGetColorTableParameterfvSGI\")) == NULL) || r;\n  r = ((glGetColorTableParameterivSGI = (PFNGLGETCOLORTABLEPARAMETERIVSGIPROC)glewGetProcAddress((const GLubyte*)\"glGetColorTableParameterivSGI\")) == NULL) || r;\n  r = ((glGetColorTableSGI = (PFNGLGETCOLORTABLESGIPROC)glewGetProcAddress((const GLubyte*)\"glGetColorTableSGI\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_SGI_color_table */\n\n#ifdef GL_SUNX_constant_data\n\nstatic GLboolean _glewInit_GL_SUNX_constant_data ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glFinishTextureSUNX = (PFNGLFINISHTEXTURESUNXPROC)glewGetProcAddress((const GLubyte*)\"glFinishTextureSUNX\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_SUNX_constant_data */\n\n#ifdef GL_SUN_global_alpha\n\nstatic GLboolean _glewInit_GL_SUN_global_alpha ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glGlobalAlphaFactorbSUN = (PFNGLGLOBALALPHAFACTORBSUNPROC)glewGetProcAddress((const GLubyte*)\"glGlobalAlphaFactorbSUN\")) == NULL) || r;\n  r = ((glGlobalAlphaFactordSUN = (PFNGLGLOBALALPHAFACTORDSUNPROC)glewGetProcAddress((const GLubyte*)\"glGlobalAlphaFactordSUN\")) == NULL) || r;\n  r = ((glGlobalAlphaFactorfSUN = (PFNGLGLOBALALPHAFACTORFSUNPROC)glewGetProcAddress((const GLubyte*)\"glGlobalAlphaFactorfSUN\")) == NULL) || r;\n  r = ((glGlobalAlphaFactoriSUN = (PFNGLGLOBALALPHAFACTORISUNPROC)glewGetProcAddress((const GLubyte*)\"glGlobalAlphaFactoriSUN\")) == NULL) || r;\n  r = ((glGlobalAlphaFactorsSUN = (PFNGLGLOBALALPHAFACTORSSUNPROC)glewGetProcAddress((const GLubyte*)\"glGlobalAlphaFactorsSUN\")) == NULL) || r;\n  r = ((glGlobalAlphaFactorubSUN = (PFNGLGLOBALALPHAFACTORUBSUNPROC)glewGetProcAddress((const GLubyte*)\"glGlobalAlphaFactorubSUN\")) == NULL) || r;\n  r = ((glGlobalAlphaFactoruiSUN = (PFNGLGLOBALALPHAFACTORUISUNPROC)glewGetProcAddress((const GLubyte*)\"glGlobalAlphaFactoruiSUN\")) == NULL) || r;\n  r = ((glGlobalAlphaFactorusSUN = (PFNGLGLOBALALPHAFACTORUSSUNPROC)glewGetProcAddress((const GLubyte*)\"glGlobalAlphaFactorusSUN\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_SUN_global_alpha */\n\n#ifdef GL_SUN_read_video_pixels\n\nstatic GLboolean _glewInit_GL_SUN_read_video_pixels ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glReadVideoPixelsSUN = (PFNGLREADVIDEOPIXELSSUNPROC)glewGetProcAddress((const GLubyte*)\"glReadVideoPixelsSUN\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_SUN_read_video_pixels */\n\n#ifdef GL_SUN_triangle_list\n\nstatic GLboolean _glewInit_GL_SUN_triangle_list ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glReplacementCodePointerSUN = (PFNGLREPLACEMENTCODEPOINTERSUNPROC)glewGetProcAddress((const GLubyte*)\"glReplacementCodePointerSUN\")) == NULL) || r;\n  r = ((glReplacementCodeubSUN = (PFNGLREPLACEMENTCODEUBSUNPROC)glewGetProcAddress((const GLubyte*)\"glReplacementCodeubSUN\")) == NULL) || r;\n  r = ((glReplacementCodeubvSUN = (PFNGLREPLACEMENTCODEUBVSUNPROC)glewGetProcAddress((const GLubyte*)\"glReplacementCodeubvSUN\")) == NULL) || r;\n  r = ((glReplacementCodeuiSUN = (PFNGLREPLACEMENTCODEUISUNPROC)glewGetProcAddress((const GLubyte*)\"glReplacementCodeuiSUN\")) == NULL) || r;\n  r = ((glReplacementCodeuivSUN = (PFNGLREPLACEMENTCODEUIVSUNPROC)glewGetProcAddress((const GLubyte*)\"glReplacementCodeuivSUN\")) == NULL) || r;\n  r = ((glReplacementCodeusSUN = (PFNGLREPLACEMENTCODEUSSUNPROC)glewGetProcAddress((const GLubyte*)\"glReplacementCodeusSUN\")) == NULL) || r;\n  r = ((glReplacementCodeusvSUN = (PFNGLREPLACEMENTCODEUSVSUNPROC)glewGetProcAddress((const GLubyte*)\"glReplacementCodeusvSUN\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_SUN_triangle_list */\n\n#ifdef GL_SUN_vertex\n\nstatic GLboolean _glewInit_GL_SUN_vertex ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glColor3fVertex3fSUN = (PFNGLCOLOR3FVERTEX3FSUNPROC)glewGetProcAddress((const GLubyte*)\"glColor3fVertex3fSUN\")) == NULL) || r;\n  r = ((glColor3fVertex3fvSUN = (PFNGLCOLOR3FVERTEX3FVSUNPROC)glewGetProcAddress((const GLubyte*)\"glColor3fVertex3fvSUN\")) == NULL) || r;\n  r = ((glColor4fNormal3fVertex3fSUN = (PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC)glewGetProcAddress((const GLubyte*)\"glColor4fNormal3fVertex3fSUN\")) == NULL) || r;\n  r = ((glColor4fNormal3fVertex3fvSUN = (PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC)glewGetProcAddress((const GLubyte*)\"glColor4fNormal3fVertex3fvSUN\")) == NULL) || r;\n  r = ((glColor4ubVertex2fSUN = (PFNGLCOLOR4UBVERTEX2FSUNPROC)glewGetProcAddress((const GLubyte*)\"glColor4ubVertex2fSUN\")) == NULL) || r;\n  r = ((glColor4ubVertex2fvSUN = (PFNGLCOLOR4UBVERTEX2FVSUNPROC)glewGetProcAddress((const GLubyte*)\"glColor4ubVertex2fvSUN\")) == NULL) || r;\n  r = ((glColor4ubVertex3fSUN = (PFNGLCOLOR4UBVERTEX3FSUNPROC)glewGetProcAddress((const GLubyte*)\"glColor4ubVertex3fSUN\")) == NULL) || r;\n  r = ((glColor4ubVertex3fvSUN = (PFNGLCOLOR4UBVERTEX3FVSUNPROC)glewGetProcAddress((const GLubyte*)\"glColor4ubVertex3fvSUN\")) == NULL) || r;\n  r = ((glNormal3fVertex3fSUN = (PFNGLNORMAL3FVERTEX3FSUNPROC)glewGetProcAddress((const GLubyte*)\"glNormal3fVertex3fSUN\")) == NULL) || r;\n  r = ((glNormal3fVertex3fvSUN = (PFNGLNORMAL3FVERTEX3FVSUNPROC)glewGetProcAddress((const GLubyte*)\"glNormal3fVertex3fvSUN\")) == NULL) || r;\n  r = ((glReplacementCodeuiColor3fVertex3fSUN = (PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC)glewGetProcAddress((const GLubyte*)\"glReplacementCodeuiColor3fVertex3fSUN\")) == NULL) || r;\n  r = ((glReplacementCodeuiColor3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC)glewGetProcAddress((const GLubyte*)\"glReplacementCodeuiColor3fVertex3fvSUN\")) == NULL) || r;\n  r = ((glReplacementCodeuiColor4fNormal3fVertex3fSUN = (PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC)glewGetProcAddress((const GLubyte*)\"glReplacementCodeuiColor4fNormal3fVertex3fSUN\")) == NULL) || r;\n  r = ((glReplacementCodeuiColor4fNormal3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC)glewGetProcAddress((const GLubyte*)\"glReplacementCodeuiColor4fNormal3fVertex3fvSUN\")) == NULL) || r;\n  r = ((glReplacementCodeuiColor4ubVertex3fSUN = (PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC)glewGetProcAddress((const GLubyte*)\"glReplacementCodeuiColor4ubVertex3fSUN\")) == NULL) || r;\n  r = ((glReplacementCodeuiColor4ubVertex3fvSUN = (PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC)glewGetProcAddress((const GLubyte*)\"glReplacementCodeuiColor4ubVertex3fvSUN\")) == NULL) || r;\n  r = ((glReplacementCodeuiNormal3fVertex3fSUN = (PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC)glewGetProcAddress((const GLubyte*)\"glReplacementCodeuiNormal3fVertex3fSUN\")) == NULL) || r;\n  r = ((glReplacementCodeuiNormal3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC)glewGetProcAddress((const GLubyte*)\"glReplacementCodeuiNormal3fVertex3fvSUN\")) == NULL) || r;\n  r = ((glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC)glewGetProcAddress((const GLubyte*)\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN\")) == NULL) || r;\n  r = ((glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC)glewGetProcAddress((const GLubyte*)\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN\")) == NULL) || r;\n  r = ((glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC)glewGetProcAddress((const GLubyte*)\"glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\")) == NULL) || r;\n  r = ((glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC)glewGetProcAddress((const GLubyte*)\"glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN\")) == NULL) || r;\n  r = ((glReplacementCodeuiTexCoord2fVertex3fSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC)glewGetProcAddress((const GLubyte*)\"glReplacementCodeuiTexCoord2fVertex3fSUN\")) == NULL) || r;\n  r = ((glReplacementCodeuiTexCoord2fVertex3fvSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC)glewGetProcAddress((const GLubyte*)\"glReplacementCodeuiTexCoord2fVertex3fvSUN\")) == NULL) || r;\n  r = ((glReplacementCodeuiVertex3fSUN = (PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC)glewGetProcAddress((const GLubyte*)\"glReplacementCodeuiVertex3fSUN\")) == NULL) || r;\n  r = ((glReplacementCodeuiVertex3fvSUN = (PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC)glewGetProcAddress((const GLubyte*)\"glReplacementCodeuiVertex3fvSUN\")) == NULL) || r;\n  r = ((glTexCoord2fColor3fVertex3fSUN = (PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC)glewGetProcAddress((const GLubyte*)\"glTexCoord2fColor3fVertex3fSUN\")) == NULL) || r;\n  r = ((glTexCoord2fColor3fVertex3fvSUN = (PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC)glewGetProcAddress((const GLubyte*)\"glTexCoord2fColor3fVertex3fvSUN\")) == NULL) || r;\n  r = ((glTexCoord2fColor4fNormal3fVertex3fSUN = (PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC)glewGetProcAddress((const GLubyte*)\"glTexCoord2fColor4fNormal3fVertex3fSUN\")) == NULL) || r;\n  r = ((glTexCoord2fColor4fNormal3fVertex3fvSUN = (PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC)glewGetProcAddress((const GLubyte*)\"glTexCoord2fColor4fNormal3fVertex3fvSUN\")) == NULL) || r;\n  r = ((glTexCoord2fColor4ubVertex3fSUN = (PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC)glewGetProcAddress((const GLubyte*)\"glTexCoord2fColor4ubVertex3fSUN\")) == NULL) || r;\n  r = ((glTexCoord2fColor4ubVertex3fvSUN = (PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC)glewGetProcAddress((const GLubyte*)\"glTexCoord2fColor4ubVertex3fvSUN\")) == NULL) || r;\n  r = ((glTexCoord2fNormal3fVertex3fSUN = (PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC)glewGetProcAddress((const GLubyte*)\"glTexCoord2fNormal3fVertex3fSUN\")) == NULL) || r;\n  r = ((glTexCoord2fNormal3fVertex3fvSUN = (PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC)glewGetProcAddress((const GLubyte*)\"glTexCoord2fNormal3fVertex3fvSUN\")) == NULL) || r;\n  r = ((glTexCoord2fVertex3fSUN = (PFNGLTEXCOORD2FVERTEX3FSUNPROC)glewGetProcAddress((const GLubyte*)\"glTexCoord2fVertex3fSUN\")) == NULL) || r;\n  r = ((glTexCoord2fVertex3fvSUN = (PFNGLTEXCOORD2FVERTEX3FVSUNPROC)glewGetProcAddress((const GLubyte*)\"glTexCoord2fVertex3fvSUN\")) == NULL) || r;\n  r = ((glTexCoord4fColor4fNormal3fVertex4fSUN = (PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC)glewGetProcAddress((const GLubyte*)\"glTexCoord4fColor4fNormal3fVertex4fSUN\")) == NULL) || r;\n  r = ((glTexCoord4fColor4fNormal3fVertex4fvSUN = (PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC)glewGetProcAddress((const GLubyte*)\"glTexCoord4fColor4fNormal3fVertex4fvSUN\")) == NULL) || r;\n  r = ((glTexCoord4fVertex4fSUN = (PFNGLTEXCOORD4FVERTEX4FSUNPROC)glewGetProcAddress((const GLubyte*)\"glTexCoord4fVertex4fSUN\")) == NULL) || r;\n  r = ((glTexCoord4fVertex4fvSUN = (PFNGLTEXCOORD4FVERTEX4FVSUNPROC)glewGetProcAddress((const GLubyte*)\"glTexCoord4fVertex4fvSUN\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_SUN_vertex */\n\n#ifdef GL_WIN_swap_hint\n\nstatic GLboolean _glewInit_GL_WIN_swap_hint ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glAddSwapHintRectWIN = (PFNGLADDSWAPHINTRECTWINPROC)glewGetProcAddress((const GLubyte*)\"glAddSwapHintRectWIN\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GL_WIN_swap_hint */\n\n/* ------------------------------------------------------------------------- */\n\nstatic int _glewExtensionCompare(const char *s1, const char *s2)\n{\n  /* http://www.chanduthedev.com/2012/07/strcmp-implementation-in-c.html */\n  while (*s1 || *s2)\n  {\n      if (*s1 > *s2)\n          return 1;\n      if (*s1 < *s2)\n          return -1;\n      s1++;\n      s2++;\n  }\n  return 0;\n}\n\nstatic ptrdiff_t _glewBsearchExtension(const char* name)\n{\n  ptrdiff_t lo = 0, hi = sizeof(_glewExtensionLookup) / sizeof(char*) - 2;\n\n  while (lo <= hi)\n  {\n    ptrdiff_t mid = (lo + hi) / 2;\n    const int cmp = _glewExtensionCompare(name, _glewExtensionLookup[mid]);\n    if (cmp < 0) hi = mid - 1;\n    else if (cmp > 0) lo = mid + 1;\n    else return mid;\n  }\n  return -1;\n}\n\nstatic GLboolean *_glewGetExtensionString(const char *name)\n{\n  ptrdiff_t n = _glewBsearchExtension(name);\n  if (n >= 0) return &_glewExtensionString[n];\n  return NULL;\n}\n\nstatic GLboolean *_glewGetExtensionEnable(const char *name)\n{\n  ptrdiff_t n = _glewBsearchExtension(name);\n  if (n >= 0) return _glewExtensionEnabled[n];\n  return NULL;\n}\n\nstatic const char *_glewNextSpace(const char *i)\n{\n  const char *j = i;\n  if (j)\n    while (*j!=' ' && *j) ++j;\n  return j;\n}\n\nstatic const char *_glewNextNonSpace(const char *i)\n{\n  const char *j = i;\n  if (j)\n    while (*j==' ') ++j;\n  return j;\n}\n\nGLboolean GLEWAPIENTRY glewGetExtension (const char* name)\n{\n  GLboolean *enable = _glewGetExtensionString(name);\n  if (enable)\n    return *enable;\n  return GL_FALSE;\n}\n\n/* ------------------------------------------------------------------------- */\n\ntypedef const GLubyte* (GLAPIENTRY * PFNGLGETSTRINGPROC) (GLenum name);\ntypedef void (GLAPIENTRY * PFNGLGETINTEGERVPROC) (GLenum pname, GLint *params);\n\nstatic GLenum GLEWAPIENTRY glewContextInit ()\n{\n  PFNGLGETSTRINGPROC getString;\n  const GLubyte* s;\n  GLuint dot;\n  GLint major, minor;\n  size_t n;\n\n  #ifdef _WIN32\n  getString = glGetString;\n  #else\n  getString = (PFNGLGETSTRINGPROC) glewGetProcAddress((const GLubyte*)\"glGetString\");\n  if (!getString)\n    return GLEW_ERROR_NO_GL_VERSION;\n  #endif\n\n  /* query opengl version */\n  s = getString(GL_VERSION);\n  dot = _glewStrCLen(s, '.');\n  if (dot == 0)\n    return GLEW_ERROR_NO_GL_VERSION;\n\n  major = s[dot-1]-'0';\n  minor = s[dot+1]-'0';\n\n  if (minor < 0 || minor > 9)\n    minor = 0;\n  if (major<0 || major>9)\n    return GLEW_ERROR_NO_GL_VERSION;\n\n  if (major == 1 && minor == 0)\n  {\n    return GLEW_ERROR_GL_VERSION_10_ONLY;\n  }\n  else\n  {\n    GLEW_VERSION_4_5   = ( major > 4 )                 || ( major == 4 && minor >= 5 ) ? GL_TRUE : GL_FALSE;\n    GLEW_VERSION_4_4   = GLEW_VERSION_4_5   == GL_TRUE || ( major == 4 && minor >= 4 ) ? GL_TRUE : GL_FALSE;\n    GLEW_VERSION_4_3   = GLEW_VERSION_4_4   == GL_TRUE || ( major == 4 && minor >= 3 ) ? GL_TRUE : GL_FALSE;\n    GLEW_VERSION_4_2   = GLEW_VERSION_4_3   == GL_TRUE || ( major == 4 && minor >= 2 ) ? GL_TRUE : GL_FALSE;\n    GLEW_VERSION_4_1   = GLEW_VERSION_4_2   == GL_TRUE || ( major == 4 && minor >= 1 ) ? GL_TRUE : GL_FALSE;\n    GLEW_VERSION_4_0   = GLEW_VERSION_4_1   == GL_TRUE || ( major == 4               ) ? GL_TRUE : GL_FALSE;\n    GLEW_VERSION_3_3   = GLEW_VERSION_4_0   == GL_TRUE || ( major == 3 && minor >= 3 ) ? GL_TRUE : GL_FALSE;\n    GLEW_VERSION_3_2   = GLEW_VERSION_3_3   == GL_TRUE || ( major == 3 && minor >= 2 ) ? GL_TRUE : GL_FALSE;\n    GLEW_VERSION_3_1   = GLEW_VERSION_3_2   == GL_TRUE || ( major == 3 && minor >= 1 ) ? GL_TRUE : GL_FALSE;\n    GLEW_VERSION_3_0   = GLEW_VERSION_3_1   == GL_TRUE || ( major == 3               ) ? GL_TRUE : GL_FALSE;\n    GLEW_VERSION_2_1   = GLEW_VERSION_3_0   == GL_TRUE || ( major == 2 && minor >= 1 ) ? GL_TRUE : GL_FALSE;\n    GLEW_VERSION_2_0   = GLEW_VERSION_2_1   == GL_TRUE || ( major == 2               ) ? GL_TRUE : GL_FALSE;\n    GLEW_VERSION_1_5   = GLEW_VERSION_2_0   == GL_TRUE || ( major == 1 && minor >= 5 ) ? GL_TRUE : GL_FALSE;\n    GLEW_VERSION_1_4   = GLEW_VERSION_1_5   == GL_TRUE || ( major == 1 && minor >= 4 ) ? GL_TRUE : GL_FALSE;\n    GLEW_VERSION_1_3   = GLEW_VERSION_1_4   == GL_TRUE || ( major == 1 && minor >= 3 ) ? GL_TRUE : GL_FALSE;\n    GLEW_VERSION_1_2_1 = GLEW_VERSION_1_3   == GL_TRUE                                 ? GL_TRUE : GL_FALSE;\n    GLEW_VERSION_1_2   = GLEW_VERSION_1_2_1 == GL_TRUE || ( major == 1 && minor >= 2 ) ? GL_TRUE : GL_FALSE;\n    GLEW_VERSION_1_1   = GLEW_VERSION_1_2   == GL_TRUE || ( major == 1 && minor >= 1 ) ? GL_TRUE : GL_FALSE;\n  }\n\n  for (n = 0; n < sizeof(_glewExtensionString) / sizeof(_glewExtensionString[0]); ++n)\n    _glewExtensionString[n] = GL_FALSE;\n\n  if (GLEW_VERSION_3_0)\n  {\n    GLint n = 0;\n    GLint i;\n    PFNGLGETINTEGERVPROC getIntegerv;\n    PFNGLGETSTRINGIPROC getStringi;\n    const char *ext;\n    GLboolean *enable;\n\n    #ifdef _WIN32\n    getIntegerv = glGetIntegerv;\n    #else\n    getIntegerv = (PFNGLGETINTEGERVPROC) glewGetProcAddress((const GLubyte*)\"glGetIntegerv\");\n    #endif\n\n    if (getIntegerv)\n      getIntegerv(GL_NUM_EXTENSIONS, &n);\n\n    /* glGetStringi is OpenGL 3.0 */\n    getStringi = (PFNGLGETSTRINGIPROC) glewGetProcAddress((const GLubyte*)\"glGetStringi\");\n    if (getStringi)\n      for (i = 0; i<n; ++i)\n      {\n        ext = (const char *) getStringi(GL_EXTENSIONS, i);\n\n        /* Based on extension string(s), glewGetExtension purposes */\n        enable = _glewGetExtensionString(ext);\n        if (enable)\n          *enable = GL_TRUE;\n\n        /* Based on extension string(s), experimental mode, glewIsSupported purposes */\n        enable = _glewGetExtensionEnable(ext);\n        if (enable)\n          *enable = GL_TRUE;\n      }\n  }\n  else\n  {\n    const char *extensions;\n    const char *end;\n    const char *i;\n    const char *j;\n    char ext[128];\n    GLboolean *enable;\n\n    extensions = (const char *) getString(GL_EXTENSIONS);\n\n    if (extensions)\n    {\n      end = extensions + _glewStrLen((const GLubyte *) extensions);\n      for (i=extensions; i<end; i = j + 1)\n      {\n        i = _glewNextNonSpace(i);\n        j = _glewNextSpace(i);\n\n        /* Copy extension into NUL terminated string */\n        if (j-i >= (ptrdiff_t) sizeof(ext))\n          continue;\n        _glewStrCopy(ext, i, ' ');\n\n        /* Based on extension string(s), glewGetExtension purposes */\n        enable = _glewGetExtensionString(ext);\n        if (enable)\n          *enable = GL_TRUE;\n\n        /* Based on extension string(s), experimental mode, glewIsSupported purposes */\n        enable = _glewGetExtensionEnable(ext);\n        if (enable)\n          *enable = GL_TRUE;\n      }\n    }\n  }\n#ifdef GL_VERSION_1_2\n  if (glewExperimental || GLEW_VERSION_1_2) GLEW_VERSION_1_2 = !_glewInit_GL_VERSION_1_2();\n#endif /* GL_VERSION_1_2 */\n#ifdef GL_VERSION_1_3\n  if (glewExperimental || GLEW_VERSION_1_3) GLEW_VERSION_1_3 = !_glewInit_GL_VERSION_1_3();\n#endif /* GL_VERSION_1_3 */\n#ifdef GL_VERSION_1_4\n  if (glewExperimental || GLEW_VERSION_1_4) GLEW_VERSION_1_4 = !_glewInit_GL_VERSION_1_4();\n#endif /* GL_VERSION_1_4 */\n#ifdef GL_VERSION_1_5\n  if (glewExperimental || GLEW_VERSION_1_5) GLEW_VERSION_1_5 = !_glewInit_GL_VERSION_1_5();\n#endif /* GL_VERSION_1_5 */\n#ifdef GL_VERSION_2_0\n  if (glewExperimental || GLEW_VERSION_2_0) GLEW_VERSION_2_0 = !_glewInit_GL_VERSION_2_0();\n#endif /* GL_VERSION_2_0 */\n#ifdef GL_VERSION_2_1\n  if (glewExperimental || GLEW_VERSION_2_1) GLEW_VERSION_2_1 = !_glewInit_GL_VERSION_2_1();\n#endif /* GL_VERSION_2_1 */\n#ifdef GL_VERSION_3_0\n  if (glewExperimental || GLEW_VERSION_3_0) GLEW_VERSION_3_0 = !_glewInit_GL_VERSION_3_0();\n#endif /* GL_VERSION_3_0 */\n#ifdef GL_VERSION_3_1\n  if (glewExperimental || GLEW_VERSION_3_1) GLEW_VERSION_3_1 = !_glewInit_GL_VERSION_3_1();\n#endif /* GL_VERSION_3_1 */\n#ifdef GL_VERSION_3_2\n  if (glewExperimental || GLEW_VERSION_3_2) GLEW_VERSION_3_2 = !_glewInit_GL_VERSION_3_2();\n#endif /* GL_VERSION_3_2 */\n#ifdef GL_VERSION_3_3\n  if (glewExperimental || GLEW_VERSION_3_3) GLEW_VERSION_3_3 = !_glewInit_GL_VERSION_3_3();\n#endif /* GL_VERSION_3_3 */\n#ifdef GL_VERSION_4_0\n  if (glewExperimental || GLEW_VERSION_4_0) GLEW_VERSION_4_0 = !_glewInit_GL_VERSION_4_0();\n#endif /* GL_VERSION_4_0 */\n#ifdef GL_VERSION_4_5\n  if (glewExperimental || GLEW_VERSION_4_5) GLEW_VERSION_4_5 = !_glewInit_GL_VERSION_4_5();\n#endif /* GL_VERSION_4_5 */\n#ifdef GL_3DFX_tbuffer\n  if (glewExperimental || GLEW_3DFX_tbuffer) GLEW_3DFX_tbuffer = !_glewInit_GL_3DFX_tbuffer();\n#endif /* GL_3DFX_tbuffer */\n#ifdef GL_AMD_debug_output\n  if (glewExperimental || GLEW_AMD_debug_output) GLEW_AMD_debug_output = !_glewInit_GL_AMD_debug_output();\n#endif /* GL_AMD_debug_output */\n#ifdef GL_AMD_draw_buffers_blend\n  if (glewExperimental || GLEW_AMD_draw_buffers_blend) GLEW_AMD_draw_buffers_blend = !_glewInit_GL_AMD_draw_buffers_blend();\n#endif /* GL_AMD_draw_buffers_blend */\n#ifdef GL_AMD_interleaved_elements\n  if (glewExperimental || GLEW_AMD_interleaved_elements) GLEW_AMD_interleaved_elements = !_glewInit_GL_AMD_interleaved_elements();\n#endif /* GL_AMD_interleaved_elements */\n#ifdef GL_AMD_multi_draw_indirect\n  if (glewExperimental || GLEW_AMD_multi_draw_indirect) GLEW_AMD_multi_draw_indirect = !_glewInit_GL_AMD_multi_draw_indirect();\n#endif /* GL_AMD_multi_draw_indirect */\n#ifdef GL_AMD_name_gen_delete\n  if (glewExperimental || GLEW_AMD_name_gen_delete) GLEW_AMD_name_gen_delete = !_glewInit_GL_AMD_name_gen_delete();\n#endif /* GL_AMD_name_gen_delete */\n#ifdef GL_AMD_occlusion_query_event\n  if (glewExperimental || GLEW_AMD_occlusion_query_event) GLEW_AMD_occlusion_query_event = !_glewInit_GL_AMD_occlusion_query_event();\n#endif /* GL_AMD_occlusion_query_event */\n#ifdef GL_AMD_performance_monitor\n  if (glewExperimental || GLEW_AMD_performance_monitor) GLEW_AMD_performance_monitor = !_glewInit_GL_AMD_performance_monitor();\n#endif /* GL_AMD_performance_monitor */\n#ifdef GL_AMD_sample_positions\n  if (glewExperimental || GLEW_AMD_sample_positions) GLEW_AMD_sample_positions = !_glewInit_GL_AMD_sample_positions();\n#endif /* GL_AMD_sample_positions */\n#ifdef GL_AMD_sparse_texture\n  if (glewExperimental || GLEW_AMD_sparse_texture) GLEW_AMD_sparse_texture = !_glewInit_GL_AMD_sparse_texture();\n#endif /* GL_AMD_sparse_texture */\n#ifdef GL_AMD_stencil_operation_extended\n  if (glewExperimental || GLEW_AMD_stencil_operation_extended) GLEW_AMD_stencil_operation_extended = !_glewInit_GL_AMD_stencil_operation_extended();\n#endif /* GL_AMD_stencil_operation_extended */\n#ifdef GL_AMD_vertex_shader_tessellator\n  if (glewExperimental || GLEW_AMD_vertex_shader_tessellator) GLEW_AMD_vertex_shader_tessellator = !_glewInit_GL_AMD_vertex_shader_tessellator();\n#endif /* GL_AMD_vertex_shader_tessellator */\n#ifdef GL_ANGLE_framebuffer_blit\n  if (glewExperimental || GLEW_ANGLE_framebuffer_blit) GLEW_ANGLE_framebuffer_blit = !_glewInit_GL_ANGLE_framebuffer_blit();\n#endif /* GL_ANGLE_framebuffer_blit */\n#ifdef GL_ANGLE_framebuffer_multisample\n  if (glewExperimental || GLEW_ANGLE_framebuffer_multisample) GLEW_ANGLE_framebuffer_multisample = !_glewInit_GL_ANGLE_framebuffer_multisample();\n#endif /* GL_ANGLE_framebuffer_multisample */\n#ifdef GL_ANGLE_instanced_arrays\n  if (glewExperimental || GLEW_ANGLE_instanced_arrays) GLEW_ANGLE_instanced_arrays = !_glewInit_GL_ANGLE_instanced_arrays();\n#endif /* GL_ANGLE_instanced_arrays */\n#ifdef GL_ANGLE_timer_query\n  if (glewExperimental || GLEW_ANGLE_timer_query) GLEW_ANGLE_timer_query = !_glewInit_GL_ANGLE_timer_query();\n#endif /* GL_ANGLE_timer_query */\n#ifdef GL_ANGLE_translated_shader_source\n  if (glewExperimental || GLEW_ANGLE_translated_shader_source) GLEW_ANGLE_translated_shader_source = !_glewInit_GL_ANGLE_translated_shader_source();\n#endif /* GL_ANGLE_translated_shader_source */\n#ifdef GL_APPLE_element_array\n  if (glewExperimental || GLEW_APPLE_element_array) GLEW_APPLE_element_array = !_glewInit_GL_APPLE_element_array();\n#endif /* GL_APPLE_element_array */\n#ifdef GL_APPLE_fence\n  if (glewExperimental || GLEW_APPLE_fence) GLEW_APPLE_fence = !_glewInit_GL_APPLE_fence();\n#endif /* GL_APPLE_fence */\n#ifdef GL_APPLE_flush_buffer_range\n  if (glewExperimental || GLEW_APPLE_flush_buffer_range) GLEW_APPLE_flush_buffer_range = !_glewInit_GL_APPLE_flush_buffer_range();\n#endif /* GL_APPLE_flush_buffer_range */\n#ifdef GL_APPLE_object_purgeable\n  if (glewExperimental || GLEW_APPLE_object_purgeable) GLEW_APPLE_object_purgeable = !_glewInit_GL_APPLE_object_purgeable();\n#endif /* GL_APPLE_object_purgeable */\n#ifdef GL_APPLE_texture_range\n  if (glewExperimental || GLEW_APPLE_texture_range) GLEW_APPLE_texture_range = !_glewInit_GL_APPLE_texture_range();\n#endif /* GL_APPLE_texture_range */\n#ifdef GL_APPLE_vertex_array_object\n  if (glewExperimental || GLEW_APPLE_vertex_array_object) GLEW_APPLE_vertex_array_object = !_glewInit_GL_APPLE_vertex_array_object();\n#endif /* GL_APPLE_vertex_array_object */\n#ifdef GL_APPLE_vertex_array_range\n  if (glewExperimental || GLEW_APPLE_vertex_array_range) GLEW_APPLE_vertex_array_range = !_glewInit_GL_APPLE_vertex_array_range();\n#endif /* GL_APPLE_vertex_array_range */\n#ifdef GL_APPLE_vertex_program_evaluators\n  if (glewExperimental || GLEW_APPLE_vertex_program_evaluators) GLEW_APPLE_vertex_program_evaluators = !_glewInit_GL_APPLE_vertex_program_evaluators();\n#endif /* GL_APPLE_vertex_program_evaluators */\n#ifdef GL_ARB_ES2_compatibility\n  if (glewExperimental || GLEW_ARB_ES2_compatibility) GLEW_ARB_ES2_compatibility = !_glewInit_GL_ARB_ES2_compatibility();\n#endif /* GL_ARB_ES2_compatibility */\n#ifdef GL_ARB_ES3_1_compatibility\n  if (glewExperimental || GLEW_ARB_ES3_1_compatibility) GLEW_ARB_ES3_1_compatibility = !_glewInit_GL_ARB_ES3_1_compatibility();\n#endif /* GL_ARB_ES3_1_compatibility */\n#ifdef GL_ARB_ES3_2_compatibility\n  if (glewExperimental || GLEW_ARB_ES3_2_compatibility) GLEW_ARB_ES3_2_compatibility = !_glewInit_GL_ARB_ES3_2_compatibility();\n#endif /* GL_ARB_ES3_2_compatibility */\n#ifdef GL_ARB_base_instance\n  if (glewExperimental || GLEW_ARB_base_instance) GLEW_ARB_base_instance = !_glewInit_GL_ARB_base_instance();\n#endif /* GL_ARB_base_instance */\n#ifdef GL_ARB_bindless_texture\n  if (glewExperimental || GLEW_ARB_bindless_texture) GLEW_ARB_bindless_texture = !_glewInit_GL_ARB_bindless_texture();\n#endif /* GL_ARB_bindless_texture */\n#ifdef GL_ARB_blend_func_extended\n  if (glewExperimental || GLEW_ARB_blend_func_extended) GLEW_ARB_blend_func_extended = !_glewInit_GL_ARB_blend_func_extended();\n#endif /* GL_ARB_blend_func_extended */\n#ifdef GL_ARB_buffer_storage\n  if (glewExperimental || GLEW_ARB_buffer_storage) GLEW_ARB_buffer_storage = !_glewInit_GL_ARB_buffer_storage();\n#endif /* GL_ARB_buffer_storage */\n#ifdef GL_ARB_cl_event\n  if (glewExperimental || GLEW_ARB_cl_event) GLEW_ARB_cl_event = !_glewInit_GL_ARB_cl_event();\n#endif /* GL_ARB_cl_event */\n#ifdef GL_ARB_clear_buffer_object\n  if (glewExperimental || GLEW_ARB_clear_buffer_object) GLEW_ARB_clear_buffer_object = !_glewInit_GL_ARB_clear_buffer_object();\n#endif /* GL_ARB_clear_buffer_object */\n#ifdef GL_ARB_clear_texture\n  if (glewExperimental || GLEW_ARB_clear_texture) GLEW_ARB_clear_texture = !_glewInit_GL_ARB_clear_texture();\n#endif /* GL_ARB_clear_texture */\n#ifdef GL_ARB_clip_control\n  if (glewExperimental || GLEW_ARB_clip_control) GLEW_ARB_clip_control = !_glewInit_GL_ARB_clip_control();\n#endif /* GL_ARB_clip_control */\n#ifdef GL_ARB_color_buffer_float\n  if (glewExperimental || GLEW_ARB_color_buffer_float) GLEW_ARB_color_buffer_float = !_glewInit_GL_ARB_color_buffer_float();\n#endif /* GL_ARB_color_buffer_float */\n#ifdef GL_ARB_compute_shader\n  if (glewExperimental || GLEW_ARB_compute_shader) GLEW_ARB_compute_shader = !_glewInit_GL_ARB_compute_shader();\n#endif /* GL_ARB_compute_shader */\n#ifdef GL_ARB_compute_variable_group_size\n  if (glewExperimental || GLEW_ARB_compute_variable_group_size) GLEW_ARB_compute_variable_group_size = !_glewInit_GL_ARB_compute_variable_group_size();\n#endif /* GL_ARB_compute_variable_group_size */\n#ifdef GL_ARB_copy_buffer\n  if (glewExperimental || GLEW_ARB_copy_buffer) GLEW_ARB_copy_buffer = !_glewInit_GL_ARB_copy_buffer();\n#endif /* GL_ARB_copy_buffer */\n#ifdef GL_ARB_copy_image\n  if (glewExperimental || GLEW_ARB_copy_image) GLEW_ARB_copy_image = !_glewInit_GL_ARB_copy_image();\n#endif /* GL_ARB_copy_image */\n#ifdef GL_ARB_debug_output\n  if (glewExperimental || GLEW_ARB_debug_output) GLEW_ARB_debug_output = !_glewInit_GL_ARB_debug_output();\n#endif /* GL_ARB_debug_output */\n#ifdef GL_ARB_direct_state_access\n  if (glewExperimental || GLEW_ARB_direct_state_access) GLEW_ARB_direct_state_access = !_glewInit_GL_ARB_direct_state_access();\n#endif /* GL_ARB_direct_state_access */\n#ifdef GL_ARB_draw_buffers\n  if (glewExperimental || GLEW_ARB_draw_buffers) GLEW_ARB_draw_buffers = !_glewInit_GL_ARB_draw_buffers();\n#endif /* GL_ARB_draw_buffers */\n#ifdef GL_ARB_draw_buffers_blend\n  if (glewExperimental || GLEW_ARB_draw_buffers_blend) GLEW_ARB_draw_buffers_blend = !_glewInit_GL_ARB_draw_buffers_blend();\n#endif /* GL_ARB_draw_buffers_blend */\n#ifdef GL_ARB_draw_elements_base_vertex\n  if (glewExperimental || GLEW_ARB_draw_elements_base_vertex) GLEW_ARB_draw_elements_base_vertex = !_glewInit_GL_ARB_draw_elements_base_vertex();\n#endif /* GL_ARB_draw_elements_base_vertex */\n#ifdef GL_ARB_draw_indirect\n  if (glewExperimental || GLEW_ARB_draw_indirect) GLEW_ARB_draw_indirect = !_glewInit_GL_ARB_draw_indirect();\n#endif /* GL_ARB_draw_indirect */\n#ifdef GL_ARB_framebuffer_no_attachments\n  if (glewExperimental || GLEW_ARB_framebuffer_no_attachments) GLEW_ARB_framebuffer_no_attachments = !_glewInit_GL_ARB_framebuffer_no_attachments();\n#endif /* GL_ARB_framebuffer_no_attachments */\n#ifdef GL_ARB_framebuffer_object\n  if (glewExperimental || GLEW_ARB_framebuffer_object) GLEW_ARB_framebuffer_object = !_glewInit_GL_ARB_framebuffer_object();\n#endif /* GL_ARB_framebuffer_object */\n#ifdef GL_ARB_geometry_shader4\n  if (glewExperimental || GLEW_ARB_geometry_shader4) GLEW_ARB_geometry_shader4 = !_glewInit_GL_ARB_geometry_shader4();\n#endif /* GL_ARB_geometry_shader4 */\n#ifdef GL_ARB_get_program_binary\n  if (glewExperimental || GLEW_ARB_get_program_binary) GLEW_ARB_get_program_binary = !_glewInit_GL_ARB_get_program_binary();\n#endif /* GL_ARB_get_program_binary */\n#ifdef GL_ARB_get_texture_sub_image\n  if (glewExperimental || GLEW_ARB_get_texture_sub_image) GLEW_ARB_get_texture_sub_image = !_glewInit_GL_ARB_get_texture_sub_image();\n#endif /* GL_ARB_get_texture_sub_image */\n#ifdef GL_ARB_gl_spirv\n  if (glewExperimental || GLEW_ARB_gl_spirv) GLEW_ARB_gl_spirv = !_glewInit_GL_ARB_gl_spirv();\n#endif /* GL_ARB_gl_spirv */\n#ifdef GL_ARB_gpu_shader_fp64\n  if (glewExperimental || GLEW_ARB_gpu_shader_fp64) GLEW_ARB_gpu_shader_fp64 = !_glewInit_GL_ARB_gpu_shader_fp64();\n#endif /* GL_ARB_gpu_shader_fp64 */\n#ifdef GL_ARB_gpu_shader_int64\n  if (glewExperimental || GLEW_ARB_gpu_shader_int64) GLEW_ARB_gpu_shader_int64 = !_glewInit_GL_ARB_gpu_shader_int64();\n#endif /* GL_ARB_gpu_shader_int64 */\n#ifdef GL_ARB_imaging\n  if (glewExperimental || GLEW_ARB_imaging) GLEW_ARB_imaging = !_glewInit_GL_ARB_imaging();\n#endif /* GL_ARB_imaging */\n#ifdef GL_ARB_indirect_parameters\n  if (glewExperimental || GLEW_ARB_indirect_parameters) GLEW_ARB_indirect_parameters = !_glewInit_GL_ARB_indirect_parameters();\n#endif /* GL_ARB_indirect_parameters */\n#ifdef GL_ARB_instanced_arrays\n  if (glewExperimental || GLEW_ARB_instanced_arrays) GLEW_ARB_instanced_arrays = !_glewInit_GL_ARB_instanced_arrays();\n#endif /* GL_ARB_instanced_arrays */\n#ifdef GL_ARB_internalformat_query\n  if (glewExperimental || GLEW_ARB_internalformat_query) GLEW_ARB_internalformat_query = !_glewInit_GL_ARB_internalformat_query();\n#endif /* GL_ARB_internalformat_query */\n#ifdef GL_ARB_internalformat_query2\n  if (glewExperimental || GLEW_ARB_internalformat_query2) GLEW_ARB_internalformat_query2 = !_glewInit_GL_ARB_internalformat_query2();\n#endif /* GL_ARB_internalformat_query2 */\n#ifdef GL_ARB_invalidate_subdata\n  if (glewExperimental || GLEW_ARB_invalidate_subdata) GLEW_ARB_invalidate_subdata = !_glewInit_GL_ARB_invalidate_subdata();\n#endif /* GL_ARB_invalidate_subdata */\n#ifdef GL_ARB_map_buffer_range\n  if (glewExperimental || GLEW_ARB_map_buffer_range) GLEW_ARB_map_buffer_range = !_glewInit_GL_ARB_map_buffer_range();\n#endif /* GL_ARB_map_buffer_range */\n#ifdef GL_ARB_matrix_palette\n  if (glewExperimental || GLEW_ARB_matrix_palette) GLEW_ARB_matrix_palette = !_glewInit_GL_ARB_matrix_palette();\n#endif /* GL_ARB_matrix_palette */\n#ifdef GL_ARB_multi_bind\n  if (glewExperimental || GLEW_ARB_multi_bind) GLEW_ARB_multi_bind = !_glewInit_GL_ARB_multi_bind();\n#endif /* GL_ARB_multi_bind */\n#ifdef GL_ARB_multi_draw_indirect\n  if (glewExperimental || GLEW_ARB_multi_draw_indirect) GLEW_ARB_multi_draw_indirect = !_glewInit_GL_ARB_multi_draw_indirect();\n#endif /* GL_ARB_multi_draw_indirect */\n#ifdef GL_ARB_multisample\n  if (glewExperimental || GLEW_ARB_multisample) GLEW_ARB_multisample = !_glewInit_GL_ARB_multisample();\n#endif /* GL_ARB_multisample */\n#ifdef GL_ARB_multitexture\n  if (glewExperimental || GLEW_ARB_multitexture) GLEW_ARB_multitexture = !_glewInit_GL_ARB_multitexture();\n#endif /* GL_ARB_multitexture */\n#ifdef GL_ARB_occlusion_query\n  if (glewExperimental || GLEW_ARB_occlusion_query) GLEW_ARB_occlusion_query = !_glewInit_GL_ARB_occlusion_query();\n#endif /* GL_ARB_occlusion_query */\n#ifdef GL_ARB_parallel_shader_compile\n  if (glewExperimental || GLEW_ARB_parallel_shader_compile) GLEW_ARB_parallel_shader_compile = !_glewInit_GL_ARB_parallel_shader_compile();\n#endif /* GL_ARB_parallel_shader_compile */\n#ifdef GL_ARB_point_parameters\n  if (glewExperimental || GLEW_ARB_point_parameters) GLEW_ARB_point_parameters = !_glewInit_GL_ARB_point_parameters();\n#endif /* GL_ARB_point_parameters */\n#ifdef GL_ARB_program_interface_query\n  if (glewExperimental || GLEW_ARB_program_interface_query) GLEW_ARB_program_interface_query = !_glewInit_GL_ARB_program_interface_query();\n#endif /* GL_ARB_program_interface_query */\n#ifdef GL_ARB_provoking_vertex\n  if (glewExperimental || GLEW_ARB_provoking_vertex) GLEW_ARB_provoking_vertex = !_glewInit_GL_ARB_provoking_vertex();\n#endif /* GL_ARB_provoking_vertex */\n#ifdef GL_ARB_robustness\n  if (glewExperimental || GLEW_ARB_robustness) GLEW_ARB_robustness = !_glewInit_GL_ARB_robustness();\n#endif /* GL_ARB_robustness */\n#ifdef GL_ARB_sample_locations\n  if (glewExperimental || GLEW_ARB_sample_locations) GLEW_ARB_sample_locations = !_glewInit_GL_ARB_sample_locations();\n#endif /* GL_ARB_sample_locations */\n#ifdef GL_ARB_sample_shading\n  if (glewExperimental || GLEW_ARB_sample_shading) GLEW_ARB_sample_shading = !_glewInit_GL_ARB_sample_shading();\n#endif /* GL_ARB_sample_shading */\n#ifdef GL_ARB_sampler_objects\n  if (glewExperimental || GLEW_ARB_sampler_objects) GLEW_ARB_sampler_objects = !_glewInit_GL_ARB_sampler_objects();\n#endif /* GL_ARB_sampler_objects */\n#ifdef GL_ARB_separate_shader_objects\n  if (glewExperimental || GLEW_ARB_separate_shader_objects) GLEW_ARB_separate_shader_objects = !_glewInit_GL_ARB_separate_shader_objects();\n#endif /* GL_ARB_separate_shader_objects */\n#ifdef GL_ARB_shader_atomic_counters\n  if (glewExperimental || GLEW_ARB_shader_atomic_counters) GLEW_ARB_shader_atomic_counters = !_glewInit_GL_ARB_shader_atomic_counters();\n#endif /* GL_ARB_shader_atomic_counters */\n#ifdef GL_ARB_shader_image_load_store\n  if (glewExperimental || GLEW_ARB_shader_image_load_store) GLEW_ARB_shader_image_load_store = !_glewInit_GL_ARB_shader_image_load_store();\n#endif /* GL_ARB_shader_image_load_store */\n#ifdef GL_ARB_shader_objects\n  if (glewExperimental || GLEW_ARB_shader_objects) GLEW_ARB_shader_objects = !_glewInit_GL_ARB_shader_objects();\n#endif /* GL_ARB_shader_objects */\n#ifdef GL_ARB_shader_storage_buffer_object\n  if (glewExperimental || GLEW_ARB_shader_storage_buffer_object) GLEW_ARB_shader_storage_buffer_object = !_glewInit_GL_ARB_shader_storage_buffer_object();\n#endif /* GL_ARB_shader_storage_buffer_object */\n#ifdef GL_ARB_shader_subroutine\n  if (glewExperimental || GLEW_ARB_shader_subroutine) GLEW_ARB_shader_subroutine = !_glewInit_GL_ARB_shader_subroutine();\n#endif /* GL_ARB_shader_subroutine */\n#ifdef GL_ARB_shading_language_include\n  if (glewExperimental || GLEW_ARB_shading_language_include) GLEW_ARB_shading_language_include = !_glewInit_GL_ARB_shading_language_include();\n#endif /* GL_ARB_shading_language_include */\n#ifdef GL_ARB_sparse_buffer\n  if (glewExperimental || GLEW_ARB_sparse_buffer) GLEW_ARB_sparse_buffer = !_glewInit_GL_ARB_sparse_buffer();\n#endif /* GL_ARB_sparse_buffer */\n#ifdef GL_ARB_sparse_texture\n  if (glewExperimental || GLEW_ARB_sparse_texture) GLEW_ARB_sparse_texture = !_glewInit_GL_ARB_sparse_texture();\n#endif /* GL_ARB_sparse_texture */\n#ifdef GL_ARB_sync\n  if (glewExperimental || GLEW_ARB_sync) GLEW_ARB_sync = !_glewInit_GL_ARB_sync();\n#endif /* GL_ARB_sync */\n#ifdef GL_ARB_tessellation_shader\n  if (glewExperimental || GLEW_ARB_tessellation_shader) GLEW_ARB_tessellation_shader = !_glewInit_GL_ARB_tessellation_shader();\n#endif /* GL_ARB_tessellation_shader */\n#ifdef GL_ARB_texture_barrier\n  if (glewExperimental || GLEW_ARB_texture_barrier) GLEW_ARB_texture_barrier = !_glewInit_GL_ARB_texture_barrier();\n#endif /* GL_ARB_texture_barrier */\n#ifdef GL_ARB_texture_buffer_object\n  if (glewExperimental || GLEW_ARB_texture_buffer_object) GLEW_ARB_texture_buffer_object = !_glewInit_GL_ARB_texture_buffer_object();\n#endif /* GL_ARB_texture_buffer_object */\n#ifdef GL_ARB_texture_buffer_range\n  if (glewExperimental || GLEW_ARB_texture_buffer_range) GLEW_ARB_texture_buffer_range = !_glewInit_GL_ARB_texture_buffer_range();\n#endif /* GL_ARB_texture_buffer_range */\n#ifdef GL_ARB_texture_compression\n  if (glewExperimental || GLEW_ARB_texture_compression) GLEW_ARB_texture_compression = !_glewInit_GL_ARB_texture_compression();\n#endif /* GL_ARB_texture_compression */\n#ifdef GL_ARB_texture_multisample\n  if (glewExperimental || GLEW_ARB_texture_multisample) GLEW_ARB_texture_multisample = !_glewInit_GL_ARB_texture_multisample();\n#endif /* GL_ARB_texture_multisample */\n#ifdef GL_ARB_texture_storage\n  if (glewExperimental || GLEW_ARB_texture_storage) GLEW_ARB_texture_storage = !_glewInit_GL_ARB_texture_storage();\n#endif /* GL_ARB_texture_storage */\n#ifdef GL_ARB_texture_storage_multisample\n  if (glewExperimental || GLEW_ARB_texture_storage_multisample) GLEW_ARB_texture_storage_multisample = !_glewInit_GL_ARB_texture_storage_multisample();\n#endif /* GL_ARB_texture_storage_multisample */\n#ifdef GL_ARB_texture_view\n  if (glewExperimental || GLEW_ARB_texture_view) GLEW_ARB_texture_view = !_glewInit_GL_ARB_texture_view();\n#endif /* GL_ARB_texture_view */\n#ifdef GL_ARB_timer_query\n  if (glewExperimental || GLEW_ARB_timer_query) GLEW_ARB_timer_query = !_glewInit_GL_ARB_timer_query();\n#endif /* GL_ARB_timer_query */\n#ifdef GL_ARB_transform_feedback2\n  if (glewExperimental || GLEW_ARB_transform_feedback2) GLEW_ARB_transform_feedback2 = !_glewInit_GL_ARB_transform_feedback2();\n#endif /* GL_ARB_transform_feedback2 */\n#ifdef GL_ARB_transform_feedback3\n  if (glewExperimental || GLEW_ARB_transform_feedback3) GLEW_ARB_transform_feedback3 = !_glewInit_GL_ARB_transform_feedback3();\n#endif /* GL_ARB_transform_feedback3 */\n#ifdef GL_ARB_transform_feedback_instanced\n  if (glewExperimental || GLEW_ARB_transform_feedback_instanced) GLEW_ARB_transform_feedback_instanced = !_glewInit_GL_ARB_transform_feedback_instanced();\n#endif /* GL_ARB_transform_feedback_instanced */\n#ifdef GL_ARB_transpose_matrix\n  if (glewExperimental || GLEW_ARB_transpose_matrix) GLEW_ARB_transpose_matrix = !_glewInit_GL_ARB_transpose_matrix();\n#endif /* GL_ARB_transpose_matrix */\n#ifdef GL_ARB_uniform_buffer_object\n  if (glewExperimental || GLEW_ARB_uniform_buffer_object) GLEW_ARB_uniform_buffer_object = !_glewInit_GL_ARB_uniform_buffer_object();\n#endif /* GL_ARB_uniform_buffer_object */\n#ifdef GL_ARB_vertex_array_object\n  if (glewExperimental || GLEW_ARB_vertex_array_object) GLEW_ARB_vertex_array_object = !_glewInit_GL_ARB_vertex_array_object();\n#endif /* GL_ARB_vertex_array_object */\n#ifdef GL_ARB_vertex_attrib_64bit\n  if (glewExperimental || GLEW_ARB_vertex_attrib_64bit) GLEW_ARB_vertex_attrib_64bit = !_glewInit_GL_ARB_vertex_attrib_64bit();\n#endif /* GL_ARB_vertex_attrib_64bit */\n#ifdef GL_ARB_vertex_attrib_binding\n  if (glewExperimental || GLEW_ARB_vertex_attrib_binding) GLEW_ARB_vertex_attrib_binding = !_glewInit_GL_ARB_vertex_attrib_binding();\n#endif /* GL_ARB_vertex_attrib_binding */\n#ifdef GL_ARB_vertex_blend\n  if (glewExperimental || GLEW_ARB_vertex_blend) GLEW_ARB_vertex_blend = !_glewInit_GL_ARB_vertex_blend();\n#endif /* GL_ARB_vertex_blend */\n#ifdef GL_ARB_vertex_buffer_object\n  if (glewExperimental || GLEW_ARB_vertex_buffer_object) GLEW_ARB_vertex_buffer_object = !_glewInit_GL_ARB_vertex_buffer_object();\n#endif /* GL_ARB_vertex_buffer_object */\n#ifdef GL_ARB_vertex_program\n  if (glewExperimental || GLEW_ARB_vertex_program) GLEW_ARB_vertex_program = !_glewInit_GL_ARB_vertex_program();\n#endif /* GL_ARB_vertex_program */\n#ifdef GL_ARB_vertex_shader\n  if (glewExperimental || GLEW_ARB_vertex_shader) { GLEW_ARB_vertex_shader = !_glewInit_GL_ARB_vertex_shader(); _glewInit_GL_ARB_vertex_program(); }\n#endif /* GL_ARB_vertex_shader */\n#ifdef GL_ARB_vertex_type_2_10_10_10_rev\n  if (glewExperimental || GLEW_ARB_vertex_type_2_10_10_10_rev) GLEW_ARB_vertex_type_2_10_10_10_rev = !_glewInit_GL_ARB_vertex_type_2_10_10_10_rev();\n#endif /* GL_ARB_vertex_type_2_10_10_10_rev */\n#ifdef GL_ARB_viewport_array\n  if (glewExperimental || GLEW_ARB_viewport_array) GLEW_ARB_viewport_array = !_glewInit_GL_ARB_viewport_array();\n#endif /* GL_ARB_viewport_array */\n#ifdef GL_ARB_window_pos\n  if (glewExperimental || GLEW_ARB_window_pos) GLEW_ARB_window_pos = !_glewInit_GL_ARB_window_pos();\n#endif /* GL_ARB_window_pos */\n#ifdef GL_ATI_draw_buffers\n  if (glewExperimental || GLEW_ATI_draw_buffers) GLEW_ATI_draw_buffers = !_glewInit_GL_ATI_draw_buffers();\n#endif /* GL_ATI_draw_buffers */\n#ifdef GL_ATI_element_array\n  if (glewExperimental || GLEW_ATI_element_array) GLEW_ATI_element_array = !_glewInit_GL_ATI_element_array();\n#endif /* GL_ATI_element_array */\n#ifdef GL_ATI_envmap_bumpmap\n  if (glewExperimental || GLEW_ATI_envmap_bumpmap) GLEW_ATI_envmap_bumpmap = !_glewInit_GL_ATI_envmap_bumpmap();\n#endif /* GL_ATI_envmap_bumpmap */\n#ifdef GL_ATI_fragment_shader\n  if (glewExperimental || GLEW_ATI_fragment_shader) GLEW_ATI_fragment_shader = !_glewInit_GL_ATI_fragment_shader();\n#endif /* GL_ATI_fragment_shader */\n#ifdef GL_ATI_map_object_buffer\n  if (glewExperimental || GLEW_ATI_map_object_buffer) GLEW_ATI_map_object_buffer = !_glewInit_GL_ATI_map_object_buffer();\n#endif /* GL_ATI_map_object_buffer */\n#ifdef GL_ATI_pn_triangles\n  if (glewExperimental || GLEW_ATI_pn_triangles) GLEW_ATI_pn_triangles = !_glewInit_GL_ATI_pn_triangles();\n#endif /* GL_ATI_pn_triangles */\n#ifdef GL_ATI_separate_stencil\n  if (glewExperimental || GLEW_ATI_separate_stencil) GLEW_ATI_separate_stencil = !_glewInit_GL_ATI_separate_stencil();\n#endif /* GL_ATI_separate_stencil */\n#ifdef GL_ATI_vertex_array_object\n  if (glewExperimental || GLEW_ATI_vertex_array_object) GLEW_ATI_vertex_array_object = !_glewInit_GL_ATI_vertex_array_object();\n#endif /* GL_ATI_vertex_array_object */\n#ifdef GL_ATI_vertex_attrib_array_object\n  if (glewExperimental || GLEW_ATI_vertex_attrib_array_object) GLEW_ATI_vertex_attrib_array_object = !_glewInit_GL_ATI_vertex_attrib_array_object();\n#endif /* GL_ATI_vertex_attrib_array_object */\n#ifdef GL_ATI_vertex_streams\n  if (glewExperimental || GLEW_ATI_vertex_streams) GLEW_ATI_vertex_streams = !_glewInit_GL_ATI_vertex_streams();\n#endif /* GL_ATI_vertex_streams */\n#ifdef GL_EXT_bindable_uniform\n  if (glewExperimental || GLEW_EXT_bindable_uniform) GLEW_EXT_bindable_uniform = !_glewInit_GL_EXT_bindable_uniform();\n#endif /* GL_EXT_bindable_uniform */\n#ifdef GL_EXT_blend_color\n  if (glewExperimental || GLEW_EXT_blend_color) GLEW_EXT_blend_color = !_glewInit_GL_EXT_blend_color();\n#endif /* GL_EXT_blend_color */\n#ifdef GL_EXT_blend_equation_separate\n  if (glewExperimental || GLEW_EXT_blend_equation_separate) GLEW_EXT_blend_equation_separate = !_glewInit_GL_EXT_blend_equation_separate();\n#endif /* GL_EXT_blend_equation_separate */\n#ifdef GL_EXT_blend_func_separate\n  if (glewExperimental || GLEW_EXT_blend_func_separate) GLEW_EXT_blend_func_separate = !_glewInit_GL_EXT_blend_func_separate();\n#endif /* GL_EXT_blend_func_separate */\n#ifdef GL_EXT_blend_minmax\n  if (glewExperimental || GLEW_EXT_blend_minmax) GLEW_EXT_blend_minmax = !_glewInit_GL_EXT_blend_minmax();\n#endif /* GL_EXT_blend_minmax */\n#ifdef GL_EXT_color_subtable\n  if (glewExperimental || GLEW_EXT_color_subtable) GLEW_EXT_color_subtable = !_glewInit_GL_EXT_color_subtable();\n#endif /* GL_EXT_color_subtable */\n#ifdef GL_EXT_compiled_vertex_array\n  if (glewExperimental || GLEW_EXT_compiled_vertex_array) GLEW_EXT_compiled_vertex_array = !_glewInit_GL_EXT_compiled_vertex_array();\n#endif /* GL_EXT_compiled_vertex_array */\n#ifdef GL_EXT_convolution\n  if (glewExperimental || GLEW_EXT_convolution) GLEW_EXT_convolution = !_glewInit_GL_EXT_convolution();\n#endif /* GL_EXT_convolution */\n#ifdef GL_EXT_coordinate_frame\n  if (glewExperimental || GLEW_EXT_coordinate_frame) GLEW_EXT_coordinate_frame = !_glewInit_GL_EXT_coordinate_frame();\n#endif /* GL_EXT_coordinate_frame */\n#ifdef GL_EXT_copy_texture\n  if (glewExperimental || GLEW_EXT_copy_texture) GLEW_EXT_copy_texture = !_glewInit_GL_EXT_copy_texture();\n#endif /* GL_EXT_copy_texture */\n#ifdef GL_EXT_cull_vertex\n  if (glewExperimental || GLEW_EXT_cull_vertex) GLEW_EXT_cull_vertex = !_glewInit_GL_EXT_cull_vertex();\n#endif /* GL_EXT_cull_vertex */\n#ifdef GL_EXT_debug_label\n  if (glewExperimental || GLEW_EXT_debug_label) GLEW_EXT_debug_label = !_glewInit_GL_EXT_debug_label();\n#endif /* GL_EXT_debug_label */\n#ifdef GL_EXT_debug_marker\n  if (glewExperimental || GLEW_EXT_debug_marker) GLEW_EXT_debug_marker = !_glewInit_GL_EXT_debug_marker();\n#endif /* GL_EXT_debug_marker */\n#ifdef GL_EXT_depth_bounds_test\n  if (glewExperimental || GLEW_EXT_depth_bounds_test) GLEW_EXT_depth_bounds_test = !_glewInit_GL_EXT_depth_bounds_test();\n#endif /* GL_EXT_depth_bounds_test */\n#ifdef GL_EXT_direct_state_access\n  if (glewExperimental || GLEW_EXT_direct_state_access) GLEW_EXT_direct_state_access = !_glewInit_GL_EXT_direct_state_access();\n#endif /* GL_EXT_direct_state_access */\n#ifdef GL_EXT_draw_buffers2\n  if (glewExperimental || GLEW_EXT_draw_buffers2) GLEW_EXT_draw_buffers2 = !_glewInit_GL_EXT_draw_buffers2();\n#endif /* GL_EXT_draw_buffers2 */\n#ifdef GL_EXT_draw_instanced\n  if (glewExperimental || GLEW_EXT_draw_instanced) GLEW_EXT_draw_instanced = !_glewInit_GL_EXT_draw_instanced();\n#endif /* GL_EXT_draw_instanced */\n#ifdef GL_EXT_draw_range_elements\n  if (glewExperimental || GLEW_EXT_draw_range_elements) GLEW_EXT_draw_range_elements = !_glewInit_GL_EXT_draw_range_elements();\n#endif /* GL_EXT_draw_range_elements */\n#ifdef GL_EXT_fog_coord\n  if (glewExperimental || GLEW_EXT_fog_coord) GLEW_EXT_fog_coord = !_glewInit_GL_EXT_fog_coord();\n#endif /* GL_EXT_fog_coord */\n#ifdef GL_EXT_fragment_lighting\n  if (glewExperimental || GLEW_EXT_fragment_lighting) GLEW_EXT_fragment_lighting = !_glewInit_GL_EXT_fragment_lighting();\n#endif /* GL_EXT_fragment_lighting */\n#ifdef GL_EXT_framebuffer_blit\n  if (glewExperimental || GLEW_EXT_framebuffer_blit) GLEW_EXT_framebuffer_blit = !_glewInit_GL_EXT_framebuffer_blit();\n#endif /* GL_EXT_framebuffer_blit */\n#ifdef GL_EXT_framebuffer_multisample\n  if (glewExperimental || GLEW_EXT_framebuffer_multisample) GLEW_EXT_framebuffer_multisample = !_glewInit_GL_EXT_framebuffer_multisample();\n#endif /* GL_EXT_framebuffer_multisample */\n#ifdef GL_EXT_framebuffer_object\n  if (glewExperimental || GLEW_EXT_framebuffer_object) GLEW_EXT_framebuffer_object = !_glewInit_GL_EXT_framebuffer_object();\n#endif /* GL_EXT_framebuffer_object */\n#ifdef GL_EXT_geometry_shader4\n  if (glewExperimental || GLEW_EXT_geometry_shader4) GLEW_EXT_geometry_shader4 = !_glewInit_GL_EXT_geometry_shader4();\n#endif /* GL_EXT_geometry_shader4 */\n#ifdef GL_EXT_gpu_program_parameters\n  if (glewExperimental || GLEW_EXT_gpu_program_parameters) GLEW_EXT_gpu_program_parameters = !_glewInit_GL_EXT_gpu_program_parameters();\n#endif /* GL_EXT_gpu_program_parameters */\n#ifdef GL_EXT_gpu_shader4\n  if (glewExperimental || GLEW_EXT_gpu_shader4) GLEW_EXT_gpu_shader4 = !_glewInit_GL_EXT_gpu_shader4();\n#endif /* GL_EXT_gpu_shader4 */\n#ifdef GL_EXT_histogram\n  if (glewExperimental || GLEW_EXT_histogram) GLEW_EXT_histogram = !_glewInit_GL_EXT_histogram();\n#endif /* GL_EXT_histogram */\n#ifdef GL_EXT_index_func\n  if (glewExperimental || GLEW_EXT_index_func) GLEW_EXT_index_func = !_glewInit_GL_EXT_index_func();\n#endif /* GL_EXT_index_func */\n#ifdef GL_EXT_index_material\n  if (glewExperimental || GLEW_EXT_index_material) GLEW_EXT_index_material = !_glewInit_GL_EXT_index_material();\n#endif /* GL_EXT_index_material */\n#ifdef GL_EXT_light_texture\n  if (glewExperimental || GLEW_EXT_light_texture) GLEW_EXT_light_texture = !_glewInit_GL_EXT_light_texture();\n#endif /* GL_EXT_light_texture */\n#ifdef GL_EXT_multi_draw_arrays\n  if (glewExperimental || GLEW_EXT_multi_draw_arrays) GLEW_EXT_multi_draw_arrays = !_glewInit_GL_EXT_multi_draw_arrays();\n#endif /* GL_EXT_multi_draw_arrays */\n#ifdef GL_EXT_multisample\n  if (glewExperimental || GLEW_EXT_multisample) GLEW_EXT_multisample = !_glewInit_GL_EXT_multisample();\n#endif /* GL_EXT_multisample */\n#ifdef GL_EXT_paletted_texture\n  if (glewExperimental || GLEW_EXT_paletted_texture) GLEW_EXT_paletted_texture = !_glewInit_GL_EXT_paletted_texture();\n#endif /* GL_EXT_paletted_texture */\n#ifdef GL_EXT_pixel_transform\n  if (glewExperimental || GLEW_EXT_pixel_transform) GLEW_EXT_pixel_transform = !_glewInit_GL_EXT_pixel_transform();\n#endif /* GL_EXT_pixel_transform */\n#ifdef GL_EXT_point_parameters\n  if (glewExperimental || GLEW_EXT_point_parameters) GLEW_EXT_point_parameters = !_glewInit_GL_EXT_point_parameters();\n#endif /* GL_EXT_point_parameters */\n#ifdef GL_EXT_polygon_offset\n  if (glewExperimental || GLEW_EXT_polygon_offset) GLEW_EXT_polygon_offset = !_glewInit_GL_EXT_polygon_offset();\n#endif /* GL_EXT_polygon_offset */\n#ifdef GL_EXT_polygon_offset_clamp\n  if (glewExperimental || GLEW_EXT_polygon_offset_clamp) GLEW_EXT_polygon_offset_clamp = !_glewInit_GL_EXT_polygon_offset_clamp();\n#endif /* GL_EXT_polygon_offset_clamp */\n#ifdef GL_EXT_provoking_vertex\n  if (glewExperimental || GLEW_EXT_provoking_vertex) GLEW_EXT_provoking_vertex = !_glewInit_GL_EXT_provoking_vertex();\n#endif /* GL_EXT_provoking_vertex */\n#ifdef GL_EXT_raster_multisample\n  if (glewExperimental || GLEW_EXT_raster_multisample) GLEW_EXT_raster_multisample = !_glewInit_GL_EXT_raster_multisample();\n#endif /* GL_EXT_raster_multisample */\n#ifdef GL_EXT_scene_marker\n  if (glewExperimental || GLEW_EXT_scene_marker) GLEW_EXT_scene_marker = !_glewInit_GL_EXT_scene_marker();\n#endif /* GL_EXT_scene_marker */\n#ifdef GL_EXT_secondary_color\n  if (glewExperimental || GLEW_EXT_secondary_color) GLEW_EXT_secondary_color = !_glewInit_GL_EXT_secondary_color();\n#endif /* GL_EXT_secondary_color */\n#ifdef GL_EXT_separate_shader_objects\n  if (glewExperimental || GLEW_EXT_separate_shader_objects) GLEW_EXT_separate_shader_objects = !_glewInit_GL_EXT_separate_shader_objects();\n#endif /* GL_EXT_separate_shader_objects */\n#ifdef GL_EXT_shader_image_load_store\n  if (glewExperimental || GLEW_EXT_shader_image_load_store) GLEW_EXT_shader_image_load_store = !_glewInit_GL_EXT_shader_image_load_store();\n#endif /* GL_EXT_shader_image_load_store */\n#ifdef GL_EXT_stencil_two_side\n  if (glewExperimental || GLEW_EXT_stencil_two_side) GLEW_EXT_stencil_two_side = !_glewInit_GL_EXT_stencil_two_side();\n#endif /* GL_EXT_stencil_two_side */\n#ifdef GL_EXT_subtexture\n  if (glewExperimental || GLEW_EXT_subtexture) GLEW_EXT_subtexture = !_glewInit_GL_EXT_subtexture();\n#endif /* GL_EXT_subtexture */\n#ifdef GL_EXT_texture3D\n  if (glewExperimental || GLEW_EXT_texture3D) GLEW_EXT_texture3D = !_glewInit_GL_EXT_texture3D();\n#endif /* GL_EXT_texture3D */\n#ifdef GL_EXT_texture_array\n  if (glewExperimental || GLEW_EXT_texture_array) GLEW_EXT_texture_array = !_glewInit_GL_EXT_texture_array();\n#endif /* GL_EXT_texture_array */\n#ifdef GL_EXT_texture_buffer_object\n  if (glewExperimental || GLEW_EXT_texture_buffer_object) GLEW_EXT_texture_buffer_object = !_glewInit_GL_EXT_texture_buffer_object();\n#endif /* GL_EXT_texture_buffer_object */\n#ifdef GL_EXT_texture_integer\n  if (glewExperimental || GLEW_EXT_texture_integer) GLEW_EXT_texture_integer = !_glewInit_GL_EXT_texture_integer();\n#endif /* GL_EXT_texture_integer */\n#ifdef GL_EXT_texture_object\n  if (glewExperimental || GLEW_EXT_texture_object) GLEW_EXT_texture_object = !_glewInit_GL_EXT_texture_object();\n#endif /* GL_EXT_texture_object */\n#ifdef GL_EXT_texture_perturb_normal\n  if (glewExperimental || GLEW_EXT_texture_perturb_normal) GLEW_EXT_texture_perturb_normal = !_glewInit_GL_EXT_texture_perturb_normal();\n#endif /* GL_EXT_texture_perturb_normal */\n#ifdef GL_EXT_timer_query\n  if (glewExperimental || GLEW_EXT_timer_query) GLEW_EXT_timer_query = !_glewInit_GL_EXT_timer_query();\n#endif /* GL_EXT_timer_query */\n#ifdef GL_EXT_transform_feedback\n  if (glewExperimental || GLEW_EXT_transform_feedback) GLEW_EXT_transform_feedback = !_glewInit_GL_EXT_transform_feedback();\n#endif /* GL_EXT_transform_feedback */\n#ifdef GL_EXT_vertex_array\n  if (glewExperimental || GLEW_EXT_vertex_array) GLEW_EXT_vertex_array = !_glewInit_GL_EXT_vertex_array();\n#endif /* GL_EXT_vertex_array */\n#ifdef GL_EXT_vertex_attrib_64bit\n  if (glewExperimental || GLEW_EXT_vertex_attrib_64bit) GLEW_EXT_vertex_attrib_64bit = !_glewInit_GL_EXT_vertex_attrib_64bit();\n#endif /* GL_EXT_vertex_attrib_64bit */\n#ifdef GL_EXT_vertex_shader\n  if (glewExperimental || GLEW_EXT_vertex_shader) GLEW_EXT_vertex_shader = !_glewInit_GL_EXT_vertex_shader();\n#endif /* GL_EXT_vertex_shader */\n#ifdef GL_EXT_vertex_weighting\n  if (glewExperimental || GLEW_EXT_vertex_weighting) GLEW_EXT_vertex_weighting = !_glewInit_GL_EXT_vertex_weighting();\n#endif /* GL_EXT_vertex_weighting */\n#ifdef GL_EXT_window_rectangles\n  if (glewExperimental || GLEW_EXT_window_rectangles) GLEW_EXT_window_rectangles = !_glewInit_GL_EXT_window_rectangles();\n#endif /* GL_EXT_window_rectangles */\n#ifdef GL_EXT_x11_sync_object\n  if (glewExperimental || GLEW_EXT_x11_sync_object) GLEW_EXT_x11_sync_object = !_glewInit_GL_EXT_x11_sync_object();\n#endif /* GL_EXT_x11_sync_object */\n#ifdef GL_GREMEDY_frame_terminator\n  if (glewExperimental || GLEW_GREMEDY_frame_terminator) GLEW_GREMEDY_frame_terminator = !_glewInit_GL_GREMEDY_frame_terminator();\n#endif /* GL_GREMEDY_frame_terminator */\n#ifdef GL_GREMEDY_string_marker\n  if (glewExperimental || GLEW_GREMEDY_string_marker) GLEW_GREMEDY_string_marker = !_glewInit_GL_GREMEDY_string_marker();\n#endif /* GL_GREMEDY_string_marker */\n#ifdef GL_HP_image_transform\n  if (glewExperimental || GLEW_HP_image_transform) GLEW_HP_image_transform = !_glewInit_GL_HP_image_transform();\n#endif /* GL_HP_image_transform */\n#ifdef GL_IBM_multimode_draw_arrays\n  if (glewExperimental || GLEW_IBM_multimode_draw_arrays) GLEW_IBM_multimode_draw_arrays = !_glewInit_GL_IBM_multimode_draw_arrays();\n#endif /* GL_IBM_multimode_draw_arrays */\n#ifdef GL_IBM_vertex_array_lists\n  if (glewExperimental || GLEW_IBM_vertex_array_lists) GLEW_IBM_vertex_array_lists = !_glewInit_GL_IBM_vertex_array_lists();\n#endif /* GL_IBM_vertex_array_lists */\n#ifdef GL_INTEL_map_texture\n  if (glewExperimental || GLEW_INTEL_map_texture) GLEW_INTEL_map_texture = !_glewInit_GL_INTEL_map_texture();\n#endif /* GL_INTEL_map_texture */\n#ifdef GL_INTEL_parallel_arrays\n  if (glewExperimental || GLEW_INTEL_parallel_arrays) GLEW_INTEL_parallel_arrays = !_glewInit_GL_INTEL_parallel_arrays();\n#endif /* GL_INTEL_parallel_arrays */\n#ifdef GL_INTEL_performance_query\n  if (glewExperimental || GLEW_INTEL_performance_query) GLEW_INTEL_performance_query = !_glewInit_GL_INTEL_performance_query();\n#endif /* GL_INTEL_performance_query */\n#ifdef GL_INTEL_texture_scissor\n  if (glewExperimental || GLEW_INTEL_texture_scissor) GLEW_INTEL_texture_scissor = !_glewInit_GL_INTEL_texture_scissor();\n#endif /* GL_INTEL_texture_scissor */\n#ifdef GL_KHR_blend_equation_advanced\n  if (glewExperimental || GLEW_KHR_blend_equation_advanced) GLEW_KHR_blend_equation_advanced = !_glewInit_GL_KHR_blend_equation_advanced();\n#endif /* GL_KHR_blend_equation_advanced */\n#ifdef GL_KHR_debug\n  if (glewExperimental || GLEW_KHR_debug) GLEW_KHR_debug = !_glewInit_GL_KHR_debug();\n#endif /* GL_KHR_debug */\n#ifdef GL_KHR_robustness\n  if (glewExperimental || GLEW_KHR_robustness) GLEW_KHR_robustness = !_glewInit_GL_KHR_robustness();\n#endif /* GL_KHR_robustness */\n#ifdef GL_KTX_buffer_region\n  if (glewExperimental || GLEW_KTX_buffer_region) GLEW_KTX_buffer_region = !_glewInit_GL_KTX_buffer_region();\n#endif /* GL_KTX_buffer_region */\n#ifdef GL_MESA_resize_buffers\n  if (glewExperimental || GLEW_MESA_resize_buffers) GLEW_MESA_resize_buffers = !_glewInit_GL_MESA_resize_buffers();\n#endif /* GL_MESA_resize_buffers */\n#ifdef GL_MESA_window_pos\n  if (glewExperimental || GLEW_MESA_window_pos) GLEW_MESA_window_pos = !_glewInit_GL_MESA_window_pos();\n#endif /* GL_MESA_window_pos */\n#ifdef GL_NVX_conditional_render\n  if (glewExperimental || GLEW_NVX_conditional_render) GLEW_NVX_conditional_render = !_glewInit_GL_NVX_conditional_render();\n#endif /* GL_NVX_conditional_render */\n#ifdef GL_NVX_linked_gpu_multicast\n  if (glewExperimental || GLEW_NVX_linked_gpu_multicast) GLEW_NVX_linked_gpu_multicast = !_glewInit_GL_NVX_linked_gpu_multicast();\n#endif /* GL_NVX_linked_gpu_multicast */\n#ifdef GL_NV_bindless_multi_draw_indirect\n  if (glewExperimental || GLEW_NV_bindless_multi_draw_indirect) GLEW_NV_bindless_multi_draw_indirect = !_glewInit_GL_NV_bindless_multi_draw_indirect();\n#endif /* GL_NV_bindless_multi_draw_indirect */\n#ifdef GL_NV_bindless_multi_draw_indirect_count\n  if (glewExperimental || GLEW_NV_bindless_multi_draw_indirect_count) GLEW_NV_bindless_multi_draw_indirect_count = !_glewInit_GL_NV_bindless_multi_draw_indirect_count();\n#endif /* GL_NV_bindless_multi_draw_indirect_count */\n#ifdef GL_NV_bindless_texture\n  if (glewExperimental || GLEW_NV_bindless_texture) GLEW_NV_bindless_texture = !_glewInit_GL_NV_bindless_texture();\n#endif /* GL_NV_bindless_texture */\n#ifdef GL_NV_blend_equation_advanced\n  if (glewExperimental || GLEW_NV_blend_equation_advanced) GLEW_NV_blend_equation_advanced = !_glewInit_GL_NV_blend_equation_advanced();\n#endif /* GL_NV_blend_equation_advanced */\n#ifdef GL_NV_clip_space_w_scaling\n  if (glewExperimental || GLEW_NV_clip_space_w_scaling) GLEW_NV_clip_space_w_scaling = !_glewInit_GL_NV_clip_space_w_scaling();\n#endif /* GL_NV_clip_space_w_scaling */\n#ifdef GL_NV_command_list\n  if (glewExperimental || GLEW_NV_command_list) GLEW_NV_command_list = !_glewInit_GL_NV_command_list();\n#endif /* GL_NV_command_list */\n#ifdef GL_NV_conditional_render\n  if (glewExperimental || GLEW_NV_conditional_render) GLEW_NV_conditional_render = !_glewInit_GL_NV_conditional_render();\n#endif /* GL_NV_conditional_render */\n#ifdef GL_NV_conservative_raster\n  if (glewExperimental || GLEW_NV_conservative_raster) GLEW_NV_conservative_raster = !_glewInit_GL_NV_conservative_raster();\n#endif /* GL_NV_conservative_raster */\n#ifdef GL_NV_conservative_raster_dilate\n  if (glewExperimental || GLEW_NV_conservative_raster_dilate) GLEW_NV_conservative_raster_dilate = !_glewInit_GL_NV_conservative_raster_dilate();\n#endif /* GL_NV_conservative_raster_dilate */\n#ifdef GL_NV_conservative_raster_pre_snap_triangles\n  if (glewExperimental || GLEW_NV_conservative_raster_pre_snap_triangles) GLEW_NV_conservative_raster_pre_snap_triangles = !_glewInit_GL_NV_conservative_raster_pre_snap_triangles();\n#endif /* GL_NV_conservative_raster_pre_snap_triangles */\n#ifdef GL_NV_copy_image\n  if (glewExperimental || GLEW_NV_copy_image) GLEW_NV_copy_image = !_glewInit_GL_NV_copy_image();\n#endif /* GL_NV_copy_image */\n#ifdef GL_NV_depth_buffer_float\n  if (glewExperimental || GLEW_NV_depth_buffer_float) GLEW_NV_depth_buffer_float = !_glewInit_GL_NV_depth_buffer_float();\n#endif /* GL_NV_depth_buffer_float */\n#ifdef GL_NV_draw_texture\n  if (glewExperimental || GLEW_NV_draw_texture) GLEW_NV_draw_texture = !_glewInit_GL_NV_draw_texture();\n#endif /* GL_NV_draw_texture */\n#ifdef GL_NV_draw_vulkan_image\n  if (glewExperimental || GLEW_NV_draw_vulkan_image) GLEW_NV_draw_vulkan_image = !_glewInit_GL_NV_draw_vulkan_image();\n#endif /* GL_NV_draw_vulkan_image */\n#ifdef GL_NV_evaluators\n  if (glewExperimental || GLEW_NV_evaluators) GLEW_NV_evaluators = !_glewInit_GL_NV_evaluators();\n#endif /* GL_NV_evaluators */\n#ifdef GL_NV_explicit_multisample\n  if (glewExperimental || GLEW_NV_explicit_multisample) GLEW_NV_explicit_multisample = !_glewInit_GL_NV_explicit_multisample();\n#endif /* GL_NV_explicit_multisample */\n#ifdef GL_NV_fence\n  if (glewExperimental || GLEW_NV_fence) GLEW_NV_fence = !_glewInit_GL_NV_fence();\n#endif /* GL_NV_fence */\n#ifdef GL_NV_fragment_coverage_to_color\n  if (glewExperimental || GLEW_NV_fragment_coverage_to_color) GLEW_NV_fragment_coverage_to_color = !_glewInit_GL_NV_fragment_coverage_to_color();\n#endif /* GL_NV_fragment_coverage_to_color */\n#ifdef GL_NV_fragment_program\n  if (glewExperimental || GLEW_NV_fragment_program) GLEW_NV_fragment_program = !_glewInit_GL_NV_fragment_program();\n#endif /* GL_NV_fragment_program */\n#ifdef GL_NV_framebuffer_multisample_coverage\n  if (glewExperimental || GLEW_NV_framebuffer_multisample_coverage) GLEW_NV_framebuffer_multisample_coverage = !_glewInit_GL_NV_framebuffer_multisample_coverage();\n#endif /* GL_NV_framebuffer_multisample_coverage */\n#ifdef GL_NV_geometry_program4\n  if (glewExperimental || GLEW_NV_geometry_program4) GLEW_NV_geometry_program4 = !_glewInit_GL_NV_geometry_program4();\n#endif /* GL_NV_geometry_program4 */\n#ifdef GL_NV_gpu_multicast\n  if (glewExperimental || GLEW_NV_gpu_multicast) GLEW_NV_gpu_multicast = !_glewInit_GL_NV_gpu_multicast();\n#endif /* GL_NV_gpu_multicast */\n#ifdef GL_NV_gpu_program4\n  if (glewExperimental || GLEW_NV_gpu_program4) GLEW_NV_gpu_program4 = !_glewInit_GL_NV_gpu_program4();\n#endif /* GL_NV_gpu_program4 */\n#ifdef GL_NV_gpu_shader5\n  if (glewExperimental || GLEW_NV_gpu_shader5) GLEW_NV_gpu_shader5 = !_glewInit_GL_NV_gpu_shader5();\n#endif /* GL_NV_gpu_shader5 */\n#ifdef GL_NV_half_float\n  if (glewExperimental || GLEW_NV_half_float) GLEW_NV_half_float = !_glewInit_GL_NV_half_float();\n#endif /* GL_NV_half_float */\n#ifdef GL_NV_internalformat_sample_query\n  if (glewExperimental || GLEW_NV_internalformat_sample_query) GLEW_NV_internalformat_sample_query = !_glewInit_GL_NV_internalformat_sample_query();\n#endif /* GL_NV_internalformat_sample_query */\n#ifdef GL_NV_occlusion_query\n  if (glewExperimental || GLEW_NV_occlusion_query) GLEW_NV_occlusion_query = !_glewInit_GL_NV_occlusion_query();\n#endif /* GL_NV_occlusion_query */\n#ifdef GL_NV_parameter_buffer_object\n  if (glewExperimental || GLEW_NV_parameter_buffer_object) GLEW_NV_parameter_buffer_object = !_glewInit_GL_NV_parameter_buffer_object();\n#endif /* GL_NV_parameter_buffer_object */\n#ifdef GL_NV_path_rendering\n  if (glewExperimental || GLEW_NV_path_rendering) GLEW_NV_path_rendering = !_glewInit_GL_NV_path_rendering();\n#endif /* GL_NV_path_rendering */\n#ifdef GL_NV_pixel_data_range\n  if (glewExperimental || GLEW_NV_pixel_data_range) GLEW_NV_pixel_data_range = !_glewInit_GL_NV_pixel_data_range();\n#endif /* GL_NV_pixel_data_range */\n#ifdef GL_NV_point_sprite\n  if (glewExperimental || GLEW_NV_point_sprite) GLEW_NV_point_sprite = !_glewInit_GL_NV_point_sprite();\n#endif /* GL_NV_point_sprite */\n#ifdef GL_NV_present_video\n  if (glewExperimental || GLEW_NV_present_video) GLEW_NV_present_video = !_glewInit_GL_NV_present_video();\n#endif /* GL_NV_present_video */\n#ifdef GL_NV_primitive_restart\n  if (glewExperimental || GLEW_NV_primitive_restart) GLEW_NV_primitive_restart = !_glewInit_GL_NV_primitive_restart();\n#endif /* GL_NV_primitive_restart */\n#ifdef GL_NV_register_combiners\n  if (glewExperimental || GLEW_NV_register_combiners) GLEW_NV_register_combiners = !_glewInit_GL_NV_register_combiners();\n#endif /* GL_NV_register_combiners */\n#ifdef GL_NV_register_combiners2\n  if (glewExperimental || GLEW_NV_register_combiners2) GLEW_NV_register_combiners2 = !_glewInit_GL_NV_register_combiners2();\n#endif /* GL_NV_register_combiners2 */\n#ifdef GL_NV_sample_locations\n  if (glewExperimental || GLEW_NV_sample_locations) GLEW_NV_sample_locations = !_glewInit_GL_NV_sample_locations();\n#endif /* GL_NV_sample_locations */\n#ifdef GL_NV_shader_buffer_load\n  if (glewExperimental || GLEW_NV_shader_buffer_load) GLEW_NV_shader_buffer_load = !_glewInit_GL_NV_shader_buffer_load();\n#endif /* GL_NV_shader_buffer_load */\n#ifdef GL_NV_texture_barrier\n  if (glewExperimental || GLEW_NV_texture_barrier) GLEW_NV_texture_barrier = !_glewInit_GL_NV_texture_barrier();\n#endif /* GL_NV_texture_barrier */\n#ifdef GL_NV_texture_multisample\n  if (glewExperimental || GLEW_NV_texture_multisample) GLEW_NV_texture_multisample = !_glewInit_GL_NV_texture_multisample();\n#endif /* GL_NV_texture_multisample */\n#ifdef GL_NV_transform_feedback\n  if (glewExperimental || GLEW_NV_transform_feedback) GLEW_NV_transform_feedback = !_glewInit_GL_NV_transform_feedback();\n#endif /* GL_NV_transform_feedback */\n#ifdef GL_NV_transform_feedback2\n  if (glewExperimental || GLEW_NV_transform_feedback2) GLEW_NV_transform_feedback2 = !_glewInit_GL_NV_transform_feedback2();\n#endif /* GL_NV_transform_feedback2 */\n#ifdef GL_NV_vdpau_interop\n  if (glewExperimental || GLEW_NV_vdpau_interop) GLEW_NV_vdpau_interop = !_glewInit_GL_NV_vdpau_interop();\n#endif /* GL_NV_vdpau_interop */\n#ifdef GL_NV_vertex_array_range\n  if (glewExperimental || GLEW_NV_vertex_array_range) GLEW_NV_vertex_array_range = !_glewInit_GL_NV_vertex_array_range();\n#endif /* GL_NV_vertex_array_range */\n#ifdef GL_NV_vertex_attrib_integer_64bit\n  if (glewExperimental || GLEW_NV_vertex_attrib_integer_64bit) GLEW_NV_vertex_attrib_integer_64bit = !_glewInit_GL_NV_vertex_attrib_integer_64bit();\n#endif /* GL_NV_vertex_attrib_integer_64bit */\n#ifdef GL_NV_vertex_buffer_unified_memory\n  if (glewExperimental || GLEW_NV_vertex_buffer_unified_memory) GLEW_NV_vertex_buffer_unified_memory = !_glewInit_GL_NV_vertex_buffer_unified_memory();\n#endif /* GL_NV_vertex_buffer_unified_memory */\n#ifdef GL_NV_vertex_program\n  if (glewExperimental || GLEW_NV_vertex_program) GLEW_NV_vertex_program = !_glewInit_GL_NV_vertex_program();\n#endif /* GL_NV_vertex_program */\n#ifdef GL_NV_video_capture\n  if (glewExperimental || GLEW_NV_video_capture) GLEW_NV_video_capture = !_glewInit_GL_NV_video_capture();\n#endif /* GL_NV_video_capture */\n#ifdef GL_NV_viewport_swizzle\n  if (glewExperimental || GLEW_NV_viewport_swizzle) GLEW_NV_viewport_swizzle = !_glewInit_GL_NV_viewport_swizzle();\n#endif /* GL_NV_viewport_swizzle */\n#ifdef GL_OES_single_precision\n  if (glewExperimental || GLEW_OES_single_precision) GLEW_OES_single_precision = !_glewInit_GL_OES_single_precision();\n#endif /* GL_OES_single_precision */\n#ifdef GL_OVR_multiview\n  if (glewExperimental || GLEW_OVR_multiview) GLEW_OVR_multiview = !_glewInit_GL_OVR_multiview();\n#endif /* GL_OVR_multiview */\n#ifdef GL_REGAL_ES1_0_compatibility\n  if (glewExperimental || GLEW_REGAL_ES1_0_compatibility) GLEW_REGAL_ES1_0_compatibility = !_glewInit_GL_REGAL_ES1_0_compatibility();\n#endif /* GL_REGAL_ES1_0_compatibility */\n#ifdef GL_REGAL_ES1_1_compatibility\n  if (glewExperimental || GLEW_REGAL_ES1_1_compatibility) GLEW_REGAL_ES1_1_compatibility = !_glewInit_GL_REGAL_ES1_1_compatibility();\n#endif /* GL_REGAL_ES1_1_compatibility */\n#ifdef GL_REGAL_error_string\n  if (glewExperimental || GLEW_REGAL_error_string) GLEW_REGAL_error_string = !_glewInit_GL_REGAL_error_string();\n#endif /* GL_REGAL_error_string */\n#ifdef GL_REGAL_extension_query\n  if (glewExperimental || GLEW_REGAL_extension_query) GLEW_REGAL_extension_query = !_glewInit_GL_REGAL_extension_query();\n#endif /* GL_REGAL_extension_query */\n#ifdef GL_REGAL_log\n  if (glewExperimental || GLEW_REGAL_log) GLEW_REGAL_log = !_glewInit_GL_REGAL_log();\n#endif /* GL_REGAL_log */\n#ifdef GL_REGAL_proc_address\n  if (glewExperimental || GLEW_REGAL_proc_address) GLEW_REGAL_proc_address = !_glewInit_GL_REGAL_proc_address();\n#endif /* GL_REGAL_proc_address */\n#ifdef GL_SGIS_detail_texture\n  if (glewExperimental || GLEW_SGIS_detail_texture) GLEW_SGIS_detail_texture = !_glewInit_GL_SGIS_detail_texture();\n#endif /* GL_SGIS_detail_texture */\n#ifdef GL_SGIS_fog_function\n  if (glewExperimental || GLEW_SGIS_fog_function) GLEW_SGIS_fog_function = !_glewInit_GL_SGIS_fog_function();\n#endif /* GL_SGIS_fog_function */\n#ifdef GL_SGIS_multisample\n  if (glewExperimental || GLEW_SGIS_multisample) GLEW_SGIS_multisample = !_glewInit_GL_SGIS_multisample();\n#endif /* GL_SGIS_multisample */\n#ifdef GL_SGIS_sharpen_texture\n  if (glewExperimental || GLEW_SGIS_sharpen_texture) GLEW_SGIS_sharpen_texture = !_glewInit_GL_SGIS_sharpen_texture();\n#endif /* GL_SGIS_sharpen_texture */\n#ifdef GL_SGIS_texture4D\n  if (glewExperimental || GLEW_SGIS_texture4D) GLEW_SGIS_texture4D = !_glewInit_GL_SGIS_texture4D();\n#endif /* GL_SGIS_texture4D */\n#ifdef GL_SGIS_texture_filter4\n  if (glewExperimental || GLEW_SGIS_texture_filter4) GLEW_SGIS_texture_filter4 = !_glewInit_GL_SGIS_texture_filter4();\n#endif /* GL_SGIS_texture_filter4 */\n#ifdef GL_SGIX_async\n  if (glewExperimental || GLEW_SGIX_async) GLEW_SGIX_async = !_glewInit_GL_SGIX_async();\n#endif /* GL_SGIX_async */\n#ifdef GL_SGIX_flush_raster\n  if (glewExperimental || GLEW_SGIX_flush_raster) GLEW_SGIX_flush_raster = !_glewInit_GL_SGIX_flush_raster();\n#endif /* GL_SGIX_flush_raster */\n#ifdef GL_SGIX_fog_texture\n  if (glewExperimental || GLEW_SGIX_fog_texture) GLEW_SGIX_fog_texture = !_glewInit_GL_SGIX_fog_texture();\n#endif /* GL_SGIX_fog_texture */\n#ifdef GL_SGIX_fragment_specular_lighting\n  if (glewExperimental || GLEW_SGIX_fragment_specular_lighting) GLEW_SGIX_fragment_specular_lighting = !_glewInit_GL_SGIX_fragment_specular_lighting();\n#endif /* GL_SGIX_fragment_specular_lighting */\n#ifdef GL_SGIX_framezoom\n  if (glewExperimental || GLEW_SGIX_framezoom) GLEW_SGIX_framezoom = !_glewInit_GL_SGIX_framezoom();\n#endif /* GL_SGIX_framezoom */\n#ifdef GL_SGIX_pixel_texture\n  if (glewExperimental || GLEW_SGIX_pixel_texture) GLEW_SGIX_pixel_texture = !_glewInit_GL_SGIX_pixel_texture();\n#endif /* GL_SGIX_pixel_texture */\n#ifdef GL_SGIX_reference_plane\n  if (glewExperimental || GLEW_SGIX_reference_plane) GLEW_SGIX_reference_plane = !_glewInit_GL_SGIX_reference_plane();\n#endif /* GL_SGIX_reference_plane */\n#ifdef GL_SGIX_sprite\n  if (glewExperimental || GLEW_SGIX_sprite) GLEW_SGIX_sprite = !_glewInit_GL_SGIX_sprite();\n#endif /* GL_SGIX_sprite */\n#ifdef GL_SGIX_tag_sample_buffer\n  if (glewExperimental || GLEW_SGIX_tag_sample_buffer) GLEW_SGIX_tag_sample_buffer = !_glewInit_GL_SGIX_tag_sample_buffer();\n#endif /* GL_SGIX_tag_sample_buffer */\n#ifdef GL_SGI_color_table\n  if (glewExperimental || GLEW_SGI_color_table) GLEW_SGI_color_table = !_glewInit_GL_SGI_color_table();\n#endif /* GL_SGI_color_table */\n#ifdef GL_SUNX_constant_data\n  if (glewExperimental || GLEW_SUNX_constant_data) GLEW_SUNX_constant_data = !_glewInit_GL_SUNX_constant_data();\n#endif /* GL_SUNX_constant_data */\n#ifdef GL_SUN_global_alpha\n  if (glewExperimental || GLEW_SUN_global_alpha) GLEW_SUN_global_alpha = !_glewInit_GL_SUN_global_alpha();\n#endif /* GL_SUN_global_alpha */\n#ifdef GL_SUN_read_video_pixels\n  if (glewExperimental || GLEW_SUN_read_video_pixels) GLEW_SUN_read_video_pixels = !_glewInit_GL_SUN_read_video_pixels();\n#endif /* GL_SUN_read_video_pixels */\n#ifdef GL_SUN_triangle_list\n  if (glewExperimental || GLEW_SUN_triangle_list) GLEW_SUN_triangle_list = !_glewInit_GL_SUN_triangle_list();\n#endif /* GL_SUN_triangle_list */\n#ifdef GL_SUN_vertex\n  if (glewExperimental || GLEW_SUN_vertex) GLEW_SUN_vertex = !_glewInit_GL_SUN_vertex();\n#endif /* GL_SUN_vertex */\n#ifdef GL_WIN_swap_hint\n  if (glewExperimental || GLEW_WIN_swap_hint) GLEW_WIN_swap_hint = !_glewInit_GL_WIN_swap_hint();\n#endif /* GL_WIN_swap_hint */\n#ifdef GL_NV_fragment_program4\n  GLEW_NV_fragment_program4 = GLEW_NV_gpu_program4;\n#endif /* GL_NV_fragment_program4 */\n#ifdef GL_NV_geometry_program4\n  GLEW_NV_geometry_program4 = GLEW_NV_gpu_program4;\n#endif /* GL_NV_geometry_program4 */\n#ifdef GL_NV_tessellation_program5\n  GLEW_NV_tessellation_program5 = GLEW_NV_gpu_program5;\n#endif /* GL_NV_tessellation_program5 */\n#ifdef GL_NV_vertex_program4\n  GLEW_NV_vertex_program4 = GLEW_NV_gpu_program4;\n#endif /* GL_NV_vertex_program4 */\n\n  return GLEW_OK;\n}\n\n\n#if defined(GLEW_OSMESA)\n\n#elif defined(GLEW_EGL)\n\nPFNEGLCHOOSECONFIGPROC __eglewChooseConfig = NULL;\nPFNEGLCOPYBUFFERSPROC __eglewCopyBuffers = NULL;\nPFNEGLCREATECONTEXTPROC __eglewCreateContext = NULL;\nPFNEGLCREATEPBUFFERSURFACEPROC __eglewCreatePbufferSurface = NULL;\nPFNEGLCREATEPIXMAPSURFACEPROC __eglewCreatePixmapSurface = NULL;\nPFNEGLCREATEWINDOWSURFACEPROC __eglewCreateWindowSurface = NULL;\nPFNEGLDESTROYCONTEXTPROC __eglewDestroyContext = NULL;\nPFNEGLDESTROYSURFACEPROC __eglewDestroySurface = NULL;\nPFNEGLGETCONFIGATTRIBPROC __eglewGetConfigAttrib = NULL;\nPFNEGLGETCONFIGSPROC __eglewGetConfigs = NULL;\nPFNEGLGETCURRENTDISPLAYPROC __eglewGetCurrentDisplay = NULL;\nPFNEGLGETCURRENTSURFACEPROC __eglewGetCurrentSurface = NULL;\nPFNEGLGETDISPLAYPROC __eglewGetDisplay = NULL;\nPFNEGLGETERRORPROC __eglewGetError = NULL;\nPFNEGLINITIALIZEPROC __eglewInitialize = NULL;\nPFNEGLMAKECURRENTPROC __eglewMakeCurrent = NULL;\nPFNEGLQUERYCONTEXTPROC __eglewQueryContext = NULL;\nPFNEGLQUERYSTRINGPROC __eglewQueryString = NULL;\nPFNEGLQUERYSURFACEPROC __eglewQuerySurface = NULL;\nPFNEGLSWAPBUFFERSPROC __eglewSwapBuffers = NULL;\nPFNEGLTERMINATEPROC __eglewTerminate = NULL;\nPFNEGLWAITGLPROC __eglewWaitGL = NULL;\nPFNEGLWAITNATIVEPROC __eglewWaitNative = NULL;\n\nPFNEGLBINDTEXIMAGEPROC __eglewBindTexImage = NULL;\nPFNEGLRELEASETEXIMAGEPROC __eglewReleaseTexImage = NULL;\nPFNEGLSURFACEATTRIBPROC __eglewSurfaceAttrib = NULL;\nPFNEGLSWAPINTERVALPROC __eglewSwapInterval = NULL;\n\nPFNEGLBINDAPIPROC __eglewBindAPI = NULL;\nPFNEGLCREATEPBUFFERFROMCLIENTBUFFERPROC __eglewCreatePbufferFromClientBuffer = NULL;\nPFNEGLQUERYAPIPROC __eglewQueryAPI = NULL;\nPFNEGLRELEASETHREADPROC __eglewReleaseThread = NULL;\nPFNEGLWAITCLIENTPROC __eglewWaitClient = NULL;\n\nPFNEGLGETCURRENTCONTEXTPROC __eglewGetCurrentContext = NULL;\n\nPFNEGLCLIENTWAITSYNCPROC __eglewClientWaitSync = NULL;\nPFNEGLCREATEIMAGEPROC __eglewCreateImage = NULL;\nPFNEGLCREATEPLATFORMPIXMAPSURFACEPROC __eglewCreatePlatformPixmapSurface = NULL;\nPFNEGLCREATEPLATFORMWINDOWSURFACEPROC __eglewCreatePlatformWindowSurface = NULL;\nPFNEGLCREATESYNCPROC __eglewCreateSync = NULL;\nPFNEGLDESTROYIMAGEPROC __eglewDestroyImage = NULL;\nPFNEGLDESTROYSYNCPROC __eglewDestroySync = NULL;\nPFNEGLGETPLATFORMDISPLAYPROC __eglewGetPlatformDisplay = NULL;\nPFNEGLGETSYNCATTRIBPROC __eglewGetSyncAttrib = NULL;\nPFNEGLWAITSYNCPROC __eglewWaitSync = NULL;\n\nPFNEGLSETBLOBCACHEFUNCSANDROIDPROC __eglewSetBlobCacheFuncsANDROID = NULL;\n\nPFNEGLCREATENATIVECLIENTBUFFERANDROIDPROC __eglewCreateNativeClientBufferANDROID = NULL;\n\nPFNEGLDUPNATIVEFENCEFDANDROIDPROC __eglewDupNativeFenceFDANDROID = NULL;\n\nPFNEGLPRESENTATIONTIMEANDROIDPROC __eglewPresentationTimeANDROID = NULL;\n\nPFNEGLQUERYSURFACEPOINTERANGLEPROC __eglewQuerySurfacePointerANGLE = NULL;\n\nPFNEGLQUERYDEVICESEXTPROC __eglewQueryDevicesEXT = NULL;\n\nPFNEGLQUERYDEVICEATTRIBEXTPROC __eglewQueryDeviceAttribEXT = NULL;\nPFNEGLQUERYDEVICESTRINGEXTPROC __eglewQueryDeviceStringEXT = NULL;\nPFNEGLQUERYDISPLAYATTRIBEXTPROC __eglewQueryDisplayAttribEXT = NULL;\n\nPFNEGLGETOUTPUTLAYERSEXTPROC __eglewGetOutputLayersEXT = NULL;\nPFNEGLGETOUTPUTPORTSEXTPROC __eglewGetOutputPortsEXT = NULL;\nPFNEGLOUTPUTLAYERATTRIBEXTPROC __eglewOutputLayerAttribEXT = NULL;\nPFNEGLOUTPUTPORTATTRIBEXTPROC __eglewOutputPortAttribEXT = NULL;\nPFNEGLQUERYOUTPUTLAYERATTRIBEXTPROC __eglewQueryOutputLayerAttribEXT = NULL;\nPFNEGLQUERYOUTPUTLAYERSTRINGEXTPROC __eglewQueryOutputLayerStringEXT = NULL;\nPFNEGLQUERYOUTPUTPORTATTRIBEXTPROC __eglewQueryOutputPortAttribEXT = NULL;\nPFNEGLQUERYOUTPUTPORTSTRINGEXTPROC __eglewQueryOutputPortStringEXT = NULL;\n\nPFNEGLCREATEPLATFORMPIXMAPSURFACEEXTPROC __eglewCreatePlatformPixmapSurfaceEXT = NULL;\nPFNEGLCREATEPLATFORMWINDOWSURFACEEXTPROC __eglewCreatePlatformWindowSurfaceEXT = NULL;\nPFNEGLGETPLATFORMDISPLAYEXTPROC __eglewGetPlatformDisplayEXT = NULL;\n\nPFNEGLSTREAMCONSUMEROUTPUTEXTPROC __eglewStreamConsumerOutputEXT = NULL;\n\nPFNEGLSWAPBUFFERSWITHDAMAGEEXTPROC __eglewSwapBuffersWithDamageEXT = NULL;\n\nPFNEGLCREATEPIXMAPSURFACEHIPROC __eglewCreatePixmapSurfaceHI = NULL;\n\nPFNEGLCREATESYNC64KHRPROC __eglewCreateSync64KHR = NULL;\n\nPFNEGLDEBUGMESSAGECONTROLKHRPROC __eglewDebugMessageControlKHR = NULL;\nPFNEGLLABELOBJECTKHRPROC __eglewLabelObjectKHR = NULL;\nPFNEGLQUERYDEBUGKHRPROC __eglewQueryDebugKHR = NULL;\n\nPFNEGLCREATEIMAGEKHRPROC __eglewCreateImageKHR = NULL;\nPFNEGLDESTROYIMAGEKHRPROC __eglewDestroyImageKHR = NULL;\n\nPFNEGLLOCKSURFACEKHRPROC __eglewLockSurfaceKHR = NULL;\nPFNEGLUNLOCKSURFACEKHRPROC __eglewUnlockSurfaceKHR = NULL;\n\nPFNEGLQUERYSURFACE64KHRPROC __eglewQuerySurface64KHR = NULL;\n\nPFNEGLSETDAMAGEREGIONKHRPROC __eglewSetDamageRegionKHR = NULL;\n\nPFNEGLCLIENTWAITSYNCKHRPROC __eglewClientWaitSyncKHR = NULL;\nPFNEGLCREATESYNCKHRPROC __eglewCreateSyncKHR = NULL;\nPFNEGLDESTROYSYNCKHRPROC __eglewDestroySyncKHR = NULL;\nPFNEGLGETSYNCATTRIBKHRPROC __eglewGetSyncAttribKHR = NULL;\nPFNEGLSIGNALSYNCKHRPROC __eglewSignalSyncKHR = NULL;\n\nPFNEGLCREATESTREAMKHRPROC __eglewCreateStreamKHR = NULL;\nPFNEGLDESTROYSTREAMKHRPROC __eglewDestroyStreamKHR = NULL;\nPFNEGLQUERYSTREAMKHRPROC __eglewQueryStreamKHR = NULL;\nPFNEGLQUERYSTREAMU64KHRPROC __eglewQueryStreamu64KHR = NULL;\nPFNEGLSTREAMATTRIBKHRPROC __eglewStreamAttribKHR = NULL;\n\nPFNEGLSTREAMCONSUMERACQUIREKHRPROC __eglewStreamConsumerAcquireKHR = NULL;\nPFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALKHRPROC __eglewStreamConsumerGLTextureExternalKHR = NULL;\nPFNEGLSTREAMCONSUMERRELEASEKHRPROC __eglewStreamConsumerReleaseKHR = NULL;\n\nPFNEGLCREATESTREAMFROMFILEDESCRIPTORKHRPROC __eglewCreateStreamFromFileDescriptorKHR = NULL;\nPFNEGLGETSTREAMFILEDESCRIPTORKHRPROC __eglewGetStreamFileDescriptorKHR = NULL;\n\nPFNEGLQUERYSTREAMTIMEKHRPROC __eglewQueryStreamTimeKHR = NULL;\n\nPFNEGLCREATESTREAMPRODUCERSURFACEKHRPROC __eglewCreateStreamProducerSurfaceKHR = NULL;\n\nPFNEGLSWAPBUFFERSWITHDAMAGEKHRPROC __eglewSwapBuffersWithDamageKHR = NULL;\n\nPFNEGLWAITSYNCKHRPROC __eglewWaitSyncKHR = NULL;\n\nPFNEGLCREATEDRMIMAGEMESAPROC __eglewCreateDRMImageMESA = NULL;\nPFNEGLEXPORTDRMIMAGEMESAPROC __eglewExportDRMImageMESA = NULL;\n\nPFNEGLEXPORTDMABUFIMAGEMESAPROC __eglewExportDMABUFImageMESA = NULL;\nPFNEGLEXPORTDMABUFIMAGEQUERYMESAPROC __eglewExportDMABUFImageQueryMESA = NULL;\n\nPFNEGLSWAPBUFFERSREGIONNOKPROC __eglewSwapBuffersRegionNOK = NULL;\n\nPFNEGLSWAPBUFFERSREGION2NOKPROC __eglewSwapBuffersRegion2NOK = NULL;\n\nPFNEGLQUERYNATIVEDISPLAYNVPROC __eglewQueryNativeDisplayNV = NULL;\nPFNEGLQUERYNATIVEPIXMAPNVPROC __eglewQueryNativePixmapNV = NULL;\nPFNEGLQUERYNATIVEWINDOWNVPROC __eglewQueryNativeWindowNV = NULL;\n\nPFNEGLPOSTSUBBUFFERNVPROC __eglewPostSubBufferNV = NULL;\n\nPFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALATTRIBSNVPROC __eglewStreamConsumerGLTextureExternalAttribsNV = NULL;\n\nPFNEGLQUERYDISPLAYATTRIBNVPROC __eglewQueryDisplayAttribNV = NULL;\nPFNEGLQUERYSTREAMMETADATANVPROC __eglewQueryStreamMetadataNV = NULL;\nPFNEGLSETSTREAMMETADATANVPROC __eglewSetStreamMetadataNV = NULL;\n\nPFNEGLCREATESTREAMSYNCNVPROC __eglewCreateStreamSyncNV = NULL;\n\nPFNEGLCLIENTWAITSYNCNVPROC __eglewClientWaitSyncNV = NULL;\nPFNEGLCREATEFENCESYNCNVPROC __eglewCreateFenceSyncNV = NULL;\nPFNEGLDESTROYSYNCNVPROC __eglewDestroySyncNV = NULL;\nPFNEGLFENCENVPROC __eglewFenceNV = NULL;\nPFNEGLGETSYNCATTRIBNVPROC __eglewGetSyncAttribNV = NULL;\nPFNEGLSIGNALSYNCNVPROC __eglewSignalSyncNV = NULL;\n\nPFNEGLGETSYSTEMTIMEFREQUENCYNVPROC __eglewGetSystemTimeFrequencyNV = NULL;\nPFNEGLGETSYSTEMTIMENVPROC __eglewGetSystemTimeNV = NULL;\nGLboolean __EGLEW_VERSION_1_0 = GL_FALSE;\nGLboolean __EGLEW_VERSION_1_1 = GL_FALSE;\nGLboolean __EGLEW_VERSION_1_2 = GL_FALSE;\nGLboolean __EGLEW_VERSION_1_3 = GL_FALSE;\nGLboolean __EGLEW_VERSION_1_4 = GL_FALSE;\nGLboolean __EGLEW_VERSION_1_5 = GL_FALSE;\nGLboolean __EGLEW_ANDROID_blob_cache = GL_FALSE;\nGLboolean __EGLEW_ANDROID_create_native_client_buffer = GL_FALSE;\nGLboolean __EGLEW_ANDROID_framebuffer_target = GL_FALSE;\nGLboolean __EGLEW_ANDROID_front_buffer_auto_refresh = GL_FALSE;\nGLboolean __EGLEW_ANDROID_image_native_buffer = GL_FALSE;\nGLboolean __EGLEW_ANDROID_native_fence_sync = GL_FALSE;\nGLboolean __EGLEW_ANDROID_presentation_time = GL_FALSE;\nGLboolean __EGLEW_ANDROID_recordable = GL_FALSE;\nGLboolean __EGLEW_ANGLE_d3d_share_handle_client_buffer = GL_FALSE;\nGLboolean __EGLEW_ANGLE_device_d3d = GL_FALSE;\nGLboolean __EGLEW_ANGLE_query_surface_pointer = GL_FALSE;\nGLboolean __EGLEW_ANGLE_surface_d3d_texture_2d_share_handle = GL_FALSE;\nGLboolean __EGLEW_ANGLE_window_fixed_size = GL_FALSE;\nGLboolean __EGLEW_ARM_pixmap_multisample_discard = GL_FALSE;\nGLboolean __EGLEW_EXT_buffer_age = GL_FALSE;\nGLboolean __EGLEW_EXT_client_extensions = GL_FALSE;\nGLboolean __EGLEW_EXT_create_context_robustness = GL_FALSE;\nGLboolean __EGLEW_EXT_device_base = GL_FALSE;\nGLboolean __EGLEW_EXT_device_drm = GL_FALSE;\nGLboolean __EGLEW_EXT_device_enumeration = GL_FALSE;\nGLboolean __EGLEW_EXT_device_openwf = GL_FALSE;\nGLboolean __EGLEW_EXT_device_query = GL_FALSE;\nGLboolean __EGLEW_EXT_image_dma_buf_import = GL_FALSE;\nGLboolean __EGLEW_EXT_multiview_window = GL_FALSE;\nGLboolean __EGLEW_EXT_output_base = GL_FALSE;\nGLboolean __EGLEW_EXT_output_drm = GL_FALSE;\nGLboolean __EGLEW_EXT_output_openwf = GL_FALSE;\nGLboolean __EGLEW_EXT_platform_base = GL_FALSE;\nGLboolean __EGLEW_EXT_platform_device = GL_FALSE;\nGLboolean __EGLEW_EXT_platform_wayland = GL_FALSE;\nGLboolean __EGLEW_EXT_platform_x11 = GL_FALSE;\nGLboolean __EGLEW_EXT_protected_content = GL_FALSE;\nGLboolean __EGLEW_EXT_protected_surface = GL_FALSE;\nGLboolean __EGLEW_EXT_stream_consumer_egloutput = GL_FALSE;\nGLboolean __EGLEW_EXT_swap_buffers_with_damage = GL_FALSE;\nGLboolean __EGLEW_EXT_yuv_surface = GL_FALSE;\nGLboolean __EGLEW_HI_clientpixmap = GL_FALSE;\nGLboolean __EGLEW_HI_colorformats = GL_FALSE;\nGLboolean __EGLEW_IMG_context_priority = GL_FALSE;\nGLboolean __EGLEW_IMG_image_plane_attribs = GL_FALSE;\nGLboolean __EGLEW_KHR_cl_event = GL_FALSE;\nGLboolean __EGLEW_KHR_cl_event2 = GL_FALSE;\nGLboolean __EGLEW_KHR_client_get_all_proc_addresses = GL_FALSE;\nGLboolean __EGLEW_KHR_config_attribs = GL_FALSE;\nGLboolean __EGLEW_KHR_create_context = GL_FALSE;\nGLboolean __EGLEW_KHR_create_context_no_error = GL_FALSE;\nGLboolean __EGLEW_KHR_debug = GL_FALSE;\nGLboolean __EGLEW_KHR_fence_sync = GL_FALSE;\nGLboolean __EGLEW_KHR_get_all_proc_addresses = GL_FALSE;\nGLboolean __EGLEW_KHR_gl_colorspace = GL_FALSE;\nGLboolean __EGLEW_KHR_gl_renderbuffer_image = GL_FALSE;\nGLboolean __EGLEW_KHR_gl_texture_2D_image = GL_FALSE;\nGLboolean __EGLEW_KHR_gl_texture_3D_image = GL_FALSE;\nGLboolean __EGLEW_KHR_gl_texture_cubemap_image = GL_FALSE;\nGLboolean __EGLEW_KHR_image = GL_FALSE;\nGLboolean __EGLEW_KHR_image_base = GL_FALSE;\nGLboolean __EGLEW_KHR_image_pixmap = GL_FALSE;\nGLboolean __EGLEW_KHR_lock_surface = GL_FALSE;\nGLboolean __EGLEW_KHR_lock_surface2 = GL_FALSE;\nGLboolean __EGLEW_KHR_lock_surface3 = GL_FALSE;\nGLboolean __EGLEW_KHR_mutable_render_buffer = GL_FALSE;\nGLboolean __EGLEW_KHR_partial_update = GL_FALSE;\nGLboolean __EGLEW_KHR_platform_android = GL_FALSE;\nGLboolean __EGLEW_KHR_platform_gbm = GL_FALSE;\nGLboolean __EGLEW_KHR_platform_wayland = GL_FALSE;\nGLboolean __EGLEW_KHR_platform_x11 = GL_FALSE;\nGLboolean __EGLEW_KHR_reusable_sync = GL_FALSE;\nGLboolean __EGLEW_KHR_stream = GL_FALSE;\nGLboolean __EGLEW_KHR_stream_consumer_gltexture = GL_FALSE;\nGLboolean __EGLEW_KHR_stream_cross_process_fd = GL_FALSE;\nGLboolean __EGLEW_KHR_stream_fifo = GL_FALSE;\nGLboolean __EGLEW_KHR_stream_producer_aldatalocator = GL_FALSE;\nGLboolean __EGLEW_KHR_stream_producer_eglsurface = GL_FALSE;\nGLboolean __EGLEW_KHR_surfaceless_context = GL_FALSE;\nGLboolean __EGLEW_KHR_swap_buffers_with_damage = GL_FALSE;\nGLboolean __EGLEW_KHR_vg_parent_image = GL_FALSE;\nGLboolean __EGLEW_KHR_wait_sync = GL_FALSE;\nGLboolean __EGLEW_MESA_drm_image = GL_FALSE;\nGLboolean __EGLEW_MESA_image_dma_buf_export = GL_FALSE;\nGLboolean __EGLEW_MESA_platform_gbm = GL_FALSE;\nGLboolean __EGLEW_NOK_swap_region = GL_FALSE;\nGLboolean __EGLEW_NOK_swap_region2 = GL_FALSE;\nGLboolean __EGLEW_NOK_texture_from_pixmap = GL_FALSE;\nGLboolean __EGLEW_NV_3dvision_surface = GL_FALSE;\nGLboolean __EGLEW_NV_coverage_sample = GL_FALSE;\nGLboolean __EGLEW_NV_coverage_sample_resolve = GL_FALSE;\nGLboolean __EGLEW_NV_cuda_event = GL_FALSE;\nGLboolean __EGLEW_NV_depth_nonlinear = GL_FALSE;\nGLboolean __EGLEW_NV_device_cuda = GL_FALSE;\nGLboolean __EGLEW_NV_native_query = GL_FALSE;\nGLboolean __EGLEW_NV_post_convert_rounding = GL_FALSE;\nGLboolean __EGLEW_NV_post_sub_buffer = GL_FALSE;\nGLboolean __EGLEW_NV_robustness_video_memory_purge = GL_FALSE;\nGLboolean __EGLEW_NV_stream_consumer_gltexture_yuv = GL_FALSE;\nGLboolean __EGLEW_NV_stream_metadata = GL_FALSE;\nGLboolean __EGLEW_NV_stream_sync = GL_FALSE;\nGLboolean __EGLEW_NV_sync = GL_FALSE;\nGLboolean __EGLEW_NV_system_time = GL_FALSE;\nGLboolean __EGLEW_TIZEN_image_native_buffer = GL_FALSE;\nGLboolean __EGLEW_TIZEN_image_native_surface = GL_FALSE;\n#ifdef EGL_VERSION_1_0\n\nstatic GLboolean _glewInit_EGL_VERSION_1_0 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglChooseConfig = (PFNEGLCHOOSECONFIGPROC)glewGetProcAddress((const GLubyte*)\"eglChooseConfig\")) == NULL) || r;\n  r = ((eglCopyBuffers = (PFNEGLCOPYBUFFERSPROC)glewGetProcAddress((const GLubyte*)\"eglCopyBuffers\")) == NULL) || r;\n  r = ((eglCreateContext = (PFNEGLCREATECONTEXTPROC)glewGetProcAddress((const GLubyte*)\"eglCreateContext\")) == NULL) || r;\n  r = ((eglCreatePbufferSurface = (PFNEGLCREATEPBUFFERSURFACEPROC)glewGetProcAddress((const GLubyte*)\"eglCreatePbufferSurface\")) == NULL) || r;\n  r = ((eglCreatePixmapSurface = (PFNEGLCREATEPIXMAPSURFACEPROC)glewGetProcAddress((const GLubyte*)\"eglCreatePixmapSurface\")) == NULL) || r;\n  r = ((eglCreateWindowSurface = (PFNEGLCREATEWINDOWSURFACEPROC)glewGetProcAddress((const GLubyte*)\"eglCreateWindowSurface\")) == NULL) || r;\n  r = ((eglDestroyContext = (PFNEGLDESTROYCONTEXTPROC)glewGetProcAddress((const GLubyte*)\"eglDestroyContext\")) == NULL) || r;\n  r = ((eglDestroySurface = (PFNEGLDESTROYSURFACEPROC)glewGetProcAddress((const GLubyte*)\"eglDestroySurface\")) == NULL) || r;\n  r = ((eglGetConfigAttrib = (PFNEGLGETCONFIGATTRIBPROC)glewGetProcAddress((const GLubyte*)\"eglGetConfigAttrib\")) == NULL) || r;\n  r = ((eglGetConfigs = (PFNEGLGETCONFIGSPROC)glewGetProcAddress((const GLubyte*)\"eglGetConfigs\")) == NULL) || r;\n  r = ((eglGetCurrentDisplay = (PFNEGLGETCURRENTDISPLAYPROC)glewGetProcAddress((const GLubyte*)\"eglGetCurrentDisplay\")) == NULL) || r;\n  r = ((eglGetCurrentSurface = (PFNEGLGETCURRENTSURFACEPROC)glewGetProcAddress((const GLubyte*)\"eglGetCurrentSurface\")) == NULL) || r;\n  r = ((eglGetDisplay = (PFNEGLGETDISPLAYPROC)glewGetProcAddress((const GLubyte*)\"eglGetDisplay\")) == NULL) || r;\n  r = ((eglGetError = (PFNEGLGETERRORPROC)glewGetProcAddress((const GLubyte*)\"eglGetError\")) == NULL) || r;\n  r = ((eglInitialize = (PFNEGLINITIALIZEPROC)glewGetProcAddress((const GLubyte*)\"eglInitialize\")) == NULL) || r;\n  r = ((eglMakeCurrent = (PFNEGLMAKECURRENTPROC)glewGetProcAddress((const GLubyte*)\"eglMakeCurrent\")) == NULL) || r;\n  r = ((eglQueryContext = (PFNEGLQUERYCONTEXTPROC)glewGetProcAddress((const GLubyte*)\"eglQueryContext\")) == NULL) || r;\n  r = ((eglQueryString = (PFNEGLQUERYSTRINGPROC)glewGetProcAddress((const GLubyte*)\"eglQueryString\")) == NULL) || r;\n  r = ((eglQuerySurface = (PFNEGLQUERYSURFACEPROC)glewGetProcAddress((const GLubyte*)\"eglQuerySurface\")) == NULL) || r;\n  r = ((eglSwapBuffers = (PFNEGLSWAPBUFFERSPROC)glewGetProcAddress((const GLubyte*)\"eglSwapBuffers\")) == NULL) || r;\n  r = ((eglTerminate = (PFNEGLTERMINATEPROC)glewGetProcAddress((const GLubyte*)\"eglTerminate\")) == NULL) || r;\n  r = ((eglWaitGL = (PFNEGLWAITGLPROC)glewGetProcAddress((const GLubyte*)\"eglWaitGL\")) == NULL) || r;\n  r = ((eglWaitNative = (PFNEGLWAITNATIVEPROC)glewGetProcAddress((const GLubyte*)\"eglWaitNative\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_VERSION_1_0 */\n\n#ifdef EGL_VERSION_1_1\n\nstatic GLboolean _glewInit_EGL_VERSION_1_1 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglBindTexImage = (PFNEGLBINDTEXIMAGEPROC)glewGetProcAddress((const GLubyte*)\"eglBindTexImage\")) == NULL) || r;\n  r = ((eglReleaseTexImage = (PFNEGLRELEASETEXIMAGEPROC)glewGetProcAddress((const GLubyte*)\"eglReleaseTexImage\")) == NULL) || r;\n  r = ((eglSurfaceAttrib = (PFNEGLSURFACEATTRIBPROC)glewGetProcAddress((const GLubyte*)\"eglSurfaceAttrib\")) == NULL) || r;\n  r = ((eglSwapInterval = (PFNEGLSWAPINTERVALPROC)glewGetProcAddress((const GLubyte*)\"eglSwapInterval\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_VERSION_1_1 */\n\n#ifdef EGL_VERSION_1_2\n\nstatic GLboolean _glewInit_EGL_VERSION_1_2 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglBindAPI = (PFNEGLBINDAPIPROC)glewGetProcAddress((const GLubyte*)\"eglBindAPI\")) == NULL) || r;\n  r = ((eglCreatePbufferFromClientBuffer = (PFNEGLCREATEPBUFFERFROMCLIENTBUFFERPROC)glewGetProcAddress((const GLubyte*)\"eglCreatePbufferFromClientBuffer\")) == NULL) || r;\n  r = ((eglQueryAPI = (PFNEGLQUERYAPIPROC)glewGetProcAddress((const GLubyte*)\"eglQueryAPI\")) == NULL) || r;\n  r = ((eglReleaseThread = (PFNEGLRELEASETHREADPROC)glewGetProcAddress((const GLubyte*)\"eglReleaseThread\")) == NULL) || r;\n  r = ((eglWaitClient = (PFNEGLWAITCLIENTPROC)glewGetProcAddress((const GLubyte*)\"eglWaitClient\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_VERSION_1_2 */\n\n#ifdef EGL_VERSION_1_4\n\nstatic GLboolean _glewInit_EGL_VERSION_1_4 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglGetCurrentContext = (PFNEGLGETCURRENTCONTEXTPROC)glewGetProcAddress((const GLubyte*)\"eglGetCurrentContext\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_VERSION_1_4 */\n\n#ifdef EGL_VERSION_1_5\n\nstatic GLboolean _glewInit_EGL_VERSION_1_5 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglClientWaitSync = (PFNEGLCLIENTWAITSYNCPROC)glewGetProcAddress((const GLubyte*)\"eglClientWaitSync\")) == NULL) || r;\n  r = ((eglCreateImage = (PFNEGLCREATEIMAGEPROC)glewGetProcAddress((const GLubyte*)\"eglCreateImage\")) == NULL) || r;\n  r = ((eglCreatePlatformPixmapSurface = (PFNEGLCREATEPLATFORMPIXMAPSURFACEPROC)glewGetProcAddress((const GLubyte*)\"eglCreatePlatformPixmapSurface\")) == NULL) || r;\n  r = ((eglCreatePlatformWindowSurface = (PFNEGLCREATEPLATFORMWINDOWSURFACEPROC)glewGetProcAddress((const GLubyte*)\"eglCreatePlatformWindowSurface\")) == NULL) || r;\n  r = ((eglCreateSync = (PFNEGLCREATESYNCPROC)glewGetProcAddress((const GLubyte*)\"eglCreateSync\")) == NULL) || r;\n  r = ((eglDestroyImage = (PFNEGLDESTROYIMAGEPROC)glewGetProcAddress((const GLubyte*)\"eglDestroyImage\")) == NULL) || r;\n  r = ((eglDestroySync = (PFNEGLDESTROYSYNCPROC)glewGetProcAddress((const GLubyte*)\"eglDestroySync\")) == NULL) || r;\n  r = ((eglGetPlatformDisplay = (PFNEGLGETPLATFORMDISPLAYPROC)glewGetProcAddress((const GLubyte*)\"eglGetPlatformDisplay\")) == NULL) || r;\n  r = ((eglGetSyncAttrib = (PFNEGLGETSYNCATTRIBPROC)glewGetProcAddress((const GLubyte*)\"eglGetSyncAttrib\")) == NULL) || r;\n  r = ((eglWaitSync = (PFNEGLWAITSYNCPROC)glewGetProcAddress((const GLubyte*)\"eglWaitSync\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_VERSION_1_5 */\n\n#ifdef EGL_ANDROID_blob_cache\n\nstatic GLboolean _glewInit_EGL_ANDROID_blob_cache ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglSetBlobCacheFuncsANDROID = (PFNEGLSETBLOBCACHEFUNCSANDROIDPROC)glewGetProcAddress((const GLubyte*)\"eglSetBlobCacheFuncsANDROID\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_ANDROID_blob_cache */\n\n#ifdef EGL_ANDROID_create_native_client_buffer\n\nstatic GLboolean _glewInit_EGL_ANDROID_create_native_client_buffer ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglCreateNativeClientBufferANDROID = (PFNEGLCREATENATIVECLIENTBUFFERANDROIDPROC)glewGetProcAddress((const GLubyte*)\"eglCreateNativeClientBufferANDROID\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_ANDROID_create_native_client_buffer */\n\n#ifdef EGL_ANDROID_native_fence_sync\n\nstatic GLboolean _glewInit_EGL_ANDROID_native_fence_sync ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglDupNativeFenceFDANDROID = (PFNEGLDUPNATIVEFENCEFDANDROIDPROC)glewGetProcAddress((const GLubyte*)\"eglDupNativeFenceFDANDROID\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_ANDROID_native_fence_sync */\n\n#ifdef EGL_ANDROID_presentation_time\n\nstatic GLboolean _glewInit_EGL_ANDROID_presentation_time ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglPresentationTimeANDROID = (PFNEGLPRESENTATIONTIMEANDROIDPROC)glewGetProcAddress((const GLubyte*)\"eglPresentationTimeANDROID\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_ANDROID_presentation_time */\n\n#ifdef EGL_ANGLE_query_surface_pointer\n\nstatic GLboolean _glewInit_EGL_ANGLE_query_surface_pointer ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglQuerySurfacePointerANGLE = (PFNEGLQUERYSURFACEPOINTERANGLEPROC)glewGetProcAddress((const GLubyte*)\"eglQuerySurfacePointerANGLE\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_ANGLE_query_surface_pointer */\n\n#ifdef EGL_EXT_device_enumeration\n\nstatic GLboolean _glewInit_EGL_EXT_device_enumeration ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglQueryDevicesEXT = (PFNEGLQUERYDEVICESEXTPROC)glewGetProcAddress((const GLubyte*)\"eglQueryDevicesEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_EXT_device_enumeration */\n\n#ifdef EGL_EXT_device_query\n\nstatic GLboolean _glewInit_EGL_EXT_device_query ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglQueryDeviceAttribEXT = (PFNEGLQUERYDEVICEATTRIBEXTPROC)glewGetProcAddress((const GLubyte*)\"eglQueryDeviceAttribEXT\")) == NULL) || r;\n  r = ((eglQueryDeviceStringEXT = (PFNEGLQUERYDEVICESTRINGEXTPROC)glewGetProcAddress((const GLubyte*)\"eglQueryDeviceStringEXT\")) == NULL) || r;\n  r = ((eglQueryDisplayAttribEXT = (PFNEGLQUERYDISPLAYATTRIBEXTPROC)glewGetProcAddress((const GLubyte*)\"eglQueryDisplayAttribEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_EXT_device_query */\n\n#ifdef EGL_EXT_output_base\n\nstatic GLboolean _glewInit_EGL_EXT_output_base ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglGetOutputLayersEXT = (PFNEGLGETOUTPUTLAYERSEXTPROC)glewGetProcAddress((const GLubyte*)\"eglGetOutputLayersEXT\")) == NULL) || r;\n  r = ((eglGetOutputPortsEXT = (PFNEGLGETOUTPUTPORTSEXTPROC)glewGetProcAddress((const GLubyte*)\"eglGetOutputPortsEXT\")) == NULL) || r;\n  r = ((eglOutputLayerAttribEXT = (PFNEGLOUTPUTLAYERATTRIBEXTPROC)glewGetProcAddress((const GLubyte*)\"eglOutputLayerAttribEXT\")) == NULL) || r;\n  r = ((eglOutputPortAttribEXT = (PFNEGLOUTPUTPORTATTRIBEXTPROC)glewGetProcAddress((const GLubyte*)\"eglOutputPortAttribEXT\")) == NULL) || r;\n  r = ((eglQueryOutputLayerAttribEXT = (PFNEGLQUERYOUTPUTLAYERATTRIBEXTPROC)glewGetProcAddress((const GLubyte*)\"eglQueryOutputLayerAttribEXT\")) == NULL) || r;\n  r = ((eglQueryOutputLayerStringEXT = (PFNEGLQUERYOUTPUTLAYERSTRINGEXTPROC)glewGetProcAddress((const GLubyte*)\"eglQueryOutputLayerStringEXT\")) == NULL) || r;\n  r = ((eglQueryOutputPortAttribEXT = (PFNEGLQUERYOUTPUTPORTATTRIBEXTPROC)glewGetProcAddress((const GLubyte*)\"eglQueryOutputPortAttribEXT\")) == NULL) || r;\n  r = ((eglQueryOutputPortStringEXT = (PFNEGLQUERYOUTPUTPORTSTRINGEXTPROC)glewGetProcAddress((const GLubyte*)\"eglQueryOutputPortStringEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_EXT_output_base */\n\n#ifdef EGL_EXT_platform_base\n\nstatic GLboolean _glewInit_EGL_EXT_platform_base ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglCreatePlatformPixmapSurfaceEXT = (PFNEGLCREATEPLATFORMPIXMAPSURFACEEXTPROC)glewGetProcAddress((const GLubyte*)\"eglCreatePlatformPixmapSurfaceEXT\")) == NULL) || r;\n  r = ((eglCreatePlatformWindowSurfaceEXT = (PFNEGLCREATEPLATFORMWINDOWSURFACEEXTPROC)glewGetProcAddress((const GLubyte*)\"eglCreatePlatformWindowSurfaceEXT\")) == NULL) || r;\n  r = ((eglGetPlatformDisplayEXT = (PFNEGLGETPLATFORMDISPLAYEXTPROC)glewGetProcAddress((const GLubyte*)\"eglGetPlatformDisplayEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_EXT_platform_base */\n\n#ifdef EGL_EXT_stream_consumer_egloutput\n\nstatic GLboolean _glewInit_EGL_EXT_stream_consumer_egloutput ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglStreamConsumerOutputEXT = (PFNEGLSTREAMCONSUMEROUTPUTEXTPROC)glewGetProcAddress((const GLubyte*)\"eglStreamConsumerOutputEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_EXT_stream_consumer_egloutput */\n\n#ifdef EGL_EXT_swap_buffers_with_damage\n\nstatic GLboolean _glewInit_EGL_EXT_swap_buffers_with_damage ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglSwapBuffersWithDamageEXT = (PFNEGLSWAPBUFFERSWITHDAMAGEEXTPROC)glewGetProcAddress((const GLubyte*)\"eglSwapBuffersWithDamageEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_EXT_swap_buffers_with_damage */\n\n#ifdef EGL_HI_clientpixmap\n\nstatic GLboolean _glewInit_EGL_HI_clientpixmap ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglCreatePixmapSurfaceHI = (PFNEGLCREATEPIXMAPSURFACEHIPROC)glewGetProcAddress((const GLubyte*)\"eglCreatePixmapSurfaceHI\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_HI_clientpixmap */\n\n#ifdef EGL_KHR_cl_event2\n\nstatic GLboolean _glewInit_EGL_KHR_cl_event2 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglCreateSync64KHR = (PFNEGLCREATESYNC64KHRPROC)glewGetProcAddress((const GLubyte*)\"eglCreateSync64KHR\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_KHR_cl_event2 */\n\n#ifdef EGL_KHR_debug\n\nstatic GLboolean _glewInit_EGL_KHR_debug ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglDebugMessageControlKHR = (PFNEGLDEBUGMESSAGECONTROLKHRPROC)glewGetProcAddress((const GLubyte*)\"eglDebugMessageControlKHR\")) == NULL) || r;\n  r = ((eglLabelObjectKHR = (PFNEGLLABELOBJECTKHRPROC)glewGetProcAddress((const GLubyte*)\"eglLabelObjectKHR\")) == NULL) || r;\n  r = ((eglQueryDebugKHR = (PFNEGLQUERYDEBUGKHRPROC)glewGetProcAddress((const GLubyte*)\"eglQueryDebugKHR\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_KHR_debug */\n\n#ifdef EGL_KHR_image\n\nstatic GLboolean _glewInit_EGL_KHR_image ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglCreateImageKHR = (PFNEGLCREATEIMAGEKHRPROC)glewGetProcAddress((const GLubyte*)\"eglCreateImageKHR\")) == NULL) || r;\n  r = ((eglDestroyImageKHR = (PFNEGLDESTROYIMAGEKHRPROC)glewGetProcAddress((const GLubyte*)\"eglDestroyImageKHR\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_KHR_image */\n\n#ifdef EGL_KHR_lock_surface\n\nstatic GLboolean _glewInit_EGL_KHR_lock_surface ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglLockSurfaceKHR = (PFNEGLLOCKSURFACEKHRPROC)glewGetProcAddress((const GLubyte*)\"eglLockSurfaceKHR\")) == NULL) || r;\n  r = ((eglUnlockSurfaceKHR = (PFNEGLUNLOCKSURFACEKHRPROC)glewGetProcAddress((const GLubyte*)\"eglUnlockSurfaceKHR\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_KHR_lock_surface */\n\n#ifdef EGL_KHR_lock_surface3\n\nstatic GLboolean _glewInit_EGL_KHR_lock_surface3 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglQuerySurface64KHR = (PFNEGLQUERYSURFACE64KHRPROC)glewGetProcAddress((const GLubyte*)\"eglQuerySurface64KHR\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_KHR_lock_surface3 */\n\n#ifdef EGL_KHR_partial_update\n\nstatic GLboolean _glewInit_EGL_KHR_partial_update ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglSetDamageRegionKHR = (PFNEGLSETDAMAGEREGIONKHRPROC)glewGetProcAddress((const GLubyte*)\"eglSetDamageRegionKHR\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_KHR_partial_update */\n\n#ifdef EGL_KHR_reusable_sync\n\nstatic GLboolean _glewInit_EGL_KHR_reusable_sync ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglClientWaitSyncKHR = (PFNEGLCLIENTWAITSYNCKHRPROC)glewGetProcAddress((const GLubyte*)\"eglClientWaitSyncKHR\")) == NULL) || r;\n  r = ((eglCreateSyncKHR = (PFNEGLCREATESYNCKHRPROC)glewGetProcAddress((const GLubyte*)\"eglCreateSyncKHR\")) == NULL) || r;\n  r = ((eglDestroySyncKHR = (PFNEGLDESTROYSYNCKHRPROC)glewGetProcAddress((const GLubyte*)\"eglDestroySyncKHR\")) == NULL) || r;\n  r = ((eglGetSyncAttribKHR = (PFNEGLGETSYNCATTRIBKHRPROC)glewGetProcAddress((const GLubyte*)\"eglGetSyncAttribKHR\")) == NULL) || r;\n  r = ((eglSignalSyncKHR = (PFNEGLSIGNALSYNCKHRPROC)glewGetProcAddress((const GLubyte*)\"eglSignalSyncKHR\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_KHR_reusable_sync */\n\n#ifdef EGL_KHR_stream\n\nstatic GLboolean _glewInit_EGL_KHR_stream ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglCreateStreamKHR = (PFNEGLCREATESTREAMKHRPROC)glewGetProcAddress((const GLubyte*)\"eglCreateStreamKHR\")) == NULL) || r;\n  r = ((eglDestroyStreamKHR = (PFNEGLDESTROYSTREAMKHRPROC)glewGetProcAddress((const GLubyte*)\"eglDestroyStreamKHR\")) == NULL) || r;\n  r = ((eglQueryStreamKHR = (PFNEGLQUERYSTREAMKHRPROC)glewGetProcAddress((const GLubyte*)\"eglQueryStreamKHR\")) == NULL) || r;\n  r = ((eglQueryStreamu64KHR = (PFNEGLQUERYSTREAMU64KHRPROC)glewGetProcAddress((const GLubyte*)\"eglQueryStreamu64KHR\")) == NULL) || r;\n  r = ((eglStreamAttribKHR = (PFNEGLSTREAMATTRIBKHRPROC)glewGetProcAddress((const GLubyte*)\"eglStreamAttribKHR\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_KHR_stream */\n\n#ifdef EGL_KHR_stream_consumer_gltexture\n\nstatic GLboolean _glewInit_EGL_KHR_stream_consumer_gltexture ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglStreamConsumerAcquireKHR = (PFNEGLSTREAMCONSUMERACQUIREKHRPROC)glewGetProcAddress((const GLubyte*)\"eglStreamConsumerAcquireKHR\")) == NULL) || r;\n  r = ((eglStreamConsumerGLTextureExternalKHR = (PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALKHRPROC)glewGetProcAddress((const GLubyte*)\"eglStreamConsumerGLTextureExternalKHR\")) == NULL) || r;\n  r = ((eglStreamConsumerReleaseKHR = (PFNEGLSTREAMCONSUMERRELEASEKHRPROC)glewGetProcAddress((const GLubyte*)\"eglStreamConsumerReleaseKHR\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_KHR_stream_consumer_gltexture */\n\n#ifdef EGL_KHR_stream_cross_process_fd\n\nstatic GLboolean _glewInit_EGL_KHR_stream_cross_process_fd ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglCreateStreamFromFileDescriptorKHR = (PFNEGLCREATESTREAMFROMFILEDESCRIPTORKHRPROC)glewGetProcAddress((const GLubyte*)\"eglCreateStreamFromFileDescriptorKHR\")) == NULL) || r;\n  r = ((eglGetStreamFileDescriptorKHR = (PFNEGLGETSTREAMFILEDESCRIPTORKHRPROC)glewGetProcAddress((const GLubyte*)\"eglGetStreamFileDescriptorKHR\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_KHR_stream_cross_process_fd */\n\n#ifdef EGL_KHR_stream_fifo\n\nstatic GLboolean _glewInit_EGL_KHR_stream_fifo ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglQueryStreamTimeKHR = (PFNEGLQUERYSTREAMTIMEKHRPROC)glewGetProcAddress((const GLubyte*)\"eglQueryStreamTimeKHR\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_KHR_stream_fifo */\n\n#ifdef EGL_KHR_stream_producer_eglsurface\n\nstatic GLboolean _glewInit_EGL_KHR_stream_producer_eglsurface ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglCreateStreamProducerSurfaceKHR = (PFNEGLCREATESTREAMPRODUCERSURFACEKHRPROC)glewGetProcAddress((const GLubyte*)\"eglCreateStreamProducerSurfaceKHR\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_KHR_stream_producer_eglsurface */\n\n#ifdef EGL_KHR_swap_buffers_with_damage\n\nstatic GLboolean _glewInit_EGL_KHR_swap_buffers_with_damage ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglSwapBuffersWithDamageKHR = (PFNEGLSWAPBUFFERSWITHDAMAGEKHRPROC)glewGetProcAddress((const GLubyte*)\"eglSwapBuffersWithDamageKHR\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_KHR_swap_buffers_with_damage */\n\n#ifdef EGL_KHR_wait_sync\n\nstatic GLboolean _glewInit_EGL_KHR_wait_sync ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglWaitSyncKHR = (PFNEGLWAITSYNCKHRPROC)glewGetProcAddress((const GLubyte*)\"eglWaitSyncKHR\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_KHR_wait_sync */\n\n#ifdef EGL_MESA_drm_image\n\nstatic GLboolean _glewInit_EGL_MESA_drm_image ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglCreateDRMImageMESA = (PFNEGLCREATEDRMIMAGEMESAPROC)glewGetProcAddress((const GLubyte*)\"eglCreateDRMImageMESA\")) == NULL) || r;\n  r = ((eglExportDRMImageMESA = (PFNEGLEXPORTDRMIMAGEMESAPROC)glewGetProcAddress((const GLubyte*)\"eglExportDRMImageMESA\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_MESA_drm_image */\n\n#ifdef EGL_MESA_image_dma_buf_export\n\nstatic GLboolean _glewInit_EGL_MESA_image_dma_buf_export ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglExportDMABUFImageMESA = (PFNEGLEXPORTDMABUFIMAGEMESAPROC)glewGetProcAddress((const GLubyte*)\"eglExportDMABUFImageMESA\")) == NULL) || r;\n  r = ((eglExportDMABUFImageQueryMESA = (PFNEGLEXPORTDMABUFIMAGEQUERYMESAPROC)glewGetProcAddress((const GLubyte*)\"eglExportDMABUFImageQueryMESA\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_MESA_image_dma_buf_export */\n\n#ifdef EGL_NOK_swap_region\n\nstatic GLboolean _glewInit_EGL_NOK_swap_region ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglSwapBuffersRegionNOK = (PFNEGLSWAPBUFFERSREGIONNOKPROC)glewGetProcAddress((const GLubyte*)\"eglSwapBuffersRegionNOK\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_NOK_swap_region */\n\n#ifdef EGL_NOK_swap_region2\n\nstatic GLboolean _glewInit_EGL_NOK_swap_region2 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglSwapBuffersRegion2NOK = (PFNEGLSWAPBUFFERSREGION2NOKPROC)glewGetProcAddress((const GLubyte*)\"eglSwapBuffersRegion2NOK\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_NOK_swap_region2 */\n\n#ifdef EGL_NV_native_query\n\nstatic GLboolean _glewInit_EGL_NV_native_query ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglQueryNativeDisplayNV = (PFNEGLQUERYNATIVEDISPLAYNVPROC)glewGetProcAddress((const GLubyte*)\"eglQueryNativeDisplayNV\")) == NULL) || r;\n  r = ((eglQueryNativePixmapNV = (PFNEGLQUERYNATIVEPIXMAPNVPROC)glewGetProcAddress((const GLubyte*)\"eglQueryNativePixmapNV\")) == NULL) || r;\n  r = ((eglQueryNativeWindowNV = (PFNEGLQUERYNATIVEWINDOWNVPROC)glewGetProcAddress((const GLubyte*)\"eglQueryNativeWindowNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_NV_native_query */\n\n#ifdef EGL_NV_post_sub_buffer\n\nstatic GLboolean _glewInit_EGL_NV_post_sub_buffer ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglPostSubBufferNV = (PFNEGLPOSTSUBBUFFERNVPROC)glewGetProcAddress((const GLubyte*)\"eglPostSubBufferNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_NV_post_sub_buffer */\n\n#ifdef EGL_NV_stream_consumer_gltexture_yuv\n\nstatic GLboolean _glewInit_EGL_NV_stream_consumer_gltexture_yuv ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglStreamConsumerGLTextureExternalAttribsNV = (PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALATTRIBSNVPROC)glewGetProcAddress((const GLubyte*)\"eglStreamConsumerGLTextureExternalAttribsNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_NV_stream_consumer_gltexture_yuv */\n\n#ifdef EGL_NV_stream_metadata\n\nstatic GLboolean _glewInit_EGL_NV_stream_metadata ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglQueryDisplayAttribNV = (PFNEGLQUERYDISPLAYATTRIBNVPROC)glewGetProcAddress((const GLubyte*)\"eglQueryDisplayAttribNV\")) == NULL) || r;\n  r = ((eglQueryStreamMetadataNV = (PFNEGLQUERYSTREAMMETADATANVPROC)glewGetProcAddress((const GLubyte*)\"eglQueryStreamMetadataNV\")) == NULL) || r;\n  r = ((eglSetStreamMetadataNV = (PFNEGLSETSTREAMMETADATANVPROC)glewGetProcAddress((const GLubyte*)\"eglSetStreamMetadataNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_NV_stream_metadata */\n\n#ifdef EGL_NV_stream_sync\n\nstatic GLboolean _glewInit_EGL_NV_stream_sync ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglCreateStreamSyncNV = (PFNEGLCREATESTREAMSYNCNVPROC)glewGetProcAddress((const GLubyte*)\"eglCreateStreamSyncNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_NV_stream_sync */\n\n#ifdef EGL_NV_sync\n\nstatic GLboolean _glewInit_EGL_NV_sync ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglClientWaitSyncNV = (PFNEGLCLIENTWAITSYNCNVPROC)glewGetProcAddress((const GLubyte*)\"eglClientWaitSyncNV\")) == NULL) || r;\n  r = ((eglCreateFenceSyncNV = (PFNEGLCREATEFENCESYNCNVPROC)glewGetProcAddress((const GLubyte*)\"eglCreateFenceSyncNV\")) == NULL) || r;\n  r = ((eglDestroySyncNV = (PFNEGLDESTROYSYNCNVPROC)glewGetProcAddress((const GLubyte*)\"eglDestroySyncNV\")) == NULL) || r;\n  r = ((eglFenceNV = (PFNEGLFENCENVPROC)glewGetProcAddress((const GLubyte*)\"eglFenceNV\")) == NULL) || r;\n  r = ((eglGetSyncAttribNV = (PFNEGLGETSYNCATTRIBNVPROC)glewGetProcAddress((const GLubyte*)\"eglGetSyncAttribNV\")) == NULL) || r;\n  r = ((eglSignalSyncNV = (PFNEGLSIGNALSYNCNVPROC)glewGetProcAddress((const GLubyte*)\"eglSignalSyncNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_NV_sync */\n\n#ifdef EGL_NV_system_time\n\nstatic GLboolean _glewInit_EGL_NV_system_time ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((eglGetSystemTimeFrequencyNV = (PFNEGLGETSYSTEMTIMEFREQUENCYNVPROC)glewGetProcAddress((const GLubyte*)\"eglGetSystemTimeFrequencyNV\")) == NULL) || r;\n  r = ((eglGetSystemTimeNV = (PFNEGLGETSYSTEMTIMENVPROC)glewGetProcAddress((const GLubyte*)\"eglGetSystemTimeNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* EGL_NV_system_time */\n\n  /* ------------------------------------------------------------------------ */\n\nGLboolean eglewGetExtension (const char* name)\n{\n  const GLubyte* start;\n  const GLubyte* end;\n\n  start = (const GLubyte*) eglQueryString(eglGetCurrentDisplay(), EGL_EXTENSIONS);\n  if (0 == start) return GL_FALSE;\n  end = start + _glewStrLen(start);\n  return _glewSearchExtension(name, start, end);\n}\n\nGLenum eglewInit (EGLDisplay display)\n{\n  EGLint major, minor;\n  const GLubyte* extStart;\n  const GLubyte* extEnd;\n  PFNEGLINITIALIZEPROC initialize = NULL;\n  PFNEGLQUERYSTRINGPROC queryString = NULL;\n\n  /* Load necessary entry points */\n  initialize = (PFNEGLINITIALIZEPROC)   glewGetProcAddress(\"eglInitialize\");\n  queryString = (PFNEGLQUERYSTRINGPROC) glewGetProcAddress(\"eglQueryString\");\n  if (!initialize || !queryString)\n    return 1;\n\n  /* query EGK version */\n  if (initialize(display, &major, &minor) != EGL_TRUE)\n    return 1;\n\n  EGLEW_VERSION_1_5   = ( major > 1 )                || ( major == 1 && minor >= 5 ) ? GL_TRUE : GL_FALSE;\n  EGLEW_VERSION_1_4   = EGLEW_VERSION_1_5 == GL_TRUE || ( major == 1 && minor >= 4 ) ? GL_TRUE : GL_FALSE;\n  EGLEW_VERSION_1_3   = EGLEW_VERSION_1_4 == GL_TRUE || ( major == 1 && minor >= 3 ) ? GL_TRUE : GL_FALSE;\n  EGLEW_VERSION_1_2   = EGLEW_VERSION_1_3 == GL_TRUE || ( major == 1 && minor >= 2 ) ? GL_TRUE : GL_FALSE;\n  EGLEW_VERSION_1_1   = EGLEW_VERSION_1_2 == GL_TRUE || ( major == 1 && minor >= 1 ) ? GL_TRUE : GL_FALSE;\n  EGLEW_VERSION_1_0   = EGLEW_VERSION_1_1 == GL_TRUE || ( major == 1 && minor >= 0 ) ? GL_TRUE : GL_FALSE;\n\n  /* query EGL extension string */\n  extStart = (const GLubyte*) queryString(display, EGL_EXTENSIONS);\n  if (extStart == 0)\n    extStart = (const GLubyte *)\"\";\n  extEnd = extStart + _glewStrLen(extStart);\n\n  /* initialize extensions */\n#ifdef EGL_VERSION_1_0\n  if (glewExperimental || EGLEW_VERSION_1_0) EGLEW_VERSION_1_0 = !_glewInit_EGL_VERSION_1_0();\n#endif /* EGL_VERSION_1_0 */\n#ifdef EGL_VERSION_1_1\n  if (glewExperimental || EGLEW_VERSION_1_1) EGLEW_VERSION_1_1 = !_glewInit_EGL_VERSION_1_1();\n#endif /* EGL_VERSION_1_1 */\n#ifdef EGL_VERSION_1_2\n  if (glewExperimental || EGLEW_VERSION_1_2) EGLEW_VERSION_1_2 = !_glewInit_EGL_VERSION_1_2();\n#endif /* EGL_VERSION_1_2 */\n#ifdef EGL_VERSION_1_4\n  if (glewExperimental || EGLEW_VERSION_1_4) EGLEW_VERSION_1_4 = !_glewInit_EGL_VERSION_1_4();\n#endif /* EGL_VERSION_1_4 */\n#ifdef EGL_VERSION_1_5\n  if (glewExperimental || EGLEW_VERSION_1_5) EGLEW_VERSION_1_5 = !_glewInit_EGL_VERSION_1_5();\n#endif /* EGL_VERSION_1_5 */\n#ifdef EGL_ANDROID_blob_cache\n  EGLEW_ANDROID_blob_cache = _glewSearchExtension(\"EGL_ANDROID_blob_cache\", extStart, extEnd);\n  if (glewExperimental || EGLEW_ANDROID_blob_cache) EGLEW_ANDROID_blob_cache = !_glewInit_EGL_ANDROID_blob_cache();\n#endif /* EGL_ANDROID_blob_cache */\n#ifdef EGL_ANDROID_create_native_client_buffer\n  EGLEW_ANDROID_create_native_client_buffer = _glewSearchExtension(\"EGL_ANDROID_create_native_client_buffer\", extStart, extEnd);\n  if (glewExperimental || EGLEW_ANDROID_create_native_client_buffer) EGLEW_ANDROID_create_native_client_buffer = !_glewInit_EGL_ANDROID_create_native_client_buffer();\n#endif /* EGL_ANDROID_create_native_client_buffer */\n#ifdef EGL_ANDROID_framebuffer_target\n  EGLEW_ANDROID_framebuffer_target = _glewSearchExtension(\"EGL_ANDROID_framebuffer_target\", extStart, extEnd);\n#endif /* EGL_ANDROID_framebuffer_target */\n#ifdef EGL_ANDROID_front_buffer_auto_refresh\n  EGLEW_ANDROID_front_buffer_auto_refresh = _glewSearchExtension(\"EGL_ANDROID_front_buffer_auto_refresh\", extStart, extEnd);\n#endif /* EGL_ANDROID_front_buffer_auto_refresh */\n#ifdef EGL_ANDROID_image_native_buffer\n  EGLEW_ANDROID_image_native_buffer = _glewSearchExtension(\"EGL_ANDROID_image_native_buffer\", extStart, extEnd);\n#endif /* EGL_ANDROID_image_native_buffer */\n#ifdef EGL_ANDROID_native_fence_sync\n  EGLEW_ANDROID_native_fence_sync = _glewSearchExtension(\"EGL_ANDROID_native_fence_sync\", extStart, extEnd);\n  if (glewExperimental || EGLEW_ANDROID_native_fence_sync) EGLEW_ANDROID_native_fence_sync = !_glewInit_EGL_ANDROID_native_fence_sync();\n#endif /* EGL_ANDROID_native_fence_sync */\n#ifdef EGL_ANDROID_presentation_time\n  EGLEW_ANDROID_presentation_time = _glewSearchExtension(\"EGL_ANDROID_presentation_time\", extStart, extEnd);\n  if (glewExperimental || EGLEW_ANDROID_presentation_time) EGLEW_ANDROID_presentation_time = !_glewInit_EGL_ANDROID_presentation_time();\n#endif /* EGL_ANDROID_presentation_time */\n#ifdef EGL_ANDROID_recordable\n  EGLEW_ANDROID_recordable = _glewSearchExtension(\"EGL_ANDROID_recordable\", extStart, extEnd);\n#endif /* EGL_ANDROID_recordable */\n#ifdef EGL_ANGLE_d3d_share_handle_client_buffer\n  EGLEW_ANGLE_d3d_share_handle_client_buffer = _glewSearchExtension(\"EGL_ANGLE_d3d_share_handle_client_buffer\", extStart, extEnd);\n#endif /* EGL_ANGLE_d3d_share_handle_client_buffer */\n#ifdef EGL_ANGLE_device_d3d\n  EGLEW_ANGLE_device_d3d = _glewSearchExtension(\"EGL_ANGLE_device_d3d\", extStart, extEnd);\n#endif /* EGL_ANGLE_device_d3d */\n#ifdef EGL_ANGLE_query_surface_pointer\n  EGLEW_ANGLE_query_surface_pointer = _glewSearchExtension(\"EGL_ANGLE_query_surface_pointer\", extStart, extEnd);\n  if (glewExperimental || EGLEW_ANGLE_query_surface_pointer) EGLEW_ANGLE_query_surface_pointer = !_glewInit_EGL_ANGLE_query_surface_pointer();\n#endif /* EGL_ANGLE_query_surface_pointer */\n#ifdef EGL_ANGLE_surface_d3d_texture_2d_share_handle\n  EGLEW_ANGLE_surface_d3d_texture_2d_share_handle = _glewSearchExtension(\"EGL_ANGLE_surface_d3d_texture_2d_share_handle\", extStart, extEnd);\n#endif /* EGL_ANGLE_surface_d3d_texture_2d_share_handle */\n#ifdef EGL_ANGLE_window_fixed_size\n  EGLEW_ANGLE_window_fixed_size = _glewSearchExtension(\"EGL_ANGLE_window_fixed_size\", extStart, extEnd);\n#endif /* EGL_ANGLE_window_fixed_size */\n#ifdef EGL_ARM_pixmap_multisample_discard\n  EGLEW_ARM_pixmap_multisample_discard = _glewSearchExtension(\"EGL_ARM_pixmap_multisample_discard\", extStart, extEnd);\n#endif /* EGL_ARM_pixmap_multisample_discard */\n#ifdef EGL_EXT_buffer_age\n  EGLEW_EXT_buffer_age = _glewSearchExtension(\"EGL_EXT_buffer_age\", extStart, extEnd);\n#endif /* EGL_EXT_buffer_age */\n#ifdef EGL_EXT_client_extensions\n  EGLEW_EXT_client_extensions = _glewSearchExtension(\"EGL_EXT_client_extensions\", extStart, extEnd);\n#endif /* EGL_EXT_client_extensions */\n#ifdef EGL_EXT_create_context_robustness\n  EGLEW_EXT_create_context_robustness = _glewSearchExtension(\"EGL_EXT_create_context_robustness\", extStart, extEnd);\n#endif /* EGL_EXT_create_context_robustness */\n#ifdef EGL_EXT_device_base\n  EGLEW_EXT_device_base = _glewSearchExtension(\"EGL_EXT_device_base\", extStart, extEnd);\n#endif /* EGL_EXT_device_base */\n#ifdef EGL_EXT_device_drm\n  EGLEW_EXT_device_drm = _glewSearchExtension(\"EGL_EXT_device_drm\", extStart, extEnd);\n#endif /* EGL_EXT_device_drm */\n#ifdef EGL_EXT_device_enumeration\n  EGLEW_EXT_device_enumeration = _glewSearchExtension(\"EGL_EXT_device_enumeration\", extStart, extEnd);\n  if (glewExperimental || EGLEW_EXT_device_enumeration) EGLEW_EXT_device_enumeration = !_glewInit_EGL_EXT_device_enumeration();\n#endif /* EGL_EXT_device_enumeration */\n#ifdef EGL_EXT_device_openwf\n  EGLEW_EXT_device_openwf = _glewSearchExtension(\"EGL_EXT_device_openwf\", extStart, extEnd);\n#endif /* EGL_EXT_device_openwf */\n#ifdef EGL_EXT_device_query\n  EGLEW_EXT_device_query = _glewSearchExtension(\"EGL_EXT_device_query\", extStart, extEnd);\n  if (glewExperimental || EGLEW_EXT_device_query) EGLEW_EXT_device_query = !_glewInit_EGL_EXT_device_query();\n#endif /* EGL_EXT_device_query */\n#ifdef EGL_EXT_image_dma_buf_import\n  EGLEW_EXT_image_dma_buf_import = _glewSearchExtension(\"EGL_EXT_image_dma_buf_import\", extStart, extEnd);\n#endif /* EGL_EXT_image_dma_buf_import */\n#ifdef EGL_EXT_multiview_window\n  EGLEW_EXT_multiview_window = _glewSearchExtension(\"EGL_EXT_multiview_window\", extStart, extEnd);\n#endif /* EGL_EXT_multiview_window */\n#ifdef EGL_EXT_output_base\n  EGLEW_EXT_output_base = _glewSearchExtension(\"EGL_EXT_output_base\", extStart, extEnd);\n  if (glewExperimental || EGLEW_EXT_output_base) EGLEW_EXT_output_base = !_glewInit_EGL_EXT_output_base();\n#endif /* EGL_EXT_output_base */\n#ifdef EGL_EXT_output_drm\n  EGLEW_EXT_output_drm = _glewSearchExtension(\"EGL_EXT_output_drm\", extStart, extEnd);\n#endif /* EGL_EXT_output_drm */\n#ifdef EGL_EXT_output_openwf\n  EGLEW_EXT_output_openwf = _glewSearchExtension(\"EGL_EXT_output_openwf\", extStart, extEnd);\n#endif /* EGL_EXT_output_openwf */\n#ifdef EGL_EXT_platform_base\n  EGLEW_EXT_platform_base = _glewSearchExtension(\"EGL_EXT_platform_base\", extStart, extEnd);\n  if (glewExperimental || EGLEW_EXT_platform_base) EGLEW_EXT_platform_base = !_glewInit_EGL_EXT_platform_base();\n#endif /* EGL_EXT_platform_base */\n#ifdef EGL_EXT_platform_device\n  EGLEW_EXT_platform_device = _glewSearchExtension(\"EGL_EXT_platform_device\", extStart, extEnd);\n#endif /* EGL_EXT_platform_device */\n#ifdef EGL_EXT_platform_wayland\n  EGLEW_EXT_platform_wayland = _glewSearchExtension(\"EGL_EXT_platform_wayland\", extStart, extEnd);\n#endif /* EGL_EXT_platform_wayland */\n#ifdef EGL_EXT_platform_x11\n  EGLEW_EXT_platform_x11 = _glewSearchExtension(\"EGL_EXT_platform_x11\", extStart, extEnd);\n#endif /* EGL_EXT_platform_x11 */\n#ifdef EGL_EXT_protected_content\n  EGLEW_EXT_protected_content = _glewSearchExtension(\"EGL_EXT_protected_content\", extStart, extEnd);\n#endif /* EGL_EXT_protected_content */\n#ifdef EGL_EXT_protected_surface\n  EGLEW_EXT_protected_surface = _glewSearchExtension(\"EGL_EXT_protected_surface\", extStart, extEnd);\n#endif /* EGL_EXT_protected_surface */\n#ifdef EGL_EXT_stream_consumer_egloutput\n  EGLEW_EXT_stream_consumer_egloutput = _glewSearchExtension(\"EGL_EXT_stream_consumer_egloutput\", extStart, extEnd);\n  if (glewExperimental || EGLEW_EXT_stream_consumer_egloutput) EGLEW_EXT_stream_consumer_egloutput = !_glewInit_EGL_EXT_stream_consumer_egloutput();\n#endif /* EGL_EXT_stream_consumer_egloutput */\n#ifdef EGL_EXT_swap_buffers_with_damage\n  EGLEW_EXT_swap_buffers_with_damage = _glewSearchExtension(\"EGL_EXT_swap_buffers_with_damage\", extStart, extEnd);\n  if (glewExperimental || EGLEW_EXT_swap_buffers_with_damage) EGLEW_EXT_swap_buffers_with_damage = !_glewInit_EGL_EXT_swap_buffers_with_damage();\n#endif /* EGL_EXT_swap_buffers_with_damage */\n#ifdef EGL_EXT_yuv_surface\n  EGLEW_EXT_yuv_surface = _glewSearchExtension(\"EGL_EXT_yuv_surface\", extStart, extEnd);\n#endif /* EGL_EXT_yuv_surface */\n#ifdef EGL_HI_clientpixmap\n  EGLEW_HI_clientpixmap = _glewSearchExtension(\"EGL_HI_clientpixmap\", extStart, extEnd);\n  if (glewExperimental || EGLEW_HI_clientpixmap) EGLEW_HI_clientpixmap = !_glewInit_EGL_HI_clientpixmap();\n#endif /* EGL_HI_clientpixmap */\n#ifdef EGL_HI_colorformats\n  EGLEW_HI_colorformats = _glewSearchExtension(\"EGL_HI_colorformats\", extStart, extEnd);\n#endif /* EGL_HI_colorformats */\n#ifdef EGL_IMG_context_priority\n  EGLEW_IMG_context_priority = _glewSearchExtension(\"EGL_IMG_context_priority\", extStart, extEnd);\n#endif /* EGL_IMG_context_priority */\n#ifdef EGL_IMG_image_plane_attribs\n  EGLEW_IMG_image_plane_attribs = _glewSearchExtension(\"EGL_IMG_image_plane_attribs\", extStart, extEnd);\n#endif /* EGL_IMG_image_plane_attribs */\n#ifdef EGL_KHR_cl_event\n  EGLEW_KHR_cl_event = _glewSearchExtension(\"EGL_KHR_cl_event\", extStart, extEnd);\n#endif /* EGL_KHR_cl_event */\n#ifdef EGL_KHR_cl_event2\n  EGLEW_KHR_cl_event2 = _glewSearchExtension(\"EGL_KHR_cl_event2\", extStart, extEnd);\n  if (glewExperimental || EGLEW_KHR_cl_event2) EGLEW_KHR_cl_event2 = !_glewInit_EGL_KHR_cl_event2();\n#endif /* EGL_KHR_cl_event2 */\n#ifdef EGL_KHR_client_get_all_proc_addresses\n  EGLEW_KHR_client_get_all_proc_addresses = _glewSearchExtension(\"EGL_KHR_client_get_all_proc_addresses\", extStart, extEnd);\n#endif /* EGL_KHR_client_get_all_proc_addresses */\n#ifdef EGL_KHR_config_attribs\n  EGLEW_KHR_config_attribs = _glewSearchExtension(\"EGL_KHR_config_attribs\", extStart, extEnd);\n#endif /* EGL_KHR_config_attribs */\n#ifdef EGL_KHR_create_context\n  EGLEW_KHR_create_context = _glewSearchExtension(\"EGL_KHR_create_context\", extStart, extEnd);\n#endif /* EGL_KHR_create_context */\n#ifdef EGL_KHR_create_context_no_error\n  EGLEW_KHR_create_context_no_error = _glewSearchExtension(\"EGL_KHR_create_context_no_error\", extStart, extEnd);\n#endif /* EGL_KHR_create_context_no_error */\n#ifdef EGL_KHR_debug\n  EGLEW_KHR_debug = _glewSearchExtension(\"EGL_KHR_debug\", extStart, extEnd);\n  if (glewExperimental || EGLEW_KHR_debug) EGLEW_KHR_debug = !_glewInit_EGL_KHR_debug();\n#endif /* EGL_KHR_debug */\n#ifdef EGL_KHR_fence_sync\n  EGLEW_KHR_fence_sync = _glewSearchExtension(\"EGL_KHR_fence_sync\", extStart, extEnd);\n#endif /* EGL_KHR_fence_sync */\n#ifdef EGL_KHR_get_all_proc_addresses\n  EGLEW_KHR_get_all_proc_addresses = _glewSearchExtension(\"EGL_KHR_get_all_proc_addresses\", extStart, extEnd);\n#endif /* EGL_KHR_get_all_proc_addresses */\n#ifdef EGL_KHR_gl_colorspace\n  EGLEW_KHR_gl_colorspace = _glewSearchExtension(\"EGL_KHR_gl_colorspace\", extStart, extEnd);\n#endif /* EGL_KHR_gl_colorspace */\n#ifdef EGL_KHR_gl_renderbuffer_image\n  EGLEW_KHR_gl_renderbuffer_image = _glewSearchExtension(\"EGL_KHR_gl_renderbuffer_image\", extStart, extEnd);\n#endif /* EGL_KHR_gl_renderbuffer_image */\n#ifdef EGL_KHR_gl_texture_2D_image\n  EGLEW_KHR_gl_texture_2D_image = _glewSearchExtension(\"EGL_KHR_gl_texture_2D_image\", extStart, extEnd);\n#endif /* EGL_KHR_gl_texture_2D_image */\n#ifdef EGL_KHR_gl_texture_3D_image\n  EGLEW_KHR_gl_texture_3D_image = _glewSearchExtension(\"EGL_KHR_gl_texture_3D_image\", extStart, extEnd);\n#endif /* EGL_KHR_gl_texture_3D_image */\n#ifdef EGL_KHR_gl_texture_cubemap_image\n  EGLEW_KHR_gl_texture_cubemap_image = _glewSearchExtension(\"EGL_KHR_gl_texture_cubemap_image\", extStart, extEnd);\n#endif /* EGL_KHR_gl_texture_cubemap_image */\n#ifdef EGL_KHR_image\n  EGLEW_KHR_image = _glewSearchExtension(\"EGL_KHR_image\", extStart, extEnd);\n  if (glewExperimental || EGLEW_KHR_image) EGLEW_KHR_image = !_glewInit_EGL_KHR_image();\n#endif /* EGL_KHR_image */\n#ifdef EGL_KHR_image_base\n  EGLEW_KHR_image_base = _glewSearchExtension(\"EGL_KHR_image_base\", extStart, extEnd);\n#endif /* EGL_KHR_image_base */\n#ifdef EGL_KHR_image_pixmap\n  EGLEW_KHR_image_pixmap = _glewSearchExtension(\"EGL_KHR_image_pixmap\", extStart, extEnd);\n#endif /* EGL_KHR_image_pixmap */\n#ifdef EGL_KHR_lock_surface\n  EGLEW_KHR_lock_surface = _glewSearchExtension(\"EGL_KHR_lock_surface\", extStart, extEnd);\n  if (glewExperimental || EGLEW_KHR_lock_surface) EGLEW_KHR_lock_surface = !_glewInit_EGL_KHR_lock_surface();\n#endif /* EGL_KHR_lock_surface */\n#ifdef EGL_KHR_lock_surface2\n  EGLEW_KHR_lock_surface2 = _glewSearchExtension(\"EGL_KHR_lock_surface2\", extStart, extEnd);\n#endif /* EGL_KHR_lock_surface2 */\n#ifdef EGL_KHR_lock_surface3\n  EGLEW_KHR_lock_surface3 = _glewSearchExtension(\"EGL_KHR_lock_surface3\", extStart, extEnd);\n  if (glewExperimental || EGLEW_KHR_lock_surface3) EGLEW_KHR_lock_surface3 = !_glewInit_EGL_KHR_lock_surface3();\n#endif /* EGL_KHR_lock_surface3 */\n#ifdef EGL_KHR_mutable_render_buffer\n  EGLEW_KHR_mutable_render_buffer = _glewSearchExtension(\"EGL_KHR_mutable_render_buffer\", extStart, extEnd);\n#endif /* EGL_KHR_mutable_render_buffer */\n#ifdef EGL_KHR_partial_update\n  EGLEW_KHR_partial_update = _glewSearchExtension(\"EGL_KHR_partial_update\", extStart, extEnd);\n  if (glewExperimental || EGLEW_KHR_partial_update) EGLEW_KHR_partial_update = !_glewInit_EGL_KHR_partial_update();\n#endif /* EGL_KHR_partial_update */\n#ifdef EGL_KHR_platform_android\n  EGLEW_KHR_platform_android = _glewSearchExtension(\"EGL_KHR_platform_android\", extStart, extEnd);\n#endif /* EGL_KHR_platform_android */\n#ifdef EGL_KHR_platform_gbm\n  EGLEW_KHR_platform_gbm = _glewSearchExtension(\"EGL_KHR_platform_gbm\", extStart, extEnd);\n#endif /* EGL_KHR_platform_gbm */\n#ifdef EGL_KHR_platform_wayland\n  EGLEW_KHR_platform_wayland = _glewSearchExtension(\"EGL_KHR_platform_wayland\", extStart, extEnd);\n#endif /* EGL_KHR_platform_wayland */\n#ifdef EGL_KHR_platform_x11\n  EGLEW_KHR_platform_x11 = _glewSearchExtension(\"EGL_KHR_platform_x11\", extStart, extEnd);\n#endif /* EGL_KHR_platform_x11 */\n#ifdef EGL_KHR_reusable_sync\n  EGLEW_KHR_reusable_sync = _glewSearchExtension(\"EGL_KHR_reusable_sync\", extStart, extEnd);\n  if (glewExperimental || EGLEW_KHR_reusable_sync) EGLEW_KHR_reusable_sync = !_glewInit_EGL_KHR_reusable_sync();\n#endif /* EGL_KHR_reusable_sync */\n#ifdef EGL_KHR_stream\n  EGLEW_KHR_stream = _glewSearchExtension(\"EGL_KHR_stream\", extStart, extEnd);\n  if (glewExperimental || EGLEW_KHR_stream) EGLEW_KHR_stream = !_glewInit_EGL_KHR_stream();\n#endif /* EGL_KHR_stream */\n#ifdef EGL_KHR_stream_consumer_gltexture\n  EGLEW_KHR_stream_consumer_gltexture = _glewSearchExtension(\"EGL_KHR_stream_consumer_gltexture\", extStart, extEnd);\n  if (glewExperimental || EGLEW_KHR_stream_consumer_gltexture) EGLEW_KHR_stream_consumer_gltexture = !_glewInit_EGL_KHR_stream_consumer_gltexture();\n#endif /* EGL_KHR_stream_consumer_gltexture */\n#ifdef EGL_KHR_stream_cross_process_fd\n  EGLEW_KHR_stream_cross_process_fd = _glewSearchExtension(\"EGL_KHR_stream_cross_process_fd\", extStart, extEnd);\n  if (glewExperimental || EGLEW_KHR_stream_cross_process_fd) EGLEW_KHR_stream_cross_process_fd = !_glewInit_EGL_KHR_stream_cross_process_fd();\n#endif /* EGL_KHR_stream_cross_process_fd */\n#ifdef EGL_KHR_stream_fifo\n  EGLEW_KHR_stream_fifo = _glewSearchExtension(\"EGL_KHR_stream_fifo\", extStart, extEnd);\n  if (glewExperimental || EGLEW_KHR_stream_fifo) EGLEW_KHR_stream_fifo = !_glewInit_EGL_KHR_stream_fifo();\n#endif /* EGL_KHR_stream_fifo */\n#ifdef EGL_KHR_stream_producer_aldatalocator\n  EGLEW_KHR_stream_producer_aldatalocator = _glewSearchExtension(\"EGL_KHR_stream_producer_aldatalocator\", extStart, extEnd);\n#endif /* EGL_KHR_stream_producer_aldatalocator */\n#ifdef EGL_KHR_stream_producer_eglsurface\n  EGLEW_KHR_stream_producer_eglsurface = _glewSearchExtension(\"EGL_KHR_stream_producer_eglsurface\", extStart, extEnd);\n  if (glewExperimental || EGLEW_KHR_stream_producer_eglsurface) EGLEW_KHR_stream_producer_eglsurface = !_glewInit_EGL_KHR_stream_producer_eglsurface();\n#endif /* EGL_KHR_stream_producer_eglsurface */\n#ifdef EGL_KHR_surfaceless_context\n  EGLEW_KHR_surfaceless_context = _glewSearchExtension(\"EGL_KHR_surfaceless_context\", extStart, extEnd);\n#endif /* EGL_KHR_surfaceless_context */\n#ifdef EGL_KHR_swap_buffers_with_damage\n  EGLEW_KHR_swap_buffers_with_damage = _glewSearchExtension(\"EGL_KHR_swap_buffers_with_damage\", extStart, extEnd);\n  if (glewExperimental || EGLEW_KHR_swap_buffers_with_damage) EGLEW_KHR_swap_buffers_with_damage = !_glewInit_EGL_KHR_swap_buffers_with_damage();\n#endif /* EGL_KHR_swap_buffers_with_damage */\n#ifdef EGL_KHR_vg_parent_image\n  EGLEW_KHR_vg_parent_image = _glewSearchExtension(\"EGL_KHR_vg_parent_image\", extStart, extEnd);\n#endif /* EGL_KHR_vg_parent_image */\n#ifdef EGL_KHR_wait_sync\n  EGLEW_KHR_wait_sync = _glewSearchExtension(\"EGL_KHR_wait_sync\", extStart, extEnd);\n  if (glewExperimental || EGLEW_KHR_wait_sync) EGLEW_KHR_wait_sync = !_glewInit_EGL_KHR_wait_sync();\n#endif /* EGL_KHR_wait_sync */\n#ifdef EGL_MESA_drm_image\n  EGLEW_MESA_drm_image = _glewSearchExtension(\"EGL_MESA_drm_image\", extStart, extEnd);\n  if (glewExperimental || EGLEW_MESA_drm_image) EGLEW_MESA_drm_image = !_glewInit_EGL_MESA_drm_image();\n#endif /* EGL_MESA_drm_image */\n#ifdef EGL_MESA_image_dma_buf_export\n  EGLEW_MESA_image_dma_buf_export = _glewSearchExtension(\"EGL_MESA_image_dma_buf_export\", extStart, extEnd);\n  if (glewExperimental || EGLEW_MESA_image_dma_buf_export) EGLEW_MESA_image_dma_buf_export = !_glewInit_EGL_MESA_image_dma_buf_export();\n#endif /* EGL_MESA_image_dma_buf_export */\n#ifdef EGL_MESA_platform_gbm\n  EGLEW_MESA_platform_gbm = _glewSearchExtension(\"EGL_MESA_platform_gbm\", extStart, extEnd);\n#endif /* EGL_MESA_platform_gbm */\n#ifdef EGL_NOK_swap_region\n  EGLEW_NOK_swap_region = _glewSearchExtension(\"EGL_NOK_swap_region\", extStart, extEnd);\n  if (glewExperimental || EGLEW_NOK_swap_region) EGLEW_NOK_swap_region = !_glewInit_EGL_NOK_swap_region();\n#endif /* EGL_NOK_swap_region */\n#ifdef EGL_NOK_swap_region2\n  EGLEW_NOK_swap_region2 = _glewSearchExtension(\"EGL_NOK_swap_region2\", extStart, extEnd);\n  if (glewExperimental || EGLEW_NOK_swap_region2) EGLEW_NOK_swap_region2 = !_glewInit_EGL_NOK_swap_region2();\n#endif /* EGL_NOK_swap_region2 */\n#ifdef EGL_NOK_texture_from_pixmap\n  EGLEW_NOK_texture_from_pixmap = _glewSearchExtension(\"EGL_NOK_texture_from_pixmap\", extStart, extEnd);\n#endif /* EGL_NOK_texture_from_pixmap */\n#ifdef EGL_NV_3dvision_surface\n  EGLEW_NV_3dvision_surface = _glewSearchExtension(\"EGL_NV_3dvision_surface\", extStart, extEnd);\n#endif /* EGL_NV_3dvision_surface */\n#ifdef EGL_NV_coverage_sample\n  EGLEW_NV_coverage_sample = _glewSearchExtension(\"EGL_NV_coverage_sample\", extStart, extEnd);\n#endif /* EGL_NV_coverage_sample */\n#ifdef EGL_NV_coverage_sample_resolve\n  EGLEW_NV_coverage_sample_resolve = _glewSearchExtension(\"EGL_NV_coverage_sample_resolve\", extStart, extEnd);\n#endif /* EGL_NV_coverage_sample_resolve */\n#ifdef EGL_NV_cuda_event\n  EGLEW_NV_cuda_event = _glewSearchExtension(\"EGL_NV_cuda_event\", extStart, extEnd);\n#endif /* EGL_NV_cuda_event */\n#ifdef EGL_NV_depth_nonlinear\n  EGLEW_NV_depth_nonlinear = _glewSearchExtension(\"EGL_NV_depth_nonlinear\", extStart, extEnd);\n#endif /* EGL_NV_depth_nonlinear */\n#ifdef EGL_NV_device_cuda\n  EGLEW_NV_device_cuda = _glewSearchExtension(\"EGL_NV_device_cuda\", extStart, extEnd);\n#endif /* EGL_NV_device_cuda */\n#ifdef EGL_NV_native_query\n  EGLEW_NV_native_query = _glewSearchExtension(\"EGL_NV_native_query\", extStart, extEnd);\n  if (glewExperimental || EGLEW_NV_native_query) EGLEW_NV_native_query = !_glewInit_EGL_NV_native_query();\n#endif /* EGL_NV_native_query */\n#ifdef EGL_NV_post_convert_rounding\n  EGLEW_NV_post_convert_rounding = _glewSearchExtension(\"EGL_NV_post_convert_rounding\", extStart, extEnd);\n#endif /* EGL_NV_post_convert_rounding */\n#ifdef EGL_NV_post_sub_buffer\n  EGLEW_NV_post_sub_buffer = _glewSearchExtension(\"EGL_NV_post_sub_buffer\", extStart, extEnd);\n  if (glewExperimental || EGLEW_NV_post_sub_buffer) EGLEW_NV_post_sub_buffer = !_glewInit_EGL_NV_post_sub_buffer();\n#endif /* EGL_NV_post_sub_buffer */\n#ifdef EGL_NV_robustness_video_memory_purge\n  EGLEW_NV_robustness_video_memory_purge = _glewSearchExtension(\"EGL_NV_robustness_video_memory_purge\", extStart, extEnd);\n#endif /* EGL_NV_robustness_video_memory_purge */\n#ifdef EGL_NV_stream_consumer_gltexture_yuv\n  EGLEW_NV_stream_consumer_gltexture_yuv = _glewSearchExtension(\"EGL_NV_stream_consumer_gltexture_yuv\", extStart, extEnd);\n  if (glewExperimental || EGLEW_NV_stream_consumer_gltexture_yuv) EGLEW_NV_stream_consumer_gltexture_yuv = !_glewInit_EGL_NV_stream_consumer_gltexture_yuv();\n#endif /* EGL_NV_stream_consumer_gltexture_yuv */\n#ifdef EGL_NV_stream_metadata\n  EGLEW_NV_stream_metadata = _glewSearchExtension(\"EGL_NV_stream_metadata\", extStart, extEnd);\n  if (glewExperimental || EGLEW_NV_stream_metadata) EGLEW_NV_stream_metadata = !_glewInit_EGL_NV_stream_metadata();\n#endif /* EGL_NV_stream_metadata */\n#ifdef EGL_NV_stream_sync\n  EGLEW_NV_stream_sync = _glewSearchExtension(\"EGL_NV_stream_sync\", extStart, extEnd);\n  if (glewExperimental || EGLEW_NV_stream_sync) EGLEW_NV_stream_sync = !_glewInit_EGL_NV_stream_sync();\n#endif /* EGL_NV_stream_sync */\n#ifdef EGL_NV_sync\n  EGLEW_NV_sync = _glewSearchExtension(\"EGL_NV_sync\", extStart, extEnd);\n  if (glewExperimental || EGLEW_NV_sync) EGLEW_NV_sync = !_glewInit_EGL_NV_sync();\n#endif /* EGL_NV_sync */\n#ifdef EGL_NV_system_time\n  EGLEW_NV_system_time = _glewSearchExtension(\"EGL_NV_system_time\", extStart, extEnd);\n  if (glewExperimental || EGLEW_NV_system_time) EGLEW_NV_system_time = !_glewInit_EGL_NV_system_time();\n#endif /* EGL_NV_system_time */\n#ifdef EGL_TIZEN_image_native_buffer\n  EGLEW_TIZEN_image_native_buffer = _glewSearchExtension(\"EGL_TIZEN_image_native_buffer\", extStart, extEnd);\n#endif /* EGL_TIZEN_image_native_buffer */\n#ifdef EGL_TIZEN_image_native_surface\n  EGLEW_TIZEN_image_native_surface = _glewSearchExtension(\"EGL_TIZEN_image_native_surface\", extStart, extEnd);\n#endif /* EGL_TIZEN_image_native_surface */\n\n  return GLEW_OK;\n}\n\n#elif defined(_WIN32)\n\nPFNWGLSETSTEREOEMITTERSTATE3DLPROC __wglewSetStereoEmitterState3DL = NULL;\n\nPFNWGLBLITCONTEXTFRAMEBUFFERAMDPROC __wglewBlitContextFramebufferAMD = NULL;\nPFNWGLCREATEASSOCIATEDCONTEXTAMDPROC __wglewCreateAssociatedContextAMD = NULL;\nPFNWGLCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC __wglewCreateAssociatedContextAttribsAMD = NULL;\nPFNWGLDELETEASSOCIATEDCONTEXTAMDPROC __wglewDeleteAssociatedContextAMD = NULL;\nPFNWGLGETCONTEXTGPUIDAMDPROC __wglewGetContextGPUIDAMD = NULL;\nPFNWGLGETCURRENTASSOCIATEDCONTEXTAMDPROC __wglewGetCurrentAssociatedContextAMD = NULL;\nPFNWGLGETGPUIDSAMDPROC __wglewGetGPUIDsAMD = NULL;\nPFNWGLGETGPUINFOAMDPROC __wglewGetGPUInfoAMD = NULL;\nPFNWGLMAKEASSOCIATEDCONTEXTCURRENTAMDPROC __wglewMakeAssociatedContextCurrentAMD = NULL;\n\nPFNWGLCREATEBUFFERREGIONARBPROC __wglewCreateBufferRegionARB = NULL;\nPFNWGLDELETEBUFFERREGIONARBPROC __wglewDeleteBufferRegionARB = NULL;\nPFNWGLRESTOREBUFFERREGIONARBPROC __wglewRestoreBufferRegionARB = NULL;\nPFNWGLSAVEBUFFERREGIONARBPROC __wglewSaveBufferRegionARB = NULL;\n\nPFNWGLCREATECONTEXTATTRIBSARBPROC __wglewCreateContextAttribsARB = NULL;\n\nPFNWGLGETEXTENSIONSSTRINGARBPROC __wglewGetExtensionsStringARB = NULL;\n\nPFNWGLGETCURRENTREADDCARBPROC __wglewGetCurrentReadDCARB = NULL;\nPFNWGLMAKECONTEXTCURRENTARBPROC __wglewMakeContextCurrentARB = NULL;\n\nPFNWGLCREATEPBUFFERARBPROC __wglewCreatePbufferARB = NULL;\nPFNWGLDESTROYPBUFFERARBPROC __wglewDestroyPbufferARB = NULL;\nPFNWGLGETPBUFFERDCARBPROC __wglewGetPbufferDCARB = NULL;\nPFNWGLQUERYPBUFFERARBPROC __wglewQueryPbufferARB = NULL;\nPFNWGLRELEASEPBUFFERDCARBPROC __wglewReleasePbufferDCARB = NULL;\n\nPFNWGLCHOOSEPIXELFORMATARBPROC __wglewChoosePixelFormatARB = NULL;\nPFNWGLGETPIXELFORMATATTRIBFVARBPROC __wglewGetPixelFormatAttribfvARB = NULL;\nPFNWGLGETPIXELFORMATATTRIBIVARBPROC __wglewGetPixelFormatAttribivARB = NULL;\n\nPFNWGLBINDTEXIMAGEARBPROC __wglewBindTexImageARB = NULL;\nPFNWGLRELEASETEXIMAGEARBPROC __wglewReleaseTexImageARB = NULL;\nPFNWGLSETPBUFFERATTRIBARBPROC __wglewSetPbufferAttribARB = NULL;\n\nPFNWGLBINDDISPLAYCOLORTABLEEXTPROC __wglewBindDisplayColorTableEXT = NULL;\nPFNWGLCREATEDISPLAYCOLORTABLEEXTPROC __wglewCreateDisplayColorTableEXT = NULL;\nPFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC __wglewDestroyDisplayColorTableEXT = NULL;\nPFNWGLLOADDISPLAYCOLORTABLEEXTPROC __wglewLoadDisplayColorTableEXT = NULL;\n\nPFNWGLGETEXTENSIONSSTRINGEXTPROC __wglewGetExtensionsStringEXT = NULL;\n\nPFNWGLGETCURRENTREADDCEXTPROC __wglewGetCurrentReadDCEXT = NULL;\nPFNWGLMAKECONTEXTCURRENTEXTPROC __wglewMakeContextCurrentEXT = NULL;\n\nPFNWGLCREATEPBUFFEREXTPROC __wglewCreatePbufferEXT = NULL;\nPFNWGLDESTROYPBUFFEREXTPROC __wglewDestroyPbufferEXT = NULL;\nPFNWGLGETPBUFFERDCEXTPROC __wglewGetPbufferDCEXT = NULL;\nPFNWGLQUERYPBUFFEREXTPROC __wglewQueryPbufferEXT = NULL;\nPFNWGLRELEASEPBUFFERDCEXTPROC __wglewReleasePbufferDCEXT = NULL;\n\nPFNWGLCHOOSEPIXELFORMATEXTPROC __wglewChoosePixelFormatEXT = NULL;\nPFNWGLGETPIXELFORMATATTRIBFVEXTPROC __wglewGetPixelFormatAttribfvEXT = NULL;\nPFNWGLGETPIXELFORMATATTRIBIVEXTPROC __wglewGetPixelFormatAttribivEXT = NULL;\n\nPFNWGLGETSWAPINTERVALEXTPROC __wglewGetSwapIntervalEXT = NULL;\nPFNWGLSWAPINTERVALEXTPROC __wglewSwapIntervalEXT = NULL;\n\nPFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC __wglewGetDigitalVideoParametersI3D = NULL;\nPFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC __wglewSetDigitalVideoParametersI3D = NULL;\n\nPFNWGLGETGAMMATABLEI3DPROC __wglewGetGammaTableI3D = NULL;\nPFNWGLGETGAMMATABLEPARAMETERSI3DPROC __wglewGetGammaTableParametersI3D = NULL;\nPFNWGLSETGAMMATABLEI3DPROC __wglewSetGammaTableI3D = NULL;\nPFNWGLSETGAMMATABLEPARAMETERSI3DPROC __wglewSetGammaTableParametersI3D = NULL;\n\nPFNWGLDISABLEGENLOCKI3DPROC __wglewDisableGenlockI3D = NULL;\nPFNWGLENABLEGENLOCKI3DPROC __wglewEnableGenlockI3D = NULL;\nPFNWGLGENLOCKSAMPLERATEI3DPROC __wglewGenlockSampleRateI3D = NULL;\nPFNWGLGENLOCKSOURCEDELAYI3DPROC __wglewGenlockSourceDelayI3D = NULL;\nPFNWGLGENLOCKSOURCEEDGEI3DPROC __wglewGenlockSourceEdgeI3D = NULL;\nPFNWGLGENLOCKSOURCEI3DPROC __wglewGenlockSourceI3D = NULL;\nPFNWGLGETGENLOCKSAMPLERATEI3DPROC __wglewGetGenlockSampleRateI3D = NULL;\nPFNWGLGETGENLOCKSOURCEDELAYI3DPROC __wglewGetGenlockSourceDelayI3D = NULL;\nPFNWGLGETGENLOCKSOURCEEDGEI3DPROC __wglewGetGenlockSourceEdgeI3D = NULL;\nPFNWGLGETGENLOCKSOURCEI3DPROC __wglewGetGenlockSourceI3D = NULL;\nPFNWGLISENABLEDGENLOCKI3DPROC __wglewIsEnabledGenlockI3D = NULL;\nPFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC __wglewQueryGenlockMaxSourceDelayI3D = NULL;\n\nPFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC __wglewAssociateImageBufferEventsI3D = NULL;\nPFNWGLCREATEIMAGEBUFFERI3DPROC __wglewCreateImageBufferI3D = NULL;\nPFNWGLDESTROYIMAGEBUFFERI3DPROC __wglewDestroyImageBufferI3D = NULL;\nPFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC __wglewReleaseImageBufferEventsI3D = NULL;\n\nPFNWGLDISABLEFRAMELOCKI3DPROC __wglewDisableFrameLockI3D = NULL;\nPFNWGLENABLEFRAMELOCKI3DPROC __wglewEnableFrameLockI3D = NULL;\nPFNWGLISENABLEDFRAMELOCKI3DPROC __wglewIsEnabledFrameLockI3D = NULL;\nPFNWGLQUERYFRAMELOCKMASTERI3DPROC __wglewQueryFrameLockMasterI3D = NULL;\n\nPFNWGLBEGINFRAMETRACKINGI3DPROC __wglewBeginFrameTrackingI3D = NULL;\nPFNWGLENDFRAMETRACKINGI3DPROC __wglewEndFrameTrackingI3D = NULL;\nPFNWGLGETFRAMEUSAGEI3DPROC __wglewGetFrameUsageI3D = NULL;\nPFNWGLQUERYFRAMETRACKINGI3DPROC __wglewQueryFrameTrackingI3D = NULL;\n\nPFNWGLDXCLOSEDEVICENVPROC __wglewDXCloseDeviceNV = NULL;\nPFNWGLDXLOCKOBJECTSNVPROC __wglewDXLockObjectsNV = NULL;\nPFNWGLDXOBJECTACCESSNVPROC __wglewDXObjectAccessNV = NULL;\nPFNWGLDXOPENDEVICENVPROC __wglewDXOpenDeviceNV = NULL;\nPFNWGLDXREGISTEROBJECTNVPROC __wglewDXRegisterObjectNV = NULL;\nPFNWGLDXSETRESOURCESHAREHANDLENVPROC __wglewDXSetResourceShareHandleNV = NULL;\nPFNWGLDXUNLOCKOBJECTSNVPROC __wglewDXUnlockObjectsNV = NULL;\nPFNWGLDXUNREGISTEROBJECTNVPROC __wglewDXUnregisterObjectNV = NULL;\n\nPFNWGLCOPYIMAGESUBDATANVPROC __wglewCopyImageSubDataNV = NULL;\n\nPFNWGLDELAYBEFORESWAPNVPROC __wglewDelayBeforeSwapNV = NULL;\n\nPFNWGLCREATEAFFINITYDCNVPROC __wglewCreateAffinityDCNV = NULL;\nPFNWGLDELETEDCNVPROC __wglewDeleteDCNV = NULL;\nPFNWGLENUMGPUDEVICESNVPROC __wglewEnumGpuDevicesNV = NULL;\nPFNWGLENUMGPUSFROMAFFINITYDCNVPROC __wglewEnumGpusFromAffinityDCNV = NULL;\nPFNWGLENUMGPUSNVPROC __wglewEnumGpusNV = NULL;\n\nPFNWGLBINDVIDEODEVICENVPROC __wglewBindVideoDeviceNV = NULL;\nPFNWGLENUMERATEVIDEODEVICESNVPROC __wglewEnumerateVideoDevicesNV = NULL;\nPFNWGLQUERYCURRENTCONTEXTNVPROC __wglewQueryCurrentContextNV = NULL;\n\nPFNWGLBINDSWAPBARRIERNVPROC __wglewBindSwapBarrierNV = NULL;\nPFNWGLJOINSWAPGROUPNVPROC __wglewJoinSwapGroupNV = NULL;\nPFNWGLQUERYFRAMECOUNTNVPROC __wglewQueryFrameCountNV = NULL;\nPFNWGLQUERYMAXSWAPGROUPSNVPROC __wglewQueryMaxSwapGroupsNV = NULL;\nPFNWGLQUERYSWAPGROUPNVPROC __wglewQuerySwapGroupNV = NULL;\nPFNWGLRESETFRAMECOUNTNVPROC __wglewResetFrameCountNV = NULL;\n\nPFNWGLALLOCATEMEMORYNVPROC __wglewAllocateMemoryNV = NULL;\nPFNWGLFREEMEMORYNVPROC __wglewFreeMemoryNV = NULL;\n\nPFNWGLBINDVIDEOCAPTUREDEVICENVPROC __wglewBindVideoCaptureDeviceNV = NULL;\nPFNWGLENUMERATEVIDEOCAPTUREDEVICESNVPROC __wglewEnumerateVideoCaptureDevicesNV = NULL;\nPFNWGLLOCKVIDEOCAPTUREDEVICENVPROC __wglewLockVideoCaptureDeviceNV = NULL;\nPFNWGLQUERYVIDEOCAPTUREDEVICENVPROC __wglewQueryVideoCaptureDeviceNV = NULL;\nPFNWGLRELEASEVIDEOCAPTUREDEVICENVPROC __wglewReleaseVideoCaptureDeviceNV = NULL;\n\nPFNWGLBINDVIDEOIMAGENVPROC __wglewBindVideoImageNV = NULL;\nPFNWGLGETVIDEODEVICENVPROC __wglewGetVideoDeviceNV = NULL;\nPFNWGLGETVIDEOINFONVPROC __wglewGetVideoInfoNV = NULL;\nPFNWGLRELEASEVIDEODEVICENVPROC __wglewReleaseVideoDeviceNV = NULL;\nPFNWGLRELEASEVIDEOIMAGENVPROC __wglewReleaseVideoImageNV = NULL;\nPFNWGLSENDPBUFFERTOVIDEONVPROC __wglewSendPbufferToVideoNV = NULL;\n\nPFNWGLGETMSCRATEOMLPROC __wglewGetMscRateOML = NULL;\nPFNWGLGETSYNCVALUESOMLPROC __wglewGetSyncValuesOML = NULL;\nPFNWGLSWAPBUFFERSMSCOMLPROC __wglewSwapBuffersMscOML = NULL;\nPFNWGLSWAPLAYERBUFFERSMSCOMLPROC __wglewSwapLayerBuffersMscOML = NULL;\nPFNWGLWAITFORMSCOMLPROC __wglewWaitForMscOML = NULL;\nPFNWGLWAITFORSBCOMLPROC __wglewWaitForSbcOML = NULL;\nGLboolean __WGLEW_3DFX_multisample = GL_FALSE;\nGLboolean __WGLEW_3DL_stereo_control = GL_FALSE;\nGLboolean __WGLEW_AMD_gpu_association = GL_FALSE;\nGLboolean __WGLEW_ARB_buffer_region = GL_FALSE;\nGLboolean __WGLEW_ARB_context_flush_control = GL_FALSE;\nGLboolean __WGLEW_ARB_create_context = GL_FALSE;\nGLboolean __WGLEW_ARB_create_context_profile = GL_FALSE;\nGLboolean __WGLEW_ARB_create_context_robustness = GL_FALSE;\nGLboolean __WGLEW_ARB_extensions_string = GL_FALSE;\nGLboolean __WGLEW_ARB_framebuffer_sRGB = GL_FALSE;\nGLboolean __WGLEW_ARB_make_current_read = GL_FALSE;\nGLboolean __WGLEW_ARB_multisample = GL_FALSE;\nGLboolean __WGLEW_ARB_pbuffer = GL_FALSE;\nGLboolean __WGLEW_ARB_pixel_format = GL_FALSE;\nGLboolean __WGLEW_ARB_pixel_format_float = GL_FALSE;\nGLboolean __WGLEW_ARB_render_texture = GL_FALSE;\nGLboolean __WGLEW_ARB_robustness_application_isolation = GL_FALSE;\nGLboolean __WGLEW_ARB_robustness_share_group_isolation = GL_FALSE;\nGLboolean __WGLEW_ATI_pixel_format_float = GL_FALSE;\nGLboolean __WGLEW_ATI_render_texture_rectangle = GL_FALSE;\nGLboolean __WGLEW_EXT_create_context_es2_profile = GL_FALSE;\nGLboolean __WGLEW_EXT_create_context_es_profile = GL_FALSE;\nGLboolean __WGLEW_EXT_depth_float = GL_FALSE;\nGLboolean __WGLEW_EXT_display_color_table = GL_FALSE;\nGLboolean __WGLEW_EXT_extensions_string = GL_FALSE;\nGLboolean __WGLEW_EXT_framebuffer_sRGB = GL_FALSE;\nGLboolean __WGLEW_EXT_make_current_read = GL_FALSE;\nGLboolean __WGLEW_EXT_multisample = GL_FALSE;\nGLboolean __WGLEW_EXT_pbuffer = GL_FALSE;\nGLboolean __WGLEW_EXT_pixel_format = GL_FALSE;\nGLboolean __WGLEW_EXT_pixel_format_packed_float = GL_FALSE;\nGLboolean __WGLEW_EXT_swap_control = GL_FALSE;\nGLboolean __WGLEW_EXT_swap_control_tear = GL_FALSE;\nGLboolean __WGLEW_I3D_digital_video_control = GL_FALSE;\nGLboolean __WGLEW_I3D_gamma = GL_FALSE;\nGLboolean __WGLEW_I3D_genlock = GL_FALSE;\nGLboolean __WGLEW_I3D_image_buffer = GL_FALSE;\nGLboolean __WGLEW_I3D_swap_frame_lock = GL_FALSE;\nGLboolean __WGLEW_I3D_swap_frame_usage = GL_FALSE;\nGLboolean __WGLEW_NV_DX_interop = GL_FALSE;\nGLboolean __WGLEW_NV_DX_interop2 = GL_FALSE;\nGLboolean __WGLEW_NV_copy_image = GL_FALSE;\nGLboolean __WGLEW_NV_delay_before_swap = GL_FALSE;\nGLboolean __WGLEW_NV_float_buffer = GL_FALSE;\nGLboolean __WGLEW_NV_gpu_affinity = GL_FALSE;\nGLboolean __WGLEW_NV_multisample_coverage = GL_FALSE;\nGLboolean __WGLEW_NV_present_video = GL_FALSE;\nGLboolean __WGLEW_NV_render_depth_texture = GL_FALSE;\nGLboolean __WGLEW_NV_render_texture_rectangle = GL_FALSE;\nGLboolean __WGLEW_NV_swap_group = GL_FALSE;\nGLboolean __WGLEW_NV_vertex_array_range = GL_FALSE;\nGLboolean __WGLEW_NV_video_capture = GL_FALSE;\nGLboolean __WGLEW_NV_video_output = GL_FALSE;\nGLboolean __WGLEW_OML_sync_control = GL_FALSE;\n#ifdef WGL_3DL_stereo_control\n\nstatic GLboolean _glewInit_WGL_3DL_stereo_control ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglSetStereoEmitterState3DL = (PFNWGLSETSTEREOEMITTERSTATE3DLPROC)glewGetProcAddress((const GLubyte*)\"wglSetStereoEmitterState3DL\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_3DL_stereo_control */\n\n#ifdef WGL_AMD_gpu_association\n\nstatic GLboolean _glewInit_WGL_AMD_gpu_association ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglBlitContextFramebufferAMD = (PFNWGLBLITCONTEXTFRAMEBUFFERAMDPROC)glewGetProcAddress((const GLubyte*)\"wglBlitContextFramebufferAMD\")) == NULL) || r;\n  r = ((wglCreateAssociatedContextAMD = (PFNWGLCREATEASSOCIATEDCONTEXTAMDPROC)glewGetProcAddress((const GLubyte*)\"wglCreateAssociatedContextAMD\")) == NULL) || r;\n  r = ((wglCreateAssociatedContextAttribsAMD = (PFNWGLCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC)glewGetProcAddress((const GLubyte*)\"wglCreateAssociatedContextAttribsAMD\")) == NULL) || r;\n  r = ((wglDeleteAssociatedContextAMD = (PFNWGLDELETEASSOCIATEDCONTEXTAMDPROC)glewGetProcAddress((const GLubyte*)\"wglDeleteAssociatedContextAMD\")) == NULL) || r;\n  r = ((wglGetContextGPUIDAMD = (PFNWGLGETCONTEXTGPUIDAMDPROC)glewGetProcAddress((const GLubyte*)\"wglGetContextGPUIDAMD\")) == NULL) || r;\n  r = ((wglGetCurrentAssociatedContextAMD = (PFNWGLGETCURRENTASSOCIATEDCONTEXTAMDPROC)glewGetProcAddress((const GLubyte*)\"wglGetCurrentAssociatedContextAMD\")) == NULL) || r;\n  r = ((wglGetGPUIDsAMD = (PFNWGLGETGPUIDSAMDPROC)glewGetProcAddress((const GLubyte*)\"wglGetGPUIDsAMD\")) == NULL) || r;\n  r = ((wglGetGPUInfoAMD = (PFNWGLGETGPUINFOAMDPROC)glewGetProcAddress((const GLubyte*)\"wglGetGPUInfoAMD\")) == NULL) || r;\n  r = ((wglMakeAssociatedContextCurrentAMD = (PFNWGLMAKEASSOCIATEDCONTEXTCURRENTAMDPROC)glewGetProcAddress((const GLubyte*)\"wglMakeAssociatedContextCurrentAMD\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_AMD_gpu_association */\n\n#ifdef WGL_ARB_buffer_region\n\nstatic GLboolean _glewInit_WGL_ARB_buffer_region ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglCreateBufferRegionARB = (PFNWGLCREATEBUFFERREGIONARBPROC)glewGetProcAddress((const GLubyte*)\"wglCreateBufferRegionARB\")) == NULL) || r;\n  r = ((wglDeleteBufferRegionARB = (PFNWGLDELETEBUFFERREGIONARBPROC)glewGetProcAddress((const GLubyte*)\"wglDeleteBufferRegionARB\")) == NULL) || r;\n  r = ((wglRestoreBufferRegionARB = (PFNWGLRESTOREBUFFERREGIONARBPROC)glewGetProcAddress((const GLubyte*)\"wglRestoreBufferRegionARB\")) == NULL) || r;\n  r = ((wglSaveBufferRegionARB = (PFNWGLSAVEBUFFERREGIONARBPROC)glewGetProcAddress((const GLubyte*)\"wglSaveBufferRegionARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_ARB_buffer_region */\n\n#ifdef WGL_ARB_create_context\n\nstatic GLboolean _glewInit_WGL_ARB_create_context ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglCreateContextAttribsARB = (PFNWGLCREATECONTEXTATTRIBSARBPROC)glewGetProcAddress((const GLubyte*)\"wglCreateContextAttribsARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_ARB_create_context */\n\n#ifdef WGL_ARB_extensions_string\n\nstatic GLboolean _glewInit_WGL_ARB_extensions_string ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglGetExtensionsStringARB = (PFNWGLGETEXTENSIONSSTRINGARBPROC)glewGetProcAddress((const GLubyte*)\"wglGetExtensionsStringARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_ARB_extensions_string */\n\n#ifdef WGL_ARB_make_current_read\n\nstatic GLboolean _glewInit_WGL_ARB_make_current_read ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglGetCurrentReadDCARB = (PFNWGLGETCURRENTREADDCARBPROC)glewGetProcAddress((const GLubyte*)\"wglGetCurrentReadDCARB\")) == NULL) || r;\n  r = ((wglMakeContextCurrentARB = (PFNWGLMAKECONTEXTCURRENTARBPROC)glewGetProcAddress((const GLubyte*)\"wglMakeContextCurrentARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_ARB_make_current_read */\n\n#ifdef WGL_ARB_pbuffer\n\nstatic GLboolean _glewInit_WGL_ARB_pbuffer ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglCreatePbufferARB = (PFNWGLCREATEPBUFFERARBPROC)glewGetProcAddress((const GLubyte*)\"wglCreatePbufferARB\")) == NULL) || r;\n  r = ((wglDestroyPbufferARB = (PFNWGLDESTROYPBUFFERARBPROC)glewGetProcAddress((const GLubyte*)\"wglDestroyPbufferARB\")) == NULL) || r;\n  r = ((wglGetPbufferDCARB = (PFNWGLGETPBUFFERDCARBPROC)glewGetProcAddress((const GLubyte*)\"wglGetPbufferDCARB\")) == NULL) || r;\n  r = ((wglQueryPbufferARB = (PFNWGLQUERYPBUFFERARBPROC)glewGetProcAddress((const GLubyte*)\"wglQueryPbufferARB\")) == NULL) || r;\n  r = ((wglReleasePbufferDCARB = (PFNWGLRELEASEPBUFFERDCARBPROC)glewGetProcAddress((const GLubyte*)\"wglReleasePbufferDCARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_ARB_pbuffer */\n\n#ifdef WGL_ARB_pixel_format\n\nstatic GLboolean _glewInit_WGL_ARB_pixel_format ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglChoosePixelFormatARB = (PFNWGLCHOOSEPIXELFORMATARBPROC)glewGetProcAddress((const GLubyte*)\"wglChoosePixelFormatARB\")) == NULL) || r;\n  r = ((wglGetPixelFormatAttribfvARB = (PFNWGLGETPIXELFORMATATTRIBFVARBPROC)glewGetProcAddress((const GLubyte*)\"wglGetPixelFormatAttribfvARB\")) == NULL) || r;\n  r = ((wglGetPixelFormatAttribivARB = (PFNWGLGETPIXELFORMATATTRIBIVARBPROC)glewGetProcAddress((const GLubyte*)\"wglGetPixelFormatAttribivARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_ARB_pixel_format */\n\n#ifdef WGL_ARB_render_texture\n\nstatic GLboolean _glewInit_WGL_ARB_render_texture ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglBindTexImageARB = (PFNWGLBINDTEXIMAGEARBPROC)glewGetProcAddress((const GLubyte*)\"wglBindTexImageARB\")) == NULL) || r;\n  r = ((wglReleaseTexImageARB = (PFNWGLRELEASETEXIMAGEARBPROC)glewGetProcAddress((const GLubyte*)\"wglReleaseTexImageARB\")) == NULL) || r;\n  r = ((wglSetPbufferAttribARB = (PFNWGLSETPBUFFERATTRIBARBPROC)glewGetProcAddress((const GLubyte*)\"wglSetPbufferAttribARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_ARB_render_texture */\n\n#ifdef WGL_EXT_display_color_table\n\nstatic GLboolean _glewInit_WGL_EXT_display_color_table ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglBindDisplayColorTableEXT = (PFNWGLBINDDISPLAYCOLORTABLEEXTPROC)glewGetProcAddress((const GLubyte*)\"wglBindDisplayColorTableEXT\")) == NULL) || r;\n  r = ((wglCreateDisplayColorTableEXT = (PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC)glewGetProcAddress((const GLubyte*)\"wglCreateDisplayColorTableEXT\")) == NULL) || r;\n  r = ((wglDestroyDisplayColorTableEXT = (PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC)glewGetProcAddress((const GLubyte*)\"wglDestroyDisplayColorTableEXT\")) == NULL) || r;\n  r = ((wglLoadDisplayColorTableEXT = (PFNWGLLOADDISPLAYCOLORTABLEEXTPROC)glewGetProcAddress((const GLubyte*)\"wglLoadDisplayColorTableEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_EXT_display_color_table */\n\n#ifdef WGL_EXT_extensions_string\n\nstatic GLboolean _glewInit_WGL_EXT_extensions_string ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglGetExtensionsStringEXT = (PFNWGLGETEXTENSIONSSTRINGEXTPROC)glewGetProcAddress((const GLubyte*)\"wglGetExtensionsStringEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_EXT_extensions_string */\n\n#ifdef WGL_EXT_make_current_read\n\nstatic GLboolean _glewInit_WGL_EXT_make_current_read ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglGetCurrentReadDCEXT = (PFNWGLGETCURRENTREADDCEXTPROC)glewGetProcAddress((const GLubyte*)\"wglGetCurrentReadDCEXT\")) == NULL) || r;\n  r = ((wglMakeContextCurrentEXT = (PFNWGLMAKECONTEXTCURRENTEXTPROC)glewGetProcAddress((const GLubyte*)\"wglMakeContextCurrentEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_EXT_make_current_read */\n\n#ifdef WGL_EXT_pbuffer\n\nstatic GLboolean _glewInit_WGL_EXT_pbuffer ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglCreatePbufferEXT = (PFNWGLCREATEPBUFFEREXTPROC)glewGetProcAddress((const GLubyte*)\"wglCreatePbufferEXT\")) == NULL) || r;\n  r = ((wglDestroyPbufferEXT = (PFNWGLDESTROYPBUFFEREXTPROC)glewGetProcAddress((const GLubyte*)\"wglDestroyPbufferEXT\")) == NULL) || r;\n  r = ((wglGetPbufferDCEXT = (PFNWGLGETPBUFFERDCEXTPROC)glewGetProcAddress((const GLubyte*)\"wglGetPbufferDCEXT\")) == NULL) || r;\n  r = ((wglQueryPbufferEXT = (PFNWGLQUERYPBUFFEREXTPROC)glewGetProcAddress((const GLubyte*)\"wglQueryPbufferEXT\")) == NULL) || r;\n  r = ((wglReleasePbufferDCEXT = (PFNWGLRELEASEPBUFFERDCEXTPROC)glewGetProcAddress((const GLubyte*)\"wglReleasePbufferDCEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_EXT_pbuffer */\n\n#ifdef WGL_EXT_pixel_format\n\nstatic GLboolean _glewInit_WGL_EXT_pixel_format ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglChoosePixelFormatEXT = (PFNWGLCHOOSEPIXELFORMATEXTPROC)glewGetProcAddress((const GLubyte*)\"wglChoosePixelFormatEXT\")) == NULL) || r;\n  r = ((wglGetPixelFormatAttribfvEXT = (PFNWGLGETPIXELFORMATATTRIBFVEXTPROC)glewGetProcAddress((const GLubyte*)\"wglGetPixelFormatAttribfvEXT\")) == NULL) || r;\n  r = ((wglGetPixelFormatAttribivEXT = (PFNWGLGETPIXELFORMATATTRIBIVEXTPROC)glewGetProcAddress((const GLubyte*)\"wglGetPixelFormatAttribivEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_EXT_pixel_format */\n\n#ifdef WGL_EXT_swap_control\n\nstatic GLboolean _glewInit_WGL_EXT_swap_control ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglGetSwapIntervalEXT = (PFNWGLGETSWAPINTERVALEXTPROC)glewGetProcAddress((const GLubyte*)\"wglGetSwapIntervalEXT\")) == NULL) || r;\n  r = ((wglSwapIntervalEXT = (PFNWGLSWAPINTERVALEXTPROC)glewGetProcAddress((const GLubyte*)\"wglSwapIntervalEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_EXT_swap_control */\n\n#ifdef WGL_I3D_digital_video_control\n\nstatic GLboolean _glewInit_WGL_I3D_digital_video_control ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglGetDigitalVideoParametersI3D = (PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC)glewGetProcAddress((const GLubyte*)\"wglGetDigitalVideoParametersI3D\")) == NULL) || r;\n  r = ((wglSetDigitalVideoParametersI3D = (PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC)glewGetProcAddress((const GLubyte*)\"wglSetDigitalVideoParametersI3D\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_I3D_digital_video_control */\n\n#ifdef WGL_I3D_gamma\n\nstatic GLboolean _glewInit_WGL_I3D_gamma ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglGetGammaTableI3D = (PFNWGLGETGAMMATABLEI3DPROC)glewGetProcAddress((const GLubyte*)\"wglGetGammaTableI3D\")) == NULL) || r;\n  r = ((wglGetGammaTableParametersI3D = (PFNWGLGETGAMMATABLEPARAMETERSI3DPROC)glewGetProcAddress((const GLubyte*)\"wglGetGammaTableParametersI3D\")) == NULL) || r;\n  r = ((wglSetGammaTableI3D = (PFNWGLSETGAMMATABLEI3DPROC)glewGetProcAddress((const GLubyte*)\"wglSetGammaTableI3D\")) == NULL) || r;\n  r = ((wglSetGammaTableParametersI3D = (PFNWGLSETGAMMATABLEPARAMETERSI3DPROC)glewGetProcAddress((const GLubyte*)\"wglSetGammaTableParametersI3D\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_I3D_gamma */\n\n#ifdef WGL_I3D_genlock\n\nstatic GLboolean _glewInit_WGL_I3D_genlock ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglDisableGenlockI3D = (PFNWGLDISABLEGENLOCKI3DPROC)glewGetProcAddress((const GLubyte*)\"wglDisableGenlockI3D\")) == NULL) || r;\n  r = ((wglEnableGenlockI3D = (PFNWGLENABLEGENLOCKI3DPROC)glewGetProcAddress((const GLubyte*)\"wglEnableGenlockI3D\")) == NULL) || r;\n  r = ((wglGenlockSampleRateI3D = (PFNWGLGENLOCKSAMPLERATEI3DPROC)glewGetProcAddress((const GLubyte*)\"wglGenlockSampleRateI3D\")) == NULL) || r;\n  r = ((wglGenlockSourceDelayI3D = (PFNWGLGENLOCKSOURCEDELAYI3DPROC)glewGetProcAddress((const GLubyte*)\"wglGenlockSourceDelayI3D\")) == NULL) || r;\n  r = ((wglGenlockSourceEdgeI3D = (PFNWGLGENLOCKSOURCEEDGEI3DPROC)glewGetProcAddress((const GLubyte*)\"wglGenlockSourceEdgeI3D\")) == NULL) || r;\n  r = ((wglGenlockSourceI3D = (PFNWGLGENLOCKSOURCEI3DPROC)glewGetProcAddress((const GLubyte*)\"wglGenlockSourceI3D\")) == NULL) || r;\n  r = ((wglGetGenlockSampleRateI3D = (PFNWGLGETGENLOCKSAMPLERATEI3DPROC)glewGetProcAddress((const GLubyte*)\"wglGetGenlockSampleRateI3D\")) == NULL) || r;\n  r = ((wglGetGenlockSourceDelayI3D = (PFNWGLGETGENLOCKSOURCEDELAYI3DPROC)glewGetProcAddress((const GLubyte*)\"wglGetGenlockSourceDelayI3D\")) == NULL) || r;\n  r = ((wglGetGenlockSourceEdgeI3D = (PFNWGLGETGENLOCKSOURCEEDGEI3DPROC)glewGetProcAddress((const GLubyte*)\"wglGetGenlockSourceEdgeI3D\")) == NULL) || r;\n  r = ((wglGetGenlockSourceI3D = (PFNWGLGETGENLOCKSOURCEI3DPROC)glewGetProcAddress((const GLubyte*)\"wglGetGenlockSourceI3D\")) == NULL) || r;\n  r = ((wglIsEnabledGenlockI3D = (PFNWGLISENABLEDGENLOCKI3DPROC)glewGetProcAddress((const GLubyte*)\"wglIsEnabledGenlockI3D\")) == NULL) || r;\n  r = ((wglQueryGenlockMaxSourceDelayI3D = (PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC)glewGetProcAddress((const GLubyte*)\"wglQueryGenlockMaxSourceDelayI3D\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_I3D_genlock */\n\n#ifdef WGL_I3D_image_buffer\n\nstatic GLboolean _glewInit_WGL_I3D_image_buffer ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglAssociateImageBufferEventsI3D = (PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC)glewGetProcAddress((const GLubyte*)\"wglAssociateImageBufferEventsI3D\")) == NULL) || r;\n  r = ((wglCreateImageBufferI3D = (PFNWGLCREATEIMAGEBUFFERI3DPROC)glewGetProcAddress((const GLubyte*)\"wglCreateImageBufferI3D\")) == NULL) || r;\n  r = ((wglDestroyImageBufferI3D = (PFNWGLDESTROYIMAGEBUFFERI3DPROC)glewGetProcAddress((const GLubyte*)\"wglDestroyImageBufferI3D\")) == NULL) || r;\n  r = ((wglReleaseImageBufferEventsI3D = (PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC)glewGetProcAddress((const GLubyte*)\"wglReleaseImageBufferEventsI3D\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_I3D_image_buffer */\n\n#ifdef WGL_I3D_swap_frame_lock\n\nstatic GLboolean _glewInit_WGL_I3D_swap_frame_lock ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglDisableFrameLockI3D = (PFNWGLDISABLEFRAMELOCKI3DPROC)glewGetProcAddress((const GLubyte*)\"wglDisableFrameLockI3D\")) == NULL) || r;\n  r = ((wglEnableFrameLockI3D = (PFNWGLENABLEFRAMELOCKI3DPROC)glewGetProcAddress((const GLubyte*)\"wglEnableFrameLockI3D\")) == NULL) || r;\n  r = ((wglIsEnabledFrameLockI3D = (PFNWGLISENABLEDFRAMELOCKI3DPROC)glewGetProcAddress((const GLubyte*)\"wglIsEnabledFrameLockI3D\")) == NULL) || r;\n  r = ((wglQueryFrameLockMasterI3D = (PFNWGLQUERYFRAMELOCKMASTERI3DPROC)glewGetProcAddress((const GLubyte*)\"wglQueryFrameLockMasterI3D\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_I3D_swap_frame_lock */\n\n#ifdef WGL_I3D_swap_frame_usage\n\nstatic GLboolean _glewInit_WGL_I3D_swap_frame_usage ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglBeginFrameTrackingI3D = (PFNWGLBEGINFRAMETRACKINGI3DPROC)glewGetProcAddress((const GLubyte*)\"wglBeginFrameTrackingI3D\")) == NULL) || r;\n  r = ((wglEndFrameTrackingI3D = (PFNWGLENDFRAMETRACKINGI3DPROC)glewGetProcAddress((const GLubyte*)\"wglEndFrameTrackingI3D\")) == NULL) || r;\n  r = ((wglGetFrameUsageI3D = (PFNWGLGETFRAMEUSAGEI3DPROC)glewGetProcAddress((const GLubyte*)\"wglGetFrameUsageI3D\")) == NULL) || r;\n  r = ((wglQueryFrameTrackingI3D = (PFNWGLQUERYFRAMETRACKINGI3DPROC)glewGetProcAddress((const GLubyte*)\"wglQueryFrameTrackingI3D\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_I3D_swap_frame_usage */\n\n#ifdef WGL_NV_DX_interop\n\nstatic GLboolean _glewInit_WGL_NV_DX_interop ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglDXCloseDeviceNV = (PFNWGLDXCLOSEDEVICENVPROC)glewGetProcAddress((const GLubyte*)\"wglDXCloseDeviceNV\")) == NULL) || r;\n  r = ((wglDXLockObjectsNV = (PFNWGLDXLOCKOBJECTSNVPROC)glewGetProcAddress((const GLubyte*)\"wglDXLockObjectsNV\")) == NULL) || r;\n  r = ((wglDXObjectAccessNV = (PFNWGLDXOBJECTACCESSNVPROC)glewGetProcAddress((const GLubyte*)\"wglDXObjectAccessNV\")) == NULL) || r;\n  r = ((wglDXOpenDeviceNV = (PFNWGLDXOPENDEVICENVPROC)glewGetProcAddress((const GLubyte*)\"wglDXOpenDeviceNV\")) == NULL) || r;\n  r = ((wglDXRegisterObjectNV = (PFNWGLDXREGISTEROBJECTNVPROC)glewGetProcAddress((const GLubyte*)\"wglDXRegisterObjectNV\")) == NULL) || r;\n  r = ((wglDXSetResourceShareHandleNV = (PFNWGLDXSETRESOURCESHAREHANDLENVPROC)glewGetProcAddress((const GLubyte*)\"wglDXSetResourceShareHandleNV\")) == NULL) || r;\n  r = ((wglDXUnlockObjectsNV = (PFNWGLDXUNLOCKOBJECTSNVPROC)glewGetProcAddress((const GLubyte*)\"wglDXUnlockObjectsNV\")) == NULL) || r;\n  r = ((wglDXUnregisterObjectNV = (PFNWGLDXUNREGISTEROBJECTNVPROC)glewGetProcAddress((const GLubyte*)\"wglDXUnregisterObjectNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_NV_DX_interop */\n\n#ifdef WGL_NV_copy_image\n\nstatic GLboolean _glewInit_WGL_NV_copy_image ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglCopyImageSubDataNV = (PFNWGLCOPYIMAGESUBDATANVPROC)glewGetProcAddress((const GLubyte*)\"wglCopyImageSubDataNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_NV_copy_image */\n\n#ifdef WGL_NV_delay_before_swap\n\nstatic GLboolean _glewInit_WGL_NV_delay_before_swap ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglDelayBeforeSwapNV = (PFNWGLDELAYBEFORESWAPNVPROC)glewGetProcAddress((const GLubyte*)\"wglDelayBeforeSwapNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_NV_delay_before_swap */\n\n#ifdef WGL_NV_gpu_affinity\n\nstatic GLboolean _glewInit_WGL_NV_gpu_affinity ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglCreateAffinityDCNV = (PFNWGLCREATEAFFINITYDCNVPROC)glewGetProcAddress((const GLubyte*)\"wglCreateAffinityDCNV\")) == NULL) || r;\n  r = ((wglDeleteDCNV = (PFNWGLDELETEDCNVPROC)glewGetProcAddress((const GLubyte*)\"wglDeleteDCNV\")) == NULL) || r;\n  r = ((wglEnumGpuDevicesNV = (PFNWGLENUMGPUDEVICESNVPROC)glewGetProcAddress((const GLubyte*)\"wglEnumGpuDevicesNV\")) == NULL) || r;\n  r = ((wglEnumGpusFromAffinityDCNV = (PFNWGLENUMGPUSFROMAFFINITYDCNVPROC)glewGetProcAddress((const GLubyte*)\"wglEnumGpusFromAffinityDCNV\")) == NULL) || r;\n  r = ((wglEnumGpusNV = (PFNWGLENUMGPUSNVPROC)glewGetProcAddress((const GLubyte*)\"wglEnumGpusNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_NV_gpu_affinity */\n\n#ifdef WGL_NV_present_video\n\nstatic GLboolean _glewInit_WGL_NV_present_video ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglBindVideoDeviceNV = (PFNWGLBINDVIDEODEVICENVPROC)glewGetProcAddress((const GLubyte*)\"wglBindVideoDeviceNV\")) == NULL) || r;\n  r = ((wglEnumerateVideoDevicesNV = (PFNWGLENUMERATEVIDEODEVICESNVPROC)glewGetProcAddress((const GLubyte*)\"wglEnumerateVideoDevicesNV\")) == NULL) || r;\n  r = ((wglQueryCurrentContextNV = (PFNWGLQUERYCURRENTCONTEXTNVPROC)glewGetProcAddress((const GLubyte*)\"wglQueryCurrentContextNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_NV_present_video */\n\n#ifdef WGL_NV_swap_group\n\nstatic GLboolean _glewInit_WGL_NV_swap_group ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglBindSwapBarrierNV = (PFNWGLBINDSWAPBARRIERNVPROC)glewGetProcAddress((const GLubyte*)\"wglBindSwapBarrierNV\")) == NULL) || r;\n  r = ((wglJoinSwapGroupNV = (PFNWGLJOINSWAPGROUPNVPROC)glewGetProcAddress((const GLubyte*)\"wglJoinSwapGroupNV\")) == NULL) || r;\n  r = ((wglQueryFrameCountNV = (PFNWGLQUERYFRAMECOUNTNVPROC)glewGetProcAddress((const GLubyte*)\"wglQueryFrameCountNV\")) == NULL) || r;\n  r = ((wglQueryMaxSwapGroupsNV = (PFNWGLQUERYMAXSWAPGROUPSNVPROC)glewGetProcAddress((const GLubyte*)\"wglQueryMaxSwapGroupsNV\")) == NULL) || r;\n  r = ((wglQuerySwapGroupNV = (PFNWGLQUERYSWAPGROUPNVPROC)glewGetProcAddress((const GLubyte*)\"wglQuerySwapGroupNV\")) == NULL) || r;\n  r = ((wglResetFrameCountNV = (PFNWGLRESETFRAMECOUNTNVPROC)glewGetProcAddress((const GLubyte*)\"wglResetFrameCountNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_NV_swap_group */\n\n#ifdef WGL_NV_vertex_array_range\n\nstatic GLboolean _glewInit_WGL_NV_vertex_array_range ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglAllocateMemoryNV = (PFNWGLALLOCATEMEMORYNVPROC)glewGetProcAddress((const GLubyte*)\"wglAllocateMemoryNV\")) == NULL) || r;\n  r = ((wglFreeMemoryNV = (PFNWGLFREEMEMORYNVPROC)glewGetProcAddress((const GLubyte*)\"wglFreeMemoryNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_NV_vertex_array_range */\n\n#ifdef WGL_NV_video_capture\n\nstatic GLboolean _glewInit_WGL_NV_video_capture ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglBindVideoCaptureDeviceNV = (PFNWGLBINDVIDEOCAPTUREDEVICENVPROC)glewGetProcAddress((const GLubyte*)\"wglBindVideoCaptureDeviceNV\")) == NULL) || r;\n  r = ((wglEnumerateVideoCaptureDevicesNV = (PFNWGLENUMERATEVIDEOCAPTUREDEVICESNVPROC)glewGetProcAddress((const GLubyte*)\"wglEnumerateVideoCaptureDevicesNV\")) == NULL) || r;\n  r = ((wglLockVideoCaptureDeviceNV = (PFNWGLLOCKVIDEOCAPTUREDEVICENVPROC)glewGetProcAddress((const GLubyte*)\"wglLockVideoCaptureDeviceNV\")) == NULL) || r;\n  r = ((wglQueryVideoCaptureDeviceNV = (PFNWGLQUERYVIDEOCAPTUREDEVICENVPROC)glewGetProcAddress((const GLubyte*)\"wglQueryVideoCaptureDeviceNV\")) == NULL) || r;\n  r = ((wglReleaseVideoCaptureDeviceNV = (PFNWGLRELEASEVIDEOCAPTUREDEVICENVPROC)glewGetProcAddress((const GLubyte*)\"wglReleaseVideoCaptureDeviceNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_NV_video_capture */\n\n#ifdef WGL_NV_video_output\n\nstatic GLboolean _glewInit_WGL_NV_video_output ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglBindVideoImageNV = (PFNWGLBINDVIDEOIMAGENVPROC)glewGetProcAddress((const GLubyte*)\"wglBindVideoImageNV\")) == NULL) || r;\n  r = ((wglGetVideoDeviceNV = (PFNWGLGETVIDEODEVICENVPROC)glewGetProcAddress((const GLubyte*)\"wglGetVideoDeviceNV\")) == NULL) || r;\n  r = ((wglGetVideoInfoNV = (PFNWGLGETVIDEOINFONVPROC)glewGetProcAddress((const GLubyte*)\"wglGetVideoInfoNV\")) == NULL) || r;\n  r = ((wglReleaseVideoDeviceNV = (PFNWGLRELEASEVIDEODEVICENVPROC)glewGetProcAddress((const GLubyte*)\"wglReleaseVideoDeviceNV\")) == NULL) || r;\n  r = ((wglReleaseVideoImageNV = (PFNWGLRELEASEVIDEOIMAGENVPROC)glewGetProcAddress((const GLubyte*)\"wglReleaseVideoImageNV\")) == NULL) || r;\n  r = ((wglSendPbufferToVideoNV = (PFNWGLSENDPBUFFERTOVIDEONVPROC)glewGetProcAddress((const GLubyte*)\"wglSendPbufferToVideoNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_NV_video_output */\n\n#ifdef WGL_OML_sync_control\n\nstatic GLboolean _glewInit_WGL_OML_sync_control ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((wglGetMscRateOML = (PFNWGLGETMSCRATEOMLPROC)glewGetProcAddress((const GLubyte*)\"wglGetMscRateOML\")) == NULL) || r;\n  r = ((wglGetSyncValuesOML = (PFNWGLGETSYNCVALUESOMLPROC)glewGetProcAddress((const GLubyte*)\"wglGetSyncValuesOML\")) == NULL) || r;\n  r = ((wglSwapBuffersMscOML = (PFNWGLSWAPBUFFERSMSCOMLPROC)glewGetProcAddress((const GLubyte*)\"wglSwapBuffersMscOML\")) == NULL) || r;\n  r = ((wglSwapLayerBuffersMscOML = (PFNWGLSWAPLAYERBUFFERSMSCOMLPROC)glewGetProcAddress((const GLubyte*)\"wglSwapLayerBuffersMscOML\")) == NULL) || r;\n  r = ((wglWaitForMscOML = (PFNWGLWAITFORMSCOMLPROC)glewGetProcAddress((const GLubyte*)\"wglWaitForMscOML\")) == NULL) || r;\n  r = ((wglWaitForSbcOML = (PFNWGLWAITFORSBCOMLPROC)glewGetProcAddress((const GLubyte*)\"wglWaitForSbcOML\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* WGL_OML_sync_control */\n\n/* ------------------------------------------------------------------------- */\n\nstatic PFNWGLGETEXTENSIONSSTRINGARBPROC _wglewGetExtensionsStringARB = NULL;\nstatic PFNWGLGETEXTENSIONSSTRINGEXTPROC _wglewGetExtensionsStringEXT = NULL;\n\nGLboolean GLEWAPIENTRY wglewGetExtension (const char* name)\n{    \n  const GLubyte* start;\n  const GLubyte* end;\n  if (_wglewGetExtensionsStringARB == NULL)\n    if (_wglewGetExtensionsStringEXT == NULL)\n      return GL_FALSE;\n    else\n      start = (const GLubyte*)_wglewGetExtensionsStringEXT();\n  else\n    start = (const GLubyte*)_wglewGetExtensionsStringARB(wglGetCurrentDC());\n  if (start == 0)\n    return GL_FALSE;\n  end = start + _glewStrLen(start);\n  return _glewSearchExtension(name, start, end);\n}\n\nGLenum GLEWAPIENTRY wglewInit ()\n{\n  GLboolean crippled;\n  const GLubyte* extStart;\n  const GLubyte* extEnd;\n  /* find wgl extension string query functions */\n  _wglewGetExtensionsStringARB = (PFNWGLGETEXTENSIONSSTRINGARBPROC)glewGetProcAddress((const GLubyte*)\"wglGetExtensionsStringARB\");\n  _wglewGetExtensionsStringEXT = (PFNWGLGETEXTENSIONSSTRINGEXTPROC)glewGetProcAddress((const GLubyte*)\"wglGetExtensionsStringEXT\");\n  /* query wgl extension string */\n  if (_wglewGetExtensionsStringARB == NULL)\n    if (_wglewGetExtensionsStringEXT == NULL)\n      extStart = (const GLubyte*)\"\";\n    else\n      extStart = (const GLubyte*)_wglewGetExtensionsStringEXT();\n  else\n    extStart = (const GLubyte*)_wglewGetExtensionsStringARB(wglGetCurrentDC());\n  extEnd = extStart + _glewStrLen(extStart);\n  /* initialize extensions */\n  crippled = _wglewGetExtensionsStringARB == NULL && _wglewGetExtensionsStringEXT == NULL;\n#ifdef WGL_3DFX_multisample\n  WGLEW_3DFX_multisample = _glewSearchExtension(\"WGL_3DFX_multisample\", extStart, extEnd);\n#endif /* WGL_3DFX_multisample */\n#ifdef WGL_3DL_stereo_control\n  WGLEW_3DL_stereo_control = _glewSearchExtension(\"WGL_3DL_stereo_control\", extStart, extEnd);\n  if (glewExperimental || WGLEW_3DL_stereo_control|| crippled) WGLEW_3DL_stereo_control= !_glewInit_WGL_3DL_stereo_control();\n#endif /* WGL_3DL_stereo_control */\n#ifdef WGL_AMD_gpu_association\n  WGLEW_AMD_gpu_association = _glewSearchExtension(\"WGL_AMD_gpu_association\", extStart, extEnd);\n  if (glewExperimental || WGLEW_AMD_gpu_association|| crippled) WGLEW_AMD_gpu_association= !_glewInit_WGL_AMD_gpu_association();\n#endif /* WGL_AMD_gpu_association */\n#ifdef WGL_ARB_buffer_region\n  WGLEW_ARB_buffer_region = _glewSearchExtension(\"WGL_ARB_buffer_region\", extStart, extEnd);\n  if (glewExperimental || WGLEW_ARB_buffer_region|| crippled) WGLEW_ARB_buffer_region= !_glewInit_WGL_ARB_buffer_region();\n#endif /* WGL_ARB_buffer_region */\n#ifdef WGL_ARB_context_flush_control\n  WGLEW_ARB_context_flush_control = _glewSearchExtension(\"WGL_ARB_context_flush_control\", extStart, extEnd);\n#endif /* WGL_ARB_context_flush_control */\n#ifdef WGL_ARB_create_context\n  WGLEW_ARB_create_context = _glewSearchExtension(\"WGL_ARB_create_context\", extStart, extEnd);\n  if (glewExperimental || WGLEW_ARB_create_context|| crippled) WGLEW_ARB_create_context= !_glewInit_WGL_ARB_create_context();\n#endif /* WGL_ARB_create_context */\n#ifdef WGL_ARB_create_context_profile\n  WGLEW_ARB_create_context_profile = _glewSearchExtension(\"WGL_ARB_create_context_profile\", extStart, extEnd);\n#endif /* WGL_ARB_create_context_profile */\n#ifdef WGL_ARB_create_context_robustness\n  WGLEW_ARB_create_context_robustness = _glewSearchExtension(\"WGL_ARB_create_context_robustness\", extStart, extEnd);\n#endif /* WGL_ARB_create_context_robustness */\n#ifdef WGL_ARB_extensions_string\n  WGLEW_ARB_extensions_string = _glewSearchExtension(\"WGL_ARB_extensions_string\", extStart, extEnd);\n  if (glewExperimental || WGLEW_ARB_extensions_string|| crippled) WGLEW_ARB_extensions_string= !_glewInit_WGL_ARB_extensions_string();\n#endif /* WGL_ARB_extensions_string */\n#ifdef WGL_ARB_framebuffer_sRGB\n  WGLEW_ARB_framebuffer_sRGB = _glewSearchExtension(\"WGL_ARB_framebuffer_sRGB\", extStart, extEnd);\n#endif /* WGL_ARB_framebuffer_sRGB */\n#ifdef WGL_ARB_make_current_read\n  WGLEW_ARB_make_current_read = _glewSearchExtension(\"WGL_ARB_make_current_read\", extStart, extEnd);\n  if (glewExperimental || WGLEW_ARB_make_current_read|| crippled) WGLEW_ARB_make_current_read= !_glewInit_WGL_ARB_make_current_read();\n#endif /* WGL_ARB_make_current_read */\n#ifdef WGL_ARB_multisample\n  WGLEW_ARB_multisample = _glewSearchExtension(\"WGL_ARB_multisample\", extStart, extEnd);\n#endif /* WGL_ARB_multisample */\n#ifdef WGL_ARB_pbuffer\n  WGLEW_ARB_pbuffer = _glewSearchExtension(\"WGL_ARB_pbuffer\", extStart, extEnd);\n  if (glewExperimental || WGLEW_ARB_pbuffer|| crippled) WGLEW_ARB_pbuffer= !_glewInit_WGL_ARB_pbuffer();\n#endif /* WGL_ARB_pbuffer */\n#ifdef WGL_ARB_pixel_format\n  WGLEW_ARB_pixel_format = _glewSearchExtension(\"WGL_ARB_pixel_format\", extStart, extEnd);\n  if (glewExperimental || WGLEW_ARB_pixel_format|| crippled) WGLEW_ARB_pixel_format= !_glewInit_WGL_ARB_pixel_format();\n#endif /* WGL_ARB_pixel_format */\n#ifdef WGL_ARB_pixel_format_float\n  WGLEW_ARB_pixel_format_float = _glewSearchExtension(\"WGL_ARB_pixel_format_float\", extStart, extEnd);\n#endif /* WGL_ARB_pixel_format_float */\n#ifdef WGL_ARB_render_texture\n  WGLEW_ARB_render_texture = _glewSearchExtension(\"WGL_ARB_render_texture\", extStart, extEnd);\n  if (glewExperimental || WGLEW_ARB_render_texture|| crippled) WGLEW_ARB_render_texture= !_glewInit_WGL_ARB_render_texture();\n#endif /* WGL_ARB_render_texture */\n#ifdef WGL_ARB_robustness_application_isolation\n  WGLEW_ARB_robustness_application_isolation = _glewSearchExtension(\"WGL_ARB_robustness_application_isolation\", extStart, extEnd);\n#endif /* WGL_ARB_robustness_application_isolation */\n#ifdef WGL_ARB_robustness_share_group_isolation\n  WGLEW_ARB_robustness_share_group_isolation = _glewSearchExtension(\"WGL_ARB_robustness_share_group_isolation\", extStart, extEnd);\n#endif /* WGL_ARB_robustness_share_group_isolation */\n#ifdef WGL_ATI_pixel_format_float\n  WGLEW_ATI_pixel_format_float = _glewSearchExtension(\"WGL_ATI_pixel_format_float\", extStart, extEnd);\n#endif /* WGL_ATI_pixel_format_float */\n#ifdef WGL_ATI_render_texture_rectangle\n  WGLEW_ATI_render_texture_rectangle = _glewSearchExtension(\"WGL_ATI_render_texture_rectangle\", extStart, extEnd);\n#endif /* WGL_ATI_render_texture_rectangle */\n#ifdef WGL_EXT_create_context_es2_profile\n  WGLEW_EXT_create_context_es2_profile = _glewSearchExtension(\"WGL_EXT_create_context_es2_profile\", extStart, extEnd);\n#endif /* WGL_EXT_create_context_es2_profile */\n#ifdef WGL_EXT_create_context_es_profile\n  WGLEW_EXT_create_context_es_profile = _glewSearchExtension(\"WGL_EXT_create_context_es_profile\", extStart, extEnd);\n#endif /* WGL_EXT_create_context_es_profile */\n#ifdef WGL_EXT_depth_float\n  WGLEW_EXT_depth_float = _glewSearchExtension(\"WGL_EXT_depth_float\", extStart, extEnd);\n#endif /* WGL_EXT_depth_float */\n#ifdef WGL_EXT_display_color_table\n  WGLEW_EXT_display_color_table = _glewSearchExtension(\"WGL_EXT_display_color_table\", extStart, extEnd);\n  if (glewExperimental || WGLEW_EXT_display_color_table|| crippled) WGLEW_EXT_display_color_table= !_glewInit_WGL_EXT_display_color_table();\n#endif /* WGL_EXT_display_color_table */\n#ifdef WGL_EXT_extensions_string\n  WGLEW_EXT_extensions_string = _glewSearchExtension(\"WGL_EXT_extensions_string\", extStart, extEnd);\n  if (glewExperimental || WGLEW_EXT_extensions_string|| crippled) WGLEW_EXT_extensions_string= !_glewInit_WGL_EXT_extensions_string();\n#endif /* WGL_EXT_extensions_string */\n#ifdef WGL_EXT_framebuffer_sRGB\n  WGLEW_EXT_framebuffer_sRGB = _glewSearchExtension(\"WGL_EXT_framebuffer_sRGB\", extStart, extEnd);\n#endif /* WGL_EXT_framebuffer_sRGB */\n#ifdef WGL_EXT_make_current_read\n  WGLEW_EXT_make_current_read = _glewSearchExtension(\"WGL_EXT_make_current_read\", extStart, extEnd);\n  if (glewExperimental || WGLEW_EXT_make_current_read|| crippled) WGLEW_EXT_make_current_read= !_glewInit_WGL_EXT_make_current_read();\n#endif /* WGL_EXT_make_current_read */\n#ifdef WGL_EXT_multisample\n  WGLEW_EXT_multisample = _glewSearchExtension(\"WGL_EXT_multisample\", extStart, extEnd);\n#endif /* WGL_EXT_multisample */\n#ifdef WGL_EXT_pbuffer\n  WGLEW_EXT_pbuffer = _glewSearchExtension(\"WGL_EXT_pbuffer\", extStart, extEnd);\n  if (glewExperimental || WGLEW_EXT_pbuffer|| crippled) WGLEW_EXT_pbuffer= !_glewInit_WGL_EXT_pbuffer();\n#endif /* WGL_EXT_pbuffer */\n#ifdef WGL_EXT_pixel_format\n  WGLEW_EXT_pixel_format = _glewSearchExtension(\"WGL_EXT_pixel_format\", extStart, extEnd);\n  if (glewExperimental || WGLEW_EXT_pixel_format|| crippled) WGLEW_EXT_pixel_format= !_glewInit_WGL_EXT_pixel_format();\n#endif /* WGL_EXT_pixel_format */\n#ifdef WGL_EXT_pixel_format_packed_float\n  WGLEW_EXT_pixel_format_packed_float = _glewSearchExtension(\"WGL_EXT_pixel_format_packed_float\", extStart, extEnd);\n#endif /* WGL_EXT_pixel_format_packed_float */\n#ifdef WGL_EXT_swap_control\n  WGLEW_EXT_swap_control = _glewSearchExtension(\"WGL_EXT_swap_control\", extStart, extEnd);\n  if (glewExperimental || WGLEW_EXT_swap_control|| crippled) WGLEW_EXT_swap_control= !_glewInit_WGL_EXT_swap_control();\n#endif /* WGL_EXT_swap_control */\n#ifdef WGL_EXT_swap_control_tear\n  WGLEW_EXT_swap_control_tear = _glewSearchExtension(\"WGL_EXT_swap_control_tear\", extStart, extEnd);\n#endif /* WGL_EXT_swap_control_tear */\n#ifdef WGL_I3D_digital_video_control\n  WGLEW_I3D_digital_video_control = _glewSearchExtension(\"WGL_I3D_digital_video_control\", extStart, extEnd);\n  if (glewExperimental || WGLEW_I3D_digital_video_control|| crippled) WGLEW_I3D_digital_video_control= !_glewInit_WGL_I3D_digital_video_control();\n#endif /* WGL_I3D_digital_video_control */\n#ifdef WGL_I3D_gamma\n  WGLEW_I3D_gamma = _glewSearchExtension(\"WGL_I3D_gamma\", extStart, extEnd);\n  if (glewExperimental || WGLEW_I3D_gamma|| crippled) WGLEW_I3D_gamma= !_glewInit_WGL_I3D_gamma();\n#endif /* WGL_I3D_gamma */\n#ifdef WGL_I3D_genlock\n  WGLEW_I3D_genlock = _glewSearchExtension(\"WGL_I3D_genlock\", extStart, extEnd);\n  if (glewExperimental || WGLEW_I3D_genlock|| crippled) WGLEW_I3D_genlock= !_glewInit_WGL_I3D_genlock();\n#endif /* WGL_I3D_genlock */\n#ifdef WGL_I3D_image_buffer\n  WGLEW_I3D_image_buffer = _glewSearchExtension(\"WGL_I3D_image_buffer\", extStart, extEnd);\n  if (glewExperimental || WGLEW_I3D_image_buffer|| crippled) WGLEW_I3D_image_buffer= !_glewInit_WGL_I3D_image_buffer();\n#endif /* WGL_I3D_image_buffer */\n#ifdef WGL_I3D_swap_frame_lock\n  WGLEW_I3D_swap_frame_lock = _glewSearchExtension(\"WGL_I3D_swap_frame_lock\", extStart, extEnd);\n  if (glewExperimental || WGLEW_I3D_swap_frame_lock|| crippled) WGLEW_I3D_swap_frame_lock= !_glewInit_WGL_I3D_swap_frame_lock();\n#endif /* WGL_I3D_swap_frame_lock */\n#ifdef WGL_I3D_swap_frame_usage\n  WGLEW_I3D_swap_frame_usage = _glewSearchExtension(\"WGL_I3D_swap_frame_usage\", extStart, extEnd);\n  if (glewExperimental || WGLEW_I3D_swap_frame_usage|| crippled) WGLEW_I3D_swap_frame_usage= !_glewInit_WGL_I3D_swap_frame_usage();\n#endif /* WGL_I3D_swap_frame_usage */\n#ifdef WGL_NV_DX_interop\n  WGLEW_NV_DX_interop = _glewSearchExtension(\"WGL_NV_DX_interop\", extStart, extEnd);\n  if (glewExperimental || WGLEW_NV_DX_interop|| crippled) WGLEW_NV_DX_interop= !_glewInit_WGL_NV_DX_interop();\n#endif /* WGL_NV_DX_interop */\n#ifdef WGL_NV_DX_interop2\n  WGLEW_NV_DX_interop2 = _glewSearchExtension(\"WGL_NV_DX_interop2\", extStart, extEnd);\n#endif /* WGL_NV_DX_interop2 */\n#ifdef WGL_NV_copy_image\n  WGLEW_NV_copy_image = _glewSearchExtension(\"WGL_NV_copy_image\", extStart, extEnd);\n  if (glewExperimental || WGLEW_NV_copy_image|| crippled) WGLEW_NV_copy_image= !_glewInit_WGL_NV_copy_image();\n#endif /* WGL_NV_copy_image */\n#ifdef WGL_NV_delay_before_swap\n  WGLEW_NV_delay_before_swap = _glewSearchExtension(\"WGL_NV_delay_before_swap\", extStart, extEnd);\n  if (glewExperimental || WGLEW_NV_delay_before_swap|| crippled) WGLEW_NV_delay_before_swap= !_glewInit_WGL_NV_delay_before_swap();\n#endif /* WGL_NV_delay_before_swap */\n#ifdef WGL_NV_float_buffer\n  WGLEW_NV_float_buffer = _glewSearchExtension(\"WGL_NV_float_buffer\", extStart, extEnd);\n#endif /* WGL_NV_float_buffer */\n#ifdef WGL_NV_gpu_affinity\n  WGLEW_NV_gpu_affinity = _glewSearchExtension(\"WGL_NV_gpu_affinity\", extStart, extEnd);\n  if (glewExperimental || WGLEW_NV_gpu_affinity|| crippled) WGLEW_NV_gpu_affinity= !_glewInit_WGL_NV_gpu_affinity();\n#endif /* WGL_NV_gpu_affinity */\n#ifdef WGL_NV_multisample_coverage\n  WGLEW_NV_multisample_coverage = _glewSearchExtension(\"WGL_NV_multisample_coverage\", extStart, extEnd);\n#endif /* WGL_NV_multisample_coverage */\n#ifdef WGL_NV_present_video\n  WGLEW_NV_present_video = _glewSearchExtension(\"WGL_NV_present_video\", extStart, extEnd);\n  if (glewExperimental || WGLEW_NV_present_video|| crippled) WGLEW_NV_present_video= !_glewInit_WGL_NV_present_video();\n#endif /* WGL_NV_present_video */\n#ifdef WGL_NV_render_depth_texture\n  WGLEW_NV_render_depth_texture = _glewSearchExtension(\"WGL_NV_render_depth_texture\", extStart, extEnd);\n#endif /* WGL_NV_render_depth_texture */\n#ifdef WGL_NV_render_texture_rectangle\n  WGLEW_NV_render_texture_rectangle = _glewSearchExtension(\"WGL_NV_render_texture_rectangle\", extStart, extEnd);\n#endif /* WGL_NV_render_texture_rectangle */\n#ifdef WGL_NV_swap_group\n  WGLEW_NV_swap_group = _glewSearchExtension(\"WGL_NV_swap_group\", extStart, extEnd);\n  if (glewExperimental || WGLEW_NV_swap_group|| crippled) WGLEW_NV_swap_group= !_glewInit_WGL_NV_swap_group();\n#endif /* WGL_NV_swap_group */\n#ifdef WGL_NV_vertex_array_range\n  WGLEW_NV_vertex_array_range = _glewSearchExtension(\"WGL_NV_vertex_array_range\", extStart, extEnd);\n  if (glewExperimental || WGLEW_NV_vertex_array_range|| crippled) WGLEW_NV_vertex_array_range= !_glewInit_WGL_NV_vertex_array_range();\n#endif /* WGL_NV_vertex_array_range */\n#ifdef WGL_NV_video_capture\n  WGLEW_NV_video_capture = _glewSearchExtension(\"WGL_NV_video_capture\", extStart, extEnd);\n  if (glewExperimental || WGLEW_NV_video_capture|| crippled) WGLEW_NV_video_capture= !_glewInit_WGL_NV_video_capture();\n#endif /* WGL_NV_video_capture */\n#ifdef WGL_NV_video_output\n  WGLEW_NV_video_output = _glewSearchExtension(\"WGL_NV_video_output\", extStart, extEnd);\n  if (glewExperimental || WGLEW_NV_video_output|| crippled) WGLEW_NV_video_output= !_glewInit_WGL_NV_video_output();\n#endif /* WGL_NV_video_output */\n#ifdef WGL_OML_sync_control\n  WGLEW_OML_sync_control = _glewSearchExtension(\"WGL_OML_sync_control\", extStart, extEnd);\n  if (glewExperimental || WGLEW_OML_sync_control|| crippled) WGLEW_OML_sync_control= !_glewInit_WGL_OML_sync_control();\n#endif /* WGL_OML_sync_control */\n\n  return GLEW_OK;\n}\n\n#elif !defined(__ANDROID__) && !defined(__native_client__) && !defined(__HAIKU__) && (!defined(__APPLE__) || defined(GLEW_APPLE_GLX))\n\nPFNGLXGETCURRENTDISPLAYPROC __glewXGetCurrentDisplay = NULL;\n\nPFNGLXCHOOSEFBCONFIGPROC __glewXChooseFBConfig = NULL;\nPFNGLXCREATENEWCONTEXTPROC __glewXCreateNewContext = NULL;\nPFNGLXCREATEPBUFFERPROC __glewXCreatePbuffer = NULL;\nPFNGLXCREATEPIXMAPPROC __glewXCreatePixmap = NULL;\nPFNGLXCREATEWINDOWPROC __glewXCreateWindow = NULL;\nPFNGLXDESTROYPBUFFERPROC __glewXDestroyPbuffer = NULL;\nPFNGLXDESTROYPIXMAPPROC __glewXDestroyPixmap = NULL;\nPFNGLXDESTROYWINDOWPROC __glewXDestroyWindow = NULL;\nPFNGLXGETCURRENTREADDRAWABLEPROC __glewXGetCurrentReadDrawable = NULL;\nPFNGLXGETFBCONFIGATTRIBPROC __glewXGetFBConfigAttrib = NULL;\nPFNGLXGETFBCONFIGSPROC __glewXGetFBConfigs = NULL;\nPFNGLXGETSELECTEDEVENTPROC __glewXGetSelectedEvent = NULL;\nPFNGLXGETVISUALFROMFBCONFIGPROC __glewXGetVisualFromFBConfig = NULL;\nPFNGLXMAKECONTEXTCURRENTPROC __glewXMakeContextCurrent = NULL;\nPFNGLXQUERYCONTEXTPROC __glewXQueryContext = NULL;\nPFNGLXQUERYDRAWABLEPROC __glewXQueryDrawable = NULL;\nPFNGLXSELECTEVENTPROC __glewXSelectEvent = NULL;\n\nPFNGLXBLITCONTEXTFRAMEBUFFERAMDPROC __glewXBlitContextFramebufferAMD = NULL;\nPFNGLXCREATEASSOCIATEDCONTEXTAMDPROC __glewXCreateAssociatedContextAMD = NULL;\nPFNGLXCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC __glewXCreateAssociatedContextAttribsAMD = NULL;\nPFNGLXDELETEASSOCIATEDCONTEXTAMDPROC __glewXDeleteAssociatedContextAMD = NULL;\nPFNGLXGETCONTEXTGPUIDAMDPROC __glewXGetContextGPUIDAMD = NULL;\nPFNGLXGETCURRENTASSOCIATEDCONTEXTAMDPROC __glewXGetCurrentAssociatedContextAMD = NULL;\nPFNGLXGETGPUIDSAMDPROC __glewXGetGPUIDsAMD = NULL;\nPFNGLXGETGPUINFOAMDPROC __glewXGetGPUInfoAMD = NULL;\nPFNGLXMAKEASSOCIATEDCONTEXTCURRENTAMDPROC __glewXMakeAssociatedContextCurrentAMD = NULL;\n\nPFNGLXCREATECONTEXTATTRIBSARBPROC __glewXCreateContextAttribsARB = NULL;\n\nPFNGLXBINDTEXIMAGEATIPROC __glewXBindTexImageATI = NULL;\nPFNGLXDRAWABLEATTRIBATIPROC __glewXDrawableAttribATI = NULL;\nPFNGLXRELEASETEXIMAGEATIPROC __glewXReleaseTexImageATI = NULL;\n\nPFNGLXFREECONTEXTEXTPROC __glewXFreeContextEXT = NULL;\nPFNGLXGETCONTEXTIDEXTPROC __glewXGetContextIDEXT = NULL;\nPFNGLXIMPORTCONTEXTEXTPROC __glewXImportContextEXT = NULL;\nPFNGLXQUERYCONTEXTINFOEXTPROC __glewXQueryContextInfoEXT = NULL;\n\nPFNGLXSWAPINTERVALEXTPROC __glewXSwapIntervalEXT = NULL;\n\nPFNGLXBINDTEXIMAGEEXTPROC __glewXBindTexImageEXT = NULL;\nPFNGLXRELEASETEXIMAGEEXTPROC __glewXReleaseTexImageEXT = NULL;\n\nPFNGLXGETAGPOFFSETMESAPROC __glewXGetAGPOffsetMESA = NULL;\n\nPFNGLXCOPYSUBBUFFERMESAPROC __glewXCopySubBufferMESA = NULL;\n\nPFNGLXCREATEGLXPIXMAPMESAPROC __glewXCreateGLXPixmapMESA = NULL;\n\nPFNGLXQUERYCURRENTRENDERERINTEGERMESAPROC __glewXQueryCurrentRendererIntegerMESA = NULL;\nPFNGLXQUERYCURRENTRENDERERSTRINGMESAPROC __glewXQueryCurrentRendererStringMESA = NULL;\nPFNGLXQUERYRENDERERINTEGERMESAPROC __glewXQueryRendererIntegerMESA = NULL;\nPFNGLXQUERYRENDERERSTRINGMESAPROC __glewXQueryRendererStringMESA = NULL;\n\nPFNGLXRELEASEBUFFERSMESAPROC __glewXReleaseBuffersMESA = NULL;\n\nPFNGLXSET3DFXMODEMESAPROC __glewXSet3DfxModeMESA = NULL;\n\nPFNGLXGETSWAPINTERVALMESAPROC __glewXGetSwapIntervalMESA = NULL;\nPFNGLXSWAPINTERVALMESAPROC __glewXSwapIntervalMESA = NULL;\n\nPFNGLXCOPYBUFFERSUBDATANVPROC __glewXCopyBufferSubDataNV = NULL;\nPFNGLXNAMEDCOPYBUFFERSUBDATANVPROC __glewXNamedCopyBufferSubDataNV = NULL;\n\nPFNGLXCOPYIMAGESUBDATANVPROC __glewXCopyImageSubDataNV = NULL;\n\nPFNGLXDELAYBEFORESWAPNVPROC __glewXDelayBeforeSwapNV = NULL;\n\nPFNGLXBINDVIDEODEVICENVPROC __glewXBindVideoDeviceNV = NULL;\nPFNGLXENUMERATEVIDEODEVICESNVPROC __glewXEnumerateVideoDevicesNV = NULL;\n\nPFNGLXBINDSWAPBARRIERNVPROC __glewXBindSwapBarrierNV = NULL;\nPFNGLXJOINSWAPGROUPNVPROC __glewXJoinSwapGroupNV = NULL;\nPFNGLXQUERYFRAMECOUNTNVPROC __glewXQueryFrameCountNV = NULL;\nPFNGLXQUERYMAXSWAPGROUPSNVPROC __glewXQueryMaxSwapGroupsNV = NULL;\nPFNGLXQUERYSWAPGROUPNVPROC __glewXQuerySwapGroupNV = NULL;\nPFNGLXRESETFRAMECOUNTNVPROC __glewXResetFrameCountNV = NULL;\n\nPFNGLXALLOCATEMEMORYNVPROC __glewXAllocateMemoryNV = NULL;\nPFNGLXFREEMEMORYNVPROC __glewXFreeMemoryNV = NULL;\n\nPFNGLXBINDVIDEOCAPTUREDEVICENVPROC __glewXBindVideoCaptureDeviceNV = NULL;\nPFNGLXENUMERATEVIDEOCAPTUREDEVICESNVPROC __glewXEnumerateVideoCaptureDevicesNV = NULL;\nPFNGLXLOCKVIDEOCAPTUREDEVICENVPROC __glewXLockVideoCaptureDeviceNV = NULL;\nPFNGLXQUERYVIDEOCAPTUREDEVICENVPROC __glewXQueryVideoCaptureDeviceNV = NULL;\nPFNGLXRELEASEVIDEOCAPTUREDEVICENVPROC __glewXReleaseVideoCaptureDeviceNV = NULL;\n\nPFNGLXBINDVIDEOIMAGENVPROC __glewXBindVideoImageNV = NULL;\nPFNGLXGETVIDEODEVICENVPROC __glewXGetVideoDeviceNV = NULL;\nPFNGLXGETVIDEOINFONVPROC __glewXGetVideoInfoNV = NULL;\nPFNGLXRELEASEVIDEODEVICENVPROC __glewXReleaseVideoDeviceNV = NULL;\nPFNGLXRELEASEVIDEOIMAGENVPROC __glewXReleaseVideoImageNV = NULL;\nPFNGLXSENDPBUFFERTOVIDEONVPROC __glewXSendPbufferToVideoNV = NULL;\n\nPFNGLXGETMSCRATEOMLPROC __glewXGetMscRateOML = NULL;\nPFNGLXGETSYNCVALUESOMLPROC __glewXGetSyncValuesOML = NULL;\nPFNGLXSWAPBUFFERSMSCOMLPROC __glewXSwapBuffersMscOML = NULL;\nPFNGLXWAITFORMSCOMLPROC __glewXWaitForMscOML = NULL;\nPFNGLXWAITFORSBCOMLPROC __glewXWaitForSbcOML = NULL;\n\nPFNGLXCHOOSEFBCONFIGSGIXPROC __glewXChooseFBConfigSGIX = NULL;\nPFNGLXCREATECONTEXTWITHCONFIGSGIXPROC __glewXCreateContextWithConfigSGIX = NULL;\nPFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC __glewXCreateGLXPixmapWithConfigSGIX = NULL;\nPFNGLXGETFBCONFIGATTRIBSGIXPROC __glewXGetFBConfigAttribSGIX = NULL;\nPFNGLXGETFBCONFIGFROMVISUALSGIXPROC __glewXGetFBConfigFromVisualSGIX = NULL;\nPFNGLXGETVISUALFROMFBCONFIGSGIXPROC __glewXGetVisualFromFBConfigSGIX = NULL;\n\nPFNGLXBINDHYPERPIPESGIXPROC __glewXBindHyperpipeSGIX = NULL;\nPFNGLXDESTROYHYPERPIPECONFIGSGIXPROC __glewXDestroyHyperpipeConfigSGIX = NULL;\nPFNGLXHYPERPIPEATTRIBSGIXPROC __glewXHyperpipeAttribSGIX = NULL;\nPFNGLXHYPERPIPECONFIGSGIXPROC __glewXHyperpipeConfigSGIX = NULL;\nPFNGLXQUERYHYPERPIPEATTRIBSGIXPROC __glewXQueryHyperpipeAttribSGIX = NULL;\nPFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC __glewXQueryHyperpipeBestAttribSGIX = NULL;\nPFNGLXQUERYHYPERPIPECONFIGSGIXPROC __glewXQueryHyperpipeConfigSGIX = NULL;\nPFNGLXQUERYHYPERPIPENETWORKSGIXPROC __glewXQueryHyperpipeNetworkSGIX = NULL;\n\nPFNGLXCREATEGLXPBUFFERSGIXPROC __glewXCreateGLXPbufferSGIX = NULL;\nPFNGLXDESTROYGLXPBUFFERSGIXPROC __glewXDestroyGLXPbufferSGIX = NULL;\nPFNGLXGETSELECTEDEVENTSGIXPROC __glewXGetSelectedEventSGIX = NULL;\nPFNGLXQUERYGLXPBUFFERSGIXPROC __glewXQueryGLXPbufferSGIX = NULL;\nPFNGLXSELECTEVENTSGIXPROC __glewXSelectEventSGIX = NULL;\n\nPFNGLXBINDSWAPBARRIERSGIXPROC __glewXBindSwapBarrierSGIX = NULL;\nPFNGLXQUERYMAXSWAPBARRIERSSGIXPROC __glewXQueryMaxSwapBarriersSGIX = NULL;\n\nPFNGLXJOINSWAPGROUPSGIXPROC __glewXJoinSwapGroupSGIX = NULL;\n\nPFNGLXBINDCHANNELTOWINDOWSGIXPROC __glewXBindChannelToWindowSGIX = NULL;\nPFNGLXCHANNELRECTSGIXPROC __glewXChannelRectSGIX = NULL;\nPFNGLXCHANNELRECTSYNCSGIXPROC __glewXChannelRectSyncSGIX = NULL;\nPFNGLXQUERYCHANNELDELTASSGIXPROC __glewXQueryChannelDeltasSGIX = NULL;\nPFNGLXQUERYCHANNELRECTSGIXPROC __glewXQueryChannelRectSGIX = NULL;\n\nPFNGLXCUSHIONSGIPROC __glewXCushionSGI = NULL;\n\nPFNGLXGETCURRENTREADDRAWABLESGIPROC __glewXGetCurrentReadDrawableSGI = NULL;\nPFNGLXMAKECURRENTREADSGIPROC __glewXMakeCurrentReadSGI = NULL;\n\nPFNGLXSWAPINTERVALSGIPROC __glewXSwapIntervalSGI = NULL;\n\nPFNGLXGETVIDEOSYNCSGIPROC __glewXGetVideoSyncSGI = NULL;\nPFNGLXWAITVIDEOSYNCSGIPROC __glewXWaitVideoSyncSGI = NULL;\n\nPFNGLXGETTRANSPARENTINDEXSUNPROC __glewXGetTransparentIndexSUN = NULL;\n\nPFNGLXGETVIDEORESIZESUNPROC __glewXGetVideoResizeSUN = NULL;\nPFNGLXVIDEORESIZESUNPROC __glewXVideoResizeSUN = NULL;\n\nGLboolean __GLXEW_VERSION_1_0 = GL_FALSE;\nGLboolean __GLXEW_VERSION_1_1 = GL_FALSE;\nGLboolean __GLXEW_VERSION_1_2 = GL_FALSE;\nGLboolean __GLXEW_VERSION_1_3 = GL_FALSE;\nGLboolean __GLXEW_VERSION_1_4 = GL_FALSE;\nGLboolean __GLXEW_3DFX_multisample = GL_FALSE;\nGLboolean __GLXEW_AMD_gpu_association = GL_FALSE;\nGLboolean __GLXEW_ARB_context_flush_control = GL_FALSE;\nGLboolean __GLXEW_ARB_create_context = GL_FALSE;\nGLboolean __GLXEW_ARB_create_context_profile = GL_FALSE;\nGLboolean __GLXEW_ARB_create_context_robustness = GL_FALSE;\nGLboolean __GLXEW_ARB_fbconfig_float = GL_FALSE;\nGLboolean __GLXEW_ARB_framebuffer_sRGB = GL_FALSE;\nGLboolean __GLXEW_ARB_get_proc_address = GL_FALSE;\nGLboolean __GLXEW_ARB_multisample = GL_FALSE;\nGLboolean __GLXEW_ARB_robustness_application_isolation = GL_FALSE;\nGLboolean __GLXEW_ARB_robustness_share_group_isolation = GL_FALSE;\nGLboolean __GLXEW_ARB_vertex_buffer_object = GL_FALSE;\nGLboolean __GLXEW_ATI_pixel_format_float = GL_FALSE;\nGLboolean __GLXEW_ATI_render_texture = GL_FALSE;\nGLboolean __GLXEW_EXT_buffer_age = GL_FALSE;\nGLboolean __GLXEW_EXT_create_context_es2_profile = GL_FALSE;\nGLboolean __GLXEW_EXT_create_context_es_profile = GL_FALSE;\nGLboolean __GLXEW_EXT_fbconfig_packed_float = GL_FALSE;\nGLboolean __GLXEW_EXT_framebuffer_sRGB = GL_FALSE;\nGLboolean __GLXEW_EXT_import_context = GL_FALSE;\nGLboolean __GLXEW_EXT_libglvnd = GL_FALSE;\nGLboolean __GLXEW_EXT_scene_marker = GL_FALSE;\nGLboolean __GLXEW_EXT_stereo_tree = GL_FALSE;\nGLboolean __GLXEW_EXT_swap_control = GL_FALSE;\nGLboolean __GLXEW_EXT_swap_control_tear = GL_FALSE;\nGLboolean __GLXEW_EXT_texture_from_pixmap = GL_FALSE;\nGLboolean __GLXEW_EXT_visual_info = GL_FALSE;\nGLboolean __GLXEW_EXT_visual_rating = GL_FALSE;\nGLboolean __GLXEW_INTEL_swap_event = GL_FALSE;\nGLboolean __GLXEW_MESA_agp_offset = GL_FALSE;\nGLboolean __GLXEW_MESA_copy_sub_buffer = GL_FALSE;\nGLboolean __GLXEW_MESA_pixmap_colormap = GL_FALSE;\nGLboolean __GLXEW_MESA_query_renderer = GL_FALSE;\nGLboolean __GLXEW_MESA_release_buffers = GL_FALSE;\nGLboolean __GLXEW_MESA_set_3dfx_mode = GL_FALSE;\nGLboolean __GLXEW_MESA_swap_control = GL_FALSE;\nGLboolean __GLXEW_NV_copy_buffer = GL_FALSE;\nGLboolean __GLXEW_NV_copy_image = GL_FALSE;\nGLboolean __GLXEW_NV_delay_before_swap = GL_FALSE;\nGLboolean __GLXEW_NV_float_buffer = GL_FALSE;\nGLboolean __GLXEW_NV_multisample_coverage = GL_FALSE;\nGLboolean __GLXEW_NV_present_video = GL_FALSE;\nGLboolean __GLXEW_NV_robustness_video_memory_purge = GL_FALSE;\nGLboolean __GLXEW_NV_swap_group = GL_FALSE;\nGLboolean __GLXEW_NV_vertex_array_range = GL_FALSE;\nGLboolean __GLXEW_NV_video_capture = GL_FALSE;\nGLboolean __GLXEW_NV_video_out = GL_FALSE;\nGLboolean __GLXEW_OML_swap_method = GL_FALSE;\nGLboolean __GLXEW_OML_sync_control = GL_FALSE;\nGLboolean __GLXEW_SGIS_blended_overlay = GL_FALSE;\nGLboolean __GLXEW_SGIS_color_range = GL_FALSE;\nGLboolean __GLXEW_SGIS_multisample = GL_FALSE;\nGLboolean __GLXEW_SGIS_shared_multisample = GL_FALSE;\nGLboolean __GLXEW_SGIX_fbconfig = GL_FALSE;\nGLboolean __GLXEW_SGIX_hyperpipe = GL_FALSE;\nGLboolean __GLXEW_SGIX_pbuffer = GL_FALSE;\nGLboolean __GLXEW_SGIX_swap_barrier = GL_FALSE;\nGLboolean __GLXEW_SGIX_swap_group = GL_FALSE;\nGLboolean __GLXEW_SGIX_video_resize = GL_FALSE;\nGLboolean __GLXEW_SGIX_visual_select_group = GL_FALSE;\nGLboolean __GLXEW_SGI_cushion = GL_FALSE;\nGLboolean __GLXEW_SGI_make_current_read = GL_FALSE;\nGLboolean __GLXEW_SGI_swap_control = GL_FALSE;\nGLboolean __GLXEW_SGI_video_sync = GL_FALSE;\nGLboolean __GLXEW_SUN_get_transparent_index = GL_FALSE;\nGLboolean __GLXEW_SUN_video_resize = GL_FALSE;\n#ifdef GLX_VERSION_1_2\n\nstatic GLboolean _glewInit_GLX_VERSION_1_2 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXGetCurrentDisplay = (PFNGLXGETCURRENTDISPLAYPROC)glewGetProcAddress((const GLubyte*)\"glXGetCurrentDisplay\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_VERSION_1_2 */\n\n#ifdef GLX_VERSION_1_3\n\nstatic GLboolean _glewInit_GLX_VERSION_1_3 ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXChooseFBConfig = (PFNGLXCHOOSEFBCONFIGPROC)glewGetProcAddress((const GLubyte*)\"glXChooseFBConfig\")) == NULL) || r;\n  r = ((glXCreateNewContext = (PFNGLXCREATENEWCONTEXTPROC)glewGetProcAddress((const GLubyte*)\"glXCreateNewContext\")) == NULL) || r;\n  r = ((glXCreatePbuffer = (PFNGLXCREATEPBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glXCreatePbuffer\")) == NULL) || r;\n  r = ((glXCreatePixmap = (PFNGLXCREATEPIXMAPPROC)glewGetProcAddress((const GLubyte*)\"glXCreatePixmap\")) == NULL) || r;\n  r = ((glXCreateWindow = (PFNGLXCREATEWINDOWPROC)glewGetProcAddress((const GLubyte*)\"glXCreateWindow\")) == NULL) || r;\n  r = ((glXDestroyPbuffer = (PFNGLXDESTROYPBUFFERPROC)glewGetProcAddress((const GLubyte*)\"glXDestroyPbuffer\")) == NULL) || r;\n  r = ((glXDestroyPixmap = (PFNGLXDESTROYPIXMAPPROC)glewGetProcAddress((const GLubyte*)\"glXDestroyPixmap\")) == NULL) || r;\n  r = ((glXDestroyWindow = (PFNGLXDESTROYWINDOWPROC)glewGetProcAddress((const GLubyte*)\"glXDestroyWindow\")) == NULL) || r;\n  r = ((glXGetCurrentReadDrawable = (PFNGLXGETCURRENTREADDRAWABLEPROC)glewGetProcAddress((const GLubyte*)\"glXGetCurrentReadDrawable\")) == NULL) || r;\n  r = ((glXGetFBConfigAttrib = (PFNGLXGETFBCONFIGATTRIBPROC)glewGetProcAddress((const GLubyte*)\"glXGetFBConfigAttrib\")) == NULL) || r;\n  r = ((glXGetFBConfigs = (PFNGLXGETFBCONFIGSPROC)glewGetProcAddress((const GLubyte*)\"glXGetFBConfigs\")) == NULL) || r;\n  r = ((glXGetSelectedEvent = (PFNGLXGETSELECTEDEVENTPROC)glewGetProcAddress((const GLubyte*)\"glXGetSelectedEvent\")) == NULL) || r;\n  r = ((glXGetVisualFromFBConfig = (PFNGLXGETVISUALFROMFBCONFIGPROC)glewGetProcAddress((const GLubyte*)\"glXGetVisualFromFBConfig\")) == NULL) || r;\n  r = ((glXMakeContextCurrent = (PFNGLXMAKECONTEXTCURRENTPROC)glewGetProcAddress((const GLubyte*)\"glXMakeContextCurrent\")) == NULL) || r;\n  r = ((glXQueryContext = (PFNGLXQUERYCONTEXTPROC)glewGetProcAddress((const GLubyte*)\"glXQueryContext\")) == NULL) || r;\n  r = ((glXQueryDrawable = (PFNGLXQUERYDRAWABLEPROC)glewGetProcAddress((const GLubyte*)\"glXQueryDrawable\")) == NULL) || r;\n  r = ((glXSelectEvent = (PFNGLXSELECTEVENTPROC)glewGetProcAddress((const GLubyte*)\"glXSelectEvent\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_VERSION_1_3 */\n\n#ifdef GLX_AMD_gpu_association\n\nstatic GLboolean _glewInit_GLX_AMD_gpu_association ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXBlitContextFramebufferAMD = (PFNGLXBLITCONTEXTFRAMEBUFFERAMDPROC)glewGetProcAddress((const GLubyte*)\"glXBlitContextFramebufferAMD\")) == NULL) || r;\n  r = ((glXCreateAssociatedContextAMD = (PFNGLXCREATEASSOCIATEDCONTEXTAMDPROC)glewGetProcAddress((const GLubyte*)\"glXCreateAssociatedContextAMD\")) == NULL) || r;\n  r = ((glXCreateAssociatedContextAttribsAMD = (PFNGLXCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC)glewGetProcAddress((const GLubyte*)\"glXCreateAssociatedContextAttribsAMD\")) == NULL) || r;\n  r = ((glXDeleteAssociatedContextAMD = (PFNGLXDELETEASSOCIATEDCONTEXTAMDPROC)glewGetProcAddress((const GLubyte*)\"glXDeleteAssociatedContextAMD\")) == NULL) || r;\n  r = ((glXGetContextGPUIDAMD = (PFNGLXGETCONTEXTGPUIDAMDPROC)glewGetProcAddress((const GLubyte*)\"glXGetContextGPUIDAMD\")) == NULL) || r;\n  r = ((glXGetCurrentAssociatedContextAMD = (PFNGLXGETCURRENTASSOCIATEDCONTEXTAMDPROC)glewGetProcAddress((const GLubyte*)\"glXGetCurrentAssociatedContextAMD\")) == NULL) || r;\n  r = ((glXGetGPUIDsAMD = (PFNGLXGETGPUIDSAMDPROC)glewGetProcAddress((const GLubyte*)\"glXGetGPUIDsAMD\")) == NULL) || r;\n  r = ((glXGetGPUInfoAMD = (PFNGLXGETGPUINFOAMDPROC)glewGetProcAddress((const GLubyte*)\"glXGetGPUInfoAMD\")) == NULL) || r;\n  r = ((glXMakeAssociatedContextCurrentAMD = (PFNGLXMAKEASSOCIATEDCONTEXTCURRENTAMDPROC)glewGetProcAddress((const GLubyte*)\"glXMakeAssociatedContextCurrentAMD\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_AMD_gpu_association */\n\n#ifdef GLX_ARB_create_context\n\nstatic GLboolean _glewInit_GLX_ARB_create_context ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXCreateContextAttribsARB = (PFNGLXCREATECONTEXTATTRIBSARBPROC)glewGetProcAddress((const GLubyte*)\"glXCreateContextAttribsARB\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_ARB_create_context */\n\n#ifdef GLX_ATI_render_texture\n\nstatic GLboolean _glewInit_GLX_ATI_render_texture ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXBindTexImageATI = (PFNGLXBINDTEXIMAGEATIPROC)glewGetProcAddress((const GLubyte*)\"glXBindTexImageATI\")) == NULL) || r;\n  r = ((glXDrawableAttribATI = (PFNGLXDRAWABLEATTRIBATIPROC)glewGetProcAddress((const GLubyte*)\"glXDrawableAttribATI\")) == NULL) || r;\n  r = ((glXReleaseTexImageATI = (PFNGLXRELEASETEXIMAGEATIPROC)glewGetProcAddress((const GLubyte*)\"glXReleaseTexImageATI\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_ATI_render_texture */\n\n#ifdef GLX_EXT_import_context\n\nstatic GLboolean _glewInit_GLX_EXT_import_context ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXFreeContextEXT = (PFNGLXFREECONTEXTEXTPROC)glewGetProcAddress((const GLubyte*)\"glXFreeContextEXT\")) == NULL) || r;\n  r = ((glXGetContextIDEXT = (PFNGLXGETCONTEXTIDEXTPROC)glewGetProcAddress((const GLubyte*)\"glXGetContextIDEXT\")) == NULL) || r;\n  r = ((glXImportContextEXT = (PFNGLXIMPORTCONTEXTEXTPROC)glewGetProcAddress((const GLubyte*)\"glXImportContextEXT\")) == NULL) || r;\n  r = ((glXQueryContextInfoEXT = (PFNGLXQUERYCONTEXTINFOEXTPROC)glewGetProcAddress((const GLubyte*)\"glXQueryContextInfoEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_EXT_import_context */\n\n#ifdef GLX_EXT_swap_control\n\nstatic GLboolean _glewInit_GLX_EXT_swap_control ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXSwapIntervalEXT = (PFNGLXSWAPINTERVALEXTPROC)glewGetProcAddress((const GLubyte*)\"glXSwapIntervalEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_EXT_swap_control */\n\n#ifdef GLX_EXT_texture_from_pixmap\n\nstatic GLboolean _glewInit_GLX_EXT_texture_from_pixmap ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXBindTexImageEXT = (PFNGLXBINDTEXIMAGEEXTPROC)glewGetProcAddress((const GLubyte*)\"glXBindTexImageEXT\")) == NULL) || r;\n  r = ((glXReleaseTexImageEXT = (PFNGLXRELEASETEXIMAGEEXTPROC)glewGetProcAddress((const GLubyte*)\"glXReleaseTexImageEXT\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_EXT_texture_from_pixmap */\n\n#ifdef GLX_MESA_agp_offset\n\nstatic GLboolean _glewInit_GLX_MESA_agp_offset ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXGetAGPOffsetMESA = (PFNGLXGETAGPOFFSETMESAPROC)glewGetProcAddress((const GLubyte*)\"glXGetAGPOffsetMESA\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_MESA_agp_offset */\n\n#ifdef GLX_MESA_copy_sub_buffer\n\nstatic GLboolean _glewInit_GLX_MESA_copy_sub_buffer ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXCopySubBufferMESA = (PFNGLXCOPYSUBBUFFERMESAPROC)glewGetProcAddress((const GLubyte*)\"glXCopySubBufferMESA\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_MESA_copy_sub_buffer */\n\n#ifdef GLX_MESA_pixmap_colormap\n\nstatic GLboolean _glewInit_GLX_MESA_pixmap_colormap ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXCreateGLXPixmapMESA = (PFNGLXCREATEGLXPIXMAPMESAPROC)glewGetProcAddress((const GLubyte*)\"glXCreateGLXPixmapMESA\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_MESA_pixmap_colormap */\n\n#ifdef GLX_MESA_query_renderer\n\nstatic GLboolean _glewInit_GLX_MESA_query_renderer ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXQueryCurrentRendererIntegerMESA = (PFNGLXQUERYCURRENTRENDERERINTEGERMESAPROC)glewGetProcAddress((const GLubyte*)\"glXQueryCurrentRendererIntegerMESA\")) == NULL) || r;\n  r = ((glXQueryCurrentRendererStringMESA = (PFNGLXQUERYCURRENTRENDERERSTRINGMESAPROC)glewGetProcAddress((const GLubyte*)\"glXQueryCurrentRendererStringMESA\")) == NULL) || r;\n  r = ((glXQueryRendererIntegerMESA = (PFNGLXQUERYRENDERERINTEGERMESAPROC)glewGetProcAddress((const GLubyte*)\"glXQueryRendererIntegerMESA\")) == NULL) || r;\n  r = ((glXQueryRendererStringMESA = (PFNGLXQUERYRENDERERSTRINGMESAPROC)glewGetProcAddress((const GLubyte*)\"glXQueryRendererStringMESA\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_MESA_query_renderer */\n\n#ifdef GLX_MESA_release_buffers\n\nstatic GLboolean _glewInit_GLX_MESA_release_buffers ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXReleaseBuffersMESA = (PFNGLXRELEASEBUFFERSMESAPROC)glewGetProcAddress((const GLubyte*)\"glXReleaseBuffersMESA\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_MESA_release_buffers */\n\n#ifdef GLX_MESA_set_3dfx_mode\n\nstatic GLboolean _glewInit_GLX_MESA_set_3dfx_mode ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXSet3DfxModeMESA = (PFNGLXSET3DFXMODEMESAPROC)glewGetProcAddress((const GLubyte*)\"glXSet3DfxModeMESA\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_MESA_set_3dfx_mode */\n\n#ifdef GLX_MESA_swap_control\n\nstatic GLboolean _glewInit_GLX_MESA_swap_control ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXGetSwapIntervalMESA = (PFNGLXGETSWAPINTERVALMESAPROC)glewGetProcAddress((const GLubyte*)\"glXGetSwapIntervalMESA\")) == NULL) || r;\n  r = ((glXSwapIntervalMESA = (PFNGLXSWAPINTERVALMESAPROC)glewGetProcAddress((const GLubyte*)\"glXSwapIntervalMESA\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_MESA_swap_control */\n\n#ifdef GLX_NV_copy_buffer\n\nstatic GLboolean _glewInit_GLX_NV_copy_buffer ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXCopyBufferSubDataNV = (PFNGLXCOPYBUFFERSUBDATANVPROC)glewGetProcAddress((const GLubyte*)\"glXCopyBufferSubDataNV\")) == NULL) || r;\n  r = ((glXNamedCopyBufferSubDataNV = (PFNGLXNAMEDCOPYBUFFERSUBDATANVPROC)glewGetProcAddress((const GLubyte*)\"glXNamedCopyBufferSubDataNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_NV_copy_buffer */\n\n#ifdef GLX_NV_copy_image\n\nstatic GLboolean _glewInit_GLX_NV_copy_image ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXCopyImageSubDataNV = (PFNGLXCOPYIMAGESUBDATANVPROC)glewGetProcAddress((const GLubyte*)\"glXCopyImageSubDataNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_NV_copy_image */\n\n#ifdef GLX_NV_delay_before_swap\n\nstatic GLboolean _glewInit_GLX_NV_delay_before_swap ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXDelayBeforeSwapNV = (PFNGLXDELAYBEFORESWAPNVPROC)glewGetProcAddress((const GLubyte*)\"glXDelayBeforeSwapNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_NV_delay_before_swap */\n\n#ifdef GLX_NV_present_video\n\nstatic GLboolean _glewInit_GLX_NV_present_video ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXBindVideoDeviceNV = (PFNGLXBINDVIDEODEVICENVPROC)glewGetProcAddress((const GLubyte*)\"glXBindVideoDeviceNV\")) == NULL) || r;\n  r = ((glXEnumerateVideoDevicesNV = (PFNGLXENUMERATEVIDEODEVICESNVPROC)glewGetProcAddress((const GLubyte*)\"glXEnumerateVideoDevicesNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_NV_present_video */\n\n#ifdef GLX_NV_swap_group\n\nstatic GLboolean _glewInit_GLX_NV_swap_group ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXBindSwapBarrierNV = (PFNGLXBINDSWAPBARRIERNVPROC)glewGetProcAddress((const GLubyte*)\"glXBindSwapBarrierNV\")) == NULL) || r;\n  r = ((glXJoinSwapGroupNV = (PFNGLXJOINSWAPGROUPNVPROC)glewGetProcAddress((const GLubyte*)\"glXJoinSwapGroupNV\")) == NULL) || r;\n  r = ((glXQueryFrameCountNV = (PFNGLXQUERYFRAMECOUNTNVPROC)glewGetProcAddress((const GLubyte*)\"glXQueryFrameCountNV\")) == NULL) || r;\n  r = ((glXQueryMaxSwapGroupsNV = (PFNGLXQUERYMAXSWAPGROUPSNVPROC)glewGetProcAddress((const GLubyte*)\"glXQueryMaxSwapGroupsNV\")) == NULL) || r;\n  r = ((glXQuerySwapGroupNV = (PFNGLXQUERYSWAPGROUPNVPROC)glewGetProcAddress((const GLubyte*)\"glXQuerySwapGroupNV\")) == NULL) || r;\n  r = ((glXResetFrameCountNV = (PFNGLXRESETFRAMECOUNTNVPROC)glewGetProcAddress((const GLubyte*)\"glXResetFrameCountNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_NV_swap_group */\n\n#ifdef GLX_NV_vertex_array_range\n\nstatic GLboolean _glewInit_GLX_NV_vertex_array_range ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXAllocateMemoryNV = (PFNGLXALLOCATEMEMORYNVPROC)glewGetProcAddress((const GLubyte*)\"glXAllocateMemoryNV\")) == NULL) || r;\n  r = ((glXFreeMemoryNV = (PFNGLXFREEMEMORYNVPROC)glewGetProcAddress((const GLubyte*)\"glXFreeMemoryNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_NV_vertex_array_range */\n\n#ifdef GLX_NV_video_capture\n\nstatic GLboolean _glewInit_GLX_NV_video_capture ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXBindVideoCaptureDeviceNV = (PFNGLXBINDVIDEOCAPTUREDEVICENVPROC)glewGetProcAddress((const GLubyte*)\"glXBindVideoCaptureDeviceNV\")) == NULL) || r;\n  r = ((glXEnumerateVideoCaptureDevicesNV = (PFNGLXENUMERATEVIDEOCAPTUREDEVICESNVPROC)glewGetProcAddress((const GLubyte*)\"glXEnumerateVideoCaptureDevicesNV\")) == NULL) || r;\n  r = ((glXLockVideoCaptureDeviceNV = (PFNGLXLOCKVIDEOCAPTUREDEVICENVPROC)glewGetProcAddress((const GLubyte*)\"glXLockVideoCaptureDeviceNV\")) == NULL) || r;\n  r = ((glXQueryVideoCaptureDeviceNV = (PFNGLXQUERYVIDEOCAPTUREDEVICENVPROC)glewGetProcAddress((const GLubyte*)\"glXQueryVideoCaptureDeviceNV\")) == NULL) || r;\n  r = ((glXReleaseVideoCaptureDeviceNV = (PFNGLXRELEASEVIDEOCAPTUREDEVICENVPROC)glewGetProcAddress((const GLubyte*)\"glXReleaseVideoCaptureDeviceNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_NV_video_capture */\n\n#ifdef GLX_NV_video_out\n\nstatic GLboolean _glewInit_GLX_NV_video_out ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXBindVideoImageNV = (PFNGLXBINDVIDEOIMAGENVPROC)glewGetProcAddress((const GLubyte*)\"glXBindVideoImageNV\")) == NULL) || r;\n  r = ((glXGetVideoDeviceNV = (PFNGLXGETVIDEODEVICENVPROC)glewGetProcAddress((const GLubyte*)\"glXGetVideoDeviceNV\")) == NULL) || r;\n  r = ((glXGetVideoInfoNV = (PFNGLXGETVIDEOINFONVPROC)glewGetProcAddress((const GLubyte*)\"glXGetVideoInfoNV\")) == NULL) || r;\n  r = ((glXReleaseVideoDeviceNV = (PFNGLXRELEASEVIDEODEVICENVPROC)glewGetProcAddress((const GLubyte*)\"glXReleaseVideoDeviceNV\")) == NULL) || r;\n  r = ((glXReleaseVideoImageNV = (PFNGLXRELEASEVIDEOIMAGENVPROC)glewGetProcAddress((const GLubyte*)\"glXReleaseVideoImageNV\")) == NULL) || r;\n  r = ((glXSendPbufferToVideoNV = (PFNGLXSENDPBUFFERTOVIDEONVPROC)glewGetProcAddress((const GLubyte*)\"glXSendPbufferToVideoNV\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_NV_video_out */\n\n#ifdef GLX_OML_sync_control\n\nstatic GLboolean _glewInit_GLX_OML_sync_control ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXGetMscRateOML = (PFNGLXGETMSCRATEOMLPROC)glewGetProcAddress((const GLubyte*)\"glXGetMscRateOML\")) == NULL) || r;\n  r = ((glXGetSyncValuesOML = (PFNGLXGETSYNCVALUESOMLPROC)glewGetProcAddress((const GLubyte*)\"glXGetSyncValuesOML\")) == NULL) || r;\n  r = ((glXSwapBuffersMscOML = (PFNGLXSWAPBUFFERSMSCOMLPROC)glewGetProcAddress((const GLubyte*)\"glXSwapBuffersMscOML\")) == NULL) || r;\n  r = ((glXWaitForMscOML = (PFNGLXWAITFORMSCOMLPROC)glewGetProcAddress((const GLubyte*)\"glXWaitForMscOML\")) == NULL) || r;\n  r = ((glXWaitForSbcOML = (PFNGLXWAITFORSBCOMLPROC)glewGetProcAddress((const GLubyte*)\"glXWaitForSbcOML\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_OML_sync_control */\n\n#ifdef GLX_SGIX_fbconfig\n\nstatic GLboolean _glewInit_GLX_SGIX_fbconfig ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXChooseFBConfigSGIX = (PFNGLXCHOOSEFBCONFIGSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXChooseFBConfigSGIX\")) == NULL) || r;\n  r = ((glXCreateContextWithConfigSGIX = (PFNGLXCREATECONTEXTWITHCONFIGSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXCreateContextWithConfigSGIX\")) == NULL) || r;\n  r = ((glXCreateGLXPixmapWithConfigSGIX = (PFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXCreateGLXPixmapWithConfigSGIX\")) == NULL) || r;\n  r = ((glXGetFBConfigAttribSGIX = (PFNGLXGETFBCONFIGATTRIBSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXGetFBConfigAttribSGIX\")) == NULL) || r;\n  r = ((glXGetFBConfigFromVisualSGIX = (PFNGLXGETFBCONFIGFROMVISUALSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXGetFBConfigFromVisualSGIX\")) == NULL) || r;\n  r = ((glXGetVisualFromFBConfigSGIX = (PFNGLXGETVISUALFROMFBCONFIGSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXGetVisualFromFBConfigSGIX\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_SGIX_fbconfig */\n\n#ifdef GLX_SGIX_hyperpipe\n\nstatic GLboolean _glewInit_GLX_SGIX_hyperpipe ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXBindHyperpipeSGIX = (PFNGLXBINDHYPERPIPESGIXPROC)glewGetProcAddress((const GLubyte*)\"glXBindHyperpipeSGIX\")) == NULL) || r;\n  r = ((glXDestroyHyperpipeConfigSGIX = (PFNGLXDESTROYHYPERPIPECONFIGSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXDestroyHyperpipeConfigSGIX\")) == NULL) || r;\n  r = ((glXHyperpipeAttribSGIX = (PFNGLXHYPERPIPEATTRIBSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXHyperpipeAttribSGIX\")) == NULL) || r;\n  r = ((glXHyperpipeConfigSGIX = (PFNGLXHYPERPIPECONFIGSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXHyperpipeConfigSGIX\")) == NULL) || r;\n  r = ((glXQueryHyperpipeAttribSGIX = (PFNGLXQUERYHYPERPIPEATTRIBSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXQueryHyperpipeAttribSGIX\")) == NULL) || r;\n  r = ((glXQueryHyperpipeBestAttribSGIX = (PFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXQueryHyperpipeBestAttribSGIX\")) == NULL) || r;\n  r = ((glXQueryHyperpipeConfigSGIX = (PFNGLXQUERYHYPERPIPECONFIGSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXQueryHyperpipeConfigSGIX\")) == NULL) || r;\n  r = ((glXQueryHyperpipeNetworkSGIX = (PFNGLXQUERYHYPERPIPENETWORKSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXQueryHyperpipeNetworkSGIX\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_SGIX_hyperpipe */\n\n#ifdef GLX_SGIX_pbuffer\n\nstatic GLboolean _glewInit_GLX_SGIX_pbuffer ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXCreateGLXPbufferSGIX = (PFNGLXCREATEGLXPBUFFERSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXCreateGLXPbufferSGIX\")) == NULL) || r;\n  r = ((glXDestroyGLXPbufferSGIX = (PFNGLXDESTROYGLXPBUFFERSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXDestroyGLXPbufferSGIX\")) == NULL) || r;\n  r = ((glXGetSelectedEventSGIX = (PFNGLXGETSELECTEDEVENTSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXGetSelectedEventSGIX\")) == NULL) || r;\n  r = ((glXQueryGLXPbufferSGIX = (PFNGLXQUERYGLXPBUFFERSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXQueryGLXPbufferSGIX\")) == NULL) || r;\n  r = ((glXSelectEventSGIX = (PFNGLXSELECTEVENTSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXSelectEventSGIX\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_SGIX_pbuffer */\n\n#ifdef GLX_SGIX_swap_barrier\n\nstatic GLboolean _glewInit_GLX_SGIX_swap_barrier ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXBindSwapBarrierSGIX = (PFNGLXBINDSWAPBARRIERSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXBindSwapBarrierSGIX\")) == NULL) || r;\n  r = ((glXQueryMaxSwapBarriersSGIX = (PFNGLXQUERYMAXSWAPBARRIERSSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXQueryMaxSwapBarriersSGIX\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_SGIX_swap_barrier */\n\n#ifdef GLX_SGIX_swap_group\n\nstatic GLboolean _glewInit_GLX_SGIX_swap_group ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXJoinSwapGroupSGIX = (PFNGLXJOINSWAPGROUPSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXJoinSwapGroupSGIX\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_SGIX_swap_group */\n\n#ifdef GLX_SGIX_video_resize\n\nstatic GLboolean _glewInit_GLX_SGIX_video_resize ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXBindChannelToWindowSGIX = (PFNGLXBINDCHANNELTOWINDOWSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXBindChannelToWindowSGIX\")) == NULL) || r;\n  r = ((glXChannelRectSGIX = (PFNGLXCHANNELRECTSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXChannelRectSGIX\")) == NULL) || r;\n  r = ((glXChannelRectSyncSGIX = (PFNGLXCHANNELRECTSYNCSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXChannelRectSyncSGIX\")) == NULL) || r;\n  r = ((glXQueryChannelDeltasSGIX = (PFNGLXQUERYCHANNELDELTASSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXQueryChannelDeltasSGIX\")) == NULL) || r;\n  r = ((glXQueryChannelRectSGIX = (PFNGLXQUERYCHANNELRECTSGIXPROC)glewGetProcAddress((const GLubyte*)\"glXQueryChannelRectSGIX\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_SGIX_video_resize */\n\n#ifdef GLX_SGI_cushion\n\nstatic GLboolean _glewInit_GLX_SGI_cushion ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXCushionSGI = (PFNGLXCUSHIONSGIPROC)glewGetProcAddress((const GLubyte*)\"glXCushionSGI\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_SGI_cushion */\n\n#ifdef GLX_SGI_make_current_read\n\nstatic GLboolean _glewInit_GLX_SGI_make_current_read ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXGetCurrentReadDrawableSGI = (PFNGLXGETCURRENTREADDRAWABLESGIPROC)glewGetProcAddress((const GLubyte*)\"glXGetCurrentReadDrawableSGI\")) == NULL) || r;\n  r = ((glXMakeCurrentReadSGI = (PFNGLXMAKECURRENTREADSGIPROC)glewGetProcAddress((const GLubyte*)\"glXMakeCurrentReadSGI\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_SGI_make_current_read */\n\n#ifdef GLX_SGI_swap_control\n\nstatic GLboolean _glewInit_GLX_SGI_swap_control ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXSwapIntervalSGI = (PFNGLXSWAPINTERVALSGIPROC)glewGetProcAddress((const GLubyte*)\"glXSwapIntervalSGI\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_SGI_swap_control */\n\n#ifdef GLX_SGI_video_sync\n\nstatic GLboolean _glewInit_GLX_SGI_video_sync ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXGetVideoSyncSGI = (PFNGLXGETVIDEOSYNCSGIPROC)glewGetProcAddress((const GLubyte*)\"glXGetVideoSyncSGI\")) == NULL) || r;\n  r = ((glXWaitVideoSyncSGI = (PFNGLXWAITVIDEOSYNCSGIPROC)glewGetProcAddress((const GLubyte*)\"glXWaitVideoSyncSGI\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_SGI_video_sync */\n\n#ifdef GLX_SUN_get_transparent_index\n\nstatic GLboolean _glewInit_GLX_SUN_get_transparent_index ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXGetTransparentIndexSUN = (PFNGLXGETTRANSPARENTINDEXSUNPROC)glewGetProcAddress((const GLubyte*)\"glXGetTransparentIndexSUN\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_SUN_get_transparent_index */\n\n#ifdef GLX_SUN_video_resize\n\nstatic GLboolean _glewInit_GLX_SUN_video_resize ()\n{\n  GLboolean r = GL_FALSE;\n\n  r = ((glXGetVideoResizeSUN = (PFNGLXGETVIDEORESIZESUNPROC)glewGetProcAddress((const GLubyte*)\"glXGetVideoResizeSUN\")) == NULL) || r;\n  r = ((glXVideoResizeSUN = (PFNGLXVIDEORESIZESUNPROC)glewGetProcAddress((const GLubyte*)\"glXVideoResizeSUN\")) == NULL) || r;\n\n  return r;\n}\n\n#endif /* GLX_SUN_video_resize */\n\n/* ------------------------------------------------------------------------ */\n\nGLboolean glxewGetExtension (const char* name)\n{    \n  const GLubyte* start;\n  const GLubyte* end;\n\n  if (glXGetCurrentDisplay == NULL) return GL_FALSE;\n  start = (const GLubyte*)glXGetClientString(glXGetCurrentDisplay(), GLX_EXTENSIONS);\n  if (0 == start) return GL_FALSE;\n  end = start + _glewStrLen(start);\n  return _glewSearchExtension(name, start, end);\n}\n\nGLenum glxewInit ()\n{\n  int major, minor;\n  const GLubyte* extStart;\n  const GLubyte* extEnd;\n  /* initialize core GLX 1.2 */\n  if (_glewInit_GLX_VERSION_1_2()) return GLEW_ERROR_GLX_VERSION_11_ONLY;\n  /* initialize flags */\n  GLXEW_VERSION_1_0 = GL_TRUE;\n  GLXEW_VERSION_1_1 = GL_TRUE;\n  GLXEW_VERSION_1_2 = GL_TRUE;\n  GLXEW_VERSION_1_3 = GL_TRUE;\n  GLXEW_VERSION_1_4 = GL_TRUE;\n  /* query GLX version */\n  glXQueryVersion(glXGetCurrentDisplay(), &major, &minor);\n  if (major == 1 && minor <= 3)\n  {\n    switch (minor)\n    {\n      case 3:\n      GLXEW_VERSION_1_4 = GL_FALSE;\n      break;\n      case 2:\n      GLXEW_VERSION_1_4 = GL_FALSE;\n      GLXEW_VERSION_1_3 = GL_FALSE;\n      break;\n      default:\n      return GLEW_ERROR_GLX_VERSION_11_ONLY;\n      break;\n    }\n  }\n  /* query GLX extension string */\n  extStart = 0;\n  if (glXGetCurrentDisplay != NULL)\n    extStart = (const GLubyte*)glXGetClientString(glXGetCurrentDisplay(), GLX_EXTENSIONS);\n  if (extStart == 0)\n    extStart = (const GLubyte *)\"\";\n  extEnd = extStart + _glewStrLen(extStart);\n  /* initialize extensions */\n#ifdef GLX_VERSION_1_3\n  if (glewExperimental || GLXEW_VERSION_1_3) GLXEW_VERSION_1_3 = !_glewInit_GLX_VERSION_1_3();\n#endif /* GLX_VERSION_1_3 */\n#ifdef GLX_3DFX_multisample\n  GLXEW_3DFX_multisample = _glewSearchExtension(\"GLX_3DFX_multisample\", extStart, extEnd);\n#endif /* GLX_3DFX_multisample */\n#ifdef GLX_AMD_gpu_association\n  GLXEW_AMD_gpu_association = _glewSearchExtension(\"GLX_AMD_gpu_association\", extStart, extEnd);\n  if (glewExperimental || GLXEW_AMD_gpu_association) GLXEW_AMD_gpu_association = !_glewInit_GLX_AMD_gpu_association();\n#endif /* GLX_AMD_gpu_association */\n#ifdef GLX_ARB_context_flush_control\n  GLXEW_ARB_context_flush_control = _glewSearchExtension(\"GLX_ARB_context_flush_control\", extStart, extEnd);\n#endif /* GLX_ARB_context_flush_control */\n#ifdef GLX_ARB_create_context\n  GLXEW_ARB_create_context = _glewSearchExtension(\"GLX_ARB_create_context\", extStart, extEnd);\n  if (glewExperimental || GLXEW_ARB_create_context) GLXEW_ARB_create_context = !_glewInit_GLX_ARB_create_context();\n#endif /* GLX_ARB_create_context */\n#ifdef GLX_ARB_create_context_profile\n  GLXEW_ARB_create_context_profile = _glewSearchExtension(\"GLX_ARB_create_context_profile\", extStart, extEnd);\n#endif /* GLX_ARB_create_context_profile */\n#ifdef GLX_ARB_create_context_robustness\n  GLXEW_ARB_create_context_robustness = _glewSearchExtension(\"GLX_ARB_create_context_robustness\", extStart, extEnd);\n#endif /* GLX_ARB_create_context_robustness */\n#ifdef GLX_ARB_fbconfig_float\n  GLXEW_ARB_fbconfig_float = _glewSearchExtension(\"GLX_ARB_fbconfig_float\", extStart, extEnd);\n#endif /* GLX_ARB_fbconfig_float */\n#ifdef GLX_ARB_framebuffer_sRGB\n  GLXEW_ARB_framebuffer_sRGB = _glewSearchExtension(\"GLX_ARB_framebuffer_sRGB\", extStart, extEnd);\n#endif /* GLX_ARB_framebuffer_sRGB */\n#ifdef GLX_ARB_get_proc_address\n  GLXEW_ARB_get_proc_address = _glewSearchExtension(\"GLX_ARB_get_proc_address\", extStart, extEnd);\n#endif /* GLX_ARB_get_proc_address */\n#ifdef GLX_ARB_multisample\n  GLXEW_ARB_multisample = _glewSearchExtension(\"GLX_ARB_multisample\", extStart, extEnd);\n#endif /* GLX_ARB_multisample */\n#ifdef GLX_ARB_robustness_application_isolation\n  GLXEW_ARB_robustness_application_isolation = _glewSearchExtension(\"GLX_ARB_robustness_application_isolation\", extStart, extEnd);\n#endif /* GLX_ARB_robustness_application_isolation */\n#ifdef GLX_ARB_robustness_share_group_isolation\n  GLXEW_ARB_robustness_share_group_isolation = _glewSearchExtension(\"GLX_ARB_robustness_share_group_isolation\", extStart, extEnd);\n#endif /* GLX_ARB_robustness_share_group_isolation */\n#ifdef GLX_ARB_vertex_buffer_object\n  GLXEW_ARB_vertex_buffer_object = _glewSearchExtension(\"GLX_ARB_vertex_buffer_object\", extStart, extEnd);\n#endif /* GLX_ARB_vertex_buffer_object */\n#ifdef GLX_ATI_pixel_format_float\n  GLXEW_ATI_pixel_format_float = _glewSearchExtension(\"GLX_ATI_pixel_format_float\", extStart, extEnd);\n#endif /* GLX_ATI_pixel_format_float */\n#ifdef GLX_ATI_render_texture\n  GLXEW_ATI_render_texture = _glewSearchExtension(\"GLX_ATI_render_texture\", extStart, extEnd);\n  if (glewExperimental || GLXEW_ATI_render_texture) GLXEW_ATI_render_texture = !_glewInit_GLX_ATI_render_texture();\n#endif /* GLX_ATI_render_texture */\n#ifdef GLX_EXT_buffer_age\n  GLXEW_EXT_buffer_age = _glewSearchExtension(\"GLX_EXT_buffer_age\", extStart, extEnd);\n#endif /* GLX_EXT_buffer_age */\n#ifdef GLX_EXT_create_context_es2_profile\n  GLXEW_EXT_create_context_es2_profile = _glewSearchExtension(\"GLX_EXT_create_context_es2_profile\", extStart, extEnd);\n#endif /* GLX_EXT_create_context_es2_profile */\n#ifdef GLX_EXT_create_context_es_profile\n  GLXEW_EXT_create_context_es_profile = _glewSearchExtension(\"GLX_EXT_create_context_es_profile\", extStart, extEnd);\n#endif /* GLX_EXT_create_context_es_profile */\n#ifdef GLX_EXT_fbconfig_packed_float\n  GLXEW_EXT_fbconfig_packed_float = _glewSearchExtension(\"GLX_EXT_fbconfig_packed_float\", extStart, extEnd);\n#endif /* GLX_EXT_fbconfig_packed_float */\n#ifdef GLX_EXT_framebuffer_sRGB\n  GLXEW_EXT_framebuffer_sRGB = _glewSearchExtension(\"GLX_EXT_framebuffer_sRGB\", extStart, extEnd);\n#endif /* GLX_EXT_framebuffer_sRGB */\n#ifdef GLX_EXT_import_context\n  GLXEW_EXT_import_context = _glewSearchExtension(\"GLX_EXT_import_context\", extStart, extEnd);\n  if (glewExperimental || GLXEW_EXT_import_context) GLXEW_EXT_import_context = !_glewInit_GLX_EXT_import_context();\n#endif /* GLX_EXT_import_context */\n#ifdef GLX_EXT_libglvnd\n  GLXEW_EXT_libglvnd = _glewSearchExtension(\"GLX_EXT_libglvnd\", extStart, extEnd);\n#endif /* GLX_EXT_libglvnd */\n#ifdef GLX_EXT_scene_marker\n  GLXEW_EXT_scene_marker = _glewSearchExtension(\"GLX_EXT_scene_marker\", extStart, extEnd);\n#endif /* GLX_EXT_scene_marker */\n#ifdef GLX_EXT_stereo_tree\n  GLXEW_EXT_stereo_tree = _glewSearchExtension(\"GLX_EXT_stereo_tree\", extStart, extEnd);\n#endif /* GLX_EXT_stereo_tree */\n#ifdef GLX_EXT_swap_control\n  GLXEW_EXT_swap_control = _glewSearchExtension(\"GLX_EXT_swap_control\", extStart, extEnd);\n  if (glewExperimental || GLXEW_EXT_swap_control) GLXEW_EXT_swap_control = !_glewInit_GLX_EXT_swap_control();\n#endif /* GLX_EXT_swap_control */\n#ifdef GLX_EXT_swap_control_tear\n  GLXEW_EXT_swap_control_tear = _glewSearchExtension(\"GLX_EXT_swap_control_tear\", extStart, extEnd);\n#endif /* GLX_EXT_swap_control_tear */\n#ifdef GLX_EXT_texture_from_pixmap\n  GLXEW_EXT_texture_from_pixmap = _glewSearchExtension(\"GLX_EXT_texture_from_pixmap\", extStart, extEnd);\n  if (glewExperimental || GLXEW_EXT_texture_from_pixmap) GLXEW_EXT_texture_from_pixmap = !_glewInit_GLX_EXT_texture_from_pixmap();\n#endif /* GLX_EXT_texture_from_pixmap */\n#ifdef GLX_EXT_visual_info\n  GLXEW_EXT_visual_info = _glewSearchExtension(\"GLX_EXT_visual_info\", extStart, extEnd);\n#endif /* GLX_EXT_visual_info */\n#ifdef GLX_EXT_visual_rating\n  GLXEW_EXT_visual_rating = _glewSearchExtension(\"GLX_EXT_visual_rating\", extStart, extEnd);\n#endif /* GLX_EXT_visual_rating */\n#ifdef GLX_INTEL_swap_event\n  GLXEW_INTEL_swap_event = _glewSearchExtension(\"GLX_INTEL_swap_event\", extStart, extEnd);\n#endif /* GLX_INTEL_swap_event */\n#ifdef GLX_MESA_agp_offset\n  GLXEW_MESA_agp_offset = _glewSearchExtension(\"GLX_MESA_agp_offset\", extStart, extEnd);\n  if (glewExperimental || GLXEW_MESA_agp_offset) GLXEW_MESA_agp_offset = !_glewInit_GLX_MESA_agp_offset();\n#endif /* GLX_MESA_agp_offset */\n#ifdef GLX_MESA_copy_sub_buffer\n  GLXEW_MESA_copy_sub_buffer = _glewSearchExtension(\"GLX_MESA_copy_sub_buffer\", extStart, extEnd);\n  if (glewExperimental || GLXEW_MESA_copy_sub_buffer) GLXEW_MESA_copy_sub_buffer = !_glewInit_GLX_MESA_copy_sub_buffer();\n#endif /* GLX_MESA_copy_sub_buffer */\n#ifdef GLX_MESA_pixmap_colormap\n  GLXEW_MESA_pixmap_colormap = _glewSearchExtension(\"GLX_MESA_pixmap_colormap\", extStart, extEnd);\n  if (glewExperimental || GLXEW_MESA_pixmap_colormap) GLXEW_MESA_pixmap_colormap = !_glewInit_GLX_MESA_pixmap_colormap();\n#endif /* GLX_MESA_pixmap_colormap */\n#ifdef GLX_MESA_query_renderer\n  GLXEW_MESA_query_renderer = _glewSearchExtension(\"GLX_MESA_query_renderer\", extStart, extEnd);\n  if (glewExperimental || GLXEW_MESA_query_renderer) GLXEW_MESA_query_renderer = !_glewInit_GLX_MESA_query_renderer();\n#endif /* GLX_MESA_query_renderer */\n#ifdef GLX_MESA_release_buffers\n  GLXEW_MESA_release_buffers = _glewSearchExtension(\"GLX_MESA_release_buffers\", extStart, extEnd);\n  if (glewExperimental || GLXEW_MESA_release_buffers) GLXEW_MESA_release_buffers = !_glewInit_GLX_MESA_release_buffers();\n#endif /* GLX_MESA_release_buffers */\n#ifdef GLX_MESA_set_3dfx_mode\n  GLXEW_MESA_set_3dfx_mode = _glewSearchExtension(\"GLX_MESA_set_3dfx_mode\", extStart, extEnd);\n  if (glewExperimental || GLXEW_MESA_set_3dfx_mode) GLXEW_MESA_set_3dfx_mode = !_glewInit_GLX_MESA_set_3dfx_mode();\n#endif /* GLX_MESA_set_3dfx_mode */\n#ifdef GLX_MESA_swap_control\n  GLXEW_MESA_swap_control = _glewSearchExtension(\"GLX_MESA_swap_control\", extStart, extEnd);\n  if (glewExperimental || GLXEW_MESA_swap_control) GLXEW_MESA_swap_control = !_glewInit_GLX_MESA_swap_control();\n#endif /* GLX_MESA_swap_control */\n#ifdef GLX_NV_copy_buffer\n  GLXEW_NV_copy_buffer = _glewSearchExtension(\"GLX_NV_copy_buffer\", extStart, extEnd);\n  if (glewExperimental || GLXEW_NV_copy_buffer) GLXEW_NV_copy_buffer = !_glewInit_GLX_NV_copy_buffer();\n#endif /* GLX_NV_copy_buffer */\n#ifdef GLX_NV_copy_image\n  GLXEW_NV_copy_image = _glewSearchExtension(\"GLX_NV_copy_image\", extStart, extEnd);\n  if (glewExperimental || GLXEW_NV_copy_image) GLXEW_NV_copy_image = !_glewInit_GLX_NV_copy_image();\n#endif /* GLX_NV_copy_image */\n#ifdef GLX_NV_delay_before_swap\n  GLXEW_NV_delay_before_swap = _glewSearchExtension(\"GLX_NV_delay_before_swap\", extStart, extEnd);\n  if (glewExperimental || GLXEW_NV_delay_before_swap) GLXEW_NV_delay_before_swap = !_glewInit_GLX_NV_delay_before_swap();\n#endif /* GLX_NV_delay_before_swap */\n#ifdef GLX_NV_float_buffer\n  GLXEW_NV_float_buffer = _glewSearchExtension(\"GLX_NV_float_buffer\", extStart, extEnd);\n#endif /* GLX_NV_float_buffer */\n#ifdef GLX_NV_multisample_coverage\n  GLXEW_NV_multisample_coverage = _glewSearchExtension(\"GLX_NV_multisample_coverage\", extStart, extEnd);\n#endif /* GLX_NV_multisample_coverage */\n#ifdef GLX_NV_present_video\n  GLXEW_NV_present_video = _glewSearchExtension(\"GLX_NV_present_video\", extStart, extEnd);\n  if (glewExperimental || GLXEW_NV_present_video) GLXEW_NV_present_video = !_glewInit_GLX_NV_present_video();\n#endif /* GLX_NV_present_video */\n#ifdef GLX_NV_robustness_video_memory_purge\n  GLXEW_NV_robustness_video_memory_purge = _glewSearchExtension(\"GLX_NV_robustness_video_memory_purge\", extStart, extEnd);\n#endif /* GLX_NV_robustness_video_memory_purge */\n#ifdef GLX_NV_swap_group\n  GLXEW_NV_swap_group = _glewSearchExtension(\"GLX_NV_swap_group\", extStart, extEnd);\n  if (glewExperimental || GLXEW_NV_swap_group) GLXEW_NV_swap_group = !_glewInit_GLX_NV_swap_group();\n#endif /* GLX_NV_swap_group */\n#ifdef GLX_NV_vertex_array_range\n  GLXEW_NV_vertex_array_range = _glewSearchExtension(\"GLX_NV_vertex_array_range\", extStart, extEnd);\n  if (glewExperimental || GLXEW_NV_vertex_array_range) GLXEW_NV_vertex_array_range = !_glewInit_GLX_NV_vertex_array_range();\n#endif /* GLX_NV_vertex_array_range */\n#ifdef GLX_NV_video_capture\n  GLXEW_NV_video_capture = _glewSearchExtension(\"GLX_NV_video_capture\", extStart, extEnd);\n  if (glewExperimental || GLXEW_NV_video_capture) GLXEW_NV_video_capture = !_glewInit_GLX_NV_video_capture();\n#endif /* GLX_NV_video_capture */\n#ifdef GLX_NV_video_out\n  GLXEW_NV_video_out = _glewSearchExtension(\"GLX_NV_video_out\", extStart, extEnd);\n  if (glewExperimental || GLXEW_NV_video_out) GLXEW_NV_video_out = !_glewInit_GLX_NV_video_out();\n#endif /* GLX_NV_video_out */\n#ifdef GLX_OML_swap_method\n  GLXEW_OML_swap_method = _glewSearchExtension(\"GLX_OML_swap_method\", extStart, extEnd);\n#endif /* GLX_OML_swap_method */\n#ifdef GLX_OML_sync_control\n  GLXEW_OML_sync_control = _glewSearchExtension(\"GLX_OML_sync_control\", extStart, extEnd);\n  if (glewExperimental || GLXEW_OML_sync_control) GLXEW_OML_sync_control = !_glewInit_GLX_OML_sync_control();\n#endif /* GLX_OML_sync_control */\n#ifdef GLX_SGIS_blended_overlay\n  GLXEW_SGIS_blended_overlay = _glewSearchExtension(\"GLX_SGIS_blended_overlay\", extStart, extEnd);\n#endif /* GLX_SGIS_blended_overlay */\n#ifdef GLX_SGIS_color_range\n  GLXEW_SGIS_color_range = _glewSearchExtension(\"GLX_SGIS_color_range\", extStart, extEnd);\n#endif /* GLX_SGIS_color_range */\n#ifdef GLX_SGIS_multisample\n  GLXEW_SGIS_multisample = _glewSearchExtension(\"GLX_SGIS_multisample\", extStart, extEnd);\n#endif /* GLX_SGIS_multisample */\n#ifdef GLX_SGIS_shared_multisample\n  GLXEW_SGIS_shared_multisample = _glewSearchExtension(\"GLX_SGIS_shared_multisample\", extStart, extEnd);\n#endif /* GLX_SGIS_shared_multisample */\n#ifdef GLX_SGIX_fbconfig\n  GLXEW_SGIX_fbconfig = _glewSearchExtension(\"GLX_SGIX_fbconfig\", extStart, extEnd);\n  if (glewExperimental || GLXEW_SGIX_fbconfig) GLXEW_SGIX_fbconfig = !_glewInit_GLX_SGIX_fbconfig();\n#endif /* GLX_SGIX_fbconfig */\n#ifdef GLX_SGIX_hyperpipe\n  GLXEW_SGIX_hyperpipe = _glewSearchExtension(\"GLX_SGIX_hyperpipe\", extStart, extEnd);\n  if (glewExperimental || GLXEW_SGIX_hyperpipe) GLXEW_SGIX_hyperpipe = !_glewInit_GLX_SGIX_hyperpipe();\n#endif /* GLX_SGIX_hyperpipe */\n#ifdef GLX_SGIX_pbuffer\n  GLXEW_SGIX_pbuffer = _glewSearchExtension(\"GLX_SGIX_pbuffer\", extStart, extEnd);\n  if (glewExperimental || GLXEW_SGIX_pbuffer) GLXEW_SGIX_pbuffer = !_glewInit_GLX_SGIX_pbuffer();\n#endif /* GLX_SGIX_pbuffer */\n#ifdef GLX_SGIX_swap_barrier\n  GLXEW_SGIX_swap_barrier = _glewSearchExtension(\"GLX_SGIX_swap_barrier\", extStart, extEnd);\n  if (glewExperimental || GLXEW_SGIX_swap_barrier) GLXEW_SGIX_swap_barrier = !_glewInit_GLX_SGIX_swap_barrier();\n#endif /* GLX_SGIX_swap_barrier */\n#ifdef GLX_SGIX_swap_group\n  GLXEW_SGIX_swap_group = _glewSearchExtension(\"GLX_SGIX_swap_group\", extStart, extEnd);\n  if (glewExperimental || GLXEW_SGIX_swap_group) GLXEW_SGIX_swap_group = !_glewInit_GLX_SGIX_swap_group();\n#endif /* GLX_SGIX_swap_group */\n#ifdef GLX_SGIX_video_resize\n  GLXEW_SGIX_video_resize = _glewSearchExtension(\"GLX_SGIX_video_resize\", extStart, extEnd);\n  if (glewExperimental || GLXEW_SGIX_video_resize) GLXEW_SGIX_video_resize = !_glewInit_GLX_SGIX_video_resize();\n#endif /* GLX_SGIX_video_resize */\n#ifdef GLX_SGIX_visual_select_group\n  GLXEW_SGIX_visual_select_group = _glewSearchExtension(\"GLX_SGIX_visual_select_group\", extStart, extEnd);\n#endif /* GLX_SGIX_visual_select_group */\n#ifdef GLX_SGI_cushion\n  GLXEW_SGI_cushion = _glewSearchExtension(\"GLX_SGI_cushion\", extStart, extEnd);\n  if (glewExperimental || GLXEW_SGI_cushion) GLXEW_SGI_cushion = !_glewInit_GLX_SGI_cushion();\n#endif /* GLX_SGI_cushion */\n#ifdef GLX_SGI_make_current_read\n  GLXEW_SGI_make_current_read = _glewSearchExtension(\"GLX_SGI_make_current_read\", extStart, extEnd);\n  if (glewExperimental || GLXEW_SGI_make_current_read) GLXEW_SGI_make_current_read = !_glewInit_GLX_SGI_make_current_read();\n#endif /* GLX_SGI_make_current_read */\n#ifdef GLX_SGI_swap_control\n  GLXEW_SGI_swap_control = _glewSearchExtension(\"GLX_SGI_swap_control\", extStart, extEnd);\n  if (glewExperimental || GLXEW_SGI_swap_control) GLXEW_SGI_swap_control = !_glewInit_GLX_SGI_swap_control();\n#endif /* GLX_SGI_swap_control */\n#ifdef GLX_SGI_video_sync\n  GLXEW_SGI_video_sync = _glewSearchExtension(\"GLX_SGI_video_sync\", extStart, extEnd);\n  if (glewExperimental || GLXEW_SGI_video_sync) GLXEW_SGI_video_sync = !_glewInit_GLX_SGI_video_sync();\n#endif /* GLX_SGI_video_sync */\n#ifdef GLX_SUN_get_transparent_index\n  GLXEW_SUN_get_transparent_index = _glewSearchExtension(\"GLX_SUN_get_transparent_index\", extStart, extEnd);\n  if (glewExperimental || GLXEW_SUN_get_transparent_index) GLXEW_SUN_get_transparent_index = !_glewInit_GLX_SUN_get_transparent_index();\n#endif /* GLX_SUN_get_transparent_index */\n#ifdef GLX_SUN_video_resize\n  GLXEW_SUN_video_resize = _glewSearchExtension(\"GLX_SUN_video_resize\", extStart, extEnd);\n  if (glewExperimental || GLXEW_SUN_video_resize) GLXEW_SUN_video_resize = !_glewInit_GLX_SUN_video_resize();\n#endif /* GLX_SUN_video_resize */\n\n  return GLEW_OK;\n}\n\n#endif /* !defined(__ANDROID__) && !defined(__native_client__) && !defined(__HAIKU__) && (!defined(__APPLE__) || defined(GLEW_APPLE_GLX)) */\n\n/* ------------------------------------------------------------------------ */\n\nconst GLubyte * GLEWAPIENTRY glewGetErrorString (GLenum error)\n{\n  static const GLubyte* _glewErrorString[] =\n  {\n    (const GLubyte*)\"No error\",\n    (const GLubyte*)\"Missing GL version\",\n    (const GLubyte*)\"GL 1.1 and up are not supported\",\n    (const GLubyte*)\"GLX 1.2 and up are not supported\",\n    (const GLubyte*)\"Unknown error\"\n  };\n  const size_t max_error = sizeof(_glewErrorString)/sizeof(*_glewErrorString) - 1;\n  return _glewErrorString[(size_t)error > max_error ? max_error : (size_t)error];\n}\n\nconst GLubyte * GLEWAPIENTRY glewGetString (GLenum name)\n{\n  static const GLubyte* _glewString[] =\n  {\n    (const GLubyte*)NULL,\n    (const GLubyte*)\"2.0.0\",\n    (const GLubyte*)\"2\",\n    (const GLubyte*)\"0\",\n    (const GLubyte*)\"0\"\n  };\n  const size_t max_string = sizeof(_glewString)/sizeof(*_glewString) - 1;\n  return _glewString[(size_t)name > max_string ? 0 : (size_t)name];\n}\n\n/* ------------------------------------------------------------------------ */\n\nGLboolean glewExperimental = GL_FALSE;\n\nGLenum GLEWAPIENTRY glewInit (void)\n{\n  GLenum r;\n#if defined(GLEW_EGL)\n  PFNEGLGETCURRENTDISPLAYPROC getCurrentDisplay = NULL;\n#endif\n  r = glewContextInit();\n  if ( r != 0 ) return r;\n#if defined(GLEW_EGL)\n  getCurrentDisplay = (PFNEGLGETCURRENTDISPLAYPROC) glewGetProcAddress(\"eglGetCurrentDisplay\");\n  return eglewInit(getCurrentDisplay());\n#elif defined(GLEW_OSMESA) || defined(__ANDROID__) || defined(__native_client__) || defined(__HAIKU__)\n  return r;\n#elif defined(_WIN32)\n  return wglewInit();\n#elif !defined(__APPLE__) || defined(GLEW_APPLE_GLX) /* _UNIX */\n  return glxewInit();\n#else\n  return r;\n#endif /* _WIN32 */\n}\n\n#if defined(_WIN32) && defined(GLEW_BUILD) && defined(__GNUC__)\n/* GCC requires a DLL entry point even without any standard library included. */\n/* Types extracted from windows.h to avoid polluting the rest of the file. */\nint __stdcall DllMainCRTStartup(void* instance, unsigned reason, void* reserved)\n{\n  (void) instance;\n  (void) reason;\n  (void) reserved;\n  return 1;\n}\n#endif\nGLboolean GLEWAPIENTRY glewIsSupported (const char* name)\n{\n  const GLubyte* pos = (const GLubyte*)name;\n  GLuint len = _glewStrLen(pos);\n  GLboolean ret = GL_TRUE;\n  while (ret && len > 0)\n  {\n    if (_glewStrSame1(&pos, &len, (const GLubyte*)\"GL_\", 3))\n    {\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"VERSION_\", 8))\n      {\n#ifdef GL_VERSION_1_2\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"1_2\", 3))\n        {\n          ret = GLEW_VERSION_1_2;\n          continue;\n        }\n#endif\n#ifdef GL_VERSION_1_2_1\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"1_2_1\", 5))\n        {\n          ret = GLEW_VERSION_1_2_1;\n          continue;\n        }\n#endif\n#ifdef GL_VERSION_1_3\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"1_3\", 3))\n        {\n          ret = GLEW_VERSION_1_3;\n          continue;\n        }\n#endif\n#ifdef GL_VERSION_1_4\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"1_4\", 3))\n        {\n          ret = GLEW_VERSION_1_4;\n          continue;\n        }\n#endif\n#ifdef GL_VERSION_1_5\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"1_5\", 3))\n        {\n          ret = GLEW_VERSION_1_5;\n          continue;\n        }\n#endif\n#ifdef GL_VERSION_2_0\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"2_0\", 3))\n        {\n          ret = GLEW_VERSION_2_0;\n          continue;\n        }\n#endif\n#ifdef GL_VERSION_2_1\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"2_1\", 3))\n        {\n          ret = GLEW_VERSION_2_1;\n          continue;\n        }\n#endif\n#ifdef GL_VERSION_3_0\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"3_0\", 3))\n        {\n          ret = GLEW_VERSION_3_0;\n          continue;\n        }\n#endif\n#ifdef GL_VERSION_3_1\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"3_1\", 3))\n        {\n          ret = GLEW_VERSION_3_1;\n          continue;\n        }\n#endif\n#ifdef GL_VERSION_3_2\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"3_2\", 3))\n        {\n          ret = GLEW_VERSION_3_2;\n          continue;\n        }\n#endif\n#ifdef GL_VERSION_3_3\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"3_3\", 3))\n        {\n          ret = GLEW_VERSION_3_3;\n          continue;\n        }\n#endif\n#ifdef GL_VERSION_4_0\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"4_0\", 3))\n        {\n          ret = GLEW_VERSION_4_0;\n          continue;\n        }\n#endif\n#ifdef GL_VERSION_4_1\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"4_1\", 3))\n        {\n          ret = GLEW_VERSION_4_1;\n          continue;\n        }\n#endif\n#ifdef GL_VERSION_4_2\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"4_2\", 3))\n        {\n          ret = GLEW_VERSION_4_2;\n          continue;\n        }\n#endif\n#ifdef GL_VERSION_4_3\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"4_3\", 3))\n        {\n          ret = GLEW_VERSION_4_3;\n          continue;\n        }\n#endif\n#ifdef GL_VERSION_4_4\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"4_4\", 3))\n        {\n          ret = GLEW_VERSION_4_4;\n          continue;\n        }\n#endif\n#ifdef GL_VERSION_4_5\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"4_5\", 3))\n        {\n          ret = GLEW_VERSION_4_5;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"3DFX_\", 5))\n      {\n#ifdef GL_3DFX_multisample\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"multisample\", 11))\n        {\n          ret = GLEW_3DFX_multisample;\n          continue;\n        }\n#endif\n#ifdef GL_3DFX_tbuffer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"tbuffer\", 7))\n        {\n          ret = GLEW_3DFX_tbuffer;\n          continue;\n        }\n#endif\n#ifdef GL_3DFX_texture_compression_FXT1\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_compression_FXT1\", 24))\n        {\n          ret = GLEW_3DFX_texture_compression_FXT1;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"AMD_\", 4))\n      {\n#ifdef GL_AMD_blend_minmax_factor\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"blend_minmax_factor\", 19))\n        {\n          ret = GLEW_AMD_blend_minmax_factor;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_conservative_depth\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"conservative_depth\", 18))\n        {\n          ret = GLEW_AMD_conservative_depth;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_debug_output\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"debug_output\", 12))\n        {\n          ret = GLEW_AMD_debug_output;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_depth_clamp_separate\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"depth_clamp_separate\", 20))\n        {\n          ret = GLEW_AMD_depth_clamp_separate;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_draw_buffers_blend\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"draw_buffers_blend\", 18))\n        {\n          ret = GLEW_AMD_draw_buffers_blend;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_gcn_shader\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"gcn_shader\", 10))\n        {\n          ret = GLEW_AMD_gcn_shader;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_gpu_shader_int64\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"gpu_shader_int64\", 16))\n        {\n          ret = GLEW_AMD_gpu_shader_int64;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_interleaved_elements\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"interleaved_elements\", 20))\n        {\n          ret = GLEW_AMD_interleaved_elements;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_multi_draw_indirect\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"multi_draw_indirect\", 19))\n        {\n          ret = GLEW_AMD_multi_draw_indirect;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_name_gen_delete\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"name_gen_delete\", 15))\n        {\n          ret = GLEW_AMD_name_gen_delete;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_occlusion_query_event\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"occlusion_query_event\", 21))\n        {\n          ret = GLEW_AMD_occlusion_query_event;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_performance_monitor\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"performance_monitor\", 19))\n        {\n          ret = GLEW_AMD_performance_monitor;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_pinned_memory\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pinned_memory\", 13))\n        {\n          ret = GLEW_AMD_pinned_memory;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_query_buffer_object\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"query_buffer_object\", 19))\n        {\n          ret = GLEW_AMD_query_buffer_object;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_sample_positions\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"sample_positions\", 16))\n        {\n          ret = GLEW_AMD_sample_positions;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_seamless_cubemap_per_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"seamless_cubemap_per_texture\", 28))\n        {\n          ret = GLEW_AMD_seamless_cubemap_per_texture;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_shader_atomic_counter_ops\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_atomic_counter_ops\", 25))\n        {\n          ret = GLEW_AMD_shader_atomic_counter_ops;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_shader_explicit_vertex_parameter\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_explicit_vertex_parameter\", 32))\n        {\n          ret = GLEW_AMD_shader_explicit_vertex_parameter;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_shader_stencil_export\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_stencil_export\", 21))\n        {\n          ret = GLEW_AMD_shader_stencil_export;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_shader_stencil_value_export\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_stencil_value_export\", 27))\n        {\n          ret = GLEW_AMD_shader_stencil_value_export;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_shader_trinary_minmax\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_trinary_minmax\", 21))\n        {\n          ret = GLEW_AMD_shader_trinary_minmax;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_sparse_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"sparse_texture\", 14))\n        {\n          ret = GLEW_AMD_sparse_texture;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_stencil_operation_extended\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"stencil_operation_extended\", 26))\n        {\n          ret = GLEW_AMD_stencil_operation_extended;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_texture_texture4\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_texture4\", 16))\n        {\n          ret = GLEW_AMD_texture_texture4;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_transform_feedback3_lines_triangles\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"transform_feedback3_lines_triangles\", 35))\n        {\n          ret = GLEW_AMD_transform_feedback3_lines_triangles;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_transform_feedback4\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"transform_feedback4\", 19))\n        {\n          ret = GLEW_AMD_transform_feedback4;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_vertex_shader_layer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_shader_layer\", 19))\n        {\n          ret = GLEW_AMD_vertex_shader_layer;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_vertex_shader_tessellator\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_shader_tessellator\", 25))\n        {\n          ret = GLEW_AMD_vertex_shader_tessellator;\n          continue;\n        }\n#endif\n#ifdef GL_AMD_vertex_shader_viewport_index\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_shader_viewport_index\", 28))\n        {\n          ret = GLEW_AMD_vertex_shader_viewport_index;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"ANGLE_\", 6))\n      {\n#ifdef GL_ANGLE_depth_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"depth_texture\", 13))\n        {\n          ret = GLEW_ANGLE_depth_texture;\n          continue;\n        }\n#endif\n#ifdef GL_ANGLE_framebuffer_blit\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"framebuffer_blit\", 16))\n        {\n          ret = GLEW_ANGLE_framebuffer_blit;\n          continue;\n        }\n#endif\n#ifdef GL_ANGLE_framebuffer_multisample\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"framebuffer_multisample\", 23))\n        {\n          ret = GLEW_ANGLE_framebuffer_multisample;\n          continue;\n        }\n#endif\n#ifdef GL_ANGLE_instanced_arrays\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"instanced_arrays\", 16))\n        {\n          ret = GLEW_ANGLE_instanced_arrays;\n          continue;\n        }\n#endif\n#ifdef GL_ANGLE_pack_reverse_row_order\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pack_reverse_row_order\", 22))\n        {\n          ret = GLEW_ANGLE_pack_reverse_row_order;\n          continue;\n        }\n#endif\n#ifdef GL_ANGLE_program_binary\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"program_binary\", 14))\n        {\n          ret = GLEW_ANGLE_program_binary;\n          continue;\n        }\n#endif\n#ifdef GL_ANGLE_texture_compression_dxt1\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_compression_dxt1\", 24))\n        {\n          ret = GLEW_ANGLE_texture_compression_dxt1;\n          continue;\n        }\n#endif\n#ifdef GL_ANGLE_texture_compression_dxt3\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_compression_dxt3\", 24))\n        {\n          ret = GLEW_ANGLE_texture_compression_dxt3;\n          continue;\n        }\n#endif\n#ifdef GL_ANGLE_texture_compression_dxt5\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_compression_dxt5\", 24))\n        {\n          ret = GLEW_ANGLE_texture_compression_dxt5;\n          continue;\n        }\n#endif\n#ifdef GL_ANGLE_texture_usage\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_usage\", 13))\n        {\n          ret = GLEW_ANGLE_texture_usage;\n          continue;\n        }\n#endif\n#ifdef GL_ANGLE_timer_query\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"timer_query\", 11))\n        {\n          ret = GLEW_ANGLE_timer_query;\n          continue;\n        }\n#endif\n#ifdef GL_ANGLE_translated_shader_source\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"translated_shader_source\", 24))\n        {\n          ret = GLEW_ANGLE_translated_shader_source;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"APPLE_\", 6))\n      {\n#ifdef GL_APPLE_aux_depth_stencil\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"aux_depth_stencil\", 17))\n        {\n          ret = GLEW_APPLE_aux_depth_stencil;\n          continue;\n        }\n#endif\n#ifdef GL_APPLE_client_storage\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"client_storage\", 14))\n        {\n          ret = GLEW_APPLE_client_storage;\n          continue;\n        }\n#endif\n#ifdef GL_APPLE_element_array\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"element_array\", 13))\n        {\n          ret = GLEW_APPLE_element_array;\n          continue;\n        }\n#endif\n#ifdef GL_APPLE_fence\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fence\", 5))\n        {\n          ret = GLEW_APPLE_fence;\n          continue;\n        }\n#endif\n#ifdef GL_APPLE_float_pixels\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"float_pixels\", 12))\n        {\n          ret = GLEW_APPLE_float_pixels;\n          continue;\n        }\n#endif\n#ifdef GL_APPLE_flush_buffer_range\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"flush_buffer_range\", 18))\n        {\n          ret = GLEW_APPLE_flush_buffer_range;\n          continue;\n        }\n#endif\n#ifdef GL_APPLE_object_purgeable\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"object_purgeable\", 16))\n        {\n          ret = GLEW_APPLE_object_purgeable;\n          continue;\n        }\n#endif\n#ifdef GL_APPLE_pixel_buffer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pixel_buffer\", 12))\n        {\n          ret = GLEW_APPLE_pixel_buffer;\n          continue;\n        }\n#endif\n#ifdef GL_APPLE_rgb_422\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"rgb_422\", 7))\n        {\n          ret = GLEW_APPLE_rgb_422;\n          continue;\n        }\n#endif\n#ifdef GL_APPLE_row_bytes\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"row_bytes\", 9))\n        {\n          ret = GLEW_APPLE_row_bytes;\n          continue;\n        }\n#endif\n#ifdef GL_APPLE_specular_vector\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"specular_vector\", 15))\n        {\n          ret = GLEW_APPLE_specular_vector;\n          continue;\n        }\n#endif\n#ifdef GL_APPLE_texture_range\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_range\", 13))\n        {\n          ret = GLEW_APPLE_texture_range;\n          continue;\n        }\n#endif\n#ifdef GL_APPLE_transform_hint\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"transform_hint\", 14))\n        {\n          ret = GLEW_APPLE_transform_hint;\n          continue;\n        }\n#endif\n#ifdef GL_APPLE_vertex_array_object\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_array_object\", 19))\n        {\n          ret = GLEW_APPLE_vertex_array_object;\n          continue;\n        }\n#endif\n#ifdef GL_APPLE_vertex_array_range\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_array_range\", 18))\n        {\n          ret = GLEW_APPLE_vertex_array_range;\n          continue;\n        }\n#endif\n#ifdef GL_APPLE_vertex_program_evaluators\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_program_evaluators\", 25))\n        {\n          ret = GLEW_APPLE_vertex_program_evaluators;\n          continue;\n        }\n#endif\n#ifdef GL_APPLE_ycbcr_422\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"ycbcr_422\", 9))\n        {\n          ret = GLEW_APPLE_ycbcr_422;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"ARB_\", 4))\n      {\n#ifdef GL_ARB_ES2_compatibility\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"ES2_compatibility\", 17))\n        {\n          ret = GLEW_ARB_ES2_compatibility;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_ES3_1_compatibility\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"ES3_1_compatibility\", 19))\n        {\n          ret = GLEW_ARB_ES3_1_compatibility;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_ES3_2_compatibility\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"ES3_2_compatibility\", 19))\n        {\n          ret = GLEW_ARB_ES3_2_compatibility;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_ES3_compatibility\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"ES3_compatibility\", 17))\n        {\n          ret = GLEW_ARB_ES3_compatibility;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_arrays_of_arrays\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"arrays_of_arrays\", 16))\n        {\n          ret = GLEW_ARB_arrays_of_arrays;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_base_instance\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"base_instance\", 13))\n        {\n          ret = GLEW_ARB_base_instance;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_bindless_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"bindless_texture\", 16))\n        {\n          ret = GLEW_ARB_bindless_texture;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_blend_func_extended\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"blend_func_extended\", 19))\n        {\n          ret = GLEW_ARB_blend_func_extended;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_buffer_storage\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"buffer_storage\", 14))\n        {\n          ret = GLEW_ARB_buffer_storage;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_cl_event\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"cl_event\", 8))\n        {\n          ret = GLEW_ARB_cl_event;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_clear_buffer_object\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"clear_buffer_object\", 19))\n        {\n          ret = GLEW_ARB_clear_buffer_object;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_clear_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"clear_texture\", 13))\n        {\n          ret = GLEW_ARB_clear_texture;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_clip_control\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"clip_control\", 12))\n        {\n          ret = GLEW_ARB_clip_control;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_color_buffer_float\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"color_buffer_float\", 18))\n        {\n          ret = GLEW_ARB_color_buffer_float;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_compatibility\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"compatibility\", 13))\n        {\n          ret = GLEW_ARB_compatibility;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_compressed_texture_pixel_storage\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"compressed_texture_pixel_storage\", 32))\n        {\n          ret = GLEW_ARB_compressed_texture_pixel_storage;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_compute_shader\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"compute_shader\", 14))\n        {\n          ret = GLEW_ARB_compute_shader;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_compute_variable_group_size\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"compute_variable_group_size\", 27))\n        {\n          ret = GLEW_ARB_compute_variable_group_size;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_conditional_render_inverted\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"conditional_render_inverted\", 27))\n        {\n          ret = GLEW_ARB_conditional_render_inverted;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_conservative_depth\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"conservative_depth\", 18))\n        {\n          ret = GLEW_ARB_conservative_depth;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_copy_buffer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"copy_buffer\", 11))\n        {\n          ret = GLEW_ARB_copy_buffer;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_copy_image\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"copy_image\", 10))\n        {\n          ret = GLEW_ARB_copy_image;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_cull_distance\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"cull_distance\", 13))\n        {\n          ret = GLEW_ARB_cull_distance;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_debug_output\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"debug_output\", 12))\n        {\n          ret = GLEW_ARB_debug_output;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_depth_buffer_float\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"depth_buffer_float\", 18))\n        {\n          ret = GLEW_ARB_depth_buffer_float;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_depth_clamp\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"depth_clamp\", 11))\n        {\n          ret = GLEW_ARB_depth_clamp;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_depth_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"depth_texture\", 13))\n        {\n          ret = GLEW_ARB_depth_texture;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_derivative_control\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"derivative_control\", 18))\n        {\n          ret = GLEW_ARB_derivative_control;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_direct_state_access\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"direct_state_access\", 19))\n        {\n          ret = GLEW_ARB_direct_state_access;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_draw_buffers\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"draw_buffers\", 12))\n        {\n          ret = GLEW_ARB_draw_buffers;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_draw_buffers_blend\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"draw_buffers_blend\", 18))\n        {\n          ret = GLEW_ARB_draw_buffers_blend;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_draw_elements_base_vertex\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"draw_elements_base_vertex\", 25))\n        {\n          ret = GLEW_ARB_draw_elements_base_vertex;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_draw_indirect\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"draw_indirect\", 13))\n        {\n          ret = GLEW_ARB_draw_indirect;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_draw_instanced\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"draw_instanced\", 14))\n        {\n          ret = GLEW_ARB_draw_instanced;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_enhanced_layouts\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"enhanced_layouts\", 16))\n        {\n          ret = GLEW_ARB_enhanced_layouts;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_explicit_attrib_location\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"explicit_attrib_location\", 24))\n        {\n          ret = GLEW_ARB_explicit_attrib_location;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_explicit_uniform_location\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"explicit_uniform_location\", 25))\n        {\n          ret = GLEW_ARB_explicit_uniform_location;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_fragment_coord_conventions\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fragment_coord_conventions\", 26))\n        {\n          ret = GLEW_ARB_fragment_coord_conventions;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_fragment_layer_viewport\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fragment_layer_viewport\", 23))\n        {\n          ret = GLEW_ARB_fragment_layer_viewport;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_fragment_program\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fragment_program\", 16))\n        {\n          ret = GLEW_ARB_fragment_program;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_fragment_program_shadow\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fragment_program_shadow\", 23))\n        {\n          ret = GLEW_ARB_fragment_program_shadow;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_fragment_shader\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fragment_shader\", 15))\n        {\n          ret = GLEW_ARB_fragment_shader;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_fragment_shader_interlock\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fragment_shader_interlock\", 25))\n        {\n          ret = GLEW_ARB_fragment_shader_interlock;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_framebuffer_no_attachments\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"framebuffer_no_attachments\", 26))\n        {\n          ret = GLEW_ARB_framebuffer_no_attachments;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_framebuffer_object\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"framebuffer_object\", 18))\n        {\n          ret = GLEW_ARB_framebuffer_object;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_framebuffer_sRGB\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"framebuffer_sRGB\", 16))\n        {\n          ret = GLEW_ARB_framebuffer_sRGB;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_geometry_shader4\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"geometry_shader4\", 16))\n        {\n          ret = GLEW_ARB_geometry_shader4;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_get_program_binary\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"get_program_binary\", 18))\n        {\n          ret = GLEW_ARB_get_program_binary;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_get_texture_sub_image\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"get_texture_sub_image\", 21))\n        {\n          ret = GLEW_ARB_get_texture_sub_image;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_gl_spirv\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"gl_spirv\", 8))\n        {\n          ret = GLEW_ARB_gl_spirv;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_gpu_shader5\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"gpu_shader5\", 11))\n        {\n          ret = GLEW_ARB_gpu_shader5;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_gpu_shader_fp64\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"gpu_shader_fp64\", 15))\n        {\n          ret = GLEW_ARB_gpu_shader_fp64;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_gpu_shader_int64\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"gpu_shader_int64\", 16))\n        {\n          ret = GLEW_ARB_gpu_shader_int64;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_half_float_pixel\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"half_float_pixel\", 16))\n        {\n          ret = GLEW_ARB_half_float_pixel;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_half_float_vertex\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"half_float_vertex\", 17))\n        {\n          ret = GLEW_ARB_half_float_vertex;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_imaging\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"imaging\", 7))\n        {\n          ret = GLEW_ARB_imaging;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_indirect_parameters\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"indirect_parameters\", 19))\n        {\n          ret = GLEW_ARB_indirect_parameters;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_instanced_arrays\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"instanced_arrays\", 16))\n        {\n          ret = GLEW_ARB_instanced_arrays;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_internalformat_query\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"internalformat_query\", 20))\n        {\n          ret = GLEW_ARB_internalformat_query;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_internalformat_query2\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"internalformat_query2\", 21))\n        {\n          ret = GLEW_ARB_internalformat_query2;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_invalidate_subdata\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"invalidate_subdata\", 18))\n        {\n          ret = GLEW_ARB_invalidate_subdata;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_map_buffer_alignment\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"map_buffer_alignment\", 20))\n        {\n          ret = GLEW_ARB_map_buffer_alignment;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_map_buffer_range\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"map_buffer_range\", 16))\n        {\n          ret = GLEW_ARB_map_buffer_range;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_matrix_palette\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"matrix_palette\", 14))\n        {\n          ret = GLEW_ARB_matrix_palette;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_multi_bind\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"multi_bind\", 10))\n        {\n          ret = GLEW_ARB_multi_bind;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_multi_draw_indirect\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"multi_draw_indirect\", 19))\n        {\n          ret = GLEW_ARB_multi_draw_indirect;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_multisample\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"multisample\", 11))\n        {\n          ret = GLEW_ARB_multisample;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_multitexture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"multitexture\", 12))\n        {\n          ret = GLEW_ARB_multitexture;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_occlusion_query\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"occlusion_query\", 15))\n        {\n          ret = GLEW_ARB_occlusion_query;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_occlusion_query2\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"occlusion_query2\", 16))\n        {\n          ret = GLEW_ARB_occlusion_query2;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_parallel_shader_compile\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"parallel_shader_compile\", 23))\n        {\n          ret = GLEW_ARB_parallel_shader_compile;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_pipeline_statistics_query\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pipeline_statistics_query\", 25))\n        {\n          ret = GLEW_ARB_pipeline_statistics_query;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_pixel_buffer_object\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pixel_buffer_object\", 19))\n        {\n          ret = GLEW_ARB_pixel_buffer_object;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_point_parameters\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"point_parameters\", 16))\n        {\n          ret = GLEW_ARB_point_parameters;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_point_sprite\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"point_sprite\", 12))\n        {\n          ret = GLEW_ARB_point_sprite;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_post_depth_coverage\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"post_depth_coverage\", 19))\n        {\n          ret = GLEW_ARB_post_depth_coverage;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_program_interface_query\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"program_interface_query\", 23))\n        {\n          ret = GLEW_ARB_program_interface_query;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_provoking_vertex\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"provoking_vertex\", 16))\n        {\n          ret = GLEW_ARB_provoking_vertex;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_query_buffer_object\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"query_buffer_object\", 19))\n        {\n          ret = GLEW_ARB_query_buffer_object;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_robust_buffer_access_behavior\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"robust_buffer_access_behavior\", 29))\n        {\n          ret = GLEW_ARB_robust_buffer_access_behavior;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_robustness\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"robustness\", 10))\n        {\n          ret = GLEW_ARB_robustness;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_robustness_application_isolation\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"robustness_application_isolation\", 32))\n        {\n          ret = GLEW_ARB_robustness_application_isolation;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_robustness_share_group_isolation\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"robustness_share_group_isolation\", 32))\n        {\n          ret = GLEW_ARB_robustness_share_group_isolation;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_sample_locations\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"sample_locations\", 16))\n        {\n          ret = GLEW_ARB_sample_locations;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_sample_shading\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"sample_shading\", 14))\n        {\n          ret = GLEW_ARB_sample_shading;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_sampler_objects\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"sampler_objects\", 15))\n        {\n          ret = GLEW_ARB_sampler_objects;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_seamless_cube_map\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"seamless_cube_map\", 17))\n        {\n          ret = GLEW_ARB_seamless_cube_map;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_seamless_cubemap_per_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"seamless_cubemap_per_texture\", 28))\n        {\n          ret = GLEW_ARB_seamless_cubemap_per_texture;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_separate_shader_objects\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"separate_shader_objects\", 23))\n        {\n          ret = GLEW_ARB_separate_shader_objects;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_shader_atomic_counter_ops\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_atomic_counter_ops\", 25))\n        {\n          ret = GLEW_ARB_shader_atomic_counter_ops;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_shader_atomic_counters\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_atomic_counters\", 22))\n        {\n          ret = GLEW_ARB_shader_atomic_counters;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_shader_ballot\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_ballot\", 13))\n        {\n          ret = GLEW_ARB_shader_ballot;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_shader_bit_encoding\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_bit_encoding\", 19))\n        {\n          ret = GLEW_ARB_shader_bit_encoding;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_shader_clock\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_clock\", 12))\n        {\n          ret = GLEW_ARB_shader_clock;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_shader_draw_parameters\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_draw_parameters\", 22))\n        {\n          ret = GLEW_ARB_shader_draw_parameters;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_shader_group_vote\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_group_vote\", 17))\n        {\n          ret = GLEW_ARB_shader_group_vote;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_shader_image_load_store\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_image_load_store\", 23))\n        {\n          ret = GLEW_ARB_shader_image_load_store;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_shader_image_size\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_image_size\", 17))\n        {\n          ret = GLEW_ARB_shader_image_size;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_shader_objects\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_objects\", 14))\n        {\n          ret = GLEW_ARB_shader_objects;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_shader_precision\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_precision\", 16))\n        {\n          ret = GLEW_ARB_shader_precision;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_shader_stencil_export\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_stencil_export\", 21))\n        {\n          ret = GLEW_ARB_shader_stencil_export;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_shader_storage_buffer_object\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_storage_buffer_object\", 28))\n        {\n          ret = GLEW_ARB_shader_storage_buffer_object;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_shader_subroutine\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_subroutine\", 17))\n        {\n          ret = GLEW_ARB_shader_subroutine;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_shader_texture_image_samples\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_texture_image_samples\", 28))\n        {\n          ret = GLEW_ARB_shader_texture_image_samples;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_shader_texture_lod\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_texture_lod\", 18))\n        {\n          ret = GLEW_ARB_shader_texture_lod;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_shader_viewport_layer_array\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_viewport_layer_array\", 27))\n        {\n          ret = GLEW_ARB_shader_viewport_layer_array;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_shading_language_100\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shading_language_100\", 20))\n        {\n          ret = GLEW_ARB_shading_language_100;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_shading_language_420pack\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shading_language_420pack\", 24))\n        {\n          ret = GLEW_ARB_shading_language_420pack;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_shading_language_include\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shading_language_include\", 24))\n        {\n          ret = GLEW_ARB_shading_language_include;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_shading_language_packing\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shading_language_packing\", 24))\n        {\n          ret = GLEW_ARB_shading_language_packing;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_shadow\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shadow\", 6))\n        {\n          ret = GLEW_ARB_shadow;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_shadow_ambient\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shadow_ambient\", 14))\n        {\n          ret = GLEW_ARB_shadow_ambient;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_sparse_buffer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"sparse_buffer\", 13))\n        {\n          ret = GLEW_ARB_sparse_buffer;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_sparse_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"sparse_texture\", 14))\n        {\n          ret = GLEW_ARB_sparse_texture;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_sparse_texture2\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"sparse_texture2\", 15))\n        {\n          ret = GLEW_ARB_sparse_texture2;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_sparse_texture_clamp\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"sparse_texture_clamp\", 20))\n        {\n          ret = GLEW_ARB_sparse_texture_clamp;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_stencil_texturing\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"stencil_texturing\", 17))\n        {\n          ret = GLEW_ARB_stencil_texturing;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_sync\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"sync\", 4))\n        {\n          ret = GLEW_ARB_sync;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_tessellation_shader\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"tessellation_shader\", 19))\n        {\n          ret = GLEW_ARB_tessellation_shader;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_barrier\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_barrier\", 15))\n        {\n          ret = GLEW_ARB_texture_barrier;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_border_clamp\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_border_clamp\", 20))\n        {\n          ret = GLEW_ARB_texture_border_clamp;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_buffer_object\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_buffer_object\", 21))\n        {\n          ret = GLEW_ARB_texture_buffer_object;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_buffer_object_rgb32\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_buffer_object_rgb32\", 27))\n        {\n          ret = GLEW_ARB_texture_buffer_object_rgb32;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_buffer_range\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_buffer_range\", 20))\n        {\n          ret = GLEW_ARB_texture_buffer_range;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_compression\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_compression\", 19))\n        {\n          ret = GLEW_ARB_texture_compression;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_compression_bptc\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_compression_bptc\", 24))\n        {\n          ret = GLEW_ARB_texture_compression_bptc;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_compression_rgtc\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_compression_rgtc\", 24))\n        {\n          ret = GLEW_ARB_texture_compression_rgtc;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_cube_map\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_cube_map\", 16))\n        {\n          ret = GLEW_ARB_texture_cube_map;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_cube_map_array\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_cube_map_array\", 22))\n        {\n          ret = GLEW_ARB_texture_cube_map_array;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_env_add\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_env_add\", 15))\n        {\n          ret = GLEW_ARB_texture_env_add;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_env_combine\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_env_combine\", 19))\n        {\n          ret = GLEW_ARB_texture_env_combine;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_env_crossbar\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_env_crossbar\", 20))\n        {\n          ret = GLEW_ARB_texture_env_crossbar;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_env_dot3\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_env_dot3\", 16))\n        {\n          ret = GLEW_ARB_texture_env_dot3;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_filter_minmax\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_filter_minmax\", 21))\n        {\n          ret = GLEW_ARB_texture_filter_minmax;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_float\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_float\", 13))\n        {\n          ret = GLEW_ARB_texture_float;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_gather\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_gather\", 14))\n        {\n          ret = GLEW_ARB_texture_gather;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_mirror_clamp_to_edge\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_mirror_clamp_to_edge\", 28))\n        {\n          ret = GLEW_ARB_texture_mirror_clamp_to_edge;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_mirrored_repeat\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_mirrored_repeat\", 23))\n        {\n          ret = GLEW_ARB_texture_mirrored_repeat;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_multisample\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_multisample\", 19))\n        {\n          ret = GLEW_ARB_texture_multisample;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_non_power_of_two\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_non_power_of_two\", 24))\n        {\n          ret = GLEW_ARB_texture_non_power_of_two;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_query_levels\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_query_levels\", 20))\n        {\n          ret = GLEW_ARB_texture_query_levels;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_query_lod\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_query_lod\", 17))\n        {\n          ret = GLEW_ARB_texture_query_lod;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_rectangle\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_rectangle\", 17))\n        {\n          ret = GLEW_ARB_texture_rectangle;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_rg\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_rg\", 10))\n        {\n          ret = GLEW_ARB_texture_rg;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_rgb10_a2ui\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_rgb10_a2ui\", 18))\n        {\n          ret = GLEW_ARB_texture_rgb10_a2ui;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_stencil8\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_stencil8\", 16))\n        {\n          ret = GLEW_ARB_texture_stencil8;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_storage\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_storage\", 15))\n        {\n          ret = GLEW_ARB_texture_storage;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_storage_multisample\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_storage_multisample\", 27))\n        {\n          ret = GLEW_ARB_texture_storage_multisample;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_swizzle\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_swizzle\", 15))\n        {\n          ret = GLEW_ARB_texture_swizzle;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_texture_view\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_view\", 12))\n        {\n          ret = GLEW_ARB_texture_view;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_timer_query\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"timer_query\", 11))\n        {\n          ret = GLEW_ARB_timer_query;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_transform_feedback2\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"transform_feedback2\", 19))\n        {\n          ret = GLEW_ARB_transform_feedback2;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_transform_feedback3\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"transform_feedback3\", 19))\n        {\n          ret = GLEW_ARB_transform_feedback3;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_transform_feedback_instanced\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"transform_feedback_instanced\", 28))\n        {\n          ret = GLEW_ARB_transform_feedback_instanced;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_transform_feedback_overflow_query\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"transform_feedback_overflow_query\", 33))\n        {\n          ret = GLEW_ARB_transform_feedback_overflow_query;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_transpose_matrix\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"transpose_matrix\", 16))\n        {\n          ret = GLEW_ARB_transpose_matrix;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_uniform_buffer_object\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"uniform_buffer_object\", 21))\n        {\n          ret = GLEW_ARB_uniform_buffer_object;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_vertex_array_bgra\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_array_bgra\", 17))\n        {\n          ret = GLEW_ARB_vertex_array_bgra;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_vertex_array_object\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_array_object\", 19))\n        {\n          ret = GLEW_ARB_vertex_array_object;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_vertex_attrib_64bit\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_attrib_64bit\", 19))\n        {\n          ret = GLEW_ARB_vertex_attrib_64bit;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_vertex_attrib_binding\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_attrib_binding\", 21))\n        {\n          ret = GLEW_ARB_vertex_attrib_binding;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_vertex_blend\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_blend\", 12))\n        {\n          ret = GLEW_ARB_vertex_blend;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_vertex_buffer_object\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_buffer_object\", 20))\n        {\n          ret = GLEW_ARB_vertex_buffer_object;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_vertex_program\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_program\", 14))\n        {\n          ret = GLEW_ARB_vertex_program;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_vertex_shader\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_shader\", 13))\n        {\n          ret = GLEW_ARB_vertex_shader;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_vertex_type_10f_11f_11f_rev\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_type_10f_11f_11f_rev\", 27))\n        {\n          ret = GLEW_ARB_vertex_type_10f_11f_11f_rev;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_vertex_type_2_10_10_10_rev\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_type_2_10_10_10_rev\", 26))\n        {\n          ret = GLEW_ARB_vertex_type_2_10_10_10_rev;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_viewport_array\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"viewport_array\", 14))\n        {\n          ret = GLEW_ARB_viewport_array;\n          continue;\n        }\n#endif\n#ifdef GL_ARB_window_pos\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"window_pos\", 10))\n        {\n          ret = GLEW_ARB_window_pos;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"ATIX_\", 5))\n      {\n#ifdef GL_ATIX_point_sprites\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"point_sprites\", 13))\n        {\n          ret = GLEW_ATIX_point_sprites;\n          continue;\n        }\n#endif\n#ifdef GL_ATIX_texture_env_combine3\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_env_combine3\", 20))\n        {\n          ret = GLEW_ATIX_texture_env_combine3;\n          continue;\n        }\n#endif\n#ifdef GL_ATIX_texture_env_route\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_env_route\", 17))\n        {\n          ret = GLEW_ATIX_texture_env_route;\n          continue;\n        }\n#endif\n#ifdef GL_ATIX_vertex_shader_output_point_size\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_shader_output_point_size\", 31))\n        {\n          ret = GLEW_ATIX_vertex_shader_output_point_size;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"ATI_\", 4))\n      {\n#ifdef GL_ATI_draw_buffers\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"draw_buffers\", 12))\n        {\n          ret = GLEW_ATI_draw_buffers;\n          continue;\n        }\n#endif\n#ifdef GL_ATI_element_array\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"element_array\", 13))\n        {\n          ret = GLEW_ATI_element_array;\n          continue;\n        }\n#endif\n#ifdef GL_ATI_envmap_bumpmap\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"envmap_bumpmap\", 14))\n        {\n          ret = GLEW_ATI_envmap_bumpmap;\n          continue;\n        }\n#endif\n#ifdef GL_ATI_fragment_shader\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fragment_shader\", 15))\n        {\n          ret = GLEW_ATI_fragment_shader;\n          continue;\n        }\n#endif\n#ifdef GL_ATI_map_object_buffer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"map_object_buffer\", 17))\n        {\n          ret = GLEW_ATI_map_object_buffer;\n          continue;\n        }\n#endif\n#ifdef GL_ATI_meminfo\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"meminfo\", 7))\n        {\n          ret = GLEW_ATI_meminfo;\n          continue;\n        }\n#endif\n#ifdef GL_ATI_pn_triangles\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pn_triangles\", 12))\n        {\n          ret = GLEW_ATI_pn_triangles;\n          continue;\n        }\n#endif\n#ifdef GL_ATI_separate_stencil\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"separate_stencil\", 16))\n        {\n          ret = GLEW_ATI_separate_stencil;\n          continue;\n        }\n#endif\n#ifdef GL_ATI_shader_texture_lod\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_texture_lod\", 18))\n        {\n          ret = GLEW_ATI_shader_texture_lod;\n          continue;\n        }\n#endif\n#ifdef GL_ATI_text_fragment_shader\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"text_fragment_shader\", 20))\n        {\n          ret = GLEW_ATI_text_fragment_shader;\n          continue;\n        }\n#endif\n#ifdef GL_ATI_texture_compression_3dc\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_compression_3dc\", 23))\n        {\n          ret = GLEW_ATI_texture_compression_3dc;\n          continue;\n        }\n#endif\n#ifdef GL_ATI_texture_env_combine3\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_env_combine3\", 20))\n        {\n          ret = GLEW_ATI_texture_env_combine3;\n          continue;\n        }\n#endif\n#ifdef GL_ATI_texture_float\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_float\", 13))\n        {\n          ret = GLEW_ATI_texture_float;\n          continue;\n        }\n#endif\n#ifdef GL_ATI_texture_mirror_once\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_mirror_once\", 19))\n        {\n          ret = GLEW_ATI_texture_mirror_once;\n          continue;\n        }\n#endif\n#ifdef GL_ATI_vertex_array_object\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_array_object\", 19))\n        {\n          ret = GLEW_ATI_vertex_array_object;\n          continue;\n        }\n#endif\n#ifdef GL_ATI_vertex_attrib_array_object\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_attrib_array_object\", 26))\n        {\n          ret = GLEW_ATI_vertex_attrib_array_object;\n          continue;\n        }\n#endif\n#ifdef GL_ATI_vertex_streams\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_streams\", 14))\n        {\n          ret = GLEW_ATI_vertex_streams;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"EGL_\", 4))\n      {\n#ifdef GL_EGL_NV_robustness_video_memory_purge\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"NV_robustness_video_memory_purge\", 32))\n        {\n          ret = GLEW_EGL_NV_robustness_video_memory_purge;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"EXT_\", 4))\n      {\n#ifdef GL_EXT_422_pixels\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"422_pixels\", 10))\n        {\n          ret = GLEW_EXT_422_pixels;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_Cg_shader\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"Cg_shader\", 9))\n        {\n          ret = GLEW_EXT_Cg_shader;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_abgr\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"abgr\", 4))\n        {\n          ret = GLEW_EXT_abgr;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_bgra\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"bgra\", 4))\n        {\n          ret = GLEW_EXT_bgra;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_bindable_uniform\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"bindable_uniform\", 16))\n        {\n          ret = GLEW_EXT_bindable_uniform;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_blend_color\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"blend_color\", 11))\n        {\n          ret = GLEW_EXT_blend_color;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_blend_equation_separate\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"blend_equation_separate\", 23))\n        {\n          ret = GLEW_EXT_blend_equation_separate;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_blend_func_separate\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"blend_func_separate\", 19))\n        {\n          ret = GLEW_EXT_blend_func_separate;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_blend_logic_op\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"blend_logic_op\", 14))\n        {\n          ret = GLEW_EXT_blend_logic_op;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_blend_minmax\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"blend_minmax\", 12))\n        {\n          ret = GLEW_EXT_blend_minmax;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_blend_subtract\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"blend_subtract\", 14))\n        {\n          ret = GLEW_EXT_blend_subtract;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_clip_volume_hint\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"clip_volume_hint\", 16))\n        {\n          ret = GLEW_EXT_clip_volume_hint;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_cmyka\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"cmyka\", 5))\n        {\n          ret = GLEW_EXT_cmyka;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_color_subtable\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"color_subtable\", 14))\n        {\n          ret = GLEW_EXT_color_subtable;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_compiled_vertex_array\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"compiled_vertex_array\", 21))\n        {\n          ret = GLEW_EXT_compiled_vertex_array;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_convolution\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"convolution\", 11))\n        {\n          ret = GLEW_EXT_convolution;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_coordinate_frame\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"coordinate_frame\", 16))\n        {\n          ret = GLEW_EXT_coordinate_frame;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_copy_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"copy_texture\", 12))\n        {\n          ret = GLEW_EXT_copy_texture;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_cull_vertex\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"cull_vertex\", 11))\n        {\n          ret = GLEW_EXT_cull_vertex;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_debug_label\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"debug_label\", 11))\n        {\n          ret = GLEW_EXT_debug_label;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_debug_marker\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"debug_marker\", 12))\n        {\n          ret = GLEW_EXT_debug_marker;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_depth_bounds_test\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"depth_bounds_test\", 17))\n        {\n          ret = GLEW_EXT_depth_bounds_test;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_direct_state_access\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"direct_state_access\", 19))\n        {\n          ret = GLEW_EXT_direct_state_access;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_draw_buffers2\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"draw_buffers2\", 13))\n        {\n          ret = GLEW_EXT_draw_buffers2;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_draw_instanced\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"draw_instanced\", 14))\n        {\n          ret = GLEW_EXT_draw_instanced;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_draw_range_elements\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"draw_range_elements\", 19))\n        {\n          ret = GLEW_EXT_draw_range_elements;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_fog_coord\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fog_coord\", 9))\n        {\n          ret = GLEW_EXT_fog_coord;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_fragment_lighting\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fragment_lighting\", 17))\n        {\n          ret = GLEW_EXT_fragment_lighting;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_framebuffer_blit\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"framebuffer_blit\", 16))\n        {\n          ret = GLEW_EXT_framebuffer_blit;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_framebuffer_multisample\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"framebuffer_multisample\", 23))\n        {\n          ret = GLEW_EXT_framebuffer_multisample;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_framebuffer_multisample_blit_scaled\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"framebuffer_multisample_blit_scaled\", 35))\n        {\n          ret = GLEW_EXT_framebuffer_multisample_blit_scaled;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_framebuffer_object\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"framebuffer_object\", 18))\n        {\n          ret = GLEW_EXT_framebuffer_object;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_framebuffer_sRGB\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"framebuffer_sRGB\", 16))\n        {\n          ret = GLEW_EXT_framebuffer_sRGB;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_geometry_shader4\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"geometry_shader4\", 16))\n        {\n          ret = GLEW_EXT_geometry_shader4;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_gpu_program_parameters\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"gpu_program_parameters\", 22))\n        {\n          ret = GLEW_EXT_gpu_program_parameters;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_gpu_shader4\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"gpu_shader4\", 11))\n        {\n          ret = GLEW_EXT_gpu_shader4;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_histogram\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"histogram\", 9))\n        {\n          ret = GLEW_EXT_histogram;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_index_array_formats\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"index_array_formats\", 19))\n        {\n          ret = GLEW_EXT_index_array_formats;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_index_func\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"index_func\", 10))\n        {\n          ret = GLEW_EXT_index_func;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_index_material\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"index_material\", 14))\n        {\n          ret = GLEW_EXT_index_material;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_index_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"index_texture\", 13))\n        {\n          ret = GLEW_EXT_index_texture;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_light_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"light_texture\", 13))\n        {\n          ret = GLEW_EXT_light_texture;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_misc_attribute\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"misc_attribute\", 14))\n        {\n          ret = GLEW_EXT_misc_attribute;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_multi_draw_arrays\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"multi_draw_arrays\", 17))\n        {\n          ret = GLEW_EXT_multi_draw_arrays;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_multisample\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"multisample\", 11))\n        {\n          ret = GLEW_EXT_multisample;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_packed_depth_stencil\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"packed_depth_stencil\", 20))\n        {\n          ret = GLEW_EXT_packed_depth_stencil;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_packed_float\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"packed_float\", 12))\n        {\n          ret = GLEW_EXT_packed_float;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_packed_pixels\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"packed_pixels\", 13))\n        {\n          ret = GLEW_EXT_packed_pixels;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_paletted_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"paletted_texture\", 16))\n        {\n          ret = GLEW_EXT_paletted_texture;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_pixel_buffer_object\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pixel_buffer_object\", 19))\n        {\n          ret = GLEW_EXT_pixel_buffer_object;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_pixel_transform\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pixel_transform\", 15))\n        {\n          ret = GLEW_EXT_pixel_transform;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_pixel_transform_color_table\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pixel_transform_color_table\", 27))\n        {\n          ret = GLEW_EXT_pixel_transform_color_table;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_point_parameters\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"point_parameters\", 16))\n        {\n          ret = GLEW_EXT_point_parameters;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_polygon_offset\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"polygon_offset\", 14))\n        {\n          ret = GLEW_EXT_polygon_offset;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_polygon_offset_clamp\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"polygon_offset_clamp\", 20))\n        {\n          ret = GLEW_EXT_polygon_offset_clamp;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_post_depth_coverage\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"post_depth_coverage\", 19))\n        {\n          ret = GLEW_EXT_post_depth_coverage;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_provoking_vertex\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"provoking_vertex\", 16))\n        {\n          ret = GLEW_EXT_provoking_vertex;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_raster_multisample\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"raster_multisample\", 18))\n        {\n          ret = GLEW_EXT_raster_multisample;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_rescale_normal\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"rescale_normal\", 14))\n        {\n          ret = GLEW_EXT_rescale_normal;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_scene_marker\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"scene_marker\", 12))\n        {\n          ret = GLEW_EXT_scene_marker;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_secondary_color\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"secondary_color\", 15))\n        {\n          ret = GLEW_EXT_secondary_color;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_separate_shader_objects\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"separate_shader_objects\", 23))\n        {\n          ret = GLEW_EXT_separate_shader_objects;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_separate_specular_color\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"separate_specular_color\", 23))\n        {\n          ret = GLEW_EXT_separate_specular_color;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_shader_image_load_formatted\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_image_load_formatted\", 27))\n        {\n          ret = GLEW_EXT_shader_image_load_formatted;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_shader_image_load_store\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_image_load_store\", 23))\n        {\n          ret = GLEW_EXT_shader_image_load_store;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_shader_integer_mix\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_integer_mix\", 18))\n        {\n          ret = GLEW_EXT_shader_integer_mix;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_shadow_funcs\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shadow_funcs\", 12))\n        {\n          ret = GLEW_EXT_shadow_funcs;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_shared_texture_palette\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shared_texture_palette\", 22))\n        {\n          ret = GLEW_EXT_shared_texture_palette;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_sparse_texture2\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"sparse_texture2\", 15))\n        {\n          ret = GLEW_EXT_sparse_texture2;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_stencil_clear_tag\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"stencil_clear_tag\", 17))\n        {\n          ret = GLEW_EXT_stencil_clear_tag;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_stencil_two_side\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"stencil_two_side\", 16))\n        {\n          ret = GLEW_EXT_stencil_two_side;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_stencil_wrap\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"stencil_wrap\", 12))\n        {\n          ret = GLEW_EXT_stencil_wrap;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_subtexture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"subtexture\", 10))\n        {\n          ret = GLEW_EXT_subtexture;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture\", 7))\n        {\n          ret = GLEW_EXT_texture;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture3D\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture3D\", 9))\n        {\n          ret = GLEW_EXT_texture3D;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_array\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_array\", 13))\n        {\n          ret = GLEW_EXT_texture_array;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_buffer_object\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_buffer_object\", 21))\n        {\n          ret = GLEW_EXT_texture_buffer_object;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_compression_dxt1\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_compression_dxt1\", 24))\n        {\n          ret = GLEW_EXT_texture_compression_dxt1;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_compression_latc\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_compression_latc\", 24))\n        {\n          ret = GLEW_EXT_texture_compression_latc;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_compression_rgtc\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_compression_rgtc\", 24))\n        {\n          ret = GLEW_EXT_texture_compression_rgtc;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_compression_s3tc\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_compression_s3tc\", 24))\n        {\n          ret = GLEW_EXT_texture_compression_s3tc;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_cube_map\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_cube_map\", 16))\n        {\n          ret = GLEW_EXT_texture_cube_map;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_edge_clamp\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_edge_clamp\", 18))\n        {\n          ret = GLEW_EXT_texture_edge_clamp;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_env\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_env\", 11))\n        {\n          ret = GLEW_EXT_texture_env;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_env_add\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_env_add\", 15))\n        {\n          ret = GLEW_EXT_texture_env_add;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_env_combine\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_env_combine\", 19))\n        {\n          ret = GLEW_EXT_texture_env_combine;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_env_dot3\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_env_dot3\", 16))\n        {\n          ret = GLEW_EXT_texture_env_dot3;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_filter_anisotropic\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_filter_anisotropic\", 26))\n        {\n          ret = GLEW_EXT_texture_filter_anisotropic;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_filter_minmax\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_filter_minmax\", 21))\n        {\n          ret = GLEW_EXT_texture_filter_minmax;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_integer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_integer\", 15))\n        {\n          ret = GLEW_EXT_texture_integer;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_lod_bias\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_lod_bias\", 16))\n        {\n          ret = GLEW_EXT_texture_lod_bias;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_mirror_clamp\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_mirror_clamp\", 20))\n        {\n          ret = GLEW_EXT_texture_mirror_clamp;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_object\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_object\", 14))\n        {\n          ret = GLEW_EXT_texture_object;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_perturb_normal\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_perturb_normal\", 22))\n        {\n          ret = GLEW_EXT_texture_perturb_normal;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_rectangle\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_rectangle\", 17))\n        {\n          ret = GLEW_EXT_texture_rectangle;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_sRGB\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_sRGB\", 12))\n        {\n          ret = GLEW_EXT_texture_sRGB;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_sRGB_decode\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_sRGB_decode\", 19))\n        {\n          ret = GLEW_EXT_texture_sRGB_decode;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_shared_exponent\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_shared_exponent\", 23))\n        {\n          ret = GLEW_EXT_texture_shared_exponent;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_snorm\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_snorm\", 13))\n        {\n          ret = GLEW_EXT_texture_snorm;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_texture_swizzle\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_swizzle\", 15))\n        {\n          ret = GLEW_EXT_texture_swizzle;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_timer_query\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"timer_query\", 11))\n        {\n          ret = GLEW_EXT_timer_query;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_transform_feedback\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"transform_feedback\", 18))\n        {\n          ret = GLEW_EXT_transform_feedback;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_vertex_array\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_array\", 12))\n        {\n          ret = GLEW_EXT_vertex_array;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_vertex_array_bgra\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_array_bgra\", 17))\n        {\n          ret = GLEW_EXT_vertex_array_bgra;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_vertex_attrib_64bit\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_attrib_64bit\", 19))\n        {\n          ret = GLEW_EXT_vertex_attrib_64bit;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_vertex_shader\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_shader\", 13))\n        {\n          ret = GLEW_EXT_vertex_shader;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_vertex_weighting\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_weighting\", 16))\n        {\n          ret = GLEW_EXT_vertex_weighting;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_window_rectangles\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"window_rectangles\", 17))\n        {\n          ret = GLEW_EXT_window_rectangles;\n          continue;\n        }\n#endif\n#ifdef GL_EXT_x11_sync_object\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"x11_sync_object\", 15))\n        {\n          ret = GLEW_EXT_x11_sync_object;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"GREMEDY_\", 8))\n      {\n#ifdef GL_GREMEDY_frame_terminator\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"frame_terminator\", 16))\n        {\n          ret = GLEW_GREMEDY_frame_terminator;\n          continue;\n        }\n#endif\n#ifdef GL_GREMEDY_string_marker\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"string_marker\", 13))\n        {\n          ret = GLEW_GREMEDY_string_marker;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"HP_\", 3))\n      {\n#ifdef GL_HP_convolution_border_modes\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"convolution_border_modes\", 24))\n        {\n          ret = GLEW_HP_convolution_border_modes;\n          continue;\n        }\n#endif\n#ifdef GL_HP_image_transform\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"image_transform\", 15))\n        {\n          ret = GLEW_HP_image_transform;\n          continue;\n        }\n#endif\n#ifdef GL_HP_occlusion_test\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"occlusion_test\", 14))\n        {\n          ret = GLEW_HP_occlusion_test;\n          continue;\n        }\n#endif\n#ifdef GL_HP_texture_lighting\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_lighting\", 16))\n        {\n          ret = GLEW_HP_texture_lighting;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"IBM_\", 4))\n      {\n#ifdef GL_IBM_cull_vertex\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"cull_vertex\", 11))\n        {\n          ret = GLEW_IBM_cull_vertex;\n          continue;\n        }\n#endif\n#ifdef GL_IBM_multimode_draw_arrays\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"multimode_draw_arrays\", 21))\n        {\n          ret = GLEW_IBM_multimode_draw_arrays;\n          continue;\n        }\n#endif\n#ifdef GL_IBM_rasterpos_clip\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"rasterpos_clip\", 14))\n        {\n          ret = GLEW_IBM_rasterpos_clip;\n          continue;\n        }\n#endif\n#ifdef GL_IBM_static_data\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"static_data\", 11))\n        {\n          ret = GLEW_IBM_static_data;\n          continue;\n        }\n#endif\n#ifdef GL_IBM_texture_mirrored_repeat\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_mirrored_repeat\", 23))\n        {\n          ret = GLEW_IBM_texture_mirrored_repeat;\n          continue;\n        }\n#endif\n#ifdef GL_IBM_vertex_array_lists\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_array_lists\", 18))\n        {\n          ret = GLEW_IBM_vertex_array_lists;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"INGR_\", 5))\n      {\n#ifdef GL_INGR_color_clamp\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"color_clamp\", 11))\n        {\n          ret = GLEW_INGR_color_clamp;\n          continue;\n        }\n#endif\n#ifdef GL_INGR_interlace_read\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"interlace_read\", 14))\n        {\n          ret = GLEW_INGR_interlace_read;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"INTEL_\", 6))\n      {\n#ifdef GL_INTEL_conservative_rasterization\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"conservative_rasterization\", 26))\n        {\n          ret = GLEW_INTEL_conservative_rasterization;\n          continue;\n        }\n#endif\n#ifdef GL_INTEL_fragment_shader_ordering\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fragment_shader_ordering\", 24))\n        {\n          ret = GLEW_INTEL_fragment_shader_ordering;\n          continue;\n        }\n#endif\n#ifdef GL_INTEL_framebuffer_CMAA\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"framebuffer_CMAA\", 16))\n        {\n          ret = GLEW_INTEL_framebuffer_CMAA;\n          continue;\n        }\n#endif\n#ifdef GL_INTEL_map_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"map_texture\", 11))\n        {\n          ret = GLEW_INTEL_map_texture;\n          continue;\n        }\n#endif\n#ifdef GL_INTEL_parallel_arrays\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"parallel_arrays\", 15))\n        {\n          ret = GLEW_INTEL_parallel_arrays;\n          continue;\n        }\n#endif\n#ifdef GL_INTEL_performance_query\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"performance_query\", 17))\n        {\n          ret = GLEW_INTEL_performance_query;\n          continue;\n        }\n#endif\n#ifdef GL_INTEL_texture_scissor\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_scissor\", 15))\n        {\n          ret = GLEW_INTEL_texture_scissor;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"KHR_\", 4))\n      {\n#ifdef GL_KHR_blend_equation_advanced\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"blend_equation_advanced\", 23))\n        {\n          ret = GLEW_KHR_blend_equation_advanced;\n          continue;\n        }\n#endif\n#ifdef GL_KHR_blend_equation_advanced_coherent\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"blend_equation_advanced_coherent\", 32))\n        {\n          ret = GLEW_KHR_blend_equation_advanced_coherent;\n          continue;\n        }\n#endif\n#ifdef GL_KHR_context_flush_control\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"context_flush_control\", 21))\n        {\n          ret = GLEW_KHR_context_flush_control;\n          continue;\n        }\n#endif\n#ifdef GL_KHR_debug\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"debug\", 5))\n        {\n          ret = GLEW_KHR_debug;\n          continue;\n        }\n#endif\n#ifdef GL_KHR_no_error\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"no_error\", 8))\n        {\n          ret = GLEW_KHR_no_error;\n          continue;\n        }\n#endif\n#ifdef GL_KHR_robust_buffer_access_behavior\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"robust_buffer_access_behavior\", 29))\n        {\n          ret = GLEW_KHR_robust_buffer_access_behavior;\n          continue;\n        }\n#endif\n#ifdef GL_KHR_robustness\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"robustness\", 10))\n        {\n          ret = GLEW_KHR_robustness;\n          continue;\n        }\n#endif\n#ifdef GL_KHR_texture_compression_astc_hdr\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_compression_astc_hdr\", 28))\n        {\n          ret = GLEW_KHR_texture_compression_astc_hdr;\n          continue;\n        }\n#endif\n#ifdef GL_KHR_texture_compression_astc_ldr\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_compression_astc_ldr\", 28))\n        {\n          ret = GLEW_KHR_texture_compression_astc_ldr;\n          continue;\n        }\n#endif\n#ifdef GL_KHR_texture_compression_astc_sliced_3d\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_compression_astc_sliced_3d\", 34))\n        {\n          ret = GLEW_KHR_texture_compression_astc_sliced_3d;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"KTX_\", 4))\n      {\n#ifdef GL_KTX_buffer_region\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"buffer_region\", 13))\n        {\n          ret = GLEW_KTX_buffer_region;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"MESAX_\", 6))\n      {\n#ifdef GL_MESAX_texture_stack\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_stack\", 13))\n        {\n          ret = GLEW_MESAX_texture_stack;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"MESA_\", 5))\n      {\n#ifdef GL_MESA_pack_invert\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pack_invert\", 11))\n        {\n          ret = GLEW_MESA_pack_invert;\n          continue;\n        }\n#endif\n#ifdef GL_MESA_resize_buffers\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"resize_buffers\", 14))\n        {\n          ret = GLEW_MESA_resize_buffers;\n          continue;\n        }\n#endif\n#ifdef GL_MESA_shader_integer_functions\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_integer_functions\", 24))\n        {\n          ret = GLEW_MESA_shader_integer_functions;\n          continue;\n        }\n#endif\n#ifdef GL_MESA_window_pos\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"window_pos\", 10))\n        {\n          ret = GLEW_MESA_window_pos;\n          continue;\n        }\n#endif\n#ifdef GL_MESA_ycbcr_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"ycbcr_texture\", 13))\n        {\n          ret = GLEW_MESA_ycbcr_texture;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"NVX_\", 4))\n      {\n#ifdef GL_NVX_blend_equation_advanced_multi_draw_buffers\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"blend_equation_advanced_multi_draw_buffers\", 42))\n        {\n          ret = GLEW_NVX_blend_equation_advanced_multi_draw_buffers;\n          continue;\n        }\n#endif\n#ifdef GL_NVX_conditional_render\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"conditional_render\", 18))\n        {\n          ret = GLEW_NVX_conditional_render;\n          continue;\n        }\n#endif\n#ifdef GL_NVX_gpu_memory_info\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"gpu_memory_info\", 15))\n        {\n          ret = GLEW_NVX_gpu_memory_info;\n          continue;\n        }\n#endif\n#ifdef GL_NVX_linked_gpu_multicast\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"linked_gpu_multicast\", 20))\n        {\n          ret = GLEW_NVX_linked_gpu_multicast;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"NV_\", 3))\n      {\n#ifdef GL_NV_bindless_multi_draw_indirect\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"bindless_multi_draw_indirect\", 28))\n        {\n          ret = GLEW_NV_bindless_multi_draw_indirect;\n          continue;\n        }\n#endif\n#ifdef GL_NV_bindless_multi_draw_indirect_count\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"bindless_multi_draw_indirect_count\", 34))\n        {\n          ret = GLEW_NV_bindless_multi_draw_indirect_count;\n          continue;\n        }\n#endif\n#ifdef GL_NV_bindless_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"bindless_texture\", 16))\n        {\n          ret = GLEW_NV_bindless_texture;\n          continue;\n        }\n#endif\n#ifdef GL_NV_blend_equation_advanced\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"blend_equation_advanced\", 23))\n        {\n          ret = GLEW_NV_blend_equation_advanced;\n          continue;\n        }\n#endif\n#ifdef GL_NV_blend_equation_advanced_coherent\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"blend_equation_advanced_coherent\", 32))\n        {\n          ret = GLEW_NV_blend_equation_advanced_coherent;\n          continue;\n        }\n#endif\n#ifdef GL_NV_blend_square\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"blend_square\", 12))\n        {\n          ret = GLEW_NV_blend_square;\n          continue;\n        }\n#endif\n#ifdef GL_NV_clip_space_w_scaling\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"clip_space_w_scaling\", 20))\n        {\n          ret = GLEW_NV_clip_space_w_scaling;\n          continue;\n        }\n#endif\n#ifdef GL_NV_command_list\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"command_list\", 12))\n        {\n          ret = GLEW_NV_command_list;\n          continue;\n        }\n#endif\n#ifdef GL_NV_compute_program5\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"compute_program5\", 16))\n        {\n          ret = GLEW_NV_compute_program5;\n          continue;\n        }\n#endif\n#ifdef GL_NV_conditional_render\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"conditional_render\", 18))\n        {\n          ret = GLEW_NV_conditional_render;\n          continue;\n        }\n#endif\n#ifdef GL_NV_conservative_raster\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"conservative_raster\", 19))\n        {\n          ret = GLEW_NV_conservative_raster;\n          continue;\n        }\n#endif\n#ifdef GL_NV_conservative_raster_dilate\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"conservative_raster_dilate\", 26))\n        {\n          ret = GLEW_NV_conservative_raster_dilate;\n          continue;\n        }\n#endif\n#ifdef GL_NV_conservative_raster_pre_snap_triangles\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"conservative_raster_pre_snap_triangles\", 38))\n        {\n          ret = GLEW_NV_conservative_raster_pre_snap_triangles;\n          continue;\n        }\n#endif\n#ifdef GL_NV_copy_depth_to_color\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"copy_depth_to_color\", 19))\n        {\n          ret = GLEW_NV_copy_depth_to_color;\n          continue;\n        }\n#endif\n#ifdef GL_NV_copy_image\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"copy_image\", 10))\n        {\n          ret = GLEW_NV_copy_image;\n          continue;\n        }\n#endif\n#ifdef GL_NV_deep_texture3D\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"deep_texture3D\", 14))\n        {\n          ret = GLEW_NV_deep_texture3D;\n          continue;\n        }\n#endif\n#ifdef GL_NV_depth_buffer_float\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"depth_buffer_float\", 18))\n        {\n          ret = GLEW_NV_depth_buffer_float;\n          continue;\n        }\n#endif\n#ifdef GL_NV_depth_clamp\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"depth_clamp\", 11))\n        {\n          ret = GLEW_NV_depth_clamp;\n          continue;\n        }\n#endif\n#ifdef GL_NV_depth_range_unclamped\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"depth_range_unclamped\", 21))\n        {\n          ret = GLEW_NV_depth_range_unclamped;\n          continue;\n        }\n#endif\n#ifdef GL_NV_draw_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"draw_texture\", 12))\n        {\n          ret = GLEW_NV_draw_texture;\n          continue;\n        }\n#endif\n#ifdef GL_NV_draw_vulkan_image\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"draw_vulkan_image\", 17))\n        {\n          ret = GLEW_NV_draw_vulkan_image;\n          continue;\n        }\n#endif\n#ifdef GL_NV_evaluators\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"evaluators\", 10))\n        {\n          ret = GLEW_NV_evaluators;\n          continue;\n        }\n#endif\n#ifdef GL_NV_explicit_multisample\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"explicit_multisample\", 20))\n        {\n          ret = GLEW_NV_explicit_multisample;\n          continue;\n        }\n#endif\n#ifdef GL_NV_fence\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fence\", 5))\n        {\n          ret = GLEW_NV_fence;\n          continue;\n        }\n#endif\n#ifdef GL_NV_fill_rectangle\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fill_rectangle\", 14))\n        {\n          ret = GLEW_NV_fill_rectangle;\n          continue;\n        }\n#endif\n#ifdef GL_NV_float_buffer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"float_buffer\", 12))\n        {\n          ret = GLEW_NV_float_buffer;\n          continue;\n        }\n#endif\n#ifdef GL_NV_fog_distance\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fog_distance\", 12))\n        {\n          ret = GLEW_NV_fog_distance;\n          continue;\n        }\n#endif\n#ifdef GL_NV_fragment_coverage_to_color\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fragment_coverage_to_color\", 26))\n        {\n          ret = GLEW_NV_fragment_coverage_to_color;\n          continue;\n        }\n#endif\n#ifdef GL_NV_fragment_program\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fragment_program\", 16))\n        {\n          ret = GLEW_NV_fragment_program;\n          continue;\n        }\n#endif\n#ifdef GL_NV_fragment_program2\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fragment_program2\", 17))\n        {\n          ret = GLEW_NV_fragment_program2;\n          continue;\n        }\n#endif\n#ifdef GL_NV_fragment_program4\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fragment_program4\", 17))\n        {\n          ret = GLEW_NV_fragment_program4;\n          continue;\n        }\n#endif\n#ifdef GL_NV_fragment_program_option\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fragment_program_option\", 23))\n        {\n          ret = GLEW_NV_fragment_program_option;\n          continue;\n        }\n#endif\n#ifdef GL_NV_fragment_shader_interlock\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fragment_shader_interlock\", 25))\n        {\n          ret = GLEW_NV_fragment_shader_interlock;\n          continue;\n        }\n#endif\n#ifdef GL_NV_framebuffer_mixed_samples\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"framebuffer_mixed_samples\", 25))\n        {\n          ret = GLEW_NV_framebuffer_mixed_samples;\n          continue;\n        }\n#endif\n#ifdef GL_NV_framebuffer_multisample_coverage\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"framebuffer_multisample_coverage\", 32))\n        {\n          ret = GLEW_NV_framebuffer_multisample_coverage;\n          continue;\n        }\n#endif\n#ifdef GL_NV_geometry_program4\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"geometry_program4\", 17))\n        {\n          ret = GLEW_NV_geometry_program4;\n          continue;\n        }\n#endif\n#ifdef GL_NV_geometry_shader4\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"geometry_shader4\", 16))\n        {\n          ret = GLEW_NV_geometry_shader4;\n          continue;\n        }\n#endif\n#ifdef GL_NV_geometry_shader_passthrough\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"geometry_shader_passthrough\", 27))\n        {\n          ret = GLEW_NV_geometry_shader_passthrough;\n          continue;\n        }\n#endif\n#ifdef GL_NV_gpu_multicast\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"gpu_multicast\", 13))\n        {\n          ret = GLEW_NV_gpu_multicast;\n          continue;\n        }\n#endif\n#ifdef GL_NV_gpu_program4\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"gpu_program4\", 12))\n        {\n          ret = GLEW_NV_gpu_program4;\n          continue;\n        }\n#endif\n#ifdef GL_NV_gpu_program5\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"gpu_program5\", 12))\n        {\n          ret = GLEW_NV_gpu_program5;\n          continue;\n        }\n#endif\n#ifdef GL_NV_gpu_program5_mem_extended\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"gpu_program5_mem_extended\", 25))\n        {\n          ret = GLEW_NV_gpu_program5_mem_extended;\n          continue;\n        }\n#endif\n#ifdef GL_NV_gpu_program_fp64\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"gpu_program_fp64\", 16))\n        {\n          ret = GLEW_NV_gpu_program_fp64;\n          continue;\n        }\n#endif\n#ifdef GL_NV_gpu_shader5\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"gpu_shader5\", 11))\n        {\n          ret = GLEW_NV_gpu_shader5;\n          continue;\n        }\n#endif\n#ifdef GL_NV_half_float\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"half_float\", 10))\n        {\n          ret = GLEW_NV_half_float;\n          continue;\n        }\n#endif\n#ifdef GL_NV_internalformat_sample_query\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"internalformat_sample_query\", 27))\n        {\n          ret = GLEW_NV_internalformat_sample_query;\n          continue;\n        }\n#endif\n#ifdef GL_NV_light_max_exponent\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"light_max_exponent\", 18))\n        {\n          ret = GLEW_NV_light_max_exponent;\n          continue;\n        }\n#endif\n#ifdef GL_NV_multisample_coverage\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"multisample_coverage\", 20))\n        {\n          ret = GLEW_NV_multisample_coverage;\n          continue;\n        }\n#endif\n#ifdef GL_NV_multisample_filter_hint\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"multisample_filter_hint\", 23))\n        {\n          ret = GLEW_NV_multisample_filter_hint;\n          continue;\n        }\n#endif\n#ifdef GL_NV_occlusion_query\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"occlusion_query\", 15))\n        {\n          ret = GLEW_NV_occlusion_query;\n          continue;\n        }\n#endif\n#ifdef GL_NV_packed_depth_stencil\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"packed_depth_stencil\", 20))\n        {\n          ret = GLEW_NV_packed_depth_stencil;\n          continue;\n        }\n#endif\n#ifdef GL_NV_parameter_buffer_object\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"parameter_buffer_object\", 23))\n        {\n          ret = GLEW_NV_parameter_buffer_object;\n          continue;\n        }\n#endif\n#ifdef GL_NV_parameter_buffer_object2\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"parameter_buffer_object2\", 24))\n        {\n          ret = GLEW_NV_parameter_buffer_object2;\n          continue;\n        }\n#endif\n#ifdef GL_NV_path_rendering\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"path_rendering\", 14))\n        {\n          ret = GLEW_NV_path_rendering;\n          continue;\n        }\n#endif\n#ifdef GL_NV_path_rendering_shared_edge\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"path_rendering_shared_edge\", 26))\n        {\n          ret = GLEW_NV_path_rendering_shared_edge;\n          continue;\n        }\n#endif\n#ifdef GL_NV_pixel_data_range\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pixel_data_range\", 16))\n        {\n          ret = GLEW_NV_pixel_data_range;\n          continue;\n        }\n#endif\n#ifdef GL_NV_point_sprite\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"point_sprite\", 12))\n        {\n          ret = GLEW_NV_point_sprite;\n          continue;\n        }\n#endif\n#ifdef GL_NV_present_video\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"present_video\", 13))\n        {\n          ret = GLEW_NV_present_video;\n          continue;\n        }\n#endif\n#ifdef GL_NV_primitive_restart\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"primitive_restart\", 17))\n        {\n          ret = GLEW_NV_primitive_restart;\n          continue;\n        }\n#endif\n#ifdef GL_NV_register_combiners\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"register_combiners\", 18))\n        {\n          ret = GLEW_NV_register_combiners;\n          continue;\n        }\n#endif\n#ifdef GL_NV_register_combiners2\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"register_combiners2\", 19))\n        {\n          ret = GLEW_NV_register_combiners2;\n          continue;\n        }\n#endif\n#ifdef GL_NV_robustness_video_memory_purge\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"robustness_video_memory_purge\", 29))\n        {\n          ret = GLEW_NV_robustness_video_memory_purge;\n          continue;\n        }\n#endif\n#ifdef GL_NV_sample_locations\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"sample_locations\", 16))\n        {\n          ret = GLEW_NV_sample_locations;\n          continue;\n        }\n#endif\n#ifdef GL_NV_sample_mask_override_coverage\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"sample_mask_override_coverage\", 29))\n        {\n          ret = GLEW_NV_sample_mask_override_coverage;\n          continue;\n        }\n#endif\n#ifdef GL_NV_shader_atomic_counters\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_atomic_counters\", 22))\n        {\n          ret = GLEW_NV_shader_atomic_counters;\n          continue;\n        }\n#endif\n#ifdef GL_NV_shader_atomic_float\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_atomic_float\", 19))\n        {\n          ret = GLEW_NV_shader_atomic_float;\n          continue;\n        }\n#endif\n#ifdef GL_NV_shader_atomic_float64\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_atomic_float64\", 21))\n        {\n          ret = GLEW_NV_shader_atomic_float64;\n          continue;\n        }\n#endif\n#ifdef GL_NV_shader_atomic_fp16_vector\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_atomic_fp16_vector\", 25))\n        {\n          ret = GLEW_NV_shader_atomic_fp16_vector;\n          continue;\n        }\n#endif\n#ifdef GL_NV_shader_atomic_int64\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_atomic_int64\", 19))\n        {\n          ret = GLEW_NV_shader_atomic_int64;\n          continue;\n        }\n#endif\n#ifdef GL_NV_shader_buffer_load\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_buffer_load\", 18))\n        {\n          ret = GLEW_NV_shader_buffer_load;\n          continue;\n        }\n#endif\n#ifdef GL_NV_shader_storage_buffer_object\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_storage_buffer_object\", 28))\n        {\n          ret = GLEW_NV_shader_storage_buffer_object;\n          continue;\n        }\n#endif\n#ifdef GL_NV_shader_thread_group\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_thread_group\", 19))\n        {\n          ret = GLEW_NV_shader_thread_group;\n          continue;\n        }\n#endif\n#ifdef GL_NV_shader_thread_shuffle\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shader_thread_shuffle\", 21))\n        {\n          ret = GLEW_NV_shader_thread_shuffle;\n          continue;\n        }\n#endif\n#ifdef GL_NV_stereo_view_rendering\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"stereo_view_rendering\", 21))\n        {\n          ret = GLEW_NV_stereo_view_rendering;\n          continue;\n        }\n#endif\n#ifdef GL_NV_tessellation_program5\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"tessellation_program5\", 21))\n        {\n          ret = GLEW_NV_tessellation_program5;\n          continue;\n        }\n#endif\n#ifdef GL_NV_texgen_emboss\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texgen_emboss\", 13))\n        {\n          ret = GLEW_NV_texgen_emboss;\n          continue;\n        }\n#endif\n#ifdef GL_NV_texgen_reflection\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texgen_reflection\", 17))\n        {\n          ret = GLEW_NV_texgen_reflection;\n          continue;\n        }\n#endif\n#ifdef GL_NV_texture_barrier\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_barrier\", 15))\n        {\n          ret = GLEW_NV_texture_barrier;\n          continue;\n        }\n#endif\n#ifdef GL_NV_texture_compression_vtc\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_compression_vtc\", 23))\n        {\n          ret = GLEW_NV_texture_compression_vtc;\n          continue;\n        }\n#endif\n#ifdef GL_NV_texture_env_combine4\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_env_combine4\", 20))\n        {\n          ret = GLEW_NV_texture_env_combine4;\n          continue;\n        }\n#endif\n#ifdef GL_NV_texture_expand_normal\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_expand_normal\", 21))\n        {\n          ret = GLEW_NV_texture_expand_normal;\n          continue;\n        }\n#endif\n#ifdef GL_NV_texture_multisample\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_multisample\", 19))\n        {\n          ret = GLEW_NV_texture_multisample;\n          continue;\n        }\n#endif\n#ifdef GL_NV_texture_rectangle\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_rectangle\", 17))\n        {\n          ret = GLEW_NV_texture_rectangle;\n          continue;\n        }\n#endif\n#ifdef GL_NV_texture_shader\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_shader\", 14))\n        {\n          ret = GLEW_NV_texture_shader;\n          continue;\n        }\n#endif\n#ifdef GL_NV_texture_shader2\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_shader2\", 15))\n        {\n          ret = GLEW_NV_texture_shader2;\n          continue;\n        }\n#endif\n#ifdef GL_NV_texture_shader3\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_shader3\", 15))\n        {\n          ret = GLEW_NV_texture_shader3;\n          continue;\n        }\n#endif\n#ifdef GL_NV_transform_feedback\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"transform_feedback\", 18))\n        {\n          ret = GLEW_NV_transform_feedback;\n          continue;\n        }\n#endif\n#ifdef GL_NV_transform_feedback2\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"transform_feedback2\", 19))\n        {\n          ret = GLEW_NV_transform_feedback2;\n          continue;\n        }\n#endif\n#ifdef GL_NV_uniform_buffer_unified_memory\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"uniform_buffer_unified_memory\", 29))\n        {\n          ret = GLEW_NV_uniform_buffer_unified_memory;\n          continue;\n        }\n#endif\n#ifdef GL_NV_vdpau_interop\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vdpau_interop\", 13))\n        {\n          ret = GLEW_NV_vdpau_interop;\n          continue;\n        }\n#endif\n#ifdef GL_NV_vertex_array_range\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_array_range\", 18))\n        {\n          ret = GLEW_NV_vertex_array_range;\n          continue;\n        }\n#endif\n#ifdef GL_NV_vertex_array_range2\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_array_range2\", 19))\n        {\n          ret = GLEW_NV_vertex_array_range2;\n          continue;\n        }\n#endif\n#ifdef GL_NV_vertex_attrib_integer_64bit\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_attrib_integer_64bit\", 27))\n        {\n          ret = GLEW_NV_vertex_attrib_integer_64bit;\n          continue;\n        }\n#endif\n#ifdef GL_NV_vertex_buffer_unified_memory\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_buffer_unified_memory\", 28))\n        {\n          ret = GLEW_NV_vertex_buffer_unified_memory;\n          continue;\n        }\n#endif\n#ifdef GL_NV_vertex_program\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_program\", 14))\n        {\n          ret = GLEW_NV_vertex_program;\n          continue;\n        }\n#endif\n#ifdef GL_NV_vertex_program1_1\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_program1_1\", 17))\n        {\n          ret = GLEW_NV_vertex_program1_1;\n          continue;\n        }\n#endif\n#ifdef GL_NV_vertex_program2\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_program2\", 15))\n        {\n          ret = GLEW_NV_vertex_program2;\n          continue;\n        }\n#endif\n#ifdef GL_NV_vertex_program2_option\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_program2_option\", 22))\n        {\n          ret = GLEW_NV_vertex_program2_option;\n          continue;\n        }\n#endif\n#ifdef GL_NV_vertex_program3\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_program3\", 15))\n        {\n          ret = GLEW_NV_vertex_program3;\n          continue;\n        }\n#endif\n#ifdef GL_NV_vertex_program4\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_program4\", 15))\n        {\n          ret = GLEW_NV_vertex_program4;\n          continue;\n        }\n#endif\n#ifdef GL_NV_video_capture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"video_capture\", 13))\n        {\n          ret = GLEW_NV_video_capture;\n          continue;\n        }\n#endif\n#ifdef GL_NV_viewport_array2\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"viewport_array2\", 15))\n        {\n          ret = GLEW_NV_viewport_array2;\n          continue;\n        }\n#endif\n#ifdef GL_NV_viewport_swizzle\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"viewport_swizzle\", 16))\n        {\n          ret = GLEW_NV_viewport_swizzle;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"OES_\", 4))\n      {\n#ifdef GL_OES_byte_coordinates\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"byte_coordinates\", 16))\n        {\n          ret = GLEW_OES_byte_coordinates;\n          continue;\n        }\n#endif\n#ifdef GL_OES_compressed_paletted_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"compressed_paletted_texture\", 27))\n        {\n          ret = GLEW_OES_compressed_paletted_texture;\n          continue;\n        }\n#endif\n#ifdef GL_OES_read_format\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"read_format\", 11))\n        {\n          ret = GLEW_OES_read_format;\n          continue;\n        }\n#endif\n#ifdef GL_OES_single_precision\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"single_precision\", 16))\n        {\n          ret = GLEW_OES_single_precision;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"OML_\", 4))\n      {\n#ifdef GL_OML_interlace\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"interlace\", 9))\n        {\n          ret = GLEW_OML_interlace;\n          continue;\n        }\n#endif\n#ifdef GL_OML_resample\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"resample\", 8))\n        {\n          ret = GLEW_OML_resample;\n          continue;\n        }\n#endif\n#ifdef GL_OML_subsample\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"subsample\", 9))\n        {\n          ret = GLEW_OML_subsample;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"OVR_\", 4))\n      {\n#ifdef GL_OVR_multiview\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"multiview\", 9))\n        {\n          ret = GLEW_OVR_multiview;\n          continue;\n        }\n#endif\n#ifdef GL_OVR_multiview2\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"multiview2\", 10))\n        {\n          ret = GLEW_OVR_multiview2;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"PGI_\", 4))\n      {\n#ifdef GL_PGI_misc_hints\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"misc_hints\", 10))\n        {\n          ret = GLEW_PGI_misc_hints;\n          continue;\n        }\n#endif\n#ifdef GL_PGI_vertex_hints\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_hints\", 12))\n        {\n          ret = GLEW_PGI_vertex_hints;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"REGAL_\", 6))\n      {\n#ifdef GL_REGAL_ES1_0_compatibility\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"ES1_0_compatibility\", 19))\n        {\n          ret = GLEW_REGAL_ES1_0_compatibility;\n          continue;\n        }\n#endif\n#ifdef GL_REGAL_ES1_1_compatibility\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"ES1_1_compatibility\", 19))\n        {\n          ret = GLEW_REGAL_ES1_1_compatibility;\n          continue;\n        }\n#endif\n#ifdef GL_REGAL_enable\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"enable\", 6))\n        {\n          ret = GLEW_REGAL_enable;\n          continue;\n        }\n#endif\n#ifdef GL_REGAL_error_string\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"error_string\", 12))\n        {\n          ret = GLEW_REGAL_error_string;\n          continue;\n        }\n#endif\n#ifdef GL_REGAL_extension_query\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"extension_query\", 15))\n        {\n          ret = GLEW_REGAL_extension_query;\n          continue;\n        }\n#endif\n#ifdef GL_REGAL_log\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"log\", 3))\n        {\n          ret = GLEW_REGAL_log;\n          continue;\n        }\n#endif\n#ifdef GL_REGAL_proc_address\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"proc_address\", 12))\n        {\n          ret = GLEW_REGAL_proc_address;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"REND_\", 5))\n      {\n#ifdef GL_REND_screen_coordinates\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"screen_coordinates\", 18))\n        {\n          ret = GLEW_REND_screen_coordinates;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"S3_\", 3))\n      {\n#ifdef GL_S3_s3tc\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"s3tc\", 4))\n        {\n          ret = GLEW_S3_s3tc;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"SGIS_\", 5))\n      {\n#ifdef GL_SGIS_color_range\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"color_range\", 11))\n        {\n          ret = GLEW_SGIS_color_range;\n          continue;\n        }\n#endif\n#ifdef GL_SGIS_detail_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"detail_texture\", 14))\n        {\n          ret = GLEW_SGIS_detail_texture;\n          continue;\n        }\n#endif\n#ifdef GL_SGIS_fog_function\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fog_function\", 12))\n        {\n          ret = GLEW_SGIS_fog_function;\n          continue;\n        }\n#endif\n#ifdef GL_SGIS_generate_mipmap\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"generate_mipmap\", 15))\n        {\n          ret = GLEW_SGIS_generate_mipmap;\n          continue;\n        }\n#endif\n#ifdef GL_SGIS_multisample\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"multisample\", 11))\n        {\n          ret = GLEW_SGIS_multisample;\n          continue;\n        }\n#endif\n#ifdef GL_SGIS_pixel_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pixel_texture\", 13))\n        {\n          ret = GLEW_SGIS_pixel_texture;\n          continue;\n        }\n#endif\n#ifdef GL_SGIS_point_line_texgen\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"point_line_texgen\", 17))\n        {\n          ret = GLEW_SGIS_point_line_texgen;\n          continue;\n        }\n#endif\n#ifdef GL_SGIS_sharpen_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"sharpen_texture\", 15))\n        {\n          ret = GLEW_SGIS_sharpen_texture;\n          continue;\n        }\n#endif\n#ifdef GL_SGIS_texture4D\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture4D\", 9))\n        {\n          ret = GLEW_SGIS_texture4D;\n          continue;\n        }\n#endif\n#ifdef GL_SGIS_texture_border_clamp\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_border_clamp\", 20))\n        {\n          ret = GLEW_SGIS_texture_border_clamp;\n          continue;\n        }\n#endif\n#ifdef GL_SGIS_texture_edge_clamp\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_edge_clamp\", 18))\n        {\n          ret = GLEW_SGIS_texture_edge_clamp;\n          continue;\n        }\n#endif\n#ifdef GL_SGIS_texture_filter4\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_filter4\", 15))\n        {\n          ret = GLEW_SGIS_texture_filter4;\n          continue;\n        }\n#endif\n#ifdef GL_SGIS_texture_lod\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_lod\", 11))\n        {\n          ret = GLEW_SGIS_texture_lod;\n          continue;\n        }\n#endif\n#ifdef GL_SGIS_texture_select\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_select\", 14))\n        {\n          ret = GLEW_SGIS_texture_select;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"SGIX_\", 5))\n      {\n#ifdef GL_SGIX_async\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"async\", 5))\n        {\n          ret = GLEW_SGIX_async;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_async_histogram\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"async_histogram\", 15))\n        {\n          ret = GLEW_SGIX_async_histogram;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_async_pixel\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"async_pixel\", 11))\n        {\n          ret = GLEW_SGIX_async_pixel;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_blend_alpha_minmax\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"blend_alpha_minmax\", 18))\n        {\n          ret = GLEW_SGIX_blend_alpha_minmax;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_clipmap\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"clipmap\", 7))\n        {\n          ret = GLEW_SGIX_clipmap;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_convolution_accuracy\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"convolution_accuracy\", 20))\n        {\n          ret = GLEW_SGIX_convolution_accuracy;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_depth_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"depth_texture\", 13))\n        {\n          ret = GLEW_SGIX_depth_texture;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_flush_raster\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"flush_raster\", 12))\n        {\n          ret = GLEW_SGIX_flush_raster;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_fog_offset\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fog_offset\", 10))\n        {\n          ret = GLEW_SGIX_fog_offset;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_fog_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fog_texture\", 11))\n        {\n          ret = GLEW_SGIX_fog_texture;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_fragment_specular_lighting\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fragment_specular_lighting\", 26))\n        {\n          ret = GLEW_SGIX_fragment_specular_lighting;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_framezoom\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"framezoom\", 9))\n        {\n          ret = GLEW_SGIX_framezoom;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_interlace\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"interlace\", 9))\n        {\n          ret = GLEW_SGIX_interlace;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_ir_instrument1\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"ir_instrument1\", 14))\n        {\n          ret = GLEW_SGIX_ir_instrument1;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_list_priority\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"list_priority\", 13))\n        {\n          ret = GLEW_SGIX_list_priority;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_pixel_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pixel_texture\", 13))\n        {\n          ret = GLEW_SGIX_pixel_texture;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_pixel_texture_bits\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pixel_texture_bits\", 18))\n        {\n          ret = GLEW_SGIX_pixel_texture_bits;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_reference_plane\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"reference_plane\", 15))\n        {\n          ret = GLEW_SGIX_reference_plane;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_resample\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"resample\", 8))\n        {\n          ret = GLEW_SGIX_resample;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_shadow\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shadow\", 6))\n        {\n          ret = GLEW_SGIX_shadow;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_shadow_ambient\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shadow_ambient\", 14))\n        {\n          ret = GLEW_SGIX_shadow_ambient;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_sprite\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"sprite\", 6))\n        {\n          ret = GLEW_SGIX_sprite;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_tag_sample_buffer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"tag_sample_buffer\", 17))\n        {\n          ret = GLEW_SGIX_tag_sample_buffer;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_texture_add_env\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_add_env\", 15))\n        {\n          ret = GLEW_SGIX_texture_add_env;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_texture_coordinate_clamp\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_coordinate_clamp\", 24))\n        {\n          ret = GLEW_SGIX_texture_coordinate_clamp;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_texture_lod_bias\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_lod_bias\", 16))\n        {\n          ret = GLEW_SGIX_texture_lod_bias;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_texture_multi_buffer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_multi_buffer\", 20))\n        {\n          ret = GLEW_SGIX_texture_multi_buffer;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_texture_range\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_range\", 13))\n        {\n          ret = GLEW_SGIX_texture_range;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_texture_scale_bias\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_scale_bias\", 18))\n        {\n          ret = GLEW_SGIX_texture_scale_bias;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_vertex_preclip\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_preclip\", 14))\n        {\n          ret = GLEW_SGIX_vertex_preclip;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_vertex_preclip_hint\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_preclip_hint\", 19))\n        {\n          ret = GLEW_SGIX_vertex_preclip_hint;\n          continue;\n        }\n#endif\n#ifdef GL_SGIX_ycrcb\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"ycrcb\", 5))\n        {\n          ret = GLEW_SGIX_ycrcb;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"SGI_\", 4))\n      {\n#ifdef GL_SGI_color_matrix\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"color_matrix\", 12))\n        {\n          ret = GLEW_SGI_color_matrix;\n          continue;\n        }\n#endif\n#ifdef GL_SGI_color_table\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"color_table\", 11))\n        {\n          ret = GLEW_SGI_color_table;\n          continue;\n        }\n#endif\n#ifdef GL_SGI_texture_color_table\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_color_table\", 19))\n        {\n          ret = GLEW_SGI_texture_color_table;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"SUNX_\", 5))\n      {\n#ifdef GL_SUNX_constant_data\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"constant_data\", 13))\n        {\n          ret = GLEW_SUNX_constant_data;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"SUN_\", 4))\n      {\n#ifdef GL_SUN_convolution_border_modes\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"convolution_border_modes\", 24))\n        {\n          ret = GLEW_SUN_convolution_border_modes;\n          continue;\n        }\n#endif\n#ifdef GL_SUN_global_alpha\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"global_alpha\", 12))\n        {\n          ret = GLEW_SUN_global_alpha;\n          continue;\n        }\n#endif\n#ifdef GL_SUN_mesh_array\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"mesh_array\", 10))\n        {\n          ret = GLEW_SUN_mesh_array;\n          continue;\n        }\n#endif\n#ifdef GL_SUN_read_video_pixels\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"read_video_pixels\", 17))\n        {\n          ret = GLEW_SUN_read_video_pixels;\n          continue;\n        }\n#endif\n#ifdef GL_SUN_slice_accum\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"slice_accum\", 11))\n        {\n          ret = GLEW_SUN_slice_accum;\n          continue;\n        }\n#endif\n#ifdef GL_SUN_triangle_list\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"triangle_list\", 13))\n        {\n          ret = GLEW_SUN_triangle_list;\n          continue;\n        }\n#endif\n#ifdef GL_SUN_vertex\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex\", 6))\n        {\n          ret = GLEW_SUN_vertex;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"WIN_\", 4))\n      {\n#ifdef GL_WIN_phong_shading\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"phong_shading\", 13))\n        {\n          ret = GLEW_WIN_phong_shading;\n          continue;\n        }\n#endif\n#ifdef GL_WIN_specular_fog\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"specular_fog\", 12))\n        {\n          ret = GLEW_WIN_specular_fog;\n          continue;\n        }\n#endif\n#ifdef GL_WIN_swap_hint\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"swap_hint\", 9))\n        {\n          ret = GLEW_WIN_swap_hint;\n          continue;\n        }\n#endif\n      }\n    }\n    ret = (len == 0);\n  }\n  return ret;\n}\n\n#if defined(_WIN32) && !defined(GLEW_EGL) && !defined(GLEW_OSMESA)\n\nGLboolean GLEWAPIENTRY wglewIsSupported (const char* name)\n{\n  const GLubyte* pos = (const GLubyte*)name;\n  GLuint len = _glewStrLen(pos);\n  GLboolean ret = GL_TRUE;\n  while (ret && len > 0)\n  {\n    if (_glewStrSame1(&pos, &len, (const GLubyte*)\"WGL_\", 4))\n    {\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"3DFX_\", 5))\n      {\n#ifdef WGL_3DFX_multisample\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"multisample\", 11))\n        {\n          ret = WGLEW_3DFX_multisample;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"3DL_\", 4))\n      {\n#ifdef WGL_3DL_stereo_control\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"stereo_control\", 14))\n        {\n          ret = WGLEW_3DL_stereo_control;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"AMD_\", 4))\n      {\n#ifdef WGL_AMD_gpu_association\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"gpu_association\", 15))\n        {\n          ret = WGLEW_AMD_gpu_association;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"ARB_\", 4))\n      {\n#ifdef WGL_ARB_buffer_region\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"buffer_region\", 13))\n        {\n          ret = WGLEW_ARB_buffer_region;\n          continue;\n        }\n#endif\n#ifdef WGL_ARB_context_flush_control\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"context_flush_control\", 21))\n        {\n          ret = WGLEW_ARB_context_flush_control;\n          continue;\n        }\n#endif\n#ifdef WGL_ARB_create_context\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"create_context\", 14))\n        {\n          ret = WGLEW_ARB_create_context;\n          continue;\n        }\n#endif\n#ifdef WGL_ARB_create_context_profile\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"create_context_profile\", 22))\n        {\n          ret = WGLEW_ARB_create_context_profile;\n          continue;\n        }\n#endif\n#ifdef WGL_ARB_create_context_robustness\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"create_context_robustness\", 25))\n        {\n          ret = WGLEW_ARB_create_context_robustness;\n          continue;\n        }\n#endif\n#ifdef WGL_ARB_extensions_string\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"extensions_string\", 17))\n        {\n          ret = WGLEW_ARB_extensions_string;\n          continue;\n        }\n#endif\n#ifdef WGL_ARB_framebuffer_sRGB\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"framebuffer_sRGB\", 16))\n        {\n          ret = WGLEW_ARB_framebuffer_sRGB;\n          continue;\n        }\n#endif\n#ifdef WGL_ARB_make_current_read\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"make_current_read\", 17))\n        {\n          ret = WGLEW_ARB_make_current_read;\n          continue;\n        }\n#endif\n#ifdef WGL_ARB_multisample\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"multisample\", 11))\n        {\n          ret = WGLEW_ARB_multisample;\n          continue;\n        }\n#endif\n#ifdef WGL_ARB_pbuffer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pbuffer\", 7))\n        {\n          ret = WGLEW_ARB_pbuffer;\n          continue;\n        }\n#endif\n#ifdef WGL_ARB_pixel_format\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pixel_format\", 12))\n        {\n          ret = WGLEW_ARB_pixel_format;\n          continue;\n        }\n#endif\n#ifdef WGL_ARB_pixel_format_float\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pixel_format_float\", 18))\n        {\n          ret = WGLEW_ARB_pixel_format_float;\n          continue;\n        }\n#endif\n#ifdef WGL_ARB_render_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"render_texture\", 14))\n        {\n          ret = WGLEW_ARB_render_texture;\n          continue;\n        }\n#endif\n#ifdef WGL_ARB_robustness_application_isolation\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"robustness_application_isolation\", 32))\n        {\n          ret = WGLEW_ARB_robustness_application_isolation;\n          continue;\n        }\n#endif\n#ifdef WGL_ARB_robustness_share_group_isolation\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"robustness_share_group_isolation\", 32))\n        {\n          ret = WGLEW_ARB_robustness_share_group_isolation;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"ATI_\", 4))\n      {\n#ifdef WGL_ATI_pixel_format_float\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pixel_format_float\", 18))\n        {\n          ret = WGLEW_ATI_pixel_format_float;\n          continue;\n        }\n#endif\n#ifdef WGL_ATI_render_texture_rectangle\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"render_texture_rectangle\", 24))\n        {\n          ret = WGLEW_ATI_render_texture_rectangle;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"EXT_\", 4))\n      {\n#ifdef WGL_EXT_create_context_es2_profile\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"create_context_es2_profile\", 26))\n        {\n          ret = WGLEW_EXT_create_context_es2_profile;\n          continue;\n        }\n#endif\n#ifdef WGL_EXT_create_context_es_profile\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"create_context_es_profile\", 25))\n        {\n          ret = WGLEW_EXT_create_context_es_profile;\n          continue;\n        }\n#endif\n#ifdef WGL_EXT_depth_float\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"depth_float\", 11))\n        {\n          ret = WGLEW_EXT_depth_float;\n          continue;\n        }\n#endif\n#ifdef WGL_EXT_display_color_table\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"display_color_table\", 19))\n        {\n          ret = WGLEW_EXT_display_color_table;\n          continue;\n        }\n#endif\n#ifdef WGL_EXT_extensions_string\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"extensions_string\", 17))\n        {\n          ret = WGLEW_EXT_extensions_string;\n          continue;\n        }\n#endif\n#ifdef WGL_EXT_framebuffer_sRGB\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"framebuffer_sRGB\", 16))\n        {\n          ret = WGLEW_EXT_framebuffer_sRGB;\n          continue;\n        }\n#endif\n#ifdef WGL_EXT_make_current_read\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"make_current_read\", 17))\n        {\n          ret = WGLEW_EXT_make_current_read;\n          continue;\n        }\n#endif\n#ifdef WGL_EXT_multisample\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"multisample\", 11))\n        {\n          ret = WGLEW_EXT_multisample;\n          continue;\n        }\n#endif\n#ifdef WGL_EXT_pbuffer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pbuffer\", 7))\n        {\n          ret = WGLEW_EXT_pbuffer;\n          continue;\n        }\n#endif\n#ifdef WGL_EXT_pixel_format\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pixel_format\", 12))\n        {\n          ret = WGLEW_EXT_pixel_format;\n          continue;\n        }\n#endif\n#ifdef WGL_EXT_pixel_format_packed_float\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pixel_format_packed_float\", 25))\n        {\n          ret = WGLEW_EXT_pixel_format_packed_float;\n          continue;\n        }\n#endif\n#ifdef WGL_EXT_swap_control\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"swap_control\", 12))\n        {\n          ret = WGLEW_EXT_swap_control;\n          continue;\n        }\n#endif\n#ifdef WGL_EXT_swap_control_tear\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"swap_control_tear\", 17))\n        {\n          ret = WGLEW_EXT_swap_control_tear;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"I3D_\", 4))\n      {\n#ifdef WGL_I3D_digital_video_control\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"digital_video_control\", 21))\n        {\n          ret = WGLEW_I3D_digital_video_control;\n          continue;\n        }\n#endif\n#ifdef WGL_I3D_gamma\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"gamma\", 5))\n        {\n          ret = WGLEW_I3D_gamma;\n          continue;\n        }\n#endif\n#ifdef WGL_I3D_genlock\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"genlock\", 7))\n        {\n          ret = WGLEW_I3D_genlock;\n          continue;\n        }\n#endif\n#ifdef WGL_I3D_image_buffer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"image_buffer\", 12))\n        {\n          ret = WGLEW_I3D_image_buffer;\n          continue;\n        }\n#endif\n#ifdef WGL_I3D_swap_frame_lock\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"swap_frame_lock\", 15))\n        {\n          ret = WGLEW_I3D_swap_frame_lock;\n          continue;\n        }\n#endif\n#ifdef WGL_I3D_swap_frame_usage\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"swap_frame_usage\", 16))\n        {\n          ret = WGLEW_I3D_swap_frame_usage;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"NV_\", 3))\n      {\n#ifdef WGL_NV_DX_interop\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"DX_interop\", 10))\n        {\n          ret = WGLEW_NV_DX_interop;\n          continue;\n        }\n#endif\n#ifdef WGL_NV_DX_interop2\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"DX_interop2\", 11))\n        {\n          ret = WGLEW_NV_DX_interop2;\n          continue;\n        }\n#endif\n#ifdef WGL_NV_copy_image\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"copy_image\", 10))\n        {\n          ret = WGLEW_NV_copy_image;\n          continue;\n        }\n#endif\n#ifdef WGL_NV_delay_before_swap\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"delay_before_swap\", 17))\n        {\n          ret = WGLEW_NV_delay_before_swap;\n          continue;\n        }\n#endif\n#ifdef WGL_NV_float_buffer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"float_buffer\", 12))\n        {\n          ret = WGLEW_NV_float_buffer;\n          continue;\n        }\n#endif\n#ifdef WGL_NV_gpu_affinity\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"gpu_affinity\", 12))\n        {\n          ret = WGLEW_NV_gpu_affinity;\n          continue;\n        }\n#endif\n#ifdef WGL_NV_multisample_coverage\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"multisample_coverage\", 20))\n        {\n          ret = WGLEW_NV_multisample_coverage;\n          continue;\n        }\n#endif\n#ifdef WGL_NV_present_video\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"present_video\", 13))\n        {\n          ret = WGLEW_NV_present_video;\n          continue;\n        }\n#endif\n#ifdef WGL_NV_render_depth_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"render_depth_texture\", 20))\n        {\n          ret = WGLEW_NV_render_depth_texture;\n          continue;\n        }\n#endif\n#ifdef WGL_NV_render_texture_rectangle\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"render_texture_rectangle\", 24))\n        {\n          ret = WGLEW_NV_render_texture_rectangle;\n          continue;\n        }\n#endif\n#ifdef WGL_NV_swap_group\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"swap_group\", 10))\n        {\n          ret = WGLEW_NV_swap_group;\n          continue;\n        }\n#endif\n#ifdef WGL_NV_vertex_array_range\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_array_range\", 18))\n        {\n          ret = WGLEW_NV_vertex_array_range;\n          continue;\n        }\n#endif\n#ifdef WGL_NV_video_capture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"video_capture\", 13))\n        {\n          ret = WGLEW_NV_video_capture;\n          continue;\n        }\n#endif\n#ifdef WGL_NV_video_output\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"video_output\", 12))\n        {\n          ret = WGLEW_NV_video_output;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"OML_\", 4))\n      {\n#ifdef WGL_OML_sync_control\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"sync_control\", 12))\n        {\n          ret = WGLEW_OML_sync_control;\n          continue;\n        }\n#endif\n      }\n    }\n    ret = (len == 0);\n  }\n  return ret;\n}\n\n#elif !defined(GLEW_OSMESA) && !defined(GLEW_EGL) && !defined(__ANDROID__) && !defined(__native_client__) && !defined(__HAIKU__) && !defined(__APPLE__) || defined(GLEW_APPLE_GLX)\n\nGLboolean glxewIsSupported (const char* name)\n{\n  const GLubyte* pos = (const GLubyte*)name;\n  GLuint len = _glewStrLen(pos);\n  GLboolean ret = GL_TRUE;\n  while (ret && len > 0)\n  {\n    if(_glewStrSame1(&pos, &len, (const GLubyte*)\"GLX_\", 4))\n    {\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"VERSION_\", 8))\n      {\n#ifdef GLX_VERSION_1_2\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"1_2\", 3))\n        {\n          ret = GLXEW_VERSION_1_2;\n          continue;\n        }\n#endif\n#ifdef GLX_VERSION_1_3\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"1_3\", 3))\n        {\n          ret = GLXEW_VERSION_1_3;\n          continue;\n        }\n#endif\n#ifdef GLX_VERSION_1_4\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"1_4\", 3))\n        {\n          ret = GLXEW_VERSION_1_4;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"3DFX_\", 5))\n      {\n#ifdef GLX_3DFX_multisample\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"multisample\", 11))\n        {\n          ret = GLXEW_3DFX_multisample;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"AMD_\", 4))\n      {\n#ifdef GLX_AMD_gpu_association\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"gpu_association\", 15))\n        {\n          ret = GLXEW_AMD_gpu_association;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"ARB_\", 4))\n      {\n#ifdef GLX_ARB_context_flush_control\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"context_flush_control\", 21))\n        {\n          ret = GLXEW_ARB_context_flush_control;\n          continue;\n        }\n#endif\n#ifdef GLX_ARB_create_context\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"create_context\", 14))\n        {\n          ret = GLXEW_ARB_create_context;\n          continue;\n        }\n#endif\n#ifdef GLX_ARB_create_context_profile\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"create_context_profile\", 22))\n        {\n          ret = GLXEW_ARB_create_context_profile;\n          continue;\n        }\n#endif\n#ifdef GLX_ARB_create_context_robustness\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"create_context_robustness\", 25))\n        {\n          ret = GLXEW_ARB_create_context_robustness;\n          continue;\n        }\n#endif\n#ifdef GLX_ARB_fbconfig_float\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fbconfig_float\", 14))\n        {\n          ret = GLXEW_ARB_fbconfig_float;\n          continue;\n        }\n#endif\n#ifdef GLX_ARB_framebuffer_sRGB\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"framebuffer_sRGB\", 16))\n        {\n          ret = GLXEW_ARB_framebuffer_sRGB;\n          continue;\n        }\n#endif\n#ifdef GLX_ARB_get_proc_address\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"get_proc_address\", 16))\n        {\n          ret = GLXEW_ARB_get_proc_address;\n          continue;\n        }\n#endif\n#ifdef GLX_ARB_multisample\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"multisample\", 11))\n        {\n          ret = GLXEW_ARB_multisample;\n          continue;\n        }\n#endif\n#ifdef GLX_ARB_robustness_application_isolation\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"robustness_application_isolation\", 32))\n        {\n          ret = GLXEW_ARB_robustness_application_isolation;\n          continue;\n        }\n#endif\n#ifdef GLX_ARB_robustness_share_group_isolation\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"robustness_share_group_isolation\", 32))\n        {\n          ret = GLXEW_ARB_robustness_share_group_isolation;\n          continue;\n        }\n#endif\n#ifdef GLX_ARB_vertex_buffer_object\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_buffer_object\", 20))\n        {\n          ret = GLXEW_ARB_vertex_buffer_object;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"ATI_\", 4))\n      {\n#ifdef GLX_ATI_pixel_format_float\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pixel_format_float\", 18))\n        {\n          ret = GLXEW_ATI_pixel_format_float;\n          continue;\n        }\n#endif\n#ifdef GLX_ATI_render_texture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"render_texture\", 14))\n        {\n          ret = GLXEW_ATI_render_texture;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"EXT_\", 4))\n      {\n#ifdef GLX_EXT_buffer_age\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"buffer_age\", 10))\n        {\n          ret = GLXEW_EXT_buffer_age;\n          continue;\n        }\n#endif\n#ifdef GLX_EXT_create_context_es2_profile\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"create_context_es2_profile\", 26))\n        {\n          ret = GLXEW_EXT_create_context_es2_profile;\n          continue;\n        }\n#endif\n#ifdef GLX_EXT_create_context_es_profile\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"create_context_es_profile\", 25))\n        {\n          ret = GLXEW_EXT_create_context_es_profile;\n          continue;\n        }\n#endif\n#ifdef GLX_EXT_fbconfig_packed_float\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fbconfig_packed_float\", 21))\n        {\n          ret = GLXEW_EXT_fbconfig_packed_float;\n          continue;\n        }\n#endif\n#ifdef GLX_EXT_framebuffer_sRGB\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"framebuffer_sRGB\", 16))\n        {\n          ret = GLXEW_EXT_framebuffer_sRGB;\n          continue;\n        }\n#endif\n#ifdef GLX_EXT_import_context\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"import_context\", 14))\n        {\n          ret = GLXEW_EXT_import_context;\n          continue;\n        }\n#endif\n#ifdef GLX_EXT_libglvnd\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"libglvnd\", 8))\n        {\n          ret = GLXEW_EXT_libglvnd;\n          continue;\n        }\n#endif\n#ifdef GLX_EXT_scene_marker\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"scene_marker\", 12))\n        {\n          ret = GLXEW_EXT_scene_marker;\n          continue;\n        }\n#endif\n#ifdef GLX_EXT_stereo_tree\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"stereo_tree\", 11))\n        {\n          ret = GLXEW_EXT_stereo_tree;\n          continue;\n        }\n#endif\n#ifdef GLX_EXT_swap_control\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"swap_control\", 12))\n        {\n          ret = GLXEW_EXT_swap_control;\n          continue;\n        }\n#endif\n#ifdef GLX_EXT_swap_control_tear\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"swap_control_tear\", 17))\n        {\n          ret = GLXEW_EXT_swap_control_tear;\n          continue;\n        }\n#endif\n#ifdef GLX_EXT_texture_from_pixmap\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_from_pixmap\", 19))\n        {\n          ret = GLXEW_EXT_texture_from_pixmap;\n          continue;\n        }\n#endif\n#ifdef GLX_EXT_visual_info\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"visual_info\", 11))\n        {\n          ret = GLXEW_EXT_visual_info;\n          continue;\n        }\n#endif\n#ifdef GLX_EXT_visual_rating\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"visual_rating\", 13))\n        {\n          ret = GLXEW_EXT_visual_rating;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"INTEL_\", 6))\n      {\n#ifdef GLX_INTEL_swap_event\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"swap_event\", 10))\n        {\n          ret = GLXEW_INTEL_swap_event;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"MESA_\", 5))\n      {\n#ifdef GLX_MESA_agp_offset\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"agp_offset\", 10))\n        {\n          ret = GLXEW_MESA_agp_offset;\n          continue;\n        }\n#endif\n#ifdef GLX_MESA_copy_sub_buffer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"copy_sub_buffer\", 15))\n        {\n          ret = GLXEW_MESA_copy_sub_buffer;\n          continue;\n        }\n#endif\n#ifdef GLX_MESA_pixmap_colormap\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pixmap_colormap\", 15))\n        {\n          ret = GLXEW_MESA_pixmap_colormap;\n          continue;\n        }\n#endif\n#ifdef GLX_MESA_query_renderer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"query_renderer\", 14))\n        {\n          ret = GLXEW_MESA_query_renderer;\n          continue;\n        }\n#endif\n#ifdef GLX_MESA_release_buffers\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"release_buffers\", 15))\n        {\n          ret = GLXEW_MESA_release_buffers;\n          continue;\n        }\n#endif\n#ifdef GLX_MESA_set_3dfx_mode\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"set_3dfx_mode\", 13))\n        {\n          ret = GLXEW_MESA_set_3dfx_mode;\n          continue;\n        }\n#endif\n#ifdef GLX_MESA_swap_control\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"swap_control\", 12))\n        {\n          ret = GLXEW_MESA_swap_control;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"NV_\", 3))\n      {\n#ifdef GLX_NV_copy_buffer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"copy_buffer\", 11))\n        {\n          ret = GLXEW_NV_copy_buffer;\n          continue;\n        }\n#endif\n#ifdef GLX_NV_copy_image\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"copy_image\", 10))\n        {\n          ret = GLXEW_NV_copy_image;\n          continue;\n        }\n#endif\n#ifdef GLX_NV_delay_before_swap\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"delay_before_swap\", 17))\n        {\n          ret = GLXEW_NV_delay_before_swap;\n          continue;\n        }\n#endif\n#ifdef GLX_NV_float_buffer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"float_buffer\", 12))\n        {\n          ret = GLXEW_NV_float_buffer;\n          continue;\n        }\n#endif\n#ifdef GLX_NV_multisample_coverage\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"multisample_coverage\", 20))\n        {\n          ret = GLXEW_NV_multisample_coverage;\n          continue;\n        }\n#endif\n#ifdef GLX_NV_present_video\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"present_video\", 13))\n        {\n          ret = GLXEW_NV_present_video;\n          continue;\n        }\n#endif\n#ifdef GLX_NV_robustness_video_memory_purge\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"robustness_video_memory_purge\", 29))\n        {\n          ret = GLXEW_NV_robustness_video_memory_purge;\n          continue;\n        }\n#endif\n#ifdef GLX_NV_swap_group\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"swap_group\", 10))\n        {\n          ret = GLXEW_NV_swap_group;\n          continue;\n        }\n#endif\n#ifdef GLX_NV_vertex_array_range\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vertex_array_range\", 18))\n        {\n          ret = GLXEW_NV_vertex_array_range;\n          continue;\n        }\n#endif\n#ifdef GLX_NV_video_capture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"video_capture\", 13))\n        {\n          ret = GLXEW_NV_video_capture;\n          continue;\n        }\n#endif\n#ifdef GLX_NV_video_out\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"video_out\", 9))\n        {\n          ret = GLXEW_NV_video_out;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"OML_\", 4))\n      {\n#ifdef GLX_OML_swap_method\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"swap_method\", 11))\n        {\n          ret = GLXEW_OML_swap_method;\n          continue;\n        }\n#endif\n#ifdef GLX_OML_sync_control\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"sync_control\", 12))\n        {\n          ret = GLXEW_OML_sync_control;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"SGIS_\", 5))\n      {\n#ifdef GLX_SGIS_blended_overlay\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"blended_overlay\", 15))\n        {\n          ret = GLXEW_SGIS_blended_overlay;\n          continue;\n        }\n#endif\n#ifdef GLX_SGIS_color_range\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"color_range\", 11))\n        {\n          ret = GLXEW_SGIS_color_range;\n          continue;\n        }\n#endif\n#ifdef GLX_SGIS_multisample\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"multisample\", 11))\n        {\n          ret = GLXEW_SGIS_multisample;\n          continue;\n        }\n#endif\n#ifdef GLX_SGIS_shared_multisample\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"shared_multisample\", 18))\n        {\n          ret = GLXEW_SGIS_shared_multisample;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"SGIX_\", 5))\n      {\n#ifdef GLX_SGIX_fbconfig\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fbconfig\", 8))\n        {\n          ret = GLXEW_SGIX_fbconfig;\n          continue;\n        }\n#endif\n#ifdef GLX_SGIX_hyperpipe\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"hyperpipe\", 9))\n        {\n          ret = GLXEW_SGIX_hyperpipe;\n          continue;\n        }\n#endif\n#ifdef GLX_SGIX_pbuffer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pbuffer\", 7))\n        {\n          ret = GLXEW_SGIX_pbuffer;\n          continue;\n        }\n#endif\n#ifdef GLX_SGIX_swap_barrier\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"swap_barrier\", 12))\n        {\n          ret = GLXEW_SGIX_swap_barrier;\n          continue;\n        }\n#endif\n#ifdef GLX_SGIX_swap_group\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"swap_group\", 10))\n        {\n          ret = GLXEW_SGIX_swap_group;\n          continue;\n        }\n#endif\n#ifdef GLX_SGIX_video_resize\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"video_resize\", 12))\n        {\n          ret = GLXEW_SGIX_video_resize;\n          continue;\n        }\n#endif\n#ifdef GLX_SGIX_visual_select_group\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"visual_select_group\", 19))\n        {\n          ret = GLXEW_SGIX_visual_select_group;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"SGI_\", 4))\n      {\n#ifdef GLX_SGI_cushion\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"cushion\", 7))\n        {\n          ret = GLXEW_SGI_cushion;\n          continue;\n        }\n#endif\n#ifdef GLX_SGI_make_current_read\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"make_current_read\", 17))\n        {\n          ret = GLXEW_SGI_make_current_read;\n          continue;\n        }\n#endif\n#ifdef GLX_SGI_swap_control\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"swap_control\", 12))\n        {\n          ret = GLXEW_SGI_swap_control;\n          continue;\n        }\n#endif\n#ifdef GLX_SGI_video_sync\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"video_sync\", 10))\n        {\n          ret = GLXEW_SGI_video_sync;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"SUN_\", 4))\n      {\n#ifdef GLX_SUN_get_transparent_index\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"get_transparent_index\", 21))\n        {\n          ret = GLXEW_SUN_get_transparent_index;\n          continue;\n        }\n#endif\n#ifdef GLX_SUN_video_resize\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"video_resize\", 12))\n        {\n          ret = GLXEW_SUN_video_resize;\n          continue;\n        }\n#endif\n      }\n    }\n    ret = (len == 0);\n  }\n  return ret;\n}\n\n#elif defined(GLEW_EGL)\n\nGLboolean eglewIsSupported (const char* name)\n{\n  const GLubyte* pos = (const GLubyte*)name;\n  GLuint len = _glewStrLen(pos);\n  GLboolean ret = GL_TRUE;\n  while (ret && len > 0)\n  {\n    if(_glewStrSame1(&pos, &len, (const GLubyte*)\"EGL_\", 4))\n    {\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"VERSION_\", 8))\n      {\n#ifdef EGL_VERSION_1_0\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"1_0\", 3))\n        {\n          ret = EGLEW_VERSION_1_0;\n          continue;\n        }\n#endif\n#ifdef EGL_VERSION_1_1\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"1_1\", 3))\n        {\n          ret = EGLEW_VERSION_1_1;\n          continue;\n        }\n#endif\n#ifdef EGL_VERSION_1_2\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"1_2\", 3))\n        {\n          ret = EGLEW_VERSION_1_2;\n          continue;\n        }\n#endif\n#ifdef EGL_VERSION_1_3\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"1_3\", 3))\n        {\n          ret = EGLEW_VERSION_1_3;\n          continue;\n        }\n#endif\n#ifdef EGL_VERSION_1_4\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"1_4\", 3))\n        {\n          ret = EGLEW_VERSION_1_4;\n          continue;\n        }\n#endif\n#ifdef EGL_VERSION_1_5\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"1_5\", 3))\n        {\n          ret = EGLEW_VERSION_1_5;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"ANDROID_\", 8))\n      {\n#ifdef EGL_ANDROID_blob_cache\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"blob_cache\", 10))\n        {\n          ret = EGLEW_ANDROID_blob_cache;\n          continue;\n        }\n#endif\n#ifdef EGL_ANDROID_create_native_client_buffer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"create_native_client_buffer\", 27))\n        {\n          ret = EGLEW_ANDROID_create_native_client_buffer;\n          continue;\n        }\n#endif\n#ifdef EGL_ANDROID_framebuffer_target\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"framebuffer_target\", 18))\n        {\n          ret = EGLEW_ANDROID_framebuffer_target;\n          continue;\n        }\n#endif\n#ifdef EGL_ANDROID_front_buffer_auto_refresh\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"front_buffer_auto_refresh\", 25))\n        {\n          ret = EGLEW_ANDROID_front_buffer_auto_refresh;\n          continue;\n        }\n#endif\n#ifdef EGL_ANDROID_image_native_buffer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"image_native_buffer\", 19))\n        {\n          ret = EGLEW_ANDROID_image_native_buffer;\n          continue;\n        }\n#endif\n#ifdef EGL_ANDROID_native_fence_sync\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"native_fence_sync\", 17))\n        {\n          ret = EGLEW_ANDROID_native_fence_sync;\n          continue;\n        }\n#endif\n#ifdef EGL_ANDROID_presentation_time\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"presentation_time\", 17))\n        {\n          ret = EGLEW_ANDROID_presentation_time;\n          continue;\n        }\n#endif\n#ifdef EGL_ANDROID_recordable\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"recordable\", 10))\n        {\n          ret = EGLEW_ANDROID_recordable;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"ANGLE_\", 6))\n      {\n#ifdef EGL_ANGLE_d3d_share_handle_client_buffer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"d3d_share_handle_client_buffer\", 30))\n        {\n          ret = EGLEW_ANGLE_d3d_share_handle_client_buffer;\n          continue;\n        }\n#endif\n#ifdef EGL_ANGLE_device_d3d\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"device_d3d\", 10))\n        {\n          ret = EGLEW_ANGLE_device_d3d;\n          continue;\n        }\n#endif\n#ifdef EGL_ANGLE_query_surface_pointer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"query_surface_pointer\", 21))\n        {\n          ret = EGLEW_ANGLE_query_surface_pointer;\n          continue;\n        }\n#endif\n#ifdef EGL_ANGLE_surface_d3d_texture_2d_share_handle\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"surface_d3d_texture_2d_share_handle\", 35))\n        {\n          ret = EGLEW_ANGLE_surface_d3d_texture_2d_share_handle;\n          continue;\n        }\n#endif\n#ifdef EGL_ANGLE_window_fixed_size\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"window_fixed_size\", 17))\n        {\n          ret = EGLEW_ANGLE_window_fixed_size;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"ARM_\", 4))\n      {\n#ifdef EGL_ARM_pixmap_multisample_discard\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"pixmap_multisample_discard\", 26))\n        {\n          ret = EGLEW_ARM_pixmap_multisample_discard;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"EXT_\", 4))\n      {\n#ifdef EGL_EXT_buffer_age\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"buffer_age\", 10))\n        {\n          ret = EGLEW_EXT_buffer_age;\n          continue;\n        }\n#endif\n#ifdef EGL_EXT_client_extensions\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"client_extensions\", 17))\n        {\n          ret = EGLEW_EXT_client_extensions;\n          continue;\n        }\n#endif\n#ifdef EGL_EXT_create_context_robustness\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"create_context_robustness\", 25))\n        {\n          ret = EGLEW_EXT_create_context_robustness;\n          continue;\n        }\n#endif\n#ifdef EGL_EXT_device_base\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"device_base\", 11))\n        {\n          ret = EGLEW_EXT_device_base;\n          continue;\n        }\n#endif\n#ifdef EGL_EXT_device_drm\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"device_drm\", 10))\n        {\n          ret = EGLEW_EXT_device_drm;\n          continue;\n        }\n#endif\n#ifdef EGL_EXT_device_enumeration\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"device_enumeration\", 18))\n        {\n          ret = EGLEW_EXT_device_enumeration;\n          continue;\n        }\n#endif\n#ifdef EGL_EXT_device_openwf\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"device_openwf\", 13))\n        {\n          ret = EGLEW_EXT_device_openwf;\n          continue;\n        }\n#endif\n#ifdef EGL_EXT_device_query\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"device_query\", 12))\n        {\n          ret = EGLEW_EXT_device_query;\n          continue;\n        }\n#endif\n#ifdef EGL_EXT_image_dma_buf_import\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"image_dma_buf_import\", 20))\n        {\n          ret = EGLEW_EXT_image_dma_buf_import;\n          continue;\n        }\n#endif\n#ifdef EGL_EXT_multiview_window\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"multiview_window\", 16))\n        {\n          ret = EGLEW_EXT_multiview_window;\n          continue;\n        }\n#endif\n#ifdef EGL_EXT_output_base\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"output_base\", 11))\n        {\n          ret = EGLEW_EXT_output_base;\n          continue;\n        }\n#endif\n#ifdef EGL_EXT_output_drm\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"output_drm\", 10))\n        {\n          ret = EGLEW_EXT_output_drm;\n          continue;\n        }\n#endif\n#ifdef EGL_EXT_output_openwf\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"output_openwf\", 13))\n        {\n          ret = EGLEW_EXT_output_openwf;\n          continue;\n        }\n#endif\n#ifdef EGL_EXT_platform_base\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"platform_base\", 13))\n        {\n          ret = EGLEW_EXT_platform_base;\n          continue;\n        }\n#endif\n#ifdef EGL_EXT_platform_device\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"platform_device\", 15))\n        {\n          ret = EGLEW_EXT_platform_device;\n          continue;\n        }\n#endif\n#ifdef EGL_EXT_platform_wayland\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"platform_wayland\", 16))\n        {\n          ret = EGLEW_EXT_platform_wayland;\n          continue;\n        }\n#endif\n#ifdef EGL_EXT_platform_x11\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"platform_x11\", 12))\n        {\n          ret = EGLEW_EXT_platform_x11;\n          continue;\n        }\n#endif\n#ifdef EGL_EXT_protected_content\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"protected_content\", 17))\n        {\n          ret = EGLEW_EXT_protected_content;\n          continue;\n        }\n#endif\n#ifdef EGL_EXT_protected_surface\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"protected_surface\", 17))\n        {\n          ret = EGLEW_EXT_protected_surface;\n          continue;\n        }\n#endif\n#ifdef EGL_EXT_stream_consumer_egloutput\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"stream_consumer_egloutput\", 25))\n        {\n          ret = EGLEW_EXT_stream_consumer_egloutput;\n          continue;\n        }\n#endif\n#ifdef EGL_EXT_swap_buffers_with_damage\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"swap_buffers_with_damage\", 24))\n        {\n          ret = EGLEW_EXT_swap_buffers_with_damage;\n          continue;\n        }\n#endif\n#ifdef EGL_EXT_yuv_surface\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"yuv_surface\", 11))\n        {\n          ret = EGLEW_EXT_yuv_surface;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"HI_\", 3))\n      {\n#ifdef EGL_HI_clientpixmap\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"clientpixmap\", 12))\n        {\n          ret = EGLEW_HI_clientpixmap;\n          continue;\n        }\n#endif\n#ifdef EGL_HI_colorformats\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"colorformats\", 12))\n        {\n          ret = EGLEW_HI_colorformats;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"IMG_\", 4))\n      {\n#ifdef EGL_IMG_context_priority\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"context_priority\", 16))\n        {\n          ret = EGLEW_IMG_context_priority;\n          continue;\n        }\n#endif\n#ifdef EGL_IMG_image_plane_attribs\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"image_plane_attribs\", 19))\n        {\n          ret = EGLEW_IMG_image_plane_attribs;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"KHR_\", 4))\n      {\n#ifdef EGL_KHR_cl_event\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"cl_event\", 8))\n        {\n          ret = EGLEW_KHR_cl_event;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_cl_event2\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"cl_event2\", 9))\n        {\n          ret = EGLEW_KHR_cl_event2;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_client_get_all_proc_addresses\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"client_get_all_proc_addresses\", 29))\n        {\n          ret = EGLEW_KHR_client_get_all_proc_addresses;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_config_attribs\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"config_attribs\", 14))\n        {\n          ret = EGLEW_KHR_config_attribs;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_create_context\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"create_context\", 14))\n        {\n          ret = EGLEW_KHR_create_context;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_create_context_no_error\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"create_context_no_error\", 23))\n        {\n          ret = EGLEW_KHR_create_context_no_error;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_debug\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"debug\", 5))\n        {\n          ret = EGLEW_KHR_debug;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_fence_sync\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"fence_sync\", 10))\n        {\n          ret = EGLEW_KHR_fence_sync;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_get_all_proc_addresses\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"get_all_proc_addresses\", 22))\n        {\n          ret = EGLEW_KHR_get_all_proc_addresses;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_gl_colorspace\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"gl_colorspace\", 13))\n        {\n          ret = EGLEW_KHR_gl_colorspace;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_gl_renderbuffer_image\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"gl_renderbuffer_image\", 21))\n        {\n          ret = EGLEW_KHR_gl_renderbuffer_image;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_gl_texture_2D_image\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"gl_texture_2D_image\", 19))\n        {\n          ret = EGLEW_KHR_gl_texture_2D_image;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_gl_texture_3D_image\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"gl_texture_3D_image\", 19))\n        {\n          ret = EGLEW_KHR_gl_texture_3D_image;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_gl_texture_cubemap_image\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"gl_texture_cubemap_image\", 24))\n        {\n          ret = EGLEW_KHR_gl_texture_cubemap_image;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_image\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"image\", 5))\n        {\n          ret = EGLEW_KHR_image;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_image_base\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"image_base\", 10))\n        {\n          ret = EGLEW_KHR_image_base;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_image_pixmap\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"image_pixmap\", 12))\n        {\n          ret = EGLEW_KHR_image_pixmap;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_lock_surface\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"lock_surface\", 12))\n        {\n          ret = EGLEW_KHR_lock_surface;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_lock_surface2\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"lock_surface2\", 13))\n        {\n          ret = EGLEW_KHR_lock_surface2;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_lock_surface3\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"lock_surface3\", 13))\n        {\n          ret = EGLEW_KHR_lock_surface3;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_mutable_render_buffer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"mutable_render_buffer\", 21))\n        {\n          ret = EGLEW_KHR_mutable_render_buffer;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_partial_update\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"partial_update\", 14))\n        {\n          ret = EGLEW_KHR_partial_update;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_platform_android\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"platform_android\", 16))\n        {\n          ret = EGLEW_KHR_platform_android;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_platform_gbm\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"platform_gbm\", 12))\n        {\n          ret = EGLEW_KHR_platform_gbm;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_platform_wayland\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"platform_wayland\", 16))\n        {\n          ret = EGLEW_KHR_platform_wayland;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_platform_x11\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"platform_x11\", 12))\n        {\n          ret = EGLEW_KHR_platform_x11;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_reusable_sync\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"reusable_sync\", 13))\n        {\n          ret = EGLEW_KHR_reusable_sync;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_stream\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"stream\", 6))\n        {\n          ret = EGLEW_KHR_stream;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_stream_consumer_gltexture\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"stream_consumer_gltexture\", 25))\n        {\n          ret = EGLEW_KHR_stream_consumer_gltexture;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_stream_cross_process_fd\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"stream_cross_process_fd\", 23))\n        {\n          ret = EGLEW_KHR_stream_cross_process_fd;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_stream_fifo\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"stream_fifo\", 11))\n        {\n          ret = EGLEW_KHR_stream_fifo;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_stream_producer_aldatalocator\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"stream_producer_aldatalocator\", 29))\n        {\n          ret = EGLEW_KHR_stream_producer_aldatalocator;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_stream_producer_eglsurface\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"stream_producer_eglsurface\", 26))\n        {\n          ret = EGLEW_KHR_stream_producer_eglsurface;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_surfaceless_context\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"surfaceless_context\", 19))\n        {\n          ret = EGLEW_KHR_surfaceless_context;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_swap_buffers_with_damage\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"swap_buffers_with_damage\", 24))\n        {\n          ret = EGLEW_KHR_swap_buffers_with_damage;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_vg_parent_image\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"vg_parent_image\", 15))\n        {\n          ret = EGLEW_KHR_vg_parent_image;\n          continue;\n        }\n#endif\n#ifdef EGL_KHR_wait_sync\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"wait_sync\", 9))\n        {\n          ret = EGLEW_KHR_wait_sync;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"MESA_\", 5))\n      {\n#ifdef EGL_MESA_drm_image\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"drm_image\", 9))\n        {\n          ret = EGLEW_MESA_drm_image;\n          continue;\n        }\n#endif\n#ifdef EGL_MESA_image_dma_buf_export\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"image_dma_buf_export\", 20))\n        {\n          ret = EGLEW_MESA_image_dma_buf_export;\n          continue;\n        }\n#endif\n#ifdef EGL_MESA_platform_gbm\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"platform_gbm\", 12))\n        {\n          ret = EGLEW_MESA_platform_gbm;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"NOK_\", 4))\n      {\n#ifdef EGL_NOK_swap_region\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"swap_region\", 11))\n        {\n          ret = EGLEW_NOK_swap_region;\n          continue;\n        }\n#endif\n#ifdef EGL_NOK_swap_region2\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"swap_region2\", 12))\n        {\n          ret = EGLEW_NOK_swap_region2;\n          continue;\n        }\n#endif\n#ifdef EGL_NOK_texture_from_pixmap\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"texture_from_pixmap\", 19))\n        {\n          ret = EGLEW_NOK_texture_from_pixmap;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"NV_\", 3))\n      {\n#ifdef EGL_NV_3dvision_surface\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"3dvision_surface\", 16))\n        {\n          ret = EGLEW_NV_3dvision_surface;\n          continue;\n        }\n#endif\n#ifdef EGL_NV_coverage_sample\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"coverage_sample\", 15))\n        {\n          ret = EGLEW_NV_coverage_sample;\n          continue;\n        }\n#endif\n#ifdef EGL_NV_coverage_sample_resolve\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"coverage_sample_resolve\", 23))\n        {\n          ret = EGLEW_NV_coverage_sample_resolve;\n          continue;\n        }\n#endif\n#ifdef EGL_NV_cuda_event\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"cuda_event\", 10))\n        {\n          ret = EGLEW_NV_cuda_event;\n          continue;\n        }\n#endif\n#ifdef EGL_NV_depth_nonlinear\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"depth_nonlinear\", 15))\n        {\n          ret = EGLEW_NV_depth_nonlinear;\n          continue;\n        }\n#endif\n#ifdef EGL_NV_device_cuda\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"device_cuda\", 11))\n        {\n          ret = EGLEW_NV_device_cuda;\n          continue;\n        }\n#endif\n#ifdef EGL_NV_native_query\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"native_query\", 12))\n        {\n          ret = EGLEW_NV_native_query;\n          continue;\n        }\n#endif\n#ifdef EGL_NV_post_convert_rounding\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"post_convert_rounding\", 21))\n        {\n          ret = EGLEW_NV_post_convert_rounding;\n          continue;\n        }\n#endif\n#ifdef EGL_NV_post_sub_buffer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"post_sub_buffer\", 15))\n        {\n          ret = EGLEW_NV_post_sub_buffer;\n          continue;\n        }\n#endif\n#ifdef EGL_NV_robustness_video_memory_purge\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"robustness_video_memory_purge\", 29))\n        {\n          ret = EGLEW_NV_robustness_video_memory_purge;\n          continue;\n        }\n#endif\n#ifdef EGL_NV_stream_consumer_gltexture_yuv\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"stream_consumer_gltexture_yuv\", 29))\n        {\n          ret = EGLEW_NV_stream_consumer_gltexture_yuv;\n          continue;\n        }\n#endif\n#ifdef EGL_NV_stream_metadata\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"stream_metadata\", 15))\n        {\n          ret = EGLEW_NV_stream_metadata;\n          continue;\n        }\n#endif\n#ifdef EGL_NV_stream_sync\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"stream_sync\", 11))\n        {\n          ret = EGLEW_NV_stream_sync;\n          continue;\n        }\n#endif\n#ifdef EGL_NV_sync\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"sync\", 4))\n        {\n          ret = EGLEW_NV_sync;\n          continue;\n        }\n#endif\n#ifdef EGL_NV_system_time\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"system_time\", 11))\n        {\n          ret = EGLEW_NV_system_time;\n          continue;\n        }\n#endif\n      }\n      if (_glewStrSame2(&pos, &len, (const GLubyte*)\"TIZEN_\", 6))\n      {\n#ifdef EGL_TIZEN_image_native_buffer\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"image_native_buffer\", 19))\n        {\n          ret = EGLEW_TIZEN_image_native_buffer;\n          continue;\n        }\n#endif\n#ifdef EGL_TIZEN_image_native_surface\n        if (_glewStrSame3(&pos, &len, (const GLubyte*)\"image_native_surface\", 20))\n        {\n          ret = EGLEW_TIZEN_image_native_surface;\n          continue;\n        }\n#endif\n      }\n    }\n    ret = (len == 0);\n  }\n  return ret;\n}\n\n#endif /* _WIN32 */\n",
        "/tmp/vanessa/spack-stage/spack-stage-glew-2.0.0-kmg2vapmbw6kcqxsewolaw2vsq7fqfyi/spack-src/auto/src/glew_head.c": "#include <GL/glew.h>\n\n#if defined(GLEW_OSMESA)\n#  define GLAPI extern\n#  include <GL/osmesa.h>\n#elif defined(GLEW_EGL)\n#  include <GL/eglew.h>\n#elif defined(_WIN32)\n#  include <GL/wglew.h>\n#elif !defined(__ANDROID__) && !defined(__native_client__) && !defined(__HAIKU__) && (!defined(__APPLE__) || defined(GLEW_APPLE_GLX))\n#  include <GL/glxew.h>\n#endif\n\n#include <stddef.h>  /* For size_t */\n\n#if defined(GLEW_EGL)\n#elif defined(GLEW_REGAL)\n\n/* In GLEW_REGAL mode we call direcly into the linked\n   libRegal.so glGetProcAddressREGAL for looking up\n   the GL function pointers. */\n\n#  undef glGetProcAddressREGAL\n#  ifdef WIN32\nextern void *  __stdcall glGetProcAddressREGAL(const GLchar *name);\nstatic void * (__stdcall * regalGetProcAddress) (const GLchar *) = glGetProcAddressREGAL;\n#    else\nextern void * glGetProcAddressREGAL(const GLchar *name);\nstatic void * (*regalGetProcAddress) (const GLchar *) = glGetProcAddressREGAL;\n#  endif\n#  define glGetProcAddressREGAL GLEW_GET_FUN(__glewGetProcAddressREGAL)\n\n#elif defined(__sgi) || defined (__sun) || defined(__HAIKU__) || defined(GLEW_APPLE_GLX)\n#include <dlfcn.h>\n#include <stdio.h>\n#include <stdlib.h>\n\nvoid* dlGetProcAddress (const GLubyte* name)\n{\n  static void* h = NULL;\n  static void* gpa;\n\n  if (h == NULL)\n  {\n    if ((h = dlopen(NULL, RTLD_LAZY | RTLD_LOCAL)) == NULL) return NULL;\n    gpa = dlsym(h, \"glXGetProcAddress\");\n  }\n\n  if (gpa != NULL)\n    return ((void*(*)(const GLubyte*))gpa)(name);\n  else\n    return dlsym(h, (const char*)name);\n}\n#endif /* __sgi || __sun || GLEW_APPLE_GLX */\n\n#if defined(__APPLE__)\n#include <stdlib.h>\n#include <string.h>\n#include <AvailabilityMacros.h>\n\n#ifdef MAC_OS_X_VERSION_10_3\n\n#include <dlfcn.h>\n\nvoid* NSGLGetProcAddress (const GLubyte *name)\n{\n  static void* image = NULL;\n  void* addr;\n  if (NULL == image)\n  {\n    image = dlopen(\"/System/Library/Frameworks/OpenGL.framework/Versions/Current/OpenGL\", RTLD_LAZY);\n  }\n  if( !image ) return NULL;\n  addr = dlsym(image, (const char*)name);\n  if( addr ) return addr;\n#ifdef GLEW_APPLE_GLX\n  return dlGetProcAddress( name ); // try next for glx symbols\n#else\n  return NULL;\n#endif\n}\n#else\n\n#include <mach-o/dyld.h>\n\nvoid* NSGLGetProcAddress (const GLubyte *name)\n{\n  static const struct mach_header* image = NULL;\n  NSSymbol symbol;\n  char* symbolName;\n  if (NULL == image)\n  {\n    image = NSAddImage(\"/System/Library/Frameworks/OpenGL.framework/Versions/Current/OpenGL\", NSADDIMAGE_OPTION_RETURN_ON_ERROR);\n  }\n  /* prepend a '_' for the Unix C symbol mangling convention */\n  symbolName = malloc(strlen((const char*)name) + 2);\n  strcpy(symbolName+1, (const char*)name);\n  symbolName[0] = '_';\n  symbol = NULL;\n  /* if (NSIsSymbolNameDefined(symbolName))\n\t symbol = NSLookupAndBindSymbol(symbolName); */\n  symbol = image ? NSLookupSymbolInImage(image, symbolName, NSLOOKUPSYMBOLINIMAGE_OPTION_BIND | NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR) : NULL;\n  free(symbolName);\n  if( symbol ) return NSAddressOfSymbol(symbol);\n#ifdef GLEW_APPLE_GLX\n  return dlGetProcAddress( name ); // try next for glx symbols\n#else\n  return NULL;\n#endif\n}\n#endif /* MAC_OS_X_VERSION_10_3 */\n#endif /* __APPLE__ */\n\n/*\n * Define glewGetProcAddress.\n */\n#if defined(GLEW_REGAL)\n#  define glewGetProcAddress(name) regalGetProcAddress((const GLchar *)name)\n#elif defined(GLEW_OSMESA)\n#  define glewGetProcAddress(name) OSMesaGetProcAddress((const char *)name)\n#elif defined(GLEW_EGL)\n#  define glewGetProcAddress(name) eglGetProcAddress((const char *)name)\n#elif defined(_WIN32)\n#  define glewGetProcAddress(name) wglGetProcAddress((LPCSTR)name)\n#elif defined(__APPLE__) && !defined(GLEW_APPLE_GLX)\n#  define glewGetProcAddress(name) NSGLGetProcAddress(name)\n#elif defined(__sgi) || defined(__sun) || defined(__HAIKU__)\n#  define glewGetProcAddress(name) dlGetProcAddress(name)\n#elif defined(__ANDROID__)\n#  define glewGetProcAddress(name) NULL /* TODO */\n#elif defined(__native_client__)\n#  define glewGetProcAddress(name) NULL /* TODO */\n#else /* __linux */\n#  define glewGetProcAddress(name) (*glXGetProcAddressARB)(name)\n#endif\n\n/*\n * Redefine GLEW_GET_VAR etc without const cast\n */\n\n#undef GLEW_GET_VAR\n# define GLEW_GET_VAR(x) (x)\n\n#ifdef WGLEW_GET_VAR\n# undef WGLEW_GET_VAR\n# define WGLEW_GET_VAR(x) (x)\n#endif /* WGLEW_GET_VAR */\n\n#ifdef GLXEW_GET_VAR\n# undef GLXEW_GET_VAR\n# define GLXEW_GET_VAR(x) (x)\n#endif /* GLXEW_GET_VAR */\n\n#ifdef EGLEW_GET_VAR\n# undef EGLEW_GET_VAR\n# define EGLEW_GET_VAR(x) (x)\n#endif /* EGLEW_GET_VAR */\n\n/*\n * GLEW, just like OpenGL or GLU, does not rely on the standard C library.\n * These functions implement the functionality required in this file.\n */\n\nstatic GLuint _glewStrLen (const GLubyte* s)\n{\n  GLuint i=0;\n  if (s == NULL) return 0;\n  while (s[i] != '\\0') i++;\n  return i;\n}\n\nstatic GLuint _glewStrCLen (const GLubyte* s, GLubyte c)\n{\n  GLuint i=0;\n  if (s == NULL) return 0;\n  while (s[i] != '\\0' && s[i] != c) i++;\n  return i;\n}\n\nstatic GLuint _glewStrCopy(char *d, const char *s, char c)\n{\n  GLuint i=0;\n  if (s == NULL) return 0;\n  while (s[i] != '\\0' && s[i] != c) { d[i] = s[i]; i++; }\n  d[i] = '\\0';\n  return i;\n}\n\n#if !defined(GLEW_OSMESA)\n#if !defined(__APPLE__) || defined(GLEW_APPLE_GLX)\nstatic GLboolean _glewStrSame (const GLubyte* a, const GLubyte* b, GLuint n)\n{\n  GLuint i=0;\n  if(a == NULL || b == NULL)\n    return (a == NULL && b == NULL && n == 0) ? GL_TRUE : GL_FALSE;\n  while (i < n && a[i] != '\\0' && b[i] != '\\0' && a[i] == b[i]) i++;\n  return i == n ? GL_TRUE : GL_FALSE;\n}\n#endif\n#endif\n\nstatic GLboolean _glewStrSame1 (const GLubyte** a, GLuint* na, const GLubyte* b, GLuint nb)\n{\n  while (*na > 0 && (**a == ' ' || **a == '\\n' || **a == '\\r' || **a == '\\t'))\n  {\n    (*a)++;\n    (*na)--;\n  }\n  if(*na >= nb)\n  {\n    GLuint i=0;\n    while (i < nb && (*a)+i != NULL && b+i != NULL && (*a)[i] == b[i]) i++;\n    if(i == nb)\n    {\n      *a = *a + nb;\n      *na = *na - nb;\n      return GL_TRUE;\n    }\n  }\n  return GL_FALSE;\n}\n\nstatic GLboolean _glewStrSame2 (const GLubyte** a, GLuint* na, const GLubyte* b, GLuint nb)\n{\n  if(*na >= nb)\n  {\n    GLuint i=0;\n    while (i < nb && (*a)+i != NULL && b+i != NULL && (*a)[i] == b[i]) i++;\n    if(i == nb)\n    {\n      *a = *a + nb;\n      *na = *na - nb;\n      return GL_TRUE;\n    }\n  }\n  return GL_FALSE;\n}\n\nstatic GLboolean _glewStrSame3 (const GLubyte** a, GLuint* na, const GLubyte* b, GLuint nb)\n{\n  if(*na >= nb)\n  {\n    GLuint i=0;\n    while (i < nb && (*a)+i != NULL && b+i != NULL && (*a)[i] == b[i]) i++;\n    if (i == nb && (*na == nb || (*a)[i] == ' ' || (*a)[i] == '\\n' || (*a)[i] == '\\r' || (*a)[i] == '\\t'))\n    {\n      *a = *a + nb;\n      *na = *na - nb;\n      return GL_TRUE;\n    }\n  }\n  return GL_FALSE;\n}\n\n/*\n * Search for name in the extensions string. Use of strstr()\n * is not sufficient because extension names can be prefixes of\n * other extension names. Could use strtok() but the constant\n * string returned by glGetString might be in read-only memory.\n */\n#if !defined(GLEW_OSMESA)\n#if !defined(__APPLE__) || defined(GLEW_APPLE_GLX)\nstatic GLboolean _glewSearchExtension (const char* name, const GLubyte *start, const GLubyte *end)\n{\n  const GLubyte* p;\n  GLuint len = _glewStrLen((const GLubyte*)name);\n  p = start;\n  while (p < end)\n  {\n    GLuint n = _glewStrCLen(p, ' ');\n    if (len == n && _glewStrSame((const GLubyte*)name, p, n)) return GL_TRUE;\n    p += n+1;\n  }\n  return GL_FALSE;\n}\n#endif\n#endif\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-glew-2.0.0-kmg2vapmbw6kcqxsewolaw2vsq7fqfyi/spack-src/build/glewinfo.rc",
        "/tmp/vanessa/spack-stage/spack-stage-glew-2.0.0-kmg2vapmbw6kcqxsewolaw2vsq7fqfyi/spack-src/build/glew.rc",
        "/tmp/vanessa/spack-stage/spack-stage-glew-2.0.0-kmg2vapmbw6kcqxsewolaw2vsq7fqfyi/spack-src/build/visualinfo.rc",
        "/tmp/vanessa/spack-stage/spack-stage-glew-2.0.0-kmg2vapmbw6kcqxsewolaw2vsq7fqfyi/spack-src/auto/src/glewinfo.rc",
        "/tmp/vanessa/spack-stage/spack-stage-glew-2.0.0-kmg2vapmbw6kcqxsewolaw2vsq7fqfyi/spack-src/auto/src/glew.rc",
        "/tmp/vanessa/spack-stage/spack-stage-glew-2.0.0-kmg2vapmbw6kcqxsewolaw2vsq7fqfyi/spack-src/auto/src/visualinfo.rc",
        "/tmp/vanessa/spack-stage/spack-stage-glew-2.0.0-kmg2vapmbw6kcqxsewolaw2vsq7fqfyi/spack-src/doc/travis.png",
        "/tmp/vanessa/spack-stage/spack-stage-glew-2.0.0-kmg2vapmbw6kcqxsewolaw2vsq7fqfyi/spack-src/doc/glew.png",
        "/tmp/vanessa/spack-stage/spack-stage-glew-2.0.0-kmg2vapmbw6kcqxsewolaw2vsq7fqfyi/spack-src/doc/ogl_sm.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-glew-2.0.0-kmg2vapmbw6kcqxsewolaw2vsq7fqfyi/spack-src/doc/new.png",
        "/tmp/vanessa/spack-stage/spack-stage-glew-2.0.0-kmg2vapmbw6kcqxsewolaw2vsq7fqfyi/spack-src/doc/github.png"
    ],
    "total_files": 154
}