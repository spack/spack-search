{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-nettle-2.7-yiop75kovtvugi74htmtqn2gvisu7jis/spack-src/configure.ac": "dnl -*- mode: shell-script; sh-indentation: 2; -*-\n\ndnl Process this file with autoconf to produce a configure script.\n\nAC_INIT([nettle], [2.7], [nettle-bugs@lists.lysator.liu.se])\nAC_PREREQ(2.61)\nAC_CONFIG_SRCDIR([arcfour.c])\n# Needed to stop autoconf from looking for files in parent directories.\nAC_CONFIG_AUX_DIR([.])\n\nAC_CONFIG_HEADER([config.h])\n\nLIBNETTLE_MAJOR=4\nLIBNETTLE_MINOR=6\n\nLIBHOGWEED_MAJOR=2\nLIBHOGWEED_MINOR=4\n\nAC_CANONICAL_HOST\n\n# Command line options\nAC_ARG_WITH(include-path,\n  AC_HELP_STRING([--with-include-path], [A colon-separated list of directories to search for include files]),,\n  [with_include_path=''])\n\nif test x$with_include_path != x ; then\n  CPPFLAGS=\"$CPPFLAGS -I`echo $with_include_path | sed 's/:/ -I/g'`\"\nfi\n\nAC_ARG_WITH(lib-path,\n  AC_HELP_STRING([--with-lib-path], [A colon-separated list of directories to search for libraries]),,\n  [with_lib_path=''])\n\nif test x$with_lib_path != x ; then\n  LDFLAGS=\"$LDFLAGS -L`echo $with_lib_path | sed 's/:/ -L/g'`\"\nfi\n\nAC_ARG_ENABLE(public-key,\n  AC_HELP_STRING([--disable-public-key], [Disable public key algorithms]),,\n  [enable_public_key=yes])\n\nAC_ARG_ENABLE(assembler,\n  AC_HELP_STRING([--disable-assembler],[Disable assembler code]),,\n  [enable_assembler=yes])\n\nAC_ARG_ENABLE(static,\n  AC_HELP_STRING([--disable-static], [Do not build any static library]),,\n  [enable_static=yes])\n\nAC_ARG_ENABLE(shared,\n  AC_HELP_STRING([--disable-shared], [Do not build any shared library]),,\n  [enable_shared=yes])\n\nAC_ARG_ENABLE(pic,\n  AC_HELP_STRING([--disable-pic],\n  [Do not try to compile library files as position independent code]),,\n  [enable_pic=yes])\n\nAC_ARG_ENABLE(openssl,\n  AC_HELP_STRING([--disable-openssl], [Do not include openssl glue in the benchmark program]),,\n  [enable_openssl=yes])\n\nAC_ARG_ENABLE(gcov,\n  AC_HELP_STRING([--enable-gcov], [Instrument for gcov (requires a modern gcc)]),,\n  [enable_gcov=no])\n\nAC_ARG_ENABLE(documentation,\n  AC_HELP_STRING([--disable-documentation], [Omit building and installing the documentation. (default=auto)]),,\n  [enable_documentation=auto])\n\nAC_ARG_ENABLE(arm-neon,\n  AC_HELP_STRING([--enable-arm-neon], [Enable ARM Neon assembly. (default=auto)]),,\n  [enable_arm_neon=auto])\n\nLSH_RPATH_INIT([`echo $with_lib_path | sed 's/:/ /g'` \\\n    `echo $exec_prefix | sed \"s@^NONE@$prefix/lib@g\" | sed \"s@^NONE@$ac_default_prefix/lib@g\"` \\\n    /usr/local/lib /sw/local/lib /sw/lib \\\n    /usr/gnu/lib /opt/gnu/lib /sw/gnu/lib /usr/freeware/lib /usr/pkg/lib])\n\n# Checks for programs.\nAC_PROG_CC\n\n# When $CC foo.c -o foo creates both foo and foo.exe, autoconf picks\n# up the foo.exe and sets exeext to .exe. That is correct for cygwin,\n# which has some kind of magic link from foo to foo.exe, but not for\n# rntcl. A better check for the cygwin case would check if the\n# contents of foo and foo.exe are equal; in the rntcl case, foo is a\n# sh script, and foo.exe is a windows executable.\n\nif test \"x$CC\" = xrntcl ; then\n    AC_MSG_NOTICE([Compiling with rntcl; clearing EXEEXT and disabling assembler])\n    ac_exeext=''\n    ac_cv_exeext=''\n    EXEEXT=''\n    enable_assembler=no\nfi\n\n# Used by the testsuite only\nAC_PROG_CXX\n\nAC_LANG_PUSH(C++)\nAC_TRY_COMPILE([],[return 0;],[IF_CXX=''], [IF_CXX='#'])\nAC_SUBST([IF_CXX])\nAC_LANG_POP\n\nAC_PROG_MAKE_SET\nAC_PROG_RANLIB\nAC_CHECK_TOOL(NM, nm, strings)\n# Used only for the GNU-stack configure test.\nAC_CHECK_TOOL(OBJDUMP, objdump, false)\nAC_CHECK_TOOL(AR, ar, false)\n\nif test \"x$ac_cv_prog_cc_stdc\" = xno ; then\n  AC_ERROR([the C compiler doesn't handle ANSI-C]) #'\nfi\n\nAC_PROG_INSTALL\n\n# According to the autoconf manual, needs install-sh from\n# autoconf-2.60 or automake-1.10 to avoid races.\nAC_PROG_MKDIR_P\n\nAC_PROG_LN_S\n\n# Compiler tests for the build system\nGMP_PROG_CC_FOR_BUILD\nGMP_PROG_EXEEXT_FOR_BUILD\n\nLSH_DEPENDENCY_TRACKING\n\nif test x$enable_dependency_tracking = xyes ; then\n  # Since the makefiles use include to get the dependency files, we must\n  # make sure that the files exist. We generate some more files than are\n  # actually needed.\n\n  AC_CONFIG_COMMANDS([dummy-dep-files],\n  [(cd \"$srcdir\" && find . '(' -name '*.c' -o -name '*.cxx' ')' -print) \\\n | sed 's/\\.c\\(xx\\)\\{0,1\\}$//' | (while read f; do echo > \"$f.o.d\"; echo > \"$f.po.d\"; done)\n])\nfi\n\n# Figure out ABI. Currently, configurable only by setting CFLAGS.\nABI=standard\n\ncase \"$host_cpu\" in\n  [x86_64 | amd64])\n    AC_TRY_COMPILE([\n#if defined(__x86_64__) || defined(__arch64__)\n#error 64-bit x86\n#endif\n    ], [], [\n      ABI=32\n    ], [\n      ABI=64\n    ])\n    ;;\n  *sparc*)\n    AC_TRY_COMPILE([\n#if defined(__sparcv9) || defined(__arch64__)\n#error 64-bit sparc\n#endif\n    ], [], [\n      ABI=32\n    ], [\n      ABI=64\n    ])\n    ;;\nesac\n\nif test \"x$ABI\" != xstandard ; then\n  AC_MSG_NOTICE([Compiler uses $ABI-bit ABI. To change, set CC.])\n  if test \"$libdir\" = '${exec_prefix}/lib' ; then\n    # Try setting a better default\n    case \"$host_cpu:$host_os:$ABI\" in\n      *:solaris*:32|*:sunos*:32)\n\tlibdir='${exec_prefix}/lib'\n\t;;\n      *:solaris*:64|*:sunos*:64)\n\tlibdir='${exec_prefix}/lib/64'\n\t;;\n      # Linux conventions are a mess... According to the Linux File\n      # Hierarchy Standard, all architectures except IA64 puts 32-bit\n      # libraries in lib, and 64-bit in lib64. Some distributions,\n      # e.g., Fedora and Gentoo, adhere to this standard, while at\n      # least Debian has decided to put 64-bit libraries in lib and\n      # 32-bit libraries in lib32.\n      \n      # We try to figure out the convention, except if we're cross\n      # compiling. We use lib${ABI} if /usr/lib${ABI} exists and\n      # appears to not be a symlink to a different name.\n      *:linux*:32|*:linux*:64)\n\tif test \"$cross_compiling\" = yes ; then\n          AC_MSG_WARN([Cross compiling for linux. Can't guess if libraries go in lib${ABI} or lib.]); dnl '\n\telse\n\t  # The dash builtin pwd tries to be \"helpful\" and remember\n\t  # symlink names. Use -P option, and hope it's portable enough.\n\t  test -d /usr/lib${ABI} \\\n\t    && (cd /usr/lib${ABI} && pwd -P | grep >/dev/null \"/lib${ABI}\"'$') \\\n\t    && libdir='${exec_prefix}/'\"lib${ABI}\"\n\tfi\n\t;;\n      # On freebsd, it seems 32-bit libraries are in lib32,\n      # and 64-bit in lib. Don't know about \"kfreebsd\", does\n      # it follow the Linux fhs conventions?\n      *:freebsd*:32)\n\tlibdir='${exec_prefix}/lib32'\n\t;;\n      *:freebsd*:64)\n\tlibdir='${exec_prefix}/lib'\n\t;;\n      *)\n        AC_MSG_WARN([Don't know where to install $ABI-bit libraries on this system.]); dnl '\n\n    esac\n    AC_MSG_NOTICE([Libraries to be installed in $libdir.])\n  fi\nfi\n\n# Select assembler code\nasm_path=\nif test \"x$enable_assembler\" = xyes ; then\n  case \"$host_cpu\" in\n    [i?86* | k[5-8]* | pentium* | athlon])\n      asm_path=x86\n      ;;\n    [x86_64 | amd64])\n      if test \"$ABI\" = 64 ; then\n\tasm_path=x86_64\n      else\n\tasm_path=x86\n      fi\n      ;;\n    *sparc*)\n      if test \"$ABI\" = 64 ; then\n\tasm_path=sparc64\n      else\n\tasm_path=sparc32\n      fi\n      ;;\n    arm*)\n      NETTLE_CHECK_ARM_NEON\n\n      asm_path=arm\n      if test \"x$enable_arm_neon\" = xyes ; then\n\tasm_path=\"arm/neon $asm_path\"\n      fi\n      ;;\n    *)\n      enable_assembler=no\n      ;;\n  esac\nfi\n\n# Files which replace a C source file (or otherwise don't correspond\n# to a new object file).\nasm_replace_list=\"aes-encrypt-internal.asm aes-decrypt-internal.asm \\\n\t\tarcfour-crypt.asm camellia-crypt-internal.asm \\\n\t\tmd5-compress.asm memxor.asm \\\n\t\tsalsa20-crypt.asm salsa20-core-internal.asm \\\n\t\tserpent-encrypt.asm serpent-decrypt.asm \\\n\t\tsha1-compress.asm sha256-compress.asm sha512-compress.asm \\\n\t\tsha3-permute.asm umac-nh.asm umac-nh-n.asm machine.m4\"\n\n# Assembler files which generate additional object files if they are used.\nasm_optional_list=\"\"\n\nif test \"x$enable_public_key\" = \"xyes\" ; then\n  asm_optional_list=\"ecc-192-modp.asm ecc-224-modp.asm ecc-256-redc.asm \\\n      ecc-384-modp.asm ecc-521-modp.asm\"\nfi\n\nOPT_ASM_SOURCES=\"\"\n\nasm_file_list=\"\"\n\nif test \"x$enable_assembler\" = xyes ; then\n  if test -n \"$asm_path\"; then\n    AC_MSG_NOTICE([Looking for assembler files in $asm_path.])\n    for tmp_f in $asm_replace_list ; do\n      for asm_dir in $asm_path ; do\n        if test -f \"$srcdir/$asm_dir/$tmp_f\"; then\n\t  asm_file_list=\"$asm_file_list $tmp_f\"\n          AC_CONFIG_LINKS($tmp_f:$asm_dir/$tmp_f)\n\t  break\n        fi\n      done\n    done\n    dnl Workaround for AC_CONFIG_LINKS, which complains if we use the\n    dnl same destination argument $tmp_f multiple times.\n    for tmp_o in $asm_optional_list ; do\n      for asm_dir in $asm_path ; do\n\tif test -f \"$srcdir/$asm_dir/$tmp_o\"; then\n\t  asm_file_list=\"$asm_file_list $tmp_o\"\n\t  AC_CONFIG_LINKS($tmp_o:$asm_dir/$tmp_o)\n\t  while read tmp_func ; do\n\t    AC_DEFINE_UNQUOTED(HAVE_NATIVE_$tmp_func)\n\t    eval HAVE_NATIVE_$tmp_func=yes\n\t  done <<EOF\n[`sed -n 's/[^ \t]*PROLOGUE(_*\\(nettle_\\)*\\([^)]*\\)).*$/\\2/p' < \"$srcdir/$asm_dir/$tmp_o\"`]\nEOF\n\t  OPT_ASM_SOURCES=\"$OPT_ASM_SOURCES $tmp_o\"\n\t  break\n\tfi\n      done\n    done\t\n    if test -z \"$asm_file_list\"; then\n      enable_assembler=no\n      AC_MSG_WARN([No assembler files found.])\n    fi\n  fi\nfi\n\nAC_SUBST([OPT_ASM_SOURCES])\n\nAH_VERBATIM([HAVE_NATIVE],\n[/* Define to 1 each of the following for which a native (ie. CPU specific)\n    implementation of the corresponding routine exists.  */\n#undef HAVE_NATIVE_ecc_192_modp\n#undef HAVE_NATIVE_ecc_192_redc\n#undef HAVE_NATIVE_ecc_224_modp\n#undef HAVE_NATIVE_ecc_224_redc\n#undef HAVE_NATIVE_ecc_256_modp\n#undef HAVE_NATIVE_ecc_256_redc\n#undef HAVE_NATIVE_ecc_384_modp\n#undef HAVE_NATIVE_ecc_384_redc\n#undef HAVE_NATIVE_ecc_521_modp\n#undef HAVE_NATIVE_ecc_521_redc])\n\n# Besides getting correct dependencies, the explicit rules also tell\n# make that the .s files \"ought to exist\", so they are preferred over\n# .c files.\nAC_CONFIG_COMMANDS([asm.d],\n    [ for f in $asm_file_list\n      do\n        case $f in\n\t  *.asm)\n\t    echo \"`basename $f .asm`.s : $f \"'$(srcdir)/asm.m4 machine.m4 config.m4'\n\t    ;;\n\tesac\n      done > asm.d\n    ],\n    [ asm_file_list=\"$asm_file_list\" ]\n)\n\nLSH_CCPIC\n\nSHLIBCFLAGS=\"$CCPIC\"\n\nIF_DLL='#'\nLIBNETTLE_FILE_SRC='$(LIBNETTLE_FORLINK)'\nLIBHOGWEED_FILE_SRC='$(LIBHOGWEED_FORLINK)'\nEMULATOR=''\nW64_ABI=no\n\ncase \"$host_os\" in\n  mingw32*|cygwin*)\n    # The actual DLLs, e.g. libnettle-$major-$minor.dll, are normally\n    # installed into the bin dir (or more exactly $libdir/../bin, for\n    # automake), while libnettle.dll.a, which is a stub file for\n    # linking to the DLL, is installed into the lib dir.\n    case \"$host_os\" in\n      mingw32*)\n        LIBNETTLE_FORLINK='libnettle-$(LIBNETTLE_MAJOR)-$(LIBNETTLE_MINOR).dll'\n        LIBHOGWEED_FORLINK='libhogweed-$(LIBHOGWEED_MAJOR)-$(LIBHOGWEED_MINOR).dll'\n        ;;\n      cygwin*)\n        LIBNETTLE_FORLINK='cygnettle-$(LIBNETTLE_MAJOR)-$(LIBNETTLE_MINOR).dll'\n        LIBHOGWEED_FORLINK='cyghogweed-$(LIBHOGWEED_MAJOR)-$(LIBHOGWEED_MINOR).dll'\n        ;;\n    esac\n    if test \"x$cross_compiling\" = xyes ; then\n\tcase \"$ABI\" in\n\t    64)\n\t\tEMULATOR=wine64\n\t\t;;\n\t    *)\n\t\tEMULATOR=wine\n\t\t;;\n\tesac\n    fi\n    if test \"x$ABI\" = x64 ; then\n        W64_ABI=yes\n    fi\n    LIBNETTLE_SONAME=''\n    LIBNETTLE_FILE='libnettle.dll.a'\n    LIBNETTLE_FILE_SRC='$(LIBNETTLE_FILE)'\n    LIBNETTLE_LINK='$(CC) $(CFLAGS) $(LDFLAGS) -shared -Wl,--out-implib=$(LIBNETTLE_FILE) -Wl,--export-all-symbols -Wl,--enable-auto-import -Wl,--whole-archive'\n    LIBNETTLE_LIBS='-Wl,--no-whole-archive $(LIBS)'\n\n    LIBHOGWEED_SONAME=''\n    LIBHOGWEED_FILE='libhogweed.dll.a'\n    LIBHOGWEED_FILE_SRC='$(LIBHOGWEED_FILE)'\n    LIBHOGWEED_LINK='$(CC) $(CFLAGS) $(LDFLAGS) -shared -Wl,--out-implib=$(LIBHOGWEED_FILE) -Wl,--export-all-symbols -Wl,--enable-auto-import -Wl,--whole-archive'\n    LIBHOGWEED_LIBS='-Wl,--no-whole-archive $(LIBS) libnettle.dll.a'\n    IF_DLL=''\n    ;;\n  darwin*)\n    LIBNETTLE_FORLINK=libnettle.dylib\n    LIBNETTLE_SONAME='libnettle.$(LIBNETTLE_MAJOR).dylib'\n    LIBNETTLE_FILE='libnettle.$(LIBNETTLE_MAJOR).$(LIBNETTLE_MINOR).dylib'\n    LIBNETTLE_LINK='$(CC) $(CFLAGS) -dynamiclib $(LDFLAGS) -install_name ${libdir}/$(LIBNETTLE_SONAME) -compatibility_version $(LIBNETTLE_MAJOR) -current_version $(LIBNETTLE_MAJOR).$(LIBNETTLE_MINOR)'\n    LIBNETTLE_LIBS=''\n\n    LIBHOGWEED_FORLINK=libhogweed.dylib\n    LIBHOGWEED_SONAME='libhogweed.$(LIBHOGWEED_MAJOR).dylib'\n    LIBHOGWEED_FILE='libhogweed.$(LIBHOGWEED_MAJOR).$(LIBHOGWEED_MINOR).dylib'\n    LIBHOGWEED_LINK='$(CC) $(CFLAGS) -dynamiclib -L. $(LDFLAGS) -install_name ${libdir}/$(LIBHOGWEED_SONAME) -compatibility_version $(LIBHOGWEED_MAJOR) -current_version $(LIBHOGWEED_MAJOR).$(LIBHOGWEED_MINOR)'\n    LIBHOGWEED_LIBS='-lnettle -lgmp'\n    ;;\n  solaris*)\n    # Sun's ld uses -h to set the soname, and this option is passed\n    # through by both Sun's compiler and gcc. Might not work with GNU\n    # ld, but it's unusual to use GNU ld on Solaris.\n    LIBNETTLE_FORLINK=libnettle.so\n    LIBNETTLE_SONAME='$(LIBNETTLE_FORLINK).$(LIBNETTLE_MAJOR)'\n    LIBNETTLE_FILE='$(LIBNETTLE_SONAME).$(LIBNETTLE_MINOR)'\n    LIBNETTLE_LINK='$(CC) $(CFLAGS) $(LDFLAGS) -G -h $(LIBNETTLE_SONAME)'\n    LIBNETTLE_LIBS=''\n\n    LIBHOGWEED_FORLINK=libhogweed.so\n    LIBHOGWEED_SONAME='$(LIBHOGWEED_FORLINK).$(LIBHOGWEED_MAJOR)'\n    LIBHOGWEED_FILE='$(LIBHOGWEED_SONAME).$(LIBHOGWEED_MINOR)'\n    LIBHOGWEED_LINK='$(CC) $(CFLAGS) $(LDFLAGS) -L. -G -h $(LIBHOGWEED_SONAME)'\n    LIBHOGWEED_LIBS='-lnettle -lgmp'\n    ;;\n  *)\n    LIBNETTLE_FORLINK=libnettle.so\n    LIBNETTLE_SONAME='$(LIBNETTLE_FORLINK).$(LIBNETTLE_MAJOR)'\n    LIBNETTLE_FILE='$(LIBNETTLE_SONAME).$(LIBNETTLE_MINOR)'\n    LIBNETTLE_LINK='$(CC) $(CFLAGS) $(LDFLAGS) -shared -Wl,-soname=$(LIBNETTLE_SONAME)'\n    LIBNETTLE_LIBS=''\n\n    LIBHOGWEED_FORLINK=libhogweed.so\n    LIBHOGWEED_SONAME='$(LIBHOGWEED_FORLINK).$(LIBHOGWEED_MAJOR)'\n    LIBHOGWEED_FILE='$(LIBHOGWEED_SONAME).$(LIBHOGWEED_MINOR)'\n    LIBHOGWEED_LINK='$(CC) $(CFLAGS) $(LDFLAGS) -L. -shared -Wl,-soname=$(LIBHOGWEED_SONAME)'\n    # Requested by debian, to make linking with only -lhogweed work\n    # (does not work in general, e.g., with static linking all of\n    # -lhogweed -lgmp -lnettle are still required). Also makes dlopen\n    # of libhogweed.so work, without having to use RTLD_GLOBAL.\n    # Depends on -L. above, to locate nettle.so.\n    LIBHOGWEED_LIBS='-lnettle -lgmp'\n    ;;\nesac\n\nif test \"x$enable_pic\" = xyes; then\n  CCPIC_MAYBE=\"$CCPIC\"\nelse\n  CCPIC_MAYBE=''\nfi\nAC_SUBST([CCPIC_MAYBE])\n\nASM_SYMBOL_PREFIX=''\nASM_ELF_STYLE='no'\n# GNU as default is to use @\nASM_TYPE_FUNCTION='@function'\nASM_TYPE_PROGBITS='@progbits'\nASM_MARK_NOEXEC_STACK=''\nASM_ALIGN_LOG=''\n\nif test x$enable_assembler = xyes ; then\n  AC_CACHE_CHECK([if globals are prefixed by underscore],\n  nettle_cv_asm_underscore,\n  [ # Default is no underscore\n    nettle_cv_asm_underscore=no\n    AC_COMPILE_IFELSE(\n      [AC_LANG_SOURCE([int a_global_symbol;])],\n      [ $NM conftest.$OBJEXT >conftest.out\n        if grep _a_global_symbol conftest.out >/dev/null ; then\n          nettle_cv_asm_underscore=yes\n        elif grep a_global_symbol conftest.out >/dev/null ; then\n          nettle_cv_asm_underscore=no\n        else\n          AC_MSG_WARN([nm doesn't list a_global_symbol at all])\n\tfi],\n      [AC_MSG_WARN([test program with a single global could not be compiled!?])])])\n  if test x$nettle_cv_asm_underscore = xyes ; then\n    ASM_SYMBOL_PREFIX='_'\n  fi\n\n  AC_CACHE_CHECK([for ELF-style .type,%function pseudo-ops],\n    [nettle_cv_asm_type_percent_function],\n    [GMP_TRY_ASSEMBLE([\n.text\n.globl foo\n.type foo,%function\nfoo:\n.Lend:\n\n.size foo, .Lend - foo\n],\n       [nettle_cv_asm_type_percent_function=yes],\n       [nettle_cv_asm_type_percent_function=no])])\n\ndnl Needs double quote for the # character\n  AC_CACHE_CHECK([[for ELF-style .type,#function pseudo-ops]],\n    [nettle_cv_asm_type_hash_function],\n    [GMP_TRY_ASSEMBLE([\n.text\n.globl foo\n.type foo,#function\nfoo:\n.Lend:\n\n.size foo, .Lend - foo\n],\n       [nettle_cv_asm_type_hash_function=yes],\n       [nettle_cv_asm_type_hash_function=no])])\n\n  if test x$nettle_cv_asm_type_percent_function = xyes ; then\n    ASM_ELF_STYLE='yes'\n    ASM_TYPE_FUNCTION='%function'\n    ASM_TYPE_PROGBITS='%progbits'\n  else\n    if test x$nettle_cv_asm_type_hash_function = xyes ; then\n      ASM_ELF_STYLE='yes'\n      ASM_TYPE_FUNCTION='#function'\n      ASM_TYPE_PROGBITS='#progbits'\n    fi\n  fi\n\n  AC_CACHE_CHECK([if we should use a .note.GNU-stack section],\n  nettle_cv_asm_gnu_stack,\n  [ # Default\n    nettle_cv_asm_gnu_stack=no\n\n    cat >conftest.c <<EOF\nint foo() { return 0; }\nEOF\n    nettle_compile=\"$CC $CFLAGS $CPPFLAGS -c conftest.c >conftest.out 2>&1\"\n    if AC_TRY_EVAL(nettle_compile); then\n      cat conftest.out >&AC_FD_CC\n      $OBJDUMP -x conftest.o | grep '\\.note\\.GNU-stack' > /dev/null \\\n      && nettle_cv_asm_gnu_stack=yes\n    else\n      cat conftest.out >&AC_FD_CC\n      echo \"configure: failed program was:\" >&AC_FD_CC\n      cat conftest.s >&AC_FD_CC\n    fi\n    rm -f conftest.*])\n  if test x$nettle_cv_asm_gnu_stack = xyes ; then\n    ASM_MARK_NOEXEC_STACK='.section .note.GNU-stack,\"\",TYPE_PROGBITS'\n  fi\n\n  AC_CACHE_CHECK([if .align assembly directive is logarithmic],\n    [nettle_cv_asm_align_log],\n    [GMP_TRY_ASSEMBLE([\n.align 3\n],\n       [nettle_cv_asm_align_log=yes],\n       [nettle_cv_asm_align_log=no])])\n  ASM_ALIGN_LOG=\"$nettle_cv_asm_align_log\"\nfi\n\nAC_SUBST(ASM_SYMBOL_PREFIX)\nAC_SUBST(ASM_ELF_STYLE)\nAC_SUBST(ASM_TYPE_FUNCTION)\nAC_SUBST(ASM_TYPE_PROGBITS)\nAC_SUBST(ASM_MARK_NOEXEC_STACK)\nAC_SUBST(ASM_ALIGN_LOG)\nAC_SUBST(W64_ABI)\nAC_SUBST(EMULATOR)\n\nAC_SUBST(SHLIBCFLAGS)\n\nAC_SUBST(LIBNETTLE_MAJOR)\nAC_SUBST(LIBNETTLE_MINOR)\nAC_SUBST(LIBNETTLE_FORLINK)\nAC_SUBST(LIBNETTLE_SONAME)\nAC_SUBST(LIBNETTLE_FILE)\nAC_SUBST(LIBNETTLE_FILE_SRC)\nAC_SUBST(LIBNETTLE_LINK)\nAC_SUBST(LIBNETTLE_LIBS)\n\nAC_SUBST(LIBHOGWEED_MAJOR)\nAC_SUBST(LIBHOGWEED_MINOR)\nAC_SUBST(LIBHOGWEED_FORLINK)\nAC_SUBST(LIBHOGWEED_SONAME)\nAC_SUBST(LIBHOGWEED_FILE)\nAC_SUBST(LIBHOGWEED_FILE_SRC)\nAC_SUBST(LIBHOGWEED_LINK)\nAC_SUBST(LIBHOGWEED_LIBS)\n\nAC_PATH_PROG(M4, m4, m4)\n\nif test \"x$enable_gcov\" = \"xyes\"; then\n  CFLAGS=\"$CFLAGS -ftest-coverage -fprofile-arcs\"\nfi\n\n# Checks for typedefs, structures, and compiler characteristics.\nAC_C_CONST\nAC_C_INLINE\nAC_TYPE_UID_T\nAC_TYPE_SIZE_T\nAC_HEADER_TIME\nAC_CHECK_SIZEOF(long)\nAC_CHECK_ALIGNOF(uint64_t)\n\nALIGNOF_UINT64_T=\"$ac_cv_alignof_uint64_t\"\nAC_SUBST(ALIGNOF_UINT64_T)\n\nAC_CHECK_HEADERS([openssl/blowfish.h openssl/des.h openssl/cast.h openssl/aes.h],,\n[enable_openssl=no\n break])\n\nLSH_FUNC_ALLOCA\nLSH_FUNC_STRERROR\n\n# Needed by the supplied memcmp.c\nAC_C_BIGENDIAN\nAC_REPLACE_FUNCS(memxor)\n\nLSH_GCC_ATTRIBUTES\n\n# According to Simon Josefsson, looking for uint32_t and friends in\n# sys/types.h is needed on some systems, in particular cygwin.\nAX_CREATE_STDINT_H([nettle-stdint.h], [sys/types.h])\n\n# Check for file locking. We (AC_PROG_CC?) have already checked for\n# sys/types.h and unistd.h.\nAC_CACHE_CHECK([for fcntl file locking],\n\t\tnettle_cv_fcntl_locking,\n[AC_TRY_COMPILE([\n#if HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#if HAVE_UNISTD_H\n# include <unistd.h>\n#endif\n#include <fcntl.h>\n],[\nint op = F_SETLKW;\nstruct flock fl;\n],\nnettle_cv_fcntl_locking=yes,\nnettle_cv_fcntl_locking=no)])\n\nAH_TEMPLATE([HAVE_FCNTL_LOCKING], [Define if fcntl file locking is available])\nif test \"x$nettle_cv_fcntl_locking\" = \"xyes\" ; then\n  AC_DEFINE(HAVE_FCNTL_LOCKING)\nfi\n\n# Checks for libraries\nAC_CHECK_LIB(gmp, __gmpz_getlimbn,,\n    [AC_MSG_WARN(\n[GNU MP not found, or not 3.1 or up, see http://gmplib.org/.\nSupport for public key algorithms will be unavailable.])]\n    enable_public_key=no)\n\n# Add -R flags needed to run programs linked with gmp\nLSH_RPATH_FIX\n\n# Check for gmp limb size\nnettle_cv_gmp_numb_bits=0\nif test \"$enable_public_key\" = yes; then\n  AC_MSG_CHECKING([for GMP limb size])\n  AC_COMPUTE_INT(nettle_cv_gmp_numb_bits, [GMP_NUMB_BITS],\n      [#include <gmp.h>],\n      [AC_MSG_FAILURE([cannot find value of GMP_NUMB_BITS])])\n\n  AC_MSG_RESULT([$nettle_cv_gmp_numb_bits bits])\nfi\n\nGMP_NUMB_BITS=\"$nettle_cv_gmp_numb_bits\"\nAC_SUBST([GMP_NUMB_BITS])\n\nAH_TEMPLATE([HAVE_MPZ_POWM_SEC], [Define if mpz_powm_sec is available (appeared in GMP-5)])\nAC_CHECK_FUNC(__gmpz_powm_sec, [AC_DEFINE(HAVE_MPZ_POWM_SEC)])\n\nAH_TEMPLATE([WITH_HOGWEED], [Defined if public key features are enabled])\n\nif test \"x$enable_public_key\" = xyes ; then\n  AC_DEFINE(WITH_HOGWEED)\n  IF_HOGWEED=''\nelse\n  IF_HOGWEED='#'\nfi\n\nif test \"x$enable_static\" = xyes ; then\n  IF_STATIC=''\nelse\n  IF_STATIC='#'\nfi\n\nif test \"x$enable_shared\" = xyes ; then\n  IF_SHARED=''\nelse\n  IF_SHARED='#'\nfi\n\n# Documentation tools\nif test \"x$enable_documentation\" != \"xno\"; then\n  AC_PATH_PROG(MAKEINFO, makeinfo, not-found)\n\n  if test \"x$MAKEINFO\" != \"xnot-found\"; then\n    enable_documentation=yes\n    AC_SUBST(MAKEINFO)\n  else\n    if test \"x$enable_documentation\" == \"xauto\" ; then\n      enable_documentation=no\n    else\n      AC_MSG_ERROR([Cannot find 'makeinfo', required for documentation.])\n    fi\n  fi\nfi\n\nif test \"x$enable_documentation\" = \"xyes\" ; then\n  IF_DOCUMENTATION=''\nelse\n  IF_DOCUMENTATION='#'\nfi\n\nAC_SUBST(IF_HOGWEED)\nAC_SUBST(IF_STATIC)\nAC_SUBST(IF_SHARED)\nAC_SUBST(IF_DOCUMENTATION)\nAC_SUBST(IF_DLL)\n\nOPENSSL_LIBFLAGS=''\n\n# Check for openssl's libcrypto (used only for benchmarking)\nif test x$enable_openssl = xyes ; then\n  AC_CHECK_LIB(crypto, BF_ecb_encrypt,\n    [OPENSSL_LIBFLAGS='-lcrypto'],\n    [enable_openssl=no])\nfi\n\nAH_TEMPLATE([WITH_OPENSSL],\n\t    [Define if you have openssl's libcrypto (used for benchmarking)]) dnl'\n\nif test x$enable_openssl = xyes ; then\n  AC_DEFINE(WITH_OPENSSL)\nfi\n\nAC_SUBST(OPENSSL_LIBFLAGS)\n\nAH_BOTTOM(\n[#if defined(__x86_64__) || defined(__arch64__)\n# define HAVE_NATIVE_64_BIT 1\n#else\n/* Needs include of <limits.h> before use. */\n# define HAVE_NATIVE_64_BIT (SIZEOF_LONG * CHAR_BIT >= 64)\n#endif\n])\n\n# clock_gettime is in librt on *-*-osf5.1 and on glibc, so add -lrt to\n# BENCH_LIBS if needed. On linux (tested on x86_32, 2.6.26),\n# clock_getres reports ns accuracy, while in a quick test on osf\n# clock_getres said only 1 millisecond.\n\nold_LIBS=\"$LIBS\"\nAC_SEARCH_LIBS(clock_gettime, rt, [\n  AC_DEFINE([HAVE_CLOCK_GETTIME],1,[Define if clock_gettime is available])])\nBENCH_LIBS=\"$LIBS\"\nLIBS=\"$old_LIBS\"\n\nAC_SUBST(BENCH_LIBS)\n\n# Set these flags *last*, or else the test programs won't compile\nif test x$GCC = xyes ; then\n  # Using -ggdb3 makes (some versions of) Redhat's gcc-2.96 dump core\n  if $CC --version | grep '^2\\.96$' 1>/dev/null 2>&1; then\n    true\n  else\n    CFLAGS=\"$CFLAGS -ggdb3\"\n  fi\n  # FIXME: It would be better to actually test if this option works and/or is needed.\n  # Or perhaps use -funsigned-char.\n  if $CC --version | grep 'gcc.* 4\\.' 1>/dev/null 2>&1; then\n    CFLAGS=\"$CFLAGS -Wno-pointer-sign\"\n  fi\n  CFLAGS=\"$CFLAGS -Wall -W \\\n  -Wmissing-prototypes -Wmissing-declarations -Wstrict-prototypes \\\n  -Wpointer-arith -Wbad-function-cast -Wnested-externs\"\n\n# Don't enable -Wcast-align as it results in tons of warnings in the\n# DES code. And when using stdio.\n# Don't enable -Waggregate-return, as that causes warnings for glibc\n# inttypes.h.\nfi\n\nAC_CONFIG_FILES([config.make config.m4 Makefile])\nAC_CONFIG_FILES([tools/Makefile testsuite/Makefile examples/Makefile])\nAC_CONFIG_FILES([nettle.pc hogweed.pc])\n\nAC_OUTPUT\n\nAC_MSG_NOTICE([summary of build options:\n\n  Version:           ${PACKAGE_STRING}\n  Host type:         ${host}\n  ABI:               ${ABI}\n  Assembly files:    ${asm_path:-none}\n  Install prefix:    ${prefix}\n  Library directory: ${libdir}\n  Compiler:          ${CC}\n  Static libraries:  ${enable_static}\n  Shared libraries:  ${enable_shared}\n  Public key crypto: ${enable_public_key}\n  Documentation:     ${enable_documentation}\n])\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-nettle-2.7-yiop75kovtvugi74htmtqn2gvisu7jis/spack-src/nettle.pdf"
    ],
    "total_files": 462
}