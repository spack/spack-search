{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-slang-2.3.1-ckai3zgicxvtap5jn7nixag4rkbyrsm2/spack-src/src/slimport.c": "/*\nCopyright (C) 2004-2016 John E. Davis\n\nThis file is part of the S-Lang Library.\n\nThe S-Lang Library is free software; you can redistribute it and/or\nmodify it under the terms of the GNU General Public License as\npublished by the Free Software Foundation; either version 2 of the\nLicense, or (at your option) any later version.\n\nThe S-Lang Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nGeneral Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this library; if not, write to the Free Software\nFoundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,\nUSA.\n*/\n\n#include \"slinclud.h\"\n\n#include \"slang.h\"\n#include \"_slang.h\"\n\n#if defined (HAVE_DLFCN_H) || defined(__WIN32__)\n# define SLANG_HAS_DYNAMIC_LINKING\t1\n#else\n# define SLANG_HAS_DYNAMIC_LINKING\t0\n#endif\n\n/* The rest of this file is in the if block */\n#if SLANG_HAS_DYNAMIC_LINKING\n\n#ifdef HAVE_DLFCN_H\n# include <dlfcn.h>\n#endif\n\n#ifdef __WIN32__\n# include <windows.h>\n# define dlopen(a, b) LoadLibrary(a)\n# define dlsym (void *)GetProcAddress\n# define dlclose FreeLibrary\n# define dlerror() NULL\n# define SO_SUFFIX \"dll\"\n#else\n# define SO_SUFFIX \"so\"\n#endif\n\nstatic SLFUTURE_CONST char *Module_Path;\n#ifndef MODULE_PATH_ENV_NAME\n# define MODULE_PATH_ENV_NAME \"SLANG_MODULE_PATH\"\n#endif\n#ifndef MODULE_INSTALL_DIR\n# define MODULE_INSTALL_DIR \"/usr/local/lib/slang/v2/modules\"\n#endif\n\n#define MAX_MODULE_NAME_SIZE 256\n\ntypedef struct Namespace_List_Type\n{\n   char *ns;\n   struct Namespace_List_Type *next;\n}\nNamespace_List_Type;\n\ntypedef struct _Handle_Type\n{\n   struct _Handle_Type *next;\n   char *module_name;\n   VOID_STAR handle;\n   int (*ns_init_fun) (SLCONST char *);\n   void (*deinit_fun) (void);\n   Namespace_List_Type *ns_list;\n}\nHandle_Type;\n\nstatic Handle_Type *Handle_List;\n\nstatic void free_namespace_list (Namespace_List_Type *ns_list)\n{\n   while (ns_list != NULL)\n     {\n\tNamespace_List_Type *next = ns_list->next;\n\tSLang_free_slstring (ns_list->ns);\n\tSLfree ((char *)ns_list);\n\tns_list = next;\n     }\n}\n\nstatic void free_handle_type (Handle_Type *h)\n{\n   if (h == NULL)\n     return;\n\n   SLang_free_slstring (h->module_name);\n   free_namespace_list (h->ns_list);\n   SLfree ((char *)h);\n}\n\nstatic void delete_handles (void)\n{\n   while (Handle_List != NULL)\n     {\n\tHandle_Type *next = Handle_List->next;\n\n\tif (Handle_List->deinit_fun != NULL)\n\t  Handle_List->deinit_fun ();\n\t/* (void) dlclose (Handle_List->handle); */\n\tfree_handle_type (Handle_List);\n\tHandle_List = next;\n     }\n}\n\nstatic Handle_Type *allocate_handle_type (SLFUTURE_CONST char *module_name, VOID_STAR handle)\n{\n   Handle_Type *h;\n\n   h = (Handle_Type *) SLcalloc (1, sizeof (Handle_Type));\n   if (h == NULL)\n     return NULL;\n   if (NULL == (h->module_name = SLang_create_slstring (module_name)))\n     {\n\tSLfree ((char *) h);\n\treturn NULL;\n     }\n   h->handle = handle;\n   return h;\n}\n\nstatic Handle_Type *find_handle (SLCONST char *module_name)\n{\n   Handle_Type *l;\n\n   l = Handle_List;\n   while (l != NULL)\n     {\n\tif (0 == strcmp (l->module_name, module_name))\n\t  break;\n\tl = l->next;\n     }\n   return l;\n}\n\nstatic int check_api_version (char *file, int api_version)\n{\n   if (api_version/10000 == SLANG_VERSION/10000)\n     return 0;\n\n   _pSLang_verror (SL_Import_Error, \"Module %s is incompatible with this version of S-Lang\",\n\t\t file);\n   return -1;\n}\n\n#if defined(__GNUC__)\n# pragma GCC diagnostic ignored \"-Wformat-nonliteral\"\n#endif\nstatic VOID_STAR do_dlsym (VOID_STAR handle, SLFUTURE_CONST char *file, int check_error, SLFUTURE_CONST char *fmt, char *module)\n{\n   char symbol[MAX_MODULE_NAME_SIZE + 32];\n   VOID_STAR s;\n\n   SLsnprintf (symbol, sizeof(symbol), fmt, module);\n   if (NULL != (s = (VOID_STAR) dlsym (handle, symbol)))\n     return s;\n\n   if (check_error)\n     {\n\tSLCONST char *err;\n\n\tif (NULL == (err = (char *) dlerror ()))\n\t  err = \"UNKNOWN\";\n\n\t_pSLang_verror (SL_Import_Error,\n\t\t      \"Unable to get symbol %s from %s: %s\",\n\t\t      symbol, file, err);\n     }\n   return NULL;\n}\n#if defined(__GNUC__)\n# pragma GCC diagnostic warning \"-Wformat-nonliteral\"\n#endif\n\nstatic Handle_Type *dynamic_link_module (SLFUTURE_CONST char *module)\n{\n   Handle_Type *h;\n   VOID_STAR handle;\n   SLFUTURE_CONST char *err;\n   char filebuf[1024];\n   char *save_file;\n   char *save_err;\n   int api_version;\n   int *api_version_ptr;\n#define MAX_MODULE_NAME_SIZE 256\n   char module_so[MAX_MODULE_NAME_SIZE + 32];\n   char *module_name;\n   char *file, *pathfile;\n\n   if (strlen (module) >= MAX_MODULE_NAME_SIZE)\n     {\n\t_pSLang_verror (SL_LimitExceeded_Error, \"module name too long\");\n\treturn NULL;\n     }\n   SLsnprintf (module_so, sizeof(module_so), \"%s-module.%s\", module, SO_SUFFIX);\n\n   if (Module_Path != NULL)\n     pathfile = SLpath_find_file_in_path (Module_Path, module_so);\n   else pathfile = NULL;\n\n   if ((pathfile == NULL)\n       && (NULL != (pathfile = _pSLsecure_getenv (MODULE_PATH_ENV_NAME))))\n     pathfile = SLpath_find_file_in_path (pathfile, module_so);\n\n   if (pathfile == NULL)\n     pathfile = SLpath_find_file_in_path (MODULE_INSTALL_DIR, module_so);\n\n   if (pathfile != NULL)\n     file = pathfile;\n   else\n     file = module_so;\n\n   save_err = NULL;\n   save_file = file;\n   while (1)\n     {\n#ifndef RTLD_GLOBAL\n# define RTLD_GLOBAL 0\n#endif\n#ifdef RTLD_NOW\n\thandle = (VOID_STAR) dlopen (file, RTLD_NOW | RTLD_GLOBAL);\n#else\n\thandle = (VOID_STAR) dlopen (file, RTLD_LAZY | RTLD_GLOBAL);\n#endif\n\n\tif (handle != NULL)\n\t  {\n\t     if (_pSLang_Load_File_Verbose & SLANG_LOAD_MODULE_VERBOSE)\n\t       SLang_vmessage (\"Importing %s\", file);\n\t     if (save_err != NULL)\n\t       SLfree (save_err);\n\t     break;\n\t  }\n\n\t/* Purify reports that dlerror returns a pointer that generates UMR\n\t * errors.  There is nothing that I can do about that....\n\t */\n\tif ((NULL == strchr (file, '/'))\n\t    && (strlen(file) < sizeof(filebuf)))\n\t  {\n\t     err = (char *) dlerror ();\n\t     if (err != NULL)\n\t       save_err = SLmake_string (err);\n\n\t     SLsnprintf (filebuf, sizeof (filebuf), \"./%s\", file);\n\t     file = filebuf;\n\t     continue;\n\t  }\n\n\tif ((NULL == (err = save_err))\n\t    && (NULL == (err = (char *) dlerror ())))\n\t  err = \"UNKNOWN\";\n\n\t_pSLang_verror (SL_Import_Error,\n\t\t      \"Error linking to %s: %s\", save_file, err);\n\n\tif (save_err != NULL)\n\t  SLfree (save_err);\n\tif (pathfile != NULL)\n\t  SLfree (pathfile);\n\n\treturn NULL;\n     }\n\n   /* Using SLpath_basename allows, e.g., import (\"/path/to/module\"); */\n   module_name = SLpath_basename (module);\n\n   api_version_ptr = (int *) do_dlsym (handle, file, 0, \"SLmodule_%s_api_version\", module_name);\n   if (api_version_ptr == NULL)\n     api_version_ptr = (int *) do_dlsym (handle, file, 0, \"_SLmodule_%s_api_version\", module_name);\n\n   if (api_version_ptr == NULL)\n     api_version = 0;\n   else\n     api_version = *api_version_ptr;\n\n   if ((-1 == check_api_version (file, api_version))\n       || (NULL == (h = allocate_handle_type (module, handle))))\n     {\n\tSLfree (pathfile);\t       /* NULL ok */\n\tdlclose (handle);\n\treturn NULL;\n     }\n\n   if (NULL == (h->ns_init_fun = (int (*)(SLCONST char *)) do_dlsym (handle, file, 1, \"init_%s_module_ns\", module_name)))\n     {\n\tSLfree (pathfile);\n\tfree_handle_type (h);\n\tdlclose (handle);\n\treturn NULL;\n     }\n   h->deinit_fun = (void (*)(void)) do_dlsym (handle, file, 0, \"deinit_%s_module\", module_name);\n\n   SLfree (pathfile);\t\t       /* NULL ok */\n   h->next = Handle_List;\n   Handle_List = h;\n\n   return h;\n}\n\nstatic int import_module (SLFUTURE_CONST char *module, SLFUTURE_CONST char *ns)\n{\n   Handle_Type *h;\n   Namespace_List_Type *ns_list;\n\n   if (ns == NULL)\n     ns = _pSLang_cur_namespace_intrinsic ();\n\n   if (*ns == 0)\n     ns = \"Global\";\n\n   if ((NULL == (h = find_handle (module)))\n       && (NULL == (h = dynamic_link_module (module))))\n     return -1;\n\n   ns_list = h->ns_list;\n   while (ns_list != NULL)\n     {\n\tif (0 == strcmp (ns, ns_list->ns))\n\t  return 0;\t\t       /* already linked to this ns */\n\tns_list = ns_list->next;\n     }\n\n   if (NULL == (ns_list = (Namespace_List_Type *)SLmalloc (sizeof (Namespace_List_Type))))\n     return -1;\n\n   if (NULL == (ns_list->ns = SLang_create_slstring (ns)))\n     {\n\tSLfree ((char *)ns_list);\n\treturn -1;\n     }\n   ns_list->next = h->ns_list;\n   h->ns_list = ns_list;\n\n   if (-1 == (h->ns_init_fun (ns)))\n     return -1;\n\n   return 0;\n}\n\nstatic void import_module_intrin (void)\n{\n   char *module;\n   char *ns = NULL;\n\n   if (SLang_Num_Function_Args == 2)\n     {\n\tif (-1 == SLang_pop_slstring (&ns))\n\t  return;\n     }\n\n   if (-1 == SLang_pop_slstring (&module))\n     {\n\tSLang_free_slstring (ns);      /* NULL ok */\n\treturn;\n     }\n\n   (void) import_module (module, ns);\n   SLang_free_slstring (module);\n   SLang_free_slstring (ns);\t       /* NULL ok */\n}\n\nstatic void set_import_module_path (char *path)\n{\n   (void) SLang_set_module_load_path (path);\n}\n\nstatic SLCONST char *get_import_module_path (void)\n{\n   char *path;\n   if (Module_Path != NULL)\n     return Module_Path;\n   if (NULL != (path = _pSLsecure_getenv (MODULE_PATH_ENV_NAME)))\n     return path;\n   return MODULE_INSTALL_DIR;\n}\n\nstatic SLang_Intrin_Fun_Type Module_Intrins [] =\n{\n   MAKE_INTRINSIC_0(\"import\", import_module_intrin, SLANG_VOID_TYPE),\n   MAKE_INTRINSIC_S(\"set_import_module_path\", set_import_module_path, SLANG_VOID_TYPE),\n   MAKE_INTRINSIC_0(\"get_import_module_path\", get_import_module_path, SLANG_STRING_TYPE),\n   SLANG_END_INTRIN_FUN_TABLE\n};\n\n#endif\t\t\t\t       /* SLANG_HAS_DYNAMIC_LINKING */\n\nint SLang_set_module_load_path (SLFUTURE_CONST char *path)\n{\n#if SLANG_HAS_DYNAMIC_LINKING\n   if (NULL == (path = SLang_create_slstring (path)))\n     return -1;\n   SLang_free_slstring ((char *) Module_Path);\n   Module_Path = path;\n   return 0;\n#else\n   (void) path;\n   return -1;\n#endif\n}\n\nint SLang_init_import (void)\n{\n#if SLANG_HAS_DYNAMIC_LINKING\n   (void) SLang_add_cleanup_function (delete_handles);\n   return SLadd_intrin_fun_table (Module_Intrins, \"__IMPORT__\");\n#else\n   return 0;\n#endif\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-slang-2.3.1-ckai3zgicxvtap5jn7nixag4rkbyrsm2/spack-src/autoconf/aclocal.m4": "dnl# -*- mode: sh; mode: fold -*-\ndnl# 0.3.3-0: Added $(OBJ_O_DEPS) and $(ELF_O_DEPS) to PROGRAM_OBJECT_RULES\ndnl# 0.3.2-0: Add rpath support for freebsd\ndnl# 0.3.1-0: New output variable: CC_SHARED_FLAGS; CC_SHARED is deprecated\ndnl# 0.3.0-0: Added support for parsing /etc/ld.so.conf\ndnl# 0.2.7-3: Change ncurses5w-config to ncursesw5-config (Gilles Espinasse)\ndnl# 0.2.7-2: For the Makefile rules, use cd foo && bar instead of cd foo; bar\ndnl# 0.2.7-1: Use \"$ARCH\"elfobjs instead of elf\"$ARCH\"objs for better flexibility\ndnl# 0.2.7-0: Instead of expanding $ARCH at configure time, use \\$ARCH for compile-time expansion\ndnl# 0.2.6-2: Missing hyphen for cygwin ELFLIB_MAJOR (Marco Atzeri)\ndnl# 0.2.6-1: Added optional second and third arguments to AC_DEFINE (Marco Atzeri)\ndnl# 0.2.6-0: On cygwin, change libfooX_Y_Z.dll to cygfoo-X_Y_Z.dll (Marco Atzeri)\ndnl# 0.2.5-3: Changed AC_DEFUN(foo...) to AC_DEFUN([foo]...)\ndnl# 0.2.5-2: JD_CHECK_FOR_LIBRARY will alse output *_INC_DIR and *_LIB_DIR\ndnl# 0.2.5-1: Updated using autoupdate\ndnl# 0.2.5-0: M_LIB output variable created for haiku support (Scott McCreary)\ndnl# 0.2.4-0: Added optional 3rd argument to JD_WITH_LIBRARY for a default path\ndnl# 0.2.3-2: X was missing in a \"test\" statement (Joerg Sommer)\ndnl# 0.2.3-1: AC_AIX needs to be called before running the compiler (Miroslav Lichvar)\ndnl# 0.2.3: rewrote JD_CHECK_FOR_LIBRARY to loop over include/lib pairs\ndnl# 0.2.2-1: JD_WITH_LIBRARY bug-fix\ndnl# 0.2.2:  Use ncurses5-config to search for terminfo dirs.\ndnl# 0.2.1:  Add .dll.a to list of extensions to when searching for libs (cygwin)\ndnl# 0.2.0:  Added install target name and more fixes for cygwin\ndnl# 0.1.12: Improved support for cygwin\ndnl# 0.1.11: Fixed elf linking on freebsd (Renato Botelho (garga at freebsd, org)\ndnl# Version 0.1.10: rpath support for netbsd\ndnl# Version 0.1.9: When searching for libs, use dylib on darwin\ndnl# Version 0.1.8: Add rpath support for OpenBSD\ndnl# Version 0.1.7: removed \"-K pic\" from IRIX compiler lines\ndnl# Version 0.1.6: Added cygwin module support\ndnl# Version 0.1.5: Added gcc version-script support.\n\nAC_DEFUN([JD_INIT],     dnl#{{{\n[\n#These variable are initialized by JD init function\nCONFIG_DIR=`pwd`\ncd $srcdir\nif test \"`pwd`\" != \"$CONFIG_DIR\"\nthen\n  AC_MSG_ERROR(\"This software does not support configuring from another directory.   See the INSTALL file\")\nfi\ndnl# if test \"X$PWD\" != \"X\"\ndnl# then\ndnl#  CONFIG_DIR=\"$PWD\"\ndnl# fi\nAC_SUBST(CONFIG_DIR)dnl\n# Note: these will differ if one is a symbolic link\nif test -f /usr/bin/dirname; then\n  JD_Above_Dir=`dirname $CONFIG_DIR`\nelse\n# system is a loser\n  JD_Above_Dir=`cd ..;pwd`\nfi\nJD_Above_Dir2=`cd ..;pwd`\n])\ndnl#}}}\n\ndnl# This function expand the \"prefix variables.  For example, it will expand\ndnl# values such as ${exec_prefix}/foo when ${exec_prefix} itself has a\ndnl# of ${prefix}.  This function produces the shell variables:\ndnl# jd_prefix_libdir, jd_prefix_incdir\nAC_DEFUN([JD_EXPAND_PREFIX], dnl#{{{\n[\n  if test \"X$jd_prefix\" = \"X\"\n  then\n    jd_prefix=$ac_default_prefix\n    if test \"X$prefix\" != \"XNONE\"\n    then\n      jd_prefix=\"$prefix\"\n    fi\n    jd_exec_prefix=\"$jd_prefix\"\n    if test \"X$exec_prefix\" != \"XNONE\"\n    then\n      jd_exec_prefix=\"$exec_prefix\"\n    fi\n\n    dnl#Unfortunately, exec_prefix may have a value like ${prefix}, etc.\n    dnl#Let the shell expand those.  Yuk.\n    eval `sh <<EOF\n      prefix=$jd_prefix\n      exec_prefix=$jd_exec_prefix\n      libdir=$libdir\n      includedir=$includedir\n      echo jd_prefix_libdir=\"\\$libdir\" jd_prefix_incdir=\"\\$includedir\"\nEOF\n`\n  fi\n])\n#}}}\n\nAC_DEFUN([JD_GET_SYS_INCLIBS], dnl#{{{\n[\n  if test -x $ac_aux_dir/scripts/getsyslibs.sh\n  then\n    JD_SYS_INCLIBS=`$ac_aux_dir/scripts/getsyslibs.sh`\n  else\n    JD_SYS_INCLIBS=\"\"\n  fi\n])\ndnl#}}}\n\nAC_DEFUN([JD_SET_OBJ_SRC_DIR], dnl#{{{\n[\n#---------------------------------------------------------------------------\n# Set the source directory and object directory.   The makefile assumes an\n# absolute path name.  This is because src/Makefile cds to OBJDIR and compiles\n# the src file which is in SRCDIR\n#---------------------------------------------------------------------------\nSRCDIR=$CONFIG_DIR\nif test \"$1\" != \".\"\nthen\n  if test -z \"$1\"\n  then\n    SRCDIR=$SRCDIR/src\n  else\n    SRCDIR=$SRCDIR/$1\n  fi\nfi\n\nOBJDIR=$SRCDIR/\"\\$(ARCH)\"objs\nELFDIR=$SRCDIR/\"\\$(ARCH)\"elfobjs\nAC_SUBST(SRCDIR)dnl\nAC_SUBST(OBJDIR)dnl\nAC_SUBST(ELFDIR)dnl\n])\ndnl#}}}\n\nRPATH=\"\"\nAC_DEFUN([JD_INIT_RPATH], dnl#{{{\n[\ndnl# determine whether or not -R or -rpath can be used\ncase \"$host_os\" in\n  *linux*|*solaris* )\n    if test \"X$GCC\" = Xyes\n    then\n      if test \"X$ac_R_nospace\" = \"Xno\"\n      then\n        RPATH=\"-Wl,-R,\"\n      else\n        RPATH=\"-Wl,-R\"\n      fi\n    else\n      if test \"X$ac_R_nospace\" = \"Xno\"\n      then\n        RPATH=\"-R \"\n      else\n\tRPATH=\"-R\"\n      fi\n    fi\n  ;;\n  *osf*|*openbsd*|*freebsd*)\n    if test \"X$GCC\" = Xyes\n    then\n      RPATH=\"-Wl,-rpath,\"\n    else\n      RPATH=\"-rpath \"\n    fi\n  ;;\n  *netbsd*)\n    if test \"X$GCC\" = Xyes\n    then\n      RPATH=\"-Wl,-R\"\n    fi\n  ;;\nesac\n])\n\ndnl#}}}\n\nAC_DEFUN([JD_SET_RPATH], dnl#{{{\n[\nif test \"X$1\" != \"X\"\nthen\n  if test \"X$RPATH\" = \"X\"\n  then\n    JD_INIT_RPATH\n    if test \"X$RPATH\" != \"X\"\n    then\n      RPATH=\"$RPATH$1\"\n    fi\n  else\n    _already_there=0\n    for X in `echo $RPATH | sed 's/:/ /g'`\n    do\n      if test \"$X\" = \"$1\"\n      then\n        _already_there=1\n\tbreak\n      fi\n    done\n    if test $_already_there = 0\n    then\n      RPATH=\"$RPATH:$1\"\n    fi\n  fi\nfi\n])\nAC_SUBST(RPATH)dnl\n\ndnl#}}}\n\nAC_DEFUN([JD_UPPERCASE], dnl#{{{\n[\nchangequote(<<, >>)dnl\ndefine(<<$2>>, translit($1, [a-z], [A-Z]))dnl\nchangequote([, ])dnl\n])\n#}}}\n\nAC_DEFUN([JD_SIMPLE_LIB_DIR], dnl#{{{\n[\nJD_UPPERCASE($1,JD_UP_NAME)\nJD_UP_NAME[]_LIB_DIR=$JD_Above_Dir/$1/libsrc/\"$ARCH\"objs\nJD_UP_NAME[]_INCLUDE=$JD_Above_Dir/$1/libsrc\n\nif test ! -d \"[$]JD_UP_NAME[]_INCLUDE\"\nthen\n   JD_UP_NAME[]_LIB_DIR=$JD_Above_Dir/$1/src/\"$ARCH\"objs\n   JD_UP_NAME[]_INCLUDE=$JD_Above_Dir/$1/src\n   if test ! -d \"[$]JD_UP_NAME[]_INCLUDE\"\n   then\n     echo \"\"\n     echo WARNING------Unable to find the JD_UP_NAME directory\n     echo You may have to edit $CONFIG_DIR/src/Makefile.\n     echo \"\"\n   fi\nfi\n\nAC_SUBST(JD_UP_NAME[]_LIB_DIR)dnl\nAC_SUBST(JD_UP_NAME[]_INCLUDE)dnl\nundefine([JD_UP_NAME])dnl\n])\n\ndnl#}}}\n\nAC_DEFUN([JD_FIND_GENERIC], dnl#{{{\n[\n  AC_REQUIRE([JD_EXPAND_PREFIX])dnl\n\n  changequote(<<, >>)dnl\n  define(<<JD_UP_NAME>>, translit($1, [a-z], [A-Z]))dnl\n  changequote([, ])dnl\n# Look for the JD_UP_NAME package\n#JD_UP_NAME[]_INCLUDE=\"\"\n#JD_UP_NAME[]_LIB_DIR=\"\"\n\n# This list consists of \"include,lib include,lib ...\"\nJD_Search_Dirs=\"$JD_Above_Dir2/$1/libsrc,$JD_Above_Dir2/$1/libsrc/\"$ARCH\"objs \\\n                $JD_Above_Dir/$1/libsrc,$JD_Above_Dir/$1/libsrc/\"$ARCH\"objs \\\n\t\t$JD_Above_Dir2/$1/src,$JD_Above_Dir2/$1/src/\"$ARCH\"objs \\\n                $JD_Above_Dir/$1/src,$JD_Above_Dir/$1/src/\"$ARCH\"objs\"\n\nJD_Search_Dirs=\"$JD_Search_Dirs \\\n                $jd_prefix_incdir,$jd_prefix_libdir \\\n\t\t$HOME/include,$HOME/lib\"\n\nif test -n \"$ARCH\"\nthen\n JD_Search_Dirs=\"$JD_Search_Dirs $HOME/include,$HOME/$ARCH/lib\"\n JD_Search_Dirs=\"$JD_Search_Dirs $HOME/include,$HOME/sys/$ARCH/lib\"\nfi\n\n# Now add the standard system includes.  The reason for doing this is that\n# the other directories may have a better chance of containing a more recent\n# version.\n\nJD_Search_Dirs=\"$JD_Search_Dirs \\\n                /usr/local/include,/usr/local/lib \\\n\t\t/usr/include,/usr/lib \\\n\t\t/usr/include/$1,/usr/lib \\\n\t\t/usr/include/$1,/usr/lib/$1\"\n\necho looking for the JD_UP_NAME library\n\nfor include_and_lib in $JD_Search_Dirs\ndo\n  # Yuk.  Is there a better way to set these variables??\n  generic_include=`echo $include_and_lib | tr ',' ' ' | awk '{print [$]1}'`\n  generic_lib=`echo $include_and_lib | tr ',' ' ' | awk '{print [$]2}'`\n  echo Looking for $1.h in $generic_include\n  echo and lib$1.a in $generic_lib\n  if test -r $generic_include/$1.h && test -r $generic_lib/lib$1.a\n  then\n    echo Found it.\n    JD_UP_NAME[]_LIB_DIR=\"$generic_lib\"\n    JD_UP_NAME[]_INCLUDE=\"$generic_include\"\n    break\n  else\n    if test -r $generic_include/$1.h && test -r $generic_lib/lib$1.so\n    then\n      echo Found it.\n      JD_UP_NAME[]_LIB_DIR=\"$generic_lib\"\n      JD_UP_NAME[]_INCLUDE=\"$generic_include\"\n      break\n    fi\n  fi\ndone\n\nif test -n \"[$]JD_UP_NAME[]_LIB_DIR\"\nthen\n    jd_have_$1=\"yes\"\nelse\n    echo Unable to find the $JD_UP_NAME library.\n    echo You may have to edit $CONFIG_DIR/src/Makefile.\n    JD_UP_NAME[]_INCLUDE=$JD_Above_Dir/$1/src\n    JD_UP_NAME[]_LIB_DIR=$JD_Above_Dir/$1/src/\"$ARCH\"objs\n    jd_have_$1=\"no\"\nfi\n\nJD_UP_NAME[]_INC=\"-I[$]JD_UP_NAME[]_INCLUDE\"\nJD_UP_NAME[]_LIB=\"-L[$]JD_UP_NAME[]_LIB_DIR\"\nJD_SET_RPATH([$]JD_UP_NAME[]_LIB_DIR)\ndnl# if test \"X$GCC\" = Xyes\ndnl# then\ndnl#    RPATH_[]JD_UP_NAME=\"-Wl,-R[$]JD_UP_NAME[]_LIB_DIR\"\ndnl# else\ndnl#    RPATH_[]JD_UP_NAME=\"-R[$]JD_UP_NAME[]_LIB_DIR\"\ndnl# fi\n\n# gcc under solaris is often not installed correctly.  Avoid specifying\n# -I/usr/include.\nif test \"[$]JD_UP_NAME[]_INC\" = \"-I/usr/include\"\nthen\n    JD_UP_NAME[]_INC=\"\"\nfi\n\nif test \"[$]JD_UP_NAME[]_LIB\" = \"-L/usr/lib\"\nthen\n    JD_UP_NAME[]_LIB=\"\"\n    RPATH_[]JD_UP_NAME=\"\"\nfi\n\nAC_SUBST(JD_UP_NAME[]_LIB)dnl\nAC_SUBST(JD_UP_NAME[]_INC)dnl\nAC_SUBST(JD_UP_NAME[]_LIB_DIR)dnl\nAC_SUBST(JD_UP_NAME[]_INCLUDE)dnl\ndnl# AC_SUBST(RPATH_[]JD_UP_NAME)dnl\nundefine([JD_UP_NAME])dnl\n])\n\ndnl#}}}\n\nAC_DEFUN([JD_FIND_SLANG], dnl#{{{\n[\nJD_FIND_GENERIC(slang)\n])\n\ndnl#}}}\n\nAC_DEFUN([JD_GCC_WARNINGS], dnl#{{{\n[\nAC_ARG_ENABLE(warnings,\n\t      AC_HELP_STRING([--enable-warnings],[turn on GCC compiler warnings]),\n\t      [gcc_warnings=$enableval])\nif test -n \"$GCC\"\nthen\n  #CFLAGS=\"$CFLAGS -fno-strength-reduce\"\n  if test -n \"$gcc_warnings\"\n  then\n    CFLAGS=\"$CFLAGS -Wall -W -pedantic -Winline -Wmissing-prototypes \\\n -Wnested-externs -Wpointer-arith -Wcast-align -Wshadow -Wstrict-prototypes \\\n -Wformat=2\"\n    # Now trim excess whitespace\n    CFLAGS=`echo $CFLAGS`\n  fi\nfi\n])\n\ndnl#}}}\n\nIEEE_CFLAGS=\"\"\nAC_DEFUN([JD_IEEE_CFLAGS], dnl#{{{\n[\ncase \"$host_cpu\" in\n  *alpha* )\n    if test \"$GCC\" = yes\n    then\n      IEEE_CFLAGS=\"-mieee\"\n    else\n      IEEE_CFLAGS=\"-ieee_with_no_inexact\"\n    fi\n    ;;\n  * )\n    IEEE_CFLAGS=\"\"\nesac\n])\n\ndnl#}}}\n\nAC_DEFUN([JD_CREATE_ORULE], dnl#{{{\n[\nPROGRAM_OBJECT_RULES=\"$PROGRAM_OBJECT_RULES\n\\$(OBJDIR)/$1.o : \\$(SRCDIR)/$1.c \\$(DOT_O_DEPS) \\$(OBJ_O_DEPS) \\$(\"$1\"_O_DEP)\n\tcd \\$(OBJDIR) && \\$(COMPILE_CMD) \\$(\"$1\"_C_FLAGS) \\$(SRCDIR)/$1.c\n\"\n])\n\ndnl#}}}\n\nAC_DEFUN([JD_CREATE_ELFORULE], dnl#{{{\n[\nPROGRAM_ELF_ORULES=\"$PROGRAM_ELF_ORULES\n\\$(ELFDIR)/$1.o : \\$(SRCDIR)/$1.c \\$(DOT_O_DEPS) \\$(ELF_O_DEPS) \\$(\"$1\"_O_DEP)\n\tcd \\$(ELFDIR) && \\$(ELFCOMPILE_CMD) \\$(\"$1\"_C_FLAGS) \\$(SRCDIR)/$1.c\n\"\n])\n\ndnl#}}}\n\nAC_DEFUN([JD_CREATE_EXEC_RULE], dnl#{{{\n[\nPROGRAM_OBJECT_RULES=\"$PROGRAM_OBJECT_RULES\n$1 : \\$(OBJDIR)/$1\n\t@echo $1 created in \\$(OBJDIR)\n\\$(OBJDIR)/$1 : \\$(OBJDIR)/$1.o \\$(\"$1\"_DEPS) \\$(EXECDEPS)\n\t\\$(CC) -o \\$(OBJDIR)/$1 \\$(LDFLAGS) \\$(OBJDIR)/$1.o \\$(\"$1\"_LIBS) \\$(EXECLIBS)\n\\$(OBJDIR)/$1.o : \\$(SRCDIR)/$1.c \\$(DOT_O_DEPS) \\$(\"$1\"_O_DEP)\n\tcd \\$(OBJDIR) && \\$(COMPILE_CMD) \\$(\"$1\"_INC) \\$(EXECINC) \\$(SRCDIR)/$1.c\n\"\n])\n\ndnl#}}}\n\nAC_DEFUN([JD_CREATE_MODULE_ORULES], dnl#{{{\n[\n for program_module in $Program_Modules; do\n   JD_CREATE_ORULE($program_module)\n   JD_CREATE_ELFORULE($program_module)\n done\n])\n\ndnl#}}}\n\nAC_DEFUN([JD_GET_MODULES], dnl#{{{\n[\n PROGRAM_HFILES=\"\"\n PROGRAM_OFILES=\"\"\n PROGRAM_CFILES=\"\"\n PROGRAM_OBJECTS=\"\"\n PROGRAM_ELFOBJECTS=\"\"\n PROGRAM_OBJECT_RULES=\"\"\n PROGRAM_ELF_ORULES=\"\"\n if test -z \"$1\"\n then\n   Program_Modules=\"\"\n else\n   comment_re=\"^#\"\n   Program_Modules=`grep -v '$comment_re' $1 | awk '{print [$]1}'`\n   Program_H_Modules=`grep -v '$comment_re' $1 | awk '{print [$]2}'`\n   for program_module in $Program_H_Modules; do\n     PROGRAM_HFILES=\"$PROGRAM_HFILES $program_module\"\n   done\n fi\n for program_module in $Program_Modules; do\n   PROGRAM_OFILES=\"$PROGRAM_OFILES $program_module.o\"\n   PROGRAM_CFILES=\"$PROGRAM_CFILES $program_module.c\"\n   PROGRAM_OBJECTS=\"$PROGRAM_OBJECTS \\$(OBJDIR)/$program_module.o\"\n   PROGRAM_ELFOBJECTS=\"$PROGRAM_ELFOBJECTS \\$(ELFDIR)/$program_module.o\"\n done\ndnl echo $PROGRAM_OFILES\ndnl echo $PROGRAM_HFILES\nAC_SUBST(PROGRAM_OFILES)dnl\nAC_SUBST(PROGRAM_CFILES)dnl\nAC_SUBST(PROGRAM_HFILES)dnl\nAC_SUBST(PROGRAM_OBJECTS)dnl\nAC_SUBST(PROGRAM_ELFOBJECTS)dnl\n])\n\ndnl#}}}\n\nAC_DEFUN([JD_APPEND_RULES], dnl#{{{\n[\n echo \"$PROGRAM_OBJECT_RULES\" >> $1\n])\n\ndnl#}}}\n\nAC_DEFUN([JD_APPEND_ELFRULES], dnl#{{{\n[\n echo \"$PROGRAM_ELF_ORULES\" >> $1\n])\n\ndnl#}}}\n\nAC_DEFUN([JD_CREATE_MODULE_EXEC_RULES], dnl#{{{\n[\n for program_module in $Program_Modules; do\n   JD_CREATE_EXEC_RULE($program_module)\n done\n])\n\ndnl#}}}\n\nAC_DEFUN([JD_TERMCAP], dnl#{{{\n[\nAC_PATH_PROG(nc5config, ncurses5-config, no)\nif test \"$nc5config\" = \"no\"\nthen\n  AC_PATH_PROG(nc5config, ncursesw5-config, no)\nfi\nAC_MSG_CHECKING(for terminfo)\nif test \"$nc5config\" != \"no\"\nthen\n   MISC_TERMINFO_DIRS=`$nc5config --terminfo`\nelse\n   MISC_TERMINFO_DIRS=\"\"\nfi\nJD_Terminfo_Dirs=\"$MISC_TERMINFO_DIRS \\\n                  /usr/lib/terminfo \\\n                  /usr/share/terminfo \\\n                  /usr/share/lib/terminfo \\\n\t\t  /usr/local/lib/terminfo\"\nTERMCAP=-ltermcap\n\nfor terminfo_dir in $JD_Terminfo_Dirs\ndo\n   if test -d $terminfo_dir\n   then\n      AC_MSG_RESULT(yes)\n      TERMCAP=\"\"\n      break\n   fi\ndone\nif test \"$TERMCAP\"; then\n  AC_MSG_RESULT(no)\n  AC_DEFINE(USE_TERMCAP,1,[Define to use termcap])\nfi\nAC_SUBST(TERMCAP)dnl\nAC_SUBST(MISC_TERMINFO_DIRS)dnl\n])\n\ndnl#}}}\n\nAC_DEFUN([JD_ANSI_CC], dnl#{{{\n[\nAC_AIX\nAC_REQUIRE([AC_PROG_CC])\nAC_REQUIRE([AC_PROG_CPP])\nAC_REQUIRE([AC_PROG_GCC_TRADITIONAL])\nAC_ISC_POSIX\n\ndnl #This stuff came from Yorick config script\ndnl\ndnl # HPUX needs special stuff\ndnl\nAC_EGREP_CPP(yes,\n[#ifdef hpux\n  yes\n#endif\n], [\nAC_DEFINE(_HPUX_SOURCE,1,[Special define needed for HPUX])\nif test \"$CC\" = cc; then CC=\"cc -Ae\"; fi\n])dnl\ndnl\ndnl #Be sure we've found compiler that understands prototypes\ndnl\nAC_MSG_CHECKING(C compiler that understands ANSI prototypes)\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[ ]], [[\n extern int silly (int);]])],[\n AC_MSG_RESULT($CC looks ok.  Good.)],[\n AC_MSG_RESULT($CC is not a good enough compiler)\n AC_MSG_ERROR(Set env variable CC to your ANSI compiler and rerun configure.)\n ])dnl\n])dnl\n\ndnl#}}}\n\nAC_DEFUN([JD_ELF_COMPILER], dnl#{{{\n[\ndnl #-------------------------------------------------------------------------\ndnl # Check for dynamic linker\ndnl #-------------------------------------------------------------------------\nDYNAMIC_LINK_LIB=\"\"\n\ndnl# AH_TEMPLATE([HAVE_DLOPEN],1,[Define if you have dlopen])\n\nAC_CHECK_HEADER(dlfcn.h,[\n  AC_DEFINE(HAVE_DLFCN_H,1,[Define if you have the dlfcn.h header])\n  AC_CHECK_LIB(dl,dlopen,[\n    DYNAMIC_LINK_LIB=\"-ldl\"\n    AC_DEFINE(HAVE_DLOPEN,1,[Define if you have dlopen])\n   ],[\n    AC_CHECK_FUNC(dlopen,AC_DEFINE(HAVE_DLOPEN,[Define if you have dlopen]))\n    if test \"$ac_cv_func_dlopen\" != yes\n    then\n      AC_MSG_WARN(cannot perform dynamic linking)\n    fi\n   ])])\nAC_SUBST(DYNAMIC_LINK_LIB)\n\nif test \"$GCC\" = yes\nthen\n  if test X\"$CFLAGS\" = X\n  then\n     CFLAGS=\"-O2\"\n  fi\nfi\n\ndnl #Some defaults\nELFLIB=\"lib\\$(THIS_LIB).so\"\nELFLIB_MAJOR=\"\\$(ELFLIB).\\$(ELF_MAJOR_VERSION)\"\nELFLIB_MAJOR_MINOR=\"\\$(ELFLIB_MAJOR).\\$(ELF_MINOR_VERSION)\"\nELFLIB_MAJOR_MINOR_MICRO=\"\\$(ELFLIB_MAJOR_MINOR).\\$(ELF_MICRO_VERSION)\"\n\ndnl# This specifies the target to use in the makefile to install the shared library\nINSTALL_ELFLIB_TARGET=\"install-elf-and-links\"\nELFLIB_BUILD_NAME=\"\\$(ELFLIB_MAJOR_MINOR_MICRO)\"\nINSTALL_MODULE=\"\\$(INSTALL_DATA)\"\nSLANG_DLL_CFLAGS=\"\"\nM_LIB=\"-lm\"\n\ncase \"$host_os\" in\n  *linux*|*gnu*|k*bsd*-gnu )\n    DYNAMIC_LINK_FLAGS=\"-Wl,-export-dynamic\"\n    ELF_CC=\"\\$(CC)\"\n    ELF_CFLAGS=\"\\$(CFLAGS) -fPIC\"\n    ELF_LINK=\"\\$(CC) \\$(LDFLAGS) -shared -Wl,-O1 -Wl,--version-script,\\$(VERSION_SCRIPT) -Wl,-soname,\\$(ELFLIB_MAJOR)\"\n    ELF_DEP_LIBS=\"\\$(DL_LIB) -lm -lc\"\n    CC_SHARED_FLAGS=\"-shared -fPIC\"\n    CC_SHARED=\"\\$(CC) $CC_SHARED_FLAGS \\$(CFLAGS)\"\n    ;;\n  *solaris* )\n    if test \"$GCC\" = yes\n    then\n      DYNAMIC_LINK_FLAGS=\"\"\n      ELF_CC=\"\\$(CC)\"\n      ELF_CFLAGS=\"\\$(CFLAGS) -fPIC\"\n      ELF_LINK=\"\\$(CC) \\$(LDFLAGS) -shared -Wl,-ztext -Wl,-h,\\$(ELFLIB_MAJOR)\"\n      ELF_DEP_LIBS=\"\\$(DL_LIB) -lm -lc\"\n      CC_SHARED_FLAGS=\"-G -fPIC\"\n      CC_SHARED=\"\\$(CC) $CC_SHARED_FLAGS \\$(CFLAGS)\"\n    else\n      DYNAMIC_LINK_FLAGS=\"\"\n      ELF_CC=\"\\$(CC)\"\n      ELF_CFLAGS=\"\\$(CFLAGS) -K PIC\"\n      ELF_LINK=\"\\$(CC) \\$(LDFLAGS) -G -h\\$(ELFLIB_MAJOR)\"\n      ELF_DEP_LIBS=\"\\$(DL_LIB) -lm -lc\"\n      CC_SHARED_FLAGS=\"-G -K PIC\"\n      CC_SHARED=\"\\$(CC) $CC_SHARED_FLAGS \\$(CFLAGS)\"\n    fi\n    ;;\n   # osr5 or unixware7 with current or late autoconf\n  *sco3.2v5* | *unixware-5* | *sco-sysv5uw7*)\n     if test \"$GCC\" = yes\n     then\n       DYNAMIC_LINK_FLAGS=\"\"\n       ELF_CC=\"\\$(CC)\"\n       ELF_CFLAGS=\"\\$(CFLAGS) -fPIC\"\n       ELF_LINK=\"\\$(CC) \\$(LDFLAGS) -shared -Wl,-h,\\$(ELFLIB_MAJOR)\"\n       ELF_DEP_LIBS=\n       CC_SHARED_FLAGS=\"-G -fPIC\"\n       CC_SHARED=\"\\$(CC) $CC_SHARED_FLAGS \\$(CFLAGS)\"\n     else\n       DYNAMIC_LINK_FLAGS=\"\"\n       ELF_CC=\"\\$(CC)\"\n       ELF_CFLAGS=\"\\$(CFLAGS) -K pic\"\n       # ELF_LINK=\"ld -G -z text -h#\"\n       ELF_LINK=\"\\$(CC) \\$(LDFLAGS) -G -z text -h\\$(ELFLIB_MAJOR)\"\n       ELF_DEP_LIBS=\n       CC_SHARED_FLAGS=\"-G -K pic\"\n       CC_SHARED=\"\\$(CC) $CC_SHARED_FLAGS \\$(CFLAGS)\"\n     fi\n     ;;\n  *irix6.5* )\n     echo \"Note: ELF compiler for host_os=$host_os may not be correct\"\n     echo \"double-check: 'mode_t', 'pid_t' may be wrong!\"\n     if test \"$GCC\" = yes\n     then\n       # not tested\n       DYNAMIC_LINK_FLAGS=\"\"\n       ELF_CC=\"\\$(CC)\"\n       ELF_CFLAGS=\"\\$(CFLAGS) -fPIC\"\n       ELF_LINK=\"\\$(CC) \\$(LDFLAGS) -shared -Wl,-h,\\$(ELFLIB_MAJOR)\"\n       ELF_DEP_LIBS=\n       CC_SHARED_FLAGS=\"-shared -fPIC\"\n       CC_SHARED=\"\\$(CC) $CC_SHARED_FLAGS \\$(CFLAGS)\"\n     else\n       DYNAMIC_LINK_FLAGS=\"\"\n       ELF_CC=\"\\$(CC)\"\n       ELF_CFLAGS=\"\\$(CFLAGS)\"     # default anyhow\n       ELF_LINK=\"\\$(CC) \\$(LDFLAGS) -shared -o \\$(ELFLIB_MAJOR)\"\n       ELF_DEP_LIBS=\n       CC_SHARED_FLAGS=\"-shared\"\n       CC_SHARED=\"\\$(CC) $CC_SHARED_FLAGS \\$(CFLAGS)\"\n     fi\n     ;;\n  *darwin* )\n     DYNAMIC_LINK_FLAGS=\"\"\n     ELF_CC=\"\\$(CC)\"\n     ELF_CFLAGS=\"\\$(CFLAGS) -fno-common\"\n     ELF_LINK=\"\\$(CC) \\$(LDFLAGS) -dynamiclib -install_name \\$(install_lib_dir)/\\$(ELFLIB_MAJOR) -compatibility_version \\$(ELF_MAJOR_VERSION) -current_version \\$(ELF_MAJOR_VERSION).\\$(ELF_MINOR_VERSION)\"\n     ELF_DEP_LIBS=\"\\$(LDFLAGS) \\$(DL_LIB)\"\n     CC_SHARED_FLAGS=\"-bundle -flat_namespace -undefined suppress -fno-common\"\n     CC_SHARED=\"\\$(CC) $CC_SHARED_FLAGS \\$(CFLAGS)\"\n     ELFLIB=\"lib\\$(THIS_LIB).dylib\"\n     ELFLIB_MAJOR=\"lib\\$(THIS_LIB).\\$(ELF_MAJOR_VERSION).dylib\"\n     ELFLIB_MAJOR_MINOR=\"lib\\$(THIS_LIB).\\$(ELF_MAJOR_VERSION).\\$(ELF_MINOR_VERSION).dylib\"\n     ELFLIB_MAJOR_MINOR_MICRO=\"lib\\$(THIS_LIB).\\$(ELF_MAJOR_VERSION).\\$(ELF_MINOR_VERSION).\\$(ELF_MICRO_VERSION).dylib\"\n     ;;\n  *freebsd* )\n    ELF_CC=\"\\$(CC)\"\n    ELF_CFLAGS=\"\\$(CFLAGS) -fPIC\"\n    #if test \"X$PORTOBJFORMAT\" = \"Xelf\" ; then\n    #  ELF_LINK=\"\\$(CC) \\$(LDFLAGS) -shared -Wl,-soname,\\$(ELFLIB_MAJOR)\"\n    #else\n    #  ELF_LINK=\"ld -Bshareable -x\"\n    #fi\n    ELF_LINK=\"\\$(CC) \\$(LDFLAGS) -shared -Wl,-soname,\\$(ELFLIB_MAJOR)\"\n    ELF_DEP_LIBS=\"\\$(DL_LIB) -lm\"\n    CC_SHARED_FLAGS=\"-shared -fPIC\"\n    CC_SHARED=\"\\$(CC) $CC_SHARED_FLAGS \\$(CFLAGS)\"\n    ;;\n  *cygwin* )\n    DYNAMIC_LINK_FLAGS=\"\"\n    ELF_CC=\"\\$(CC)\"\n    SLANG_DLL_CFLAGS=\"-DSLANG_DLL=1\"\n    ELF_CFLAGS=\"\\$(CFLAGS) -DBUILD_DLL=1\"\n    DLL_IMPLIB_NAME=\"lib\\$(THIS_LIB)\\$(ELFLIB_MAJOR_VERSION).dll.a\"\n    #ELF_LINK=\"\\$(CC) \\$(LDFLAGS) -shared -Wl,-O1 -Wl,--version-script,\\$(VERSION_SCRIPT) -Wl,-soname,\\$(ELFLIB_MAJOR) -Wl,--out-implib=\\$(DLL_IMPLIB_NAME) -Wl,-export-all-symbols -Wl,-enable-auto-import\"\n    ELF_LINK=\"\\$(CC) \\$(LDFLAGS) -shared -Wl,-O1 -Wl,--version-script,\\$(VERSION_SCRIPT) -Wl,-soname,\\$(ELFLIB_MAJOR) -Wl,--out-implib=\\$(DLL_IMPLIB_NAME)\"\n    ELF_DEP_LIBS=\"\\$(DL_LIB) -lm\"\n    CC_SHARED_FLAGS=\"-shared -DSLANG_DLL=1\"\n    CC_SHARED=\"\\$(CC) $CC_SHARED_FLAGS \\$(CFLAGS)\"\n    dnl# CYGWIN prohibits undefined symbols when linking shared libs\n    SLANG_LIB_FOR_MODULES=\"-L\\$(ELFDIR) -lslang\"\n    INSTALL_MODULE=\"\\$(INSTALL)\"\n    INSTALL_ELFLIB_TARGET=\"install-elf-cygwin\"\n    ELFLIB=\"lib\\$(THIS_LIB).dll\"\n    ELFLIB_MAJOR=\"cyg\\$(THIS_LIB)-\\$(ELF_MAJOR_VERSION).dll\"\n    ELFLIB_MAJOR_MINOR=\"cyg\\$(THIS_LIB)-\\$(ELF_MAJOR_VERSION)_\\$(ELF_MINOR_VERSION).dll\"\n    ELFLIB_MAJOR_MINOR_MICRO=\"cyg\\$(THIS_LIB)-\\$(ELF_MAJOR_VERSION)_\\$(ELF_MINOR_VERSION)_\\$(ELF_MICRO_VERSION).dll\"\n    ELFLIB_BUILD_NAME=\"\\$(ELFLIB_MAJOR)\"\n    ;;\n  *haiku* )\n    M_LIB=\"\"\n    DYNAMIC_LINK_FLAGS=\"-Wl,-export-dynamic\"\n    ELF_CC=\"\\$(CC)\"\n    ELF_CFLAGS=\"\\$(CFLAGS) -fPIC\"\n    ELF_LINK=\"\\$(CC) \\$(LDFLAGS) -shared -Wl,-O1 -Wl,--version-script,\\$(VERSION_SCRIPT) -Wl,-soname,\\$(ELFLIB_MAJOR)\"\n    ELF_DEP_LIBS=\"\\$(DL_LIB)\"\n    CC_SHARED_FLAGS=\"-shared -fPIC\"\n    CC_SHARED=\"\\$(CC) $CC_SHARED_FLAGS \\$(CFLAGS)\"\n    ;;\n  * )\n    echo \"Note: ELF compiler for host_os=$host_os may be wrong\"\n    ELF_CC=\"\\$(CC)\"\n    ELF_CFLAGS=\"\\$(CFLAGS) -fPIC\"\n    ELF_LINK=\"\\$(CC) \\$(LDFLAGS) -shared\"\n    ELF_DEP_LIBS=\"\\$(DL_LIB) -lm -lc\"\n    CC_SHARED_FLAGS=\"-shared -fPIC\"\n    CC_SHARED=\"\\$(CC) $CC_SHARED_FLAGS \\$(CFLAGS)\"\nesac\n\nAC_SUBST(ELF_CC)\nAC_SUBST(ELF_CFLAGS)\nAC_SUBST(ELF_LINK)\nAC_SUBST(ELF_LINK_CMD)\nAC_SUBST(ELF_DEP_LIBS)\nAC_SUBST(DYNAMIC_LINK_FLAGS)\nAC_SUBST(CC_SHARED_FLAGS)\nAC_SUBST(CC_SHARED)\nAC_SUBST(ELFLIB)\nAC_SUBST(ELFLIB_MAJOR)\nAC_SUBST(ELFLIB_MAJOR_MINOR)\nAC_SUBST(ELFLIB_MAJOR_MINOR_MICRO)\nAC_SUBST(SLANG_LIB_FOR_MODULES)\nAC_SUBST(DLL_IMPLIB_NAME)\nAC_SUBST(INSTALL_MODULE)\nAC_SUBST(INSTALL_ELFLIB_TARGET)\nAC_SUBST(ELFLIB_BUILD_NAME)\nAC_SUBST(SLANG_DLL_CFLAGS)\nAC_SUBST(M_LIB)\n])\n\ndnl#}}}\n\nAC_DEFUN([JD_F77_COMPILER], dnl#{{{\n[\ncase \"$host_os\" in\n *linux* )\n   F77=\"g77\"\n   F77_LIBS=\"-lg2c\"\n ;;\n *solaris*)\n   F77=f77\n   #F77_LIBS=\"-lF77 -lM77 -L/opt/SUNWspro/SC4.0/lib -lsunmath\"\n   F77_LIBS=\"-lF77 -lM77 -lsunmath\"\n   ;;\n *)\n   echo \"\"\n   echo \"WARNING: Assuming f77 as your FORTRAN compiler\"\n   echo \"\"\n   F77=f77\n   F77_LIBS=\"\"\nesac\nAC_SUBST(F77)\nAC_SUBST(F77_LIBS)\n])\n\ndnl#}}}\n\ndnl# This macro process the --with-xxx, --with-xxxinc, and --with-xxxlib\ndnl# command line arguments and returns the values as shell variables\ndnl# jd_xxx_include_dir and jd_xxx_library_dir.  It does not perform any\ndnl# substitutions, nor check for the existence of the supplied values.\nAC_DEFUN([JD_WITH_LIBRARY_PATHS], dnl#{{{\n[\n JD_UPPERCASE($1,JD_ARG1)\n jd_$1_include_dir=\"\"\n jd_$1_library_dir=\"\"\n if test X\"$jd_with_$1_library\" = X\n then\n   jd_with_$1_library=\"\"\n fi\n\n AC_ARG_WITH($1,\n  [  --with-$1=DIR      Use DIR/lib and DIR/include for $1],\n  [jd_with_$1_arg=$withval], [jd_with_$1_arg=unspecified])\n\n case \"x$jd_with_$1_arg\" in\n   xno)\n     jd_with_$1_library=\"no\"\n    ;;\n   x)\n    dnl# AC_MSG_ERROR(--with-$1 requires a value-- try yes or no)\n    jd_with_$1_library=\"yes\"\n    ;;\n   xunspecified)\n    ;;\n   xyes)\n    jd_with_$1_library=\"yes\"\n    ;;\n   *)\n    jd_with_$1_library=\"yes\"\n    jd_$1_include_dir=\"$jd_with_$1_arg\"/include\n    jd_$1_library_dir=\"$jd_with_$1_arg\"/lib\n    ;;\n esac\n\n AC_ARG_WITH($1lib,\n  [  --with-$1lib=DIR   $1 library in DIR],\n  [jd_with_$1lib_arg=$withval], [jd_with_$1lib_arg=unspecified])\n case \"x$jd_with_$1lib_arg\" in\n   xunspecified)\n    ;;\n   xno)\n    ;;\n   x)\n    AC_MSG_ERROR(--with-$1lib requres a value)\n    ;;\n   *)\n    jd_with_$1_library=\"yes\"\n    jd_$1_library_dir=\"$jd_with_$1lib_arg\"\n    ;;\n esac\n\n AC_ARG_WITH($1inc,\n  [  --with-$1inc=DIR   $1 include files in DIR],\n  [jd_with_$1inc_arg=$withval], [jd_with_$1inc_arg=unspecified])\n case \"x$jd_with_$1inc_arg\" in\n   x)\n     AC_MSG_ERROR(--with-$1inc requres a value)\n     ;;\n   xunspecified)\n     ;;\n   xno)\n     ;;\n   *)\n    jd_with_$1_library=\"yes\"\n    jd_$1_include_dir=\"$jd_with_$1inc_arg\"\n   ;;\n esac\n])\ndnl#}}}\n\ndnl# This function checks for the existence of the specified library $1 with\ndnl# header file $2.  If the library exists, then the shell variables will\ndnl# be created:\ndnl#  jd_with_$1_library=yes/no,\ndnl#  jd_$1_inc_file\ndnl#  jd_$1_include_dir\ndnl#  jd_$1_library_dir\ndnl# If $3 is present, then also look in $3/include+$3/lib\nAC_DEFUN([JD_CHECK_FOR_LIBRARY], dnl#{{{\n[\n  AC_REQUIRE([JD_EXPAND_PREFIX])dnl\n  AC_REQUIRE([JD_GET_SYS_INCLIBS])dnl\n  dnl JD_UPPERCASE($1,JD_ARG1)\n  JD_WITH_LIBRARY_PATHS($1)\n  AC_MSG_CHECKING(for the $1 library and header files $2)\n  if test X\"$jd_with_$1_library\" != Xno\n  then\n    jd_$1_inc_file=$2\n    dnl# jd_with_$1_library=\"yes\"\n\n    if test \"X$jd_$1_inc_file\" = \"X\"\n    then\n       jd_$1_inc_file=$1.h\n    fi\n\n    if test X\"$jd_$1_include_dir\" = X\n    then\n      inc_and_lib_dirs=\"\\\n         $jd_prefix_incdir,$jd_prefix_libdir \\\n\t /usr/local/$1/include,/usr/local/$1/lib \\\n\t /usr/local/include/$1,/usr/local/lib \\\n\t /usr/local/include,/usr/local/lib \\\n\t $JD_SYS_INCLIBS \\\n\t /usr/include/$1,/usr/lib \\\n\t /usr/$1/include,/usr/$1/lib \\\n\t /usr/include,/usr/lib \\\n\t /opt/include/$1,/opt/lib \\\n\t /opt/$1/include,/opt/$1/lib \\\n\t /opt/include,/opt/lib\"\n\n      if test X$3 != X\n      then\n        inc_and_lib_dirs=\"$3/include,$3/lib $inc_and_lib_dirs\"\n      fi\n\n      case \"$host_os\" in\n         *darwin* )\n\t   exts=\"dylib so a\"\n\t   ;;\n\t *cygwin* )\n\t   exts=\"dll.a so a\"\n\t   ;;\n\t * )\n\t   exts=\"so a\"\n      esac\n\n      xincfile=\"$jd_$1_inc_file\"\n      xlibfile=\"lib$1\"\n      jd_with_$1_library=\"no\"\n\n      for include_and_lib in $inc_and_lib_dirs\n      do\n        # Yuk.  Is there a better way to set these variables??\n        xincdir=`echo $include_and_lib | tr ',' ' ' | awk '{print [$]1}'`\n\txlibdir=`echo $include_and_lib | tr ',' ' ' | awk '{print [$]2}'`\n\tfound=0\n\tif test -r $xincdir/$xincfile\n\tthen\n\t  for E in $exts\n\t  do\n\t    if test -r \"$xlibdir/$xlibfile.$E\"\n\t    then\n\t      jd_$1_include_dir=\"$xincdir\"\n\t      jd_$1_library_dir=\"$xlibdir\"\n\t      jd_with_$1_library=\"yes\"\n\t      found=1\n\t      break\n\t    fi\n\t  done\n\tfi\n\tif test $found -eq 1\n\tthen\n\t  break\n\tfi\n      done\n    fi\n  fi\n\n  if test X\"$jd_$1_include_dir\" != X -a X\"$jd_$1_library_dir\" != X\n  then\n    AC_MSG_RESULT(yes: $jd_$1_library_dir and $jd_$1_include_dir)\n    jd_with_$1_library=\"yes\"\n    dnl#  Avoid using /usr/lib and /usr/include because of problems with\n    dnl#  gcc on some solaris systems.\n    JD_ARG1[]_LIB=-L$jd_$1_library_dir\n    JD_ARG1[]_LIB_DIR=$jd_$1_library_dir\n    if test \"X$jd_$1_library_dir\" = \"X/usr/lib\" -o \"X$jd_$1_include_dir\" = \"X/usr/include\"\n    then\n      JD_ARG1[]_LIB=\"\"\n    else\n      JD_SET_RPATH($jd_$1_library_dir)\n    fi\n\n    JD_ARG1[]_INC=-I$jd_$1_include_dir\n    JD_ARG1[]_INC_DIR=$jd_$1_include_dir\n    if test \"X$jd_$1_include_dir\" = \"X/usr/include\"\n    then\n      JD_ARG1[]_INC=\"\"\n    fi\n  else\n    AC_MSG_RESULT(no)\n    jd_with_$1_library=\"no\"\n    JD_ARG1[]_INC=\"\"\n    JD_ARG1[]_LIB=\"\"\n    JD_ARG1[]_INC_DIR=\"\"\n    JD_ARG1[]_LIB_DIR=\"\"\n  fi\n  AC_SUBST(JD_ARG1[]_LIB)\n  AC_SUBST(JD_ARG1[]_INC)\n  AC_SUBST(JD_ARG1[]_LIB_DIR)\n  AC_SUBST(JD_ARG1[]_INC_DIR)\n])\ndnl#}}}\n\nAC_DEFUN([JD_WITH_LIBRARY], dnl#{{{\n[\n  JD_CHECK_FOR_LIBRARY($1, $2, $3)\n  if test \"$jd_with_$1_library\" = \"no\"\n  then\n    AC_MSG_ERROR(unable to find the $1 library and header file $jd_$1_inc_file)\n  fi\n])\ndnl#}}}\n\nAC_DEFUN([JD_SLANG_VERSION], dnl#{{{\n[\n slang_h=$jd_slang_include_dir/slang.h\n AC_MSG_CHECKING(SLANG_VERSION in $slang_h)\nslang_version=`grep \"^#define  *SLANG_VERSION \" $slang_h |\n               awk '{ print [$]3 }'`\nslang_major_version=`echo $slang_version |\n awk '{ print int([$]1/10000) }'`\nslang_minor_version=`echo $slang_version $slang_major_version |\n awk '{ print int(([$]1 - [$]2*10000)/100) }'`\nslang_patchlevel_version=`echo $slang_version $slang_major_version $slang_minor_version |\n awk '{ print ([$]1 - [$]2*10000 - [$]3*100) }'`\n\nAC_MSG_RESULT($slang_major_version.$slang_minor_version.$slang_patchlevel_version)\nAC_SUBST(slang_version)\nAC_SUBST(slang_major_version)\nAC_SUBST(slang_minor_version)\nAC_SUBST(slang_patchlevel_version)\n])\n#}}}\n\nAC_DEFUN([JD_SLANG_MODULE_INSTALL_DIR], dnl#{{{\n[\n  AC_REQUIRE([JD_SLANG_VERSION])\n  if test \"X$slang_major_version\" = \"X1\"\n  then\n    MODULE_INSTALL_DIR=\"$libdir/slang/modules\"\n  else\n    MODULE_INSTALL_DIR=\"$libdir/slang/v$slang_major_version/modules\"\n  fi\n  SL_FILES_INSTALL_DIR=$datadir/slsh/local-packages\n  AC_SUBST(MODULE_INSTALL_DIR)\n  AC_SUBST(SL_FILES_INSTALL_DIR)\n])\n#}}}\n\nAC_DEFUN([JD_CHECK_LONG_LONG], dnl#{{{\n[\n  AC_CHECK_TYPES(long long)\n  AC_CHECK_SIZEOF(long long)\n])\ndnl#}}}\n\nAC_DEFUN([JD_LARGE_FILE_SUPPORTXXX], dnl#{{{\n[\n  AC_REQUIRE([JD_CHECK_LONG_LONG])\n  AC_MSG_CHECKING(whether to explicitly activate long file support)\n  AC_DEFINE(_LARGEFILE_SOURCE, 1)\n  AC_DEFINE(_FILE_OFFSET_BITS, 64)\n  jd_large_file_support=no\n  if test X$ac_cv_type_long_long = Xyes\n  then\n    if test $ac_cv_sizeof_long_long -ge 8\n    then\n      jd_large_file_support=yes\n    fi\n  fi\n\n  if test $jd_large_file_support = yes\n  then\n    AC_DEFINE(HAVE_LARGEFILE_SUPPORT, 1)\n    AC_MSG_RESULT(yes)\n  else\n    AC_MSG_RESULT(no)\n  fi\n])\ndnl#}}}\n\nAC_DEFUN([JD_LARGE_FILE_SUPPORT], dnl#{{{\n[\n  AC_SYS_LARGEFILE\n  AC_FUNC_FSEEKO\n  AC_TYPE_OFF_T\n  AC_CHECK_SIZEOF(off_t)\n])\n#}}}\n\nAC_DEFUN([JD_HAVE_ISINF], dnl#{{{\n[\n  AC_MSG_CHECKING([for isinf])\n  AC_LINK_IFELSE([AC_LANG_PROGRAM( [[#include <math.h>]], [[isinf (0.0);]])],\n                 [AC_MSG_RESULT([yes])\n                  AC_DEFINE(HAVE_ISINF, 1)])\n])\n#}}}\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-slang-2.3.1-ckai3zgicxvtap5jn7nixag4rkbyrsm2/spack-src/changes.txt",
        "/tmp/vanessa/spack-stage/spack-stage-slang-2.3.1-ckai3zgicxvtap5jn7nixag4rkbyrsm2/spack-src/utf8/testfiles/UTF-8-test.txt",
        "/tmp/vanessa/spack-stage/spack-stage-slang-2.3.1-ckai3zgicxvtap5jn7nixag4rkbyrsm2/spack-src/src/slutf8.c",
        "/tmp/vanessa/spack-stage/spack-stage-slang-2.3.1-ckai3zgicxvtap5jn7nixag4rkbyrsm2/spack-src/src/sltoken.c",
        "/tmp/vanessa/spack-stage/spack-stage-slang-2.3.1-ckai3zgicxvtap5jn7nixag4rkbyrsm2/spack-src/src/mkfiles/mkmake16.exe",
        "/tmp/vanessa/spack-stage/spack-stage-slang-2.3.1-ckai3zgicxvtap5jn7nixag4rkbyrsm2/spack-src/src/mkfiles/mkmake.exe",
        "/tmp/vanessa/spack-stage/spack-stage-slang-2.3.1-ckai3zgicxvtap5jn7nixag4rkbyrsm2/spack-src/slsh/mkfiles/slsh.ico",
        "/tmp/vanessa/spack-stage/spack-stage-slang-2.3.1-ckai3zgicxvtap5jn7nixag4rkbyrsm2/spack-src/slsh/mkfiles/sldoc.ico"
    ],
    "total_files": 525
}