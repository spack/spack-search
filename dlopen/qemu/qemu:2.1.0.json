{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/dtc/tests/asm_tree_dump.c": "/*\n * libfdt - Flat Device Tree manipulation\n *\tTests if an asm tree built into a shared object matches a given dtb\n * Copyright (C) 2008 David Gibson, IBM Corporation.\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public License\n * as published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA\n */\n\n#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n#include <stdint.h>\n#include <errno.h>\n\n#include <dlfcn.h>\n\n#include <fdt.h>\n#include <libfdt.h>\n\n#include \"tests.h\"\n#include \"testdata.h\"\n\nint main(int argc, char *argv[])\n{\n\tvoid *sohandle;\n\tvoid *fdt;\n\tint err;\n\n\ttest_init(argc, argv);\n\tif (argc != 3)\n\t\tCONFIG(\"Usage: %s <so file> <dtb file>\", argv[0]);\n\n\tsohandle = dlopen(argv[1], RTLD_NOW);\n\tif (!sohandle)\n\t\tFAIL(\"Couldn't dlopen() %s\", argv[1]);\n\n\tfdt = dlsym(sohandle, \"dt_blob_start\");\n\tif (!fdt)\n\t\tFAIL(\"Couldn't locate \\\"dt_blob_start\\\" symbol in %s\",\n\t\t     argv[1]);\n\n\terr = fdt_check_header(fdt);\n\tif (err != 0)\n\t\tFAIL(\"%s contains invalid tree: %s\", argv[1],\n\t\t     fdt_strerror(err));\n\n\tsave_blob(argv[2], fdt);\n\n\tPASS();\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/dtc/tests/value-labels.c": "/*\n * libfdt - Flat Device Tree manipulation\n *\tTest labels within values\n * Copyright (C) 2008 David Gibson, IBM Corporation.\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public License\n * as published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA\n */\n\n#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n#include <stdint.h>\n#include <errno.h>\n\n#include <dlfcn.h>\n\n#include <fdt.h>\n#include <libfdt.h>\n\n#include \"tests.h\"\n#include \"testdata.h\"\n\nstruct val_label {\n\tconst char *labelname;\n\tint propoff;\n};\n\nstruct val_label labels1[] = {\n\t{ \"start1\", 0 },\n\t{ \"mid1\", 2 },\n\t{ \"end1\", -1 },\n};\n\nstruct val_label labels2[] = {\n\t{ \"start2\", 0 },\n\t{ \"innerstart2\", 0 },\n\t{ \"innermid2\", 4 },\n\t{ \"innerend2\", -1 },\n\t{ \"end2\", -1 },\n};\n\nstruct val_label labels3[] = {\n\t{ \"start3\", 0 },\n\t{ \"innerstart3\", 0 },\n\t{ \"innermid3\", 1 },\n\t{ \"innerend3\", -1 },\n\t{ \"end3\", -1 },\n};\n\nstatic void check_prop_labels(void *sohandle, void *fdt, const char *name,\n\t\t\t      const struct val_label* labels, int n)\n{\n\tconst struct fdt_property *prop;\n\tconst char *p;\n\tint len;\n\tint i;\n\n\tprop = fdt_get_property(fdt, 0, name, &len);\n\tif (!prop)\n\t\tFAIL(\"Couldn't locate property \\\"%s\\\"\", name);\n\n\tp = dlsym(sohandle, name);\n\tif (!p)\n\t\tFAIL(\"Couldn't locate label symbol \\\"%s\\\"\", name);\n\n\tif (p != (const char *)prop)\n\t\tFAIL(\"Label \\\"%s\\\" does not point to correct property\", name);\n\n\tfor (i = 0; i < n; i++) {\n\t\tint off = labels[i].propoff;\n\n\t\tif (off == -1)\n\t\t\toff = len;\n\n\t\tp = dlsym(sohandle, labels[i].labelname);\n\t\tif (!p)\n\t\t\tFAIL(\"Couldn't locate label symbol \\\"%s\\\"\", name);\n\n\t\tif ((p - prop->data) != off)\n\t\t\tFAIL(\"Label \\\"%s\\\" points to offset %ld instead of %d\"\n\t\t\t     \"in property \\\"%s\\\"\", labels[i].labelname,\n\t\t\t     (long)(p - prop->data), off, name);\n\t}\n}\n\nint main(int argc, char *argv[])\n{\n\tvoid *sohandle;\n\tvoid *fdt;\n\tint err;\n\n\ttest_init(argc, argv);\n\tif (argc != 2)\n\t\tCONFIG(\"Usage: %s <so file>\", argv[0]);\n\n\tsohandle = dlopen(argv[1], RTLD_NOW);\n\tif (!sohandle)\n\t\tFAIL(\"Couldn't dlopen() %s\", argv[1]);\n\n\tfdt = dlsym(sohandle, \"dt_blob_start\");\n\tif (!fdt)\n\t\tFAIL(\"Couldn't locate \\\"dt_blob_start\\\" symbol in %s\",\n\t\t     argv[1]);\n\n\terr = fdt_check_header(fdt);\n\tif (err != 0)\n\t\tFAIL(\"%s contains invalid tree: %s\", argv[1],\n\t\t     fdt_strerror(err));\n\n\n\tcheck_prop_labels(sohandle, fdt, \"prop1\", labels1, ARRAY_SIZE(labels1));\n\tcheck_prop_labels(sohandle, fdt, \"prop2\", labels2, ARRAY_SIZE(labels2));\n\tcheck_prop_labels(sohandle, fdt, \"prop3\", labels3, ARRAY_SIZE(labels3));\n\n\tPASS();\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/openbios/arch/unix/plugins.c": "/* tag: plugin interface for openbios forth kernel\n *\n * Copyright (C) 2003, 2004 Stefan Reinauer\n *\n * See the file \"COPYING\" for further information about\n * the copyright and warranty status of this work.\n */\n\n#include \"sysinclude.h\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <dlfcn.h>\n\n#include \"unix/plugins.h\"\n\nunsigned char *plugindir = \"/usr/share/OpenBIOS/plugins\";\n#define PLUGINDIR  plugindir\n#define PATHSIZE   256\n\n#define CONFIG_DEBUG_PLUGINS\n\ntypedef struct iorange iorange_t;\nstruct iorange {\n\tconst char *name;\n\tunsigned int start;\n\tunsigned int end;\n\tio_ops_t *ops;\n\tiorange_t *next;\n};\n\nstatic iorange_t *ioranges = NULL;\n\ntypedef struct plugin plugin_t;\nstruct plugin {\n\tconst char *name;\n\tplugin_t *next;\n};\n\nstatic plugin_t *plugins = NULL;\n\nio_ops_t *find_iorange(u32 reg)\n{\n\tiorange_t *range = ioranges;\n\twhile (range) {\n\t\tif (range->start <= reg && range->end >= reg)\n\t\t\treturn range->ops;\n\t\trange = range->next;\n\t}\n\treturn NULL;\n}\n\nint register_iorange(const char *name, io_ops_t * ops, unsigned int rstart,\n\t\t     unsigned int rend)\n{\n\tiorange_t *newrange;\n\n\t/* intersection check */\n\tnewrange = ioranges;\n\twhile (newrange) {\n\t\tint fail = 0;\n\t\t/* new section swallows old section */\n\t\tif (newrange->start >= rstart && newrange->end <= rend)\n\t\t\tfail = -1;\n\t\t/* new section start or end point are within range */\n\t\tif (newrange->start <= rstart && newrange->end >= rstart)\n\t\t\tfail = -1;\n\t\tif (newrange->start <= rend && newrange->end >= rend)\n\t\t\tfail = -1;\n\t\tif (fail) {\n\t\t\tprintf(\"Error: overlapping IO regions: %s and %s\\n\",\n\t\t\t\tnewrange->name, name);\n\t\t\treturn -1;\n\t\t}\n\t\tnewrange = newrange->next;\n\t}\n\n\tnewrange = malloc(sizeof(iorange_t));\n\n\tnewrange->name = name;\n\tnewrange->ops = ops;\n\tnewrange->start = rstart;\n\tnewrange->end = rend;\n\tnewrange->next = ioranges;\n\n\tioranges = newrange;\n\n\treturn 0;\n}\n\nint is_loaded(const char *plugin_name)\n{\n\tplugin_t *p = plugins;\n\twhile (p) {\n\t\tif (!strcmp(plugin_name, p->name))\n\t\t\treturn -1;\n\t\tp = p->next;\n\t}\n\treturn 0;\n}\n\nint load_plugin(const char *plugin_name)\n{\n\tvoid *handle;\n\tchar *error;\n\tchar path[PATHSIZE];\n\n\tint (*init_plugin) (void);\n\tchar **deps;\n\tchar **plugin_info;\n\tplugin_t *p;\n\n\tif (is_loaded(plugin_name)) {\n\t\tprintf(\"Plugin %s already loaded.\\n\", plugin_name);\n\t\treturn 0;\n\t}\n\n\tstrncpy(path, PLUGINDIR, PATHSIZE);\n\tstrncat(path, \"/plugin_\", PATHSIZE);\n\tstrncat(path, plugin_name, PATHSIZE);\n\tstrncat(path, \".so\", PATHSIZE);\n\n#if DEBUG\n\tprintf(\"Opening plugin %s\\n\", path);\n#endif\n\n\thandle = dlopen(path, RTLD_LAZY | RTLD_GLOBAL);\n\tif (!handle) {\n\t\terror = dlerror();\n\t\tprintf(\"Error: Could not open plugin \\\"%s\\\": %s\\n\",\n\t\t       plugin_name, error);\n\t\texit(1);\n\t}\n#ifdef CONFIG_DEBUG_PLUGINS\n\tplugin_info = dlsym(handle, \"plugin_author\");\n\tif ((error = dlerror()) == NULL)\n\t\tprintf(\"Plugin %s author:  %s\\n\", plugin_name, *plugin_info);\n\tplugin_info = dlsym(handle, \"plugin_license\");\n\tif ((error = dlerror()) == NULL)\n\t\tprintf(\"Plugin %s license: %s\\n\", plugin_name, *plugin_info);\n\tplugin_info = dlsym(handle, \"plugin_description\");\n\tif ((error = dlerror()) == NULL)\n\t\tprintf(\"Plugin %s descr.: %s\\n\", plugin_name, *plugin_info);\n#endif\n\tp = malloc(sizeof(plugin_t));\n\tp->next = plugins;\n\tp->name = plugin_name;\n\tplugins = p;\n\n\tdeps = dlsym(handle, \"plugin_deps\");\n\tif ((error = dlerror()) != NULL)\n\t\tdeps = NULL;\n\n\n\tstrncpy(path, \"plugin_\", PATHSIZE);\n\tstrncat(path, plugin_name, PATHSIZE);\n\tstrncat(path, \"_init\", PATHSIZE);\n\n\tinit_plugin = dlsym(handle, path);\n\tif ((error = dlerror()) != NULL) {\n\t\tprintf(\"error: %s\\n\", error);\n\t\texit(1);\n\t}\n\n\tif (deps) {\n\t\tint i = 0;\n\t\tchar *walk = deps[0];\n#ifdef CONFIG_DEBUG_PLUGINS\n\t\tprintf(\"\\nPlugin %s dependencies:\", plugin_name);\n#endif\n\t\twhile (walk) {\n\t\t\tprintf(\" %s\", walk);\n\t\t\tif (!is_loaded(walk)) {\n#ifdef CONFIG_DEBUG_PLUGINS\n\t\t\t\tprintf(\"(loading)\\n\");\n#endif\n\t\t\t\tload_plugin(walk);\n\t\t\t}\n#ifdef CONFIG_DEBUG_PLUGINS\n\t\t\telse {\n\t\t\t\tprintf(\"(loaded)\");\n\t\t\t}\n#endif\n\t\t\twalk = deps[++i];\n\t\t}\n\t}\n\n\tprintf(\"\\n\");\n#if DEBUG\n\tprintf(\"Initializing module:\\n\");\n#endif\n\n\treturn init_plugin();\n\n\t// We don't dlclose the handle here since\n\t// we want to keep our symbols for later use.\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/openbios/arch/unix/plugins/loader.c": "/* tag: openbios plugin loader\n *\n * Copyright (C) 2003 Stefan Reinauer\n *\n * See the file \"COPYING\" for further information about\n * the copyright and warranty status of this work.\n */\n\n/* This is a simple plugin loader. OpenBIOS duplicates some\n * of this code in kernel/arch/unix/plugins.c. This code is\n * here for reference and simple testing.\n */\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <dlfcn.h>\n#include <unistd.h>\t\t// sleep\n\n#include \"unix/plugins.h\"\n\n#define PLUGINDIR  \"/usr/share/OpenBIOS/plugins\"\n#define PATHSIZE   256\n\n#define DEBUG_PLUGINS\n\ntypedef struct iorange iorange_t;\nstruct iorange {\n\tconst char *name;\n\tunsigned int start;\n\tunsigned int end;\n\tio_ops_t *ops;\n\tiorange_t *next;\n};\n\niorange_t *ioranges = NULL;\n\ntypedef struct plugin plugin_t;\nstruct plugin {\n\tconst char *name;\n\tplugin_t *next;\n};\n\nplugin_t *plugins = NULL;\n\nint register_iorange(const char *name, io_ops_t * ops, unsigned int rstart,\n\t\t     unsigned int rend)\n{\n\tiorange_t *newrange;\n\n\t/* intersection check */\n\tnewrange = ioranges;\n\twhile (newrange) {\n\t\tint fail = 0;\n\t\t/* new section swallows old section */\n\t\tif (newrange->start >= rstart && newrange->end <= rend)\n\t\t\tfail = -1;\n\t\t/* new section start or end point are within range */\n\t\tif (newrange->start <= rstart && newrange->end >= rstart)\n\t\t\tfail = -1;\n\t\tif (newrange->start <= rend && newrange->end >= rend)\n\t\t\tfail = -1;\n\t\tif (fail) {\n\t\t\tprintf(\"Error: overlapping IO regions: %s and %s\\n\",\n\t\t\t     newrange->name, name);\n\t\t\treturn -1;\n\t\t}\n\t\tnewrange = newrange->next;\n\t}\n\n\tnewrange = malloc(sizeof(iorange_t));\n\n\tnewrange->name = name;\n\tnewrange->ops = ops;\n\tnewrange->start = rstart;\n\tnewrange->end = rend;\n\tnewrange->next = ioranges;\n\n\tioranges = newrange;\n\n\treturn 0;\n}\n\nint is_loaded(const char *plugin_name)\n{\n\tplugin_t *p = plugins;\n\twhile (p) {\n\t\tif (!strcmp(plugin_name, p->name))\n\t\t\treturn -1;\n\t\tp = p->next;\n\t}\n\treturn 0;\n}\n\nint load_plugin(const char *plugin_name)\n{\n\tvoid *handle;\n\tchar *error;\n\tchar path[PATHSIZE];\n\n\tint (*init_plugin) (void);\n\tchar **deps;\n\tchar **plugin_info;\n\tplugin_t *p;\n\n\tif (is_loaded(plugin_name)) {\n\t\tprintf(\"Plugin %s already loaded.\\n\", plugin_name);\n\t\treturn 0;\n\t}\n\n\tstrncpy(path, PLUGINDIR, PATHSIZE);\n\tstrncat(path, \"/plugin_\", PATHSIZE);\n\tstrncat(path, plugin_name, PATHSIZE);\n\tstrncat(path, \".so\", PATHSIZE);\n\n#if DEBUG\n\tprintf(\"Opening plugin %s\\n\", path);\n#endif\n\n\thandle = dlopen(path, RTLD_LAZY | RTLD_GLOBAL);\n\tif (!handle) {\n\t\terror = dlerror();\n\t\tprintf(\"Error: Could not open plugin \\\"%s\\\": %s\\n\",\n\t\t       plugin_name, error);\n\t\texit(1);\n\t}\n#ifdef DEBUG_PLUGINS\n\tplugin_info = dlsym(handle, \"plugin_author\");\n\tif ((error = dlerror()) == NULL)\n\t\tprintf(\"Plugin %s author:  %s\\n\", plugin_name, *plugin_info);\n\tplugin_info = dlsym(handle, \"plugin_license\");\n\tif ((error = dlerror()) == NULL)\n\t\tprintf(\"Plugin %s license: %s\\n\", plugin_name, *plugin_info);\n\tplugin_info = dlsym(handle, \"plugin_description\");\n\tif ((error = dlerror()) == NULL)\n\t\tprintf(\"Plugin %s descr.: %s\\n\", plugin_name, *plugin_info);\n#endif\n\tp = malloc(sizeof(plugin_t));\n\tp->next = plugins;\n\tp->name = plugin_name;\n\tplugins = p;\n\n\tdeps = dlsym(handle, \"plugin_deps\");\n\tif ((error = dlerror()) != NULL)\n\t\tdeps = NULL;\n\n\n\tstrncpy(path, \"plugin_\", PATHSIZE);\n\tstrncat(path, plugin_name, PATHSIZE);\n\tstrncat(path, \"_init\", PATHSIZE);\n\n\tinit_plugin = dlsym(handle, path);\n\tif ((error = dlerror()) != NULL) {\n\t\tprintf(\"error: %s\\n\", error);\n\t\texit(1);\n\t}\n\n\tif (deps) {\n\t\tint i = 0;\n\t\tchar *walk = deps[0];\n#ifdef DEBUG_PLUGINS\n\t\tprintf(\"\\nPlugin %s dependencies:\", plugin_name);\n#endif\n\t\twhile (walk) {\n\t\t\tprintf(\" %s\", walk);\n\t\t\tif (!is_loaded(walk)) {\n#ifdef DEBUG_PLUGINS\n\t\t\t\tprintf(\"(loading)\\n\");\n#endif\n\t\t\t\tload_plugin(walk);\n\t\t\t}\n#ifdef DEBUG_PLUGINS\n\t\t\telse {\n\t\t\t\tprintf(\"(loaded)\");\n\t\t\t}\n#endif\n\t\t\twalk = deps[++i];\n\t\t}\n\t}\n\n\tprintf(\"\\n\");\n#if DEBUG\n\tprintf(\"Initializing module:\\n\");\n#endif\n\n\treturn init_plugin();\n\n\t// We don't dlclose the handle here since\n\t// we want to keep our symbols for later use.\n}\n\nint main(void)\n{\n\tiorange_t *r;\n\n\t// load_plugin(\"kbd\");\n\t// load_plugin(\"pci\");\n\tload_plugin(\"qt\");\n\n\tprintf(\"\\nRegistered IO Ranges:\\n\");\n\tr = ioranges;\n\twhile (r) {\n\t\tprintf(\"  %s: %x-%x\\n\", r->name, r->start, r->end);\n\t\tr = r->next;\n\t}\n\n\tsleep(10);\n\treturn 0;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/openbios/Documentation/kernel/Changelog.stepan": "# tag: stepan's changelog for CVS\n\nMon Jul 14 02:16:49 CEST 2003\n - fix segv overrun while dumping dictionary in unix.c\n - implement first version of >number and $number\n - add stack diagram to digit\n - no newline after accept\n - new version of the interpreter\n - fix make run target\n\nMon Jul 14 20:15:40 CEST 2003\n - negate true value in prims \n - get rid of primitive word bounds. \n - get rid of some obsolete code.\n - implement io[cwl][@!]\n - reorganize [in|out][bwl]\n - start adding stack diagrams to primitives.\n \nMon Jul 14 23:57:46 CEST 2003\n - added some more stack diagrams in forth.h\n - move parse, parse-word, word to bootstrap.fs\n - include memory.fs from bootstrap.fs for above.\n\nWed Jul 16 22:57:31 CEST 2003\n - add include guards\n - add banner\n - fix primitives' dependencies\n\nSun Jul 20 03:27:40 CEST 2003\n - remove unneeded readcell\n - rename ' to ['] to meet specs\n\nSun Jul 20 14:08:43 CEST 2003\n - add rest of stack diagrams in forth.h\n - move here and here! to forth.h (from internal.h)\n - indent includes\n - merge system.h into forth.h\n - Change tag of forth.h (!) because the old one \n   did not meet the meaning of the code.\n - update comments in primitives.c\n\nSun Jul 27 01:53:18 CEST 2003\n - include great new do/?do/loop/+loop \n   implementation from Patrick.\n - include testsuite enhancement from Patrick\n - include trampoline from Patrick (fixes execute)\n\nSun Jul 27 21:11:50 CEST 2003\n - update x86 console code to become when using\n   multiboot (vga/keyboard).\n - fix exit properly\n - revert to old case..endcase code\n - fix >number and $number\n - add number parsing to interpreter\n - add simple stack checking to interpreter\n - add 2 testcases (exit and case2)\n\nMon Jul 28 14:49:31 CEST 2003\n - move 7.3.7 Flag constants up in bootstrap.fs\n - move 7.3.9.2.4 Miscellaneous dictionary down.\n - add reveal, recursive, recurse, environment? to 7.3.9.2.4\n - move (to) to bootstrap.fs\n \nMon Jul 28 17:08:58 CEST 2003\n - add stack overflow check to interpreter\n - check parse-word result in interpreter. \n - add ascii and char, add helper handle-lit\n\nTue Jul 29 09:20:18 CEST 2003\n - add s\" and .\"\n - add [char] and control\n - heavily move around words in bootstrap.fs \n   to get dependencies resolved.\n - fix skipws crash\n - rename query to refill\n - interpreter reads several words in a line now\n - interpreter stops now if error encountered in\n   currently parsed line.\n - add forth definitions of ( and \\\n - change c parser/interpreter to handle comments\n   correctly.\n - indent, clean up unix.c\n\nTue Jul 29 18:13:27 CEST 2003\n - add .(  (chapter 7.3.4.4)\n - add pack, -trailing (chapter 7.3.4.8)\n - add d#, h#, o# (chapter 7.3.5.2)\n - let first stack element start at 1 instead of 0\n   to have a 1 cell guard band.\n - set SA_NODEFER flag to signal handler to ensure\n   that it is entered recursively.\n\nTue Jul 29 19:06:18 CEST 2003\n - more simplification for unix.c\n - add ', ['], find\n - fix pack, count\n - add literal, compile, [compile], compile,\n - fix [\n\nWed Jul 30 01:24:24 CEST 2003\n - add >body, body>\n - add helpers: flags?, immediate?, compile-only?, header\n - add :, ;, constant, value, variable, buffer:\n - parse word's flags in interpreter to make colon \n   definitions work\n - add \"compiled\" acknowledge when interpreter is in compile mode\n\nWed Jul 30 07:27:58 CEST 2003\n - fix flags handling in interpreter\n - fix handle-text compile mode behaviour\n - add defer, struct, field\n - add behaviour, to\n - add $create, create, does> (missing c code DODOES)\n - add abort\n\nThu Jul 31 07:58:35 CEST 2003\n - fix DODOES cfa code\n - make 2@ and 2! colon definitions instead of primitives.\n - add word \"cell\" \n - add warning message as described in 7.3.9.1 if an already \n   existing word is created\n\nFri Aug  1 23:32:57 CEST 2003\n - fix s\" in C interpreter (compare case insensitive)\n - fix forth source dependencies\n - fix forth word sm/rem \n\nSat Aug  2 13:34:43 CEST 2003\n - add band guard around input buffer\n - make sure that \"header\" pads null bytes\n - define -1,0,1,2,3 early to safe dictionary space\n\nSat Aug  2 16:58:31 CEST 2003\n - use getopt/getopt_long for option parsing\n - add include path option -I to unix\n - don't create obsolete symlink in forth/Makefile\n - fix recurse\n - fix prim word /\n - implement postpone\n - fix 2!, ['] and '\n - implement evaluate/eval\n\nSun Aug  3 11:48:18 CEST 2003\n - implement \"bye\" to leave the engine\n - change initial word to \"initialize\" and\n   make quit restart the forth engine.\n - fix missing ; in u.\n - fix return value of find when handling an immediate\n - getting rid of primitives mod, /mod and /, replacing \n   them by floored variants as IEEE 1275-1994 says.\n - clean up primitives.\n   \nSun Aug  3 23:06:39 CEST 2003\n - fix >body, body>\n - make not a synonym for invert as described in IEEE 1275\n - todigit can now switch between capital and small letters via\n   value capital-hex?\n\nMon Aug  4 21:57:06 CEST 2003\n - indent unix.c\n - reimplement do, ?do, loop, +loop with prim helpers. It now\n   passes hayes' ans forth test suite.\n - adopt unix.c and bootstrap.fs to new (?)do..(+)loop\n - remove unneeded if around ?do..loop in \",\n - interpreter: clear input buffer before refilling it\n - serialize PC changes in dobranch and do?branch\n\nThu Aug  7 19:00:43 CEST 2003\n - add/change missing/incomplete copyright notices\n - implement \"\n\nSun Aug 10 19:52:20 CEST 2003\n - reimplement catch, through\n - implement abort\"\n - rephrase endcase\n - change interpreter to use exception words\n - implement forget\n - add dummy \"forth\"\n\nSun Aug 10 22:12:28 CEST 2003\n - fix \"spaces\"\n - create subdir util for types.sh and new bin2hex\n - enable forth.html again, running hayes test suite.\n - include dictionary in char array instead of elf section\n   when building an x86 \"full\" image\n - don't newline in accept.\n - fix \" compile mode behavior.\n - move throw/catch and use it with ' and [']\n - add :noname\n\nThu Aug 14 23:02:15 CEST 2003\n - fix \"field\"\n - implement second stage bootstrapping\n   NOTE: changes dictionary format!\n - drop initxt from dictionary, since we know \"last\" now.\n - output dictionary can be named on command line.\n - make segfault handler optional\n\nMon Sep  1 19:41:23 CEST 2003\n - move findword() et al to dict.c (needed by openbios.c due \n   to last dictionary change)\n - fix findword() return values and optimize it slightly.\n - indented some files.\n \nMon Sep  8 22:43:55 CEST 2003\n - add initial AMD64 support (cloned x86 target)\n - get vocabulary implementation working. maybe buggy, but operable\n - enable vocabulary support by default (vocabularies? set to true)\n - drop duplicate \"forth\"\n - fix some comments in forth files.\n \nSun Sep 28 14:26:41 CEST 2003\n - some documentation and comment fixes\n - fix parameter passing for io words.\n\nThu Oct  2 08:21:06 CEST 2003\n - clean up lit\n - inline some functions from internal.h (reduces size and execution \n   time)\n\nFri Oct  3 15:20:44 CEST 2003\n - make i and j primitives. This safes a lot of time in loops.\n   i.e. the following dummy loop executes 300% faster:\n   : fbar 1000 0 do 1000 0 do j drop i drop loop loop ;\n\nSat Oct 11 20:18:22 CEST 2003\n - include plugin interface for unix hosted version.\n - add plugin_pci and plugin_qt as examples.\n - add simple set of pci functions for testing the pci plugin\n - add state variable \"runforth\" to be changed by the qt plugin\n   on exit.\n\nSun Oct 12 14:57:54 CEST 2003\n - move internal.h and forth.h to kernel/\n - replace make by $(MAKE) in some places.\n\nTue Oct 14 01:06:39 CEST 2003\n - add (immediate) and (compile-only) \n\nWed Oct 15 00:52:49 CEST 2003\n - check whether dlopen() needs libdl.\n - include BSD compile fixes from oxygene\n - fix abort\"\n \nTue Oct 21 22:08:00 CEST 2003\n - fix forth.html dependencies\n - yet another indent orgy\n\nThu Oct 30 16:10:01 CET 2003\n - add \"call\" to execute native code functions\n - plugin_qt: fix framebuffer address on 64bit systems\n - plugin_pci: create position independent code.\n\nWed Nov  5 08:38:18 CET 2003\n - fix \"comp\" (from Samuel Rydh)\n - include instance support (from Samuel Rydh)\n\nSun Nov  9 15:53:33 CET 2003\n - some changes for \"see\"\n - apply more patches from Samuel.\n - smaller, better implementation of handle-text\n\nMon Nov 10 22:06:32 CET 2003\n - increase max dictionary size from 64k to 128k\n - add simple fcode to qt plugin\n - fix handle-text (move null-align up)\n\nTue Nov 11 22:53:27 CET 2003\n - rename ?key to key?.\n - clean up .s\n - add (cr\n\nTue Nov 17 22:42:54 CET 2003\n - enterforth rstack fix (from Samuel)\n - include latest version of qt interface \n   fcode driver\n - fix \"header\" (from Samuel)\n\nWed Nov 26 15:12:07 CET 2003\n - merge patches from Samuel:\n - add $buffer:\n - fill all of \"ib\", not only 80 characters\n - interpreted conditionals support\n - late initializers\n\nSun Nov 30 23:04:28 CET 2003\n - fix bug in enterforth (non-colon words would destroy PC)\n\nSat Dec 13 00:57:01 CET 2003\n - add initial ppc infrastructure\n - only search current wordlist in \"header\"\n - seperate unix host binary and bootstrap interpreter.\n\nSun Dec 14 18:13:29 CET 2003\n - add sys-debug word and use it to stop forth interpreter\n   during bootstrap if an error occurs.\n \nSat Mar 13 16:30:30 CET 2004\n - fix digit problem\n   \n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/tests/tcg/pi_10.com",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/tests/qemu-iotests/sample_images/iotest-version3.vmdk.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/tests/qemu-iotests/sample_images/iotest-dirtylog-10G-4M.vhdx.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/tests/qemu-iotests/sample_images/empty.bochs.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/tests/qemu-iotests/sample_images/test-disk2vhd.vhdx.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/tests/qemu-iotests/sample_images/iotest-dynamic-1G.vhdx.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/tests/qemu-iotests/sample_images/simple-pattern.cloop.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/tests/qemu-iotests/sample_images/fake.parallels.bz2",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/qga/vss-win32/qga-vss.tlb",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/ppc_rom.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/slof.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/bamboo.dtb",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/pxe-ne2k_pci.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/pxe-e1000.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/QEMU,cgthree.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/efi-rtl8139.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/efi-pcnet.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/pxe-rtl8139.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/bios.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/kvmvapic.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/qemu-icon.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/bios-256k.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/vgabios-cirrus.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/QEMU,tcx.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/spapr-rtas.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/petalogix-ml605.dtb",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/sgabios.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/pxe-eepro100.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/s390-ccw.img",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/qemu-nsis.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/vgabios.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/multiboot.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/efi-e1000.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/s390-zipl.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/efi-ne2k_pci.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/linuxboot.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/vgabios-vmware.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/acpi-dsdt.aml",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/q35-acpi-dsdt.aml",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/vgabios-qxl.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/qemu-nsis.ico",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/petalogix-s3adsp1800.dtb",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/efi-eepro100.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/pxe-virtio.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/vgabios-stdvga.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/efi-virtio.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/u-boot.e500",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/pc-bios/pxe-pcnet.rom",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/qemu-palcode/osf.h",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/qemu-palcode/uart.c",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/qemu-palcode/uart.h",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/ipxe/src/drivers/infiniband/MT25408_PRM.h",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/ipxe/src/drivers/bus/eisa.c",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/ipxe/src/drivers/net/smc9000.h",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/ipxe/src/drivers/net/smc9000.c",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/openbios/forth/device/romfont.bin",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/openbios/libopenbios/font_8x8.c",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/openbios/libopenbios/font_8x16.c",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/u-boot/include/video_font_data.h",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/u-boot/tools/logos/ronetix.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/u-boot/tools/logos/intercontrol.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/u-boot/tools/logos/siemens.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/u-boot/tools/logos/linux_logo_ttcontrol_palfin.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/u-boot/tools/logos/atmel.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/u-boot/tools/logos/denx.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/u-boot/tools/logos/wandboard.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/u-boot/tools/logos/esd.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/u-boot/tools/logos/linux_logo_ttcontrol.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/u-boot/tools/logos/syteco.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/u-boot/tools/logos/freescale.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/u-boot/tools/easylogo/linux_blackfin.tga",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/u-boot/tools/easylogo/linux_logo.tga",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/SLOF/FlashingSLOF.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/SLOF/lib/libipmi/libipmi.oco",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/SLOF/clients/takeover/takeover.oco",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/SLOF/board-js2x/rtas/ipmi_oem.oco",
        "/tmp/vanessa/spack-stage/spack-stage-qemu-2.1.0-oa72plslq3docv62xgh2sma56hyihmp3/spack-src/roms/SLOF/board-js2x/rtas/i2c_bmc.oco"
    ],
    "total_files": 13529
}