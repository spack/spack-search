{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/tests/valgrind-osx-10.8.txt": "{\n   mem 0\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN13dyldbootstrap5startEPK12macho_headeriPPKclS2_Pm\n}\n{\n   mem 1\n   Memcheck:Leak\n   fun:malloc\n   ...\n   obj:/bin/sh\n}\n{\n   mem 2\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 3\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 4\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 5\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN13dyldbootstrap5startEPK12macho_headeriPPKclS2_Pm\n}\n{\n   mem 6\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 7\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 8\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 9\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 10\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 11\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 12\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 13\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN4dyldL18notifyBatchPartialE17dyld_image_statesbPFPKcS0_jPK15dyld_image_infoE\n}\n{\n   mem 14\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 15\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 16\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 17\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 18\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n{\n   mem 19\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n{\n   mem 20\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN13dyldbootstrap5startEPK12macho_headeriPPKclS2_Pm\n}\n{\n   mem 21\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 22\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 23\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 24\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN13dyldbootstrap5startEPK12macho_headeriPPKclS2_Pm\n}\n{\n   mem 25\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 26\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 27\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 28\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 29\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 30\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 31\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 32\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN4dyldL18notifyBatchPartialE17dyld_image_statesbPFPKcS0_jPK15dyld_image_infoE\n}\n{\n   mem 33\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 34\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 35\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 36\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 37\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n{\n   mem 38\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n\n{\n   mem 39\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN13dyldbootstrap5startEPK12macho_headeriPPKclS2_Pm\n}\n{\n   mem 40\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 41\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 42\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 43\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:(below main)\n}\n{\n   mem 44\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN13dyldbootstrap5startEPK12macho_headeriPPKclS2_Pm\n}\n{\n   mem 45\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 46\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 47\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 48\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 49\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 50\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 51\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 52\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN4dyldL18notifyBatchPartialE17dyld_image_statesbPFPKcS0_jPK15dyld_image_infoE\n}\n{\n   mem 53\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 54\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 55\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 56\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 57\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n{\n   mem 58\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n\n{\n   mem 59\n   Memcheck:Leak\n   fun:malloc\n   ...\n   obj:/bin/sh\n}\n{\n   mem 60\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN13dyldbootstrap5startEPK12macho_headeriPPKclS2_Pm\n}\n{\n   mem 61\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 62\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 63\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 64\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN13dyldbootstrap5startEPK12macho_headeriPPKclS2_Pm\n}\n{\n   mem 65\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 66\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 67\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 68\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 69\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 70\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 71\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 72\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN4dyldL18notifyBatchPartialE17dyld_image_statesbPFPKcS0_jPK15dyld_image_infoE\n}\n{\n   mem 73\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 74\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 75\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 76\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 77\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n{\n   mem 78\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n{\n   mem 79\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN4dyld36registerImageStateBatchChangeHandlerE17dyld_image_statesPFPKcS0_jPK15dyld_image_infoE\n}\n{\n   mem 80\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 81\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 82\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 83\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 84\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 85\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN4dyldL18notifyBatchPartialE17dyld_image_statesbPFPKcS0_jPK15dyld_image_infoE\n}\n{\n   mem 86\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 87\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n{\n   mem 88\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 89\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 90\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 91\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN13dyldbootstrap5startEPK12macho_headeriPPKclS2_Pm\n}\n{\n   mem 92\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 93\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 94\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 95\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN13dyldbootstrap5startEPK12macho_headeriPPKclS2_Pm\n}\n{\n   mem 96\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 97\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 98\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 99\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 100\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 101\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 102\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 103\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN4dyldL18notifyBatchPartialE17dyld_image_statesbPFPKcS0_jPK15dyld_image_infoE\n}\n{\n   mem 104\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 105\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 106\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 107\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 108\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n{\n   mem 109\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n{\n   mem 110\n   Memcheck:Cond\n   fun:fts_close$INODE64\n   ...\n   fun:(below main)\n}\n{\n   mem 111\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN13dyldbootstrap5startEPK12macho_headeriPPKclS2_Pm\n}\n{\n   mem 112\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN4dyld36registerImageStateBatchChangeHandlerE17dyld_image_statesPFPKcS0_jPK15dyld_image_infoE\n}\n{\n   mem 113\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 114\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 115\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 116\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 117\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN13dyldbootstrap5startEPK12macho_headeriPPKclS2_Pm\n}\n{\n   mem 118\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 119\n   Memcheck:Leak\n   fun:calloc\n   ...\n   fun:(below main)\n}\n{\n   mem 120\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 121\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 122\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 123\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 124\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 125\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN4dyldL18notifyBatchPartialE17dyld_image_statesbPFPKcS0_jPK15dyld_image_infoE\n}\n{\n   mem 126\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 127\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:(below main)\n}\n{\n   mem 128\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 129\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 130\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 131\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n{\n   mem 132\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n{\n   mem 133\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:(below main)\n}\n{\n   mem 134\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN4dyld36registerImageStateBatchChangeHandlerE17dyld_image_statesPFPKcS0_jPK15dyld_image_infoE\n}\n{\n   mem 135\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 136\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 137\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 138\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 139\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 140\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN4dyldL18notifyBatchPartialE17dyld_image_statesbPFPKcS0_jPK15dyld_image_infoE\n}\n{\n   mem 141\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 142\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n{\n   mem 143\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 144\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 145\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 146\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN13dyldbootstrap5startEPK12macho_headeriPPKclS2_Pm\n}\n{\n   mem 147\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 148\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 149\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 150\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN13dyldbootstrap5startEPK12macho_headeriPPKclS2_Pm\n}\n{\n   mem 151\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 152\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 153\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 154\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 155\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 156\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 157\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 158\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN4dyldL18notifyBatchPartialE17dyld_image_statesbPFPKcS0_jPK15dyld_image_infoE\n}\n{\n   mem 159\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 160\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 161\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 162\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 163\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n{\n   mem 164\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n\n{\n   mem 165\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN13dyldbootstrap5startEPK12macho_headeriPPKclS2_Pm\n}\n{\n   mem 166\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 167\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 168\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 169\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN13dyldbootstrap5startEPK12macho_headeriPPKclS2_Pm\n}\n{\n   mem 170\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 171\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 172\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 173\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 174\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 175\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 176\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 177\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN4dyldL18notifyBatchPartialE17dyld_image_statesbPFPKcS0_jPK15dyld_image_infoE\n}\n{\n   mem 178\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 179\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 180\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 181\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 182\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n{\n   mem 183\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n\n{\n   mem 184\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN13dyldbootstrap5startEPK12macho_headeriPPKclS2_Pm\n}\n{\n   mem 185\n   Memcheck:Leak\n   fun:malloc\n   ...\n   obj:/bin/sh\n}\n{\n   mem 186\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 187\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 188\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 189\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN13dyldbootstrap5startEPK12macho_headeriPPKclS2_Pm\n}\n{\n   mem 190\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 191\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 192\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 193\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 194\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 195\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 196\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 197\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN4dyldL18notifyBatchPartialE17dyld_image_statesbPFPKcS0_jPK15dyld_image_infoE\n}\n{\n   mem 198\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 199\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 200\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 201\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 202\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n{\n   mem 203\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n{\n   mem 204\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN4dyld36registerImageStateBatchChangeHandlerE17dyld_image_statesPFPKcS0_jPK15dyld_image_infoE\n}\n{\n   mem 205\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 206\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 207\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 208\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 209\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 210\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN4dyldL18notifyBatchPartialE17dyld_image_statesbPFPKcS0_jPK15dyld_image_infoE\n}\n{\n   mem 211\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 212\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n{\n   mem 213\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 214\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 215\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 216\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN13dyldbootstrap5startEPK12macho_headeriPPKclS2_Pm\n}\n{\n   mem 217\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 218\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 219\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 220\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN13dyldbootstrap5startEPK12macho_headeriPPKclS2_Pm\n}\n{\n   mem 221\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 222\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 223\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 224\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 225\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dyld_register_image_state_change_handler\n}\n{\n   mem 226\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_objc_init\n}\n{\n   mem 227\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 228\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN4dyldL18notifyBatchPartialE17dyld_image_statesbPFPKcS0_jPK15dyld_image_infoE\n}\n{\n   mem 229\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 230\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 231\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 232\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 233\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n{\n   mem 234\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n\n{\n   mem 235\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN13dyldbootstrap5startEPK12macho_headeriPPKclS2_Pm\n}\n{\n   mem 236\n   Memcheck:Leak\n   fun:calloc\n   ...\n   fun:+[NSObject new]\n}\n{\n   mem 237\n   Memcheck:Leak\n   fun:calloc\n   ...\n   fun:+[NSObject new]\n}\n{\n   mem 238\n   Memcheck:Leak\n   fun:calloc\n   ...\n   fun:+[NSDictionary allocWithZone:]\n}\n{\n   mem 239\n   Memcheck:Leak\n   fun:calloc\n   ...\n   fun:_NSThreadGet0\n}\n{\n   mem 240\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN11ImageLoader4linkERKNS_11LinkContextEbbRKNS_10RPathChainE\n}\n{\n   mem 241\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:dlopen\n}\n{\n   mem 242\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN4dyld36registerImageStateBatchChangeHandlerE17dyld_image_statesPFPKcS0_jPK15dyld_image_infoE\n}\n{\n   mem 243\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 244\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 245\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 246\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 247\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 248\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 249\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 250\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 251\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 252\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 253\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dlopen\n}\n{\n   mem 254\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dlopen\n}\n{\n   mem 255\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:dlopen\n}\n{\n   mem 256\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:heim_load_frameworks\n}\n{\n   mem 257\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 258\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 259\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 260\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 261\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 262\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 263\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 264\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 265\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 266\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 267\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 268\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN4dyldL12notifySingleE17dyld_image_statesPK11ImageLoader\n}\n{\n   mem 269\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 270\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 271\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:call_load_methods\n}\n{\n   mem 272\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_NSInitializePlatform\n}\n{\n   mem 273\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:load_images\n}\n{\n   mem 274\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:main\n}\n{\n   mem 275\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:main\n}\n{\n   mem 276\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:main\n}\n{\n   mem 277\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:main\n}\n{\n   mem 278\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:main\n}\n{\n   mem 279\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:main\n}\n{\n   mem 280\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:main\n}\n{\n   mem 281\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:main\n}\n{\n   mem 282\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:main\n}\n{\n   mem 283\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:main\n}\n{\n   mem 284\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:main\n}\n{\n   mem 285\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:main\n}\n{\n   mem 286\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:main\n}\n{\n   mem 287\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:main\n}\n{\n   mem 288\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 289\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 290\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 291\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 292\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 293\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 294\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 295\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 296\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 297\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 298\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 299\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:main\n}\n{\n   mem 300\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:main\n}\n{\n   mem 301\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 302\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 303\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 304\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:main\n}\n{\n   mem 305\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 306\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 307\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN13dyldbootstrap5startEPK12macho_headeriPPKclS2_Pm\n}\n{\n   mem 308\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 309\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 310\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 311\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 312\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 313\n   Memcheck:Leak\n   fun:malloc_zone_realloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 314\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 315\n   Memcheck:Leak\n   fun:calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 316\n   Memcheck:Leak\n   fun:calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 317\n   Memcheck:Leak\n   fun:calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 318\n   Memcheck:Leak\n   fun:calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 319\n   Memcheck:Leak\n   fun:calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 320\n   Memcheck:Leak\n   fun:calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 321\n   Memcheck:Leak\n   fun:calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 322\n   Memcheck:Leak\n   fun:calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 323\n   Memcheck:Leak\n   fun:calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 324\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 325\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN16ImageLoaderMachO11doImageInitERKN11ImageLoader11LinkContextE\n}\n{\n   mem 326\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:_ZThn120_N11TestFloat6413output_valuesERSo\n}\n{\n   mem 327\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 328\n   Memcheck:Leak\n   fun:malloc_zone_realloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 329\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 330\n   Memcheck:Leak\n   fun:malloc_zone_calloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 331\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 332\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:dlopen\n}\n{\n   mem 333\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN4dyldL18notifyBatchPartialE17dyld_image_statesbPFPKcS0_jPK15dyld_image_infoE\n}\n{\n   mem 334\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:heim_load_frameworks\n}\n{\n   mem 335\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 336\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO18doModInitFunctionsERKN11ImageLoader11LinkContextE\n}\n{\n   mem 337\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:libSystem_initializer\n}\n{\n   mem 338\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN11ImageLoader23recursiveInitializationERKNS_11LinkContextEjRNS_21InitializerTimingListE\n}\n{\n   mem 339\n   Memcheck:Leak\n   fun:calloc\n   ...\n   fun:_ZN4dyld15runInitializersEP11ImageLoader\n}\n{\n   mem 340\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:dlopen\n}\n{\n   mem 341\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:_ZN13dyldbootstrap5startEPK12macho_headeriPPKclS2_Pm\n}\n{\n   mem 342\n   Memcheck:Leak\n   fun:malloc_zone_memalign\n   ...\n   fun:_ZN11ImageLoader15runInitializersERKNS_11LinkContextERNS_21InitializerTimingListE\n}\n{\n   mem 343\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n{\n   mem 344\n   Memcheck:Leak\n   fun:malloc_zone_malloc\n   ...\n   fun:_ZN16ImageLoaderMachO16doInitializationERKN11ImageLoader11LinkContextE\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/gl/m4/lib-link.m4": "# lib-link.m4 serial 26 (gettext-0.18.2)\ndnl Copyright (C) 2001-2017 Free Software Foundation, Inc.\ndnl This file is free software; the Free Software Foundation\ndnl gives unlimited permission to copy and/or distribute it,\ndnl with or without modifications, as long as this notice is preserved.\n\ndnl From Bruno Haible.\n\nAC_PREREQ([2.54])\n\ndnl AC_LIB_LINKFLAGS(name [, dependencies]) searches for libname and\ndnl the libraries corresponding to explicit and implicit dependencies.\ndnl Sets and AC_SUBSTs the LIB${NAME} and LTLIB${NAME} variables and\ndnl augments the CPPFLAGS variable.\ndnl Sets and AC_SUBSTs the LIB${NAME}_PREFIX variable to nonempty if libname\ndnl was found in ${LIB${NAME}_PREFIX}/$acl_libdirstem.\nAC_DEFUN([AC_LIB_LINKFLAGS],\n[\n  AC_REQUIRE([AC_LIB_PREPARE_PREFIX])\n  AC_REQUIRE([AC_LIB_RPATH])\n  pushdef([Name],[m4_translit([$1],[./+-], [____])])\n  pushdef([NAME],[m4_translit([$1],[abcdefghijklmnopqrstuvwxyz./+-],\n                                   [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])\n  AC_CACHE_CHECK([how to link with lib[]$1], [ac_cv_lib[]Name[]_libs], [\n    AC_LIB_LINKFLAGS_BODY([$1], [$2])\n    ac_cv_lib[]Name[]_libs=\"$LIB[]NAME\"\n    ac_cv_lib[]Name[]_ltlibs=\"$LTLIB[]NAME\"\n    ac_cv_lib[]Name[]_cppflags=\"$INC[]NAME\"\n    ac_cv_lib[]Name[]_prefix=\"$LIB[]NAME[]_PREFIX\"\n  ])\n  LIB[]NAME=\"$ac_cv_lib[]Name[]_libs\"\n  LTLIB[]NAME=\"$ac_cv_lib[]Name[]_ltlibs\"\n  INC[]NAME=\"$ac_cv_lib[]Name[]_cppflags\"\n  LIB[]NAME[]_PREFIX=\"$ac_cv_lib[]Name[]_prefix\"\n  AC_LIB_APPENDTOVAR([CPPFLAGS], [$INC]NAME)\n  AC_SUBST([LIB]NAME)\n  AC_SUBST([LTLIB]NAME)\n  AC_SUBST([LIB]NAME[_PREFIX])\n  dnl Also set HAVE_LIB[]NAME so that AC_LIB_HAVE_LINKFLAGS can reuse the\n  dnl results of this search when this library appears as a dependency.\n  HAVE_LIB[]NAME=yes\n  popdef([NAME])\n  popdef([Name])\n])\n\ndnl AC_LIB_HAVE_LINKFLAGS(name, dependencies, includes, testcode, [missing-message])\ndnl searches for libname and the libraries corresponding to explicit and\ndnl implicit dependencies, together with the specified include files and\ndnl the ability to compile and link the specified testcode. The missing-message\ndnl defaults to 'no' and may contain additional hints for the user.\ndnl If found, it sets and AC_SUBSTs HAVE_LIB${NAME}=yes and the LIB${NAME}\ndnl and LTLIB${NAME} variables and augments the CPPFLAGS variable, and\ndnl #defines HAVE_LIB${NAME} to 1. Otherwise, it sets and AC_SUBSTs\ndnl HAVE_LIB${NAME}=no and LIB${NAME} and LTLIB${NAME} to empty.\ndnl Sets and AC_SUBSTs the LIB${NAME}_PREFIX variable to nonempty if libname\ndnl was found in ${LIB${NAME}_PREFIX}/$acl_libdirstem.\nAC_DEFUN([AC_LIB_HAVE_LINKFLAGS],\n[\n  AC_REQUIRE([AC_LIB_PREPARE_PREFIX])\n  AC_REQUIRE([AC_LIB_RPATH])\n  pushdef([Name],[m4_translit([$1],[./+-], [____])])\n  pushdef([NAME],[m4_translit([$1],[abcdefghijklmnopqrstuvwxyz./+-],\n                                   [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])\n\n  dnl Search for lib[]Name and define LIB[]NAME, LTLIB[]NAME and INC[]NAME\n  dnl accordingly.\n  AC_LIB_LINKFLAGS_BODY([$1], [$2])\n\n  dnl Add $INC[]NAME to CPPFLAGS before performing the following checks,\n  dnl because if the user has installed lib[]Name and not disabled its use\n  dnl via --without-lib[]Name-prefix, he wants to use it.\n  ac_save_CPPFLAGS=\"$CPPFLAGS\"\n  AC_LIB_APPENDTOVAR([CPPFLAGS], [$INC]NAME)\n\n  AC_CACHE_CHECK([for lib[]$1], [ac_cv_lib[]Name], [\n    ac_save_LIBS=\"$LIBS\"\n    dnl If $LIB[]NAME contains some -l options, add it to the end of LIBS,\n    dnl because these -l options might require -L options that are present in\n    dnl LIBS. -l options benefit only from the -L options listed before it.\n    dnl Otherwise, add it to the front of LIBS, because it may be a static\n    dnl library that depends on another static library that is present in LIBS.\n    dnl Static libraries benefit only from the static libraries listed after\n    dnl it.\n    case \" $LIB[]NAME\" in\n      *\" -l\"*) LIBS=\"$LIBS $LIB[]NAME\" ;;\n      *)       LIBS=\"$LIB[]NAME $LIBS\" ;;\n    esac\n    AC_LINK_IFELSE(\n      [AC_LANG_PROGRAM([[$3]], [[$4]])],\n      [ac_cv_lib[]Name=yes],\n      [ac_cv_lib[]Name='m4_if([$5], [], [no], [[$5]])'])\n    LIBS=\"$ac_save_LIBS\"\n  ])\n  if test \"$ac_cv_lib[]Name\" = yes; then\n    HAVE_LIB[]NAME=yes\n    AC_DEFINE([HAVE_LIB]NAME, 1, [Define if you have the lib][$1 library.])\n    AC_MSG_CHECKING([how to link with lib[]$1])\n    AC_MSG_RESULT([$LIB[]NAME])\n  else\n    HAVE_LIB[]NAME=no\n    dnl If $LIB[]NAME didn't lead to a usable library, we don't need\n    dnl $INC[]NAME either.\n    CPPFLAGS=\"$ac_save_CPPFLAGS\"\n    LIB[]NAME=\n    LTLIB[]NAME=\n    LIB[]NAME[]_PREFIX=\n  fi\n  AC_SUBST([HAVE_LIB]NAME)\n  AC_SUBST([LIB]NAME)\n  AC_SUBST([LTLIB]NAME)\n  AC_SUBST([LIB]NAME[_PREFIX])\n  popdef([NAME])\n  popdef([Name])\n])\n\ndnl Determine the platform dependent parameters needed to use rpath:\ndnl   acl_libext,\ndnl   acl_shlibext,\ndnl   acl_libname_spec,\ndnl   acl_library_names_spec,\ndnl   acl_hardcode_libdir_flag_spec,\ndnl   acl_hardcode_libdir_separator,\ndnl   acl_hardcode_direct,\ndnl   acl_hardcode_minus_L.\nAC_DEFUN([AC_LIB_RPATH],\n[\n  dnl Tell automake >= 1.10 to complain if config.rpath is missing.\n  m4_ifdef([AC_REQUIRE_AUX_FILE], [AC_REQUIRE_AUX_FILE([config.rpath])])\n  AC_REQUIRE([AC_PROG_CC])                dnl we use $CC, $GCC, $LDFLAGS\n  AC_REQUIRE([AC_LIB_PROG_LD])            dnl we use $LD, $with_gnu_ld\n  AC_REQUIRE([AC_CANONICAL_HOST])         dnl we use $host\n  AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT]) dnl we use $ac_aux_dir\n  AC_CACHE_CHECK([for shared library run path origin], [acl_cv_rpath], [\n    CC=\"$CC\" GCC=\"$GCC\" LDFLAGS=\"$LDFLAGS\" LD=\"$LD\" with_gnu_ld=\"$with_gnu_ld\" \\\n    ${CONFIG_SHELL-/bin/sh} \"$ac_aux_dir/config.rpath\" \"$host\" > conftest.sh\n    . ./conftest.sh\n    rm -f ./conftest.sh\n    acl_cv_rpath=done\n  ])\n  wl=\"$acl_cv_wl\"\n  acl_libext=\"$acl_cv_libext\"\n  acl_shlibext=\"$acl_cv_shlibext\"\n  acl_libname_spec=\"$acl_cv_libname_spec\"\n  acl_library_names_spec=\"$acl_cv_library_names_spec\"\n  acl_hardcode_libdir_flag_spec=\"$acl_cv_hardcode_libdir_flag_spec\"\n  acl_hardcode_libdir_separator=\"$acl_cv_hardcode_libdir_separator\"\n  acl_hardcode_direct=\"$acl_cv_hardcode_direct\"\n  acl_hardcode_minus_L=\"$acl_cv_hardcode_minus_L\"\n  dnl Determine whether the user wants rpath handling at all.\n  AC_ARG_ENABLE([rpath],\n    [  --disable-rpath         do not hardcode runtime library paths],\n    :, enable_rpath=yes)\n])\n\ndnl AC_LIB_FROMPACKAGE(name, package)\ndnl declares that libname comes from the given package. The configure file\ndnl will then not have a --with-libname-prefix option but a\ndnl --with-package-prefix option. Several libraries can come from the same\ndnl package. This declaration must occur before an AC_LIB_LINKFLAGS or similar\ndnl macro call that searches for libname.\nAC_DEFUN([AC_LIB_FROMPACKAGE],\n[\n  pushdef([NAME],[m4_translit([$1],[abcdefghijklmnopqrstuvwxyz./+-],\n                                   [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])\n  define([acl_frompackage_]NAME, [$2])\n  popdef([NAME])\n  pushdef([PACK],[$2])\n  pushdef([PACKUP],[m4_translit(PACK,[abcdefghijklmnopqrstuvwxyz./+-],\n                                     [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])\n  define([acl_libsinpackage_]PACKUP,\n    m4_ifdef([acl_libsinpackage_]PACKUP, [m4_defn([acl_libsinpackage_]PACKUP)[, ]],)[lib$1])\n  popdef([PACKUP])\n  popdef([PACK])\n])\n\ndnl AC_LIB_LINKFLAGS_BODY(name [, dependencies]) searches for libname and\ndnl the libraries corresponding to explicit and implicit dependencies.\ndnl Sets the LIB${NAME}, LTLIB${NAME} and INC${NAME} variables.\ndnl Also, sets the LIB${NAME}_PREFIX variable to nonempty if libname was found\ndnl in ${LIB${NAME}_PREFIX}/$acl_libdirstem.\nAC_DEFUN([AC_LIB_LINKFLAGS_BODY],\n[\n  AC_REQUIRE([AC_LIB_PREPARE_MULTILIB])\n  pushdef([NAME],[m4_translit([$1],[abcdefghijklmnopqrstuvwxyz./+-],\n                                   [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])\n  pushdef([PACK],[m4_ifdef([acl_frompackage_]NAME, [acl_frompackage_]NAME, lib[$1])])\n  pushdef([PACKUP],[m4_translit(PACK,[abcdefghijklmnopqrstuvwxyz./+-],\n                                     [ABCDEFGHIJKLMNOPQRSTUVWXYZ____])])\n  pushdef([PACKLIBS],[m4_ifdef([acl_frompackage_]NAME, [acl_libsinpackage_]PACKUP, lib[$1])])\n  dnl Autoconf >= 2.61 supports dots in --with options.\n  pushdef([P_A_C_K],[m4_if(m4_version_compare(m4_defn([m4_PACKAGE_VERSION]),[2.61]),[-1],[m4_translit(PACK,[.],[_])],PACK)])\n  dnl By default, look in $includedir and $libdir.\n  use_additional=yes\n  AC_LIB_WITH_FINAL_PREFIX([\n    eval additional_includedir=\\\"$includedir\\\"\n    eval additional_libdir=\\\"$libdir\\\"\n  ])\n  AC_ARG_WITH(P_A_C_K[-prefix],\n[[  --with-]]P_A_C_K[[-prefix[=DIR]  search for ]PACKLIBS[ in DIR/include and DIR/lib\n  --without-]]P_A_C_K[[-prefix     don't search for ]PACKLIBS[ in includedir and libdir]],\n[\n    if test \"X$withval\" = \"Xno\"; then\n      use_additional=no\n    else\n      if test \"X$withval\" = \"X\"; then\n        AC_LIB_WITH_FINAL_PREFIX([\n          eval additional_includedir=\\\"$includedir\\\"\n          eval additional_libdir=\\\"$libdir\\\"\n        ])\n      else\n        additional_includedir=\"$withval/include\"\n        additional_libdir=\"$withval/$acl_libdirstem\"\n        if test \"$acl_libdirstem2\" != \"$acl_libdirstem\" \\\n           && ! test -d \"$withval/$acl_libdirstem\"; then\n          additional_libdir=\"$withval/$acl_libdirstem2\"\n        fi\n      fi\n    fi\n])\n  dnl Search the library and its dependencies in $additional_libdir and\n  dnl $LDFLAGS. Using breadth-first-seach.\n  LIB[]NAME=\n  LTLIB[]NAME=\n  INC[]NAME=\n  LIB[]NAME[]_PREFIX=\n  dnl HAVE_LIB${NAME} is an indicator that LIB${NAME}, LTLIB${NAME} have been\n  dnl computed. So it has to be reset here.\n  HAVE_LIB[]NAME=\n  rpathdirs=\n  ltrpathdirs=\n  names_already_handled=\n  names_next_round='$1 $2'\n  while test -n \"$names_next_round\"; do\n    names_this_round=\"$names_next_round\"\n    names_next_round=\n    for name in $names_this_round; do\n      already_handled=\n      for n in $names_already_handled; do\n        if test \"$n\" = \"$name\"; then\n          already_handled=yes\n          break\n        fi\n      done\n      if test -z \"$already_handled\"; then\n        names_already_handled=\"$names_already_handled $name\"\n        dnl See if it was already located by an earlier AC_LIB_LINKFLAGS\n        dnl or AC_LIB_HAVE_LINKFLAGS call.\n        uppername=`echo \"$name\" | sed -e 'y|abcdefghijklmnopqrstuvwxyz./+-|ABCDEFGHIJKLMNOPQRSTUVWXYZ____|'`\n        eval value=\\\"\\$HAVE_LIB$uppername\\\"\n        if test -n \"$value\"; then\n          if test \"$value\" = yes; then\n            eval value=\\\"\\$LIB$uppername\\\"\n            test -z \"$value\" || LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$value\"\n            eval value=\\\"\\$LTLIB$uppername\\\"\n            test -z \"$value\" || LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }$value\"\n          else\n            dnl An earlier call to AC_LIB_HAVE_LINKFLAGS has determined\n            dnl that this library doesn't exist. So just drop it.\n            :\n          fi\n        else\n          dnl Search the library lib$name in $additional_libdir and $LDFLAGS\n          dnl and the already constructed $LIBNAME/$LTLIBNAME.\n          found_dir=\n          found_la=\n          found_so=\n          found_a=\n          eval libname=\\\"$acl_libname_spec\\\"    # typically: libname=lib$name\n          if test -n \"$acl_shlibext\"; then\n            shrext=\".$acl_shlibext\"             # typically: shrext=.so\n          else\n            shrext=\n          fi\n          if test $use_additional = yes; then\n            dir=\"$additional_libdir\"\n            dnl The same code as in the loop below:\n            dnl First look for a shared library.\n            if test -n \"$acl_shlibext\"; then\n              if test -f \"$dir/$libname$shrext\"; then\n                found_dir=\"$dir\"\n                found_so=\"$dir/$libname$shrext\"\n              else\n                if test \"$acl_library_names_spec\" = '$libname$shrext$versuffix'; then\n                  ver=`(cd \"$dir\" && \\\n                        for f in \"$libname$shrext\".*; do echo \"$f\"; done \\\n                        | sed -e \"s,^$libname$shrext\\\\\\\\.,,\" \\\n                        | sort -t '.' -n -r -k1,1 -k2,2 -k3,3 -k4,4 -k5,5 \\\n                        | sed 1q ) 2>/dev/null`\n                  if test -n \"$ver\" && test -f \"$dir/$libname$shrext.$ver\"; then\n                    found_dir=\"$dir\"\n                    found_so=\"$dir/$libname$shrext.$ver\"\n                  fi\n                else\n                  eval library_names=\\\"$acl_library_names_spec\\\"\n                  for f in $library_names; do\n                    if test -f \"$dir/$f\"; then\n                      found_dir=\"$dir\"\n                      found_so=\"$dir/$f\"\n                      break\n                    fi\n                  done\n                fi\n              fi\n            fi\n            dnl Then look for a static library.\n            if test \"X$found_dir\" = \"X\"; then\n              if test -f \"$dir/$libname.$acl_libext\"; then\n                found_dir=\"$dir\"\n                found_a=\"$dir/$libname.$acl_libext\"\n              fi\n            fi\n            if test \"X$found_dir\" != \"X\"; then\n              if test -f \"$dir/$libname.la\"; then\n                found_la=\"$dir/$libname.la\"\n              fi\n            fi\n          fi\n          if test \"X$found_dir\" = \"X\"; then\n            for x in $LDFLAGS $LTLIB[]NAME; do\n              AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n              case \"$x\" in\n                -L*)\n                  dir=`echo \"X$x\" | sed -e 's/^X-L//'`\n                  dnl First look for a shared library.\n                  if test -n \"$acl_shlibext\"; then\n                    if test -f \"$dir/$libname$shrext\"; then\n                      found_dir=\"$dir\"\n                      found_so=\"$dir/$libname$shrext\"\n                    else\n                      if test \"$acl_library_names_spec\" = '$libname$shrext$versuffix'; then\n                        ver=`(cd \"$dir\" && \\\n                              for f in \"$libname$shrext\".*; do echo \"$f\"; done \\\n                              | sed -e \"s,^$libname$shrext\\\\\\\\.,,\" \\\n                              | sort -t '.' -n -r -k1,1 -k2,2 -k3,3 -k4,4 -k5,5 \\\n                              | sed 1q ) 2>/dev/null`\n                        if test -n \"$ver\" && test -f \"$dir/$libname$shrext.$ver\"; then\n                          found_dir=\"$dir\"\n                          found_so=\"$dir/$libname$shrext.$ver\"\n                        fi\n                      else\n                        eval library_names=\\\"$acl_library_names_spec\\\"\n                        for f in $library_names; do\n                          if test -f \"$dir/$f\"; then\n                            found_dir=\"$dir\"\n                            found_so=\"$dir/$f\"\n                            break\n                          fi\n                        done\n                      fi\n                    fi\n                  fi\n                  dnl Then look for a static library.\n                  if test \"X$found_dir\" = \"X\"; then\n                    if test -f \"$dir/$libname.$acl_libext\"; then\n                      found_dir=\"$dir\"\n                      found_a=\"$dir/$libname.$acl_libext\"\n                    fi\n                  fi\n                  if test \"X$found_dir\" != \"X\"; then\n                    if test -f \"$dir/$libname.la\"; then\n                      found_la=\"$dir/$libname.la\"\n                    fi\n                  fi\n                  ;;\n              esac\n              if test \"X$found_dir\" != \"X\"; then\n                break\n              fi\n            done\n          fi\n          if test \"X$found_dir\" != \"X\"; then\n            dnl Found the library.\n            LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }-L$found_dir -l$name\"\n            if test \"X$found_so\" != \"X\"; then\n              dnl Linking with a shared library. We attempt to hardcode its\n              dnl directory into the executable's runpath, unless it's the\n              dnl standard /usr/lib.\n              if test \"$enable_rpath\" = no \\\n                 || test \"X$found_dir\" = \"X/usr/$acl_libdirstem\" \\\n                 || test \"X$found_dir\" = \"X/usr/$acl_libdirstem2\"; then\n                dnl No hardcoding is needed.\n                LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_so\"\n              else\n                dnl Use an explicit option to hardcode DIR into the resulting\n                dnl binary.\n                dnl Potentially add DIR to ltrpathdirs.\n                dnl The ltrpathdirs will be appended to $LTLIBNAME at the end.\n                haveit=\n                for x in $ltrpathdirs; do\n                  if test \"X$x\" = \"X$found_dir\"; then\n                    haveit=yes\n                    break\n                  fi\n                done\n                if test -z \"$haveit\"; then\n                  ltrpathdirs=\"$ltrpathdirs $found_dir\"\n                fi\n                dnl The hardcoding into $LIBNAME is system dependent.\n                if test \"$acl_hardcode_direct\" = yes; then\n                  dnl Using DIR/libNAME.so during linking hardcodes DIR into the\n                  dnl resulting binary.\n                  LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_so\"\n                else\n                  if test -n \"$acl_hardcode_libdir_flag_spec\" && test \"$acl_hardcode_minus_L\" = no; then\n                    dnl Use an explicit option to hardcode DIR into the resulting\n                    dnl binary.\n                    LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_so\"\n                    dnl Potentially add DIR to rpathdirs.\n                    dnl The rpathdirs will be appended to $LIBNAME at the end.\n                    haveit=\n                    for x in $rpathdirs; do\n                      if test \"X$x\" = \"X$found_dir\"; then\n                        haveit=yes\n                        break\n                      fi\n                    done\n                    if test -z \"$haveit\"; then\n                      rpathdirs=\"$rpathdirs $found_dir\"\n                    fi\n                  else\n                    dnl Rely on \"-L$found_dir\".\n                    dnl But don't add it if it's already contained in the LDFLAGS\n                    dnl or the already constructed $LIBNAME\n                    haveit=\n                    for x in $LDFLAGS $LIB[]NAME; do\n                      AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n                      if test \"X$x\" = \"X-L$found_dir\"; then\n                        haveit=yes\n                        break\n                      fi\n                    done\n                    if test -z \"$haveit\"; then\n                      LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-L$found_dir\"\n                    fi\n                    if test \"$acl_hardcode_minus_L\" != no; then\n                      dnl FIXME: Not sure whether we should use\n                      dnl \"-L$found_dir -l$name\" or \"-L$found_dir $found_so\"\n                      dnl here.\n                      LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_so\"\n                    else\n                      dnl We cannot use $acl_hardcode_runpath_var and LD_RUN_PATH\n                      dnl here, because this doesn't fit in flags passed to the\n                      dnl compiler. So give up. No hardcoding. This affects only\n                      dnl very old systems.\n                      dnl FIXME: Not sure whether we should use\n                      dnl \"-L$found_dir -l$name\" or \"-L$found_dir $found_so\"\n                      dnl here.\n                      LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-l$name\"\n                    fi\n                  fi\n                fi\n              fi\n            else\n              if test \"X$found_a\" != \"X\"; then\n                dnl Linking with a static library.\n                LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$found_a\"\n              else\n                dnl We shouldn't come here, but anyway it's good to have a\n                dnl fallback.\n                LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-L$found_dir -l$name\"\n              fi\n            fi\n            dnl Assume the include files are nearby.\n            additional_includedir=\n            case \"$found_dir\" in\n              */$acl_libdirstem | */$acl_libdirstem/)\n                basedir=`echo \"X$found_dir\" | sed -e 's,^X,,' -e \"s,/$acl_libdirstem/\"'*$,,'`\n                if test \"$name\" = '$1'; then\n                  LIB[]NAME[]_PREFIX=\"$basedir\"\n                fi\n                additional_includedir=\"$basedir/include\"\n                ;;\n              */$acl_libdirstem2 | */$acl_libdirstem2/)\n                basedir=`echo \"X$found_dir\" | sed -e 's,^X,,' -e \"s,/$acl_libdirstem2/\"'*$,,'`\n                if test \"$name\" = '$1'; then\n                  LIB[]NAME[]_PREFIX=\"$basedir\"\n                fi\n                additional_includedir=\"$basedir/include\"\n                ;;\n            esac\n            if test \"X$additional_includedir\" != \"X\"; then\n              dnl Potentially add $additional_includedir to $INCNAME.\n              dnl But don't add it\n              dnl   1. if it's the standard /usr/include,\n              dnl   2. if it's /usr/local/include and we are using GCC on Linux,\n              dnl   3. if it's already present in $CPPFLAGS or the already\n              dnl      constructed $INCNAME,\n              dnl   4. if it doesn't exist as a directory.\n              if test \"X$additional_includedir\" != \"X/usr/include\"; then\n                haveit=\n                if test \"X$additional_includedir\" = \"X/usr/local/include\"; then\n                  if test -n \"$GCC\"; then\n                    case $host_os in\n                      linux* | gnu* | k*bsd*-gnu) haveit=yes;;\n                    esac\n                  fi\n                fi\n                if test -z \"$haveit\"; then\n                  for x in $CPPFLAGS $INC[]NAME; do\n                    AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n                    if test \"X$x\" = \"X-I$additional_includedir\"; then\n                      haveit=yes\n                      break\n                    fi\n                  done\n                  if test -z \"$haveit\"; then\n                    if test -d \"$additional_includedir\"; then\n                      dnl Really add $additional_includedir to $INCNAME.\n                      INC[]NAME=\"${INC[]NAME}${INC[]NAME:+ }-I$additional_includedir\"\n                    fi\n                  fi\n                fi\n              fi\n            fi\n            dnl Look for dependencies.\n            if test -n \"$found_la\"; then\n              dnl Read the .la file. It defines the variables\n              dnl dlname, library_names, old_library, dependency_libs, current,\n              dnl age, revision, installed, dlopen, dlpreopen, libdir.\n              save_libdir=\"$libdir\"\n              case \"$found_la\" in\n                */* | *\\\\*) . \"$found_la\" ;;\n                *) . \"./$found_la\" ;;\n              esac\n              libdir=\"$save_libdir\"\n              dnl We use only dependency_libs.\n              for dep in $dependency_libs; do\n                case \"$dep\" in\n                  -L*)\n                    additional_libdir=`echo \"X$dep\" | sed -e 's/^X-L//'`\n                    dnl Potentially add $additional_libdir to $LIBNAME and $LTLIBNAME.\n                    dnl But don't add it\n                    dnl   1. if it's the standard /usr/lib,\n                    dnl   2. if it's /usr/local/lib and we are using GCC on Linux,\n                    dnl   3. if it's already present in $LDFLAGS or the already\n                    dnl      constructed $LIBNAME,\n                    dnl   4. if it doesn't exist as a directory.\n                    if test \"X$additional_libdir\" != \"X/usr/$acl_libdirstem\" \\\n                       && test \"X$additional_libdir\" != \"X/usr/$acl_libdirstem2\"; then\n                      haveit=\n                      if test \"X$additional_libdir\" = \"X/usr/local/$acl_libdirstem\" \\\n                         || test \"X$additional_libdir\" = \"X/usr/local/$acl_libdirstem2\"; then\n                        if test -n \"$GCC\"; then\n                          case $host_os in\n                            linux* | gnu* | k*bsd*-gnu) haveit=yes;;\n                          esac\n                        fi\n                      fi\n                      if test -z \"$haveit\"; then\n                        haveit=\n                        for x in $LDFLAGS $LIB[]NAME; do\n                          AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n                          if test \"X$x\" = \"X-L$additional_libdir\"; then\n                            haveit=yes\n                            break\n                          fi\n                        done\n                        if test -z \"$haveit\"; then\n                          if test -d \"$additional_libdir\"; then\n                            dnl Really add $additional_libdir to $LIBNAME.\n                            LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-L$additional_libdir\"\n                          fi\n                        fi\n                        haveit=\n                        for x in $LDFLAGS $LTLIB[]NAME; do\n                          AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n                          if test \"X$x\" = \"X-L$additional_libdir\"; then\n                            haveit=yes\n                            break\n                          fi\n                        done\n                        if test -z \"$haveit\"; then\n                          if test -d \"$additional_libdir\"; then\n                            dnl Really add $additional_libdir to $LTLIBNAME.\n                            LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }-L$additional_libdir\"\n                          fi\n                        fi\n                      fi\n                    fi\n                    ;;\n                  -R*)\n                    dir=`echo \"X$dep\" | sed -e 's/^X-R//'`\n                    if test \"$enable_rpath\" != no; then\n                      dnl Potentially add DIR to rpathdirs.\n                      dnl The rpathdirs will be appended to $LIBNAME at the end.\n                      haveit=\n                      for x in $rpathdirs; do\n                        if test \"X$x\" = \"X$dir\"; then\n                          haveit=yes\n                          break\n                        fi\n                      done\n                      if test -z \"$haveit\"; then\n                        rpathdirs=\"$rpathdirs $dir\"\n                      fi\n                      dnl Potentially add DIR to ltrpathdirs.\n                      dnl The ltrpathdirs will be appended to $LTLIBNAME at the end.\n                      haveit=\n                      for x in $ltrpathdirs; do\n                        if test \"X$x\" = \"X$dir\"; then\n                          haveit=yes\n                          break\n                        fi\n                      done\n                      if test -z \"$haveit\"; then\n                        ltrpathdirs=\"$ltrpathdirs $dir\"\n                      fi\n                    fi\n                    ;;\n                  -l*)\n                    dnl Handle this in the next round.\n                    names_next_round=\"$names_next_round \"`echo \"X$dep\" | sed -e 's/^X-l//'`\n                    ;;\n                  *.la)\n                    dnl Handle this in the next round. Throw away the .la's\n                    dnl directory; it is already contained in a preceding -L\n                    dnl option.\n                    names_next_round=\"$names_next_round \"`echo \"X$dep\" | sed -e 's,^X.*/,,' -e 's,^lib,,' -e 's,\\.la$,,'`\n                    ;;\n                  *)\n                    dnl Most likely an immediate library name.\n                    LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$dep\"\n                    LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }$dep\"\n                    ;;\n                esac\n              done\n            fi\n          else\n            dnl Didn't find the library; assume it is in the system directories\n            dnl known to the linker and runtime loader. (All the system\n            dnl directories known to the linker should also be known to the\n            dnl runtime loader, otherwise the system is severely misconfigured.)\n            LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }-l$name\"\n            LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }-l$name\"\n          fi\n        fi\n      fi\n    done\n  done\n  if test \"X$rpathdirs\" != \"X\"; then\n    if test -n \"$acl_hardcode_libdir_separator\"; then\n      dnl Weird platform: only the last -rpath option counts, the user must\n      dnl pass all path elements in one option. We can arrange that for a\n      dnl single library, but not when more than one $LIBNAMEs are used.\n      alldirs=\n      for found_dir in $rpathdirs; do\n        alldirs=\"${alldirs}${alldirs:+$acl_hardcode_libdir_separator}$found_dir\"\n      done\n      dnl Note: acl_hardcode_libdir_flag_spec uses $libdir and $wl.\n      acl_save_libdir=\"$libdir\"\n      libdir=\"$alldirs\"\n      eval flag=\\\"$acl_hardcode_libdir_flag_spec\\\"\n      libdir=\"$acl_save_libdir\"\n      LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$flag\"\n    else\n      dnl The -rpath options are cumulative.\n      for found_dir in $rpathdirs; do\n        acl_save_libdir=\"$libdir\"\n        libdir=\"$found_dir\"\n        eval flag=\\\"$acl_hardcode_libdir_flag_spec\\\"\n        libdir=\"$acl_save_libdir\"\n        LIB[]NAME=\"${LIB[]NAME}${LIB[]NAME:+ }$flag\"\n      done\n    fi\n  fi\n  if test \"X$ltrpathdirs\" != \"X\"; then\n    dnl When using libtool, the option that works for both libraries and\n    dnl executables is -R. The -R options are cumulative.\n    for found_dir in $ltrpathdirs; do\n      LTLIB[]NAME=\"${LTLIB[]NAME}${LTLIB[]NAME:+ }-R$found_dir\"\n    done\n  fi\n  popdef([P_A_C_K])\n  popdef([PACKLIBS])\n  popdef([PACKUP])\n  popdef([PACK])\n  popdef([NAME])\n])\n\ndnl AC_LIB_APPENDTOVAR(VAR, CONTENTS) appends the elements of CONTENTS to VAR,\ndnl unless already present in VAR.\ndnl Works only for CPPFLAGS, not for LIB* variables because that sometimes\ndnl contains two or three consecutive elements that belong together.\nAC_DEFUN([AC_LIB_APPENDTOVAR],\n[\n  for element in [$2]; do\n    haveit=\n    for x in $[$1]; do\n      AC_LIB_WITH_FINAL_PREFIX([eval x=\\\"$x\\\"])\n      if test \"X$x\" = \"X$element\"; then\n        haveit=yes\n        break\n      fi\n    done\n    if test -z \"$haveit\"; then\n      [$1]=\"${[$1]}${[$1]:+ }$element\"\n    fi\n  done\n])\n\ndnl For those cases where a variable contains several -L and -l options\ndnl referring to unknown libraries and directories, this macro determines the\ndnl necessary additional linker options for the runtime path.\ndnl AC_LIB_LINKFLAGS_FROM_LIBS([LDADDVAR], [LIBSVALUE], [USE-LIBTOOL])\ndnl sets LDADDVAR to linker options needed together with LIBSVALUE.\ndnl If USE-LIBTOOL evaluates to non-empty, linking with libtool is assumed,\ndnl otherwise linking without libtool is assumed.\nAC_DEFUN([AC_LIB_LINKFLAGS_FROM_LIBS],\n[\n  AC_REQUIRE([AC_LIB_RPATH])\n  AC_REQUIRE([AC_LIB_PREPARE_MULTILIB])\n  $1=\n  if test \"$enable_rpath\" != no; then\n    if test -n \"$acl_hardcode_libdir_flag_spec\" && test \"$acl_hardcode_minus_L\" = no; then\n      dnl Use an explicit option to hardcode directories into the resulting\n      dnl binary.\n      rpathdirs=\n      next=\n      for opt in $2; do\n        if test -n \"$next\"; then\n          dir=\"$next\"\n          dnl No need to hardcode the standard /usr/lib.\n          if test \"X$dir\" != \"X/usr/$acl_libdirstem\" \\\n             && test \"X$dir\" != \"X/usr/$acl_libdirstem2\"; then\n            rpathdirs=\"$rpathdirs $dir\"\n          fi\n          next=\n        else\n          case $opt in\n            -L) next=yes ;;\n            -L*) dir=`echo \"X$opt\" | sed -e 's,^X-L,,'`\n                 dnl No need to hardcode the standard /usr/lib.\n                 if test \"X$dir\" != \"X/usr/$acl_libdirstem\" \\\n                    && test \"X$dir\" != \"X/usr/$acl_libdirstem2\"; then\n                   rpathdirs=\"$rpathdirs $dir\"\n                 fi\n                 next= ;;\n            *) next= ;;\n          esac\n        fi\n      done\n      if test \"X$rpathdirs\" != \"X\"; then\n        if test -n \"\"$3\"\"; then\n          dnl libtool is used for linking. Use -R options.\n          for dir in $rpathdirs; do\n            $1=\"${$1}${$1:+ }-R$dir\"\n          done\n        else\n          dnl The linker is used for linking directly.\n          if test -n \"$acl_hardcode_libdir_separator\"; then\n            dnl Weird platform: only the last -rpath option counts, the user\n            dnl must pass all path elements in one option.\n            alldirs=\n            for dir in $rpathdirs; do\n              alldirs=\"${alldirs}${alldirs:+$acl_hardcode_libdir_separator}$dir\"\n            done\n            acl_save_libdir=\"$libdir\"\n            libdir=\"$alldirs\"\n            eval flag=\\\"$acl_hardcode_libdir_flag_spec\\\"\n            libdir=\"$acl_save_libdir\"\n            $1=\"$flag\"\n          else\n            dnl The -rpath options are cumulative.\n            for dir in $rpathdirs; do\n              acl_save_libdir=\"$libdir\"\n              libdir=\"$dir\"\n              eval flag=\\\"$acl_hardcode_libdir_flag_spec\\\"\n              libdir=\"$acl_save_libdir\"\n              $1=\"${$1}${$1:+ }$flag\"\n            done\n          fi\n        fi\n      fi\n    fi\n  fi\n  AC_SUBST([$1])\n])\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/unit-tests/D4-marshaller/test_opaque_1_bin.dat.sav",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/unit-tests/D4-marshaller/big-endian/test_scalars_3_bin.dat",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/unit-tests/D4-marshaller/big-endian/test_opaque_1_bin.dat",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/unit-tests/D4-marshaller/big-endian/test_vector_1_bin.dat",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/unit-tests/D4-marshaller/big-endian/test_scalars_1_bin.dat",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/unit-tests/D4-marshaller/big-endian/test_scalars_2_bin.dat",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/unit-tests/D4-marshaller/little-endian/test_scalars_3_bin.dat",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/unit-tests/D4-marshaller/little-endian/test_opaque_1_bin.dat",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/unit-tests/D4-marshaller/little-endian/test_vector_1_bin.dat",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/unit-tests/D4-marshaller/little-endian/test_scalars_1_bin.dat",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/unit-tests/D4-marshaller/little-endian/test_vector_2_bin.dat",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/unit-tests/D4-marshaller/little-endian/test_scalars_2_bin.dat",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/unit-tests/D4-marshaller/little-endian/test_scalars_2.dat",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/unit-tests/ddx-testsuite/dataddx_without_top_headers.dap",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/unit-tests/chunked-io/test_big_binary_file_3.bin",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/unit-tests/chunked-io/test_big_binary_file_2.bin",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/unit-tests/chunked-io/test_big_binary_file.bin",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/OSX_Resources/background.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/tests/dmr-testsuite/test_array_6_data.bin",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/tests/dmr-testsuite/test_array_4_data.bin",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/tests/dmr-testsuite/test_simple_5_data.bin",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/tests/dmr-testsuite/test_array_2_data.bin",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/tests/dmr-testsuite/test_array_3_data.bin",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/tests/dmr-testsuite/test_simple_1_data.bin",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/tests/dmr-testsuite/test_array_5_data.bin",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/tests/dmr-testsuite/test_array_1_data.bin",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/tests/dmr-testsuite/test_simple_3_data.bin",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/tests/dmr-testsuite/test_simple_4_data.bin",
        "/tmp/vanessa/spack-stage/spack-stage-libdap4-3.20.4-tqpfp7jdvtc3j55ygprhc7hjuoagnepf/spack-src/tests/dmr-testsuite/test_simple_2_data.bin"
    ],
    "total_files": 1807
}