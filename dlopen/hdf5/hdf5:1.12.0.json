{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/configure.ac": "## Process this file with autoconf to produce configure.\n##\n## Copyright by The HDF Group.\n## Copyright by the Board of Trustees of the University of Illinois.\n## All rights reserved.\n##\n## This file is part of HDF5.  The full HDF5 copyright notice, including\n## terms governing use, modification, and redistribution, is contained in\n## the COPYING file, which can be found at the root of the source code\n## distribution tree, or in https://support.hdfgroup.org/ftp/HDF5/releases.\n## If you do not have access to either file, you may request a copy from\n## help@hdfgroup.org.\n\n## ----------------------------------------------------------------------\n## Initialize configure.\n##\nAC_REVISION($Id: configure.ac 22697 2012-08-19 14:35:47Z hdftest $)\nAC_PREREQ([2.69])\n\n## AC_INIT takes the name of the package, the version number, and an\n## email address to report bugs. AC_CONFIG_SRCDIR takes a unique file\n## as its argument.\n##\n## NOTE: Do not forget to change the version number here when we do a\n## release!!!\n##\nAC_INIT([HDF5], [1.12.0], [help@hdfgroup.org])\n\nAC_CONFIG_SRCDIR([src/H5.c])\nAC_CONFIG_HEADERS([src/H5config.h])\n\nAC_CONFIG_AUX_DIR([bin])\nAC_CONFIG_MACRO_DIR([m4])\n\n## AM_INIT_AUTOMAKE takes a list of options that should be applied to\n## every Makefile.am when automake is run.\nAM_INIT_AUTOMAKE([foreign subdir-objects])\nm4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])]) # use silent rules where available - automake 1.11\n\n## AM_MAINTAINER_MODE turns off \"rebuild rules\" that contain dependencies\n## for Makefiles, configure, src/H5config.h, etc. If AM_MAINTAINER_MODE\n## is enabled, these files will be rebuilt if out of date. This is a\n## problem because if users try to build on a machine with\n## the wrong versions of autoconf and automake, these files will be\n## rebuilt with the wrong versions and bad things can happen.\n## Also, CVS doesn't preserve dependencies between timestamps, so\n## Makefiles will often think rebuilding needs to occur when it doesn't.\n##\n## By default, it is enabled. Users can configure with\n## --disable-maintainer-mode to prevent running the autotools.\nAM_MAINTAINER_MODE([disable])\n\n## ----------------------------------------------------------------------\n## Set prefix default (install directory) to a directory in the build area.\n## This allows multiple src-dir builds within one host.\nAC_PREFIX_DEFAULT([`pwd`/hdf5])\n\n## Run post processing on files created by configure.\n## src/H5pubconf.h:\n## Generate src/H5pubconf.h from src/H5config.h by prepending H5_ to all\n## macro names. This avoid name conflict between HDF5 macro names and those\n## generated by another software package that uses the HDF5 library.\n## src/libhdf5.settings:\n## Remove all lines begun with \"#\" which are generated by CONDITIONAL's of\n## configure.\nAC_CONFIG_COMMANDS([pubconf], [\n  echo \"creating src/H5pubconf.h\"\n  sed 's/#define /#define H5_/' <src/H5config.h |\\\n    sed 's/#undef /#undef H5_/' >pubconf\n  if test ! -f src/H5pubconf.h; then\n    /bin/mv -f pubconf src/H5pubconf.h\n  elif (diff pubconf src/H5pubconf.h >/dev/null); then\n    rm -f pubconf\n    echo \"src/H5pubconf.h is unchanged\"\n  else\n    /bin/mv -f pubconf src/H5pubconf.h\n  fi\n  echo \"Post process src/libhdf5.settings\"\n  sed '/^#/d' < src/libhdf5.settings > libhdf5.settings.TMP\n  cp libhdf5.settings.TMP src/libhdf5.settings\n  rm -f libhdf5.settings.TMP\n])\n\n## It's possible to configure for a host other than the one on which\n## configure is currently running by using the --host=foo flag.\n## For machines on which HDF5 is often configured, it can be convenient\n## to specify the name of the machine rather than its canonical type.\n##\n## There are currently no hosts, but if there were they would be\n## listed by hostname and the alias would point to a file in\n## the config directory:\n##\n##case $host_alias in\n##  <some host>)\n##    host_alias=<config file in config directory>\n##    ;;\n##esac\n\nAC_CANONICAL_HOST\nAC_SUBST([CPPFLAGS])\nAC_SUBST([JNIFLAGS])\nAC_SUBST([AR_FLAGS])\n\n## H5_CFLAGS (and company) are for CFLAGS that should be used on HDF5, but\n## not exported to h5cc (or h5fc, etc.)\nAC_SUBST([H5_CFLAGS])\nAC_SUBST([H5_CPPFLAGS])\nAC_SUBST([H5_FCFLAGS])\nAC_SUBST([H5_CXXFLAGS])\nAC_SUBST([H5_JNIFLAGS])\nAC_SUBST([H5_JAVACFLAGS])\nAC_SUBST([H5_JAVAFLAGS])\nAC_SUBST([H5_LDFLAGS])\n\n## AM_CFLAGS (and company) are for CFLAGS that should be used on HDF5,\n## and WILL be exported to h5cc (or h5fc, etc) if set by configure.\nAC_SUBST([AM_CFLAGS])\nAC_SUBST([AM_FCFLAGS])\nAC_SUBST([AM_CXXFLAGS])\nAC_SUBST([AM_CPPFLAGS])\nAC_SUBST([AM_JNIFLAGS])\nAC_SUBST([AM_JAVACFLAGS])\nAC_SUBST([AM_JAVAFLAGS])\nAC_SUBST([AM_LDFLAGS])\n\n## Make sure flags are initialized.\nAM_CFLAGS=\"${AM_CFLAGS}\"\nAM_CXXFLAGS=\"${AM_CXXFLAGS}\"\nAM_FCFLAGS=\"${AM_FCFLAGS}\"\nAM_CPPFLAGS=\"${AM_CPPFLAGS}\"\nAM_JNIFLAGS=\"${AM_JNIFLAGS}\"\nAM_JAVACFLAGS=\"${AM_JAVACFLAGS}\"\nAM_JAVAFLAGS=\"${AM_JAVAFLAGS}\"\nAM_LDFLAGS=\"${AM_LDFLAGS}\"\nCFLAGS=\"${CFLAGS}\"\nCXXFLAGS=\"${CXXFLAGS}\"\nFCFLAGS=\"${FCFLAGS}\"\nCPPFLAGS=\"${CPPFLAGS}\"\nJNIFLAGS=\"${JNIFLAGS}\"\nJAVACFLAGS=\"${JAVACFLAGS}\"\nJAVAFLAGS=\"${JAVAFLAGS}\"\nLDFLAGS=\"${LDFLAGS}\"\nAR_FLAGS=\"${AR_FLAGS}\"\n\n## Configure may need to alter any of the *FLAGS variables in order for\n## various checks to work correctly. Save the user's value here so it\n## can be restored once all configure checks are complete.\nsaved_user_CFLAGS=\"$CFLAGS\"\nsaved_user_CXXFLAGS=\"$CXXFLAGS\"\nsaved_user_FCFLAGS=\"$FCFLAGS\"\nsaved_user_JAVACFLAGS=\"$JAVACFLAGS\"\nsaved_user_JAVAFLAGS=\"$JAVAFLAGS\"\nsaved_user_LDFLAGS=\"$LDFLAGS\"\nsaved_user_CPPFLAGS=\"$CPPFLAGS\"\n\n## Support F9X variable to define Fortran compiler if FC variable is\n## not used.  This should be deprecated in the future.\nif test \"x\" = \"x$FC\"; then\n  FC=${F9X}\nfi\n\n## ----------------------------------------------------------------------\n## Dump all shell variables values.\n##\nAC_MSG_CHECKING([shell variables initial values])\nset >&AS_MESSAGE_LOG_FD\nAC_MSG_RESULT([done])\n\n## ----------------------------------------------------------------------\n## Save system information for the library settings file.\n##\nAC_SUBST([UNAME_INFO])\nUNAME_INFO=`uname -a`\n\n## ----------------------------------------------------------------------\n## Some platforms have broken basename, and/or xargs programs. Check\n## that it actually does what it's supposed to do. Catch this early\n## since configure and scripts relies upon them heavily and there's\n## no use continuing if it's broken.\n##\nAC_MSG_CHECKING([if basename works])\nBASENAME_TEST=\"`basename /foo/bar/baz/qux/basename_works`\"\nif test $BASENAME_TEST != \"basename_works\"; then\n  AC_MSG_ERROR([basename program doesn't work])\nelse\n  AC_MSG_RESULT([yes])\nfi\n\n## xargs basename used in configure to get the CC_BASENAME value\nAC_MSG_CHECKING([if xargs works])\nXARGS_TEST=\"`echo /foo/bar/baz/qux/xargs_works | xargs basename`\"\nif test $XARGS_TEST != \"xargs_works\"; then\n  AC_MSG_ERROR([xargs program doesn't work])\nelse\n  AC_MSG_RESULT([yes])\nfi\n\n## ----------------------------------------------------------------------\n## Check that the cache file was build on the same host as what we're\n## running on now.\n##\nAC_CACHE_CHECK([for cached host], [hdf5_cv_host], [hdf5_cv_host=\"none\"]);\nif test $hdf5_cv_host = \"none\"; then\n  hdf5_cv_host=$host\nelif test $hdf5_cv_host != $host; then\n  echo \"The config.cache file was generated on $hdf5_cv_host but\"\n  echo \"this is $host.  Please remove that file and try again.\"\n  AC_MSG_ERROR([config.cache file is invalid])\nfi\n\n## ----------------------------------------------------------------------\n## Source any special files that we need.  These files normally aren't\n## present but can be used by the maintainers to fine tune things like\n## turning on debug or profiling flags for the compiler.  The search order\n## is:\n##\n##    CPU-VENDOR-OS\n##    VENDOR-OS\n##    CPU-OS\n##    CPU-VENDOR\n##    OS\n##    VENDOR\n##    CPU\n##\n## If the `OS' ends with a version number then remove it. For instance,\n## `freebsd3.1' would become `freebsd'\n\ncase $host_os in\n  aix*)\n    host_os_novers=aix\n    ;;\n  freebsd*)\n    host_os_novers=freebsd\n    ;;\n  netbsd*)\n    host_os_novers=netbsd\n    ;;\n  solaris*)\n    host_os_novers=solaris\n    ;;\n  *)\n    host_os_novers=$host_os\n    ;;\nesac\n\nhost_config=\"none\"\nfor f in $host_cpu-$host_vendor-$host_os \\\n         $host_cpu-$host_vendor-$host_os_novers \\\n         $host_vendor-$host_os \\\n         $host_vendor-$host_os_novers \\\n         $host_cpu-$host_os \\\n         $host_cpu-$host_os_novers \\\n         $host_cpu-$host_vendor \\\n         $host_os \\\n         $host_os_novers \\\n         $host_vendor \\\n         $host_cpu ; do\n  AC_MSG_CHECKING([for config $f])\n  if test -f \"$srcdir/config/$f\"; then\n    host_config=$srcdir/config/$f\n    AC_MSG_RESULT([found])\n    break\n  fi\n  AC_MSG_RESULT([no])\ndone\nif test \"X$host_config\" != \"Xnone\"; then\n  CC_BASENAME=\"`echo $CC | cut -f1 -d' ' | xargs basename 2>/dev/null`\"\n  . $host_config\nfi\n\n## Source any special site-specific file\nhname=\"`hostname`\"\nwhile test -n \"$hname\"; do\n  file=$srcdir/config/site-specific/host-$hname\n  AC_MSG_CHECKING([for config $file])\n  if test -f \"$file\"; then\n    . $file\n    AC_MSG_RESULT([found])\n    break\n  fi\n  AC_MSG_RESULT([no])\n  hname_tmp=$hname\n  hname=\"`echo $hname | cut -d. -f2-99`\"\n  test \"$hname_tmp\" = \"$hname\" && break\ndone\n\n\n## ----------------------------------------------------------------------\n## Determine build mode (debug, production, clean).\n## This has to be done early since the build mode is referred to\n## frequently.\n##\nAC_MSG_CHECKING([build mode])\nAC_ARG_ENABLE([build-mode],\n              [AS_HELP_STRING([--enable-build-mode=(debug|production|clean)],\n                              [Sets the build mode. Debug turns on symbols, API\n                               tracing, asserts, and debug optimization,\n                               as well as several other minor configure options\n                               that aid in debugging.\n                               Production turns high optimizations on.\n                               Clean turns nothing on and disables optimization\n                               (i.e.: a 'clean slate' configuration).\n                               All these settings can be overridden by using\n                               specific configure flags.\n                               [default=debug]\n                               ])],\n              [BUILD_MODE=$enableval])\n\n## Set the default\n## Depends on branch, set via script at branch creation time\nif test \"X-$BUILD_MODE\" = X- ; then\n    BUILD_MODE=debug\nfi\n\n## Allow this variable to be substituted in\n## other files (src/libhdf5.settings.in, etc.)\nAC_SUBST([BUILD_MODE])\n\ncase \"X-$BUILD_MODE\" in\n  X-clean)\n    AC_MSG_RESULT([clean])\n    ;;\n  X-debug)\n    AC_DEFINE([DEBUG_BUILD], [1], [Define if this is a debug build.])\n    H5_CFLAGS=\"$H5_CFLAGS $DEBUG_CFLAGS\"\n    H5_CPPFLAGS=\"$H5_CPPFLAGS $DEBUG_CPPFLAGS\"\n    H5_CXXFLAGS=\"$H5_CXXFLAGS $DEBUG_CXXFLAGS\"\n    H5_FCFLAGS=\"$H5_FCFLAGS $DEBUG_FCFLAGS\"\n    AC_MSG_RESULT([debug])\n    ;;\n  X-production)\n    H5_CFLAGS=\"$H5_CFLAGS $PROD_CFLAGS\"\n    H5_CPPFLAGS=\"$H5_CPPFLAGS $PROD_CPPFLAGS\"\n    H5_CXXFLAGS=\"$H5_CXXFLAGS $PROD_CXXFLAGS\"\n    H5_FCFLAGS=\"$H5_FCFLAGS $PROD_FCFLAGS\"\n    AC_MSG_RESULT([production])\n    ;;\n  *)\n    AC_MSG_ERROR([Unrecognized build mode: $BUILD_MODE. Use debug, production, or clean.])\nesac\n\n## ----------------------------------------------------------------------\n## Some built-in configure checks can only see CFLAGS (not AM_CFLAGS), so\n## we need to add this in so configure works as intended. We will need to\n## reset this value at the end of configure, to preserve the user's settings.\nCFLAGS=\"${AM_CFLAGS} ${CFLAGS}\"\nFCFLAGS=\"${AM_FCFLAGS} ${FCFLAGS}\"\nJAVACFLAGS=\"${AM_JAVACFLAGS} ${JAVACFLAGS}\"\nJAVAFLAGS=\"${AM_JAVAFLAGS} ${JAVAFLAGS}\"\nCXXFLAGS=\"${AM_CXXFLAGS} ${CXXFLAGS}\"\nCPPFLAGS=\"${AM_CPPFLAGS} ${CPPFLAGS}\"\nLDFLAGS=\"${AM_LDFLAGS} ${LDFLAGS}\"\n\n## ----------------------------------------------------------------------\n## Enable dependency tracking unless the configure options or a\n## site-specific file told us not to.  This prevents configure from\n## silently disabling dependencies for some compilers.\n##\nif test -z \"${enable_dependency_tracking}\"; then\n  enable_dependency_tracking=\"yes\"\nfi\n\n## ----------------------------------------------------------------------\n## Check for programs.\n##\nAC_PROG_CC\nCC_BASENAME=\"`echo $CC | cut -f1 -d' ' | xargs basename 2>/dev/null`\"\n\n## ----------------------------------------------------------------------------\n## Configure disallows unsupported combinations of options. However, users\n## may want to override and build with unsupported combinations for their\n## own use. They can use the --enable-unsupported configure flag, which\n## ignores any errors from configure due to incompatible flags.\nAC_MSG_CHECKING([if unsupported combinations of configure options are allowed])\nAC_ARG_ENABLE([unsupported],\n              [AS_HELP_STRING([--enable-unsupported],\n                              [Allow unsupported combinations of configure options])],\n              [ALLOW_UNSUPPORTED=$enableval])\n\ncase \"X-$ALLOW_UNSUPPORTED\" in\n  X-|X-no)\n    AC_MSG_RESULT([no])\n    ;;\n  X-yes)\n    AC_MSG_RESULT([yes])\n    ;;\n  *)\n    ;;\nesac\n\n## ----------------------------------------------------------------------\n## Data types and their sizes.\n##\nAC_TYPE_OFF_T\nAC_CHECK_TYPE([size_t], [],\n        [AC_DEFINE_UNQUOTED([size_t], [unsigned long],\n                [Define to `unsigned long' if <sys/types.h> does not define.])])\nAC_CHECK_TYPE([ssize_t], [],\n        [AC_DEFINE_UNQUOTED([ssize_t], [long],\n                [Define to `long' if <sys/types.h> does not define.])])\nAC_CHECK_TYPE([ptrdiff_t], [],\n        [AC_DEFINE_UNQUOTED([ptrdiff_t], [long],\n                [Define to `long' if <sys/types.h> does not define.])])\nAC_C_BIGENDIAN\nAC_CHECK_SIZEOF([char])\nAC_CHECK_SIZEOF([short])\nAC_CHECK_SIZEOF([int])\nAC_CHECK_SIZEOF([unsigned])\nAC_CHECK_SIZEOF([long])\nAC_CHECK_SIZEOF([long long])\nAC_CHECK_SIZEOF([__int64])\nAC_CHECK_SIZEOF([float])\nAC_CHECK_SIZEOF([double])\nAC_CHECK_SIZEOF([long double])\n\n## ----------------------------------------------------------------------\n## Check for non-standard extension __FLOAT128\n##\nHAVE_FLOAT128=0\nHAVE_QUADMATH=0\nFLT128_DIG=0\nLDBL_DIG=0\n\nAC_CHECK_SIZEOF([__float128])\nAC_CHECK_SIZEOF([_Quad])\nAC_CHECK_HEADERS([quadmath.h], [HAVE_QUADMATH=1], [])\nPAC_FC_LDBL_DIG\n\nAC_SUBST([PAC_C_MAX_REAL_PRECISION])\n\nif test \"$ac_cv_sizeof___float128\" != 0 && test \"$FLT128_DIG\" != 0 ; then\n  AC_DEFINE([HAVE_FLOAT128], [1], [Determine if __float128 is available])\n  PAC_C_MAX_REAL_PRECISION=$FLT128_DIG\nelse\n  PAC_C_MAX_REAL_PRECISION=$LDBL_DIG\nfi\nAC_DEFINE_UNQUOTED([PAC_C_MAX_REAL_PRECISION], $PAC_C_MAX_REAL_PRECISION, [Determine the maximum decimal precision in C])\nAC_MSG_RESULT([$PAC_C_MAX_REAL_PRECISION])\n\n## ----------------------------------------------------------------------\n## Check if they would like the Fortran interface compiled\n##\n\n## This needs to be exposed for the library info file even if Fortran is disabled.\nAC_SUBST([HDF_FORTRAN])\n\n## Default is no Fortran\nHDF_FORTRAN=no\n\nAC_SUBST([HDF5_INTERFACES]) HDF5_INTERFACES=\"\"\nAC_MSG_CHECKING([if Fortran interface enabled])\nAC_ARG_ENABLE([fortran],\n              [AS_HELP_STRING([--enable-fortran],\n                              [Compile the Fortran interface [default=no]])],\n              [HDF_FORTRAN=$enableval])\n\nif test \"X$HDF_FORTRAN\" = \"Xyes\"; then\n  echo \"yes\"\nelse\n  echo \"no\"\nfi\n\nif test \"X$HDF_FORTRAN\" = \"Xyes\"; then\n\n## We will output an include file for Fortran, H5config_f.inc which\n## contains various configure definitions used by the Fortran Library.\n## Prepend H5_ to all macro names. This avoids name conflict between HDF5 macro\n## names and those generated by another software package that uses the HDF5 library.\n  AC_CONFIG_HEADERS([fortran/src/H5config_f.inc],\n    [cat fortran/src/H5config_f.inc | sed '1d;s%^/\\* \\(.*\\) \\*/%\\1%;s/#define /#define H5_/;s/#undef /#undef H5_/' >fortran/src/H5config_f.inc.tmp; mv -f fortran/src/H5config_f.inc.tmp fortran/src/H5config_f.inc])\n\n  AC_SUBST([FC])\n\n  HDF5_INTERFACES=\"$HDF5_INTERFACES fortran\"\n\n  ## --------------------------------------------------------------------\n  ## HDF5 integer variables for the H5fortran_types.f90 file.\n  ##\n  AC_SUBST([R_LARGE])\n  AC_SUBST([R_INTEGER])\n  AC_SUBST([HADDR_T])\n  AC_SUBST([HSIZE_T])\n  AC_SUBST([HSSIZE_T])\n  AC_SUBST([HID_T])\n  AC_SUBST([SIZE_T])\n  AC_SUBST([OBJECT_NAMELEN_DEFAULT_F])\n\n  ## --------------------------------------------------------------------\n  ## Fortran source extention\n  ##\n  AC_FC_SRCEXT([f90])\n\n  AC_SUBST([F9XSUFFIXFLAG])\n  AC_SUBST([FSEARCH_DIRS])\n\n  ## --------------------------------------------------------------------\n  ## Check for a Fortran compiler and how to include modules.\n  ##\n  AC_PROG_FC([PAC_FC_SEARCH_LIST],)\n  AC_F9X_MODS\n\n  ## Change to the Fortran 90 language\n  AC_LANG_PUSH(Fortran)\n\n  ## Checking if the compiler supports the required Fortran 2003 features and\n  ## stopping if it does not.\n  PAC_PROG_FC_HAVE_F2003_REQUIREMENTS\n\n  if test \"X$HAVE_F2003_REQUIREMENTS\" = \"Xno\"; then\n    AC_MSG_ERROR([Fortran compiler lacks required Fortran 2003 features; unsupported Fortran 2003 compiler, remove --enable-fortran])\n  fi\n\n  ## --------------------------------------------------------------------\n  ## Define wrappers for the C compiler to use Fortran function names\n  ##\n  AC_FC_WRAPPERS\n\n  ## --------------------------------------------------------------------\n  ## See if the fortran compiler supports the intrinsic function \"SIZEOF\"\n  PAC_PROG_FC_SIZEOF\n\n  ## See if the fortran compiler supports the intrinsic function \"C_SIZEOF\"\n  PAC_PROG_FC_C_SIZEOF\n\n  ## See if the fortran compiler supports the intrinsic function \"STORAGE_SIZE\"\n  PAC_PROG_FC_STORAGE_SIZE\n\n  ## Set the sizeof function for use later in the fortran tests\n  if test \"X$HAVE_STORAGE_SIZE_FORTRAN\" = \"Xyes\";then\n    FC_SIZEOF_A=\"STORAGE_SIZE(a, c_size_t)/STORAGE_SIZE(c_char_'a',c_size_t)\"\n    FC_SIZEOF_B=\"STORAGE_SIZE(b, c_size_t)/STORAGE_SIZE(c_char_'a',c_size_t)\"\n    FC_SIZEOF_C=\"STORAGE_SIZE(c, c_size_t)/STORAGE_SIZE(c_char_'a',c_size_t)\"\n  else\n    if test \"X$HAVE_SIZEOF_FORTRAN\" = \"Xyes\";then\n      FC_SIZEOF_A=\"SIZEOF(a)\"\n      FC_SIZEOF_B=\"SIZEOF(b)\"\n      FC_SIZEOF_C=\"SIZEOF(c)\"\n    else\n      ## If neither intrinsic functions SIZEOF or STORAGE_SIZE is available then stop configure with an error\n      AC_MSG_ERROR([Fortran compiler requires either intrinsic functions SIZEOF or STORAGE_SIZE])\n    fi\n  fi\n\n  ## See if the fortran compiler supports the intrinsic module \"ISO_FORTRAN_ENV\"\n  PAC_PROG_FC_ISO_FORTRAN_ENV\n  ## Check KIND and size of native integer\n  PAC_FC_NATIVE_INTEGER\n\n  ## Find all available KINDs\n  PAC_FC_AVAIL_KINDS\n  ## Find all sizeofs for available KINDs\n  PAC_FC_SIZEOF_INT_KINDS\n  PAC_FC_SIZEOF_REAL_KINDS\n\n  AC_SUBST([PAC_FC_ALL_REAL_KINDS])\n  AC_SUBST([PAC_FC_MAX_REAL_PRECISION])\n  AC_SUBST([PAC_FORTRAN_NUM_INTEGER_KINDS])\n  AC_SUBST([PAC_FC_ALL_INTEGER_KINDS])\n  AC_SUBST([PAC_FC_ALL_REAL_KINDS_SIZEOF])\n  AC_SUBST([PAC_FC_ALL_INTEGER_KINDS_SIZEOF])\n  AC_SUBST([PAC_FORTRAN_NATIVE_INTEGER_KIND])\n  AC_SUBST([PAC_FORTRAN_NATIVE_INTEGER_SIZEOF])\n  AC_SUBST([PAC_FORTRAN_NATIVE_REAL_KIND])\n  AC_SUBST([PAC_FORTRAN_NATIVE_REAL_SIZEOF])\n  AC_SUBST([PAC_FORTRAN_NATIVE_DOUBLE_KIND])\n  AC_SUBST([PAC_FORTRAN_NATIVE_DOUBLE_SIZEOF])\n  AC_SUBST([HAVE_Fortran_INTEGER_SIZEOF_16])\n  AC_SUBST([FORTRAN_HAVE_C_LONG_DOUBLE])\n  AC_SUBST([FORTRAN_C_LONG_DOUBLE_IS_UNIQUE])\n  AC_SUBST([H5CONFIG_F_NUM_RKIND])\n  AC_SUBST([H5CONFIG_F_RKIND])\n  AC_SUBST([H5CONFIG_F_RKIND_SIZEOF])\n  AC_SUBST([H5CONFIG_F_NUM_IKIND])\n  AC_SUBST([H5CONFIG_F_IKIND])\n  AC_SUBST([Fortran_COMPILER_ID])\n  Fortran_COMPILER_ID=none\n  AC_DEFINE_UNQUOTED([Fortran_COMPILER_ID], $Fortran_COMPILER_ID, [Define Fortran compiler ID])\n\n  ## Setting definition if there is a 16 byte fortran integer\n  if `echo $PAC_FC_ALL_INTEGER_KINDS_SIZEOF | grep '16' >/dev/null`; then\n    HAVE_Fortran_INTEGER_SIZEOF_16=\"1\"\n    AC_DEFINE([HAVE_Fortran_INTEGER_SIZEOF_16], [1], [Determine if INTEGER*16 is available])\n  else\n    HAVE_Fortran_INTEGER_SIZEOF_16=\"0\"\n    AC_DEFINE([HAVE_Fortran_INTEGER_SIZEOF_16], [0], [Determine if INTEGER*16 is available])\n  fi\n\n  if test \"X$HAVE_STORAGE_SIZE_FORTRAN\" = \"Xyes\"; then\n    AC_DEFINE([FORTRAN_HAVE_STORAGE_SIZE], [1], [Define if we have Fortran intrinsic STORAGE_SIZE])\n  fi\n\n  if test \"X$HAVE_C_SIZEOF_FORTRAN\" = \"Xyes\"; then\n    AC_DEFINE([FORTRAN_HAVE_C_SIZEOF], [1], [Define if we have Fortran intrinsic C_SIZEOF])\n  fi\n\n  if test \"X$HAVE_SIZEOF_FORTRAN\" = \"Xyes\"; then\n    AC_DEFINE([FORTRAN_HAVE_SIZEOF], [1], [Define if we have Fortran intrinsic SIZEOF])\n  fi\n\n  ## See if C_LONG_DOUBLE is available\n  PAC_PROG_FC_HAVE_C_LONG_DOUBLE\n\n  FORTRAN_HAVE_C_LONG_DOUBLE=\"0\"\n  if test \"X$HAVE_C_LONG_DOUBLE_FORTRAN\" = \"Xyes\"; then\n    FORTRAN_HAVE_C_LONG_DOUBLE=\"1\"\n    AC_DEFINE([FORTRAN_HAVE_C_LONG_DOUBLE], [1], [Define if we have Fortran C_LONG_DOUBLE])\n  fi\n\n  ## Is C_LONG_DOUBLE different from C_DOUBLE\n  FORTRAN_C_LONG_DOUBLE_IS_UNIQUE=\"0\"\n  if test \"$FORTRAN_HAVE_C_LONG_DOUBLE\" = \"1\"; then\n    PAC_PROG_FC_C_LONG_DOUBLE_EQ_C_DOUBLE\n    if test \"X$C_LONG_DOUBLE_IS_UNIQUE_FORTRAN\" = \"Xyes\"; then\n      FORTRAN_C_LONG_DOUBLE_IS_UNIQUE=\"1\"\n      AC_DEFINE([FORTRAN_C_LONG_DOUBLE_IS_UNIQUE], [1], [Define if Fortran C_LONG_DOUBLE is different from C_DOUBLE])\n    else\n      FORTRAN_C_LONG_DOUBLE_IS_UNIQUE=\"0\"\n    fi\n  fi\n\n  FORTRAN_SIZEOF_LONG_DOUBLE=${ac_cv_sizeof_long_double}\n  AC_DEFINE_UNQUOTED([FORTRAN_SIZEOF_LONG_DOUBLE], [\"${ac_cv_sizeof_long_double}\"], [Determine the size of C long double])\n\n  dnl get the largest sizeof for REAL kinds\n  max_real_fortran_sizeof=\"`echo $PAC_FC_ALL_REAL_KINDS_SIZEOF | sed -ne 's/.*,\\([[0-9]]*\\)}/\\1/p'`\"\n  max_real_fortran_kind=\"`echo $PAC_FC_ALL_REAL_KINDS | sed -ne 's/.*,\\([[0-9]]*\\)}/\\1/p'`\"\n\n  dnl remove the invalid kind from the list\n  if test \"$ac_cv_sizeof___float128\" != 0;then\n    if test \"$ac_cv_sizeof___float128\" != \"$max_real_fortran_sizeof\" &&\n       test \"${ac_cv_sizeof_long_double}\" != \"$max_real_fortran_sizeof\" &&\n       dnl account for the fact that the C compiler can have 16-byte __float128 and the Fortran compiler only has 8-byte doubles,\n       dnl so we don't want to remove the 8-byte Fortran doubles. This is sometimes the case if different C and Fortran vendors\n       dnl are used (for example gnu and pgi).\n       test \"${ac_cv_sizeof_double}\" != \"$max_real_fortran_sizeof\" ; then\n          AC_MSG_WARN([\n           Fortran REAL(KIND=$max_real_fortran_kind) is $max_real_fortran_sizeof Bytes, but no corresponding C float type exists of that size\n                     !!! Fortran interfaces will not be generated for REAL(KIND=$max_real_fortran_kind) !!!\n          ])\n      PAC_FC_ALL_REAL_KINDS=\"`echo $PAC_FC_ALL_REAL_KINDS | sed -e 's/,[[0-9]]\\+}/}/g'`\"\n      PAC_FC_ALL_REAL_KINDS_SIZEOF=\"`echo $PAC_FC_ALL_REAL_KINDS_SIZEOF | sed -e 's/,[[0-9]]\\+}/}/g'`\"\n\n    fi\n  fi\n  AC_MSG_CHECKING([for Fortran interoperable KINDS with C])\n  AC_MSG_RESULT([$PAC_FC_ALL_REAL_KINDS])\n\n  dnl count the number of real kinds\n  H5CONFIG_F_NUM_RKIND=\"INTEGER, PARAMETER :: num_rkinds = `echo \\\"[$]PAC_FC_ALL_REAL_KINDS\\\" |  tr -d -c ',\\n' | awk '{ print length + 1; }'`\"\n  H5CONFIG_F_RKIND=\"INTEGER, DIMENSION(1:num_rkinds) :: rkind = (/`echo $PAC_FC_ALL_REAL_KINDS | sed -e 's/{//g' | sed -e 's/}//g' | sed -e 's/ /,/g'`/)\"\n  H5CONFIG_F_RKIND_SIZEOF=\"INTEGER, DIMENSION(1:num_rkinds) :: rkind_sizeof = (/`echo $PAC_FC_ALL_REAL_KINDS_SIZEOF | sed -e 's/{//g' | sed -e 's/}//g'| sed -e 's/ /,/g'`/)\"\n\n  AC_DEFINE_UNQUOTED([H5CONFIG_F_NUM_RKIND], $H5CONFIG_F_NUM_RKIND, [Define number of valid Fortran REAL KINDs])\n  AC_DEFINE_UNQUOTED([H5CONFIG_F_RKIND], $H5CONFIG_F_RKIND, [Define valid Fortran REAL KINDs])\n  AC_DEFINE_UNQUOTED([H5CONFIG_F_RKIND_SIZEOF], $H5CONFIG_F_RKIND_SIZEOF, [Define valid Fortran REAL KINDs Sizeof])\n\n## Change back to the C language\n  AC_LANG_POP(Fortran)\nelse\n  FC=\"no\"\nfi\n\n## ----------------------------------------------------------------------\n## Check if they would like the C++ interface compiled\n##\n## This needs to be exposed for the library info file even if C++ is disabled.\nAC_SUBST([HDF_CXX])\n\n## Default is no C++\nHDF_CXX=no\n\n## We need to check for a C++ compiler unconditionally, since\n## AC_PROG_CXX defines some macros that Automake 1.9.x uses and will\n## miss even if c++ is not enabled.\nAC_PROG_CXX\nAC_PROG_CXXCPP    ## this is checked for when AC_HEADER_STDC is done\n\nAC_MSG_CHECKING([if c++ interface enabled])\n\nAC_ARG_ENABLE([cxx],\n              [AS_HELP_STRING([--enable-cxx],\n                              [Compile the C++ interface [default=no]])],\n              [HDF_CXX=$enableval])\n\nif test \"X$HDF_CXX\" = \"Xyes\"; then\n  echo \"yes\"\n  HDF5_INTERFACES=\"$HDF5_INTERFACES c++\"\n\n  ## Expose the compiler for *.in files\n  AC_SUBST([CXX])\n\n  ## Change to the C++ language\n  AC_LANG_PUSH(C++)\n\n  ## Checking if C++ needs old style header files in includes\n  PAC_PROG_CXX_HEADERS\n\n  ## Checking if C++ can handle namespaces\n  PAC_PROG_CXX_NAMESPACE\n\n  ## if C++ can handle static cast\n  PAC_PROG_CXX_STATIC_CAST\n\n  ## Checking if C++ has offsetof extension,\n  ## note: this test has to be the last of the C++ tests because it sets a definition\n  ## which would be used in the other tests, causing them to fail.\n  PAC_PROG_CXX_OFFSETOF\n\nelse\n  AC_MSG_RESULT([no])\n  CXX=\"no\"\nfi\n\n## Change back to the C language\nAC_LANG_POP(C++)\n\n\n## ----------------------------------------------------------------------\n## Check if they would like the High Level library  compiled\n##\n\n## This needs to be exposed for the library info file even if the HL\n## library is disabled.\nAC_SUBST([HDF5_HL])\n\n## The high-level library is enabled unless the build mode is clean.\nif test \"X-$BUILD_MODE\" = \"X-clean\" ; then\n  HDF5_HL=no\nelse\n  HDF5_HL=yes\nfi\n\n## high-level library directories (set when needed, blank until then)\n##\n## main high-level library\nAC_SUBST(HL)\nHL=\"\"\n## Fortran high-level library\nAC_SUBST(HL_FOR)\nHL_FOR=\"\"\n\nAC_MSG_CHECKING([if the high-level library is enabled])\nAC_ARG_ENABLE([hl],\n     [AS_HELP_STRING([--enable-hl],\n                     [Enable the high-level library.\n                     [default=yes (unless build mode = clean)]\n                     ])],\n     [HDF5_HL=$enableval])\n\nif test \"X-$HDF5_HL\" = \"X-yes\"; then\n AC_MSG_RESULT([yes])\n HL=\"hl\"\n AC_DEFINE([INCLUDE_HL], [1],\n           [Define if the high-level library headers should be included in hdf5.h])\nelse\n  AC_MSG_RESULT([no])\nfi\n\n\n## ----------------------------------------------------------------------\n## Check which archiving tool to use. This needs to be done before\n## the AM_PROG_LIBTOOL macro.\n##\nif test -z \"$AR\"; then\n  AC_CHECK_PROGS([AR], [ar xar], [:], [$PATH])\nfi\nAC_SUBST([AR])\n\n# Set the default ar flags to cr\n# The Automake default is to use cru and the 'u' causes ar\n# to emit warnings on some platforms.\nAR_FLAGS=cr\n\n\n## Export the AR macro so that it will be placed in the libtool file\n## correctly.\nexport AR\n\nAC_PROG_MAKE_SET\nAC_PROG_INSTALL\n\n\n## ----------------------------------------------------------------------\n## Set up ${TR} which is used to process the package list for extra\n## debugging output in the C library.\n\nAC_PATH_PROG([TR], [tr])\n\n\n## ----------------------------------------------------------------------\n## Check that time can be used with srcdir.  This is okay on most systems,\n## but seems to cause problems on Cygwin.\n## The solution on Cygwin is not to record execution time for tests.\n##\n## Note: This is still true as of Cygwin 1.7.32 (Aug 2014) on both 32-\n## and 64-bit platforms. Given how long this has been true, it seems\n## unlikely to change, but we should probably re-test this periodically.\n\nAC_MSG_CHECKING([if srcdir= and time commands work together])\n\nAC_SUBST([TIME])\nTIME=time\nTIME_TEST=`foo=\"bar\" ${TIME} echo 'baz' 2> /dev/null | grep baz`\n\nif test \"X${TIME_TEST}\" = \"Xbaz\"; then\n  AC_MSG_RESULT([yes])\nelse\n  AC_MSG_RESULT([no])\n  TIME=\nfi\n\n\n## The following variables are used to distinguish between building a\n## serial and parallel library.\n##\n##    HAVE_PARALLEL    -- defined in H5config.h if we are building\n##               a parallel library even if configure wasn't\n##               able to find some header file or library that\n##               might be required. This is defined if the\n##               user explicitly states\n##               that a parallel library is being built by supplying\n##               the `--enable-parallel' configure switch.\n##\n##    PARALLEL        -- This variable is set to a non-null value if\n##               we're building a parallel version of the library.\n##\n##    RUNSERIAL            -- This is a command which will be prepended to\n##               the executable name to run the executable using\n##               a single process. For serial versions of the\n##               library this will normally be empty. For parallel\n##               versions it might be something like `mpiexec -n 1'.\n##               The value of this variable is substituted in *.in\n##               files.\n##\n##    RUNPARALLEL    -- This is a command which will be prepended to\n##               the executable name to run the executable on\n##               multiple processors. For the serial library the\n##               value will normally be the empty string. For\n##               parallel library it should be something like\n##               \"mpiexec -n \\$\\${NPROCS:=6}\" where NPROCS will\n##               eventually contain the number of processors on which\n##               to run the executable (the double dollarsigns are to\n##               protect the expansion until make executes the\n##               command).  The value of this variable is\n##               substituted in *.in files.\n##\nAC_SUBST([PARALLEL])\nAC_SUBST([RUNSERIAL])\nAC_SUBST([RUNPARALLEL])\nAC_SUBST([TESTPARALLEL])\n\n## ----------------------------------------------------------------------\n## Check if they would like the Java native interface (JNI) compiled\n##\n\n## This needs to be exposed for the library info file even if Java is disabled.\nAC_SUBST([HDF_JAVA])\n\n## Default is no Java\nHDF_JAVA=no\n\nAC_SUBST([H5_CLASSPATH]) H5_CLASSPATH=\"\"\nAC_MSG_CHECKING([if Java JNI interface enabled])\n\nAC_ARG_ENABLE([java],\n              [AS_HELP_STRING([--enable-java],\n                              [Compile the Java JNI interface [default=no]])],\n              [HDF_JAVA=$enableval])\n\nif test \"X$HDF_JAVA\" = \"Xyes\"; then\n  if test \"X${enable_shared}\" != \"Xno\"; then\n    echo \"yes\"\n    if test \"X$CLASSPATH\" = \"X\"; then\n      H5_CLASSPATH=\".:$srcdir/java/lib\"\n    else\n      H5_CLASSPATH=\".:$CLASSPATH:$srcdir/java/lib\"\n    fi\n    ## Checks for programs.\n    AX_JAVA_OPTIONS\n    H5_JAVACFLAGS=$JAVACFLAGS\n    H5_JAVAFLAGS=$JAVAFLAGS\n    AX_PROG_JAVAC\n    AX_PROG_JAVA\n    AX_PROG_JAR\n    AX_PROG_JAVADOC\n    ## Find the include directories needed for building JNI code\n    AX_JNI_INCLUDE_DIR()\n    for JNI_INCLUDE_DIR in $JNI_INCLUDE_DIRS\n    do\n      JNIFLAGS=\"$JNIFLAGS -I$JNI_INCLUDE_DIR\"\n    done\n    ## Find junit for testing the JNI code\n    AX_CHECK_CLASSPATH()\n    CLASSPATH_ENV=$H5_CLASSPATH\n    AX_CHECK_JUNIT()\n    AX_CHECK_JAVA_HOME\n\n    AC_MSG_RESULT([yes])\n  else\n    AC_MSG_ERROR([Java requires shared libraries to be built])\n    HDF_JAVA=\"no\"\n    AC_MSG_RESULT([no])\n  fi\nelse\n  AC_MSG_RESULT([no])\nfi\n\n## ----------------------------------------------------------------------\n## Fortran libraries are not currently supported on Mac. Disable them.\n## (this is overridable with --enable-unsupported).\n##\nAC_SUBST([H5_FORTRAN_SHARED])\nH5_FORTRAN_SHARED=\"no\"\nif test \"X${HDF_FORTRAN}\" = \"Xyes\" && test \"X${enable_shared}\" != \"Xno\"; then\n  AC_MSG_CHECKING([if shared Fortran libraries are supported])\n  H5_FORTRAN_SHARED=\"yes\"\n  ## tell libtool to do the right thing with COMMON symbols, this fixes\n  ## corrupt values with COMMON and EQUIVALENCE when building shared\n  ## Fortran libraries on OSX with gnu and Intel compilers (HDFFV-2772).\n  case \"`uname`\" in\n    Darwin*)\n    H5_LDFLAGS=\"$H5_LDFLAGS -Wl,-commons,use_dylibs\"\n    ;;\n  esac\n\n  ## Report results of check(s)\n\n  if test \"X${H5_FORTRAN_SHARED}\" = \"Xno\"; then\n    AC_MSG_RESULT([no])\n    AC_MSG_WARN([$CHECK_WARN])\n    if test \"X${ALLOW_UNSUPPORTED}\" != \"Xyes\"; then\n      AC_MSG_WARN([Disabling shared Fortran libraries.])\n      AC_MSG_WARN([To override this behavior, please use --enable-unsupported configure option.])\n        if test \"X${enable_static}\" = \"Xno\"; then\n          AC_MSG_ERROR([both static and shared Fortran libraries are disabled])\n        fi\n    else\n      AC_MSG_WARN([Allowing unsupported Fortran shared libraries due to use of --enable-unsupported flag])\n      H5_FORTRAN_SHARED=\"yes\"\n    fi\n  else\n    AC_MSG_RESULT([yes])\n  fi\nfi\n\nAM_CONDITIONAL([FORTRAN_SHARED_CONDITIONAL], [test \"X$H5_FORTRAN_SHARED\" = \"Xyes\"])\n\n## ----------------------------------------------------------------------\n## Check if they would like to disable building tests\n##\n\n## This needs to be exposed for the library info file.\nAC_SUBST([HDF5_TESTS])\n\n## Default is to build tests\nHDF5_TESTS=yes\n\nAC_MSG_CHECKING([if building tests is disabled])\n\nAC_ARG_ENABLE([tests],\n              [AS_HELP_STRING([--enable-tests],\n                              [Compile the HDF5 tests [default=yes]])],\n              [HDF5_TESTS=$enableval])\n\nif test \"X$HDF5_TESTS\" = \"Xno\"; then\n  echo \"Building HDF5 tests is disabled\"\nfi\n\n## ----------------------------------------------------------------------\n## Check if they would like to disable building tools\n##\n\n## This needs to be exposed for the library info file.\nAC_SUBST([HDF5_TOOLS])\n\n## Default is to build tests and tools\nHDF5_TOOLS=yes\n\nAC_MSG_CHECKING([if building tools is disabled])\n\nAC_ARG_ENABLE([tools],\n              [AS_HELP_STRING([--enable-tools],\n                              [Compile the HDF5 tools [default=yes]])],\n              [HDF5_TOOLS=$enableval])\n\nif test \"X$HDF5_TOOLS\" = \"Xno\"; then\n  echo \"Building HDF5 tools is disabled\"\nfi\n\n## ----------------------------------------------------------------------\n## Create libtool.  If shared/static libraries are going to be enabled\n## or disabled, it should happen before these macros.\nLT_PREREQ([2.2])\n\n## ----------------------------------------------------------------------\n## dlopen - This will use an improved version of libtool\n## win32-dll - This will build clean dlls on win32 platforms.\nLT_INIT([dlopen,win32-dll])\n\n## ----------------------------------------------------------------------\n## Check if we should install only statically linked executables.\n##   This check needs to occur after libtool is initialized because\n##   we check a libtool cache value and may issue a warning based\n##   on its result.\nAC_SUBST([STATIC_EXEC])\n\n## Default is no\nSTATIC_EXEC=no\n\nAC_MSG_CHECKING([if we should install only statically linked executables])\nAC_ARG_ENABLE([static_exec],\n              [AS_HELP_STRING([--enable-static-exec],\n                              [Install only statically linked executables\n                               [default=no]])],\n              [STATIC_EXEC=$enableval])\n\nif test \"X$STATIC_EXEC\" = \"Xyes\"; then\n  echo \"yes\"\n  ## Issue a warning if -static flag is not supported.\n  if test \"X$lt_cv_prog_compiler_static_works\" = \"Xno\"; then\n    echo \"    warning: -static flag not supported on this system; executable won't statically link shared system libraries.\"\n    LT_STATIC_EXEC=\"\"\n  else\n    LT_STATIC_EXEC=\"-all-static\"\n  fi\nelse\n  echo \"no\"\n  LT_STATIC_EXEC=\"\"\nfi\nAM_CONDITIONAL([USE_PLUGINS_CONDITIONAL], [test \"X$LT_STATIC_EXEC\" = X])\n\nAC_SUBST([LT_STATIC_EXEC])\n\n## Fix up the INSTALL macro if it's a relative path. We want the\n## full-path to the binary instead.\ncase \"$INSTALL\" in\n  *install-sh*)\n    INSTALL='\\${top_srcdir}/bin/install-sh -c'\n    ;;\nesac\n\n## ----------------------------------------------------------------------\n## Some users have reported problems with libtool's use of '-Wl,-rpath' to\n## link shared libraries in nondefault directories. Allow users to\n## disable embedding the rpath information in the executables and to\n## instead solely rely on the information in LD_LIBRARY_PATH.\nAC_MSG_CHECKING([if -Wl,-rpath should be used to link shared libs in nondefault directories])\nAC_ARG_ENABLE([sharedlib-rpath],\n              [AS_HELP_STRING([--disable-sharedlib-rpath],\n               [Disable use of the '=Wl,-rpath' linker option])],\n              [RPATH=$enableval])\n\ncase \"X-$RPATH\" in\n  X-no)\n    AC_MSG_RESULT([no])\n    runpath_var=\n    hardcode_libdir_flag_spec=\n    hardcode_libdir_flag_spec_ld=\n    hardcode_into_libs=no\n    ;;\n  X-|X-yes)\n    AC_MSG_RESULT([yes])\n    ;;\n  *)\n    AC_MSG_RESULT([error])\n    AC_MSG_ERROR([\\'$enableval\\' is not a valid rpath type])\n    ;;\nesac\n\n## ----------------------------------------------------------------------\n## Check for system libraries. \"dl\" stands for dynamically loaded library\n##\nAC_CHECK_LIB([m], [ceil])\nAC_CHECK_LIB([dl], [dlopen])\n\n## ----------------------------------------------------------------------\n## Check for system header files.\n##\nAC_HEADER_STDC\nAC_HEADER_TIME\n\n## Unix\nAC_CHECK_HEADERS([sys/resource.h sys/time.h unistd.h sys/ioctl.h sys/stat.h])\nAC_CHECK_HEADERS([sys/socket.h sys/types.h sys/file.h])\nAC_CHECK_HEADERS([stddef.h setjmp.h features.h])\nAC_CHECK_HEADERS([dirent.h])\nAC_CHECK_HEADERS([stdint.h], [C9x=yes])\nAC_CHECK_HEADERS([stdbool.h])\n\n## Darwin\nAC_CHECK_HEADERS([mach/mach_time.h])\n## Also need to detect Darwin for pubconf\ncase $host_os in\n  darwin*)\n    AC_DEFINE([HAVE_DARWIN], [1], [Define if Darwin or Mac OS X])\n  ;;\nesac\n\n## Windows\ncase \"`uname`\" in\n  CYGWIN*)\n    AC_CHECK_HEADERS([io.h sys/timeb.h])\n    UNAME_CYGWIN=\"yes\"\n    ;;\n  MINGW*)\n    AC_CHECK_HEADERS([io.h winsock2.h sys/timeb.h])\n    AC_HAVE_LIBRARY([ws2_32])\n    ;;\n  *)\n    AC_CHECK_HEADERS([io.h winsock2.h sys/timeb.h])\n    ;;\nesac\n\n## ----------------------------------------------------------------------\n## Some platforms require that all symbols are resolved when a library\n## is linked. We can use the -no-undefined flag to tell libtool that\n## it will be able to build shared libraries on these architectures,\n## as it will not do so by default.\n##\nif test \"X${enable_shared}\" = \"Xyes\"; then\n  AC_MSG_CHECKING([if libtool needs -no-undefined flag to build shared libraries])\n  case \"`uname`\" in\n    CYGWIN*|MINGW*|AIX*)\n      ## Add in the -no-undefined flag to LDFLAGS for libtool.\n      AC_MSG_RESULT([yes])\n      H5_LDFLAGS=\"$H5_LDFLAGS -no-undefined\"\n      ;;\n    *)\n      ## Don't add in anything.\n      AC_MSG_RESULT([no])\n      ;;\n  esac\nfi\n\n## ----------------------------------------------------------------------\n## Use the macro _AC_SYS_LARGEFILE_MACRO_VALUE to test defines\n## that might need to be set for largefile support to behave\n## correctly. This macro is defined in acsite.m4 and overrides\n## the version provided by Autoconf (as of v2.65). The custom\n## macro additionally adds the appropriate defines to AM_CPPFLAGS\n## so that later configure checks have them visible.\n\n## Check for _FILE_OFFSET_BITS\n_AC_SYS_LARGEFILE_MACRO_VALUE([_FILE_OFFSET_BITS], [64],\n  [ac_cv_sys_file_offset_bits],\n  [Number of bits in a file offset, on hosts where this is settable.],\n  [_AC_SYS_LARGEFILE_TEST_INCLUDES])\n\n## Check for _LARGE_FILES\nif test \"$ac_cv_sys_file_offset_bits\" = unknown; then\n  _AC_SYS_LARGEFILE_MACRO_VALUE([_LARGE_FILES], [1],\n    [ac_cv_sys_large_files],\n    [Define for large files, on AIX-style hosts.],\n    [_AC_SYS_LARGEFILE_TEST_INCLUDES])\nfi\n\n## ----------------------------------------------------------------------\n## Add necessary defines for Linux Systems.\n##\ncase \"$host_cpu-$host_vendor-$host_os\" in\n  *linux*)\n    ## Add POSIX support on Linux systems, so <features.h> defines\n    ## __USE_POSIX, which is required to get the prototype for fdopen\n    ## defined correctly in <stdio.h>.\n    ##\n    ## This flag was removed from h5cc as of 2009-10-17 when it was found\n    ## that the flag broke compiling netCDF-4 code with h5cc, but kept in\n    ## H5_CPPFLAGS because fdopen and HDfdopen fail without it. HDfdopen\n    ## is used only by H5_debug_mask which is used only when debugging in\n    ## H5_init_library (all in H5.c).  When the flag was removed this was\n    ## the only compile failure noted.\n    ##\n    ## This was originally defined as _POSIX_SOURCE which was updated to\n    ## _POSIX_C_SOURCE=199506L to expose a greater amount of POSIX\n    ## functionality so clock_gettime and CLOCK_MONOTONIC are defined\n    ## correctly. This was later updated to 200112L so that\n    ## posix_memalign() is visible for the direct VFD code on Linux\n    ## systems. Even later, this was changed to 200809L to support\n    ## pread/pwrite in VFDs.\n    ##\n    ## POSIX feature information can be found in the gcc manual at:\n    ## http://www.gnu.org/s/libc/manual/html_node/Feature-Test-Macros.html\n    H5_CPPFLAGS=\"-D_POSIX_C_SOURCE=200809L $H5_CPPFLAGS\"\n\n    ## Need to add this so that O_DIRECT is visible for the direct\n    ## VFD on Linux systems.\n    H5_CPPFLAGS=\"-D_GNU_SOURCE $H5_CPPFLAGS\"\n    ;;\nesac\n\n## Need to add the AM_ and H5_ into CFLAGS/CPPFLAGS to make them visible\n## for configure checks.\n## Note: Both will be restored by the end of configure.\nCPPFLAGS=\"$H5_CPPFLAGS $AM_CPPFLAGS $CPPFLAGS\"\nCFLAGS=\"$H5_CFLAGS $AM_CFLAGS $CFLAGS\"\n\n## Checkpoint the cache\nAC_CACHE_SAVE\n\n## Posix.1g types (C9x)\ncat >>confdefs.h <<\\EOF\n#include <sys/types.h>\nEOF\n\nif test \"X$C9x\" = \"Xyes\"; then\n  cat >>confdefs.h <<\\EOF\n#include <stdint.h>\nEOF\nfi\n\nAC_CHECK_SIZEOF(        [int8_t])\nAC_CHECK_SIZEOF(       [uint8_t])\nAC_CHECK_SIZEOF(  [int_least8_t])\nAC_CHECK_SIZEOF( [uint_least8_t])\nAC_CHECK_SIZEOF(   [int_fast8_t])\nAC_CHECK_SIZEOF(  [uint_fast8_t])\n\nAC_CHECK_SIZEOF(       [int16_t])\nAC_CHECK_SIZEOF(      [uint16_t])\nAC_CHECK_SIZEOF( [int_least16_t])\nAC_CHECK_SIZEOF([uint_least16_t])\nAC_CHECK_SIZEOF(  [int_fast16_t])\nAC_CHECK_SIZEOF( [uint_fast16_t])\n\nAC_CHECK_SIZEOF(       [int32_t])\nAC_CHECK_SIZEOF(      [uint32_t])\nAC_CHECK_SIZEOF( [int_least32_t])\nAC_CHECK_SIZEOF([uint_least32_t])\nAC_CHECK_SIZEOF(  [int_fast32_t])\nAC_CHECK_SIZEOF( [uint_fast32_t])\n\nAC_CHECK_SIZEOF(       [int64_t])\nAC_CHECK_SIZEOF(      [uint64_t])\nAC_CHECK_SIZEOF( [int_least64_t])\nAC_CHECK_SIZEOF([uint_least64_t])\nAC_CHECK_SIZEOF(  [int_fast64_t])\nAC_CHECK_SIZEOF( [uint_fast64_t])\n\nAC_CHECK_SIZEOF([size_t])\nAC_CHECK_SIZEOF([ssize_t])\nAC_CHECK_SIZEOF([ptrdiff_t])\n\ncat >>confdefs.h <<\\EOF\n#include <sys/types.h> /*for off_t definition*/\nEOF\nAC_CHECK_SIZEOF([off_t])\n\nif test \"X$C9x\" = \"Xyes\"; then\n  cat >>confdefs.h <<\\EOF\n#ifdef HAVE_STDBOOL_H\n#include <stdbool.h> /* for bool definition */\n#else\n#define bool _Bool\n#endif\nEOF\nAC_CHECK_SIZEOF([bool])\nfi\n\nAC_CHECK_SIZEOF(time_t, [], [\n#ifdef HAVE_SYS_TYPES_H\n#include <sys/types.h>\n#endif\n#ifdef HAVE_TIME_H\n#include <time.h>\n#endif\n])\n\n## Checkpoint the cache\nAC_CACHE_SAVE\n\n## ----------------------------------------------------------------------\n## Check if the dev_t type is a scalar type (must come after the check for\n## sys/types.h)\nAC_MSG_CHECKING([if dev_t is scalar])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n#ifdef HAVE_SYS_TYPES_H\n#include <sys/types.h>\n#endif\n  ]],\n  [[dev_t d1, d2; if(d1==d2) return 0;]])],\n  [AC_DEFINE([DEV_T_IS_SCALAR], [1],\n            [Define if dev_t is a scalar])\n  AC_MSG_RESULT([yes])],\n  [AC_MSG_RESULT([no])])\n\n## ----------------------------------------------------------------------\n## Fake --with-xxx option to allow us to create a help message for the\n## following --with-xxx options which can take either a =DIR or =INC,LIB\n## specifier.\n##\nAC_ARG_WITH([fnord],\n  [\n For the following --with-xxx options, you can specify where the header\n files and libraries are in two different ways:\n\n    --with-xxx=INC,LIB - Specify individually the include directory and\n                         library directory separated by a comma\n    --with-xxx=DIR     - Specify only the directory which contains the\n                         include/ and lib/ subdirectories\n  ])\n\n## ----------------------------------------------------------------------\n## Is dmalloc (debug malloc library) requested? It has a header file\n## `dmalloc.h' and a library `-ldmalloc' and their locations might be\n## specified with the `--with-dmalloc' command-line switch. The value\n## is an include path and/or a library path. If the library path is\n## specified then it must be preceded by a comma.\n##\nAC_SUBST([HAVE_DMALLOC])\n\n## Default is not present\nHAVE_DMALLOC=no\n\nAC_ARG_WITH([dmalloc],\n            [AS_HELP_STRING([--with-dmalloc=DIR],\n                            [Use dmalloc memory debugging aid [default=no]])],,\n            [withval=no])\n\ncase \"X-$withval\" in\n  X-yes)\n    HAVE_DMALLOC=\"yes\"\n    AC_CHECK_HEADERS([dmalloc.h],, [unset HAVE_DMALLOC])\n    if test \"x$HAVE_DMALLOC\" = \"xyes\"; then\n      AC_CHECK_LIB([dmalloc], [dmalloc_shutdown],, [unset HAVE_DMALLOC])\n    fi\n    if test -z \"$HAVE_DMALLOC\" -a -n \"$HDF5_CONFIG_ABORT\"; then\n      AC_MSG_ERROR([couldn't find dmalloc library])\n    fi\n    ;;\n  X-|X-no|X-none)\n    HAVE_DMALLOC=\"no\"\n    AC_MSG_CHECKING([for dmalloc library])\n    AC_MSG_RESULT([suppressed])\n    ;;\n  *)\n    HAVE_DMALLOC=\"yes\"\n    case \"$withval\" in\n      *,*)\n        dmalloc_inc=\"`echo $withval |cut -f1 -d,`\"\n        dmalloc_lib=\"`echo $withval |cut -f2 -d, -s`\"\n        ;;\n      *)\n        if test -n \"$withval\"; then\n          dmalloc_inc=\"$withval/include\"\n          dmalloc_lib=\"$withval/lib\"\n        fi\n        ;;\n    esac\n\n    saved_CPPFLAGS=\"$CPPFLAGS\"\n    saved_AM_CPPFLAGS=\"$AM_CPPFLAGS\"\n    saved_LDFLAGS=\"$LDFLAGS\"\n    saved_AM_LDFLAGS=\"$AM_LDFLAGS\"\n\n    if test -n \"$dmalloc_inc\"; then\n      CPPFLAGS=\"$CPPFLAGS -I$dmalloc_inc\"\n      AM_CPPFLAGS=\"$AM_CPPFLAGS -I$dmalloc_inc\"\n    fi\n\n    AC_CHECK_HEADERS([dmalloc.h],,[CPPFLAGS=\"$saved_CPPFLAGS\"; AM_CPPFLAGS=\"$saved_AM_CPPFLAGS\"] [unset HAVE_DMALLOC])\n\n    if test \"x$HAVE_DMALLOC\" = \"xyes\"; then\n      if test -n \"$dmalloc_lib\"; then\n        LDFLAGS=\"$LDFLAGS -L$dmalloc_lib\"\n        AM_LDFLAGS=\"$AM_LDFLAGS -L$dmalloc_lib\"\n      fi\n\n      AC_CHECK_LIB([dmalloc], [dmalloc_shutdown],, [LDFLAGS=\"$saved_LDFLAGS\"; AM_LDFLAGS=\"$saved_AM_LDFLAGS\"; unset HAVE_DMALLOC])\n    fi\n\n    if test -z \"$HAVE_DMALLOC\" -a -n \"$HDF5_CONFIG_ABORT\"; then\n      AC_MSG_ERROR([couldn't find dmalloc library])\n    fi\n    ;;\nesac\n\n## ----------------------------------------------------------------------\n## Make the external filters list available to *.in files\n## At this point it's unset (no external filters by default) but it\n## will be filled in during the deflate (zlib) and szip processing\n## below.\n##\nAC_SUBST([EXTERNAL_FILTERS])\n\n## ----------------------------------------------------------------------\n## Is the GNU zlib present? It has a header file `zlib.h' and a library\n## `-lz' and their locations might be specified with the `--with-zlib'\n## command-line switch. The value is an include path and/or a library path.\n## If the library path is specified then it must be preceded by a comma.\n##\nAC_SUBST([USE_FILTER_DEFLATE]) USE_FILTER_DEFLATE=\"no\"\nAC_ARG_WITH([zlib],\n            [AS_HELP_STRING([--with-zlib=DIR],\n                            [Use zlib library for external deflate I/O\n                             filter [default=yes]])],,\n            [withval=yes])\n\ncase \"X-$withval\" in\n  X-yes)\n    HAVE_ZLIB=\"yes\"\n    AC_CHECK_HEADERS([zlib.h], [HAVE_ZLIB_H=\"yes\"], [unset HAVE_ZLIB])\n    if test \"x$HAVE_ZLIB\" = \"xyes\" -a \"x$HAVE_ZLIB_H\" = \"xyes\"; then\n      AC_CHECK_LIB([z], [compress2],, [unset HAVE_ZLIB])\n    fi\n    if test -z \"$HAVE_ZLIB\"; then\n      if test -n \"$HDF5_CONFIG_ABORT\"; then\n        AC_MSG_ERROR([couldn't find zlib library])\n      fi\n    else\n      AC_CHECK_FUNC([compress2], [HAVE_COMPRESS2=\"yes\"])\n    fi\n    ;;\n  X-|X-no|X-none)\n    HAVE_ZLIB=\"no\"\n    AC_MSG_CHECKING([for zlib])\n    AC_MSG_RESULT([suppressed])\n    ;;\n  *)\n    HAVE_ZLIB=\"yes\"\n    case \"$withval\" in\n      *,*)\n        zlib_inc=\"`echo $withval | cut -f1 -d,`\"\n        zlib_lib=\"`echo $withval | cut -f2 -d, -s`\"\n        ;;\n      *)\n        if test -n \"$withval\"; then\n          zlib_inc=\"$withval/include\"\n          zlib_lib=\"$withval/lib\"\n        fi\n        ;;\n    esac\n\n    saved_CPPFLAGS=\"$CPPFLAGS\"\n    saved_AM_CPPFLAGS=\"$AM_CPPFLAGS\"\n    saved_LDFLAGS=\"$LDFLAGS\"\n    saved_AM_LDFLAGS=\"$AM_LDFLAGS\"\n\n    if test -n \"$zlib_inc\"; then\n      CPPFLAGS=\"$CPPFLAGS -I$zlib_inc\"\n      AM_CPPFLAGS=\"$AM_CPPFLAGS -I$zlib_inc\"\n    fi\n\n    AC_CHECK_HEADERS([zlib.h],\n                     [HAVE_ZLIB_H=\"yes\"],\n                     [CPPFLAGS=\"$saved_CPPFLAGS\"; AM_CPPFLAGS=\"$saved_AM_CPPFLAGS\"] [unset HAVE_ZLIB])\n\n    if test -n \"$zlib_lib\"; then\n      LDFLAGS=\"$LDFLAGS -L$zlib_lib\"\n      AM_LDFLAGS=\"$AM_LDFLAGS -L$zlib_lib\"\n    fi\n\n    if test \"x$HAVE_ZLIB\" = \"xyes\" -a \"x$HAVE_ZLIB_H\" = \"xyes\"; then\n      AC_CHECK_LIB([z], [compress2],,\n                   [LDFLAGS=\"$saved_LDFLAGS\"; AM_LDFLAGS=\"$saved_AM_LDFLAGS\"; unset HAVE_ZLIB])\n    fi\n\n    if test -z \"$HAVE_ZLIB\"; then\n      if test -n \"$HDF5_CONFIG_ABORT\"; then\n        AC_MSG_ERROR([couldn't find zlib library])\n      fi\n    else\n      AC_CHECK_FUNC([compress2], [HAVE_COMPRESS2=\"yes\"])\n    fi\n    ;;\nesac\n\nif test \"x$HAVE_ZLIB\" = \"xyes\" -a \"x$HAVE_ZLIB_H\" = \"xyes\" -a \"x$HAVE_COMPRESS2\" = \"xyes\"; then\n  AC_DEFINE([HAVE_FILTER_DEFLATE], [1], [Define if support for deflate (zlib) filter is enabled])\n  USE_FILTER_DEFLATE=\"yes\"\n\n  ## Add \"deflate\" to external filter list\n  if test \"X$EXTERNAL_FILTERS\" != \"X\"; then\n    EXTERNAL_FILTERS=\"${EXTERNAL_FILTERS},\"\n  fi\n    EXTERNAL_FILTERS=\"${EXTERNAL_FILTERS}deflate(zlib)\"\nfi\n\n\n## ----------------------------------------------------------------------\n## Is the szlib present? It has a header file `szlib.h' and a library\n## `-lsz' and their locations might be specified with the `--with-szlib'\n## command-line switch. The value is an include path and/or a library path.\n## If the library path is specified then it must be preceded by a comma.\n##\nAC_SUBST([USE_FILTER_SZIP]) USE_FILTER_SZIP=\"no\"\nAC_ARG_WITH([szlib],\n            [AS_HELP_STRING([--with-szlib=DIR],\n                            [Use szlib library for external szlib I/O\n                             filter [default=no]])],,\n            [withval=no])\n\ncase \"X-$withval\" in\n  X-yes)\n    HAVE_SZLIB=\"yes\"\n    AC_CHECK_HEADERS([szlib.h], [HAVE_SZLIB_H=\"yes\"], [unset HAVE_SZLIB])\n    if test \"x$HAVE_SZLIB\" = \"xyes\" -a \"x$HAVE_SZLIB_H\" = \"xyes\"; then\n      AC_CHECK_LIB([sz], [SZ_BufftoBuffCompress],, [unset HAVE_SZLIB])\n    fi\n    if test -z \"$HAVE_SZLIB\" -a -n \"$HDF5_CONFIG_ABORT\"; then\n      AC_MSG_ERROR([couldn't find szlib library])\n    fi\n    ;;\n  X-|X-no|X-none)\n    HAVE_SZLIB=\"no\"\n    AC_MSG_CHECKING([for szlib])\n    AC_MSG_RESULT([suppressed])\n    ;;\n  *)\n    HAVE_SZLIB=\"yes\"\n    case \"$withval\" in\n      *,*)\n        szlib_inc=\"`echo $withval |cut -f1 -d,`\"\n        szlib_lib=\"`echo $withval |cut -f2 -d, -s`\"\n        ;;\n      *)\n        if test -n \"$withval\"; then\n          szlib_inc=\"$withval/include\"\n          szlib_lib=\"$withval/lib\"\n        fi\n        ;;\n    esac\n\n    saved_CPPFLAGS=\"$CPPFLAGS\"\n    saved_AM_CPPFLAGS=\"$AM_CPPFLAGS\"\n    saved_LDFLAGS=\"$LDFLAGS\"\n    saved_AM_LDFLAGS=\"$AM_LDFLAGS\"\n\n    if test -n \"$szlib_inc\"; then\n      CPPFLAGS=\"$CPPFLAGS -I$szlib_inc\"\n      AM_CPPFLAGS=\"$AM_CPPFLAGS -I$szlib_inc\"\n    fi\n\n    AC_CHECK_HEADERS([szlib.h],\n                     [HAVE_SZLIB_H=\"yes\"],\n                     [CPPFLAGS=\"$saved_CPPFLAGS\"; AM_CPPFLAGS=\"$saved_AM_CPPFLAGS\"] [unset HAVE_SZLIB])\n\n    if test -n \"$szlib_lib\"; then\n      LDFLAGS=\"$LDFLAGS -L$szlib_lib\"\n      AM_LDFLAGS=\"$AM_LDFLAGS -L$szlib_lib\"\n    fi\n\n    if test \"x$HAVE_SZLIB\" = \"xyes\" -a \"x$HAVE_SZLIB_H\" = \"xyes\"; then\n      AC_CHECK_LIB([sz], [SZ_BufftoBuffCompress],,\n                   [LDFLAGS=\"$saved_LDFLAGS\"; AM_LDFLAGS=\"$saved_AM_LDFLAGS\"; unset HAVE_SZLIB])\n    fi\n\n    if test -z \"$HAVE_SZLIB\" -a -n \"$HDF5_CONFIG_ABORT\"; then\n      AC_MSG_ERROR([couldn't find szlib library])\n    fi\n    ;;\nesac\n\nif test \"x$HAVE_SZLIB\" = \"xyes\" -a \"x$HAVE_SZLIB_H\" = \"xyes\"; then\n  ## SZLIB library is available.  Check if it can encode\n  AC_MSG_CHECKING([for szlib encoder])\n\n  ## Set LD_LIBRARY_PATH so encoder test can find the library and run.\n  ## Also add LL_PATH substitution to Makefiles so they can use the\n  ## path as well, for testing examples.\n  if test -z \"$LD_LIBRARY_PATH\"; then\n    export LD_LIBRARY_PATH=\"$szlib_lib\"\n  else\n    export LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:$szlib_lib\"\n  fi\n\n  AC_SUBST([LL_PATH]) LL_PATH=\"$LD_LIBRARY_PATH\"\n\n  AC_CACHE_VAL([hdf5_cv_szlib_can_encode],\n        [AC_RUN_IFELSE(\n            [AC_LANG_PROGRAM([\n                #include \"szlib.h\"\n            ],[[\n                /* SZ_encoder_enabled returns 1 if encoder is present */\n                if(SZ_encoder_enabled() == 1)\n                    exit(0);\n                else\n                    exit(1);\n            ]])]\n        , [hdf5_cv_szlib_can_encode=yes], [hdf5_cv_szlib_can_encode=no],)]\n   )\n\n  AC_DEFINE([HAVE_FILTER_SZIP], [1],\n            [Define if support for szip filter is enabled])\n  USE_FILTER_SZIP=\"yes\"\n\n  if test ${hdf5_cv_szlib_can_encode} = \"yes\"; then\n    AC_MSG_RESULT([yes])\n  fi\n  if test ${hdf5_cv_szlib_can_encode} = \"no\"; then\n    AC_MSG_RESULT([no])\n  fi\n\n  ## Add \"szip\" to external filter list\n  if test ${hdf5_cv_szlib_can_encode} = \"yes\"; then\n    if test \"X$EXTERNAL_FILTERS\" != \"X\"; then\n      EXTERNAL_FILTERS=\"${EXTERNAL_FILTERS},\"\n    fi\n      EXTERNAL_FILTERS=\"${EXTERNAL_FILTERS}szip(encoder)\"\n  fi\n  if test ${hdf5_cv_szlib_can_encode} = \"no\"; then\n    if test \"X$EXTERNAL_FILTERS\" != \"X\"; then\n      EXTERNAL_FILTERS=\"${EXTERNAL_FILTERS},\"\n    fi\n      EXTERNAL_FILTERS=\"${EXTERNAL_FILTERS}szip(no encoder)\"\n  fi\nfi\n\nAM_CONDITIONAL([BUILD_SHARED_SZIP_CONDITIONAL], [test \"X$USE_FILTER_SZIP\" = \"Xyes\" && test \"X$LL_PATH\" != \"X\"])\n\n## Checkpoint the cache\nAC_CACHE_SAVE\n\n## ----------------------------------------------------------------------\n## Enable thread-safe version of library.  It requires Pthreads support\n## on POSIX systems.\n##\nAC_SUBST([THREADSAFE])\n\n## Default is no thread-safety\nTHREADSAFE=no\n\nAC_MSG_CHECKING([for thread safe support])\nAC_ARG_ENABLE([threadsafe],\n              [AS_HELP_STRING([--enable-threadsafe],\n                              [Enable thread-safe capability. Not compatible with the high-level library, Fortran, or C++ wrappers.\n                              [default=no]])],\n              [THREADSAFE=$enableval])\n\n## The high-level, C++, Fortran and Java interfaces are not compatible\n## with the thread-safety option because the lock is not hoisted\n## into the higher-level API calls.\n\n## --enable-threadsafe is incompatible with --enable-hl unless\n## --enable-unsupported has been specified on the configure line.\n##\n## Note that the high-level library is enabled by default so most\n## users will have to add --disable-hl to the configure options.\nif test \"X${ALLOW_UNSUPPORTED}\" != \"Xyes\"; then\n  if test \"X${HDF5_HL}\" = \"Xyes\" -a \"X${enable_threadsafe}\" = \"Xyes\"; then\n    AC_MSG_ERROR([The thread-safe library is incompatible with the high-level library. --disable-hl can be used to prevent building the high-level library (recommended). Alternatively, --enable-unsupported will allow building the high-level library, though this configuration is not supported by The HDF Group.])\n  fi\nfi\n\n## The --enable-threadsafe flag is not compatible with --enable-cxx.\n## If the user tried to specify both flags, throw an error, unless\n## they also provided the --enable-unsupported flag.\nif test \"X${ALLOW_UNSUPPORTED}\" != \"Xyes\"; then\n  if test \"X${HDF_CXX}\" = \"Xyes\" -a \"X${enable_threadsafe}\" = \"Xyes\"; then\n    AC_MSG_ERROR([--enable-cxx and --enable-threadsafe flags are incompatible. Use --enable-unsupported to override this error.])\n  fi\nfi\n\n## --enable-threadsafe is also incompatible with --enable-fortran unless\n## --enable-unsupported has been specified on the configure line.\nif test \"X${ALLOW_UNSUPPORTED}\" != \"Xyes\"; then\n  if test \"X${HDF_FORTRAN}\" = \"Xyes\" -a \"X${enable_threadsafe}\" = \"Xyes\"; then\n    AC_MSG_ERROR([--enable-fortran and --enable-threadsafe flags are incompatible. Use --enable-unsupported to override this error.])\n  fi\nfi\n\n## --enable-threadsafe is also incompatible with --enable-java unless\n## --enable-unsupported has been specified on the configure line.\nif test \"X${ALLOW_UNSUPPORTED}\" != \"Xyes\"; then\n  if test \"X${HDF_JAVA}\" = \"Xyes\" -a \"X${enable_threadsafe}\" = \"Xyes\"; then\n    AC_MSG_ERROR([--enable-java and --enable-threadsafe flags are incompatible. Use --enable-unsupported to override this error.])\n  fi\nfi\n\n\ncase \"X-$THREADSAFE\" in\n  X-|X-no)\n    AC_MSG_RESULT([no])\n    ;;\n  X-yes)\n    THREADSAFE=yes\n    AC_MSG_RESULT([yes])\n    ;;\n  *)\n    AC_MSG_RESULT([error])\n    AC_MSG_ERROR([\\'$enableval\\' is not a valid threadsafe type])\n    ;;\nesac\n\nif test \"X$THREADSAFE\" = \"Xyes\"; then\n    AC_DEFINE([HAVE_THREADSAFE], [1], [Define if we have thread safe support])\n\n    ## ----------------------------------------------------------------------\n    ## Is the Pthreads library present?  It has a header file `pthread.h' and\n    ## a library `-lpthread' and their locations might be specified with the\n    ## `--with-pthread' command-line switch.  The value is an include path\n    ## and/or a library path.  If the library path is specified then it must\n    ## be preceded by a comma.\n    ##\n    ## Thread-safety in HDF5 only uses Pthreads via configure, so the\n    ## default is \"check\", though this only has an effect when\n    ## --enable-threadsafe is specified.\n    AC_SUBST([HAVE_PTHREAD]) HAVE_PTHREAD=yes\n    AC_ARG_WITH([pthread],\n                [AS_HELP_STRING([--with-pthread=DIR],\n                                [Specify alternative path to Pthreads library when\n                                thread-safe capability is built.])],,\n                [withval=check])\n\n    case \"$withval\" in\n      check | yes)\n        AC_CHECK_HEADERS([pthread.h],, [unset HAVE_PTHREAD])\n        if test \"x$HAVE_PTHREAD\" = \"xyes\"; then\n          AC_CHECK_LIB([pthread], [pthread_self],, [unset HAVE_PTHREAD])\n        fi\n        ;;\n      no)\n        AC_MSG_ERROR([Must use Pthreads with thread safety])\n        ;;\n      *)\n        case \"$withval\" in\n          *,*)\n            pthread_inc=\"`echo $withval | cut -f1 -d,`\"\n            pthread_lib=\"`echo $withval | cut -f2 -d, -s`\"\n            ;;\n          *)\n            if test -n \"$withval\"; then\n              pthread_inc=\"$withval/include\"\n              pthread_lib=\"$withval/lib\"\n            fi\n            ;;\n        esac\n\n        if test -n \"$pthread_inc\"; then\n          saved_CPPFLAGS=\"$CPPFLAGS\"\n          saved_AM_CPPFLAGS=\"$AM_CPPFLAGS\"\n          CPPFLAGS=\"$CPPFLAGS -I$pthread_inc\"\n          AM_CPPFLAGS=\"$AM_CPPFLAGS -I$pthread_inc\"\n          AC_CHECK_HEADERS([pthread.h],, [CPPFLAGS=\"$saved_CPPFLAGS\"; AM_CPPFLAGS=\"$saved_AM_CPPFLAGS\"; unset HAVE_PTHREAD])\n        else\n          AC_CHECK_HEADERS([pthread.h],, [unset HAVE_PTHREAD])\n        fi\n\n        if test \"x$HAVE_PTHREAD\" = \"xyes\"; then\n          if test -n \"$pthread_lib\"; then\n            saved_LDFLAGS=\"$LDFLAGS\"\n            saved_AM_LDFLAGS=\"$AM_LDFLAGS\"\n            LDFLAGS=\"$LDFLAGS -L$pthread_lib\"\n            AM_LDFLAGS=\"$AM_LDFLAGS -L$pthread_lib\"\n            AC_CHECK_LIB([pthread], [pthread_self],,\n                         [LDFLAGS=\"$saved_LDFLAGS\"; AM_LDFLAGS=\"$saved_AM_LDFLAGS\"; unset HAVE_PTHREAD])\n          else\n            AC_CHECK_LIB([pthread], [pthread_self],, [unset HAVE_PTHREAD])\n          fi\n        fi\n        ;;\n    esac\n\n    ## ----------------------------------------------------------------------\n    ## Check if pthread_attr_setscope(&attribute, PTHREAD_SCOPE_SYSTEM)\n    ## is supported on this system\n    ##\n    ## Unfortunately, this probably needs to be an AC_RUN_IFELSE since\n    ## it's impossible to determine if PTHREAD_SCOPE_SYSTEM is\n    ## supported a priori. POSIX.1-2001 requires that a conformant\n    ## system need only support one of SYSTEM or PROCESS scopes.\n    ##\n    ## For cross-compiling, we've added a pessimistic 'no'. You can\n    ## hand-hack the config file if you know otherwise.\n    AC_MSG_CHECKING([Pthreads supports system scope])\n    AC_CACHE_VAL([hdf5_cv_system_scope_threads],\n      [AC_RUN_IFELSE(\n        [AC_LANG_PROGRAM([\n            #if STDC_HEADERS\n            #include <stdlib.h>\n            #include <pthread.h>\n            #endif\n        ],[\n              pthread_attr_t attribute;\n              int ret;\n\n              pthread_attr_init(&attribute);\n              ret=pthread_attr_setscope(&attribute, PTHREAD_SCOPE_SYSTEM);\n              exit(ret==0 ? 0 : 1);\n        ])]\n      , [hdf5_cv_system_scope_threads=yes], [hdf5_cv_system_scope_threads=no], [hdf5_cv_system_scope_threads=no])])\n\n    if test ${hdf5_cv_system_scope_threads} = \"yes\"; then\n      AC_DEFINE([SYSTEM_SCOPE_THREADS], [1],\n                [Define if your system supports pthread_attr_setscope(&attribute, PTHREAD_SCOPE_SYSTEM) call.])\n      AC_MSG_RESULT([yes])\n    else\n      AC_MSG_RESULT([no])\n      AC_MSG_NOTICE([Always 'no' if cross-compiling. Edit the config file if your platform supports pthread_attr_setscope(&attribute, PTHREAD_SCOPE_SYSTEM).])\n    fi\nfi\n\n## ----------------------------------------------------------------------\n## Check for MONOTONIC_TIMER support (used in clock_gettime).  This has\n## to be done after any POSIX defines to ensure that the test gets\n## the correct POSIX level on linux.\nAC_CHECK_DECL([CLOCK_MONOTONIC],[have_clock_monotonic=\"yes\"],[have_clock_monotonic=\"no\"],[[#include <time.h>]])\n\n## ----------------------------------------------------------------------\n## How does one figure out the local time zone?  Anyone know of a\n## Posix way to do this?\n##\n\n## First check if `struct tm' has a `tm_gmtoff' member.\nAC_MSG_CHECKING([for tm_gmtoff in struct tm])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n  #include <sys/time.h>\n  #include <time.h>\n]], [[struct tm tm; tm.tm_gmtoff=0;]])],\n  [AC_DEFINE([HAVE_TM_GMTOFF], [1],\n          [Define if tm_gmtoff is a member of struct tm])\n    AC_MSG_RESULT([yes])],\n  [AC_MSG_RESULT([no])])\n\n## Check whether the global variable `timezone' is defined.\nAC_MSG_CHECKING([for global timezone variable])\n\ncase \"`uname`\" in\n  CYGWIN*)\n    AC_MSG_RESULT([disabled in CYGWIN])\n    ;;\n  *)\n    AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n    #include <sys/time.h>\n    #include <time.h>]], [[timezone=0;]])],\n    [AC_DEFINE([HAVE_TIMEZONE], [1],\n              [Define if timezone is a global variable])\n      AC_MSG_RESULT([yes])],\n    [AC_MSG_RESULT([no])])\n    ;;\nesac\n\n\n## ----------------------------------------------------------------------\n## Does the struct stat have the st_blocks field?  This field is not Posix.\n##\nAC_MSG_CHECKING([for st_blocks in struct stat])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM[[\n  #include <sys/stat.h>]],[[struct stat sb; sb.st_blocks=0;]])],\n  [AC_DEFINE([HAVE_STAT_ST_BLOCKS], [1],\n          [Define if struct stat has the st_blocks field])\n    AC_MSG_RESULT([yes])],\n  [AC_MSG_RESULT([no])])\n\n## ----------------------------------------------------------------------\n## How do we figure out the width of a tty in characters?\n##\nAC_CHECK_FUNCS([_getvideoconfig gettextinfo])\ncase \"`uname`\" in\n  CYGWIN*)\n    ;;\n  *)\n    AC_CHECK_FUNCS([GetConsoleScreenBufferInfo getpwuid])\n    ;;\nesac\nAC_CHECK_FUNCS([_scrsize ioctl])\n\nAC_MSG_CHECKING([for struct videoconfig])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]],[[struct videoconfig w; w.numtextcols=0;]])],\n  [AC_DEFINE([HAVE_STRUCT_VIDEOCONFIG], [1],\n          [Define if struct videoconfig is defined])\n    AC_MSG_RESULT([yes])],\n  [AC_MSG_RESULT([no])])\n\nAC_MSG_CHECKING([for struct text_info])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]], [[struct text_info w; w.screenwidth=0;]])],\n  [AC_DEFINE([HAVE_STRUCT_TEXT_INFO], [1],\n          [Define if struct text_info is defined])\n    AC_MSG_RESULT([yes])],\n  [AC_MSG_RESULT([no])])\n\nAC_MSG_CHECKING([for TIOCGWINSZ])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n#include <sys/ioctl.h>\n]],[[int w=TIOCGWINSZ;]])],\n  [AC_DEFINE([HAVE_TIOCGWINSZ], [1],\n          [Define if the ioctl TIOGWINSZ is defined])\n    AC_MSG_RESULT([yes])],\n  [AC_MSG_RESULT([no])])\n\nAC_MSG_CHECKING([for TIOCGETD])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n#include <sys/ioctl.h>\n]],[[int w=TIOCGETD;]])],\n  [AC_DEFINE([HAVE_TIOCGETD], [1],\n          [Define if the ioctl TIOCGETD is defined])\n    AC_MSG_RESULT([yes])],\n  [AC_MSG_RESULT([no])])\n\n\n## ----------------------------------------------------------------------\n## Check for functions.\n##\n## NOTE: clock_gettime may require linking to the rt or posix4 library\n##       so we'll search for it before calling AC_CHECK_FUNCS.\nAC_SEARCH_LIBS([clock_gettime], [rt posix4])\nAC_CHECK_FUNCS([alarm clock_gettime difftime fcntl flock fork frexpf])\nAC_CHECK_FUNCS([frexpl gethostname getrusage gettimeofday])\nAC_CHECK_FUNCS([lstat rand_r random setsysinfo])\nAC_CHECK_FUNCS([signal longjmp setjmp siglongjmp sigsetjmp sigprocmask])\nAC_CHECK_FUNCS([snprintf srandom strdup symlink system])\nAC_CHECK_FUNCS([strtoll strtoull])\nAC_CHECK_FUNCS([tmpfile asprintf vasprintf vsnprintf waitpid])\nAC_CHECK_FUNCS([roundf lroundf llroundf round lround llround])\n\n## ----------------------------------------------------------------------\n## Check compiler characteristics\n##\nAC_C_CONST\n\nAC_MSG_CHECKING([if the compiler understands  __inline__])\nAC_COMPILE_IFELSE(\n    [AC_LANG_SOURCE([[static __inline__ void f(void){return;};]])],\n    [AC_DEFINE([HAVE___INLINE__], [1], [Define if the compiler understands __inline__]) AC_MSG_RESULT([yes])],\n    [AC_MSG_RESULT([no])]\n)\n\nAC_MSG_CHECKING([if the compiler understands __inline])\nAC_COMPILE_IFELSE(\n    [AC_LANG_SOURCE([[static __inline void f(void){return;};]])],\n    [AC_DEFINE([HAVE___INLINE], [1], [Define if the compiler understands __inline]) AC_MSG_RESULT([yes])],\n    [AC_MSG_RESULT([no])]\n)\n\nAC_MSG_CHECKING([if the compiler understands inline])\nAC_COMPILE_IFELSE(\n    [AC_LANG_SOURCE([[static inline void f(void){return;};]])],\n    [AC_DEFINE([HAVE_INLINE], [1], [Define if the compiler understands inline]) AC_MSG_RESULT([yes])],\n    [AC_MSG_RESULT([no])]\n)\n\nAC_MSG_CHECKING([for __attribute__ extension])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]],[[int __attribute__((unused)) x]])],\n               [AC_DEFINE([HAVE_ATTRIBUTE], [1],\n                         [Define if the __attribute__(()) extension is present])\n                 AC_MSG_RESULT([yes])],\n               [AC_MSG_RESULT([no])])\n\nAC_MSG_CHECKING([for __func__ extension])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]],[[ const char *fname = __func__; ]])],\n               [AC_DEFINE([HAVE_C99_FUNC], [1],\n                         [Define if the compiler understands the __func__ keyword])\n                 AC_MSG_RESULT([yes])],\n               [AC_MSG_RESULT([no])])\nAC_MSG_CHECKING([for __FUNCTION__ extension])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]],,[[ const char *fname = __FUNCTION__; ]])],\n               [AC_DEFINE([HAVE_FUNCTION], [1],\n                         [Define if the compiler understands the __FUNCTION__ keyword])\n                 AC_MSG_RESULT([yes])],\n               [AC_MSG_RESULT([no])])\nAC_MSG_CHECKING([for C99 designated initialization support])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]], [[\n                typedef struct {\n                    int x;\n                    union {\n                        int i;\n                        double d;\n                    } u;\n                } di_struct_t;\n                di_struct_t x = {0, { .d = 0.0}}; ]])],\n               [AC_DEFINE([HAVE_C99_DESIGNATED_INITIALIZER], [1],\n                         [Define if the compiler understands C99 designated initialization of structs and unions])\n                 AC_MSG_RESULT([yes])],\n               [AC_MSG_RESULT([no])])\n\n## ----------------------------------------------------------------------\n## Try to figure out how to print `long long'.  Some machines use `%lld'\n## and others use `%qd'.  There may be more!  The final `l' is a\n## default in case none of the others work.\n##\nAC_MSG_CHECKING([how to print long long])\nAC_CACHE_VAL([hdf5_cv_printf_ll], [\n\nfor hdf5_cv_printf_ll in l ll L q unknown; do\n   AC_RUN_IFELSE(\n        [AC_LANG_PROGRAM([\n            #include <stdio.h>\n            #include <stdlib.h>\n            #include <string.h>\n        ],[[\n            char *s = malloc(128);\n            long long x = (long long)1048576 * (long long)1048576;\n            sprintf(s,\"%${hdf5_cv_printf_ll}d\",x);\n            exit(strcmp(s,\"1099511627776\"));\n        ]])]\n   , [break],,[continue])\ndone])\n\nAC_MSG_RESULT([%${hdf5_cv_printf_ll}d and %${hdf5_cv_printf_ll}u])\nAC_DEFINE_UNQUOTED([PRINTF_LL_WIDTH], [\"$hdf5_cv_printf_ll\"],\n                   [Width for printf() for type `long long' or `__int64', use `ll'])\n\n## ----------------------------------------------------------------------\n## Remove old ways of determining debug/production build.\n## These were used in 1.8.x and earlier. We should probably keep these checks\n## around to help people migrate to 1.10.x and newer versions.\n##\nAC_ARG_ENABLE([debug],\n              [AS_HELP_STRING([--enable-debug], [OPTION CHANGE: use --enable-build-mode=debug])],\n              [AC_MSG_ERROR([--enable-debug is no longer supported, use --enable-build-mode=debug instead.])])\n\nAC_ARG_ENABLE([production],\n              [AS_HELP_STRING([--enable-production], [OPTION CHANGE: use --enable-build-mode=production])],\n              [AC_MSG_ERROR([--enable-production is no longer supported, use --enable-build-mode=production instead.])])\n\n\n## ----------------------------------------------------------------------\n## Check if the compiler should include symbols\n##\nAC_MSG_CHECKING([enable debugging symbols])\nAC_ARG_ENABLE([symbols],\n              [AS_HELP_STRING([--enable-symbols=(yes|no|<custom>)],\n                              [Add debug symbols to the library (e.g.: build with -g).\n                               This is independent of the build mode and optimization\n                               level. The custom string allows special settings like\n                               -ggdb, etc. to be used.\n                               [default=yes if debug build, otherwise no]\n                               ])],\n              [SYMBOLS=$enableval])\n\n## Set default\nif test \"X-$SYMBOLS\" = X- ; then\n  if test \"X-$BUILD_MODE\" = \"X-debug\" ; then\n    SYMBOLS=yes\n  else\n    SYMBOLS=no\n  fi\nfi\n\n## Allow this variable to be substituted in\n## other files (src/libhdf5.settings.in, etc.)\nAC_SUBST([SYMBOLS])\n\ncase \"X-$SYMBOLS\" in\n  X-yes)\n    H5_CFLAGS=\"$H5_CFLAGS $SYMBOLS_CFLAGS\"\n    H5_CXXFLAGS=\"$H5_CXXFLAGS $SYMBOLS_CXXFLAGS\"\n    H5_FCFLAGS=\"$H5_FCFLAGS $SYMBOLS_FCFLAGS\"\n    AC_MSG_RESULT([yes])\n    ;;\n  X-no)\n    H5_CFLAGS=\"$H5_CFLAGS $NO_SYMBOLS_CFLAGS\"\n    H5_CXXFLAGS=\"$H5_CXXFLAGS $NO_SYMBOLS_CXXFLAGS\"\n    H5_FCFLAGS=\"$H5_FCFLAGS $NO_SYMBOLS_FCFLAGS\"\n    AC_MSG_RESULT([no])\n    ;;\n  *)\n    H5_CFLAGS=\"$H5_CFLAGS $SYMBOLS\"\n    H5_CXXFLAGS=\"$H5_CXXFLAGS $SYMBOLS\"\n    H5_FCFLAGS=\"$H5_FCFLAGS $SYMBOLS\"\n    SYMBOLS=\"custom ($SYMBOLS)\"\n    AC_MSG_RESULT([$SYMBOLS])\n    ;;\nesac\n\n## ----------------------------------------------------------------------\n## Check if the assert macro should be enabled\n##\nAC_MSG_CHECKING([enable asserts])\nAC_ARG_ENABLE([asserts],\n              [AS_HELP_STRING([--enable-asserts],\n                              [Determines whether NDEBUG is defined or not, which\n                               controls assertions.\n                               This is independent of the build mode and presence\n                               of debugging symbols.\n                               [default=yes if debug build, otherwise no]\n                               ])],\n              [ASSERTS=$enableval])\n\n## Set default\nif test \"X-$ASSERTS\" = X- ; then\n  if test \"X-$BUILD_MODE\" = \"X-debug\" ; then\n    ASSERTS=yes\n  else\n    ASSERTS=no\n  fi\nfi\n\n## Allow this variable to be substituted in\n## other files (src/libhdf5.settings.in, etc.)\nAC_SUBST([ASSERTS])\n\ncase \"X-$ASSERTS\" in\n  X-yes)\n    H5_CPPFLAGS=\"$H5_CPPFLAGS -UNDEBUG\"\n    AC_MSG_RESULT([yes])\n    ;;\n  X-no)\n    H5_CPPFLAGS=\"$H5_CPPFLAGS -DNDEBUG\"\n    AC_MSG_RESULT([no])\n    ;;\n  *)\n    AC_MSG_ERROR([Unrecognized value: $ASSERTS])\n    ;;\nesac\n\n## ----------------------------------------------------------------------\n## Check if developer warnings should be turned on\n## These are warnings that provide suggestions like gcc's -Wsuggest-attribute.\n## They do not indicate code problems.\n##\n## Note that developers don't need to build with these regularly. They\n## are just handy to check once in a while (before releases, etc.).\n##\nAC_MSG_CHECKING([enable developer warnings])\nAC_ARG_ENABLE([developer-warnings],\n              [AS_HELP_STRING([--enable-developer-warnings],\n                              [Determines whether developer warnings will be\n                               emitted. These are usually performance suggestions\n                               (e.g. -Wsuggest-attribute) and do not flag poor code\n                               quality.\n                               [default=no]\n                               ])],\n              [DEV_WARNINGS=$enableval])\n\n## Set default\nif test \"X-$DEV_WARNINGS\" = X- ; then\n  DEV_WARNINGS=no\nfi\n\n## Allow this variable to be substituted in\n## other files (src/libhdf5.settings.in, etc.)\nAC_SUBST([DEV_WARNINGS])\n\ncase \"X-$DEV_WARNINGS\" in\n  X-yes)\n    H5_CFLAGS=\"$H5_CFLAGS $DEVELOPER_WARNING_CFLAGS\"\n    AC_MSG_RESULT([yes])\n    ;;\n  X-no)\n    H5_CFLAGS=\"$H5_CFLAGS $NO_DEVELOPER_WARNING_CFLAGS\"\n    AC_MSG_RESULT([no])\n    ;;\n  *)\n    AC_MSG_ERROR([Unrecognized value: $DEV_WARNINGS])\n    ;;\nesac\n\n## ----------------------------------------------------------------------\n## Check if the compiler should use profiling flags/settings\n##\nAC_MSG_CHECKING([profiling])\nAC_ARG_ENABLE([profiling],\n              [AS_HELP_STRING([--enable-profiling=(yes|no|<custom>)],\n                              [Enable profiling flags (e.g.: -pg).\n                               This can be set independently from the build mode.\n                               The custom setting can be used to pass alternative\n                               profiling flags (e.g.: -P for using Prof with gcc).\n                               [default=no]\n                               ])],\n              [PROFILING=$enableval])\n\n## Default is no profiling\nif test \"X-$PROFILING\" = X- ; then\n    PROFILING=no\nfi\n\n## Allow this variable to be substituted in\n## other files (src/libhdf5.settings.in, etc.)\nAC_SUBST([PROFILING])\n\ncase \"X-$PROFILING\" in\n  X-yes)\n    H5_CFLAGS=\"$H5_CFLAGS $PROFILE_CFLAGS\"\n    H5_CXXFLAGS=\"$H5_CXXFLAGS $PROFILE_CXXFLAGS\"\n    H5_FCFLAGS=\"$H5_FCFLAGS $PROFILE_FCFLAGS\"\n    AC_MSG_RESULT([yes])\n    ;;\n  X-no)\n    AC_MSG_RESULT([no])\n    ;;\n  *)\n    H5_CFLAGS=\"$H5_CFLAGS $PROFILING\"\n    H5_CXXFLAGS=\"$H5_CXXFLAGS $PROFILING\"\n    H5_FCFLAGS=\"$H5_FCFLAGS $PROFILING\"\n    PROFILING=\"custom ($PROFILING)\"\n    AC_MSG_RESULT([$PROFILING])\n    ;;\nesac\n\n## ----------------------------------------------------------------------\n## Check if the compiler should use a particular optimization setting\n##\nAC_MSG_CHECKING([optimization level])\nAC_ARG_ENABLE([optimization],\n              [AS_HELP_STRING([--enable-optimization=(high|debug|none|<custom>)],\n                              [Enable optimization flags/settings (e.g.: -O3).\n                               This can be set independently from the build mode.\n                               Optimizations for a given compiler can be specified\n                               at several levels: High, with aggressive optimizations\n                               turned on; debug, with optimizations that are\n                               unlikely to interfere with debugging or profiling;\n                               and none, with no optimizations at all.\n                               See the compiler-specific config/*-flags file for more\n                               details.\n                               Alternatively, optimization options can\n                               be specified directly by specifying them as a\n                               string value. These custom optimzation flags will\n                               completely replace all other optimization flags.\n                               [default depends on build mode: debug=debug,\n                                production=high, clean=none]\n                               ])],\n              [OPTIMIZATION=$enableval])\n\n## Set the default optimization level. This depends on the compiler mode.\nif test \"X-$OPTIMIZATION\" = X- ; then\n  case \"X-$BUILD_MODE\" in\n  X-debug)\n    OPTIMIZATION=debug\n    ;;\n  X-production)\n    OPTIMIZATION=high\n    ;;\n  X-clean)\n    OPTIMIZATION=none\n    ;;\n  esac\nfi\n\n## Allow this variable to be substituted in\n## other files (src/libhdf5.settings.in, etc.)\nAC_SUBST([OPTIMIZATION])\n\ncase \"X-$OPTIMIZATION\" in\n  X-high)\n    H5_CFLAGS=\"$H5_CFLAGS $HIGH_OPT_CFLAGS\"\n    H5_CXXFLAGS=\"$H5_CXXFLAGS $HIGH_OPT_CXXFLAGS\"\n    H5_FCFLAGS=\"$H5_FCFLAGS $HIGH_OPT_FCFLAGS\"\n    AC_MSG_RESULT([high])\n    ;;\n  X-debug)\n    H5_CFLAGS=\"$H5_CFLAGS $DEBUG_OPT_CFLAGS\"\n    H5_CXXFLAGS=\"$H5_CXXFLAGS $DEBUG_OPT_CXXFLAGS\"\n    H5_FCFLAGS=\"$H5_FCFLAGS $DEBUG_OPT_FCFLAGS\"\n    AC_MSG_RESULT([debug])\n    ;;\n  X-none)\n    H5_CFLAGS=\"$H5_CFLAGS $NO_OPT_CFLAGS\"\n    H5_CXXFLAGS=\"$H5_CXXFLAGS $NO_OPT_CXXFLAGS\"\n    H5_FCFLAGS=\"$H5_FCFLAGS $NO_OPT_FCFLAGS\"\n    AC_MSG_RESULT([none])\n    ;;\n  *)\n    H5_CFLAGS=\"$H5_CFLAGS $OPTIMIZATION\"\n    H5_CXXFLAGS=\"$H5_CXXFLAGS $OPTIMIZATION\"\n    H5_FCFLAGS=\"$H5_FCFLAGS $OPTIMIZATION\"\n    OPTIMIZATION=\"custom ($OPTIMIZATION)\"\n    AC_MSG_RESULT([$OPTIMIZATION])\n    ;;\nesac\n\n## ----------------------------------------------------------------------\n## Enable/disable internal package-level debugging output\n##\nAC_MSG_CHECKING([for internal debug output])\nAC_ARG_ENABLE([internal-debug],\n              [AS_HELP_STRING([--enable-internal-debug=(yes|all|no|none|<pkg list>)],\n                              [Enable extra debugging output on HDF5 library\n                               errors. One may also specify a comma-separated\n                               list of package names without the leading H5.\n                               This is independent of the build mode\n                               and is mainly of interest to HDF Group developers.\n                               Yes/all and no/none are synonymous.\n                               [default=all if debug build, otherwise none]\n                               ])],\n              [INTERNAL_DEBUG_OUTPUT=$enableval])\n\n## Set default\nif test \"X-$INTERNAL_DEBUG_OUTPUT\" = X- ; then\n  if test \"X-$BUILD_MODE\" = \"X-debug\" ; then\n    INTERNAL_DEBUG_OUTPUT=all\n  else\n    INTERNAL_DEBUG_OUTPUT=none\n  fi\nfi\n\nAC_SUBST([INTERNAL_DEBUG_OUTPUT])\n\n## These are all the packages that use H5*_DEBUG.\n## There is no harm in specifying a package not in this list;\n## you'll just get an unused H5<pkg>_DEBUG symbol.\n##\n## Some packages that define debug checks or output are\n## too specialized or have huge performance hits. These\n## are not listed in the \"all\" packages list.\n##\n## all_packages=\"AC,B,B2,D,F,FA,FL,FS,HL,I,O,S,ST,T,Z\"\nall_packages=\"AC,B2,CX,D,F,HL,I,O,S,ST,T,Z\"\n\ncase \"X-$INTERNAL_DEBUG_OUTPUT\" in\n  X-yes|X-all)\n    INTERNAL_DEBUG_OUTPUT=$all_packages\n    DEBUG_PKG_LIST=$all_packages\n    ;;\n  X-no|X-none)\n    INTERNAL_DEBUG_OUTPUT=none\n    DEBUG_PKG_LIST=\n    ;;\n  *)\n    DEBUG_PKG_LIST=$INTERNAL_DEBUG_OUTPUT\n    ;;\nesac\nAC_MSG_RESULT([$INTERNAL_DEBUG_OUTPUT])\n\n## Define H5*_DEBUG symbols that control package output\n## NOTE: No sanity checking done here!\nif test -n \"$DEBUG_PKG_LIST\"; then\n  for pkg in `echo $DEBUG_PKG_LIST | ${TR} ${as_cr_letters}\",\" ${as_cr_LETTERS}\" \"`; do\n    H5_CPPFLAGS=\"$H5_CPPFLAGS -DH5${pkg}_DEBUG\"\n  done\nfi\n\n## ----------------------------------------------------------------------\n## Check if they would like the function stack support compiled in\n##\nAC_MSG_CHECKING([whether function stack tracking is enabled])\nAC_ARG_ENABLE([codestack],\n              [AS_HELP_STRING([--enable-codestack],\n                              [Enable the function stack tracing (for developer debugging).\n                               [default=no]\n                              ])],\n              [CODESTACK=$enableval])\n\n## Set the default level.\nif test \"X-$CODESTACK\" = X- ; then\n  CODESTACK=no\nfi\n\n## Allow this variable to be substituted in\n## other files (src/libhdf5.settings.in, etc.)\nAC_SUBST([CODESTACK])\n\ncase \"X-$CODESTACK\" in\n  X-yes)\n      AC_MSG_RESULT([yes])\n      AC_DEFINE([HAVE_CODESTACK], [1],\n                [Define if the function stack tracing code is to be compiled in])\n    ;;\n  X-no)\n      AC_MSG_RESULT([no])\n    ;;\n  *)\n      AC_MSG_ERROR([Unrecognized value: $CODESTACK])\n    ;;\nesac\n\n## ----------------------------------------------------------------------\n## Enable tracing of the API\n##\nAC_MSG_CHECKING([for API tracing]);\nAC_ARG_ENABLE([trace],\n              [AS_HELP_STRING([--enable-trace],\n                              [Enable HDF5 API tracing capability.\n                               [default=yes if debug build, otherwise no]\n                               ])],\n              [TRACE_API=$enableval])\n\n## Set the default level.\nif test \"X-$TRACE_API\" = X- ; then\n  if test \"X-$BUILD_MODE\" = \"X-debug\" ; then\n    TRACE_API=yes\n  else\n    TRACE_API=no\n  fi\nfi\n\n## Allow this variable to be substituted in\n## other files (src/libhdf5.settings.in, etc.)\nAC_SUBST([TRACE_API])\n\ncase \"X-$TRACE_API\" in\n  X-yes)\n    AC_MSG_RESULT([yes])\n    H5_CPPFLAGS=\"$H5_CPPFLAGS -DH5_DEBUG_API\"\n    ;;\n  X-no)\n    AC_MSG_RESULT([no])\n    H5_CPPFLAGS=\"$H5_CPPFLAGS -UH5_DEBUG_API\"\n    ;;\n  *)\n    AC_MSG_ERROR([Unrecognized value: $TRACE_API])\n    ;;\nesac\n\n## ----------------------------------------------------------------------\n## Check if they would like to use a memory checking tool (like valgrind's\n##     'memcheck' tool, or Rational Purify, etc) and the library should be\n##     more scrupulous with it's memory operations.  Enabling this also\n##     disables the library's free space manager code.\n##\nAC_MSG_CHECKING([whether a memory checking tool will be used])\nAC_ARG_ENABLE([using-memchecker],\n              [AS_HELP_STRING([--enable-using-memchecker],\n                              [Enable this option if a memory allocation and/or\n                              bounds checking tool will be used on the HDF5\n                              library.  Enabling this causes the library to be\n                              more picky about its memory operations and also\n                              disables the library's free space manager code.\n                              This option is orthogonal to the\n                              --enable-memory-alloc-sanity-check option.\n                              [default=no]\n                              ])],\n              [USINGMEMCHECKER=$enableval])\n\n## Allow this variable to be substituted in\n## other files (src/libhdf5.settings.in, etc.)\nAC_SUBST([USINGMEMCHECKER])\n\n## Set the default level.\nif test \"X-$USINGMEMCHECKER\" = X- ; then\n  USINGMEMCHECKER=no\nfi\n\ncase \"X-$USINGMEMCHECKER\" in\n  X-yes)\n      AC_DEFINE([USING_MEMCHECKER], [1],\n                [Define if a memory checking tool will be used on the library,\n                to cause library to be very picky about memory operations and\n                also disable the internal free list manager code.])\n      AC_MSG_RESULT([yes])\n    ;;\n  X-no)\n      AC_MSG_RESULT([no])\n    ;;\n  *)\n      AC_MSG_ERROR([Unrecognized value: $USINGMEMCHECKER])\n    ;;\nesac\n\n## ----------------------------------------------------------------------\n## Check if they would like to enable the internal memory allocation sanity\n##     checking code.\n##\nAC_MSG_CHECKING([whether internal memory allocation sanity checking is used])\nAC_ARG_ENABLE([memory-alloc-sanity-check],\n              [AS_HELP_STRING([--enable-memory-alloc-sanity-check],\n                              [Enable this option to turn on internal memory\n                              allocation sanity checking.  This could cause\n                              more memory use and somewhat slower allocation.\n                              This option is orthogonal to the\n                              --enable-using-memchecker option.\n                               [default=yes if debug build, otherwise no]\n                              ])],\n              [MEMORYALLOCSANITYCHECK=$enableval])\n\n## Allow this variable to be substituted in\n## other files (src/libhdf5.settings.in, etc.)\nAC_SUBST([MEMORYALLOCSANITYCHECK])\n\n## Set default\nif test \"X-$MEMORYALLOCSANITYCHECK\" = X- ; then\n  if test \"X-$BUILD_MODE\" = \"X-debug\" ; then\n    MEMORYALLOCSANITYCHECK=yes\n  else\n    MEMORYALLOCSANITYCHECK=no\n  fi\nfi\n\ncase \"X-$MEMORYALLOCSANITYCHECK\" in\n  X-yes)\n      AC_DEFINE([MEMORY_ALLOC_SANITY_CHECK], [1],\n                [Define to enable internal memory allocation sanity checking.])\n      AC_MSG_RESULT([yes])\n    ;;\n  X-no)\n      AC_MSG_RESULT([no])\n    ;;\n  *)\n      AC_MSG_ERROR([Unrecognized value: $MEMORYALLOCSANITYCHECK])\n    ;;\nesac\n\n## Checkpoint the cache\nAC_CACHE_SAVE\n\n## What header files and libraries do we have to look for for parallel\n## support?  For the most part, search paths are already specified with\n## CPPFLAGS and LDFLAGS or are known to the compiler.\n##\nAC_ARG_ENABLE([parallel],\n              [AS_HELP_STRING([--enable-parallel],\n                              [Search for MPI-IO and MPI support files])])\n\n## The --enable-parallel flag is not compatible with --enable-cxx.\n## If the user tried to specify both flags, throw an error, unless\n## they also provided the --enable-unsupported flag.\nif test \"X${ALLOW_UNSUPPORTED}\" != \"Xyes\"; then\n  if test \"X${HDF_CXX}\" = \"Xyes\" -a \"X${enable_parallel}\" = \"Xyes\"; then\n    AC_MSG_ERROR([--enable-cxx and --enable-parallel flags are incompatible. Use --enable-unsupported to override this error.])\n  fi\nfi\n\n## The --enable-parallel flag is not compatible with --enable-java.\n## If the user tried to specify both flags, throw an error, unless\n## they also provided the --enable-unsupported flag.\nif test \"X${ALLOW_UNSUPPORTED}\" != \"Xyes\"; then\n  if test \"X${HDF_JAVA}\" = \"Xyes\" -a \"X${enable_parallel}\" = \"Xyes\"; then\n    AC_MSG_ERROR([--enable-java and --enable-parallel flags are incompatible. Use --enable-unsupported to override this error.])\n  fi\nfi\n\n## --enable-parallel is also incompatible with --enable-threadsafe, unless\n## --enable-unsupported has been specified on the configure line.\nif test \"X${ALLOW_UNSUPPORTED}\" != \"Xyes\"; then\n  if test \"X${THREADSAFE}\" = \"Xyes\" -a \"X${enable_parallel}\" = \"Xyes\"; then\n    AC_MSG_ERROR([--enable-threadsafe and --enable-parallel flags are incompatible. Use --enable-unsupported to override this error.])\n  fi\nfi\n\nAC_MSG_CHECKING([for parallel support files])\ncase \"X-$enable_parallel\" in\n  X-|X-no|X-none)\n    ## We are not compiling for parallel.\n    AC_MSG_RESULT([skipped])\n    ;;\n\n  X-yes)\n    ## We want to compile a parallel library with a compiler that\n    ## may already know how to link with MPI and MPI-IO.\n    AC_MSG_RESULT([provided by compiler])\n    PARALLEL=yes\n\n    ## Try link a simple MPI program.\n    AC_MSG_CHECKING([whether a simple MPI-IO C program can be linked])\n    AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <mpi.h>]],\n                   [[ MPI_Init(0, (void *)0);\n            MPI_File_open(0, (void *)0, 0, 0, (void *)0);]])],\n        [AC_MSG_RESULT([yes])],\n            [AC_MSG_RESULT([no])\n            AC_MSG_ERROR([unable to link a simple MPI-IO C program])])\n\n    if test \"X$HDF_FORTRAN\" = \"Xyes\"; then\n      PAC_PROG_FC_MPI_CHECK\n    fi\n\n    ## Set RUNPARALLEL to mpiexec if not set yet.\n    if test \"X$PARALLEL\" = \"Xyes\" -a -z \"$RUNPARALLEL\"; then\n      RUNPARALLEL=\"mpiexec -n \\$\\${NPROCS:=6}\"\n    fi\n    ;;\n\n  *)\n    AC_MSG_RESULT([error])\n    AC_MSG_ERROR([\\'$enable_parallel\\' is not a valid parallel search type])\n    ;;\nesac\n\n## ----------------------------------------------------------------------\n## Print some other parallel information and do some sanity checks.\n## Needs to be done outside of the PARALLEL block since the serial\n## build also needs to have values defined.\n##\nAC_SUBST([ADD_PARALLEL_FILES]) ADD_PARALLEL_FILES=\"no\"\nAC_SUBST([MPE]) MPE=no\nAC_SUBST([INSTRUMENT_LIBRARY]) INSTRUMENT_LIBRARY=no\nAC_SUBST([PARALLEL_FILTERED_WRITES])\nAC_SUBST([LARGE_PARALLEL_IO])\n\nif test -n \"$PARALLEL\"; then\n  if test \"X$HDF5_TESTS\" = \"Xyes\"; then\n    ## The 'testpar' directory should participate in the build\n    TESTPARALLEL=testpar\n  fi\n\n  ## We are building a parallel library\n  AC_DEFINE([HAVE_PARALLEL], [1], [Define if we have parallel support])\n\n  ## Display what we found about running programs\n  AC_MSG_CHECKING([prefix for running on one processor])\n  AC_MSG_RESULT([$RUNSERIAL])\n  AC_MSG_CHECKING([prefix for running in parallel])\n  AC_MSG_RESULT([$RUNPARALLEL])\n\n  ## There *must* be some way to run in parallel even if it's just the\n  ## word `none'.\n  if test -z \"$RUNPARALLEL\"; then\n    AC_MSG_ERROR([no way to run a parallel program])\n  fi\n\n  ## If RUNSERIAL or RUNPARALLEL is the word `none' then replace it with\n  ## the empty string. This means that no launch commands were requested,\n  ## so we will not use any launch commands.\n  if test \"X$RUNSERIAL\" = \"Xnone\"; then\n    RUNSERIAL=\"\"\n  fi\n  if test \"X$RUNPARALLEL\" = \"Xnone\"; then\n    RUNPARALLEL=\"\"\n  fi\n\n  if test \"X$HDF_FORTRAN\" = \"Xyes\"; then\n    ADD_PARALLEL_FILES=\"yes\"\n    AC_MSG_CHECKING([for MPI_Comm_c2f and MPI_Comm_f2c functions])\n\n    AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n    #include <mpi.h>\n    ]],\n      [[MPI_Comm c_comm; MPI_Comm_c2f(c_comm)]])],\n      [AC_DEFINE([HAVE_MPI_MULTI_LANG_Comm], [1],\n                 [Define if MPI_Comm_c2f and MPI_Comm_f2c exist])\n                 AC_MSG_RESULT([yes])],\n                 [AC_MSG_RESULT([no])]\n    )\n\n    AC_MSG_CHECKING([for MPI_Info_c2f and MPI_Info_f2c functions])\n    AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <mpi.h>]],\n      [[MPI_Info c_info; MPI_Info_c2f(c_info)]])],\n      [AC_DEFINE([HAVE_MPI_MULTI_LANG_Info], [1],\n                [Define if MPI_Info_c2f and MPI_Info_f2c exist])\n                AC_MSG_RESULT([yes])],\n                [AC_MSG_RESULT([no])]\n    )\n  fi\n\n  ## ----------------------------------------------------------------------\n  ## Enable instrumenting of the library's internal operations\n  ## in parallel builds.\n  ##\n\n  ## Set default\n  if test \"X-$BUILD_MODE\" = \"X-debug\" ; then\n    INSTRUMENT_LIBRARY=yes\n  else\n    INSTRUMENT_LIBRARY=no\n  fi\n\n  AC_MSG_CHECKING([for instrumented library]);\n  AC_ARG_ENABLE([instrument],\n                [AS_HELP_STRING([--enable-instrument],\n                                [Enable library instrumentation of optimization\n                                  tracing (only used with parallel builds).\n                                  [default=yes if a parallel debug build, otherwise no]\n                                ])],\n                [INSTRUMENT_LIBRARY=$enableval])\n\n  ## Allow this variable to be substituted in\n  ## other files (src/libhdf5.settings.in, etc.)\n  AC_SUBST([INSTRUMENT_LIBRARY])\n\n  case \"X-$INSTRUMENT_LIBRARY\" in\n    X-yes)\n      AC_DEFINE([HAVE_INSTRUMENTED_LIBRARY], [1],\n                [Define if parallel library will contain instrumentation to detect correct optimization operation])\n      AC_MSG_RESULT([yes])\n      ;;\n    X-no)\n      AC_MSG_RESULT([no])\n      ;;\n    *)\n      AC_MSG_ERROR([Unrecognized value: $INSTRUMENT_LIBRARY])\n      ;;\n  esac\n\n  ## --------------------------------------------------------------------\n  ## Do we want MPE instrumentation feature on?\n  ##\n  ## This must be done after enable-parallel is checked since it depends\n  ## on a mpich compiler.\n  ##\n  MPE=yes\n  AC_ARG_WITH([mpe],\n              [AS_HELP_STRING([--with-mpe=DIR],\n                              [Use MPE instrumentation [default=no]])],,\n              [withval=no])\n\n  case \"X-$withval\" in\n    X-|X-no|X-none)\n      AC_MSG_CHECKING([for MPE])\n      AC_MSG_RESULT([suppressed])\n      unset MPE\n      ;;\n    X-yes)\n      AC_CHECK_HEADERS([mpe.h],, [unset MPE])\n      AC_CHECK_LIB([mpe], [MPE_Init_log],, [unset MPE])\n      ;;\n    *)\n      case \"$withval\" in\n        *,*)\n          mpe_inc=\"`echo $withval | cut -f1 -d,`\"\n          mpe_lib=\"`echo $withval | cut -f2 -d, -s`\"\n          ;;\n        *)\n          if test -n \"$withval\"; then\n            mpe_inc=\"$withval/include\"\n            mpe_lib=\"$withval/lib\"\n          fi\n          ;;\n      esac\n\n      if test -n \"$mpe_inc\"; then\n        saved_CPPFLAGS=\"$CPPFLAGS\"\n        saved_AM_CPPFLAGS=\"$AM_CPPFLAGS\"\n        CPPFLAGS=\"$CPPFLAGS -I$mpe_inc\"\n        AM_CPPFLAGS=\"$AM_CPPFLAGS -I$mpe_inc\"\n        AC_CHECK_HEADERS([mpe.h],, [CPPFLAGS=\"$saved_CPPFLAGS\"; AM_CPPFLAGS=\"$saved_AM_CPPFLAGS\"; unset MPE])\n      else\n        AC_CHECK_HEADERS([mpe.h],, [unset MPE])\n      fi\n\n      if test -n \"$mpe_lib\"; then\n        saved_LDFLAGS=\"$LDFLAGS\"\n        saved_AM_LDFLAGS=\"$AM_LDFLAGS\"\n        LDFLAGS=\"$LDFLAGS -L$mpe_lib\"\n        AM_LDFLAGS=\"$AM_LDFLAGS -L$mpe_lib\"\n        AC_CHECK_LIB([mpe], [MPE_Init_log],,\n                     [LDFLAGS=\"$saved_LDFLAGS\"; AM_LDFLAGS=\"$saved_AM_LDFLAGS\"; unset MPE])\n      else\n        AC_CHECK_LIB([mpe], [MPE_Init_log],, [unset MPE])\n      fi\n      ;;\n  esac\n\n  if test \"X-$MPE\" = \"X-yes\"; then\n    AC_DEFINE([HAVE_MPE], [1], [Define if we have MPE support])\n  fi\n\n  ## ----------------------------------------------------------------------\n  ## Check for the MPI-3 functions necessary for the Parallel Compression\n  ## feature. If these are not present, issue a warning that Parallel\n  ## Compression will be disabled.\n  ##\n  AC_MSG_CHECKING([for MPI_Mprobe and MPI_Imrecv functions])\n\n  AC_LINK_IFELSE(\n      [AC_LANG_PROGRAM(\n          [[\n              #include <mpi.h>\n          ]],\n          [[\n              MPI_Message message;\n              MPI_Init(0, (void *) 0);\n              MPI_Mprobe(0, 0, 0, &message, (void *) 0);\n              MPI_Imrecv((void *) 0, 0, 0, (void *) 0, (void *) 0);\n          ]]\n      )],\n      [AC_MSG_RESULT([yes])\n       PARALLEL_FILTERED_WRITES=yes],\n      [AC_MSG_RESULT([no])\n       AC_MSG_WARN([A simple MPI program using the MPI_Mprobe and MPI_Imrecv functions could not be compiled and linked.\n                    Parallel writes of filtered data will be disabled.])\n       PARALLEL_FILTERED_WRITES=no]\n  )\n\n  ## ----------------------------------------------------------------------\n  ## Check for the MPI-3 functions necessary for the big I/O feature.\n  ## If these are not present, issue a warning that the big I/O feature\n  ## will be disabled.\n  ##\n  AC_MSG_CHECKING([for MPI_Get_elements_x and MPI_Type_size_x functions])\n\n  AC_LINK_IFELSE(\n      [AC_LANG_PROGRAM(\n          [[\n              #include <mpi.h>\n          ]],\n          [[\n              MPI_Count count;\n              MPI_Init(0, (void *) 0);\n              MPI_Get_elements_x(0, 0, &count);\n              MPI_Type_size_x(0, &count);\n          ]]\n      )],\n      [AC_MSG_RESULT([yes])\n       LARGE_PARALLEL_IO=yes],\n      [AC_MSG_RESULT([no])\n       AC_MSG_WARN([A simple MPI program using the MPI_Get_elements_x and MPI_Type_size_x functions could not be compiled and linked.\n                    Reading/Writing >2GB of data in a single parallel I/O operation will be disabled.])\n       LARGE_PARALLEL_IO=no]\n  )\n\nfi\n\n## ----------------------------------------------------------------------\n## Check if the map API is enabled by --enable-map-api\n##\nAC_SUBST([MAP_API])\n\n## Default is no map API\nMAP_API=no\n\nAC_MSG_CHECKING([if the map API (H5M) is enabled])\n\nAC_ARG_ENABLE([map-api],\n              [AS_HELP_STRING([--enable-map-api],\n                              [Build the map API (H5M).\n                               This is not yet supported in the native file format\n                               and requires a VOL connector that supports it.\n                               [default=no]])],\n              [MAP_API=$enableval], [MAP_API=no])\n\nif test \"X$MAP_API\" = \"Xyes\"; then\n    AC_MSG_RESULT([yes])\n    AC_DEFINE([HAVE_MAP_API], [1],\n            [Define if the map API (H5M) should be compiled])\nelse\n    AC_MSG_RESULT([no])\nfi\n\n## ----------------------------------------------------------------------\n## Check if Direct I/O driver is enabled by --enable-direct-vfd\n##\nAC_SUBST([DIRECT_VFD])\n\n## Default is no direct VFD\nDIRECT_VFD=no\n\nAC_CACHE_VAL([hdf5_cv_direct_io],\n    AC_CHECK_DECL([O_DIRECT], [hdf5_cv_direct_io=yes], [hdf5_cv_direct_io=no], [[#include <fcntl.h>]]))\nAC_CACHE_VAL([hdf5_cv_posix_memalign],\n    AC_CHECK_FUNC([posix_memalign], [hdf5_cv_posix_memalign=yes], [hdf5_cv_posix_memalign=no]))\n\nAC_MSG_CHECKING([if the direct I/O virtual file driver (VFD) is enabled])\n\nAC_ARG_ENABLE([direct-vfd],\n              [AS_HELP_STRING([--enable-direct-vfd],\n                              [Build the direct I/O virtual file driver (VFD).\n                               This is based on the POSIX (sec2) VFD and\n                               requires the open() call to take the O_DIRECT\n                               flag. [default=no]])],\n              [DIRECT_VFD=$enableval], [DIRECT_VFD=no])\n\nif test \"X$DIRECT_VFD\" = \"Xyes\"; then\n    if test ${hdf5_cv_direct_io} = \"yes\" && test ${hdf5_cv_posix_memalign} = \"yes\" ; then\n        AC_MSG_RESULT([yes])\n        AC_DEFINE([HAVE_DIRECT], [1],\n                [Define if the direct I/O virtual file driver (VFD) should be compiled])\n    else\n        AC_MSG_RESULT([no])\n        DIRECT_VFD=no\n        AC_MSG_ERROR([The direct VFD was requested but cannot be built. This is either\n                     due to O_DIRECT not being found in fcntl.h or a lack of\n                     posix_memalign() on your system. Please re-configure without\n                     specifying --enable-direct-vfd.])\n    fi\nelse\n    AC_MSG_RESULT([no])\nfi\n\n## Direct VFD files are not built if not required.\nAM_CONDITIONAL([DIRECT_VFD_CONDITIONAL], [test \"X$DIRECT_VFD\" = \"Xyes\"])\n\n## ----------------------------------------------------------------------\n## Check if Read-Only S3 virtual file driver is enabled by --enable-ros3-vfd\n##\nAC_SUBST([ROS3_VFD])\n\n## Default is no Read-Only S3 VFD\nROS3_VFD=no\n\nAC_ARG_ENABLE([ros3-vfd],\n              [AS_HELP_STRING([--enable-ros3-vfd],\n                              [Build the Read-Only S3 virtual file driver (VFD).\n                               [default=no]])],\n              [ROS3_VFD=$enableval], [ROS3_VFD=no])\n\nif test \"X$ROS3_VFD\" = \"Xyes\"; then\n    AC_CHECK_HEADERS([curl/curl.h],, [unset ROS3_VFD])\n    AC_CHECK_HEADERS([openssl/evp.h],, [unset ROS3_VFD])\n    AC_CHECK_HEADERS([openssl/hmac.h],, [unset ROS3_VFD])\n    AC_CHECK_HEADERS([openssl/sha.h],, [unset ROS3_VFD])\n    if test \"X$ROS3_VFD\" = \"Xyes\"; then\n        AC_CHECK_LIB([curl], [curl_global_init],, [unset ROS3_VFD])\n        AC_CHECK_LIB([crypto], [EVP_sha256],, [unset ROS3_VFD])\n    fi\n\n    AC_MSG_CHECKING([if the Read-Only S3 virtual file driver (VFD) is enabled])\n    if test \"X$ROS3_VFD\" = \"Xyes\"; then\n        AC_DEFINE([HAVE_ROS3_VFD], [1],\n                [Define whether the Read-Only S3 virtual file driver (VFD) should be compiled])\n        AC_MSG_RESULT([yes])\n    else\n        AC_MSG_RESULT([no])\n        ROS3_VFD=no\n        AC_MSG_ERROR([The Read-Only S3 VFD was requested but cannot be built.\n                      Please check that openssl and cURL are available on your\n                      system, and/or re-configure without option\n                      --enable-ros3-vfd.])\n    fi\nelse\n    AC_MSG_CHECKING([if the Read-Only S3 virtual file driver (VFD) is enabled])\n    AC_MSG_RESULT([no])\n    ROS3_VFD=no\n\nfi\n\n## Read-only S3 files are not built if not required.\nAM_CONDITIONAL([ROS3_VFD_CONDITIONAL], [test \"X$ROS3_VFD\" = \"Xyes\"])\n\n\n## ----------------------------------------------------------------------\n## Is libhdfs (Hadoop Distributed File System) present?\n## It might be specified with the `--with-libhdfs' command-line switch.\n## If found, enables the HDFS VFD.\n##\nAC_SUBST([HAVE_LIBHDFS])\nAC_ARG_WITH([libhdfs],\n            [AS_HELP_STRING([--with-libhdfs=DIR],\n                            [Provide libhdfs library to enable HDFS virtual file driver (VFD) [default=no]])],,\n            [withval=no])\n\ncase $withval in\n  no)\n    HAVE_LIBHDFS=\"no\"\n    AC_MSG_CHECKING([for libhdfs])\n    AC_MSG_RESULT([suppressed])\n    ;;\n  *)\n    HAVE_LIBHDFS=\"yes\"\n    case \"$withval\" in\n      *,*)\n        libhdfs_inc=\"`echo $withval |cut -f1 -d,`\"\n        libhdfs_lib=\"`echo $withval |cut -f2 -d, -s`\"\n        ;;\n      yes)\n        libhdfs_inc=\"$HADOOP_HOME/include\"\n        libhdfs_lib=\"$HADOOP_HOME/lib\"\n        ;;\n      *)\n        if test -n \"$withval\"; then\n          libhdfs_inc=\"$withval/include\"\n          libhdfs_lib=\"$withval/lib\"\n        fi\n        ;;\n    esac\n\n    if test -n \"$libhdfs_inc\"; then\n      CPPFLAGS=\"$CPPFLAGS -I$libhdfs_inc\"\n      AM_CPPFLAGS=\"$AM_CPPFLAGS -I$libhdfs_inc\"\n    fi\n    AC_CHECK_HEADERS([hdfs.h],,\n                     [unset HAVE_LIBHDFS])\n\n    if test \"x$HAVE_LIBHDFS\" = \"xyes\"; then\n      dnl Check for '-ljvm' needed by libhdfs\n      JNI_LDFLAGS=\"\"\n      if test $JAVA_HOME != \"\"\n      then\n        JNI_LDFLAGS=\"-L$JAVA_HOME/jre/lib/$OS_ARCH -L$JAVA_HOME/jre/lib/$OS_ARCH/server\"\n      fi\n      ldflags_bak=$LDFLAGS\n      LDFLAGS=\"$LDFLAGS $JNI_LDFLAGS\"\n      AC_CHECK_LIB([jvm], [JNI_GetCreatedJavaVMs])\n      LDFLAGS=$ldflags_bak\n      AC_SUBST([JNI_LDFLAGS])\n      if test -n \"$libhdfs_lib\"; then\n        ## Hadoop distribution hides libraries down one level in 'lib/native'\n        libhdfs_lib=\"$libhdfs_lib/native\"\n        LDFLAGS=\"$LDFLAGS -L$libhdfs_lib $JNI_LDFLAGS\"\n        AM_LDFLAGS=\"$AM_LDFLAGS -L$libhdfs_lib $JNI_LDFLAGS\"\n      fi\n      AC_CHECK_LIB([hdfs], [hdfsConnect],,\n                   [unset HAVE_LIBHDFS])\n    fi\n\n    if test -z \"$HAVE_LIBHDFS\"; then\n      AC_MSG_ERROR([Set to use libhdfs library, but could not find or use\n                    libhdfs. Please verify that the path to HADOOP_HOME is\n                    valid, and/or reconfigure without --with-libhdfs.])\n    fi\n    ;;\nesac\n\nif test \"x$HAVE_LIBHDFS\" = \"xyes\"; then\n  AC_DEFINE([HAVE_LIBHDFS], [1],\n            [Proceed to build with libhdfs])\nfi\n\n## Checkpoint the cache\nAC_CACHE_SAVE\n\n## ----------------------------------------------------------------------\n## Use custom examples path.\n##\nAC_MSG_CHECKING([for custom examples path definition])\nAC_ARG_WITH([examplesdir],\n            [AS_HELP_STRING([--with-examplesdir=location],\n                            [Specify path for examples\n                            [default=\"DATAROOTDIR/hdf5_examples\"]])],,\n            withval=\"${datarootdir}/hdf5_examples\")\n\nif test \"X$withval\" = \"X\"; then\n    AC_MSG_RESULT([default])\n    examplesdir=\"${datarootdir}/hdf5_examples\"\nelse\n    AC_MSG_RESULT([$withval])\n    examplesdir=$withval\nfi\n\nAC_SUBST([examplesdir])\nAC_DEFINE_UNQUOTED([EXAMPLESDIR], [\"$examplesdir\"],\n            [Define the examples directory])\n\n## ----------------------------------------------------------------------\n## Enable custom plugin default path for library.  It requires SHARED support.\n##\nAC_MSG_CHECKING([for custom plugin default path definition])\nAC_ARG_WITH([default-plugindir],\n            [AS_HELP_STRING([--with-default-plugindir=location],\n                            [Specify default location for plugins\n                            [default=\"/usr/local/hdf5/lib/plugin\"]])],,\n            withval=\"/usr/local/hdf5/lib/plugin\")\n\nif test \"X$withval\" = \"X\"; then\n    AC_MSG_RESULT([default])\n    default_plugindir=\"/usr/local/hdf5/lib/plugin\"\nelse\n    AC_MSG_RESULT([$withval])\n    default_plugindir=$withval\nfi\n\nAC_DEFINE_UNQUOTED([DEFAULT_PLUGINDIR], [\"$default_plugindir\"],\n            [Define the default plugins path to compile])\n\n## ----------------------------------------------------------------------\n## Decide whether the presence of user's exception handling functions is\n## checked and data conversion exceptions are returned.  This is mainly\n## for the speed optimization of hard conversions.  Soft conversions can\n## actually benefit little.\n##\nAC_MSG_CHECKING([whether exception handling functions is checked during data conversions])\nAC_ARG_ENABLE([dconv-exception],\n              [AS_HELP_STRING([--enable-dconv-exception],\n                              [if exception handling functions is checked during\n                              data conversions [default=yes]])],\n              [DCONV_EXCEPTION=$enableval], [DCONV_EXCEPTION=yes])\n\nif test \"$DCONV_EXCEPTION\" = \"yes\"; then\n  AC_MSG_RESULT([yes])\n  AC_DEFINE([WANT_DCONV_EXCEPTION], [1],\n            [Check exception handling functions during data conversions])\nelse\n  AC_MSG_RESULT([no])\nfi\n\n## ----------------------------------------------------------------------\n## Decide whether the data accuracy has higher priority during data\n## conversions.  If not, some hard conversions will still be prefered even\n## though the data may be wrong (for example, some compilers don't\n## support denormalized floating values) to maximize speed.\n##\nAC_MSG_CHECKING([whether data accuracy is guaranteed during data conversions])\nAC_ARG_ENABLE([dconv-accuracy],\n              [AS_HELP_STRING([--enable-dconv-accuracy],\n                              [if data accuracy is guaranteed during\n                              data conversions [default=yes]])],\n              [DATA_ACCURACY=$enableval], [DATA_ACCURACY=yes])\n\nif test \"$DATA_ACCURACY\" = \"yes\"; then\n  AC_MSG_RESULT([yes])\n  AC_DEFINE([WANT_DATA_ACCURACY], [1],\n            [Data accuracy is prefered to speed during data conversions])\nelse\n  AC_MSG_RESULT([no])\nfi\n\n## ----------------------------------------------------------------------\n## Set the flag to indicate that the machine has window style pathname,\n## that is, \"drive-letter:\\\" (e.g. \"C:\") or \"drive-letter:/\" (e.g. \"C:/\").\n## (This flag should be _unset_ for all machines, except for Windows, where\n## it's set in the custom Windows H5pubconf.h file)\n##\nAC_MSG_CHECKING([if the machine has window style path name])\n\ncase \"`uname`\" in\n  MINGW*)\n    AC_DEFINE([HAVE_WINDOW_PATH], [1],\n              [Define if your system has window style path name.])\n    AC_MSG_RESULT([yes])\n    ;;\n  *)\n    AC_MSG_RESULT([no])\n    ;;\nesac\n\n## ----------------------------------------------------------------------\n## Set the flag to indicate that the machine is using a special algorithm to convert\n## 'long double' to '(unsigned) long' values.  (This flag should only be set for\n## the IBM Power6 Linux.  When the bit sequence of long double is\n## 0x4351ccf385ebc8a0bfcc2a3c3d855620, the converted value of (unsigned)long\n## is 0x004733ce17af227f, not the same as the library's conversion to 0x004733ce17af2282.\n## The machine's conversion gets the correct value.  We define the macro and disable\n## this kind of test until we figure out what algorithm they use.\n##\nAC_MSG_CHECKING([if using special algorithm to convert long double to (unsigned) long values])\n\n## NOTE: Place all configure test programs into cmake's source file, then use a preprocessor directive\n## to select the proper test program. This is done by echoing the #define and cat'ing the cmake\n## source file. (HDFFV-9467)\n\nTEST_SRC=\"`(echo \\\"#define H5_LDOUBLE_TO_LONG_SPECIAL_TEST 1\\\"; cat $srcdir/config/cmake/ConversionTests.c)`\"\n\nif test ${ac_cv_sizeof_long_double} = 0; then\n   hdf5_cv_ldouble_to_long_special=${hdf5_cv_ldouble_to_long_special=no}\nelse\n   AC_CACHE_VAL([hdf5_cv_ldouble_to_long_special],\n        [AC_RUN_IFELSE(\n            [AC_LANG_SOURCE([$TEST_SRC])]\n    , [hdf5_cv_ldouble_to_long_special=yes], [hdf5_cv_ldouble_to_long_special=no],)])\nfi\n\nif test ${hdf5_cv_ldouble_to_long_special} = \"yes\"; then\n  AC_DEFINE([LDOUBLE_TO_LONG_SPECIAL], [1],\n            [Define if your system converts long double to (unsigned) long values with special algorithm.])\n  AC_MSG_RESULT([yes])\nelse\n  AC_MSG_RESULT([no])\nfi\n\n## ----------------------------------------------------------------------\n## Set the flag to indicate that the machine is using a special algorithm\n## to convert some values of '(unsigned) long' to 'long double' values.\n## (This flag should be off for all machines, except for IBM Power6 Linux,\n## when the bit sequences are 003fff..., 007fff..., 00ffff..., 01ffff...,\n## ..., 7fffff..., the compiler uses a unknown algorithm.  We define a\n## macro and skip the test for now until we know about the algorithm.\n##\nAC_MSG_CHECKING([if using special algorithm to convert (unsigned) long to long double values])\n\nTEST_SRC=\"`(echo \\\"#define H5_LONG_TO_LDOUBLE_SPECIAL_TEST 1\\\"; cat $srcdir/config/cmake/ConversionTests.c)`\"\n\nif test ${ac_cv_sizeof_long_double} = 0; then\n   hdf5_cv_long_to_ldouble_special=${hdf5_cv_long_to_ldouble_special=no}\nelse\n   AC_CACHE_VAL([hdf5_cv_long_to_ldouble_special],\n        [AC_RUN_IFELSE(\n            [AC_LANG_SOURCE([$TEST_SRC])]\n    , [hdf5_cv_long_to_ldouble_special=yes], [hdf5_cv_long_to_ldouble_special=no],)])\nfi\n\nif test ${hdf5_cv_long_to_ldouble_special} = \"yes\"; then\n  AC_DEFINE([LONG_TO_LDOUBLE_SPECIAL], [1],\n            [Define if your system can convert (unsigned) long to long double values with special algorithm.])\n  AC_MSG_RESULT([yes])\nelse\n  AC_MSG_RESULT([no])\nfi\n\n## ----------------------------------------------------------------------\n## Set the flag to indicate that the machine can accurately convert\n## 'long double' to '(unsigned) long long' values.  (This flag should\n## be set for all machines, except for Mac OS 10.4, SGI IRIX64 6.5 and\n## Powerpc Linux using XL compilers.\n## When the bit sequence of long double is 0x4351ccf385ebc8a0bfcc2a3c...,\n## the values of (unsigned)long long start to go wrong on these\n## two machines.  Adjusting it higher to 0x4351ccf385ebc8a0dfcc... or\n## 0x4351ccf385ebc8a0ffcc... will make the converted values wildly wrong.\n## This test detects this wrong behavior and disable the test.\n##\nAC_MSG_CHECKING([if correctly converting long double to (unsigned) long long values])\n\nTEST_SRC=\"`(echo \\\"#define H5_LDOUBLE_TO_LLONG_ACCURATE_TEST 1\\\"; cat $srcdir/config/cmake/ConversionTests.c)`\"\n\nif test ${ac_cv_sizeof_long_double} = 0; then\n   hdf5_cv_ldouble_to_llong_accurate=${hdf5_cv_ldouble_to_llong_accurate=no}\nelse\n   AC_CACHE_VAL([hdf5_cv_ldouble_to_llong_accurate],\n        [AC_RUN_IFELSE([AC_LANG_SOURCE([$TEST_SRC])],\n        [hdf5_cv_ldouble_to_llong_accurate=yes], [hdf5_cv_ldouble_to_llong_accurate=no],[])])\nfi\n\nif test ${hdf5_cv_ldouble_to_llong_accurate} = \"yes\"; then\n  AC_DEFINE([LDOUBLE_TO_LLONG_ACCURATE], [1],\n            [Define if your system can convert long double to (unsigned) long long values correctly.])\n  AC_MSG_RESULT([yes])\nelse\n  AC_MSG_RESULT([no])\nfi\n\n\n## ----------------------------------------------------------------------\n## Set the flag to indicate that the machine can accurately convert\n## '(unsigned) long long' to 'long double' values.  (This flag should be\n## set for all machines, except for Mac OS 10.4 and Powerpc Linux using\n## XL compilers.\n## When the bit sequences are 003fff..., 007fff..., 00ffff..., 01ffff...,\n## ..., 7fffff..., the converted values are twice as big as they should be.\n##\nAC_MSG_CHECKING([if correctly converting (unsigned) long long to long double values])\n\nTEST_SRC=\"`(echo \\\"#define H5_LLONG_TO_LDOUBLE_CORRECT_TEST 1\\\"; cat $srcdir/config/cmake/ConversionTests.c)`\"\n\nif test ${ac_cv_sizeof_long_double} = 0; then\n   hdf5_cv_llong_to_ldouble_correct=${hdf5_cv_llong_to_ldouble_correct=no}\nelse\n   AC_CACHE_VAL([hdf5_cv_llong_to_ldouble_correct],\n        [AC_RUN_IFELSE([AC_LANG_SOURCE([$TEST_SRC])],\n        [hdf5_cv_llong_to_ldouble_correct=yes], [hdf5_cv_llong_to_ldouble_correct=no],[])])\nfi\n\nif test ${hdf5_cv_llong_to_ldouble_correct} = \"yes\"; then\n  AC_DEFINE([LLONG_TO_LDOUBLE_CORRECT], [1],\n            [Define if your system can convert (unsigned) long long to long double values correctly.])\n  AC_MSG_RESULT([yes])\nelse\n  AC_MSG_RESULT([no])\nfi\n\n## ----------------------------------------------------------------------\n## Set the flag to indicate that the machine is IBM ppc64le and cannot\n## accurately convert some long double values.\n##\nAC_MSG_CHECKING([if the system is IBM ppc64le and cannot correctly convert some long double values])\n\nTEST_SRC=\"`(echo \\\"#define H5_DISABLE_SOME_LDOUBLE_CONV_TEST 1\\\"; cat $srcdir/config/cmake/ConversionTests.c)`\"\n\nif test ${ac_cv_sizeof_long_double} = 0; then\n   hdf5_cv_disable_some_ldouble_conv=${hdf5_cv_disable_some_ldouble_conv=no}\nelse\n   AC_CACHE_VAL([hdf5_cv_disable_some_ldouble_conv],\n        [AC_RUN_IFELSE([AC_LANG_SOURCE([$TEST_SRC])],\n        [hdf5_cv_disable_some_ldouble_conv=yes], [hdf5_cv_disable_some_ldouble_conv=no],[])])\nfi\n\nif test ${hdf5_cv_disable_some_ldouble_conv} = \"yes\"; then\n  AC_DEFINE([DISABLE_SOME_LDOUBLE_CONV], [1],\n            [Define if your system is IBM ppc64le and cannot convert some long double values correctly.])\n  AC_MSG_RESULT([yes])\nelse\n  AC_MSG_RESULT([no])\nfi\n\n## ----------------------------------------------------------------------\n## Set some variables for general configuration information to be saved\n## and installed with the libraries (used to generate libhdf5.settings).\n##\n\n## HDF5 version from the first line of the README.txt file.\nH5_VERSION=\"`cut -d' ' -f3 $srcdir/README.txt | head -1`\"\nAC_SUBST([H5_VERSION])\n\n## Configuration date\nAC_SUBST([CONFIG_DATE]) CONFIG_DATE=\"`date`\"\n\n## User doing the configuration\nAC_SUBST([CONFIG_USER]) CONFIG_USER=\"`whoami`@`hostname`\"\nif test -n \"$ORGANIZATION\"; then\n  CONFIG_USER=\"$CONFIG_USER at $ORGANIZATION\"\nfi\n\n## Configuration mode (production, debug, etc.) saved above.\nAC_SUBST([CONFIG_MODE])\n\n## Byte sex from the AC_C_BIGENDIAN macro.\nAC_SUBST([BYTESEX])\nif test \"X$ac_cv_c_bigendian\" = \"Xyes\"; then\n  BYTESEX=\"big-endian\"\nelse\n  BYTESEX=\"little-endian\"\nfi\n\n\nif test \"X$ac_cv_c_bigendian\" = \"Xyes\"; then\n  WORDS_BIGENDIAN=\"yes\"\nelse\n  WORDS_BIGENDIAN=\"no\"\nfi\nAC_SUBST([WORDS_BIGENDIAN])\n\n## Parallel support? (set above except empty if none)\nPARALLEL=${PARALLEL:-no}\n\n## Parallel writes to filtered datasets support?\nPARALLEL_FILTERED_WRITES=${PARALLEL_FILTERED_WRITES:-no}\n\n## >2GB writes in parallel support?\nLARGE_PARALLEL_IO=${LARGE_PARALLEL_IO:-no}\n\n## Compiler with version information. This consists of the full path\n## name of the compiler and the reported version number.\nAC_SUBST([CC_VERSION])\n## Strip anything that looks like a flag off of $CC\nCC_NOFLAGS=`echo $CC | sed 's/ -.*//'`\n\nif `echo $CC_NOFLAGS | grep ^/ >/dev/null 2>&1`; then\n  CC_VERSION=\"$CC\"\nelse\n  CC_VERSION=\"$CC\";\n  for x in `echo $PATH | sed -e 's/:/ /g'`; do\n    if test -x $x/$CC_NOFLAGS; then\n      CC_VERSION=\"$x/$CC\"\n      break\n    fi\n  done\nfi\nif test -n \"$cc_version_info\"; then\n  CC_VERSION=\"$CC_VERSION ( $cc_version_info)\"\nfi\n\nAC_SUBST([FC_VERSION])\n## Strip anything that looks like a flag off of $FC\nFC_NOFLAGS=`echo $FC | sed 's/ -.*//'`\n\nif `echo $FC_NOFLAGS | grep ^/ >/dev/null 2>&1`; then\n  FC_VERSION=\"$FC\"\nelse\n  FC_VERSION=\"$FC\";\n  for x in `echo $PATH | sed -e 's/:/ /g'`; do\n    if test -x $x/$FC_NOFLAGS; then\n      FC_VERSION=\"$x/$FC\"\n      break\n    fi\n  done\nfi\nif test -n \"$fc_version_info\"; then\n  FC_VERSION=\"$FC_VERSION ( $fc_version_info)\"\nfi\n\nAC_SUBST([CXX_VERSION])\n## Strip anything that looks like a flag off of $CXX\nCXX_NOFLAGS=`echo $CXX | sed 's/ -.*//'`\n\nif `echo $CXX_NOFLAGS | grep ^/ >/dev/null 2>&1`; then\n  CXX_VERSION=\"$CXX\"\nelse\n  CXX_VERSION=\"$CXX\";\n  for x in `echo $PATH | sed -e 's/:/ /g'`; do\n    if test -x $x/$CXX_NOFLAGS; then\n      CXX_VERSION=\"$x/$CXX\"\n      break\n    fi\n  done\nfi\nif test -n \"$cxx_version_info\"; then\n  CXX_VERSION=\"$CXX_VERSION ( $cxx_version_info)\"\nfi\n\nAC_SUBST([JAVA_VERSION])\n## Strip anything that looks like a flag off of $JAVA\nJAVA_NOFLAGS=`echo $JAVA | sed 's/ -.*//'`\n\nif `echo $JAVA_NOFLAGS | grep ^/ >/dev/null 2>&1`; then\n  JAVA_VERSION=\"$JAVA\"\nelse\n  JAVA_VERSION=\"$JAVA\";\n  for x in `echo $PATH | sed -e 's/:/ /g'`; do\n    if test -x $x/$JAVA_NOFLAGS; then\n      JAVA_VERSION=\"$x/$JAVA\"\n      break\n    fi\n  done\nfi\njava_version_info=`$JAVA -version 2>&1 |\\\n  grep 'version' | sed -e 's/version \"//' | sed -e 's/\"//'`\nif test -n \"$java_version_info\"; then\n  JAVA_VERSION=\"$JAVA_VERSION ($java_version_info)\"\nfi\n\n## ----------------------------------------------------------------------\n## Where is the root of the source tree. Give an absolute address so\n## we can find it no matter which directory of the distribution is our\n## current directory. The built-in pwd fails on some systems, but the\n## /bin/pwd version works OK.\n##\nif test -x /bin/pwd; then\n  pwd=/bin/pwd\nelse\n  pwd=pwd\nfi\nAC_SUBST([ROOT]) ROOT=\"`$pwd`\"\n\n## ----------------------------------------------------------------------\n## Some programs shouldn't be built by default (e.g., programs to generate\n## data files used by tests, some optional tests).\n## Check if they want such programs built anyway.\n##\nAC_MSG_CHECKING([additional programs should be built])\nAC_ARG_ENABLE([build-all],\n     [AS_HELP_STRING([--enable-build-all],\n                     [Build helper programs that only developers should need [default=no]])],\n     [BUILD_ALL=$enableval],\n     [BUILD_ALL=no])\n\nif test \"X$BUILD_ALL\" = \"Xyes\"; then\n echo \"yes\"\nelse\n echo \"no\"\nfi\nAM_CONDITIONAL([BUILD_ALL_CONDITIONAL], [test \"X$BUILD_ALL\" = \"Xyes\"])\n\n## ----------------------------------------------------------------------\n## Enable deprecated public API symbols\n##\n\n## Enabled unless the build mode is clean.\nif test \"X-$BUILD_MODE\" = \"X-clean\" ; then\n  DEPREC_SYMBOLS=no\nelse\n  DEPREC_SYMBOLS=yes\nfi\n\nAC_SUBST([DEPRECATED_SYMBOLS])\nAC_MSG_CHECKING([if deprecated public symbols are available]);\nAC_ARG_ENABLE([deprecated-symbols],\n              [AS_HELP_STRING([--enable-deprecated-symbols],\n                     [Enable deprecated public API symbols.\n                     [default=yes (unless build mode = clean)]\n                     ])],\n              [DEPREC_SYMBOLS=$enableval])\n\ncase \"X-$DEPREC_SYMBOLS\" in\n  X-yes)\n    AC_MSG_RESULT([yes])\n    DEPRECATED_SYMBOLS=yes\n    ;;\n  X-no|*)\n    AC_MSG_RESULT([no])\n    DEPRECATED_SYMBOLS=no\n    AC_DEFINE([NO_DEPRECATED_SYMBOLS], [1],\n              [Define if deprecated public API symbols are disabled])\n    ;;\nesac\n\n## --------------------------------------------------------------------------\n## Which version of the public APIs should the 'base' versioned symbols use?\n##\n\nAC_SUBST([DEFAULT_API_VERSION])\nAC_MSG_CHECKING([which version of public symbols to use by default])\nAC_ARG_WITH([default-api-version],\n            [AS_HELP_STRING([--with-default-api-version=(v16|v18|v110|v112)],\n                            [Specify default release version of public symbols\n                             [default=v112]])],,\n            [withval=v112])\n\nif test \"X$withval\" = \"Xv16\"; then\n    AC_MSG_RESULT([v16])\n    DEFAULT_API_VERSION=v16\n    AC_DEFINE([USE_16_API_DEFAULT], [1],\n              [Define using v1.6 public API symbols by default])\nelif test \"X$withval\" = \"Xv18\"; then\n    AC_MSG_RESULT([v18])\n    DEFAULT_API_VERSION=v18\n    AC_DEFINE([USE_18_API_DEFAULT], [1],\n              [Define using v1.8 public API symbols by default])\nelif test \"X$withval\" = \"Xv110\"; then\n    AC_MSG_RESULT([v110])\n    DEFAULT_API_VERSION=v110\n    AC_DEFINE([USE_110_API_DEFAULT], [1],\n              [Define using v1.10 public API symbols by default])\nelif test \"X$withval\" = \"Xv112\"; then\n    AC_MSG_RESULT([v112])\n    DEFAULT_API_VERSION=v112\n    AC_DEFINE([USE_112_API_DEFAULT], [1],\n              [Define using v1.12 public API symbols by default])\nelse\n    AC_MSG_ERROR([invalid version of public symbols given])\nfi\n\n## It's an error to try to disable deprecated public API symbols while\n## choosing an older version of the public API as the default. However,\n## if the user insists on doing this via the --enable-unsupported configure\n## flag, we'll let them.\nif test \"X${ALLOW_UNSUPPORTED}\" != \"Xyes\"; then\n  if test \"X${DEFAULT_API_VERSION}\" != \"Xv112\" -a \"X${DEPRECATED_SYMBOLS}\" = \"Xno\" ; then\n    AC_MSG_ERROR([Removing old public API symbols not allowed when using them as default public API symbols. Use --enable-unsupported to override this error.])\n  fi\nfi\n\n## ----------------------------------------------------------------------\n## Enable strict file format checks\n##\nAC_SUBST([STRICT_FORMAT_CHECKS])\nAC_MSG_CHECKING([whether to perform strict file format checks]);\nAC_ARG_ENABLE([strict-format-checks],\n              [AS_HELP_STRING([--enable-strict-format-checks],\n                     [Enable strict file format checks.\n                      [default=yes if debug build, otherwise no]\n                     ])],\n             [STRICT_FORMAT_CHECKS=$enableval])\n\n## Set the default level. This depends on the compiler mode.\nif test \"X-$STRICT_FORMAT_CHECKS\" = X- ; then\n  if test \"X-$BUILD_MODE\" = \"X-debug\" ; then\n    STRICT_FORMAT_CHECKS=yes\n  else\n    STRICT_FORMAT_CHECKS=no\n  fi\nfi\n\ncase \"X-$STRICT_FORMAT_CHECKS\" in\n  X-yes)\n    AC_MSG_RESULT([yes])\n    AC_DEFINE([STRICT_FORMAT_CHECKS], [1],\n              [Define if strict file format checks are enabled])\n    ;;\n  X-no)\n    AC_MSG_RESULT([no])\n    ;;\n  *)\n    AC_MSG_ERROR([Unrecognized value: $STRICT_FORMAT_CHECKS])\n    ;;\nesac\n\n\n## ----------------------------------------------------------------------\n## Enable use of pread/pwrite instead of read/write in certain VFDs.\n##\nAC_SUBST([PREADWRITE])\n\n## Check these first to avoid interspersed output in the AC_ARG_ENABLE line\n## below. (Probably overkill to check for both, but we'll be extra careful)\nPREADWRITE_HAVE_BOTH=yes\nAC_CHECK_FUNC([pread], [], [PREADWRITE_HAVE_BOTH=no])\nAC_CHECK_FUNC([pwrite], [], [PREADWRITE_HAVE_BOTH=no])\n\nAC_MSG_CHECKING([whether to use pread/pwrite instead of read/write in certain VFDs])\nAC_ARG_ENABLE([preadwrite],\n              [AS_HELP_STRING([--enable-preadwrite],\n                              [Enable using pread/pwrite instead of read/write in sec2/log/core VFDs.\n                              [default=yes if pread/pwrite are present]])],\n              [PREADWRITE=$enableval])\n\n## Set the default level.\nif test \"X-$PREADWRITE\" = X- ; then\n  PREADWRITE=yes\nfi\n\ncase \"X-$PREADWRITE\" in\n  X-yes)\n      if test \"X-$PREADWRITE_HAVE_BOTH\" = \"X-yes\"; then\n        AC_DEFINE([HAVE_PREADWRITE], [1], [Define if both pread and pwrite exist.])\n        AC_MSG_RESULT([yes])\n      else\n        AC_MSG_RESULT([no])\n      fi\n    ;;\n  X-no)\n      AC_MSG_RESULT([no])\n    ;;\n  *)\n      AC_MSG_ERROR([Unrecognized value: $PREADWRITE])\n    ;;\nesac\n\n\n## ----------------------------------------------------------------------\n## Enable embedded library information\n##\nAC_MSG_CHECKING([whether to have library information embedded in the executables])\nAC_ARG_ENABLE([embedded-libinfo],\n    [AS_HELP_STRING([--enable-embedded-libinfo],\n    [Enable embedded library information [default=yes]])],\n    [enable_embedded_libinfo=$enableval],\n    [enable_embedded_libinfo=yes])\n\n   if test \"${enable_embedded_libinfo}\" = \"yes\"; then\n      AC_MSG_RESULT([yes])\n      AC_DEFINE([HAVE_EMBEDDED_LIBINFO], [1],\n                [Define if library information should be embedded in the executables])\n   else\n      AC_MSG_RESULT([no])\n    fi\n\n\n## ----------------------------------------------------------------------\n## Check if pointer alignments are enforced\n##\nAC_MSG_CHECKING([if alignment restrictions are strictly enforced])\n\nTEST_SRC=\"`(echo \\\"#define H5_NO_ALIGNMENT_RESTRICTIONS_TEST 1\\\"; cat $srcdir/config/cmake/ConversionTests.c)`\"\n\nAC_RUN_IFELSE([\n    AC_LANG_SOURCE([$TEST_SRC])\n    ], [\n    AC_DEFINE([NO_ALIGNMENT_RESTRICTIONS], [1], [Define if we can violate pointer alignment restrictions])\n    AC_MSG_RESULT([no])\n    ], [\n    AC_MSG_RESULT([yes])\n    ], [\n    AC_MSG_RESULT([unknown, assuming yes])\n    ])\n\n\n## ----------------------------------------------------------------------\n## Restore user's CFLAGS.\nCFLAGS=\"$saved_user_CFLAGS\"\nFCFLAGS=\"$saved_user_FCFLAGS\"\nCXXFLAGS=\"$saved_user_CXXFLAGS\"\nCPPFLAGS=\"$saved_user_CPPFLAGS\"\nJAVACFLAGS=\"$saved_user_JAVACFLAGS\"\nJAVAFLAGS=\"$saved_user_JAVAFLAGS\"\nLDFLAGS=\"$saved_user_LDFLAGS\"\n\n\n## ----------------------------------------------------------------------\n## Create automake conditionals to tell automake makefiles which directories\n## need to be compiled\n\nAM_CONDITIONAL([BUILD_CXX_CONDITIONAL], [test \"X$HDF_CXX\" = \"Xyes\"])\nAM_CONDITIONAL([BUILD_PARALLEL_CONDITIONAL], [test \"X$PARALLEL\" = \"Xyes\"])\nAM_CONDITIONAL([BUILD_FORTRAN_CONDITIONAL], [test \"X$HDF_FORTRAN\" = \"Xyes\"])\nAM_CONDITIONAL([BUILD_JAVA_CONDITIONAL], [test \"X$HDF_JAVA\" = \"Xyes\"])\nAM_CONDITIONAL([BUILD_HDF5_HL_CONDITIONAL], [test \"X$HDF5_HL\" = \"Xyes\"])\nAM_CONDITIONAL([BUILD_TESTS_CONDITIONAL], [test \"X$HDF5_TESTS\" = \"Xyes\"])\nAM_CONDITIONAL([BUILD_TESTS_PARALLEL_CONDITIONAL], [test -n \"$TESTPARALLEL\"])\nAM_CONDITIONAL([BUILD_TOOLS_CONDITIONAL], [test \"X$HDF5_TOOLS\" = \"Xyes\"])\n\n## ----------------------------------------------------------------------\n## Build the Makefiles.\n##\n\n## The directory search list\nAC_SUBST([SEARCH]) SEARCH='$(srcdir) $(top_builddir)/src $(top_srcdir)/src'\nexport SEARCH\n\n## Some cleanup stuff\nrm -f conftest conftest.o conftest.c dummy.o *.mod\n\n## Build config.status, touch the stamp files, and build all the Makefiles.\n## The order is such that the first `make' does not need to update any\n## configuration information. See config/commence.in for the order in which\n## things need to be done.\n\n## First the stamp1 file for H5config.h.in\nmkdir ./config >/dev/null 2>&1\ntouch ./config/stamp1\n\n## Then the config.status file (but not makefiles)\nsaved_no_create=$no_create\nno_create=yes\n\nPARALLEL_MAKE=\"\"\nFORTRAN_PARALLEL_MAKE=\"\"\n\nif test -n \"$TESTPARALLEL\"; then\n  PARALLEL_MAKE=\"$TESTPARALLEL/Makefile\"\n\n  if test \"X$HDF_FORTRAN\" = \"Xyes\"; then\n    FORTRAN_PARALLEL_MAKE=fortran/$TESTPARALLEL/Makefile\n  fi\nfi\nLT_OUTPUT\nno_create=$saved_no_create\n\n## Then the stamp2 file for H5config.h\ntouch ./config/stamp2\n\n## Finally the makefiles\ntest \"$no_create\" = yes || ${CONFIG_SHELL-/bin/sh} $CONFIG_STATUS || exit 1\n\n## Are we compiling static libraries, shared libraries, or both?  This\n## is only used for the libhdf5.settings file. We can't just look at\n## $enable_static and $enable_shared because if they're yes the ltconfig\n## might have decided that one or the other is simply not possible.\n## Therefore we have to ask the generated `libtool' shell script\n## which 'features' it has enabled.\nif (./libtool --features | grep '^enable shared libraries' > /dev/null); then\n  enable_shared=yes\nelse\n  enable_shared=no\nfi\n\nif (./libtool --features | grep '^enable static libraries' > /dev/null); then\n  enable_static=yes\nelse\n  enable_static=no\nfi\n\n## Expose things for *.in markup\nAC_SUBST([STATIC_SHARED])\nAC_SUBST([enable_shared])\nAC_SUBST([enable_static])\n\nif test \"X$enable_static\" = \"Xyes\" && test \"X$enable_shared\" = \"Xyes\"; then\n  STATIC_SHARED=\"static, shared\"\nelif test \"X$enable_static\" = \"Xyes\"; then\n  STATIC_SHARED=\"static\"\nelif test \"X$enable_shared\" = \"Xyes\"; then\n  STATIC_SHARED=\"shared\"\nelse\n  STATIC_SHARED=\"none\"\nfi\n\nif test \"X$HDF_FORTRAN\" = \"Xyes\"; then\n\n  ### libtool does not pass the correct argument linking (-Wl,-Wl,,) for the NAG Fortran compiler\n  ### on Linux (other OSs have not been tested).\n  ### Therefore, detect if we are using the NAG Fortran compiler, and replace the wl=\"-Wl,\" for Fortran to\n  ### wl=\"-Wl,-Wl,,\" in the libtool file. (HDFFV-10037)\n  case \"`uname`\" in\n    Linux*)\n\n    fortran_linux_linker_option=\"-Wl,\"\n    if test \"X$FC_BASENAME\" = \"Xnagfor\"; then\n       fortran_linux_linker_option=\"-Wl,-Wl,,\"\n    fi\n\n    ## Set the correct linker option for use in h5fc.in markup\n    AC_SUBST([fortran_linux_linker_option])\n    ;;\n  esac\n\nfi\n\n## ----------------------------------------------------------------------\n## Set a macro if shared library is enabled.\n##\nAM_CONDITIONAL([HAVE_SHARED_CONDITIONAL], [test \"X$enable_shared\" = \"Xyes\"])\n\nAC_CONFIG_FILES([src/libhdf5.settings\n                 Makefile\n                 src/Makefile\n                 test/Makefile\n                 test/H5srcdir_str.h\n                 test/testabort_fail.sh\n                 test/testcheck_version.sh\n                 test/testerror.sh\n                 test/testexternal_env.sh\n                 test/testflushrefresh.sh\n                 test/testlibinfo.sh\n                 test/testlinks_env.sh\n                 test/testswmr.sh\n                 test/testvds_env.sh\n                 test/testvdsswmr.sh\n                 test/test_filter_plugin.sh\n                 test/test_usecases.sh\n                 test/test_vol_plugin.sh\n                 testpar/Makefile\n                 testpar/testpflush.sh\n                 tools/Makefile\n                 tools/lib/Makefile\n                 tools/libtest/Makefile\n                 tools/src/Makefile\n                 tools/src/h5dump/Makefile\n                 tools/src/h5import/Makefile\n                 tools/src/h5diff/Makefile\n                 tools/src/h5jam/Makefile\n                 tools/src/h5repack/Makefile\n                 tools/src/h5ls/Makefile\n                 tools/src/h5copy/Makefile\n                 tools/src/misc/Makefile\n                 tools/src/h5stat/Makefile\n                 tools/test/Makefile\n                 tools/test/h5dump/Makefile\n                 tools/test/h5dump/h5dump_plugin.sh\n                 tools/test/h5dump/testh5dump.sh\n                 tools/test/h5dump/testh5dumppbits.sh\n                 tools/test/h5dump/testh5dumpvds.sh\n                 tools/test/h5dump/testh5dumpxml.sh\n                 tools/test/h5ls/Makefile\n                 tools/test/h5ls/h5ls_plugin.sh\n                 tools/test/h5ls/testh5ls.sh\n                 tools/test/h5ls/testh5lsvds.sh\n                 tools/test/h5import/Makefile\n                 tools/test/h5import/h5importtestutil.sh\n                 tools/test/h5diff/Makefile\n                 tools/test/h5diff/h5diff_plugin.sh\n                 tools/test/h5diff/testh5diff.sh\n                 tools/test/h5diff/testph5diff.sh\n                 tools/src/h5format_convert/Makefile\n                 tools/test/h5format_convert/Makefile\n                 tools/test/h5format_convert/testh5fc.sh\n                 tools/test/h5jam/Makefile\n                 tools/test/h5jam/testh5jam.sh\n                 tools/test/h5repack/Makefile\n                 tools/test/h5repack/h5repack.sh\n                 tools/test/h5repack/h5repack_plugin.sh\n                 tools/test/h5copy/Makefile\n                 tools/test/h5copy/testh5copy.sh\n                 tools/test/misc/Makefile\n                 tools/test/misc/testh5clear.sh\n                 tools/test/misc/testh5mkgrp.sh\n                 tools/test/misc/testh5repart.sh\n                 tools/test/misc/vds/Makefile\n                 tools/test/h5stat/Makefile\n                 tools/test/h5stat/testh5stat.sh\n                 tools/test/perform/Makefile\n                 examples/Makefile\n                 examples/run-c-ex.sh\n                 examples/testh5cc.sh\n                 bin/h5cc\n                 bin/Makefile\n                 c++/Makefile\n                 c++/src/Makefile\n                 c++/src/h5c++\n                 c++/test/Makefile\n                 c++/test/H5srcdir_str.h\n                 c++/examples/Makefile\n                 c++/examples/run-c++-ex.sh\n                 c++/examples/testh5c++.sh\n                 fortran/Makefile\n                 fortran/src/h5fc\n                 fortran/src/Makefile\n                 fortran/src/H5fort_type_defines.h\n                 fortran/test/Makefile\n                 fortran/testpar/Makefile\n                 fortran/examples/Makefile\n                 fortran/examples/run-fortran-ex.sh\n                 fortran/examples/testh5fc.sh\n                 java/Makefile\n                 java/src/Makefile\n                 java/src/jni/Makefile\n                 java/test/Makefile\n                 java/test/junit.sh\n                 java/examples/Makefile\n                 java/examples/intro/Makefile\n                 java/examples/intro/JavaIntroExample.sh\n                 java/examples/datasets/Makefile\n                 java/examples/datasets/JavaDatasetExample.sh\n                 java/examples/datatypes/Makefile\n                 java/examples/datatypes/JavaDatatypeExample.sh\n                 java/examples/groups/Makefile\n                 java/examples/groups/JavaGroupExample.sh\n                 hl/Makefile\n                 hl/src/Makefile\n                 hl/test/Makefile\n                 hl/test/H5srcdir_str.h\n                 hl/tools/Makefile\n                 hl/tools/gif2h5/Makefile\n                 hl/tools/gif2h5/h52giftest.sh\n                 hl/tools/h5watch/Makefile\n                 hl/tools/h5watch/testh5watch.sh\n                 hl/examples/Makefile\n                 hl/examples/run-hlc-ex.sh\n                 hl/c++/Makefile\n                 hl/c++/src/Makefile\n                 hl/c++/test/Makefile\n                 hl/c++/examples/Makefile\n                 hl/c++/examples/run-hlc++-ex.sh\n                 hl/fortran/Makefile\n                 hl/fortran/src/Makefile\n                 hl/fortran/test/Makefile\n                 hl/fortran/examples/Makefile\n                 hl/fortran/examples/run-hlfortran-ex.sh])\n\nAC_CONFIG_COMMANDS([.classes], [], [$MKDIR_P java/src/.classes;\n                $MKDIR_P java/test/.classes;\n                $MKDIR_P java/examples/intro/.classes;\n                $MKDIR_P java/examples/datasets/.classes;\n                $MKDIR_P java/examples/datatypes/.classes;\n                $MKDIR_P java/examples/groups/.classes])\n\nAC_OUTPUT\n\nchmod 755 bin/h5cc\nif test \"X$HDF_CXX\" = \"Xyes\"; then\n  chmod 755 c++/src/h5c++\nfi\n\n\nif test \"X$HDF_FORTRAN\" = \"Xyes\"; then\n  chmod 755 fortran/src/h5fc\n  ## libtool does not pass the correct argument linker (wl=) for the Intel Fortran compiler\n  ## on OS X, which is needed when building shared libraries on OS X.  This script\n  ## replaces the 3rd occurrence, which is for Fortran, of wl=\"\" with wl=\"-Wl,\" (HDFFV-2772)\n  case \"`uname`\" in\n    Darwin*)\n      cat libtool | awk '/wl=\\\"/{c++;if(c==3){sub(\"wl=\\\"\\\"\",\"wl=\\\"-Wl,\\\"\");c=0}}1' > libtool.tmp && mv -f libtool.tmp libtool && chmod 755 libtool\n      ;;\n  esac\n\n  ### libtool does not pass the correct argument linking (-Wl,-Wl,,) for the NAG Fortran compiler\n  ### on Linux (other OSs have not been tested).\n  ### Therefore, detect if we are using the NAG Fortran compiler, and replace the wl=\"-Wl,\" for Fortran to\n  ### wl=\"-Wl,-Wl,,\" in the libtool file. (HDFFV-10037)\n  case \"`uname`\" in\n    Linux*)\n      if test \"X$FC_BASENAME\" = \"Xnagfor\"; then\n         cat libtool | awk '/BEGIN LIBTOOL TAG CONFIG: FC/{flag=1}flag&&/wl=/{$NF=\"wl=\\\"-Wl,-Wl,,\\\"\";flag=0}1' > libtool.tmp && mv -f libtool.tmp libtool && chmod 755 libtool\n      fi\n      ;;\n  esac\nfi\n\n## HDF5 configure code created by autotools with gcc 4.9.2 is adding problematic\n## linker flags:  -l with no library name; -l <libname>, specifically gfortran or m.\n## This sed script corrects \"-l <libname>\" first and then \"-l \" with no library name.\n## If the order is not preserved, all instances of \"-l \" will be removed.\nsed -e '/^postdeps/ s/-l \\([a-zA-Z]\\)/-l\\1/g' -e '/^postdeps/ s/-l //g' -i libtool\n\n## show the configure settings\ncat src/libhdf5.settings\n",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/bin/ltmain.sh": "#! /bin/sh\n## DO NOT EDIT - This file generated from ./build-aux/ltmain.in\n##               by inline-source v2014-01-03.01\n\n# libtool (GNU libtool) 2.4.6\n# Provide generalized library-building support services.\n# Written by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n\n# Copyright (C) 1996-2015 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# GNU Libtool is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# As a special exception to the GNU General Public License,\n# if you distribute this file as part of a program or library that\n# is built using GNU Libtool, you may include this file under the\n# same distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\nPROGRAM=libtool\nPACKAGE=libtool\nVERSION=2.4.6\npackage_revision=2.4.6\n\n\n## ------ ##\n## Usage. ##\n## ------ ##\n\n# Run './libtool --help' for help with using this script from the\n# command line.\n\n\n## ------------------------------- ##\n## User overridable command paths. ##\n## ------------------------------- ##\n\n# After configure completes, it has a better idea of some of the\n# shell tools we need than the defaults used by the functions shared\n# with bootstrap, so set those here where they can still be over-\n# ridden by the user, but otherwise take precedence.\n\n: ${AUTOCONF=\"autoconf\"}\n: ${AUTOMAKE=\"automake\"}\n\n\n## -------------------------- ##\n## Source external libraries. ##\n## -------------------------- ##\n\n# Much of our low-level functionality needs to be sourced from external\n# libraries, which are installed to $pkgauxdir.\n\n# Set a version string for this script.\nscriptversion=2015-01-20.17; # UTC\n\n# General shell script boiler plate, and helper functions.\n# Written by Gary V. Vaughan, 2004\n\n# Copyright (C) 2004-2015 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 3 of the License, or\n# (at your option) any later version.\n\n# As a special exception to the GNU General Public License, if you distribute\n# this file as part of a program or library that is built using GNU Libtool,\n# you may include this file under the same distribution terms that you use\n# for the rest of that program.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNES FOR A PARTICULAR PURPOSE. See the GNU\n# General Public License for more details.\n\n# You should have received a copy of the GNU General Public License\n# along with this program. If not, see <http://www.gnu.org/licenses/>.\n\n# Please report bugs or propose patches to gary@gnu.org.\n\n\n## ------ ##\n## Usage. ##\n## ------ ##\n\n# Evaluate this file near the top of your script to gain access to\n# the functions and variables defined here:\n#\n#   . `echo \"$0\" | ${SED-sed} 's|[^/]*$||'`/build-aux/funclib.sh\n#\n# If you need to override any of the default environment variable\n# settings, do that before evaluating this file.\n\n\n## -------------------- ##\n## Shell normalisation. ##\n## -------------------- ##\n\n# Some shells need a little help to be as Bourne compatible as possible.\n# Before doing anything else, make sure all that help has been provided!\n\nDUALCASE=1; export DUALCASE # for MKS sh\nif test -n \"${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :\n  emulate sh\n  NULLCMD=:\n  # Pre-4.2 versions of Zsh do word splitting on ${1+\"$@\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '${1+\"$@\"}'='\"$@\"'\n  setopt NO_GLOB_SUBST\nelse\n  case `(set -o) 2>/dev/null` in *posix*) set -o posix ;; esac\nfi\n\n# NLS nuisances: We save the old values in case they are required later.\n_G_user_locale=\n_G_safe_locale=\nfor _G_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\ndo\n  eval \"if test set = \\\"\\${$_G_var+set}\\\"; then\n          save_$_G_var=\\$$_G_var\n          $_G_var=C\n\t  export $_G_var\n\t  _G_user_locale=\\\"$_G_var=\\\\\\$save_\\$_G_var; \\$_G_user_locale\\\"\n\t  _G_safe_locale=\\\"$_G_var=C; \\$_G_safe_locale\\\"\n\tfi\"\ndone\n\n# CDPATH.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\n# Make sure IFS has a sensible default\nsp=' '\nnl='\n'\nIFS=\"$sp\t$nl\"\n\n# There are apparently some retarded systems that use ';' as a PATH separator!\nif test \"${PATH_SEPARATOR+set}\" != set; then\n  PATH_SEPARATOR=:\n  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {\n    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||\n      PATH_SEPARATOR=';'\n  }\nfi\n\n\n\n## ------------------------- ##\n## Locate command utilities. ##\n## ------------------------- ##\n\n\n# func_executable_p FILE\n# ----------------------\n# Check that FILE is an executable regular file.\nfunc_executable_p ()\n{\n    test -f \"$1\" && test -x \"$1\"\n}\n\n\n# func_path_progs PROGS_LIST CHECK_FUNC [PATH]\n# --------------------------------------------\n# Search for either a program that responds to --version with output\n# containing \"GNU\", or else returned by CHECK_FUNC otherwise, by\n# trying all the directories in PATH with each of the elements of\n# PROGS_LIST.\n#\n# CHECK_FUNC should accept the path to a candidate program, and\n# set $func_check_prog_result if it truncates its output less than\n# $_G_path_prog_max characters.\nfunc_path_progs ()\n{\n    _G_progs_list=$1\n    _G_check_func=$2\n    _G_PATH=${3-\"$PATH\"}\n\n    _G_path_prog_max=0\n    _G_path_prog_found=false\n    _G_save_IFS=$IFS; IFS=${PATH_SEPARATOR-:}\n    for _G_dir in $_G_PATH; do\n      IFS=$_G_save_IFS\n      test -z \"$_G_dir\" && _G_dir=.\n      for _G_prog_name in $_G_progs_list; do\n        for _exeext in '' .EXE; do\n          _G_path_prog=$_G_dir/$_G_prog_name$_exeext\n          func_executable_p \"$_G_path_prog\" || continue\n          case `\"$_G_path_prog\" --version 2>&1` in\n            *GNU*) func_path_progs_result=$_G_path_prog _G_path_prog_found=: ;;\n            *)     $_G_check_func $_G_path_prog\n\t\t   func_path_progs_result=$func_check_prog_result\n\t\t   ;;\n          esac\n          $_G_path_prog_found && break 3\n        done\n      done\n    done\n    IFS=$_G_save_IFS\n    test -z \"$func_path_progs_result\" && {\n      echo \"no acceptable sed could be found in \\$PATH\" >&2\n      exit 1\n    }\n}\n\n\n# We want to be able to use the functions in this file before configure\n# has figured out where the best binaries are kept, which means we have\n# to search for them ourselves - except when the results are already set\n# where we skip the searches.\n\n# Unless the user overrides by setting SED, search the path for either GNU\n# sed, or the sed that truncates its output the least.\ntest -z \"$SED\" && {\n  _G_sed_script=s/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/\n  for _G_i in 1 2 3 4 5 6 7; do\n    _G_sed_script=$_G_sed_script$nl$_G_sed_script\n  done\n  echo \"$_G_sed_script\" 2>/dev/null | sed 99q >conftest.sed\n  _G_sed_script=\n\n  func_check_prog_sed ()\n  {\n    _G_path_prog=$1\n\n    _G_count=0\n    printf 0123456789 >conftest.in\n    while :\n    do\n      cat conftest.in conftest.in >conftest.tmp\n      mv conftest.tmp conftest.in\n      cp conftest.in conftest.nl\n      echo '' >> conftest.nl\n      \"$_G_path_prog\" -f conftest.sed <conftest.nl >conftest.out 2>/dev/null || break\n      diff conftest.out conftest.nl >/dev/null 2>&1 || break\n      _G_count=`expr $_G_count + 1`\n      if test \"$_G_count\" -gt \"$_G_path_prog_max\"; then\n        # Best one so far, save it but keep looking for a better one\n        func_check_prog_result=$_G_path_prog\n        _G_path_prog_max=$_G_count\n      fi\n      # 10*(2^10) chars as input seems more than enough\n      test 10 -lt \"$_G_count\" && break\n    done\n    rm -f conftest.in conftest.tmp conftest.nl conftest.out\n  }\n\n  func_path_progs \"sed gsed\" func_check_prog_sed $PATH:/usr/xpg4/bin\n  rm -f conftest.sed\n  SED=$func_path_progs_result\n}\n\n\n# Unless the user overrides by setting GREP, search the path for either GNU\n# grep, or the grep that truncates its output the least.\ntest -z \"$GREP\" && {\n  func_check_prog_grep ()\n  {\n    _G_path_prog=$1\n\n    _G_count=0\n    _G_path_prog_max=0\n    printf 0123456789 >conftest.in\n    while :\n    do\n      cat conftest.in conftest.in >conftest.tmp\n      mv conftest.tmp conftest.in\n      cp conftest.in conftest.nl\n      echo 'GREP' >> conftest.nl\n      \"$_G_path_prog\" -e 'GREP$' -e '-(cannot match)-' <conftest.nl >conftest.out 2>/dev/null || break\n      diff conftest.out conftest.nl >/dev/null 2>&1 || break\n      _G_count=`expr $_G_count + 1`\n      if test \"$_G_count\" -gt \"$_G_path_prog_max\"; then\n        # Best one so far, save it but keep looking for a better one\n        func_check_prog_result=$_G_path_prog\n        _G_path_prog_max=$_G_count\n      fi\n      # 10*(2^10) chars as input seems more than enough\n      test 10 -lt \"$_G_count\" && break\n    done\n    rm -f conftest.in conftest.tmp conftest.nl conftest.out\n  }\n\n  func_path_progs \"grep ggrep\" func_check_prog_grep $PATH:/usr/xpg4/bin\n  GREP=$func_path_progs_result\n}\n\n\n## ------------------------------- ##\n## User overridable command paths. ##\n## ------------------------------- ##\n\n# All uppercase variable names are used for environment variables.  These\n# variables can be overridden by the user before calling a script that\n# uses them if a suitable command of that name is not already available\n# in the command search PATH.\n\n: ${CP=\"cp -f\"}\n: ${ECHO=\"printf %s\\n\"}\n: ${EGREP=\"$GREP -E\"}\n: ${FGREP=\"$GREP -F\"}\n: ${LN_S=\"ln -s\"}\n: ${MAKE=\"make\"}\n: ${MKDIR=\"mkdir\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n: ${SHELL=\"${CONFIG_SHELL-/bin/sh}\"}\n\n\n## -------------------- ##\n## Useful sed snippets. ##\n## -------------------- ##\n\nsed_dirname='s|/[^/]*$||'\nsed_basename='s|^.*/||'\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nsed_quote_subst='s|\\([`\"$\\\\]\\)|\\\\\\1|g'\n\n# Same as above, but do not quote variable references.\nsed_double_quote_subst='s/\\([\"`\\\\]\\)/\\\\\\1/g'\n\n# Sed substitution that turns a string into a regex matching for the\n# string literally.\nsed_make_literal_regex='s|[].[^$\\\\*\\/]|\\\\&|g'\n\n# Sed substitution that converts a w32 file name or path\n# that contains forward slashes, into one that contains\n# (escaped) backslashes.  A very naive implementation.\nsed_naive_backslashify='s|\\\\\\\\*|\\\\|g;s|/|\\\\|g;s|\\\\|\\\\\\\\|g'\n\n# Re-'\\' parameter expansions in output of sed_double_quote_subst that\n# were '\\'-ed in input to the same.  If an odd number of '\\' preceded a\n# '$' in input to sed_double_quote_subst, that '$' was protected from\n# expansion.  Since each input '\\' is now two '\\'s, look for any number\n# of runs of four '\\'s followed by two '\\'s and then a '$'.  '\\' that '$'.\n_G_bs='\\\\'\n_G_bs2='\\\\\\\\'\n_G_bs4='\\\\\\\\\\\\\\\\'\n_G_dollar='\\$'\nsed_double_backslash=\"\\\n  s/$_G_bs4/&\\\\\n/g\n  s/^$_G_bs2$_G_dollar/$_G_bs&/\n  s/\\\\([^$_G_bs]\\\\)$_G_bs2$_G_dollar/\\\\1$_G_bs2$_G_bs$_G_dollar/g\n  s/\\n//g\"\n\n\n## ----------------- ##\n## Global variables. ##\n## ----------------- ##\n\n# Except for the global variables explicitly listed below, the following\n# functions in the '^func_' namespace, and the '^require_' namespace\n# variables initialised in the 'Resource management' section, sourcing\n# this file will not pollute your global namespace with anything\n# else. There's no portable way to scope variables in Bourne shell\n# though, so actually running these functions will sometimes place\n# results into a variable named after the function, and often use\n# temporary variables in the '^_G_' namespace. If you are careful to\n# avoid using those namespaces casually in your sourcing script, things\n# should continue to work as you expect. And, of course, you can freely\n# overwrite any of the functions or variables defined here before\n# calling anything to customize them.\n\nEXIT_SUCCESS=0\nEXIT_FAILURE=1\nEXIT_MISMATCH=63  # $? = 63 is used to indicate version mismatch to missing.\nEXIT_SKIP=77\t  # $? = 77 is used to indicate a skipped test to automake.\n\n# Allow overriding, eg assuming that you follow the convention of\n# putting '$debug_cmd' at the start of all your functions, you can get\n# bash to show function call trace with:\n#\n#    debug_cmd='eval echo \"${FUNCNAME[0]} $*\" >&2' bash your-script-name\ndebug_cmd=${debug_cmd-\":\"}\nexit_cmd=:\n\n# By convention, finish your script with:\n#\n#    exit $exit_status\n#\n# so that you can set exit_status to non-zero if you want to indicate\n# something went wrong during execution without actually bailing out at\n# the point of failure.\nexit_status=$EXIT_SUCCESS\n\n# Work around backward compatibility issue on IRIX 6.5. On IRIX 6.4+, sh\n# is ksh but when the shell is invoked as \"sh\" and the current value of\n# the _XPG environment variable is not equal to 1 (one), the special\n# positional parameter $0, within a function call, is the name of the\n# function.\nprogpath=$0\n\n# The name of this program.\nprogname=`$ECHO \"$progpath\" |$SED \"$sed_basename\"`\n\n# Make sure we have an absolute progpath for reexecution:\ncase $progpath in\n  [\\\\/]*|[A-Za-z]:\\\\*) ;;\n  *[\\\\/]*)\n     progdir=`$ECHO \"$progpath\" |$SED \"$sed_dirname\"`\n     progdir=`cd \"$progdir\" && pwd`\n     progpath=$progdir/$progname\n     ;;\n  *)\n     _G_IFS=$IFS\n     IFS=${PATH_SEPARATOR-:}\n     for progdir in $PATH; do\n       IFS=$_G_IFS\n       test -x \"$progdir/$progname\" && break\n     done\n     IFS=$_G_IFS\n     test -n \"$progdir\" || progdir=`pwd`\n     progpath=$progdir/$progname\n     ;;\nesac\n\n\n## ----------------- ##\n## Standard options. ##\n## ----------------- ##\n\n# The following options affect the operation of the functions defined\n# below, and should be set appropriately depending on run-time para-\n# meters passed on the command line.\n\nopt_dry_run=false\nopt_quiet=false\nopt_verbose=false\n\n# Categories 'all' and 'none' are always available.  Append any others\n# you will pass as the first argument to func_warning from your own\n# code.\nwarning_categories=\n\n# By default, display warnings according to 'opt_warning_types'.  Set\n# 'warning_func'  to ':' to elide all warnings, or func_fatal_error to\n# treat the next displayed warning as a fatal error.\nwarning_func=func_warn_and_continue\n\n# Set to 'all' to display all warnings, 'none' to suppress all\n# warnings, or a space delimited list of some subset of\n# 'warning_categories' to display only the listed warnings.\nopt_warning_types=all\n\n\n## -------------------- ##\n## Resource management. ##\n## -------------------- ##\n\n# This section contains definitions for functions that each ensure a\n# particular resource (a file, or a non-empty configuration variable for\n# example) is available, and if appropriate to extract default values\n# from pertinent package files. Call them using their associated\n# 'require_*' variable to ensure that they are executed, at most, once.\n#\n# It's entirely deliberate that calling these functions can set\n# variables that don't obey the namespace limitations obeyed by the rest\n# of this file, in order that that they be as useful as possible to\n# callers.\n\n\n# require_term_colors\n# -------------------\n# Allow display of bold text on terminals that support it.\nrequire_term_colors=func_require_term_colors\nfunc_require_term_colors ()\n{\n    $debug_cmd\n\n    test -t 1 && {\n      # COLORTERM and USE_ANSI_COLORS environment variables take\n      # precedence, because most terminfo databases neglect to describe\n      # whether color sequences are supported.\n      test -n \"${COLORTERM+set}\" && : ${USE_ANSI_COLORS=\"1\"}\n\n      if test 1 = \"$USE_ANSI_COLORS\"; then\n        # Standard ANSI escape sequences\n        tc_reset='\u001b[0m'\n        tc_bold='\u001b[1m';   tc_standout='\u001b[7m'\n        tc_red='\u001b[31m';   tc_green='\u001b[32m'\n        tc_blue='\u001b[34m';  tc_cyan='\u001b[36m'\n      else\n        # Otherwise trust the terminfo database after all.\n        test -n \"`tput sgr0 2>/dev/null`\" && {\n          tc_reset=`tput sgr0`\n          test -n \"`tput bold 2>/dev/null`\" && tc_bold=`tput bold`\n          tc_standout=$tc_bold\n          test -n \"`tput smso 2>/dev/null`\" && tc_standout=`tput smso`\n          test -n \"`tput setaf 1 2>/dev/null`\" && tc_red=`tput setaf 1`\n          test -n \"`tput setaf 2 2>/dev/null`\" && tc_green=`tput setaf 2`\n          test -n \"`tput setaf 4 2>/dev/null`\" && tc_blue=`tput setaf 4`\n          test -n \"`tput setaf 5 2>/dev/null`\" && tc_cyan=`tput setaf 5`\n        }\n      fi\n    }\n\n    require_term_colors=:\n}\n\n\n## ----------------- ##\n## Function library. ##\n## ----------------- ##\n\n# This section contains a variety of useful functions to call in your\n# scripts. Take note of the portable wrappers for features provided by\n# some modern shells, which will fall back to slower equivalents on\n# less featureful shells.\n\n\n# func_append VAR VALUE\n# ---------------------\n# Append VALUE onto the existing contents of VAR.\n\n  # We should try to minimise forks, especially on Windows where they are\n  # unreasonably slow, so skip the feature probes when bash or zsh are\n  # being used:\n  if test set = \"${BASH_VERSION+set}${ZSH_VERSION+set}\"; then\n    : ${_G_HAVE_ARITH_OP=\"yes\"}\n    : ${_G_HAVE_XSI_OPS=\"yes\"}\n    # The += operator was introduced in bash 3.1\n    case $BASH_VERSION in\n      [12].* | 3.0 | 3.0*) ;;\n      *)\n        : ${_G_HAVE_PLUSEQ_OP=\"yes\"}\n        ;;\n    esac\n  fi\n\n  # _G_HAVE_PLUSEQ_OP\n  # Can be empty, in which case the shell is probed, \"yes\" if += is\n  # useable or anything else if it does not work.\n  test -z \"$_G_HAVE_PLUSEQ_OP\" \\\n    && (eval 'x=a; x+=\" b\"; test \"a b\" = \"$x\"') 2>/dev/null \\\n    && _G_HAVE_PLUSEQ_OP=yes\n\nif test yes = \"$_G_HAVE_PLUSEQ_OP\"\nthen\n  # This is an XSI compatible shell, allowing a faster implementation...\n  eval 'func_append ()\n  {\n    $debug_cmd\n\n    eval \"$1+=\\$2\"\n  }'\nelse\n  # ...otherwise fall back to using expr, which is often a shell builtin.\n  func_append ()\n  {\n    $debug_cmd\n\n    eval \"$1=\\$$1\\$2\"\n  }\nfi\n\n\n# func_append_quoted VAR VALUE\n# ----------------------------\n# Quote VALUE and append to the end of shell variable VAR, separated\n# by a space.\nif test yes = \"$_G_HAVE_PLUSEQ_OP\"; then\n  eval 'func_append_quoted ()\n  {\n    $debug_cmd\n\n    func_quote_for_eval \"$2\"\n    eval \"$1+=\\\\ \\$func_quote_for_eval_result\"\n  }'\nelse\n  func_append_quoted ()\n  {\n    $debug_cmd\n\n    func_quote_for_eval \"$2\"\n    eval \"$1=\\$$1\\\\ \\$func_quote_for_eval_result\"\n  }\nfi\n\n\n# func_append_uniq VAR VALUE\n# --------------------------\n# Append unique VALUE onto the existing contents of VAR, assuming\n# entries are delimited by the first character of VALUE.  For example:\n#\n#   func_append_uniq options \" --another-option option-argument\"\n#\n# will only append to $options if \" --another-option option-argument \"\n# is not already present somewhere in $options already (note spaces at\n# each end implied by leading space in second argument).\nfunc_append_uniq ()\n{\n    $debug_cmd\n\n    eval _G_current_value='`$ECHO $'$1'`'\n    _G_delim=`expr \"$2\" : '\\(.\\)'`\n\n    case $_G_delim$_G_current_value$_G_delim in\n      *\"$2$_G_delim\"*) ;;\n      *) func_append \"$@\" ;;\n    esac\n}\n\n\n# func_arith TERM...\n# ------------------\n# Set func_arith_result to the result of evaluating TERMs.\n  test -z \"$_G_HAVE_ARITH_OP\" \\\n    && (eval 'test 2 = $(( 1 + 1 ))') 2>/dev/null \\\n    && _G_HAVE_ARITH_OP=yes\n\nif test yes = \"$_G_HAVE_ARITH_OP\"; then\n  eval 'func_arith ()\n  {\n    $debug_cmd\n\n    func_arith_result=$(( $* ))\n  }'\nelse\n  func_arith ()\n  {\n    $debug_cmd\n\n    func_arith_result=`expr \"$@\"`\n  }\nfi\n\n\n# func_basename FILE\n# ------------------\n# Set func_basename_result to FILE with everything up to and including\n# the last / stripped.\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  # If this shell supports suffix pattern removal, then use it to avoid\n  # forking. Hide the definitions single quotes in case the shell chokes\n  # on unsupported syntax...\n  _b='func_basename_result=${1##*/}'\n  _d='case $1 in\n        */*) func_dirname_result=${1%/*}$2 ;;\n        *  ) func_dirname_result=$3        ;;\n      esac'\n\nelse\n  # ...otherwise fall back to using sed.\n  _b='func_basename_result=`$ECHO \"$1\" |$SED \"$sed_basename\"`'\n  _d='func_dirname_result=`$ECHO \"$1\"  |$SED \"$sed_dirname\"`\n      if test \"X$func_dirname_result\" = \"X$1\"; then\n        func_dirname_result=$3\n      else\n        func_append func_dirname_result \"$2\"\n      fi'\nfi\n\neval 'func_basename ()\n{\n    $debug_cmd\n\n    '\"$_b\"'\n}'\n\n\n# func_dirname FILE APPEND NONDIR_REPLACEMENT\n# -------------------------------------------\n# Compute the dirname of FILE.  If nonempty, add APPEND to the result,\n# otherwise set result to NONDIR_REPLACEMENT.\neval 'func_dirname ()\n{\n    $debug_cmd\n\n    '\"$_d\"'\n}'\n\n\n# func_dirname_and_basename FILE APPEND NONDIR_REPLACEMENT\n# --------------------------------------------------------\n# Perform func_basename and func_dirname in a single function\n# call:\n#   dirname:  Compute the dirname of FILE.  If nonempty,\n#             add APPEND to the result, otherwise set result\n#             to NONDIR_REPLACEMENT.\n#             value returned in \"$func_dirname_result\"\n#   basename: Compute filename of FILE.\n#             value retuned in \"$func_basename_result\"\n# For efficiency, we do not delegate to the functions above but instead\n# duplicate the functionality here.\neval 'func_dirname_and_basename ()\n{\n    $debug_cmd\n\n    '\"$_b\"'\n    '\"$_d\"'\n}'\n\n\n# func_echo ARG...\n# ----------------\n# Echo program name prefixed message.\nfunc_echo ()\n{\n    $debug_cmd\n\n    _G_message=$*\n\n    func_echo_IFS=$IFS\n    IFS=$nl\n    for _G_line in $_G_message; do\n      IFS=$func_echo_IFS\n      $ECHO \"$progname: $_G_line\"\n    done\n    IFS=$func_echo_IFS\n}\n\n\n# func_echo_all ARG...\n# --------------------\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"$*\"\n}\n\n\n# func_echo_infix_1 INFIX ARG...\n# ------------------------------\n# Echo program name, followed by INFIX on the first line, with any\n# additional lines not showing INFIX.\nfunc_echo_infix_1 ()\n{\n    $debug_cmd\n\n    $require_term_colors\n\n    _G_infix=$1; shift\n    _G_indent=$_G_infix\n    _G_prefix=\"$progname: $_G_infix: \"\n    _G_message=$*\n\n    # Strip color escape sequences before counting printable length\n    for _G_tc in \"$tc_reset\" \"$tc_bold\" \"$tc_standout\" \"$tc_red\" \"$tc_green\" \"$tc_blue\" \"$tc_cyan\"\n    do\n      test -n \"$_G_tc\" && {\n        _G_esc_tc=`$ECHO \"$_G_tc\" | $SED \"$sed_make_literal_regex\"`\n        _G_indent=`$ECHO \"$_G_indent\" | $SED \"s|$_G_esc_tc||g\"`\n      }\n    done\n    _G_indent=\"$progname: \"`echo \"$_G_indent\" | $SED 's|.| |g'`\"  \" ## exclude from sc_prohibit_nested_quotes\n\n    func_echo_infix_1_IFS=$IFS\n    IFS=$nl\n    for _G_line in $_G_message; do\n      IFS=$func_echo_infix_1_IFS\n      $ECHO \"$_G_prefix$tc_bold$_G_line$tc_reset\" >&2\n      _G_prefix=$_G_indent\n    done\n    IFS=$func_echo_infix_1_IFS\n}\n\n\n# func_error ARG...\n# -----------------\n# Echo program name prefixed message to standard error.\nfunc_error ()\n{\n    $debug_cmd\n\n    $require_term_colors\n\n    func_echo_infix_1 \"  $tc_standout${tc_red}error$tc_reset\" \"$*\" >&2\n}\n\n\n# func_fatal_error ARG...\n# -----------------------\n# Echo program name prefixed message to standard error, and exit.\nfunc_fatal_error ()\n{\n    $debug_cmd\n\n    func_error \"$*\"\n    exit $EXIT_FAILURE\n}\n\n\n# func_grep EXPRESSION FILENAME\n# -----------------------------\n# Check whether EXPRESSION matches any line of FILENAME, without output.\nfunc_grep ()\n{\n    $debug_cmd\n\n    $GREP \"$1\" \"$2\" >/dev/null 2>&1\n}\n\n\n# func_len STRING\n# ---------------\n# Set func_len_result to the length of STRING. STRING may not\n# start with a hyphen.\n  test -z \"$_G_HAVE_XSI_OPS\" \\\n    && (eval 'x=a/b/c;\n      test 5aa/bb/cc = \"${#x}${x%%/*}${x%/*}${x#*/}${x##*/}\"') 2>/dev/null \\\n    && _G_HAVE_XSI_OPS=yes\n\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  eval 'func_len ()\n  {\n    $debug_cmd\n\n    func_len_result=${#1}\n  }'\nelse\n  func_len ()\n  {\n    $debug_cmd\n\n    func_len_result=`expr \"$1\" : \".*\" 2>/dev/null || echo $max_cmd_len`\n  }\nfi\n\n\n# func_mkdir_p DIRECTORY-PATH\n# ---------------------------\n# Make sure the entire path to DIRECTORY-PATH is available.\nfunc_mkdir_p ()\n{\n    $debug_cmd\n\n    _G_directory_path=$1\n    _G_dir_list=\n\n    if test -n \"$_G_directory_path\" && test : != \"$opt_dry_run\"; then\n\n      # Protect directory names starting with '-'\n      case $_G_directory_path in\n        -*) _G_directory_path=./$_G_directory_path ;;\n      esac\n\n      # While some portion of DIR does not yet exist...\n      while test ! -d \"$_G_directory_path\"; do\n        # ...make a list in topmost first order.  Use a colon delimited\n\t# list incase some portion of path contains whitespace.\n        _G_dir_list=$_G_directory_path:$_G_dir_list\n\n        # If the last portion added has no slash in it, the list is done\n        case $_G_directory_path in */*) ;; *) break ;; esac\n\n        # ...otherwise throw away the child directory and loop\n        _G_directory_path=`$ECHO \"$_G_directory_path\" | $SED -e \"$sed_dirname\"`\n      done\n      _G_dir_list=`$ECHO \"$_G_dir_list\" | $SED 's|:*$||'`\n\n      func_mkdir_p_IFS=$IFS; IFS=:\n      for _G_dir in $_G_dir_list; do\n\tIFS=$func_mkdir_p_IFS\n        # mkdir can fail with a 'File exist' error if two processes\n        # try to create one of the directories concurrently.  Don't\n        # stop in that case!\n        $MKDIR \"$_G_dir\" 2>/dev/null || :\n      done\n      IFS=$func_mkdir_p_IFS\n\n      # Bail out if we (or some other process) failed to create a directory.\n      test -d \"$_G_directory_path\" || \\\n        func_fatal_error \"Failed to create '$1'\"\n    fi\n}\n\n\n# func_mktempdir [BASENAME]\n# -------------------------\n# Make a temporary directory that won't clash with other running\n# libtool processes, and avoids race conditions if possible.  If\n# given, BASENAME is the basename for that directory.\nfunc_mktempdir ()\n{\n    $debug_cmd\n\n    _G_template=${TMPDIR-/tmp}/${1-$progname}\n\n    if test : = \"$opt_dry_run\"; then\n      # Return a directory name, but don't create it in dry-run mode\n      _G_tmpdir=$_G_template-$$\n    else\n\n      # If mktemp works, use that first and foremost\n      _G_tmpdir=`mktemp -d \"$_G_template-XXXXXXXX\" 2>/dev/null`\n\n      if test ! -d \"$_G_tmpdir\"; then\n        # Failing that, at least try and use $RANDOM to avoid a race\n        _G_tmpdir=$_G_template-${RANDOM-0}$$\n\n        func_mktempdir_umask=`umask`\n        umask 0077\n        $MKDIR \"$_G_tmpdir\"\n        umask $func_mktempdir_umask\n      fi\n\n      # If we're not in dry-run mode, bomb out on failure\n      test -d \"$_G_tmpdir\" || \\\n        func_fatal_error \"cannot create temporary directory '$_G_tmpdir'\"\n    fi\n\n    $ECHO \"$_G_tmpdir\"\n}\n\n\n# func_normal_abspath PATH\n# ------------------------\n# Remove doubled-up and trailing slashes, \".\" path components,\n# and cancel out any \"..\" path components in PATH after making\n# it an absolute path.\nfunc_normal_abspath ()\n{\n    $debug_cmd\n\n    # These SED scripts presuppose an absolute path with a trailing slash.\n    _G_pathcar='s|^/\\([^/]*\\).*$|\\1|'\n    _G_pathcdr='s|^/[^/]*||'\n    _G_removedotparts=':dotsl\n\t\ts|/\\./|/|g\n\t\tt dotsl\n\t\ts|/\\.$|/|'\n    _G_collapseslashes='s|/\\{1,\\}|/|g'\n    _G_finalslash='s|/*$|/|'\n\n    # Start from root dir and reassemble the path.\n    func_normal_abspath_result=\n    func_normal_abspath_tpath=$1\n    func_normal_abspath_altnamespace=\n    case $func_normal_abspath_tpath in\n      \"\")\n        # Empty path, that just means $cwd.\n        func_stripname '' '/' \"`pwd`\"\n        func_normal_abspath_result=$func_stripname_result\n        return\n        ;;\n      # The next three entries are used to spot a run of precisely\n      # two leading slashes without using negated character classes;\n      # we take advantage of case's first-match behaviour.\n      ///*)\n        # Unusual form of absolute path, do nothing.\n        ;;\n      //*)\n        # Not necessarily an ordinary path; POSIX reserves leading '//'\n        # and for example Cygwin uses it to access remote file shares\n        # over CIFS/SMB, so we conserve a leading double slash if found.\n        func_normal_abspath_altnamespace=/\n        ;;\n      /*)\n        # Absolute path, do nothing.\n        ;;\n      *)\n        # Relative path, prepend $cwd.\n        func_normal_abspath_tpath=`pwd`/$func_normal_abspath_tpath\n        ;;\n    esac\n\n    # Cancel out all the simple stuff to save iterations.  We also want\n    # the path to end with a slash for ease of parsing, so make sure\n    # there is one (and only one) here.\n    func_normal_abspath_tpath=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n          -e \"$_G_removedotparts\" -e \"$_G_collapseslashes\" -e \"$_G_finalslash\"`\n    while :; do\n      # Processed it all yet?\n      if test / = \"$func_normal_abspath_tpath\"; then\n        # If we ascended to the root using \"..\" the result may be empty now.\n        if test -z \"$func_normal_abspath_result\"; then\n          func_normal_abspath_result=/\n        fi\n        break\n      fi\n      func_normal_abspath_tcomponent=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n          -e \"$_G_pathcar\"`\n      func_normal_abspath_tpath=`$ECHO \"$func_normal_abspath_tpath\" | $SED \\\n          -e \"$_G_pathcdr\"`\n      # Figure out what to do with it\n      case $func_normal_abspath_tcomponent in\n        \"\")\n          # Trailing empty path component, ignore it.\n          ;;\n        ..)\n          # Parent dir; strip last assembled component from result.\n          func_dirname \"$func_normal_abspath_result\"\n          func_normal_abspath_result=$func_dirname_result\n          ;;\n        *)\n          # Actual path component, append it.\n          func_append func_normal_abspath_result \"/$func_normal_abspath_tcomponent\"\n          ;;\n      esac\n    done\n    # Restore leading double-slash if one was found on entry.\n    func_normal_abspath_result=$func_normal_abspath_altnamespace$func_normal_abspath_result\n}\n\n\n# func_notquiet ARG...\n# --------------------\n# Echo program name prefixed message only when not in quiet mode.\nfunc_notquiet ()\n{\n    $debug_cmd\n\n    $opt_quiet || func_echo ${1+\"$@\"}\n\n    # A bug in bash halts the script if the last line of a function\n    # fails when set -e is in force, so we need another command to\n    # work around that:\n    :\n}\n\n\n# func_relative_path SRCDIR DSTDIR\n# --------------------------------\n# Set func_relative_path_result to the relative path from SRCDIR to DSTDIR.\nfunc_relative_path ()\n{\n    $debug_cmd\n\n    func_relative_path_result=\n    func_normal_abspath \"$1\"\n    func_relative_path_tlibdir=$func_normal_abspath_result\n    func_normal_abspath \"$2\"\n    func_relative_path_tbindir=$func_normal_abspath_result\n\n    # Ascend the tree starting from libdir\n    while :; do\n      # check if we have found a prefix of bindir\n      case $func_relative_path_tbindir in\n        $func_relative_path_tlibdir)\n          # found an exact match\n          func_relative_path_tcancelled=\n          break\n          ;;\n        $func_relative_path_tlibdir*)\n          # found a matching prefix\n          func_stripname \"$func_relative_path_tlibdir\" '' \"$func_relative_path_tbindir\"\n          func_relative_path_tcancelled=$func_stripname_result\n          if test -z \"$func_relative_path_result\"; then\n            func_relative_path_result=.\n          fi\n          break\n          ;;\n        *)\n          func_dirname $func_relative_path_tlibdir\n          func_relative_path_tlibdir=$func_dirname_result\n          if test -z \"$func_relative_path_tlibdir\"; then\n            # Have to descend all the way to the root!\n            func_relative_path_result=../$func_relative_path_result\n            func_relative_path_tcancelled=$func_relative_path_tbindir\n            break\n          fi\n          func_relative_path_result=../$func_relative_path_result\n          ;;\n      esac\n    done\n\n    # Now calculate path; take care to avoid doubling-up slashes.\n    func_stripname '' '/' \"$func_relative_path_result\"\n    func_relative_path_result=$func_stripname_result\n    func_stripname '/' '/' \"$func_relative_path_tcancelled\"\n    if test -n \"$func_stripname_result\"; then\n      func_append func_relative_path_result \"/$func_stripname_result\"\n    fi\n\n    # Normalisation. If bindir is libdir, return '.' else relative path.\n    if test -n \"$func_relative_path_result\"; then\n      func_stripname './' '' \"$func_relative_path_result\"\n      func_relative_path_result=$func_stripname_result\n    fi\n\n    test -n \"$func_relative_path_result\" || func_relative_path_result=.\n\n    :\n}\n\n\n# func_quote_for_eval ARG...\n# --------------------------\n# Aesthetically quote ARGs to be evaled later.\n# This function returns two values:\n#   i) func_quote_for_eval_result\n#      double-quoted, suitable for a subsequent eval\n#  ii) func_quote_for_eval_unquoted_result\n#      has all characters that are still active within double\n#      quotes backslashified.\nfunc_quote_for_eval ()\n{\n    $debug_cmd\n\n    func_quote_for_eval_unquoted_result=\n    func_quote_for_eval_result=\n    while test 0 -lt $#; do\n      case $1 in\n        *[\\\\\\`\\\"\\$]*)\n\t  _G_unquoted_arg=`printf '%s\\n' \"$1\" |$SED \"$sed_quote_subst\"` ;;\n        *)\n          _G_unquoted_arg=$1 ;;\n      esac\n      if test -n \"$func_quote_for_eval_unquoted_result\"; then\n\tfunc_append func_quote_for_eval_unquoted_result \" $_G_unquoted_arg\"\n      else\n        func_append func_quote_for_eval_unquoted_result \"$_G_unquoted_arg\"\n      fi\n\n      case $_G_unquoted_arg in\n        # Double-quote args containing shell metacharacters to delay\n        # word splitting, command substitution and variable expansion\n        # for a subsequent eval.\n        # Many Bourne shells cannot handle close brackets correctly\n        # in scan sets, so we specify it separately.\n        *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n          _G_quoted_arg=\\\"$_G_unquoted_arg\\\"\n          ;;\n        *)\n          _G_quoted_arg=$_G_unquoted_arg\n\t  ;;\n      esac\n\n      if test -n \"$func_quote_for_eval_result\"; then\n\tfunc_append func_quote_for_eval_result \" $_G_quoted_arg\"\n      else\n        func_append func_quote_for_eval_result \"$_G_quoted_arg\"\n      fi\n      shift\n    done\n}\n\n\n# func_quote_for_expand ARG\n# -------------------------\n# Aesthetically quote ARG to be evaled later; same as above,\n# but do not quote variable references.\nfunc_quote_for_expand ()\n{\n    $debug_cmd\n\n    case $1 in\n      *[\\\\\\`\\\"]*)\n\t_G_arg=`$ECHO \"$1\" | $SED \\\n\t    -e \"$sed_double_quote_subst\" -e \"$sed_double_backslash\"` ;;\n      *)\n        _G_arg=$1 ;;\n    esac\n\n    case $_G_arg in\n      # Double-quote args containing shell metacharacters to delay\n      # word splitting and command substitution for a subsequent eval.\n      # Many Bourne shells cannot handle close brackets correctly\n      # in scan sets, so we specify it separately.\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n        _G_arg=\\\"$_G_arg\\\"\n        ;;\n    esac\n\n    func_quote_for_expand_result=$_G_arg\n}\n\n\n# func_stripname PREFIX SUFFIX NAME\n# ---------------------------------\n# strip PREFIX and SUFFIX from NAME, and store in func_stripname_result.\n# PREFIX and SUFFIX must not contain globbing or regex special\n# characters, hashes, percent signs, but SUFFIX may contain a leading\n# dot (in which case that matches only a dot).\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  eval 'func_stripname ()\n  {\n    $debug_cmd\n\n    # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are\n    # positional parameters, so assign one to ordinary variable first.\n    func_stripname_result=$3\n    func_stripname_result=${func_stripname_result#\"$1\"}\n    func_stripname_result=${func_stripname_result%\"$2\"}\n  }'\nelse\n  func_stripname ()\n  {\n    $debug_cmd\n\n    case $2 in\n      .*) func_stripname_result=`$ECHO \"$3\" | $SED -e \"s%^$1%%\" -e \"s%\\\\\\\\$2\\$%%\"`;;\n      *)  func_stripname_result=`$ECHO \"$3\" | $SED -e \"s%^$1%%\" -e \"s%$2\\$%%\"`;;\n    esac\n  }\nfi\n\n\n# func_show_eval CMD [FAIL_EXP]\n# -----------------------------\n# Unless opt_quiet is true, then output CMD.  Then, if opt_dryrun is\n# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP\n# is given, then evaluate it.\nfunc_show_eval ()\n{\n    $debug_cmd\n\n    _G_cmd=$1\n    _G_fail_exp=${2-':'}\n\n    func_quote_for_expand \"$_G_cmd\"\n    eval \"func_notquiet $func_quote_for_expand_result\"\n\n    $opt_dry_run || {\n      eval \"$_G_cmd\"\n      _G_status=$?\n      if test 0 -ne \"$_G_status\"; then\n\teval \"(exit $_G_status); $_G_fail_exp\"\n      fi\n    }\n}\n\n\n# func_show_eval_locale CMD [FAIL_EXP]\n# ------------------------------------\n# Unless opt_quiet is true, then output CMD.  Then, if opt_dryrun is\n# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP\n# is given, then evaluate it.  Use the saved locale for evaluation.\nfunc_show_eval_locale ()\n{\n    $debug_cmd\n\n    _G_cmd=$1\n    _G_fail_exp=${2-':'}\n\n    $opt_quiet || {\n      func_quote_for_expand \"$_G_cmd\"\n      eval \"func_echo $func_quote_for_expand_result\"\n    }\n\n    $opt_dry_run || {\n      eval \"$_G_user_locale\n\t    $_G_cmd\"\n      _G_status=$?\n      eval \"$_G_safe_locale\"\n      if test 0 -ne \"$_G_status\"; then\n\teval \"(exit $_G_status); $_G_fail_exp\"\n      fi\n    }\n}\n\n\n# func_tr_sh\n# ----------\n# Turn $1 into a string suitable for a shell variable name.\n# Result is stored in $func_tr_sh_result.  All characters\n# not in the set a-zA-Z0-9_ are replaced with '_'. Further,\n# if $1 begins with a digit, a '_' is prepended as well.\nfunc_tr_sh ()\n{\n    $debug_cmd\n\n    case $1 in\n    [0-9]* | *[!a-zA-Z0-9_]*)\n      func_tr_sh_result=`$ECHO \"$1\" | $SED -e 's/^\\([0-9]\\)/_\\1/' -e 's/[^a-zA-Z0-9_]/_/g'`\n      ;;\n    * )\n      func_tr_sh_result=$1\n      ;;\n    esac\n}\n\n\n# func_verbose ARG...\n# -------------------\n# Echo program name prefixed message in verbose mode only.\nfunc_verbose ()\n{\n    $debug_cmd\n\n    $opt_verbose && func_echo \"$*\"\n\n    :\n}\n\n\n# func_warn_and_continue ARG...\n# -----------------------------\n# Echo program name prefixed warning message to standard error.\nfunc_warn_and_continue ()\n{\n    $debug_cmd\n\n    $require_term_colors\n\n    func_echo_infix_1 \"${tc_red}warning$tc_reset\" \"$*\" >&2\n}\n\n\n# func_warning CATEGORY ARG...\n# ----------------------------\n# Echo program name prefixed warning message to standard error. Warning\n# messages can be filtered according to CATEGORY, where this function\n# elides messages where CATEGORY is not listed in the global variable\n# 'opt_warning_types'.\nfunc_warning ()\n{\n    $debug_cmd\n\n    # CATEGORY must be in the warning_categories list!\n    case \" $warning_categories \" in\n      *\" $1 \"*) ;;\n      *) func_internal_error \"invalid warning category '$1'\" ;;\n    esac\n\n    _G_category=$1\n    shift\n\n    case \" $opt_warning_types \" in\n      *\" $_G_category \"*) $warning_func ${1+\"$@\"} ;;\n    esac\n}\n\n\n# func_sort_ver VER1 VER2\n# -----------------------\n# 'sort -V' is not generally available.\n# Note this deviates from the version comparison in automake\n# in that it treats 1.5 < 1.5.0, and treats 1.4.4a < 1.4-p3a\n# but this should suffice as we won't be specifying old\n# version formats or redundant trailing .0 in bootstrap.conf.\n# If we did want full compatibility then we should probably\n# use m4_version_compare from autoconf.\nfunc_sort_ver ()\n{\n    $debug_cmd\n\n    printf '%s\\n%s\\n' \"$1\" \"$2\" \\\n      | sort -t. -k 1,1n -k 2,2n -k 3,3n -k 4,4n -k 5,5n -k 6,6n -k 7,7n -k 8,8n -k 9,9n\n}\n\n# func_lt_ver PREV CURR\n# ---------------------\n# Return true if PREV and CURR are in the correct order according to\n# func_sort_ver, otherwise false.  Use it like this:\n#\n#  func_lt_ver \"$prev_ver\" \"$proposed_ver\" || func_fatal_error \"...\"\nfunc_lt_ver ()\n{\n    $debug_cmd\n\n    test \"x$1\" = x`func_sort_ver \"$1\" \"$2\" | $SED 1q`\n}\n\n\n# Local variables:\n# mode: shell-script\n# sh-indentation: 2\n# eval: (add-hook 'before-save-hook 'time-stamp)\n# time-stamp-pattern: \"10/scriptversion=%:y-%02m-%02d.%02H; # UTC\"\n# time-stamp-time-zone: \"UTC\"\n# End:\n#! /bin/sh\n\n# Set a version string for this script.\nscriptversion=2014-01-07.03; # UTC\n\n# A portable, pluggable option parser for Bourne shell.\n# Written by Gary V. Vaughan, 2010\n\n# Copyright (C) 2010-2015 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n# Please report bugs or propose patches to gary@gnu.org.\n\n\n## ------ ##\n## Usage. ##\n## ------ ##\n\n# This file is a library for parsing options in your shell scripts along\n# with assorted other useful supporting features that you can make use\n# of too.\n#\n# For the simplest scripts you might need only:\n#\n#   #!/bin/sh\n#   . relative/path/to/funclib.sh\n#   . relative/path/to/options-parser\n#   scriptversion=1.0\n#   func_options ${1+\"$@\"}\n#   eval set dummy \"$func_options_result\"; shift\n#   ...rest of your script...\n#\n# In order for the '--version' option to work, you will need to have a\n# suitably formatted comment like the one at the top of this file\n# starting with '# Written by ' and ending with '# warranty; '.\n#\n# For '-h' and '--help' to work, you will also need a one line\n# description of your script's purpose in a comment directly above the\n# '# Written by ' line, like the one at the top of this file.\n#\n# The default options also support '--debug', which will turn on shell\n# execution tracing (see the comment above debug_cmd below for another\n# use), and '--verbose' and the func_verbose function to allow your script\n# to display verbose messages only when your user has specified\n# '--verbose'.\n#\n# After sourcing this file, you can plug processing for additional\n# options by amending the variables from the 'Configuration' section\n# below, and following the instructions in the 'Option parsing'\n# section further down.\n\n## -------------- ##\n## Configuration. ##\n## -------------- ##\n\n# You should override these variables in your script after sourcing this\n# file so that they reflect the customisations you have added to the\n# option parser.\n\n# The usage line for option parsing errors and the start of '-h' and\n# '--help' output messages. You can embed shell variables for delayed\n# expansion at the time the message is displayed, but you will need to\n# quote other shell meta-characters carefully to prevent them being\n# expanded when the contents are evaled.\nusage='$progpath [OPTION]...'\n\n# Short help message in response to '-h' and '--help'.  Add to this or\n# override it after sourcing this library to reflect the full set of\n# options your script accepts.\nusage_message=\"\\\n       --debug        enable verbose shell tracing\n   -W, --warnings=CATEGORY\n                      report the warnings falling in CATEGORY [all]\n   -v, --verbose      verbosely report processing\n       --version      print version information and exit\n   -h, --help         print short or long help message and exit\n\"\n\n# Additional text appended to 'usage_message' in response to '--help'.\nlong_help_message=\"\nWarning categories include:\n       'all'          show all warnings\n       'none'         turn off all the warnings\n       'error'        warnings are treated as fatal errors\"\n\n# Help message printed before fatal option parsing errors.\nfatal_help=\"Try '\\$progname --help' for more information.\"\n\n\n\n## ------------------------- ##\n## Hook function management. ##\n## ------------------------- ##\n\n# This section contains functions for adding, removing, and running hooks\n# to the main code.  A hook is just a named list of of function, that can\n# be run in order later on.\n\n# func_hookable FUNC_NAME\n# -----------------------\n# Declare that FUNC_NAME will run hooks added with\n# 'func_add_hook FUNC_NAME ...'.\nfunc_hookable ()\n{\n    $debug_cmd\n\n    func_append hookable_fns \" $1\"\n}\n\n\n# func_add_hook FUNC_NAME HOOK_FUNC\n# ---------------------------------\n# Request that FUNC_NAME call HOOK_FUNC before it returns.  FUNC_NAME must\n# first have been declared \"hookable\" by a call to 'func_hookable'.\nfunc_add_hook ()\n{\n    $debug_cmd\n\n    case \" $hookable_fns \" in\n      *\" $1 \"*) ;;\n      *) func_fatal_error \"'$1' does not accept hook functions.\" ;;\n    esac\n\n    eval func_append ${1}_hooks '\" $2\"'\n}\n\n\n# func_remove_hook FUNC_NAME HOOK_FUNC\n# ------------------------------------\n# Remove HOOK_FUNC from the list of functions called by FUNC_NAME.\nfunc_remove_hook ()\n{\n    $debug_cmd\n\n    eval ${1}_hooks='`$ECHO \"\\$'$1'_hooks\" |$SED \"s| '$2'||\"`'\n}\n\n\n# func_run_hooks FUNC_NAME [ARG]...\n# ---------------------------------\n# Run all hook functions registered to FUNC_NAME.\n# It is assumed that the list of hook functions contains nothing more\n# than a whitespace-delimited list of legal shell function names, and\n# no effort is wasted trying to catch shell meta-characters or preserve\n# whitespace.\nfunc_run_hooks ()\n{\n    $debug_cmd\n\n    case \" $hookable_fns \" in\n      *\" $1 \"*) ;;\n      *) func_fatal_error \"'$1' does not support hook funcions.n\" ;;\n    esac\n\n    eval _G_hook_fns=\\$$1_hooks; shift\n\n    for _G_hook in $_G_hook_fns; do\n      eval $_G_hook '\"$@\"'\n\n      # store returned options list back into positional\n      # parameters for next 'cmd' execution.\n      eval _G_hook_result=\\$${_G_hook}_result\n      eval set dummy \"$_G_hook_result\"; shift\n    done\n\n    func_quote_for_eval ${1+\"$@\"}\n    func_run_hooks_result=$func_quote_for_eval_result\n}\n\n\n\n## --------------- ##\n## Option parsing. ##\n## --------------- ##\n\n# In order to add your own option parsing hooks, you must accept the\n# full positional parameter list in your hook function, remove any\n# options that you action, and then pass back the remaining unprocessed\n# options in '<hooked_function_name>_result', escaped suitably for\n# 'eval'.  Like this:\n#\n#    my_options_prep ()\n#    {\n#        $debug_cmd\n#\n#        # Extend the existing usage message.\n#        usage_message=$usage_message'\n#      -s, --silent       don'\\''t print informational messages\n#    '\n#\n#        func_quote_for_eval ${1+\"$@\"}\n#        my_options_prep_result=$func_quote_for_eval_result\n#    }\n#    func_add_hook func_options_prep my_options_prep\n#\n#\n#    my_silent_option ()\n#    {\n#        $debug_cmd\n#\n#        # Note that for efficiency, we parse as many options as we can\n#        # recognise in a loop before passing the remainder back to the\n#        # caller on the first unrecognised argument we encounter.\n#        while test $# -gt 0; do\n#          opt=$1; shift\n#          case $opt in\n#            --silent|-s) opt_silent=: ;;\n#            # Separate non-argument short options:\n#            -s*)         func_split_short_opt \"$_G_opt\"\n#                         set dummy \"$func_split_short_opt_name\" \\\n#                             \"-$func_split_short_opt_arg\" ${1+\"$@\"}\n#                         shift\n#                         ;;\n#            *)            set dummy \"$_G_opt\" \"$*\"; shift; break ;;\n#          esac\n#        done\n#\n#        func_quote_for_eval ${1+\"$@\"}\n#        my_silent_option_result=$func_quote_for_eval_result\n#    }\n#    func_add_hook func_parse_options my_silent_option\n#\n#\n#    my_option_validation ()\n#    {\n#        $debug_cmd\n#\n#        $opt_silent && $opt_verbose && func_fatal_help \"\\\n#    '--silent' and '--verbose' options are mutually exclusive.\"\n#\n#        func_quote_for_eval ${1+\"$@\"}\n#        my_option_validation_result=$func_quote_for_eval_result\n#    }\n#    func_add_hook func_validate_options my_option_validation\n#\n# You'll alse need to manually amend $usage_message to reflect the extra\n# options you parse.  It's preferable to append if you can, so that\n# multiple option parsing hooks can be added safely.\n\n\n# func_options [ARG]...\n# ---------------------\n# All the functions called inside func_options are hookable. See the\n# individual implementations for details.\nfunc_hookable func_options\nfunc_options ()\n{\n    $debug_cmd\n\n    func_options_prep ${1+\"$@\"}\n    eval func_parse_options \\\n        ${func_options_prep_result+\"$func_options_prep_result\"}\n    eval func_validate_options \\\n        ${func_parse_options_result+\"$func_parse_options_result\"}\n\n    eval func_run_hooks func_options \\\n        ${func_validate_options_result+\"$func_validate_options_result\"}\n\n    # save modified positional parameters for caller\n    func_options_result=$func_run_hooks_result\n}\n\n\n# func_options_prep [ARG]...\n# --------------------------\n# All initialisations required before starting the option parse loop.\n# Note that when calling hook functions, we pass through the list of\n# positional parameters.  If a hook function modifies that list, and\n# needs to propogate that back to rest of this script, then the complete\n# modified list must be put in 'func_run_hooks_result' before\n# returning.\nfunc_hookable func_options_prep\nfunc_options_prep ()\n{\n    $debug_cmd\n\n    # Option defaults:\n    opt_verbose=false\n    opt_warning_types=\n\n    func_run_hooks func_options_prep ${1+\"$@\"}\n\n    # save modified positional parameters for caller\n    func_options_prep_result=$func_run_hooks_result\n}\n\n\n# func_parse_options [ARG]...\n# ---------------------------\n# The main option parsing loop.\nfunc_hookable func_parse_options\nfunc_parse_options ()\n{\n    $debug_cmd\n\n    func_parse_options_result=\n\n    # this just eases exit handling\n    while test $# -gt 0; do\n      # Defer to hook functions for initial option parsing, so they\n      # get priority in the event of reusing an option name.\n      func_run_hooks func_parse_options ${1+\"$@\"}\n\n      # Adjust func_parse_options positional parameters to match\n      eval set dummy \"$func_run_hooks_result\"; shift\n\n      # Break out of the loop if we already parsed every option.\n      test $# -gt 0 || break\n\n      _G_opt=$1\n      shift\n      case $_G_opt in\n        --debug|-x)   debug_cmd='set -x'\n                      func_echo \"enabling shell trace mode\"\n                      $debug_cmd\n                      ;;\n\n        --no-warnings|--no-warning|--no-warn)\n                      set dummy --warnings none ${1+\"$@\"}\n                      shift\n\t\t      ;;\n\n        --warnings|--warning|-W)\n                      test $# = 0 && func_missing_arg $_G_opt && break\n                      case \" $warning_categories $1\" in\n                        *\" $1 \"*)\n                          # trailing space prevents matching last $1 above\n                          func_append_uniq opt_warning_types \" $1\"\n                          ;;\n                        *all)\n                          opt_warning_types=$warning_categories\n                          ;;\n                        *none)\n                          opt_warning_types=none\n                          warning_func=:\n                          ;;\n                        *error)\n                          opt_warning_types=$warning_categories\n                          warning_func=func_fatal_error\n                          ;;\n                        *)\n                          func_fatal_error \\\n                             \"unsupported warning category: '$1'\"\n                          ;;\n                      esac\n                      shift\n                      ;;\n\n        --verbose|-v) opt_verbose=: ;;\n        --version)    func_version ;;\n        -\\?|-h)       func_usage ;;\n        --help)       func_help ;;\n\n\t# Separate optargs to long options (plugins may need this):\n\t--*=*)        func_split_equals \"$_G_opt\"\n\t              set dummy \"$func_split_equals_lhs\" \\\n                          \"$func_split_equals_rhs\" ${1+\"$@\"}\n                      shift\n                      ;;\n\n       # Separate optargs to short options:\n        -W*)\n                      func_split_short_opt \"$_G_opt\"\n                      set dummy \"$func_split_short_opt_name\" \\\n                          \"$func_split_short_opt_arg\" ${1+\"$@\"}\n                      shift\n                      ;;\n\n        # Separate non-argument short options:\n        -\\?*|-h*|-v*|-x*)\n                      func_split_short_opt \"$_G_opt\"\n                      set dummy \"$func_split_short_opt_name\" \\\n                          \"-$func_split_short_opt_arg\" ${1+\"$@\"}\n                      shift\n                      ;;\n\n        --)           break ;;\n        -*)           func_fatal_help \"unrecognised option: '$_G_opt'\" ;;\n        *)            set dummy \"$_G_opt\" ${1+\"$@\"}; shift; break ;;\n      esac\n    done\n\n    # save modified positional parameters for caller\n    func_quote_for_eval ${1+\"$@\"}\n    func_parse_options_result=$func_quote_for_eval_result\n}\n\n\n# func_validate_options [ARG]...\n# ------------------------------\n# Perform any sanity checks on option settings and/or unconsumed\n# arguments.\nfunc_hookable func_validate_options\nfunc_validate_options ()\n{\n    $debug_cmd\n\n    # Display all warnings if -W was not given.\n    test -n \"$opt_warning_types\" || opt_warning_types=\" $warning_categories\"\n\n    func_run_hooks func_validate_options ${1+\"$@\"}\n\n    # Bail if the options were screwed!\n    $exit_cmd $EXIT_FAILURE\n\n    # save modified positional parameters for caller\n    func_validate_options_result=$func_run_hooks_result\n}\n\n\n\n## ----------------- ##\n## Helper functions. ##\n## ----------------- ##\n\n# This section contains the helper functions used by the rest of the\n# hookable option parser framework in ascii-betical order.\n\n\n# func_fatal_help ARG...\n# ----------------------\n# Echo program name prefixed message to standard error, followed by\n# a help hint, and exit.\nfunc_fatal_help ()\n{\n    $debug_cmd\n\n    eval \\$ECHO \\\"\"Usage: $usage\"\\\"\n    eval \\$ECHO \\\"\"$fatal_help\"\\\"\n    func_error ${1+\"$@\"}\n    exit $EXIT_FAILURE\n}\n\n\n# func_help\n# ---------\n# Echo long help message to standard output and exit.\nfunc_help ()\n{\n    $debug_cmd\n\n    func_usage_message\n    $ECHO \"$long_help_message\"\n    exit 0\n}\n\n\n# func_missing_arg ARGNAME\n# ------------------------\n# Echo program name prefixed message to standard error and set global\n# exit_cmd.\nfunc_missing_arg ()\n{\n    $debug_cmd\n\n    func_error \"Missing argument for '$1'.\"\n    exit_cmd=exit\n}\n\n\n# func_split_equals STRING\n# ------------------------\n# Set func_split_equals_lhs and func_split_equals_rhs shell variables after\n# splitting STRING at the '=' sign.\ntest -z \"$_G_HAVE_XSI_OPS\" \\\n    && (eval 'x=a/b/c;\n      test 5aa/bb/cc = \"${#x}${x%%/*}${x%/*}${x#*/}${x##*/}\"') 2>/dev/null \\\n    && _G_HAVE_XSI_OPS=yes\n\nif test yes = \"$_G_HAVE_XSI_OPS\"\nthen\n  # This is an XSI compatible shell, allowing a faster implementation...\n  eval 'func_split_equals ()\n  {\n      $debug_cmd\n\n      func_split_equals_lhs=${1%%=*}\n      func_split_equals_rhs=${1#*=}\n      test \"x$func_split_equals_lhs\" = \"x$1\" \\\n        && func_split_equals_rhs=\n  }'\nelse\n  # ...otherwise fall back to using expr, which is often a shell builtin.\n  func_split_equals ()\n  {\n      $debug_cmd\n\n      func_split_equals_lhs=`expr \"x$1\" : 'x\\([^=]*\\)'`\n      func_split_equals_rhs=\n      test \"x$func_split_equals_lhs\" = \"x$1\" \\\n        || func_split_equals_rhs=`expr \"x$1\" : 'x[^=]*=\\(.*\\)$'`\n  }\nfi #func_split_equals\n\n\n# func_split_short_opt SHORTOPT\n# -----------------------------\n# Set func_split_short_opt_name and func_split_short_opt_arg shell\n# variables after splitting SHORTOPT after the 2nd character.\nif test yes = \"$_G_HAVE_XSI_OPS\"\nthen\n  # This is an XSI compatible shell, allowing a faster implementation...\n  eval 'func_split_short_opt ()\n  {\n      $debug_cmd\n\n      func_split_short_opt_arg=${1#??}\n      func_split_short_opt_name=${1%\"$func_split_short_opt_arg\"}\n  }'\nelse\n  # ...otherwise fall back to using expr, which is often a shell builtin.\n  func_split_short_opt ()\n  {\n      $debug_cmd\n\n      func_split_short_opt_name=`expr \"x$1\" : 'x-\\(.\\)'`\n      func_split_short_opt_arg=`expr \"x$1\" : 'x-.\\(.*\\)$'`\n  }\nfi #func_split_short_opt\n\n\n# func_usage\n# ----------\n# Echo short help message to standard output and exit.\nfunc_usage ()\n{\n    $debug_cmd\n\n    func_usage_message\n    $ECHO \"Run '$progname --help |${PAGER-more}' for full usage\"\n    exit 0\n}\n\n\n# func_usage_message\n# ------------------\n# Echo short help message to standard output.\nfunc_usage_message ()\n{\n    $debug_cmd\n\n    eval \\$ECHO \\\"\"Usage: $usage\"\\\"\n    echo\n    $SED -n 's|^# ||\n        /^Written by/{\n          x;p;x\n        }\n\th\n\t/^Written by/q' < \"$progpath\"\n    echo\n    eval \\$ECHO \\\"\"$usage_message\"\\\"\n}\n\n\n# func_version\n# ------------\n# Echo version message to standard output and exit.\nfunc_version ()\n{\n    $debug_cmd\n\n    printf '%s\\n' \"$progname $scriptversion\"\n    $SED -n '\n        /(C)/!b go\n        :more\n        /\\./!{\n          N\n          s|\\n# | |\n          b more\n        }\n        :go\n        /^# Written by /,/# warranty; / {\n          s|^# ||\n          s|^# *$||\n          s|\\((C)\\)[ 0-9,-]*[ ,-]\\([1-9][0-9]* \\)|\\1 \\2|\n          p\n        }\n        /^# Written by / {\n          s|^# ||\n          p\n        }\n        /^warranty; /q' < \"$progpath\"\n\n    exit $?\n}\n\n\n# Local variables:\n# mode: shell-script\n# sh-indentation: 2\n# eval: (add-hook 'before-save-hook 'time-stamp)\n# time-stamp-pattern: \"10/scriptversion=%:y-%02m-%02d.%02H; # UTC\"\n# time-stamp-time-zone: \"UTC\"\n# End:\n\n# Set a version string.\nscriptversion='(GNU libtool) 2.4.6'\n\n\n# func_echo ARG...\n# ----------------\n# Libtool also displays the current mode in messages, so override\n# funclib.sh func_echo with this custom definition.\nfunc_echo ()\n{\n    $debug_cmd\n\n    _G_message=$*\n\n    func_echo_IFS=$IFS\n    IFS=$nl\n    for _G_line in $_G_message; do\n      IFS=$func_echo_IFS\n      $ECHO \"$progname${opt_mode+: $opt_mode}: $_G_line\"\n    done\n    IFS=$func_echo_IFS\n}\n\n\n# func_warning ARG...\n# -------------------\n# Libtool warnings are not categorized, so override funclib.sh\n# func_warning with this simpler definition.\nfunc_warning ()\n{\n    $debug_cmd\n\n    $warning_func ${1+\"$@\"}\n}\n\n\n## ---------------- ##\n## Options parsing. ##\n## ---------------- ##\n\n# Hook in the functions to make sure our own options are parsed during\n# the option parsing loop.\n\nusage='$progpath [OPTION]... [MODE-ARG]...'\n\n# Short help message in response to '-h'.\nusage_message=\"Options:\n       --config             show all configuration variables\n       --debug              enable verbose shell tracing\n   -n, --dry-run            display commands without modifying any files\n       --features           display basic configuration information and exit\n       --mode=MODE          use operation mode MODE\n       --no-warnings        equivalent to '-Wnone'\n       --preserve-dup-deps  don't remove duplicate dependency libraries\n       --quiet, --silent    don't print informational messages\n       --tag=TAG            use configuration variables from tag TAG\n   -v, --verbose            print more informational messages than default\n       --version            print version information\n   -W, --warnings=CATEGORY  report the warnings falling in CATEGORY [all]\n   -h, --help, --help-all   print short, long, or detailed help message\n\"\n\n# Additional text appended to 'usage_message' in response to '--help'.\nfunc_help ()\n{\n    $debug_cmd\n\n    func_usage_message\n    $ECHO \"$long_help_message\n\nMODE must be one of the following:\n\n       clean           remove files from the build directory\n       compile         compile a source file into a libtool object\n       execute         automatically set library path, then run a program\n       finish          complete the installation of libtool libraries\n       install         install libraries or executables\n       link            create a library or an executable\n       uninstall       remove libraries from an installed directory\n\nMODE-ARGS vary depending on the MODE.  When passed as first option,\n'--mode=MODE' may be abbreviated as 'MODE' or a unique abbreviation of that.\nTry '$progname --help --mode=MODE' for a more detailed description of MODE.\n\nWhen reporting a bug, please describe a test case to reproduce it and\ninclude the following information:\n\n       host-triplet:   $host\n       shell:          $SHELL\n       compiler:       $LTCC\n       compiler flags: $LTCFLAGS\n       linker:         $LD (gnu? $with_gnu_ld)\n       version:        $progname (GNU libtool) 2.4.6\n       automake:       `($AUTOMAKE --version) 2>/dev/null |$SED 1q`\n       autoconf:       `($AUTOCONF --version) 2>/dev/null |$SED 1q`\n\nReport bugs to <bug-libtool@gnu.org>.\nGNU libtool home page: <http://www.gnu.org/software/libtool/>.\nGeneral help using GNU software: <http://www.gnu.org/gethelp/>.\"\n    exit 0\n}\n\n\n# func_lo2o OBJECT-NAME\n# ---------------------\n# Transform OBJECT-NAME from a '.lo' suffix to the platform specific\n# object suffix.\n\nlo2o=s/\\\\.lo\\$/.$objext/\no2lo=s/\\\\.$objext\\$/.lo/\n\nif test yes = \"$_G_HAVE_XSI_OPS\"; then\n  eval 'func_lo2o ()\n  {\n    case $1 in\n      *.lo) func_lo2o_result=${1%.lo}.$objext ;;\n      *   ) func_lo2o_result=$1               ;;\n    esac\n  }'\n\n  # func_xform LIBOBJ-OR-SOURCE\n  # ---------------------------\n  # Transform LIBOBJ-OR-SOURCE from a '.o' or '.c' (or otherwise)\n  # suffix to a '.lo' libtool-object suffix.\n  eval 'func_xform ()\n  {\n    func_xform_result=${1%.*}.lo\n  }'\nelse\n  # ...otherwise fall back to using sed.\n  func_lo2o ()\n  {\n    func_lo2o_result=`$ECHO \"$1\" | $SED \"$lo2o\"`\n  }\n\n  func_xform ()\n  {\n    func_xform_result=`$ECHO \"$1\" | $SED 's|\\.[^.]*$|.lo|'`\n  }\nfi\n\n\n# func_fatal_configuration ARG...\n# -------------------------------\n# Echo program name prefixed message to standard error, followed by\n# a configuration failure hint, and exit.\nfunc_fatal_configuration ()\n{\n    func__fatal_error ${1+\"$@\"} \\\n      \"See the $PACKAGE documentation for more information.\" \\\n      \"Fatal configuration error.\"\n}\n\n\n# func_config\n# -----------\n# Display the configuration for all the tags in this script.\nfunc_config ()\n{\n    re_begincf='^# ### BEGIN LIBTOOL'\n    re_endcf='^# ### END LIBTOOL'\n\n    # Default configuration.\n    $SED \"1,/$re_begincf CONFIG/d;/$re_endcf CONFIG/,\\$d\" < \"$progpath\"\n\n    # Now print the configurations for the tags.\n    for tagname in $taglist; do\n      $SED -n \"/$re_begincf TAG CONFIG: $tagname\\$/,/$re_endcf TAG CONFIG: $tagname\\$/p\" < \"$progpath\"\n    done\n\n    exit $?\n}\n\n\n# func_features\n# -------------\n# Display the features supported by this script.\nfunc_features ()\n{\n    echo \"host: $host\"\n    if test yes = \"$build_libtool_libs\"; then\n      echo \"enable shared libraries\"\n    else\n      echo \"disable shared libraries\"\n    fi\n    if test yes = \"$build_old_libs\"; then\n      echo \"enable static libraries\"\n    else\n      echo \"disable static libraries\"\n    fi\n\n    exit $?\n}\n\n\n# func_enable_tag TAGNAME\n# -----------------------\n# Verify that TAGNAME is valid, and either flag an error and exit, or\n# enable the TAGNAME tag.  We also add TAGNAME to the global $taglist\n# variable here.\nfunc_enable_tag ()\n{\n    # Global variable:\n    tagname=$1\n\n    re_begincf=\"^# ### BEGIN LIBTOOL TAG CONFIG: $tagname\\$\"\n    re_endcf=\"^# ### END LIBTOOL TAG CONFIG: $tagname\\$\"\n    sed_extractcf=/$re_begincf/,/$re_endcf/p\n\n    # Validate tagname.\n    case $tagname in\n      *[!-_A-Za-z0-9,/]*)\n        func_fatal_error \"invalid tag name: $tagname\"\n        ;;\n    esac\n\n    # Don't test for the \"default\" C tag, as we know it's\n    # there but not specially marked.\n    case $tagname in\n        CC) ;;\n    *)\n        if $GREP \"$re_begincf\" \"$progpath\" >/dev/null 2>&1; then\n\t  taglist=\"$taglist $tagname\"\n\n\t  # Evaluate the configuration.  Be careful to quote the path\n\t  # and the sed script, to avoid splitting on whitespace, but\n\t  # also don't use non-portable quotes within backquotes within\n\t  # quotes we have to do it in 2 steps:\n\t  extractedcf=`$SED -n -e \"$sed_extractcf\" < \"$progpath\"`\n\t  eval \"$extractedcf\"\n        else\n\t  func_error \"ignoring unknown tag $tagname\"\n        fi\n        ;;\n    esac\n}\n\n\n# func_check_version_match\n# ------------------------\n# Ensure that we are using m4 macros, and libtool script from the same\n# release of libtool.\nfunc_check_version_match ()\n{\n    if test \"$package_revision\" != \"$macro_revision\"; then\n      if test \"$VERSION\" != \"$macro_version\"; then\n        if test -z \"$macro_version\"; then\n          cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from an older release.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n        else\n          cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the\n$progname: definition of this LT_INIT comes from $PACKAGE $macro_version.\n$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION\n$progname: and run autoconf again.\n_LT_EOF\n        fi\n      else\n        cat >&2 <<_LT_EOF\n$progname: Version mismatch error.  This is $PACKAGE $VERSION, revision $package_revision,\n$progname: but the definition of this LT_INIT comes from revision $macro_revision.\n$progname: You should recreate aclocal.m4 with macros from revision $package_revision\n$progname: of $PACKAGE $VERSION and run autoconf again.\n_LT_EOF\n      fi\n\n      exit $EXIT_MISMATCH\n    fi\n}\n\n\n# libtool_options_prep [ARG]...\n# -----------------------------\n# Preparation for options parsed by libtool.\nlibtool_options_prep ()\n{\n    $debug_mode\n\n    # Option defaults:\n    opt_config=false\n    opt_dlopen=\n    opt_dry_run=false\n    opt_help=false\n    opt_mode=\n    opt_preserve_dup_deps=false\n    opt_quiet=false\n\n    nonopt=\n    preserve_args=\n\n    # Shorthand for --mode=foo, only valid as the first argument\n    case $1 in\n    clean|clea|cle|cl)\n      shift; set dummy --mode clean ${1+\"$@\"}; shift\n      ;;\n    compile|compil|compi|comp|com|co|c)\n      shift; set dummy --mode compile ${1+\"$@\"}; shift\n      ;;\n    execute|execut|execu|exec|exe|ex|e)\n      shift; set dummy --mode execute ${1+\"$@\"}; shift\n      ;;\n    finish|finis|fini|fin|fi|f)\n      shift; set dummy --mode finish ${1+\"$@\"}; shift\n      ;;\n    install|instal|insta|inst|ins|in|i)\n      shift; set dummy --mode install ${1+\"$@\"}; shift\n      ;;\n    link|lin|li|l)\n      shift; set dummy --mode link ${1+\"$@\"}; shift\n      ;;\n    uninstall|uninstal|uninsta|uninst|unins|unin|uni|un|u)\n      shift; set dummy --mode uninstall ${1+\"$@\"}; shift\n      ;;\n    esac\n\n    # Pass back the list of options.\n    func_quote_for_eval ${1+\"$@\"}\n    libtool_options_prep_result=$func_quote_for_eval_result\n}\nfunc_add_hook func_options_prep libtool_options_prep\n\n\n# libtool_parse_options [ARG]...\n# ---------------------------------\n# Provide handling for libtool specific options.\nlibtool_parse_options ()\n{\n    $debug_cmd\n\n    # Perform our own loop to consume as many options as possible in\n    # each iteration.\n    while test $# -gt 0; do\n      _G_opt=$1\n      shift\n      case $_G_opt in\n        --dry-run|--dryrun|-n)\n                        opt_dry_run=:\n                        ;;\n\n        --config)       func_config ;;\n\n        --dlopen|-dlopen)\n                        opt_dlopen=\"${opt_dlopen+$opt_dlopen\n}$1\"\n                        shift\n                        ;;\n\n        --preserve-dup-deps)\n                        opt_preserve_dup_deps=: ;;\n\n        --features)     func_features ;;\n\n        --finish)       set dummy --mode finish ${1+\"$@\"}; shift ;;\n\n        --help)         opt_help=: ;;\n\n        --help-all)     opt_help=': help-all' ;;\n\n        --mode)         test $# = 0 && func_missing_arg $_G_opt && break\n                        opt_mode=$1\n                        case $1 in\n                          # Valid mode arguments:\n                          clean|compile|execute|finish|install|link|relink|uninstall) ;;\n\n                          # Catch anything else as an error\n                          *) func_error \"invalid argument for $_G_opt\"\n                             exit_cmd=exit\n                             break\n                             ;;\n                        esac\n                        shift\n                        ;;\n\n        --no-silent|--no-quiet)\n                        opt_quiet=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --no-warnings|--no-warning|--no-warn)\n                        opt_warning=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --no-verbose)\n                        opt_verbose=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --silent|--quiet)\n                        opt_quiet=:\n                        opt_verbose=false\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n        --tag)          test $# = 0 && func_missing_arg $_G_opt && break\n                        opt_tag=$1\n                        func_append preserve_args \" $_G_opt $1\"\n                        func_enable_tag \"$1\"\n                        shift\n                        ;;\n\n        --verbose|-v)   opt_quiet=false\n                        opt_verbose=:\n                        func_append preserve_args \" $_G_opt\"\n                        ;;\n\n\t# An option not handled by this hook function:\n        *)\t\tset dummy \"$_G_opt\" ${1+\"$@\"};\tshift; break  ;;\n      esac\n    done\n\n\n    # save modified positional parameters for caller\n    func_quote_for_eval ${1+\"$@\"}\n    libtool_parse_options_result=$func_quote_for_eval_result\n}\nfunc_add_hook func_parse_options libtool_parse_options\n\n\n\n# libtool_validate_options [ARG]...\n# ---------------------------------\n# Perform any sanity checks on option settings and/or unconsumed\n# arguments.\nlibtool_validate_options ()\n{\n    # save first non-option argument\n    if test 0 -lt $#; then\n      nonopt=$1\n      shift\n    fi\n\n    # preserve --debug\n    test : = \"$debug_cmd\" || func_append preserve_args \" --debug\"\n\n    case $host in\n      # Solaris2 added to fix http://debbugs.gnu.org/cgi/bugreport.cgi?bug=16452\n      # see also: http://gcc.gnu.org/bugzilla/show_bug.cgi?id=59788\n      *cygwin* | *mingw* | *pw32* | *cegcc* | *solaris2* | *os2*)\n        # don't eliminate duplications in $postdeps and $predeps\n        opt_duplicate_compiler_generated_deps=:\n        ;;\n      *)\n        opt_duplicate_compiler_generated_deps=$opt_preserve_dup_deps\n        ;;\n    esac\n\n    $opt_help || {\n      # Sanity checks first:\n      func_check_version_match\n\n      test yes != \"$build_libtool_libs\" \\\n        && test yes != \"$build_old_libs\" \\\n        && func_fatal_configuration \"not configured to build any kind of library\"\n\n      # Darwin sucks\n      eval std_shrext=\\\"$shrext_cmds\\\"\n\n      # Only execute mode is allowed to have -dlopen flags.\n      if test -n \"$opt_dlopen\" && test execute != \"$opt_mode\"; then\n        func_error \"unrecognized option '-dlopen'\"\n        $ECHO \"$help\" 1>&2\n        exit $EXIT_FAILURE\n      fi\n\n      # Change the help message to a mode-specific one.\n      generic_help=$help\n      help=\"Try '$progname --help --mode=$opt_mode' for more information.\"\n    }\n\n    # Pass back the unparsed argument list\n    func_quote_for_eval ${1+\"$@\"}\n    libtool_validate_options_result=$func_quote_for_eval_result\n}\nfunc_add_hook func_validate_options libtool_validate_options\n\n\n# Process options as early as possible so that --help and --version\n# can return quickly.\nfunc_options ${1+\"$@\"}\neval set dummy \"$func_options_result\"; shift\n\n\n\n## ----------- ##\n##    Main.    ##\n## ----------- ##\n\nmagic='%%%MAGIC variable%%%'\nmagic_exe='%%%MAGIC EXE variable%%%'\n\n# Global variables.\nextracted_archives=\nextracted_serial=0\n\n# If this variable is set in any of the actions, the command in it\n# will be execed at the end.  This prevents here-documents from being\n# left over by shells.\nexec_cmd=\n\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n$1\n_LTECHO_EOF'\n}\n\n# func_generated_by_libtool\n# True iff stdin has been generated by Libtool. This function is only\n# a basic sanity check; it will hardly flush out determined imposters.\nfunc_generated_by_libtool_p ()\n{\n  $GREP \"^# Generated by .*$PACKAGE\" > /dev/null 2>&1\n}\n\n# func_lalib_p file\n# True iff FILE is a libtool '.la' library or '.lo' object file.\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_lalib_p ()\n{\n    test -f \"$1\" &&\n      $SED -e 4q \"$1\" 2>/dev/null | func_generated_by_libtool_p\n}\n\n# func_lalib_unsafe_p file\n# True iff FILE is a libtool '.la' library or '.lo' object file.\n# This function implements the same check as func_lalib_p without\n# resorting to external programs.  To this end, it redirects stdin and\n# closes it afterwards, without saving the original file descriptor.\n# As a safety measure, use it only where a negative result would be\n# fatal anyway.  Works if 'file' does not exist.\nfunc_lalib_unsafe_p ()\n{\n    lalib_p=no\n    if test -f \"$1\" && test -r \"$1\" && exec 5<&0 <\"$1\"; then\n\tfor lalib_p_l in 1 2 3 4\n\tdo\n\t    read lalib_p_line\n\t    case $lalib_p_line in\n\t\t\\#\\ Generated\\ by\\ *$PACKAGE* ) lalib_p=yes; break;;\n\t    esac\n\tdone\n\texec 0<&5 5<&-\n    fi\n    test yes = \"$lalib_p\"\n}\n\n# func_ltwrapper_script_p file\n# True iff FILE is a libtool wrapper script\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_script_p ()\n{\n    test -f \"$1\" &&\n      $lt_truncate_bin < \"$1\" 2>/dev/null | func_generated_by_libtool_p\n}\n\n# func_ltwrapper_executable_p file\n# True iff FILE is a libtool wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_executable_p ()\n{\n    func_ltwrapper_exec_suffix=\n    case $1 in\n    *.exe) ;;\n    *) func_ltwrapper_exec_suffix=.exe ;;\n    esac\n    $GREP \"$magic_exe\" \"$1$func_ltwrapper_exec_suffix\" >/dev/null 2>&1\n}\n\n# func_ltwrapper_scriptname file\n# Assumes file is an ltwrapper_executable\n# uses $file to determine the appropriate filename for a\n# temporary ltwrapper_script.\nfunc_ltwrapper_scriptname ()\n{\n    func_dirname_and_basename \"$1\" \"\" \".\"\n    func_stripname '' '.exe' \"$func_basename_result\"\n    func_ltwrapper_scriptname_result=$func_dirname_result/$objdir/${func_stripname_result}_ltshwrapper\n}\n\n# func_ltwrapper_p file\n# True iff FILE is a libtool wrapper script or wrapper executable\n# This function is only a basic sanity check; it will hardly flush out\n# determined imposters.\nfunc_ltwrapper_p ()\n{\n    func_ltwrapper_script_p \"$1\" || func_ltwrapper_executable_p \"$1\"\n}\n\n\n# func_execute_cmds commands fail_cmd\n# Execute tilde-delimited COMMANDS.\n# If FAIL_CMD is given, eval that upon failure.\n# FAIL_CMD may read-access the current command in variable CMD!\nfunc_execute_cmds ()\n{\n    $debug_cmd\n\n    save_ifs=$IFS; IFS='~'\n    for cmd in $1; do\n      IFS=$sp$nl\n      eval cmd=\\\"$cmd\\\"\n      IFS=$save_ifs\n      func_show_eval \"$cmd\" \"${2-:}\"\n    done\n    IFS=$save_ifs\n}\n\n\n# func_source file\n# Source FILE, adding directory component if necessary.\n# Note that it is not necessary on cygwin/mingw to append a dot to\n# FILE even if both FILE and FILE.exe exist: automatic-append-.exe\n# behavior happens only for exec(3), not for open(2)!  Also, sourcing\n# 'FILE.' does not work on cygwin managed mounts.\nfunc_source ()\n{\n    $debug_cmd\n\n    case $1 in\n    */* | *\\\\*)\t. \"$1\" ;;\n    *)\t\t. \"./$1\" ;;\n    esac\n}\n\n\n# func_resolve_sysroot PATH\n# Replace a leading = in PATH with a sysroot.  Store the result into\n# func_resolve_sysroot_result\nfunc_resolve_sysroot ()\n{\n  func_resolve_sysroot_result=$1\n  case $func_resolve_sysroot_result in\n  =*)\n    func_stripname '=' '' \"$func_resolve_sysroot_result\"\n    func_resolve_sysroot_result=$lt_sysroot$func_stripname_result\n    ;;\n  esac\n}\n\n# func_replace_sysroot PATH\n# If PATH begins with the sysroot, replace it with = and\n# store the result into func_replace_sysroot_result.\nfunc_replace_sysroot ()\n{\n  case $lt_sysroot:$1 in\n  ?*:\"$lt_sysroot\"*)\n    func_stripname \"$lt_sysroot\" '' \"$1\"\n    func_replace_sysroot_result='='$func_stripname_result\n    ;;\n  *)\n    # Including no sysroot.\n    func_replace_sysroot_result=$1\n    ;;\n  esac\n}\n\n# func_infer_tag arg\n# Infer tagged configuration to use if any are available and\n# if one wasn't chosen via the \"--tag\" command line option.\n# Only attempt this if the compiler in the base compile\n# command doesn't match the default compiler.\n# arg is usually of the form 'gcc ...'\nfunc_infer_tag ()\n{\n    $debug_cmd\n\n    if test -n \"$available_tags\" && test -z \"$tagname\"; then\n      CC_quoted=\n      for arg in $CC; do\n\tfunc_append_quoted CC_quoted \"$arg\"\n      done\n      CC_expanded=`func_echo_all $CC`\n      CC_quoted_expanded=`func_echo_all $CC_quoted`\n      case $@ in\n      # Blanks in the command may have been stripped by the calling shell,\n      # but not from the CC environment variable when configure was run.\n      \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n      \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*) ;;\n      # Blanks at the start of $base_compile will cause this to fail\n      # if we don't check for them as well.\n      *)\n\tfor z in $available_tags; do\n\t  if $GREP \"^# ### BEGIN LIBTOOL TAG CONFIG: $z$\" < \"$progpath\" > /dev/null; then\n\t    # Evaluate the configuration.\n\t    eval \"`$SED -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^# ### END LIBTOOL TAG CONFIG: '$z'$/p' < $progpath`\"\n\t    CC_quoted=\n\t    for arg in $CC; do\n\t      # Double-quote args containing other shell metacharacters.\n\t      func_append_quoted CC_quoted \"$arg\"\n\t    done\n\t    CC_expanded=`func_echo_all $CC`\n\t    CC_quoted_expanded=`func_echo_all $CC_quoted`\n\t    case \"$@ \" in\n\t    \" $CC \"* | \"$CC \"* | \" $CC_expanded \"* | \"$CC_expanded \"* | \\\n\t    \" $CC_quoted\"* | \"$CC_quoted \"* | \" $CC_quoted_expanded \"* | \"$CC_quoted_expanded \"*)\n\t      # The compiler in the base compile command matches\n\t      # the one in the tagged configuration.\n\t      # Assume this is the tagged configuration we want.\n\t      tagname=$z\n\t      break\n\t      ;;\n\t    esac\n\t  fi\n\tdone\n\t# If $tagname still isn't set, then no tagged configuration\n\t# was found and let the user know that the \"--tag\" command\n\t# line option must be used.\n\tif test -z \"$tagname\"; then\n\t  func_echo \"unable to infer tagged configuration\"\n\t  func_fatal_error \"specify a tag with '--tag'\"\n#\telse\n#\t  func_verbose \"using $tagname tagged configuration\"\n\tfi\n\t;;\n      esac\n    fi\n}\n\n\n\n# func_write_libtool_object output_name pic_name nonpic_name\n# Create a libtool object file (analogous to a \".la\" file),\n# but don't create it if we're doing a dry run.\nfunc_write_libtool_object ()\n{\n    write_libobj=$1\n    if test yes = \"$build_libtool_libs\"; then\n      write_lobj=\\'$2\\'\n    else\n      write_lobj=none\n    fi\n\n    if test yes = \"$build_old_libs\"; then\n      write_oldobj=\\'$3\\'\n    else\n      write_oldobj=none\n    fi\n\n    $opt_dry_run || {\n      cat >${write_libobj}T <<EOF\n# $write_libobj - a libtool object file\n# Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# Name of the PIC object.\npic_object=$write_lobj\n\n# Name of the non-PIC object\nnon_pic_object=$write_oldobj\n\nEOF\n      $MV \"${write_libobj}T\" \"$write_libobj\"\n    }\n}\n\n\n##################################################\n# FILE NAME AND PATH CONVERSION HELPER FUNCTIONS #\n##################################################\n\n# func_convert_core_file_wine_to_w32 ARG\n# Helper function used by file name conversion functions when $build is *nix,\n# and $host is mingw, cygwin, or some other w32 environment. Relies on a\n# correctly configured wine environment available, with the winepath program\n# in $build's $PATH.\n#\n# ARG is the $build file name to be converted to w32 format.\n# Result is available in $func_convert_core_file_wine_to_w32_result, and will\n# be empty on error (or when ARG is empty)\nfunc_convert_core_file_wine_to_w32 ()\n{\n  $debug_cmd\n\n  func_convert_core_file_wine_to_w32_result=$1\n  if test -n \"$1\"; then\n    # Unfortunately, winepath does not exit with a non-zero error code, so we\n    # are forced to check the contents of stdout. On the other hand, if the\n    # command is not found, the shell will set an exit code of 127 and print\n    # *an error message* to stdout. So we must check for both error code of\n    # zero AND non-empty stdout, which explains the odd construction:\n    func_convert_core_file_wine_to_w32_tmp=`winepath -w \"$1\" 2>/dev/null`\n    if test \"$?\" -eq 0 && test -n \"$func_convert_core_file_wine_to_w32_tmp\"; then\n      func_convert_core_file_wine_to_w32_result=`$ECHO \"$func_convert_core_file_wine_to_w32_tmp\" |\n        $SED -e \"$sed_naive_backslashify\"`\n    else\n      func_convert_core_file_wine_to_w32_result=\n    fi\n  fi\n}\n# end: func_convert_core_file_wine_to_w32\n\n\n# func_convert_core_path_wine_to_w32 ARG\n# Helper function used by path conversion functions when $build is *nix, and\n# $host is mingw, cygwin, or some other w32 environment. Relies on a correctly\n# configured wine environment available, with the winepath program in $build's\n# $PATH. Assumes ARG has no leading or trailing path separator characters.\n#\n# ARG is path to be converted from $build format to win32.\n# Result is available in $func_convert_core_path_wine_to_w32_result.\n# Unconvertible file (directory) names in ARG are skipped; if no directory names\n# are convertible, then the result may be empty.\nfunc_convert_core_path_wine_to_w32 ()\n{\n  $debug_cmd\n\n  # unfortunately, winepath doesn't convert paths, only file names\n  func_convert_core_path_wine_to_w32_result=\n  if test -n \"$1\"; then\n    oldIFS=$IFS\n    IFS=:\n    for func_convert_core_path_wine_to_w32_f in $1; do\n      IFS=$oldIFS\n      func_convert_core_file_wine_to_w32 \"$func_convert_core_path_wine_to_w32_f\"\n      if test -n \"$func_convert_core_file_wine_to_w32_result\"; then\n        if test -z \"$func_convert_core_path_wine_to_w32_result\"; then\n          func_convert_core_path_wine_to_w32_result=$func_convert_core_file_wine_to_w32_result\n        else\n          func_append func_convert_core_path_wine_to_w32_result \";$func_convert_core_file_wine_to_w32_result\"\n        fi\n      fi\n    done\n    IFS=$oldIFS\n  fi\n}\n# end: func_convert_core_path_wine_to_w32\n\n\n# func_cygpath ARGS...\n# Wrapper around calling the cygpath program via LT_CYGPATH. This is used when\n# when (1) $build is *nix and Cygwin is hosted via a wine environment; or (2)\n# $build is MSYS and $host is Cygwin, or (3) $build is Cygwin. In case (1) or\n# (2), returns the Cygwin file name or path in func_cygpath_result (input\n# file name or path is assumed to be in w32 format, as previously converted\n# from $build's *nix or MSYS format). In case (3), returns the w32 file name\n# or path in func_cygpath_result (input file name or path is assumed to be in\n# Cygwin format). Returns an empty string on error.\n#\n# ARGS are passed to cygpath, with the last one being the file name or path to\n# be converted.\n#\n# Specify the absolute *nix (or w32) name to cygpath in the LT_CYGPATH\n# environment variable; do not put it in $PATH.\nfunc_cygpath ()\n{\n  $debug_cmd\n\n  if test -n \"$LT_CYGPATH\" && test -f \"$LT_CYGPATH\"; then\n    func_cygpath_result=`$LT_CYGPATH \"$@\" 2>/dev/null`\n    if test \"$?\" -ne 0; then\n      # on failure, ensure result is empty\n      func_cygpath_result=\n    fi\n  else\n    func_cygpath_result=\n    func_error \"LT_CYGPATH is empty or specifies non-existent file: '$LT_CYGPATH'\"\n  fi\n}\n#end: func_cygpath\n\n\n# func_convert_core_msys_to_w32 ARG\n# Convert file name or path ARG from MSYS format to w32 format.  Return\n# result in func_convert_core_msys_to_w32_result.\nfunc_convert_core_msys_to_w32 ()\n{\n  $debug_cmd\n\n  # awkward: cmd appends spaces to result\n  func_convert_core_msys_to_w32_result=`( cmd //c echo \"$1\" ) 2>/dev/null |\n    $SED -e 's/[ ]*$//' -e \"$sed_naive_backslashify\"`\n}\n#end: func_convert_core_msys_to_w32\n\n\n# func_convert_file_check ARG1 ARG2\n# Verify that ARG1 (a file name in $build format) was converted to $host\n# format in ARG2. Otherwise, emit an error message, but continue (resetting\n# func_to_host_file_result to ARG1).\nfunc_convert_file_check ()\n{\n  $debug_cmd\n\n  if test -z \"$2\" && test -n \"$1\"; then\n    func_error \"Could not determine host file name corresponding to\"\n    func_error \"  '$1'\"\n    func_error \"Continuing, but uninstalled executables may not work.\"\n    # Fallback:\n    func_to_host_file_result=$1\n  fi\n}\n# end func_convert_file_check\n\n\n# func_convert_path_check FROM_PATHSEP TO_PATHSEP FROM_PATH TO_PATH\n# Verify that FROM_PATH (a path in $build format) was converted to $host\n# format in TO_PATH. Otherwise, emit an error message, but continue, resetting\n# func_to_host_file_result to a simplistic fallback value (see below).\nfunc_convert_path_check ()\n{\n  $debug_cmd\n\n  if test -z \"$4\" && test -n \"$3\"; then\n    func_error \"Could not determine the host path corresponding to\"\n    func_error \"  '$3'\"\n    func_error \"Continuing, but uninstalled executables may not work.\"\n    # Fallback.  This is a deliberately simplistic \"conversion\" and\n    # should not be \"improved\".  See libtool.info.\n    if test \"x$1\" != \"x$2\"; then\n      lt_replace_pathsep_chars=\"s|$1|$2|g\"\n      func_to_host_path_result=`echo \"$3\" |\n        $SED -e \"$lt_replace_pathsep_chars\"`\n    else\n      func_to_host_path_result=$3\n    fi\n  fi\n}\n# end func_convert_path_check\n\n\n# func_convert_path_front_back_pathsep FRONTPAT BACKPAT REPL ORIG\n# Modifies func_to_host_path_result by prepending REPL if ORIG matches FRONTPAT\n# and appending REPL if ORIG matches BACKPAT.\nfunc_convert_path_front_back_pathsep ()\n{\n  $debug_cmd\n\n  case $4 in\n  $1 ) func_to_host_path_result=$3$func_to_host_path_result\n    ;;\n  esac\n  case $4 in\n  $2 ) func_append func_to_host_path_result \"$3\"\n    ;;\n  esac\n}\n# end func_convert_path_front_back_pathsep\n\n\n##################################################\n# $build to $host FILE NAME CONVERSION FUNCTIONS #\n##################################################\n# invoked via '$to_host_file_cmd ARG'\n#\n# In each case, ARG is the path to be converted from $build to $host format.\n# Result will be available in $func_to_host_file_result.\n\n\n# func_to_host_file ARG\n# Converts the file name ARG from $build format to $host format. Return result\n# in func_to_host_file_result.\nfunc_to_host_file ()\n{\n  $debug_cmd\n\n  $to_host_file_cmd \"$1\"\n}\n# end func_to_host_file\n\n\n# func_to_tool_file ARG LAZY\n# converts the file name ARG from $build format to toolchain format. Return\n# result in func_to_tool_file_result.  If the conversion in use is listed\n# in (the comma separated) LAZY, no conversion takes place.\nfunc_to_tool_file ()\n{\n  $debug_cmd\n\n  case ,$2, in\n    *,\"$to_tool_file_cmd\",*)\n      func_to_tool_file_result=$1\n      ;;\n    *)\n      $to_tool_file_cmd \"$1\"\n      func_to_tool_file_result=$func_to_host_file_result\n      ;;\n  esac\n}\n# end func_to_tool_file\n\n\n# func_convert_file_noop ARG\n# Copy ARG to func_to_host_file_result.\nfunc_convert_file_noop ()\n{\n  func_to_host_file_result=$1\n}\n# end func_convert_file_noop\n\n\n# func_convert_file_msys_to_w32 ARG\n# Convert file name ARG from (mingw) MSYS to (mingw) w32 format; automatic\n# conversion to w32 is not available inside the cwrapper.  Returns result in\n# func_to_host_file_result.\nfunc_convert_file_msys_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    func_convert_core_msys_to_w32 \"$1\"\n    func_to_host_file_result=$func_convert_core_msys_to_w32_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_msys_to_w32\n\n\n# func_convert_file_cygwin_to_w32 ARG\n# Convert file name ARG from Cygwin to w32 format.  Returns result in\n# func_to_host_file_result.\nfunc_convert_file_cygwin_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    # because $build is cygwin, we call \"the\" cygpath in $PATH; no need to use\n    # LT_CYGPATH in this case.\n    func_to_host_file_result=`cygpath -m \"$1\"`\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_cygwin_to_w32\n\n\n# func_convert_file_nix_to_w32 ARG\n# Convert file name ARG from *nix to w32 format.  Requires a wine environment\n# and a working winepath. Returns result in func_to_host_file_result.\nfunc_convert_file_nix_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    func_convert_core_file_wine_to_w32 \"$1\"\n    func_to_host_file_result=$func_convert_core_file_wine_to_w32_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_nix_to_w32\n\n\n# func_convert_file_msys_to_cygwin ARG\n# Convert file name ARG from MSYS to Cygwin format.  Requires LT_CYGPATH set.\n# Returns result in func_to_host_file_result.\nfunc_convert_file_msys_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    func_convert_core_msys_to_w32 \"$1\"\n    func_cygpath -u \"$func_convert_core_msys_to_w32_result\"\n    func_to_host_file_result=$func_cygpath_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_msys_to_cygwin\n\n\n# func_convert_file_nix_to_cygwin ARG\n# Convert file name ARG from *nix to Cygwin format.  Requires Cygwin installed\n# in a wine environment, working winepath, and LT_CYGPATH set.  Returns result\n# in func_to_host_file_result.\nfunc_convert_file_nix_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_file_result=$1\n  if test -n \"$1\"; then\n    # convert from *nix to w32, then use cygpath to convert from w32 to cygwin.\n    func_convert_core_file_wine_to_w32 \"$1\"\n    func_cygpath -u \"$func_convert_core_file_wine_to_w32_result\"\n    func_to_host_file_result=$func_cygpath_result\n  fi\n  func_convert_file_check \"$1\" \"$func_to_host_file_result\"\n}\n# end func_convert_file_nix_to_cygwin\n\n\n#############################################\n# $build to $host PATH CONVERSION FUNCTIONS #\n#############################################\n# invoked via '$to_host_path_cmd ARG'\n#\n# In each case, ARG is the path to be converted from $build to $host format.\n# The result will be available in $func_to_host_path_result.\n#\n# Path separators are also converted from $build format to $host format.  If\n# ARG begins or ends with a path separator character, it is preserved (but\n# converted to $host format) on output.\n#\n# All path conversion functions are named using the following convention:\n#   file name conversion function    : func_convert_file_X_to_Y ()\n#   path conversion function         : func_convert_path_X_to_Y ()\n# where, for any given $build/$host combination the 'X_to_Y' value is the\n# same.  If conversion functions are added for new $build/$host combinations,\n# the two new functions must follow this pattern, or func_init_to_host_path_cmd\n# will break.\n\n\n# func_init_to_host_path_cmd\n# Ensures that function \"pointer\" variable $to_host_path_cmd is set to the\n# appropriate value, based on the value of $to_host_file_cmd.\nto_host_path_cmd=\nfunc_init_to_host_path_cmd ()\n{\n  $debug_cmd\n\n  if test -z \"$to_host_path_cmd\"; then\n    func_stripname 'func_convert_file_' '' \"$to_host_file_cmd\"\n    to_host_path_cmd=func_convert_path_$func_stripname_result\n  fi\n}\n\n\n# func_to_host_path ARG\n# Converts the path ARG from $build format to $host format. Return result\n# in func_to_host_path_result.\nfunc_to_host_path ()\n{\n  $debug_cmd\n\n  func_init_to_host_path_cmd\n  $to_host_path_cmd \"$1\"\n}\n# end func_to_host_path\n\n\n# func_convert_path_noop ARG\n# Copy ARG to func_to_host_path_result.\nfunc_convert_path_noop ()\n{\n  func_to_host_path_result=$1\n}\n# end func_convert_path_noop\n\n\n# func_convert_path_msys_to_w32 ARG\n# Convert path ARG from (mingw) MSYS to (mingw) w32 format; automatic\n# conversion to w32 is not available inside the cwrapper.  Returns result in\n# func_to_host_path_result.\nfunc_convert_path_msys_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # Remove leading and trailing path separator characters from ARG.  MSYS\n    # behavior is inconsistent here; cygpath turns them into '.;' and ';.';\n    # and winepath ignores them completely.\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_msys_to_w32 \"$func_to_host_path_tmp1\"\n    func_to_host_path_result=$func_convert_core_msys_to_w32_result\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_msys_to_w32\n\n\n# func_convert_path_cygwin_to_w32 ARG\n# Convert path ARG from Cygwin to w32 format.  Returns result in\n# func_to_host_file_result.\nfunc_convert_path_cygwin_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_to_host_path_result=`cygpath -m -p \"$func_to_host_path_tmp1\"`\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_cygwin_to_w32\n\n\n# func_convert_path_nix_to_w32 ARG\n# Convert path ARG from *nix to w32 format.  Requires a wine environment and\n# a working winepath.  Returns result in func_to_host_file_result.\nfunc_convert_path_nix_to_w32 ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_path_wine_to_w32 \"$func_to_host_path_tmp1\"\n    func_to_host_path_result=$func_convert_core_path_wine_to_w32_result\n    func_convert_path_check : \";\" \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" \";\" \"$1\"\n  fi\n}\n# end func_convert_path_nix_to_w32\n\n\n# func_convert_path_msys_to_cygwin ARG\n# Convert path ARG from MSYS to Cygwin format.  Requires LT_CYGPATH set.\n# Returns result in func_to_host_file_result.\nfunc_convert_path_msys_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # See func_convert_path_msys_to_w32:\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_msys_to_w32 \"$func_to_host_path_tmp1\"\n    func_cygpath -u -p \"$func_convert_core_msys_to_w32_result\"\n    func_to_host_path_result=$func_cygpath_result\n    func_convert_path_check : : \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" : \"$1\"\n  fi\n}\n# end func_convert_path_msys_to_cygwin\n\n\n# func_convert_path_nix_to_cygwin ARG\n# Convert path ARG from *nix to Cygwin format.  Requires Cygwin installed in a\n# a wine environment, working winepath, and LT_CYGPATH set.  Returns result in\n# func_to_host_file_result.\nfunc_convert_path_nix_to_cygwin ()\n{\n  $debug_cmd\n\n  func_to_host_path_result=$1\n  if test -n \"$1\"; then\n    # Remove leading and trailing path separator characters from\n    # ARG. msys behavior is inconsistent here, cygpath turns them\n    # into '.;' and ';.', and winepath ignores them completely.\n    func_stripname : : \"$1\"\n    func_to_host_path_tmp1=$func_stripname_result\n    func_convert_core_path_wine_to_w32 \"$func_to_host_path_tmp1\"\n    func_cygpath -u -p \"$func_convert_core_path_wine_to_w32_result\"\n    func_to_host_path_result=$func_cygpath_result\n    func_convert_path_check : : \\\n      \"$func_to_host_path_tmp1\" \"$func_to_host_path_result\"\n    func_convert_path_front_back_pathsep \":*\" \"*:\" : \"$1\"\n  fi\n}\n# end func_convert_path_nix_to_cygwin\n\n\n# func_dll_def_p FILE\n# True iff FILE is a Windows DLL '.def' file.\n# Keep in sync with _LT_DLL_DEF_P in libtool.m4\nfunc_dll_def_p ()\n{\n  $debug_cmd\n\n  func_dll_def_p_tmp=`$SED -n \\\n    -e 's/^[\t ]*//' \\\n    -e '/^\\(;.*\\)*$/d' \\\n    -e 's/^\\(EXPORTS\\|LIBRARY\\)\\([\t ].*\\)*$/DEF/p' \\\n    -e q \\\n    \"$1\"`\n  test DEF = \"$func_dll_def_p_tmp\"\n}\n\n\n# func_mode_compile arg...\nfunc_mode_compile ()\n{\n    $debug_cmd\n\n    # Get the compilation command and the source file.\n    base_compile=\n    srcfile=$nonopt  #  always keep a non-empty value in \"srcfile\"\n    suppress_opt=yes\n    suppress_output=\n    arg_mode=normal\n    libobj=\n    later=\n    pie_flag=\n\n    for arg\n    do\n      case $arg_mode in\n      arg  )\n\t# do not \"continue\".  Instead, add this to base_compile\n\tlastarg=$arg\n\targ_mode=normal\n\t;;\n\n      target )\n\tlibobj=$arg\n\targ_mode=normal\n\tcontinue\n\t;;\n\n      normal )\n\t# Accept any command-line options.\n\tcase $arg in\n\t-o)\n\t  test -n \"$libobj\" && \\\n\t    func_fatal_error \"you cannot specify '-o' more than once\"\n\t  arg_mode=target\n\t  continue\n\t  ;;\n\n\t-pie | -fpie | -fPIE)\n          func_append pie_flag \" $arg\"\n\t  continue\n\t  ;;\n\n\t-shared | -static | -prefer-pic | -prefer-non-pic)\n\t  func_append later \" $arg\"\n\t  continue\n\t  ;;\n\n\t-no-suppress)\n\t  suppress_opt=no\n\t  continue\n\t  ;;\n\n\t-Xcompiler)\n\t  arg_mode=arg  #  the next one goes into the \"base_compile\" arg list\n\t  continue      #  The current \"srcfile\" will either be retained or\n\t  ;;            #  replaced later.  I would guess that would be a bug.\n\n\t-Wc,*)\n\t  func_stripname '-Wc,' '' \"$arg\"\n\t  args=$func_stripname_result\n\t  lastarg=\n\t  save_ifs=$IFS; IFS=,\n\t  for arg in $args; do\n\t    IFS=$save_ifs\n\t    func_append_quoted lastarg \"$arg\"\n\t  done\n\t  IFS=$save_ifs\n\t  func_stripname ' ' '' \"$lastarg\"\n\t  lastarg=$func_stripname_result\n\n\t  # Add the arguments to base_compile.\n\t  func_append base_compile \" $lastarg\"\n\t  continue\n\t  ;;\n\n\t*)\n\t  # Accept the current argument as the source file.\n\t  # The previous \"srcfile\" becomes the current argument.\n\t  #\n\t  lastarg=$srcfile\n\t  srcfile=$arg\n\t  ;;\n\tesac  #  case $arg\n\t;;\n      esac    #  case $arg_mode\n\n      # Aesthetically quote the previous argument.\n      func_append_quoted base_compile \"$lastarg\"\n    done # for arg\n\n    case $arg_mode in\n    arg)\n      func_fatal_error \"you must specify an argument for -Xcompile\"\n      ;;\n    target)\n      func_fatal_error \"you must specify a target with '-o'\"\n      ;;\n    *)\n      # Get the name of the library object.\n      test -z \"$libobj\" && {\n\tfunc_basename \"$srcfile\"\n\tlibobj=$func_basename_result\n      }\n      ;;\n    esac\n\n    # Recognize several different file suffixes.\n    # If the user specifies -o file.o, it is replaced with file.lo\n    case $libobj in\n    *.[cCFSifmso] | \\\n    *.ada | *.adb | *.ads | *.asm | \\\n    *.c++ | *.cc | *.ii | *.class | *.cpp | *.cxx | \\\n    *.[fF][09]? | *.for | *.java | *.go | *.obj | *.sx | *.cu | *.cup)\n      func_xform \"$libobj\"\n      libobj=$func_xform_result\n      ;;\n    esac\n\n    case $libobj in\n    *.lo) func_lo2o \"$libobj\"; obj=$func_lo2o_result ;;\n    *)\n      func_fatal_error \"cannot determine name of library object from '$libobj'\"\n      ;;\n    esac\n\n    func_infer_tag $base_compile\n\n    for arg in $later; do\n      case $arg in\n      -shared)\n\ttest yes = \"$build_libtool_libs\" \\\n\t  || func_fatal_configuration \"cannot build a shared library\"\n\tbuild_old_libs=no\n\tcontinue\n\t;;\n\n      -static)\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tcontinue\n\t;;\n\n      -prefer-pic)\n\tpic_mode=yes\n\tcontinue\n\t;;\n\n      -prefer-non-pic)\n\tpic_mode=no\n\tcontinue\n\t;;\n      esac\n    done\n\n    func_quote_for_eval \"$libobj\"\n    test \"X$libobj\" != \"X$func_quote_for_eval_result\" \\\n      && $ECHO \"X$libobj\" | $GREP '[]~#^*{};<>?\"'\"'\"'\t &()|`$[]' \\\n      && func_warning \"libobj name '$libobj' may not contain shell special characters.\"\n    func_dirname_and_basename \"$obj\" \"/\" \"\"\n    objname=$func_basename_result\n    xdir=$func_dirname_result\n    lobj=$xdir$objdir/$objname\n\n    test -z \"$base_compile\" && \\\n      func_fatal_help \"you must specify a compilation command\"\n\n    # Delete any leftover library objects.\n    if test yes = \"$build_old_libs\"; then\n      removelist=\"$obj $lobj $libobj ${libobj}T\"\n    else\n      removelist=\"$lobj $libobj ${libobj}T\"\n    fi\n\n    # On Cygwin there's no \"real\" PIC flag so we must build both object types\n    case $host_os in\n    cygwin* | mingw* | pw32* | os2* | cegcc*)\n      pic_mode=default\n      ;;\n    esac\n    if test no = \"$pic_mode\" && test pass_all != \"$deplibs_check_method\"; then\n      # non-PIC code in shared libraries is not supported\n      pic_mode=default\n    fi\n\n    # Calculate the filename of the output object if compiler does\n    # not support -o with -c\n    if test no = \"$compiler_c_o\"; then\n      output_obj=`$ECHO \"$srcfile\" | $SED 's%^.*/%%; s%\\.[^.]*$%%'`.$objext\n      lockfile=$output_obj.lock\n    else\n      output_obj=\n      need_locks=no\n      lockfile=\n    fi\n\n    # Lock this critical section if it is needed\n    # We use this script file to make the link, it avoids creating a new file\n    if test yes = \"$need_locks\"; then\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    elif test warn = \"$need_locks\"; then\n      if test -f \"$lockfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile exists and contains:\n`cat $lockfile 2>/dev/null`\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support '-c' and '-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n      func_append removelist \" $output_obj\"\n      $ECHO \"$srcfile\" > \"$lockfile\"\n    fi\n\n    $opt_dry_run || $RM $removelist\n    func_append removelist \" $lockfile\"\n    trap '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE' 1 2 15\n\n    func_to_tool_file \"$srcfile\" func_convert_file_msys_to_w32\n    srcfile=$func_to_tool_file_result\n    func_quote_for_eval \"$srcfile\"\n    qsrcfile=$func_quote_for_eval_result\n\n    # Only build a PIC object if we are building libtool libraries.\n    if test yes = \"$build_libtool_libs\"; then\n      # Without this assignment, base_compile gets emptied.\n      fbsd_hideous_sh_bug=$base_compile\n\n      if test no != \"$pic_mode\"; then\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      else\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile\"\n      fi\n\n      func_mkdir_p \"$xdir$objdir\"\n\n      if test -z \"$output_obj\"; then\n\t# Place PIC objects in $objdir\n\tfunc_append command \" -o $lobj\"\n      fi\n\n      func_show_eval_locale \"$command\"\t\\\n          'test -n \"$output_obj\" && $RM $removelist; exit $EXIT_FAILURE'\n\n      if test warn = \"$need_locks\" &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support '-c' and '-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed, then go on to compile the next one\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$lobj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$lobj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n\n      # Allow error messages only from the first compilation.\n      if test yes = \"$suppress_opt\"; then\n\tsuppress_output=' >/dev/null 2>&1'\n      fi\n    fi\n\n    # Only build a position-dependent object if we build old libraries.\n    if test yes = \"$build_old_libs\"; then\n      if test yes != \"$pic_mode\"; then\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile$pie_flag\"\n      else\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      fi\n      if test yes = \"$compiler_c_o\"; then\n\tfunc_append command \" -o $obj\"\n      fi\n\n      # Suppress compiler output if we already did a PIC compilation.\n      func_append command \"$suppress_output\"\n      func_show_eval_locale \"$command\" \\\n        '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE'\n\n      if test warn = \"$need_locks\" &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$ECHO \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support '-c' and '-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$opt_dry_run || $RM $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$obj\"; then\n\tfunc_show_eval '$MV \"$output_obj\" \"$obj\"' \\\n\t  'error=$?; $opt_dry_run || $RM $removelist; exit $error'\n      fi\n    fi\n\n    $opt_dry_run || {\n      func_write_libtool_object \"$libobj\" \"$objdir/$objname\" \"$objname\"\n\n      # Unlock the critical section if it was locked\n      if test no != \"$need_locks\"; then\n\tremovelist=$lockfile\n        $RM \"$lockfile\"\n      fi\n    }\n\n    exit $EXIT_SUCCESS\n}\n\n$opt_help || {\n  test compile = \"$opt_mode\" && func_mode_compile ${1+\"$@\"}\n}\n\nfunc_mode_help ()\n{\n    # We need to display help for each of the modes.\n    case $opt_mode in\n      \"\")\n        # Generic help is extracted from the usage comments\n        # at the start of this file.\n        func_help\n        ;;\n\n      clean)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=clean RM [RM-OPTION]... FILE...\n\nRemove files from the build directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically '/bin/rm').  RM-OPTIONS are options (such as '-f') to be passed\nto RM.\n\nIf FILE is a libtool library, object or program, all the files associated\nwith it are deleted. Otherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      compile)\n      $ECHO \\\n\"Usage: $progname [OPTION]... --mode=compile COMPILE-COMMAND... SOURCEFILE\n\nCompile a source file into a libtool library object.\n\nThis mode accepts the following additional options:\n\n  -o OUTPUT-FILE    set the output file name to OUTPUT-FILE\n  -no-suppress      do not suppress compiler output for multiple passes\n  -prefer-pic       try to build PIC objects only\n  -prefer-non-pic   try to build non-PIC objects only\n  -shared           do not build a '.o' file suitable for static linking\n  -static           only build a '.o' file suitable for static linking\n  -Wc,FLAG          pass FLAG directly to the compiler\n\nCOMPILE-COMMAND is a command to be used in creating a 'standard' object file\nfrom the given SOURCEFILE.\n\nThe output file name is determined by removing the directory component from\nSOURCEFILE, then substituting the C source code suffix '.c' with the\nlibrary object suffix, '.lo'.\"\n        ;;\n\n      execute)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=execute COMMAND [ARGS]...\n\nAutomatically set library path, then run a program.\n\nThis mode accepts the following additional options:\n\n  -dlopen FILE      add the directory containing FILE to the library path\n\nThis mode sets the library path environment variable according to '-dlopen'\nflags.\n\nIf any of the ARGS are libtool executable wrappers, then they are translated\ninto their corresponding uninstalled binary, and any of their required library\ndirectories are added to the library path.\n\nThen, COMMAND is executed, with ARGS as arguments.\"\n        ;;\n\n      finish)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=finish [LIBDIR]...\n\nComplete the installation of libtool libraries.\n\nEach LIBDIR is a directory that contains libtool libraries.\n\nThe commands that this mode executes may require superuser privileges.  Use\nthe '--dry-run' option if you just want to see what would be executed.\"\n        ;;\n\n      install)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=install INSTALL-COMMAND...\n\nInstall executables or libraries.\n\nINSTALL-COMMAND is the installation command.  The first component should be\neither the 'install' or 'cp' program.\n\nThe following components of INSTALL-COMMAND are treated specially:\n\n  -inst-prefix-dir PREFIX-DIR  Use PREFIX-DIR as a staging area for installation\n\nThe rest of the components are interpreted as arguments to that command (only\nBSD-compatible install options are recognized).\"\n        ;;\n\n      link)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=link LINK-COMMAND...\n\nLink object files or libraries together to form another library, or to\ncreate an executable program.\n\nLINK-COMMAND is a command using the C compiler that you would use to create\na program from several object files.\n\nThe following components of LINK-COMMAND are treated specially:\n\n  -all-static       do not do any dynamic linking at all\n  -avoid-version    do not add a version suffix if possible\n  -bindir BINDIR    specify path to binaries directory (for systems where\n                    libraries must be found in the PATH setting at runtime)\n  -dlopen FILE      '-dlpreopen' FILE if it cannot be dlopened at runtime\n  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols\n  -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)\n  -export-symbols SYMFILE\n                    try to export only the symbols listed in SYMFILE\n  -export-symbols-regex REGEX\n                    try to export only the symbols matching REGEX\n  -LLIBDIR          search LIBDIR for required installed libraries\n  -lNAME            OUTPUT-FILE requires the installed library libNAME\n  -module           build a library that can dlopened\n  -no-fast-install  disable the fast-install mode\n  -no-install       link a not-installable executable\n  -no-undefined     declare that a library does not refer to external symbols\n  -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects\n  -objectlist FILE  use a list of object files found in FILE to specify objects\n  -os2dllname NAME  force a short DLL name on OS/2 (no effect on other OSes)\n  -precious-files-regex REGEX\n                    don't remove output files matching REGEX\n  -release RELEASE  specify package release information\n  -rpath LIBDIR     the created library will eventually be installed in LIBDIR\n  -R[ ]LIBDIR       add LIBDIR to the runtime path of programs and libraries\n  -shared           only do dynamic linking of libtool libraries\n  -shrext SUFFIX    override the standard shared library file extension\n  -static           do not do any dynamic linking of uninstalled libtool libraries\n  -static-libtool-libs\n                    do not do any dynamic linking of libtool libraries\n  -version-info CURRENT[:REVISION[:AGE]]\n                    specify library version info [each variable defaults to 0]\n  -weak LIBNAME     declare that the target provides the LIBNAME interface\n  -Wc,FLAG\n  -Xcompiler FLAG   pass linker-specific FLAG directly to the compiler\n  -Wl,FLAG\n  -Xlinker FLAG     pass linker-specific FLAG directly to the linker\n  -XCClinker FLAG   pass link-specific FLAG to the compiler driver (CC)\n\nAll other options (arguments beginning with '-') are ignored.\n\nEvery other argument is treated as a filename.  Files ending in '.la' are\ntreated as uninstalled libtool libraries, other files are standard or library\nobject files.\n\nIf the OUTPUT-FILE ends in '.la', then a libtool library is created,\nonly library objects ('.lo' files) may be specified, and '-rpath' is\nrequired, except when creating a convenience library.\n\nIf OUTPUT-FILE ends in '.a' or '.lib', then a standard library is created\nusing 'ar' and 'ranlib', or on Windows using 'lib'.\n\nIf OUTPUT-FILE ends in '.lo' or '.$objext', then a reloadable object file\nis created, otherwise an executable program is created.\"\n        ;;\n\n      uninstall)\n        $ECHO \\\n\"Usage: $progname [OPTION]... --mode=uninstall RM [RM-OPTION]... FILE...\n\nRemove libraries from an installation directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically '/bin/rm').  RM-OPTIONS are options (such as '-f') to be passed\nto RM.\n\nIf FILE is a libtool library, all the files associated with it are deleted.\nOtherwise, only FILE itself is deleted using RM.\"\n        ;;\n\n      *)\n        func_fatal_help \"invalid operation mode '$opt_mode'\"\n        ;;\n    esac\n\n    echo\n    $ECHO \"Try '$progname --help' for more information about other modes.\"\n}\n\n# Now that we've collected a possible --mode arg, show help if necessary\nif $opt_help; then\n  if test : = \"$opt_help\"; then\n    func_mode_help\n  else\n    {\n      func_help noexit\n      for opt_mode in compile link execute install finish uninstall clean; do\n\tfunc_mode_help\n      done\n    } | $SED -n '1p; 2,$s/^Usage:/  or: /p'\n    {\n      func_help noexit\n      for opt_mode in compile link execute install finish uninstall clean; do\n\techo\n\tfunc_mode_help\n      done\n    } |\n    $SED '1d\n      /^When reporting/,/^Report/{\n\tH\n\td\n      }\n      $x\n      /information about other modes/d\n      /more detailed .*MODE/d\n      s/^Usage:.*--mode=\\([^ ]*\\) .*/Description of \\1 mode:/'\n  fi\n  exit $?\nfi\n\n\n# func_mode_execute arg...\nfunc_mode_execute ()\n{\n    $debug_cmd\n\n    # The first argument is the command name.\n    cmd=$nonopt\n    test -z \"$cmd\" && \\\n      func_fatal_help \"you must specify a COMMAND\"\n\n    # Handle -dlopen flags immediately.\n    for file in $opt_dlopen; do\n      test -f \"$file\" \\\n\t|| func_fatal_help \"'$file' is not a file\"\n\n      dir=\n      case $file in\n      *.la)\n\tfunc_resolve_sysroot \"$file\"\n\tfile=$func_resolve_sysroot_result\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"'$lib' is not a valid libtool archive\"\n\n\t# Read the libtool library.\n\tdlname=\n\tlibrary_names=\n\tfunc_source \"$file\"\n\n\t# Skip this library if it cannot be dlopened.\n\tif test -z \"$dlname\"; then\n\t  # Warn if it was a shared library.\n\t  test -n \"$library_names\" && \\\n\t    func_warning \"'$file' was not linked with '-export-dynamic'\"\n\t  continue\n\tfi\n\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=$func_dirname_result\n\n\tif test -f \"$dir/$objdir/$dlname\"; then\n\t  func_append dir \"/$objdir\"\n\telse\n\t  if test ! -f \"$dir/$dlname\"; then\n\t    func_fatal_error \"cannot find '$dlname' in '$dir' or '$dir/$objdir'\"\n\t  fi\n\tfi\n\t;;\n\n      *.lo)\n\t# Just add the directory containing the .lo file.\n\tfunc_dirname \"$file\" \"\" \".\"\n\tdir=$func_dirname_result\n\t;;\n\n      *)\n\tfunc_warning \"'-dlopen' is ignored for non-libtool libraries and objects\"\n\tcontinue\n\t;;\n      esac\n\n      # Get the absolute pathname.\n      absdir=`cd \"$dir\" && pwd`\n      test -n \"$absdir\" && dir=$absdir\n\n      # Now add the directory to shlibpath_var.\n      if eval \"test -z \\\"\\$$shlibpath_var\\\"\"; then\n\teval \"$shlibpath_var=\\\"\\$dir\\\"\"\n      else\n\teval \"$shlibpath_var=\\\"\\$dir:\\$$shlibpath_var\\\"\"\n      fi\n    done\n\n    # This variable tells wrapper scripts just to set shlibpath_var\n    # rather than running their programs.\n    libtool_execute_magic=$magic\n\n    # Check if any of the arguments is a wrapper script.\n    args=\n    for file\n    do\n      case $file in\n      -* | *.la | *.lo ) ;;\n      *)\n\t# Do a test to see if this is really a libtool program.\n\tif func_ltwrapper_script_p \"$file\"; then\n\t  func_source \"$file\"\n\t  # Transform arg to wrapped name.\n\t  file=$progdir/$program\n\telif func_ltwrapper_executable_p \"$file\"; then\n\t  func_ltwrapper_scriptname \"$file\"\n\t  func_source \"$func_ltwrapper_scriptname_result\"\n\t  # Transform arg to wrapped name.\n\t  file=$progdir/$program\n\tfi\n\t;;\n      esac\n      # Quote arguments (to preserve shell metacharacters).\n      func_append_quoted args \"$file\"\n    done\n\n    if $opt_dry_run; then\n      # Display what would be done.\n      if test -n \"$shlibpath_var\"; then\n\teval \"\\$ECHO \\\"\\$shlibpath_var=\\$$shlibpath_var\\\"\"\n\techo \"export $shlibpath_var\"\n      fi\n      $ECHO \"$cmd$args\"\n      exit $EXIT_SUCCESS\n    else\n      if test -n \"$shlibpath_var\"; then\n\t# Export the shlibpath_var.\n\teval \"export $shlibpath_var\"\n      fi\n\n      # Restore saved environment variables\n      for lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES\n      do\n\teval \"if test \\\"\\${save_$lt_var+set}\\\" = set; then\n                $lt_var=\\$save_$lt_var; export $lt_var\n\t      else\n\t\t$lt_unset $lt_var\n\t      fi\"\n      done\n\n      # Now prepare to actually exec the command.\n      exec_cmd=\\$cmd$args\n    fi\n}\n\ntest execute = \"$opt_mode\" && func_mode_execute ${1+\"$@\"}\n\n\n# func_mode_finish arg...\nfunc_mode_finish ()\n{\n    $debug_cmd\n\n    libs=\n    libdirs=\n    admincmds=\n\n    for opt in \"$nonopt\" ${1+\"$@\"}\n    do\n      if test -d \"$opt\"; then\n\tfunc_append libdirs \" $opt\"\n\n      elif test -f \"$opt\"; then\n\tif func_lalib_unsafe_p \"$opt\"; then\n\t  func_append libs \" $opt\"\n\telse\n\t  func_warning \"'$opt' is not a valid libtool archive\"\n\tfi\n\n      else\n\tfunc_fatal_error \"invalid argument '$opt'\"\n      fi\n    done\n\n    if test -n \"$libs\"; then\n      if test -n \"$lt_sysroot\"; then\n        sysroot_regex=`$ECHO \"$lt_sysroot\" | $SED \"$sed_make_literal_regex\"`\n        sysroot_cmd=\"s/\\([ ']\\)$sysroot_regex/\\1/g;\"\n      else\n        sysroot_cmd=\n      fi\n\n      # Remove sysroot references\n      if $opt_dry_run; then\n        for lib in $libs; do\n          echo \"removing references to $lt_sysroot and '=' prefixes from $lib\"\n        done\n      else\n        tmpdir=`func_mktempdir`\n        for lib in $libs; do\n\t  $SED -e \"$sysroot_cmd s/\\([ ']-[LR]\\)=/\\1/g; s/\\([ ']\\)=/\\1/g\" $lib \\\n\t    > $tmpdir/tmp-la\n\t  mv -f $tmpdir/tmp-la $lib\n\tdone\n        ${RM}r \"$tmpdir\"\n      fi\n    fi\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      for libdir in $libdirs; do\n\tif test -n \"$finish_cmds\"; then\n\t  # Do each command in the finish commands.\n\t  func_execute_cmds \"$finish_cmds\" 'admincmds=\"$admincmds\n'\"$cmd\"'\"'\n\tfi\n\tif test -n \"$finish_eval\"; then\n\t  # Do the single finish_eval.\n\t  eval cmds=\\\"$finish_eval\\\"\n\t  $opt_dry_run || eval \"$cmds\" || func_append admincmds \"\n       $cmds\"\n\tfi\n      done\n    fi\n\n    # Exit here if they wanted silent mode.\n    $opt_quiet && exit $EXIT_SUCCESS\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      echo \"----------------------------------------------------------------------\"\n      echo \"Libraries have been installed in:\"\n      for libdir in $libdirs; do\n\t$ECHO \"   $libdir\"\n      done\n      echo\n      echo \"If you ever happen to want to link against installed libraries\"\n      echo \"in a given directory, LIBDIR, you must either use libtool, and\"\n      echo \"specify the full pathname of the library, or use the '-LLIBDIR'\"\n      echo \"flag during linking and do at least one of the following:\"\n      if test -n \"$shlibpath_var\"; then\n\techo \"   - add LIBDIR to the '$shlibpath_var' environment variable\"\n\techo \"     during execution\"\n      fi\n      if test -n \"$runpath_var\"; then\n\techo \"   - add LIBDIR to the '$runpath_var' environment variable\"\n\techo \"     during linking\"\n      fi\n      if test -n \"$hardcode_libdir_flag_spec\"; then\n\tlibdir=LIBDIR\n\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\n\t$ECHO \"   - use the '$flag' linker flag\"\n      fi\n      if test -n \"$admincmds\"; then\n\t$ECHO \"   - have your system administrator run these commands:$admincmds\"\n      fi\n      if test -f /etc/ld.so.conf; then\n\techo \"   - have your system administrator add LIBDIR to '/etc/ld.so.conf'\"\n      fi\n      echo\n\n      echo \"See any operating system documentation about shared libraries for\"\n      case $host in\n\tsolaris2.[6789]|solaris2.1[0-9])\n\t  echo \"more information, such as the ld(1), crle(1) and ld.so(8) manual\"\n\t  echo \"pages.\"\n\t  ;;\n\t*)\n\t  echo \"more information, such as the ld(1) and ld.so(8) manual pages.\"\n\t  ;;\n      esac\n      echo \"----------------------------------------------------------------------\"\n    fi\n    exit $EXIT_SUCCESS\n}\n\ntest finish = \"$opt_mode\" && func_mode_finish ${1+\"$@\"}\n\n\n# func_mode_install arg...\nfunc_mode_install ()\n{\n    $debug_cmd\n\n    # There may be an optional sh(1) argument at the beginning of\n    # install_prog (especially on Windows NT).\n    if test \"$SHELL\" = \"$nonopt\" || test /bin/sh = \"$nonopt\" ||\n       # Allow the use of GNU shtool's install command.\n       case $nonopt in *shtool*) :;; *) false;; esac\n    then\n      # Aesthetically quote it.\n      func_quote_for_eval \"$nonopt\"\n      install_prog=\"$func_quote_for_eval_result \"\n      arg=$1\n      shift\n    else\n      install_prog=\n      arg=$nonopt\n    fi\n\n    # The real first argument should be the name of the installation program.\n    # Aesthetically quote it.\n    func_quote_for_eval \"$arg\"\n    func_append install_prog \"$func_quote_for_eval_result\"\n    install_shared_prog=$install_prog\n    case \" $install_prog \" in\n      *[\\\\\\ /]cp\\ *) install_cp=: ;;\n      *) install_cp=false ;;\n    esac\n\n    # We need to accept at least all the BSD install flags.\n    dest=\n    files=\n    opts=\n    prev=\n    install_type=\n    isdir=false\n    stripme=\n    no_mode=:\n    for arg\n    do\n      arg2=\n      if test -n \"$dest\"; then\n\tfunc_append files \" $dest\"\n\tdest=$arg\n\tcontinue\n      fi\n\n      case $arg in\n      -d) isdir=: ;;\n      -f)\n\tif $install_cp; then :; else\n\t  prev=$arg\n\tfi\n\t;;\n      -g | -m | -o)\n\tprev=$arg\n\t;;\n      -s)\n\tstripme=\" -s\"\n\tcontinue\n\t;;\n      -*)\n\t;;\n      *)\n\t# If the previous option needed an argument, then skip it.\n\tif test -n \"$prev\"; then\n\t  if test X-m = \"X$prev\" && test -n \"$install_override_mode\"; then\n\t    arg2=$install_override_mode\n\t    no_mode=false\n\t  fi\n\t  prev=\n\telse\n\t  dest=$arg\n\t  continue\n\tfi\n\t;;\n      esac\n\n      # Aesthetically quote the argument.\n      func_quote_for_eval \"$arg\"\n      func_append install_prog \" $func_quote_for_eval_result\"\n      if test -n \"$arg2\"; then\n\tfunc_quote_for_eval \"$arg2\"\n      fi\n      func_append install_shared_prog \" $func_quote_for_eval_result\"\n    done\n\n    test -z \"$install_prog\" && \\\n      func_fatal_help \"you must specify an install program\"\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the '$prev' option requires an argument\"\n\n    if test -n \"$install_override_mode\" && $no_mode; then\n      if $install_cp; then :; else\n\tfunc_quote_for_eval \"$install_override_mode\"\n\tfunc_append install_shared_prog \" -m $func_quote_for_eval_result\"\n      fi\n    fi\n\n    if test -z \"$files\"; then\n      if test -z \"$dest\"; then\n\tfunc_fatal_help \"no file or destination specified\"\n      else\n\tfunc_fatal_help \"you must specify a destination\"\n      fi\n    fi\n\n    # Strip any trailing slash from the destination.\n    func_stripname '' '/' \"$dest\"\n    dest=$func_stripname_result\n\n    # Check to see that the destination is a directory.\n    test -d \"$dest\" && isdir=:\n    if $isdir; then\n      destdir=$dest\n      destname=\n    else\n      func_dirname_and_basename \"$dest\" \"\" \".\"\n      destdir=$func_dirname_result\n      destname=$func_basename_result\n\n      # Not a directory, so check to see that there is only one file specified.\n      set dummy $files; shift\n      test \"$#\" -gt 1 && \\\n\tfunc_fatal_help \"'$dest' is not a directory\"\n    fi\n    case $destdir in\n    [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n    *)\n      for file in $files; do\n\tcase $file in\n\t*.lo) ;;\n\t*)\n\t  func_fatal_help \"'$destdir' must be an absolute directory name\"\n\t  ;;\n\tesac\n      done\n      ;;\n    esac\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=$magic\n\n    staticlibs=\n    future_libdirs=\n    current_libdirs=\n    for file in $files; do\n\n      # Do each installation.\n      case $file in\n      *.$libext)\n\t# Do the static libraries later.\n\tfunc_append staticlibs \" $file\"\n\t;;\n\n      *.la)\n\tfunc_resolve_sysroot \"$file\"\n\tfile=$func_resolve_sysroot_result\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$file\" \\\n\t  || func_fatal_help \"'$file' is not a valid libtool archive\"\n\n\tlibrary_names=\n\told_library=\n\trelink_command=\n\tfunc_source \"$file\"\n\n\t# Add the libdir to current_libdirs if it is the destination.\n\tif test \"X$destdir\" = \"X$libdir\"; then\n\t  case \"$current_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append current_libdirs \" $libdir\" ;;\n\t  esac\n\telse\n\t  # Note the libdir as a future libdir.\n\t  case \"$future_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append future_libdirs \" $libdir\" ;;\n\t  esac\n\tfi\n\n\tfunc_dirname \"$file\" \"/\" \"\"\n\tdir=$func_dirname_result\n\tfunc_append dir \"$objdir\"\n\n\tif test -n \"$relink_command\"; then\n\t  # Determine the prefix the user has applied to our future dir.\n\t  inst_prefix_dir=`$ECHO \"$destdir\" | $SED -e \"s%$libdir\\$%%\"`\n\n\t  # Don't allow the user to place us outside of our expected\n\t  # location b/c this prevents finding dependent libraries that\n\t  # are installed to the same prefix.\n\t  # At present, this check doesn't affect windows .dll's that\n\t  # are installed into $libdir/../bin (currently, that works fine)\n\t  # but it's something to keep an eye on.\n\t  test \"$inst_prefix_dir\" = \"$destdir\" && \\\n\t    func_fatal_error \"error: cannot install '$file' to a directory not ending in $libdir\"\n\n\t  if test -n \"$inst_prefix_dir\"; then\n\t    # Stick the inst_prefix_dir data into the link command.\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%-inst-prefix-dir $inst_prefix_dir%\"`\n\t  else\n\t    relink_command=`$ECHO \"$relink_command\" | $SED \"s%@inst_prefix_dir@%%\"`\n\t  fi\n\n\t  func_warning \"relinking '$file'\"\n\t  func_show_eval \"$relink_command\" \\\n\t    'func_fatal_error \"error: relink '\\''$file'\\'' with the above command before installing it\"'\n\tfi\n\n\t# See the names of the shared library.\n\tset dummy $library_names; shift\n\tif test -n \"$1\"; then\n\t  realname=$1\n\t  shift\n\n\t  srcname=$realname\n\t  test -n \"$relink_command\" && srcname=${realname}T\n\n\t  # Install the shared library and build the symlinks.\n\t  func_show_eval \"$install_shared_prog $dir/$srcname $destdir/$realname\" \\\n\t      'exit $?'\n\t  tstripme=$stripme\n\t  case $host_os in\n\t  cygwin* | mingw* | pw32* | cegcc*)\n\t    case $realname in\n\t    *.dll.a)\n\t      tstripme=\n\t      ;;\n\t    esac\n\t    ;;\n\t  os2*)\n\t    case $realname in\n\t    *_dll.a)\n\t      tstripme=\n\t      ;;\n\t    esac\n\t    ;;\n\t  esac\n\t  if test -n \"$tstripme\" && test -n \"$striplib\"; then\n\t    func_show_eval \"$striplib $destdir/$realname\" 'exit $?'\n\t  fi\n\n\t  if test \"$#\" -gt 0; then\n\t    # Delete the old symlinks, and create new ones.\n\t    # Try 'ln -sf' first, because the 'ln' binary might depend on\n\t    # the symlink we replace!  Solaris /bin/ln does not understand -f,\n\t    # so we also need to try rm && ln -s.\n\t    for linkname\n\t    do\n\t      test \"$linkname\" != \"$realname\" \\\n\t\t&& func_show_eval \"(cd $destdir && { $LN_S -f $realname $linkname || { $RM $linkname && $LN_S $realname $linkname; }; })\"\n\t    done\n\t  fi\n\n\t  # Do each command in the postinstall commands.\n\t  lib=$destdir/$realname\n\t  func_execute_cmds \"$postinstall_cmds\" 'exit $?'\n\tfi\n\n\t# Install the pseudo-library for information purposes.\n\tfunc_basename \"$file\"\n\tname=$func_basename_result\n\tinstname=$dir/${name}i\n\tfunc_show_eval \"$install_prog $instname $destdir/$name\" 'exit $?'\n\n\t# Maybe install the static library, too.\n\ttest -n \"$old_library\" && func_append staticlibs \" $dir/$old_library\"\n\t;;\n\n      *.lo)\n\t# Install (i.e. copy) a libtool object.\n\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=$destdir/$destname\n\telse\n\t  func_basename \"$file\"\n\t  destfile=$func_basename_result\n\t  destfile=$destdir/$destfile\n\tfi\n\n\t# Deduce the name of the destination old-style object file.\n\tcase $destfile in\n\t*.lo)\n\t  func_lo2o \"$destfile\"\n\t  staticdest=$func_lo2o_result\n\t  ;;\n\t*.$objext)\n\t  staticdest=$destfile\n\t  destfile=\n\t  ;;\n\t*)\n\t  func_fatal_help \"cannot copy a libtool object to '$destfile'\"\n\t  ;;\n\tesac\n\n\t# Install the libtool object if requested.\n\ttest -n \"$destfile\" && \\\n\t  func_show_eval \"$install_prog $file $destfile\" 'exit $?'\n\n\t# Install the old object if enabled.\n\tif test yes = \"$build_old_libs\"; then\n\t  # Deduce the name of the old-style object file.\n\t  func_lo2o \"$file\"\n\t  staticobj=$func_lo2o_result\n\t  func_show_eval \"$install_prog \\$staticobj \\$staticdest\" 'exit $?'\n\tfi\n\texit $EXIT_SUCCESS\n\t;;\n\n      *)\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=$destdir/$destname\n\telse\n\t  func_basename \"$file\"\n\t  destfile=$func_basename_result\n\t  destfile=$destdir/$destfile\n\tfi\n\n\t# If the file is missing, and there is a .exe on the end, strip it\n\t# because it is most likely a libtool script we actually want to\n\t# install\n\tstripped_ext=\n\tcase $file in\n\t  *.exe)\n\t    if test ! -f \"$file\"; then\n\t      func_stripname '' '.exe' \"$file\"\n\t      file=$func_stripname_result\n\t      stripped_ext=.exe\n\t    fi\n\t    ;;\n\tesac\n\n\t# Do a test to see if this is really a libtool program.\n\tcase $host in\n\t*cygwin* | *mingw*)\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      wrapper=$func_ltwrapper_scriptname_result\n\t    else\n\t      func_stripname '' '.exe' \"$file\"\n\t      wrapper=$func_stripname_result\n\t    fi\n\t    ;;\n\t*)\n\t    wrapper=$file\n\t    ;;\n\tesac\n\tif func_ltwrapper_script_p \"$wrapper\"; then\n\t  notinst_deplibs=\n\t  relink_command=\n\n\t  func_source \"$wrapper\"\n\n\t  # Check the variables that should have been set.\n\t  test -z \"$generated_by_libtool_version\" && \\\n\t    func_fatal_error \"invalid libtool wrapper script '$wrapper'\"\n\n\t  finalize=:\n\t  for lib in $notinst_deplibs; do\n\t    # Check to see that each library is installed.\n\t    libdir=\n\t    if test -f \"$lib\"; then\n\t      func_source \"$lib\"\n\t    fi\n\t    libfile=$libdir/`$ECHO \"$lib\" | $SED 's%^.*/%%g'`\n\t    if test -n \"$libdir\" && test ! -f \"$libfile\"; then\n\t      func_warning \"'$lib' has not been installed in '$libdir'\"\n\t      finalize=false\n\t    fi\n\t  done\n\n\t  relink_command=\n\t  func_source \"$wrapper\"\n\n\t  outputname=\n\t  if test no = \"$fast_install\" && test -n \"$relink_command\"; then\n\t    $opt_dry_run || {\n\t      if $finalize; then\n\t        tmpdir=`func_mktempdir`\n\t\tfunc_basename \"$file$stripped_ext\"\n\t\tfile=$func_basename_result\n\t        outputname=$tmpdir/$file\n\t        # Replace the output file specification.\n\t        relink_command=`$ECHO \"$relink_command\" | $SED 's%@OUTPUT@%'\"$outputname\"'%g'`\n\n\t        $opt_quiet || {\n\t          func_quote_for_expand \"$relink_command\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t        }\n\t        if eval \"$relink_command\"; then :\n\t          else\n\t\t  func_error \"error: relink '$file' with the above command before installing it\"\n\t\t  $opt_dry_run || ${RM}r \"$tmpdir\"\n\t\t  continue\n\t        fi\n\t        file=$outputname\n\t      else\n\t        func_warning \"cannot relink '$file'\"\n\t      fi\n\t    }\n\t  else\n\t    # Install the binary that we compiled earlier.\n\t    file=`$ECHO \"$file$stripped_ext\" | $SED \"s%\\([^/]*\\)$%$objdir/\\1%\"`\n\t  fi\n\tfi\n\n\t# remove .exe since cygwin /usr/bin/install will append another\n\t# one anyway\n\tcase $install_prog,$host in\n\t*/usr/bin/install*,*cygwin*)\n\t  case $file:$destfile in\n\t  *.exe:*.exe)\n\t    # this is ok\n\t    ;;\n\t  *.exe:*)\n\t    destfile=$destfile.exe\n\t    ;;\n\t  *:*.exe)\n\t    func_stripname '' '.exe' \"$destfile\"\n\t    destfile=$func_stripname_result\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tfunc_show_eval \"$install_prog\\$stripme \\$file \\$destfile\" 'exit $?'\n\t$opt_dry_run || if test -n \"$outputname\"; then\n\t  ${RM}r \"$tmpdir\"\n\tfi\n\t;;\n      esac\n    done\n\n    for file in $staticlibs; do\n      func_basename \"$file\"\n      name=$func_basename_result\n\n      # Set up the ranlib parameters.\n      oldlib=$destdir/$name\n      func_to_tool_file \"$oldlib\" func_convert_file_msys_to_w32\n      tool_oldlib=$func_to_tool_file_result\n\n      func_show_eval \"$install_prog \\$file \\$oldlib\" 'exit $?'\n\n      if test -n \"$stripme\" && test -n \"$old_striplib\"; then\n\tfunc_show_eval \"$old_striplib $tool_oldlib\" 'exit $?'\n      fi\n\n      # Do each command in the postinstall commands.\n      func_execute_cmds \"$old_postinstall_cmds\" 'exit $?'\n    done\n\n    test -n \"$future_libdirs\" && \\\n      func_warning \"remember to run '$progname --finish$future_libdirs'\"\n\n    if test -n \"$current_libdirs\"; then\n      # Maybe just do a dry run.\n      $opt_dry_run && current_libdirs=\" -n$current_libdirs\"\n      exec_cmd='$SHELL \"$progpath\" $preserve_args --finish$current_libdirs'\n    else\n      exit $EXIT_SUCCESS\n    fi\n}\n\ntest install = \"$opt_mode\" && func_mode_install ${1+\"$@\"}\n\n\n# func_generate_dlsyms outputname originator pic_p\n# Extract symbols from dlprefiles and create ${outputname}S.o with\n# a dlpreopen symbol table.\nfunc_generate_dlsyms ()\n{\n    $debug_cmd\n\n    my_outputname=$1\n    my_originator=$2\n    my_pic_p=${3-false}\n    my_prefix=`$ECHO \"$my_originator\" | $SED 's%[^a-zA-Z0-9]%_%g'`\n    my_dlsyms=\n\n    if test -n \"$dlfiles$dlprefiles\" || test no != \"$dlself\"; then\n      if test -n \"$NM\" && test -n \"$global_symbol_pipe\"; then\n\tmy_dlsyms=${my_outputname}S.c\n      else\n\tfunc_error \"not configured to extract global symbols from dlpreopened files\"\n      fi\n    fi\n\n    if test -n \"$my_dlsyms\"; then\n      case $my_dlsyms in\n      \"\") ;;\n      *.c)\n\t# Discover the nlist of each of the dlfiles.\n\tnlist=$output_objdir/$my_outputname.nm\n\n\tfunc_show_eval \"$RM $nlist ${nlist}S ${nlist}T\"\n\n\t# Parse the name list into a source file.\n\tfunc_verbose \"creating $output_objdir/$my_dlsyms\"\n\n\t$opt_dry_run || $ECHO > \"$output_objdir/$my_dlsyms\" \"\\\n/* $my_dlsyms - symbol resolution table for '$my_outputname' dlsym emulation. */\n/* Generated by $PROGRAM (GNU $PACKAGE) $VERSION */\n\n#ifdef __cplusplus\nextern \\\"C\\\" {\n#endif\n\n#if defined __GNUC__ && (((__GNUC__ == 4) && (__GNUC_MINOR__ >= 4)) || (__GNUC__ > 4))\n#pragma GCC diagnostic ignored \\\"-Wstrict-prototypes\\\"\n#endif\n\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined _WIN32 || defined __CYGWIN__ || defined _WIN32_WCE\n/* DATA imports from DLLs on WIN32 can't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT_DLSYM_CONST\n#elif defined __osf__\n/* This system does not cope well with relocations in const data.  */\n# define LT_DLSYM_CONST\n#else\n# define LT_DLSYM_CONST const\n#endif\n\n#define STREQ(s1, s2) (strcmp ((s1), (s2)) == 0)\n\n/* External symbol declarations for the compiler. */\\\n\"\n\n\tif test yes = \"$dlself\"; then\n\t  func_verbose \"generating symbol list for '$output'\"\n\n\t  $opt_dry_run || echo ': @PROGRAM@ ' > \"$nlist\"\n\n\t  # Add our own program objects to the symbol list.\n\t  progfiles=`$ECHO \"$objs$old_deplibs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\t  for progfile in $progfiles; do\n\t    func_to_tool_file \"$progfile\" func_convert_file_msys_to_w32\n\t    func_verbose \"extracting global C symbols from '$func_to_tool_file_result'\"\n\t    $opt_dry_run || eval \"$NM $func_to_tool_file_result | $global_symbol_pipe >> '$nlist'\"\n\t  done\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $opt_dry_run || {\n\t      eval '$EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t    }\n\t  fi\n\n\t  if test -n \"$export_symbols_regex\"; then\n\t    $opt_dry_run || {\n\t      eval '$EGREP -e \"$export_symbols_regex\" \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t    }\n\t  fi\n\n\t  # Prepare the list of exported symbols\n\t  if test -z \"$export_symbols\"; then\n\t    export_symbols=$output_objdir/$outputname.exp\n\t    $opt_dry_run || {\n\t      $RM $export_symbols\n\t      eval \"$SED -n -e '/^: @PROGRAM@ $/d' -e 's/^.* \\(.*\\)$/\\1/p' \"'< \"$nlist\" > \"$export_symbols\"'\n\t      case $host in\n\t      *cygwin* | *mingw* | *cegcc* )\n                eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n                eval 'cat \"$export_symbols\" >> \"$output_objdir/$outputname.def\"'\n\t        ;;\n\t      esac\n\t    }\n\t  else\n\t    $opt_dry_run || {\n\t      eval \"$SED -e 's/\\([].[*^$]\\)/\\\\\\\\\\1/g' -e 's/^/ /' -e 's/$/$/'\"' < \"$export_symbols\" > \"$output_objdir/$outputname.exp\"'\n\t      eval '$GREP -f \"$output_objdir/$outputname.exp\" < \"$nlist\" > \"$nlist\"T'\n\t      eval '$MV \"$nlist\"T \"$nlist\"'\n\t      case $host in\n\t        *cygwin* | *mingw* | *cegcc* )\n\t          eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n\t          eval 'cat \"$nlist\" >> \"$output_objdir/$outputname.def\"'\n\t          ;;\n\t      esac\n\t    }\n\t  fi\n\tfi\n\n\tfor dlprefile in $dlprefiles; do\n\t  func_verbose \"extracting global C symbols from '$dlprefile'\"\n\t  func_basename \"$dlprefile\"\n\t  name=$func_basename_result\n          case $host in\n\t    *cygwin* | *mingw* | *cegcc* )\n\t      # if an import library, we need to obtain dlname\n\t      if func_win32_import_lib_p \"$dlprefile\"; then\n\t        func_tr_sh \"$dlprefile\"\n\t        eval \"curr_lafile=\\$libfile_$func_tr_sh_result\"\n\t        dlprefile_dlbasename=\n\t        if test -n \"$curr_lafile\" && func_lalib_p \"$curr_lafile\"; then\n\t          # Use subshell, to avoid clobbering current variable values\n\t          dlprefile_dlname=`source \"$curr_lafile\" && echo \"$dlname\"`\n\t          if test -n \"$dlprefile_dlname\"; then\n\t            func_basename \"$dlprefile_dlname\"\n\t            dlprefile_dlbasename=$func_basename_result\n\t          else\n\t            # no lafile. user explicitly requested -dlpreopen <import library>.\n\t            $sharedlib_from_linklib_cmd \"$dlprefile\"\n\t            dlprefile_dlbasename=$sharedlib_from_linklib_result\n\t          fi\n\t        fi\n\t        $opt_dry_run || {\n\t          if test -n \"$dlprefile_dlbasename\"; then\n\t            eval '$ECHO \": $dlprefile_dlbasename\" >> \"$nlist\"'\n\t          else\n\t            func_warning \"Could not compute DLL name from $name\"\n\t            eval '$ECHO \": $name \" >> \"$nlist\"'\n\t          fi\n\t          func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t          eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe |\n\t            $SED -e '/I __imp/d' -e 's/I __nm_/D /;s/_nm__//' >> '$nlist'\"\n\t        }\n\t      else # not an import lib\n\t        $opt_dry_run || {\n\t          eval '$ECHO \": $name \" >> \"$nlist\"'\n\t          func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t          eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t        }\n\t      fi\n\t    ;;\n\t    *)\n\t      $opt_dry_run || {\n\t        eval '$ECHO \": $name \" >> \"$nlist\"'\n\t        func_to_tool_file \"$dlprefile\" func_convert_file_msys_to_w32\n\t        eval \"$NM \\\"$func_to_tool_file_result\\\" 2>/dev/null | $global_symbol_pipe >> '$nlist'\"\n\t      }\n\t    ;;\n          esac\n\tdone\n\n\t$opt_dry_run || {\n\t  # Make sure we have at least an empty file.\n\t  test -f \"$nlist\" || : > \"$nlist\"\n\n\t  if test -n \"$exclude_expsyms\"; then\n\t    $EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T\n\t    $MV \"$nlist\"T \"$nlist\"\n\t  fi\n\n\t  # Try sorting and uniquifying the output.\n\t  if $GREP -v \"^: \" < \"$nlist\" |\n\t      if sort -k 3 </dev/null >/dev/null 2>&1; then\n\t\tsort -k 3\n\t      else\n\t\tsort +2\n\t      fi |\n\t      uniq > \"$nlist\"S; then\n\t    :\n\t  else\n\t    $GREP -v \"^: \" < \"$nlist\" > \"$nlist\"S\n\t  fi\n\n\t  if test -f \"$nlist\"S; then\n\t    eval \"$global_symbol_to_cdecl\"' < \"$nlist\"S >> \"$output_objdir/$my_dlsyms\"'\n\t  else\n\t    echo '/* NONE */' >> \"$output_objdir/$my_dlsyms\"\n\t  fi\n\n\t  func_show_eval '$RM \"${nlist}I\"'\n\t  if test -n \"$global_symbol_to_import\"; then\n\t    eval \"$global_symbol_to_import\"' < \"$nlist\"S > \"$nlist\"I'\n\t  fi\n\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n\n/* The mapping between symbol names and symbols.  */\ntypedef struct {\n  const char *name;\n  void *address;\n} lt_dlsymlist;\nextern LT_DLSYM_CONST lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[];\\\n\"\n\n\t  if test -s \"$nlist\"I; then\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\nstatic void lt_syminit(void)\n{\n  LT_DLSYM_CONST lt_dlsymlist *symbol = lt_${my_prefix}_LTX_preloaded_symbols;\n  for (; symbol->name; ++symbol)\n    {\"\n\t    $SED 's/.*/      if (STREQ (symbol->name, \\\"&\\\")) symbol->address = (void *) \\&&;/' < \"$nlist\"I >> \"$output_objdir/$my_dlsyms\"\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\n    }\n}\"\n\t  fi\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\nLT_DLSYM_CONST lt_dlsymlist\nlt_${my_prefix}_LTX_preloaded_symbols[] =\n{ {\\\"$my_originator\\\", (void *) 0},\"\n\n\t  if test -s \"$nlist\"I; then\n\t    echo >> \"$output_objdir/$my_dlsyms\" \"\\\n  {\\\"@INIT@\\\", (void *) &lt_syminit},\"\n\t  fi\n\n\t  case $need_lib_prefix in\n\t  no)\n\t    eval \"$global_symbol_to_c_name_address\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  *)\n\t    eval \"$global_symbol_to_c_name_address_lib_prefix\" < \"$nlist\" >> \"$output_objdir/$my_dlsyms\"\n\t    ;;\n\t  esac\n\t  echo >> \"$output_objdir/$my_dlsyms\" \"\\\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt_${my_prefix}_LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\\\n\"\n\t} # !$opt_dry_run\n\n\tpic_flag_for_symtable=\n\tcase \"$compile_command \" in\n\t*\" -static \"*) ;;\n\t*)\n\t  case $host in\n\t  # compiling the symbol table file with pic_flag works around\n\t  # a FreeBSD bug that causes programs to crash when -lm is\n\t  # linked before any other PIC object.  But we must not use\n\t  # pic_flag when linking with -static.  The problem exists in\n\t  # FreeBSD 2.2.6 and is fixed in FreeBSD 3.1.\n\t  *-*-freebsd2.*|*-*-freebsd3.0*|*-*-freebsdelf3.0*)\n\t    pic_flag_for_symtable=\" $pic_flag -DFREEBSD_WORKAROUND\" ;;\n\t  *-*-hpux*)\n\t    pic_flag_for_symtable=\" $pic_flag\"  ;;\n\t  *)\n\t    $my_pic_p && pic_flag_for_symtable=\" $pic_flag\"\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tsymtab_cflags=\n\tfor arg in $LTCFLAGS; do\n\t  case $arg in\n\t  -pie | -fpie | -fPIE) ;;\n\t  *) func_append symtab_cflags \" $arg\" ;;\n\t  esac\n\tdone\n\n\t# Now compile the dynamic symbol file.\n\tfunc_show_eval '(cd $output_objdir && $LTCC$symtab_cflags -c$no_builtin_flag$pic_flag_for_symtable \"$my_dlsyms\")' 'exit $?'\n\n\t# Clean up the generated files.\n\tfunc_show_eval '$RM \"$output_objdir/$my_dlsyms\" \"$nlist\" \"${nlist}S\" \"${nlist}T\" \"${nlist}I\"'\n\n\t# Transform the symbol file into the correct name.\n\tsymfileobj=$output_objdir/${my_outputname}S.$objext\n\tcase $host in\n\t*cygwin* | *mingw* | *cegcc* )\n\t  if test -f \"$output_objdir/$my_outputname.def\"; then\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%\"`\n\t  else\n\t    compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t    finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  fi\n\t  ;;\n\t*)\n\t  compile_command=`$ECHO \"$compile_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  finalize_command=`$ECHO \"$finalize_command\" | $SED \"s%@SYMFILE@%$symfileobj%\"`\n\t  ;;\n\tesac\n\t;;\n      *)\n\tfunc_fatal_error \"unknown suffix for '$my_dlsyms'\"\n\t;;\n      esac\n    else\n      # We keep going just in case the user didn't refer to\n      # lt_preloaded_symbols.  The linker will fail if global_symbol_pipe\n      # really was required.\n\n      # Nullify the symbol file.\n      compile_command=`$ECHO \"$compile_command\" | $SED \"s% @SYMFILE@%%\"`\n      finalize_command=`$ECHO \"$finalize_command\" | $SED \"s% @SYMFILE@%%\"`\n    fi\n}\n\n# func_cygming_gnu_implib_p ARG\n# This predicate returns with zero status (TRUE) if\n# ARG is a GNU/binutils-style import library. Returns\n# with nonzero status (FALSE) otherwise.\nfunc_cygming_gnu_implib_p ()\n{\n  $debug_cmd\n\n  func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n  func_cygming_gnu_implib_tmp=`$NM \"$func_to_tool_file_result\" | eval \"$global_symbol_pipe\" | $EGREP ' (_head_[A-Za-z0-9_]+_[ad]l*|[A-Za-z0-9_]+_[ad]l*_iname)$'`\n  test -n \"$func_cygming_gnu_implib_tmp\"\n}\n\n# func_cygming_ms_implib_p ARG\n# This predicate returns with zero status (TRUE) if\n# ARG is an MS-style import library. Returns\n# with nonzero status (FALSE) otherwise.\nfunc_cygming_ms_implib_p ()\n{\n  $debug_cmd\n\n  func_to_tool_file \"$1\" func_convert_file_msys_to_w32\n  func_cygming_ms_implib_tmp=`$NM \"$func_to_tool_file_result\" | eval \"$global_symbol_pipe\" | $GREP '_NULL_IMPORT_DESCRIPTOR'`\n  test -n \"$func_cygming_ms_implib_tmp\"\n}\n\n# func_win32_libid arg\n# return the library type of file 'arg'\n#\n# Need a lot of goo to handle *both* DLLs and import libs\n# Has to be a shell function in order to 'eat' the argument\n# that is supplied when $file_magic_command is called.\n# Despite the name, also deal with 64 bit binaries.\nfunc_win32_libid ()\n{\n  $debug_cmd\n\n  win32_libid_type=unknown\n  win32_fileres=`file -L $1 2>/dev/null`\n  case $win32_fileres in\n  *ar\\ archive\\ import\\ library*) # definitely import\n    win32_libid_type=\"x86 archive import\"\n    ;;\n  *ar\\ archive*) # could be an import, or static\n    # Keep the egrep pattern in sync with the one in _LT_CHECK_MAGIC_METHOD.\n    if eval $OBJDUMP -f $1 | $SED -e '10q' 2>/dev/null |\n       $EGREP 'file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)' >/dev/null; then\n      case $nm_interface in\n      \"MS dumpbin\")\n\tif func_cygming_ms_implib_p \"$1\" ||\n\t   func_cygming_gnu_implib_p \"$1\"\n\tthen\n\t  win32_nmres=import\n\telse\n\t  win32_nmres=\n\tfi\n\t;;\n      *)\n\tfunc_to_tool_file \"$1\" func_convert_file_msys_to_w32\n\twin32_nmres=`eval $NM -f posix -A \\\"$func_to_tool_file_result\\\" |\n\t  $SED -n -e '\n\t    1,100{\n\t\t/ I /{\n\t\t    s|.*|import|\n\t\t    p\n\t\t    q\n\t\t}\n\t    }'`\n\t;;\n      esac\n      case $win32_nmres in\n      import*)  win32_libid_type=\"x86 archive import\";;\n      *)        win32_libid_type=\"x86 archive static\";;\n      esac\n    fi\n    ;;\n  *DLL*)\n    win32_libid_type=\"x86 DLL\"\n    ;;\n  *executable*) # but shell scripts are \"executable\" too...\n    case $win32_fileres in\n    *MS\\ Windows\\ PE\\ Intel*)\n      win32_libid_type=\"x86 DLL\"\n      ;;\n    esac\n    ;;\n  esac\n  $ECHO \"$win32_libid_type\"\n}\n\n# func_cygming_dll_for_implib ARG\n#\n# Platform-specific function to extract the\n# name of the DLL associated with the specified\n# import library ARG.\n# Invoked by eval'ing the libtool variable\n#    $sharedlib_from_linklib_cmd\n# Result is available in the variable\n#    $sharedlib_from_linklib_result\nfunc_cygming_dll_for_implib ()\n{\n  $debug_cmd\n\n  sharedlib_from_linklib_result=`$DLLTOOL --identify-strict --identify \"$1\"`\n}\n\n# func_cygming_dll_for_implib_fallback_core SECTION_NAME LIBNAMEs\n#\n# The is the core of a fallback implementation of a\n# platform-specific function to extract the name of the\n# DLL associated with the specified import library LIBNAME.\n#\n# SECTION_NAME is either .idata$6 or .idata$7, depending\n# on the platform and compiler that created the implib.\n#\n# Echos the name of the DLL associated with the\n# specified import library.\nfunc_cygming_dll_for_implib_fallback_core ()\n{\n  $debug_cmd\n\n  match_literal=`$ECHO \"$1\" | $SED \"$sed_make_literal_regex\"`\n  $OBJDUMP -s --section \"$1\" \"$2\" 2>/dev/null |\n    $SED '/^Contents of section '\"$match_literal\"':/{\n      # Place marker at beginning of archive member dllname section\n      s/.*/====MARK====/\n      p\n      d\n    }\n    # These lines can sometimes be longer than 43 characters, but\n    # are always uninteresting\n    /:[\t ]*file format pe[i]\\{,1\\}-/d\n    /^In archive [^:]*:/d\n    # Ensure marker is printed\n    /^====MARK====/p\n    # Remove all lines with less than 43 characters\n    /^.\\{43\\}/!d\n    # From remaining lines, remove first 43 characters\n    s/^.\\{43\\}//' |\n    $SED -n '\n      # Join marker and all lines until next marker into a single line\n      /^====MARK====/ b para\n      H\n      $ b para\n      b\n      :para\n      x\n      s/\\n//g\n      # Remove the marker\n      s/^====MARK====//\n      # Remove trailing dots and whitespace\n      s/[\\. \\t]*$//\n      # Print\n      /./p' |\n    # we now have a list, one entry per line, of the stringified\n    # contents of the appropriate section of all members of the\n    # archive that possess that section. Heuristic: eliminate\n    # all those that have a first or second character that is\n    # a '.' (that is, objdump's representation of an unprintable\n    # character.) This should work for all archives with less than\n    # 0x302f exports -- but will fail for DLLs whose name actually\n    # begins with a literal '.' or a single character followed by\n    # a '.'.\n    #\n    # Of those that remain, print the first one.\n    $SED -e '/^\\./d;/^.\\./d;q'\n}\n\n# func_cygming_dll_for_implib_fallback ARG\n# Platform-specific function to extract the\n# name of the DLL associated with the specified\n# import library ARG.\n#\n# This fallback implementation is for use when $DLLTOOL\n# does not support the --identify-strict option.\n# Invoked by eval'ing the libtool variable\n#    $sharedlib_from_linklib_cmd\n# Result is available in the variable\n#    $sharedlib_from_linklib_result\nfunc_cygming_dll_for_implib_fallback ()\n{\n  $debug_cmd\n\n  if func_cygming_gnu_implib_p \"$1\"; then\n    # binutils import library\n    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$7' \"$1\"`\n  elif func_cygming_ms_implib_p \"$1\"; then\n    # ms-generated import library\n    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$6' \"$1\"`\n  else\n    # unknown\n    sharedlib_from_linklib_result=\n  fi\n}\n\n\n# func_extract_an_archive dir oldlib\nfunc_extract_an_archive ()\n{\n    $debug_cmd\n\n    f_ex_an_ar_dir=$1; shift\n    f_ex_an_ar_oldlib=$1\n    if test yes = \"$lock_old_archive_extraction\"; then\n      lockfile=$f_ex_an_ar_oldlib.lock\n      until $opt_dry_run || ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\tfunc_echo \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    fi\n    func_show_eval \"(cd \\$f_ex_an_ar_dir && $AR x \\\"\\$f_ex_an_ar_oldlib\\\")\" \\\n\t\t   'stat=$?; rm -f \"$lockfile\"; exit $stat'\n    if test yes = \"$lock_old_archive_extraction\"; then\n      $opt_dry_run || rm -f \"$lockfile\"\n    fi\n    if ($AR t \"$f_ex_an_ar_oldlib\" | sort | sort -uc >/dev/null 2>&1); then\n     :\n    else\n      func_fatal_error \"object name conflicts in archive: $f_ex_an_ar_dir/$f_ex_an_ar_oldlib\"\n    fi\n}\n\n\n# func_extract_archives gentop oldlib ...\nfunc_extract_archives ()\n{\n    $debug_cmd\n\n    my_gentop=$1; shift\n    my_oldlibs=${1+\"$@\"}\n    my_oldobjs=\n    my_xlib=\n    my_xabs=\n    my_xdir=\n\n    for my_xlib in $my_oldlibs; do\n      # Extract the objects.\n      case $my_xlib in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) my_xabs=$my_xlib ;;\n\t*) my_xabs=`pwd`\"/$my_xlib\" ;;\n      esac\n      func_basename \"$my_xlib\"\n      my_xlib=$func_basename_result\n      my_xlib_u=$my_xlib\n      while :; do\n        case \" $extracted_archives \" in\n\t*\" $my_xlib_u \"*)\n\t  func_arith $extracted_serial + 1\n\t  extracted_serial=$func_arith_result\n\t  my_xlib_u=lt$extracted_serial-$my_xlib ;;\n\t*) break ;;\n\tesac\n      done\n      extracted_archives=\"$extracted_archives $my_xlib_u\"\n      my_xdir=$my_gentop/$my_xlib_u\n\n      func_mkdir_p \"$my_xdir\"\n\n      case $host in\n      *-darwin*)\n\tfunc_verbose \"Extracting $my_xabs\"\n\t# Do not bother doing anything if just a dry run\n\t$opt_dry_run || {\n\t  darwin_orig_dir=`pwd`\n\t  cd $my_xdir || exit $?\n\t  darwin_archive=$my_xabs\n\t  darwin_curdir=`pwd`\n\t  func_basename \"$darwin_archive\"\n\t  darwin_base_archive=$func_basename_result\n\t  darwin_arches=`$LIPO -info \"$darwin_archive\" 2>/dev/null | $GREP Architectures 2>/dev/null || true`\n\t  if test -n \"$darwin_arches\"; then\n\t    darwin_arches=`$ECHO \"$darwin_arches\" | $SED -e 's/.*are://'`\n\t    darwin_arch=\n\t    func_verbose \"$darwin_base_archive has multiple architectures $darwin_arches\"\n\t    for darwin_arch in  $darwin_arches; do\n\t      func_mkdir_p \"unfat-$$/$darwin_base_archive-$darwin_arch\"\n\t      $LIPO -thin $darwin_arch -output \"unfat-$$/$darwin_base_archive-$darwin_arch/$darwin_base_archive\" \"$darwin_archive\"\n\t      cd \"unfat-$$/$darwin_base_archive-$darwin_arch\"\n\t      func_extract_an_archive \"`pwd`\" \"$darwin_base_archive\"\n\t      cd \"$darwin_curdir\"\n\t      $RM \"unfat-$$/$darwin_base_archive-$darwin_arch/$darwin_base_archive\"\n\t    done # $darwin_arches\n            ## Okay now we've a bunch of thin objects, gotta fatten them up :)\n\t    darwin_filelist=`find unfat-$$ -type f -name \\*.o -print -o -name \\*.lo -print | $SED -e \"$sed_basename\" | sort -u`\n\t    darwin_file=\n\t    darwin_files=\n\t    for darwin_file in $darwin_filelist; do\n\t      darwin_files=`find unfat-$$ -name $darwin_file -print | sort | $NL2SP`\n\t      $LIPO -create -output \"$darwin_file\" $darwin_files\n\t    done # $darwin_filelist\n\t    $RM -rf unfat-$$\n\t    cd \"$darwin_orig_dir\"\n\t  else\n\t    cd $darwin_orig_dir\n\t    func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t  fi # $darwin_arches\n\t} # !$opt_dry_run\n\t;;\n      *)\n        func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t;;\n      esac\n      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | sort | $NL2SP`\n    done\n\n    func_extract_archives_result=$my_oldobjs\n}\n\n\n# func_emit_wrapper [arg=no]\n#\n# Emit a libtool wrapper script on stdout.\n# Don't directly open a file because we may want to\n# incorporate the script contents within a cygwin/mingw\n# wrapper executable.  Must ONLY be called from within\n# func_mode_link because it depends on a number of variables\n# set therein.\n#\n# ARG is the value that the WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\n# variable will take.  If 'yes', then the emitted script\n# will assume that the directory where it is stored is\n# the $objdir directory.  This is a cygwin/mingw-specific\n# behavior.\nfunc_emit_wrapper ()\n{\n\tfunc_emit_wrapper_arg1=${1-no}\n\n\t$ECHO \"\\\n#! $SHELL\n\n# $output - temporary wrapper script for $objdir/$outputname\n# Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n#\n# The $output program cannot be directly executed until all the libtool\n# libraries that it depends on are installed.\n#\n# This wrapper script should never be moved out of the build directory.\n# If it is, it will not operate correctly.\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nsed_quote_subst='$sed_quote_subst'\n\n# Be Bourne compatible\nif test -n \\\"\\${ZSH_VERSION+set}\\\" && (emulate sh) >/dev/null 2>&1; then\n  emulate sh\n  NULLCMD=:\n  # Zsh 3.x and 4.x performs word splitting on \\${1+\\\"\\$@\\\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '\\${1+\\\"\\$@\\\"}'='\\\"\\$@\\\"'\n  setopt NO_GLOB_SUBST\nelse\n  case \\`(set -o) 2>/dev/null\\` in *posix*) set -o posix;; esac\nfi\nBIN_SH=xpg4; export BIN_SH # for Tru64\nDUALCASE=1; export DUALCASE # for MKS sh\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nrelink_command=\\\"$relink_command\\\"\n\n# This environment variable determines our operation mode.\nif test \\\"\\$libtool_install_magic\\\" = \\\"$magic\\\"; then\n  # install mode needs the following variables:\n  generated_by_libtool_version='$macro_version'\n  notinst_deplibs='$notinst_deplibs'\nelse\n  # When we are sourced in execute mode, \\$file and \\$ECHO are already set.\n  if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n    file=\\\"\\$0\\\"\"\n\n    qECHO=`$ECHO \"$ECHO\" | $SED \"$sed_quote_subst\"`\n    $ECHO \"\\\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$1\n_LTECHO_EOF'\n}\n    ECHO=\\\"$qECHO\\\"\n  fi\n\n# Very basic option parsing. These options are (a) specific to\n# the libtool wrapper, (b) are identical between the wrapper\n# /script/ and the wrapper /executable/ that is used only on\n# windows platforms, and (c) all begin with the string \"--lt-\"\n# (application programs are unlikely to have options that match\n# this pattern).\n#\n# There are only two supported options: --lt-debug and\n# --lt-dump-script. There is, deliberately, no --lt-help.\n#\n# The first argument to this parsing function should be the\n# script's $0 value, followed by \"$@\".\nlt_option_debug=\nfunc_parse_lt_options ()\n{\n  lt_script_arg0=\\$0\n  shift\n  for lt_opt\n  do\n    case \\\"\\$lt_opt\\\" in\n    --lt-debug) lt_option_debug=1 ;;\n    --lt-dump-script)\n        lt_dump_D=\\`\\$ECHO \\\"X\\$lt_script_arg0\\\" | $SED -e 's/^X//' -e 's%/[^/]*$%%'\\`\n        test \\\"X\\$lt_dump_D\\\" = \\\"X\\$lt_script_arg0\\\" && lt_dump_D=.\n        lt_dump_F=\\`\\$ECHO \\\"X\\$lt_script_arg0\\\" | $SED -e 's/^X//' -e 's%^.*/%%'\\`\n        cat \\\"\\$lt_dump_D/\\$lt_dump_F\\\"\n        exit 0\n      ;;\n    --lt-*)\n        \\$ECHO \\\"Unrecognized --lt- option: '\\$lt_opt'\\\" 1>&2\n        exit 1\n      ;;\n    esac\n  done\n\n  # Print the debug banner immediately:\n  if test -n \\\"\\$lt_option_debug\\\"; then\n    echo \\\"$outputname:$output:\\$LINENO: libtool wrapper (GNU $PACKAGE) $VERSION\\\" 1>&2\n  fi\n}\n\n# Used when --lt-debug. Prints its arguments to stdout\n# (redirection is the responsibility of the caller)\nfunc_lt_dump_args ()\n{\n  lt_dump_args_N=1;\n  for lt_arg\n  do\n    \\$ECHO \\\"$outputname:$output:\\$LINENO: newargv[\\$lt_dump_args_N]: \\$lt_arg\\\"\n    lt_dump_args_N=\\`expr \\$lt_dump_args_N + 1\\`\n  done\n}\n\n# Core function for launching the target application\nfunc_exec_program_core ()\n{\n\"\n  case $host in\n  # Backslashes separate directories on plain windows\n  *-*-mingw | *-*-os2* | *-cegcc*)\n    $ECHO \"\\\n      if test -n \\\"\\$lt_option_debug\\\"; then\n        \\$ECHO \\\"$outputname:$output:\\$LINENO: newargv[0]: \\$progdir\\\\\\\\\\$program\\\" 1>&2\n        func_lt_dump_args \\${1+\\\"\\$@\\\"} 1>&2\n      fi\n      exec \\\"\\$progdir\\\\\\\\\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n    ;;\n\n  *)\n    $ECHO \"\\\n      if test -n \\\"\\$lt_option_debug\\\"; then\n        \\$ECHO \\\"$outputname:$output:\\$LINENO: newargv[0]: \\$progdir/\\$program\\\" 1>&2\n        func_lt_dump_args \\${1+\\\"\\$@\\\"} 1>&2\n      fi\n      exec \\\"\\$progdir/\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n    ;;\n  esac\n  $ECHO \"\\\n      \\$ECHO \\\"\\$0: cannot exec \\$program \\$*\\\" 1>&2\n      exit 1\n}\n\n# A function to encapsulate launching the target application\n# Strips options in the --lt-* namespace from \\$@ and\n# launches target application with the remaining arguments.\nfunc_exec_program ()\n{\n  case \\\" \\$* \\\" in\n  *\\\\ --lt-*)\n    for lt_wr_arg\n    do\n      case \\$lt_wr_arg in\n      --lt-*) ;;\n      *) set x \\\"\\$@\\\" \\\"\\$lt_wr_arg\\\"; shift;;\n      esac\n      shift\n    done ;;\n  esac\n  func_exec_program_core \\${1+\\\"\\$@\\\"}\n}\n\n  # Parse options\n  func_parse_lt_options \\\"\\$0\\\" \\${1+\\\"\\$@\\\"}\n\n  # Find the directory that this script lives in.\n  thisdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*$%%'\\`\n  test \\\"x\\$thisdir\\\" = \\\"x\\$file\\\" && thisdir=.\n\n  # Follow symbolic links until we get to the real thisdir.\n  file=\\`ls -ld \\\"\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  while test -n \\\"\\$file\\\"; do\n    destdir=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%/[^/]*\\$%%'\\`\n\n    # If there was a directory component, then change thisdir.\n    if test \\\"x\\$destdir\\\" != \\\"x\\$file\\\"; then\n      case \\\"\\$destdir\\\" in\n      [\\\\\\\\/]* | [A-Za-z]:[\\\\\\\\/]*) thisdir=\\\"\\$destdir\\\" ;;\n      *) thisdir=\\\"\\$thisdir/\\$destdir\\\" ;;\n      esac\n    fi\n\n    file=\\`\\$ECHO \\\"\\$file\\\" | $SED 's%^.*/%%'\\`\n    file=\\`ls -ld \\\"\\$thisdir/\\$file\\\" | $SED -n 's/.*-> //p'\\`\n  done\n\n  # Usually 'no', except on cygwin/mingw when embedded into\n  # the cwrapper.\n  WRAPPER_SCRIPT_BELONGS_IN_OBJDIR=$func_emit_wrapper_arg1\n  if test \\\"\\$WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\\\" = \\\"yes\\\"; then\n    # special case for '.'\n    if test \\\"\\$thisdir\\\" = \\\".\\\"; then\n      thisdir=\\`pwd\\`\n    fi\n    # remove .libs from thisdir\n    case \\\"\\$thisdir\\\" in\n    *[\\\\\\\\/]$objdir ) thisdir=\\`\\$ECHO \\\"\\$thisdir\\\" | $SED 's%[\\\\\\\\/][^\\\\\\\\/]*$%%'\\` ;;\n    $objdir )   thisdir=. ;;\n    esac\n  fi\n\n  # Try to get the absolute directory name.\n  absdir=\\`cd \\\"\\$thisdir\\\" && pwd\\`\n  test -n \\\"\\$absdir\\\" && thisdir=\\\"\\$absdir\\\"\n\"\n\n\tif test yes = \"$fast_install\"; then\n\t  $ECHO \"\\\n  program=lt-'$outputname'$exeext\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\n  if test ! -f \\\"\\$progdir/\\$program\\\" ||\n     { file=\\`ls -1dt \\\"\\$progdir/\\$program\\\" \\\"\\$progdir/../\\$program\\\" 2>/dev/null | $SED 1q\\`; \\\\\n       test \\\"X\\$file\\\" != \\\"X\\$progdir/\\$program\\\"; }; then\n\n    file=\\\"\\$\\$-\\$program\\\"\n\n    if test ! -d \\\"\\$progdir\\\"; then\n      $MKDIR \\\"\\$progdir\\\"\n    else\n      $RM \\\"\\$progdir/\\$file\\\"\n    fi\"\n\n\t  $ECHO \"\\\n\n    # relink executable if necessary\n    if test -n \\\"\\$relink_command\\\"; then\n      if relink_command_output=\\`eval \\$relink_command 2>&1\\`; then :\n      else\n\t\\$ECHO \\\"\\$relink_command_output\\\" >&2\n\t$RM \\\"\\$progdir/\\$file\\\"\n\texit 1\n      fi\n    fi\n\n    $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\" 2>/dev/null ||\n    { $RM \\\"\\$progdir/\\$program\\\";\n      $MV \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\"; }\n    $RM \\\"\\$progdir/\\$file\\\"\n  fi\"\n\telse\n\t  $ECHO \"\\\n  program='$outputname'\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\"\n\tfi\n\n\t$ECHO \"\\\n\n  if test -f \\\"\\$progdir/\\$program\\\"; then\"\n\n\t# fixup the dll searchpath if we need to.\n\t#\n\t# Fix the DLL searchpath if we need to.  Do this before prepending\n\t# to shlibpath, because on Windows, both are PATH and uninstalled\n\t# libraries must come first.\n\tif test -n \"$dllsearchpath\"; then\n\t  $ECHO \"\\\n    # Add the dll search path components to the executable PATH\n    PATH=$dllsearchpath:\\$PATH\n\"\n\tfi\n\n\t# Export our shlibpath_var if we have one.\n\tif test yes = \"$shlibpath_overrides_runpath\" && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n\t  $ECHO \"\\\n    # Add our own library path to $shlibpath_var\n    $shlibpath_var=\\\"$temp_rpath\\$$shlibpath_var\\\"\n\n    # Some systems cannot cope with colon-terminated $shlibpath_var\n    # The second colon is a workaround for a bug in BeOS R4 sed\n    $shlibpath_var=\\`\\$ECHO \\\"\\$$shlibpath_var\\\" | $SED 's/::*\\$//'\\`\n\n    export $shlibpath_var\n\"\n\tfi\n\n\t$ECHO \"\\\n    if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n      # Run the actual program with our arguments.\n      func_exec_program \\${1+\\\"\\$@\\\"}\n    fi\n  else\n    # The program doesn't exist.\n    \\$ECHO \\\"\\$0: error: '\\$progdir/\\$program' does not exist\\\" 1>&2\n    \\$ECHO \\\"This script is just a wrapper for \\$program.\\\" 1>&2\n    \\$ECHO \\\"See the $PACKAGE documentation for more information.\\\" 1>&2\n    exit 1\n  fi\nfi\\\n\"\n}\n\n\n# func_emit_cwrapperexe_src\n# emit the source code for a wrapper executable on stdout\n# Must ONLY be called from within func_mode_link because\n# it depends on a number of variable set therein.\nfunc_emit_cwrapperexe_src ()\n{\n\tcat <<EOF\n\n/* $cwrappersource - temporary wrapper executable for $objdir/$outputname\n   Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n\n   The $output program cannot be directly executed until all the libtool\n   libraries that it depends on are installed.\n\n   This wrapper executable should never be moved out of the build directory.\n   If it is, it will not operate correctly.\n*/\nEOF\n\t    cat <<\"EOF\"\n#ifdef _MSC_VER\n# define _CRT_SECURE_NO_DEPRECATE 1\n#endif\n#include <stdio.h>\n#include <stdlib.h>\n#ifdef _MSC_VER\n# include <direct.h>\n# include <process.h>\n# include <io.h>\n#else\n# include <unistd.h>\n# include <stdint.h>\n# ifdef __CYGWIN__\n#  include <io.h>\n# endif\n#endif\n#include <malloc.h>\n#include <stdarg.h>\n#include <assert.h>\n#include <string.h>\n#include <ctype.h>\n#include <errno.h>\n#include <fcntl.h>\n#include <sys/stat.h>\n\n#define STREQ(s1, s2) (strcmp ((s1), (s2)) == 0)\n\n/* declarations of non-ANSI functions */\n#if defined __MINGW32__\n# ifdef __STRICT_ANSI__\nint _putenv (const char *);\n# endif\n#elif defined __CYGWIN__\n# ifdef __STRICT_ANSI__\nchar *realpath (const char *, char *);\nint putenv (char *);\nint setenv (const char *, const char *, int);\n# endif\n/* #elif defined other_platform || defined ... */\n#endif\n\n/* portability defines, excluding path handling macros */\n#if defined _MSC_VER\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n# define S_IXUSR _S_IEXEC\n#elif defined __MINGW32__\n# define setmode _setmode\n# define stat    _stat\n# define chmod   _chmod\n# define getcwd  _getcwd\n# define putenv  _putenv\n#elif defined __CYGWIN__\n# define HAVE_SETENV\n# define FOPEN_WB \"wb\"\n/* #elif defined other platforms ... */\n#endif\n\n#if defined PATH_MAX\n# define LT_PATHMAX PATH_MAX\n#elif defined MAXPATHLEN\n# define LT_PATHMAX MAXPATHLEN\n#else\n# define LT_PATHMAX 1024\n#endif\n\n#ifndef S_IXOTH\n# define S_IXOTH 0\n#endif\n#ifndef S_IXGRP\n# define S_IXGRP 0\n#endif\n\n/* path handling portability macros */\n#ifndef DIR_SEPARATOR\n# define DIR_SEPARATOR '/'\n# define PATH_SEPARATOR ':'\n#endif\n\n#if defined _WIN32 || defined __MSDOS__ || defined __DJGPP__ || \\\n  defined __OS2__\n# define HAVE_DOS_BASED_FILE_SYSTEM\n# define FOPEN_WB \"wb\"\n# ifndef DIR_SEPARATOR_2\n#  define DIR_SEPARATOR_2 '\\\\'\n# endif\n# ifndef PATH_SEPARATOR_2\n#  define PATH_SEPARATOR_2 ';'\n# endif\n#endif\n\n#ifndef DIR_SEPARATOR_2\n# define IS_DIR_SEPARATOR(ch) ((ch) == DIR_SEPARATOR)\n#else /* DIR_SEPARATOR_2 */\n# define IS_DIR_SEPARATOR(ch) \\\n\t(((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))\n#endif /* DIR_SEPARATOR_2 */\n\n#ifndef PATH_SEPARATOR_2\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR)\n#else /* PATH_SEPARATOR_2 */\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR_2)\n#endif /* PATH_SEPARATOR_2 */\n\n#ifndef FOPEN_WB\n# define FOPEN_WB \"w\"\n#endif\n#ifndef _O_BINARY\n# define _O_BINARY 0\n#endif\n\n#define XMALLOC(type, num)      ((type *) xmalloc ((num) * sizeof(type)))\n#define XFREE(stale) do { \\\n  if (stale) { free (stale); stale = 0; } \\\n} while (0)\n\n#if defined LT_DEBUGWRAPPER\nstatic int lt_debug = 1;\n#else\nstatic int lt_debug = 0;\n#endif\n\nconst char *program_name = \"libtool-wrapper\"; /* in case xstrdup fails */\n\nvoid *xmalloc (size_t num);\nchar *xstrdup (const char *string);\nconst char *base_name (const char *name);\nchar *find_executable (const char *wrapper);\nchar *chase_symlinks (const char *pathspec);\nint make_executable (const char *path);\nint check_executable (const char *path);\nchar *strendzap (char *str, const char *pat);\nvoid lt_debugprintf (const char *file, int line, const char *fmt, ...);\nvoid lt_fatal (const char *file, int line, const char *message, ...);\nstatic const char *nonnull (const char *s);\nstatic const char *nonempty (const char *s);\nvoid lt_setenv (const char *name, const char *value);\nchar *lt_extend_str (const char *orig_value, const char *add, int to_end);\nvoid lt_update_exe_path (const char *name, const char *value);\nvoid lt_update_lib_path (const char *name, const char *value);\nchar **prepare_spawn (char **argv);\nvoid lt_dump_script (FILE *f);\nEOF\n\n\t    cat <<EOF\n#if __GNUC__ < 4 || (__GNUC__ == 4 && __GNUC_MINOR__ < 5)\n# define externally_visible volatile\n#else\n# define externally_visible __attribute__((externally_visible)) volatile\n#endif\nexternally_visible const char * MAGIC_EXE = \"$magic_exe\";\nconst char * LIB_PATH_VARNAME = \"$shlibpath_var\";\nEOF\n\n\t    if test yes = \"$shlibpath_overrides_runpath\" && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n              func_to_host_path \"$temp_rpath\"\n\t      cat <<EOF\nconst char * LIB_PATH_VALUE   = \"$func_to_host_path_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * LIB_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test -n \"$dllsearchpath\"; then\n              func_to_host_path \"$dllsearchpath:\"\n\t      cat <<EOF\nconst char * EXE_PATH_VARNAME = \"PATH\";\nconst char * EXE_PATH_VALUE   = \"$func_to_host_path_result\";\nEOF\n\t    else\n\t      cat <<\"EOF\"\nconst char * EXE_PATH_VARNAME = \"\";\nconst char * EXE_PATH_VALUE   = \"\";\nEOF\n\t    fi\n\n\t    if test yes = \"$fast_install\"; then\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"lt-$outputname\"; /* hopefully, no .exe */\nEOF\n\t    else\n\t      cat <<EOF\nconst char * TARGET_PROGRAM_NAME = \"$outputname\"; /* hopefully, no .exe */\nEOF\n\t    fi\n\n\n\t    cat <<\"EOF\"\n\n#define LTWRAPPER_OPTION_PREFIX         \"--lt-\"\n\nstatic const char *ltwrapper_option_prefix = LTWRAPPER_OPTION_PREFIX;\nstatic const char *dumpscript_opt       = LTWRAPPER_OPTION_PREFIX \"dump-script\";\nstatic const char *debug_opt            = LTWRAPPER_OPTION_PREFIX \"debug\";\n\nint\nmain (int argc, char *argv[])\n{\n  char **newargz;\n  int  newargc;\n  char *tmp_pathspec;\n  char *actual_cwrapper_path;\n  char *actual_cwrapper_name;\n  char *target_name;\n  char *lt_argv_zero;\n  int rval = 127;\n\n  int i;\n\n  program_name = (char *) xstrdup (base_name (argv[0]));\n  newargz = XMALLOC (char *, (size_t) argc + 1);\n\n  /* very simple arg parsing; don't want to rely on getopt\n   * also, copy all non cwrapper options to newargz, except\n   * argz[0], which is handled differently\n   */\n  newargc=0;\n  for (i = 1; i < argc; i++)\n    {\n      if (STREQ (argv[i], dumpscript_opt))\n\t{\nEOF\n\t    case $host in\n\t      *mingw* | *cygwin* )\n\t\t# make stdout use \"unix\" line endings\n\t\techo \"          setmode(1,_O_BINARY);\"\n\t\t;;\n\t      esac\n\n\t    cat <<\"EOF\"\n\t  lt_dump_script (stdout);\n\t  return 0;\n\t}\n      if (STREQ (argv[i], debug_opt))\n\t{\n          lt_debug = 1;\n          continue;\n\t}\n      if (STREQ (argv[i], ltwrapper_option_prefix))\n        {\n          /* however, if there is an option in the LTWRAPPER_OPTION_PREFIX\n             namespace, but it is not one of the ones we know about and\n             have already dealt with, above (inluding dump-script), then\n             report an error. Otherwise, targets might begin to believe\n             they are allowed to use options in the LTWRAPPER_OPTION_PREFIX\n             namespace. The first time any user complains about this, we'll\n             need to make LTWRAPPER_OPTION_PREFIX a configure-time option\n             or a configure.ac-settable value.\n           */\n          lt_fatal (__FILE__, __LINE__,\n\t\t    \"unrecognized %s option: '%s'\",\n                    ltwrapper_option_prefix, argv[i]);\n        }\n      /* otherwise ... */\n      newargz[++newargc] = xstrdup (argv[i]);\n    }\n  newargz[++newargc] = NULL;\n\nEOF\n\t    cat <<EOF\n  /* The GNU banner must be the first non-error debug message */\n  lt_debugprintf (__FILE__, __LINE__, \"libtool wrapper (GNU $PACKAGE) $VERSION\\n\");\nEOF\n\t    cat <<\"EOF\"\n  lt_debugprintf (__FILE__, __LINE__, \"(main) argv[0]: %s\\n\", argv[0]);\n  lt_debugprintf (__FILE__, __LINE__, \"(main) program_name: %s\\n\", program_name);\n\n  tmp_pathspec = find_executable (argv[0]);\n  if (tmp_pathspec == NULL)\n    lt_fatal (__FILE__, __LINE__, \"couldn't find %s\", argv[0]);\n  lt_debugprintf (__FILE__, __LINE__,\n                  \"(main) found exe (before symlink chase) at: %s\\n\",\n\t\t  tmp_pathspec);\n\n  actual_cwrapper_path = chase_symlinks (tmp_pathspec);\n  lt_debugprintf (__FILE__, __LINE__,\n                  \"(main) found exe (after symlink chase) at: %s\\n\",\n\t\t  actual_cwrapper_path);\n  XFREE (tmp_pathspec);\n\n  actual_cwrapper_name = xstrdup (base_name (actual_cwrapper_path));\n  strendzap (actual_cwrapper_path, actual_cwrapper_name);\n\n  /* wrapper name transforms */\n  strendzap (actual_cwrapper_name, \".exe\");\n  tmp_pathspec = lt_extend_str (actual_cwrapper_name, \".exe\", 1);\n  XFREE (actual_cwrapper_name);\n  actual_cwrapper_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  /* target_name transforms -- use actual target program name; might have lt- prefix */\n  target_name = xstrdup (base_name (TARGET_PROGRAM_NAME));\n  strendzap (target_name, \".exe\");\n  tmp_pathspec = lt_extend_str (target_name, \".exe\", 1);\n  XFREE (target_name);\n  target_name = tmp_pathspec;\n  tmp_pathspec = 0;\n\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(main) libtool target name: %s\\n\",\n\t\t  target_name);\nEOF\n\n\t    cat <<EOF\n  newargz[0] =\n    XMALLOC (char, (strlen (actual_cwrapper_path) +\n\t\t    strlen (\"$objdir\") + 1 + strlen (actual_cwrapper_name) + 1));\n  strcpy (newargz[0], actual_cwrapper_path);\n  strcat (newargz[0], \"$objdir\");\n  strcat (newargz[0], \"/\");\nEOF\n\n\t    cat <<\"EOF\"\n  /* stop here, and copy so we don't have to do this twice */\n  tmp_pathspec = xstrdup (newargz[0]);\n\n  /* do NOT want the lt- prefix here, so use actual_cwrapper_name */\n  strcat (newargz[0], actual_cwrapper_name);\n\n  /* DO want the lt- prefix here if it exists, so use target_name */\n  lt_argv_zero = lt_extend_str (tmp_pathspec, target_name, 1);\n  XFREE (tmp_pathspec);\n  tmp_pathspec = NULL;\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t    cat <<\"EOF\"\n  {\n    char* p;\n    while ((p = strchr (newargz[0], '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n    while ((p = strchr (lt_argv_zero, '\\\\')) != NULL)\n      {\n\t*p = '/';\n      }\n  }\nEOF\n\t    ;;\n\t    esac\n\n\t    cat <<\"EOF\"\n  XFREE (target_name);\n  XFREE (actual_cwrapper_path);\n  XFREE (actual_cwrapper_name);\n\n  lt_setenv (\"BIN_SH\", \"xpg4\"); /* for Tru64 */\n  lt_setenv (\"DUALCASE\", \"1\");  /* for MSK sh */\n  /* Update the DLL searchpath.  EXE_PATH_VALUE ($dllsearchpath) must\n     be prepended before (that is, appear after) LIB_PATH_VALUE ($temp_rpath)\n     because on Windows, both *_VARNAMEs are PATH but uninstalled\n     libraries must come first. */\n  lt_update_exe_path (EXE_PATH_VARNAME, EXE_PATH_VALUE);\n  lt_update_lib_path (LIB_PATH_VARNAME, LIB_PATH_VALUE);\n\n  lt_debugprintf (__FILE__, __LINE__, \"(main) lt_argv_zero: %s\\n\",\n\t\t  nonnull (lt_argv_zero));\n  for (i = 0; i < newargc; i++)\n    {\n      lt_debugprintf (__FILE__, __LINE__, \"(main) newargz[%d]: %s\\n\",\n\t\t      i, nonnull (newargz[i]));\n    }\n\nEOF\n\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n  /* execv doesn't actually work on mingw as expected on unix */\n  newargz = prepare_spawn (newargz);\n  rval = (int) _spawnv (_P_WAIT, lt_argv_zero, (const char * const *) newargz);\n  if (rval == -1)\n    {\n      /* failed to start process */\n      lt_debugprintf (__FILE__, __LINE__,\n\t\t      \"(main) failed to launch target \\\"%s\\\": %s\\n\",\n\t\t      lt_argv_zero, nonnull (strerror (errno)));\n      return 127;\n    }\n  return rval;\nEOF\n\t\t;;\n\t      *)\n\t\tcat <<\"EOF\"\n  execv (lt_argv_zero, newargz);\n  return rval; /* =127, but avoids unused variable warning */\nEOF\n\t\t;;\n\t    esac\n\n\t    cat <<\"EOF\"\n}\n\nvoid *\nxmalloc (size_t num)\n{\n  void *p = (void *) malloc (num);\n  if (!p)\n    lt_fatal (__FILE__, __LINE__, \"memory exhausted\");\n\n  return p;\n}\n\nchar *\nxstrdup (const char *string)\n{\n  return string ? strcpy ((char *) xmalloc (strlen (string) + 1),\n\t\t\t  string) : NULL;\n}\n\nconst char *\nbase_name (const char *name)\n{\n  const char *base;\n\n#if defined HAVE_DOS_BASED_FILE_SYSTEM\n  /* Skip over the disk name in MSDOS pathnames. */\n  if (isalpha ((unsigned char) name[0]) && name[1] == ':')\n    name += 2;\n#endif\n\n  for (base = name; *name; name++)\n    if (IS_DIR_SEPARATOR (*name))\n      base = name + 1;\n  return base;\n}\n\nint\ncheck_executable (const char *path)\n{\n  struct stat st;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(check_executable): %s\\n\",\n                  nonempty (path));\n  if ((!path) || (!*path))\n    return 0;\n\n  if ((stat (path, &st) >= 0)\n      && (st.st_mode & (S_IXUSR | S_IXGRP | S_IXOTH)))\n    return 1;\n  else\n    return 0;\n}\n\nint\nmake_executable (const char *path)\n{\n  int rval = 0;\n  struct stat st;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(make_executable): %s\\n\",\n                  nonempty (path));\n  if ((!path) || (!*path))\n    return 0;\n\n  if (stat (path, &st) >= 0)\n    {\n      rval = chmod (path, st.st_mode | S_IXOTH | S_IXGRP | S_IXUSR);\n    }\n  return rval;\n}\n\n/* Searches for the full path of the wrapper.  Returns\n   newly allocated full path name if found, NULL otherwise\n   Does not chase symlinks, even on platforms that support them.\n*/\nchar *\nfind_executable (const char *wrapper)\n{\n  int has_slash = 0;\n  const char *p;\n  const char *p_next;\n  /* static buffer for getcwd */\n  char tmp[LT_PATHMAX + 1];\n  size_t tmp_len;\n  char *concat_name;\n\n  lt_debugprintf (__FILE__, __LINE__, \"(find_executable): %s\\n\",\n                  nonempty (wrapper));\n\n  if ((wrapper == NULL) || (*wrapper == '\\0'))\n    return NULL;\n\n  /* Absolute path? */\n#if defined HAVE_DOS_BASED_FILE_SYSTEM\n  if (isalpha ((unsigned char) wrapper[0]) && wrapper[1] == ':')\n    {\n      concat_name = xstrdup (wrapper);\n      if (check_executable (concat_name))\n\treturn concat_name;\n      XFREE (concat_name);\n    }\n  else\n    {\n#endif\n      if (IS_DIR_SEPARATOR (wrapper[0]))\n\t{\n\t  concat_name = xstrdup (wrapper);\n\t  if (check_executable (concat_name))\n\t    return concat_name;\n\t  XFREE (concat_name);\n\t}\n#if defined HAVE_DOS_BASED_FILE_SYSTEM\n    }\n#endif\n\n  for (p = wrapper; *p; p++)\n    if (*p == '/')\n      {\n\thas_slash = 1;\n\tbreak;\n      }\n  if (!has_slash)\n    {\n      /* no slashes; search PATH */\n      const char *path = getenv (\"PATH\");\n      if (path != NULL)\n\t{\n\t  for (p = path; *p; p = p_next)\n\t    {\n\t      const char *q;\n\t      size_t p_len;\n\t      for (q = p; *q; q++)\n\t\tif (IS_PATH_SEPARATOR (*q))\n\t\t  break;\n\t      p_len = (size_t) (q - p);\n\t      p_next = (*q == '\\0' ? q : q + 1);\n\t      if (p_len == 0)\n\t\t{\n\t\t  /* empty path: current directory */\n\t\t  if (getcwd (tmp, LT_PATHMAX) == NULL)\n\t\t    lt_fatal (__FILE__, __LINE__, \"getcwd failed: %s\",\n                              nonnull (strerror (errno)));\n\t\t  tmp_len = strlen (tmp);\n\t\t  concat_name =\n\t\t    XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, tmp, tmp_len);\n\t\t  concat_name[tmp_len] = '/';\n\t\t  strcpy (concat_name + tmp_len + 1, wrapper);\n\t\t}\n\t      else\n\t\t{\n\t\t  concat_name =\n\t\t    XMALLOC (char, p_len + 1 + strlen (wrapper) + 1);\n\t\t  memcpy (concat_name, p, p_len);\n\t\t  concat_name[p_len] = '/';\n\t\t  strcpy (concat_name + p_len + 1, wrapper);\n\t\t}\n\t      if (check_executable (concat_name))\n\t\treturn concat_name;\n\t      XFREE (concat_name);\n\t    }\n\t}\n      /* not found in PATH; assume curdir */\n    }\n  /* Relative path | not found in path: prepend cwd */\n  if (getcwd (tmp, LT_PATHMAX) == NULL)\n    lt_fatal (__FILE__, __LINE__, \"getcwd failed: %s\",\n              nonnull (strerror (errno)));\n  tmp_len = strlen (tmp);\n  concat_name = XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);\n  memcpy (concat_name, tmp, tmp_len);\n  concat_name[tmp_len] = '/';\n  strcpy (concat_name + tmp_len + 1, wrapper);\n\n  if (check_executable (concat_name))\n    return concat_name;\n  XFREE (concat_name);\n  return NULL;\n}\n\nchar *\nchase_symlinks (const char *pathspec)\n{\n#ifndef S_ISLNK\n  return xstrdup (pathspec);\n#else\n  char buf[LT_PATHMAX];\n  struct stat s;\n  char *tmp_pathspec = xstrdup (pathspec);\n  char *p;\n  int has_symlinks = 0;\n  while (strlen (tmp_pathspec) && !has_symlinks)\n    {\n      lt_debugprintf (__FILE__, __LINE__,\n\t\t      \"checking path component for symlinks: %s\\n\",\n\t\t      tmp_pathspec);\n      if (lstat (tmp_pathspec, &s) == 0)\n\t{\n\t  if (S_ISLNK (s.st_mode) != 0)\n\t    {\n\t      has_symlinks = 1;\n\t      break;\n\t    }\n\n\t  /* search backwards for last DIR_SEPARATOR */\n\t  p = tmp_pathspec + strlen (tmp_pathspec) - 1;\n\t  while ((p > tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    p--;\n\t  if ((p == tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))\n\t    {\n\t      /* no more DIR_SEPARATORS left */\n\t      break;\n\t    }\n\t  *p = '\\0';\n\t}\n      else\n\t{\n\t  lt_fatal (__FILE__, __LINE__,\n\t\t    \"error accessing file \\\"%s\\\": %s\",\n\t\t    tmp_pathspec, nonnull (strerror (errno)));\n\t}\n    }\n  XFREE (tmp_pathspec);\n\n  if (!has_symlinks)\n    {\n      return xstrdup (pathspec);\n    }\n\n  tmp_pathspec = realpath (pathspec, buf);\n  if (tmp_pathspec == 0)\n    {\n      lt_fatal (__FILE__, __LINE__,\n\t\t\"could not follow symlinks for %s\", pathspec);\n    }\n  return xstrdup (tmp_pathspec);\n#endif\n}\n\nchar *\nstrendzap (char *str, const char *pat)\n{\n  size_t len, patlen;\n\n  assert (str != NULL);\n  assert (pat != NULL);\n\n  len = strlen (str);\n  patlen = strlen (pat);\n\n  if (patlen <= len)\n    {\n      str += len - patlen;\n      if (STREQ (str, pat))\n\t*str = '\\0';\n    }\n  return str;\n}\n\nvoid\nlt_debugprintf (const char *file, int line, const char *fmt, ...)\n{\n  va_list args;\n  if (lt_debug)\n    {\n      (void) fprintf (stderr, \"%s:%s:%d: \", program_name, file, line);\n      va_start (args, fmt);\n      (void) vfprintf (stderr, fmt, args);\n      va_end (args);\n    }\n}\n\nstatic void\nlt_error_core (int exit_status, const char *file,\n\t       int line, const char *mode,\n\t       const char *message, va_list ap)\n{\n  fprintf (stderr, \"%s:%s:%d: %s: \", program_name, file, line, mode);\n  vfprintf (stderr, message, ap);\n  fprintf (stderr, \".\\n\");\n\n  if (exit_status >= 0)\n    exit (exit_status);\n}\n\nvoid\nlt_fatal (const char *file, int line, const char *message, ...)\n{\n  va_list ap;\n  va_start (ap, message);\n  lt_error_core (EXIT_FAILURE, file, line, \"FATAL\", message, ap);\n  va_end (ap);\n}\n\nstatic const char *\nnonnull (const char *s)\n{\n  return s ? s : \"(null)\";\n}\n\nstatic const char *\nnonempty (const char *s)\n{\n  return (s && !*s) ? \"(empty)\" : nonnull (s);\n}\n\nvoid\nlt_setenv (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_setenv) setting '%s' to '%s'\\n\",\n                  nonnull (name), nonnull (value));\n  {\n#ifdef HAVE_SETENV\n    /* always make a copy, for consistency with !HAVE_SETENV */\n    char *str = xstrdup (value);\n    setenv (name, str, 1);\n#else\n    size_t len = strlen (name) + 1 + strlen (value) + 1;\n    char *str = XMALLOC (char, len);\n    sprintf (str, \"%s=%s\", name, value);\n    if (putenv (str) != EXIT_SUCCESS)\n      {\n        XFREE (str);\n      }\n#endif\n  }\n}\n\nchar *\nlt_extend_str (const char *orig_value, const char *add, int to_end)\n{\n  char *new_value;\n  if (orig_value && *orig_value)\n    {\n      size_t orig_value_len = strlen (orig_value);\n      size_t add_len = strlen (add);\n      new_value = XMALLOC (char, add_len + orig_value_len + 1);\n      if (to_end)\n        {\n          strcpy (new_value, orig_value);\n          strcpy (new_value + orig_value_len, add);\n        }\n      else\n        {\n          strcpy (new_value, add);\n          strcpy (new_value + add_len, orig_value);\n        }\n    }\n  else\n    {\n      new_value = xstrdup (add);\n    }\n  return new_value;\n}\n\nvoid\nlt_update_exe_path (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_update_exe_path) modifying '%s' by prepending '%s'\\n\",\n                  nonnull (name), nonnull (value));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      /* some systems can't cope with a ':'-terminated path #' */\n      size_t len = strlen (new_value);\n      while ((len > 0) && IS_PATH_SEPARATOR (new_value[len-1]))\n        {\n          new_value[--len] = '\\0';\n        }\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nvoid\nlt_update_lib_path (const char *name, const char *value)\n{\n  lt_debugprintf (__FILE__, __LINE__,\n\t\t  \"(lt_update_lib_path) modifying '%s' by prepending '%s'\\n\",\n                  nonnull (name), nonnull (value));\n\n  if (name && *name && value && *value)\n    {\n      char *new_value = lt_extend_str (getenv (name), value, 0);\n      lt_setenv (name, new_value);\n      XFREE (new_value);\n    }\n}\n\nEOF\n\t    case $host_os in\n\t      mingw*)\n\t\tcat <<\"EOF\"\n\n/* Prepares an argument vector before calling spawn().\n   Note that spawn() does not by itself call the command interpreter\n     (getenv (\"COMSPEC\") != NULL ? getenv (\"COMSPEC\") :\n      ({ OSVERSIONINFO v; v.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);\n         GetVersionEx(&v);\n         v.dwPlatformId == VER_PLATFORM_WIN32_NT;\n      }) ? \"cmd.exe\" : \"command.com\").\n   Instead it simply concatenates the arguments, separated by ' ', and calls\n   CreateProcess().  We must quote the arguments since Win32 CreateProcess()\n   interprets characters like ' ', '\\t', '\\\\', '\"' (but not '<' and '>') in a\n   special way:\n   - Space and tab are interpreted as delimiters. They are not treated as\n     delimiters if they are surrounded by double quotes: \"...\".\n   - Unescaped double quotes are removed from the input. Their only effect is\n     that within double quotes, space and tab are treated like normal\n     characters.\n   - Backslashes not followed by double quotes are not special.\n   - But 2*n+1 backslashes followed by a double quote become\n     n backslashes followed by a double quote (n >= 0):\n       \\\" -> \"\n       \\\\\\\" -> \\\"\n       \\\\\\\\\\\" -> \\\\\"\n */\n#define SHELL_SPECIAL_CHARS \"\\\"\\\\ \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\n#define SHELL_SPACE_CHARS \" \\001\\002\\003\\004\\005\\006\\007\\010\\011\\012\\013\\014\\015\\016\\017\\020\\021\\022\\023\\024\\025\\026\\027\\030\\031\\032\\033\\034\\035\\036\\037\"\nchar **\nprepare_spawn (char **argv)\n{\n  size_t argc;\n  char **new_argv;\n  size_t i;\n\n  /* Count number of arguments.  */\n  for (argc = 0; argv[argc] != NULL; argc++)\n    ;\n\n  /* Allocate new argument vector.  */\n  new_argv = XMALLOC (char *, argc + 1);\n\n  /* Put quoted arguments into the new argument vector.  */\n  for (i = 0; i < argc; i++)\n    {\n      const char *string = argv[i];\n\n      if (string[0] == '\\0')\n\tnew_argv[i] = xstrdup (\"\\\"\\\"\");\n      else if (strpbrk (string, SHELL_SPECIAL_CHARS) != NULL)\n\t{\n\t  int quote_around = (strpbrk (string, SHELL_SPACE_CHARS) != NULL);\n\t  size_t length;\n\t  unsigned int backslashes;\n\t  const char *s;\n\t  char *quoted_string;\n\t  char *p;\n\n\t  length = 0;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    length++;\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\tlength += backslashes + 1;\n\t      length++;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    length += backslashes + 1;\n\n\t  quoted_string = XMALLOC (char, length + 1);\n\n\t  p = quoted_string;\n\t  backslashes = 0;\n\t  if (quote_around)\n\t    *p++ = '\"';\n\t  for (s = string; *s != '\\0'; s++)\n\t    {\n\t      char c = *s;\n\t      if (c == '\"')\n\t\t{\n\t\t  unsigned int j;\n\t\t  for (j = backslashes + 1; j > 0; j--)\n\t\t    *p++ = '\\\\';\n\t\t}\n\t      *p++ = c;\n\t      if (c == '\\\\')\n\t\tbackslashes++;\n\t      else\n\t\tbackslashes = 0;\n\t    }\n\t  if (quote_around)\n\t    {\n\t      unsigned int j;\n\t      for (j = backslashes; j > 0; j--)\n\t\t*p++ = '\\\\';\n\t      *p++ = '\"';\n\t    }\n\t  *p = '\\0';\n\n\t  new_argv[i] = quoted_string;\n\t}\n      else\n\tnew_argv[i] = (char *) string;\n    }\n  new_argv[argc] = NULL;\n\n  return new_argv;\n}\nEOF\n\t\t;;\n\t    esac\n\n            cat <<\"EOF\"\nvoid lt_dump_script (FILE* f)\n{\nEOF\n\t    func_emit_wrapper yes |\n\t      $SED -n -e '\ns/^\\(.\\{79\\}\\)\\(..*\\)/\\1\\\n\\2/\nh\ns/\\([\\\\\"]\\)/\\\\\\1/g\ns/$/\\\\n/\ns/\\([^\\n]*\\).*/  fputs (\"\\1\", f);/p\ng\nD'\n            cat <<\"EOF\"\n}\nEOF\n}\n# end: func_emit_cwrapperexe_src\n\n# func_win32_import_lib_p ARG\n# True if ARG is an import lib, as indicated by $file_magic_cmd\nfunc_win32_import_lib_p ()\n{\n    $debug_cmd\n\n    case `eval $file_magic_cmd \\\"\\$1\\\" 2>/dev/null | $SED -e 10q` in\n    *import*) : ;;\n    *) false ;;\n    esac\n}\n\n# func_suncc_cstd_abi\n# !!ONLY CALL THIS FOR SUN CC AFTER $compile_command IS FULLY EXPANDED!!\n# Several compiler flags select an ABI that is incompatible with the\n# Cstd library. Avoid specifying it if any are in CXXFLAGS.\nfunc_suncc_cstd_abi ()\n{\n    $debug_cmd\n\n    case \" $compile_command \" in\n    *\" -compat=g \"*|*\\ -std=c++[0-9][0-9]\\ *|*\" -library=stdcxx4 \"*|*\" -library=stlport4 \"*)\n      suncc_use_cstd_abi=no\n      ;;\n    *)\n      suncc_use_cstd_abi=yes\n      ;;\n    esac\n}\n\n# func_mode_link arg...\nfunc_mode_link ()\n{\n    $debug_cmd\n\n    case $host in\n    *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n      # It is impossible to link a dll without this setting, and\n      # we shouldn't force the makefile maintainer to figure out\n      # what system we are compiling for in order to pass an extra\n      # flag for every libtool invocation.\n      # allow_undefined=no\n\n      # FIXME: Unfortunately, there are problems with the above when trying\n      # to make a dll that has undefined symbols, in which case not\n      # even a static library is built.  For now, we need to specify\n      # -no-undefined on the libtool link line when we can be certain\n      # that all symbols are satisfied, otherwise we get a static library.\n      allow_undefined=yes\n      ;;\n    *)\n      allow_undefined=yes\n      ;;\n    esac\n    libtool_args=$nonopt\n    base_compile=\"$nonopt $@\"\n    compile_command=$nonopt\n    finalize_command=$nonopt\n\n    compile_rpath=\n    finalize_rpath=\n    compile_shlibpath=\n    finalize_shlibpath=\n    convenience=\n    old_convenience=\n    deplibs=\n    old_deplibs=\n    compiler_flags=\n    linker_flags=\n    dllsearchpath=\n    lib_search_path=`pwd`\n    inst_prefix_dir=\n    new_inherited_linker_flags=\n\n    avoid_version=no\n    bindir=\n    dlfiles=\n    dlprefiles=\n    dlself=no\n    export_dynamic=no\n    export_symbols=\n    export_symbols_regex=\n    generated=\n    libobjs=\n    ltlibs=\n    module=no\n    no_install=no\n    objs=\n    os2dllname=\n    non_pic_objects=\n    precious_files_regex=\n    prefer_static_libs=no\n    preload=false\n    prev=\n    prevarg=\n    release=\n    rpath=\n    xrpath=\n    perm_rpath=\n    temp_rpath=\n    thread_safe=no\n    vinfo=\n    vinfo_number=no\n    weak_libs=\n    single_module=$wl-single_module\n    func_infer_tag $base_compile\n\n    # We need to know -static, to get the right output filenames.\n    for arg\n    do\n      case $arg in\n      -shared)\n\ttest yes != \"$build_libtool_libs\" \\\n\t  && func_fatal_configuration \"cannot build a shared library\"\n\tbuild_old_libs=no\n\tbreak\n\t;;\n      -all-static | -static | -static-libtool-libs)\n\tcase $arg in\n\t-all-static)\n\t  if test yes = \"$build_libtool_libs\" && test -z \"$link_static_flag\"; then\n\t    func_warning \"complete static linking is impossible in this configuration\"\n\t  fi\n\t  if test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\t-static)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=built\n\t  ;;\n\t-static-libtool-libs)\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\t  ;;\n\tesac\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tbreak\n\t;;\n      esac\n    done\n\n    # See if our shared archives depend on static archives.\n    test -n \"$old_archive_from_new_cmds\" && build_old_libs=yes\n\n    # Go through the arguments, transforming them on the way.\n    while test \"$#\" -gt 0; do\n      arg=$1\n      shift\n      func_quote_for_eval \"$arg\"\n      qarg=$func_quote_for_eval_unquoted_result\n      func_append libtool_args \" $func_quote_for_eval_result\"\n\n      # If the previous option needs an argument, assign it.\n      if test -n \"$prev\"; then\n\tcase $prev in\n\toutput)\n\t  func_append compile_command \" @OUTPUT@\"\n\t  func_append finalize_command \" @OUTPUT@\"\n\t  ;;\n\tesac\n\n\tcase $prev in\n\tbindir)\n\t  bindir=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tdlfiles|dlprefiles)\n\t  $preload || {\n\t    # Add the symbol object into the linking commands.\n\t    func_append compile_command \" @SYMFILE@\"\n\t    func_append finalize_command \" @SYMFILE@\"\n\t    preload=:\n\t  }\n\t  case $arg in\n\t  *.la | *.lo) ;;  # We handle these cases below.\n\t  force)\n\t    if test no = \"$dlself\"; then\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  self)\n\t    if test dlprefiles = \"$prev\"; then\n\t      dlself=yes\n\t    elif test dlfiles = \"$prev\" && test yes != \"$dlopen_self\"; then\n\t      dlself=yes\n\t    else\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  *)\n\t    if test dlfiles = \"$prev\"; then\n\t      func_append dlfiles \" $arg\"\n\t    else\n\t      func_append dlprefiles \" $arg\"\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  esac\n\t  ;;\n\texpsyms)\n\t  export_symbols=$arg\n\t  test -f \"$arg\" \\\n\t    || func_fatal_error \"symbol file '$arg' does not exist\"\n\t  prev=\n\t  continue\n\t  ;;\n\texpsyms_regex)\n\t  export_symbols_regex=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tframework)\n\t  case $host in\n\t    *-*-darwin*)\n\t      case \"$deplibs \" in\n\t\t*\" $qarg.ltframework \"*) ;;\n\t\t*) func_append deplibs \" $qarg.ltframework\" # this is fixed later\n\t\t   ;;\n\t      esac\n\t      ;;\n\t  esac\n\t  prev=\n\t  continue\n\t  ;;\n\tinst_prefix)\n\t  inst_prefix_dir=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tmllvm)\n\t  # Clang does not use LLVM to link, so we can simply discard any\n\t  # '-mllvm $arg' options when doing the link step.\n\t  prev=\n\t  continue\n\t  ;;\n\tobjectlist)\n\t  if test -f \"$arg\"; then\n\t    save_arg=$arg\n\t    moreargs=\n\t    for fil in `cat \"$save_arg\"`\n\t    do\n#\t      func_append moreargs \" $fil\"\n\t      arg=$fil\n\t      # A libtool-controlled object.\n\n\t      # Check to see that this really is a libtool object.\n\t      if func_lalib_unsafe_p \"$arg\"; then\n\t\tpic_object=\n\t\tnon_pic_object=\n\n\t\t# Read the .lo file\n\t\tfunc_source \"$arg\"\n\n\t\tif test -z \"$pic_object\" ||\n\t\t   test -z \"$non_pic_object\" ||\n\t\t   test none = \"$pic_object\" &&\n\t\t   test none = \"$non_pic_object\"; then\n\t\t  func_fatal_error \"cannot find name of object for '$arg'\"\n\t\tfi\n\n\t\t# Extract subdirectory from the argument.\n\t\tfunc_dirname \"$arg\" \"/\" \"\"\n\t\txdir=$func_dirname_result\n\n\t\tif test none != \"$pic_object\"; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  pic_object=$xdir$pic_object\n\n\t\t  if test dlfiles = \"$prev\"; then\n\t\t    if test yes = \"$build_libtool_libs\" && test yes = \"$dlopen_support\"; then\n\t\t      func_append dlfiles \" $pic_object\"\n\t\t      prev=\n\t\t      continue\n\t\t    else\n\t\t      # If libtool objects are unsupported, then we need to preload.\n\t\t      prev=dlprefiles\n\t\t    fi\n\t\t  fi\n\n\t\t  # CHECK ME:  I think I busted this.  -Ossama\n\t\t  if test dlprefiles = \"$prev\"; then\n\t\t    # Preload the old-style object.\n\t\t    func_append dlprefiles \" $pic_object\"\n\t\t    prev=\n\t\t  fi\n\n\t\t  # A PIC object.\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  arg=$pic_object\n\t\tfi\n\n\t\t# Non-PIC object.\n\t\tif test none != \"$non_pic_object\"; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  non_pic_object=$xdir$non_pic_object\n\n\t\t  # A standard non-PIC object\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\t  if test -z \"$pic_object\" || test none = \"$pic_object\"; then\n\t\t    arg=$non_pic_object\n\t\t  fi\n\t\telse\n\t\t  # If the PIC object exists, use it instead.\n\t\t  # $xdir was prepended to $pic_object above.\n\t\t  non_pic_object=$pic_object\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t\tfi\n\t      else\n\t\t# Only an error if not doing a dry-run.\n\t\tif $opt_dry_run; then\n\t\t  # Extract subdirectory from the argument.\n\t\t  func_dirname \"$arg\" \"/\" \"\"\n\t\t  xdir=$func_dirname_result\n\n\t\t  func_lo2o \"$arg\"\n\t\t  pic_object=$xdir$objdir/$func_lo2o_result\n\t\t  non_pic_object=$xdir$func_lo2o_result\n\t\t  func_append libobjs \" $pic_object\"\n\t\t  func_append non_pic_objects \" $non_pic_object\"\n\t        else\n\t\t  func_fatal_error \"'$arg' is not a valid libtool object\"\n\t\tfi\n\t      fi\n\t    done\n\t  else\n\t    func_fatal_error \"link input file '$arg' does not exist\"\n\t  fi\n\t  arg=$save_arg\n\t  prev=\n\t  continue\n\t  ;;\n\tos2dllname)\n\t  os2dllname=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tprecious_regex)\n\t  precious_files_regex=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\trelease)\n\t  release=-$arg\n\t  prev=\n\t  continue\n\t  ;;\n\trpath | xrpath)\n\t  # We need an absolute path.\n\t  case $arg in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t  *)\n\t    func_fatal_error \"only absolute run-paths are allowed\"\n\t    ;;\n\t  esac\n\t  if test rpath = \"$prev\"; then\n\t    case \"$rpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) func_append rpath \" $arg\" ;;\n\t    esac\n\t  else\n\t    case \"$xrpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) func_append xrpath \" $arg\" ;;\n\t    esac\n\t  fi\n\t  prev=\n\t  continue\n\t  ;;\n\tshrext)\n\t  shrext_cmds=$arg\n\t  prev=\n\t  continue\n\t  ;;\n\tweak)\n\t  func_append weak_libs \" $arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\txcclinker)\n\t  func_append linker_flags \" $qarg\"\n\t  func_append compiler_flags \" $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txcompiler)\n\t  func_append compiler_flags \" $qarg\"\n\t  prev=\n\t  func_append compile_command \" $qarg\"\n\t  func_append finalize_command \" $qarg\"\n\t  continue\n\t  ;;\n\txlinker)\n\t  func_append linker_flags \" $qarg\"\n\t  func_append compiler_flags \" $wl$qarg\"\n\t  prev=\n\t  func_append compile_command \" $wl$qarg\"\n\t  func_append finalize_command \" $wl$qarg\"\n\t  continue\n\t  ;;\n\t*)\n\t  eval \"$prev=\\\"\\$arg\\\"\"\n\t  prev=\n\t  continue\n\t  ;;\n\tesac\n      fi # test -n \"$prev\"\n\n      prevarg=$arg\n\n      case $arg in\n      -all-static)\n\tif test -n \"$link_static_flag\"; then\n\t  # See comment for -static flag below, for more details.\n\t  func_append compile_command \" $link_static_flag\"\n\t  func_append finalize_command \" $link_static_flag\"\n\tfi\n\tcontinue\n\t;;\n\n      -allow-undefined)\n\t# FIXME: remove this flag sometime in the future.\n\tfunc_fatal_error \"'-allow-undefined' must not be used because it is the default\"\n\t;;\n\n      -avoid-version)\n\tavoid_version=yes\n\tcontinue\n\t;;\n\n      -bindir)\n\tprev=bindir\n\tcontinue\n\t;;\n\n      -dlopen)\n\tprev=dlfiles\n\tcontinue\n\t;;\n\n      -dlpreopen)\n\tprev=dlprefiles\n\tcontinue\n\t;;\n\n      -export-dynamic)\n\texport_dynamic=yes\n\tcontinue\n\t;;\n\n      -export-symbols | -export-symbols-regex)\n\tif test -n \"$export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t  func_fatal_error \"more than one -exported-symbols argument is not allowed\"\n\tfi\n\tif test X-export-symbols = \"X$arg\"; then\n\t  prev=expsyms\n\telse\n\t  prev=expsyms_regex\n\tfi\n\tcontinue\n\t;;\n\n      -framework)\n\tprev=framework\n\tcontinue\n\t;;\n\n      -inst-prefix-dir)\n\tprev=inst_prefix\n\tcontinue\n\t;;\n\n      # The native IRIX linker understands -LANG:*, -LIST:* and -LNO:*\n      # so, if we see these flags be careful not to treat them like -L\n      -L[A-Z][A-Z]*:*)\n\tcase $with_gcc/$host in\n\tno/*-*-irix* | /*-*-irix*)\n\t  func_append compile_command \" $arg\"\n\t  func_append finalize_command \" $arg\"\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -L*)\n\tfunc_stripname \"-L\" '' \"$arg\"\n\tif test -z \"$func_stripname_result\"; then\n\t  if test \"$#\" -gt 0; then\n\t    func_fatal_error \"require no space between '-L' and '$1'\"\n\t  else\n\t    func_fatal_error \"need path for '-L' option\"\n\t  fi\n\tfi\n\tfunc_resolve_sysroot \"$func_stripname_result\"\n\tdir=$func_resolve_sysroot_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  absdir=`cd \"$dir\" && pwd`\n\t  test -z \"$absdir\" && \\\n\t    func_fatal_error \"cannot determine absolute directory name of '$dir'\"\n\t  dir=$absdir\n\t  ;;\n\tesac\n\tcase \"$deplibs \" in\n\t*\" -L$dir \"* | *\" $arg \"*)\n\t  # Will only happen for absolute or sysroot arguments\n\t  ;;\n\t*)\n\t  # Preserve sysroot, but never include relative directories\n\t  case $dir in\n\t    [\\\\/]* | [A-Za-z]:[\\\\/]* | =*) func_append deplibs \" $arg\" ;;\n\t    *) func_append deplibs \" -L$dir\" ;;\n\t  esac\n\t  func_append lib_search_path \" $dir\"\n\t  ;;\n\tesac\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`$ECHO \"$dir\" | $SED 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$dir:\"*) ;;\n\t  ::) dllsearchpath=$dir;;\n\t  *) func_append dllsearchpath \":$dir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) func_append dllsearchpath \":$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -l*)\n\tif test X-lc = \"X$arg\" || test X-lm = \"X$arg\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # These systems don't actually have a C or math library (as such)\n\t    continue\n\t    ;;\n\t  *-*-os2*)\n\t    # These systems don't actually have a C library (as such)\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly* | *-*-bitrig*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C and math libraries are in the System framework\n\t    func_append deplibs \" System.ltframework\"\n\t    continue\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    test X-lc = \"X$arg\" && continue\n\t    ;;\n\t  esac\n\telif test X-lc_r = \"X$arg\"; then\n\t case $host in\n\t *-*-openbsd* | *-*-freebsd* | *-*-dragonfly* | *-*-bitrig*)\n\t   # Do not include libc_r directly, use -pthread flag.\n\t   continue\n\t   ;;\n\t esac\n\tfi\n\tfunc_append deplibs \" $arg\"\n\tcontinue\n\t;;\n\n      -mllvm)\n\tprev=mllvm\n\tcontinue\n\t;;\n\n      -module)\n\tmodule=yes\n\tcontinue\n\t;;\n\n      # Tru64 UNIX uses -model [arg] to determine the layout of C++\n      # classes, name mangling, and exception handling.\n      # Darwin uses the -arch flag to determine output architecture.\n      -model|-arch|-isysroot|--sysroot)\n\tfunc_append compiler_flags \" $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \\\n      |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)\n\tfunc_append compiler_flags \" $arg\"\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n\tcase \"$new_inherited_linker_flags \" in\n\t    *\" $arg \"*) ;;\n\t    * ) func_append new_inherited_linker_flags \" $arg\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -multi_module)\n\tsingle_module=$wl-multi_module\n\tcontinue\n\t;;\n\n      -no-fast-install)\n\tfast_install=no\n\tcontinue\n\t;;\n\n      -no-install)\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-darwin* | *-cegcc*)\n\t  # The PATH hackery in wrapper scripts is required on Windows\n\t  # and Darwin in order for the loader to find any dlls it needs.\n\t  func_warning \"'-no-install' is ignored for $host\"\n\t  func_warning \"assuming '-no-fast-install' instead\"\n\t  fast_install=no\n\t  ;;\n\t*) no_install=yes ;;\n\tesac\n\tcontinue\n\t;;\n\n      -no-undefined)\n\tallow_undefined=no\n\tcontinue\n\t;;\n\n      -objectlist)\n\tprev=objectlist\n\tcontinue\n\t;;\n\n      -os2dllname)\n\tprev=os2dllname\n\tcontinue\n\t;;\n\n      -o) prev=output ;;\n\n      -precious-files-regex)\n\tprev=precious_regex\n\tcontinue\n\t;;\n\n      -release)\n\tprev=release\n\tcontinue\n\t;;\n\n      -rpath)\n\tprev=rpath\n\tcontinue\n\t;;\n\n      -R)\n\tprev=xrpath\n\tcontinue\n\t;;\n\n      -R*)\n\tfunc_stripname '-R' '' \"$arg\"\n\tdir=$func_stripname_result\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t=*)\n\t  func_stripname '=' '' \"$dir\"\n\t  dir=$lt_sysroot$func_stripname_result\n\t  ;;\n\t*)\n\t  func_fatal_error \"only absolute run-paths are allowed\"\n\t  ;;\n\tesac\n\tcase \"$xrpath \" in\n\t*\" $dir \"*) ;;\n\t*) func_append xrpath \" $dir\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -shared)\n\t# The effects of -shared are defined in a previous loop.\n\tcontinue\n\t;;\n\n      -shrext)\n\tprev=shrext\n\tcontinue\n\t;;\n\n      -static | -static-libtool-libs)\n\t# The effects of -static are defined in a previous loop.\n\t# We used to do the same as -all-static on platforms that\n\t# didn't have a PIC flag, but the assumption that the effects\n\t# would be equivalent was wrong.  It would break on at least\n\t# Digital Unix and AIX.\n\tcontinue\n\t;;\n\n      -thread-safe)\n\tthread_safe=yes\n\tcontinue\n\t;;\n\n      -version-info)\n\tprev=vinfo\n\tcontinue\n\t;;\n\n      -version-number)\n\tprev=vinfo\n\tvinfo_number=yes\n\tcontinue\n\t;;\n\n      -weak)\n        prev=weak\n\tcontinue\n\t;;\n\n      -Wc,*)\n\tfunc_stripname '-Wc,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=$IFS; IFS=,\n\tfor flag in $args; do\n\t  IFS=$save_ifs\n          func_quote_for_eval \"$flag\"\n\t  func_append arg \" $func_quote_for_eval_result\"\n\t  func_append compiler_flags \" $func_quote_for_eval_result\"\n\tdone\n\tIFS=$save_ifs\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Wl,*)\n\tfunc_stripname '-Wl,' '' \"$arg\"\n\targs=$func_stripname_result\n\targ=\n\tsave_ifs=$IFS; IFS=,\n\tfor flag in $args; do\n\t  IFS=$save_ifs\n          func_quote_for_eval \"$flag\"\n\t  func_append arg \" $wl$func_quote_for_eval_result\"\n\t  func_append compiler_flags \" $wl$func_quote_for_eval_result\"\n\t  func_append linker_flags \" $func_quote_for_eval_result\"\n\tdone\n\tIFS=$save_ifs\n\tfunc_stripname ' ' '' \"$arg\"\n\targ=$func_stripname_result\n\t;;\n\n      -Xcompiler)\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -Xlinker)\n\tprev=xlinker\n\tcontinue\n\t;;\n\n      -XCClinker)\n\tprev=xcclinker\n\tcontinue\n\t;;\n\n      # -msg_* for osf cc\n      -msg_*)\n\tfunc_quote_for_eval \"$arg\"\n\targ=$func_quote_for_eval_result\n\t;;\n\n      # Flags to be passed through unchanged, with rationale:\n      # -64, -mips[0-9]      enable 64-bit mode for the SGI compiler\n      # -r[0-9][0-9]*        specify processor for the SGI compiler\n      # -xarch=*, -xtarget=* enable 64-bit mode for the Sun compiler\n      # +DA*, +DD*           enable 64-bit mode for the HP compiler\n      # -q*                  compiler args for the IBM compiler\n      # -m*, -t[45]*, -txscale* architecture-specific flags for GCC\n      # -F/path              path to uninstalled frameworks, gcc on darwin\n      # -p, -pg, --coverage, -fprofile-*  profiling flags for GCC\n      # -fstack-protector*   stack protector flags for GCC\n      # @file                GCC response files\n      # -tp=*                Portland pgcc target processor selection\n      # --sysroot=*          for sysroot support\n      # -O*, -g*, -flto*, -fwhopr*, -fuse-linker-plugin GCC link-time optimization\n      # -stdlib=*            select c++ std lib with clang\n      -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*| \\\n      -t[45]*|-txscale*|-p|-pg|--coverage|-fprofile-*|-F*|@*|-tp=*|--sysroot=*| \\\n      -O*|-g*|-flto*|-fwhopr*|-fuse-linker-plugin|-fstack-protector*|-stdlib=*)\n        func_quote_for_eval \"$arg\"\n\targ=$func_quote_for_eval_result\n        func_append compile_command \" $arg\"\n        func_append finalize_command \" $arg\"\n        func_append compiler_flags \" $arg\"\n        continue\n        ;;\n\n      -Z*)\n        if test os2 = \"`expr $host : '.*\\(os2\\)'`\"; then\n          # OS/2 uses -Zxxx to specify OS/2-specific options\n\t  compiler_flags=\"$compiler_flags $arg\"\n\t  func_append compile_command \" $arg\"\n\t  func_append finalize_command \" $arg\"\n\t  case $arg in\n\t  -Zlinker | -Zstack)\n\t    prev=xcompiler\n\t    ;;\n\t  esac\n\t  continue\n        else\n\t  # Otherwise treat like 'Some other compiler flag' below\n\t  func_quote_for_eval \"$arg\"\n\t  arg=$func_quote_for_eval_result\n        fi\n\t;;\n\n      # Some other compiler flag.\n      -* | +*)\n        func_quote_for_eval \"$arg\"\n\targ=$func_quote_for_eval_result\n\t;;\n\n      *.$objext)\n\t# A standard object.\n\tfunc_append objs \" $arg\"\n\t;;\n\n      *.lo)\n\t# A libtool-controlled object.\n\n\t# Check to see that this really is a libtool object.\n\tif func_lalib_unsafe_p \"$arg\"; then\n\t  pic_object=\n\t  non_pic_object=\n\n\t  # Read the .lo file\n\t  func_source \"$arg\"\n\n\t  if test -z \"$pic_object\" ||\n\t     test -z \"$non_pic_object\" ||\n\t     test none = \"$pic_object\" &&\n\t     test none = \"$non_pic_object\"; then\n\t    func_fatal_error \"cannot find name of object for '$arg'\"\n\t  fi\n\n\t  # Extract subdirectory from the argument.\n\t  func_dirname \"$arg\" \"/\" \"\"\n\t  xdir=$func_dirname_result\n\n\t  test none = \"$pic_object\" || {\n\t    # Prepend the subdirectory the object is found in.\n\t    pic_object=$xdir$pic_object\n\n\t    if test dlfiles = \"$prev\"; then\n\t      if test yes = \"$build_libtool_libs\" && test yes = \"$dlopen_support\"; then\n\t\tfunc_append dlfiles \" $pic_object\"\n\t\tprev=\n\t\tcontinue\n\t      else\n\t\t# If libtool objects are unsupported, then we need to preload.\n\t\tprev=dlprefiles\n\t      fi\n\t    fi\n\n\t    # CHECK ME:  I think I busted this.  -Ossama\n\t    if test dlprefiles = \"$prev\"; then\n\t      # Preload the old-style object.\n\t      func_append dlprefiles \" $pic_object\"\n\t      prev=\n\t    fi\n\n\t    # A PIC object.\n\t    func_append libobjs \" $pic_object\"\n\t    arg=$pic_object\n\t  }\n\n\t  # Non-PIC object.\n\t  if test none != \"$non_pic_object\"; then\n\t    # Prepend the subdirectory the object is found in.\n\t    non_pic_object=$xdir$non_pic_object\n\n\t    # A standard non-PIC object\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t    if test -z \"$pic_object\" || test none = \"$pic_object\"; then\n\t      arg=$non_pic_object\n\t    fi\n\t  else\n\t    # If the PIC object exists, use it instead.\n\t    # $xdir was prepended to $pic_object above.\n\t    non_pic_object=$pic_object\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  fi\n\telse\n\t  # Only an error if not doing a dry-run.\n\t  if $opt_dry_run; then\n\t    # Extract subdirectory from the argument.\n\t    func_dirname \"$arg\" \"/\" \"\"\n\t    xdir=$func_dirname_result\n\n\t    func_lo2o \"$arg\"\n\t    pic_object=$xdir$objdir/$func_lo2o_result\n\t    non_pic_object=$xdir$func_lo2o_result\n\t    func_append libobjs \" $pic_object\"\n\t    func_append non_pic_objects \" $non_pic_object\"\n\t  else\n\t    func_fatal_error \"'$arg' is not a valid libtool object\"\n\t  fi\n\tfi\n\t;;\n\n      *.$libext)\n\t# An archive.\n\tfunc_append deplibs \" $arg\"\n\tfunc_append old_deplibs \" $arg\"\n\tcontinue\n\t;;\n\n      *.la)\n\t# A libtool-controlled library.\n\n\tfunc_resolve_sysroot \"$arg\"\n\tif test dlfiles = \"$prev\"; then\n\t  # This library was specified with -dlopen.\n\t  func_append dlfiles \" $func_resolve_sysroot_result\"\n\t  prev=\n\telif test dlprefiles = \"$prev\"; then\n\t  # The library was specified with -dlpreopen.\n\t  func_append dlprefiles \" $func_resolve_sysroot_result\"\n\t  prev=\n\telse\n\t  func_append deplibs \" $func_resolve_sysroot_result\"\n\tfi\n\tcontinue\n\t;;\n\n      # Some other compiler argument.\n      *)\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\tfunc_quote_for_eval \"$arg\"\n\targ=$func_quote_for_eval_result\n\t;;\n      esac # arg\n\n      # Now actually substitute the argument into the commands.\n      if test -n \"$arg\"; then\n\tfunc_append compile_command \" $arg\"\n\tfunc_append finalize_command \" $arg\"\n      fi\n    done # argument parsing loop\n\n    test -n \"$prev\" && \\\n      func_fatal_help \"the '$prevarg' option requires an argument\"\n\n    if test yes = \"$export_dynamic\" && test -n \"$export_dynamic_flag_spec\"; then\n      eval arg=\\\"$export_dynamic_flag_spec\\\"\n      func_append compile_command \" $arg\"\n      func_append finalize_command \" $arg\"\n    fi\n\n    oldlibs=\n    # calculate the name of the file, without its directory\n    func_basename \"$output\"\n    outputname=$func_basename_result\n    libobjs_save=$libobjs\n\n    if test -n \"$shlibpath_var\"; then\n      # get the directories listed in $shlibpath_var\n      eval shlib_search_path=\\`\\$ECHO \\\"\\$$shlibpath_var\\\" \\| \\$SED \\'s/:/ /g\\'\\`\n    else\n      shlib_search_path=\n    fi\n    eval sys_lib_search_path=\\\"$sys_lib_search_path_spec\\\"\n    eval sys_lib_dlsearch_path=\\\"$sys_lib_dlsearch_path_spec\\\"\n\n    # Definition is injected by LT_CONFIG during libtool generation.\n    func_munge_path_list sys_lib_dlsearch_path \"$LT_SYS_LIBRARY_PATH\"\n\n    func_dirname \"$output\" \"/\" \"\"\n    output_objdir=$func_dirname_result$objdir\n    func_to_tool_file \"$output_objdir/\"\n    tool_output_objdir=$func_to_tool_file_result\n    # Create the object directory.\n    func_mkdir_p \"$output_objdir\"\n\n    # Determine the type of output\n    case $output in\n    \"\")\n      func_fatal_help \"you must specify an output file\"\n      ;;\n    *.$libext) linkmode=oldlib ;;\n    *.lo | *.$objext) linkmode=obj ;;\n    *.la) linkmode=lib ;;\n    *) linkmode=prog ;; # Anything else should be a program.\n    esac\n\n    specialdeplibs=\n\n    libs=\n    # Find all interdependent deplibs by searching for libraries\n    # that are linked more than once (e.g. -la -lb -la)\n    for deplib in $deplibs; do\n      if $opt_preserve_dup_deps; then\n\tcase \"$libs \" in\n\t*\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\tesac\n      fi\n      func_append libs \" $deplib\"\n    done\n\n    if test lib = \"$linkmode\"; then\n      libs=\"$predeps $libs $compiler_lib_search_path $postdeps\"\n\n      # Compute libraries that are listed more than once in $predeps\n      # $postdeps and mark them as special (i.e., whose duplicates are\n      # not to be eliminated).\n      pre_post_deps=\n      if $opt_duplicate_compiler_generated_deps; then\n\tfor pre_post_dep in $predeps $postdeps; do\n\t  case \"$pre_post_deps \" in\n\t  *\" $pre_post_dep \"*) func_append specialdeplibs \" $pre_post_deps\" ;;\n\t  esac\n\t  func_append pre_post_deps \" $pre_post_dep\"\n\tdone\n      fi\n      pre_post_deps=\n    fi\n\n    deplibs=\n    newdependency_libs=\n    newlib_search_path=\n    need_relink=no # whether we're linking any uninstalled libtool libraries\n    notinst_deplibs= # not-installed libtool libraries\n    notinst_path= # paths that contain not-installed libtool libraries\n\n    case $linkmode in\n    lib)\n\tpasses=\"conv dlpreopen link\"\n\tfor file in $dlfiles $dlprefiles; do\n\t  case $file in\n\t  *.la) ;;\n\t  *)\n\t    func_fatal_help \"libraries can '-dlopen' only libtool libraries: $file\"\n\t    ;;\n\t  esac\n\tdone\n\t;;\n    prog)\n\tcompile_deplibs=\n\tfinalize_deplibs=\n\talldeplibs=false\n\tnewdlfiles=\n\tnewdlprefiles=\n\tpasses=\"conv scan dlopen dlpreopen link\"\n\t;;\n    *)  passes=\"conv\"\n\t;;\n    esac\n\n    for pass in $passes; do\n      # The preopen pass in lib mode reverses $deplibs; put it back here\n      # so that -L comes before libs that need it for instance...\n      if test lib,link = \"$linkmode,$pass\"; then\n\t## FIXME: Find the place where the list is rebuilt in the wrong\n\t##        order, and fix it there properly\n        tmp_deplibs=\n\tfor deplib in $deplibs; do\n\t  tmp_deplibs=\"$deplib $tmp_deplibs\"\n\tdone\n\tdeplibs=$tmp_deplibs\n      fi\n\n      if test lib,link = \"$linkmode,$pass\" ||\n\t test prog,scan = \"$linkmode,$pass\"; then\n\tlibs=$deplibs\n\tdeplibs=\n      fi\n      if test prog = \"$linkmode\"; then\n\tcase $pass in\n\tdlopen) libs=$dlfiles ;;\n\tdlpreopen) libs=$dlprefiles ;;\n\tlink) libs=\"$deplibs %DEPLIBS% $dependency_libs\" ;;\n\tesac\n      fi\n      if test lib,dlpreopen = \"$linkmode,$pass\"; then\n\t# Collect and forward deplibs of preopened libtool libs\n\tfor lib in $dlprefiles; do\n\t  # Ignore non-libtool-libs\n\t  dependency_libs=\n\t  func_resolve_sysroot \"$lib\"\n\t  case $lib in\n\t  *.la)\tfunc_source \"$func_resolve_sysroot_result\" ;;\n\t  esac\n\n\t  # Collect preopened libtool deplibs, except any this library\n\t  # has declared as weak libs\n\t  for deplib in $dependency_libs; do\n\t    func_basename \"$deplib\"\n            deplib_base=$func_basename_result\n\t    case \" $weak_libs \" in\n\t    *\" $deplib_base \"*) ;;\n\t    *) func_append deplibs \" $deplib\" ;;\n\t    esac\n\t  done\n\tdone\n\tlibs=$dlprefiles\n      fi\n      if test dlopen = \"$pass\"; then\n\t# Collect dlpreopened libraries\n\tsave_deplibs=$deplibs\n\tdeplibs=\n      fi\n\n      for deplib in $libs; do\n\tlib=\n\tfound=false\n\tcase $deplib in\n\t-mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \\\n        |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)\n\t  if test prog,link = \"$linkmode,$pass\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    func_append compiler_flags \" $deplib\"\n\t    if test lib = \"$linkmode\"; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) func_append new_inherited_linker_flags \" $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-l*)\n\t  if test lib != \"$linkmode\" && test prog != \"$linkmode\"; then\n\t    func_warning \"'-l' is ignored for archives/objects\"\n\t    continue\n\t  fi\n\t  func_stripname '-l' '' \"$deplib\"\n\t  name=$func_stripname_result\n\t  if test lib = \"$linkmode\"; then\n\t    searchdirs=\"$newlib_search_path $lib_search_path $compiler_lib_search_dirs $sys_lib_search_path $shlib_search_path\"\n\t  else\n\t    searchdirs=\"$newlib_search_path $lib_search_path $sys_lib_search_path $shlib_search_path\"\n\t  fi\n\t  for searchdir in $searchdirs; do\n\t    for search_ext in .la $std_shrext .so .a; do\n\t      # Search the libtool library\n\t      lib=$searchdir/lib$name$search_ext\n\t      if test -f \"$lib\"; then\n\t\tif test .la = \"$search_ext\"; then\n\t\t  found=:\n\t\telse\n\t\t  found=false\n\t\tfi\n\t\tbreak 2\n\t      fi\n\t    done\n\t  done\n\t  if $found; then\n\t    # deplib is a libtool library\n\t    # If $allow_libtool_libs_with_static_runtimes && $deplib is a stdlib,\n\t    # We need to do some special things here, and not later.\n\t    if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t      case \" $predeps $postdeps \" in\n\t      *\" $deplib \"*)\n\t\tif func_lalib_p \"$lib\"; then\n\t\t  library_names=\n\t\t  old_library=\n\t\t  func_source \"$lib\"\n\t\t  for l in $old_library $library_names; do\n\t\t    ll=$l\n\t\t  done\n\t\t  if test \"X$ll\" = \"X$old_library\"; then # only static version available\n\t\t    found=false\n\t\t    func_dirname \"$lib\" \"\" \".\"\n\t\t    ladir=$func_dirname_result\n\t\t    lib=$ladir/$old_library\n\t\t    if test prog,link = \"$linkmode,$pass\"; then\n\t\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t\t    else\n\t\t      deplibs=\"$deplib $deplibs\"\n\t\t      test lib = \"$linkmode\" && newdependency_libs=\"$deplib $newdependency_libs\"\n\t\t    fi\n\t\t    continue\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *) ;;\n\t      esac\n\t    fi\n\t  else\n\t    # deplib doesn't seem to be a libtool library\n\t    if test prog,link = \"$linkmode,$pass\"; then\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      deplibs=\"$deplib $deplibs\"\n\t      test lib = \"$linkmode\" && newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    continue\n\t  fi\n\t  ;; # -l\n\t*.ltframework)\n\t  if test prog,link = \"$linkmode,$pass\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$deplib $deplibs\"\n\t    if test lib = \"$linkmode\"; then\n\t\tcase \"$new_inherited_linker_flags \" in\n\t\t    *\" $deplib \"*) ;;\n\t\t    * ) func_append new_inherited_linker_flags \" $deplib\" ;;\n\t\tesac\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t-L*)\n\t  case $linkmode in\n\t  lib)\n\t    deplibs=\"$deplib $deplibs\"\n\t    test conv = \"$pass\" && continue\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    func_stripname '-L' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t    ;;\n\t  prog)\n\t    if test conv = \"$pass\"; then\n\t      deplibs=\"$deplib $deplibs\"\n\t      continue\n\t    fi\n\t    if test scan = \"$pass\"; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    func_stripname '-L' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t    ;;\n\t  *)\n\t    func_warning \"'-L' is ignored for archives/objects\"\n\t    ;;\n\t  esac # linkmode\n\t  continue\n\t  ;; # -L\n\t-R*)\n\t  if test link = \"$pass\"; then\n\t    func_stripname '-R' '' \"$deplib\"\n\t    func_resolve_sysroot \"$func_stripname_result\"\n\t    dir=$func_resolve_sysroot_result\n\t    # Make sure the xrpath contains only unique directories.\n\t    case \"$xrpath \" in\n\t    *\" $dir \"*) ;;\n\t    *) func_append xrpath \" $dir\" ;;\n\t    esac\n\t  fi\n\t  deplibs=\"$deplib $deplibs\"\n\t  continue\n\t  ;;\n\t*.la)\n\t  func_resolve_sysroot \"$deplib\"\n\t  lib=$func_resolve_sysroot_result\n\t  ;;\n\t*.$libext)\n\t  if test conv = \"$pass\"; then\n\t    deplibs=\"$deplib $deplibs\"\n\t    continue\n\t  fi\n\t  case $linkmode in\n\t  lib)\n\t    # Linking convenience modules into shared libraries is allowed,\n\t    # but linking other static libraries is non-portable.\n\t    case \" $dlpreconveniencelibs \" in\n\t    *\" $deplib \"*) ;;\n\t    *)\n\t      valid_a_lib=false\n\t      case $deplibs_check_method in\n\t\tmatch_pattern*)\n\t\t  set dummy $deplibs_check_method; shift\n\t\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t\t  if eval \"\\$ECHO \\\"$deplib\\\"\" 2>/dev/null | $SED 10q \\\n\t\t    | $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t    valid_a_lib=:\n\t\t  fi\n\t\t;;\n\t\tpass_all)\n\t\t  valid_a_lib=:\n\t\t;;\n\t      esac\n\t      if $valid_a_lib; then\n\t\techo\n\t\t$ECHO \"*** Warning: Linking the shared library $output against the\"\n\t\t$ECHO \"*** static library $deplib is not portable!\"\n\t\tdeplibs=\"$deplib $deplibs\"\n\t      else\n\t\techo\n\t\t$ECHO \"*** Warning: Trying to link with static lib archive $deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because the file extensions .$libext of this argument makes me believe\"\n\t\techo \"*** that it is just a static archive that I should not use here.\"\n\t      fi\n\t      ;;\n\t    esac\n\t    continue\n\t    ;;\n\t  prog)\n\t    if test link != \"$pass\"; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    continue\n\t    ;;\n\t  esac # linkmode\n\t  ;; # *.$libext\n\t*.lo | *.$objext)\n\t  if test conv = \"$pass\"; then\n\t    deplibs=\"$deplib $deplibs\"\n\t  elif test prog = \"$linkmode\"; then\n\t    if test dlpreopen = \"$pass\" || test yes != \"$dlopen_support\" || test no = \"$build_libtool_libs\"; then\n\t      # If there is no dlopen support or we're linking statically,\n\t      # we need to preload.\n\t      func_append newdlprefiles \" $deplib\"\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      func_append newdlfiles \" $deplib\"\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t%DEPLIBS%)\n\t  alldeplibs=:\n\t  continue\n\t  ;;\n\tesac # case $deplib\n\n\t$found || test -f \"$lib\" \\\n\t  || func_fatal_error \"cannot find the library '$lib' or unhandled argument '$deplib'\"\n\n\t# Check to see that this really is a libtool archive.\n\tfunc_lalib_unsafe_p \"$lib\" \\\n\t  || func_fatal_error \"'$lib' is not a valid libtool archive\"\n\n\tfunc_dirname \"$lib\" \"\" \".\"\n\tladir=$func_dirname_result\n\n\tdlname=\n\tdlopen=\n\tdlpreopen=\n\tlibdir=\n\tlibrary_names=\n\told_library=\n\tinherited_linker_flags=\n\t# If the library was installed with an old release of libtool,\n\t# it will not redefine variables installed, or shouldnotlink\n\tinstalled=yes\n\tshouldnotlink=no\n\tavoidtemprpath=\n\n\n\t# Read the .la file\n\tfunc_source \"$lib\"\n\n\t# Convert \"-framework foo\" to \"foo.ltframework\"\n\tif test -n \"$inherited_linker_flags\"; then\n\t  tmp_inherited_linker_flags=`$ECHO \"$inherited_linker_flags\" | $SED 's/-framework \\([^ $]*\\)/\\1.ltframework/g'`\n\t  for tmp_inherited_linker_flag in $tmp_inherited_linker_flags; do\n\t    case \" $new_inherited_linker_flags \" in\n\t      *\" $tmp_inherited_linker_flag \"*) ;;\n\t      *) func_append new_inherited_linker_flags \" $tmp_inherited_linker_flag\";;\n\t    esac\n\t  done\n\tfi\n\tdependency_libs=`$ECHO \" $dependency_libs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tif test lib,link = \"$linkmode,$pass\" ||\n\t   test prog,scan = \"$linkmode,$pass\" ||\n\t   { test prog != \"$linkmode\" && test lib != \"$linkmode\"; }; then\n\t  test -n \"$dlopen\" && func_append dlfiles \" $dlopen\"\n\t  test -n \"$dlpreopen\" && func_append dlprefiles \" $dlpreopen\"\n\tfi\n\n\tif test conv = \"$pass\"; then\n\t  # Only check for convenience libraries\n\t  deplibs=\"$lib $deplibs\"\n\t  if test -z \"$libdir\"; then\n\t    if test -z \"$old_library\"; then\n\t      func_fatal_error \"cannot find name of link library for '$lib'\"\n\t    fi\n\t    # It is a libtool convenience library, so add in its objects.\n\t    func_append convenience \" $ladir/$objdir/$old_library\"\n\t    func_append old_convenience \" $ladir/$objdir/$old_library\"\n\t  elif test prog != \"$linkmode\" && test lib != \"$linkmode\"; then\n\t    func_fatal_error \"'$lib' is not a convenience library\"\n\t  fi\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    deplibs=\"$deplib $deplibs\"\n\t    if $opt_preserve_dup_deps; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $deplib\"\n\t  done\n\t  continue\n\tfi # $pass = conv\n\n\n\t# Get the name of the library we link against.\n\tlinklib=\n\tif test -n \"$old_library\" &&\n\t   { test yes = \"$prefer_static_libs\" ||\n\t     test built,no = \"$prefer_static_libs,$installed\"; }; then\n\t  linklib=$old_library\n\telse\n\t  for l in $old_library $library_names; do\n\t    linklib=$l\n\t  done\n\tfi\n\tif test -z \"$linklib\"; then\n\t  func_fatal_error \"cannot find name of link library for '$lib'\"\n\tfi\n\n\t# This library was specified with -dlopen.\n\tif test dlopen = \"$pass\"; then\n\t  test -z \"$libdir\" \\\n\t    && func_fatal_error \"cannot -dlopen a convenience library: '$lib'\"\n\t  if test -z \"$dlname\" ||\n\t     test yes != \"$dlopen_support\" ||\n\t     test no = \"$build_libtool_libs\"\n\t  then\n\t    # If there is no dlname, no dlopen support or we're linking\n\t    # statically, we need to preload.  We also need to preload any\n\t    # dependent libraries so libltdl's deplib preloader doesn't\n\t    # bomb out in the load deplibs phase.\n\t    func_append dlprefiles \" $lib $dependency_libs\"\n\t  else\n\t    func_append newdlfiles \" $lib\"\n\t  fi\n\t  continue\n\tfi # $pass = dlopen\n\n\t# We need an absolute path.\n\tcase $ladir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs_ladir=$ladir ;;\n\t*)\n\t  abs_ladir=`cd \"$ladir\" && pwd`\n\t  if test -z \"$abs_ladir\"; then\n\t    func_warning \"cannot determine absolute directory name of '$ladir'\"\n\t    func_warning \"passing it literally to the linker, although it might fail\"\n\t    abs_ladir=$ladir\n\t  fi\n\t  ;;\n\tesac\n\tfunc_basename \"$lib\"\n\tlaname=$func_basename_result\n\n\t# Find the relevant object directory and library name.\n\tif test yes = \"$installed\"; then\n\t  if test ! -f \"$lt_sysroot$libdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    func_warning \"library '$lib' was moved.\"\n\t    dir=$ladir\n\t    absdir=$abs_ladir\n\t    libdir=$abs_ladir\n\t  else\n\t    dir=$lt_sysroot$libdir\n\t    absdir=$lt_sysroot$libdir\n\t  fi\n\t  test yes = \"$hardcode_automatic\" && avoidtemprpath=yes\n\telse\n\t  if test ! -f \"$ladir/$objdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    dir=$ladir\n\t    absdir=$abs_ladir\n\t    # Remove this search path later\n\t    func_append notinst_path \" $abs_ladir\"\n\t  else\n\t    dir=$ladir/$objdir\n\t    absdir=$abs_ladir/$objdir\n\t    # Remove this search path later\n\t    func_append notinst_path \" $abs_ladir\"\n\t  fi\n\tfi # $installed = yes\n\tfunc_stripname 'lib' '.la' \"$laname\"\n\tname=$func_stripname_result\n\n\t# This library was specified with -dlpreopen.\n\tif test dlpreopen = \"$pass\"; then\n\t  if test -z \"$libdir\" && test prog = \"$linkmode\"; then\n\t    func_fatal_error \"only libraries may -dlpreopen a convenience library: '$lib'\"\n\t  fi\n\t  case $host in\n\t    # special handling for platforms with PE-DLLs.\n\t    *cygwin* | *mingw* | *cegcc* )\n\t      # Linker will automatically link against shared library if both\n\t      # static and shared are present.  Therefore, ensure we extract\n\t      # symbols from the import library if a shared library is present\n\t      # (otherwise, the dlopen module name will be incorrect).  We do\n\t      # this by putting the import library name into $newdlprefiles.\n\t      # We recover the dlopen module name by 'saving' the la file\n\t      # name in a special purpose variable, and (later) extracting the\n\t      # dlname from the la file.\n\t      if test -n \"$dlname\"; then\n\t        func_tr_sh \"$dir/$linklib\"\n\t        eval \"libfile_$func_tr_sh_result=\\$abs_ladir/\\$laname\"\n\t        func_append newdlprefiles \" $dir/$linklib\"\n\t      else\n\t        func_append newdlprefiles \" $dir/$old_library\"\n\t        # Keep a list of preopened convenience libraries to check\n\t        # that they are being used correctly in the link pass.\n\t        test -z \"$libdir\" && \\\n\t          func_append dlpreconveniencelibs \" $dir/$old_library\"\n\t      fi\n\t    ;;\n\t    * )\n\t      # Prefer using a static library (so that no silly _DYNAMIC symbols\n\t      # are required to link).\n\t      if test -n \"$old_library\"; then\n\t        func_append newdlprefiles \" $dir/$old_library\"\n\t        # Keep a list of preopened convenience libraries to check\n\t        # that they are being used correctly in the link pass.\n\t        test -z \"$libdir\" && \\\n\t          func_append dlpreconveniencelibs \" $dir/$old_library\"\n\t      # Otherwise, use the dlname, so that lt_dlopen finds it.\n\t      elif test -n \"$dlname\"; then\n\t        func_append newdlprefiles \" $dir/$dlname\"\n\t      else\n\t        func_append newdlprefiles \" $dir/$linklib\"\n\t      fi\n\t    ;;\n\t  esac\n\tfi # $pass = dlpreopen\n\n\tif test -z \"$libdir\"; then\n\t  # Link the convenience library\n\t  if test lib = \"$linkmode\"; then\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t  elif test prog,link = \"$linkmode,$pass\"; then\n\t    compile_deplibs=\"$dir/$old_library $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$old_library $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$lib $deplibs\" # used for prog,scan pass\n\t  fi\n\t  continue\n\tfi\n\n\n\tif test prog = \"$linkmode\" && test link != \"$pass\"; then\n\t  func_append newlib_search_path \" $ladir\"\n\t  deplibs=\"$lib $deplibs\"\n\n\t  linkalldeplibs=false\n\t  if test no != \"$link_all_deplibs\" || test -z \"$library_names\" ||\n\t     test no = \"$build_libtool_libs\"; then\n\t    linkalldeplibs=:\n\t  fi\n\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    case $deplib in\n\t    -L*) func_stripname '-L' '' \"$deplib\"\n\t         func_resolve_sysroot \"$func_stripname_result\"\n\t         func_append newlib_search_path \" $func_resolve_sysroot_result\"\n\t\t ;;\n\t    esac\n\t    # Need to link against all dependency_libs?\n\t    if $linkalldeplibs; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      # Need to hardcode shared library paths\n\t      # or/and link against static libraries\n\t      newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    if $opt_preserve_dup_deps; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) func_append specialdeplibs \" $deplib\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $deplib\"\n\t  done # for deplib\n\t  continue\n\tfi # $linkmode = prog...\n\n\tif test prog,link = \"$linkmode,$pass\"; then\n\t  if test -n \"$library_names\" &&\n\t     { { test no = \"$prefer_static_libs\" ||\n\t         test built,yes = \"$prefer_static_libs,$installed\"; } ||\n\t       test -z \"$old_library\"; }; then\n\t    # We need to hardcode the library path\n\t    if test -n \"$shlibpath_var\" && test -z \"$avoidtemprpath\"; then\n\t      # Make sure the rpath contains only unique directories.\n\t      case $temp_rpath: in\n\t      *\"$absdir:\"*) ;;\n\t      *) func_append temp_rpath \"$absdir:\" ;;\n\t      esac\n\t    fi\n\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) func_append compile_rpath \" $absdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append finalize_rpath \" $libdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t  fi # $linkmode,$pass = prog,link...\n\n\t  if $alldeplibs &&\n\t     { test pass_all = \"$deplibs_check_method\" ||\n\t       { test yes = \"$build_libtool_libs\" &&\n\t\t test -n \"$library_names\"; }; }; then\n\t    # We only need to search for static libraries\n\t    continue\n\t  fi\n\tfi\n\n\tlink_static=no # Whether the deplib will be linked statically\n\tuse_static_libs=$prefer_static_libs\n\tif test built = \"$use_static_libs\" && test yes = \"$installed\"; then\n\t  use_static_libs=no\n\tfi\n\tif test -n \"$library_names\" &&\n\t   { test no = \"$use_static_libs\" || test -z \"$old_library\"; }; then\n\t  case $host in\n\t  *cygwin* | *mingw* | *cegcc* | *os2*)\n\t      # No point in relinking DLLs because paths are not encoded\n\t      func_append notinst_deplibs \" $lib\"\n\t      need_relink=no\n\t    ;;\n\t  *)\n\t    if test no = \"$installed\"; then\n\t      func_append notinst_deplibs \" $lib\"\n\t      need_relink=yes\n\t    fi\n\t    ;;\n\t  esac\n\t  # This is a shared library\n\n\t  # Warn about portability, can't link against -module's on some\n\t  # systems (darwin).  Don't bleat about dlopened modules though!\n\t  dlopenmodule=\n\t  for dlpremoduletest in $dlprefiles; do\n\t    if test \"X$dlpremoduletest\" = \"X$lib\"; then\n\t      dlopenmodule=$dlpremoduletest\n\t      break\n\t    fi\n\t  done\n\t  if test -z \"$dlopenmodule\" && test yes = \"$shouldnotlink\" && test link = \"$pass\"; then\n\t    echo\n\t    if test prog = \"$linkmode\"; then\n\t      $ECHO \"*** Warning: Linking the executable $output against the loadable module\"\n\t    else\n\t      $ECHO \"*** Warning: Linking the shared library $output against the loadable module\"\n\t    fi\n\t    $ECHO \"*** $linklib is not portable!\"\n\t  fi\n\t  if test lib = \"$linkmode\" &&\n\t     test yes = \"$hardcode_into_libs\"; then\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) func_append compile_rpath \" $absdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append finalize_rpath \" $libdir\" ;;\n\t      esac\n\t      ;;\n\t    esac\n\t  fi\n\n\t  if test -n \"$old_archive_from_expsyms_cmds\"; then\n\t    # figure out the soname\n\t    set dummy $library_names\n\t    shift\n\t    realname=$1\n\t    shift\n\t    libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t    # use dlname if we got it. it's perfectly good, no?\n\t    if test -n \"$dlname\"; then\n\t      soname=$dlname\n\t    elif test -n \"$soname_spec\"; then\n\t      # bleh windows\n\t      case $host in\n\t      *cygwin* | mingw* | *cegcc* | *os2*)\n\t        func_arith $current - $age\n\t\tmajor=$func_arith_result\n\t\tversuffix=-$major\n\t\t;;\n\t      esac\n\t      eval soname=\\\"$soname_spec\\\"\n\t    else\n\t      soname=$realname\n\t    fi\n\n\t    # Make a new name for the extract_expsyms_cmds to use\n\t    soroot=$soname\n\t    func_basename \"$soroot\"\n\t    soname=$func_basename_result\n\t    func_stripname 'lib' '.dll' \"$soname\"\n\t    newlib=libimp-$func_stripname_result.a\n\n\t    # If the library has no export list, then create one now\n\t    if test -f \"$output_objdir/$soname-def\"; then :\n\t    else\n\t      func_verbose \"extracting exported symbol list from '$soname'\"\n\t      func_execute_cmds \"$extract_expsyms_cmds\" 'exit $?'\n\t    fi\n\n\t    # Create $newlib\n\t    if test -f \"$output_objdir/$newlib\"; then :; else\n\t      func_verbose \"generating import library for '$soname'\"\n\t      func_execute_cmds \"$old_archive_from_expsyms_cmds\" 'exit $?'\n\t    fi\n\t    # make sure the library variables are pointing to the new library\n\t    dir=$output_objdir\n\t    linklib=$newlib\n\t  fi # test -n \"$old_archive_from_expsyms_cmds\"\n\n\t  if test prog = \"$linkmode\" || test relink != \"$opt_mode\"; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    lib_linked=yes\n\t    case $hardcode_action in\n\t    immediate | unsupported)\n\t      if test no = \"$hardcode_direct\"; then\n\t\tadd=$dir/$linklib\n\t\tcase $host in\n\t\t  *-*-sco3.2v5.0.[024]*) add_dir=-L$dir ;;\n\t\t  *-*-sysv4*uw2*) add_dir=-L$dir ;;\n\t\t  *-*-sysv5OpenUNIX* | *-*-sysv5UnixWare7.[01].[10]* | \\\n\t\t    *-*-unixware7*) add_dir=-L$dir ;;\n\t\t  *-*-darwin* )\n\t\t    # if the lib is a (non-dlopened) module then we cannot\n\t\t    # link against it, someone is ignoring the earlier warnings\n\t\t    if /usr/bin/file -L $add 2> /dev/null |\n\t\t\t $GREP \": [^:]* bundle\" >/dev/null; then\n\t\t      if test \"X$dlopenmodule\" != \"X$lib\"; then\n\t\t\t$ECHO \"*** Warning: lib $linklib is a module, not a shared library\"\n\t\t\tif test -z \"$old_library\"; then\n\t\t\t  echo\n\t\t\t  echo \"*** And there doesn't seem to be a static archive available\"\n\t\t\t  echo \"*** The link will probably fail, sorry\"\n\t\t\telse\n\t\t\t  add=$dir/$old_library\n\t\t\tfi\n\t\t      elif test -n \"$old_library\"; then\n\t\t\tadd=$dir/$old_library\n\t\t      fi\n\t\t    fi\n\t\tesac\n\t      elif test no = \"$hardcode_minus_L\"; then\n\t\tcase $host in\n\t\t*-*-sunos*) add_shlibpath=$dir ;;\n\t\tesac\n\t\tadd_dir=-L$dir\n\t\tadd=-l$name\n\t      elif test no = \"$hardcode_shlibpath_var\"; then\n\t\tadd_shlibpath=$dir\n\t\tadd=-l$name\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    relink)\n\t      if test yes = \"$hardcode_direct\" &&\n\t         test no = \"$hardcode_direct_absolute\"; then\n\t\tadd=$dir/$linklib\n\t      elif test yes = \"$hardcode_minus_L\"; then\n\t\tadd_dir=-L$absdir\n\t\t# Try looking first in the location we're being installed to.\n\t\tif test -n \"$inst_prefix_dir\"; then\n\t\t  case $libdir in\n\t\t    [\\\\/]*)\n\t\t      func_append add_dir \" -L$inst_prefix_dir$libdir\"\n\t\t      ;;\n\t\t  esac\n\t\tfi\n\t\tadd=-l$name\n\t      elif test yes = \"$hardcode_shlibpath_var\"; then\n\t\tadd_shlibpath=$dir\n\t\tadd=-l$name\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    *) lib_linked=no ;;\n\t    esac\n\n\t    if test yes != \"$lib_linked\"; then\n\t      func_fatal_configuration \"unsupported hardcode properties\"\n\t    fi\n\n\t    if test -n \"$add_shlibpath\"; then\n\t      case :$compile_shlibpath: in\n\t      *\":$add_shlibpath:\"*) ;;\n\t      *) func_append compile_shlibpath \"$add_shlibpath:\" ;;\n\t      esac\n\t    fi\n\t    if test prog = \"$linkmode\"; then\n\t      test -n \"$add_dir\" && compile_deplibs=\"$add_dir $compile_deplibs\"\n\t      test -n \"$add\" && compile_deplibs=\"$add $compile_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t      if test yes != \"$hardcode_direct\" &&\n\t\t test yes != \"$hardcode_minus_L\" &&\n\t\t test yes = \"$hardcode_shlibpath_var\"; then\n\t\tcase :$finalize_shlibpath: in\n\t\t*\":$libdir:\"*) ;;\n\t\t*) func_append finalize_shlibpath \"$libdir:\" ;;\n\t\tesac\n\t      fi\n\t    fi\n\t  fi\n\n\t  if test prog = \"$linkmode\" || test relink = \"$opt_mode\"; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    # Finalize command for both is simple: just hardcode it.\n\t    if test yes = \"$hardcode_direct\" &&\n\t       test no = \"$hardcode_direct_absolute\"; then\n\t      add=$libdir/$linklib\n\t    elif test yes = \"$hardcode_minus_L\"; then\n\t      add_dir=-L$libdir\n\t      add=-l$name\n\t    elif test yes = \"$hardcode_shlibpath_var\"; then\n\t      case :$finalize_shlibpath: in\n\t      *\":$libdir:\"*) ;;\n\t      *) func_append finalize_shlibpath \"$libdir:\" ;;\n\t      esac\n\t      add=-l$name\n\t    elif test yes = \"$hardcode_automatic\"; then\n\t      if test -n \"$inst_prefix_dir\" &&\n\t\t test -f \"$inst_prefix_dir$libdir/$linklib\"; then\n\t\tadd=$inst_prefix_dir$libdir/$linklib\n\t      else\n\t\tadd=$libdir/$linklib\n\t      fi\n\t    else\n\t      # We cannot seem to hardcode it, guess we'll fake it.\n\t      add_dir=-L$libdir\n\t      # Try looking first in the location we're being installed to.\n\t      if test -n \"$inst_prefix_dir\"; then\n\t\tcase $libdir in\n\t\t  [\\\\/]*)\n\t\t    func_append add_dir \" -L$inst_prefix_dir$libdir\"\n\t\t    ;;\n\t\tesac\n\t      fi\n\t      add=-l$name\n\t    fi\n\n\t    if test prog = \"$linkmode\"; then\n\t      test -n \"$add_dir\" && finalize_deplibs=\"$add_dir $finalize_deplibs\"\n\t      test -n \"$add\" && finalize_deplibs=\"$add $finalize_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t    fi\n\t  fi\n\telif test prog = \"$linkmode\"; then\n\t  # Here we assume that one of hardcode_direct or hardcode_minus_L\n\t  # is not unsupported.  This is valid on all known static and\n\t  # shared platforms.\n\t  if test unsupported != \"$hardcode_direct\"; then\n\t    test -n \"$old_library\" && linklib=$old_library\n\t    compile_deplibs=\"$dir/$linklib $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$linklib $finalize_deplibs\"\n\t  else\n\t    compile_deplibs=\"-l$name -L$dir $compile_deplibs\"\n\t    finalize_deplibs=\"-l$name -L$dir $finalize_deplibs\"\n\t  fi\n\telif test yes = \"$build_libtool_libs\"; then\n\t  # Not a shared library\n\t  if test pass_all != \"$deplibs_check_method\"; then\n\t    # We're trying link a shared library against a static one\n\t    # but the system doesn't support it.\n\n\t    # Just print a warning and add the library to dependency_libs so\n\t    # that the program can be linked against the static library.\n\t    echo\n\t    $ECHO \"*** Warning: This system cannot link to static lib archive $lib.\"\n\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t    echo \"*** shared version of the library, which you do not appear to have.\"\n\t    if test yes = \"$module\"; then\n\t      echo \"*** But as you try to build a module library, libtool will still create \"\n\t      echo \"*** a static module, that should work as long as the dlopening application\"\n\t      echo \"*** is linked with the -dlopen flag to resolve symbols at runtime.\"\n\t      if test -z \"$global_symbol_pipe\"; then\n\t\techo\n\t\techo \"*** However, this would only work if libtool was able to extract symbol\"\n\t\techo \"*** lists from a program, using 'nm' or equivalent, but libtool could\"\n\t\techo \"*** not find such a program.  So, this module is probably useless.\"\n\t\techo \"*** 'nm' from GNU binutils and a full rebuild may help.\"\n\t      fi\n\t      if test no = \"$build_old_libs\"; then\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  else\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t    link_static=yes\n\t  fi\n\tfi # link shared/static library?\n\n\tif test lib = \"$linkmode\"; then\n\t  if test -n \"$dependency_libs\" &&\n\t     { test yes != \"$hardcode_into_libs\" ||\n\t       test yes = \"$build_old_libs\" ||\n\t       test yes = \"$link_static\"; }; then\n\t    # Extract -R from dependency_libs\n\t    temp_deplibs=\n\t    for libdir in $dependency_libs; do\n\t      case $libdir in\n\t      -R*) func_stripname '-R' '' \"$libdir\"\n\t           temp_xrpath=$func_stripname_result\n\t\t   case \" $xrpath \" in\n\t\t   *\" $temp_xrpath \"*) ;;\n\t\t   *) func_append xrpath \" $temp_xrpath\";;\n\t\t   esac;;\n\t      *) func_append temp_deplibs \" $libdir\";;\n\t      esac\n\t    done\n\t    dependency_libs=$temp_deplibs\n\t  fi\n\n\t  func_append newlib_search_path \" $absdir\"\n\t  # Link against this library\n\t  test no = \"$link_static\" && newdependency_libs=\"$abs_ladir/$laname $newdependency_libs\"\n\t  # ... and its dependency_libs\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    case $deplib in\n              -L*) func_stripname '-L' '' \"$deplib\"\n                   func_resolve_sysroot \"$func_stripname_result\";;\n              *) func_resolve_sysroot \"$deplib\" ;;\n            esac\n\t    if $opt_preserve_dup_deps; then\n\t      case \"$tmp_libs \" in\n\t      *\" $func_resolve_sysroot_result \"*)\n                func_append specialdeplibs \" $func_resolve_sysroot_result\" ;;\n\t      esac\n\t    fi\n\t    func_append tmp_libs \" $func_resolve_sysroot_result\"\n\t  done\n\n\t  if test no != \"$link_all_deplibs\"; then\n\t    # Add the search paths of all dependency libraries\n\t    for deplib in $dependency_libs; do\n\t      path=\n\t      case $deplib in\n\t      -L*) path=$deplib ;;\n\t      *.la)\n\t        func_resolve_sysroot \"$deplib\"\n\t        deplib=$func_resolve_sysroot_result\n\t        func_dirname \"$deplib\" \"\" \".\"\n\t\tdir=$func_dirname_result\n\t\t# We need an absolute path.\n\t\tcase $dir in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) absdir=$dir ;;\n\t\t*)\n\t\t  absdir=`cd \"$dir\" && pwd`\n\t\t  if test -z \"$absdir\"; then\n\t\t    func_warning \"cannot determine absolute directory name of '$dir'\"\n\t\t    absdir=$dir\n\t\t  fi\n\t\t  ;;\n\t\tesac\n\t\tif $GREP \"^installed=no\" $deplib > /dev/null; then\n\t\tcase $host in\n\t\t*-*-darwin*)\n\t\t  depdepl=\n\t\t  eval deplibrary_names=`$SED -n -e 's/^library_names=\\(.*\\)$/\\1/p' $deplib`\n\t\t  if test -n \"$deplibrary_names\"; then\n\t\t    for tmp in $deplibrary_names; do\n\t\t      depdepl=$tmp\n\t\t    done\n\t\t    if test -f \"$absdir/$objdir/$depdepl\"; then\n\t\t      depdepl=$absdir/$objdir/$depdepl\n\t\t      darwin_install_name=`$OTOOL -L $depdepl | awk '{if (NR == 2) {print $1;exit}}'`\n                      if test -z \"$darwin_install_name\"; then\n                          darwin_install_name=`$OTOOL64 -L $depdepl  | awk '{if (NR == 2) {print $1;exit}}'`\n                      fi\n\t\t      func_append compiler_flags \" $wl-dylib_file $wl$darwin_install_name:$depdepl\"\n\t\t      func_append linker_flags \" -dylib_file $darwin_install_name:$depdepl\"\n\t\t      path=\n\t\t    fi\n\t\t  fi\n\t\t  ;;\n\t\t*)\n\t\t  path=-L$absdir/$objdir\n\t\t  ;;\n\t\tesac\n\t\telse\n\t\t  eval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $deplib`\n\t\t  test -z \"$libdir\" && \\\n\t\t    func_fatal_error \"'$deplib' is not a valid libtool archive\"\n\t\t  test \"$absdir\" != \"$libdir\" && \\\n\t\t    func_warning \"'$deplib' seems to be moved\"\n\n\t\t  path=-L$absdir\n\t\tfi\n\t\t;;\n\t      esac\n\t      case \" $deplibs \" in\n\t      *\" $path \"*) ;;\n\t      *) deplibs=\"$path $deplibs\" ;;\n\t      esac\n\t    done\n\t  fi # link_all_deplibs != no\n\tfi # linkmode = lib\n      done # for deplib in $libs\n      if test link = \"$pass\"; then\n\tif test prog = \"$linkmode\"; then\n\t  compile_deplibs=\"$new_inherited_linker_flags $compile_deplibs\"\n\t  finalize_deplibs=\"$new_inherited_linker_flags $finalize_deplibs\"\n\telse\n\t  compiler_flags=\"$compiler_flags \"`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfi\n      fi\n      dependency_libs=$newdependency_libs\n      if test dlpreopen = \"$pass\"; then\n\t# Link the dlpreopened libraries before other libraries\n\tfor deplib in $save_deplibs; do\n\t  deplibs=\"$deplib $deplibs\"\n\tdone\n      fi\n      if test dlopen != \"$pass\"; then\n\ttest conv = \"$pass\" || {\n\t  # Make sure lib_search_path contains only unique directories.\n\t  lib_search_path=\n\t  for dir in $newlib_search_path; do\n\t    case \"$lib_search_path \" in\n\t    *\" $dir \"*) ;;\n\t    *) func_append lib_search_path \" $dir\" ;;\n\t    esac\n\t  done\n\t  newlib_search_path=\n\t}\n\n\tif test prog,link = \"$linkmode,$pass\"; then\n\t  vars=\"compile_deplibs finalize_deplibs\"\n\telse\n\t  vars=deplibs\n\tfi\n\tfor var in $vars dependency_libs; do\n\t  # Add libraries to $var in reverse order\n\t  eval tmp_libs=\\\"\\$$var\\\"\n\t  new_libs=\n\t  for deplib in $tmp_libs; do\n\t    # FIXME: Pedantically, this is the right thing to do, so\n\t    #        that some nasty dependency loop isn't accidentally\n\t    #        broken:\n\t    #new_libs=\"$deplib $new_libs\"\n\t    # Pragmatically, this seems to cause very few problems in\n\t    # practice:\n\t    case $deplib in\n\t    -L*) new_libs=\"$deplib $new_libs\" ;;\n\t    -R*) ;;\n\t    *)\n\t      # And here is the reason: when a library appears more\n\t      # than once as an explicit dependence of a library, or\n\t      # is implicitly linked in more than once by the\n\t      # compiler, it is considered special, and multiple\n\t      # occurrences thereof are not removed.  Compare this\n\t      # with having the same library being listed as a\n\t      # dependency of multiple other libraries: in this case,\n\t      # we know (pedantically, we assume) the library does not\n\t      # need to be listed more than once, so we keep only the\n\t      # last copy.  This is not always right, but it is rare\n\t      # enough that we require users that really mean to play\n\t      # such unportable linking tricks to link the library\n\t      # using -Wl,-lname, so that libtool does not consider it\n\t      # for duplicate removal.\n\t      case \" $specialdeplibs \" in\n\t      *\" $deplib \"*) new_libs=\"$deplib $new_libs\" ;;\n\t      *)\n\t\tcase \" $new_libs \" in\n\t\t*\" $deplib \"*) ;;\n\t\t*) new_libs=\"$deplib $new_libs\" ;;\n\t\tesac\n\t\t;;\n\t      esac\n\t      ;;\n\t    esac\n\t  done\n\t  tmp_libs=\n\t  for deplib in $new_libs; do\n\t    case $deplib in\n\t    -L*)\n\t      case \" $tmp_libs \" in\n\t      *\" $deplib \"*) ;;\n\t      *) func_append tmp_libs \" $deplib\" ;;\n\t      esac\n\t      ;;\n\t    *) func_append tmp_libs \" $deplib\" ;;\n\t    esac\n\t  done\n\t  eval $var=\\\"$tmp_libs\\\"\n\tdone # for var\n      fi\n\n      # Add Sun CC postdeps if required:\n      test CXX = \"$tagname\" && {\n        case $host_os in\n        linux*)\n          case `$CC -V 2>&1 | sed 5q` in\n          *Sun\\ C*) # Sun C++ 5.9\n            func_suncc_cstd_abi\n\n            if test no != \"$suncc_use_cstd_abi\"; then\n              func_append postdeps ' -library=Cstd -library=Crun'\n            fi\n            ;;\n          esac\n          ;;\n\n        solaris*)\n          func_cc_basename \"$CC\"\n          case $func_cc_basename_result in\n          CC* | sunCC*)\n            func_suncc_cstd_abi\n\n            if test no != \"$suncc_use_cstd_abi\"; then\n              func_append postdeps ' -library=Cstd -library=Crun'\n            fi\n            ;;\n          esac\n          ;;\n        esac\n      }\n\n      # Last step: remove runtime libs from dependency_libs\n      # (they stay in deplibs)\n      tmp_libs=\n      for i in $dependency_libs; do\n\tcase \" $predeps $postdeps $compiler_lib_search_path \" in\n\t*\" $i \"*)\n\t  i=\n\t  ;;\n\tesac\n\tif test -n \"$i\"; then\n\t  func_append tmp_libs \" $i\"\n\tfi\n      done\n      dependency_libs=$tmp_libs\n    done # for pass\n    if test prog = \"$linkmode\"; then\n      dlfiles=$newdlfiles\n    fi\n    if test prog = \"$linkmode\" || test lib = \"$linkmode\"; then\n      dlprefiles=$newdlprefiles\n    fi\n\n    case $linkmode in\n    oldlib)\n      if test -n \"$dlfiles$dlprefiles\" || test no != \"$dlself\"; then\n\tfunc_warning \"'-dlopen' is ignored for archives\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"'-l' and '-L' are ignored for archives\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"'-rpath' is ignored for archives\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"'-R' is ignored for archives\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"'-version-info/-version-number' is ignored for archives\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"'-release' is ignored for archives\"\n\n      test -n \"$export_symbols$export_symbols_regex\" && \\\n\tfunc_warning \"'-export-symbols' is ignored for archives\"\n\n      # Now set the variables for building old libraries.\n      build_libtool_libs=no\n      oldlibs=$output\n      func_append objs \"$old_deplibs\"\n      ;;\n\n    lib)\n      # Make sure we only generate libraries of the form 'libNAME.la'.\n      case $outputname in\n      lib*)\n\tfunc_stripname 'lib' '.la' \"$outputname\"\n\tname=$func_stripname_result\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval libname=\\\"$libname_spec\\\"\n\t;;\n      *)\n\ttest no = \"$module\" \\\n\t  && func_fatal_help \"libtool library '$output' must begin with 'lib'\"\n\n\tif test no != \"$need_lib_prefix\"; then\n\t  # Add the \"lib\" prefix for modules if required\n\t  func_stripname '' '.la' \"$outputname\"\n\t  name=$func_stripname_result\n\t  eval shared_ext=\\\"$shrext_cmds\\\"\n\t  eval libname=\\\"$libname_spec\\\"\n\telse\n\t  func_stripname '' '.la' \"$outputname\"\n\t  libname=$func_stripname_result\n\tfi\n\t;;\n      esac\n\n      if test -n \"$objs\"; then\n\tif test pass_all != \"$deplibs_check_method\"; then\n\t  func_fatal_error \"cannot build libtool library '$output' from non-libtool objects on this host:$objs\"\n\telse\n\t  echo\n\t  $ECHO \"*** Warning: Linking the shared library $output against the non-libtool\"\n\t  $ECHO \"*** objects $objs is not portable!\"\n\t  func_append libobjs \" $objs\"\n\tfi\n      fi\n\n      test no = \"$dlself\" \\\n\t|| func_warning \"'-dlopen self' is ignored for libtool libraries\"\n\n      set dummy $rpath\n      shift\n      test 1 -lt \"$#\" \\\n\t&& func_warning \"ignoring multiple '-rpath's for a libtool library\"\n\n      install_libdir=$1\n\n      oldlibs=\n      if test -z \"$rpath\"; then\n\tif test yes = \"$build_libtool_libs\"; then\n\t  # Building a libtool convenience library.\n\t  # Some compilers have problems with a '.al' extension so\n\t  # convenience libraries should have the same extension an\n\t  # archive normally would.\n\t  oldlibs=\"$output_objdir/$libname.$libext $oldlibs\"\n\t  build_libtool_libs=convenience\n\t  build_old_libs=yes\n\tfi\n\n\ttest -n \"$vinfo\" && \\\n\t  func_warning \"'-version-info/-version-number' is ignored for convenience libraries\"\n\n\ttest -n \"$release\" && \\\n\t  func_warning \"'-release' is ignored for convenience libraries\"\n      else\n\n\t# Parse the version information argument.\n\tsave_ifs=$IFS; IFS=:\n\tset dummy $vinfo 0 0 0\n\tshift\n\tIFS=$save_ifs\n\n\ttest -n \"$7\" && \\\n\t  func_fatal_help \"too many parameters to '-version-info'\"\n\n\t# convert absolute version numbers to libtool ages\n\t# this retains compatibility with .la files and attempts\n\t# to make the code below a bit more comprehensible\n\n\tcase $vinfo_number in\n\tyes)\n\t  number_major=$1\n\t  number_minor=$2\n\t  number_revision=$3\n\t  #\n\t  # There are really only two kinds -- those that\n\t  # use the current revision as the major version\n\t  # and those that subtract age and use age as\n\t  # a minor version.  But, then there is irix\n\t  # that has an extra 1 added just for fun\n\t  #\n\t  case $version_type in\n\t  # correct linux to gnu/linux during the next big refactor\n\t  darwin|freebsd-elf|linux|osf|windows|none)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=$number_minor\n\t    revision=$number_revision\n\t    ;;\n\t  freebsd-aout|qnx|sunos)\n\t    current=$number_major\n\t    revision=$number_minor\n\t    age=0\n\t    ;;\n\t  irix|nonstopux)\n\t    func_arith $number_major + $number_minor\n\t    current=$func_arith_result\n\t    age=$number_minor\n\t    revision=$number_minor\n\t    lt_irix_increment=no\n\t    ;;\n\t  esac\n\t  ;;\n\tno)\n\t  current=$1\n\t  revision=$2\n\t  age=$3\n\t  ;;\n\tesac\n\n\t# Check that each of the things are valid numbers.\n\tcase $current in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"CURRENT '$current' must be a nonnegative integer\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $revision in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"REVISION '$revision' must be a nonnegative integer\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tcase $age in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  func_error \"AGE '$age' must be a nonnegative integer\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\t  ;;\n\tesac\n\n\tif test \"$age\" -gt \"$current\"; then\n\t  func_error \"AGE '$age' is greater than the current interface number '$current'\"\n\t  func_fatal_error \"'$vinfo' is not valid version information\"\n\tfi\n\n\t# Calculate the version variables.\n\tmajor=\n\tversuffix=\n\tverstring=\n\tcase $version_type in\n\tnone) ;;\n\n\tdarwin)\n\t  # Like Linux, but with the current version available in\n\t  # verstring for coding it into the library header\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=$major.$age.$revision\n\t  # Darwin ld doesn't like 0 for these options...\n\t  func_arith $current + 1\n\t  minor_current=$func_arith_result\n\t  xlcverstring=\"$wl-compatibility_version $wl$minor_current $wl-current_version $wl$minor_current.$revision\"\n\t  verstring=\"-compatibility_version $minor_current -current_version $minor_current.$revision\"\n          # On Darwin other compilers\n          case $CC in\n              nagfor*)\n                  verstring=\"$wl-compatibility_version $wl$minor_current $wl-current_version $wl$minor_current.$revision\"\n                  ;;\n              *)\n                  verstring=\"-compatibility_version $minor_current -current_version $minor_current.$revision\"\n                  ;;\n          esac\n\t  ;;\n\n\tfreebsd-aout)\n\t  major=.$current\n\t  versuffix=.$current.$revision\n\t  ;;\n\n\tfreebsd-elf)\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=$major.$age.$revision\n\t  ;;\n\n\tirix | nonstopux)\n\t  if test no = \"$lt_irix_increment\"; then\n\t    func_arith $current - $age\n\t  else\n\t    func_arith $current - $age + 1\n\t  fi\n\t  major=$func_arith_result\n\n\t  case $version_type in\n\t    nonstopux) verstring_prefix=nonstopux ;;\n\t    *)         verstring_prefix=sgi ;;\n\t  esac\n\t  verstring=$verstring_prefix$major.$revision\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$revision\n\t  while test 0 -ne \"$loop\"; do\n\t    func_arith $revision - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=$verstring_prefix$major.$iface:$verstring\n\t  done\n\n\t  # Before this point, $major must not contain '.'.\n\t  major=.$major\n\t  versuffix=$major.$revision\n\t  ;;\n\n\tlinux) # correct to gnu/linux during the next big refactor\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=$major.$age.$revision\n\t  ;;\n\n\tosf)\n\t  func_arith $current - $age\n\t  major=.$func_arith_result\n\t  versuffix=.$current.$age.$revision\n\t  verstring=$current.$age.$revision\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$age\n\t  while test 0 -ne \"$loop\"; do\n\t    func_arith $current - $loop\n\t    iface=$func_arith_result\n\t    func_arith $loop - 1\n\t    loop=$func_arith_result\n\t    verstring=$verstring:$iface.0\n\t  done\n\n\t  # Make executables depend on our current version.\n\t  func_append verstring \":$current.0\"\n\t  ;;\n\n\tqnx)\n\t  major=.$current\n\t  versuffix=.$current\n\t  ;;\n\n\tsco)\n\t  major=.$current\n\t  versuffix=.$current\n\t  ;;\n\n\tsunos)\n\t  major=.$current\n\t  versuffix=.$current.$revision\n\t  ;;\n\n\twindows)\n\t  # Use '-' rather than '.', since we only want one\n\t  # extension on DOS 8.3 file systems.\n\t  func_arith $current - $age\n\t  major=$func_arith_result\n\t  versuffix=-$major\n\t  ;;\n\n\t*)\n\t  func_fatal_configuration \"unknown library version type '$version_type'\"\n\t  ;;\n\tesac\n\n\t# Clear the version info if we defaulted, and they specified a release.\n\tif test -z \"$vinfo\" && test -n \"$release\"; then\n\t  major=\n\t  case $version_type in\n\t  darwin)\n\t    # we can't check for \"0.0\" in archive_cmds due to quoting\n\t    # problems, so we reset it completely\n\t    verstring=\n\t    ;;\n\t  *)\n\t    verstring=0.0\n\t    ;;\n\t  esac\n\t  if test no = \"$need_version\"; then\n\t    versuffix=\n\t  else\n\t    versuffix=.0.0\n\t  fi\n\tfi\n\n\t# Remove version info from name if versioning should be avoided\n\tif test yes,no = \"$avoid_version,$need_version\"; then\n\t  major=\n\t  versuffix=\n\t  verstring=\n\tfi\n\n\t# Check to see if the archive will have undefined symbols.\n\tif test yes = \"$allow_undefined\"; then\n\t  if test unsupported = \"$allow_undefined_flag\"; then\n\t    if test yes = \"$build_old_libs\"; then\n\t      func_warning \"undefined symbols not allowed in $host shared libraries; building static only\"\n\t      build_libtool_libs=no\n\t    else\n\t      func_fatal_error \"can't build $host shared library unless -no-undefined is specified\"\n\t    fi\n\t  fi\n\telse\n\t  # Don't allow undefined symbols.\n\t  allow_undefined_flag=$no_undefined_flag\n\tfi\n\n      fi\n\n      func_generate_dlsyms \"$libname\" \"$libname\" :\n      func_append libobjs \" $symfileobj\"\n      test \" \" = \"$libobjs\" && libobjs=\n\n      if test relink != \"$opt_mode\"; then\n\t# Remove our outputs, but don't remove object files since they\n\t# may have been created when compiling PIC objects.\n\tremovelist=\n\ttempremovelist=`$ECHO \"$output_objdir/*\"`\n\tfor p in $tempremovelist; do\n\t  case $p in\n\t    *.$objext | *.gcno)\n\t       ;;\n\t    $output_objdir/$outputname | $output_objdir/$libname.* | $output_objdir/$libname$release.*)\n\t       if test -n \"$precious_files_regex\"; then\n\t\t if $ECHO \"$p\" | $EGREP -e \"$precious_files_regex\" >/dev/null 2>&1\n\t\t then\n\t\t   continue\n\t\t fi\n\t       fi\n\t       func_append removelist \" $p\"\n\t       ;;\n\t    *) ;;\n\t  esac\n\tdone\n\ttest -n \"$removelist\" && \\\n\t  func_show_eval \"${RM}r \\$removelist\"\n      fi\n\n      # Now set the variables for building old libraries.\n      if test yes = \"$build_old_libs\" && test convenience != \"$build_libtool_libs\"; then\n\tfunc_append oldlibs \" $output_objdir/$libname.$libext\"\n\n\t# Transform .lo files to .o files.\n\toldobjs=\"$objs \"`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.$libext$/d; $lo2o\" | $NL2SP`\n      fi\n\n      # Eliminate all temporary directories.\n      #for path in $notinst_path; do\n      #\tlib_search_path=`$ECHO \"$lib_search_path \" | $SED \"s% $path % %g\"`\n      #\tdeplibs=`$ECHO \"$deplibs \" | $SED \"s% -L$path % %g\"`\n      #\tdependency_libs=`$ECHO \"$dependency_libs \" | $SED \"s% -L$path % %g\"`\n      #done\n\n      if test -n \"$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\ttemp_xrpath=\n\tfor libdir in $xrpath; do\n\t  func_replace_sysroot \"$libdir\"\n\t  func_append temp_xrpath \" -R$func_replace_sysroot_result\"\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_rpath \" $libdir\" ;;\n\t  esac\n\tdone\n\tif test yes != \"$hardcode_into_libs\" || test yes = \"$build_old_libs\"; then\n\t  dependency_libs=\"$temp_xrpath $dependency_libs\"\n\tfi\n      fi\n\n      # Make sure dlfiles contains only unique files that won't be dlpreopened\n      old_dlfiles=$dlfiles\n      dlfiles=\n      for lib in $old_dlfiles; do\n\tcase \" $dlprefiles $dlfiles \" in\n\t*\" $lib \"*) ;;\n\t*) func_append dlfiles \" $lib\" ;;\n\tesac\n      done\n\n      # Make sure dlprefiles contains only unique files\n      old_dlprefiles=$dlprefiles\n      dlprefiles=\n      for lib in $old_dlprefiles; do\n\tcase \"$dlprefiles \" in\n\t*\" $lib \"*) ;;\n\t*) func_append dlprefiles \" $lib\" ;;\n\tesac\n      done\n\n      if test yes = \"$build_libtool_libs\"; then\n\tif test -n \"$rpath\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-beos* | *-cegcc* | *-*-haiku*)\n\t    # these systems don't actually have a c library (as such)!\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C library is in the System framework\n\t    func_append deplibs \" System.ltframework\"\n\t    ;;\n\t  *-*-netbsd*)\n\t    # Don't link with libc until the a.out ld.so is fixed.\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    ;;\n\t  *)\n\t    # Add libc to deplibs on all other systems if necessary.\n\t    if test yes = \"$build_libtool_need_lc\"; then\n\t      func_append deplibs \" -lc\"\n\t    fi\n\t    ;;\n\t  esac\n\tfi\n\n\t# Transform deplibs into only deplibs that can be linked in shared.\n\tname_save=$name\n\tlibname_save=$libname\n\trelease_save=$release\n\tversuffix_save=$versuffix\n\tmajor_save=$major\n\t# I'm not sure if I'm treating the release correctly.  I think\n\t# release should show up in the -l (ie -lgmp5) so we don't want to\n\t# add it in twice.  Is that correct?\n\trelease=\n\tversuffix=\n\tmajor=\n\tnewdeplibs=\n\tdroppeddeps=no\n\tcase $deplibs_check_method in\n\tpass_all)\n\t  # Don't check for shared/static.  Everything works.\n\t  # This might be a little naive.  We might want to check\n\t  # whether the library exists or not.  But this is on\n\t  # osf3 & osf4 and I'm not really sure... Just\n\t  # implementing what was already the behavior.\n\t  newdeplibs=$deplibs\n\t  ;;\n\ttest_compile)\n\t  # This code stresses the \"libraries are programs\" paradigm to its\n\t  # limits. Maybe even breaks it.  We compile a program, linking it\n\t  # against the deplibs as a proxy for the library.  Then we can check\n\t  # whether they linked in statically or dynamically with ldd.\n\t  $opt_dry_run || $RM conftest.c\n\t  cat > conftest.c <<EOF\n\t  int main() { return 0; }\nEOF\n\t  $opt_dry_run || $RM conftest\n\t  if $LTCC $LTCFLAGS -o conftest conftest.c $deplibs; then\n\t    ldd_output=`ldd conftest`\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\tif test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\t  case \" $predeps $postdeps \" in\n\t\t  *\" $i \"*)\n\t\t    func_append newdeplibs \" $i\"\n\t\t    i=\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t\tif test -n \"$i\"; then\n\t\t  libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\t  deplib_matches=`eval \"\\\\$ECHO \\\"$library_names_spec\\\"\"`\n\t\t  set dummy $deplib_matches; shift\n\t\t  deplib_match=$1\n\t\t  if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0; then\n\t\t    func_append newdeplibs \" $i\"\n\t\t  else\n\t\t    droppeddeps=yes\n\t\t    echo\n\t\t    $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t    echo \"*** I have the capability to make that library automatically link in when\"\n\t\t    echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t    echo \"*** shared version of the library, which I believe you do not have\"\n\t\t    echo \"*** because a test_compile did reveal that the linker did not use it for\"\n\t\t    echo \"*** its dynamic dependency list that programs get resolved with at runtime.\"\n\t\t  fi\n\t\tfi\n\t\t;;\n\t      *)\n\t\tfunc_append newdeplibs \" $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  else\n\t    # Error occurred in the first compile.  Let's try to salvage\n\t    # the situation: Compile a separate program for each library.\n\t    for i in $deplibs; do\n\t      case $i in\n\t      -l*)\n\t\tfunc_stripname -l '' \"$i\"\n\t\tname=$func_stripname_result\n\t\t$opt_dry_run || $RM conftest\n\t\tif $LTCC $LTCFLAGS -o conftest conftest.c $i; then\n\t\t  ldd_output=`ldd conftest`\n\t\t  if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\t    case \" $predeps $postdeps \" in\n\t\t    *\" $i \"*)\n\t\t      func_append newdeplibs \" $i\"\n\t\t      i=\n\t\t      ;;\n\t\t    esac\n\t\t  fi\n\t\t  if test -n \"$i\"; then\n\t\t    libname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\t    deplib_matches=`eval \"\\\\$ECHO \\\"$library_names_spec\\\"\"`\n\t\t    set dummy $deplib_matches; shift\n\t\t    deplib_match=$1\n\t\t    if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0; then\n\t\t      func_append newdeplibs \" $i\"\n\t\t    else\n\t\t      droppeddeps=yes\n\t\t      echo\n\t\t      $ECHO \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t      echo \"*** I have the capability to make that library automatically link in when\"\n\t\t      echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t      echo \"*** shared version of the library, which you do not appear to have\"\n\t\t      echo \"*** because a test_compile did reveal that the linker did not use this one\"\n\t\t      echo \"*** as a dynamic dependency that programs can get resolved with at runtime.\"\n\t\t    fi\n\t\t  fi\n\t\telse\n\t\t  droppeddeps=yes\n\t\t  echo\n\t\t  $ECHO \"*** Warning!  Library $i is needed by this library but I was not able to\"\n\t\t  echo \"*** make it link in!  You will probably need to install it or some\"\n\t\t  echo \"*** library that it depends on before this library will be fully\"\n\t\t  echo \"*** functional.  Installing it before continuing would be even better.\"\n\t\tfi\n\t\t;;\n\t      *)\n\t\tfunc_append newdeplibs \" $i\"\n\t\t;;\n\t      esac\n\t    done\n\t  fi\n\t  ;;\n\tfile_magic*)\n\t  set dummy $deplibs_check_method; shift\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  func_append newdeplibs \" $a_deplib\"\n\t\t  a_deplib=\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tlibname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\tif test -n \"$file_magic_glob\"; then\n\t\t  libnameglob=`func_echo_all \"$libname\" | $SED -e $file_magic_glob`\n\t\telse\n\t\t  libnameglob=$libname\n\t\tfi\n\t\ttest yes = \"$want_nocaseglob\" && nocaseglob=`shopt -p nocaseglob`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  if test yes = \"$want_nocaseglob\"; then\n\t\t    shopt -s nocaseglob\n\t\t    potential_libs=`ls $i/$libnameglob[.-]* 2>/dev/null`\n\t\t    $nocaseglob\n\t\t  else\n\t\t    potential_libs=`ls $i/$libnameglob[.-]* 2>/dev/null`\n\t\t  fi\n\t\t  for potent_lib in $potential_libs; do\n\t\t      # Follow soft links.\n\t\t      if ls -lLd \"$potent_lib\" 2>/dev/null |\n\t\t\t $GREP \" -> \" >/dev/null; then\n\t\t\tcontinue\n\t\t      fi\n\t\t      # The statement above tries to avoid entering an\n\t\t      # endless loop below, in case of cyclic links.\n\t\t      # We might still enter an endless loop, since a link\n\t\t      # loop can be closed while we follow links,\n\t\t      # but so what?\n\t\t      potlib=$potent_lib\n\t\t      while test -h \"$potlib\" 2>/dev/null; do\n\t\t\tpotliblink=`ls -ld $potlib | $SED 's/.* -> //'`\n\t\t\tcase $potliblink in\n\t\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) potlib=$potliblink;;\n\t\t\t*) potlib=`$ECHO \"$potlib\" | $SED 's|[^/]*$||'`\"$potliblink\";;\n\t\t\tesac\n\t\t      done\n\t\t      if eval $file_magic_cmd \\\"\\$potlib\\\" 2>/dev/null |\n\t\t\t $SED -e 10q |\n\t\t\t $EGREP \"$file_magic_regex\" > /dev/null; then\n\t\t\tfunc_append newdeplibs \" $a_deplib\"\n\t\t\ta_deplib=\n\t\t\tbreak 2\n\t\t      fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\"; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for file magic test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a file magic. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      func_append newdeplibs \" $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tmatch_pattern*)\n\t  set dummy $deplibs_check_method; shift\n\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$1 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    case $a_deplib in\n\t    -l*)\n\t      func_stripname -l '' \"$a_deplib\"\n\t      name=$func_stripname_result\n\t      if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  func_append newdeplibs \" $a_deplib\"\n\t\t  a_deplib=\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tlibname=`eval \"\\\\$ECHO \\\"$libname_spec\\\"\"`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t  for potent_lib in $potential_libs; do\n\t\t    potlib=$potent_lib # see symlink-check above in file_magic test\n\t\t    if eval \"\\$ECHO \\\"$potent_lib\\\"\" 2>/dev/null | $SED 10q | \\\n\t\t       $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t      func_append newdeplibs \" $a_deplib\"\n\t\t      a_deplib=\n\t\t      break 2\n\t\t    fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\"; then\n\t\tdroppeddeps=yes\n\t\techo\n\t\t$ECHO \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\techo \"*** I have the capability to make that library automatically link in when\"\n\t\techo \"*** you link to this library.  But I can only do this if you have a\"\n\t\techo \"*** shared version of the library, which you do not appear to have\"\n\t\techo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\"; then\n\t\t  $ECHO \"*** with $libname but no candidates were found. (...for regex pattern test)\"\n\t\telse\n\t\t  $ECHO \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $ECHO \"*** using a regex pattern. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t      ;;\n\t    *)\n\t      # Add a -L argument.\n\t      func_append newdeplibs \" $a_deplib\"\n\t      ;;\n\t    esac\n\t  done # Gone through all deplibs.\n\t  ;;\n\tnone | unknown | *)\n\t  newdeplibs=\n\t  tmp_deplibs=`$ECHO \" $deplibs\" | $SED 's/ -lc$//; s/ -[LR][^ ]*//g'`\n\t  if test yes = \"$allow_libtool_libs_with_static_runtimes\"; then\n\t    for i in $predeps $postdeps; do\n\t      # can't use Xsed below, because $i might contain '/'\n\t      tmp_deplibs=`$ECHO \" $tmp_deplibs\" | $SED \"s|$i||\"`\n\t    done\n\t  fi\n\t  case $tmp_deplibs in\n\t  *[!\\\t\\ ]*)\n\t    echo\n\t    if test none = \"$deplibs_check_method\"; then\n\t      echo \"*** Warning: inter-library dependencies are not supported in this platform.\"\n\t    else\n\t      echo \"*** Warning: inter-library dependencies are not known to be supported.\"\n\t    fi\n\t    echo \"*** All declared inter-library dependencies are being dropped.\"\n\t    droppeddeps=yes\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\tversuffix=$versuffix_save\n\tmajor=$major_save\n\trelease=$release_save\n\tlibname=$libname_save\n\tname=$name_save\n\n\tcase $host in\n\t*-*-rhapsody* | *-*-darwin1.[012])\n\t  # On Rhapsody replace the C library with the System framework\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t  ;;\n\tesac\n\n\tif test yes = \"$droppeddeps\"; then\n\t  if test yes = \"$module\"; then\n\t    echo\n\t    echo \"*** Warning: libtool could not satisfy all declared inter-library\"\n\t    $ECHO \"*** dependencies of module $libname.  Therefore, libtool will create\"\n\t    echo \"*** a static module, that should work as long as the dlopening\"\n\t    echo \"*** application is linked with the -dlopen flag.\"\n\t    if test -z \"$global_symbol_pipe\"; then\n\t      echo\n\t      echo \"*** However, this would only work if libtool was able to extract symbol\"\n\t      echo \"*** lists from a program, using 'nm' or equivalent, but libtool could\"\n\t      echo \"*** not find such a program.  So, this module is probably useless.\"\n\t      echo \"*** 'nm' from GNU binutils and a full rebuild may help.\"\n\t    fi\n\t    if test no = \"$build_old_libs\"; then\n\t      oldlibs=$output_objdir/$libname.$libext\n\t      build_libtool_libs=module\n\t      build_old_libs=yes\n\t    else\n\t      build_libtool_libs=no\n\t    fi\n\t  else\n\t    echo \"*** The inter-library dependencies that have been dropped here will be\"\n\t    echo \"*** automatically added whenever a program is linked with this library\"\n\t    echo \"*** or is declared to -dlopen it.\"\n\n\t    if test no = \"$allow_undefined\"; then\n\t      echo\n\t      echo \"*** Since this library must not contain undefined symbols,\"\n\t      echo \"*** because either the platform does not support them or\"\n\t      echo \"*** it was explicitly requested with -no-undefined,\"\n\t      echo \"*** libtool will only create a static version of it.\"\n\t      if test no = \"$build_old_libs\"; then\n\t\toldlibs=$output_objdir/$libname.$libext\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  fi\n\tfi\n\t# Done checking deplibs!\n\tdeplibs=$newdeplibs\n      fi\n      # Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n      case $host in\n\t*-*-darwin*)\n\t  newdeplibs=`$ECHO \" $newdeplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  new_inherited_linker_flags=`$ECHO \" $new_inherited_linker_flags\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  deplibs=`$ECHO \" $deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t  ;;\n      esac\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    func_append new_libs \" -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) func_append new_libs \" $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) func_append new_libs \" $deplib\" ;;\n\tesac\n      done\n      deplibs=$new_libs\n\n      # All the library-specific variables (install_libdir is set above).\n      library_names=\n      old_library=\n      dlname=\n\n      # Test again, we may have decided not to build it any more\n      if test yes = \"$build_libtool_libs\"; then\n\t# Remove $wl instances when linking with ld.\n\t# FIXME: should test the right _cmds variable.\n\tcase $archive_cmds in\n\t  *\\$LD\\ *) wl= ;;\n        esac\n\tif test yes = \"$hardcode_into_libs\"; then\n\t  # Hardcode the library paths\n\t  hardcode_libdirs=\n\t  dep_rpath=\n\t  rpath=$finalize_rpath\n\t  test relink = \"$opt_mode\" || rpath=$compile_rpath$rpath\n\t  for libdir in $rpath; do\n\t    if test -n \"$hardcode_libdir_flag_spec\"; then\n\t      if test -n \"$hardcode_libdir_separator\"; then\n\t\tfunc_replace_sysroot \"$libdir\"\n\t\tlibdir=$func_replace_sysroot_result\n\t\tif test -z \"$hardcode_libdirs\"; then\n\t\t  hardcode_libdirs=$libdir\n\t\telse\n\t\t  # Just accumulate the unique libdirs.\n\t\t  case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t\t  *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t    ;;\n\t\t  *)\n\t\t    func_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t      else\n\t\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t\tfunc_append dep_rpath \" $flag\"\n\t      fi\n\t    elif test -n \"$runpath_var\"; then\n\t      case \"$perm_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) func_append perm_rpath \" $libdir\" ;;\n\t      esac\n\t    fi\n\t  done\n\t  # Substitute the hardcoded libdirs into the rpath.\n\t  if test -n \"$hardcode_libdir_separator\" &&\n\t     test -n \"$hardcode_libdirs\"; then\n\t    libdir=$hardcode_libdirs\n\t    eval \"dep_rpath=\\\"$hardcode_libdir_flag_spec\\\"\"\n\t  fi\n\t  if test -n \"$runpath_var\" && test -n \"$perm_rpath\"; then\n\t    # We should set the runpath_var.\n\t    rpath=\n\t    for dir in $perm_rpath; do\n\t      func_append rpath \"$dir:\"\n\t    done\n\t    eval \"$runpath_var='$rpath\\$$runpath_var'; export $runpath_var\"\n\t  fi\n\t  test -n \"$dep_rpath\" && deplibs=\"$dep_rpath $deplibs\"\n\tfi\n\n\tshlibpath=$finalize_shlibpath\n\ttest relink = \"$opt_mode\" || shlibpath=$compile_shlibpath$shlibpath\n\tif test -n \"$shlibpath\"; then\n\t  eval \"$shlibpath_var='$shlibpath\\$$shlibpath_var'; export $shlibpath_var\"\n\tfi\n\n\t# Get the real and link names of the library.\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval library_names=\\\"$library_names_spec\\\"\n\tset dummy $library_names\n\tshift\n\trealname=$1\n\tshift\n\n\tif test -n \"$soname_spec\"; then\n\t  eval soname=\\\"$soname_spec\\\"\n\telse\n\t  soname=$realname\n\tfi\n\tif test -z \"$dlname\"; then\n\t  dlname=$soname\n\tfi\n\n\tlib=$output_objdir/$realname\n\tlinknames=\n\tfor link\n\tdo\n\t  func_append linknames \" $link\"\n\tdone\n\n\t# Use standard objects if they are pic\n\ttest -z \"$pic_flag\" && libobjs=`$ECHO \"$libobjs\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\ttest \"X$libobjs\" = \"X \" && libobjs=\n\n\tdelfiles=\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  $opt_dry_run || cp \"$export_symbols\" \"$output_objdir/$libname.uexp\"\n\t  export_symbols=$output_objdir/$libname.uexp\n\t  func_append delfiles \" $export_symbols\"\n\tfi\n\n\torig_export_symbols=\n\tcase $host_os in\n\tcygwin* | mingw* | cegcc*)\n\t  if test -n \"$export_symbols\" && test -z \"$export_symbols_regex\"; then\n\t    # exporting using user supplied symfile\n\t    func_dll_def_p \"$export_symbols\" || {\n\t      # and it's NOT already a .def file. Must figure out\n\t      # which of the given symbols are data symbols and tag\n\t      # them as such. So, trigger use of export_symbols_cmds.\n\t      # export_symbols gets reassigned inside the \"prepare\n\t      # the list of exported symbols\" if statement, so the\n\t      # include_expsyms logic still works.\n\t      orig_export_symbols=$export_symbols\n\t      export_symbols=\n\t      always_export_symbols=yes\n\t    }\n\t  fi\n\t  ;;\n\tesac\n\n\t# Prepare the list of exported symbols\n\tif test -z \"$export_symbols\"; then\n\t  if test yes = \"$always_export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t    func_verbose \"generating symbol list for '$libname.la'\"\n\t    export_symbols=$output_objdir/$libname.exp\n\t    $opt_dry_run || $RM $export_symbols\n\t    cmds=$export_symbols_cmds\n\t    save_ifs=$IFS; IFS='~'\n\t    for cmd1 in $cmds; do\n\t      IFS=$save_ifs\n\t      # Take the normal branch if the nm_file_list_spec branch\n\t      # doesn't work or if tool conversion is not needed.\n\t      case $nm_file_list_spec~$to_tool_file_cmd in\n\t\t*~func_convert_file_noop | *~func_convert_file_msys_to_w32 | ~*)\n\t\t  try_normal_branch=yes\n\t\t  eval cmd=\\\"$cmd1\\\"\n\t\t  func_len \" $cmd\"\n\t\t  len=$func_len_result\n\t\t  ;;\n\t\t*)\n\t\t  try_normal_branch=no\n\t\t  ;;\n\t      esac\n\t      if test yes = \"$try_normal_branch\" \\\n\t\t && { test \"$len\" -lt \"$max_cmd_len\" \\\n\t\t      || test \"$max_cmd_len\" -le -1; }\n\t      then\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\tskipped_export=false\n\t      elif test -n \"$nm_file_list_spec\"; then\n\t\tfunc_basename \"$output\"\n\t\toutput_la=$func_basename_result\n\t\tsave_libobjs=$libobjs\n\t\tsave_output=$output\n\t\toutput=$output_objdir/$output_la.nm\n\t\tfunc_to_tool_file \"$output\"\n\t\tlibobjs=$nm_file_list_spec$func_to_tool_file_result\n\t\tfunc_append delfiles \" $output\"\n\t\tfunc_verbose \"creating $NM input file list: $output\"\n\t\tfor obj in $save_libobjs; do\n\t\t  func_to_tool_file \"$obj\"\n\t\t  $ECHO \"$func_to_tool_file_result\"\n\t\tdone > \"$output\"\n\t\teval cmd=\\\"$cmd1\\\"\n\t\tfunc_show_eval \"$cmd\" 'exit $?'\n\t\toutput=$save_output\n\t\tlibobjs=$save_libobjs\n\t\tskipped_export=false\n\t      else\n\t\t# The command line is too long to execute in one step.\n\t\tfunc_verbose \"using reloadable object file for export list...\"\n\t\tskipped_export=:\n\t\t# Break out early, otherwise skipped_export may be\n\t\t# set to false by a later but shorter cmd.\n\t\tbreak\n\t      fi\n\t    done\n\t    IFS=$save_ifs\n\t    if test -n \"$export_symbols_regex\" && test : != \"$skipped_export\"; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  tmp_export_symbols=$export_symbols\n\t  test -n \"$orig_export_symbols\" && tmp_export_symbols=$orig_export_symbols\n\t  $opt_dry_run || eval '$ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"'\n\tfi\n\n\tif test : != \"$skipped_export\" && test -n \"$orig_export_symbols\"; then\n\t  # The given exports_symbols file has to be filtered, so filter it.\n\t  func_verbose \"filter symbol list for '$libname.la' to tag DATA exports\"\n\t  # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t  # 's' commands, which not all seds can handle. GNU sed should be fine\n\t  # though. Also, the filter scales superlinearly with the number of\n\t  # global variables. join(1) would be nice here, but unfortunately\n\t  # isn't a blessed tool.\n\t  $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t  func_append delfiles \" $export_symbols $output_objdir/$libname.filter\"\n\t  export_symbols=$output_objdir/$libname.def\n\t  $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\tfi\n\n\ttmp_deplibs=\n\tfor test_deplib in $deplibs; do\n\t  case \" $convenience \" in\n\t  *\" $test_deplib \"*) ;;\n\t  *)\n\t    func_append tmp_deplibs \" $test_deplib\"\n\t    ;;\n\t  esac\n\tdone\n\tdeplibs=$tmp_deplibs\n\n\tif test -n \"$convenience\"; then\n\t  if test -n \"$whole_archive_flag_spec\" &&\n\t    test yes = \"$compiler_needs_object\" &&\n\t    test -z \"$libobjs\"; then\n\t    # extract the archives, so we have objects to list.\n\t    # TODO: could optimize this to just extract one archive.\n\t    whole_archive_flag_spec=\n\t  fi\n\t  if test -n \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  else\n\t    gentop=$output_objdir/${outputname}x\n\t    func_append generated \" $gentop\"\n\n\t    func_extract_archives $gentop $convenience\n\t    func_append libobjs \" $func_extract_archives_result\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\tfi\n\n\tif test yes = \"$thread_safe\" && test -n \"$thread_safe_flag_spec\"; then\n\t  eval flag=\\\"$thread_safe_flag_spec\\\"\n\t  func_append linker_flags \" $flag\"\n\tfi\n\n\t# Make a backup of the uninstalled library when relinking\n\tif test relink = \"$opt_mode\"; then\n\t  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}U && $MV $realname ${realname}U)' || exit $?\n\tfi\n\n\t# Do each of the archive commands.\n\tif test yes = \"$module\" && test -n \"$module_cmds\"; then\n\t  if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$module_expsym_cmds\\\"\n\t    cmds=$module_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$module_cmds\\\"\n\t    cmds=$module_cmds\n\t  fi\n\telse\n\t  if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$archive_expsym_cmds\\\"\n\t    cmds=$archive_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$archive_cmds\\\"\n\t    cmds=$archive_cmds\n\t  fi\n\tfi\n\n\tif test : != \"$skipped_export\" &&\n\t   func_len \" $test_cmds\" &&\n\t   len=$func_len_result &&\n\t   test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  :\n\telse\n\t  # The command line is too long to link in one step, link piecewise\n\t  # or, if using GNU ld and skipped_export is not :, use a linker\n\t  # script.\n\n\t  # Save the value of $output and $libobjs because we want to\n\t  # use them later.  If we have whole_archive_flag_spec, we\n\t  # want to use save_libobjs as it was before\n\t  # whole_archive_flag_spec was expanded, because we can't\n\t  # assume the linker understands whole_archive_flag_spec.\n\t  # This may have to be revisited, in case too many\n\t  # convenience libraries get linked in and end up exceeding\n\t  # the spec.\n\t  if test -z \"$convenience\" || test -z \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t  fi\n\t  save_output=$output\n\t  func_basename \"$output\"\n\t  output_la=$func_basename_result\n\n\t  # Clear the reloadable object creation command queue and\n\t  # initialize k to one.\n\t  test_cmds=\n\t  concat_cmds=\n\t  objlist=\n\t  last_robj=\n\t  k=1\n\n\t  if test -n \"$save_libobjs\" && test : != \"$skipped_export\" && test yes = \"$with_gnu_ld\"; then\n\t    output=$output_objdir/$output_la.lnkscript\n\t    func_verbose \"creating GNU ld script: $output\"\n\t    echo 'INPUT (' > $output\n\t    for obj in $save_libobjs\n\t    do\n\t      func_to_tool_file \"$obj\"\n\t      $ECHO \"$func_to_tool_file_result\" >> $output\n\t    done\n\t    echo ')' >> $output\n\t    func_append delfiles \" $output\"\n\t    func_to_tool_file \"$output\"\n\t    output=$func_to_tool_file_result\n\t  elif test -n \"$save_libobjs\" && test : != \"$skipped_export\" && test -n \"$file_list_spec\"; then\n\t    output=$output_objdir/$output_la.lnk\n\t    func_verbose \"creating linker input file list: $output\"\n\t    : > $output\n\t    set x $save_libobjs\n\t    shift\n\t    firstobj=\n\t    if test yes = \"$compiler_needs_object\"; then\n\t      firstobj=\"$1 \"\n\t      shift\n\t    fi\n\t    for obj\n\t    do\n\t      func_to_tool_file \"$obj\"\n\t      $ECHO \"$func_to_tool_file_result\" >> $output\n\t    done\n\t    func_append delfiles \" $output\"\n\t    func_to_tool_file \"$output\"\n\t    output=$firstobj\\\"$file_list_spec$func_to_tool_file_result\\\"\n\t  else\n\t    if test -n \"$save_libobjs\"; then\n\t      func_verbose \"creating reloadable object files...\"\n\t      output=$output_objdir/$output_la-$k.$objext\n\t      eval test_cmds=\\\"$reload_cmds\\\"\n\t      func_len \" $test_cmds\"\n\t      len0=$func_len_result\n\t      len=$len0\n\n\t      # Loop over the list of objects to be linked.\n\t      for obj in $save_libobjs\n\t      do\n\t\tfunc_len \" $obj\"\n\t\tfunc_arith $len + $func_len_result\n\t\tlen=$func_arith_result\n\t\tif test -z \"$objlist\" ||\n\t\t   test \"$len\" -lt \"$max_cmd_len\"; then\n\t\t  func_append objlist \" $obj\"\n\t\telse\n\t\t  # The command $test_cmds is almost too long, add a\n\t\t  # command to the queue.\n\t\t  if test 1 -eq \"$k\"; then\n\t\t    # The first file doesn't have a previous command to add.\n\t\t    reload_objs=$objlist\n\t\t    eval concat_cmds=\\\"$reload_cmds\\\"\n\t\t  else\n\t\t    # All subsequent reloadable object files will link in\n\t\t    # the last one created.\n\t\t    reload_objs=\"$objlist $last_robj\"\n\t\t    eval concat_cmds=\\\"\\$concat_cmds~$reload_cmds~\\$RM $last_robj\\\"\n\t\t  fi\n\t\t  last_robj=$output_objdir/$output_la-$k.$objext\n\t\t  func_arith $k + 1\n\t\t  k=$func_arith_result\n\t\t  output=$output_objdir/$output_la-$k.$objext\n\t\t  objlist=\" $obj\"\n\t\t  func_len \" $last_robj\"\n\t\t  func_arith $len0 + $func_len_result\n\t\t  len=$func_arith_result\n\t\tfi\n\t      done\n\t      # Handle the remaining objects by creating one last\n\t      # reloadable object file.  All subsequent reloadable object\n\t      # files will link in the last one created.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      reload_objs=\"$objlist $last_robj\"\n\t      eval concat_cmds=\\\"\\$concat_cmds$reload_cmds\\\"\n\t      if test -n \"$last_robj\"; then\n\t        eval concat_cmds=\\\"\\$concat_cmds~\\$RM $last_robj\\\"\n\t      fi\n\t      func_append delfiles \" $output\"\n\n\t    else\n\t      output=\n\t    fi\n\n\t    ${skipped_export-false} && {\n\t      func_verbose \"generating symbol list for '$libname.la'\"\n\t      export_symbols=$output_objdir/$libname.exp\n\t      $opt_dry_run || $RM $export_symbols\n\t      libobjs=$output\n\t      # Append the command to create the export file.\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\$concat_cmds$export_symbols_cmds\\\"\n\t      if test -n \"$last_robj\"; then\n\t\teval concat_cmds=\\\"\\$concat_cmds~\\$RM $last_robj\\\"\n\t      fi\n\t    }\n\n\t    test -n \"$save_libobjs\" &&\n\t      func_verbose \"creating a temporary reloadable object file: $output\"\n\n\t    # Loop through the commands generated above and execute them.\n\t    save_ifs=$IFS; IFS='~'\n\t    for cmd in $concat_cmds; do\n\t      IFS=$save_ifs\n\t      $opt_quiet || {\n\t\t  func_quote_for_expand \"$cmd\"\n\t\t  eval \"func_echo $func_quote_for_expand_result\"\n\t      }\n\t      $opt_dry_run || eval \"$cmd\" || {\n\t\tlt_exit=$?\n\n\t\t# Restore the uninstalled library and exit\n\t\tif test relink = \"$opt_mode\"; then\n\t\t  ( cd \"$output_objdir\" && \\\n\t\t    $RM \"${realname}T\" && \\\n\t\t    $MV \"${realname}U\" \"$realname\" )\n\t\tfi\n\n\t\texit $lt_exit\n\t      }\n\t    done\n\t    IFS=$save_ifs\n\n\t    if test -n \"$export_symbols_regex\" && ${skipped_export-false}; then\n\t      func_show_eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      func_show_eval '$MV \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\n          ${skipped_export-false} && {\n\t    if test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t      tmp_export_symbols=$export_symbols\n\t      test -n \"$orig_export_symbols\" && tmp_export_symbols=$orig_export_symbols\n\t      $opt_dry_run || eval '$ECHO \"$include_expsyms\" | $SP2NL >> \"$tmp_export_symbols\"'\n\t    fi\n\n\t    if test -n \"$orig_export_symbols\"; then\n\t      # The given exports_symbols file has to be filtered, so filter it.\n\t      func_verbose \"filter symbol list for '$libname.la' to tag DATA exports\"\n\t      # FIXME: $output_objdir/$libname.filter potentially contains lots of\n\t      # 's' commands, which not all seds can handle. GNU sed should be fine\n\t      # though. Also, the filter scales superlinearly with the number of\n\t      # global variables. join(1) would be nice here, but unfortunately\n\t      # isn't a blessed tool.\n\t      $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\\(.*\\)\\([ \\,].*\\),s|^\\1$|\\1\\2|,' < $export_symbols > $output_objdir/$libname.filter\n\t      func_append delfiles \" $export_symbols $output_objdir/$libname.filter\"\n\t      export_symbols=$output_objdir/$libname.def\n\t      $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols\n\t    fi\n\t  }\n\n\t  libobjs=$output\n\t  # Restore the value of output.\n\t  output=$save_output\n\n\t  if test -n \"$convenience\" && test -n \"$whole_archive_flag_spec\"; then\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t    test \"X$libobjs\" = \"X \" && libobjs=\n\t  fi\n\t  # Expand the library linking commands again to reset the\n\t  # value of $libobjs for piecewise linking.\n\n\t  # Do each of the archive commands.\n\t  if test yes = \"$module\" && test -n \"$module_cmds\"; then\n\t    if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t      cmds=$module_expsym_cmds\n\t    else\n\t      cmds=$module_cmds\n\t    fi\n\t  else\n\t    if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t      cmds=$archive_expsym_cmds\n\t    else\n\t      cmds=$archive_cmds\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$delfiles\"; then\n\t  # Append the command to remove temporary files to $cmds.\n\t  eval cmds=\\\"\\$cmds~\\$RM $delfiles\\\"\n\tfi\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=$output_objdir/${outputname}x\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  func_append libobjs \" $func_extract_archives_result\"\n\t  test \"X$libobjs\" = \"X \" && libobjs=\n\tfi\n\n\tsave_ifs=$IFS; IFS='~'\n\tfor cmd in $cmds; do\n\t  IFS=$sp$nl\n\t  eval cmd=\\\"$cmd\\\"\n\t  IFS=$save_ifs\n\t  $opt_quiet || {\n\t    func_quote_for_expand \"$cmd\"\n\t    eval \"func_echo $func_quote_for_expand_result\"\n\t  }\n\t  $opt_dry_run || eval \"$cmd\" || {\n\t    lt_exit=$?\n\n\t    # Restore the uninstalled library and exit\n\t    if test relink = \"$opt_mode\"; then\n\t      ( cd \"$output_objdir\" && \\\n\t        $RM \"${realname}T\" && \\\n\t\t$MV \"${realname}U\" \"$realname\" )\n\t    fi\n\n\t    exit $lt_exit\n\t  }\n\tdone\n\tIFS=$save_ifs\n\n\t# Restore the uninstalled library and exit\n\tif test relink = \"$opt_mode\"; then\n\t  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}T && $MV $realname ${realname}T && $MV ${realname}U $realname)' || exit $?\n\n\t  if test -n \"$convenience\"; then\n\t    if test -z \"$whole_archive_flag_spec\"; then\n\t      func_show_eval '${RM}r \"$gentop\"'\n\t    fi\n\t  fi\n\n\t  exit $EXIT_SUCCESS\n\tfi\n\n\t# Create links to the real library.\n\tfor linkname in $linknames; do\n\t  if test \"$realname\" != \"$linkname\"; then\n\t    func_show_eval '(cd \"$output_objdir\" && $RM \"$linkname\" && $LN_S \"$realname\" \"$linkname\")' 'exit $?'\n\t  fi\n\tdone\n\n\t# If -module or -export-dynamic was specified, set the dlname.\n\tif test yes = \"$module\" || test yes = \"$export_dynamic\"; then\n\t  # On all known operating systems, these are identical.\n\t  dlname=$soname\n\tfi\n      fi\n      ;;\n\n    obj)\n      if test -n \"$dlfiles$dlprefiles\" || test no != \"$dlself\"; then\n\tfunc_warning \"'-dlopen' is ignored for objects\"\n      fi\n\n      case \" $deplibs\" in\n      *\\ -l* | *\\ -L*)\n\tfunc_warning \"'-l' and '-L' are ignored for objects\" ;;\n      esac\n\n      test -n \"$rpath\" && \\\n\tfunc_warning \"'-rpath' is ignored for objects\"\n\n      test -n \"$xrpath\" && \\\n\tfunc_warning \"'-R' is ignored for objects\"\n\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"'-version-info' is ignored for objects\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"'-release' is ignored for objects\"\n\n      case $output in\n      *.lo)\n\ttest -n \"$objs$old_deplibs\" && \\\n\t  func_fatal_error \"cannot build library object '$output' from non-libtool objects\"\n\n\tlibobj=$output\n\tfunc_lo2o \"$libobj\"\n\tobj=$func_lo2o_result\n\t;;\n      *)\n\tlibobj=\n\tobj=$output\n\t;;\n      esac\n\n      # Delete the old objects.\n      $opt_dry_run || $RM $obj $libobj\n\n      # Objects from convenience libraries.  This assumes\n      # single-version convenience libraries.  Whenever we create\n      # different ones for PIC/non-PIC, this we'll have to duplicate\n      # the extraction.\n      reload_conv_objs=\n      gentop=\n      # if reload_cmds runs $LD directly, get rid of -Wl from\n      # whole_archive_flag_spec and hope we can get by with turning comma\n      # into space.\n      case $reload_cmds in\n        *\\$LD[\\ \\$]*) wl= ;;\n      esac\n      if test -n \"$convenience\"; then\n\tif test -n \"$whole_archive_flag_spec\"; then\n\t  eval tmp_whole_archive_flags=\\\"$whole_archive_flag_spec\\\"\n\t  test -n \"$wl\" || tmp_whole_archive_flags=`$ECHO \"$tmp_whole_archive_flags\" | $SED 's|,| |g'`\n\t  reload_conv_objs=$reload_objs\\ $tmp_whole_archive_flags\n\telse\n\t  gentop=$output_objdir/${obj}x\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $convenience\n\t  reload_conv_objs=\"$reload_objs $func_extract_archives_result\"\n\tfi\n      fi\n\n      # If we're not building shared, we need to use non_pic_objs\n      test yes = \"$build_libtool_libs\" || libobjs=$non_pic_objects\n\n      # Create the old-style object.\n      reload_objs=$objs$old_deplibs' '`$ECHO \"$libobjs\" | $SP2NL | $SED \"/\\.$libext$/d; /\\.lib$/d; $lo2o\" | $NL2SP`' '$reload_conv_objs\n\n      output=$obj\n      func_execute_cmds \"$reload_cmds\" 'exit $?'\n\n      # Exit if we aren't doing a library object file.\n      if test -z \"$libobj\"; then\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      test yes = \"$build_libtool_libs\" || {\n\tif test -n \"$gentop\"; then\n\t  func_show_eval '${RM}r \"$gentop\"'\n\tfi\n\n\t# Create an invalid libtool object if no PIC, so that we don't\n\t# accidentally link it into a program.\n\t# $show \"echo timestamp > $libobj\"\n\t# $opt_dry_run || eval \"echo timestamp > $libobj\" || exit $?\n\texit $EXIT_SUCCESS\n      }\n\n      if test -n \"$pic_flag\" || test default != \"$pic_mode\"; then\n\t# Only do commands if we really have different PIC objects.\n\treload_objs=\"$libobjs $reload_conv_objs\"\n\toutput=$libobj\n\tfunc_execute_cmds \"$reload_cmds\" 'exit $?'\n      fi\n\n      if test -n \"$gentop\"; then\n\tfunc_show_eval '${RM}r \"$gentop\"'\n      fi\n\n      exit $EXIT_SUCCESS\n      ;;\n\n    prog)\n      case $host in\n\t*cygwin*) func_stripname '' '.exe' \"$output\"\n\t          output=$func_stripname_result.exe;;\n      esac\n      test -n \"$vinfo\" && \\\n\tfunc_warning \"'-version-info' is ignored for programs\"\n\n      test -n \"$release\" && \\\n\tfunc_warning \"'-release' is ignored for programs\"\n\n      $preload \\\n\t&& test unknown,unknown,unknown = \"$dlopen_support,$dlopen_self,$dlopen_self_static\" \\\n\t&& func_warning \"'LT_INIT([dlopen])' not used. Assuming no dlopen support.\"\n\n      case $host in\n      *-*-rhapsody* | *-*-darwin1.[012])\n\t# On Rhapsody replace the C library is the System framework\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's/ -lc / System.ltframework /'`\n\t;;\n      esac\n\n      case $host in\n      *-*-darwin*)\n\t# Don't allow lazy linking, it breaks C++ global constructors\n\t# But is supposedly fixed on 10.4 or later (yay!).\n\tif test CXX = \"$tagname\"; then\n\t  case ${MACOSX_DEPLOYMENT_TARGET-10.0} in\n\t    10.[0123])\n\t      func_append compile_command \" $wl-bind_at_load\"\n\t      func_append finalize_command \" $wl-bind_at_load\"\n\t    ;;\n\t  esac\n\tfi\n\t# Time to change all our \"foo.ltframework\" stuff back to \"-framework foo\"\n\tcompile_deplibs=`$ECHO \" $compile_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\tfinalize_deplibs=`$ECHO \" $finalize_deplibs\" | $SED 's% \\([^ $]*\\).ltframework% -framework \\1%g'`\n\t;;\n      esac\n\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $compile_deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    func_append new_libs \" -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $compile_deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) func_append new_libs \" $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) func_append new_libs \" $deplib\" ;;\n\tesac\n      done\n      compile_deplibs=$new_libs\n\n\n      func_append compile_command \" $compile_deplibs\"\n      func_append finalize_command \" $finalize_deplibs\"\n\n      if test -n \"$rpath$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\tfor libdir in $rpath $xrpath; do\n\t  # This is the magic to use -rpath.\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_rpath \" $libdir\" ;;\n\t  esac\n\tdone\n      fi\n\n      # Now hardcode the library paths\n      rpath=\n      hardcode_libdirs=\n      for libdir in $compile_rpath $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=$libdir\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\tfunc_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    func_append rpath \" $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append perm_rpath \" $libdir\" ;;\n\t  esac\n\tfi\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)\n\t  testbindir=`$ECHO \"$libdir\" | $SED -e 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$libdir:\"*) ;;\n\t  ::) dllsearchpath=$libdir;;\n\t  *) func_append dllsearchpath \":$libdir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  ::) dllsearchpath=$testbindir;;\n\t  *) func_append dllsearchpath \":$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=$hardcode_libdirs\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      compile_rpath=$rpath\n\n      rpath=\n      hardcode_libdirs=\n      for libdir in $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=$libdir\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\tfunc_append hardcode_libdirs \"$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    func_append rpath \" $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$finalize_perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) func_append finalize_perm_rpath \" $libdir\" ;;\n\t  esac\n\tfi\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=$hardcode_libdirs\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      finalize_rpath=$rpath\n\n      if test -n \"$libobjs\" && test yes = \"$build_old_libs\"; then\n\t# Transform all the library objects into standard objects.\n\tcompile_command=`$ECHO \"$compile_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n\tfinalize_command=`$ECHO \"$finalize_command\" | $SP2NL | $SED \"$lo2o\" | $NL2SP`\n      fi\n\n      func_generate_dlsyms \"$outputname\" \"@PROGRAM@\" false\n\n      # template prelinking step\n      if test -n \"$prelink_cmds\"; then\n\tfunc_execute_cmds \"$prelink_cmds\" 'exit $?'\n      fi\n\n      wrappers_required=:\n      case $host in\n      *cegcc* | *mingw32ce*)\n        # Disable wrappers for cegcc and mingw32ce hosts, we are cross compiling anyway.\n        wrappers_required=false\n        ;;\n      *cygwin* | *mingw* )\n        test yes = \"$build_libtool_libs\" || wrappers_required=false\n        ;;\n      *)\n        if test no = \"$need_relink\" || test yes != \"$build_libtool_libs\"; then\n          wrappers_required=false\n        fi\n        ;;\n      esac\n      $wrappers_required || {\n\t# Replace the output file specification.\n\tcompile_command=`$ECHO \"$compile_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\tlink_command=$compile_command$compile_rpath\n\n\t# We have no uninstalled library dependencies, so finalize right now.\n\texit_status=0\n\tfunc_show_eval \"$link_command\" 'exit_status=$?'\n\n\tif test -n \"$postlink_cmds\"; then\n\t  func_to_tool_file \"$output\"\n\t  postlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\t  func_execute_cmds \"$postlink_cmds\" 'exit $?'\n\tfi\n\n\t# Delete the generated files.\n\tif test -f \"$output_objdir/${outputname}S.$objext\"; then\n\t  func_show_eval '$RM \"$output_objdir/${outputname}S.$objext\"'\n\tfi\n\n\texit $exit_status\n      }\n\n      if test -n \"$compile_shlibpath$finalize_shlibpath\"; then\n\tcompile_command=\"$shlibpath_var=\\\"$compile_shlibpath$finalize_shlibpath\\$$shlibpath_var\\\" $compile_command\"\n      fi\n      if test -n \"$finalize_shlibpath\"; then\n\tfinalize_command=\"$shlibpath_var=\\\"$finalize_shlibpath\\$$shlibpath_var\\\" $finalize_command\"\n      fi\n\n      compile_var=\n      finalize_var=\n      if test -n \"$runpath_var\"; then\n\tif test -n \"$perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $perm_rpath; do\n\t    func_append rpath \"$dir:\"\n\t  done\n\t  compile_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n\tif test -n \"$finalize_perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $finalize_perm_rpath; do\n\t    func_append rpath \"$dir:\"\n\t  done\n\t  finalize_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n      fi\n\n      if test yes = \"$no_install\"; then\n\t# We don't need to create a wrapper script.\n\tlink_command=$compile_var$compile_command$compile_rpath\n\t# Replace the output file specification.\n\tlink_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output\"'%g'`\n\t# Delete the old output file.\n\t$opt_dry_run || $RM $output\n\t# Link the executable and exit\n\tfunc_show_eval \"$link_command\" 'exit $?'\n\n\tif test -n \"$postlink_cmds\"; then\n\t  func_to_tool_file \"$output\"\n\t  postlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\t  func_execute_cmds \"$postlink_cmds\" 'exit $?'\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      case $hardcode_action,$fast_install in\n        relink,*)\n\t  # Fast installation is not supported\n\t  link_command=$compile_var$compile_command$compile_rpath\n\t  relink_command=$finalize_var$finalize_command$finalize_rpath\n\n\t  func_warning \"this platform does not like uninstalled shared libraries\"\n\t  func_warning \"'$output' will be relinked during installation\"\n\t  ;;\n        *,yes)\n\t  link_command=$finalize_var$compile_command$finalize_rpath\n\t  relink_command=`$ECHO \"$compile_var$compile_command$compile_rpath\" | $SED 's%@OUTPUT@%\\$progdir/\\$file%g'`\n          ;;\n\t*,no)\n\t  link_command=$compile_var$compile_command$compile_rpath\n\t  relink_command=$finalize_var$finalize_command$finalize_rpath\n          ;;\n\t*,needless)\n\t  link_command=$finalize_var$compile_command$finalize_rpath\n\t  relink_command=\n          ;;\n      esac\n\n      # Replace the output file specification.\n      link_command=`$ECHO \"$link_command\" | $SED 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g'`\n\n      # Delete the old output files.\n      $opt_dry_run || $RM $output $output_objdir/$outputname $output_objdir/lt-$outputname\n\n      func_show_eval \"$link_command\" 'exit $?'\n\n      if test -n \"$postlink_cmds\"; then\n\tfunc_to_tool_file \"$output_objdir/$outputname\"\n\tpostlink_cmds=`func_echo_all \"$postlink_cmds\" | $SED -e 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g' -e 's%@TOOL_OUTPUT@%'\"$func_to_tool_file_result\"'%g'`\n\tfunc_execute_cmds \"$postlink_cmds\" 'exit $?'\n      fi\n\n      # Now create the wrapper script.\n      func_verbose \"creating $output\"\n\n      # Quote the relink command for shipping.\n      if test -n \"$relink_command\"; then\n\t# Preserve any variables that may affect compiler behavior\n\tfor var in $variables_saved_for_relink; do\n\t  if eval test -z \\\"\\${$var+set}\\\"; then\n\t    relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\t  elif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t    relink_command=\"$var=; export $var; $relink_command\"\n\t  else\n\t    func_quote_for_eval \"$var_value\"\n\t    relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\t  fi\n\tdone\n\trelink_command=\"(cd `pwd`; $relink_command)\"\n\trelink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      fi\n\n      # Only actually do things if not in dry run mode.\n      $opt_dry_run || {\n\t# win32 will think the script is a binary if it has\n\t# a .exe suffix, so we strip it off here.\n\tcase $output in\n\t  *.exe) func_stripname '' '.exe' \"$output\"\n\t         output=$func_stripname_result ;;\n\tesac\n\t# test for cygwin because mv fails w/o .exe extensions\n\tcase $host in\n\t  *cygwin*)\n\t    exeext=.exe\n\t    func_stripname '' '.exe' \"$outputname\"\n\t    outputname=$func_stripname_result ;;\n\t  *) exeext= ;;\n\tesac\n\tcase $host in\n\t  *cygwin* | *mingw* )\n\t    func_dirname_and_basename \"$output\" \"\" \".\"\n\t    output_name=$func_basename_result\n\t    output_path=$func_dirname_result\n\t    cwrappersource=$output_path/$objdir/lt-$output_name.c\n\t    cwrapper=$output_path/$output_name.exe\n\t    $RM $cwrappersource $cwrapper\n\t    trap \"$RM $cwrappersource $cwrapper; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_cwrapperexe_src > $cwrappersource\n\n\t    # The wrapper executable is built using the $host compiler,\n\t    # because it contains $host paths and files. If cross-\n\t    # compiling, it, like the target executable, must be\n\t    # executed on the $host or under an emulation environment.\n\t    $opt_dry_run || {\n\t      $LTCC $LTCFLAGS -o $cwrapper $cwrappersource\n\t      $STRIP $cwrapper\n\t    }\n\n\t    # Now, create the wrapper script for func_source use:\n\t    func_ltwrapper_scriptname $cwrapper\n\t    $RM $func_ltwrapper_scriptname_result\n\t    trap \"$RM $func_ltwrapper_scriptname_result; exit $EXIT_FAILURE\" 1 2 15\n\t    $opt_dry_run || {\n\t      # note: this script will not be executed, so do not chmod.\n\t      if test \"x$build\" = \"x$host\"; then\n\t\t$cwrapper --lt-dump-script > $func_ltwrapper_scriptname_result\n\t      else\n\t\tfunc_emit_wrapper no > $func_ltwrapper_scriptname_result\n\t      fi\n\t    }\n\t  ;;\n\t  * )\n\t    $RM $output\n\t    trap \"$RM $output; exit $EXIT_FAILURE\" 1 2 15\n\n\t    func_emit_wrapper no > $output\n\t    chmod +x $output\n\t  ;;\n\tesac\n      }\n      exit $EXIT_SUCCESS\n      ;;\n    esac\n\n    # See if we need to build an old-fashioned archive.\n    for oldlib in $oldlibs; do\n\n      case $build_libtool_libs in\n        convenience)\n\t  oldobjs=\"$libobjs_save $symfileobj\"\n\t  addlibs=$convenience\n\t  build_libtool_libs=no\n\t  ;;\n\tmodule)\n\t  oldobjs=$libobjs_save\n\t  addlibs=$old_convenience\n\t  build_libtool_libs=no\n          ;;\n\t*)\n\t  oldobjs=\"$old_deplibs $non_pic_objects\"\n\t  $preload && test -f \"$symfileobj\" \\\n\t    && func_append oldobjs \" $symfileobj\"\n\t  addlibs=$old_convenience\n\t  ;;\n      esac\n\n      if test -n \"$addlibs\"; then\n\tgentop=$output_objdir/${outputname}x\n\tfunc_append generated \" $gentop\"\n\n\tfunc_extract_archives $gentop $addlibs\n\tfunc_append oldobjs \" $func_extract_archives_result\"\n      fi\n\n      # Do each command in the archive commands.\n      if test -n \"$old_archive_from_new_cmds\" && test yes = \"$build_libtool_libs\"; then\n\tcmds=$old_archive_from_new_cmds\n      else\n\n\t# Add any objects from preloaded convenience libraries\n\tif test -n \"$dlprefiles\"; then\n\t  gentop=$output_objdir/${outputname}x\n\t  func_append generated \" $gentop\"\n\n\t  func_extract_archives $gentop $dlprefiles\n\t  func_append oldobjs \" $func_extract_archives_result\"\n\tfi\n\n\t# POSIX demands no paths to be encoded in archives.  We have\n\t# to avoid creating archives with duplicate basenames if we\n\t# might have to extract them afterwards, e.g., when creating a\n\t# static archive out of a convenience library, or when linking\n\t# the entirety of a libtool archive into another (currently\n\t# not supported by libtool).\n\tif (for obj in $oldobjs\n\t    do\n\t      func_basename \"$obj\"\n\t      $ECHO \"$func_basename_result\"\n\t    done | sort | sort -uc >/dev/null 2>&1); then\n\t  :\n\telse\n\t  echo \"copying selected object files to avoid basename conflicts...\"\n\t  gentop=$output_objdir/${outputname}x\n\t  func_append generated \" $gentop\"\n\t  func_mkdir_p \"$gentop\"\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  counter=1\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_basename \"$obj\"\n\t    objbase=$func_basename_result\n\t    case \" $oldobjs \" in\n\t    \" \") oldobjs=$obj ;;\n\t    *[\\ /]\"$objbase \"*)\n\t      while :; do\n\t\t# Make sure we don't pick an alternate name that also\n\t\t# overlaps.\n\t\tnewobj=lt$counter-$objbase\n\t\tfunc_arith $counter + 1\n\t\tcounter=$func_arith_result\n\t\tcase \" $oldobjs \" in\n\t\t*[\\ /]\"$newobj \"*) ;;\n\t\t*) if test ! -f \"$gentop/$newobj\"; then break; fi ;;\n\t\tesac\n\t      done\n\t      func_show_eval \"ln $obj $gentop/$newobj || cp $obj $gentop/$newobj\"\n\t      func_append oldobjs \" $gentop/$newobj\"\n\t      ;;\n\t    *) func_append oldobjs \" $obj\" ;;\n\t    esac\n\t  done\n\tfi\n\tfunc_to_tool_file \"$oldlib\" func_convert_file_msys_to_w32\n\ttool_oldlib=$func_to_tool_file_result\n\teval cmds=\\\"$old_archive_cmds\\\"\n\n\tfunc_len \" $cmds\"\n\tlen=$func_len_result\n\tif test \"$len\" -lt \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  cmds=$old_archive_cmds\n\telif test -n \"$archiver_list_spec\"; then\n\t  func_verbose \"using command file archive linking...\"\n\t  for obj in $oldobjs\n\t  do\n\t    func_to_tool_file \"$obj\"\n\t    $ECHO \"$func_to_tool_file_result\"\n\t  done > $output_objdir/$libname.libcmd\n\t  func_to_tool_file \"$output_objdir/$libname.libcmd\"\n\t  oldobjs=\" $archiver_list_spec$func_to_tool_file_result\"\n\t  cmds=$old_archive_cmds\n\telse\n\t  # the command line is too long to link in one step, link in parts\n\t  func_verbose \"using piecewise archive linking...\"\n\t  save_RANLIB=$RANLIB\n\t  RANLIB=:\n\t  objlist=\n\t  concat_cmds=\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  # Is there a better way of finding the last object in the list?\n\t  for obj in $save_oldobjs\n\t  do\n\t    last_oldobj=$obj\n\t  done\n\t  eval test_cmds=\\\"$old_archive_cmds\\\"\n\t  func_len \" $test_cmds\"\n\t  len0=$func_len_result\n\t  len=$len0\n\t  for obj in $save_oldobjs\n\t  do\n\t    func_len \" $obj\"\n\t    func_arith $len + $func_len_result\n\t    len=$func_arith_result\n\t    func_append objlist \" $obj\"\n\t    if test \"$len\" -lt \"$max_cmd_len\"; then\n\t      :\n\t    else\n\t      # the above command should be used before it gets too long\n\t      oldobjs=$objlist\n\t      if test \"$obj\" = \"$last_oldobj\"; then\n\t\tRANLIB=$save_RANLIB\n\t      fi\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\$concat_cmds$old_archive_cmds\\\"\n\t      objlist=\n\t      len=$len0\n\t    fi\n\t  done\n\t  RANLIB=$save_RANLIB\n\t  oldobjs=$objlist\n\t  if test -z \"$oldobjs\"; then\n\t    eval cmds=\\\"\\$concat_cmds\\\"\n\t  else\n\t    eval cmds=\\\"\\$concat_cmds~\\$old_archive_cmds\\\"\n\t  fi\n\tfi\n      fi\n      func_execute_cmds \"$cmds\" 'exit $?'\n    done\n\n    test -n \"$generated\" && \\\n      func_show_eval \"${RM}r$generated\"\n\n    # Now create the libtool archive.\n    case $output in\n    *.la)\n      old_library=\n      test yes = \"$build_old_libs\" && old_library=$libname.$libext\n      func_verbose \"creating $output\"\n\n      # Preserve any variables that may affect compiler behavior\n      for var in $variables_saved_for_relink; do\n\tif eval test -z \\\"\\${$var+set}\\\"; then\n\t  relink_command=\"{ test -z \\\"\\${$var+set}\\\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command\"\n\telif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t  relink_command=\"$var=; export $var; $relink_command\"\n\telse\n\t  func_quote_for_eval \"$var_value\"\n\t  relink_command=\"$var=$func_quote_for_eval_result; export $var; $relink_command\"\n\tfi\n      done\n      # Quote the link command for shipping.\n      relink_command=\"(cd `pwd`; $SHELL \\\"$progpath\\\" $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)\"\n      relink_command=`$ECHO \"$relink_command\" | $SED \"$sed_quote_subst\"`\n      if test yes = \"$hardcode_automatic\"; then\n\trelink_command=\n      fi\n\n      # Only create the output if not a dry run.\n      $opt_dry_run || {\n\tfor installed in no yes; do\n\t  if test yes = \"$installed\"; then\n\t    if test -z \"$install_libdir\"; then\n\t      break\n\t    fi\n\t    output=$output_objdir/${outputname}i\n\t    # Replace all uninstalled libtool libraries with the installed ones\n\t    newdependency_libs=\n\t    for deplib in $dependency_libs; do\n\t      case $deplib in\n\t      *.la)\n\t\tfunc_basename \"$deplib\"\n\t\tname=$func_basename_result\n\t\tfunc_resolve_sysroot \"$deplib\"\n\t\teval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $func_resolve_sysroot_result`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"'$deplib' is not a valid libtool archive\"\n\t\tfunc_append newdependency_libs \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      -L*)\n\t\tfunc_stripname -L '' \"$deplib\"\n\t\tfunc_replace_sysroot \"$func_stripname_result\"\n\t\tfunc_append newdependency_libs \" -L$func_replace_sysroot_result\"\n\t\t;;\n\t      -R*)\n\t\tfunc_stripname -R '' \"$deplib\"\n\t\tfunc_replace_sysroot \"$func_stripname_result\"\n\t\tfunc_append newdependency_libs \" -R$func_replace_sysroot_result\"\n\t\t;;\n\t      *) func_append newdependency_libs \" $deplib\" ;;\n\t      esac\n\t    done\n\t    dependency_libs=$newdependency_libs\n\t    newdlfiles=\n\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t      *.la)\n\t        func_basename \"$lib\"\n\t\tname=$func_basename_result\n\t\teval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"'$lib' is not a valid libtool archive\"\n\t\tfunc_append newdlfiles \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      *) func_append newdlfiles \" $lib\" ;;\n\t      esac\n\t    done\n\t    dlfiles=$newdlfiles\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t      *.la)\n\t\t# Only pass preopened files to the pseudo-archive (for\n\t\t# eventual linking with the app. that links it) if we\n\t\t# didn't already link the preopened objects directly into\n\t\t# the library:\n\t\tfunc_basename \"$lib\"\n\t\tname=$func_basename_result\n\t\teval libdir=`$SED -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t\ttest -z \"$libdir\" && \\\n\t\t  func_fatal_error \"'$lib' is not a valid libtool archive\"\n\t\tfunc_append newdlprefiles \" ${lt_sysroot:+=}$libdir/$name\"\n\t\t;;\n\t      esac\n\t    done\n\t    dlprefiles=$newdlprefiles\n\t  else\n\t    newdlfiles=\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=$lib ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      func_append newdlfiles \" $abs\"\n\t    done\n\t    dlfiles=$newdlfiles\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=$lib ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      func_append newdlprefiles \" $abs\"\n\t    done\n\t    dlprefiles=$newdlprefiles\n\t  fi\n\t  $RM $output\n\t  # place dlname in correct position for cygwin\n\t  # In fact, it would be nice if we could use this code for all target\n\t  # systems that can't hard-code library paths into their executables\n\t  # and that have no shared library path variable independent of PATH,\n\t  # but it turns out we can't easily determine that from inspecting\n\t  # libtool variables, so we have to hard-code the OSs to which it\n\t  # applies here; at the moment, that means platforms that use the PE\n\t  # object format with DLL files.  See the long comment at the top of\n\t  # tests/bindir.at for full details.\n\t  tdlname=$dlname\n\t  case $host,$output,$installed,$module,$dlname in\n\t    *cygwin*,*lai,yes,no,*.dll | *mingw*,*lai,yes,no,*.dll | *cegcc*,*lai,yes,no,*.dll)\n\t      # If a -bindir argument was supplied, place the dll there.\n\t      if test -n \"$bindir\"; then\n\t\tfunc_relative_path \"$install_libdir\" \"$bindir\"\n\t\ttdlname=$func_relative_path_result/$dlname\n\t      else\n\t\t# Otherwise fall back on heuristic.\n\t\ttdlname=../bin/$dlname\n\t      fi\n\t      ;;\n\t  esac\n\t  $ECHO > $output \"\\\n# $outputname - a libtool library file\n# Generated by $PROGRAM (GNU $PACKAGE) $VERSION\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# The name that we can dlopen(3).\ndlname='$tdlname'\n\n# Names of this library.\nlibrary_names='$library_names'\n\n# The name of the static archive.\nold_library='$old_library'\n\n# Linker flags that cannot go in dependency_libs.\ninherited_linker_flags='$new_inherited_linker_flags'\n\n# Libraries that this one depends upon.\ndependency_libs='$dependency_libs'\n\n# Names of additional weak libraries provided by this library\nweak_library_names='$weak_libs'\n\n# Version information for $libname.\ncurrent=$current\nage=$age\nrevision=$revision\n\n# Is this an already installed library?\ninstalled=$installed\n\n# Should we warn about portability when linking against -modules?\nshouldnotlink=$module\n\n# Files to dlopen/dlpreopen\ndlopen='$dlfiles'\ndlpreopen='$dlprefiles'\n\n# Directory that this library needs to be installed in:\nlibdir='$install_libdir'\"\n\t  if test no,yes = \"$installed,$need_relink\"; then\n\t    $ECHO >> $output \"\\\nrelink_command=\\\"$relink_command\\\"\"\n\t  fi\n\tdone\n      }\n\n      # Do a symbolic link so that the libtool archive can be found in\n      # LD_LIBRARY_PATH before the program is installed.\n      func_show_eval '( cd \"$output_objdir\" && $RM \"$outputname\" && $LN_S \"../$outputname\" \"$outputname\" )' 'exit $?'\n      ;;\n    esac\n    exit $EXIT_SUCCESS\n}\n\nif test link = \"$opt_mode\" || test relink = \"$opt_mode\"; then\n  func_mode_link ${1+\"$@\"}\nfi\n\n\n# func_mode_uninstall arg...\nfunc_mode_uninstall ()\n{\n    $debug_cmd\n\n    RM=$nonopt\n    files=\n    rmforce=false\n    exit_status=0\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=$magic\n\n    for arg\n    do\n      case $arg in\n      -f) func_append RM \" $arg\"; rmforce=: ;;\n      -*) func_append RM \" $arg\" ;;\n      *) func_append files \" $arg\" ;;\n      esac\n    done\n\n    test -z \"$RM\" && \\\n      func_fatal_help \"you must specify an RM program\"\n\n    rmdirs=\n\n    for file in $files; do\n      func_dirname \"$file\" \"\" \".\"\n      dir=$func_dirname_result\n      if test . = \"$dir\"; then\n\todir=$objdir\n      else\n\todir=$dir/$objdir\n      fi\n      func_basename \"$file\"\n      name=$func_basename_result\n      test uninstall = \"$opt_mode\" && odir=$dir\n\n      # Remember odir for removal later, being careful to avoid duplicates\n      if test clean = \"$opt_mode\"; then\n\tcase \" $rmdirs \" in\n\t  *\" $odir \"*) ;;\n\t  *) func_append rmdirs \" $odir\" ;;\n\tesac\n      fi\n\n      # Don't error if the file doesn't exist and rm -f was used.\n      if { test -L \"$file\"; } >/dev/null 2>&1 ||\n\t { test -h \"$file\"; } >/dev/null 2>&1 ||\n\t test -f \"$file\"; then\n\t:\n      elif test -d \"$file\"; then\n\texit_status=1\n\tcontinue\n      elif $rmforce; then\n\tcontinue\n      fi\n\n      rmfiles=$file\n\n      case $name in\n      *.la)\n\t# Possibly a libtool archive, so verify it.\n\tif func_lalib_p \"$file\"; then\n\t  func_source $dir/$name\n\n\t  # Delete the libtool libraries and symlinks.\n\t  for n in $library_names; do\n\t    func_append rmfiles \" $odir/$n\"\n\t  done\n\t  test -n \"$old_library\" && func_append rmfiles \" $odir/$old_library\"\n\n\t  case $opt_mode in\n\t  clean)\n\t    case \" $library_names \" in\n\t    *\" $dlname \"*) ;;\n\t    *) test -n \"$dlname\" && func_append rmfiles \" $odir/$dlname\" ;;\n\t    esac\n\t    test -n \"$libdir\" && func_append rmfiles \" $odir/$name $odir/${name}i\"\n\t    ;;\n\t  uninstall)\n\t    if test -n \"$library_names\"; then\n\t      # Do each command in the postuninstall commands.\n\t      func_execute_cmds \"$postuninstall_cmds\" '$rmforce || exit_status=1'\n\t    fi\n\n\t    if test -n \"$old_library\"; then\n\t      # Do each command in the old_postuninstall commands.\n\t      func_execute_cmds \"$old_postuninstall_cmds\" '$rmforce || exit_status=1'\n\t    fi\n\t    # FIXME: should reinstall the best remaining shared library.\n\t    ;;\n\t  esac\n\tfi\n\t;;\n\n      *.lo)\n\t# Possibly a libtool object, so verify it.\n\tif func_lalib_p \"$file\"; then\n\n\t  # Read the .lo file\n\t  func_source $dir/$name\n\n\t  # Add PIC object to the list of files to remove.\n\t  if test -n \"$pic_object\" && test none != \"$pic_object\"; then\n\t    func_append rmfiles \" $dir/$pic_object\"\n\t  fi\n\n\t  # Add non-PIC object to the list of files to remove.\n\t  if test -n \"$non_pic_object\" && test none != \"$non_pic_object\"; then\n\t    func_append rmfiles \" $dir/$non_pic_object\"\n\t  fi\n\tfi\n\t;;\n\n      *)\n\tif test clean = \"$opt_mode\"; then\n\t  noexename=$name\n\t  case $file in\n\t  *.exe)\n\t    func_stripname '' '.exe' \"$file\"\n\t    file=$func_stripname_result\n\t    func_stripname '' '.exe' \"$name\"\n\t    noexename=$func_stripname_result\n\t    # $file with .exe has already been added to rmfiles,\n\t    # add $file without .exe\n\t    func_append rmfiles \" $file\"\n\t    ;;\n\t  esac\n\t  # Do a test to see if this is a libtool program.\n\t  if func_ltwrapper_p \"$file\"; then\n\t    if func_ltwrapper_executable_p \"$file\"; then\n\t      func_ltwrapper_scriptname \"$file\"\n\t      relink_command=\n\t      func_source $func_ltwrapper_scriptname_result\n\t      func_append rmfiles \" $func_ltwrapper_scriptname_result\"\n\t    else\n\t      relink_command=\n\t      func_source $dir/$noexename\n\t    fi\n\n\t    # note $name still contains .exe if it was in $file originally\n\t    # as does the version of $file that was added into $rmfiles\n\t    func_append rmfiles \" $odir/$name $odir/${name}S.$objext\"\n\t    if test yes = \"$fast_install\" && test -n \"$relink_command\"; then\n\t      func_append rmfiles \" $odir/lt-$name\"\n\t    fi\n\t    if test \"X$noexename\" != \"X$name\"; then\n\t      func_append rmfiles \" $odir/lt-$noexename.c\"\n\t    fi\n\t  fi\n\tfi\n\t;;\n      esac\n      func_show_eval \"$RM $rmfiles\" 'exit_status=1'\n    done\n\n    # Try to remove the $objdir's in the directories where we deleted files\n    for dir in $rmdirs; do\n      if test -d \"$dir\"; then\n\tfunc_show_eval \"rmdir $dir >/dev/null 2>&1\"\n      fi\n    done\n\n    exit $exit_status\n}\n\nif test uninstall = \"$opt_mode\" || test clean = \"$opt_mode\"; then\n  func_mode_uninstall ${1+\"$@\"}\nfi\n\ntest -z \"$opt_mode\" && {\n  help=$generic_help\n  func_fatal_help \"you must specify a MODE\"\n}\n\ntest -z \"$exec_cmd\" && \\\n  func_fatal_help \"invalid operation mode '$opt_mode'\"\n\nif test -n \"$exec_cmd\"; then\n  eval exec \"$exec_cmd\"\n  exit $EXIT_FAILURE\nfi\n\nexit $exit_status\n\n\n# The TAGs below are defined such that we never get into a situation\n# where we disable both kinds of libraries.  Given conflicting\n# choices, we go for a static library, that is the most portable,\n# since we can't tell whether shared libraries were disabled because\n# the user asked for that or because the platform doesn't support\n# them.  This is particularly important on AIX, because we don't\n# support having both static and shared libraries enabled at the same\n# time on that platform, so we default to a shared-only configuration.\n# If a disable-shared tag is given, we'll fallback to a static-only\n# configuration.  But we'll never go from static-only to shared-only.\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-shared\nbuild_libtool_libs=no\nbuild_old_libs=yes\n# ### END LIBTOOL TAG CONFIG: disable-shared\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-static\nbuild_old_libs=`case $build_libtool_libs in yes) echo no;; *) echo yes;; esac`\n# ### END LIBTOOL TAG CONFIG: disable-static\n\n# Local Variables:\n# mode:shell-script\n# sh-indentation:2\n# End:\n",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/config/cmake_ext_mod/ConfigureChecks.cmake": "#\n# Copyright by The HDF Group.\n# All rights reserved.\n#\n# This file is part of HDF5.  The full HDF5 copyright notice, including\n# terms governing use, modification, and redistribution, is contained in\n# the COPYING file, which can be found at the root of the source code\n# distribution tree, or in https://support.hdfgroup.org/ftp/HDF5/releases.\n# If you do not have access to either file, you may request a copy from\n# help@hdfgroup.org.\n#\n#-----------------------------------------------------------------------------\n# Include all the necessary files for macros\n#-----------------------------------------------------------------------------\ninclude (CheckFunctionExists)\ninclude (CheckIncludeFile)\ninclude (CheckIncludeFiles)\ninclude (CheckLibraryExists)\ninclude (CheckSymbolExists)\ninclude (CheckTypeSize)\ninclude (CheckVariableExists)\ninclude (TestBigEndian)\n\n#-----------------------------------------------------------------------------\n# APPLE/Darwin setup\n#-----------------------------------------------------------------------------\nif (APPLE)\n  list (LENGTH CMAKE_OSX_ARCHITECTURES ARCH_LENGTH)\n  if (ARCH_LENGTH GREATER 1)\n    set (CMAKE_OSX_ARCHITECTURES \"\" CACHE STRING \"\" FORCE)\n    message (FATAL_ERROR \"Building Universal Binaries on OS X is NOT supported by the HDF5 project. This is\"\n    \"due to technical reasons. The best approach would be build each architecture in separate directories\"\n    \"and use the 'lipo' tool to combine them into a single executable or library. The 'CMAKE_OSX_ARCHITECTURES'\"\n    \"variable has been set to a blank value which will build the default architecture for this system.\")\n  endif ()\n  set (${HDF_PREFIX}_AC_APPLE_UNIVERSAL_BUILD 0)\nendif ()\n\n# Check for Darwin (not just Apple - we also want to catch OpenDarwin)\nif (${CMAKE_SYSTEM_NAME} MATCHES \"Darwin\")\n    set (${HDF_PREFIX}_HAVE_DARWIN 1)\nendif ()\n\n# Check for Solaris\nif (${CMAKE_SYSTEM_NAME} MATCHES \"SunOS\")\n    set (${HDF_PREFIX}_HAVE_SOLARIS 1)\nendif ()\n\n#-----------------------------------------------------------------------------\n# This MACRO checks IF the symbol exists in the library and IF it\n# does, it appends library to the list.\n#-----------------------------------------------------------------------------\nset (LINK_LIBS \"\")\nmacro (CHECK_LIBRARY_EXISTS_CONCAT LIBRARY SYMBOL VARIABLE)\n  CHECK_LIBRARY_EXISTS (\"${LIBRARY};${LINK_LIBS}\" ${SYMBOL} \"\" ${VARIABLE})\n  if (${VARIABLE})\n    set (LINK_LIBS ${LINK_LIBS} ${LIBRARY})\n  endif ()\nendmacro ()\n\n# ----------------------------------------------------------------------\n# WINDOWS Hard code Values\n# ----------------------------------------------------------------------\nset (WINDOWS)\n\nif (MINGW)\n  set (${HDF_PREFIX}_HAVE_MINGW 1)\n  set (WINDOWS 1) # MinGW tries to imitate Windows\n  set (CMAKE_REQUIRED_FLAGS \"-DWIN32_LEAN_AND_MEAN=1 -DNOGDI=1\")\n  set (${HDF_PREFIX}_HAVE_WINSOCK2_H 1)\nendif ()\n\nif (WIN32 AND NOT MINGW)\n  if (NOT UNIX)\n    set (WINDOWS 1)\n    set (CMAKE_REQUIRED_FLAGS \"/DWIN32_LEAN_AND_MEAN=1 /DNOGDI=1\")\n    if (MSVC)\n      set (${HDF_PREFIX}_HAVE_VISUAL_STUDIO 1)\n    endif ()\n  endif ()\nendif ()\n\nif (WINDOWS)\n  set (HDF5_REQUIRED_LIBRARIES \"ws2_32.lib;wsock32.lib\")\n  set (${HDF_PREFIX}_HAVE_WIN32_API 1)\n  set (${HDF_PREFIX}_HAVE_LIBM 1)\n  set (${HDF_PREFIX}_HAVE_STRDUP 1)\n  set (${HDF_PREFIX}_HAVE_SYSTEM 1)\n  set (${HDF_PREFIX}_HAVE_LONGJMP 1)\n  if (NOT MINGW)\n    set (${HDF_PREFIX}_HAVE_GETHOSTNAME 1)\n    set (${HDF_PREFIX}_HAVE_FUNCTION 1)\n  endif ()\n  if (NOT UNIX AND NOT CYGWIN)\n    set (${HDF_PREFIX}_HAVE_GETCONSOLESCREENBUFFERINFO 1)\n    set (${HDF_PREFIX}_GETTIMEOFDAY_GIVES_TZ 1)\n    set (${HDF_PREFIX}_HAVE_TIMEZONE 1)\n    set (${HDF_PREFIX}_HAVE_GETTIMEOFDAY 1)\n    set (${HDF_PREFIX}_HAVE_LIBWS2_32 1)\n    set (${HDF_PREFIX}_HAVE_LIBWSOCK32 1)\n  endif ()\nendif ()\n\n# ----------------------------------------------------------------------\n# END of WINDOWS Hard code Values\n# ----------------------------------------------------------------------\n\nif (NOT WINDOWS)\n  TEST_BIG_ENDIAN (${HDF_PREFIX}_WORDS_BIGENDIAN)\nendif ()\n\n#-----------------------------------------------------------------------------\n# Check IF header file exists and add it to the list.\n#-----------------------------------------------------------------------------\nmacro (CHECK_INCLUDE_FILE_CONCAT FILE VARIABLE)\n  CHECK_INCLUDE_FILES (\"${USE_INCLUDES};${FILE}\" ${VARIABLE})\n  if (${VARIABLE})\n    set (USE_INCLUDES ${USE_INCLUDES} ${FILE})\n  endif ()\nendmacro ()\n\n#-----------------------------------------------------------------------------\n#  Check for the existence of certain header files\n#-----------------------------------------------------------------------------\nCHECK_INCLUDE_FILE_CONCAT (\"sys/file.h\"      ${HDF_PREFIX}_HAVE_SYS_FILE_H)\nCHECK_INCLUDE_FILE_CONCAT (\"sys/ioctl.h\"     ${HDF_PREFIX}_HAVE_SYS_IOCTL_H)\nCHECK_INCLUDE_FILE_CONCAT (\"sys/resource.h\"  ${HDF_PREFIX}_HAVE_SYS_RESOURCE_H)\nCHECK_INCLUDE_FILE_CONCAT (\"sys/socket.h\"    ${HDF_PREFIX}_HAVE_SYS_SOCKET_H)\nCHECK_INCLUDE_FILE_CONCAT (\"sys/stat.h\"      ${HDF_PREFIX}_HAVE_SYS_STAT_H)\nCHECK_INCLUDE_FILE_CONCAT (\"sys/time.h\"      ${HDF_PREFIX}_HAVE_SYS_TIME_H)\nCHECK_INCLUDE_FILE_CONCAT (\"sys/types.h\"     ${HDF_PREFIX}_HAVE_SYS_TYPES_H)\nCHECK_INCLUDE_FILE_CONCAT (\"features.h\"      ${HDF_PREFIX}_HAVE_FEATURES_H)\nCHECK_INCLUDE_FILE_CONCAT (\"dirent.h\"        ${HDF_PREFIX}_HAVE_DIRENT_H)\nCHECK_INCLUDE_FILE_CONCAT (\"setjmp.h\"        ${HDF_PREFIX}_HAVE_SETJMP_H)\nCHECK_INCLUDE_FILE_CONCAT (\"stddef.h\"        ${HDF_PREFIX}_HAVE_STDDEF_H)\nCHECK_INCLUDE_FILE_CONCAT (\"stdint.h\"        ${HDF_PREFIX}_HAVE_STDINT_H)\nCHECK_INCLUDE_FILE_CONCAT (\"unistd.h\"        ${HDF_PREFIX}_HAVE_UNISTD_H)\n\n# Darwin\nCHECK_INCLUDE_FILE_CONCAT (\"mach/mach_time.h\" ${HDF_PREFIX}_HAVE_MACH_MACH_TIME_H)\n\n# Windows\nCHECK_INCLUDE_FILE_CONCAT (\"io.h\"            ${HDF_PREFIX}_HAVE_IO_H)\nif (NOT CYGWIN)\n  CHECK_INCLUDE_FILE_CONCAT (\"winsock2.h\"      ${HDF_PREFIX}_HAVE_WINSOCK2_H)\nendif ()\nCHECK_INCLUDE_FILE_CONCAT (\"sys/timeb.h\"     ${HDF_PREFIX}_HAVE_SYS_TIMEB_H)\n\nif (CMAKE_SYSTEM_NAME MATCHES \"OSF\")\n  CHECK_INCLUDE_FILE_CONCAT (\"sys/sysinfo.h\" ${HDF_PREFIX}_HAVE_SYS_SYSINFO_H)\n  CHECK_INCLUDE_FILE_CONCAT (\"sys/proc.h\"    ${HDF_PREFIX}_HAVE_SYS_PROC_H)\nelse ()\n  set (${HDF_PREFIX}_HAVE_SYS_SYSINFO_H \"\" CACHE INTERNAL \"\" FORCE)\n  set (${HDF_PREFIX}_HAVE_SYS_PROC_H    \"\" CACHE INTERNAL \"\" FORCE)\nendif ()\n\nCHECK_INCLUDE_FILE_CONCAT (\"globus/common.h\" ${HDF_PREFIX}_HAVE_GLOBUS_COMMON_H)\nCHECK_INCLUDE_FILE_CONCAT (\"pdb.h\"           ${HDF_PREFIX}_HAVE_PDB_H)\nCHECK_INCLUDE_FILE_CONCAT (\"pthread.h\"       ${HDF_PREFIX}_HAVE_PTHREAD_H)\nCHECK_INCLUDE_FILE_CONCAT (\"srbclient.h\"     ${HDF_PREFIX}_HAVE_SRBCLIENT_H)\nCHECK_INCLUDE_FILE_CONCAT (\"string.h\"        ${HDF_PREFIX}_HAVE_STRING_H)\nCHECK_INCLUDE_FILE_CONCAT (\"strings.h\"       ${HDF_PREFIX}_HAVE_STRINGS_H)\nCHECK_INCLUDE_FILE_CONCAT (\"stdlib.h\"        ${HDF_PREFIX}_HAVE_STDLIB_H)\nCHECK_INCLUDE_FILE_CONCAT (\"memory.h\"        ${HDF_PREFIX}_HAVE_MEMORY_H)\nCHECK_INCLUDE_FILE_CONCAT (\"dlfcn.h\"         ${HDF_PREFIX}_HAVE_DLFCN_H)\nCHECK_INCLUDE_FILE_CONCAT (\"inttypes.h\"      ${HDF_PREFIX}_HAVE_INTTYPES_H)\nCHECK_INCLUDE_FILE_CONCAT (\"netinet/in.h\"    ${HDF_PREFIX}_HAVE_NETINET_IN_H)\n# _Bool type support\nCHECK_INCLUDE_FILE_CONCAT (stdbool.h    ${HDF_PREFIX}_HAVE_STDBOOL_H)\n\n## Check for non-standard extenstion quadmath.h\n\nCHECK_INCLUDE_FILES(quadmath.h C_HAVE_QUADMATH)\nif (${C_HAVE_QUADMATH})\n  set(${HDF_PREFIX}_HAVE_QUADMATH_H 1)\nelse ()\n  set(${HDF_PREFIX}_HAVE_QUADMATH_H 0)\nendif ()\n\nif (CYGWIN)\n  set (${HDF_PREFIX}_HAVE_LSEEK64 0)\nendif ()\n\n#-----------------------------------------------------------------------------\n#  Check for the math library \"m\"\n#-----------------------------------------------------------------------------\nif (MINGW OR NOT WINDOWS)\n  CHECK_LIBRARY_EXISTS_CONCAT (\"m\" ceil     ${HDF_PREFIX}_HAVE_LIBM)\n  CHECK_LIBRARY_EXISTS_CONCAT (\"dl\" dlopen     ${HDF_PREFIX}_HAVE_LIBDL)\n  CHECK_LIBRARY_EXISTS_CONCAT (\"ws2_32\" WSAStartup  ${HDF_PREFIX}_HAVE_LIBWS2_32)\n  CHECK_LIBRARY_EXISTS_CONCAT (\"wsock32\" gethostbyname ${HDF_PREFIX}_HAVE_LIBWSOCK32)\nendif ()\n\n# UCB (BSD) compatibility library\nCHECK_LIBRARY_EXISTS_CONCAT (\"ucb\"    gethostname  ${HDF_PREFIX}_HAVE_LIBUCB)\n\n# For other tests to use the same libraries\nset (HDF5_REQUIRED_LIBRARIES ${HDF5_REQUIRED_LIBRARIES} ${LINK_LIBS})\n\nset (USE_INCLUDES \"\")\nif (WINDOWS)\n  set (USE_INCLUDES ${USE_INCLUDES} \"windows.h\")\nendif ()\n\n# For other specific tests, use this MACRO.\nmacro (HDF_FUNCTION_TEST OTHER_TEST)\n  if (NOT DEFINED ${HDF_PREFIX}_${OTHER_TEST})\n    set (MACRO_CHECK_FUNCTION_DEFINITIONS \"-D${OTHER_TEST} ${CMAKE_REQUIRED_FLAGS}\")\n\n    foreach (def\n        HAVE_SYS_TIME_H\n        HAVE_UNISTD_H\n        HAVE_SYS_TYPES_H\n        HAVE_SYS_SOCKET_H\n    )\n      if (\"${${HDF_PREFIX}_${def}}\")\n        set (MACRO_CHECK_FUNCTION_DEFINITIONS \"${MACRO_CHECK_FUNCTION_DEFINITIONS} -D${def}\")\n      endif ()\n    endforeach ()\n\n    if (LARGEFILE)\n      set (MACRO_CHECK_FUNCTION_DEFINITIONS\n          \"${MACRO_CHECK_FUNCTION_DEFINITIONS} -D_FILE_OFFSET_BITS=64 -D_LARGEFILE64_SOURCE -D_LARGEFILE_SOURCE\"\n      )\n    endif ()\n\n    #message (STATUS \"Performing ${OTHER_TEST}\")\n    try_compile (${OTHER_TEST}\n        ${CMAKE_BINARY_DIR}\n        ${HDF_RESOURCES_EXT_DIR}/HDFTests.c\n        COMPILE_DEFINITIONS \"${MACRO_CHECK_FUNCTION_DEFINITIONS}\"\n        LINK_LIBRARIES \"${HDF5_REQUIRED_LIBRARIES}\"\n        OUTPUT_VARIABLE OUTPUT\n    )\n    if (${OTHER_TEST})\n      set (${HDF_PREFIX}_${OTHER_TEST} 1 CACHE INTERNAL \"Other test ${FUNCTION}\")\n      message (STATUS \"Performing Other Test ${OTHER_TEST} - Success\")\n    else ()\n      message (STATUS \"Performing Other Test ${OTHER_TEST} - Failed\")\n      set (${HDF_PREFIX}_${OTHER_TEST} \"\" CACHE INTERNAL \"Other test ${FUNCTION}\")\n      file (APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log\n          \"Performing Other Test ${OTHER_TEST} failed with the following output:\\n\"\n          \"${OUTPUT}\\n\"\n      )\n    endif ()\n  endif ()\nendmacro ()\n\n#-----------------------------------------------------------------------------\n# Check for these functions before the time headers are checked\n#-----------------------------------------------------------------------------\nHDF_FUNCTION_TEST (STDC_HEADERS)\n\n#-----------------------------------------------------------------------------\n#  Check for large file support\n#-----------------------------------------------------------------------------\n\n# The linux-lfs option is deprecated.\nset (LINUX_LFS 0)\n\nset (HDF_EXTRA_C_FLAGS)\nset (HDF_EXTRA_FLAGS)\nif (MINGW OR NOT WINDOWS)\n  # Might want to check explicitly for Linux and possibly Cygwin\n  # instead of checking for not Solaris or Darwin.\n  if (NOT ${HDF_PREFIX}_HAVE_SOLARIS AND NOT ${HDF_PREFIX}_HAVE_DARWIN)\n  # Linux Specific flags\n  # This was originally defined as _POSIX_SOURCE which was updated to\n  # _POSIX_C_SOURCE=199506L to expose a greater amount of POSIX\n  # functionality so clock_gettime and CLOCK_MONOTONIC are defined\n  # correctly. This was later updated to 200112L so that\n  # posix_memalign() is visible for the direct VFD code on Linux\n  # systems.\n  # POSIX feature information can be found in the gcc manual at:\n  # http://www.gnu.org/s/libc/manual/html_node/Feature-Test-Macros.html\n  set (HDF_EXTRA_C_FLAGS -D_POSIX_C_SOURCE=200112L)\n\n  # Need to add this so that O_DIRECT is visible for the direct\n  # VFD on Linux systems.\n  set (HDF_EXTRA_C_FLAGS -D_GNU_SOURCE)\n\n  option (HDF_ENABLE_LARGE_FILE \"Enable support for large (64-bit) files on Linux.\" ON)\n  if (HDF_ENABLE_LARGE_FILE AND NOT DEFINED TEST_LFS_WORKS_RUN)\n    set (msg \"Performing TEST_LFS_WORKS\")\n    try_run (TEST_LFS_WORKS_RUN   TEST_LFS_WORKS_COMPILE\n        ${CMAKE_BINARY_DIR}\n        ${HDF_RESOURCES_EXT_DIR}/HDFTests.c\n        COMPILE_DEFINITIONS \"-DTEST_LFS_WORKS\"\n    )\n\n    # The LARGEFILE definitions were from the transition period\n    # and are probably no longer needed. The FILE_OFFSET_BITS\n    # check should be generalized for all POSIX systems as it\n    # is in the Autotools.\n    if (TEST_LFS_WORKS_COMPILE)\n      if (TEST_LFS_WORKS_RUN MATCHES 0)\n        set (TEST_LFS_WORKS 1 CACHE INTERNAL ${msg})\n        set (LARGEFILE 1)\n        set (HDF_EXTRA_FLAGS ${HDF_EXTRA_FLAGS} -D_FILE_OFFSET_BITS=64 -D_LARGEFILE64_SOURCE -D_LARGEFILE_SOURCE)\n        message (STATUS \"${msg}... yes\")\n      else ()\n        set (TEST_LFS_WORKS \"\" CACHE INTERNAL ${msg})\n        message (STATUS \"${msg}... no\")\n        file (APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log\n              \"Test TEST_LFS_WORKS Run failed with the following exit code:\\n ${TEST_LFS_WORKS_RUN}\\n\"\n        )\n      endif ()\n    else ()\n      set (TEST_LFS_WORKS \"\" CACHE INTERNAL ${msg})\n      message (STATUS \"${msg}... no\")\n      file (APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log\n          \"Test TEST_LFS_WORKS Compile failed\\n\"\n      )\n    endif ()\n  endif ()\n  set (CMAKE_REQUIRED_DEFINITIONS ${CMAKE_REQUIRED_DEFINITIONS} ${HDF_EXTRA_FLAGS})\n  endif ()\nendif ()\n\n#-----------------------------------------------------------------------------\n# Check for HAVE_OFF64_T functionality\n#-----------------------------------------------------------------------------\nif (MINGW OR NOT WINDOWS)\n  HDF_FUNCTION_TEST (HAVE_OFF64_T)\n  if (${HDF_PREFIX}_HAVE_OFF64_T)\n    CHECK_FUNCTION_EXISTS (lseek64            ${HDF_PREFIX}_HAVE_LSEEK64)\n  endif ()\n\n  CHECK_FUNCTION_EXISTS (fseeko               ${HDF_PREFIX}_HAVE_FSEEKO)\n\n  HDF_FUNCTION_TEST (HAVE_STAT64_STRUCT)\n  if (HAVE_STAT64_STRUCT)\n    CHECK_FUNCTION_EXISTS (stat64             ${HDF_PREFIX}_HAVE_STAT64)\n  endif ()\nendif ()\n\n#-----------------------------------------------------------------------------\n#  Check the size in bytes of all the int and float types\n#-----------------------------------------------------------------------------\nmacro (HDF_CHECK_TYPE_SIZE type var)\n  set (aType ${type})\n  set (aVar  ${var})\n#  message (STATUS \"Checking size of ${aType} and storing into ${aVar}\")\n  CHECK_TYPE_SIZE (${aType}   ${aVar})\n  if (NOT ${aVar})\n    set (${aVar} 0 CACHE INTERNAL \"SizeOf for ${aType}\")\n#    message (STATUS \"Size of ${aType} was NOT Found\")\n  endif ()\nendmacro ()\n\nHDF_CHECK_TYPE_SIZE (char           ${HDF_PREFIX}_SIZEOF_CHAR)\nHDF_CHECK_TYPE_SIZE (short          ${HDF_PREFIX}_SIZEOF_SHORT)\nHDF_CHECK_TYPE_SIZE (int            ${HDF_PREFIX}_SIZEOF_INT)\nHDF_CHECK_TYPE_SIZE (unsigned       ${HDF_PREFIX}_SIZEOF_UNSIGNED)\nif (NOT APPLE)\n  HDF_CHECK_TYPE_SIZE (long         ${HDF_PREFIX}_SIZEOF_LONG)\nendif ()\nHDF_CHECK_TYPE_SIZE (\"long long\"    ${HDF_PREFIX}_SIZEOF_LONG_LONG)\nHDF_CHECK_TYPE_SIZE (__int64        ${HDF_PREFIX}_SIZEOF___INT64)\nif (NOT ${HDF_PREFIX}_SIZEOF___INT64)\n  set (${HDF_PREFIX}_SIZEOF___INT64 0)\nendif ()\n\nHDF_CHECK_TYPE_SIZE (float          ${HDF_PREFIX}_SIZEOF_FLOAT)\nHDF_CHECK_TYPE_SIZE (double         ${HDF_PREFIX}_SIZEOF_DOUBLE)\nHDF_CHECK_TYPE_SIZE (\"long double\"  ${HDF_PREFIX}_SIZEOF_LONG_DOUBLE)\n\nHDF_CHECK_TYPE_SIZE (int8_t         ${HDF_PREFIX}_SIZEOF_INT8_T)\nHDF_CHECK_TYPE_SIZE (uint8_t        ${HDF_PREFIX}_SIZEOF_UINT8_T)\nHDF_CHECK_TYPE_SIZE (int_least8_t   ${HDF_PREFIX}_SIZEOF_INT_LEAST8_T)\nHDF_CHECK_TYPE_SIZE (uint_least8_t  ${HDF_PREFIX}_SIZEOF_UINT_LEAST8_T)\nHDF_CHECK_TYPE_SIZE (int_fast8_t    ${HDF_PREFIX}_SIZEOF_INT_FAST8_T)\nHDF_CHECK_TYPE_SIZE (uint_fast8_t   ${HDF_PREFIX}_SIZEOF_UINT_FAST8_T)\n\nHDF_CHECK_TYPE_SIZE (int16_t        ${HDF_PREFIX}_SIZEOF_INT16_T)\nHDF_CHECK_TYPE_SIZE (uint16_t       ${HDF_PREFIX}_SIZEOF_UINT16_T)\nHDF_CHECK_TYPE_SIZE (int_least16_t  ${HDF_PREFIX}_SIZEOF_INT_LEAST16_T)\nHDF_CHECK_TYPE_SIZE (uint_least16_t ${HDF_PREFIX}_SIZEOF_UINT_LEAST16_T)\nHDF_CHECK_TYPE_SIZE (int_fast16_t   ${HDF_PREFIX}_SIZEOF_INT_FAST16_T)\nHDF_CHECK_TYPE_SIZE (uint_fast16_t  ${HDF_PREFIX}_SIZEOF_UINT_FAST16_T)\n\nHDF_CHECK_TYPE_SIZE (int32_t        ${HDF_PREFIX}_SIZEOF_INT32_T)\nHDF_CHECK_TYPE_SIZE (uint32_t       ${HDF_PREFIX}_SIZEOF_UINT32_T)\nHDF_CHECK_TYPE_SIZE (int_least32_t  ${HDF_PREFIX}_SIZEOF_INT_LEAST32_T)\nHDF_CHECK_TYPE_SIZE (uint_least32_t ${HDF_PREFIX}_SIZEOF_UINT_LEAST32_T)\nHDF_CHECK_TYPE_SIZE (int_fast32_t   ${HDF_PREFIX}_SIZEOF_INT_FAST32_T)\nHDF_CHECK_TYPE_SIZE (uint_fast32_t  ${HDF_PREFIX}_SIZEOF_UINT_FAST32_T)\n\nHDF_CHECK_TYPE_SIZE (int64_t        ${HDF_PREFIX}_SIZEOF_INT64_T)\nHDF_CHECK_TYPE_SIZE (uint64_t       ${HDF_PREFIX}_SIZEOF_UINT64_T)\nHDF_CHECK_TYPE_SIZE (int_least64_t  ${HDF_PREFIX}_SIZEOF_INT_LEAST64_T)\nHDF_CHECK_TYPE_SIZE (uint_least64_t ${HDF_PREFIX}_SIZEOF_UINT_LEAST64_T)\nHDF_CHECK_TYPE_SIZE (int_fast64_t   ${HDF_PREFIX}_SIZEOF_INT_FAST64_T)\nHDF_CHECK_TYPE_SIZE (uint_fast64_t  ${HDF_PREFIX}_SIZEOF_UINT_FAST64_T)\n\nif (NOT APPLE)\n  HDF_CHECK_TYPE_SIZE (size_t       ${HDF_PREFIX}_SIZEOF_SIZE_T)\n  HDF_CHECK_TYPE_SIZE (ssize_t      ${HDF_PREFIX}_SIZEOF_SSIZE_T)\n  if (NOT ${HDF_PREFIX}_SIZEOF_SSIZE_T)\n    set (${HDF_PREFIX}_SIZEOF_SSIZE_T 0)\n  endif ()\n  if (MINGW OR NOT WINDOWS)\n    HDF_CHECK_TYPE_SIZE (ptrdiff_t    ${HDF_PREFIX}_SIZEOF_PTRDIFF_T)\n  endif ()\nendif ()\n\nHDF_CHECK_TYPE_SIZE (off_t          ${HDF_PREFIX}_SIZEOF_OFF_T)\nHDF_CHECK_TYPE_SIZE (off64_t        ${HDF_PREFIX}_SIZEOF_OFF64_T)\nif (NOT ${HDF_PREFIX}_SIZEOF_OFF64_T)\n  set (${HDF_PREFIX}_SIZEOF_OFF64_T 0)\nendif ()\nHDF_CHECK_TYPE_SIZE (time_t          ${HDF_PREFIX}_SIZEOF_TIME_T)\n\n#-----------------------------------------------------------------------------\n# Extra C99 types\n#-----------------------------------------------------------------------------\n\n# _Bool type support\nif (HAVE_STDBOOL_H)\n  set (CMAKE_EXTRA_INCLUDE_FILES stdbool.h)\n  HDF_CHECK_TYPE_SIZE (bool         ${HDF_PREFIX}_SIZEOF_BOOL)\nelse ()\n  HDF_CHECK_TYPE_SIZE (_Bool        ${HDF_PREFIX}_SIZEOF_BOOL)\nendif ()\n\nif (MINGW OR NOT WINDOWS)\n  #-----------------------------------------------------------------------------\n  # Check if the dev_t type is a scalar type\n  #-----------------------------------------------------------------------------\n  HDF_FUNCTION_TEST (DEV_T_IS_SCALAR)\n\n  # ----------------------------------------------------------------------\n  # Check for MONOTONIC_TIMER support (used in clock_gettime).  This has\n  # to be done after any POSIX/BSD defines to ensure that the test gets\n  # the correct POSIX level on linux.\n  CHECK_VARIABLE_EXISTS (CLOCK_MONOTONIC HAVE_CLOCK_MONOTONIC)\n\n  #-----------------------------------------------------------------------------\n  # Check a bunch of time functions\n  #-----------------------------------------------------------------------------\n  CHECK_FUNCTION_EXISTS (gettimeofday      ${HDF_PREFIX}_HAVE_GETTIMEOFDAY)\n  foreach (time_test\n      HAVE_TM_GMTOFF\n      HAVE___TM_GMTOFF\n#      HAVE_TIMEZONE\n      HAVE_STRUCT_TIMEZONE\n      GETTIMEOFDAY_GIVES_TZ\n      TIME_WITH_SYS_TIME\n      HAVE_TM_ZONE\n      HAVE_STRUCT_TM_TM_ZONE\n  )\n    HDF_FUNCTION_TEST (${time_test})\n  endforeach ()\n  if (NOT CYGWIN AND NOT MINGW)\n      HDF_FUNCTION_TEST (HAVE_TIMEZONE)\n#      HDF_FUNCTION_TEST (HAVE_STAT_ST_BLOCKS)\n  endif ()\n\n  # ----------------------------------------------------------------------\n  # Does the struct stat have the st_blocks field?  This field is not Posix.\n  #\n  HDF_FUNCTION_TEST (HAVE_STAT_ST_BLOCKS)\n\n  # ----------------------------------------------------------------------\n  # How do we figure out the width of a tty in characters?\n  #\n  CHECK_FUNCTION_EXISTS (ioctl             ${HDF_PREFIX}_HAVE_IOCTL)\n  HDF_FUNCTION_TEST (HAVE_STRUCT_VIDEOCONFIG)\n  HDF_FUNCTION_TEST (HAVE_STRUCT_TEXT_INFO)\n  CHECK_FUNCTION_EXISTS (_getvideoconfig   ${HDF_PREFIX}_HAVE__GETVIDEOCONFIG)\n  CHECK_FUNCTION_EXISTS (gettextinfo       ${HDF_PREFIX}_HAVE_GETTEXTINFO)\n  CHECK_FUNCTION_EXISTS (_scrsize          ${HDF_PREFIX}_HAVE__SCRSIZE)\n  if (NOT CYGWIN)\n    CHECK_FUNCTION_EXISTS (GetConsoleScreenBufferInfo    ${HDF_PREFIX}_HAVE_GETCONSOLESCREENBUFFERINFO)\n  endif ()\n  CHECK_SYMBOL_EXISTS (TIOCGWINSZ \"sys/ioctl.h\" ${HDF_PREFIX}_HAVE_TIOCGWINSZ)\n  CHECK_SYMBOL_EXISTS (TIOCGETD   \"sys/ioctl.h\" ${HDF_PREFIX}_HAVE_TIOCGETD)\n\n  # ----------------------------------------------------------------------\n  # cygwin user credentials are different then on linux\n  #\n  if (NOT CYGWIN AND NOT MINGW)\n    CHECK_FUNCTION_EXISTS (getpwuid        ${HDF_PREFIX}_HAVE_GETPWUID)\n  endif ()\nendif ()\n\n#-----------------------------------------------------------------------------\n# Check for some functions that are used\n#\nCHECK_FUNCTION_EXISTS (alarm             ${HDF_PREFIX}_HAVE_ALARM)\nCHECK_FUNCTION_EXISTS (fcntl             ${HDF_PREFIX}_HAVE_FCNTL)\nCHECK_FUNCTION_EXISTS (flock             ${HDF_PREFIX}_HAVE_FLOCK)\nCHECK_FUNCTION_EXISTS (fork              ${HDF_PREFIX}_HAVE_FORK)\nCHECK_FUNCTION_EXISTS (frexpf            ${HDF_PREFIX}_HAVE_FREXPF)\nCHECK_FUNCTION_EXISTS (frexpl            ${HDF_PREFIX}_HAVE_FREXPL)\n\nCHECK_FUNCTION_EXISTS (gethostname       ${HDF_PREFIX}_HAVE_GETHOSTNAME)\nCHECK_FUNCTION_EXISTS (getrusage         ${HDF_PREFIX}_HAVE_GETRUSAGE)\nCHECK_FUNCTION_EXISTS (llround           ${HDF_PREFIX}_HAVE_LLROUND)\nCHECK_FUNCTION_EXISTS (llroundf          ${HDF_PREFIX}_HAVE_LLROUNDF)\nCHECK_FUNCTION_EXISTS (lround            ${HDF_PREFIX}_HAVE_LROUND)\nCHECK_FUNCTION_EXISTS (lroundf           ${HDF_PREFIX}_HAVE_LROUNDF)\nCHECK_FUNCTION_EXISTS (lstat             ${HDF_PREFIX}_HAVE_LSTAT)\n\nCHECK_FUNCTION_EXISTS (pread             ${HDF_PREFIX}_HAVE_PREAD)\nCHECK_FUNCTION_EXISTS (pwrite            ${HDF_PREFIX}_HAVE_PWRITE)\nCHECK_FUNCTION_EXISTS (rand_r            ${HDF_PREFIX}_HAVE_RAND_R)\nCHECK_FUNCTION_EXISTS (random            ${HDF_PREFIX}_HAVE_RANDOM)\nCHECK_FUNCTION_EXISTS (round             ${HDF_PREFIX}_HAVE_ROUND)\nCHECK_FUNCTION_EXISTS (roundf            ${HDF_PREFIX}_HAVE_ROUNDF)\nCHECK_FUNCTION_EXISTS (setsysinfo        ${HDF_PREFIX}_HAVE_SETSYSINFO)\n\nCHECK_FUNCTION_EXISTS (signal            ${HDF_PREFIX}_HAVE_SIGNAL)\nCHECK_FUNCTION_EXISTS (longjmp           ${HDF_PREFIX}_HAVE_LONGJMP)\nCHECK_FUNCTION_EXISTS (setjmp            ${HDF_PREFIX}_HAVE_SETJMP)\nCHECK_FUNCTION_EXISTS (siglongjmp        ${HDF_PREFIX}_HAVE_SIGLONGJMP)\nCHECK_FUNCTION_EXISTS (sigsetjmp         ${HDF_PREFIX}_HAVE_SIGSETJMP)\nCHECK_FUNCTION_EXISTS (sigprocmask       ${HDF_PREFIX}_HAVE_SIGPROCMASK)\n\nCHECK_FUNCTION_EXISTS (snprintf          ${HDF_PREFIX}_HAVE_SNPRINTF)\nCHECK_FUNCTION_EXISTS (srandom           ${HDF_PREFIX}_HAVE_SRANDOM)\nCHECK_FUNCTION_EXISTS (strdup            ${HDF_PREFIX}_HAVE_STRDUP)\nCHECK_FUNCTION_EXISTS (strtoll           ${HDF_PREFIX}_HAVE_STRTOLL)\nCHECK_FUNCTION_EXISTS (strtoull          ${HDF_PREFIX}_HAVE_STRTOULL)\nCHECK_FUNCTION_EXISTS (symlink           ${HDF_PREFIX}_HAVE_SYMLINK)\nCHECK_FUNCTION_EXISTS (system            ${HDF_PREFIX}_HAVE_SYSTEM)\n\nCHECK_FUNCTION_EXISTS (tmpfile           ${HDF_PREFIX}_HAVE_TMPFILE)\nCHECK_FUNCTION_EXISTS (asprintf          ${HDF_PREFIX}_HAVE_ASPRINTF)\nCHECK_FUNCTION_EXISTS (vasprintf         ${HDF_PREFIX}_HAVE_VASPRINTF)\nCHECK_FUNCTION_EXISTS (waitpid           ${HDF_PREFIX}_HAVE_WAITPID)\n\nCHECK_FUNCTION_EXISTS (vsnprintf         ${HDF_PREFIX}_HAVE_VSNPRINTF)\nif (MINGW OR NOT WINDOWS)\n  if (${HDF_PREFIX}_HAVE_VSNPRINTF)\n    HDF_FUNCTION_TEST (VSNPRINTF_WORKS)\n  endif ()\nendif ()\n\n#-----------------------------------------------------------------------------\n# sigsetjmp is special; may actually be a macro\n#-----------------------------------------------------------------------------\nif (NOT ${HDF_PREFIX}_HAVE_SIGSETJMP)\n  if (${HDF_PREFIX}_HAVE_SETJMP_H)\n    CHECK_SYMBOL_EXISTS (sigsetjmp \"setjmp.h\" ${HDF_PREFIX}_HAVE_MACRO_SIGSETJMP)\n    if (${HDF_PREFIX}_HAVE_MACRO_SIGSETJMP)\n      set (${HDF_PREFIX}_HAVE_SIGSETJMP 1)\n    endif ()\n  endif ()\nendif ()\n\n#-----------------------------------------------------------------------------\n# Check a bunch of other functions\n#-----------------------------------------------------------------------------\nif (MINGW OR NOT WINDOWS)\n  foreach (other_test\n      HAVE_ATTRIBUTE\n      HAVE_C99_FUNC\n#      STDC_HEADERS\n      HAVE_FUNCTION\n      HAVE_C99_DESIGNATED_INITIALIZER\n      SYSTEM_SCOPE_THREADS\n      HAVE_SOCKLEN_T\n  )\n    HDF_FUNCTION_TEST (${other_test})\n  endforeach ()\nendif ()\n\n#-----------------------------------------------------------------------------\n# Check if InitOnceExecuteOnce is available\n#-----------------------------------------------------------------------------\nif (WINDOWS)\n  if (NOT HDF_NO_IOEO_TEST)\n  message (STATUS \"Checking for InitOnceExecuteOnce:\")\n  if (NOT DEFINED ${HDF_PREFIX}_HAVE_IOEO)\n    if (LARGEFILE)\n      set (CMAKE_REQUIRED_DEFINITIONS\n          \"${CURRENT_TEST_DEFINITIONS} -D_FILE_OFFSET_BITS=64 -D_LARGEFILE64_SOURCE -D_LARGEFILE_SOURCE\"\n      )\n    endif ()\n    set (MACRO_CHECK_FUNCTION_DEFINITIONS \"-DHAVE_IOEO ${CMAKE_REQUIRED_FLAGS}\")\n    if (CMAKE_REQUIRED_INCLUDES)\n      set (CHECK_C_SOURCE_COMPILES_ADD_INCLUDES \"-DINCLUDE_DIRECTORIES:STRING=${CMAKE_REQUIRED_INCLUDES}\")\n    else ()\n      set (CHECK_C_SOURCE_COMPILES_ADD_INCLUDES)\n    endif ()\n\n    TRY_RUN(HAVE_IOEO_EXITCODE HAVE_IOEO_COMPILED\n        ${CMAKE_BINARY_DIR}\n        ${HDF_RESOURCES_EXT_DIR}/HDFTests.c\n        COMPILE_DEFINITIONS \"${CMAKE_REQUIRED_DEFINITIONS} ${MACRO_CHECK_FUNCTION_DEFINITIONS}\"\n        LINK_LIBRARIES \"${HDF5_REQUIRED_LIBRARIES}\"\n        CMAKE_FLAGS \"${CHECK_C_SOURCE_COMPILES_ADD_INCLUDES} -DCMAKE_SKIP_RPATH:BOOL=${CMAKE_SKIP_RPATH}\"\n        COMPILE_OUTPUT_VARIABLE OUTPUT\n    )\n    # if it did not compile make the return value fail code of 1\n    if (NOT HAVE_IOEO_COMPILED)\n      set (HAVE_IOEO_EXITCODE 1)\n    endif ()\n    # if the return value was 0 then it worked\n    if (\"${HAVE_IOEO_EXITCODE}\" EQUAL 0)\n      set (${HDF_PREFIX}_HAVE_IOEO 1 CACHE INTERNAL \"Test InitOnceExecuteOnce\")\n      message (STATUS \"Performing Test InitOnceExecuteOnce - Success\")\n      file (APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log\n        \"Performing C SOURCE FILE Test InitOnceExecuteOnce succeded with the following output:\\n\"\n        \"${OUTPUT}\\n\"\n        \"Return value: ${HAVE_IOEO}\\n\")\n    else ()\n      if (CMAKE_CROSSCOMPILING AND \"${HAVE_IOEO_EXITCODE}\" MATCHES  \"FAILED_TO_RUN\")\n        set (${HDF_PREFIX}_HAVE_IOEO \"${HAVE_IOEO_EXITCODE}\")\n      else ()\n        set (${HDF_PREFIX}_HAVE_IOEO \"\" CACHE INTERNAL \"Test InitOnceExecuteOnce\")\n      endif ()\n\n      message (STATUS \"Performing Test InitOnceExecuteOnce - Failed\")\n      file (APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log\n        \"Performing InitOnceExecuteOnce Test  failed with the following output:\\n\"\n        \"${OUTPUT}\\n\"\n        \"Return value: ${HAVE_IOEO_EXITCODE}\\n\")\n    endif ()\n  endif ()\n  endif ()\nendif ()\n\n#-----------------------------------------------------------------------------\n# Determine how 'inline' is used\n#-----------------------------------------------------------------------------\nforeach (inline_test inline __inline__ __inline)\n  string (TOUPPER ${inline_test} INLINE_TEST_MACRO)\n  HDF_FUNCTION_TEST (HAVE_${INLINE_TEST_MACRO})\nendforeach ()\n\n#-----------------------------------------------------------------------------\n# Check how to print a Long Long integer\n#-----------------------------------------------------------------------------\nif (NOT ${HDF_PREFIX}_PRINTF_LL_WIDTH OR ${HDF_PREFIX}_PRINTF_LL_WIDTH MATCHES \"unknown\")\n  set (PRINT_LL_FOUND 0)\n  message (STATUS \"Checking for appropriate format for 64 bit long:\")\n  set (CURRENT_TEST_DEFINITIONS \"-DPRINTF_LL_WIDTH\")\n  if (${HDF_PREFIX}_SIZEOF_LONG_LONG)\n    set (CURRENT_TEST_DEFINITIONS \"${CURRENT_TEST_DEFINITIONS} -DHAVE_LONG_LONG\")\n  endif ()\n  TRY_RUN (${HDF_PREFIX}_PRINTF_LL_TEST_RUN   ${HDF_PREFIX}_PRINTF_LL_TEST_COMPILE\n      ${CMAKE_BINARY_DIR}\n      ${HDF_RESOURCES_EXT_DIR}/HDFTests.c\n      COMPILE_DEFINITIONS \"${CURRENT_TEST_DEFINITIONS}\"\n      RUN_OUTPUT_VARIABLE OUTPUT\n  )\n  if (${HDF_PREFIX}_PRINTF_LL_TEST_COMPILE)\n    if (${HDF_PREFIX}_PRINTF_LL_TEST_RUN MATCHES 0)\n      string(REGEX REPLACE \".*PRINTF_LL_WIDTH=\\\\[(.*)\\\\].*\" \"\\\\1\" ${HDF_PREFIX}_PRINTF_LL \"${OUTPUT}\")\n      set (${HDF_PREFIX}_PRINTF_LL_WIDTH \"\\\"${${HDF_PREFIX}_PRINTF_LL}\\\"\" CACHE INTERNAL \"Width for printf for type `long long' or `__int64', us. `ll\")\n      set (PRINT_LL_FOUND 1)\n    else ()\n      message (STATUS \"Width test failed with result: ${${HDF_PREFIX}_PRINTF_LL_TEST_RUN}\")\n    endif ()\n  else ()\n    file (APPEND ${CMAKE_BINARY_DIR}/CMakeFiles/CMakeError.log\n        \"Test ${HDF_PREFIX}_PRINTF_LL_WIDTH failed\\n\"\n    )\n  endif ()\n\n  if (PRINT_LL_FOUND)\n    message (STATUS \"Checking for appropriate format for 64 bit long: found ${${HDF_PREFIX}_PRINTF_LL_WIDTH}\")\n  else ()\n    message (STATUS \"Checking for appropriate format for 64 bit long: not found\")\n    set (${HDF_PREFIX}_PRINTF_LL_WIDTH \"\\\"unknown\\\"\" CACHE INTERNAL\n        \"Width for printf for type `long long' or `__int64', us. `ll\"\n    )\n  endif ()\nendif ()\n\n# ----------------------------------------------------------------------\n# Set the flag to indicate that the machine can handle converting\n# denormalized floating-point values.\n# (This flag should be set for all machines, except for the Crays, where\n# the cache value is set in it's config file)\n#\nset (${HDF_PREFIX}_CONVERT_DENORMAL_FLOAT 1)\n",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/src/H5PLpkg.h": "/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Copyright by The HDF Group.                                               *\n * Copyright by the Board of Trustees of the University of Illinois.         *\n * All rights reserved.                                                      *\n *                                                                           *\n * This file is part of HDF5.  The full HDF5 copyright notice, including     *\n * terms governing use, modification, and redistribution, is contained in    *\n * the COPYING file, which can be found at the root of the source code       *\n * distribution tree, or in https://support.hdfgroup.org/ftp/HDF5/releases.  *\n * If you do not have access to either file, you may request a copy from     *\n * help@hdfgroup.org.                                                        *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n/*\n * Purpose: This file contains declarations which are visible only within\n *          the H5PL package.  Source files outside the H5PL package should\n *          include H5PLprivate.h instead.\n */\n\n#if !(defined H5PL_FRIEND || defined H5PL_MODULE)\n#error \"Do not include this file outside the H5PL package!\"\n#endif\n\n#ifndef _H5PLpkg_H\n#define _H5PLpkg_H\n\n/* Include private header file */\n#include \"H5PLprivate.h\"          /* Filter functions                */\n\n/* Other private headers needed by this file */\n\n/**************************/\n/* Package Private Macros */\n/**************************/\n\n/* Whether to pre-load pathnames for plugin libraries */\n#define H5PL_DEFAULT_PATH       H5_DEFAULT_PLUGINDIR\n\n\n/****************************/\n/* Macros for supporting    */\n/* both Windows and POSIX   */\n/****************************/\n\n/*******************/\n/* Windows support */\n/*******************/\n/*\n * SPECIAL WINDOWS NOTE\n *\n * Some of the Win32 API functions expand to fooA or fooW depending on\n * whether UNICODE or _UNICODE are defined. You MUST explicitly use\n * the A version of the functions to force char * behavior until we\n * work out a scheme for proper Windows Unicode support.\n *\n * If you do not do this, people will be unable to incorporate our\n * source code into their own CMake builds if they define UNICODE.\n */\n#ifdef H5_HAVE_WIN32_API\n\n    /* The path separator on this platform */\n#   define H5PL_PATH_SEPARATOR      \";\"\n\n    /* Handle for dynamic library */\n#   define H5PL_HANDLE HINSTANCE\n\n    /* Get a handle to a plugin library.  Windows: TEXT macro handles Unicode strings */\n#   define H5PL_OPEN_DLIB(S) LoadLibraryExA(S, NULL, LOAD_WITH_ALTERED_SEARCH_PATH)\n\n    /* Get the address of a symbol in dynamic library */\n#   define H5PL_GET_LIB_FUNC(H,N) GetProcAddress(H,N)\n\n    /* Close dynamic library */\n#   define H5PL_CLOSE_LIB(H) FreeLibrary(H)\n\n    /* Clear error - nothing to do */\n#   define H5PL_CLR_ERROR\n\n    /* maximum size for expanding env vars */\n#   define H5PL_EXPAND_BUFFER_SIZE 32767\n\n    typedef H5PL_type_t(__cdecl *H5PL_get_plugin_type_t)(void);\n    typedef const void *(__cdecl *H5PL_get_plugin_info_t)(void);\n\n#else /* H5_HAVE_WIN32_API */\n\n    /*****************/\n    /* POSIX support */\n    /*****************/\n\n    /* The path separator on this platform */\n#   define H5PL_PATH_SEPARATOR     \":\"\n\n    /* Handle for dynamic library */\n#   define H5PL_HANDLE void *\n\n    /* Get a handle to a plugin library.  Windows: TEXT macro handles Unicode strings */\n#   define H5PL_OPEN_DLIB(S) dlopen(S, RTLD_LAZY)\n\n    /* Get the address of a symbol in dynamic library */\n#   define H5PL_GET_LIB_FUNC(H,N) dlsym(H,N)\n\n    /* Close dynamic library */\n#   define H5PL_CLOSE_LIB(H) dlclose(H)\n\n    /* Clear error */\n#   define H5PL_CLR_ERROR HERROR(H5E_PLUGIN, H5E_CANTGET, \"can't dlopen:%s\", dlerror())\n\n    typedef H5PL_type_t(*H5PL_get_plugin_type_t)(void);\n    typedef const void *(*H5PL_get_plugin_info_t)(void);\n#endif /* H5_HAVE_WIN32_API */\n\n\n/****************************/\n/* Package Private Typedefs */\n/****************************/\n\n/* Data used to search for plugins */\ntypedef struct H5PL_search_params_t {\n    H5PL_type_t         type;\n    const H5PL_key_t   *key;\n} H5PL_search_params_t;\n\n\n/*****************************/\n/* Package Private Variables */\n/*****************************/\n\n\n/******************************/\n/* Package Private Prototypes */\n/******************************/\n\n/* Accessors to global variables and flags */\nH5_DLL herr_t H5PL__get_plugin_control_mask(unsigned int *mask /*out*/);\nH5_DLL herr_t H5PL__set_plugin_control_mask(unsigned int mask);\n\n/* Plugin search and manipulation */\nH5_DLL herr_t H5PL__open(const char *libname, H5PL_type_t type, const H5PL_key_t *key,\n    hbool_t *success /*out*/, const void **plugin_info /*out*/);\nH5_DLL herr_t H5PL__close(H5PL_HANDLE handle);\n\n/* Plugin cache calls */\nH5_DLL herr_t H5PL__create_plugin_cache(void);\nH5_DLL herr_t H5PL__close_plugin_cache(hbool_t *already_closed /*out*/);\nH5_DLL herr_t H5PL__add_plugin(H5PL_type_t type, const H5PL_key_t *key,\n    H5PL_HANDLE handle);\nH5_DLL herr_t H5PL__find_plugin_in_cache(const H5PL_search_params_t *search_params, hbool_t *found /*out*/, const void **plugin_info /*out*/);\n\n/* Plugin search path calls */\nH5_DLL herr_t H5PL__create_path_table(void);\nH5_DLL herr_t H5PL__close_path_table(void);\nH5_DLL unsigned H5PL__get_num_paths(void);\nH5_DLL herr_t H5PL__append_path(const char *path);\nH5_DLL herr_t H5PL__prepend_path(const char *path);\nH5_DLL herr_t H5PL__replace_path(const char *path, unsigned int index);\nH5_DLL herr_t H5PL__insert_path(const char *path, unsigned int index);\nH5_DLL herr_t H5PL__remove_path(unsigned int index);\nH5_DLL const char *H5PL__get_path(unsigned int index);\nH5_DLL herr_t H5PL__find_plugin_in_path_table(const H5PL_search_params_t *search_params, hbool_t *found /*out*/, const void **plugin_info /*out*/);\n\n#endif /* _H5PLpkg_H */\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/m4/libtool.m4": "# libtool.m4 - Configure libtool for the host system. -*-Autoconf-*-\n#\n#   Copyright (C) 1996-2001, 2003-2015 Free Software Foundation, Inc.\n#   Written by Gordon Matzigkeit, 1996\n#\n# This file is free software; the Free Software Foundation gives\n# unlimited permission to copy and/or distribute it, with or without\n# modifications, as long as this notice is preserved.\n\nm4_define([_LT_COPYING], [dnl\n# Copyright (C) 2014 Free Software Foundation, Inc.\n# This is free software; see the source for copying conditions.  There is NO\n# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# GNU Libtool is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of of the License, or\n# (at your option) any later version.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program or library that is built\n# using GNU Libtool, you may include this file under the  same\n# distribution terms that you use for the rest of that program.\n#\n# GNU Libtool is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n])\n\n# serial 58 LT_INIT\n\n\n# LT_PREREQ(VERSION)\n# ------------------\n# Complain and exit if this libtool version is less that VERSION.\nm4_defun([LT_PREREQ],\n[m4_if(m4_version_compare(m4_defn([LT_PACKAGE_VERSION]), [$1]), -1,\n       [m4_default([$3],\n\t\t   [m4_fatal([Libtool version $1 or higher is required],\n\t\t             63)])],\n       [$2])])\n\n\n# _LT_CHECK_BUILDDIR\n# ------------------\n# Complain if the absolute build directory name contains unusual characters\nm4_defun([_LT_CHECK_BUILDDIR],\n[case `pwd` in\n  *\\ * | *\\\t*)\n    AC_MSG_WARN([Libtool does not cope well with whitespace in `pwd`]) ;;\nesac\n])\n\n\n# LT_INIT([OPTIONS])\n# ------------------\nAC_DEFUN([LT_INIT],\n[AC_PREREQ([2.62])dnl We use AC_PATH_PROGS_FEATURE_CHECK\nAC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl\nAC_BEFORE([$0], [LT_LANG])dnl\nAC_BEFORE([$0], [LT_OUTPUT])dnl\nAC_BEFORE([$0], [LTDL_INIT])dnl\nm4_require([_LT_CHECK_BUILDDIR])dnl\n\ndnl Autoconf doesn't catch unexpanded LT_ macros by default:\nm4_pattern_forbid([^_?LT_[A-Z_]+$])dnl\nm4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])dnl\ndnl aclocal doesn't pull ltoptions.m4, ltsugar.m4, or ltversion.m4\ndnl unless we require an AC_DEFUNed macro:\nAC_REQUIRE([LTOPTIONS_VERSION])dnl\nAC_REQUIRE([LTSUGAR_VERSION])dnl\nAC_REQUIRE([LTVERSION_VERSION])dnl\nAC_REQUIRE([LTOBSOLETE_VERSION])dnl\nm4_require([_LT_PROG_LTMAIN])dnl\n\n_LT_SHELL_INIT([SHELL=${CONFIG_SHELL-/bin/sh}])\n\ndnl Parse OPTIONS\n_LT_SET_OPTIONS([$0], [$1])\n\n# This can be used to rebuild libtool when needed\nLIBTOOL_DEPS=$ltmain\n\n# Always use our own libtool.\nLIBTOOL='$(SHELL) $(top_builddir)/libtool'\nAC_SUBST(LIBTOOL)dnl\n\n_LT_SETUP\n\n# Only expand once:\nm4_define([LT_INIT])\n])# LT_INIT\n\n# Old names:\nAU_ALIAS([AC_PROG_LIBTOOL], [LT_INIT])\nAU_ALIAS([AM_PROG_LIBTOOL], [LT_INIT])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_PROG_LIBTOOL], [])\ndnl AC_DEFUN([AM_PROG_LIBTOOL], [])\n\n\n# _LT_PREPARE_CC_BASENAME\n# -----------------------\nm4_defun([_LT_PREPARE_CC_BASENAME], [\n# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.\nfunc_cc_basename ()\n{\n    for cc_temp in @S|@*\"\"; do\n      case $cc_temp in\n        compile | *[[\\\\/]]compile | ccache | *[[\\\\/]]ccache ) ;;\n        distcc | *[[\\\\/]]distcc | purify | *[[\\\\/]]purify ) ;;\n        \\-*) ;;\n        *) break;;\n      esac\n    done\n    func_cc_basename_result=`$ECHO \"$cc_temp\" | $SED \"s%.*/%%; s%^$host_alias-%%\"`\n}\n])# _LT_PREPARE_CC_BASENAME\n\n\n# _LT_CC_BASENAME(CC)\n# -------------------\n# It would be clearer to call AC_REQUIREs from _LT_PREPARE_CC_BASENAME,\n# but that macro is also expanded into generated libtool script, which\n# arranges for $SED and $ECHO to be set by different means.\nm4_defun([_LT_CC_BASENAME],\n[m4_require([_LT_PREPARE_CC_BASENAME])dnl\nAC_REQUIRE([_LT_DECL_SED])dnl\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])dnl\nfunc_cc_basename $1\ncc_basename=$func_cc_basename_result\n])\n\n\n# _LT_FILEUTILS_DEFAULTS\n# ----------------------\n# It is okay to use these file commands and assume they have been set\n# sensibly after 'm4_require([_LT_FILEUTILS_DEFAULTS])'.\nm4_defun([_LT_FILEUTILS_DEFAULTS],\n[: ${CP=\"cp -f\"}\n: ${MV=\"mv -f\"}\n: ${RM=\"rm -f\"}\n])# _LT_FILEUTILS_DEFAULTS\n\n\n# _LT_SETUP\n# ---------\nm4_defun([_LT_SETUP],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_REQUIRE([_LT_PREPARE_SED_QUOTE_VARS])dnl\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])dnl\n\n_LT_DECL([], [PATH_SEPARATOR], [1], [The PATH separator for the build system])dnl\ndnl\n_LT_DECL([], [host_alias], [0], [The host system])dnl\n_LT_DECL([], [host], [0])dnl\n_LT_DECL([], [host_os], [0])dnl\ndnl\n_LT_DECL([], [build_alias], [0], [The build system])dnl\n_LT_DECL([], [build], [0])dnl\n_LT_DECL([], [build_os], [0])dnl\ndnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([LT_PATH_LD])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\ndnl\nAC_REQUIRE([AC_PROG_LN_S])dnl\ntest -z \"$LN_S\" && LN_S=\"ln -s\"\n_LT_DECL([], [LN_S], [1], [Whether we need soft or hard links])dnl\ndnl\nAC_REQUIRE([LT_CMD_MAX_LEN])dnl\n_LT_DECL([objext], [ac_objext], [0], [Object file suffix (normally \"o\")])dnl\n_LT_DECL([], [exeext], [0], [Executable file suffix (normally \"\")])dnl\ndnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_CHECK_SHELL_FEATURES])dnl\nm4_require([_LT_PATH_CONVERSION_FUNCTIONS])dnl\nm4_require([_LT_CMD_RELOAD])dnl\nm4_require([_LT_CHECK_MAGIC_METHOD])dnl\nm4_require([_LT_CHECK_SHAREDLIB_FROM_LINKLIB])dnl\nm4_require([_LT_CMD_OLD_ARCHIVE])dnl\nm4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nm4_require([_LT_WITH_SYSROOT])dnl\nm4_require([_LT_CMD_TRUNCATE])dnl\n\n_LT_CONFIG_LIBTOOL_INIT([\n# See if we are running on zsh, and set the options that allow our\n# commands through without removal of \\ escapes INIT.\nif test -n \"\\${ZSH_VERSION+set}\"; then\n   setopt NO_GLOB_SUBST\nfi\n])\nif test -n \"${ZSH_VERSION+set}\"; then\n   setopt NO_GLOB_SUBST\nfi\n\n_LT_CHECK_OBJDIR\n\nm4_require([_LT_TAG_COMPILER])dnl\n\ncase $host_os in\naix3*)\n  # AIX sometimes has problems with the GCC collect2 program.  For some\n  # reason, if we set the COLLECT_NAMES environment variable, the problems\n  # vanish in a puff of smoke.\n  if test set != \"${COLLECT_NAMES+set}\"; then\n    COLLECT_NAMES=\n    export COLLECT_NAMES\n  fi\n  ;;\nesac\n\n# Global variables:\nofile=libtool\ncan_build_shared=yes\n\n# All known linkers require a '.a' archive for static linking (except MSVC,\n# which needs '.lib').\nlibext=a\n\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n\nold_CC=$CC\nold_CFLAGS=$CFLAGS\n\n# Set sane defaults for various variables\ntest -z \"$CC\" && CC=cc\ntest -z \"$LTCC\" && LTCC=$CC\ntest -z \"$LTCFLAGS\" && LTCFLAGS=$CFLAGS\ntest -z \"$LD\" && LD=ld\ntest -z \"$ac_objext\" && ac_objext=o\n\n_LT_CC_BASENAME([$compiler])\n\n# Only perform the check for file, if the check method requires it\ntest -z \"$MAGIC_CMD\" && MAGIC_CMD=file\ncase $deplibs_check_method in\nfile_magic*)\n  if test \"$file_magic_cmd\" = '$MAGIC_CMD'; then\n    _LT_PATH_MAGIC\n  fi\n  ;;\nesac\n\n# Use C for the default configuration in the libtool script\nLT_SUPPORTED_TAG([CC])\n_LT_LANG_C_CONFIG\n_LT_LANG_DEFAULT_CONFIG\n_LT_CONFIG_COMMANDS\n])# _LT_SETUP\n\n\n# _LT_PREPARE_SED_QUOTE_VARS\n# --------------------------\n# Define a few sed substitution that help us do robust quoting.\nm4_defun([_LT_PREPARE_SED_QUOTE_VARS],\n[# Backslashify metacharacters that are still active within\n# double-quoted strings.\nsed_quote_subst='s/\\([[\"`$\\\\]]\\)/\\\\\\1/g'\n\n# Same as above, but do not quote variable references.\ndouble_quote_subst='s/\\([[\"`\\\\]]\\)/\\\\\\1/g'\n\n# Sed substitution to delay expansion of an escaped shell variable in a\n# double_quote_subst'ed string.\ndelay_variable_subst='s/\\\\\\\\\\\\\\\\\\\\\\$/\\\\\\\\\\\\$/g'\n\n# Sed substitution to delay expansion of an escaped single quote.\ndelay_single_quote_subst='s/'\\''/'\\'\\\\\\\\\\\\\\'\\''/g'\n\n# Sed substitution to avoid accidental globbing in evaled expressions\nno_glob_subst='s/\\*/\\\\\\*/g'\n])\n\n# _LT_PROG_LTMAIN\n# ---------------\n# Note that this code is called both from 'configure', and 'config.status'\n# now that we use AC_CONFIG_COMMANDS to generate libtool.  Notably,\n# 'config.status' has no value for ac_aux_dir unless we are using Automake,\n# so we pass a copy along to make sure it has a sensible value anyway.\nm4_defun([_LT_PROG_LTMAIN],\n[m4_ifdef([AC_REQUIRE_AUX_FILE], [AC_REQUIRE_AUX_FILE([ltmain.sh])])dnl\n_LT_CONFIG_LIBTOOL_INIT([ac_aux_dir='$ac_aux_dir'])\nltmain=$ac_aux_dir/ltmain.sh\n])# _LT_PROG_LTMAIN\n\n\n## ------------------------------------- ##\n## Accumulate code for creating libtool. ##\n## ------------------------------------- ##\n\n# So that we can recreate a full libtool script including additional\n# tags, we accumulate the chunks of code to send to AC_CONFIG_COMMANDS\n# in macros and then make a single call at the end using the 'libtool'\n# label.\n\n\n# _LT_CONFIG_LIBTOOL_INIT([INIT-COMMANDS])\n# ----------------------------------------\n# Register INIT-COMMANDS to be passed to AC_CONFIG_COMMANDS later.\nm4_define([_LT_CONFIG_LIBTOOL_INIT],\n[m4_ifval([$1],\n          [m4_append([_LT_OUTPUT_LIBTOOL_INIT],\n                     [$1\n])])])\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_INIT])\n\n\n# _LT_CONFIG_LIBTOOL([COMMANDS])\n# ------------------------------\n# Register COMMANDS to be passed to AC_CONFIG_COMMANDS later.\nm4_define([_LT_CONFIG_LIBTOOL],\n[m4_ifval([$1],\n          [m4_append([_LT_OUTPUT_LIBTOOL_COMMANDS],\n                     [$1\n])])])\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_COMMANDS])\n\n\n# _LT_CONFIG_SAVE_COMMANDS([COMMANDS], [INIT_COMMANDS])\n# -----------------------------------------------------\nm4_defun([_LT_CONFIG_SAVE_COMMANDS],\n[_LT_CONFIG_LIBTOOL([$1])\n_LT_CONFIG_LIBTOOL_INIT([$2])\n])\n\n\n# _LT_FORMAT_COMMENT([COMMENT])\n# -----------------------------\n# Add leading comment marks to the start of each line, and a trailing\n# full-stop to the whole comment if one is not present already.\nm4_define([_LT_FORMAT_COMMENT],\n[m4_ifval([$1], [\nm4_bpatsubst([m4_bpatsubst([$1], [^ *], [# ])],\n              [['`$\\]], [\\\\\\&])]m4_bmatch([$1], [[!?.]$], [], [.])\n)])\n\n\n\n## ------------------------ ##\n## FIXME: Eliminate VARNAME ##\n## ------------------------ ##\n\n\n# _LT_DECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION], [IS-TAGGED?])\n# -------------------------------------------------------------------\n# CONFIGNAME is the name given to the value in the libtool script.\n# VARNAME is the (base) name used in the configure script.\n# VALUE may be 0, 1 or 2 for a computed quote escaped value based on\n# VARNAME.  Any other value will be used directly.\nm4_define([_LT_DECL],\n[lt_if_append_uniq([lt_decl_varnames], [$2], [, ],\n    [lt_dict_add_subkey([lt_decl_dict], [$2], [libtool_name],\n\t[m4_ifval([$1], [$1], [$2])])\n    lt_dict_add_subkey([lt_decl_dict], [$2], [value], [$3])\n    m4_ifval([$4],\n\t[lt_dict_add_subkey([lt_decl_dict], [$2], [description], [$4])])\n    lt_dict_add_subkey([lt_decl_dict], [$2],\n\t[tagged?], [m4_ifval([$5], [yes], [no])])])\n])\n\n\n# _LT_TAGDECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION])\n# --------------------------------------------------------\nm4_define([_LT_TAGDECL], [_LT_DECL([$1], [$2], [$3], [$4], [yes])])\n\n\n# lt_decl_tag_varnames([SEPARATOR], [VARNAME1...])\n# ------------------------------------------------\nm4_define([lt_decl_tag_varnames],\n[_lt_decl_filter([tagged?], [yes], $@)])\n\n\n# _lt_decl_filter(SUBKEY, VALUE, [SEPARATOR], [VARNAME1..])\n# ---------------------------------------------------------\nm4_define([_lt_decl_filter],\n[m4_case([$#],\n  [0], [m4_fatal([$0: too few arguments: $#])],\n  [1], [m4_fatal([$0: too few arguments: $#: $1])],\n  [2], [lt_dict_filter([lt_decl_dict], [$1], [$2], [], lt_decl_varnames)],\n  [3], [lt_dict_filter([lt_decl_dict], [$1], [$2], [$3], lt_decl_varnames)],\n  [lt_dict_filter([lt_decl_dict], $@)])[]dnl\n])\n\n\n# lt_decl_quote_varnames([SEPARATOR], [VARNAME1...])\n# --------------------------------------------------\nm4_define([lt_decl_quote_varnames],\n[_lt_decl_filter([value], [1], $@)])\n\n\n# lt_decl_dquote_varnames([SEPARATOR], [VARNAME1...])\n# ---------------------------------------------------\nm4_define([lt_decl_dquote_varnames],\n[_lt_decl_filter([value], [2], $@)])\n\n\n# lt_decl_varnames_tagged([SEPARATOR], [VARNAME1...])\n# ---------------------------------------------------\nm4_define([lt_decl_varnames_tagged],\n[m4_assert([$# <= 2])dnl\n_$0(m4_quote(m4_default([$1], [[, ]])),\n    m4_ifval([$2], [[$2]], [m4_dquote(lt_decl_tag_varnames)]),\n    m4_split(m4_normalize(m4_quote(_LT_TAGS)), [ ]))])\nm4_define([_lt_decl_varnames_tagged],\n[m4_ifval([$3], [lt_combine([$1], [$2], [_], $3)])])\n\n\n# lt_decl_all_varnames([SEPARATOR], [VARNAME1...])\n# ------------------------------------------------\nm4_define([lt_decl_all_varnames],\n[_$0(m4_quote(m4_default([$1], [[, ]])),\n     m4_if([$2], [],\n\t   m4_quote(lt_decl_varnames),\n\tm4_quote(m4_shift($@))))[]dnl\n])\nm4_define([_lt_decl_all_varnames],\n[lt_join($@, lt_decl_varnames_tagged([$1],\n\t\t\tlt_decl_tag_varnames([[, ]], m4_shift($@))))dnl\n])\n\n\n# _LT_CONFIG_STATUS_DECLARE([VARNAME])\n# ------------------------------------\n# Quote a variable value, and forward it to 'config.status' so that its\n# declaration there will have the same value as in 'configure'.  VARNAME\n# must have a single quote delimited value for this to work.\nm4_define([_LT_CONFIG_STATUS_DECLARE],\n[$1='`$ECHO \"$][$1\" | $SED \"$delay_single_quote_subst\"`'])\n\n\n# _LT_CONFIG_STATUS_DECLARATIONS\n# ------------------------------\n# We delimit libtool config variables with single quotes, so when\n# we write them to config.status, we have to be sure to quote all\n# embedded single quotes properly.  In configure, this macro expands\n# each variable declared with _LT_DECL (and _LT_TAGDECL) into:\n#\n#    <var>='`$ECHO \"$<var>\" | $SED \"$delay_single_quote_subst\"`'\nm4_defun([_LT_CONFIG_STATUS_DECLARATIONS],\n[m4_foreach([_lt_var], m4_quote(lt_decl_all_varnames),\n    [m4_n([_LT_CONFIG_STATUS_DECLARE(_lt_var)])])])\n\n\n# _LT_LIBTOOL_TAGS\n# ----------------\n# Output comment and list of tags supported by the script\nm4_defun([_LT_LIBTOOL_TAGS],\n[_LT_FORMAT_COMMENT([The names of the tagged configurations supported by this script])dnl\navailable_tags='_LT_TAGS'dnl\n])\n\n\n# _LT_LIBTOOL_DECLARE(VARNAME, [TAG])\n# -----------------------------------\n# Extract the dictionary values for VARNAME (optionally with TAG) and\n# expand to a commented shell variable setting:\n#\n#    # Some comment about what VAR is for.\n#    visible_name=$lt_internal_name\nm4_define([_LT_LIBTOOL_DECLARE],\n[_LT_FORMAT_COMMENT(m4_quote(lt_dict_fetch([lt_decl_dict], [$1],\n\t\t\t\t\t   [description])))[]dnl\nm4_pushdef([_libtool_name],\n    m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [libtool_name])))[]dnl\nm4_case(m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [value])),\n    [0], [_libtool_name=[$]$1],\n    [1], [_libtool_name=$lt_[]$1],\n    [2], [_libtool_name=$lt_[]$1],\n    [_libtool_name=lt_dict_fetch([lt_decl_dict], [$1], [value])])[]dnl\nm4_ifval([$2], [_$2])[]m4_popdef([_libtool_name])[]dnl\n])\n\n\n# _LT_LIBTOOL_CONFIG_VARS\n# -----------------------\n# Produce commented declarations of non-tagged libtool config variables\n# suitable for insertion in the LIBTOOL CONFIG section of the 'libtool'\n# script.  Tagged libtool config variables (even for the LIBTOOL CONFIG\n# section) are produced by _LT_LIBTOOL_TAG_VARS.\nm4_defun([_LT_LIBTOOL_CONFIG_VARS],\n[m4_foreach([_lt_var],\n    m4_quote(_lt_decl_filter([tagged?], [no], [], lt_decl_varnames)),\n    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var)])])])\n\n\n# _LT_LIBTOOL_TAG_VARS(TAG)\n# -------------------------\nm4_define([_LT_LIBTOOL_TAG_VARS],\n[m4_foreach([_lt_var], m4_quote(lt_decl_tag_varnames),\n    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var, [$1])])])])\n\n\n# _LT_TAGVAR(VARNAME, [TAGNAME])\n# ------------------------------\nm4_define([_LT_TAGVAR], [m4_ifval([$2], [$1_$2], [$1])])\n\n\n# _LT_CONFIG_COMMANDS\n# -------------------\n# Send accumulated output to $CONFIG_STATUS.  Thanks to the lists of\n# variables for single and double quote escaping we saved from calls\n# to _LT_DECL, we can put quote escaped variables declarations\n# into 'config.status', and then the shell code to quote escape them in\n# for loops in 'config.status'.  Finally, any additional code accumulated\n# from calls to _LT_CONFIG_LIBTOOL_INIT is expanded.\nm4_defun([_LT_CONFIG_COMMANDS],\n[AC_PROVIDE_IFELSE([LT_OUTPUT],\n\tdnl If the libtool generation code has been placed in $CONFIG_LT,\n\tdnl instead of duplicating it all over again into config.status,\n\tdnl then we will have config.status run $CONFIG_LT later, so it\n\tdnl needs to know what name is stored there:\n        [AC_CONFIG_COMMANDS([libtool],\n            [$SHELL $CONFIG_LT || AS_EXIT(1)], [CONFIG_LT='$CONFIG_LT'])],\n    dnl If the libtool generation code is destined for config.status,\n    dnl expand the accumulated commands and init code now:\n    [AC_CONFIG_COMMANDS([libtool],\n        [_LT_OUTPUT_LIBTOOL_COMMANDS], [_LT_OUTPUT_LIBTOOL_COMMANDS_INIT])])\n])#_LT_CONFIG_COMMANDS\n\n\n# Initialize.\nm4_define([_LT_OUTPUT_LIBTOOL_COMMANDS_INIT],\n[\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nsed_quote_subst='$sed_quote_subst'\ndouble_quote_subst='$double_quote_subst'\ndelay_variable_subst='$delay_variable_subst'\n_LT_CONFIG_STATUS_DECLARATIONS\nLTCC='$LTCC'\nLTCFLAGS='$LTCFLAGS'\ncompiler='$compiler_DEFAULT'\n\n# A function that is used when there is no print builtin or printf.\nfunc_fallback_echo ()\n{\n  eval 'cat <<_LTECHO_EOF\n\\$[]1\n_LTECHO_EOF'\n}\n\n# Quote evaled strings.\nfor var in lt_decl_all_varnames([[ \\\n]], lt_decl_quote_varnames); do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED \\\\\"\\\\\\$sed_quote_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\" ## exclude from sc_prohibit_nested_quotes\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n# Double-quote double-evaled strings.\nfor var in lt_decl_all_varnames([[ \\\n]], lt_decl_dquote_varnames); do\n    case \\`eval \\\\\\\\\\$ECHO \\\\\\\\\"\"\\\\\\\\\\$\\$var\"\\\\\\\\\"\\` in\n    *[[\\\\\\\\\\\\\\`\\\\\"\\\\\\$]]*)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\`\\\\\\$ECHO \\\\\"\\\\\\$\\$var\\\\\" | \\\\\\$SED -e \\\\\"\\\\\\$double_quote_subst\\\\\" -e \\\\\"\\\\\\$sed_quote_subst\\\\\" -e \\\\\"\\\\\\$delay_variable_subst\\\\\"\\\\\\`\\\\\\\\\\\\\"\" ## exclude from sc_prohibit_nested_quotes\n      ;;\n    *)\n      eval \"lt_\\$var=\\\\\\\\\\\\\"\\\\\\$\\$var\\\\\\\\\\\\\"\"\n      ;;\n    esac\ndone\n\n_LT_OUTPUT_LIBTOOL_INIT\n])\n\n# _LT_GENERATED_FILE_INIT(FILE, [COMMENT])\n# ------------------------------------\n# Generate a child script FILE with all initialization necessary to\n# reuse the environment learned by the parent script, and make the\n# file executable.  If COMMENT is supplied, it is inserted after the\n# '#!' sequence but before initialization text begins.  After this\n# macro, additional text can be appended to FILE to form the body of\n# the child script.  The macro ends with non-zero status if the\n# file could not be fully written (such as if the disk is full).\nm4_ifdef([AS_INIT_GENERATED],\n[m4_defun([_LT_GENERATED_FILE_INIT],[AS_INIT_GENERATED($@)])],\n[m4_defun([_LT_GENERATED_FILE_INIT],\n[m4_require([AS_PREPARE])]dnl\n[m4_pushdef([AS_MESSAGE_LOG_FD])]dnl\n[lt_write_fail=0\ncat >$1 <<_ASEOF || lt_write_fail=1\n#! $SHELL\n# Generated by $as_me.\n$2\nSHELL=\\${CONFIG_SHELL-$SHELL}\nexport SHELL\n_ASEOF\ncat >>$1 <<\\_ASEOF || lt_write_fail=1\nAS_SHELL_SANITIZE\n_AS_PREPARE\nexec AS_MESSAGE_FD>&1\n_ASEOF\ntest 0 = \"$lt_write_fail\" && chmod +x $1[]dnl\nm4_popdef([AS_MESSAGE_LOG_FD])])])# _LT_GENERATED_FILE_INIT\n\n# LT_OUTPUT\n# ---------\n# This macro allows early generation of the libtool script (before\n# AC_OUTPUT is called), incase it is used in configure for compilation\n# tests.\nAC_DEFUN([LT_OUTPUT],\n[: ${CONFIG_LT=./config.lt}\nAC_MSG_NOTICE([creating $CONFIG_LT])\n_LT_GENERATED_FILE_INIT([\"$CONFIG_LT\"],\n[# Run this file to recreate a libtool stub with the current configuration.])\n\ncat >>\"$CONFIG_LT\" <<\\_LTEOF\nlt_cl_silent=false\nexec AS_MESSAGE_LOG_FD>>config.log\n{\n  echo\n  AS_BOX([Running $as_me.])\n} >&AS_MESSAGE_LOG_FD\n\nlt_cl_help=\"\\\n'$as_me' creates a local libtool stub from the current configuration,\nfor use in further configure time tests before the real libtool is\ngenerated.\n\nUsage: $[0] [[OPTIONS]]\n\n  -h, --help      print this help, then exit\n  -V, --version   print version number, then exit\n  -q, --quiet     do not print progress messages\n  -d, --debug     don't remove temporary files\n\nReport bugs to <bug-libtool@gnu.org>.\"\n\nlt_cl_version=\"\\\nm4_ifset([AC_PACKAGE_NAME], [AC_PACKAGE_NAME ])config.lt[]dnl\nm4_ifset([AC_PACKAGE_VERSION], [ AC_PACKAGE_VERSION])\nconfigured by $[0], generated by m4_PACKAGE_STRING.\n\nCopyright (C) 2011 Free Software Foundation, Inc.\nThis config.lt script is free software; the Free Software Foundation\ngives unlimited permision to copy, distribute and modify it.\"\n\nwhile test 0 != $[#]\ndo\n  case $[1] in\n    --version | --v* | -V )\n      echo \"$lt_cl_version\"; exit 0 ;;\n    --help | --h* | -h )\n      echo \"$lt_cl_help\"; exit 0 ;;\n    --debug | --d* | -d )\n      debug=: ;;\n    --quiet | --q* | --silent | --s* | -q )\n      lt_cl_silent=: ;;\n\n    -*) AC_MSG_ERROR([unrecognized option: $[1]\nTry '$[0] --help' for more information.]) ;;\n\n    *) AC_MSG_ERROR([unrecognized argument: $[1]\nTry '$[0] --help' for more information.]) ;;\n  esac\n  shift\ndone\n\nif $lt_cl_silent; then\n  exec AS_MESSAGE_FD>/dev/null\nfi\n_LTEOF\n\ncat >>\"$CONFIG_LT\" <<_LTEOF\n_LT_OUTPUT_LIBTOOL_COMMANDS_INIT\n_LTEOF\n\ncat >>\"$CONFIG_LT\" <<\\_LTEOF\nAC_MSG_NOTICE([creating $ofile])\n_LT_OUTPUT_LIBTOOL_COMMANDS\nAS_EXIT(0)\n_LTEOF\nchmod +x \"$CONFIG_LT\"\n\n# configure is writing to config.log, but config.lt does its own redirection,\n# appending to config.log, which fails on DOS, as config.log is still kept\n# open by configure.  Here we exec the FD to /dev/null, effectively closing\n# config.log, so it can be properly (re)opened and appended to by config.lt.\nlt_cl_success=:\ntest yes = \"$silent\" &&\n  lt_config_lt_args=\"$lt_config_lt_args --quiet\"\nexec AS_MESSAGE_LOG_FD>/dev/null\n$SHELL \"$CONFIG_LT\" $lt_config_lt_args || lt_cl_success=false\nexec AS_MESSAGE_LOG_FD>>config.log\n$lt_cl_success || AS_EXIT(1)\n])# LT_OUTPUT\n\n\n# _LT_CONFIG(TAG)\n# ---------------\n# If TAG is the built-in tag, create an initial libtool script with a\n# default configuration from the untagged config vars.  Otherwise add code\n# to config.status for appending the configuration named by TAG from the\n# matching tagged config vars.\nm4_defun([_LT_CONFIG],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\n_LT_CONFIG_SAVE_COMMANDS([\n  m4_define([_LT_TAG], m4_if([$1], [], [C], [$1]))dnl\n  m4_if(_LT_TAG, [C], [\n    # See if we are running on zsh, and set the options that allow our\n    # commands through without removal of \\ escapes.\n    if test -n \"${ZSH_VERSION+set}\"; then\n      setopt NO_GLOB_SUBST\n    fi\n\n    cfgfile=${ofile}T\n    trap \"$RM \\\"$cfgfile\\\"; exit 1\" 1 2 15\n    $RM \"$cfgfile\"\n\n    cat <<_LT_EOF >> \"$cfgfile\"\n#! $SHELL\n# Generated automatically by $as_me ($PACKAGE) $VERSION\n# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:\n# NOTE: Changes made to this file will be lost: look at ltmain.sh.\n\n# Provide generalized library-building support services.\n# Written by Gordon Matzigkeit, 1996\n\n_LT_COPYING\n_LT_LIBTOOL_TAGS\n\n# Configured defaults for sys_lib_dlsearch_path munging.\n: \\${LT_SYS_LIBRARY_PATH=\"$configure_time_lt_sys_library_path\"}\n\n# ### BEGIN LIBTOOL CONFIG\n_LT_LIBTOOL_CONFIG_VARS\n_LT_LIBTOOL_TAG_VARS\n# ### END LIBTOOL CONFIG\n\n_LT_EOF\n\n    cat <<'_LT_EOF' >> \"$cfgfile\"\n\n# ### BEGIN FUNCTIONS SHARED WITH CONFIGURE\n\n_LT_PREPARE_MUNGE_PATH_LIST\n_LT_PREPARE_CC_BASENAME\n\n# ### END FUNCTIONS SHARED WITH CONFIGURE\n\n_LT_EOF\n\n  case $host_os in\n  aix3*)\n    cat <<\\_LT_EOF >> \"$cfgfile\"\n# AIX sometimes has problems with the GCC collect2 program.  For some\n# reason, if we set the COLLECT_NAMES environment variable, the problems\n# vanish in a puff of smoke.\nif test set != \"${COLLECT_NAMES+set}\"; then\n  COLLECT_NAMES=\n  export COLLECT_NAMES\nfi\n_LT_EOF\n    ;;\n  esac\n\n  _LT_PROG_LTMAIN\n\n  # We use sed instead of cat because bash on DJGPP gets confused if\n  # if finds mixed CR/LF and LF-only lines.  Since sed operates in\n  # text mode, it properly converts lines to CR/LF.  This bash problem\n  # is reportedly fixed, but why not run on old versions too?\n  sed '$q' \"$ltmain\" >> \"$cfgfile\" \\\n     || (rm -f \"$cfgfile\"; exit 1)\n\n   mv -f \"$cfgfile\" \"$ofile\" ||\n    (rm -f \"$ofile\" && cp \"$cfgfile\" \"$ofile\" && rm -f \"$cfgfile\")\n  chmod +x \"$ofile\"\n],\n[cat <<_LT_EOF >> \"$ofile\"\n\ndnl Unfortunately we have to use $1 here, since _LT_TAG is not expanded\ndnl in a comment (ie after a #).\n# ### BEGIN LIBTOOL TAG CONFIG: $1\n_LT_LIBTOOL_TAG_VARS(_LT_TAG)\n# ### END LIBTOOL TAG CONFIG: $1\n_LT_EOF\n])dnl /m4_if\n],\n[m4_if([$1], [], [\n    PACKAGE='$PACKAGE'\n    VERSION='$VERSION'\n    RM='$RM'\n    ofile='$ofile'], [])\n])dnl /_LT_CONFIG_SAVE_COMMANDS\n])# _LT_CONFIG\n\n\n# LT_SUPPORTED_TAG(TAG)\n# ---------------------\n# Trace this macro to discover what tags are supported by the libtool\n# --tag option, using:\n#    autoconf --trace 'LT_SUPPORTED_TAG:$1'\nAC_DEFUN([LT_SUPPORTED_TAG], [])\n\n\n# C support is built-in for now\nm4_define([_LT_LANG_C_enabled], [])\nm4_define([_LT_TAGS], [])\n\n\n# LT_LANG(LANG)\n# -------------\n# Enable libtool support for the given language if not already enabled.\nAC_DEFUN([LT_LANG],\n[AC_BEFORE([$0], [LT_OUTPUT])dnl\nm4_case([$1],\n  [C],\t\t\t[_LT_LANG(C)],\n  [C++],\t\t[_LT_LANG(CXX)],\n  [Go],\t\t\t[_LT_LANG(GO)],\n  [Java],\t\t[_LT_LANG(GCJ)],\n  [Fortran 77],\t\t[_LT_LANG(F77)],\n  [Fortran],\t\t[_LT_LANG(FC)],\n  [Windows Resource],\t[_LT_LANG(RC)],\n  [m4_ifdef([_LT_LANG_]$1[_CONFIG],\n    [_LT_LANG($1)],\n    [m4_fatal([$0: unsupported language: \"$1\"])])])dnl\n])# LT_LANG\n\n\n# _LT_LANG(LANGNAME)\n# ------------------\nm4_defun([_LT_LANG],\n[m4_ifdef([_LT_LANG_]$1[_enabled], [],\n  [LT_SUPPORTED_TAG([$1])dnl\n  m4_append([_LT_TAGS], [$1 ])dnl\n  m4_define([_LT_LANG_]$1[_enabled], [])dnl\n  _LT_LANG_$1_CONFIG($1)])dnl\n])# _LT_LANG\n\n\nm4_ifndef([AC_PROG_GO], [\n############################################################\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_GO.  When it is available in    #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\n############################################################\nm4_defun([AC_PROG_GO],\n[AC_LANG_PUSH(Go)dnl\nAC_ARG_VAR([GOC],     [Go compiler command])dnl\nAC_ARG_VAR([GOFLAGS], [Go compiler flags])dnl\n_AC_ARG_VAR_LDFLAGS()dnl\nAC_CHECK_TOOL(GOC, gccgo)\nif test -z \"$GOC\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    AC_CHECK_PROG(GOC, [${ac_tool_prefix}gccgo], [${ac_tool_prefix}gccgo])\n  fi\nfi\nif test -z \"$GOC\"; then\n  AC_CHECK_PROG(GOC, gccgo, gccgo, false)\nfi\n])#m4_defun\n])#m4_ifndef\n\n\n# _LT_LANG_DEFAULT_CONFIG\n# -----------------------\nm4_defun([_LT_LANG_DEFAULT_CONFIG],\n[AC_PROVIDE_IFELSE([AC_PROG_CXX],\n  [LT_LANG(CXX)],\n  [m4_define([AC_PROG_CXX], defn([AC_PROG_CXX])[LT_LANG(CXX)])])\n\nAC_PROVIDE_IFELSE([AC_PROG_F77],\n  [LT_LANG(F77)],\n  [m4_define([AC_PROG_F77], defn([AC_PROG_F77])[LT_LANG(F77)])])\n\nAC_PROVIDE_IFELSE([AC_PROG_FC],\n  [LT_LANG(FC)],\n  [m4_define([AC_PROG_FC], defn([AC_PROG_FC])[LT_LANG(FC)])])\n\ndnl The call to [A][M_PROG_GCJ] is quoted like that to stop aclocal\ndnl pulling things in needlessly.\nAC_PROVIDE_IFELSE([AC_PROG_GCJ],\n  [LT_LANG(GCJ)],\n  [AC_PROVIDE_IFELSE([A][M_PROG_GCJ],\n    [LT_LANG(GCJ)],\n    [AC_PROVIDE_IFELSE([LT_PROG_GCJ],\n      [LT_LANG(GCJ)],\n      [m4_ifdef([AC_PROG_GCJ],\n\t[m4_define([AC_PROG_GCJ], defn([AC_PROG_GCJ])[LT_LANG(GCJ)])])\n       m4_ifdef([A][M_PROG_GCJ],\n\t[m4_define([A][M_PROG_GCJ], defn([A][M_PROG_GCJ])[LT_LANG(GCJ)])])\n       m4_ifdef([LT_PROG_GCJ],\n\t[m4_define([LT_PROG_GCJ], defn([LT_PROG_GCJ])[LT_LANG(GCJ)])])])])])\n\nAC_PROVIDE_IFELSE([AC_PROG_GO],\n  [LT_LANG(GO)],\n  [m4_define([AC_PROG_GO], defn([AC_PROG_GO])[LT_LANG(GO)])])\n\nAC_PROVIDE_IFELSE([LT_PROG_RC],\n  [LT_LANG(RC)],\n  [m4_define([LT_PROG_RC], defn([LT_PROG_RC])[LT_LANG(RC)])])\n])# _LT_LANG_DEFAULT_CONFIG\n\n# Obsolete macros:\nAU_DEFUN([AC_LIBTOOL_CXX], [LT_LANG(C++)])\nAU_DEFUN([AC_LIBTOOL_F77], [LT_LANG(Fortran 77)])\nAU_DEFUN([AC_LIBTOOL_FC], [LT_LANG(Fortran)])\nAU_DEFUN([AC_LIBTOOL_GCJ], [LT_LANG(Java)])\nAU_DEFUN([AC_LIBTOOL_RC], [LT_LANG(Windows Resource)])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_CXX], [])\ndnl AC_DEFUN([AC_LIBTOOL_F77], [])\ndnl AC_DEFUN([AC_LIBTOOL_FC], [])\ndnl AC_DEFUN([AC_LIBTOOL_GCJ], [])\ndnl AC_DEFUN([AC_LIBTOOL_RC], [])\n\n\n# _LT_TAG_COMPILER\n# ----------------\nm4_defun([_LT_TAG_COMPILER],\n[AC_REQUIRE([AC_PROG_CC])dnl\n\n_LT_DECL([LTCC], [CC], [1], [A C compiler])dnl\n_LT_DECL([LTCFLAGS], [CFLAGS], [1], [LTCC compiler flags])dnl\n_LT_TAGDECL([CC], [compiler], [1], [A language specific compiler])dnl\n_LT_TAGDECL([with_gcc], [GCC], [0], [Is the compiler the GNU compiler?])dnl\n\n# If no C compiler was specified, use CC.\nLTCC=${LTCC-\"$CC\"}\n\n# If no C compiler flags were specified, use CFLAGS.\nLTCFLAGS=${LTCFLAGS-\"$CFLAGS\"}\n\n# Allow CC to be a program name with arguments.\ncompiler=$CC\n])# _LT_TAG_COMPILER\n\n\n# _LT_COMPILER_BOILERPLATE\n# ------------------------\n# Check for compiler boilerplate output or warnings with\n# the simple compiler test code.\nm4_defun([_LT_COMPILER_BOILERPLATE],\n[m4_require([_LT_DECL_SED])dnl\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_compile_test_code\" >conftest.$ac_ext\neval \"$ac_compile\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_compiler_boilerplate=`cat conftest.err`\n$RM conftest*\n])# _LT_COMPILER_BOILERPLATE\n\n\n# _LT_LINKER_BOILERPLATE\n# ----------------------\n# Check for linker boilerplate output or warnings with\n# the simple link test code.\nm4_defun([_LT_LINKER_BOILERPLATE],\n[m4_require([_LT_DECL_SED])dnl\nac_outfile=conftest.$ac_objext\necho \"$lt_simple_link_test_code\" >conftest.$ac_ext\neval \"$ac_link\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_linker_boilerplate=`cat conftest.err`\n$RM -r conftest*\n])# _LT_LINKER_BOILERPLATE\n\n# _LT_REQUIRED_DARWIN_CHECKS\n# -------------------------\nm4_defun_once([_LT_REQUIRED_DARWIN_CHECKS],[\n  case $host_os in\n    rhapsody* | darwin*)\n    AC_CHECK_TOOL([DSYMUTIL], [dsymutil], [:])\n    AC_CHECK_TOOL([NMEDIT], [nmedit], [:])\n    AC_CHECK_TOOL([LIPO], [lipo], [:])\n    AC_CHECK_TOOL([OTOOL], [otool], [:])\n    AC_CHECK_TOOL([OTOOL64], [otool64], [:])\n    _LT_DECL([], [DSYMUTIL], [1],\n      [Tool to manipulate archived DWARF debug symbol files on Mac OS X])\n    _LT_DECL([], [NMEDIT], [1],\n      [Tool to change global to local symbols on Mac OS X])\n    _LT_DECL([], [LIPO], [1],\n      [Tool to manipulate fat objects and archives on Mac OS X])\n    _LT_DECL([], [OTOOL], [1],\n      [ldd/readelf like tool for Mach-O binaries on Mac OS X])\n    _LT_DECL([], [OTOOL64], [1],\n      [ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4])\n\n    AC_CACHE_CHECK([for -single_module linker flag],[lt_cv_apple_cc_single_mod],\n      [lt_cv_apple_cc_single_mod=no\n      if test -z \"$LT_MULTI_MODULE\"; then\n\t# By default we will add the -single_module flag. You can override\n\t# by either setting the environment variable LT_MULTI_MODULE\n\t# non-empty at configure time, or by adding -multi_module to the\n\t# link flags.\n\trm -rf libconftest.dylib*\n\techo \"int foo(void){return 1;}\" > conftest.c\n\techo \"$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n-dynamiclib -Wl,-single_module conftest.c\" >&AS_MESSAGE_LOG_FD\n\t$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \\\n\t  -dynamiclib -Wl,-single_module conftest.c 2>conftest.err\n        _lt_result=$?\n\t# If there is a non-empty error log, and \"single_module\"\n\t# appears in it, assume the flag caused a linker warning\n        if test -s conftest.err && $GREP single_module conftest.err; then\n\t  cat conftest.err >&AS_MESSAGE_LOG_FD\n\t# Otherwise, if the output was created with a 0 exit code from\n\t# the compiler, it worked.\n\telif test -f libconftest.dylib && test 0 = \"$_lt_result\"; then\n\t  lt_cv_apple_cc_single_mod=yes\n\telse\n\t  cat conftest.err >&AS_MESSAGE_LOG_FD\n\tfi\n\trm -rf libconftest.dylib*\n\trm -f conftest.*\n      fi])\n\n    AC_CACHE_CHECK([for -exported_symbols_list linker flag],\n      [lt_cv_ld_exported_symbols_list],\n      [lt_cv_ld_exported_symbols_list=no\n      save_LDFLAGS=$LDFLAGS\n      echo \"_main\" > conftest.sym\n      LDFLAGS=\"$LDFLAGS -Wl,-exported_symbols_list,conftest.sym\"\n      AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],\n\t[lt_cv_ld_exported_symbols_list=yes],\n\t[lt_cv_ld_exported_symbols_list=no])\n\tLDFLAGS=$save_LDFLAGS\n    ])\n\n    AC_CACHE_CHECK([for -force_load linker flag],[lt_cv_ld_force_load],\n      [lt_cv_ld_force_load=no\n      cat > conftest.c << _LT_EOF\nint forced_loaded() { return 2;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS -c -o conftest.o conftest.c\" >&AS_MESSAGE_LOG_FD\n      $LTCC $LTCFLAGS -c -o conftest.o conftest.c 2>&AS_MESSAGE_LOG_FD\n      echo \"$AR cru libconftest.a conftest.o\" >&AS_MESSAGE_LOG_FD\n      $AR cru libconftest.a conftest.o 2>&AS_MESSAGE_LOG_FD\n      echo \"$RANLIB libconftest.a\" >&AS_MESSAGE_LOG_FD\n      $RANLIB libconftest.a 2>&AS_MESSAGE_LOG_FD\n      cat > conftest.c << _LT_EOF\nint main() { return 0;}\n_LT_EOF\n      echo \"$LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a\" >&AS_MESSAGE_LOG_FD\n      $LTCC $LTCFLAGS $LDFLAGS -o conftest conftest.c -Wl,-force_load,./libconftest.a 2>conftest.err\n      _lt_result=$?\n      if test -s conftest.err && $GREP force_load conftest.err; then\n\tcat conftest.err >&AS_MESSAGE_LOG_FD\n      elif test -f conftest && test 0 = \"$_lt_result\" && $GREP forced_load conftest >/dev/null 2>&1; then\n\tlt_cv_ld_force_load=yes\n      else\n\tcat conftest.err >&AS_MESSAGE_LOG_FD\n      fi\n        rm -f conftest.err libconftest.a conftest conftest.c\n        rm -rf conftest.dSYM\n    ])\n    case $host_os in\n    rhapsody* | darwin1.[[012]])\n      _lt_dar_allow_undefined='$wl-undefined ${wl}suppress' ;;\n    darwin1.*)\n      _lt_dar_allow_undefined='$wl-flat_namespace $wl-undefined ${wl}suppress' ;;\n    darwin*) # darwin 5.x on\n      # if running on 10.5 or later, the deployment target defaults\n      # to the OS version, if on x86, and 10.4, the deployment\n      # target defaults to 10.4. Don't you love it?\n      case ${MACOSX_DEPLOYMENT_TARGET-10.0},$host in\n\t10.0,*86*-darwin8*|10.0,*-darwin[[91]]*)\n\t  _lt_dar_allow_undefined='$wl-undefined ${wl}dynamic_lookup' ;;\n\t10.[[012]][[,.]]*)\n\t  _lt_dar_allow_undefined='$wl-flat_namespace $wl-undefined ${wl}suppress' ;;\n\t10.*)\n\t  _lt_dar_allow_undefined='$wl-undefined ${wl}dynamic_lookup' ;;\n      esac\n    ;;\n  esac\n    if test yes = \"$lt_cv_apple_cc_single_mod\"; then\n      _lt_dar_single_mod='$single_module'\n    fi\n    if test yes = \"$lt_cv_ld_exported_symbols_list\"; then\n      _lt_dar_export_syms=' $wl-exported_symbols_list,$output_objdir/$libname-symbols.expsym'\n    else\n      _lt_dar_export_syms='~$NMEDIT -s $output_objdir/$libname-symbols.expsym $lib'\n    fi\n    if test : != \"$DSYMUTIL\" && test no = \"$lt_cv_ld_force_load\"; then\n      _lt_dsymutil='~$DSYMUTIL $lib || :'\n    else\n      _lt_dsymutil=\n    fi\n    ;;\n  esac\n])\n\n\n# _LT_DARWIN_LINKER_FEATURES([TAG])\n# ---------------------------------\n# Checks for linker and compiler features on darwin\nm4_defun([_LT_DARWIN_LINKER_FEATURES],\n[\n  m4_require([_LT_REQUIRED_DARWIN_CHECKS])\n  _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n  _LT_TAGVAR(hardcode_direct, $1)=no\n  _LT_TAGVAR(hardcode_automatic, $1)=yes\n  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  if test yes = \"$lt_cv_ld_force_load\"; then\n    _LT_TAGVAR(whole_archive_flag_spec, $1)='`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience $wl-force_load,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"`'\n    m4_case([$1], [F77], [_LT_TAGVAR(compiler_needs_object, $1)=yes],\n                  [FC],  [_LT_TAGVAR(compiler_needs_object, $1)=yes])\n  else\n    _LT_TAGVAR(whole_archive_flag_spec, $1)=''\n  fi\n  _LT_TAGVAR(link_all_deplibs, $1)=yes\n  _LT_TAGVAR(allow_undefined_flag, $1)=$_lt_dar_allow_undefined\n  case $cc_basename in\n     ifort*|nagfor*) _lt_dar_can_shared=yes ;;\n     *) _lt_dar_can_shared=$GCC ;;\n  esac\n  if test yes = \"$_lt_dar_can_shared\"; then\n    output_verbose_link_cmd=func_echo_all\n    _LT_TAGVAR(archive_cmds, $1)=\"\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod$_lt_dsymutil\"\n    _LT_TAGVAR(module_cmds, $1)=\"\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags$_lt_dsymutil\"\n    _LT_TAGVAR(archive_expsym_cmds, $1)=\"sed 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$libobjs \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring $_lt_dar_single_mod$_lt_dar_export_syms$_lt_dsymutil\"\n    _LT_TAGVAR(module_expsym_cmds, $1)=\"sed -e 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC \\$allow_undefined_flag -o \\$lib -bundle \\$libobjs \\$deplibs \\$compiler_flags$_lt_dar_export_syms$_lt_dsymutil\"\n    m4_if([$1], [CXX],\n[   if test yes != \"$lt_cv_apple_cc_single_mod\"; then\n      _LT_TAGVAR(archive_cmds, $1)=\"\\$CC -r -keep_private_externs -nostdlib -o \\$lib-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$lib-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring$_lt_dsymutil\"\n      _LT_TAGVAR(archive_expsym_cmds, $1)=\"sed 's|^|_|' < \\$export_symbols > \\$output_objdir/\\$libname-symbols.expsym~\\$CC -r -keep_private_externs -nostdlib -o \\$lib-master.o \\$libobjs~\\$CC -dynamiclib \\$allow_undefined_flag -o \\$lib \\$lib-master.o \\$deplibs \\$compiler_flags -install_name \\$rpath/\\$soname \\$verstring$_lt_dar_export_syms$_lt_dsymutil\"\n    fi\n],[])\n  else\n  _LT_TAGVAR(ld_shlibs, $1)=no\n  fi\n])\n\n# _LT_SYS_MODULE_PATH_AIX([TAGNAME])\n# ----------------------------------\n# Links a minimal program and checks the executable\n# for the system default hardcoded library path. In most cases,\n# this is /usr/lib:/lib, but when the MPI compilers are used\n# the location of the communication and MPI libs are included too.\n# If we don't find anything, use the default library path according\n# to the aix ld manual.\n# Store the results from the different compilers for each TAGNAME.\n# Allow to override them for all tags through lt_cv_aix_libpath.\nm4_defun([_LT_SYS_MODULE_PATH_AIX],\n[m4_require([_LT_DECL_SED])dnl\nif test set = \"${lt_cv_aix_libpath+set}\"; then\n  aix_libpath=$lt_cv_aix_libpath\nelse\n  AC_CACHE_VAL([_LT_TAGVAR([lt_cv_aix_libpath_], [$1])],\n  [AC_LINK_IFELSE([AC_LANG_PROGRAM],[\n  lt_aix_libpath_sed='[\n      /Import File Strings/,/^$/ {\n\t  /^0/ {\n\t      s/^0  *\\([^ ]*\\) *$/\\1/\n\t      p\n\t  }\n      }]'\n  _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  # Check for a 64-bit object if we didn't find anything.\n  if test -z \"$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\"; then\n    _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e \"$lt_aix_libpath_sed\"`\n  fi],[])\n  if test -z \"$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\"; then\n    _LT_TAGVAR([lt_cv_aix_libpath_], [$1])=/usr/lib:/lib\n  fi\n  ])\n  aix_libpath=$_LT_TAGVAR([lt_cv_aix_libpath_], [$1])\nfi\n])# _LT_SYS_MODULE_PATH_AIX\n\n\n# _LT_SHELL_INIT(ARG)\n# -------------------\nm4_define([_LT_SHELL_INIT],\n[m4_divert_text([M4SH-INIT], [$1\n])])# _LT_SHELL_INIT\n\n\n\n# _LT_PROG_ECHO_BACKSLASH\n# -----------------------\n# Find how we can fake an echo command that does not interpret backslash.\n# In particular, with Autoconf 2.60 or later we add some code to the start\n# of the generated configure script that will find a shell with a builtin\n# printf (that we can use as an echo command).\nm4_defun([_LT_PROG_ECHO_BACKSLASH],\n[ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\nECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n\nAC_MSG_CHECKING([how to print strings])\n# Test print first, because it will be a builtin if present.\nif test \"X`( print -r -- -n ) 2>/dev/null`\" = X-n && \\\n   test \"X`print -r -- $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='print -r --'\nelif test \"X`printf %s $ECHO 2>/dev/null`\" = \"X$ECHO\"; then\n  ECHO='printf %s\\n'\nelse\n  # Use this function as a fallback that always works.\n  func_fallback_echo ()\n  {\n    eval 'cat <<_LTECHO_EOF\n$[]1\n_LTECHO_EOF'\n  }\n  ECHO='func_fallback_echo'\nfi\n\n# func_echo_all arg...\n# Invoke $ECHO with all args, space-separated.\nfunc_echo_all ()\n{\n    $ECHO \"$*\"\n}\n\ncase $ECHO in\n  printf*) AC_MSG_RESULT([printf]) ;;\n  print*) AC_MSG_RESULT([print -r]) ;;\n  *) AC_MSG_RESULT([cat]) ;;\nesac\n\nm4_ifdef([_AS_DETECT_SUGGESTED],\n[_AS_DETECT_SUGGESTED([\n  test -n \"${ZSH_VERSION+set}${BASH_VERSION+set}\" || (\n    ECHO='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\n    ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO\n    ECHO=$ECHO$ECHO$ECHO$ECHO$ECHO$ECHO\n    PATH=/empty FPATH=/empty; export PATH FPATH\n    test \"X`printf %s $ECHO`\" = \"X$ECHO\" \\\n      || test \"X`print -r -- $ECHO`\" = \"X$ECHO\" )])])\n\n_LT_DECL([], [SHELL], [1], [Shell to use when invoking shell scripts])\n_LT_DECL([], [ECHO], [1], [An echo program that protects backslashes])\n])# _LT_PROG_ECHO_BACKSLASH\n\n\n# _LT_WITH_SYSROOT\n# ----------------\nAC_DEFUN([_LT_WITH_SYSROOT],\n[AC_MSG_CHECKING([for sysroot])\nAC_ARG_WITH([sysroot],\n[AS_HELP_STRING([--with-sysroot@<:@=DIR@:>@],\n  [Search for dependent libraries within DIR (or the compiler's sysroot\n   if not specified).])],\n[], [with_sysroot=no])\n\ndnl lt_sysroot will always be passed unquoted.  We quote it here\ndnl in case the user passed a directory name.\nlt_sysroot=\ncase $with_sysroot in #(\n yes)\n   if test yes = \"$GCC\"; then\n     lt_sysroot=`$CC --print-sysroot 2>/dev/null`\n   fi\n   ;; #(\n /*)\n   lt_sysroot=`echo \"$with_sysroot\" | sed -e \"$sed_quote_subst\"`\n   ;; #(\n no|'')\n   ;; #(\n *)\n   AC_MSG_RESULT([$with_sysroot])\n   AC_MSG_ERROR([The sysroot must be an absolute path.])\n   ;;\nesac\n\n AC_MSG_RESULT([${lt_sysroot:-no}])\n_LT_DECL([], [lt_sysroot], [0], [The root where to search for ]dnl\n[dependent libraries, and where our libraries should be installed.])])\n\n# _LT_ENABLE_LOCK\n# ---------------\nm4_defun([_LT_ENABLE_LOCK],\n[AC_ARG_ENABLE([libtool-lock],\n  [AS_HELP_STRING([--disable-libtool-lock],\n    [avoid locking (might break parallel builds)])])\ntest no = \"$enable_libtool_lock\" || enable_libtool_lock=yes\n\n# Some flags need to be propagated to the compiler or linker for good\n# libtool support.\ncase $host in\nia64-*-hpux*)\n  # Find out what ABI is being produced by ac_compile, and set mode\n  # options accordingly.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.$ac_objext` in\n      *ELF-32*)\n\tHPUX_IA64_MODE=32\n\t;;\n      *ELF-64*)\n\tHPUX_IA64_MODE=64\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n*-*-irix6*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo '[#]line '$LINENO' \"configure\"' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    if test yes = \"$lt_cv_prog_gnu_ld\"; then\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -melf32bsmip\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -melf32bmipn32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -melf64bmip\"\n\t;;\n      esac\n    else\n      case `/usr/bin/file conftest.$ac_objext` in\n\t*32-bit*)\n\t  LD=\"${LD-ld} -32\"\n\t  ;;\n\t*N32*)\n\t  LD=\"${LD-ld} -n32\"\n\t  ;;\n\t*64-bit*)\n\t  LD=\"${LD-ld} -64\"\n\t  ;;\n      esac\n    fi\n  fi\n  rm -rf conftest*\n  ;;\n\nmips64*-*linux*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo '[#]line '$LINENO' \"configure\"' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    emul=elf\n    case `/usr/bin/file conftest.$ac_objext` in\n      *32-bit*)\n\temul=\"${emul}32\"\n\t;;\n      *64-bit*)\n\temul=\"${emul}64\"\n\t;;\n    esac\n    case `/usr/bin/file conftest.$ac_objext` in\n      *MSB*)\n\temul=\"${emul}btsmip\"\n\t;;\n      *LSB*)\n\temul=\"${emul}ltsmip\"\n\t;;\n    esac\n    case `/usr/bin/file conftest.$ac_objext` in\n      *N32*)\n\temul=\"${emul}n32\"\n\t;;\n    esac\n    LD=\"${LD-ld} -m $emul\"\n  fi\n  rm -rf conftest*\n  ;;\n\nx86_64-*kfreebsd*-gnu|x86_64-*linux*|powerpc*-*linux*| \\\ns390*-*linux*|s390*-*tpf*|sparc*-*linux*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.  Note that the listed cases only cover the\n  # situations where additional linker options are needed (such as when\n  # doing 32-bit compilation for a host where ld defaults to 64-bit, or\n  # vice versa); the common cases where no linker options are needed do\n  # not appear in the list.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n      *32-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_i386_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    case `/usr/bin/file conftest.o` in\n\t      *x86-64*)\n\t\tLD=\"${LD-ld} -m elf32_x86_64\"\n\t\t;;\n\t      *)\n\t\tLD=\"${LD-ld} -m elf_i386\"\n\t\t;;\n\t    esac\n\t    ;;\n\t  powerpc64le-*linux*)\n\t    LD=\"${LD-ld} -m elf32lppclinux\"\n\t    ;;\n\t  powerpc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32ppclinux\"\n\t    ;;\n\t  s390x-*linux*)\n\t    LD=\"${LD-ld} -m elf_s390\"\n\t    ;;\n\t  sparc64-*linux*)\n\t    LD=\"${LD-ld} -m elf32_sparc\"\n\t    ;;\n\tesac\n\t;;\n      *64-bit*)\n\tcase $host in\n\t  x86_64-*kfreebsd*-gnu)\n\t    LD=\"${LD-ld} -m elf_x86_64_fbsd\"\n\t    ;;\n\t  x86_64-*linux*)\n\t    LD=\"${LD-ld} -m elf_x86_64\"\n\t    ;;\n\t  powerpcle-*linux*)\n\t    LD=\"${LD-ld} -m elf64lppc\"\n\t    ;;\n\t  powerpc-*linux*)\n\t    LD=\"${LD-ld} -m elf64ppc\"\n\t    ;;\n\t  s390*-*linux*|s390*-*tpf*)\n\t    LD=\"${LD-ld} -m elf64_s390\"\n\t    ;;\n\t  sparc*-*linux*)\n\t    LD=\"${LD-ld} -m elf64_sparc\"\n\t    ;;\n\tesac\n\t;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n\n*-*-sco3.2v5*)\n  # On SCO OpenServer 5, we need -belf to get full-featured binaries.\n  SAVE_CFLAGS=$CFLAGS\n  CFLAGS=\"$CFLAGS -belf\"\n  AC_CACHE_CHECK([whether the C compiler needs -belf], lt_cv_cc_needs_belf,\n    [AC_LANG_PUSH(C)\n     AC_LINK_IFELSE([AC_LANG_PROGRAM([[]],[[]])],[lt_cv_cc_needs_belf=yes],[lt_cv_cc_needs_belf=no])\n     AC_LANG_POP])\n  if test yes != \"$lt_cv_cc_needs_belf\"; then\n    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf\n    CFLAGS=$SAVE_CFLAGS\n  fi\n  ;;\n*-*solaris*)\n  # Find out what ABI is being produced by ac_compile, and set linker\n  # options accordingly.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n    *64-bit*)\n      case $lt_cv_prog_gnu_ld in\n      yes*)\n        case $host in\n        i?86-*-solaris*|x86_64-*-solaris*)\n          LD=\"${LD-ld} -m elf_x86_64\"\n          ;;\n        sparc*-*-solaris*)\n          LD=\"${LD-ld} -m elf64_sparc\"\n          ;;\n        esac\n        # GNU ld 2.21 introduced _sol2 emulations.  Use them if available.\n        if ${LD-ld} -V | grep _sol2 >/dev/null 2>&1; then\n          LD=${LD-ld}_sol2\n        fi\n        ;;\n      *)\n\tif ${LD-ld} -64 -r -o conftest2.o conftest.o >/dev/null 2>&1; then\n\t  LD=\"${LD-ld} -64\"\n\tfi\n\t;;\n      esac\n      ;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\nesac\n\nneed_locks=$enable_libtool_lock\n])# _LT_ENABLE_LOCK\n\n\n# _LT_PROG_AR\n# -----------\nm4_defun([_LT_PROG_AR],\n[AC_CHECK_TOOLS(AR, [ar], false)\n: ${AR=ar}\n: ${AR_FLAGS=cru}\n_LT_DECL([], [AR], [1], [The archiver])\n_LT_DECL([], [AR_FLAGS], [1], [Flags to create an archive])\n\nAC_CACHE_CHECK([for archiver @FILE support], [lt_cv_ar_at_file],\n  [lt_cv_ar_at_file=no\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM],\n     [echo conftest.$ac_objext > conftest.lst\n      lt_ar_try='$AR $AR_FLAGS libconftest.a @conftest.lst >&AS_MESSAGE_LOG_FD'\n      AC_TRY_EVAL([lt_ar_try])\n      if test 0 -eq \"$ac_status\"; then\n\t# Ensure the archiver fails upon bogus file names.\n\trm -f conftest.$ac_objext libconftest.a\n\tAC_TRY_EVAL([lt_ar_try])\n\tif test 0 -ne \"$ac_status\"; then\n          lt_cv_ar_at_file=@\n        fi\n      fi\n      rm -f conftest.* libconftest.a\n     ])\n  ])\n\nif test no = \"$lt_cv_ar_at_file\"; then\n  archiver_list_spec=\nelse\n  archiver_list_spec=$lt_cv_ar_at_file\nfi\n_LT_DECL([], [archiver_list_spec], [1],\n  [How to feed a file listing to the archiver])\n])# _LT_PROG_AR\n\n\n# _LT_CMD_OLD_ARCHIVE\n# -------------------\nm4_defun([_LT_CMD_OLD_ARCHIVE],\n[_LT_PROG_AR\n\nAC_CHECK_TOOL(STRIP, strip, :)\ntest -z \"$STRIP\" && STRIP=:\n_LT_DECL([], [STRIP], [1], [A symbol stripping program])\n\nAC_CHECK_TOOL(RANLIB, ranlib, :)\ntest -z \"$RANLIB\" && RANLIB=:\n_LT_DECL([], [RANLIB], [1],\n    [Commands used to install an old-style archive])\n\n# Determine commands to create old-style static archives.\nold_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs'\nold_postinstall_cmds='chmod 644 $oldlib'\nold_postuninstall_cmds=\n\nif test -n \"$RANLIB\"; then\n  case $host_os in\n  bitrig* | openbsd*)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB -t \\$tool_oldlib\"\n    ;;\n  *)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB \\$tool_oldlib\"\n    ;;\n  esac\n  old_archive_cmds=\"$old_archive_cmds~\\$RANLIB \\$tool_oldlib\"\nfi\n\ncase $host_os in\n  darwin*)\n    lock_old_archive_extraction=yes ;;\n  *)\n    lock_old_archive_extraction=no ;;\nesac\n_LT_DECL([], [old_postinstall_cmds], [2])\n_LT_DECL([], [old_postuninstall_cmds], [2])\n_LT_TAGDECL([], [old_archive_cmds], [2],\n    [Commands used to build an old-style archive])\n_LT_DECL([], [lock_old_archive_extraction], [0],\n    [Whether to use a lock for old archive extraction])\n])# _LT_CMD_OLD_ARCHIVE\n\n\n# _LT_COMPILER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#\t\t[OUTPUT-FILE], [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------------------\n# Check whether the given compiler option works\nAC_DEFUN([_LT_COMPILER_OPTION],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_SED])dnl\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   m4_if([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n   lt_compiler_flag=\"$3\"  ## exclude from sc_useless_quotes_in_assignment\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   # The option is referenced via a variable to avoid confusing sed.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>conftest.err)\n   ac_status=$?\n   cat conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s \"$ac_outfile\"; then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings other than the usual output.\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' >conftest.exp\n     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then\n       $2=yes\n     fi\n   fi\n   $RM conftest*\n])\n\nif test yes = \"[$]$2\"; then\n    m4_if([$5], , :, [$5])\nelse\n    m4_if([$6], , :, [$6])\nfi\n])# _LT_COMPILER_OPTION\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_COMPILER_OPTION], [_LT_COMPILER_OPTION])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [])\n\n\n# _LT_LINKER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#                  [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------\n# Check whether the given linker option works\nAC_DEFUN([_LT_LINKER_OPTION],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_SED])dnl\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   save_LDFLAGS=$LDFLAGS\n   LDFLAGS=\"$LDFLAGS $3\"\n   echo \"$lt_simple_link_test_code\" > conftest.$ac_ext\n   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then\n     # The linker can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     if test -s conftest.err; then\n       # Append any errors to the config.log.\n       cat conftest.err 1>&AS_MESSAGE_LOG_FD\n       $ECHO \"$_lt_linker_boilerplate\" | $SED '/^$/d' > conftest.exp\n       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n       if diff conftest.exp conftest.er2 >/dev/null; then\n         $2=yes\n       fi\n     else\n       $2=yes\n     fi\n   fi\n   $RM -r conftest*\n   LDFLAGS=$save_LDFLAGS\n])\n\nif test yes = \"[$]$2\"; then\n    m4_if([$4], , :, [$4])\nelse\n    m4_if([$5], , :, [$5])\nfi\n])# _LT_LINKER_OPTION\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_LINKER_OPTION], [_LT_LINKER_OPTION])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_LINKER_OPTION], [])\n\n\n# LT_CMD_MAX_LEN\n#---------------\nAC_DEFUN([LT_CMD_MAX_LEN],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\n# find the maximum length of command line arguments\nAC_MSG_CHECKING([the maximum length of command line arguments])\nAC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl\n  i=0\n  teststring=ABCD\n\n  case $build_os in\n  msdosdjgpp*)\n    # On DJGPP, this test can blow up pretty badly due to problems in libc\n    # (any single argument exceeding 2000 bytes causes a buffer overrun\n    # during glob expansion).  Even if it were fixed, the result of this\n    # check would be larger than it should be.\n    lt_cv_sys_max_cmd_len=12288;    # 12K is about right\n    ;;\n\n  gnu*)\n    # Under GNU Hurd, this test is not required because there is\n    # no limit to the length of command line arguments.\n    # Libtool will interpret -1 as no limit whatsoever\n    lt_cv_sys_max_cmd_len=-1;\n    ;;\n\n  cygwin* | mingw* | cegcc*)\n    # On Win9x/ME, this test blows up -- it succeeds, but takes\n    # about 5 minutes as the teststring grows exponentially.\n    # Worse, since 9x/ME are not pre-emptively multitasking,\n    # you end up with a \"frozen\" computer, even though with patience\n    # the test eventually succeeds (with a max line length of 256k).\n    # Instead, let's just punt: use the minimum linelength reported by\n    # all of the supported platforms: 8192 (on NT/2K/XP).\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  mint*)\n    # On MiNT this can take a long time and run out of memory.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  amigaos*)\n    # On AmigaOS with pdksh, this test takes hours, literally.\n    # So we just punt and use a minimum line length of 8192.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  bitrig* | darwin* | dragonfly* | freebsd* | netbsd* | openbsd*)\n    # This has been around since 386BSD, at least.  Likely further.\n    if test -x /sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`\n    elif test -x /usr/sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`\n    else\n      lt_cv_sys_max_cmd_len=65536\t# usable default for all BSDs\n    fi\n    # And add a safety zone\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    ;;\n\n  interix*)\n    # We know the value 262144 and hardcode it with a safety zone (like BSD)\n    lt_cv_sys_max_cmd_len=196608\n    ;;\n\n  os2*)\n    # The test takes a long time on OS/2.\n    lt_cv_sys_max_cmd_len=8192\n    ;;\n\n  osf*)\n    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure\n    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not\n    # nice to cause kernel panics so lets avoid the loop below.\n    # First set a reasonable default.\n    lt_cv_sys_max_cmd_len=16384\n    #\n    if test -x /sbin/sysconfig; then\n      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in\n        *1*) lt_cv_sys_max_cmd_len=-1 ;;\n      esac\n    fi\n    ;;\n  sco3.2v5*)\n    lt_cv_sys_max_cmd_len=102400\n    ;;\n  sysv5* | sco5v6* | sysv4.2uw2*)\n    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`\n    if test -n \"$kargmax\"; then\n      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[[\t ]]//'`\n    else\n      lt_cv_sys_max_cmd_len=32768\n    fi\n    ;;\n  *)\n    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`\n    if test -n \"$lt_cv_sys_max_cmd_len\" && \\\n       test undefined != \"$lt_cv_sys_max_cmd_len\"; then\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    else\n      # Make teststring a little bigger before we do anything with it.\n      # a 1K string should be a reasonable start.\n      for i in 1 2 3 4 5 6 7 8; do\n        teststring=$teststring$teststring\n      done\n      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}\n      # If test is not a shell built-in, we'll probably end up computing a\n      # maximum length that is only half of the actual maximum length, but\n      # we can't tell.\n      while { test X`env echo \"$teststring$teststring\" 2>/dev/null` \\\n\t         = \"X$teststring$teststring\"; } >/dev/null 2>&1 &&\n\t      test 17 != \"$i\" # 1/2 MB should be enough\n      do\n        i=`expr $i + 1`\n        teststring=$teststring$teststring\n      done\n      # Only check the string length outside the loop.\n      lt_cv_sys_max_cmd_len=`expr \"X$teststring\" : \".*\" 2>&1`\n      teststring=\n      # Add a significant safety factor because C++ compilers can tack on\n      # massive amounts of additional arguments before passing them to the\n      # linker.  It appears as though 1/2 is a usable value.\n      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 2`\n    fi\n    ;;\n  esac\n])\nif test -n \"$lt_cv_sys_max_cmd_len\"; then\n  AC_MSG_RESULT($lt_cv_sys_max_cmd_len)\nelse\n  AC_MSG_RESULT(none)\nfi\nmax_cmd_len=$lt_cv_sys_max_cmd_len\n_LT_DECL([], [max_cmd_len], [0],\n    [What is the maximum length of a command?])\n])# LT_CMD_MAX_LEN\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_SYS_MAX_CMD_LEN], [LT_CMD_MAX_LEN])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [])\n\n\n# _LT_HEADER_DLFCN\n# ----------------\nm4_defun([_LT_HEADER_DLFCN],\n[AC_CHECK_HEADERS([dlfcn.h], [], [], [AC_INCLUDES_DEFAULT])dnl\n])# _LT_HEADER_DLFCN\n\n\n# _LT_TRY_DLOPEN_SELF (ACTION-IF-TRUE, ACTION-IF-TRUE-W-USCORE,\n#                      ACTION-IF-FALSE, ACTION-IF-CROSS-COMPILING)\n# ----------------------------------------------------------------\nm4_defun([_LT_TRY_DLOPEN_SELF],\n[m4_require([_LT_HEADER_DLFCN])dnl\nif test yes = \"$cross_compiling\"; then :\n  [$4]\nelse\n  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n  lt_status=$lt_dlunknown\n  cat > conftest.$ac_ext <<_LT_EOF\n[#line $LINENO \"configure\"\n#include \"confdefs.h\"\n\n#if HAVE_DLFCN_H\n#include <dlfcn.h>\n#endif\n\n#include <stdio.h>\n\n#ifdef RTLD_GLOBAL\n#  define LT_DLGLOBAL\t\tRTLD_GLOBAL\n#else\n#  ifdef DL_GLOBAL\n#    define LT_DLGLOBAL\t\tDL_GLOBAL\n#  else\n#    define LT_DLGLOBAL\t\t0\n#  endif\n#endif\n\n/* We may have to define LT_DLLAZY_OR_NOW in the command line if we\n   find out it does not work in some platform. */\n#ifndef LT_DLLAZY_OR_NOW\n#  ifdef RTLD_LAZY\n#    define LT_DLLAZY_OR_NOW\t\tRTLD_LAZY\n#  else\n#    ifdef DL_LAZY\n#      define LT_DLLAZY_OR_NOW\t\tDL_LAZY\n#    else\n#      ifdef RTLD_NOW\n#        define LT_DLLAZY_OR_NOW\tRTLD_NOW\n#      else\n#        ifdef DL_NOW\n#          define LT_DLLAZY_OR_NOW\tDL_NOW\n#        else\n#          define LT_DLLAZY_OR_NOW\t0\n#        endif\n#      endif\n#    endif\n#  endif\n#endif\n\n/* When -fvisibility=hidden is used, assume the code has been annotated\n   correspondingly for the symbols needed.  */\n#if defined __GNUC__ && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))\nint fnord () __attribute__((visibility(\"default\")));\n#endif\n\nint fnord () { return 42; }\nint main ()\n{\n  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);\n  int status = $lt_dlunknown;\n\n  if (self)\n    {\n      if (dlsym (self,\"fnord\"))       status = $lt_dlno_uscore;\n      else\n        {\n\t  if (dlsym( self,\"_fnord\"))  status = $lt_dlneed_uscore;\n          else puts (dlerror ());\n\t}\n      /* dlclose (self); */\n    }\n  else\n    puts (dlerror ());\n\n  return status;\n}]\n_LT_EOF\n  if AC_TRY_EVAL(ac_link) && test -s \"conftest$ac_exeext\" 2>/dev/null; then\n    (./conftest; exit; ) >&AS_MESSAGE_LOG_FD 2>/dev/null\n    lt_status=$?\n    case x$lt_status in\n      x$lt_dlno_uscore) $1 ;;\n      x$lt_dlneed_uscore) $2 ;;\n      x$lt_dlunknown|x*) $3 ;;\n    esac\n  else :\n    # compilation failed\n    $3\n  fi\nfi\nrm -fr conftest*\n])# _LT_TRY_DLOPEN_SELF\n\n\n# LT_SYS_DLOPEN_SELF\n# ------------------\nAC_DEFUN([LT_SYS_DLOPEN_SELF],\n[m4_require([_LT_HEADER_DLFCN])dnl\nif test yes != \"$enable_dlopen\"; then\n  enable_dlopen=unknown\n  enable_dlopen_self=unknown\n  enable_dlopen_self_static=unknown\nelse\n  lt_cv_dlopen=no\n  lt_cv_dlopen_libs=\n\n  case $host_os in\n  beos*)\n    lt_cv_dlopen=load_add_on\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ;;\n\n  mingw* | pw32* | cegcc*)\n    lt_cv_dlopen=LoadLibrary\n    lt_cv_dlopen_libs=\n    ;;\n\n  cygwin*)\n    lt_cv_dlopen=dlopen\n    lt_cv_dlopen_libs=\n    ;;\n\n  darwin*)\n    # if libdl is installed we need to link against it\n    AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl],[\n    lt_cv_dlopen=dyld\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ])\n    ;;\n\n  tpf*)\n    # Don't try to run any link tests for TPF.  We know it's impossible\n    # because TPF is a cross-compiler, and we know how we open DSOs.\n    lt_cv_dlopen=dlopen\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=no\n    ;;\n\n  *)\n    AC_CHECK_FUNC([shl_load],\n\t  [lt_cv_dlopen=shl_load],\n      [AC_CHECK_LIB([dld], [shl_load],\n\t    [lt_cv_dlopen=shl_load lt_cv_dlopen_libs=-ldld],\n\t[AC_CHECK_FUNC([dlopen],\n\t      [lt_cv_dlopen=dlopen],\n\t  [AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl],\n\t    [AC_CHECK_LIB([svld], [dlopen],\n\t\t  [lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-lsvld],\n\t      [AC_CHECK_LIB([dld], [dld_link],\n\t\t    [lt_cv_dlopen=dld_link lt_cv_dlopen_libs=-ldld])\n\t      ])\n\t    ])\n\t  ])\n\t])\n      ])\n    ;;\n  esac\n\n  if test no = \"$lt_cv_dlopen\"; then\n    enable_dlopen=no\n  else\n    enable_dlopen=yes\n  fi\n\n  case $lt_cv_dlopen in\n  dlopen)\n    save_CPPFLAGS=$CPPFLAGS\n    test yes = \"$ac_cv_header_dlfcn_h\" && CPPFLAGS=\"$CPPFLAGS -DHAVE_DLFCN_H\"\n\n    save_LDFLAGS=$LDFLAGS\n    wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $export_dynamic_flag_spec\\\"\n\n    save_LIBS=$LIBS\n    LIBS=\"$lt_cv_dlopen_libs $LIBS\"\n\n    AC_CACHE_CHECK([whether a program can dlopen itself],\n\t  lt_cv_dlopen_self, [dnl\n\t  _LT_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self=yes, lt_cv_dlopen_self=yes,\n\t    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)\n    ])\n\n    if test yes = \"$lt_cv_dlopen_self\"; then\n      wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $lt_prog_compiler_static\\\"\n      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],\n\t  lt_cv_dlopen_self_static, [dnl\n\t  _LT_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self_static=yes, lt_cv_dlopen_self_static=yes,\n\t    lt_cv_dlopen_self_static=no,  lt_cv_dlopen_self_static=cross)\n      ])\n    fi\n\n    CPPFLAGS=$save_CPPFLAGS\n    LDFLAGS=$save_LDFLAGS\n    LIBS=$save_LIBS\n    ;;\n  esac\n\n  case $lt_cv_dlopen_self in\n  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;\n  *) enable_dlopen_self=unknown ;;\n  esac\n\n  case $lt_cv_dlopen_self_static in\n  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;\n  *) enable_dlopen_self_static=unknown ;;\n  esac\nfi\n_LT_DECL([dlopen_support], [enable_dlopen], [0],\n\t [Whether dlopen is supported])\n_LT_DECL([dlopen_self], [enable_dlopen_self], [0],\n\t [Whether dlopen of programs is supported])\n_LT_DECL([dlopen_self_static], [enable_dlopen_self_static], [0],\n\t [Whether dlopen of statically linked programs is supported])\n])# LT_SYS_DLOPEN_SELF\n\n# Old name:\nAU_ALIAS([AC_LIBTOOL_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [])\n\n\n# _LT_COMPILER_C_O([TAGNAME])\n# ---------------------------\n# Check to see if options -c and -o are simultaneously supported by compiler.\n# This macro does not hard code the compiler like AC_PROG_CC_C_O.\nm4_defun([_LT_COMPILER_C_O],\n[m4_require([_LT_DECL_SED])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_TAG_COMPILER])dnl\nAC_CACHE_CHECK([if $compiler supports -c -o file.$ac_objext],\n  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)],\n  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=no\n   $RM -r conftest 2>/dev/null\n   mkdir conftest\n   cd conftest\n   mkdir out\n   echo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n   lt_compiler_flag=\"-o out/conftest2.$ac_objext\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:$LINENO: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>out/conftest.err)\n   ac_status=$?\n   cat out/conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s out/conftest2.$ac_objext\n   then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     $ECHO \"$_lt_compiler_boilerplate\" | $SED '/^$/d' > out/conftest.exp\n     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2\n     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then\n       _LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n     fi\n   fi\n   chmod u+w . 2>&AS_MESSAGE_LOG_FD\n   $RM conftest*\n   # SGI C++ compiler will create directory out/ii_files/ for\n   # template instantiation\n   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files\n   $RM out/* && rmdir out\n   cd ..\n   $RM -r conftest\n   $RM conftest*\n])\n_LT_TAGDECL([compiler_c_o], [lt_cv_prog_compiler_c_o], [1],\n\t[Does compiler simultaneously support -c and -o options?])\n])# _LT_COMPILER_C_O\n\n\n# _LT_COMPILER_FILE_LOCKS([TAGNAME])\n# ----------------------------------\n# Check to see if we can do hard links to lock some files if needed\nm4_defun([_LT_COMPILER_FILE_LOCKS],\n[m4_require([_LT_ENABLE_LOCK])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\n_LT_COMPILER_C_O([$1])\n\nhard_links=nottested\nif test no = \"$_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)\" && test no != \"$need_locks\"; then\n  # do not overwrite the value of need_locks provided by the user\n  AC_MSG_CHECKING([if we can lock with hard links])\n  hard_links=yes\n  $RM conftest*\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  touch conftest.a\n  ln conftest.a conftest.b 2>&5 || hard_links=no\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  AC_MSG_RESULT([$hard_links])\n  if test no = \"$hard_links\"; then\n    AC_MSG_WARN(['$CC' does not support '-c -o', so 'make -j' may be unsafe])\n    need_locks=warn\n  fi\nelse\n  need_locks=no\nfi\n_LT_DECL([], [need_locks], [1], [Must we lock files when doing compilation?])\n])# _LT_COMPILER_FILE_LOCKS\n\n\n# _LT_CHECK_OBJDIR\n# ----------------\nm4_defun([_LT_CHECK_OBJDIR],\n[AC_CACHE_CHECK([for objdir], [lt_cv_objdir],\n[rm -f .libs 2>/dev/null\nmkdir .libs 2>/dev/null\nif test -d .libs; then\n  lt_cv_objdir=.libs\nelse\n  # MS-DOS does not allow filenames that begin with a dot.\n  lt_cv_objdir=_libs\nfi\nrmdir .libs 2>/dev/null])\nobjdir=$lt_cv_objdir\n_LT_DECL([], [objdir], [0],\n         [The name of the directory that contains temporary libtool files])dnl\nm4_pattern_allow([LT_OBJDIR])dnl\nAC_DEFINE_UNQUOTED([LT_OBJDIR], \"$lt_cv_objdir/\",\n  [Define to the sub-directory where libtool stores uninstalled libraries.])\n])# _LT_CHECK_OBJDIR\n\n\n# _LT_LINKER_HARDCODE_LIBPATH([TAGNAME])\n# --------------------------------------\n# Check hardcoding attributes.\nm4_defun([_LT_LINKER_HARDCODE_LIBPATH],\n[AC_MSG_CHECKING([how to hardcode library paths into programs])\n_LT_TAGVAR(hardcode_action, $1)=\nif test -n \"$_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\" ||\n   test -n \"$_LT_TAGVAR(runpath_var, $1)\" ||\n   test yes = \"$_LT_TAGVAR(hardcode_automatic, $1)\"; then\n\n  # We can hardcode non-existent directories.\n  if test no != \"$_LT_TAGVAR(hardcode_direct, $1)\" &&\n     # If the only mechanism to avoid hardcoding is shlibpath_var, we\n     # have to relink, otherwise we might link with an installed library\n     # when we should be linking with a yet-to-be-installed one\n     ## test no != \"$_LT_TAGVAR(hardcode_shlibpath_var, $1)\" &&\n     test no != \"$_LT_TAGVAR(hardcode_minus_L, $1)\"; then\n    # Linking always hardcodes the temporary library directory.\n    _LT_TAGVAR(hardcode_action, $1)=relink\n  else\n    # We can link without hardcoding, and we can hardcode nonexisting dirs.\n    _LT_TAGVAR(hardcode_action, $1)=immediate\n  fi\nelse\n  # We cannot hardcode anything, or else we can only hardcode existing\n  # directories.\n  _LT_TAGVAR(hardcode_action, $1)=unsupported\nfi\nAC_MSG_RESULT([$_LT_TAGVAR(hardcode_action, $1)])\n\nif test relink = \"$_LT_TAGVAR(hardcode_action, $1)\" ||\n   test yes = \"$_LT_TAGVAR(inherit_rpath, $1)\"; then\n  # Fast installation is not supported\n  enable_fast_install=no\nelif test yes = \"$shlibpath_overrides_runpath\" ||\n     test no = \"$enable_shared\"; then\n  # Fast installation is not necessary\n  enable_fast_install=needless\nfi\n_LT_TAGDECL([], [hardcode_action], [0],\n    [How to hardcode a shared library path into an executable])\n])# _LT_LINKER_HARDCODE_LIBPATH\n\n\n# _LT_CMD_STRIPLIB\n# ----------------\nm4_defun([_LT_CMD_STRIPLIB],\n[m4_require([_LT_DECL_EGREP])\nstriplib=\nold_striplib=\nAC_MSG_CHECKING([whether stripping libraries is possible])\nif test -n \"$STRIP\" && $STRIP -V 2>&1 | $GREP \"GNU strip\" >/dev/null; then\n  test -z \"$old_striplib\" && old_striplib=\"$STRIP --strip-debug\"\n  test -z \"$striplib\" && striplib=\"$STRIP --strip-unneeded\"\n  AC_MSG_RESULT([yes])\nelse\n# FIXME - insert some real tests, host_os isn't really good enough\n  case $host_os in\n  darwin*)\n    if test -n \"$STRIP\"; then\n      striplib=\"$STRIP -x\"\n      old_striplib=\"$STRIP -S\"\n      AC_MSG_RESULT([yes])\n    else\n      AC_MSG_RESULT([no])\n    fi\n    ;;\n  *)\n    AC_MSG_RESULT([no])\n    ;;\n  esac\nfi\n_LT_DECL([], [old_striplib], [1], [Commands to strip libraries])\n_LT_DECL([], [striplib], [1])\n])# _LT_CMD_STRIPLIB\n\n\n# _LT_PREPARE_MUNGE_PATH_LIST\n# ---------------------------\n# Make sure func_munge_path_list() is defined correctly.\nm4_defun([_LT_PREPARE_MUNGE_PATH_LIST],\n[[# func_munge_path_list VARIABLE PATH\n# -----------------------------------\n# VARIABLE is name of variable containing _space_ separated list of\n# directories to be munged by the contents of PATH, which is string\n# having a format:\n# \"DIR[:DIR]:\"\n#       string \"DIR[ DIR]\" will be prepended to VARIABLE\n# \":DIR[:DIR]\"\n#       string \"DIR[ DIR]\" will be appended to VARIABLE\n# \"DIRP[:DIRP]::[DIRA:]DIRA\"\n#       string \"DIRP[ DIRP]\" will be prepended to VARIABLE and string\n#       \"DIRA[ DIRA]\" will be appended to VARIABLE\n# \"DIR[:DIR]\"\n#       VARIABLE will be replaced by \"DIR[ DIR]\"\nfunc_munge_path_list ()\n{\n    case x@S|@2 in\n    x)\n        ;;\n    *:)\n        eval @S|@1=\\\"`$ECHO @S|@2 | $SED 's/:/ /g'` \\@S|@@S|@1\\\"\n        ;;\n    x:*)\n        eval @S|@1=\\\"\\@S|@@S|@1 `$ECHO @S|@2 | $SED 's/:/ /g'`\\\"\n        ;;\n    *::*)\n        eval @S|@1=\\\"\\@S|@@S|@1\\ `$ECHO @S|@2 | $SED -e 's/.*:://' -e 's/:/ /g'`\\\"\n        eval @S|@1=\\\"`$ECHO @S|@2 | $SED -e 's/::.*//' -e 's/:/ /g'`\\ \\@S|@@S|@1\\\"\n        ;;\n    *)\n        eval @S|@1=\\\"`$ECHO @S|@2 | $SED 's/:/ /g'`\\\"\n        ;;\n    esac\n}\n]])# _LT_PREPARE_PATH_LIST\n\n\n# _LT_SYS_DYNAMIC_LINKER([TAG])\n# -----------------------------\n# PORTME Fill in your ld.so characteristics\nm4_defun([_LT_SYS_DYNAMIC_LINKER],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_OBJDUMP])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_CHECK_SHELL_FEATURES])dnl\nm4_require([_LT_PREPARE_MUNGE_PATH_LIST])dnl\nAC_MSG_CHECKING([dynamic linker characteristics])\nm4_if([$1],\n\t[], [\nif test yes = \"$GCC\"; then\n  case $host_os in\n    darwin*) lt_awk_arg='/^libraries:/,/LR/' ;;\n    *) lt_awk_arg='/^libraries:/' ;;\n  esac\n  case $host_os in\n    mingw* | cegcc*) lt_sed_strip_eq='s|=\\([[A-Za-z]]:\\)|\\1|g' ;;\n    *) lt_sed_strip_eq='s|=/|/|g' ;;\n  esac\n  lt_search_path_spec=`$CC -print-search-dirs | awk $lt_awk_arg | $SED -e \"s/^libraries://\" -e $lt_sed_strip_eq`\n  case $lt_search_path_spec in\n  *\\;*)\n    # if the path contains \";\" then we assume it to be the separator\n    # otherwise default to the standard path separator (i.e. \":\") - it is\n    # assumed that no part of a normal pathname contains \";\" but that should\n    # okay in the real world where \";\" in dirpaths is itself problematic.\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED 's/;/ /g'`\n    ;;\n  *)\n    lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $SED \"s/$PATH_SEPARATOR/ /g\"`\n    ;;\n  esac\n  # Ok, now we have the path, separated by spaces, we can step through it\n  # and add multilib dir if necessary...\n  lt_tmp_lt_search_path_spec=\n  lt_multi_os_dir=/`$CC $CPPFLAGS $CFLAGS $LDFLAGS -print-multi-os-directory 2>/dev/null`\n  # ...but if some path component already ends with the multilib dir we assume\n  # that all is fine and trust -print-search-dirs as is (GCC 4.2? or newer).\n  case \"$lt_multi_os_dir; $lt_search_path_spec \" in\n  \"/; \"* | \"/.; \"* | \"/./; \"* | *\"$lt_multi_os_dir \"* | *\"$lt_multi_os_dir/ \"*)\n    lt_multi_os_dir=\n    ;;\n  esac\n  for lt_sys_path in $lt_search_path_spec; do\n    if test -d \"$lt_sys_path$lt_multi_os_dir\"; then\n      lt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path$lt_multi_os_dir\"\n    elif test -n \"$lt_multi_os_dir\"; then\n      test -d \"$lt_sys_path\" && \\\n\tlt_tmp_lt_search_path_spec=\"$lt_tmp_lt_search_path_spec $lt_sys_path\"\n    fi\n  done\n  lt_search_path_spec=`$ECHO \"$lt_tmp_lt_search_path_spec\" | awk '\nBEGIN {RS = \" \"; FS = \"/|\\n\";} {\n  lt_foo = \"\";\n  lt_count = 0;\n  for (lt_i = NF; lt_i > 0; lt_i--) {\n    if ($lt_i != \"\" && $lt_i != \".\") {\n      if ($lt_i == \"..\") {\n        lt_count++;\n      } else {\n        if (lt_count == 0) {\n          lt_foo = \"/\" $lt_i lt_foo;\n        } else {\n          lt_count--;\n        }\n      }\n    }\n  }\n  if (lt_foo != \"\") { lt_freq[[lt_foo]]++; }\n  if (lt_freq[[lt_foo]] == 1) { print lt_foo; }\n}'`\n  # AWK program above erroneously prepends '/' to C:/dos/paths\n  # for these hosts.\n  case $host_os in\n    mingw* | cegcc*) lt_search_path_spec=`$ECHO \"$lt_search_path_spec\" |\\\n      $SED 's|/\\([[A-Za-z]]:\\)|\\1|g'` ;;\n  esac\n  sys_lib_search_path_spec=`$ECHO \"$lt_search_path_spec\" | $lt_NL2SP`\nelse\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\nfi])\nlibrary_names_spec=\nlibname_spec='lib$name'\nsoname_spec=\nshrext_cmds=.so\npostinstall_cmds=\npostuninstall_cmds=\nfinish_cmds=\nfinish_eval=\nshlibpath_var=\nshlibpath_overrides_runpath=unknown\nversion_type=none\ndynamic_linker=\"$host_os ld.so\"\nsys_lib_dlsearch_path_spec=\"/lib /usr/lib\"\nneed_lib_prefix=unknown\nhardcode_into_libs=no\n\n# when you set need_version to no, make sure it does not cause -set_version\n# flags to be left without arguments\nneed_version=unknown\n\nAC_ARG_VAR([LT_SYS_LIBRARY_PATH],\n[User-defined run-time library search path.])\n\ncase $host_os in\naix3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname.a'\n  shlibpath_var=LIBPATH\n\n  # AIX 3 has no versioning support, so we append a major version to the name.\n  soname_spec='$libname$release$shared_ext$major'\n  ;;\n\naix[[4-9]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  hardcode_into_libs=yes\n  if test ia64 = \"$host_cpu\"; then\n    # AIX 5 supports IA64\n    library_names_spec='$libname$release$shared_ext$major $libname$release$shared_ext$versuffix $libname$shared_ext'\n    shlibpath_var=LD_LIBRARY_PATH\n  else\n    # With GCC up to 2.95.x, collect2 would create an import file\n    # for dependence libraries.  The import file would start with\n    # the line '#! .'.  This would cause the generated library to\n    # depend on '.', always an invalid library.  This was fixed in\n    # development snapshots of GCC prior to 3.0.\n    case $host_os in\n      aix4 | aix4.[[01]] | aix4.[[01]].*)\n      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'\n\t   echo ' yes '\n\t   echo '#endif'; } | $CC -E - | $GREP yes > /dev/null; then\n\t:\n      else\n\tcan_build_shared=no\n      fi\n      ;;\n    esac\n    # Using Import Files as archive members, it is possible to support\n    # filename-based versioning of shared library archives on AIX. While\n    # this would work for both with and without runtime linking, it will\n    # prevent static linking of such archives. So we do filename-based\n    # shared library versioning with .so extension only, which is used\n    # when both runtime linking and shared linking is enabled.\n    # Unfortunately, runtime linking may impact performance, so we do\n    # not want this to be the default eventually. Also, we use the\n    # versioned .so libs for executables only if there is the -brtl\n    # linker flag in LDFLAGS as well, or --with-aix-soname=svr4 only.\n    # To allow for filename-based versioning support, we need to create\n    # libNAME.so.V as an archive file, containing:\n    # *) an Import File, referring to the versioned filename of the\n    #    archive as well as the shared archive member, telling the\n    #    bitwidth (32 or 64) of that shared object, and providing the\n    #    list of exported symbols of that shared object, eventually\n    #    decorated with the 'weak' keyword\n    # *) the shared object with the F_LOADONLY flag set, to really avoid\n    #    it being seen by the linker.\n    # At run time we better use the real file rather than another symlink,\n    # but for link time we create the symlink libNAME.so -> libNAME.so.V\n\n    case $with_aix_soname,$aix_use_runtimelinking in\n    # AIX (on Power*) has no versioning support, so currently we cannot hardcode correct\n    # soname into executable. Probably we can add versioning support to\n    # collect2, so additional links can be useful in future.\n    aix,yes) # traditional libtool\n      dynamic_linker='AIX unversionable lib.so'\n      # If using run time linking (on AIX 4.2 or later) use lib<name>.so\n      # instead of lib<name>.a to let people know that these are not\n      # typical AIX shared libraries.\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n      ;;\n    aix,no) # traditional AIX only\n      dynamic_linker='AIX lib.a[(]lib.so.V[)]'\n      # We preserve .a as extension for shared libraries through AIX4.2\n      # and later when we are not doing run time linking.\n      library_names_spec='$libname$release.a $libname.a'\n      soname_spec='$libname$release$shared_ext$major'\n      ;;\n    svr4,*) # full svr4 only\n      dynamic_linker=\"AIX lib.so.V[(]$shared_archive_member_spec.o[)]\"\n      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'\n      # We do not specify a path in Import Files, so LIBPATH fires.\n      shlibpath_overrides_runpath=yes\n      ;;\n    *,yes) # both, prefer svr4\n      dynamic_linker=\"AIX lib.so.V[(]$shared_archive_member_spec.o[)], lib.a[(]lib.so.V[)]\"\n      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'\n      # unpreferred sharedlib libNAME.a needs extra handling\n      postinstall_cmds='test -n \"$linkname\" || linkname=\"$realname\"~func_stripname \"\" \".so\" \"$linkname\"~$install_shared_prog \"$dir/$func_stripname_result.$libext\" \"$destdir/$func_stripname_result.$libext\"~test -z \"$tstripme\" || test -z \"$striplib\" || $striplib \"$destdir/$func_stripname_result.$libext\"'\n      postuninstall_cmds='for n in $library_names $old_library; do :; done~func_stripname \"\" \".so\" \"$n\"~test \"$func_stripname_result\" = \"$n\" || func_append rmfiles \" $odir/$func_stripname_result.$libext\"'\n      # We do not specify a path in Import Files, so LIBPATH fires.\n      shlibpath_overrides_runpath=yes\n      ;;\n    *,no) # both, prefer aix\n      dynamic_linker=\"AIX lib.a[(]lib.so.V[)], lib.so.V[(]$shared_archive_member_spec.o[)]\"\n      library_names_spec='$libname$release.a $libname.a'\n      soname_spec='$libname$release$shared_ext$major'\n      # unpreferred sharedlib libNAME.so.V and symlink libNAME.so need extra handling\n      postinstall_cmds='test -z \"$dlname\" || $install_shared_prog $dir/$dlname $destdir/$dlname~test -z \"$tstripme\" || test -z \"$striplib\" || $striplib $destdir/$dlname~test -n \"$linkname\" || linkname=$realname~func_stripname \"\" \".a\" \"$linkname\"~(cd \"$destdir\" && $LN_S -f $dlname $func_stripname_result.so)'\n      postuninstall_cmds='test -z \"$dlname\" || func_append rmfiles \" $odir/$dlname\"~for n in $old_library $library_names; do :; done~func_stripname \"\" \".a\" \"$n\"~func_append rmfiles \" $odir/$func_stripname_result.so\"'\n      ;;\n    esac\n    shlibpath_var=LIBPATH\n  fi\n  ;;\n\namigaos*)\n  case $host_cpu in\n  powerpc)\n    # Since July 2007 AmigaOS4 officially supports .so libraries.\n    # When compiling the executable, add -use-dynld -Lsobjs: to the compileline.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    ;;\n  m68k)\n    library_names_spec='$libname.ixlibrary $libname.a'\n    # Create ${libname}_ixlibrary.a entries in /sys/libs.\n    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`func_echo_all \"$lib\" | $SED '\\''s%^.*/\\([[^/]]*\\)\\.ixlibrary$%\\1%'\\''`; $RM /sys/libs/${libname}_ixlibrary.a; $show \"cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a\"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'\n    ;;\n  esac\n  ;;\n\nbeos*)\n  library_names_spec='$libname$shared_ext'\n  dynamic_linker=\"$host_os ld.so\"\n  shlibpath_var=LIBRARY_PATH\n  ;;\n\nbsdi[[45]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=\"/shlib /usr/lib /usr/local/lib\"\n  # the default ld.so.conf also contains /usr/contrib/lib and\n  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow\n  # libtool to hard-code these into programs\n  ;;\n\ncygwin* | mingw* | pw32* | cegcc*)\n  version_type=windows\n  shrext_cmds=.dll\n  need_version=no\n  need_lib_prefix=no\n\n  case $GCC,$cc_basename in\n  yes,*)\n    # gcc\n    library_names_spec='$libname.dll.a'\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\$file`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname~\n      chmod a+x \\$dldir/$dlname~\n      if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n        eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n      fi'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n\n    case $host_os in\n    cygwin*)\n      # Cygwin DLLs use 'cyg' prefix rather than 'lib'\n      soname_spec='`echo $libname | sed -e 's/^lib/cyg/'``echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\nm4_if([$1], [],[\n      sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/lib/w32api\"])\n      ;;\n    mingw* | cegcc*)\n      # MinGW DLLs use traditional 'lib' prefix\n      soname_spec='$libname`echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\n      ;;\n    pw32*)\n      # pw32 DLLs use 'pw' prefix rather than 'lib'\n      library_names_spec='`echo $libname | sed -e 's/^lib/pw/'``echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\n      ;;\n    esac\n    dynamic_linker='Win32 ld.exe'\n    ;;\n\n  *,cl*)\n    # Native MSVC\n    libname_spec='$name'\n    soname_spec='$libname`echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext'\n    library_names_spec='$libname.dll.lib'\n\n    case $build_os in\n    mingw*)\n      sys_lib_search_path_spec=\n      lt_save_ifs=$IFS\n      IFS=';'\n      for lt_path in $LIB\n      do\n        IFS=$lt_save_ifs\n        # Let DOS variable expansion print the short 8.3 style file name.\n        lt_path=`cd \"$lt_path\" 2>/dev/null && cmd //C \"for %i in (\".\") do @echo %~si\"`\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec $lt_path\"\n      done\n      IFS=$lt_save_ifs\n      # Convert to MSYS style.\n      sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | sed -e 's|\\\\\\\\|/|g' -e 's| \\\\([[a-zA-Z]]\\\\):| /\\\\1|g' -e 's|^ ||'`\n      ;;\n    cygwin*)\n      # Convert to unix form, then to dos form, then back to unix form\n      # but this time dos style (no spaces!) so that the unix form looks\n      # like /cygdrive/c/PROGRA~1:/cygdr...\n      sys_lib_search_path_spec=`cygpath --path --unix \"$LIB\"`\n      sys_lib_search_path_spec=`cygpath --path --dos \"$sys_lib_search_path_spec\" 2>/dev/null`\n      sys_lib_search_path_spec=`cygpath --path --unix \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      ;;\n    *)\n      sys_lib_search_path_spec=$LIB\n      if $ECHO \"$sys_lib_search_path_spec\" | [$GREP ';[c-zC-Z]:/' >/dev/null]; then\n        # It is most probably a Windows format PATH.\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e 's/;/ /g'`\n      else\n        sys_lib_search_path_spec=`$ECHO \"$sys_lib_search_path_spec\" | $SED -e \"s/$PATH_SEPARATOR/ /g\"`\n      fi\n      # FIXME: find the short name or the path components, as spaces are\n      # common. (e.g. \"Program Files\" -> \"PROGRA~1\")\n      ;;\n    esac\n\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\$file`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $RM \\$dlpath'\n    shlibpath_overrides_runpath=yes\n    dynamic_linker='Win32 link.exe'\n    ;;\n\n  *)\n    # Assume MSVC wrapper\n    library_names_spec='$libname`echo $release | $SED -e 's/[[.]]/-/g'`$versuffix$shared_ext $libname.lib'\n    dynamic_linker='Win32 ld.exe'\n    ;;\n  esac\n  # FIXME: first we should search . and the directory the executable is in\n  shlibpath_var=PATH\n  ;;\n\ndarwin* | rhapsody*)\n  dynamic_linker=\"$host_os dyld\"\n  version_type=darwin\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$major$shared_ext $libname$shared_ext'\n  soname_spec='$libname$release$major$shared_ext'\n  shlibpath_overrides_runpath=yes\n  shlibpath_var=DYLD_LIBRARY_PATH\n  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'\nm4_if([$1], [],[\n  sys_lib_search_path_spec=\"$sys_lib_search_path_spec /usr/local/lib\"])\n  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'\n  ;;\n\ndgux*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\nfreebsd* | dragonfly*)\n  # DragonFly does not have aout.  When/if they implement a new\n  # versioning mechanism, adjust this.\n  if test -x /usr/bin/objformat; then\n    objformat=`/usr/bin/objformat`\n  else\n    case $host_os in\n    freebsd[[23]].*) objformat=aout ;;\n    *) objformat=elf ;;\n    esac\n  fi\n  version_type=freebsd-$objformat\n  case $version_type in\n    freebsd-elf*)\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n      soname_spec='$libname$release$shared_ext$major'\n      need_version=no\n      need_lib_prefix=no\n      ;;\n    freebsd-*)\n      library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n      need_version=yes\n      ;;\n  esac\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_os in\n  freebsd2.*)\n    shlibpath_overrides_runpath=yes\n    ;;\n  freebsd3.[[01]]* | freebsdelf3.[[01]]*)\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  freebsd3.[[2-9]]* | freebsdelf3.[[2-9]]* | \\\n  freebsd4.[[0-5]] | freebsdelf4.[[0-5]] | freebsd4.1.1 | freebsdelf4.1.1)\n    shlibpath_overrides_runpath=no\n    hardcode_into_libs=yes\n    ;;\n  *) # from 4.6 on, and DragonFly\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  esac\n  ;;\n\nhaiku*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  dynamic_linker=\"$host_os runtime_loader\"\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_dlsearch_path_spec='/boot/home/config/lib /boot/common/lib /boot/system/lib'\n  hardcode_into_libs=yes\n  ;;\n\nhpux9* | hpux10* | hpux11*)\n  # Give a soname corresponding to the major version so that dld.sl refuses to\n  # link against other versions.\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  case $host_cpu in\n  ia64*)\n    shrext_cmds='.so'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.so\"\n    shlibpath_var=LD_LIBRARY_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    if test 32 = \"$HPUX_IA64_MODE\"; then\n      sys_lib_search_path_spec=\"/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib\"\n      sys_lib_dlsearch_path_spec=/usr/lib/hpux32\n    else\n      sys_lib_search_path_spec=\"/usr/lib/hpux64 /usr/local/lib/hpux64\"\n      sys_lib_dlsearch_path_spec=/usr/lib/hpux64\n    fi\n    ;;\n  hppa*64*)\n    shrext_cmds='.sl'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    sys_lib_search_path_spec=\"/usr/lib/pa20_64 /usr/ccs/lib/pa20_64\"\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n  *)\n    shrext_cmds='.sl'\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=SHLIB_PATH\n    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    ;;\n  esac\n  # HP-UX runs *really* slowly unless shared libraries are mode 555, ...\n  postinstall_cmds='chmod 555 $lib'\n  # or fails outright, so override atomically:\n  install_override_mode=555\n  ;;\n\ninterix[[3-9]]*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $host_os in\n    nonstopux*) version_type=nonstopux ;;\n    *)\n\tif test yes = \"$lt_cv_prog_gnu_ld\"; then\n\t\tversion_type=linux # correct to gnu/linux during the next big refactor\n\telse\n\t\tversion_type=irix\n\tfi ;;\n  esac\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='$libname$release$shared_ext$major'\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$release$shared_ext $libname$shared_ext'\n  case $host_os in\n  irix5* | nonstopux*)\n    libsuff= shlibsuff=\n    ;;\n  *)\n    case $LD in # libtool.m4 will add one of these switches to LD\n    *-32|*\"-32 \"|*-melf32bsmip|*\"-melf32bsmip \")\n      libsuff= shlibsuff= libmagic=32-bit;;\n    *-n32|*\"-n32 \"|*-melf32bmipn32|*\"-melf32bmipn32 \")\n      libsuff=32 shlibsuff=N32 libmagic=N32;;\n    *-64|*\"-64 \"|*-melf64bmip|*\"-melf64bmip \")\n      libsuff=64 shlibsuff=64 libmagic=64-bit;;\n    *) libsuff= shlibsuff= libmagic=never-match;;\n    esac\n    ;;\n  esac\n  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_search_path_spec=\"/usr/lib$libsuff /lib$libsuff /usr/local/lib$libsuff\"\n  sys_lib_dlsearch_path_spec=\"/usr/lib$libsuff /lib$libsuff\"\n  hardcode_into_libs=yes\n  ;;\n\n# No shared lib support for Linux oldld, aout, or coff.\nlinux*oldld* | linux*aout* | linux*coff*)\n  dynamic_linker=no\n  ;;\n\nlinux*android*)\n  version_type=none # Android doesn't support versioned libraries.\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext'\n  soname_spec='$libname$release$shared_ext'\n  finish_cmds=\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  dynamic_linker='Android linker'\n  # Don't embed -rpath directories since the linker doesn't support them.\n  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -n $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n\n  # Some binutils ld are patched to set DT_RUNPATH\n  AC_CACHE_VAL([lt_cv_shlibpath_overrides_runpath],\n    [lt_cv_shlibpath_overrides_runpath=no\n    save_LDFLAGS=$LDFLAGS\n    save_libdir=$libdir\n    eval \"libdir=/foo; wl=\\\"$_LT_TAGVAR(lt_prog_compiler_wl, $1)\\\"; \\\n\t LDFLAGS=\\\"\\$LDFLAGS $_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\\\"\"\n    AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],\n      [AS_IF([ ($OBJDUMP -p conftest$ac_exeext) 2>/dev/null | grep \"RUNPATH.*$libdir\" >/dev/null],\n\t [lt_cv_shlibpath_overrides_runpath=yes])])\n    LDFLAGS=$save_LDFLAGS\n    libdir=$save_libdir\n    ])\n  shlibpath_overrides_runpath=$lt_cv_shlibpath_overrides_runpath\n\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  # Ideally, we could use ldconfig to report *all* directores which are\n  # searched for libraries, however this is still not possible.  Aside from not\n  # being certain /sbin/ldconfig is available, command\n  # 'ldconfig -N -X -v | grep ^/' on 64bit Fedora does not report /usr/lib64,\n  # even though it is searched at run-time.  Try to do the best guess by\n  # appending ld.so.conf contents (and includes) to the search path.\n  if test -f /etc/ld.so.conf; then\n    lt_ld_extra=`awk '/^include / { system(sprintf(\"cd /etc; cat %s 2>/dev/null\", \\[$]2)); skip = 1; } { if (!skip) print \\[$]0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;/^[\t ]*hwcap[\t ]/d;s/[:,\t]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;s/\"//g;/^$/d' | tr '\\n' ' '`\n    sys_lib_dlsearch_path_spec=\"/lib /usr/lib $lt_ld_extra\"\n  fi\n\n  # We used to test for /lib/ld.so.1 and disable shared libraries on\n  # powerpc, because MkLinux only supported shared libraries with the\n  # GNU dynamic linker.  Since this was broken with cross compilers,\n  # most powerpc-linux boxes support dynamic linking these days and\n  # people can always --disable-shared, the test was removed, and we\n  # assume the GNU/Linux dynamic linker is in use.\n  dynamic_linker='GNU/Linux ld.so'\n  ;;\n\nnetbsd*)\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n    finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n    dynamic_linker='NetBSD (a.out) ld.so'\n  else\n    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n    soname_spec='$libname$release$shared_ext$major'\n    dynamic_linker='NetBSD ld.elf_so'\n  fi\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  ;;\n\nnewsos6)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\n*nto* | *qnx*)\n  version_type=qnx\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='ldqnx.so'\n  ;;\n\nopenbsd* | bitrig*)\n  version_type=sunos\n  sys_lib_dlsearch_path_spec=/usr/lib\n  need_lib_prefix=no\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n    need_version=no\n  else\n    need_version=yes\n  fi\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\nos2*)\n  libname_spec='$name'\n  version_type=windows\n  shrext_cmds=.dll\n  need_version=no\n  need_lib_prefix=no\n  # OS/2 can only load a DLL with a base name of 8 characters or less.\n  soname_spec='`test -n \"$os2dllname\" && libname=\"$os2dllname\";\n    v=$($ECHO $release$versuffix | tr -d .-);\n    n=$($ECHO $libname | cut -b -$((8 - ${#v})) | tr . _);\n    $ECHO $n$v`$shared_ext'\n  library_names_spec='${libname}_dll.$libext'\n  dynamic_linker='OS/2 ld.exe'\n  shlibpath_var=BEGINLIBPATH\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n  postinstall_cmds='base_file=`basename \\$file`~\n    dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\$base_file'\\''i; $ECHO \\$dlname'\\''`~\n    dldir=$destdir/`dirname \\$dlpath`~\n    test -d \\$dldir || mkdir -p \\$dldir~\n    $install_prog $dir/$dlname \\$dldir/$dlname~\n    chmod a+x \\$dldir/$dlname~\n    if test -n '\\''$stripme'\\'' && test -n '\\''$striplib'\\''; then\n      eval '\\''$striplib \\$dldir/$dlname'\\'' || exit \\$?;\n    fi'\n  postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; $ECHO \\$dlname'\\''`~\n    dlpath=$dir/\\$dldll~\n    $RM \\$dlpath'\n  ;;\n\nosf3* | osf4* | osf5*)\n  version_type=osf\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='$libname$release$shared_ext$major'\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib\"\n  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n  ;;\n\nrdos*)\n  dynamic_linker=no\n  ;;\n\nsolaris*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  # ldd complains unless libraries are executable\n  postinstall_cmds='chmod +x $lib'\n  ;;\n\nsunos4*)\n  version_type=sunos\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/usr/etc\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  if test yes = \"$with_gnu_ld\"; then\n    need_lib_prefix=no\n  fi\n  need_version=yes\n  ;;\n\nsysv4 | sysv4.3*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_vendor in\n    sni)\n      shlibpath_overrides_runpath=no\n      need_lib_prefix=no\n      runpath_var=LD_RUN_PATH\n      ;;\n    siemens)\n      need_lib_prefix=no\n      ;;\n    motorola)\n      need_lib_prefix=no\n      need_version=no\n      shlibpath_overrides_runpath=no\n      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'\n      ;;\n  esac\n  ;;\n\nsysv4*MP*)\n  if test -d /usr/nec; then\n    version_type=linux # correct to gnu/linux during the next big refactor\n    library_names_spec='$libname$shared_ext.$versuffix $libname$shared_ext.$major $libname$shared_ext'\n    soname_spec='$libname$shared_ext.$major'\n    shlibpath_var=LD_LIBRARY_PATH\n  fi\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  version_type=sco\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  if test yes = \"$with_gnu_ld\"; then\n    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'\n  else\n    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'\n    case $host_os in\n      sco3.2v5*)\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec /lib\"\n\t;;\n    esac\n  fi\n  sys_lib_dlsearch_path_spec='/usr/lib'\n  ;;\n\ntpf*)\n  # TPF is a cross-target only.  Preferred cross-host = GNU/Linux.\n  version_type=linux # correct to gnu/linux during the next big refactor\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nuts4*)\n  version_type=linux # correct to gnu/linux during the next big refactor\n  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'\n  soname_spec='$libname$release$shared_ext$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\n*)\n  dynamic_linker=no\n  ;;\nesac\nAC_MSG_RESULT([$dynamic_linker])\ntest no = \"$dynamic_linker\" && can_build_shared=no\n\nvariables_saved_for_relink=\"PATH $shlibpath_var $runpath_var\"\nif test yes = \"$GCC\"; then\n  variables_saved_for_relink=\"$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH\"\nfi\n\nif test set = \"${lt_cv_sys_lib_search_path_spec+set}\"; then\n  sys_lib_search_path_spec=$lt_cv_sys_lib_search_path_spec\nfi\n\nif test set = \"${lt_cv_sys_lib_dlsearch_path_spec+set}\"; then\n  sys_lib_dlsearch_path_spec=$lt_cv_sys_lib_dlsearch_path_spec\nfi\n\n# remember unaugmented sys_lib_dlsearch_path content for libtool script decls...\nconfigure_time_dlsearch_path=$sys_lib_dlsearch_path_spec\n\n# ... but it needs LT_SYS_LIBRARY_PATH munging for other configure-time code\nfunc_munge_path_list sys_lib_dlsearch_path_spec \"$LT_SYS_LIBRARY_PATH\"\n\n# to be used as default LT_SYS_LIBRARY_PATH value in generated libtool\nconfigure_time_lt_sys_library_path=$LT_SYS_LIBRARY_PATH\n\n_LT_DECL([], [variables_saved_for_relink], [1],\n    [Variables whose values should be saved in libtool wrapper scripts and\n    restored at link time])\n_LT_DECL([], [need_lib_prefix], [0],\n    [Do we need the \"lib\" prefix for modules?])\n_LT_DECL([], [need_version], [0], [Do we need a version for libraries?])\n_LT_DECL([], [version_type], [0], [Library versioning type])\n_LT_DECL([], [runpath_var], [0],  [Shared library runtime path variable])\n_LT_DECL([], [shlibpath_var], [0],[Shared library path variable])\n_LT_DECL([], [shlibpath_overrides_runpath], [0],\n    [Is shlibpath searched before the hard-coded library search path?])\n_LT_DECL([], [libname_spec], [1], [Format of library name prefix])\n_LT_DECL([], [library_names_spec], [1],\n    [[List of archive names.  First name is the real one, the rest are links.\n    The last name is the one that the linker finds with -lNAME]])\n_LT_DECL([], [soname_spec], [1],\n    [[The coded name of the library, if different from the real name]])\n_LT_DECL([], [install_override_mode], [1],\n    [Permission mode override for installation of shared libraries])\n_LT_DECL([], [postinstall_cmds], [2],\n    [Command to use after installation of a shared archive])\n_LT_DECL([], [postuninstall_cmds], [2],\n    [Command to use after uninstallation of a shared archive])\n_LT_DECL([], [finish_cmds], [2],\n    [Commands used to finish a libtool library installation in a directory])\n_LT_DECL([], [finish_eval], [1],\n    [[As \"finish_cmds\", except a single script fragment to be evaled but\n    not shown]])\n_LT_DECL([], [hardcode_into_libs], [0],\n    [Whether we should hardcode library paths into libraries])\n_LT_DECL([], [sys_lib_search_path_spec], [2],\n    [Compile-time system search path for libraries])\n_LT_DECL([sys_lib_dlsearch_path_spec], [configure_time_dlsearch_path], [2],\n    [Detected run-time system search path for libraries])\n_LT_DECL([], [configure_time_lt_sys_library_path], [2],\n    [Explicit LT_SYS_LIBRARY_PATH set during ./configure time])\n])# _LT_SYS_DYNAMIC_LINKER\n\n\n# _LT_PATH_TOOL_PREFIX(TOOL)\n# --------------------------\n# find a file program that can recognize shared library\nAC_DEFUN([_LT_PATH_TOOL_PREFIX],\n[m4_require([_LT_DECL_EGREP])dnl\nAC_MSG_CHECKING([for $1])\nAC_CACHE_VAL(lt_cv_path_MAGIC_CMD,\n[case $MAGIC_CMD in\n[[\\\\/*] |  ?:[\\\\/]*])\n  lt_cv_path_MAGIC_CMD=$MAGIC_CMD # Let the user override the test with a path.\n  ;;\n*)\n  lt_save_MAGIC_CMD=$MAGIC_CMD\n  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\ndnl $ac_dummy forces splitting on constant user-supplied paths.\ndnl POSIX.2 word splitting is done only on the output of word expansions,\ndnl not every word.  This closes a longstanding sh security hole.\n  ac_dummy=\"m4_if([$2], , $PATH, [$2])\"\n  for ac_dir in $ac_dummy; do\n    IFS=$lt_save_ifs\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$1\"; then\n      lt_cv_path_MAGIC_CMD=$ac_dir/\"$1\"\n      if test -n \"$file_magic_test_file\"; then\n\tcase $deplibs_check_method in\n\t\"file_magic \"*)\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"file_magic \\(.*\\)\"`\n\t  MAGIC_CMD=$lt_cv_path_MAGIC_CMD\n\t  if eval $file_magic_cmd \\$file_magic_test_file 2> /dev/null |\n\t    $EGREP \"$file_magic_regex\" > /dev/null; then\n\t    :\n\t  else\n\t    cat <<_LT_EOF 1>&2\n\n*** Warning: the command libtool uses to detect shared libraries,\n*** $file_magic_cmd, produces output that libtool cannot recognize.\n*** The result is that libtool may fail to recognize shared libraries\n*** as such.  This will affect the creation of libtool libraries that\n*** depend on shared libraries, but programs linked with such libtool\n*** libraries will work regardless of this problem.  Nevertheless, you\n*** may want to report the problem to your system manager and/or to\n*** bug-libtool@gnu.org\n\n_LT_EOF\n\t  fi ;;\n\tesac\n      fi\n      break\n    fi\n  done\n  IFS=$lt_save_ifs\n  MAGIC_CMD=$lt_save_MAGIC_CMD\n  ;;\nesac])\nMAGIC_CMD=$lt_cv_path_MAGIC_CMD\nif test -n \"$MAGIC_CMD\"; then\n  AC_MSG_RESULT($MAGIC_CMD)\nelse\n  AC_MSG_RESULT(no)\nfi\n_LT_DECL([], [MAGIC_CMD], [0],\n\t [Used to examine libraries when file_magic_cmd begins with \"file\"])dnl\n])# _LT_PATH_TOOL_PREFIX\n\n# Old name:\nAU_ALIAS([AC_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_PATH_TOOL_PREFIX], [])\n\n\n# _LT_PATH_MAGIC\n# --------------\n# find a file program that can recognize a shared library\nm4_defun([_LT_PATH_MAGIC],\n[_LT_PATH_TOOL_PREFIX(${ac_tool_prefix}file, /usr/bin$PATH_SEPARATOR$PATH)\nif test -z \"$lt_cv_path_MAGIC_CMD\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    _LT_PATH_TOOL_PREFIX(file, /usr/bin$PATH_SEPARATOR$PATH)\n  else\n    MAGIC_CMD=:\n  fi\nfi\n])# _LT_PATH_MAGIC\n\n\n# LT_PATH_LD\n# ----------\n# find the pathname to the GNU or non-GNU linker\nAC_DEFUN([LT_PATH_LD],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_PROG_ECHO_BACKSLASH])dnl\n\nAC_ARG_WITH([gnu-ld],\n    [AS_HELP_STRING([--with-gnu-ld],\n\t[assume the C compiler uses GNU ld @<:@default=no@:>@])],\n    [test no = \"$withval\" || with_gnu_ld=yes],\n    [with_gnu_ld=no])dnl\n\nac_prog=ld\nif test yes = \"$GCC\"; then\n  # Check if gcc -print-prog-name=ld gives a path.\n  AC_MSG_CHECKING([for ld used by $CC])\n  case $host in\n  *-*-mingw*)\n    # gcc leaves a trailing carriage return, which upsets mingw\n    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\\015'` ;;\n  *)\n    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;\n  esac\n  case $ac_prog in\n    # Accept absolute paths.\n    [[\\\\/]]* | ?:[[\\\\/]]*)\n      re_direlt='/[[^/]][[^/]]*/\\.\\./'\n      # Canonicalize the pathname of ld\n      ac_prog=`$ECHO \"$ac_prog\"| $SED 's%\\\\\\\\%/%g'`\n      while $ECHO \"$ac_prog\" | $GREP \"$re_direlt\" > /dev/null 2>&1; do\n\tac_prog=`$ECHO $ac_prog| $SED \"s%$re_direlt%/%\"`\n      done\n      test -z \"$LD\" && LD=$ac_prog\n      ;;\n  \"\")\n    # If it fails, then pretend we aren't using GCC.\n    ac_prog=ld\n    ;;\n  *)\n    # If it is relative, then search for the first ld in PATH.\n    with_gnu_ld=unknown\n    ;;\n  esac\nelif test yes = \"$with_gnu_ld\"; then\n  AC_MSG_CHECKING([for GNU ld])\nelse\n  AC_MSG_CHECKING([for non-GNU ld])\nfi\nAC_CACHE_VAL(lt_cv_path_LD,\n[if test -z \"$LD\"; then\n  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\n  for ac_dir in $PATH; do\n    IFS=$lt_save_ifs\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$ac_prog\" || test -f \"$ac_dir/$ac_prog$ac_exeext\"; then\n      lt_cv_path_LD=$ac_dir/$ac_prog\n      # Check to see if the program is GNU ld.  I'd rather use --version,\n      # but apparently some variants of GNU ld only accept -v.\n      # Break only if it was the GNU/non-GNU ld that we prefer.\n      case `\"$lt_cv_path_LD\" -v 2>&1 </dev/null` in\n      *GNU* | *'with BFD'*)\n\ttest no != \"$with_gnu_ld\" && break\n\t;;\n      *)\n\ttest yes != \"$with_gnu_ld\" && break\n\t;;\n      esac\n    fi\n  done\n  IFS=$lt_save_ifs\nelse\n  lt_cv_path_LD=$LD # Let the user override the test with a path.\nfi])\nLD=$lt_cv_path_LD\nif test -n \"$LD\"; then\n  AC_MSG_RESULT($LD)\nelse\n  AC_MSG_RESULT(no)\nfi\ntest -z \"$LD\" && AC_MSG_ERROR([no acceptable ld found in \\$PATH])\n_LT_PATH_LD_GNU\nAC_SUBST([LD])\n\n_LT_TAGDECL([], [LD], [1], [The linker used to build libraries])\n])# LT_PATH_LD\n\n# Old names:\nAU_ALIAS([AM_PROG_LD], [LT_PATH_LD])\nAU_ALIAS([AC_PROG_LD], [LT_PATH_LD])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_PROG_LD], [])\ndnl AC_DEFUN([AC_PROG_LD], [])\n\n\n# _LT_PATH_LD_GNU\n#- --------------\nm4_defun([_LT_PATH_LD_GNU],\n[AC_CACHE_CHECK([if the linker ($LD) is GNU ld], lt_cv_prog_gnu_ld,\n[# I'd rather use --version here, but apparently some GNU lds only accept -v.\ncase `$LD -v 2>&1 </dev/null` in\n*GNU* | *'with BFD'*)\n  lt_cv_prog_gnu_ld=yes\n  ;;\n*)\n  lt_cv_prog_gnu_ld=no\n  ;;\nesac])\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n])# _LT_PATH_LD_GNU\n\n\n# _LT_CMD_RELOAD\n# --------------\n# find reload flag for linker\n#   -- PORTME Some linkers may need a different reload flag.\nm4_defun([_LT_CMD_RELOAD],\n[AC_CACHE_CHECK([for $LD option to reload object files],\n  lt_cv_ld_reload_flag,\n  [lt_cv_ld_reload_flag='-r'])\nreload_flag=$lt_cv_ld_reload_flag\ncase $reload_flag in\n\"\" | \" \"*) ;;\n*) reload_flag=\" $reload_flag\" ;;\nesac\nreload_cmds='$LD$reload_flag -o $output$reload_objs'\ncase $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    if test yes != \"$GCC\"; then\n      reload_cmds=false\n    fi\n    ;;\n  darwin*)\n    if test yes = \"$GCC\"; then\n      reload_cmds='$LTCC $LTCFLAGS -nostdlib $wl-r -o $output$reload_objs'\n    else\n      reload_cmds='$LD$reload_flag -o $output$reload_objs'\n    fi\n    ;;\nesac\n_LT_TAGDECL([], [reload_flag], [1], [How to create reloadable object files])dnl\n_LT_TAGDECL([], [reload_cmds], [2])dnl\n])# _LT_CMD_RELOAD\n\n\n# _LT_PATH_DD\n# -----------\n# find a working dd\nm4_defun([_LT_PATH_DD],\n[AC_CACHE_CHECK([for a working dd], [ac_cv_path_lt_DD],\n[printf 0123456789abcdef0123456789abcdef >conftest.i\ncat conftest.i conftest.i >conftest2.i\n: ${lt_DD:=$DD}\nAC_PATH_PROGS_FEATURE_CHECK([lt_DD], [dd],\n[if \"$ac_path_lt_DD\" bs=32 count=1 <conftest2.i >conftest.out 2>/dev/null; then\n  cmp -s conftest.i conftest.out \\\n  && ac_cv_path_lt_DD=\"$ac_path_lt_DD\" ac_path_lt_DD_found=:\nfi])\nrm -f conftest.i conftest2.i conftest.out])\n])# _LT_PATH_DD\n\n\n# _LT_CMD_TRUNCATE\n# ----------------\n# find command to truncate a binary pipe\nm4_defun([_LT_CMD_TRUNCATE],\n[m4_require([_LT_PATH_DD])\nAC_CACHE_CHECK([how to truncate binary pipes], [lt_cv_truncate_bin],\n[printf 0123456789abcdef0123456789abcdef >conftest.i\ncat conftest.i conftest.i >conftest2.i\nlt_cv_truncate_bin=\nif \"$ac_cv_path_lt_DD\" bs=32 count=1 <conftest2.i >conftest.out 2>/dev/null; then\n  cmp -s conftest.i conftest.out \\\n  && lt_cv_truncate_bin=\"$ac_cv_path_lt_DD bs=4096 count=1\"\nfi\nrm -f conftest.i conftest2.i conftest.out\ntest -z \"$lt_cv_truncate_bin\" && lt_cv_truncate_bin=\"$SED -e 4q\"])\n_LT_DECL([lt_truncate_bin], [lt_cv_truncate_bin], [1],\n  [Command to truncate a binary pipe])\n])# _LT_CMD_TRUNCATE\n\n\n# _LT_CHECK_MAGIC_METHOD\n# ----------------------\n# how to check for library dependencies\n#  -- PORTME fill in with the dynamic library characteristics\nm4_defun([_LT_CHECK_MAGIC_METHOD],\n[m4_require([_LT_DECL_EGREP])\nm4_require([_LT_DECL_OBJDUMP])\nAC_CACHE_CHECK([how to recognize dependent libraries],\nlt_cv_deplibs_check_method,\n[lt_cv_file_magic_cmd='$MAGIC_CMD'\nlt_cv_file_magic_test_file=\nlt_cv_deplibs_check_method='unknown'\n# Need to set the preceding variable on all platforms that support\n# interlibrary dependencies.\n# 'none' -- dependencies not supported.\n# 'unknown' -- same as none, but documents that we really don't know.\n# 'pass_all' -- all dependencies passed with no checks.\n# 'test_compile' -- check by making test program.\n# 'file_magic [[regex]]' -- check by looking for files in library path\n# that responds to the $file_magic_cmd with a given extended regex.\n# If you have 'file' or equivalent on your system and you're not sure\n# whether 'pass_all' will *always* work, you probably want this one.\n\ncase $host_os in\naix[[4-9]]*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbeos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbsdi[[45]]*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib)'\n  lt_cv_file_magic_cmd='/usr/bin/file -L'\n  lt_cv_file_magic_test_file=/shlib/libc.so\n  ;;\n\ncygwin*)\n  # func_win32_libid is a shell function defined in ltmain.sh\n  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n  lt_cv_file_magic_cmd='func_win32_libid'\n  ;;\n\nmingw* | pw32*)\n  # Base MSYS/MinGW do not provide the 'file' command needed by\n  # func_win32_libid shell function, so use a weaker test based on 'objdump',\n  # unless we find 'file', for example because we are cross-compiling.\n  if ( file / ) >/dev/null 2>&1; then\n    lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n    lt_cv_file_magic_cmd='func_win32_libid'\n  else\n    # Keep this pattern in sync with the one in func_win32_libid.\n    lt_cv_deplibs_check_method='file_magic file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)'\n    lt_cv_file_magic_cmd='$OBJDUMP -f'\n  fi\n  ;;\n\ncegcc*)\n  # use the weaker test based on 'objdump'. See mingw*.\n  lt_cv_deplibs_check_method='file_magic file format pe-arm-.*little(.*architecture: arm)?'\n  lt_cv_file_magic_cmd='$OBJDUMP -f'\n  ;;\n\ndarwin* | rhapsody*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nfreebsd* | dragonfly*)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    case $host_cpu in\n    i*86 )\n      # Not sure whether the presence of OpenBSD here was a mistake.\n      # Let's accept both of them until this is cleared up.\n      lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD|DragonFly)/i[[3-9]]86 (compact )?demand paged shared library'\n      lt_cv_file_magic_cmd=/usr/bin/file\n      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`\n      ;;\n    esac\n  else\n    lt_cv_deplibs_check_method=pass_all\n  fi\n  ;;\n\nhaiku*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nhpux10.20* | hpux11*)\n  lt_cv_file_magic_cmd=/usr/bin/file\n  case $host_cpu in\n  ia64*)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|ELF-[[0-9]][[0-9]]) shared object file - IA64'\n    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so\n    ;;\n  hppa*64*)\n    [lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF[ -][0-9][0-9])(-bit)?( [LM]SB)? shared object( file)?[, -]* PA-RISC [0-9]\\.[0-9]']\n    lt_cv_file_magic_test_file=/usr/lib/pa20_64/libc.sl\n    ;;\n  *)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|PA-RISC[[0-9]]\\.[[0-9]]) shared library'\n    lt_cv_file_magic_test_file=/usr/lib/libc.sl\n    ;;\n  esac\n  ;;\n\ninterix[[3-9]]*)\n  # PIC code is broken on Interix 3.x, that's why |\\.a not |_pic\\.a here\n  lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|\\.a)$'\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $LD in\n  *-32|*\"-32 \") libmagic=32-bit;;\n  *-n32|*\"-n32 \") libmagic=N32;;\n  *-64|*\"-64 \") libmagic=64-bit;;\n  *) libmagic=never-match;;\n  esac\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\n# This must be glibc/ELF.\nlinux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nnetbsd*)\n  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|_pic\\.a)$'\n  fi\n  ;;\n\nnewos6*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (executable|dynamic lib)'\n  lt_cv_file_magic_cmd=/usr/bin/file\n  lt_cv_file_magic_test_file=/usr/lib/libnls.so\n  ;;\n\n*nto* | *qnx*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nopenbsd* | bitrig*)\n  if test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|\\.so|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  fi\n  ;;\n\nosf3* | osf4* | osf5*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nrdos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsolaris*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv4 | sysv4.3*)\n  case $host_vendor in\n  motorola)\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib) M[[0-9]][[0-9]]* Version [[0-9]]'\n    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`\n    ;;\n  ncr)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  sequent)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB (shared object|dynamic lib )'\n    ;;\n  sni)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method=\"file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB dynamic lib\"\n    lt_cv_file_magic_test_file=/lib/libc.so\n    ;;\n  siemens)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  pc)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  esac\n  ;;\n\ntpf*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nos2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nesac\n])\n\nfile_magic_glob=\nwant_nocaseglob=no\nif test \"$build\" = \"$host\"; then\n  case $host_os in\n  mingw* | pw32*)\n    if ( shopt | grep nocaseglob ) >/dev/null 2>&1; then\n      want_nocaseglob=yes\n    else\n      file_magic_glob=`echo aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ | $SED -e \"s/\\(..\\)/s\\/[[\\1]]\\/[[\\1]]\\/g;/g\"`\n    fi\n    ;;\n  esac\nfi\n\nfile_magic_cmd=$lt_cv_file_magic_cmd\ndeplibs_check_method=$lt_cv_deplibs_check_method\ntest -z \"$deplibs_check_method\" && deplibs_check_method=unknown\n\n_LT_DECL([], [deplibs_check_method], [1],\n    [Method to check whether dependent libraries are shared objects])\n_LT_DECL([], [file_magic_cmd], [1],\n    [Command to use when deplibs_check_method = \"file_magic\"])\n_LT_DECL([], [file_magic_glob], [1],\n    [How to find potential files when deplibs_check_method = \"file_magic\"])\n_LT_DECL([], [want_nocaseglob], [1],\n    [Find potential files using nocaseglob when deplibs_check_method = \"file_magic\"])\n])# _LT_CHECK_MAGIC_METHOD\n\n\n# LT_PATH_NM\n# ----------\n# find the pathname to a BSD- or MS-compatible name lister\nAC_DEFUN([LT_PATH_NM],\n[AC_REQUIRE([AC_PROG_CC])dnl\nAC_CACHE_CHECK([for BSD- or MS-compatible name lister (nm)], lt_cv_path_NM,\n[if test -n \"$NM\"; then\n  # Let the user override the test.\n  lt_cv_path_NM=$NM\nelse\n  lt_nm_to_check=${ac_tool_prefix}nm\n  if test -n \"$ac_tool_prefix\" && test \"$build\" = \"$host\"; then\n    lt_nm_to_check=\"$lt_nm_to_check nm\"\n  fi\n  for lt_tmp_nm in $lt_nm_to_check; do\n    lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR\n    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do\n      IFS=$lt_save_ifs\n      test -z \"$ac_dir\" && ac_dir=.\n      tmp_nm=$ac_dir/$lt_tmp_nm\n      if test -f \"$tmp_nm\" || test -f \"$tmp_nm$ac_exeext\"; then\n\t# Check to see if the nm accepts a BSD-compat flag.\n\t# Adding the 'sed 1q' prevents false positives on HP-UX, which says:\n\t#   nm: unknown option \"B\" ignored\n\t# Tru64's nm complains that /dev/null is an invalid object file\n\t# MSYS converts /dev/null to NUL, MinGW nm treats NUL as empty\n\tcase $build_os in\n\tmingw*) lt_bad_file=conftest.nm/nofile ;;\n\t*) lt_bad_file=/dev/null ;;\n\tesac\n\tcase `\"$tmp_nm\" -B $lt_bad_file 2>&1 | sed '1q'` in\n\t*$lt_bad_file* | *'Invalid file or object type'*)\n\t  lt_cv_path_NM=\"$tmp_nm -B\"\n\t  break 2\n\t  ;;\n\t*)\n\t  case `\"$tmp_nm\" -p /dev/null 2>&1 | sed '1q'` in\n\t  */dev/null*)\n\t    lt_cv_path_NM=\"$tmp_nm -p\"\n\t    break 2\n\t    ;;\n\t  *)\n\t    lt_cv_path_NM=${lt_cv_path_NM=\"$tmp_nm\"} # keep the first match, but\n\t    continue # so that we can try to find one that supports BSD flags\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n      fi\n    done\n    IFS=$lt_save_ifs\n  done\n  : ${lt_cv_path_NM=no}\nfi])\nif test no != \"$lt_cv_path_NM\"; then\n  NM=$lt_cv_path_NM\nelse\n  # Didn't find any BSD compatible name lister, look for dumpbin.\n  if test -n \"$DUMPBIN\"; then :\n    # Let the user override the test.\n  else\n    AC_CHECK_TOOLS(DUMPBIN, [dumpbin \"link -dump\"], :)\n    case `$DUMPBIN -symbols -headers /dev/null 2>&1 | sed '1q'` in\n    *COFF*)\n      DUMPBIN=\"$DUMPBIN -symbols -headers\"\n      ;;\n    *)\n      DUMPBIN=:\n      ;;\n    esac\n  fi\n  AC_SUBST([DUMPBIN])\n  if test : != \"$DUMPBIN\"; then\n    NM=$DUMPBIN\n  fi\nfi\ntest -z \"$NM\" && NM=nm\nAC_SUBST([NM])\n_LT_DECL([], [NM], [1], [A BSD- or MS-compatible name lister])dnl\n\nAC_CACHE_CHECK([the name lister ($NM) interface], [lt_cv_nm_interface],\n  [lt_cv_nm_interface=\"BSD nm\"\n  echo \"int some_variable = 0;\" > conftest.$ac_ext\n  (eval echo \"\\\"\\$as_me:$LINENO: $ac_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n  (eval \"$ac_compile\" 2>conftest.err)\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  (eval echo \"\\\"\\$as_me:$LINENO: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&AS_MESSAGE_LOG_FD)\n  (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  (eval echo \"\\\"\\$as_me:$LINENO: output\\\"\" >&AS_MESSAGE_LOG_FD)\n  cat conftest.out >&AS_MESSAGE_LOG_FD\n  if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n    lt_cv_nm_interface=\"MS dumpbin\"\n  fi\n  rm -f conftest*])\n])# LT_PATH_NM\n\n# Old names:\nAU_ALIAS([AM_PROG_NM], [LT_PATH_NM])\nAU_ALIAS([AC_PROG_NM], [LT_PATH_NM])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_PROG_NM], [])\ndnl AC_DEFUN([AC_PROG_NM], [])\n\n# _LT_CHECK_SHAREDLIB_FROM_LINKLIB\n# --------------------------------\n# how to determine the name of the shared library\n# associated with a specific link library.\n#  -- PORTME fill in with the dynamic library characteristics\nm4_defun([_LT_CHECK_SHAREDLIB_FROM_LINKLIB],\n[m4_require([_LT_DECL_EGREP])\nm4_require([_LT_DECL_OBJDUMP])\nm4_require([_LT_DECL_DLLTOOL])\nAC_CACHE_CHECK([how to associate runtime and link libraries],\nlt_cv_sharedlib_from_linklib_cmd,\n[lt_cv_sharedlib_from_linklib_cmd='unknown'\n\ncase $host_os in\ncygwin* | mingw* | pw32* | cegcc*)\n  # two different shell functions defined in ltmain.sh;\n  # decide which one to use based on capabilities of $DLLTOOL\n  case `$DLLTOOL --help 2>&1` in\n  *--identify-strict*)\n    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib\n    ;;\n  *)\n    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib_fallback\n    ;;\n  esac\n  ;;\n*)\n  # fallback: assume linklib IS sharedlib\n  lt_cv_sharedlib_from_linklib_cmd=$ECHO\n  ;;\nesac\n])\nsharedlib_from_linklib_cmd=$lt_cv_sharedlib_from_linklib_cmd\ntest -z \"$sharedlib_from_linklib_cmd\" && sharedlib_from_linklib_cmd=$ECHO\n\n_LT_DECL([], [sharedlib_from_linklib_cmd], [1],\n    [Command to associate shared and link libraries])\n])# _LT_CHECK_SHAREDLIB_FROM_LINKLIB\n\n\n# _LT_PATH_MANIFEST_TOOL\n# ----------------------\n# locate the manifest tool\nm4_defun([_LT_PATH_MANIFEST_TOOL],\n[AC_CHECK_TOOL(MANIFEST_TOOL, mt, :)\ntest -z \"$MANIFEST_TOOL\" && MANIFEST_TOOL=mt\nAC_CACHE_CHECK([if $MANIFEST_TOOL is a manifest tool], [lt_cv_path_mainfest_tool],\n  [lt_cv_path_mainfest_tool=no\n  echo \"$as_me:$LINENO: $MANIFEST_TOOL '-?'\" >&AS_MESSAGE_LOG_FD\n  $MANIFEST_TOOL '-?' 2>conftest.err > conftest.out\n  cat conftest.err >&AS_MESSAGE_LOG_FD\n  if $GREP 'Manifest Tool' conftest.out > /dev/null; then\n    lt_cv_path_mainfest_tool=yes\n  fi\n  rm -f conftest*])\nif test yes != \"$lt_cv_path_mainfest_tool\"; then\n  MANIFEST_TOOL=:\nfi\n_LT_DECL([], [MANIFEST_TOOL], [1], [Manifest tool])dnl\n])# _LT_PATH_MANIFEST_TOOL\n\n\n# _LT_DLL_DEF_P([FILE])\n# ---------------------\n# True iff FILE is a Windows DLL '.def' file.\n# Keep in sync with func_dll_def_p in the libtool script\nAC_DEFUN([_LT_DLL_DEF_P],\n[dnl\n  test DEF = \"`$SED -n dnl\n    -e '\\''s/^[[\t ]]*//'\\'' dnl Strip leading whitespace\n    -e '\\''/^\\(;.*\\)*$/d'\\'' dnl      Delete empty lines and comments\n    -e '\\''s/^\\(EXPORTS\\|LIBRARY\\)\\([[\t ]].*\\)*$/DEF/p'\\'' dnl\n    -e q dnl                          Only consider the first \"real\" line\n    $1`\" dnl\n])# _LT_DLL_DEF_P\n\n\n# LT_LIB_M\n# --------\n# check for math library\nAC_DEFUN([LT_LIB_M],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nLIBM=\ncase $host in\n*-*-beos* | *-*-cegcc* | *-*-cygwin* | *-*-haiku* | *-*-pw32* | *-*-darwin*)\n  # These system don't have libm, or don't need it\n  ;;\n*-ncr-sysv4.3*)\n  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM=-lmw)\n  AC_CHECK_LIB(m, cos, LIBM=\"$LIBM -lm\")\n  ;;\n*)\n  AC_CHECK_LIB(m, cos, LIBM=-lm)\n  ;;\nesac\nAC_SUBST([LIBM])\n])# LT_LIB_M\n\n# Old name:\nAU_ALIAS([AC_CHECK_LIBM], [LT_LIB_M])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_CHECK_LIBM], [])\n\n\n# _LT_COMPILER_NO_RTTI([TAGNAME])\n# -------------------------------\nm4_defun([_LT_COMPILER_NO_RTTI],\n[m4_require([_LT_TAG_COMPILER])dnl\n\n_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n\nif test yes = \"$GCC\"; then\n  case $cc_basename in\n  nvcc*)\n    _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -Xcompiler -fno-builtin' ;;\n  *)\n    _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin' ;;\n  esac\n\n  _LT_COMPILER_OPTION([if $compiler supports -fno-rtti -fno-exceptions],\n    lt_cv_prog_compiler_rtti_exceptions,\n    [-fno-rtti -fno-exceptions], [],\n    [_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\"$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1) -fno-rtti -fno-exceptions\"])\nfi\n_LT_TAGDECL([no_builtin_flag], [lt_prog_compiler_no_builtin_flag], [1],\n\t[Compiler flag to turn off builtin functions])\n])# _LT_COMPILER_NO_RTTI\n\n\n# _LT_CMD_GLOBAL_SYMBOLS\n# ----------------------\nm4_defun([_LT_CMD_GLOBAL_SYMBOLS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_PROG_AWK])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\nAC_REQUIRE([LT_PATH_LD])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_TAG_COMPILER])dnl\n\n# Check for command to grab the raw symbol name followed by C symbol from nm.\nAC_MSG_CHECKING([command to parse $NM output from $compiler object])\nAC_CACHE_VAL([lt_cv_sys_global_symbol_pipe],\n[\n# These are sane defaults that work on at least a few old systems.\n# [They come from Ultrix.  What could be older than Ultrix?!! ;)]\n\n# Character class describing NM global symbol codes.\nsymcode='[[BCDEGRST]]'\n\n# Regexp to match symbols that can be accessed directly from C.\nsympat='\\([[_A-Za-z]][[_A-Za-z0-9]]*\\)'\n\n# Define system-specific variables.\ncase $host_os in\naix*)\n  symcode='[[BCDT]]'\n  ;;\ncygwin* | mingw* | pw32* | cegcc*)\n  symcode='[[ABCDGISTW]]'\n  ;;\nhpux*)\n  if test ia64 = \"$host_cpu\"; then\n    symcode='[[ABCDEGRST]]'\n  fi\n  ;;\nirix* | nonstopux*)\n  symcode='[[BCDEGRST]]'\n  ;;\nosf*)\n  symcode='[[BCDEGQRST]]'\n  ;;\nsolaris*)\n  symcode='[[BDRT]]'\n  ;;\nsco3.2v5*)\n  symcode='[[DT]]'\n  ;;\nsysv4.2uw2*)\n  symcode='[[DT]]'\n  ;;\nsysv5* | sco5v6* | unixware* | OpenUNIX*)\n  symcode='[[ABDT]]'\n  ;;\nsysv4)\n  symcode='[[DFNSTU]]'\n  ;;\nesac\n\n# If we're using GNU nm, then use its standard symbol codes.\ncase `$NM -V 2>&1` in\n*GNU* | *'with BFD'*)\n  symcode='[[ABCDGIRSTW]]' ;;\nesac\n\nif test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n  # Gets list of data symbols to import.\n  lt_cv_sys_global_symbol_to_import=\"sed -n -e 's/^I .* \\(.*\\)$/\\1/p'\"\n  # Adjust the below global symbol transforms to fixup imported variables.\n  lt_cdecl_hook=\" -e 's/^I .* \\(.*\\)$/extern __declspec(dllimport) char \\1;/p'\"\n  lt_c_name_hook=\" -e 's/^I .* \\(.*\\)$/  {\\\"\\1\\\", (void *) 0},/p'\"\n  lt_c_name_lib_hook=\"\\\n  -e 's/^I .* \\(lib.*\\)$/  {\\\"\\1\\\", (void *) 0},/p'\\\n  -e 's/^I .* \\(.*\\)$/  {\\\"lib\\1\\\", (void *) 0},/p'\"\nelse\n  # Disable hooks by default.\n  lt_cv_sys_global_symbol_to_import=\n  lt_cdecl_hook=\n  lt_c_name_hook=\n  lt_c_name_lib_hook=\nfi\n\n# Transform an extracted symbol line into a proper C declaration.\n# Some systems (esp. on ia64) link data and code symbols differently,\n# so use this general approach.\nlt_cv_sys_global_symbol_to_cdecl=\"sed -n\"\\\n$lt_cdecl_hook\\\n\" -e 's/^T .* \\(.*\\)$/extern int \\1();/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/extern char \\1;/p'\"\n\n# Transform an extracted symbol line into symbol name and symbol address\nlt_cv_sys_global_symbol_to_c_name_address=\"sed -n\"\\\n$lt_c_name_hook\\\n\" -e 's/^: \\(.*\\) .*$/  {\\\"\\1\\\", (void *) 0},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/p'\"\n\n# Transform an extracted symbol line into symbol name with lib prefix and\n# symbol address.\nlt_cv_sys_global_symbol_to_c_name_address_lib_prefix=\"sed -n\"\\\n$lt_c_name_lib_hook\\\n\" -e 's/^: \\(.*\\) .*$/  {\\\"\\1\\\", (void *) 0},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(lib.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/p'\"\\\n\" -e 's/^$symcode$symcode* .* \\(.*\\)$/  {\\\"lib\\1\\\", (void *) \\&\\1},/p'\"\n\n# Handle CRLF in mingw tool chain\nopt_cr=\ncase $build_os in\nmingw*)\n  opt_cr=`$ECHO 'x\\{0,1\\}' | tr x '\\015'` # option cr in regexp\n  ;;\nesac\n\n# Try without a prefix underscore, then with it.\nfor ac_symprfx in \"\" \"_\"; do\n\n  # Transform symcode, sympat, and symprfx into a raw symbol and a C symbol.\n  symxfrm=\"\\\\1 $ac_symprfx\\\\2 \\\\2\"\n\n  # Write the raw and C identifiers.\n  if test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n    # Fake it for dumpbin and say T for any non-static function,\n    # D for any global variable and I for any imported variable.\n    # Also find C++ and __fastcall symbols from MSVC++,\n    # which start with @ or ?.\n    lt_cv_sys_global_symbol_pipe=\"$AWK ['\"\\\n\"     {last_section=section; section=\\$ 3};\"\\\n\"     /^COFF SYMBOL TABLE/{for(i in hide) delete hide[i]};\"\\\n\"     /Section length .*#relocs.*(pick any)/{hide[last_section]=1};\"\\\n\"     /^ *Symbol name *: /{split(\\$ 0,sn,\\\":\\\"); si=substr(sn[2],2)};\"\\\n\"     /^ *Type *: code/{print \\\"T\\\",si,substr(si,length(prfx))};\"\\\n\"     /^ *Type *: data/{print \\\"I\\\",si,substr(si,length(prfx))};\"\\\n\"     \\$ 0!~/External *\\|/{next};\"\\\n\"     / 0+ UNDEF /{next}; / UNDEF \\([^|]\\)*()/{next};\"\\\n\"     {if(hide[section]) next};\"\\\n\"     {f=\\\"D\\\"}; \\$ 0~/\\(\\).*\\|/{f=\\\"T\\\"};\"\\\n\"     {split(\\$ 0,a,/\\||\\r/); split(a[2],s)};\"\\\n\"     s[1]~/^[@?]/{print f,s[1],s[1]; next};\"\\\n\"     s[1]~prfx {split(s[1],t,\\\"@\\\"); print f,t[1],substr(t[1],length(prfx))}\"\\\n\"     ' prfx=^$ac_symprfx]\"\n  else\n    lt_cv_sys_global_symbol_pipe=\"sed -n -e 's/^.*[[\t ]]\\($symcode$symcode*\\)[[\t ]][[\t ]]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'\"\n  fi\n  lt_cv_sys_global_symbol_pipe=\"$lt_cv_sys_global_symbol_pipe | sed '/ __gnu_lto/d'\"\n\n  # Check to see that the pipe works correctly.\n  pipe_works=no\n\n  rm -f conftest*\n  cat > conftest.$ac_ext <<_LT_EOF\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nchar nm_test_var;\nvoid nm_test_func(void);\nvoid nm_test_func(void){}\n#ifdef __cplusplus\n}\n#endif\nint main(){nm_test_var='a';nm_test_func();return(0);}\n_LT_EOF\n\n  if AC_TRY_EVAL(ac_compile); then\n    # Now try to grab the symbols.\n    nlist=conftest.nm\n    if AC_TRY_EVAL(NM conftest.$ac_objext \\| \"$lt_cv_sys_global_symbol_pipe\" \\> $nlist) && test -s \"$nlist\"; then\n      # Try sorting and uniquifying the output.\n      if sort \"$nlist\" | uniq > \"$nlist\"T; then\n\tmv -f \"$nlist\"T \"$nlist\"\n      else\n\trm -f \"$nlist\"T\n      fi\n\n      # Make sure that we snagged all the symbols we need.\n      if $GREP ' nm_test_var$' \"$nlist\" >/dev/null; then\n\tif $GREP ' nm_test_func$' \"$nlist\" >/dev/null; then\n\t  cat <<_LT_EOF > conftest.$ac_ext\n/* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */\n#if defined _WIN32 || defined __CYGWIN__ || defined _WIN32_WCE\n/* DATA imports from DLLs on WIN32 can't be const, because runtime\n   relocations are performed -- see ld's documentation on pseudo-relocs.  */\n# define LT@&t@_DLSYM_CONST\n#elif defined __osf__\n/* This system does not cope well with relocations in const data.  */\n# define LT@&t@_DLSYM_CONST\n#else\n# define LT@&t@_DLSYM_CONST const\n#endif\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n_LT_EOF\n\t  # Now generate the symbol file.\n\t  eval \"$lt_cv_sys_global_symbol_to_cdecl\"' < \"$nlist\" | $GREP -v main >> conftest.$ac_ext'\n\n\t  cat <<_LT_EOF >> conftest.$ac_ext\n\n/* The mapping between symbol names and symbols.  */\nLT@&t@_DLSYM_CONST struct {\n  const char *name;\n  void       *address;\n}\nlt__PROGRAM__LTX_preloaded_symbols[[]] =\n{\n  { \"@PROGRAM@\", (void *) 0 },\n_LT_EOF\n\t  $SED \"s/^$symcode$symcode* .* \\(.*\\)$/  {\\\"\\1\\\", (void *) \\&\\1},/\" < \"$nlist\" | $GREP -v main >> conftest.$ac_ext\n\t  cat <<\\_LT_EOF >> conftest.$ac_ext\n  {0, (void *) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt__PROGRAM__LTX_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\n_LT_EOF\n\t  # Now try linking the two files.\n\t  mv conftest.$ac_objext conftstm.$ac_objext\n\t  lt_globsym_save_LIBS=$LIBS\n\t  lt_globsym_save_CFLAGS=$CFLAGS\n\t  LIBS=conftstm.$ac_objext\n\t  CFLAGS=\"$CFLAGS$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)\"\n\t  if AC_TRY_EVAL(ac_link) && test -s conftest$ac_exeext; then\n\t    pipe_works=yes\n\t  fi\n\t  LIBS=$lt_globsym_save_LIBS\n\t  CFLAGS=$lt_globsym_save_CFLAGS\n\telse\n\t  echo \"cannot find nm_test_func in $nlist\" >&AS_MESSAGE_LOG_FD\n\tfi\n      else\n\techo \"cannot find nm_test_var in $nlist\" >&AS_MESSAGE_LOG_FD\n      fi\n    else\n      echo \"cannot run $lt_cv_sys_global_symbol_pipe\" >&AS_MESSAGE_LOG_FD\n    fi\n  else\n    echo \"$progname: failed program was:\" >&AS_MESSAGE_LOG_FD\n    cat conftest.$ac_ext >&5\n  fi\n  rm -rf conftest* conftst*\n\n  # Do not use the global_symbol_pipe unless it works.\n  if test yes = \"$pipe_works\"; then\n    break\n  else\n    lt_cv_sys_global_symbol_pipe=\n  fi\ndone\n])\nif test -z \"$lt_cv_sys_global_symbol_pipe\"; then\n  lt_cv_sys_global_symbol_to_cdecl=\nfi\nif test -z \"$lt_cv_sys_global_symbol_pipe$lt_cv_sys_global_symbol_to_cdecl\"; then\n  AC_MSG_RESULT(failed)\nelse\n  AC_MSG_RESULT(ok)\nfi\n\n# Response file support.\nif test \"$lt_cv_nm_interface\" = \"MS dumpbin\"; then\n  nm_file_list_spec='@'\nelif $NM --help 2>/dev/null | grep '[[@]]FILE' >/dev/null; then\n  nm_file_list_spec='@'\nfi\n\n_LT_DECL([global_symbol_pipe], [lt_cv_sys_global_symbol_pipe], [1],\n    [Take the output of nm and produce a listing of raw symbols and C names])\n_LT_DECL([global_symbol_to_cdecl], [lt_cv_sys_global_symbol_to_cdecl], [1],\n    [Transform the output of nm in a proper C declaration])\n_LT_DECL([global_symbol_to_import], [lt_cv_sys_global_symbol_to_import], [1],\n    [Transform the output of nm into a list of symbols to manually relocate])\n_LT_DECL([global_symbol_to_c_name_address],\n    [lt_cv_sys_global_symbol_to_c_name_address], [1],\n    [Transform the output of nm in a C name address pair])\n_LT_DECL([global_symbol_to_c_name_address_lib_prefix],\n    [lt_cv_sys_global_symbol_to_c_name_address_lib_prefix], [1],\n    [Transform the output of nm in a C name address pair when lib prefix is needed])\n_LT_DECL([nm_interface], [lt_cv_nm_interface], [1],\n    [The name lister interface])\n_LT_DECL([], [nm_file_list_spec], [1],\n    [Specify filename containing input files for $NM])\n]) # _LT_CMD_GLOBAL_SYMBOLS\n\n\n# _LT_COMPILER_PIC([TAGNAME])\n# ---------------------------\nm4_defun([_LT_COMPILER_PIC],\n[m4_require([_LT_TAG_COMPILER])dnl\n_LT_TAGVAR(lt_prog_compiler_wl, $1)=\n_LT_TAGVAR(lt_prog_compiler_pic, $1)=\n_LT_TAGVAR(lt_prog_compiler_static, $1)=\n\nm4_if([$1], [CXX], [\n  # C++ specific cases for pic, static, wl, etc.\n  if test yes = \"$GXX\"; then\n    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n    aix*)\n      # All AIX code is PIC.\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the '-m68020' flag to GCC prevents building anything better,\n            # like '-m68040'.\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n    mingw* | cygwin* | os2* | pw32* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      case $host_os in\n      os2*)\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-static'\n\t;;\n      esac\n      ;;\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n    *djgpp*)\n      # DJGPP does not support shared libraries at all\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n      ;;\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)=\n      ;;\n    interix[[3-9]]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n    *qnx* | *nto*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n    *)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n  else\n    case $host_os in\n      aix[[4-9]]*)\n\t# All AIX code is PIC.\n\tif test ia64 = \"$host_cpu\"; then\n\t  # AIX 5 now supports IA64 processor\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\telse\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n\tfi\n\t;;\n      chorus*)\n\tcase $cc_basename in\n\tcxch68*)\n\t  # Green Hills C++ Compiler\n\t  # _LT_TAGVAR(lt_prog_compiler_static, $1)=\"--no_auto_instantiation -u __main -u __premain -u _abort -r $COOL_DIR/lib/libOrb.a $MVME_DIR/lib/CC/libC.a $MVME_DIR/lib/classix/libcx.s.a\"\n\t  ;;\n\tesac\n\t;;\n      mingw* | cygwin* | os2* | pw32* | cegcc*)\n\t# This hack is so that the source file can tell whether it is being\n\t# built for inclusion in a dll (and should export symbols for example).\n\tm4_if([$1], [GCJ], [],\n\t  [_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n\t;;\n      dgux*)\n\tcase $cc_basename in\n\t  ec++*)\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  ghcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      freebsd* | dragonfly*)\n\t# FreeBSD uses GNU C++\n\t;;\n      hpux9* | hpux10* | hpux11*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-a ${wl}archive'\n\t    if test ia64 != \"$host_cpu\"; then\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t    fi\n\t    ;;\n\t  aCC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-a ${wl}archive'\n\t    case $host_cpu in\n\t    hppa*64*|ia64*)\n\t      # +Z the default\n\t      ;;\n\t    *)\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t      ;;\n\t    esac\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      interix*)\n\t# This is c89, which is MS Visual C++ (no shared libs)\n\t# Anyone wants to do a port?\n\t;;\n      irix5* | irix6* | nonstopux*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    # CC pic flag -KPIC is the default.\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    # KAI C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    ;;\n\t  ecpc* )\n\t    # old Intel C++ for x86_64, which still supported -KPIC.\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  icpc* )\n\t    # Intel C++, used to be incompatible with GCC.\n\t    # ICC 10 doesn't accept -KPIC any more.\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  pgCC* | pgcpp*)\n\t    # Portland Group C++ compiler\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  xlc* | xlC* | bgxl[[cC]]* | mpixl[[cC]]*)\n\t    # IBM XL 8.0, 9.0 on PPC and BlueGene\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n      lynxos*)\n\t;;\n      m88k*)\n\t;;\n      mvs*)\n\tcase $cc_basename in\n\t  cxx*)\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-W c,exportall'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      netbsd*)\n\t;;\n      *qnx* | *nto*)\n        # QNX uses GNU C++, but need to define -shared option too, otherwise\n        # it will coredump.\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n        ;;\n      osf3* | osf4* | osf5*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    ;;\n\t  RCC*)\n\t    # Rational C++ 2.4.1\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  cxx*)\n\t    # Digital/Compaq C++\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      psos*)\n\t;;\n      solaris*)\n\tcase $cc_basename in\n\t  CC* | sunCC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t    ;;\n\t  gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sunos4*)\n\tcase $cc_basename in\n\t  CC*)\n\t    # Sun C++ 4.x\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  lcc*)\n\t    # Lucid\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\tesac\n\t;;\n      tandem*)\n\tcase $cc_basename in\n\t  NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      vxworks*)\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n\t;;\n    esac\n  fi\n],\n[\n  if test yes = \"$GCC\"; then\n    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n      aix*)\n      # All AIX code is PIC.\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n        ;;\n      m68k)\n            # FIXME: we need at least 68020 code to build shared libraries, but\n            # adding the '-m68020' flag to GCC prevents building anything better,\n            # like '-m68040'.\n            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n        ;;\n      esac\n      ;;\n\n    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      # Although the cygwin gcc ignores -fPIC, still need this for old-style\n      # (--disable-auto-import) libraries\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      case $host_os in\n      os2*)\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-static'\n\t;;\n      esac\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n\n    haiku*)\n      # PIC is the default for Haiku.\n      # The \"-static\" flag exists, but is broken.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)=\n      ;;\n\n    hpux*)\n      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit\n      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag\n      # sets the default TLS model and affects inlining.\n      case $host_cpu in\n      hppa*64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n\n    interix[[3-9]]*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n\n    msdosdjgpp*)\n      # Just because we use GCC doesn't mean we suddenly get shared libraries\n      # on systems that don't support them.\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      enable_shared=no\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n\n    *)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n\n    case $cc_basename in\n    nvcc*) # Cuda Compiler Driver 2.2\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Xlinker '\n      if test -n \"$_LT_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)=\"-Xcompiler $_LT_TAGVAR(lt_prog_compiler_pic, $1)\"\n      fi\n      ;;\n    esac\n  else\n    # PORTME Check for flag to pass linker flags through the system compiler.\n    case $host_os in\n    aix*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      if test ia64 = \"$host_cpu\"; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      else\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n      fi\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      case $cc_basename in\n      nagfor*)\n        # NAG Fortran compiler\n        _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,-Wl,,'\n        _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n        _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n        ;;\n      esac\n      ;;\n\n    mingw* | cygwin* | pw32* | os2* | cegcc*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      m4_if([$1], [GCJ], [],\n\t[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])\n      case $host_os in\n      os2*)\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-static'\n\t;;\n      esac\n      ;;\n\n    hpux9* | hpux10* | hpux11*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but\n      # not for PA HP-UX.\n      case $host_cpu in\n      hppa*64*|ia64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t;;\n      esac\n      # Is there a better lt_prog_compiler_static that works with the bundled CC?\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='$wl-a ${wl}archive'\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC (with -KPIC) is the default.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n      case $cc_basename in\n      # old Intel for x86_64, which still supported -KPIC.\n      ecc*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      # icc used to be incompatible with GCC.\n      # ICC 10 doesn't accept -KPIC any more.\n      icc* | ifort*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      # Lahey Fortran 8.1.\n      lf95*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='--shared'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='--static'\n\t;;\n      nagfor*)\n\t# NAG Fortran compiler\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,-Wl,,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t;;\n      tcc*)\n\t# Fabrice Bellard et al's Tiny C Compiler\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t;;\n      pgcc* | pgf77* | pgf90* | pgf95* | pgfortran*)\n        # Portland Group compilers (*not* the Pentium gcc compiler,\n\t# which looks to be a dead project)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n        ;;\n      ccc*)\n        _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n        # All Alpha code is PIC.\n        _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n        ;;\n      xl* | bgxl* | bgf* | mpixl*)\n\t# IBM XL C 8.0/Fortran 10.1, 11.1 on PPC and BlueGene\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'\n\t;;\n      *)\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ Ceres\\ Fortran* | *Sun*Fortran*\\ [[1-7]].* | *Sun*Fortran*\\ 8.[[0-3]]*)\n\t  # Sun Fortran 8.3 passes all unrecognized flags to the linker\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)=''\n\t  ;;\n\t*Sun\\ F* | *Sun*Fortran*)\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t  ;;\n\t*Sun\\ C*)\n\t  # Sun C 5.9\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  ;;\n        *Intel*\\ [[CF]]*Compiler*)\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t  ;;\n\t*Portland\\ Group*)\n\t  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t  ;;\n\tesac\n\t;;\n      esac\n      ;;\n\n    newsos6)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *nto* | *qnx*)\n      # QNX uses GNU C++, but need to define -shared option too, otherwise\n      # it will coredump.\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'\n      ;;\n\n    osf3* | osf4* | osf5*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # All OSF/1 code is PIC.\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    rdos*)\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    solaris*)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      case $cc_basename in\n      f77* | f90* | f95* | sunf77* | sunf90* | sunf95*)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld ';;\n      *)\n\t_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,';;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4 | sysv4.2uw2* | sysv4.3*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(lt_prog_compiler_pic, $1)='-Kconform_pic'\n\t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    unicos*)\n      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n\n    uts4*)\n      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *)\n      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n    esac\n  fi\n])\ncase $host_os in\n  # For platforms that do not support PIC, -DPIC is meaningless:\n  *djgpp*)\n    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\n    ;;\n  *)\n    _LT_TAGVAR(lt_prog_compiler_pic, $1)=\"$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])\"\n    ;;\nesac\n\nAC_CACHE_CHECK([for $compiler option to produce PIC],\n  [_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)],\n  [_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)=$_LT_TAGVAR(lt_prog_compiler_pic, $1)])\n_LT_TAGVAR(lt_prog_compiler_pic, $1)=$_LT_TAGVAR(lt_cv_prog_compiler_pic, $1)\n\n#\n# Check to make sure the PIC flag actually works.\n#\nif test -n \"$_LT_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n  _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, $1) works],\n    [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, $1)],\n    [$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])], [],\n    [case $_LT_TAGVAR(lt_prog_compiler_pic, $1) in\n     \"\" | \" \"*) ;;\n     *) _LT_TAGVAR(lt_prog_compiler_pic, $1)=\" $_LT_TAGVAR(lt_prog_compiler_pic, $1)\" ;;\n     esac],\n    [_LT_TAGVAR(lt_prog_compiler_pic, $1)=\n     _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no])\nfi\n_LT_TAGDECL([pic_flag], [lt_prog_compiler_pic], [1],\n\t[Additional compiler flags for building library objects])\n\n_LT_TAGDECL([wl], [lt_prog_compiler_wl], [1],\n\t[How to pass a linker flag through the compiler])\n#\n# Check to make sure the static flag actually works.\n#\nwl=$_LT_TAGVAR(lt_prog_compiler_wl, $1) eval lt_tmp_static_flag=\\\"$_LT_TAGVAR(lt_prog_compiler_static, $1)\\\"\n_LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works],\n  _LT_TAGVAR(lt_cv_prog_compiler_static_works, $1),\n  $lt_tmp_static_flag,\n  [],\n  [_LT_TAGVAR(lt_prog_compiler_static, $1)=])\n_LT_TAGDECL([link_static_flag], [lt_prog_compiler_static], [1],\n\t[Compiler flag to prevent dynamic linking])\n])# _LT_COMPILER_PIC\n\n\n# _LT_LINKER_SHLIBS([TAGNAME])\n# ----------------------------\n# See if the linker supports building shared libraries.\nm4_defun([_LT_LINKER_SHLIBS],\n[AC_REQUIRE([LT_PATH_LD])dnl\nAC_REQUIRE([LT_PATH_NM])dnl\nm4_require([_LT_PATH_MANIFEST_TOOL])dnl\nm4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_DECL_SED])dnl\nm4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl\nm4_require([_LT_TAG_COMPILER])dnl\nAC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\nm4_if([$1], [CXX], [\n  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']\n  case $host_os in\n  aix[[4-9]]*)\n    # If we're using GNU nm, then we don't want the \"-C\" option.\n    # -C means demangle to GNU nm, but means don't demangle to AIX nm.\n    # Without the \"-l\" option, or with the \"-B\" option, AIX nm treats\n    # weak defined symbols like other global defined symbols, whereas\n    # GNU nm marks them as \"W\".\n    # While the 'weak' keyword is ignored in the Export File, we need\n    # it in the Import File for the 'aix-soname' feature, so we have\n    # to replace the \"-B\" option with \"-P\" for AIX nm.\n    if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && ([substr](\\$ 3,1,1) != \".\")) { if (\\$ 2 == \"W\") { print \\$ 3 \" weak\" } else { print \\$ 3 } } }'\\'' | sort -u > $export_symbols'\n    else\n      _LT_TAGVAR(export_symbols_cmds, $1)='`func_echo_all $NM | $SED -e '\\''s/B\\([[^B]]*\\)$/P\\1/'\\''` -PCpgl $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) && ([substr](\\$ 1,1,1) != \".\")) { if ((\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) { print \\$ 1 \" weak\" } else { print \\$ 1 } } }'\\'' | sort -u > $export_symbols'\n    fi\n    ;;\n  pw32*)\n    _LT_TAGVAR(export_symbols_cmds, $1)=$ltdll_cmds\n    ;;\n  cygwin* | mingw* | cegcc*)\n    case $cc_basename in\n    cl*)\n      _LT_TAGVAR(exclude_expsyms, $1)='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'\n      ;;\n    *)\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1 DATA/;s/^.*[[ ]]__nm__\\([[^ ]]*\\)[[ ]][[^ ]]*/\\1 DATA/;/^I[[ ]]/d;/^[[AITW]][[ ]]/s/.* //'\\'' | sort | uniq > $export_symbols'\n      _LT_TAGVAR(exclude_expsyms, $1)=['[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname']\n      ;;\n    esac\n    ;;\n  *)\n    _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n    ;;\n  esac\n], [\n  runpath_var=\n  _LT_TAGVAR(allow_undefined_flag, $1)=\n  _LT_TAGVAR(always_export_symbols, $1)=no\n  _LT_TAGVAR(archive_cmds, $1)=\n  _LT_TAGVAR(archive_expsym_cmds, $1)=\n  _LT_TAGVAR(compiler_needs_object, $1)=no\n  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n  _LT_TAGVAR(export_dynamic_flag_spec, $1)=\n  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  _LT_TAGVAR(hardcode_automatic, $1)=no\n  _LT_TAGVAR(hardcode_direct, $1)=no\n  _LT_TAGVAR(hardcode_direct_absolute, $1)=no\n  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n  _LT_TAGVAR(hardcode_libdir_separator, $1)=\n  _LT_TAGVAR(hardcode_minus_L, $1)=no\n  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  _LT_TAGVAR(inherit_rpath, $1)=no\n  _LT_TAGVAR(link_all_deplibs, $1)=unknown\n  _LT_TAGVAR(module_cmds, $1)=\n  _LT_TAGVAR(module_expsym_cmds, $1)=\n  _LT_TAGVAR(old_archive_from_new_cmds, $1)=\n  _LT_TAGVAR(old_archive_from_expsyms_cmds, $1)=\n  _LT_TAGVAR(thread_safe_flag_spec, $1)=\n  _LT_TAGVAR(whole_archive_flag_spec, $1)=\n  # include_expsyms should be a list of space-separated symbols to be *always*\n  # included in the symbol list\n  _LT_TAGVAR(include_expsyms, $1)=\n  # exclude_expsyms can be an extended regexp of symbols to exclude\n  # it will be wrapped by ' (' and ')$', so one must not match beginning or\n  # end of line.  Example: 'a|bc|.*d.*' will exclude the symbols 'a' and 'bc',\n  # as well as any symbol that contains 'd'.\n  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']\n  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out\n  # platforms (ab)use it in PIC code, but their linkers get confused if\n  # the symbol is explicitly referenced.  Since portable code cannot\n  # rely on this symbol name, it's probably fine to never include it in\n  # preloaded symbol tables.\n  # Exclude shared library initialization/finalization symbols.\ndnl Note also adjust exclude_expsyms for C++ above.\n  extract_expsyms_cmds=\n\n  case $host_os in\n  cygwin* | mingw* | pw32* | cegcc*)\n    # FIXME: the MSVC++ port hasn't been tested in a loooong time\n    # When not using gcc, we currently assume that we are using\n    # Microsoft Visual C++.\n    if test yes != \"$GCC\"; then\n      with_gnu_ld=no\n    fi\n    ;;\n  interix*)\n    # we just hope/assume this is gcc and not c89 (= MSVC++)\n    with_gnu_ld=yes\n    ;;\n  openbsd* | bitrig*)\n    with_gnu_ld=no\n    ;;\n  esac\n\n  _LT_TAGVAR(ld_shlibs, $1)=yes\n\n  # On some targets, GNU ld is compatible enough with the native linker\n  # that we're better off using the native interface for both.\n  lt_use_gnu_ld_interface=no\n  if test yes = \"$with_gnu_ld\"; then\n    case $host_os in\n      aix*)\n\t# The AIX port of GNU ld has always aspired to compatibility\n\t# with the native linker.  However, as the warning in the GNU ld\n\t# block says, versions before 2.19.5* couldn't really create working\n\t# shared libraries, regardless of the interface used.\n\tcase `$LD -v 2>&1` in\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.19.5*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ 2.[[2-9]]*) ;;\n\t  *\\ \\(GNU\\ Binutils\\)\\ [[3-9]]*) ;;\n\t  *)\n\t    lt_use_gnu_ld_interface=yes\n\t    ;;\n\tesac\n\t;;\n      *)\n\tlt_use_gnu_ld_interface=yes\n\t;;\n    esac\n  fi\n\n  if test yes = \"$lt_use_gnu_ld_interface\"; then\n    # If archive_cmds runs LD, not CC, wlarc should be empty\n    wlarc='$wl'\n\n    # Set some defaults for GNU ld with shared library support. These\n    # are reset later if shared libraries are not supported. Putting them\n    # here allows them to be overridden if necessary.\n    runpath_var=LD_RUN_PATH\n    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n    # ancient GNU ld didn't support --whole-archive et. al.\n    if $LD --help 2>&1 | $GREP 'no-whole-archive' > /dev/null; then\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n    else\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n    supports_anon_versioning=no\n    case `$LD -v | $SED -e 's/([^)]\\+)\\s\\+//' 2>&1` in\n      *GNU\\ gold*) supports_anon_versioning=yes ;;\n      *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.10.*) ;; # catch versions < 2.11\n      *\\ 2.11.93.0.2\\ *) supports_anon_versioning=yes ;; # RH7.3 ...\n      *\\ 2.11.92.0.12\\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...\n      *\\ 2.11.*) ;; # other 2.11 versions\n      *) supports_anon_versioning=yes ;;\n    esac\n\n    # See if GNU ld supports shared libraries.\n    case $host_os in\n    aix[[3-9]]*)\n      # On AIX/PPC, the GNU linker is very broken\n      if test ia64 != \"$host_cpu\"; then\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: the GNU linker, at least up to release 2.19, is reported\n*** to be unable to reliably create shared libraries on AIX.\n*** Therefore, libtool is disabling shared libraries support.  If you\n*** really care for shared libraries, you may want to install binutils\n*** 2.20 or above, or modify your PATH so that a non-GNU linker is found.\n*** You will then need to restart the configuration process.\n\n_LT_EOF\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n            _LT_TAGVAR(archive_expsym_cmds, $1)=''\n        ;;\n      m68k)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes\n        ;;\n      esac\n      ;;\n\n    beos*)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t# support --undefined.  This deserves some investigation.  FIXME\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n      # as there is no search path for DLLs.\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-all-symbols'\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(always_export_symbols, $1)=no\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1 DATA/;s/^.*[[ ]]__nm__\\([[^ ]]*\\)[[ ]][[^ ]]*/\\1 DATA/;/^I[[ ]]/d;/^[[AITW]][[ ]]/s/.* //'\\'' | sort | uniq > $export_symbols'\n      _LT_TAGVAR(exclude_expsyms, $1)=['[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname']\n\n      if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t# If the export-symbols file already is a .def file, use it as\n\t# is; otherwise, prepend EXPORTS...\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n          cp $export_symbols $output_objdir/$soname.def;\n        else\n          echo EXPORTS > $output_objdir/$soname.def;\n          cat $export_symbols >> $output_objdir/$soname.def;\n        fi~\n        $CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    haiku*)\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    os2*)\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      shrext_cmds=.dll\n      _LT_TAGVAR(archive_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\temxexp $libobjs | $SED /\"_DLL_InitTerm\"/d >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      _LT_TAGVAR(archive_expsym_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\tprefix_cmds=\"$SED\"~\n\tif test EXPORTS = \"`$SED 1q $export_symbols`\"; then\n\t  prefix_cmds=\"$prefix_cmds -e 1d\";\n\tfi~\n\tprefix_cmds=\"$prefix_cmds -e \\\"s/^\\(.*\\)$/_\\1/g\\\"\"~\n\tcat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      _LT_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      ;;\n\n    interix[[3-9]]*)\n      _LT_TAGVAR(hardcode_direct, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n      # Instead, shared libraries are loaded at an image base (0x10000000 by\n      # default) and relocated if they conflict, which is a slow very memory\n      # consuming and fragmenting process.  To avoid this, we pick a random,\n      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      _LT_TAGVAR(archive_expsym_cmds, $1)='sed \"s|^|_|\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--retain-symbols-file,$output_objdir/$soname.expsym $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      ;;\n\n    gnu* | linux* | tpf* | k*bsd*-gnu | kopensolaris*-gnu)\n      tmp_diet=no\n      if test linux-dietlibc = \"$host_os\"; then\n\tcase $cc_basename in\n\t  diet\\ *) tmp_diet=yes;;\t# linux-dietlibc with static linking (!diet-dyn)\n\tesac\n      fi\n      if $LD --help 2>&1 | $EGREP ': supported targets:.* elf' > /dev/null \\\n\t && test no = \"$tmp_diet\"\n      then\n\ttmp_addflag=' $pic_flag'\n\ttmp_sharedflag='-shared'\n\tcase $cc_basename,$host_cpu in\n        pgcc*)\t\t\t\t# Portland Group C compiler\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  tmp_addflag=' $pic_flag'\n\t  ;;\n\tpgf77* | pgf90* | pgf95* | pgfortran*)\n\t\t\t\t\t# Portland Group f77 and f90 compilers\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  tmp_addflag=' $pic_flag -Mnomain' ;;\n\tecc*,ia64* | icc*,ia64*)\t# Intel C compiler on ia64\n\t  tmp_addflag=' -i_dynamic' ;;\n\tefc*,ia64* | ifort*,ia64*)\t# Intel Fortran compiler on ia64\n\t  tmp_addflag=' -i_dynamic -nofor_main' ;;\n\tifc* | ifort*)\t\t\t# Intel Fortran compiler\n\t  tmp_addflag=' -nofor_main' ;;\n\tlf95*)\t\t\t\t# Lahey Fortran 8.1\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)=\n\t  tmp_sharedflag='--shared' ;;\n        nagfor*)                        # NAGFOR 5.3\n          tmp_sharedflag='-Wl,-shared' ;;\n\txl[[cC]]* | bgxl[[cC]]* | mpixl[[cC]]*) # IBM XL C 8.0 on PPC (deal with xlf below)\n\t  tmp_sharedflag='-qmkshrobj'\n\t  tmp_addflag= ;;\n\tnvcc*)\t# Cuda Compiler Driver 2.2\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  _LT_TAGVAR(compiler_needs_object, $1)=yes\n\t  ;;\n\tesac\n\tcase `$CC -V 2>&1 | sed 5q` in\n\t*Sun\\ C*)\t\t\t# Sun C 5.9\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t  _LT_TAGVAR(compiler_needs_object, $1)=yes\n\t  tmp_sharedflag='-G' ;;\n\t*Sun\\ F*)\t\t\t# Sun Fortran 8.3\n\t  tmp_sharedflag='-G' ;;\n\tesac\n\t_LT_TAGVAR(archive_cmds, $1)='$CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\n        if test yes = \"$supports_anon_versioning\"; then\n          _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n            cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n            echo \"local: *; };\" >> $output_objdir/$libname.ver~\n            $CC '\"$tmp_sharedflag\"\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'\n        fi\n\n\tcase $cc_basename in\n\ttcc*)\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='-rdynamic'\n\t  ;;\n\txlf* | bgf* | bgxlf* | mpixlf*)\n\t  # IBM XL Fortran 10.1 on PPC cannot create shared libs itself\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='--whole-archive$convenience --no-whole-archive'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -shared $libobjs $deplibs $linker_flags -soname $soname -o $lib'\n\t  if test yes = \"$supports_anon_versioning\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n              cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n              echo \"local: *; };\" >> $output_objdir/$libname.ver~\n              $LD -shared $libobjs $deplibs $linker_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'\n\t  fi\n\t  ;;\n\tesac\n      else\n        _LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'\n\twlarc=\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      fi\n      ;;\n\n    solaris*)\n      if $LD -v 2>&1 | $GREP 'BFD 2\\.8' > /dev/null; then\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: The releases 2.8.* of the GNU linker cannot reliably\n*** create shared libraries on Solaris systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.9.1 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n      elif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)\n      case `$LD -v 2>&1` in\n        *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.1[[0-5]].*)\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 cannot\n*** reliably create shared libraries on SCO systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n\t;;\n\t*)\n\t  # For security reasons, it is highly recommended that you always\n\t  # use absolute paths for naming shared libraries, and exclude the\n\t  # DT_RUNPATH tag from executables and libraries.  But doing so\n\t  # requires that you compile everything twice, which is a pain.\n\t  if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t  else\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t  fi\n\t;;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      wlarc=\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n    esac\n\n    if test no = \"$_LT_TAGVAR(ld_shlibs, $1)\"; then\n      runpath_var=\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)=\n      _LT_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n  else\n    # PORTME fill in a description of your system's linker (not GNU ld)\n    case $host_os in\n    aix3*)\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_TAGVAR(always_export_symbols, $1)=yes\n      _LT_TAGVAR(archive_expsym_cmds, $1)='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'\n      # Note: this linker hardcodes the directories in LIBPATH if there\n      # are no directories specified by -L.\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      if test yes = \"$GCC\" && test -z \"$lt_prog_compiler_static\"; then\n\t# Neither direct hardcoding nor static linking is supported with a\n\t# broken collect2.\n\t_LT_TAGVAR(hardcode_direct, $1)=unsupported\n      fi\n      ;;\n\n    aix[[4-9]]*)\n      if test ia64 = \"$host_cpu\"; then\n\t# On IA64, the linker does run time linking by default, so we don't\n\t# have to do anything special.\n\taix_use_runtimelinking=no\n\texp_sym_flag='-Bexport'\n\tno_entry_flag=\n      else\n\t# If we're using GNU nm, then we don't want the \"-C\" option.\n\t# -C means demangle to GNU nm, but means don't demangle to AIX nm.\n\t# Without the \"-l\" option, or with the \"-B\" option, AIX nm treats\n\t# weak defined symbols like other global defined symbols, whereas\n\t# GNU nm marks them as \"W\".\n\t# While the 'weak' keyword is ignored in the Export File, we need\n\t# it in the Import File for the 'aix-soname' feature, so we have\n\t# to replace the \"-B\" option with \"-P\" for AIX nm.\n\tif $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n\t  _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && ([substr](\\$ 3,1,1) != \".\")) { if (\\$ 2 == \"W\") { print \\$ 3 \" weak\" } else { print \\$ 3 } } }'\\'' | sort -u > $export_symbols'\n\telse\n\t  _LT_TAGVAR(export_symbols_cmds, $1)='`func_echo_all $NM | $SED -e '\\''s/B\\([[^B]]*\\)$/P\\1/'\\''` -PCpgl $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) && ([substr](\\$ 1,1,1) != \".\")) { if ((\\$ 2 == \"W\") || (\\$ 2 == \"V\") || (\\$ 2 == \"Z\")) { print \\$ 1 \" weak\" } else { print \\$ 1 } } }'\\'' | sort -u > $export_symbols'\n\tfi\n\taix_use_runtimelinking=no\n\n\t# Test if we are trying to use run time linking or normal\n\t# AIX style linking. If -brtl is somewhere in LDFLAGS, we\n\t# have runtime linking enabled, and use it for executables.\n\t# For shared libraries, we enable/disable runtime linking\n\t# depending on the kind of the shared library created -\n\t# when \"with_aix_soname,aix_use_runtimelinking\" is:\n\t# \"aix,no\"   lib.a(lib.so.V) shared, rtl:no,  for executables\n\t# \"aix,yes\"  lib.so          shared, rtl:yes, for executables\n\t#            lib.a           static archive\n\t# \"both,no\"  lib.so.V(shr.o) shared, rtl:yes\n\t#            lib.a(lib.so.V) shared, rtl:no,  for executables\n\t# \"both,yes\" lib.so.V(shr.o) shared, rtl:yes, for executables\n\t#            lib.a(lib.so.V) shared, rtl:no\n\t# \"svr4,*\"   lib.so.V(shr.o) shared, rtl:yes, for executables\n\t#            lib.a           static archive\n\tcase $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)\n\t  for ld_flag in $LDFLAGS; do\n\t  if (test x-brtl = \"x$ld_flag\" || test x-Wl,-brtl = \"x$ld_flag\"); then\n\t    aix_use_runtimelinking=yes\n\t    break\n\t  fi\n\t  done\n\t  if test svr4,no = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n\t    # With aix-soname=svr4, we create the lib.so.V shared archives only,\n\t    # so we don't have lib.a shared libs to link our executables.\n\t    # We have to force runtime linking in this case.\n\t    aix_use_runtimelinking=yes\n\t    LDFLAGS=\"$LDFLAGS -Wl,-brtl\"\n\t  fi\n\t  ;;\n\tesac\n\n\texp_sym_flag='-bexport'\n\tno_entry_flag='-bnoentry'\n      fi\n\n      # When large executables or shared objects are built, AIX ld can\n      # have problems creating the table of contents.  If linking a library\n      # or program results in \"error TOC overflow\" add -mminimal-toc to\n      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n      _LT_TAGVAR(archive_cmds, $1)=''\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_TAGVAR(file_list_spec, $1)='$wl-f,'\n      case $with_aix_soname,$aix_use_runtimelinking in\n      aix,*) ;; # traditional, no import file\n      svr4,* | *,yes) # use import file\n\t# The Import File defines what to hardcode.\n\t_LT_TAGVAR(hardcode_direct, $1)=no\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n\t;;\n      esac\n\n      if test yes = \"$GCC\"; then\n\tcase $host_os in aix4.[[012]]|aix4.[[012]].*)\n\t# We only want to do this on AIX 4.2 and lower, the check\n\t# below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`$CC -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t   strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t  # We have reworked collect2\n\t  :\n\t  else\n\t  # We have old collect2\n\t  _LT_TAGVAR(hardcode_direct, $1)=unsupported\n\t  # It fails to find uninstalled libraries when the uninstalled\n\t  # path is not listed in the libpath.  Setting hardcode_minus_L\n\t  # to unsupported forces relinking\n\t  _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n\t  ;;\n\tesac\n\tshared_flag='-shared'\n\tif test yes = \"$aix_use_runtimelinking\"; then\n\t  shared_flag=\"$shared_flag \"'$wl-G'\n\tfi\n\t# Need to ensure runtime linking is disabled for the traditional\n\t# shared library, or the linker may eventually find shared libraries\n\t# /with/ Import File - we do not want to mix them.\n\tshared_flag_aix='-shared'\n\tshared_flag_svr4='-shared $wl-G'\n      else\n\t# not using gcc\n\tif test ia64 = \"$host_cpu\"; then\n\t# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t# chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n\telse\n\t  if test yes = \"$aix_use_runtimelinking\"; then\n\t    shared_flag='$wl-G'\n\t  else\n\t    shared_flag='$wl-bM:SRE'\n\t  fi\n\t  shared_flag_aix='$wl-bM:SRE'\n\t  shared_flag_svr4='$wl-G'\n\tfi\n      fi\n\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-bexpall'\n      # It seems that -bexpall does not export symbols beginning with\n      # underscore (_), so it is better to generate a list of symbols to export.\n      _LT_TAGVAR(always_export_symbols, $1)=yes\n      if test aix,yes = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n\t# Warning - without using the other runtime loading flags (-brtl),\n\t# -berok will link without error, but may produce a broken library.\n\t_LT_TAGVAR(allow_undefined_flag, $1)='-berok'\n        # Determine the default libpath from the value encoded in an\n        # empty executable.\n        _LT_SYS_MODULE_PATH_AIX([$1])\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs $wl'$no_entry_flag' $compiler_flags `if test -n \"$allow_undefined_flag\"; then func_echo_all \"$wl$allow_undefined_flag\"; else :; fi` $wl'$exp_sym_flag:\\$export_symbols' '$shared_flag\n      else\n\tif test ia64 = \"$host_cpu\"; then\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R $libdir:/usr/lib:/lib'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\$wl$no_entry_flag\"' $compiler_flags $wl$allow_undefined_flag '\"\\$wl$exp_sym_flag:\\$export_symbols\"\n\telse\n\t # Determine the default libpath from the value encoded in an\n\t # empty executable.\n\t _LT_SYS_MODULE_PATH_AIX([$1])\n\t _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\t  # Warning - without using the other run time loading flags,\n\t  # -berok will link without error, but may produce a broken library.\n\t  _LT_TAGVAR(no_undefined_flag, $1)=' $wl-bernotok'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-berok'\n\t  if test yes = \"$with_gnu_ld\"; then\n\t    # We only use this code for GNU lds that support --whole-archive.\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t  else\n\t    # Exported symbols can be pulled into shared objects from archives\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t  fi\n\t  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$RM -r $output_objdir/$realname.d~$MKDIR $output_objdir/$realname.d'\n\t  # -brtl affects multiple linker settings, -berok does not and is overridden later\n\t  compiler_flags_filtered='`func_echo_all \"$compiler_flags \" | $SED -e \"s%-brtl\\\\([[, ]]\\\\)%-berok\\\\1%g\"`'\n\t  if test svr4 != \"$with_aix_soname\"; then\n\t    # This is similar to how AIX traditionally builds its shared libraries.\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$CC '$shared_flag_aix' -o $output_objdir/$realname.d/$soname $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$realname.d/$soname'\n\t  fi\n\t  if test aix != \"$with_aix_soname\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$CC '$shared_flag_svr4' -o $output_objdir/$realname.d/$shared_archive_member_spec.o $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$STRIP -e $output_objdir/$realname.d/$shared_archive_member_spec.o~( func_echo_all \"#! $soname($shared_archive_member_spec.o)\"; if test shr_64 = \"$shared_archive_member_spec\"; then func_echo_all \"# 64\"; else func_echo_all \"# 32\"; fi; cat $export_symbols ) > $output_objdir/$realname.d/$shared_archive_member_spec.imp~$AR $AR_FLAGS $output_objdir/$soname $output_objdir/$realname.d/$shared_archive_member_spec.o $output_objdir/$realname.d/$shared_archive_member_spec.imp'\n\t  else\n\t    # used by -dlpreopen to get the symbols\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$MV  $output_objdir/$realname.d/$soname $output_objdir'\n\t  fi\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$RM -r $output_objdir/$realname.d'\n\tfi\n      fi\n      ;;\n\n    amigaos*)\n      case $host_cpu in\n      powerpc)\n            # see comment about AmigaOS4 .so support\n            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n            _LT_TAGVAR(archive_expsym_cmds, $1)=''\n        ;;\n      m68k)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$ECHO \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$ECHO \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes\n        ;;\n      esac\n      ;;\n\n    bsdi[[45]]*)\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)=-rdynamic\n      ;;\n\n    cygwin* | mingw* | pw32* | cegcc*)\n      # When not using gcc, we currently assume that we are using\n      # Microsoft Visual C++.\n      # hardcode_libdir_flag_spec is actually meaningless, as there is\n      # no search path for DLLs.\n      case $cc_basename in\n      cl*)\n\t# Native MSVC\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t_LT_TAGVAR(always_export_symbols, $1)=yes\n\t_LT_TAGVAR(file_list_spec, $1)='@'\n\t# Tell ltmain to make .lib files, not .a files.\n\tlibext=lib\n\t# Tell ltmain to make .dll files, not .so files.\n\tshrext_cmds=.dll\n\t# FIXME: Setting linknames here is a bad hack.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~linknames='\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n            cp \"$export_symbols\" \"$output_objdir/$soname.def\";\n            echo \"$tool_output_objdir$soname.def\" > \"$output_objdir/$soname.exp\";\n          else\n            $SED -e '\\''s/^/-link -EXPORT:/'\\'' < $export_symbols > $output_objdir/$soname.exp;\n          fi~\n          $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs \"@$tool_output_objdir$soname.exp\" -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~\n          linknames='\n\t# The linker will not automatically build a static lib if we build a DLL.\n\t# _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t_LT_TAGVAR(exclude_expsyms, $1)='_NULL_IMPORT_DESCRIPTOR|_IMPORT_DESCRIPTOR_.*'\n\t_LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\\([[^ ]]*\\)/\\1,DATA/'\\'' | $SED -e '\\''/^[[AITW]][[ ]]/s/.*[[ ]]//'\\'' | sort | uniq > $export_symbols'\n\t# Don't use ranlib\n\t_LT_TAGVAR(old_postinstall_cmds, $1)='chmod 644 $oldlib'\n\t_LT_TAGVAR(postlink_cmds, $1)='lt_outputfile=\"@OUTPUT@\"~\n          lt_tool_outputfile=\"@TOOL_OUTPUT@\"~\n          case $lt_outputfile in\n            *.exe|*.EXE) ;;\n            *)\n              lt_outputfile=$lt_outputfile.exe\n              lt_tool_outputfile=$lt_tool_outputfile.exe\n              ;;\n          esac~\n          if test : != \"$MANIFEST_TOOL\" && test -f \"$lt_outputfile.manifest\"; then\n            $MANIFEST_TOOL -manifest \"$lt_tool_outputfile.manifest\" -outputresource:\"$lt_tool_outputfile\" || exit 1;\n            $RM \"$lt_outputfile.manifest\";\n          fi'\n\t;;\n      *)\n\t# Assume MSVC wrapper\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Tell ltmain to make .lib files, not .a files.\n\tlibext=lib\n\t# Tell ltmain to make .dll files, not .so files.\n\tshrext_cmds=.dll\n\t# FIXME: Setting linknames here is a bad hack.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -o $lib $libobjs $compiler_flags `func_echo_all \"$deplibs\" | $SED '\\''s/ -lc$//'\\''` -link -dll~linknames='\n\t# The linker will automatically build a .lib file if we build a DLL.\n\t_LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t# FIXME: Should let the user specify the lib program.\n\t_LT_TAGVAR(old_archive_cmds, $1)='lib -OUT:$oldlib$oldobjs$old_deplibs'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t;;\n      esac\n      ;;\n\n    darwin* | rhapsody*)\n      _LT_DARWIN_LINKER_FEATURES($1)\n      ;;\n\n    dgux*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor\n    # support.  Future versions do this automatically, but an explicit c++rt0.o\n    # does not break anything, and helps significantly (at the cost of a little\n    # extra space).\n    freebsd2.2*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # Unfortunately, older versions of FreeBSD 2 do not have this feature.\n    freebsd2.*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.\n    freebsd* | dragonfly*)\n      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    hpux9*)\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared $pic_flag $wl+b $wl$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n\n      # hardcode_minus_L: Not really in the search PATH,\n      # but as the default location of the library.\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n      ;;\n\n    hpux10*)\n      if test yes,no = \"$GCC,$with_gnu_ld\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      if test no = \"$with_gnu_ld\"; then\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\t_LT_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\t# hardcode_minus_L: Not really in the search PATH,\n\t# but as the default location of the library.\n\t_LT_TAGVAR(hardcode_minus_L, $1)=yes\n      fi\n      ;;\n\n    hpux11*)\n      if test yes,no = \"$GCC,$with_gnu_ld\"; then\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl+h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl+h $wl$soname $wl+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tesac\n      else\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\tm4_if($1, [], [\n\t  # Older versions of the 11.00 compiler do not understand -b yet\n\t  # (HP92453-01 A.11.01.20 doesn't, HP92453-01 B.11.X.35175-35176.GP does)\n\t  _LT_LINKER_OPTION([if $CC understands -b],\n\t    _LT_TAGVAR(lt_cv_prog_compiler__b, $1), [-b],\n\t    [_LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'],\n\t    [_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'])],\n\t  [_LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'])\n\t  ;;\n\tesac\n      fi\n      if test no = \"$with_gnu_ld\"; then\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\tcase $host_cpu in\n\thppa*64*|ia64*)\n\t  _LT_TAGVAR(hardcode_direct, $1)=no\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\n\t  # hardcode_minus_L: Not really in the search PATH,\n\t  # but as the default location of the library.\n\t  _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t  ;;\n\tesac\n      fi\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t# Try to use the -exported_symbol ld option, if it does not\n\t# work, assume that -exports_file does not work either and\n\t# implicitly export all symbols.\n\t# This should be the same for all languages, so no per-tag cache variable.\n\tAC_CACHE_CHECK([whether the $host_os linker accepts -exported_symbol],\n\t  [lt_cv_irix_exported_symbol],\n\t  [save_LDFLAGS=$LDFLAGS\n\t   LDFLAGS=\"$LDFLAGS -shared $wl-exported_symbol ${wl}foo $wl-update_registry $wl/dev/null\"\n\t   AC_LINK_IFELSE(\n\t     [AC_LANG_SOURCE(\n\t        [AC_LANG_CASE([C], [[int foo (void) { return 0; }]],\n\t\t\t      [C++], [[int foo (void) { return 0; }]],\n\t\t\t      [Fortran 77], [[\n      subroutine foo\n      end]],\n\t\t\t      [Fortran], [[\n      subroutine foo\n      end]])])],\n\t      [lt_cv_irix_exported_symbol=yes],\n\t      [lt_cv_irix_exported_symbol=no])\n           LDFLAGS=$save_LDFLAGS])\n\tif test yes = \"$lt_cv_irix_exported_symbol\"; then\n          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations $wl-exports_file $wl$export_symbols -o $lib'\n\tfi\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -exports_file $export_symbols -o $lib'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(inherit_rpath, $1)=yes\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    linux*)\n      case $cc_basename in\n      tcc*)\n\t# Fabrice Bellard et al's Tiny C Compiler\n\t_LT_TAGVAR(ld_shlibs, $1)=yes\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t;;\n      esac\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    newsos6)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *nto* | *qnx*)\n      ;;\n\n    openbsd* | bitrig*)\n      if test -f /usr/libexec/ld.so; then\n\t_LT_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\tif test -z \"`echo __ELF__ | $CC -E - | $GREP __ELF__`\"; then\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags $wl-retain-symbols-file,$export_symbols'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\telse\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\tfi\n      else\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    os2*)\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n      shrext_cmds=.dll\n      _LT_TAGVAR(archive_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\temxexp $libobjs | $SED /\"_DLL_InitTerm\"/d >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      _LT_TAGVAR(archive_expsym_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t$ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t$ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t$ECHO EXPORTS >> $output_objdir/$libname.def~\n\tprefix_cmds=\"$SED\"~\n\tif test EXPORTS = \"`$SED 1q $export_symbols`\"; then\n\t  prefix_cmds=\"$prefix_cmds -e 1d\";\n\tfi~\n\tprefix_cmds=\"$prefix_cmds -e \\\"s/^\\(.*\\)$/_\\1/g\\\"\"~\n\tcat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~\n\t$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\temximp -o $lib $output_objdir/$libname.def'\n      _LT_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'\n      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      ;;\n\n    osf3*)\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n      else\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    osf4* | osf5*)\t# as osf3* with the addition of -msym flag\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $pic_flag $libobjs $deplibs $compiler_flags $wl-msym $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n      else\n\t_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done; printf \"%s\\\\n\" \"-hidden\">> $lib.exp~\n          $CC -shared$allow_undefined_flag $wl-input $wl$lib.exp $compiler_flags $libobjs $deplibs -soname $soname `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib~$RM $lib.exp'\n\n\t# Both c and cxx compiler support -rpath directly\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n      fi\n      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    solaris*)\n      _LT_TAGVAR(no_undefined_flag, $1)=' -z defs'\n      if test yes = \"$GCC\"; then\n\twlarc='$wl'\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $wl-z ${wl}text $wl-h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n          $CC -shared $pic_flag $wl-z ${wl}text $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n      else\n\tcase `$CC -V 2>&1` in\n\t*\"Compilers 5.0\"*)\n\t  wlarc=''\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G$allow_undefined_flag -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n            $LD -G$allow_undefined_flag -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'\n\t  ;;\n\t*)\n\t  wlarc='$wl'\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -G$allow_undefined_flag -h $soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n            $CC -G$allow_undefined_flag -M $lib.exp -h $soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'\n\t  ;;\n\tesac\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      case $host_os in\n      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n      *)\n\t# The compiler driver will combine and reorder linker options,\n\t# but understands '-z linker_flag'.  GCC discards it without '$wl',\n\t# but is careful enough not to reorder.\n\t# Supported since Solaris 2.6 (maybe 2.5.1?)\n\tif test yes = \"$GCC\"; then\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl-z ${wl}allextract$convenience $wl-z ${wl}defaultextract'\n\telse\n\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'\n\tfi\n\t;;\n      esac\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    sunos4*)\n      if test sequent = \"$host_vendor\"; then\n\t# Use $CC to link under sequent, because it throws in some extra .o\n\t# files that make .init and .fini sections work.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h $soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_direct, $1)=yes\n      _LT_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4)\n      case $host_vendor in\n\tsni)\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes # is this really true???\n\t;;\n\tsiemens)\n\t  ## LD is ld it makes a PLAMLIB\n\t  ## CC just makes a GrossModule.\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(reload_cmds, $1)='$CC -r -o $output$reload_objs'\n\t  _LT_TAGVAR(hardcode_direct, $1)=no\n        ;;\n\tmotorola)\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_TAGVAR(hardcode_direct, $1)=no #Motorola manual says yes, but my tests say they lie\n\t;;\n      esac\n      runpath_var='LD_RUN_PATH'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4.3*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='-Bexport'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\trunpath_var=LD_RUN_PATH\n\thardcode_runpath_var=yes\n\t_LT_TAGVAR(ld_shlibs, $1)=yes\n      fi\n      ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n      _LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6*)\n      # Note: We CANNOT use -z defs as we might desire, because we do not\n      # link with -lc, and that would cause any symbols used from libc to\n      # always be unresolved, which means just about no library would\n      # ever link correctly.  If we're not using GNU ld we use -z text\n      # though, which does catch some bad symbols but isn't as heavy-handed\n      # as -z defs.\n      _LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n      _LT_TAGVAR(allow_undefined_flag, $1)='$wl-z,nodefs'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R,$libdir'\n      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-Bexport'\n      runpath_var='LD_RUN_PATH'\n\n      if test yes = \"$GCC\"; then\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    uts4*)\n      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      _LT_TAGVAR(ld_shlibs, $1)=no\n      ;;\n    esac\n\n    if test sni = \"$host_vendor\"; then\n      case $host in\n      sysv4 | sysv4.2uw2* | sysv4.3* | sysv5*)\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-Blargedynsym'\n\t;;\n      esac\n    fi\n  fi\n])\nAC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])\ntest no = \"$_LT_TAGVAR(ld_shlibs, $1)\" && can_build_shared=no\n\n_LT_TAGVAR(with_gnu_ld, $1)=$with_gnu_ld\n\n_LT_DECL([], [libext], [0], [Old archive suffix (normally \"a\")])dnl\n_LT_DECL([], [shrext_cmds], [1], [Shared library suffix (normally \".so\")])dnl\n_LT_DECL([], [extract_expsyms_cmds], [2],\n    [The commands to extract the exported symbol list from a shared archive])\n\n#\n# Do we need to explicitly link libc?\n#\ncase \"x$_LT_TAGVAR(archive_cmds_need_lc, $1)\" in\nx|xyes)\n  # Assume -lc should be added\n  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\n  if test yes,yes = \"$GCC,$enable_shared\"; then\n    case $_LT_TAGVAR(archive_cmds, $1) in\n    *'~'*)\n      # FIXME: we may have to deal with multi-command sequences.\n      ;;\n    '$CC '*)\n      # Test whether the compiler implicitly links with -lc since on some\n      # systems, -lgcc has to come before -lc. If gcc already passes -lc\n      # to ld, don't add -lc before -lgcc.\n      AC_CACHE_CHECK([whether -lc should be explicitly linked in],\n\t[lt_cv_]_LT_TAGVAR(archive_cmds_need_lc, $1),\n\t[$RM conftest*\n\techo \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n\tif AC_TRY_EVAL(ac_compile) 2>conftest.err; then\n\t  soname=conftest\n\t  lib=conftest\n\t  libobjs=conftest.$ac_objext\n\t  deplibs=\n\t  wl=$_LT_TAGVAR(lt_prog_compiler_wl, $1)\n\t  pic_flag=$_LT_TAGVAR(lt_prog_compiler_pic, $1)\n\t  compiler_flags=-v\n\t  linker_flags=-v\n\t  verstring=\n\t  output_objdir=.\n\t  libname=conftest\n\t  lt_save_allow_undefined_flag=$_LT_TAGVAR(allow_undefined_flag, $1)\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=\n\t  if AC_TRY_EVAL(_LT_TAGVAR(archive_cmds, $1) 2\\>\\&1 \\| $GREP \\\" -lc \\\" \\>/dev/null 2\\>\\&1)\n\t  then\n\t    lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t  else\n\t    lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  fi\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=$lt_save_allow_undefined_flag\n\telse\n\t  cat conftest.err 1>&5\n\tfi\n\t$RM conftest*\n\t])\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=$lt_cv_[]_LT_TAGVAR(archive_cmds_need_lc, $1)\n      ;;\n    esac\n  fi\n  ;;\nesac\n\n_LT_TAGDECL([build_libtool_need_lc], [archive_cmds_need_lc], [0],\n    [Whether or not to add -lc for building shared libraries])\n_LT_TAGDECL([allow_libtool_libs_with_static_runtimes],\n    [enable_shared_with_static_runtimes], [0],\n    [Whether or not to disallow shared libs when runtime libs are static])\n_LT_TAGDECL([], [export_dynamic_flag_spec], [1],\n    [Compiler flag to allow reflexive dlopens])\n_LT_TAGDECL([], [whole_archive_flag_spec], [1],\n    [Compiler flag to generate shared objects directly from archives])\n_LT_TAGDECL([], [compiler_needs_object], [1],\n    [Whether the compiler copes with passing no objects directly])\n_LT_TAGDECL([], [old_archive_from_new_cmds], [2],\n    [Create an old-style archive from a shared archive])\n_LT_TAGDECL([], [old_archive_from_expsyms_cmds], [2],\n    [Create a temporary old-style archive to link instead of a shared archive])\n_LT_TAGDECL([], [archive_cmds], [2], [Commands used to build a shared archive])\n_LT_TAGDECL([], [archive_expsym_cmds], [2])\n_LT_TAGDECL([], [module_cmds], [2],\n    [Commands used to build a loadable module if different from building\n    a shared archive.])\n_LT_TAGDECL([], [module_expsym_cmds], [2])\n_LT_TAGDECL([], [with_gnu_ld], [1],\n    [Whether we are building with GNU ld or not])\n_LT_TAGDECL([], [allow_undefined_flag], [1],\n    [Flag that allows shared libraries with undefined symbols to be built])\n_LT_TAGDECL([], [no_undefined_flag], [1],\n    [Flag that enforces no undefined symbols])\n_LT_TAGDECL([], [hardcode_libdir_flag_spec], [1],\n    [Flag to hardcode $libdir into a binary during linking.\n    This must work even if $libdir does not exist])\n_LT_TAGDECL([], [hardcode_libdir_separator], [1],\n    [Whether we need a single \"-rpath\" flag with a separated argument])\n_LT_TAGDECL([], [hardcode_direct], [0],\n    [Set to \"yes\" if using DIR/libNAME$shared_ext during linking hardcodes\n    DIR into the resulting binary])\n_LT_TAGDECL([], [hardcode_direct_absolute], [0],\n    [Set to \"yes\" if using DIR/libNAME$shared_ext during linking hardcodes\n    DIR into the resulting binary and the resulting library dependency is\n    \"absolute\", i.e impossible to change by setting $shlibpath_var if the\n    library is relocated])\n_LT_TAGDECL([], [hardcode_minus_L], [0],\n    [Set to \"yes\" if using the -LDIR flag during linking hardcodes DIR\n    into the resulting binary])\n_LT_TAGDECL([], [hardcode_shlibpath_var], [0],\n    [Set to \"yes\" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR\n    into the resulting binary])\n_LT_TAGDECL([], [hardcode_automatic], [0],\n    [Set to \"yes\" if building a shared library automatically hardcodes DIR\n    into the library and all subsequent libraries and executables linked\n    against it])\n_LT_TAGDECL([], [inherit_rpath], [0],\n    [Set to yes if linker adds runtime paths of dependent libraries\n    to runtime path list])\n_LT_TAGDECL([], [link_all_deplibs], [0],\n    [Whether libtool must link a program against all its dependency libraries])\n_LT_TAGDECL([], [always_export_symbols], [0],\n    [Set to \"yes\" if exported symbols are required])\n_LT_TAGDECL([], [export_symbols_cmds], [2],\n    [The commands to list exported symbols])\n_LT_TAGDECL([], [exclude_expsyms], [1],\n    [Symbols that should not be listed in the preloaded symbols])\n_LT_TAGDECL([], [include_expsyms], [1],\n    [Symbols that must always be exported])\n_LT_TAGDECL([], [prelink_cmds], [2],\n    [Commands necessary for linking programs (against libraries) with templates])\n_LT_TAGDECL([], [postlink_cmds], [2],\n    [Commands necessary for finishing linking programs])\n_LT_TAGDECL([], [file_list_spec], [1],\n    [Specify filename containing input files])\ndnl FIXME: Not yet implemented\ndnl _LT_TAGDECL([], [thread_safe_flag_spec], [1],\ndnl    [Compiler flag to generate thread safe objects])\n])# _LT_LINKER_SHLIBS\n\n\n# _LT_LANG_C_CONFIG([TAG])\n# ------------------------\n# Ensure that the configuration variables for a C compiler are suitably\n# defined.  These variables are subsequently used by _LT_CONFIG to write\n# the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_C_CONFIG],\n[m4_require([_LT_DECL_EGREP])dnl\nlt_save_CC=$CC\nAC_LANG_PUSH(C)\n\n# Source file extension for C test sources.\nac_ext=c\n\n# Object file extension for compiled C test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"int some_variable = 0;\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='int main(){return(0);}'\n\n_LT_TAG_COMPILER\n# Save the default compiler, since it gets overwritten when the other\n# tags are being tested, and _LT_TAGVAR(compiler, []) is a NOP.\ncompiler_DEFAULT=$CC\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_SYS_DYNAMIC_LINKER($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n  LT_SYS_DLOPEN_SELF\n  _LT_CMD_STRIPLIB\n\n  # Report what library types will actually be built\n  AC_MSG_CHECKING([if libtool supports shared libraries])\n  AC_MSG_RESULT([$can_build_shared])\n\n  AC_MSG_CHECKING([whether to build shared libraries])\n  test no = \"$can_build_shared\" && enable_shared=no\n\n  # On AIX, shared libraries and static libraries use the same namespace, and\n  # are all built from PIC.\n  case $host_os in\n  aix3*)\n    test yes = \"$enable_shared\" && enable_static=no\n    if test -n \"$RANLIB\"; then\n      archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n      postinstall_cmds='$RANLIB $lib'\n    fi\n    ;;\n\n  aix[[4-9]]*)\n    if test ia64 != \"$host_cpu\"; then\n      case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in\n      yes,aix,yes) ;;\t\t\t# shared object as lib.so file only\n      yes,svr4,*) ;;\t\t\t# shared object as lib.so archive member only\n      yes,*) enable_static=no ;;\t# shared object in lib.a archive as well\n      esac\n    fi\n    ;;\n  esac\n  AC_MSG_RESULT([$enable_shared])\n\n  AC_MSG_CHECKING([whether to build static libraries])\n  # Make sure either enable_shared or enable_static is yes.\n  test yes = \"$enable_shared\" || enable_static=yes\n  AC_MSG_RESULT([$enable_static])\n\n  _LT_CONFIG($1)\nfi\nAC_LANG_POP\nCC=$lt_save_CC\n])# _LT_LANG_C_CONFIG\n\n\n# _LT_LANG_CXX_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for a C++ compiler are suitably\n# defined.  These variables are subsequently used by _LT_CONFIG to write\n# the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_CXX_CONFIG],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nm4_require([_LT_DECL_EGREP])dnl\nm4_require([_LT_PATH_MANIFEST_TOOL])dnl\nif test -n \"$CXX\" && ( test no != \"$CXX\" &&\n    ( (test g++ = \"$CXX\" && `g++ -v >/dev/null 2>&1` ) ||\n    (test g++ != \"$CXX\"))); then\n  AC_PROG_CXXCPP\nelse\n  _lt_caught_CXX_error=yes\nfi\n\nAC_LANG_PUSH(C++)\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(compiler_needs_object, $1)=no\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for C++ test sources.\nac_ext=cpp\n\n# Object file extension for compiled C++ test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the CXX compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test yes != \"$_lt_caught_CXX_error\"; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"int some_variable = 0;\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code='int main(int, char *[[]]) { return(0); }'\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_CFLAGS=$CFLAGS\n  lt_save_LD=$LD\n  lt_save_GCC=$GCC\n  GCC=$GXX\n  lt_save_with_gnu_ld=$with_gnu_ld\n  lt_save_path_LD=$lt_cv_path_LD\n  if test -n \"${lt_cv_prog_gnu_ldcxx+set}\"; then\n    lt_cv_prog_gnu_ld=$lt_cv_prog_gnu_ldcxx\n  else\n    $as_unset lt_cv_prog_gnu_ld\n  fi\n  if test -n \"${lt_cv_path_LDCXX+set}\"; then\n    lt_cv_path_LD=$lt_cv_path_LDCXX\n  else\n    $as_unset lt_cv_path_LD\n  fi\n  test -z \"${LDCXX+set}\" || LD=$LDCXX\n  CC=${CXX-\"c++\"}\n  CFLAGS=$CXXFLAGS\n  compiler=$CC\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n\n  if test -n \"$compiler\"; then\n    # We don't want -fno-exception when compiling C++ code, so set the\n    # no_builtin_flag separately\n    if test yes = \"$GXX\"; then\n      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin'\n    else\n      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n    fi\n\n    if test yes = \"$GXX\"; then\n      # Set up default GNU C++ configuration\n\n      LT_PATH_LD\n\n      # Check if GNU C++ uses GNU ld as the underlying linker, since the\n      # archiving commands below assume that GNU ld is being used.\n      if test yes = \"$with_gnu_ld\"; then\n        _LT_TAGVAR(archive_cmds, $1)='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\n        # If archive_cmds runs LD, not CC, wlarc should be empty\n        # XXX I think wlarc can be eliminated in ltcf-cxx, but I need to\n        #     investigate it a little bit more. (MM)\n        wlarc='$wl'\n\n        # ancient GNU ld didn't support --whole-archive et. al.\n        if eval \"`$CC -print-prog-name=ld` --help 2>&1\" |\n\t  $GREP 'no-whole-archive' > /dev/null; then\n          _LT_TAGVAR(whole_archive_flag_spec, $1)=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n        else\n          _LT_TAGVAR(whole_archive_flag_spec, $1)=\n        fi\n      else\n        with_gnu_ld=no\n        wlarc=\n\n        # A generic and very simple default shared library creation\n        # command for GNU C++ for the case where it uses the native\n        # linker, instead of GNU ld.  If possible, this setting should\n        # overridden to take advantage of the native linker features on\n        # the platform it is being used on.\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n      fi\n\n      # Commands to make compiler produce verbose output that lists\n      # what \"hidden\" libraries, object files and flags are used when\n      # linking a shared library.\n      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\n    else\n      GXX=no\n      with_gnu_ld=no\n      wlarc=\n    fi\n\n    # PORTME: fill in a description of your system's C++ link characteristics\n    AC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\n    _LT_TAGVAR(ld_shlibs, $1)=yes\n    case $host_os in\n      aix3*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n      aix[[4-9]]*)\n        if test ia64 = \"$host_cpu\"; then\n          # On IA64, the linker does run time linking by default, so we don't\n          # have to do anything special.\n          aix_use_runtimelinking=no\n          exp_sym_flag='-Bexport'\n          no_entry_flag=\n        else\n          aix_use_runtimelinking=no\n\n          # Test if we are trying to use run time linking or normal\n          # AIX style linking. If -brtl is somewhere in LDFLAGS, we\n          # have runtime linking enabled, and use it for executables.\n          # For shared libraries, we enable/disable runtime linking\n          # depending on the kind of the shared library created -\n          # when \"with_aix_soname,aix_use_runtimelinking\" is:\n          # \"aix,no\"   lib.a(lib.so.V) shared, rtl:no,  for executables\n          # \"aix,yes\"  lib.so          shared, rtl:yes, for executables\n          #            lib.a           static archive\n          # \"both,no\"  lib.so.V(shr.o) shared, rtl:yes\n          #            lib.a(lib.so.V) shared, rtl:no,  for executables\n          # \"both,yes\" lib.so.V(shr.o) shared, rtl:yes, for executables\n          #            lib.a(lib.so.V) shared, rtl:no\n          # \"svr4,*\"   lib.so.V(shr.o) shared, rtl:yes, for executables\n          #            lib.a           static archive\n          case $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)\n\t    for ld_flag in $LDFLAGS; do\n\t      case $ld_flag in\n\t      *-brtl*)\n\t        aix_use_runtimelinking=yes\n\t        break\n\t        ;;\n\t      esac\n\t    done\n\t    if test svr4,no = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n\t      # With aix-soname=svr4, we create the lib.so.V shared archives only,\n\t      # so we don't have lib.a shared libs to link our executables.\n\t      # We have to force runtime linking in this case.\n\t      aix_use_runtimelinking=yes\n\t      LDFLAGS=\"$LDFLAGS -Wl,-brtl\"\n\t    fi\n\t    ;;\n          esac\n\n          exp_sym_flag='-bexport'\n          no_entry_flag='-bnoentry'\n        fi\n\n        # When large executables or shared objects are built, AIX ld can\n        # have problems creating the table of contents.  If linking a library\n        # or program results in \"error TOC overflow\" add -mminimal-toc to\n        # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n        # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n        _LT_TAGVAR(archive_cmds, $1)=''\n        _LT_TAGVAR(hardcode_direct, $1)=yes\n        _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n        _LT_TAGVAR(link_all_deplibs, $1)=yes\n        _LT_TAGVAR(file_list_spec, $1)='$wl-f,'\n        case $with_aix_soname,$aix_use_runtimelinking in\n        aix,*) ;;\t# no import file\n        svr4,* | *,yes) # use import file\n          # The Import File defines what to hardcode.\n          _LT_TAGVAR(hardcode_direct, $1)=no\n          _LT_TAGVAR(hardcode_direct_absolute, $1)=no\n          ;;\n        esac\n\n        if test yes = \"$GXX\"; then\n          case $host_os in aix4.[[012]]|aix4.[[012]].*)\n          # We only want to do this on AIX 4.2 and lower, the check\n          # below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`$CC -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" &&\n\t     strings \"$collect2name\" | $GREP resolve_lib_name >/dev/null\n\t  then\n\t    # We have reworked collect2\n\t    :\n\t  else\n\t    # We have old collect2\n\t    _LT_TAGVAR(hardcode_direct, $1)=unsupported\n\t    # It fails to find uninstalled libraries when the uninstalled\n\t    # path is not listed in the libpath.  Setting hardcode_minus_L\n\t    # to unsupported forces relinking\n\t    _LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n          esac\n          shared_flag='-shared'\n\t  if test yes = \"$aix_use_runtimelinking\"; then\n\t    shared_flag=$shared_flag' $wl-G'\n\t  fi\n\t  # Need to ensure runtime linking is disabled for the traditional\n\t  # shared library, or the linker may eventually find shared libraries\n\t  # /with/ Import File - we do not want to mix them.\n\t  shared_flag_aix='-shared'\n\t  shared_flag_svr4='-shared $wl-G'\n        else\n          # not using gcc\n          if test ia64 = \"$host_cpu\"; then\n\t  # VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t  # chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n          else\n\t    if test yes = \"$aix_use_runtimelinking\"; then\n\t      shared_flag='$wl-G'\n\t    else\n\t      shared_flag='$wl-bM:SRE'\n\t    fi\n\t    shared_flag_aix='$wl-bM:SRE'\n\t    shared_flag_svr4='$wl-G'\n          fi\n        fi\n\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-bexpall'\n        # It seems that -bexpall does not export symbols beginning with\n        # underscore (_), so it is better to generate a list of symbols to\n\t# export.\n        _LT_TAGVAR(always_export_symbols, $1)=yes\n\tif test aix,yes = \"$with_aix_soname,$aix_use_runtimelinking\"; then\n          # Warning - without using the other runtime loading flags (-brtl),\n          # -berok will link without error, but may produce a broken library.\n          # The \"-G\" linker flag allows undefined symbols.\n          _LT_TAGVAR(no_undefined_flag, $1)='-bernotok'\n          # Determine the default libpath from the value encoded in an empty\n          # executable.\n          _LT_SYS_MODULE_PATH_AIX([$1])\n          _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\n          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs $wl'$no_entry_flag' $compiler_flags `if test -n \"$allow_undefined_flag\"; then func_echo_all \"$wl$allow_undefined_flag\"; else :; fi` $wl'$exp_sym_flag:\\$export_symbols' '$shared_flag\n        else\n          if test ia64 = \"$host_cpu\"; then\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R $libdir:/usr/lib:/lib'\n\t    _LT_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\$wl$no_entry_flag\"' $compiler_flags $wl$allow_undefined_flag '\"\\$wl$exp_sym_flag:\\$export_symbols\"\n          else\n\t    # Determine the default libpath from the value encoded in an\n\t    # empty executable.\n\t    _LT_SYS_MODULE_PATH_AIX([$1])\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-blibpath:$libdir:'\"$aix_libpath\"\n\t    # Warning - without using the other run time loading flags,\n\t    # -berok will link without error, but may produce a broken library.\n\t    _LT_TAGVAR(no_undefined_flag, $1)=' $wl-bernotok'\n\t    _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-berok'\n\t    if test yes = \"$with_gnu_ld\"; then\n\t      # We only use this code for GNU lds that support --whole-archive.\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t    else\n\t      # Exported symbols can be pulled into shared objects from archives\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t    fi\n\t    _LT_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$RM -r $output_objdir/$realname.d~$MKDIR $output_objdir/$realname.d'\n\t    # -brtl affects multiple linker settings, -berok does not and is overridden later\n\t    compiler_flags_filtered='`func_echo_all \"$compiler_flags \" | $SED -e \"s%-brtl\\\\([[, ]]\\\\)%-berok\\\\1%g\"`'\n\t    if test svr4 != \"$with_aix_soname\"; then\n\t      # This is similar to how AIX traditionally builds its shared\n\t      # libraries. Need -bnortl late, we may have -brtl in LDFLAGS.\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$CC '$shared_flag_aix' -o $output_objdir/$realname.d/$soname $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$realname.d/$soname'\n\t    fi\n\t    if test aix != \"$with_aix_soname\"; then\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$CC '$shared_flag_svr4' -o $output_objdir/$realname.d/$shared_archive_member_spec.o $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$STRIP -e $output_objdir/$realname.d/$shared_archive_member_spec.o~( func_echo_all \"#! $soname($shared_archive_member_spec.o)\"; if test shr_64 = \"$shared_archive_member_spec\"; then func_echo_all \"# 64\"; else func_echo_all \"# 32\"; fi; cat $export_symbols ) > $output_objdir/$realname.d/$shared_archive_member_spec.imp~$AR $AR_FLAGS $output_objdir/$soname $output_objdir/$realname.d/$shared_archive_member_spec.o $output_objdir/$realname.d/$shared_archive_member_spec.imp'\n\t    else\n\t      # used by -dlpreopen to get the symbols\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$MV  $output_objdir/$realname.d/$soname $output_objdir'\n\t    fi\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)=\"$_LT_TAGVAR(archive_expsym_cmds, $1)\"'~$RM -r $output_objdir/$realname.d'\n          fi\n        fi\n        ;;\n\n      beos*)\n\tif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  # Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t  # support --undefined.  This deserves some investigation.  FIXME\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\telse\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n\n      chorus*)\n        case $cc_basename in\n          *)\n\t  # FIXME: insert proper C++ library support\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\t  ;;\n        esac\n        ;;\n\n      cygwin* | mingw* | pw32* | cegcc*)\n\tcase $GXX,$cc_basename in\n\t,cl* | no,cl*)\n\t  # Native MSVC\n\t  # hardcode_libdir_flag_spec is actually meaningless, as there is\n\t  # no search path for DLLs.\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  _LT_TAGVAR(always_export_symbols, $1)=yes\n\t  _LT_TAGVAR(file_list_spec, $1)='@'\n\t  # Tell ltmain to make .lib files, not .a files.\n\t  libext=lib\n\t  # Tell ltmain to make .dll files, not .so files.\n\t  shrext_cmds=.dll\n\t  # FIXME: Setting linknames here is a bad hack.\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~linknames='\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n              cp \"$export_symbols\" \"$output_objdir/$soname.def\";\n              echo \"$tool_output_objdir$soname.def\" > \"$output_objdir/$soname.exp\";\n            else\n              $SED -e '\\''s/^/-link -EXPORT:/'\\'' < $export_symbols > $output_objdir/$soname.exp;\n            fi~\n            $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs \"@$tool_output_objdir$soname.exp\" -Wl,-DLL,-IMPLIB:\"$tool_output_objdir$libname.dll.lib\"~\n            linknames='\n\t  # The linker will not automatically build a static lib if we build a DLL.\n\t  # _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'\n\t  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t  # Don't use ranlib\n\t  _LT_TAGVAR(old_postinstall_cmds, $1)='chmod 644 $oldlib'\n\t  _LT_TAGVAR(postlink_cmds, $1)='lt_outputfile=\"@OUTPUT@\"~\n            lt_tool_outputfile=\"@TOOL_OUTPUT@\"~\n            case $lt_outputfile in\n              *.exe|*.EXE) ;;\n              *)\n                lt_outputfile=$lt_outputfile.exe\n                lt_tool_outputfile=$lt_tool_outputfile.exe\n                ;;\n            esac~\n            func_to_tool_file \"$lt_outputfile\"~\n            if test : != \"$MANIFEST_TOOL\" && test -f \"$lt_outputfile.manifest\"; then\n              $MANIFEST_TOOL -manifest \"$lt_tool_outputfile.manifest\" -outputresource:\"$lt_tool_outputfile\" || exit 1;\n              $RM \"$lt_outputfile.manifest\";\n            fi'\n\t  ;;\n\t*)\n\t  # g++\n\t  # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n\t  # as there is no search path for DLLs.\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-all-symbols'\n\t  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t  _LT_TAGVAR(always_export_symbols, $1)=no\n\t  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\n\t  if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t    # If the export-symbols file already is a .def file, use it as\n\t    # is; otherwise, prepend EXPORTS...\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='if _LT_DLL_DEF_P([$export_symbols]); then\n              cp $export_symbols $output_objdir/$soname.def;\n            else\n              echo EXPORTS > $output_objdir/$soname.def;\n              cat $export_symbols >> $output_objdir/$soname.def;\n            fi~\n            $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t  else\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t  fi\n\t  ;;\n\tesac\n\t;;\n      darwin* | rhapsody*)\n        _LT_DARWIN_LINKER_FEATURES($1)\n\t;;\n\n      os2*)\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t_LT_TAGVAR(hardcode_minus_L, $1)=yes\n\t_LT_TAGVAR(allow_undefined_flag, $1)=unsupported\n\tshrext_cmds=.dll\n\t_LT_TAGVAR(archive_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t  $ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t  $ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t  $ECHO EXPORTS >> $output_objdir/$libname.def~\n\t  emxexp $libobjs | $SED /\"_DLL_InitTerm\"/d >> $output_objdir/$libname.def~\n\t  $CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\t  emximp -o $lib $output_objdir/$libname.def'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='$ECHO \"LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE\" > $output_objdir/$libname.def~\n\t  $ECHO \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~\n\t  $ECHO \"DATA MULTIPLE NONSHARED\" >> $output_objdir/$libname.def~\n\t  $ECHO EXPORTS >> $output_objdir/$libname.def~\n\t  prefix_cmds=\"$SED\"~\n\t  if test EXPORTS = \"`$SED 1q $export_symbols`\"; then\n\t    prefix_cmds=\"$prefix_cmds -e 1d\";\n\t  fi~\n\t  prefix_cmds=\"$prefix_cmds -e \\\"s/^\\(.*\\)$/_\\1/g\\\"\"~\n\t  cat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~\n\t  $CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~\n\t  emximp -o $lib $output_objdir/$libname.def'\n\t_LT_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'\n\t_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\t;;\n\n      dgux*)\n        case $cc_basename in\n          ec++*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          ghcx*)\n\t    # Green Hills C++ Compiler\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      freebsd2.*)\n        # C++ shared libraries reported to be fairly broken before\n\t# switch to ELF\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      freebsd-elf*)\n        _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n        ;;\n\n      freebsd* | dragonfly*)\n        # FreeBSD 3 and later use GNU C++ and GNU ld with standard ELF\n        # conventions\n        _LT_TAGVAR(ld_shlibs, $1)=yes\n        ;;\n\n      haiku*)\n        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n        _LT_TAGVAR(link_all_deplibs, $1)=yes\n        ;;\n\n      hpux9*)\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n        _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n        _LT_TAGVAR(hardcode_direct, $1)=yes\n        _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t             # but as the default\n\t\t\t\t             # location of the library.\n\n        case $cc_basename in\n          CC*)\n            # FIXME: insert proper C++ library support\n            _LT_TAGVAR(ld_shlibs, $1)=no\n            ;;\n          aCC*)\n            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -b $wl+b $wl$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n            # Commands to make compiler produce verbose output that lists\n            # what \"hidden\" libraries, object files and flags are used when\n            # linking a shared library.\n            #\n            # There doesn't appear to be a way to prevent this compiler from\n            # explicitly linking system object files so we need to strip them\n            # from the output so that they don't get included in the library\n            # dependencies.\n            output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $EGREP \"\\-L\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n            ;;\n          *)\n            if test yes = \"$GXX\"; then\n              _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared -nostdlib $pic_flag $wl+b $wl$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test \"x$output_objdir/$soname\" = \"x$lib\" || mv $output_objdir/$soname $lib'\n            else\n              # FIXME: insert proper C++ library support\n              _LT_TAGVAR(ld_shlibs, $1)=no\n            fi\n            ;;\n        esac\n        ;;\n\n      hpux10*|hpux11*)\n        if test no = \"$with_gnu_ld\"; then\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl+b $wl$libdir'\n\t  _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n          case $host_cpu in\n            hppa*64*|ia64*)\n              ;;\n            *)\n\t      _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n              ;;\n          esac\n        fi\n        case $host_cpu in\n          hppa*64*|ia64*)\n            _LT_TAGVAR(hardcode_direct, $1)=no\n            _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n            ;;\n          *)\n            _LT_TAGVAR(hardcode_direct, $1)=yes\n            _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n            _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t\t         # but as the default\n\t\t\t\t\t         # location of the library.\n            ;;\n        esac\n\n        case $cc_basename in\n          CC*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          aCC*)\n\t    case $host_cpu in\n\t      hppa*64*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      ia64*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t      *)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t        ;;\n\t    esac\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $GREP \"\\-L\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n          *)\n\t    if test yes = \"$GXX\"; then\n\t      if test no = \"$with_gnu_ld\"; then\n\t        case $host_cpu in\n\t          hppa*64*)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC $wl+h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          ia64*)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $pic_flag $wl+h $wl$soname $wl+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t          *)\n\t            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t            ;;\n\t        esac\n\t      fi\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      _LT_TAGVAR(ld_shlibs, $1)=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      interix[[3-9]]*)\n\t_LT_TAGVAR(hardcode_direct, $1)=no\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\t# Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n\t# Instead, shared libraries are loaded at an image base (0x10000000 by\n\t# default) and relocated if they conflict, which is a slow very memory\n\t# consuming and fragmenting process.  To avoid this, we pick a random,\n\t# 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n\t# time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n\t_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t_LT_TAGVAR(archive_expsym_cmds, $1)='sed \"s|^|_|\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--retain-symbols-file,$output_objdir/$soname.expsym $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n\t;;\n      irix5* | irix6*)\n        case $cc_basename in\n          CC*)\n\t    # SGI C++\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -all -multigot $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -ar\", where \"CC\" is the IRIX C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -ar -WR,-u -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    if test yes = \"$GXX\"; then\n\t      if test no = \"$with_gnu_ld\"; then\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t      else\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` -o $lib'\n\t      fi\n\t    fi\n\t    _LT_TAGVAR(link_all_deplibs, $1)=yes\n\t    ;;\n        esac\n        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n        _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n        _LT_TAGVAR(inherit_rpath, $1)=yes\n        ;;\n\n      linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib $wl-retain-symbols-file,$export_symbols; mv \\$templib $lib'\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1 | $GREP \"ld\"`; rm -f libconftest$shared_ext; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -Bstatic\", where \"CC\" is the KAI C++ compiler.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs'\n\t    ;;\n\t  icpc* | ecpc* )\n\t    # Intel C++\n\t    with_gnu_ld=yes\n\t    # version 8.0 and above of icpc choke on multiply defined symbols\n\t    # if we add $predep_objects and $postdep_objects, however 7.1 and\n\t    # earlier do not add the objects themselves.\n\t    case `$CC -V 2>&1` in\n\t      *\"Version 7.\"*)\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t      *)  # Version 8.0 or newer\n\t        tmp_idyn=\n\t        case $host_cpu in\n\t\t  ia64*) tmp_idyn=' -i_dynamic';;\n\t\tesac\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t\t_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t\t;;\n\t    esac\n\t    _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive$convenience $wl--no-whole-archive'\n\t    ;;\n          pgCC* | pgcpp*)\n            # Portland Group C++ compiler\n\t    case `$CC -V` in\n\t    *pgCC\\ [[1-5]].* | *pgcpp\\ [[1-5]].*)\n\t      _LT_TAGVAR(prelink_cmds, $1)='tpldir=Template.dir~\n               rm -rf $tpldir~\n               $CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~\n               compile_command=\"$compile_command `find $tpldir -name \\*.o | sort | $NL2SP`\"'\n\t      _LT_TAGVAR(old_archive_cmds, $1)='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~\n                $AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \\*.o | sort | $NL2SP`~\n                $RANLIB $oldlib'\n\t      _LT_TAGVAR(archive_cmds, $1)='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n                $CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='tpldir=Template.dir~\n                rm -rf $tpldir~\n                $CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~\n                $CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \\*.o | sort | $NL2SP` $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t      ;;\n\t    *) # Version 6 and above use weak symbols\n\t      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'\n\t      ;;\n\t    esac\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl--rpath $wl$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n            ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname  -o $lib $wl-retain-symbols-file $wl$export_symbols'\n\n\t    runpath_var=LD_RUN_PATH\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld .*$\\)/\\1/\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"X$list\" | $Xsed'\n\t    ;;\n\t  xl* | mpixl* | bgxl*)\n\t    # IBM XL 8.0 on PPC, with GNU ld\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl--export-dynamic'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -qmkshrobj $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'\n\t    if test yes = \"$supports_anon_versioning\"; then\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $output_objdir/$libname.ver~\n                cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n                echo \"local: *; };\" >> $output_objdir/$libname.ver~\n                $CC -qmkshrobj $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'\n\t    fi\n\t    ;;\n\t  *)\n\t    case `$CC -V 2>&1 | sed 5q` in\n\t    *Sun\\ C*)\n\t      # Sun C++ 5.9\n\t      _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t      _LT_TAGVAR(archive_cmds, $1)='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-retain-symbols-file $wl$export_symbols'\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t      _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl--whole-archive`new_convenience=; for conv in $convenience\\\"\\\"; do test -z \\\"$conv\\\" || new_convenience=\\\"$new_convenience,$conv\\\"; done; func_echo_all \\\"$new_convenience\\\"` $wl--no-whole-archive'\n\t      _LT_TAGVAR(compiler_needs_object, $1)=yes\n\n\t      # Not sure whether something based on\n\t      # $CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1\n\t      # would be better.\n\t      output_verbose_link_cmd='func_echo_all'\n\n\t      # Archives containing C++ object files must be created using\n\t      # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t      # necessary to make sure instantiated templates are included\n\t      # in the archive.\n\t      _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t      ;;\n\t    esac\n\t    ;;\n\tesac\n\t;;\n\n      lynxos*)\n        # FIXME: insert proper C++ library support\n\t_LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      m88k*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n\t;;\n\n      mvs*)\n        case $cc_basename in\n          cxx*)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n\t  *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n\tesac\n\t;;\n\n      netbsd*)\n        if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then\n\t  _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable  -o $lib $predep_objects $libobjs $deplibs $postdep_objects $linker_flags'\n\t  wlarc=\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\tfi\n\t# Workaround some broken pre-1.5 toolchains\n\toutput_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP conftest.$objext | $SED -e \"s:-lgcc -lc -lgcc::\"'\n\t;;\n\n      *nto* | *qnx*)\n        _LT_TAGVAR(ld_shlibs, $1)=yes\n\t;;\n\n      openbsd* | bitrig*)\n\tif test -f /usr/libexec/ld.so; then\n\t  _LT_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n\t  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t  if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\"; then\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-retain-symbols-file,$export_symbols -o $lib'\n\t    _LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-E'\n\t    _LT_TAGVAR(whole_archive_flag_spec, $1)=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'\n\t  fi\n\t  output_verbose_link_cmd=func_echo_all\n\telse\n\t  _LT_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n\n      osf3* | osf4* | osf5*)\n        case $cc_basename in\n          KCC*)\n\t    # Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t    # KCC will only create a shared library if the output file\n\t    # ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t    # to its proper name (with version) after linking.\n\t    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo \"$lib\" | $SED -e \"s/\\$tempext\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath,$libdir'\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Archives containing C++ object files must be created using\n\t    # the KAI C++ compiler.\n\t    case $host in\n\t      osf3*) _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs' ;;\n\t      *) _LT_TAGVAR(old_archive_cmds, $1)='$CC -o $oldlib $oldobjs' ;;\n\t    esac\n\t    ;;\n          RCC*)\n\t    # Rational C++ 2.4.1\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          cxx*)\n\t    case $host in\n\t      osf3*)\n\t        _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t\t;;\n\t      *)\n\t        _LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname `test -n \"$verstring\" && func_echo_all \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done~\n                  echo \"-hidden\">> $lib.exp~\n                  $CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname $wl-input $wl$lib.exp  `test -n \"$verstring\" && $ECHO \"-set_version $verstring\"` -update_registry $output_objdir/so_locations -o $lib~\n                  $RM $lib.exp'\n\t        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t\t;;\n\t    esac\n\n\t    _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    #\n\t    # There doesn't appear to be a way to prevent this compiler from\n\t    # explicitly linking system object files so we need to strip them\n\t    # from the output so that they don't get included in the library\n\t    # dependencies.\n\t    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP \"ld\" | $GREP -v \"ld:\"`; templist=`func_echo_all \"$templist\" | $SED \"s/\\(^.*ld.*\\)\\( .*ld.*$\\)/\\1/\"`; list= ; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; func_echo_all \"$list\"'\n\t    ;;\n\t  *)\n\t    if test yes,no = \"$GXX,$with_gnu_ld\"; then\n\t      _LT_TAGVAR(allow_undefined_flag, $1)=' $wl-expect_unresolved $wl\\*'\n\t      case $host in\n\t        osf3*)\n\t          _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t\t  ;;\n\t        *)\n\t          _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-msym $wl-soname $wl$soname `test -n \"$verstring\" && func_echo_all \"$wl-set_version $wl$verstring\"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'\n\t\t  ;;\n\t      esac\n\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-rpath $wl$libdir'\n\t      _LT_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t      # Commands to make compiler produce verbose output that lists\n\t      # what \"hidden\" libraries, object files and flags are used when\n\t      # linking a shared library.\n\t      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\n\t    else\n\t      # FIXME: insert proper C++ library support\n\t      _LT_TAGVAR(ld_shlibs, $1)=no\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n      psos*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      sunos4*)\n        case $cc_basename in\n          CC*)\n\t    # Sun C++ 4.x\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          lcc*)\n\t    # Lucid\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      solaris*)\n        case $cc_basename in\n          CC* | sunCC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n            _LT_TAGVAR(archive_cmds_need_lc,$1)=yes\n\t    _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -G$allow_undefined_flag -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n              $CC -G$allow_undefined_flag $wl-M $wl$lib.exp -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t    _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t    case $host_os in\n\t      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t      *)\n\t\t# The compiler driver will combine and reorder linker options,\n\t\t# but understands '-z linker_flag'.\n\t        # Supported since Solaris 2.6 (maybe 2.5.1?)\n\t\t_LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'\n\t        ;;\n\t    esac\n\t    _LT_TAGVAR(link_all_deplibs, $1)=yes\n\n\t    output_verbose_link_cmd='func_echo_all'\n\n\t    # Archives containing C++ object files must be created using\n\t    # \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t    # necessary to make sure instantiated templates are included\n\t    # in the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t    ;;\n          gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\n\t    # The C++ compiler must be used to create the archive.\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC $LDFLAGS -archive -o $oldlib $oldobjs'\n\t    ;;\n          *)\n\t    # GNU C++ compiler with Solaris linker\n\t    if test yes,no = \"$GXX,$with_gnu_ld\"; then\n\t      _LT_TAGVAR(no_undefined_flag, $1)=' $wl-z ${wl}defs'\n\t      if $CC --version | $GREP -v '^2\\.7' > /dev/null; then\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n                  $CC -shared $pic_flag -nostdlib $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\t      else\n\t        # g++ 2.7 appears to require '-G' NOT '-shared' on this\n\t        # platform.\n\t        _LT_TAGVAR(archive_cmds, $1)='$CC -G -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-h $wl$soname -o $lib'\n\t        _LT_TAGVAR(archive_expsym_cmds, $1)='echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~echo \"local: *; };\" >> $lib.exp~\n                  $CC -G -nostdlib $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'\n\n\t        # Commands to make compiler produce verbose output that lists\n\t        # what \"hidden\" libraries, object files and flags are used when\n\t        # linking a shared library.\n\t        output_verbose_link_cmd='$CC -G $CFLAGS -v conftest.$objext 2>&1 | $GREP -v \"^Configured with:\" | $GREP \"\\-L\"'\n\t      fi\n\n\t      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R $wl$libdir'\n\t      case $host_os in\n\t\tsolaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t\t*)\n\t\t  _LT_TAGVAR(whole_archive_flag_spec, $1)='$wl-z ${wl}allextract$convenience $wl-z ${wl}defaultextract'\n\t\t  ;;\n\t      esac\n\t    fi\n\t    ;;\n        esac\n        ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n      _LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n      _LT_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      case $cc_basename in\n        CC*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n      esac\n      ;;\n\n      sysv5* | sco3.2v5* | sco5v6*)\n\t# Note: We CANNOT use -z defs as we might desire, because we do not\n\t# link with -lc, and that would cause any symbols used from libc to\n\t# always be unresolved, which means just about no library would\n\t# ever link correctly.  If we're not using GNU ld we use -z text\n\t# though, which does catch some bad symbols but isn't as heavy-handed\n\t# as -z defs.\n\t_LT_TAGVAR(no_undefined_flag, $1)='$wl-z,text'\n\t_LT_TAGVAR(allow_undefined_flag, $1)='$wl-z,nodefs'\n\t_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\t_LT_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='$wl-R,$libdir'\n\t_LT_TAGVAR(hardcode_libdir_separator, $1)=':'\n\t_LT_TAGVAR(link_all_deplibs, $1)=yes\n\t_LT_TAGVAR(export_dynamic_flag_spec, $1)='$wl-Bexport'\n\trunpath_var='LD_RUN_PATH'\n\n\tcase $cc_basename in\n          CC*)\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Tprelink_objects $oldobjs~\n              '\"$_LT_TAGVAR(old_archive_cmds, $1)\"\n\t    _LT_TAGVAR(reload_cmds, $1)='$CC -Tprelink_objects $reload_objs~\n              '\"$_LT_TAGVAR(reload_cmds, $1)\"\n\t    ;;\n\t  *)\n\t    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t    ;;\n\tesac\n      ;;\n\n      tandem*)\n        case $cc_basename in\n          NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n          *)\n\t    # FIXME: insert proper C++ library support\n\t    _LT_TAGVAR(ld_shlibs, $1)=no\n\t    ;;\n        esac\n        ;;\n\n      vxworks*)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n\n      *)\n        # FIXME: insert proper C++ library support\n        _LT_TAGVAR(ld_shlibs, $1)=no\n        ;;\n    esac\n\n    AC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])\n    test no = \"$_LT_TAGVAR(ld_shlibs, $1)\" && can_build_shared=no\n\n    _LT_TAGVAR(GCC, $1)=$GXX\n    _LT_TAGVAR(LD, $1)=$LD\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_SYS_HIDDEN_LIBDEPS($1)\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\n  LDCXX=$LD\n  LD=$lt_save_LD\n  GCC=$lt_save_GCC\n  with_gnu_ld=$lt_save_with_gnu_ld\n  lt_cv_path_LDCXX=$lt_cv_path_LD\n  lt_cv_path_LD=$lt_save_path_LD\n  lt_cv_prog_gnu_ldcxx=$lt_cv_prog_gnu_ld\n  lt_cv_prog_gnu_ld=$lt_save_with_gnu_ld\nfi # test yes != \"$_lt_caught_CXX_error\"\n\nAC_LANG_POP\n])# _LT_LANG_CXX_CONFIG\n\n\n# _LT_FUNC_STRIPNAME_CNF\n# ----------------------\n# func_stripname_cnf prefix suffix name\n# strip PREFIX and SUFFIX off of NAME.\n# PREFIX and SUFFIX must not contain globbing or regex special\n# characters, hashes, percent signs, but SUFFIX may contain a leading\n# dot (in which case that matches only a dot).\n#\n# This function is identical to the (non-XSI) version of func_stripname,\n# except this one can be used by m4 code that may be executed by configure,\n# rather than the libtool script.\nm4_defun([_LT_FUNC_STRIPNAME_CNF],[dnl\nAC_REQUIRE([_LT_DECL_SED])\nAC_REQUIRE([_LT_PROG_ECHO_BACKSLASH])\nfunc_stripname_cnf ()\n{\n  case @S|@2 in\n  .*) func_stripname_result=`$ECHO \"@S|@3\" | $SED \"s%^@S|@1%%; s%\\\\\\\\@S|@2\\$%%\"`;;\n  *)  func_stripname_result=`$ECHO \"@S|@3\" | $SED \"s%^@S|@1%%; s%@S|@2\\$%%\"`;;\n  esac\n} # func_stripname_cnf\n])# _LT_FUNC_STRIPNAME_CNF\n\n\n# _LT_SYS_HIDDEN_LIBDEPS([TAGNAME])\n# ---------------------------------\n# Figure out \"hidden\" library dependencies from verbose\n# compiler output when linking a shared library.\n# Parse the compiler output and extract the necessary\n# objects, libraries and library flags.\nm4_defun([_LT_SYS_HIDDEN_LIBDEPS],\n[m4_require([_LT_FILEUTILS_DEFAULTS])dnl\nAC_REQUIRE([_LT_FUNC_STRIPNAME_CNF])dnl\n# Dependencies to place before and after the object being linked:\n_LT_TAGVAR(predep_objects, $1)=\n_LT_TAGVAR(postdep_objects, $1)=\n_LT_TAGVAR(predeps, $1)=\n_LT_TAGVAR(postdeps, $1)=\n_LT_TAGVAR(compiler_lib_search_path, $1)=\n\ndnl we can't use the lt_simple_compile_test_code here,\ndnl because it contains code intended for an executable,\ndnl not a library.  It's possible we should let each\ndnl tag define a new lt_????_link_test_code variable,\ndnl but it's only used here...\nm4_if([$1], [], [cat > conftest.$ac_ext <<_LT_EOF\nint a;\nvoid foo (void) { a = 0; }\n_LT_EOF\n], [$1], [CXX], [cat > conftest.$ac_ext <<_LT_EOF\nclass Foo\n{\npublic:\n  Foo (void) { a = 0; }\nprivate:\n  int a;\n};\n_LT_EOF\n], [$1], [F77], [cat > conftest.$ac_ext <<_LT_EOF\n      subroutine foo\n      implicit none\n      integer*4 a\n      a=0\n      return\n      end\n_LT_EOF\n], [$1], [FC], [cat > conftest.$ac_ext <<_LT_EOF\n      subroutine foo\n      implicit none\n      integer a\n      a=0\n      return\n      end\n_LT_EOF\n], [$1], [GCJ], [cat > conftest.$ac_ext <<_LT_EOF\npublic class foo {\n  private int a;\n  public void bar (void) {\n    a = 0;\n  }\n};\n_LT_EOF\n], [$1], [GO], [cat > conftest.$ac_ext <<_LT_EOF\npackage foo\nfunc foo() {\n}\n_LT_EOF\n])\n\n_lt_libdeps_save_CFLAGS=$CFLAGS\ncase \"$CC $CFLAGS \" in #(\n*\\ -flto*\\ *) CFLAGS=\"$CFLAGS -fno-lto\" ;;\n*\\ -fwhopr*\\ *) CFLAGS=\"$CFLAGS -fno-whopr\" ;;\n*\\ -fuse-linker-plugin*\\ *) CFLAGS=\"$CFLAGS -fno-use-linker-plugin\" ;;\nesac\n\ndnl Parse the compiler output and extract the necessary\ndnl objects, libraries and library flags.\nif AC_TRY_EVAL(ac_compile); then\n  # Parse the compiler output and extract the necessary\n  # objects, libraries and library flags.\n\n  # Sentinel used to keep track of whether or not we are before\n  # the conftest object file.\n  pre_test_object_deps_done=no\n\n  for p in `eval \"$output_verbose_link_cmd\"`; do\n    case $prev$p in\n\n    -L* | -R* | -l*)\n       # Some compilers place space between \"-{L,R}\" and the path.\n       # Remove the space.\n       if test x-L = \"$p\" ||\n          test x-R = \"$p\"; then\n\t prev=$p\n\t continue\n       fi\n\n       # Expand the sysroot to ease extracting the directories later.\n       if test -z \"$prev\"; then\n         case $p in\n         -L*) func_stripname_cnf '-L' '' \"$p\"; prev=-L; p=$func_stripname_result ;;\n         -R*) func_stripname_cnf '-R' '' \"$p\"; prev=-R; p=$func_stripname_result ;;\n         -l*) func_stripname_cnf '-l' '' \"$p\"; prev=-l; p=$func_stripname_result ;;\n         esac\n       fi\n       case $p in\n       =*) func_stripname_cnf '=' '' \"$p\"; p=$lt_sysroot$func_stripname_result ;;\n       esac\n       if test no = \"$pre_test_object_deps_done\"; then\n\t case $prev in\n\t -L | -R)\n\t   # Internal compiler library paths should come after those\n\t   # provided the user.  The postdeps already come after the\n\t   # user supplied libs so there is no need to process them.\n\t   if test -z \"$_LT_TAGVAR(compiler_lib_search_path, $1)\"; then\n\t     _LT_TAGVAR(compiler_lib_search_path, $1)=$prev$p\n\t   else\n\t     _LT_TAGVAR(compiler_lib_search_path, $1)=\"${_LT_TAGVAR(compiler_lib_search_path, $1)} $prev$p\"\n\t   fi\n\t   ;;\n\t # The \"-l\" case would never come before the object being\n\t # linked, so don't bother handling this case.\n\t esac\n       else\n\t if test -z \"$_LT_TAGVAR(postdeps, $1)\"; then\n\t   _LT_TAGVAR(postdeps, $1)=$prev$p\n\t else\n\t   _LT_TAGVAR(postdeps, $1)=\"${_LT_TAGVAR(postdeps, $1)} $prev$p\"\n\t fi\n       fi\n       prev=\n       ;;\n\n    *.lto.$objext) ;; # Ignore GCC LTO objects\n    *.$objext)\n       # This assumes that the test object file only shows up\n       # once in the compiler output.\n       if test \"$p\" = \"conftest.$objext\"; then\n\t pre_test_object_deps_done=yes\n\t continue\n       fi\n\n       if test no = \"$pre_test_object_deps_done\"; then\n\t if test -z \"$_LT_TAGVAR(predep_objects, $1)\"; then\n\t   _LT_TAGVAR(predep_objects, $1)=$p\n\t else\n\t   _LT_TAGVAR(predep_objects, $1)=\"$_LT_TAGVAR(predep_objects, $1) $p\"\n\t fi\n       else\n\t if test -z \"$_LT_TAGVAR(postdep_objects, $1)\"; then\n\t   _LT_TAGVAR(postdep_objects, $1)=$p\n\t else\n\t   _LT_TAGVAR(postdep_objects, $1)=\"$_LT_TAGVAR(postdep_objects, $1) $p\"\n\t fi\n       fi\n       ;;\n\n    *) ;; # Ignore the rest.\n\n    esac\n  done\n\n  # Clean up.\n  rm -f a.out a.exe\nelse\n  echo \"libtool.m4: error: problem compiling $1 test program\"\nfi\n\n$RM -f confest.$objext\nCFLAGS=$_lt_libdeps_save_CFLAGS\n\n# PORTME: override above test on systems where it is broken\nm4_if([$1], [CXX],\n[case $host_os in\ninterix[[3-9]]*)\n  # Interix 3.5 installs completely hosed .la files for C++, so rather than\n  # hack all around it, let's just trust \"g++\" to DTRT.\n  _LT_TAGVAR(predep_objects,$1)=\n  _LT_TAGVAR(postdep_objects,$1)=\n  _LT_TAGVAR(postdeps,$1)=\n  ;;\nesac\n])\n\ncase \" $_LT_TAGVAR(postdeps, $1) \" in\n*\" -lc \"*) _LT_TAGVAR(archive_cmds_need_lc, $1)=no ;;\nesac\n _LT_TAGVAR(compiler_lib_search_dirs, $1)=\nif test -n \"${_LT_TAGVAR(compiler_lib_search_path, $1)}\"; then\n _LT_TAGVAR(compiler_lib_search_dirs, $1)=`echo \" ${_LT_TAGVAR(compiler_lib_search_path, $1)}\" | $SED -e 's! -L! !g' -e 's!^ !!'`\nfi\n_LT_TAGDECL([], [compiler_lib_search_dirs], [1],\n    [The directories searched by this compiler when creating a shared library])\n_LT_TAGDECL([], [predep_objects], [1],\n    [Dependencies to place before and after the objects being linked to\n    create a shared library])\n_LT_TAGDECL([], [postdep_objects], [1])\n_LT_TAGDECL([], [predeps], [1])\n_LT_TAGDECL([], [postdeps], [1])\n_LT_TAGDECL([], [compiler_lib_search_path], [1],\n    [The library search path used internally by the compiler when linking\n    a shared library])\n])# _LT_SYS_HIDDEN_LIBDEPS\n\n\n# _LT_LANG_F77_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for a Fortran 77 compiler are\n# suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_F77_CONFIG],\n[AC_LANG_PUSH(Fortran 77)\nif test -z \"$F77\" || test no = \"$F77\"; then\n  _lt_disable_F77=yes\nfi\n\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for f77 test sources.\nac_ext=f\n\n# Object file extension for compiled f77 test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the F77 compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test yes != \"$_lt_disable_F77\"; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"\\\n      subroutine t\n      return\n      end\n\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code=\"\\\n      program t\n      end\n\"\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_GCC=$GCC\n  lt_save_CFLAGS=$CFLAGS\n  CC=${F77-\"f77\"}\n  CFLAGS=$FFLAGS\n  compiler=$CC\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n  GCC=$G77\n  if test -n \"$compiler\"; then\n    AC_MSG_CHECKING([if libtool supports shared libraries])\n    AC_MSG_RESULT([$can_build_shared])\n\n    AC_MSG_CHECKING([whether to build shared libraries])\n    test no = \"$can_build_shared\" && enable_shared=no\n\n    # On AIX, shared libraries and static libraries use the same namespace, and\n    # are all built from PIC.\n    case $host_os in\n      aix3*)\n        test yes = \"$enable_shared\" && enable_static=no\n        if test -n \"$RANLIB\"; then\n          archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n          postinstall_cmds='$RANLIB $lib'\n        fi\n        ;;\n      aix[[4-9]]*)\n\tif test ia64 != \"$host_cpu\"; then\n\t  case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in\n\t  yes,aix,yes) ;;\t\t# shared object as lib.so file only\n\t  yes,svr4,*) ;;\t\t# shared object as lib.so archive member only\n\t  yes,*) enable_static=no ;;\t# shared object in lib.a archive as well\n\t  esac\n\tfi\n        ;;\n    esac\n    AC_MSG_RESULT([$enable_shared])\n\n    AC_MSG_CHECKING([whether to build static libraries])\n    # Make sure either enable_shared or enable_static is yes.\n    test yes = \"$enable_shared\" || enable_static=yes\n    AC_MSG_RESULT([$enable_static])\n\n    _LT_TAGVAR(GCC, $1)=$G77\n    _LT_TAGVAR(LD, $1)=$LD\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  GCC=$lt_save_GCC\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\nfi # test yes != \"$_lt_disable_F77\"\n\nAC_LANG_POP\n])# _LT_LANG_F77_CONFIG\n\n\n# _LT_LANG_FC_CONFIG([TAG])\n# -------------------------\n# Ensure that the configuration variables for a Fortran compiler are\n# suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_FC_CONFIG],\n[AC_LANG_PUSH(Fortran)\n\nif test -z \"$FC\" || test no = \"$FC\"; then\n  _lt_disable_FC=yes\nfi\n\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_TAGVAR(allow_undefined_flag, $1)=\n_LT_TAGVAR(always_export_symbols, $1)=no\n_LT_TAGVAR(archive_expsym_cmds, $1)=\n_LT_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_TAGVAR(hardcode_direct, $1)=no\n_LT_TAGVAR(hardcode_direct_absolute, $1)=no\n_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_TAGVAR(hardcode_minus_L, $1)=no\n_LT_TAGVAR(hardcode_automatic, $1)=no\n_LT_TAGVAR(inherit_rpath, $1)=no\n_LT_TAGVAR(module_cmds, $1)=\n_LT_TAGVAR(module_expsym_cmds, $1)=\n_LT_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n_LT_TAGVAR(no_undefined_flag, $1)=\n_LT_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for fc test sources.\nac_ext=${ac_fc_srcext-f}\n\n# Object file extension for compiled fc test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# No sense in running all these tests if we already determined that\n# the FC compiler isn't working.  Some variables (like enable_shared)\n# are currently assumed to apply to all compilers on this platform,\n# and will be corrupted by setting them based on a non-working compiler.\nif test yes != \"$_lt_disable_FC\"; then\n  # Code to be used in simple compile tests\n  lt_simple_compile_test_code=\"\\\n      subroutine t\n      return\n      end\n\"\n\n  # Code to be used in simple link tests\n  lt_simple_link_test_code=\"\\\n      program t\n      end\n\"\n\n  # ltmain only uses $CC for tagged configurations so make sure $CC is set.\n  _LT_TAG_COMPILER\n\n  # save warnings/boilerplate of simple test code\n  _LT_COMPILER_BOILERPLATE\n  _LT_LINKER_BOILERPLATE\n\n  # Allow CC to be a program name with arguments.\n  lt_save_CC=$CC\n  lt_save_GCC=$GCC\n  lt_save_CFLAGS=$CFLAGS\n  CC=${FC-\"f95\"}\n  CFLAGS=$FCFLAGS\n  compiler=$CC\n  GCC=$ac_cv_fc_compiler_gnu\n\n  _LT_TAGVAR(compiler, $1)=$CC\n  _LT_CC_BASENAME([$compiler])\n\n  if test -n \"$compiler\"; then\n    AC_MSG_CHECKING([if libtool supports shared libraries])\n    AC_MSG_RESULT([$can_build_shared])\n\n    AC_MSG_CHECKING([whether to build shared libraries])\n    test no = \"$can_build_shared\" && enable_shared=no\n\n    # On AIX, shared libraries and static libraries use the same namespace, and\n    # are all built from PIC.\n    case $host_os in\n      aix3*)\n        test yes = \"$enable_shared\" && enable_static=no\n        if test -n \"$RANLIB\"; then\n          archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n          postinstall_cmds='$RANLIB $lib'\n        fi\n        ;;\n      aix[[4-9]]*)\n\tif test ia64 != \"$host_cpu\"; then\n\t  case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in\n\t  yes,aix,yes) ;;\t\t# shared object as lib.so file only\n\t  yes,svr4,*) ;;\t\t# shared object as lib.so archive member only\n\t  yes,*) enable_static=no ;;\t# shared object in lib.a archive as well\n\t  esac\n\tfi\n        ;;\n    esac\n    AC_MSG_RESULT([$enable_shared])\n\n    AC_MSG_CHECKING([whether to build static libraries])\n    # Make sure either enable_shared or enable_static is yes.\n    test yes = \"$enable_shared\" || enable_static=yes\n    AC_MSG_RESULT([$enable_static])\n\n    _LT_TAGVAR(GCC, $1)=$ac_cv_fc_compiler_gnu\n    _LT_TAGVAR(LD, $1)=$LD\n\n    ## CAVEAT EMPTOR:\n    ## There is no encapsulation within the following macros, do not change\n    ## the running order or otherwise move them around unless you know exactly\n    ## what you are doing...\n    _LT_SYS_HIDDEN_LIBDEPS($1)\n    _LT_COMPILER_PIC($1)\n    _LT_COMPILER_C_O($1)\n    _LT_COMPILER_FILE_LOCKS($1)\n    _LT_LINKER_SHLIBS($1)\n    _LT_SYS_DYNAMIC_LINKER($1)\n    _LT_LINKER_HARDCODE_LIBPATH($1)\n\n    _LT_CONFIG($1)\n  fi # test -n \"$compiler\"\n\n  GCC=$lt_save_GCC\n  CC=$lt_save_CC\n  CFLAGS=$lt_save_CFLAGS\nfi # test yes != \"$_lt_disable_FC\"\n\nAC_LANG_POP\n])# _LT_LANG_FC_CONFIG\n\n\n# _LT_LANG_GCJ_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for the GNU Java Compiler compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_GCJ_CONFIG],\n[AC_REQUIRE([LT_PROG_GCJ])dnl\nAC_LANG_SAVE\n\n# Source file extension for Java test sources.\nac_ext=java\n\n# Object file extension for compiled Java test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"class foo {}\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='public class conftest { public static void main(String[[]] argv) {}; }'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=yes\nCC=${GCJ-\"gcj\"}\nCFLAGS=$GCJFLAGS\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_TAGVAR(LD, $1)=$LD\n_LT_CC_BASENAME([$compiler])\n\n# GCJ did not exist at the time GCC didn't implicitly link libc in.\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n\n  _LT_CONFIG($1)\nfi\n\nAC_LANG_RESTORE\n\nGCC=$lt_save_GCC\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_GCJ_CONFIG\n\n\n# _LT_LANG_GO_CONFIG([TAG])\n# --------------------------\n# Ensure that the configuration variables for the GNU Go compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_GO_CONFIG],\n[AC_REQUIRE([LT_PROG_GO])dnl\nAC_LANG_SAVE\n\n# Source file extension for Go test sources.\nac_ext=go\n\n# Object file extension for compiled Go test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"package main; func main() { }\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='package main; func main() { }'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=yes\nCC=${GOC-\"gccgo\"}\nCFLAGS=$GOFLAGS\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_TAGVAR(LD, $1)=$LD\n_LT_CC_BASENAME([$compiler])\n\n# Go did not exist at the time GCC didn't implicitly link libc in.\n_LT_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_TAGVAR(reload_flag, $1)=$reload_flag\n_LT_TAGVAR(reload_cmds, $1)=$reload_cmds\n\n## CAVEAT EMPTOR:\n## There is no encapsulation within the following macros, do not change\n## the running order or otherwise move them around unless you know exactly\n## what you are doing...\nif test -n \"$compiler\"; then\n  _LT_COMPILER_NO_RTTI($1)\n  _LT_COMPILER_PIC($1)\n  _LT_COMPILER_C_O($1)\n  _LT_COMPILER_FILE_LOCKS($1)\n  _LT_LINKER_SHLIBS($1)\n  _LT_LINKER_HARDCODE_LIBPATH($1)\n\n  _LT_CONFIG($1)\nfi\n\nAC_LANG_RESTORE\n\nGCC=$lt_save_GCC\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_GO_CONFIG\n\n\n# _LT_LANG_RC_CONFIG([TAG])\n# -------------------------\n# Ensure that the configuration variables for the Windows resource compiler\n# are suitably defined.  These variables are subsequently used by _LT_CONFIG\n# to write the compiler configuration to 'libtool'.\nm4_defun([_LT_LANG_RC_CONFIG],\n[AC_REQUIRE([LT_PROG_RC])dnl\nAC_LANG_SAVE\n\n# Source file extension for RC test sources.\nac_ext=rc\n\n# Object file extension for compiled RC test sources.\nobjext=o\n_LT_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code='sample MENU { MENUITEM \"&Soup\", 100, CHECKED }'\n\n# Code to be used in simple link tests\nlt_simple_link_test_code=$lt_simple_compile_test_code\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_TAG_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_CFLAGS=$CFLAGS\nlt_save_GCC=$GCC\nGCC=\nCC=${RC-\"windres\"}\nCFLAGS=\ncompiler=$CC\n_LT_TAGVAR(compiler, $1)=$CC\n_LT_CC_BASENAME([$compiler])\n_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n\nif test -n \"$compiler\"; then\n  :\n  _LT_CONFIG($1)\nfi\n\nGCC=$lt_save_GCC\nAC_LANG_RESTORE\nCC=$lt_save_CC\nCFLAGS=$lt_save_CFLAGS\n])# _LT_LANG_RC_CONFIG\n\n\n# LT_PROG_GCJ\n# -----------\nAC_DEFUN([LT_PROG_GCJ],\n[m4_ifdef([AC_PROG_GCJ], [AC_PROG_GCJ],\n  [m4_ifdef([A][M_PROG_GCJ], [A][M_PROG_GCJ],\n    [AC_CHECK_TOOL(GCJ, gcj,)\n      test set = \"${GCJFLAGS+set}\" || GCJFLAGS=\"-g -O2\"\n      AC_SUBST(GCJFLAGS)])])[]dnl\n])\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_GCJ], [LT_PROG_GCJ])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_GCJ], [])\n\n\n# LT_PROG_GO\n# ----------\nAC_DEFUN([LT_PROG_GO],\n[AC_CHECK_TOOL(GOC, gccgo,)\n])\n\n\n# LT_PROG_RC\n# ----------\nAC_DEFUN([LT_PROG_RC],\n[AC_CHECK_TOOL(RC, windres,)\n])\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_RC], [LT_PROG_RC])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_RC], [])\n\n\n# _LT_DECL_EGREP\n# --------------\n# If we don't have a new enough Autoconf to choose the best grep\n# available, choose the one first in the user's PATH.\nm4_defun([_LT_DECL_EGREP],\n[AC_REQUIRE([AC_PROG_EGREP])dnl\nAC_REQUIRE([AC_PROG_FGREP])dnl\ntest -z \"$GREP\" && GREP=grep\n_LT_DECL([], [GREP], [1], [A grep program that handles long lines])\n_LT_DECL([], [EGREP], [1], [An ERE matcher])\n_LT_DECL([], [FGREP], [1], [A literal string matcher])\ndnl Non-bleeding-edge autoconf doesn't subst GREP, so do it here too\nAC_SUBST([GREP])\n])\n\n\n# _LT_DECL_OBJDUMP\n# --------------\n# If we don't have a new enough Autoconf to choose the best objdump\n# available, choose the one first in the user's PATH.\nm4_defun([_LT_DECL_OBJDUMP],\n[AC_CHECK_TOOL(OBJDUMP, objdump, false)\ntest -z \"$OBJDUMP\" && OBJDUMP=objdump\n_LT_DECL([], [OBJDUMP], [1], [An object symbol dumper])\nAC_SUBST([OBJDUMP])\n])\n\n# _LT_DECL_DLLTOOL\n# ----------------\n# Ensure DLLTOOL variable is set.\nm4_defun([_LT_DECL_DLLTOOL],\n[AC_CHECK_TOOL(DLLTOOL, dlltool, false)\ntest -z \"$DLLTOOL\" && DLLTOOL=dlltool\n_LT_DECL([], [DLLTOOL], [1], [DLL creation program])\nAC_SUBST([DLLTOOL])\n])\n\n# _LT_DECL_SED\n# ------------\n# Check for a fully-functional sed program, that truncates\n# as few characters as possible.  Prefer GNU sed if found.\nm4_defun([_LT_DECL_SED],\n[AC_PROG_SED\ntest -z \"$SED\" && SED=sed\nXsed=\"$SED -e 1s/^X//\"\n_LT_DECL([], [SED], [1], [A sed program that does not truncate output])\n_LT_DECL([], [Xsed], [\"\\$SED -e 1s/^X//\"],\n    [Sed that helps us avoid accidentally triggering echo(1) options like -n])\n])# _LT_DECL_SED\n\nm4_ifndef([AC_PROG_SED], [\n############################################################\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_SED.  When it is available in   #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\n############################################################\n\nm4_defun([AC_PROG_SED],\n[AC_MSG_CHECKING([for a sed that does not truncate output])\nAC_CACHE_VAL(lt_cv_path_SED,\n[# Loop through the user's path and test for sed and gsed.\n# Then use that list of sed's as ones to test for truncation.\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n  for lt_ac_prog in sed gsed; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      if $as_executable_p \"$as_dir/$lt_ac_prog$ac_exec_ext\"; then\n        lt_ac_sed_list=\"$lt_ac_sed_list $as_dir/$lt_ac_prog$ac_exec_ext\"\n      fi\n    done\n  done\ndone\nIFS=$as_save_IFS\nlt_ac_max=0\nlt_ac_count=0\n# Add /usr/xpg4/bin/sed as it is typically found on Solaris\n# along with /bin/sed that truncates output.\nfor lt_ac_sed in $lt_ac_sed_list /usr/xpg4/bin/sed; do\n  test ! -f \"$lt_ac_sed\" && continue\n  cat /dev/null > conftest.in\n  lt_ac_count=0\n  echo $ECHO_N \"0123456789$ECHO_C\" >conftest.in\n  # Check for GNU sed and select it if it is found.\n  if \"$lt_ac_sed\" --version 2>&1 < /dev/null | grep 'GNU' > /dev/null; then\n    lt_cv_path_SED=$lt_ac_sed\n    break\n  fi\n  while true; do\n    cat conftest.in conftest.in >conftest.tmp\n    mv conftest.tmp conftest.in\n    cp conftest.in conftest.nl\n    echo >>conftest.nl\n    $lt_ac_sed -e 's/a$//' < conftest.nl >conftest.out || break\n    cmp -s conftest.out conftest.nl || break\n    # 10000 chars as input seems more than enough\n    test 10 -lt \"$lt_ac_count\" && break\n    lt_ac_count=`expr $lt_ac_count + 1`\n    if test \"$lt_ac_count\" -gt \"$lt_ac_max\"; then\n      lt_ac_max=$lt_ac_count\n      lt_cv_path_SED=$lt_ac_sed\n    fi\n  done\ndone\n])\nSED=$lt_cv_path_SED\nAC_SUBST([SED])\nAC_MSG_RESULT([$SED])\n])#AC_PROG_SED\n])#m4_ifndef\n\n# Old name:\nAU_ALIAS([LT_AC_PROG_SED], [AC_PROG_SED])\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([LT_AC_PROG_SED], [])\n\n\n# _LT_CHECK_SHELL_FEATURES\n# ------------------------\n# Find out whether the shell is Bourne or XSI compatible,\n# or has some other useful features.\nm4_defun([_LT_CHECK_SHELL_FEATURES],\n[if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then\n  lt_unset=unset\nelse\n  lt_unset=false\nfi\n_LT_DECL([], [lt_unset], [0], [whether the shell understands \"unset\"])dnl\n\n# test EBCDIC or ASCII\ncase `echo X|tr X '\\101'` in\n A) # ASCII based system\n    # \\n is not interpreted correctly by Solaris 8 /usr/ucb/tr\n  lt_SP2NL='tr \\040 \\012'\n  lt_NL2SP='tr \\015\\012 \\040\\040'\n  ;;\n *) # EBCDIC based system\n  lt_SP2NL='tr \\100 \\n'\n  lt_NL2SP='tr \\r\\n \\100\\100'\n  ;;\nesac\n_LT_DECL([SP2NL], [lt_SP2NL], [1], [turn spaces into newlines])dnl\n_LT_DECL([NL2SP], [lt_NL2SP], [1], [turn newlines into spaces])dnl\n])# _LT_CHECK_SHELL_FEATURES\n\n\n# _LT_PATH_CONVERSION_FUNCTIONS\n# -----------------------------\n# Determine what file name conversion functions should be used by\n# func_to_host_file (and, implicitly, by func_to_host_path).  These are needed\n# for certain cross-compile configurations and native mingw.\nm4_defun([_LT_PATH_CONVERSION_FUNCTIONS],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_MSG_CHECKING([how to convert $build file names to $host format])\nAC_CACHE_VAL(lt_cv_to_host_file_cmd,\n[case $host in\n  *-*-mingw* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_host_file_cmd=func_convert_file_msys_to_w32\n        ;;\n      *-*-cygwin* )\n        lt_cv_to_host_file_cmd=func_convert_file_cygwin_to_w32\n        ;;\n      * ) # otherwise, assume *nix\n        lt_cv_to_host_file_cmd=func_convert_file_nix_to_w32\n        ;;\n    esac\n    ;;\n  *-*-cygwin* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_host_file_cmd=func_convert_file_msys_to_cygwin\n        ;;\n      *-*-cygwin* )\n        lt_cv_to_host_file_cmd=func_convert_file_noop\n        ;;\n      * ) # otherwise, assume *nix\n        lt_cv_to_host_file_cmd=func_convert_file_nix_to_cygwin\n        ;;\n    esac\n    ;;\n  * ) # unhandled hosts (and \"normal\" native builds)\n    lt_cv_to_host_file_cmd=func_convert_file_noop\n    ;;\nesac\n])\nto_host_file_cmd=$lt_cv_to_host_file_cmd\nAC_MSG_RESULT([$lt_cv_to_host_file_cmd])\n_LT_DECL([to_host_file_cmd], [lt_cv_to_host_file_cmd],\n         [0], [convert $build file names to $host format])dnl\n\nAC_MSG_CHECKING([how to convert $build file names to toolchain format])\nAC_CACHE_VAL(lt_cv_to_tool_file_cmd,\n[#assume ordinary cross tools, or native build.\nlt_cv_to_tool_file_cmd=func_convert_file_noop\ncase $host in\n  *-*-mingw* )\n    case $build in\n      *-*-mingw* ) # actually msys\n        lt_cv_to_tool_file_cmd=func_convert_file_msys_to_w32\n        ;;\n    esac\n    ;;\nesac\n])\nto_tool_file_cmd=$lt_cv_to_tool_file_cmd\nAC_MSG_RESULT([$lt_cv_to_tool_file_cmd])\n_LT_DECL([to_tool_file_cmd], [lt_cv_to_tool_file_cmd],\n         [0], [convert $build files to toolchain format])dnl\n])# _LT_PATH_CONVERSION_FUNCTIONS\n",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/m4/ltoptions.m4": "# Helper functions for option handling.                    -*- Autoconf -*-\n#\n#   Copyright (C) 2004-2005, 2007-2009, 2011-2015 Free Software\n#   Foundation, Inc.\n#   Written by Gary V. Vaughan, 2004\n#\n# This file is free software; the Free Software Foundation gives\n# unlimited permission to copy and/or distribute it, with or without\n# modifications, as long as this notice is preserved.\n\n# serial 8 ltoptions.m4\n\n# This is to help aclocal find these macros, as it can't see m4_define.\nAC_DEFUN([LTOPTIONS_VERSION], [m4_if([1])])\n\n\n# _LT_MANGLE_OPTION(MACRO-NAME, OPTION-NAME)\n# ------------------------------------------\nm4_define([_LT_MANGLE_OPTION],\n[[_LT_OPTION_]m4_bpatsubst($1__$2, [[^a-zA-Z0-9_]], [_])])\n\n\n# _LT_SET_OPTION(MACRO-NAME, OPTION-NAME)\n# ---------------------------------------\n# Set option OPTION-NAME for macro MACRO-NAME, and if there is a\n# matching handler defined, dispatch to it.  Other OPTION-NAMEs are\n# saved as a flag.\nm4_define([_LT_SET_OPTION],\n[m4_define(_LT_MANGLE_OPTION([$1], [$2]))dnl\nm4_ifdef(_LT_MANGLE_DEFUN([$1], [$2]),\n        _LT_MANGLE_DEFUN([$1], [$2]),\n    [m4_warning([Unknown $1 option '$2'])])[]dnl\n])\n\n\n# _LT_IF_OPTION(MACRO-NAME, OPTION-NAME, IF-SET, [IF-NOT-SET])\n# ------------------------------------------------------------\n# Execute IF-SET if OPTION is set, IF-NOT-SET otherwise.\nm4_define([_LT_IF_OPTION],\n[m4_ifdef(_LT_MANGLE_OPTION([$1], [$2]), [$3], [$4])])\n\n\n# _LT_UNLESS_OPTIONS(MACRO-NAME, OPTION-LIST, IF-NOT-SET)\n# -------------------------------------------------------\n# Execute IF-NOT-SET unless all options in OPTION-LIST for MACRO-NAME\n# are set.\nm4_define([_LT_UNLESS_OPTIONS],\n[m4_foreach([_LT_Option], m4_split(m4_normalize([$2])),\n\t    [m4_ifdef(_LT_MANGLE_OPTION([$1], _LT_Option),\n\t\t      [m4_define([$0_found])])])[]dnl\nm4_ifdef([$0_found], [m4_undefine([$0_found])], [$3\n])[]dnl\n])\n\n\n# _LT_SET_OPTIONS(MACRO-NAME, OPTION-LIST)\n# ----------------------------------------\n# OPTION-LIST is a space-separated list of Libtool options associated\n# with MACRO-NAME.  If any OPTION has a matching handler declared with\n# LT_OPTION_DEFINE, dispatch to that macro; otherwise complain about\n# the unknown option and exit.\nm4_defun([_LT_SET_OPTIONS],\n[# Set options\nm4_foreach([_LT_Option], m4_split(m4_normalize([$2])),\n    [_LT_SET_OPTION([$1], _LT_Option)])\n\nm4_if([$1],[LT_INIT],[\n  dnl\n  dnl Simply set some default values (i.e off) if boolean options were not\n  dnl specified:\n  _LT_UNLESS_OPTIONS([LT_INIT], [dlopen], [enable_dlopen=no\n  ])\n  _LT_UNLESS_OPTIONS([LT_INIT], [win32-dll], [enable_win32_dll=no\n  ])\n  dnl\n  dnl If no reference was made to various pairs of opposing options, then\n  dnl we run the default mode handler for the pair.  For example, if neither\n  dnl 'shared' nor 'disable-shared' was passed, we enable building of shared\n  dnl archives by default:\n  _LT_UNLESS_OPTIONS([LT_INIT], [shared disable-shared], [_LT_ENABLE_SHARED])\n  _LT_UNLESS_OPTIONS([LT_INIT], [static disable-static], [_LT_ENABLE_STATIC])\n  _LT_UNLESS_OPTIONS([LT_INIT], [pic-only no-pic], [_LT_WITH_PIC])\n  _LT_UNLESS_OPTIONS([LT_INIT], [fast-install disable-fast-install],\n\t\t   [_LT_ENABLE_FAST_INSTALL])\n  _LT_UNLESS_OPTIONS([LT_INIT], [aix-soname=aix aix-soname=both aix-soname=svr4],\n\t\t   [_LT_WITH_AIX_SONAME([aix])])\n  ])\n])# _LT_SET_OPTIONS\n\n\n## --------------------------------- ##\n## Macros to handle LT_INIT options. ##\n## --------------------------------- ##\n\n# _LT_MANGLE_DEFUN(MACRO-NAME, OPTION-NAME)\n# -----------------------------------------\nm4_define([_LT_MANGLE_DEFUN],\n[[_LT_OPTION_DEFUN_]m4_bpatsubst(m4_toupper([$1__$2]), [[^A-Z0-9_]], [_])])\n\n\n# LT_OPTION_DEFINE(MACRO-NAME, OPTION-NAME, CODE)\n# -----------------------------------------------\nm4_define([LT_OPTION_DEFINE],\n[m4_define(_LT_MANGLE_DEFUN([$1], [$2]), [$3])[]dnl\n])# LT_OPTION_DEFINE\n\n\n# dlopen\n# ------\nLT_OPTION_DEFINE([LT_INIT], [dlopen], [enable_dlopen=yes\n])\n\nAU_DEFUN([AC_LIBTOOL_DLOPEN],\n[_LT_SET_OPTION([LT_INIT], [dlopen])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you\nput the 'dlopen' option into LT_INIT's first parameter.])\n])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_DLOPEN], [])\n\n\n# win32-dll\n# ---------\n# Declare package support for building win32 dll's.\nLT_OPTION_DEFINE([LT_INIT], [win32-dll],\n[enable_win32_dll=yes\n\ncase $host in\n*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-cegcc*)\n  AC_CHECK_TOOL(AS, as, false)\n  AC_CHECK_TOOL(DLLTOOL, dlltool, false)\n  AC_CHECK_TOOL(OBJDUMP, objdump, false)\n  ;;\nesac\n\ntest -z \"$AS\" && AS=as\n_LT_DECL([], [AS],      [1], [Assembler program])dnl\n\ntest -z \"$DLLTOOL\" && DLLTOOL=dlltool\n_LT_DECL([], [DLLTOOL], [1], [DLL creation program])dnl\n\ntest -z \"$OBJDUMP\" && OBJDUMP=objdump\n_LT_DECL([], [OBJDUMP], [1], [Object dumper program])dnl\n])# win32-dll\n\nAU_DEFUN([AC_LIBTOOL_WIN32_DLL],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\n_LT_SET_OPTION([LT_INIT], [win32-dll])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you\nput the 'win32-dll' option into LT_INIT's first parameter.])\n])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_WIN32_DLL], [])\n\n\n# _LT_ENABLE_SHARED([DEFAULT])\n# ----------------------------\n# implement the --enable-shared flag, and supports the 'shared' and\n# 'disable-shared' LT_INIT options.\n# DEFAULT is either 'yes' or 'no'.  If omitted, it defaults to 'yes'.\nm4_define([_LT_ENABLE_SHARED],\n[m4_define([_LT_ENABLE_SHARED_DEFAULT], [m4_if($1, no, no, yes)])dnl\nAC_ARG_ENABLE([shared],\n    [AS_HELP_STRING([--enable-shared@<:@=PKGS@:>@],\n\t[build shared libraries @<:@default=]_LT_ENABLE_SHARED_DEFAULT[@:>@])],\n    [p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_shared=yes ;;\n    no) enable_shared=no ;;\n    *)\n      enable_shared=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,\n      for pkg in $enableval; do\n\tIFS=$lt_save_ifs\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_shared=yes\n\tfi\n      done\n      IFS=$lt_save_ifs\n      ;;\n    esac],\n    [enable_shared=]_LT_ENABLE_SHARED_DEFAULT)\n\n    _LT_DECL([build_libtool_libs], [enable_shared], [0],\n\t[Whether or not to build shared libraries])\n])# _LT_ENABLE_SHARED\n\nLT_OPTION_DEFINE([LT_INIT], [shared], [_LT_ENABLE_SHARED([yes])])\nLT_OPTION_DEFINE([LT_INIT], [disable-shared], [_LT_ENABLE_SHARED([no])])\n\n# Old names:\nAC_DEFUN([AC_ENABLE_SHARED],\n[_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[shared])\n])\n\nAC_DEFUN([AC_DISABLE_SHARED],\n[_LT_SET_OPTION([LT_INIT], [disable-shared])\n])\n\nAU_DEFUN([AM_ENABLE_SHARED], [AC_ENABLE_SHARED($@)])\nAU_DEFUN([AM_DISABLE_SHARED], [AC_DISABLE_SHARED($@)])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_ENABLE_SHARED], [])\ndnl AC_DEFUN([AM_DISABLE_SHARED], [])\n\n\n\n# _LT_ENABLE_STATIC([DEFAULT])\n# ----------------------------\n# implement the --enable-static flag, and support the 'static' and\n# 'disable-static' LT_INIT options.\n# DEFAULT is either 'yes' or 'no'.  If omitted, it defaults to 'yes'.\nm4_define([_LT_ENABLE_STATIC],\n[m4_define([_LT_ENABLE_STATIC_DEFAULT], [m4_if($1, no, no, yes)])dnl\nAC_ARG_ENABLE([static],\n    [AS_HELP_STRING([--enable-static@<:@=PKGS@:>@],\n\t[build static libraries @<:@default=]_LT_ENABLE_STATIC_DEFAULT[@:>@])],\n    [p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_static=yes ;;\n    no) enable_static=no ;;\n    *)\n     enable_static=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,\n      for pkg in $enableval; do\n\tIFS=$lt_save_ifs\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_static=yes\n\tfi\n      done\n      IFS=$lt_save_ifs\n      ;;\n    esac],\n    [enable_static=]_LT_ENABLE_STATIC_DEFAULT)\n\n    _LT_DECL([build_old_libs], [enable_static], [0],\n\t[Whether or not to build static libraries])\n])# _LT_ENABLE_STATIC\n\nLT_OPTION_DEFINE([LT_INIT], [static], [_LT_ENABLE_STATIC([yes])])\nLT_OPTION_DEFINE([LT_INIT], [disable-static], [_LT_ENABLE_STATIC([no])])\n\n# Old names:\nAC_DEFUN([AC_ENABLE_STATIC],\n[_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[static])\n])\n\nAC_DEFUN([AC_DISABLE_STATIC],\n[_LT_SET_OPTION([LT_INIT], [disable-static])\n])\n\nAU_DEFUN([AM_ENABLE_STATIC], [AC_ENABLE_STATIC($@)])\nAU_DEFUN([AM_DISABLE_STATIC], [AC_DISABLE_STATIC($@)])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AM_ENABLE_STATIC], [])\ndnl AC_DEFUN([AM_DISABLE_STATIC], [])\n\n\n\n# _LT_ENABLE_FAST_INSTALL([DEFAULT])\n# ----------------------------------\n# implement the --enable-fast-install flag, and support the 'fast-install'\n# and 'disable-fast-install' LT_INIT options.\n# DEFAULT is either 'yes' or 'no'.  If omitted, it defaults to 'yes'.\nm4_define([_LT_ENABLE_FAST_INSTALL],\n[m4_define([_LT_ENABLE_FAST_INSTALL_DEFAULT], [m4_if($1, no, no, yes)])dnl\nAC_ARG_ENABLE([fast-install],\n    [AS_HELP_STRING([--enable-fast-install@<:@=PKGS@:>@],\n    [optimize for fast installation @<:@default=]_LT_ENABLE_FAST_INSTALL_DEFAULT[@:>@])],\n    [p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_fast_install=yes ;;\n    no) enable_fast_install=no ;;\n    *)\n      enable_fast_install=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,\n      for pkg in $enableval; do\n\tIFS=$lt_save_ifs\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_fast_install=yes\n\tfi\n      done\n      IFS=$lt_save_ifs\n      ;;\n    esac],\n    [enable_fast_install=]_LT_ENABLE_FAST_INSTALL_DEFAULT)\n\n_LT_DECL([fast_install], [enable_fast_install], [0],\n\t [Whether or not to optimize for fast installation])dnl\n])# _LT_ENABLE_FAST_INSTALL\n\nLT_OPTION_DEFINE([LT_INIT], [fast-install], [_LT_ENABLE_FAST_INSTALL([yes])])\nLT_OPTION_DEFINE([LT_INIT], [disable-fast-install], [_LT_ENABLE_FAST_INSTALL([no])])\n\n# Old names:\nAU_DEFUN([AC_ENABLE_FAST_INSTALL],\n[_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[fast-install])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you put\nthe 'fast-install' option into LT_INIT's first parameter.])\n])\n\nAU_DEFUN([AC_DISABLE_FAST_INSTALL],\n[_LT_SET_OPTION([LT_INIT], [disable-fast-install])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you put\nthe 'disable-fast-install' option into LT_INIT's first parameter.])\n])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_ENABLE_FAST_INSTALL], [])\ndnl AC_DEFUN([AM_DISABLE_FAST_INSTALL], [])\n\n\n# _LT_WITH_AIX_SONAME([DEFAULT])\n# ----------------------------------\n# implement the --with-aix-soname flag, and support the `aix-soname=aix'\n# and `aix-soname=both' and `aix-soname=svr4' LT_INIT options. DEFAULT\n# is either `aix', `both' or `svr4'.  If omitted, it defaults to `aix'.\nm4_define([_LT_WITH_AIX_SONAME],\n[m4_define([_LT_WITH_AIX_SONAME_DEFAULT], [m4_if($1, svr4, svr4, m4_if($1, both, both, aix))])dnl\nshared_archive_member_spec=\ncase $host,$enable_shared in\npower*-*-aix[[5-9]]*,yes)\n  AC_MSG_CHECKING([which variant of shared library versioning to provide])\n  AC_ARG_WITH([aix-soname],\n    [AS_HELP_STRING([--with-aix-soname=aix|svr4|both],\n      [shared library versioning (aka \"SONAME\") variant to provide on AIX, @<:@default=]_LT_WITH_AIX_SONAME_DEFAULT[@:>@.])],\n    [case $withval in\n    aix|svr4|both)\n      ;;\n    *)\n      AC_MSG_ERROR([Unknown argument to --with-aix-soname])\n      ;;\n    esac\n    lt_cv_with_aix_soname=$with_aix_soname],\n    [AC_CACHE_VAL([lt_cv_with_aix_soname],\n      [lt_cv_with_aix_soname=]_LT_WITH_AIX_SONAME_DEFAULT)\n    with_aix_soname=$lt_cv_with_aix_soname])\n  AC_MSG_RESULT([$with_aix_soname])\n  if test aix != \"$with_aix_soname\"; then\n    # For the AIX way of multilib, we name the shared archive member\n    # based on the bitwidth used, traditionally 'shr.o' or 'shr_64.o',\n    # and 'shr.imp' or 'shr_64.imp', respectively, for the Import File.\n    # Even when GNU compilers ignore OBJECT_MODE but need '-maix64' flag,\n    # the AIX toolchain works better with OBJECT_MODE set (default 32).\n    if test 64 = \"${OBJECT_MODE-32}\"; then\n      shared_archive_member_spec=shr_64\n    else\n      shared_archive_member_spec=shr\n    fi\n  fi\n  ;;\n*)\n  with_aix_soname=aix\n  ;;\nesac\n\n_LT_DECL([], [shared_archive_member_spec], [0],\n    [Shared archive member basename, for filename based shared library versioning on AIX])dnl\n])# _LT_WITH_AIX_SONAME\n\nLT_OPTION_DEFINE([LT_INIT], [aix-soname=aix], [_LT_WITH_AIX_SONAME([aix])])\nLT_OPTION_DEFINE([LT_INIT], [aix-soname=both], [_LT_WITH_AIX_SONAME([both])])\nLT_OPTION_DEFINE([LT_INIT], [aix-soname=svr4], [_LT_WITH_AIX_SONAME([svr4])])\n\n\n# _LT_WITH_PIC([MODE])\n# --------------------\n# implement the --with-pic flag, and support the 'pic-only' and 'no-pic'\n# LT_INIT options.\n# MODE is either 'yes' or 'no'.  If omitted, it defaults to 'both'.\nm4_define([_LT_WITH_PIC],\n[AC_ARG_WITH([pic],\n    [AS_HELP_STRING([--with-pic@<:@=PKGS@:>@],\n\t[try to use only PIC/non-PIC objects @<:@default=use both@:>@])],\n    [lt_p=${PACKAGE-default}\n    case $withval in\n    yes|no) pic_mode=$withval ;;\n    *)\n      pic_mode=default\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,\n      for lt_pkg in $withval; do\n\tIFS=$lt_save_ifs\n\tif test \"X$lt_pkg\" = \"X$lt_p\"; then\n\t  pic_mode=yes\n\tfi\n      done\n      IFS=$lt_save_ifs\n      ;;\n    esac],\n    [pic_mode=m4_default([$1], [default])])\n\n_LT_DECL([], [pic_mode], [0], [What type of objects to build])dnl\n])# _LT_WITH_PIC\n\nLT_OPTION_DEFINE([LT_INIT], [pic-only], [_LT_WITH_PIC([yes])])\nLT_OPTION_DEFINE([LT_INIT], [no-pic], [_LT_WITH_PIC([no])])\n\n# Old name:\nAU_DEFUN([AC_LIBTOOL_PICMODE],\n[_LT_SET_OPTION([LT_INIT], [pic-only])\nAC_DIAGNOSE([obsolete],\n[$0: Remove this warning and the call to _LT_SET_OPTION when you\nput the 'pic-only' option into LT_INIT's first parameter.])\n])\n\ndnl aclocal-1.4 backwards compatibility:\ndnl AC_DEFUN([AC_LIBTOOL_PICMODE], [])\n\n## ----------------- ##\n## LTDL_INIT Options ##\n## ----------------- ##\n\nm4_define([_LTDL_MODE], [])\nLT_OPTION_DEFINE([LTDL_INIT], [nonrecursive],\n\t\t [m4_define([_LTDL_MODE], [nonrecursive])])\nLT_OPTION_DEFINE([LTDL_INIT], [recursive],\n\t\t [m4_define([_LTDL_MODE], [recursive])])\nLT_OPTION_DEFINE([LTDL_INIT], [subproject],\n\t\t [m4_define([_LTDL_MODE], [subproject])])\n\nm4_define([_LTDL_TYPE], [])\nLT_OPTION_DEFINE([LTDL_INIT], [installable],\n\t\t [m4_define([_LTDL_TYPE], [installable])])\nLT_OPTION_DEFINE([LTDL_INIT], [convenience],\n\t\t [m4_define([_LTDL_TYPE], [convenience])])\n",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/release_docs/HISTORY-1_10.txt": "HDF5 History\n============\n\nThis file contains development history of the HDF5 1.10 branch\n\n08.      Release Information for hdf5-1.10.6\n07.      Release Information for hdf5-1.10.5\n06.      Release Information for hdf5-1.10.4\n05.      Release Information for hdf5-1.10.3\n04.      Release Information for hdf5-1.10.2\n03.      Release Information for hdf5-1.10.1\n02.      Release Information for hdf5-1.10.0-patch1\n01.      Release Information for hdf5-1.10.0\n\n[Search on the string '%%%%' for section breaks of each release.]\n\n%%%%1.10.6%%%%\n\nHDF5 version 1.10.6 released on 2019-12-23 \n================================================================================\n\n\nINTRODUCTION\n\nThis document describes the differences between this release and the previous\nHDF5 release. It contains information on the platforms tested and known\nproblems in this release. For more details check the HISTORY*.txt files in the\nHDF5 source.\n\nNote that documentation in the links below will be updated at the time of each\nfinal release.\n\nLinks to HDF5 documentation can be found on The HDF5 web page:\n\n     https://portal.hdfgroup.org/display/HDF5/HDF5\n\nThe official HDF5 releases can be obtained from:\n\n     https://www.hdfgroup.org/downloads/hdf5/\n\nChanges from Release to Release and New Features in the HDF5-1.10.x release series\ncan be found at:\n\n     https://portal.hdfgroup.org/display/HDF5/HDF5+Application+Developer%27s+Guide\n\nIf you have any questions or comments, please send them to the HDF Help Desk:\n\n     help@hdfgroup.org\n\n\nCONTENTS\n\n- New Features\n- Support for new platforms and languages\n- Bug Fixes since HDF5-1.10.5\n- Supported Platforms\n- Tested Configuration Features Summary\n- More Tested Platforms\n- Known Problems\n- CMake vs. Autotools installations\n\n\nNew Features\n============\n\n    Configuration:\n    -------------\n    - Update CMake for VS2019 support\n\n      CMake added support for VS2019 in version 3.15. Changes to the CMake\n      generator setting required changes to scripts. Also updated version\n      references in CMake files as necessary.\n\n      (ADB - 2019/11/18, HDFFV-10962)\n\n    - Update CMake options to match new autotools options\n\n      Add configure options (autotools - CMake):\n            enable-asserts       HDF5_ENABLE_ASSERTS\n            enable-symbols       HDF5_ENABLE_SYMBOLS\n            enable-profiling     HDF5_ENABLE_PROFILING\n            enable-optimization  HDF5_ENABLE_OPTIMIZATION\n      In addition NDEBUG is no longer forced defined and relies on the CMake\n      process.\n\n      (ADB - 2019/10/07, HDFFV-100901, HDFFV-10637, TRILAB-97)\n\n    - Update CMake tests to use FIXTURES\n\n      CMake test fixtures allow setup/cleanup tests and other dependency\n      requirements as properties for tests. This is more flexible for\n      modern CMake code.\n\n      (ADB - 2019/07/23, HDFFV-10529)\n\n    - Windows PDB files are always installed\n\n      There are build configuration or flag settings for Windows that may not\n      generate PDB files. If those files are not generated then the install\n      utility will fail because those PDB files are not found. An optional\n      variable, DISABLE_PDB_FILES, was added to not install PDB files.\n\n      (ADB - 2019/07/17, HDFFV-10424)\n\n    - Add mingw CMake support with a toolchain file\n\n      There have been a number of mingw issues that have been linked under\n      HDFFV-10845. It has been decided to implement the CMake cross-compiling\n      technique of toolchain files. We will use a linux platform with the mingw\n      compiler stack for testing. Only the C language is fully supported, and\n      the error tests are skipped. The C++ language works for static but shared\n      builds have a shared library issue with the mingw Standard Exception Handling\n      library, which is not available on Windows. Fortran has a common cross-compile\n      problem with the fortran configure tests.\n\n      (ADB - 2019/07/12, HDFFV-10845, HDFFV-10595)\n\n    - Windows PDB files are installed incorrectly\n\n      For static builds, the PDB files for windows should be installed next\n      to the static libraries in the lib folder. Also the debug versions of\n      libraries and PDB files are now correctly built using the default\n      CMAKE_DEBUG_POSTFIX setting.\n\n      (ADB - 2019/07/09, HDFFV-10581)\n\n    - Add option to build only shared libs\n\n      A request was made to prevent building static libraries and only build\n      shared.  A new option was added to CMake, ONLY_SHARED_LIBS, which will\n      skip building static libraries. Certain utility functions will build with\n      static libs but are not published. Tests are adjusted to use the correct\n      libraries depending on SHARED/STATIC settings.\n\n      (ADB - 2019/06/12, HDFFV-10805)\n\n    - Add options to enable or disable building tools and tests\n\n      Configure options --enable-tests and --enable-tools were added for\n      autotools configure.  These options are enabled by default, and can be\n      disabled with either --disable-tests (or tools) or --enable-tests=no\n      (or --enable-tools=no).  Build time is reduced ~20% when tools are\n      disabled, 35% when tests are disabled, 45% when both are disabled.\n      Re-enabling them after the initial build requires running configure\n      again with the option(s) enabled.\n\n      (LRK - 2019/06/12, HDFFV-9976)\n\n    - Change tools tests to search the error stack\n\n      There are some use cases which can cause the error stack of tools to be\n      different then the expected output. These tests now use grepTest.cmake;\n      this was changed to allow the error file to be searched for an expected string.\n\n      (ADB - 2019/04/15, HDFFV-10741)\n\n\n    Library:\n    --------\n    - Added S3 and HDFS Virtual File Drivers (VFDs) to HDF5 \n      \n      These new VFDs have been introduced in HDF5-1.10.6.  Instructions to\n      enable them when configuring HDF5 on Linux and Mac may be found at\n      https://portal.hdfgroup.org/display/HDF5/Virtual+File+Drivers+-+S3+and+HDFS.\n      \n      Installing on Windows requires CMake 3.13 and the following additional setup.\n            Install openssl library (with dev files);\n            from \"Shining Light Productions\". msi package preferred.\n\n            PATH should have been updated with the installation dir.\n            set ENV variable OPENSSL_ROOT_DIR to the installation dir.\n            set ENV variable OPENSSL_CONF to the cfg file, likely %OPENSSL_ROOT_DIR%\\bin\\openssl.cfg\n            Install libcurl library (with dev files);\n            download the latest released version using git: https://github.com/curl/curl.git\n\n            Open a Visual Studio Command prompt\n            change to the libcurl root folder\n            run the \"buildconf.bat\" batch file\n            change to the winbuild directory\n            nmake /f Makefile.vc mode=dll MACHINE=x64\n            copy libcurl-vc-x64-release-dll-ipv6-sspi-winssl dir to C:\\curl (installation dir)\n            set ENV variable CURL_ROOT to C:\\curl (installation dir)\n            update PATH ENV variable to %CURL_ROOT%\\bin (installation bin dir).\n            the aws credentials file should be in %USERPROFILE%\\.aws folder\n            set the ENV variable \"HDF5_ROS3_TEST_BUCKET_URL=https://s3.us-east-2.amazonaws.com/hdf5ros3\"\n\n      (ADB - 2019/09/12, HDFFV-10854)\n\n    C++ Library:\n    ------------\n    - Added new wrappers for H5Pset/get_create_intermediate_group()\n        LinkCreatPropList::setCreateIntermediateGroup()\n        LinkCreatPropList::getCreateIntermediateGroup()\n\n      (BMR - 2019/04/22, HDFFV-10622)\n\n\n    Java Library:\n    ----------------\n    - Fixed a failure in JUnit-TestH5P on 32-bit architectures\n\n      (JTH - 2019/04/30)\n\n\nSupport for new platforms, languages and compilers.\n=======================================\n    - CMake added support for VS2019 in version 3.15. Updated scripts.\n\n    - macOS 10.13.6 Darwin 17.7.0 with Apple clang LLVM version 10.0.0\n\n    - macOS 10.14.6 Darwin 18.7.0 with Apple clang LLVM version 10.0.1\n\n\nBug Fixes since HDF5-1.10.5 release\n==================================\n\n    Library\n    -------\n    - Improved performance when creating a large number of small datasets by\n      retrieving default property values from the API context instead of doing\n      skip list searches. More work is required to achieve parity with HDF5 1.8.\n\n      (CJH - 2019/12/10, HDFFV-10658)\n\n    - Fixed user-created data access properties not existing in the property list\n      returned by H5Dget_access_plist. Thanks to Steven Varga for submitting a\n      reproducer and a patch.\n\n      (CJH - 2019/12/9, HDFFV-10934)\n\n    - Inappropriate linking with deprecated MPI C++ libraries\n\n      HDF5 does not define *_SKIP_MPICXX in the public headers, so applications\n      can inadvertently wind up linking to the deprecated MPI C++ wrappers.\n\n      MPICH_SKIP_MPICXX and OMPI_SKIP_MPICXX have both been defined in H5public.h\n      so this should no longer be an issue. HDF5 makes no use of the deprecated\n      MPI C++ wrappers.\n\n      (DER - 2019/09/17, HDFFV-10893)\n\n    - fcntl(2)-based file locking incorrectly passed the lock argument struct\n      instead of a pointer to the struct, causing errors on systems where\n      flock(2) is not available.\n\n      File locking is used when files are opened to enforce SWMR semantics. A\n      lock operation takes place on all file opens unless the\n      HDF5_USE_FILE_LOCKING environment variable is set to the string \"FALSE\".\n      flock(2) is preferentially used, with fcntl(2) locks as a backup if\n      flock(2) is unavailable on a system (if neither is available, the lock\n      operation fails). On these systems, the file lock will often fail, which\n      causes HDF5 to not open the file and report an error.\n\n      This bug only affects POSIX systems. Win32 builds on Windows use a no-op\n      locking call which always succeeds. Systems which exhibit this bug will\n      have H5_HAVE_FCNTL defined but not H5_HAVE_FLOCK in the configure output.\n\n      This bug affects HDF5 1.10.0 through 1.10.5.\n\n      fcntl(2)-based file locking now correctly passes the struct pointer.\n\n      (DER - 2019/08/27, HDFFV-10892)\n\n    - Fixed a bug caused by a bad tag value when condensing object header\n      messages\n\n      There was an assertion failure when moving messages from running a\n      user test program with library release HDF5 1.10.4. It was because\n      the tag value (object header's address) was not set up when entering\n      the library routine H5O__chunk_update_idx(), which eventually\n      verifies the metadata tag value when protecting the object header.\n\n      The problem was fixed by replacing FUNC_ENTER_PACKAGE in H5O__chunk_update_idx()\n      with FUNC_ENTER_PACKAGE_TAG(oh->cache_info.addr) to set up the metadata tag.\n\n      (VC - 2019/08/23, HDFFV-10873)\n\n    - Fixed the test failure from test_metadata_read_retry_info() in\n      test/swmr.c\n\n      The test failure is due to an incorrect number of bins returned for\n      retry info (info.nbins).  The # of bins expected for 101 read attempts\n      is 3 instead of 2.  The routine H5F_set_retries() in src/H5Fint.c\n      calculates the # of bins by first obtaining the log10 value for\n      (read attempts - 1).  For PGI/19, the log10 value for 100 read attempts\n      is 1.9999999999999998 instead of 2.00000.  When casting the log10 value\n      to unsigned later on, the decimal part is chopped off causing the test\n      failure.\n\n      This was fixed by obtaining the rounded integer value (HDceil) for the\n      log10 value of read attempts first before casting the result to unsigned.\n\n      (VC - 2019/8/14, HDFFV-10813)\n\n    - Fixed an issue when creating a file with non-default file space info\n      together with library high bound setting to H5F_LIBVER_V18.\n\n      When setting non-default file space info in fcpl via \n      H5Pset_file_space_strategy() and then creating a file with both high and \n      low library bounds set to H5F_LIBVER_V18 in fapl, the library succeeds in \n      creating the file.  File creation should fail because the feature of \n      setting non-default file space info does not exist in library release 1.8 \n      or earlier.\n\n      This was fixed by setting and checking the proper version in the file \n      space info message based on the library low and high bounds when creating \n      and opening the HDF5 file.\n\n      (VC - 2019/6/25, HDFFV-10808)\n\n    - Fixed an issue where copying a version 1.8 dataset between files using\n      H5Ocopy fails due to an incompatible fill version\n\n      When using the HDF5 1.10.x H5Ocopy() API call to copy a version 1.8\n      dataset to a file created with both high and low library bounds set to\n      H5F_LIBVER_V18, the H5Ocopy() call will fail with the error stack indicating\n      that the fill value version is out of bounds.\n\n      This was fixed by changing the fill value message version to H5O_FILL_VERSION_3\n      (from H5O_FILL_VERSION_2) for H5F_LIBVER_V18.\n\n      (VC - 2019/6/14, HDFFV-10800)\n\n    - Fixed a bug that would cause an error or cause fill values to be\n      incorrectly read from a chunked dataset using the \"single chunk\" index if\n      the data was held in cache and there was no data on disk.\n\n      (NAF - 2019/03/06)\n\n    - Fixed a bug that could cause an error or cause fill values to be\n      incorrectly read from a dataset that was written to using H5Dwrite_chunk\n      if the dataset was not closed after writing.\n\n      (NAF - 2019/03/06, HDFFV-10716)\n\n    - Fixed memory leak in scale offset filter\n\n      In a special case where the MinBits is the same as the number of bits in\n      the datatype's precision, the filter's data buffer was not freed, causing\n      the memory usage to grow. In general the buffer was freed correctly.  The\n      Minbits are the minimal number of bits to store the data values.  Please\n      see the reference manual for H5Pset_scaleoffset for the details.\n\n      (RL - 2019/3/4, HDFFV-10705)\n\n\n    Configuration\n    -------------\n    - Correct option for default API version\n\n      CMake options for default API version are not mutually exclusive.\n      Change the multiple BOOL options to a single STRING option with the\n      strings; v16, v18, v110.\n\n      (ADB - 2019/08/12, HDFFV-10879)\n\n    Tools\n    -----\n    - h5repack was fixed to repack datasets with external storage\n      to other types of storage.\n\n      New test added to repack files and verify the correct data using h5diff.\n\n      (JS - 2019/09/25, HDFFV-10408)\n      (ADB - 2019/10/02, HDFFV-10918)\n\n\nSupported Platforms\n===================\n\n    Linux 2.6.32-696.20.1.el6.ppc64 gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-23)\n    #1 SMP ppc64 GNU/Linux        g++ (GCC) 4.4.7 20120313 (Red Hat 4.4.7-23)\n    (ostrich)                     GNU Fortran (GCC) 4.4.7 20120313 (Red Hat 4.4.7-23)\n                                  IBM XL C/C++ V13.1\n                                  IBM XL Fortran V15.1\n\n    Linux 3.10.0-327.10.1.el7   GNU C (gcc), Fortran (gfortran), C++ (g++)\n    #1 SMP x86_64 GNU/Linux       compilers:\n    (jelly/kituo/moohan)          Version 4.8.5 20150623 (Red Hat 4.8.5-4)\n                                    Version 4.9.3, Version 5.2.0\n                                  Intel(R) C (icc), C++ (icpc), Fortran (icc)\n                                  compilers:\n                                     Version 17.0.0.098 Build 20160721\n                                  MPICH 3.1.4 compiled with GCC 4.9.3\n\n    SunOS 5.11 32- and 64-bit     Sun C 5.12 SunOS_sparc\n    (emu)                         Sun Fortran 95 8.6 SunOS_sparc\n                                  Sun C++ 5.12 SunOS_sparc\n\n    Windows 7                     Visual Studio 2015 w/ Intel Fortran 18 (cmake)\n\n    Windows 7 x64                 Visual Studio 2015 w/ Intel C, Fortran 2018 (cmake)\n                                  Visual Studio 2015 w/ MSMPI 8 (cmake)\n\n    Windows 10                    Visual Studio 2015 w/ Intel Fortran 18 (cmake)\n\n    Windows 10 x64                Visual Studio 2015 w/ Intel Fortran 18 (cmake)\n                                  Visual Studio 2017 w/ Intel Fortran 19 (cmake)\n                                  Visual Studio 2019 w/ Intel Fortran 19 (cmake)\n\n    macOS 10.13.6, Darwin,        Apple clang LLVM version 10.0.0\n    17.7.0, x86_64                gfortran GNU Fortran (GCC) 6.3.0\n    (bear)                        Intel icc/icpc/ifort version 19.0.4\n\n    macOS 10.14.6, Darwin         Apple clang LLVM version 10.0.1\n    18.7.0, x86_64                gfortran GNU Fortran (GCC) 6.3.0\n    (bobcat)                      Intel icc/icpc/ifort version 19.0.4\n\n\nTested Configuration Features Summary\n=====================================\n\n    In the tables below\n          y   = tested\n          n   = not tested in this release\n          C   = Cluster\n          W   = Workstation\n          x   = not working in this release\n          dna = does not apply\n          ( ) = footnote appears below second table\n          <blank> = testing incomplete on this feature or platform\n\nPlatform                              C         F90/   F90      C++  zlib  SZIP\n                                      parallel  F2003  parallel\nSolaris2.11 32-bit                      n        y/y    n        y    y     y\nSolaris2.11 64-bit                      n        y/n    n        y    y     y\nWindows 7                               y        y/y    n        y    y     y\nWindows 7 x64                           y        y/y    y        y    y     y\nWindows 7 Cygwin                        n        y/n    n        y    y     y\nWindows 7 x64 Cygwin                    n        y/n    n        y    y     y\nWindows 10                              y        y/y    n        y    y     y\nWindows 10 x64                          y        y/y    n        y    y     y\nMac OS X Yosemite 10.10.5 64-bit        n        y/y    n        y    y     y\nMac OS X El Capitan 10.11.6 64-bit      n        y/y    n        y    y     y\nMacOS High Sierra 10.13.6 64-bit        n        y/y    n        y    y     y\nCentOS 7.2 Linux 3.10.0 x86_64 PGI      n        y/y    n        y    y     y\nCentOS 7.2 Linux 3.10.0 x86_64 GNU      y        y/y    y        y    y     y\nCentOS 7.2 Linux 3.10.0 x86_64 Intel    n        y/y    n        y    y     y\nLinux 2.6.32-573.18.1.el6.ppc64         n        y/y    n        y    y     y\n\n\nPlatform                                 Shared  Shared    Shared    Thread-\n                                         C libs  F90 libs  C++ libs  safe\nSolaris2.11 32-bit                         y       y         y         y\nSolaris2.11 64-bit                         y       y         y         y\nWindows 7                                  y       y         y         y\nWindows 7 x64                              y       y         y         y\nWindows 7 Cygwin                           n       n         n         y\nWindows 7 x64 Cygwin                       n       n         n         y\nWindows 10                                 y       y         y         y\nWindows 10 x64                             y       y         y         y\nMac OS X Yosemite 10.10.5 64-bit           y       y         y         y\nMac OS X El Capitan 10.11.6 64-bit         y       y         y         y\nMacOS High Sierra 10.13.6 64-bit           y       y         y         y\nCentOS 7.2 Linux 3.10.0 x86_64 PGI         y       y         y         n\nCentOS 7.2 Linux 3.10.0 x86_64 GNU         y       y         y         y\nCentOS 7.2 Linux 3.10.0 x86_64 Intel       y       y         y         n\nLinux 2.6.32-573.18.1.el6.ppc64            y       y         y         n\n\nCompiler versions for each platform are listed in the preceding\n\"Supported Platforms\" table.\n\n\nMore Tested Platforms\n=====================\nThe following configurations are not supported but have been tested for this release.\n\n    Linux 2.6.32-754.11.1.el6     GNU C (gcc), Fortran (gfortran), C++ (g++)\n    #1 SMP x86_64 GNU/Linux       compilers:\n    (mayll/platypus)                 Version 4.4.7 20120313\n                                     Version 4.9.3, 5.3.0, 6.2.0\n                                  PGI C, Fortran, C++ for 64-bit target on\n                                  x86-64;\n                                     Version 17.10-0\n                                  Intel(R) C (icc), C++ (icpc), Fortran (icc)\n                                  compilers:\n                                     Version 17.0.4.196 Build 20170411\n                                  MPICH 3.1.4 compiled with GCC 4.9.3\n\n    Linux 3.10.0-327.18.2.el7     GNU C (gcc) and C++ (g++) compilers\n    #1 SMP x86_64 GNU/Linux          Version 4.8.5 20150623 (Red Hat 4.8.5-4)\n    (jelly)                       with NAG Fortran Compiler Release 6.2(Chiyoda)\n                                  GCC Version 7.1.0\n                                  MPICH 3.2-GCC-4.9.3\n                                  MPICH 3.2.1-GCC-7.2.0-2.29\n                                  OpenMPI 2.1.5-GCC-7.2.0-2.29\n                                  Intel(R) C (icc) and C++ (icpc) compilers\n                                     Version 17.0.0.098 Build 20160721\n                                  with NAG Fortran Compiler Release 6.2(Chiyoda)\n\n    Linux 3.10.0-327.10.1.el7     MPICH 3.2 compiled with GCC 5.3.0\n    #1 SMP x86_64 GNU/Linux\n    (moohan)\n\n    Linux 2.6.32-573.18.1.el6.ppc64  MPICH mpich 3.1.4 compiled with\n    #1 SMP ppc64 GNU/Linux           IBM XL C/C++ for Linux, V13.1\n    (ostrich)                        and IBM XL Fortran for Linux, V15.1\n\n    Fedora30 5.3.11-200.fc30.x86_64\n    #1 SMP x86_64  GNU/Linux      GNU gcc (GCC) 9.2.1 20190827 (Red Hat 9.2.1 20190827)\n                                  GNU Fortran (GCC) 9.2.1 20190827 (Red Hat 9.2.1 20190827)\n                                     (cmake and autotools)\n\n    Mac OS X 10.11.6, Darwin,     Apple clang version 7.3.0 from Xcode 7.3\n    15.6.0, x86-64                gfortran GNU Fortran (GCC) 5.2.0\n    (osx1011test)                 Intel icc/icpc/ifort version 16.0.2\n\n    macOS 10.12.6, Darwin,        Apple clang LLVM version 8.1.0 from Xcode 8.3\n    16.6.0, x86_64                gfortran GNU Fortran (GCC) 7.1.0\n    (kite)                        Intel icc/icpc/ifort version 17.0.2\n\n    Windows 7 x64                 Visual Studio 2008\n    \n\nKnown Problems\n==============\n    CMake files do not behave correctly with paths containing spaces.\n    Do not use spaces in paths because the required escaping for handling spaces\n    results in very complex and fragile build files.\n    ADB - 2019/05/07\n\n    At present, metadata cache images may not be generated by parallel\n    applications.  Parallel applications can read files with metadata cache\n    images, but since this is a collective operation, a deadlock is possible\n    if one or more processes do not participate.\n\n    Three tests fail with OpenMPI 3.0.0/GCC-7.2.0-2.29:\n        testphdf5 (ecdsetw, selnone, cchunk1, cchunk3, cchunk4, and actualio)\n        t_shapesame (sscontig2)\n        t_pflush1/fails on exit\n    The first two tests fail attempting collective writes.\n\n    Parallel builds using OpenMPI 3.03 or later and romio fail several tests\n    with collective writes or compression that will not fail when ompio is used\n    instead of romio.  This can be done by adding \"--mca io ompio\" to the mpirun\n    command.  For example, in autotools builds RUNPARALLEL can be set to \n    \"mpirun --mca io ompio -n 6\" provided ompio is installed.\n              \n    CPP ptable test fails on VS2017 with Intel compiler, JIRA issue: HDFFV-10628.\n    This test will pass with VS2015 with Intel compiler.\n\n    Older MPI libraries such as OpenMPI 2.0.1 and MPICH 2.1.5 were tested\n    while attempting to resolve the Jira issue: HDFFV-10540.\n    The known problems of reading or writing > 2GBs when using MPI-2 was\n    partially resolved with the MPICH library. The proposed support recognizes\n    IO operations > 2GB and if the datatype is not a derived type, the library\n    breaks the IO into chunks which can be input or output with the existing\n    MPI 2 limitations, i.e. size reporting and function API size/count\n    arguments are restricted to be 32 bit integers.  For derived types larger\n    than 2GB, MPICH 2.1.5 fails while attempting to read or write data.\n    OpenMPI in contrast, implements MPI-3 APIs even in the older releases\n    and thus does not suffer from the 32 bit size limitation described here.\n    OpenMPI releases prior to v3.1.3 appear to have other datatype issues however,\n    e.g. within a single parallel test (testphdf5) the subtests (cdsetr, eidsetr)\n    report data verfication errors before eventually aborting.\n    The most recent versions of OpenMPI (v3.1.3 or newer) have evidently\n    resolved these isses and parallel HDF5 testing does not currently report\n    errors though occasional hangs have been observed.\n\n    Known problems in previous releases can be found in the HISTORY*.txt files\n    in the HDF5 source. Please report any new problems found to\n    help@hdfgroup.org.\n\n\nCMake vs. Autotools installations\n=================================\nWhile both build systems produce similar results, there are differences.\nEach system produces the same set of folders on linux (only CMake works\non standard Windows); bin, include, lib and share. Autotools places the\nCOPYING and RELEASE.txt file in the root folder, CMake places them in\nthe share folder.\n\nThe bin folder contains the tools and the build scripts. Additionally, CMake\ncreates dynamic versions of the tools with the suffix \"-shared\". Autotools\ninstalls one set of tools depending on the \"--enable-shared\" configuration\noption.\n  build scripts\n  -------------\n  Autotools: h5c++, h5cc, h5fc\n  CMake: h5c++, h5cc, h5hlc++, h5hlcc\n\nThe include folder holds the header files and the fortran mod files. CMake\nplaces the fortran mod files into separate shared and static subfolders,\nwhile Autotools places one set of mod files into the include folder. Because\nCMake produces a tools library, the header files for tools will appear in\nthe include folder.\n\nThe lib folder contains the library files, and CMake adds the pkgconfig\nsubfolder with the hdf5*.pc files used by the bin/build scripts created by\nthe CMake build. CMake separates the C interface code from the fortran code by\ncreating C-stub libraries for each Fortran library. In addition, only CMake\ninstalls the tools library. The names of the szip libraries are different\nbetween the build systems.\n\nThe share folder will have the most differences because CMake builds include\na number of CMake specific files for support of CMake's find_package and support\nfor the HDF5 Examples CMake project.\n\n%%%%1.10.5%%%%\n\nHDF5 version 1.10.5 released on 2019-02-25\n================================================================================\n\n\nINTRODUCTION\n\nThis document describes the differences between this release and the previous\nHDF5 release. It contains information on the platforms tested and known\nproblems in this release. For more details check the HISTORY*.txt files in the\nHDF5 source.\n\nNote that documentation in the links below will be updated at the time of each\nfinal release.\n\nLinks to HDF5 documentation can be found on The HDF5 web page:\n\n     https://portal.hdfgroup.org/display/HDF5/HDF5\n\nThe official HDF5 releases can be obtained from:\n\n     https://www.hdfgroup.org/downloads/hdf5/\n\nChanges from Release to Release and New Features in the HDF5-1.10.x release series\ncan be found at:\n\n     https://portal.hdfgroup.org/display/HDF5/HDF5+Application+Developer%27s+Guide\n\nIf you have any questions or comments, please send them to the HDF Help Desk:\n\n     help@hdfgroup.org\n\n\nCONTENTS\n\n- New Features\n- Support for new platforms and languages\n- Bug Fixes since HDF5-1.10.4\n- Supported Platforms\n- Tested Configuration Features Summary\n- More Tested Platforms\n- Known Problems\n- CMake vs. Autotools installations\n\n\nNew Features\n============\n\n    Configuration:\n    -------------\n    - Cross compile on mutrino and other Cray XC40 systems.\n\n      Added support for CMake options to use CrayLinuxEnvironment, craype-mic-knl\n      module for building with craype-haswell module for configuration, and \n      batch scripts in bin/batch for use with sbatch or bsub to run tests in \n      batch jobs on compute nodes.  An instruction file README_HPC describing\n      the use of these options was added in release_docs.\n\n      (LRK - 2019/02/18, TRILABS-34)\n\n    - Rework CMake command files to fix MPI testing.\n\n      Added setup fixture to remove any test generated files and added DEPENDS\n      to test properties to execute tests in order expected.\n\n      (ADB - 2019/02/14, TRILABS-111)\n\n    - Disable SZIP or ZLIB options if TGZ files are not available.\n\n      Changed the TGZ option for SZip and ZLib to disable the options\n      if the source tar.gz files are not found.\n\n      (ADB - 2019/02/05, HDFFV-10697)\n\n    - Added a new option to enable/disable using pread/pwrite instead of\n      read/write in the sec2, log, and core VFDs.\n\n      This option is enabled by default when pread/pwrite are detected.\n\n      Autotools:    --enable-preadwrite\n      CMake:        HDF5_ENABLE_PREADWRITE\n\n      (DER - 2019/02/03, HDFFV-10696)\n\n    - Rework CMake versioning for OSX platforms.\n\n      Changed the current_version and compatibility_version flags from optional\n      with HDF5_BUILD_WITH_INSTALL_NAME to always setting the flags for OSX.\n\n      (ADB - 2019/01/22, HDFFV-10685)\n\n    - Rework CMake command files to eliminate developer CMP005 warning\n\n      Use variables without quotes in if () statements.\n\n      (ADB - 2019/01/18, TILABS-105)\n\n    - Rework CMake configure files to eliminate developer CMP0075 warning\n\n      Renamed varname to HDF5_REQUIRED_LIBRARIES as the contents were not\n      required for configuration. Also moved check includes calls to top of\n      files.\n\n      (ADB - 2019/01/03, HDFFV-10546)\n\n    - Keep stderr and stdout separate in tests\n\n      Changed test handling of output capture. Tests now keep the stderr\n      output separate from the stdout output. It is up to the test to decide\n      which output to check against a reference. Also added the option\n      to grep for a string in either output.\n\n      (ADB - 2018/12/12, HDFFV-10632)\n\n    - Incorrectly installed private header files were removed from\n      CMake installs.\n\n      The CMake build files incorrectly flagged the following header files\n      as public and installed them. They are private and will no longer be\n      installed.\n\n        HDF5 library private package files (H5Xpkg.h)\n        H5Edefin.h\n        H5Einit.h\n        H5Eterm.h\n        H5LTparse.h\n        h5diff.h\n        h5tools_dump.h\n        h5tools.h\n        h5tools_ref.h\n        h5tools_str.h\n        h5tools_utils.h\n        h5trav.h\n\n      (DER - 2018/10/26, HDFFV-10614, 10609)\n\n    - Autotools installs now install H5FDwindows.h\n\n      This is simply to align the installed header files between the\n      autotools and CMake. H5FDwindows.h has no functionality on\n      non-Windows systems.\n\n      (DER - 2018/10/26, HDFFV-10614)\n\n\n    Library:\n    --------\n    - The sec2, log, and core VFDs can now use pread/pwrite instead of\n      read/write.\n\n      pread and pwrite do not change the file offset, a feature that was\n      requested by a user working with a multi-threaded application.\n\n      The option to configure this feature is described above.\n\n      (DER - 2019/02/03, HDFFV-10696)\n\n    - Add ability to minimze dataset object headers.\n\n      Creation of many, very small datasets resulted in extensive file bloat\n      due to extra space in the dataset object headers -- this space is\n      allocated by default to allow for the insertion of a small number of\n      attributes within the object header and not require a continuation\n      block, an unnecessary provision in the target use case.\n\n      Inform the library to expect no attributes on created datasets, and to\n      allocate the least space possible for the object headers.\n      NOTE: A continuation block is created if attributes are added to a\n      'minimized' dataset, which can reduce performance.\n      NOTE: Some extra space is allocated for attributes essential to the\n      correct behavior of the object header (store creation times, e.g.). This\n      does not violate the design principle, as the space is calculated and\n      allocated as needed at the time of dataset object header creation --\n      unused space is not generated.\n      New API calls:\n      H5Fget_dset_no_attrs_hint\n      H5Fset_dset_no_attrs_hint\n      H5Pget_dset_no_attrs_hint\n      H5Pset_dset_no_attrs_hint\n\n      (JOS - 2019/01/04, TRILAB-45)\n\n    - Added new chunk query functions\n\n      The following public functions were added to discover information about\n      the chunks in an HDF5 file.\n        herr_t H5Dget_num_chunks(dset_id, fspace_id, *nchunks)\n        herr_t H5Dget_chunk_info_by_coord(dset_id, *coord, *filter_mask, *addr, *size)\n        herr_t H5Dget_chunk_info(dset_id, fspace_id, index, *coord, *filter_mask, *addr, *size)\n\n      (BMR - 2018/11/07, HDFFV-10615)\n\n    - Several empty public header files where removed from the distribution\n\n      The following files were empty placeholders. They are for internal\n      packages that are unlikely to ever have public functionality and have\n      thus been removed.\n\n        H5Bpublic.h\n        H5B2public.h\n        H5FSpublic.h\n        H5HFpublic.h\n        H5HGpublic.h\n        H5HLpublic.h\n\n      They were only installed in CMake builds.\n\n      (DER - 2018/10/26, HDFFV-10614)\n\n\n     Parallel Library:\n    -----------------\n    - Changed the default behavior in parallel when reading the same dataset in its entirety\n      (i.e. H5S_ALL dataset selection) which is being read by all the processes collectively.\n      The dataset must be contiguous, less than 2GB, and of an atomic datatype.\n      The new behavior is the HDF5 library will use an MPI_Bcast to pass the data read from\n      the disk by the root process to the remain processes in the MPI communicator associated\n      with the HDF5 file.\n\n      (MSB - 2019/01/02, HDFFV-10652)\n\n    - All MPI-1 API calls have been replaced with MPI-2 equivalents.\n\n      This was done to better support OpenMPI, as default builds no longer\n      include MPI-1 support (as of OpenMPI 4.0).\n\n      (DER - 2018/12/30, HDFFV-10566)\n\n    Fortran Library:\n    ----------------\n    - Added wrappers for dataset object header minimization calls.\n      (see the note for TRILAB-45, above)\n\n      New API calls:\n\n      h5fget_dset_no_attrs_hint_f\n      h5fset_dset_no_attrs_hint_f\n      h5pget_dset_no_attrs_hint_f\n      h5pset_dset_no_attrs_hint_f\n\n      (DER - 2019/01/09, TRILAB-45)\n\n    - Added new Fortran derived type, c_h5o_info_t, which is interoperable with\n      C's h5o_info_t. This is needed for callback functions which\n      pass C's h5o_info_t data type definition.\n\n      (MSB, 2019/01/08, HDFFV-10443)\n\n    - Added new Fortran API, H5gmtime, which converts (C) 'time_t' structure\n      to Fortran DATE AND TIME storage format.\n\n      (MSB, 2019/01/08, HDFFV-10443)\n\n    - Added new Fortran 'fields' optional parameter to: h5ovisit_f, h5oget_info_by_name_f,\n      h5oget_info, h5oget_info_by_idx and h5ovisit_by_name_f.\n\n      (MSB, 2019/01/08, HDFFV-10443)\n\n    C++ Library:\n    ------------\n    - Added new function to the C++ interface\n\n      Added wrapper for H5Ovisit2:\n          H5Object::visit()\n\n      (BMR - 2019/02/14, HDFFV-10532)\n\n\n    Java Library:\n    ----------------\n    - Rewrote the JNI error handling to be much cleaner\n\n      (JTH - 2019/02/12)\n\n    - Add new functions to java interface\n\n      Added wrappers for:\n      H5Fset_libver_bounds\n      H5Fget_dset_no_attrs_hint/H5Fset_dset_no_attrs_hint\n      H5Pget_dset_no_attrs_hint/H5Pset_dset_no_attrs_hint\n\n      (ADB - 2019/01/07, HDFFV-10664)\n\n    - Fix java unit tests when Time is a natural number\n\n      Time substitution in java/test/junit.sh.in doesn't\n      handle the case when Time is a natural number. Fixed\n      the regular expression.\n\n      (ADB - 2019/01/07, HDFFV-10674)\n\n    - Duplicate the data read/write functions of Datasets for Attributes.\n\n      Region references could not be displayed for attributes as they could\n      for datasets. Datasets had overloaded read and write functions for different\n      datatypes that were not available for attributes. After adding similar\n      functions, attribute region references work normally.\n\n      (ADB - 2018/12/12, HDFVIEW-4)\n\n\n    Tools:\n    ------\n    - The h5repart -family-to-sec2 argument was changed to -family-to-single\n\n      In order to better support other single-file VFDs which could work with\n      h5repart, the -family-to-sec2 argument was renamed to -family-to-single.\n      This is just a name change and the functionality of the argument has not\n      changed.\n\n      The -family-to-sec2 argument has been kept for backwards-compatibility.\n      This argument should be considered deprecated.\n\n      (DER - 2018/11/14, HDFFV-10633)\n\n\nBug Fixes since HDF5-1.10.4 release\n==================================\n\n    Library\n    -------\n    - Fix hangs with collective metadata reads during chunked dataset I/O\n\n      In the parallel library, it was discovered that when a particular\n      sequence of operations following a pattern of:\n\n      \"write to chunked dataset\" -> \"flush file\" -> \"read from dataset\"\n\n      occurred with collective metadata reads enabled, hangs could be\n      observed due to certain MPI ranks not participating in the collective\n      metadata reads.\n\n      To fix the issue, collective metadata reads are now disabled during\n      chunked dataset raw data I/O.\n\n      (JTH - 2019/02/11, HDFFV-10563, HDFFV-10688)\n\n    - Performance issue when closing an object\n\n      The slow down is due to the search of the \"tag_list\" to find\n      out the \"corked\" status of an object and \"uncork\" it if so.\n\n      Improve performance by skipping the search of the \"tag_list\"\n      if there are no \"corked\" objects when closing an object.\n\n      (VC - 2019/02/06)\n\n    - Uninitialized bytes from a type conversion buffer could be written\n      to disk in H5Dwrite calls where type conversion takes place\n      and the type conversion buffer was created by the HDF5 library.\n\n      When H5Dwrite is called and datatype conversion must be performed,\n      the library will create a temporary buffer for type conversion if\n      one is not provided by the user via H5Pset_buffer. This internal\n      buffer is allocated via malloc and contains uninitialized data. In\n      some datatype conversions (float to long double, possibly others),\n      some of this uninitialized data could be written to disk.\n\n      This was flagged by valgrind in the dtransform test and does not\n      appear to be a common occurrence (it is flagged in one test out\n      of the entire HDF5 test suite).\n\n      Switching to calloc fixed the problem.\n\n      (DER - 2019/02/03, HDFFV-10694)\n\n    - There was missing protection against division by zero reported to\n      The HDF Group as issue #CVE-2018-17434.\n\n      Protection against division by zero was added to address the issue\n      #CVE-2018-17434.\n\n      (BMR - 2019/01/29, HDFFV-10586)\n\n    - The issue CVE-2018-17437 was reported to The HDF Group\n\n      Although CVE-2018-17437 reported a memory leak, the actual issue\n      was invalid read. It was found that the attribute name length\n      in an attribute message was corrupted, which caused the buffer\n      pointer to be advanced too far and later caused an invalid read.\n\n      A check was added to detect when the attribute name or its length\n      was corrupted and report the potential of data corruption.\n\n      (BMR - 2019/01/29, HDFFV-10588)\n\n    - H5Ewalk did not stop when it was supposed to\n\n      H5Ewalk was supposed to stop when the callback function stopped\n      even though the errors in the stack were not all visited, but it\n      did not.  This problem is now fixed.\n\n      (BMR - 2019/01/29, HDFFV-10684)\n\n    - Revert H5Oget_info* and H5Ovisit* functions\n\n      In 1.10.3 new H5Oget_info*2 and H5Ovisit*2 functions were\n      added for performance. Inadvertently, the original functions;\n          H5Oget_info,\n          H5Oget_info_by_name,\n          H5Oget_info_by_idx,\n          H5Ovisit,\n          H5Ovisit_by_name\n      were versioned to H5Oget_info*1 and H5Ovisit*1. This\n      broke the API compatibility for a maintenance release. The\n      original functions have been restored.\n\n      (ADB - 2019/01/24, HDFFV-10686)\n\n    - Fixed a potential invalid memory access and failure that could occur when\n      decoding an unknown object header message (from a future version of the\n      library).\n\n      (NAF - 2019/01/07)\n\n    - Deleting attributes in dense storage\n\n      The library aborts with \"infinite loop closing library\" after\n      attributes in dense storage are created and then deleted.\n\n      When deleting the attribute nodes from the name index v2 B-tree,\n      if an attribute is found in the intermediate B-tree nodes,\n      which may be merged/redistributed in the process, we need to\n      free the dynamically allocated spaces for the intermediate\n      decoded attribute.\n\n      (VC - 2018/12/26, HDFFV-10659)\n\n    - There was missing protection against division by zero reported to\n      The HDF Group as issue #CVE-2018-17233.\n\n      Protection against division by zero was added to address the issue\n      #CVE-2018-17233.  In addition, several similar occurrences in the same\n      file were fixed as well.\n\n      (BMR - 2018/12/23, HDFFV-10577)\n\n    - Fixed an issue where the parallel filters tests would fail\n      if zlib was not available on the system. Until support can\n      be added in the tests for filters beyond gzip/zlib, the tests\n      will be skipped if zlib is not available.\n\n      (JTH - 2018/12/05)\n\n    - A bug was discovered in the parallel library where an application\n      would eventually consume all of the available MPI communicators\n      when continually writing to a compressed dataset in parallel. This\n      was due to internal copies of an HDF5 File Access Property List,\n      which each contained a copy of the MPI communicator, not being\n      closed at the end of each write operation. This problem was\n      exacerbated by larger numbers of processors.\n\n      (JTH - 2018/12/05, HDFFV-10629)\n\n\n    Fortran\n    --------\n    - Fixed issue with Fortran not returning h5o_info_t field values\n      meta_size%attr%index_size and  meta_size%attr%heap_size.\n\n      (MSB, 2019/01/08, HDFFV-10443)\n\n    - Added symbolic links libhdf5_hl_fortran.so to libhdf5hl_fortran.so and\n      libhdf5_hl_fortran.a to libhdf5hl_fortran.a in hdf5/lib directory for\n      autotools installs.  These were added to match the name of the files\n      installed by cmake and the general pattern of hl lib files.  We will\n      change the names of the installed lib files to the matching name in\n      the next major release.\n\n      (LRK - 2019/01/04, HDFFV-10596)\n\n    - Made Fortran specific subroutines PRIVATE in generic procedures.\n\n      Affected generic procedures were functions in H5A, H5D, H5P, H5R and H5T.\n\n      (MSB, 2018/12/04, HDFFV-10511)\n\n\n    Testing\n    -------\n    - Fixed a test failure in testpar/t_dset.c caused by\n      the test trying to use the parallel filters feature\n      on MPI-2 implementations.\n\n      (JTH, 2019/2/7)\n\n\nSupported Platforms\n===================\n\n    Linux 2.6.32-696.16.1.el6.ppc64 gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-18)\n    #1 SMP ppc64 GNU/Linux        g++ (GCC) 4.4.7 20120313 (Red Hat 4.4.7-18)\n    (ostrich)                     GNU Fortran (GCC) 4.4.7 20120313 (Red Hat 4.4.7-18)\n                                  IBM XL C/C++ V13.1\n                                  IBM XL Fortran V15.1\n\n    Linux 3.10.0-327.10.1.el7   GNU C (gcc), Fortran (gfortran), C++ (g++)\n    #1 SMP x86_64 GNU/Linux       compilers:\n    (kituo/moohan)                Version 4.8.5 20150623 (Red Hat 4.8.5-4)\n                                    Version 4.9.3, Version 5.2.0\n                                  Intel(R) C (icc), C++ (icpc), Fortran (icc)\n                                  compilers:\n                                     Version 17.0.0.098 Build 20160721\n                                  MPICH 3.1.4 compiled with GCC 4.9.3\n\n    SunOS 5.11 32- and 64-bit     Sun C 5.12 SunOS_sparc\n    (emu)                         Sun Fortran 95 8.6 SunOS_sparc\n                                  Sun C++ 5.12 SunOS_sparc\n\n    Windows 7                     Visual Studio 2015 w/ Intel Fortran 16 (cmake)\n\n    Windows 7 x64                 Visual Studio 2013\n                                  Visual Studio 2015 w/ Intel Fortran 16 (cmake)\n                                  Visual Studio 2015 w/ Intel C, Fortran 2018 (cmake)\n                                  Visual Studio 2015 w/ MSMPI 8 (cmake)\n\n    Windows 10                    Visual Studio 2015 w/ Intel Fortran 18 (cmake)\n\n    Windows 10 x64                Visual Studio 2015 w/ Intel Fortran 18 (cmake)\n                                  Visual Studio 2017 w/ Intel Fortran 18 (cmake)\n\n    Mac OS X Yosemite 10.10.5     Apple clang/clang++ version 6.1 from Xcode 7.0\n    64-bit                        gfortran GNU Fortran (GCC) 4.9.2\n    (osx1010dev/osx1010test)      Intel icc/icpc/ifort version 15.0.3\n\n    Mac OS X El Capitan 10.11.6   Apple clang/clang++ version 7.3.0 from Xcode 7.3\n    64-bit                        gfortran GNU Fortran (GCC) 5.2.0\n    (osx1011dev/osx1011test)      Intel icc/icpc/ifort version 16.0.2\n\n    MacOS High Sierra 10.13.6     Apple LLVM version 10.0.0 (clang/clang++-1000.10.44.4)\n    64-bit                        gfortran GNU Fortran (GCC) 8.3.0\n\n\nTested Configuration Features Summary\n=====================================\n\n    In the tables below\n          y   = tested\n          n   = not tested in this release\n          C   = Cluster\n          W   = Workstation\n          x   = not working in this release\n          dna = does not apply\n          ( ) = footnote appears below second table\n          <blank> = testing incomplete on this feature or platform\n\nPlatform                              C         F90/   F90      C++  zlib  SZIP\n                                      parallel  F2003  parallel\nSolaris2.11 32-bit                      n        y/y    n        y    y     y\nSolaris2.11 64-bit                      n        y/n    n        y    y     y\nWindows 7                               y        y/y    n        y    y     y\nWindows 7 x64                           y        y/y    y        y    y     y\nWindows 7 Cygwin                        n        y/n    n        y    y     y\nWindows 7 x64 Cygwin                    n        y/n    n        y    y     y\nWindows 10                              y        y/y    n        y    y     y\nWindows 10 x64                          y        y/y    n        y    y     y\nMac OS X Yosemite 10.10.5 64-bit        n        y/y    n        y    y     y\nMac OS X El Capitan 10.11.6 64-bit      n        y/y    n        y    y     y\nMacOS High Sierra 10.13.6 64-bit        n        y/y    n        y    y     y\nCentOS 7.2 Linux 3.10.0 x86_64 PGI      n        y/y    n        y    y     y\nCentOS 7.2 Linux 3.10.0 x86_64 GNU      y        y/y    y        y    y     y\nCentOS 7.2 Linux 3.10.0 x86_64 Intel    n        y/y    n        y    y     y\nLinux 2.6.32-573.18.1.el6.ppc64         n        y/y    n        y    y     y\n\n\nPlatform                                 Shared  Shared    Shared    Thread-\n                                         C libs  F90 libs  C++ libs  safe\nSolaris2.11 32-bit                         y       y         y         y\nSolaris2.11 64-bit                         y       y         y         y\nWindows 7                                  y       y         y         y\nWindows 7 x64                              y       y         y         y\nWindows 7 Cygwin                           n       n         n         y\nWindows 7 x64 Cygwin                       n       n         n         y\nWindows 10                                 y       y         y         y\nWindows 10 x64                             y       y         y         y\nMac OS X Yosemite 10.10.5 64-bit           y       y         y         y\nMac OS X El Capitan 10.11.6 64-bit         y       y         y         y\nMacOS High Sierra 10.13.6 64-bit           y       y         y         y\nCentOS 7.2 Linux 3.10.0 x86_64 PGI         y       y         y         n\nCentOS 7.2 Linux 3.10.0 x86_64 GNU         y       y         y         y\nCentOS 7.2 Linux 3.10.0 x86_64 Intel       y       y         y         n\nLinux 2.6.32-573.18.1.el6.ppc64            y       y         y         n\n\nCompiler versions for each platform are listed in the preceding\n\"Supported Platforms\" table.\n\n\nMore Tested Platforms\n=====================\nThe following configurations are not supported but have been tested for this release.\n\n    Linux 2.6.32-573.22.1.el6    GNU C (gcc), Fortran (gfortran), C++ (g++)\n    #1 SMP x86_64 GNU/Linux       compilers:\n    (mayll/platypus)                 Version 4.4.7 20120313\n                                     Version 4.9.3, 5.3.0, 6.2.0\n                                  PGI C, Fortran, C++ for 64-bit target on\n                                  x86-64;\n                                     Version 17.10-0\n                                  Intel(R) C (icc), C++ (icpc), Fortran (icc)\n                                  compilers:\n                                     Version 17.0.4.196 Build 20170411\n                                  MPICH 3.1.4 compiled with GCC 4.9.3\n\n    Linux 3.10.0-327.18.2.el7     GNU C (gcc) and C++ (g++) compilers\n    #1 SMP x86_64 GNU/Linux          Version 4.8.5 20150623 (Red Hat 4.8.5-4)\n    (jelly)                       with NAG Fortran Compiler Release 6.1(Tozai)\n                                  GCC Version 7.1.0\n                                  MPICH 3.2-GCC-4.9.3\n                                  MPICH 3.2.1-GCC-7.2.0-2.29\n                                  OpenMPI 2.1.5-GCC-7.2.0-2.29\n                                  Intel(R) C (icc) and C++ (icpc) compilers\n                                     Version 17.0.0.098 Build 20160721\n                                  with NAG Fortran Compiler Release 6.1(Tozai)\n\n    Linux 3.10.0-327.10.1.el7     MPICH 3.2 compiled with GCC 5.3.0\n    #1 SMP x86_64 GNU/Linux\n    (moohan)\n\n    Fedora 29  4.20.10-200.fc29.x86_64 #1 SMP x86_64 x86_64 x86_64 GNU/Linux\n                                  gcc, g++ (GCC) 8.2.1 20181215\n                                      (Red Hat 8.2.1-6)\n                                  GNU Fortran (GCC) 8.2.1 20181215\n                                      (Red Hat 8.2.1-6)\n                                  (cmake and autotools)\n\n    Windows 7 x64                 Visual Studio 2008\n\n\nKnown Problems\n==============\n\n    At present, metadata cache images may not be generated by parallel\n    applications.  Parallel applications can read files with metadata cache\n    images, but since this is a collective operation, a deadlock is possible\n    if one or more processes do not participate.\n\n    Three tests fail with OpenMPI 3.0.0/GCC-7.2.0-2.29:\n        testphdf5 (ecdsetw, selnone, cchunk1, cchunk3, cchunk4, and actualio)\n        t_shapesame (sscontig2)\n        t_pflush1/fails on exit\n    The first two tests fail attempting collective writes.\n\n    CPP ptable test fails on VS2017 with Intel compiler, JIRA issue: HDFFV-10628.\n    This test will pass with VS2015 with Intel compiler.\n\n    Older MPI libraries such as OpenMPI 2.0.1 and MPICH 2.1.5 were tested\n    while attempting to resolve the Jira issue: HDFFV-10540.\n    The known problems of reading or writing > 2GBs when using MPI-2 was\n    partially resolved with the MPICH library. The proposed support recognizes\n    IO operations > 2GB and if the datatype is not a derived type, the library\n    breaks the IO into chunks which can be input or output with the existing\n    MPI 2 limitations, i.e. size reporting and function API size/count\n    arguments are restricted to be 32 bit integers.  For derived types larger\n    than 2GB, MPICH 2.1.5 fails while attempting to read or write data.\n    OpenMPI in contrast, implements MPI-3 APIs even in the older releases\n    and thus does not suffer from the 32 bit size limitation described here.\n    OpenMPI releases prior to v3.1.3 appear to have other datatype issues however,\n    e.g. within a single parallel test (testphdf5) the subtests (cdsetr, eidsetr)\n    report data verfication errors before eventually aborting.\n    The most recent versions of OpenMPI (v3.1.3 or newer) have evidently\n    resolved these isses and parallel HDF5 testing does not currently report\n    errors though occasional hangs have been observed.\n\n    Known problems in previous releases can be found in the HISTORY*.txt files\n    in the HDF5 source. Please report any new problems found to\n    help@hdfgroup.org.\n\n\nCMake vs. Autotools installations\n=================================\nWhile both build systems produce similar results, there are differences.\nEach system produces the same set of folders on linux (only CMake works\non standard Windows); bin, include, lib and share. Autotools places the\nCOPYING and RELEASE.txt file in the root folder, CMake places them in\nthe share folder.\n\nThe bin folder contains the tools and the build scripts. Additionally, CMake\ncreates dynamic versions of the tools with the suffix \"-shared\". Autotools\ninstalls one set of tools depending on the \"--enable-shared\" configuration\noption.\n  build scripts\n  -------------\n  Autotools: h5c++, h5cc, h5fc\n  CMake: h5c++, h5cc, h5hlc++, h5hlcc\n\nThe include folder holds the header files and the fortran mod files. CMake\nplaces the fortran mod files into separate shared and static subfolders,\nwhile Autotools places one set of mod files into the include folder. Because\nCMake produces a tools library, the header files for tools will appear in\nthe include folder.\n\nThe lib folder contains the library files, and CMake adds the pkgconfig\nsubfolder with the hdf5*.pc files used by the bin/build scripts created by\nthe CMake build. CMake separates the C interface code from the fortran code by\ncreating C-stub libraries for each Fortran library. In addition, only CMake\ninstalls the tools library. The names of the szip libraries are different\nbetween the build systems.\n\nThe share folder will have the most differences because CMake builds include\na number of CMake specific files for support of CMake's find_package and support\nfor the HDF5 Examples CMake project.\n\n%%%%1.10.4%%%%\n\nHDF5 version 1.10.4 released on 2018-10-05\n================================================================================\n\n\nINTRODUCTION\n\nThis document describes the differences between this release and the previous\nHDF5 release. It contains information on the platforms tested and known\nproblems in this release. For more details check the HISTORY*.txt files in the\nHDF5 source.\n\nNote that documentation in the links below will be updated at the time of each\nfinal release.\n\nLinks to HDF5 documentation can be found on The HDF5 web page:\n\n     https://portal.hdfgroup.org/display/HDF5/HDF5\n\nThe official HDF5 releases can be obtained from:\n\n     https://www.hdfgroup.org/downloads/hdf5/\n\nChanges from Release to Release and New Features in the HDF5-1.10.x release series\ncan be found at:\n\n     https://portal.hdfgroup.org/display/HDF5/HDF5+Application+Developer%27s+Guide\n\nIf you have any questions or comments, please send them to the HDF Help Desk:\n\n     help@hdfgroup.org\n\n\nCONTENTS\n\n- Bug Fixes since HDF5-1.10.3\n- Supported Platforms\n- Tested Configuration Features Summary\n- More Tested Platforms\n- Known Problems\n- CMake vs. Autotools installations\n\n\nNew Features\n============\n\n    Configuration:\n    -------------\n    - Add toolchain and cross-compile support\n\n      Added info on using a toolchain file to INSTALL_CMAKE.txt. A\n      toolchain file is also used in cross-compiling, which requires\n      CMAKE_CROSSCOMPILING_EMULATOR to be set. To help with cross-compiling\n      the fortran configure process, the HDF5UseFortran.cmake file macros\n      were improved. Fixed a Fortran configure file issue that incorrectly\n      used #cmakedefine instead of #define.\n\n      (ADB - 2018/10/04, HDFFV-10594)\n\n    - Add warning flags for Intel compilers\n\n      Identified Intel compiler specific warnings flags that should be used\n      instead of GNU flags.\n\n      (ADB - 2018/10/04, TRILABS-21)\n\n    - Add default rpath to targets\n\n      Default rpaths should be set in shared executables and\n      libraries to allow the use of loading dependent libraries\n      without requiring LD_LIBRARY_PATH to be set. The default\n      path should be relative using @rpath on osx and $ORIGIN\n      on linux. Windows is not affected.\n\n      (ADB - 2018/09/26, HDFFV-10594)\n\n    Library:\n    --------\n    - Allow pre-generated H5Tinit.c and H5make_libsettings.c to be used.\n\n      Rather than always running H5detect and generating H5Tinit.c and\n      H5make_libsettings.c, supply a location for those files.\n\n      (ADB - 2018/09/18, HDFFV-10332)\n\n\nBug Fixes since HDF5-1.10.3 release\n==================================\n\n    Library\n    -------\n    - Allow H5detect and H5make_libsettings to take a file as an argument.\n\n      Rather than only writing to stdout, add a command argument to name\n      the file that H5detect and H5make_libsettings will use for output.\n      Without an argument, stdout is still used, so backwards compatibility\n      is maintained.\n\n      (ADB - 2018/09/05, HDFFV-9059)\n\n    - A bug was discovered in the parallel library where an application\n      would hang if a collective read/write of a chunked dataset occurred\n      when collective metadata reads were enabled and some of the ranks\n      had no selection in the dataset's dataspace. The ranks which had no\n      selection in the dataset's dataspace called H5D__chunk_addrmap() to\n      retrieve the lowest chunk address in the dataset. This is because we\n      require reads/writes to be performed in strictly non-decreasing order\n      of chunk address in the file.\n\n      When the chunk index used was a version 1 or 2 B-tree, these\n      non-participating ranks would issue a collective MPI_Bcast() call\n      that the participating ranks would not issue, causing the hang. Since\n      the non-participating ranks are not actually reading/writing anything,\n      the H5D__chunk_addrmap() call can be safely removed and the address used\n      for the read/write can be set to an arbitrary number (0 was chosen).\n\n      (JTH - 2018/08/25, HDFFV-10501)\n\n    Java Library:\n    ----------------\n    - JNI native library dependencies\n    \n      The build for the hdf5_java native library used the wrong\n      hdf5 target library for CMake builds. Correcting the hdf5_java\n      library to build with the shared hdf5 library required testing\n      paths to change also.\n\n      (ADB - 2018/08/31, HDFFV-10568)\n\n    - Java iterator callbacks\n\n      Change global callback object to a small stack structure in order\n      to fix a runtime crash. This crash was discovered when iterating\n      through a file with nested group members. The global variable\n      visit_callback is overwritten when recursion starts. When recursion\n      completes, visit_callback will be pointing to the wrong callback method.\n\n      (ADB - 2018/08/15, HDFFV-10536)\n\n    - Java HDFLibraryException class\n\n      Change parent class from Exception to RuntimeException.\n\n      (ADB - 2018/07/30, HDFFV-10534)\n\n    - JNI Read and Write\n\n      Refactored variable-length functions, H5DreadVL and H5AreadVL,\n      to correct dataset and attribute reads. New write functions,\n      H5DwriteVL and H5AwriteVL, are under construction.\n\n      (ADB - 2018/06/02, HDFFV-10519)\n\n\nSupported Platforms\n===================\n\n    Linux 2.6.32-696.16.1.el6.ppc64 gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-18)\n    #1 SMP ppc64 GNU/Linux        g++ (GCC) 4.4.7 20120313 (Red Hat 4.4.7-18)\n    (ostrich)                     GNU Fortran (GCC) 4.4.7 20120313 (Red Hat 4.4.7-18)\n                                  IBM XL C/C++ V13.1\n                                  IBM XL Fortran V15.1\n\n    Linux 3.10.0-327.10.1.el7   GNU C (gcc), Fortran (gfortran), C++ (g++)\n    #1 SMP x86_64 GNU/Linux       compilers:\n    (kituo/moohan)                Version 4.8.5 20150623 (Red Hat 4.8.5-4)\n                                    Version 4.9.3, Version 5.2.0\n                                  Intel(R) C (icc), C++ (icpc), Fortran (icc)\n                                  compilers:\n                                     Version 17.0.0.098 Build 20160721\n                                  MPICH 3.1.4 compiled with GCC 4.9.3\n\n    SunOS 5.11 32- and 64-bit     Sun C 5.12 SunOS_sparc\n    (emu)                         Sun Fortran 95 8.6 SunOS_sparc\n                                  Sun C++ 5.12 SunOS_sparc\n\n    Windows 7                     Visual Studio 2015 w/ Intel Fortran 16 (cmake)\n\n    Windows 7 x64                 Visual Studio 2012 w/ Intel Fortran 15 (cmake)\n                                  Visual Studio 2013 w/ Intel Fortran 15 (cmake)\n                                  Visual Studio 2015 w/ Intel Fortran 16 (cmake)\n                                  Visual Studio 2015 w/ Intel C, Fortran 2017 (cmake)\n                                  Visual Studio 2015 w/ MSMPI 8 (cmake)\n\n    Windows 10                    Visual Studio 2015 w/ Intel Fortran 18 (cmake)\n\n    Windows 10 x64                Visual Studio 2015 w/ Intel Fortran 18 (cmake)\n                                  Visual Studio 2017 w/ Intel Fortran 18 (cmake)\n\n    Mac OS X Yosemite 10.10.5     Apple clang/clang++ version 6.1 from Xcode 7.0\n    64-bit                        gfortran GNU Fortran (GCC) 4.9.2\n    (osx1010dev/osx1010test)      Intel icc/icpc/ifort version 15.0.3\n\n    Mac OS X El Capitan 10.11.6   Apple clang/clang++ version 7.3.0 from Xcode 7.3\n    64-bit                        gfortran GNU Fortran (GCC) 5.2.0\n    (osx1011dev/osx1011test)      Intel icc/icpc/ifort version 16.0.2\n\n    Mac OS Sierra 10.12.6         Apple LLVM version 8.1.0 (clang/clang++-802.0.42)\n    64-bit                        gfortran GNU Fortran (GCC) 7.1.0\n    (kite)                        Intel icc/icpc/ifort version 17.0.2\n\n\nTested Configuration Features Summary\n=====================================\n\n    In the tables below\n          y   = tested\n          n   = not tested in this release\n          C   = Cluster\n          W   = Workstation\n          x   = not working in this release\n          dna = does not apply\n          ( ) = footnote appears below second table\n          <blank> = testing incomplete on this feature or platform\n\nPlatform                              C         F90/   F90      C++  zlib  SZIP\n                                      parallel  F2003  parallel\nSolaris2.11 32-bit                      n        y/y    n        y    y     y\nSolaris2.11 64-bit                      n        y/n    n        y    y     y\nWindows 7                               y        y/y    n        y    y     y\nWindows 7 x64                           y        y/y    y        y    y     y\nWindows 7 Cygwin                        n        y/n    n        y    y     y\nWindows 7 x64 Cygwin                    n        y/n    n        y    y     y\nWindows 10                              y        y/y    n        y    y     y\nWindows 10 x64                          y        y/y    n        y    y     y\nMac OS X Mavericks 10.9.5 64-bit        n        y/y    n        y    y     y\nMac OS X Yosemite 10.10.5 64-bit        n        y/y    n        y    y     y\nMac OS X El Capitan 10.11.6 64-bit      n        y/y    n        y    y     y\nMac OS Sierra 10.12.6 64-bit            n        y/y    n        y    y     y\nCentOS 7.2 Linux 3.10.0 x86_64 PGI      n        y/y    n        y    y     y\nCentOS 7.2 Linux 3.10.0 x86_64 GNU      y        y/y    y        y    y     y\nCentOS 7.2 Linux 3.10.0 x86_64 Intel    n        y/y    n        y    y     y\nLinux 2.6.32-573.18.1.el6.ppc64         n        y/y    n        y    y     y\n\n\nPlatform                                 Shared  Shared    Shared    Thread-\n                                         C libs  F90 libs  C++ libs  safe\nSolaris2.11 32-bit                         y       y         y         y\nSolaris2.11 64-bit                         y       y         y         y\nWindows 7                                  y       y         y         y\nWindows 7 x64                              y       y         y         y\nWindows 7 Cygwin                           n       n         n         y\nWindows 7 x64 Cygwin                       n       n         n         y\nWindows 10                                 y       y         y         y\nWindows 10 x64                             y       y         y         y\nMac OS X Mavericks 10.9.5 64-bit           y       n         y         y\nMac OS X Yosemite 10.10.5 64-bit           y       n         y         y\nMac OS X El Capitan 10.11.6 64-bit         y       n         y         y\nMac OS Sierra 10.12.6 64-bit               y       n         y         y\nCentOS 7.2 Linux 3.10.0 x86_64 PGI         y       y         y         n\nCentOS 7.2 Linux 3.10.0 x86_64 GNU         y       y         y         y\nCentOS 7.2 Linux 3.10.0 x86_64 Intel       y       y         y         n\nLinux 2.6.32-573.18.1.el6.ppc64            y       y         y         n\n\nCompiler versions for each platform are listed in the preceding\n\"Supported Platforms\" table.\n\n\nMore Tested Platforms\n=====================\nThe following platforms are not supported but have been tested for this release.\n\n    Linux 2.6.32-573.22.1.el6    GNU C (gcc), Fortran (gfortran), C++ (g++)\n    #1 SMP x86_64 GNU/Linux       compilers:\n    (mayll/platypus)                 Version 4.4.7 20120313\n                                     Version 4.9.3, 5.3.0, 6.2.0\n                                  PGI C, Fortran, C++ for 64-bit target on\n                                  x86-64;\n                                     Version 17.10-0\n                                  Intel(R) C (icc), C++ (icpc), Fortran (icc)\n                                  compilers:\n                                     Version 17.0.4.196 Build 20170411\n                                  MPICH 3.1.4 compiled with GCC 4.9.3\n\n    Linux 3.10.0-327.18.2.el7     GNU C (gcc) and C++ (g++) compilers\n    #1 SMP x86_64 GNU/Linux          Version 4.8.5 20150623 (Red Hat 4.8.5-4)\n    (jelly)                       with NAG Fortran Compiler Release 6.1(Tozai)\n                                  GCC Version 7.1.0\n                                  OpenMPI 3.0.0-GCC-7.2.0-2.29, \n                                     3.1.0-GCC-7.2.0-2.29\n                                  Intel(R) C (icc) and C++ (icpc) compilers\n                                     Version 17.0.0.098 Build 20160721\n                                  with NAG Fortran Compiler Release 6.1(Tozai)\n\n    Linux 3.10.0-327.10.1.el7     MPICH 3.2 compiled with GCC 5.3.0\n    #1 SMP x86_64 GNU/Linux\n    (moohan)\n\n    Linux 2.6.32-573.18.1.el6.ppc64  MPICH mpich 3.1.4 compiled with\n    #1 SMP ppc64 GNU/Linux           IBM XL C/C++ for Linux, V13.1\n    (ostrich)                        and IBM XL Fortran for Linux, V15.1\n\n    Debian 8.4 3.16.0-4-amd64 #1 SMP Debian 3.16.36-1 x86_64 GNU/Linux\n                                  gcc, g++ (Debian 4.9.2-10) 4.9.2\n                                  GNU Fortran (Debian 4.9.2-10) 4.9.2\n                                  (cmake and autotools)\n\n    Fedora 24  4.7.2-201.fc24.x86_64 #1 SMP x86_64 x86_64 x86_64 GNU/Linux\n                                  gcc, g++ (GCC) 6.1.1 20160621\n                                      (Red Hat 6.1.1-3)\n                                  GNU Fortran (GCC) 6.1.1 20160621\n                                      (Red Hat 6.1.1-3)\n                                  (cmake and autotools)\n\n    Ubuntu 16.04.1 4.4.0-38-generic #57-Ubuntu SMP x86_64 GNU/Linux\n                                  gcc, g++ (Ubuntu 5.4.0-6ubuntu1~16.04.2)\n                                      5.4.0 20160609\n                                  GNU Fortran (Ubuntu 5.4.0-6ubuntu1~16.04.2)\n                                      5.4.0 20160609\n                                  (cmake and autotools)\n\n\nKnown Problems\n==============\n\n    At present, metadata cache images may not be generated by parallel\n    applications.  Parallel applications can read files with metadata cache\n    images, but since this is a collective operation, a deadlock is possible\n    if one or more processes do not participate.\n\n    Three tests fail with OpenMPI 3.0.0/GCC-7.2.0-2.29:\n        testphdf5 (ecdsetw, selnone, cchunk1, cchunk3, cchunk4, and actualio)\n        t_shapesame (sscontig2)\n        t_pflush1/fails on exit\n    The first two tests fail attempting collective writes.\n\n    Known problems in previous releases can be found in the HISTORY*.txt files\n    in the HDF5 source. Please report any new problems found to\n    help@hdfgroup.org.\n\n\nCMake vs. Autotools installations\n=================================\nWhile both build systems produce similar results, there are differences.\nEach system produces the same set of folders on linux (only CMake works\non standard Windows); bin, include, lib and share. Autotools places the\nCOPYING and RELEASE.txt file in the root folder, CMake places them in\nthe share folder.\n\nThe bin folder contains the tools and the build scripts. Additionally, CMake\ncreates dynamic versions of the tools with the suffix \"-shared\". Autotools\ninstalls one set of tools depending on the \"--enable-shared\" configuration\noption.\n  build scripts\n  -------------\n  Autotools: h5c++, h5cc, h5fc\n  CMake: h5c++, h5cc, h5hlc++, h5hlcc\n\nThe include folder holds the header files and the fortran mod files. CMake\nplaces the fortran mod files into separate shared and static subfolders,\nwhile Autotools places one set of mod files into the include folder. Because\nCMake produces a tools library, the header files for tools will appear in\nthe include folder.\n\nThe lib folder contains the library files, and CMake adds the pkgconfig\nsubfolder with the hdf5*.pc files used by the bin/build scripts created by\nthe CMake build. CMake separates the C interface code from the fortran code by\ncreating C-stub libraries for each Fortran library. In addition, only CMake\ninstalls the tools library. The names of the szip libraries are different\nbetween the build systems.\n\nThe share folder will have the most differences because CMake builds include\na number of CMake specific files for support of CMake's find_package and support\nfor the HDF5 Examples CMake project.\n\n%%%%1.10.3%%%%\n\nHDF5 version 1.10.3 released on 2018-08-21\n================================================================================\n\n\nINTRODUCTION\n\nThis document describes the differences between this release and the previous\nHDF5 release. It contains information on the platforms tested and known\nproblems in this release. For more details check the HISTORY*.txt files in the\nHDF5 source.\n\nNote that documentation in the links below will be updated at the time of each\nfinal release.\n\nLinks to HDF5 documentation can be found on The HDF5 web page:\n\n     https://portal.hdfgroup.org/display/HDF5/HDF5\n\nThe official HDF5 releases can be obtained from:\n\n     https://www.hdfgroup.org/downloads/hdf5/\n\nChanges from Release to Release and New Features in the HDF5-1.10.x release series\ncan be found at:\n\n     https://portal.hdfgroup.org/display/HDF5/HDF5+Application+Developer%27s+Guide\n\nIf you have any questions or comments, please send them to the HDF Help Desk:\n\n     help@hdfgroup.org\n\n\nCONTENTS\n\n- New Features\n- Bug Fixes since HDF5-1.10.2\n- Supported Platforms\n- Tested Configuration Features Summary\n- More Tested Platforms\n- Known Problems\n- CMake vs. Autotools installations\n\n\nNew Features\n============\n\n    Library\n    -------\n    - Moved the H5DOread/write_chunk() API calls to H5Dread/write_chunk()\n\n      The functionality of the direct chunk I/O calls in the high-level\n      library has been moved to the H5D package in the main library. This\n      will allow using those functions without building the high-level\n      library. The parameters and functionality of the H5D calls are\n      identical to the H5DO calls.\n\n      The original H5DO high-level API calls have been retained, though\n      they are now just wrappers for the H5D calls. They are marked as\n      deprecated and are only available when the library is built with\n      deprecated functions. New code should use the H5D calls for this\n      reason.\n\n      As a part of this work, the following symbols from H5Dpublic.h are no\n      longer used:\n\n        H5D_XFER_DIRECT_CHUNK_WRITE_FLAG_NAME\n        H5D_XFER_DIRECT_CHUNK_WRITE_FILTERS_NAME\n        H5D_XFER_DIRECT_CHUNK_WRITE_OFFSET_NAME\n        H5D_XFER_DIRECT_CHUNK_WRITE_DATASIZE_NAME\n        H5D_XFER_DIRECT_CHUNK_READ_FLAG_NAME\n        H5D_XFER_DIRECT_CHUNK_READ_OFFSET_NAME\n        H5D_XFER_DIRECT_CHUNK_READ_FILTERS_NAME\n\n      And properties with these names are no longer stored in the dataset\n      transfer property lists. The symbols are still defined in H5Dpublic.h,\n      but only when the library is built with deprecated symbols.\n\n      (DER - 2018/05/04)\n\n    Configuration:\n    -------------\n    - Add missing USE_110_API_DEFAULT option.\n\n      Option USE_110_API_DEFAULT sets the default version of\n      versioned APIs. The bin/makevers perl script did not set\n      the maxidx variable correctly when the 1.10 branch was\n      created. This caused the versioning process to always use\n      the latest version of any API.\n\n      (ADB - 2018/08/17, HDFFV-10552)\n\n    - Added configuration checks for the following MPI functions:\n\n      MPI_Mprobe - Used for the Parallel Compression feature\n      MPI_Imrecv - Used for the Parallel Compression feature\n\n      MPI_Get_elements_x - Used for the \"big Parallel I/O\" feature\n      MPI_Type_size_x - Used for the \"big Parallel I/O\" feature\n\n      (JTH - 2018/08/02, HDFFV-10512)\n\n    - Added section to the libhdf5.settings file to indicate\n      the status of the Parallel Compression and \"big Parallel I/O\"\n      features.\n\n      (JTH - 2018/08/02, HDFFV-10512)\n\n    - Add option to execute swmr shell scripts from CMake.\n\n      Option TEST_SHELL_SCRIPTS redirects processing into a\n      separate ShellTests.cmake file for UNIX types. The tests\n      execute the shell scripts if a SH program is found.\n\n      (ADB - 2018/07/16)\n\n\n    C++ Library:\n    ------------\n    - New wrappers\n\n      Added the following items:\n\n      + Class DSetAccPropList for the dataset access property list.\n\n      + Wrapper for H5Dget_access_plist to class DataSet\n        // Gets the access property list of this dataset.\n        DSetAccPropList getAccessPlist() const;\n\n      + Wrappers for H5Pset_chunk_cache and H5Pget_chunk_cache to class DSetAccPropList\n        // Sets the raw data chunk cache parameters.\n        void setChunkCache(size_t rdcc_nslots, size_t rdcc_nbytes, double rdcc_w0)\n\n        // Retrieves the raw data chunk cache parameters.\n        void getChunkCache(size_t &rdcc_nslots, size_t &rdcc_nbytes, double &rdcc_w0)\n\n      + New operator!= to class DataType (HDFFV-10472)\n        // Determines whether two datatypes are not the same.\n        bool operator!=(const DataType& compared_type)\n\n      + Wrappers for H5Oget_info2, H5Oget_info_by_name2, and H5Oget_info_by_idx2\n        (HDFFV-10458)\n\n        // Retrieves information about an HDF5 object.\n        void getObjinfo(H5O_info_t& objinfo, unsigned fields = H5O_INFO_BASIC) const;\n\n        // Retrieves information about an HDF5 object, given its name.\n        void getObjinfo(const char* name, H5O_info_t& objinfo,\n                unsigned fields = H5O_INFO_BASIC,\n                const LinkAccPropList& lapl = LinkAccPropList::DEFAULT) const;\n        void getObjinfo(const H5std_string& name, H5O_info_t& objinfo,\n                unsigned fields = H5O_INFO_BASIC,\n                const LinkAccPropList& lapl = LinkAccPropList::DEFAULT) const;\n\n        // Retrieves information about an HDF5 object, given its index.\n        void getObjinfo(const char* grp_name, H5_index_t idx_type,\n                H5_iter_order_t order, hsize_t idx, H5O_info_t& objinfo,\n                unsigned fields = H5O_INFO_BASIC,\n                const LinkAccPropList& lapl = LinkAccPropList::DEFAULT) const;\n        void getObjinfo(const H5std_string& grp_name, H5_index_t idx_type,\n                H5_iter_order_t order, hsize_t idx, H5O_info_t& objinfo,\n                unsigned fields = H5O_INFO_BASIC,\n                const LinkAccPropList& lapl = LinkAccPropList::DEFAULT) const;\n\n      (BMR - 2018/07/22, HDFFV-10150, HDFFV-10458, HDFFV-1047)\n\n\n    Java Library:\n    ----------------\n    - Java HDFLibraryException class\n\n      Change parent class from Exception to RuntimeException.\n\n      (ADB - 2018/07/30, HDFFV-10534)\n\n    - JNI Read and Write\n\n      Refactored variable-length functions, H5DreadVL and H5AreadVL,\n      to correct dataset and attribute reads. New write functions,\n      H5DwriteVL and H5AwriteVL, are under construction.\n\n      (ADB - 2018/06/02, HDFFV-10519)\n\n\nBug Fixes since HDF5-1.10.2 release\n==================================\n\n    Library\n    -------\n    - Performance issue with H5Oget_info\n\n      H5Oget_info family of routines retrieves information for an object such\n      as object type, access time, number of attributes, and storage space etc.\n      Retrieving all such information regardless is an overkill and causes\n      performance issue when doing so for many objects.\n\n      Add an additional parameter \"fields\" to the the H5Oget_info family of routines\n      indicating the type of information to be retrieved.  The same is done to\n      the H5Ovisit family of routines which recursively visits an object\n      returning object information in a callback function.  Both sets of routines\n      are versioned and the corresponding compatibility macros are added.\n\n      The version 2 names of the two sets of routines are:\n        (1) H5Oget_info2, H5Oget_info_by_idx2, H5Oget_info_by_name2\n        (2) H5Ovisit2, H5Ovisit_by_name2\n\n      (VC - 2018/08/15, HDFFV-10180)\n\n    - Test failure due to metadata size in test/vds.c\n\n      The size of metadata from test_api_get_ex_dcpl() in test/vds.c is not as expected\n      because the latest format should be used when encoding the layout for VDS.\n\n      Set the latest format in a temporary fapl and pass the setting to the routines that\n      encode the dataset selection for VDS.\n\n      (VC - 2018/08/14 HDFFV-10469)\n\n    - Java HDF5LibraryException class\n\n      The error minor and major values would be lost after the\n      constructor executed.\n\n      Created two local class variables to hold the values obtained during\n      execution of the constructor. Refactored the class functions to retrieve\n      the class values rather then calling the native functions.\n      The native functions were renamed and called only during execution\n      of the constructor.\n      Added error checking to calling class constructors in JNI classes.\n\n      (ADB - 2018/08/06, HDFFV-10544)\n\n    - Added checks of the defined MPI_VERSION to guard against usage of\n      MPI-3 functions in the Parallel Compression and \"big Parallel I/O\"\n      features when HDF5 is built with MPI-2. Previously, the configure\n      step would pass but the build itself would fail when it could not\n      locate the MPI-3 functions used.\n\n      As a result of these new checks, HDF5 can again be built with MPI-2,\n      but the Parallel Compression feature will be disabled as it relies\n      on the MPI-3 functions used.\n\n      (JTH - 2018/08/02, HDFFV-10512)\n\n    - User's patches: CVEs\n\n      The following patches have been applied:\n\n      CVE-2018-11202 - NULL pointer dereference was discovered in\n                       H5S_hyper_make_spans in H5Shyper.c (HDFFV-10476)\n        https://security-tracker.debian.org/tracker/CVE-2018-11202\n        https://cve.mitre.org/cgi-bin/cvename.cgi?name=3DCVE-2018-11202\n\n      CVE-2018-11203 - A division by zero was discovered in\n                       H5D__btree_decode_key in H5Dbtree.c (HDFFV-10477)\n        https://security-tracker.debian.org/tracker/CVE-2018-11203\n        https://cve.mitre.org/cgi-bin/cvename.cgi?name=3DCVE-2018-11203\n\n      CVE-2018-11204 - A NULL pointer dereference was discovered in\n                       H5O__chunk_deserialize in H5Ocache.c (HDFFV-10478)\n        https://security-tracker.debian.org/tracker/CVE-2018-11204\n        https://cve.mitre.org/cgi-bin/cvename.cgi?name=3DCVE-2018-11204\n\n      CVE-2018-11206 - An out of bound read was discovered in\n                       H5O_fill_new_decode and H5O_fill_old_decode in H5Ofill.c\n                       (HDFFV-10480)\n        https://security-tracker.debian.org/tracker/CVE-2018-11206\n        https://cve.mitre.org/cgi-bin/cvename.cgi?name=3DCVE-2018-11206\n\n      CVE-2018-11207 - A division by zero was discovered in\n                       H5D__chunk_init in H5Dchunk.c  (HDFFV-10481)\n        https://security-tracker.debian.org/tracker/CVE-2018-11207\n        https://cve.mitre.org/cgi-bin/cvename.cgi?name=3DCVE-2018-11207\n\n      (BMR - 2018/7/22, PR#s: 1134 and 1139,\n       HDFFV-10476, HDFFV-10477, HDFFV-10478, HDFFV-10480, HDFFV-10481)\n\n    - H5Adelete\n\n      H5Adelete failed when deleting the last \"large\" attribute that\n      is stored densely via fractal heap/v2 b-tree.\n\n      After removing the attribute, update the ainfo message.  If the\n      number of attributes goes to zero, remove the message.\n\n      (VC - 2018/07/20, HDFFV-9277)\n\n    - A bug was discovered in the parallel library which caused partial\n      parallel reads of filtered datasets to return incorrect data. The\n      library used the incorrect dataspace for each chunk read, causing\n      the selection used in each chunk to be wrong.\n\n      The bug was not caught during testing because all of the current\n      tests which do parallel reads of filtered data read all of the data\n      using an H5S_ALL selection. Several tests were added which exercise\n      partial parallel reads.\n\n      (JTH - 2018/07/16, HDFFV-10467)\n\n    - A bug was discovered in the parallel library which caused parallel\n      writes of filtered datasets to trigger an assertion failure in the\n      file free space manager.\n\n      This occurred when the filter used caused chunks to repeatedly shrink\n      and grow over the course of several dataset writes. The previous chunk\n      information, such as the size of the chunk and the offset in the file,\n      was being cached and not updated after each write, causing the next write\n      to the chunk to retrieve the incorrect cached information and run into\n      issues when reallocating space in the file for the chunk.\n\n      (JTH - 2018/07/16, HDFFV-10509)\n\n    - A bug was discovered in the parallel library which caused the\n      H5D__mpio_array_gatherv() function to allocate too much memory.\n\n      When the function is called with the 'allgather' parameter set\n      to a non-true value, the function will receive data from all MPI\n      ranks and gather it to the single rank specied by the 'root'\n      parameter. However, the bug in the function caused memory for\n      the received data to be allocated on all MPI ranks, not just the\n      singular rank specified as the receiver. In some circumstances,\n      this would cause an application to fail due to the large amounts\n      of memory being allocated.\n\n      (JTH - 2018/07/16, HDFFV-10467)\n\n    - Error checks in h5stat and when decoding messages\n\n      h5stat exited with seg fault/core dumped when\n      errors are encountered in the internal library.\n\n      Add error checks and --enable-error-stack option to h5stat.\n      Add range checks when decoding messages: old fill value, old\n      layout and refcount.\n\n      (VC - 2018/07/11, HDFFV-10333)\n\n    - If an HDF5 file contains a malformed compound datatype with a\n      suitably large offset, the type conversion code can run off\n      the end of the type conversion buffer, causing a segmentation\n      fault.\n\n      This issue was reported to The HDF Group as issue #CVE-2017-17507.\n\n      NOTE: The HDF5 C library cannot produce such a file. This condition\n            should only occur in a corrupt (or deliberately altered) file\n            or a file created by third-party software.\n\n      THE HDF GROUP WILL NOT FIX THIS BUG AT THIS TIME\n\n      Fixing this problem would involve updating the publicly visible\n      H5T_conv_t function pointer typedef and versioning the API calls\n      which use it. We normally only modify the public API during\n      major releases, so this bug will not be fixed at this time.\n\n      (DER - 2018/02/26, HDFFV-10356)\n\n\n    Configuration\n    -------------\n    - Applied patches to address Cywin build issues\n\n      There were three issues for Cygwin builds:\n      - Shared libs were not built.\n      - The -std=c99 flag caused a SIG_SETMASK undeclared error.\n      - Undefined errors when buildbing test shared libraries.\n\n      Patches to address these issues were received and incorporated in this version.\n\n      (LRK - 2018/07/18, HDFFV-10475)\n\n    - The --enable-debug/production configure flags are listed as 'deprecated'\n      when they should really be listed as 'removed'.\n\n      In the autotools overhaul several years ago, we removed these flags and\n      implemented a new --enable-build-mode= flag. This was done because we\n      changed the semantics of the modes and didn't want users to silently\n      be exposed to them. The newer system is also more flexible and us to\n      add other modes (like 'clean').\n\n      The --enable-debug/production flags are now listed as removed.\n\n      (DER - 2018/05/31, HDFFV-10505)\n\n    - Moved the location of gcc attribute.\n\n      The gcc attribute(no_sanitize), named as the macro HDF_NO_UBSAN,\n      was located after the function name. Builds with GCC 7 did not\n      indicate any problem, but GCC 8 issued errors. Moved the\n      attribute before the function name, as required.\n\n      (ADB - 2018/05/22, HDFFV-10473)\n\n    - Reworked java test suite into individual JUnit tests.\n\n      Testing the whole suite of java unit tests in a single JUnit run\n      made it difficult to determine actual failures when tests would fail.\n      Running each file set of tests individually, allows individual failures\n      to be diagnosed easier. A side benefit is that tests for optional components\n      of the library can be disabled if not configured.\n\n      (ADB - 2018/05/16, HDFFV-9739)\n\n    - Converted CMake global commands ADD_DEFINITIONS and INCLUDE_DIRECTORIES\n      to use target_* type commands. This change modernizes the CMake usage\n      in the HDF5 library.\n\n      In addition, there is the intention to convert to generator expressions,\n      where possible. The exception is Fortran FLAGS on Windows Visual Studio.\n      The HDF macros TARGET_C_PROPERTIES and TARGET_FORTRAN_PROPERTIES have\n      been removed with this change in usage.\n\n      The additional language (C++ and Fortran) checks have also been localized\n      to only be checked when that language is enabled.\n\n      (ADB - 2018/05/08)\n\n\n    Performance\n    -------------\n    - Revamped internal use of DXPLs, improving performance\n\n      (QAK - 2018/05/20)\n\n\n    Fortran\n    --------\n    - Fixed issue with h5fget_obj_count_f and using a file id of H5F_OBJ_ALL_F not\n      returning the correct count.\n\n      (MSB - 2018/5/15, HDFFV-10405)\n\n\n    C++ APIs\n    --------\n    - Adding default arguments to existing functions\n\n      Added the following items:\n      + Two more property list arguments are added to H5Location::createDataSet:\n        const DSetAccPropList& dapl = DSetAccPropList::DEFAULT\n        const LinkCreatPropList& lcpl = LinkCreatPropList::DEFAULT\n\n      + One more property list argument is added to H5Location::openDataSet:\n        const DSetAccPropList& dapl = DSetAccPropList::DEFAULT\n\n      (BMR - 2018/07/21, PR# 1146)\n\n    - Improvement C++ documentation\n\n      Replaced the table in main page of the C++ documentation from mht to htm format\n      for portability.\n\n      (BMR - 2018/07/17, PR# 1141)\n\n\nSupported Platforms\n===================\n\n    Linux 2.6.32-696.16.1.el6.ppc64 gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-18)\n    #1 SMP ppc64 GNU/Linux        g++ (GCC) 4.4.7 20120313 (Red Hat 4.4.7-18)\n    (ostrich)                     GNU Fortran (GCC) 4.4.7 20120313 (Red Hat 4.4.7-18)\n                                  IBM XL C/C++ V13.1\n                                  IBM XL Fortran V15.1\n\n    Linux 3.10.0-327.10.1.el7   GNU C (gcc), Fortran (gfortran), C++ (g++)\n    #1 SMP x86_64 GNU/Linux       compilers:\n    (kituo/moohan)                Version 4.8.5 20150623 (Red Hat 4.8.5-4)\n                                    Version 4.9.3, Version 5.2.0\n                                  Intel(R) C (icc), C++ (icpc), Fortran (icc)\n                                  compilers:\n                                     Version 17.0.0.098 Build 20160721\n                                  MPICH 3.1.4 compiled with GCC 4.9.3\n\n    SunOS 5.11 32- and 64-bit     Sun C 5.12 SunOS_sparc\n    (emu)                         Sun Fortran 95 8.6 SunOS_sparc\n                                  Sun C++ 5.12 SunOS_sparc\n\n    Windows 7                     Visual Studio 2015 w/ Intel Fortran 16 (cmake)\n\n    Windows 7 x64                 Visual Studio 2012 w/ Intel Fortran 15 (cmake)\n                                  Visual Studio 2013 w/ Intel Fortran 15 (cmake)\n                                  Visual Studio 2015 w/ Intel Fortran 16 (cmake)\n                                  Visual Studio 2015 w/ Intel C, Fortran 2017 (cmake)\n                                  Visual Studio 2015 w/ MSMPI 8 (cmake)\n\n    Windows 10                    Visual Studio 2015 w/ Intel Fortran 18 (cmake)\n\n    Windows 10 x64                Visual Studio 2015 w/ Intel Fortran 18 (cmake)\n                                  Visual Studio 2017 w/ Intel Fortran 18 (cmake)\n\n    Mac OS X Yosemite 10.10.5     Apple clang/clang++ version 6.1 from Xcode 7.0\n    64-bit                        gfortran GNU Fortran (GCC) 4.9.2\n    (osx1010dev/osx1010test)      Intel icc/icpc/ifort version 15.0.3\n\n    Mac OS X El Capitan 10.11.6   Apple clang/clang++ version 7.3.0 from Xcode 7.3\n    64-bit                        gfortran GNU Fortran (GCC) 5.2.0\n    (osx1011dev/osx1011test)      Intel icc/icpc/ifort version 16.0.2\n\n    Mac OS Sierra 10.12.6         Apple LLVM version 8.1.0 (clang/clang++-802.0.42)\n    64-bit                        gfortran GNU Fortran (GCC) 7.1.0\n    (swallow/kite)                Intel icc/icpc/ifort version 17.0.2\n\nTested Configuration Features Summary\n=====================================\n\n    In the tables below\n          y   = tested\n          n   = not tested in this release\n          C   = Cluster\n          W   = Workstation\n          x   = not working in this release\n          dna = does not apply\n          ( ) = footnote appears below second table\n          <blank> = testing incomplete on this feature or platform\n\nPlatform                              C         F90/   F90      C++  zlib  SZIP\n                                      parallel  F2003  parallel\nSolaris2.11 32-bit                      n        y/y    n        y    y     y\nSolaris2.11 64-bit                      n        y/n    n        y    y     y\nWindows 7                               y        y/y    n        y    y     y\nWindows 7 x64                           y        y/y    y        y    y     y\nWindows 7 Cygwin                        n        y/n    n        y    y     y\nWindows 7 x64 Cygwin                    n        y/n    n        y    y     y\nWindows 10                              y        y/y    n        y    y     y\nWindows 10 x64                          y        y/y    n        y    y     y\nMac OS X Mavericks 10.9.5 64-bit        n        y/y    n        y    y     y\nMac OS X Yosemite 10.10.5 64-bit        n        y/y    n        y    y     y\nMac OS X El Capitan 10.11.6 64-bit      n        y/y    n        y    y     y\nMac OS Sierra 10.12.6 64-bit            n        y/y    n        y    y     y\nCentOS 7.2 Linux 2.6.32 x86_64 PGI      n        y/y    n        y    y     y\nCentOS 7.2 Linux 2.6.32 x86_64 GNU      y        y/y    y        y    y     y\nCentOS 7.2 Linux 2.6.32 x86_64 Intel    n        y/y    n        y    y     y\nLinux 2.6.32-573.18.1.el6.ppc64         n        y/y    n        y    y     y\n\n\nPlatform                                 Shared  Shared    Shared    Thread-\n                                         C libs  F90 libs  C++ libs  safe\nSolaris2.11 32-bit                         y       y         y         y\nSolaris2.11 64-bit                         y       y         y         y\nWindows 7                                  y       y         y         y\nWindows 7 x64                              y       y         y         y\nWindows 7 Cygwin                           n       n         n         y\nWindows 7 x64 Cygwin                       n       n         n         y\nWindows 10                                 y       y         y         y\nWindows 10 x64                             y       y         y         y\nMac OS X Mavericks 10.9.5 64-bit           y       n         y         y\nMac OS X Yosemite 10.10.5 64-bit           y       n         y         y\nMac OS X El Capitan 10.11.6 64-bit         y       n         y         y\nMac OS Sierra 10.12.6 64-bit               y       n         y         y\nCentOS 7.2 Linux 2.6.32 x86_64 PGI         y       y         y         n\nCentOS 7.2 Linux 2.6.32 x86_64 GNU         y       y         y         y\nCentOS 7.2 Linux 2.6.32 x86_64 Intel       y       y         y         n\nLinux 2.6.32-573.18.1.el6.ppc64            y       y         y         n\n\nCompiler versions for each platform are listed in the preceding\n\"Supported Platforms\" table.\n\n\nMore Tested Platforms\n=====================\nThe following platforms are not supported but have been tested for this release.\n\n    Linux 2.6.32-573.22.1.el6    GNU C (gcc), Fortran (gfortran), C++ (g++)\n    #1 SMP x86_64 GNU/Linux       compilers:\n    (mayll/platypus)                 Version 4.4.7 20120313\n                                     Version 4.9.3, 5.3.0, 6.2.0\n                                  PGI C, Fortran, C++ for 64-bit target on\n                                  x86-64;\n                                     Version 17.10-0\n                                  Intel(R) C (icc), C++ (icpc), Fortran (icc)\n                                  compilers:\n                                     Version 17.0.4.196 Build 20170411\n                                  MPICH 3.1.4 compiled with GCC 4.9.3\n\n    Linux 3.10.0-327.18.2.el7     GNU C (gcc) and C++ (g++) compilers\n    #1 SMP x86_64 GNU/Linux          Version 4.8.5 20150623 (Red Hat 4.8.5-4)\n    (jelly)                       with NAG Fortran Compiler Release 6.1(Tozai)\n                                  GCC Version 7.1.0\n                                  OpenMPI 3.0.0-GCC-7.2.0-2.29,\n                                     3.1.0-GCC-7.2.0-2.29\n                                  Intel(R) C (icc) and C++ (icpc) compilers\n                                     Version 17.0.0.098 Build 20160721\n                                  with NAG Fortran Compiler Release 6.1(Tozai)\n\n    Linux 3.10.0-327.10.1.el7     MPICH 3.2 compiled with GCC 5.3.0\n    #1 SMP x86_64 GNU/Linux\n    (moohan)\n\n    Linux 2.6.32-573.18.1.el6.ppc64  MPICH mpich 3.1.4 compiled with\n    #1 SMP ppc64 GNU/Linux           IBM XL C/C++ for Linux, V13.1\n    (ostrich)                        and IBM XL Fortran for Linux, V15.1\n\n    Debian 8.4 3.16.0-4-amd64 #1 SMP Debian 3.16.36-1 x86_64 GNU/Linux\n                                  gcc, g++ (Debian 4.9.2-10) 4.9.2\n                                  GNU Fortran (Debian 4.9.2-10) 4.9.2\n                                  (cmake and autotools)\n\n    Fedora 24  4.7.2-201.fc24.x86_64 #1 SMP x86_64 x86_64 x86_64 GNU/Linux\n                                  gcc, g++ (GCC) 6.1.1 20160621\n                                      (Red Hat 6.1.1-3)\n                                  GNU Fortran (GCC) 6.1.1 20160621\n                                      (Red Hat 6.1.1-3)\n                                  (cmake and autotools)\n\n    Ubuntu 16.04.1 4.4.0-38-generic #57-Ubuntu SMP x86_64 GNU/Linux\n                                  gcc, g++ (Ubuntu 5.4.0-6ubuntu1~16.04.2)\n                                      5.4.0 20160609\n                                  GNU Fortran (Ubuntu 5.4.0-6ubuntu1~16.04.2)\n                                      5.4.0 20160609\n                                  (cmake and autotools)\n\n\nKnown Problems\n==============\n\n    At present, metadata cache images may not be generated by parallel\n    applications.  Parallel applications can read files with metadata cache\n    images, but since this is a collective operation, a deadlock is possible\n    if one or more processes do not participate.\n\n    Three tests fail with OpenMPI 3.0.0/GCC-7.2.0-2.29:\n        testphdf5 (ecdsetw, selnone, cchunk1, cchunk3, cchunk4, and actualio)\n        t_shapesame (sscontig2)\n        t_pflush1/fails on exit\n    The first two tests fail attempting collective writes.\n\n    Known problems in previous releases can be found in the HISTORY*.txt files\n    in the HDF5 source. Please report any new problems found to\n    help@hdfgroup.org.\n\n\nCMake vs. Autotools installations\n=================================\nWhile both build systems produce similar results, there are differences.\nEach system produces the same set of folders on linux (only CMake works\non standard Windows); bin, include, lib and share. Autotools places the\nCOPYING and RELEASE.txt file in the root folder, CMake places them in\nthe share folder.\n\nThe bin folder contains the tools and the build scripts. Additionally, CMake\ncreates dynamic versions of the tools with the suffix \"-shared\". Autotools\ninstalls one set of tools depending on the \"--enable-shared\" configuration\noption.\n  build scripts\n  -------------\n  Autotools: h5c++, h5cc, h5fc\n  CMake: h5c++, h5cc, h5hlc++, h5hlcc\n\nThe include folder holds the header files and the fortran mod files. CMake\nplaces the fortran mod files into separate shared and static subfolders,\nwhile Autotools places one set of mod files into the include folder. Because\nCMake produces a tools library, the header files for tools will appear in\nthe include folder.\n\nThe lib folder contains the library files, and CMake adds the pkgconfig\nsubfolder with the hdf5*.pc files used by the bin/build scripts created by\nthe CMake build. CMake separates the C interface code from the fortran code by\ncreating C-stub libraries for each Fortran library. In addition, only CMake\ninstalls the tools library. The names of the szip libraries are different\nbetween the build systems.\n\nThe share folder will have the most differences because CMake builds include\na number of CMake specific files for support of CMake's find_package and support\nfor the HDF5 Examples CMake project.\n\n\n%%%%1.10.2%%%%\n\nHDF5 version 1.10.2 released on 2018-03-29\n================================================================================\n\n\nINTRODUCTION\n\nThis document describes the differences between this release and the previous\nHDF5 release. It contains information on the platforms tested and known\nproblems in this release. For more details check the HISTORY*.txt files in the\nHDF5 source.\n\nNote that documentation in the links below will be updated at the time of each\nfinal release.\n\nLinks to HDF5 documentation can be found on The HDF5 web page:\n\n     https://portal.hdfgroup.org/display/HDF5/HDF5\n\nThe official HDF5 releases can be obtained from:\n\n     https://www.hdfgroup.org/downloads/hdf5/\n\nChanges from Release to Release and New Features in the HDF5-1.10.x release series\ncan be found at:\n\n     https://portal.hdfgroup.org/display/HDF5/HDF5+Application+Developer%27s+Guide\n\nIf you have any questions or comments, please send them to the HDF Help Desk:\n\n     help@hdfgroup.org\n\n\nCONTENTS\n\n- New Features\n- Support for new platforms and languages\n- Bug Fixes since HDF5-1.10.1\n- Supported Platforms\n- Tested Configuration Features Summary\n- More Tested Platforms\n- Known Problems\n\n\nNew Features\n============\n\n    Configuration and Build Systems:\n    --------------------------------\n    - CMake builds\n    --------------\n\n      - Changed minimum CMake required version to 3.10.\n\n      This change removed the need to support a copy of the FindMPI.cmake module,\n      which has been removed, along with its subfolder in the config/cmake_ext_mod\n      location.\n\n      (ADB - 2018/03/09)\n\n      - Added pkg-config file generation\n\n      Added pkg-config file generation for the C, C++, HL, and HL C++ libraries.\n      In addition, builds on Linux will create h5cc, h5c++, h5hlcc, and h5hlc++ scripts in the bin\n      directory that use the pkg-config files. The scripts can be used to build HDF5 C and C++\n      applications (i.e, similar to the compiler scripts produced by the Autotools builds).\n\n      (ADB - 2018/03/08, HDFFV-4359)\n\n       - Refactored use of CMAKE_BUILD_TYPE for new variable, which understands\n      the type of generator in use.\n\n      Added new configuration macros to use new HDF_BUILD_TYPE variable. This\n      variable is set correctly for the type of generator being used for the build.\n\n      (ADB - 2018/01/08, HDFFV-10385, HDFFV-10296)\n\n    - Autotools builds\n    ------------------\n\n       - Removed version-specific gcc/gfortran flags for version 4.0 (inclusive)\n      and earlier.\n\n      The config/gnu-flags file, which is sourced as a part of the configure\n      process, adds version-specific flags for use when building HDF5. Most of\n      these flags control warnings and do not affect the final product.\n\n      Flags for older versions of the compiler were consolidated into the\n      common flags section. Moving these flags simplifies maintenance of\n      the file.\n\n      The upshot of this is that building with ancient versions of gcc\n      (<= 4.0) will possibly no longer work without hand-hacking the file\n      to remove the flags not understood by that version of the compiler.\n      Nothing should change when building with gcc >= 4.1.\n\n      (DER - 2017/05/31, HDFFV-9937)\n\n       - -fno-omit-frame-pointer was added when building with debugging symbols\n      enabled.\n\n      Debugging symbols can be enabled independently of the overall build\n      mode in both the autotools and CMake. This allows (limited) debugging\n      of optimized code. Since many debuggers rely on the frame pointer,\n      we've disabled this optimization when debugging symbols are requested\n      (e.g.: via building with --enable-symbols).\n\n      (DER - 2017/05/31, HDFFV-10226)\n\n\n    Library:\n    --------\n    - Added an enumerated value to H5F_libver_t for H5Pset_libver_bounds().\n\n      Currently, the library defines two values for H5F_libver_t and supports\n      only two pairs of (low, high) combinations as derived from these values.\n      Thus the bounds setting via H5Pset_libver_bounds() is rather restricted.\n\n      Added an enumerated value (H5F_LIBVER_V18) to H5F_libver_t and\n      H5Pset_libver_bounds() now supports five pairs of (low, high) combinations\n      as derived from these values.  This addition provides the user more\n      flexibility in setting bounds for object creation.\n\n      (VC - 2018/03/14)\n\n    - Added prefix option to VDS files.\n\n      Currently, VDS source files must be in the active directory to be\n      found by the virtual file. Adding the option of a prefix to be set\n      on the virtual file, using a data access property list (DAPL),\n      allows the source files to locate at an absolute or relative path\n      to the virtual file.\n      Private utility functions in H5D and H5L packages merged into single\n      function in H5F package.\n\n      New public APIs:\n            herr_t H5Pset_virtual_prefix(hid_t dapl_id, const char* prefix);\n            ssize_t H5Pget_virtual_prefix(hid_t dapl_id, char* prefix /*out*/, size_t size);\n      The prefix can also be set with an environment variable, HDF5_VDS_PREFIX.\n\n      (ADB - 2017/12/12, HDFFV-9724, HDFFV-10361)\n\n    - H5FDdriver_query() API call added to the C library.\n\n      This new library call allows the user to query a virtual file driver\n      (VFD) for the feature flags it supports (listed in H5FDpublic.h).\n      This can be useful to determine if a VFD supports SWMR, for example.\n\n      Note that some VFDs have feature flags that may only be present\n      after a file has been created or opened (e.g.: the core VFD will\n      have the H5FD_FEAT_POSIX_COMPAT_HANDLE flag set if the backing\n      store is switched on). Since the new API call queries a generic VFD\n      unassociated with a file, these flags will never be returned.\n\n      (DER - 2017/05/31, HDFFV-10215)\n\n    - H5FD_FEAT_DEFAULT_VFD_COMPATIBLE VFD feature flag added to the C library.\n\n      This new feature flag indicates that the VFD is compatible with the\n      default VFD. VFDs that set this flag create single files that follow\n      the canonical HDF5 file format.\n\n      (DER - 2017/05/31, HDFFV-10214)\n\n    - The H5I_REFERENCE value in the H5I_type_t enum (defined in H5Ipublic.h)\n      has been marked as deprecated.\n\n      This ID type value is not used in the C library. i.e.: There are no\n      hid_t values that are of ID type H5I_REFERENCE.\n\n      This enum value will be removed in a future major version of the library.\n      The code will remain unchanged in the HDF5 1.10.x  releases and branches.\n\n      (DER - 2017/04/05, HDFFV-10252)\n\n\n    Parallel Library:\n    -----------------\n    - Enabled compression for parallel applications.\n\n      With this release parallel applications can create and write compressed\n      datasets (or the datasets with the filters such as Fletcher32 applied).\n\n      (EIP - 2018/03/29)\n\n    - Addressed slow file close on some Lustre file systems.\n\n      Slow file close has been reported on some Lustre file systems.\n      While the ultimate cause is not understood fully, the proximate\n      cause appears to be long delays in MPI_File_set_size() calls at\n      file close and flush.\n\n      To minimize this problem pending a definitive diagnosis and fix,\n      PHDF5 has been modified to avoid MPI_File_set_size() calls when\n      possible.  This is done by comparing the library's EOA (End of\n      Allocation) with the file systems EOF, and skipping the\n      MPI_File_set_size() call if the two match.\n\n      (JRM - 2018/03/29)\n\n    - Optimized parallel open/location of the HDF5 super-block.\n\n      Previous releases of PHDF5 required all parallel ranks to\n      search for the HDF5 superblock signature when opening the\n      file. As this is accomplished more or less as a synchronous\n      operation, a large number of processes can experience a\n      slowdown in the file open due to filesystem contention.\n\n      As a first step in improving the startup/file-open performance,\n      we allow MPI rank 0 of the associated MPI communicator to locate\n      the base offset of the super-block and then broadcast that result\n      to the remaining ranks in the parallel group.  Note that this\n      approach is utilized ONLY during file opens which employ the MPIO\n      file driver in HDF5 by previously having called H5Pset_fapl_mpio().\n\n      HDF5 parallel file operations which do not employ multiple ranks\n      e.g. specifiying MPI_COMM_SELF (whose MPI_Comm_size == 1)\n      as opposed to MPI_COMM_WORLD, will not be affected by this\n      optimization.  Conversely, parallel file operations on subgroups\n      of MPI_COMM_WORLD are allowed to be run in parallel with each\n      subgroup operating as an independant collection of processes.\n\n      (RAW - 2017/10/10, HDFFV-10294)\n\n    - Added large (>2GB)  MPI-IO transfers.\n\n      Previous releases of PHDF5 would fail when attempting to\n      read or write greater than 2GB of data in a single IO operation.\n      This issue stems principally from an MPI API whose definitions\n      utilize 32 bit integers to describe the number of data elements\n      and datatype that MPI should use to effect a data transfer.\n      Historically, HDF5 has invoked MPI-IO with the number of\n      elements in a contiguous buffer represented as the length\n      of that buffer in bytes.\n\n      Resolving the issue and thus enabling larger MPI-IO transfers\n      is accomplished first, by detecting when a user IO request would\n      exceed the 2GB limit as described above.  Once a transfer request\n      is identified as requiring special handling, PHDF5 now creates a\n      derived datatype consisting of a vector of fixed sized blocks\n      which is in turn wrapped within a single MPI_Type_struct to\n      contain the vector and any remaining data.   The newly created\n      datatype is then used in place of MPI_BYTE and can be used to\n      fulfill the original user request without encountering API\n      errors.\n\n      (RAW - 2017/09/10, HDFFV-8839)\n\n\n    C++ Library:\n    ------------\n    - The following C++ API wrappers have been added to the C++ Library:\n      + H5Lcreate_soft:\n        // Creates a soft link from link_name to target_name.\n        void link(const char *target_name, const char *link_name,...)\n        void link(const H5std_string& target_name,...)\n\n      + H5Lcreate_hard:\n        // Creates a hard link from new_name to curr_name.\n        void link(const char *curr_name, const Group& new_loc,...)\n        void link(const H5std_string& curr_name, const Group& new_loc,...)\n\n        // Creates a hard link from new_name to curr_name in same location.\n        void link(const char *curr_name, const hid_t same_loc,...)\n        void link(const H5std_string& curr_name, const hid_t same_loc,...)\n\n        Note: previous version of H5Location::link will be deprecated.\n\n      + H5Lcopy:\n        // Copy an object from a group of file to another.\n        void copyLink(const char *src_name, const Group& dst,...)\n        void copyLink(const H5std_string& src_name, const Group& dst,...)\n\n        // Copy an object from a group of file to the same location.\n        void copyLink(const char *src_name, const char *dst_name,...)\n        void copyLink(const H5std_string& src_name,...)\n\n      + H5Lmove:\n        // Rename an object in a group or file to a new location.\n        void moveLink(const char* src_name, const Group& dst,...)\n        void moveLink(const H5std_string& src_name, const Group& dst,...)\n\n        // Rename an object in a group or file to the same location.\n        void moveLink(const char* src_name, const char* dst_name,...)\n        void moveLink(const H5std_string& src_name,...)\n\n        Note: previous version H5Location::move will be deprecated.\n\n      + H5Ldelete:\n        // Removes the specified link from this location.\n        void unlink(const char *link_name,\n            const LinkAccPropList& lapl = LinkAccPropList::DEFAULT)\n        void unlink(const H5std_string& link_name,\n            const LinkAccPropList& lapl = LinkAccPropList::DEFAULT)\n\n        Note: additional parameter is added to previous H5Location::unlink.\n\n      + H5Tencode and H5Tdecode:\n        // Creates a binary object description of this datatype.\n        void DataType::encode() - C API H5Tencode()\n\n        // Returns the decoded type from the binary object description.\n        DataType::decode() - C API H5Tdecode()\n        ArrayType::decode() - C API H5Tdecode()\n        CompType::decode() - C API H5Tdecode()\n        DataType::decode() - C API H5Tdecode()\n        EnumType::decode() - C API H5Tdecode()\n        FloatType::decode() - C API H5Tdecode()\n        IntType::decode() - C API H5Tdecode()\n        StrType::decode() - C API H5Tdecode()\n        VarLenType::decode() - C API H5Tdecode()\n\n      + H5Lget_info:\n        // Returns the information of the named link.\n        H5L_info_t getLinkInfo(const H5std_string& link_name,...)\n\n      (BMR - 2018/03/11, HDFFV-10149)\n\n    - Added class LinkCreatPropList for link create property list.\n\n      (BMR - 2018/03/11, HDFFV-10149)\n\n    - Added overloaded functions H5Location::createGroup to take a link\n      creation property list.\n        Group createGroup(const char* name, const LinkCreatPropList& lcpl)\n        Group createGroup(const H5std_string& name, const LinkCreatPropList& lcpl)\n\n      (BMR - 2018/03/11, HDFFV-10149)\n\n    - A document is added to the HDF5 C++ API Reference Manual to show the\n      mapping from a C API to C++ wrappers.  It can be found from the main\n      page of the C++ API Reference Manual.\n\n      (BMR - 2017/10/17, HDFFV-10151)\n\n\n    Java Library:\n    ----------------\n    - Wrapper added for enabling the error stack.\n\n      H5error_off would disable the error stack reporting. In order\n      to re-enable the reporting, the error stack info needs to be\n      saved so that H5error_on can revert state.\n\n      (ADB - 2018/03/13, HDFFV-10412)\n\n    - Wrappers were added for the following C APIs:\n      H5Pset_evict_on_close\n      H5Pget_evict_on_close\n      H5Pset_chunk_opts\n      H5Pget_chunk_opts\n      H5Pset_efile_prefix\n      H5Pget_efile_prefix\n      H5Pset_virtual_prefix\n      H5Pget_virtual_prefix\n\n      (ADB - 2017/12/20)\n\n    - The H5I_REFERENCE value in the H5I_type_t enum (defined in H5Ipublic.h)\n      has been marked as deprectated.\n\n      JNI code which refers to this value will be removed in a future\n      major version of the library. The code will remain unchanged in the\n      1.10.x releases and branches.\n\n      See the C library section, above, for further information.\n\n      (HDFFV-10252, DER, 2017/04/05)\n\n\n    Tools:\n    ------\n    - h5diff has a new option to display error stack.\n\n      Updated h5diff with the --enable-error-stack argument, which\n      enables the display of the hdf5 error stack. This completes the\n      improvement to the main tools: h5copy, h5diff, h5dump, h5ls and\n      h5repack.\n\n      (ADB - 2017/08/30, HDFFV-9774)\n\n\nSupport for new platforms, languages and compilers.\n=======================================\n    - None\n\nBug Fixes since HDF5-1.10.1 release\n==================================\n\n    Library\n    -------\n    - The data read after a direct chunk write to a chunked dataset with\n      one chunk was incorrect.\n\n      The problem was due to the passing of a null dataset pointer to\n      the insert callback for the chunk index in the routine\n      H5D__chunk_direct_write() in H5Dchunk.c\n      The dataset was a single-chunked dataset which will use the\n      single chunk index when latest format was enabled on file creation.\n      The single chunk index was the only index that used this pointer\n      in the insert callback.\n\n      Passed the dataset pointer to the insert callback for the chunk\n      index in H5D__chunk_direct_write().\n\n      (VC - 2018/03/20, HDFFV-10425)\n\n    - Added public routine H5DOread_chunk to the high-level C library.\n\n      The patch for H5DOwrite_chunk() to write an entire chunk to the file\n      directly was contributed by GE Healthcare and integrated by The HDF Group\n      developers.\n\n      (VC - 2017/05/19, HDFFV-9934)\n\n    - Freeing of object header after failed checksum verification.\n\n      It was discovered that the object header (in H5Ocache.c) was not released properly\n      when the checksum verification failed and a re-load of the object\n      header was needed.\n\n      Freed the object header that failed the chksum verification only\n      after the new object header is reloaded, deserialized and set up.\n\n      (VC - 2018/03/14, HDFFV-10209)\n\n    - Updated H5Pset_evict_on_close in H5Pfapl.c\n\n      Changed the minor error number from H5E_CANTSET to H5E_UNSUPPORTED for\n      parallel library.\n\n      (ADB - 2018/03/06, HDFFV-10414)\n\n    - Fixed the problems with the utility function that could not handle lowercase\n      Windows drive letters.\n\n      Added call to upper function for drive letter.\n\n      (ADB - 2017/12/18, HDFFV-10307)\n\n    - Fixed H5Sencode() bug when the number of elements selected was > 2^32.\n\n      H5Sencode() incorrectly encodes dataspace selection with number of\n      elements exceeding 2^32.  When decoding such selection via H5Sdecode(),\n      the number of elements in the decoded dataspace is not the same as\n      what is encoded.  This problem exists for H5S_SEL_HYPER and\n      H5S_SEL_POINTS encoding.\n\n      The cause of the problem is due to the fact that the library uses 32 bits to\n      encode counts and block offsets for the selection.\n      The solution is to use the original 32 bit encodings if possible,\n      but use a different way to encode selection if more that 32 bits is needed.\n      See details in the RFC: H5Sencode/H5Sdecode Format Change i\n      https://bitbucket.hdfgroup.org/projects/HDFFV/repos/hdf5doc/browse/RFCs/HDF5_Library/H5SencodeFormatChange.\n\n      (VC - 2017/11/28, HDFFV-9947)\n\n    - Fixed filter plugin handling in H5PL.c and H5Z.c to not require i availability of\n      dependent libraries (e.g., szip or zlib).\n\n      It was discovered that the dynamic loading process used by\n      filter plugins had issues with library dependencies.\n\n      CMake build process changed to use LINK INTERFACE keywords, which\n      allowed HDF5 C library to make dependent libraries private. The\n      filter plugin libraries no longer require dependent libraries\n      (such as szip or zlib) to be available.\n\n      (ADB - 2017/11/16, HDFFV-10328)\n\n    - Fixed rare object header corruption bug.\n\n      In certain cases, such as when converting large attributes to dense\n      storage, an error could occur which would either fail an assertion or\n      cause file corruption. Fixed and added test.\n\n      (NAF - 2017/11/14, HDFFV-10274)\n\n    - Updated H5Zfilter_avail in H5Z.c.\n\n      The public function checked for plugins, while the private\n      function did not.\n\n      Modified H5Zfilter_avail and private function, H5Z_filter_avail.\n      Moved check for plugin from public to private function. Updated\n      H5P__set_filter due to change in H5Z_filter_avail. Updated tests.\n\n      (ADB - 2017/10/10, HDFFV-10297, HDFFV-10319)\n\n    - h5dump produced SEGFAULT when dumping corrypted file.\n\n      The behavior was due to the error in the internal function H5HL_offset_into().\n\n      (1) Fixed H5HL_offset_into() to return error when offset exceeds heap data\n          block size.\n      (2) Fixed other places in the library that call this routine to detect\n          error routine.\n\n      (VC - 2017/08/30, HDFFV-10216)\n\n    - Fixes for paged aggregation feature.\n\n      Skip test in test/fheap.c when:\n      (1) multi/split drivers and\n      (2) persisting free-space or using paged aggregation strategy\n\n      (VC, 2017/07/10)\n\n      Changes made based on RFC review comments:\n      (1) Added maximum value for file space page size\n      (2) Dropped check for page end metadata threshold\n      (3) Removed \"can_shrink\" and \"shrink\" callbacks for small section class\n\n      (VC - 2017/06/09)\n\n    - Fixed for infinite loop in H5VM_power2up().\n\n      The function H5VM_power2up() returns the next power of 2\n      for n. When n exceeds 2^63, it overflows and becomes 0 causing\n      the infinite looping.\n\n      The fix ensures that the function checks for n >= 2^63\n      and returns 0.\n\n      (VC - 2017/07/10, HDFFV-10217)\n\n    - Fixed for H5Ocopy doesn't work with open identifiers.\n\n      Changes made so that raw data for dataset objects are copied from\n      cached info when possible instead of flushing objects to file and\n      read them back in again.\n\n      (VC - 2017/07/05, HDFFV-7853)\n\n    - An uninitialized struct could cause a memory access error when using\n      variable-length or reference types in a compressed, chunked dataset.\n\n      A struct containing a callback function pointer and a pointer to some\n      associated data was used before initialization. This could cause a\n      memory access error and system crash. This could only occur under\n      unusual conditions when using variable-lenth and reference types in\n      a compressed, chunked dataset.\n\n      On recent versions of Visual Studio, when built in debug mode, the\n      debug heap will complain and cause a crash if the code in question\n      is executed (this will cause the objcopy test to fail).\n\n      (DER - 2017/11/21, HDFFV-10330)\n\n    - Fixed collective metadata writes on file close.\n\n      It was discovered that metadata was being written twice as part of\n      the parallel file close behavior, once independently and once\n      collectively.\n\n      A fix for this error was included as part of the parallel compression\n      feature but remained undocumented here.\n\n      (RAW - 2017/12/01, HDFFV-10272)\n\n    - If an HDF5 file contains a filter pipeline message with a 'number of\n      filters' field that exceeds the maximum number of allowed filters,\n      the error handling code will attempt to dereference a NULL pointer.\n\n      This issue was reported to The HDF Group as issue #CVE-2017-17505.\n          https://security-tracker.debian.org/tracker/CVE-2017-17505\n          https://cve.mitre.org/cgi-bin/cvename.cgi?name=3DCVE-2017-17505\n\n      NOTE: The HDF5 C library cannot produce such a file. This condition\n            should only occur in a corrupt (or deliberately altered) file\n            or a file created by third-party software.\n\n      This problem arose because the error handling code assumed that\n      the 'number of filters' field implied that a dynamic array of that\n      size had already been created and that the cleanup code should\n      iterate over that array and clean up each element's resources. If\n      an error occurred before the array has been allocated, this will\n      not be true.\n\n      This has been changed so that the number of filters is set to\n      zero on errors. Additionally, the filter array traversal in the\n      error handling code now requires that the filter array not be NULL.\n\n      (DER - 2018/02/06, HDFFV-10354)\n\n    - If an HDF5 file contains a filter pipeline message which contains\n      a 'number of filters' field that exceeds the actual number of\n      filters in the message, the HDF5 C library will read off the end of\n      the read buffer.\n\n      This issue was reported to The HDF Group as issue #CVE-2017-17506.\n          https://security-tracker.debian.org/tracker/CVE-2017-17506\n          https://cve.mitre.org/cgi-bin/cvename.cgi?name=3DCVE-2017-17506\n\n      NOTE: The HDF5 C library cannot produce such a file. This condition\n            should only occur in a corrupt (or deliberately altered) file\n            or a file created by third-party software.\n\n      The problem was fixed by passing the buffer size with the buffer\n      and ensuring that the pointer cannot be incremented off the end\n      of the buffer. A mismatch between the number of filters declared\n      and the actual number of filters will now invoke normal HDF5\n      error handling.\n\n      (DER - 2018/02/26, HDFFV-10355)\n\n    - If an HDF5 file contains a malformed compound datatype with a\n      suitably large offset, the type conversion code can run off\n      the end of the type conversion buffer, causing a segmentation\n      fault.\n\n      This issue was reported to The HDF Group as issue #CVE-2017-17507.\n          https://security-tracker.debian.org/tracker/CVE-2017-17506\n          https://cve.mitre.org/cgi-bin/cvename.cgi?name=3DCVE-2017-17506\n\n      NOTE: The HDF5 C library cannot produce such a file. This condition\n            should only occur in a corrupt (or deliberately altered) file\n            or a file created by third-party software.\n\n      THE HDF GROUP WILL NOT FIX THIS BUG AT THIS TIME\n\n      Fixing this problem would involve updating the publicly visible\n      H5T_conv_t function pointer typedef and versioning the API calls\n      which use it. We normally only modify the public API during\n      major releases, so this bug will not be fixed at this time.\n\n      (DER - 2018/02/26, HDFFV-10356)\n\n    - If an HDF5 file contains a malformed compound type which contains\n      a member of size zero, a division by zero error will occur while\n      processing the type.\n\n      This issue was reported to The HDF Group as issue #CVE-2017-17508.\n          https://security-tracker.debian.org/tracker/CVE-2017-17508\n          https://cve.mitre.org/cgi-bin/cvename.cgi?name=3DCVE-2017-17508\n\n      NOTE: The HDF5 C library cannot produce such a file. This condition\n            should only occur in a corrupt (or deliberately altered) file\n            or a file created by third-party software.\n\n      Checking for zero before dividing fixes the problem. Instead of the\n      division by zero, the normal HDF5 error handling is invoked.\n\n      (DER - 2018/02/26, HDFFV-10357)\n\n    - If an HDF5 file contains a malformed symbol table node that declares\n      it contains more symbols than it actually contains, the library\n      can run off the end of the metadata cache buffer while processing\n      the symbol table node.\n\n      This issue was reported to The HDF Group as issue #CVE-2017-17509.\n          https://security-tracker.debian.org/tracker/CVE-2017-17509\n          https://cve.mitre.org/cgi-bin/cvename.cgi?name=3DCVE-2017-17509\n\n      NOTE: The HDF5 C library cannot produce such a file. This condition\n            should only occur in a corrupt (or deliberately altered) file\n            or a file created by third-party software.\n\n      Performing bounds checks on the buffer while processing fixes the\n      problem. Instead of the segmentation fault, the normal HDF5 error\n      handling is invoked.\n\n      (DER - 2018/03/12, HDFFV-10358)\n\n    - Fixed permissions passed to open(2) on file create.\n\n      On Windows, the POSIX permissions passed to open(2) when creating files\n      were only incidentally correct. They are now set to the correct value of\n      (_S_IREAD | _S_IWRITE).\n\n      On other platforms, the permissions were set to a mix of 666, 644, and\n      000. They are now set uniformly to 666.\n\n      (DER - 2017/04/28, HDFFV-9877)\n\n    - The H5FD_FEAT_POSIX_COMPAT_HANDLE flag is no longer used to determine\n      if a virtual file driver (VFD) is compatible with SWMR.\n\n      Use of this VFD feature flag was not in line with the documentation in\n      the public H5FDpublic.h file. In particular, it was being used as a\n      proxy for determining if SWMR I/O is allowed. This is unecessary as we\n      already have a feature flag for this (H5FD_SUPPORTS_SWMR_IO).\n\n      (DER - 2017/05/31, HDFFV-10214)\n\n\n    Configuration\n    -------------\n    - CMake changes\n\n       - Updated CMake commands configuration.\n\n      A number of improvements were made to the CMake commands. Most\n      changes simplify usage or eliminate unused constructs. Also,\n      some changes support better cross-platform support.\n\n      (ADB - 2018/02/01, HDFFV-10398)\n\n       - Corrected usage of CMAKE_BUILD_TYPE variable.\n\n      The use of the CMAKE_BUILD_TYPE is incorrect for multi-config\n      generators (Visual Studio and XCode) and is optional for single\n      config generators. Created a new macro to check\n        GLOBAL PROPERTY -> GENERATOR_IS_MULTI_CONFIG\n      Created two new HDF variable, HDF_BUILD_TYPE and HDF_CFG_BUILD_TYPE.\n      Defaults for these variables is \"Release\".\n\n      (ADB - 2018/01/10, HDFFV-10385)\n\n       - Added replacement of fortran flags if using static CRT.\n\n      Added TARGET_STATIC_CRT_FLAGS call to HDFUseFortran.cmake file in\n      config/cmake_ext_mod folder.\n\n      (ADB - 2018/01/08, HDFFV-10334)\n\n\n       - The hdf5 library used shared szip and zlib, which needlessly required\n      applications to link with the same szip and zlib libraries.\n\n      Changed the target_link_libraries commands to use the static libs.\n      Removed improper link duplication of szip and zlib.\n      Adjusted the link dependencies and the link interface values of\n      the target_link_libraries commands.\n\n      (ADB - 2017/11/14, HDFFV-10329)\n\n    - CMake MPI\n\n      CMake implementation for MPI was problematic and would create incorrect\n      MPI library references in the hdf5 libraries.\n\n      Reworked the CMake MPI code to properly create CMake targets. Also merged\n      the latest CMake FindMPI.cmake changes to the local copy. This is necessary\n      until HDF changes the CMake minimum to 3.9 or greater.\n\n      (ADB - 2017/11/02, HDFFV-10321)\n\n    - Corrected FORTRAN_HAVE_C_LONG_DOUBLE processing in the autotools.\n\n      A bug in the autotools Fortran processing code always set the\n      FORTRAN_HAVE_C_LONG_DOUBLE variable to be true regardless of\n      whether or not a C long double type was present.\n\n      This would cause compilation failures on platforms where a C\n      long double type was not available and the Fortran wrappers\n      were being built.\n\n      (DER - 2017/07/05, HDFFV-10247)\n\n    - The deprecated --enable-production and --enable-debug configure options\n      failed to emit errors when passed an empty string\n      (e.g.: --enable-debug=\"\").\n\n      Due to the way we checked for these options being set, it was possible\n      to avoid the error message and continue configuration if an empty string\n      was passed to the option.\n\n      Any use of --enable-production or --enable-debug will now halt the\n      configuration step and emit a helpful error message\n      (use --enable-build-mode=debug|production instead).\n\n      (DER - 2017/07/05, HDFFV-10248)\n\n    - CMake\n\n      Too many commands for POST_BUILD step caused command line to be\n      too big on windows.\n\n      Changed foreach of copy command to use a custom command with the\n      use of the HDFTEST_COPY_FILE macro.\n\n      (ADB - 2017/07/12, HDFFV-10254)\n\n    - CMake test execution environment\n\n      The parallel HDF5 test: 't_pread' assumed the use of autotools\n      and the directory structure associated with that testing approach.\n      Modified the test code to check whether the 'h5jam' utility can be\n      found in the same directory as the test executable (which is\n      preferred directory structure utilized by cmake) and if found\n      will invoke the tool directly rather than utilizing a relative path.\n\n      (RAW - 2017/11/03, HDFFV-10318)\n\n    - Fortran compilation fails for xlf and CMake builds.\n\n      Fixed CMake shared library build for H5match_types and modules\n\n      (MSB - 2017/12/19, HDFFV-10363)\n\n    - Shared libraries fail test on OSX with Fortran enabled with CMake.\n\n      Fixed by removing the F77 use of EQUIVALENCE and COMMON, replaced\n      using MODULES. Updated CMake.\n\n      (MSB - 2017/12/07, HDFFV-10223)\n\n    - The bin/trace script now emits an error code on problems and autogen.sh\n      will fail if bin/trace fails.\n\n      The bin/trace script adds tracing functionality to public HDF5 API calls.\n      It is only of interest to developers who modify the HDF5 source code.\n      Previously, bin/trace just wrote an error message to stdout when it\n      encountered problems, so autogen.sh processing did not halt and a broken\n      version of the library could be built. The script will now return an\n      error code when it encounters problems, and autogen.sh will fail.\n\n      This only affects users who run autogen.sh to rebuild the Autotools files,\n      which is not necessary to build HDF5 from source in official releases of the\n      library. CMake users are unaffected as bin/trace is not run via CMake\n      at this time.\n\n      (DER - 2017/04/25, HDFFV-10178)\n\n    - FC_BASENAME was changed from gfortran40 to gfortran in a few places.\n\n      In the autotools, FC_BASENAME was set to gfortran40 in a few locations\n      (config/gnu-fflags and config/freebsd). This was probably a historical\n      artifact and did not seem to affect many users.\n\n      The value is now correctly set to gfortran.\n\n      (DER - 2017/05/26, HDFFV-10249)\n\n    - The ar flags were changed to -cr (was: -cru)\n\n      The autotools set the flags for ar to -cru by default. The -u flag,\n      which allows selective replacement of only the members which have\n      changed, raises warnings on some platforms, so the flags are now set to\n      -cr via AR_FLAGS in configure.ac. This causes the static library to\n      always be completely recreated from the object files on each build.\n\n      (DER - 2017/11/15, HDFFV-10428)\n\n\n    Fortran\n    --------\n    - Fixed compilation errors when using Intel 18 Fortran compilers\n      (MSB - 2017/11/3, HDFFV-10322)\n\n    Tools\n    -----\n    - h5clear\n\n      An enhancement to the tool in setting a file's stored EOA.\n\n      It was discovered that a crashed file's stored EOA in the superblock\n      was smaller than the actual file's EOF.  When the file was reopened\n      and closed, the library truncated the file to the stored EOA.\n\n      Added an option to the tool in setting the file's stored EOA in the\n      superblock to the maximum of (EOA, EOF) + increment.\n      An option was also added to print the file's EOA and EOF.\n\n      (VC - 2018/03/14, HDFFV-10360)\n\n    - h5repack\n\n      h5repack changes the chunk parameters when a change of layout is not\n      specified and a filter is applied.\n\n      HDFFV-10297, HDFFV-10319 reworked code for h5repack and h5diff code\n      in the tools library. The check for an existing layout was incorrectly\n      placed into an if block and not executed. The check was moved into\n      the normal path of the function.\n\n      (ADB - 2018/02/21, HDFFV-10412)\n\n    - h5dump\n\n      The tools library will hide the error stack during file open.\n\n      While this is preferable almost always, there are reasons to enable\n      display of the error stack when a tool will not open a file. Adding an\n      optional argument to the --enable-error-stack will provide this use case.\n      As an optional argument it will not affect the operation of the\n      --enable-error-stack. h5dump is the only tool to implement this change.\n\n      (ADB - 2018/02/15, HDFFV-10384)\n\n    - h5dump\n\n      h5dump would output an indented blank line in the filters section.\n\n      h5dump overused the h5tools_simple_prefix function, which is a\n      function intended to account for the data index (x,y,z) option.\n      Removed the function call for header information.\n\n      (ADB - 2018/01/25, HDFFV-10396)\n\n    - h5repack\n\n      h5repack incorrectly searched internal object table for name.\n\n      h5repack would search the table of objects for a name, if the\n      name did not match it tried to determine if the name without a\n      leading slash would match. The logic was flawed! The table\n      stored names(paths) without a leading slash and did a strstr\n      of the table path to the name.\n      The assumption was that if there was a difference of one then\n      it was a match, however \"pressure\" would match \"/pressure\" as\n      well as \"/pressure1\", \"/pressure2\", etc. Changed logic to remove\n      any leading slash and then do a full compare of the name.\n\n      (ADB - 2018/01/18, HDFFV-10393)\n\n    - h5repack\n\n      h5repack failed to handle command line parameters for customer filters.\n\n      User defined filter parameter conversions would fail when integers were\n      represented on the command line with character string\n      larger then 9 characters. Increased local variable array for storing\n      the current command line parameter to prevent buffer overflows.\n\n      (ADB - 2018/01/17, HDFFV-10392)\n\n    - h5diff\n\n      h5diff seg faulted if comparing VL strings against fixed strings.\n\n      Reworked solution for HDFFV-8625 and HDFFV-8639. Implemented the check\n      for string objects of same type in the diff_can_type function by\n      adding an if(tclass1 == H5T_STRING) block. This \"if block\" moves the\n      same check that was added for attributes to this function, which is\n      used by all object types. This function handles complex type structures.\n      Also added a new test file in h5diffgenttest for testing this issue\n      and removed the temporary files used in the test scripts.\n\n      (ADB - 2018/01/04, HDFFV-8745)\n\n    - h5repack\n\n      h5repack failed to copy a dataset with existing filter.\n\n      Reworked code for h5repack and h5diff code in the tools library. Added\n      improved error handling, cleanup of resources and checks of calls.\n      Modified H5Zfilter_avail and private function, H5Z_filter_avail.\n      Moved check for plugin from public to private function. Updated\n      H5P__set_filter due to change in H5Z_filter_avail. Updated tests.\n      Note, h5repack output display has changed to clarify the individual\n      steps of the repack process. The output indicates if an operation\n      applies to all objects. Lines with notation and no information\n      have been removed.\n\n      (ADB - 2017/10/10, HDFFV-10297, HDFFV-10319)\n\n    - h5repack\n\n      h5repack always set the User Defined filter flag to H5Z_FLAG_MANDATORY.\n\n      Added another parameter to the 'UD=' option to set the flag by default\n      to '0' or H5Z_FLAG_MANDATORY, the other choice is '1' or H5Z_FLAG_OPTIONAL.\n\n      (ADB - 2017/08/31, HDFFV-10269)\n\n    - h5ls\n\n      h5ls generated error on stack when it encountered a H5S_NULL\n      dataspace.\n\n      Adding checks for H5S_NULL before calling H5Sis_simple (located\n      in the h5tools_dump_mem function) fixed the issue.\n\n      (ADB - 2017/08/17, HDFFV-10188)\n\n    - h5repack\n\n      Added tests to h5repack.sh.in to verify options added for paged\n      aggregation work as expected.\n\n      (VC - 2017/08/03)\n\n    - h5dump\n\n      h5dump segfaulted on output of XML file.\n\n      Function that escape'd strings used the full buffer length\n      instead of just the length of the replacement string in a\n      strncpy call. Using the correct length fixed the issue.\n\n      (ADB - 2017/08/01, HDFFV-10256)\n\n    - h5diff\n\n      h5diff segfaulted on compare of a  NULL variable length string.\n\n      Improved h5diff compare of strings by adding a check for\n      NULL strings and setting the lengths to zero.\n\n      (ADB - 2017/07/25, HDFFV-10246)\n\n    - h5import\n\n      h5import crashed trying to import data from a subset of a dataset.\n\n      Improved h5import by adding the SUBSET keyword. h5import understands\n      to use the Count times the Block as the size of the dimensions.\n      Added INPUT_B_ORDER keyword to old-style configuration files.\n      The import from h5dump function expects the binary files to use native\n      types (FILE '-b' option) in the binary file.\n\n      (ADB - 2017/06/15, HDFFV-10219)\n\n    - h5repack\n\n      h5repack did not maintain the creation order flag of the root\n      group.\n\n      Improved h5repack by reading the creation order and applying the\n      flag to the new root group. Also added arguments to set the\n      order and index direction, which applies to the traversing of the\n      original file, on the command line.\n\n      (ADB - 2017/05/26, HDFFV-8611)\n\n    - h5diff\n\n      h5diff failed to account for strpad type and null terminators\n      of char strings. Also, h5diff failed to account for string length\n      differences and would give a different result depending on file\n      order in the command line.\n\n      Improved h5diff compare of strings and arrays by adding a check for\n      string lengths and if the strpad was null filled.\n\n      (ADB - 2017/05/18, HDFFV-9055, HDFFV-10128)\n\n    High-Level APIs:\n    ------\n    - H5DOwrite_chunk() problems when overwriting an existing chunk with\n      no filters enabled.\n\n      When overwriting chunks and no filters were being used, the library would\n      fail (when asserts are enabled, e.g. debug builds) or incorrectly\n      insert additional chunks instead of overwriting (when asserts are not\n      enabled, e.g. production builds).\n\n      This has been fixed and a test was added to the hl/test_dset_opt test.\n\n      (DER - 2017/05/11, HDFFV-10187)\n\n    C++ APIs\n    --------\n    - Removal of memory leaks.\n\n      A private function was inadvertently called, causing memory leaks.  This\n      is now fixed.\n\n      (BMR - 2018/03/12 - User's reported in email)\n\n    Testing\n    -------\n    - Memory for three variables in testphdf5's coll_write_test was malloced\n      but not freed, leaking memory when running the test.\n\n      The variables' memory is now freed.\n\n      (LRK - 2018/03/12, HDFFV-10397)\n\n    - Refactored the testpar/t_bigio.c test to include ALARM macros\n\n      Changed the test to include the ALARM_ON and ALARM_OFF macros which\n      are intended to prevent nightly test hangs that have been observed\n      with this particular parallel test example.  The code was also modified to\n      simplify status reporting (only from MPI rank 0) and additional\n      status checking added.\n\n      (RAW - 2017/11/08, HDFFV-10301)\n\n\nSupported Platforms\n===================\n\n    Linux 2.6.32-696.16.1.el6.ppc64 gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-18)\n    #1 SMP ppc64 GNU/Linux        g++ (GCC) 4.4.7 20120313 (Red Hat 4.4.7-18)\n    (ostrich)                     GNU Fortran (GCC) 4.4.7 20120313 (Red Hat 4.4.7-18)\n                                  IBM XL C/C++ V13.1\n                                  IBM XL Fortran V15.1\n\n    Linux 3.10.0-327.10.1.el7   GNU C (gcc), Fortran (gfortran), C++ (g++)\n    #1 SMP x86_64 GNU/Linux       compilers:\n    (kituo/moohan)                Version 4.8.5 20150623 (Red Hat 4.8.5-4)\n                                    Version 4.9.3, Version 5.2.0,\n                                  Intel(R) C (icc), C++ (icpc), Fortran (icc)\n                                  compilers:\n                                     Version 17.0.0.098 Build 20160721\n                                  MPICH 3.1.4 compiled with GCC 4.9.3\n\n    SunOS 5.11 32- and 64-bit     Sun C 5.12 SunOS_sparc\n    (emu)                         Sun Fortran 95 8.6 SunOS_sparc\n                                  Sun C++ 5.12 SunOS_sparc\n\n    Windows 7                     Visual Studio 2012 w/ Intel Fortran 15 (cmake)\n                                  Visual Studio 2013 w/ Intel Fortran 15 (cmake)\n                                  Visual Studio 2015 w/ Intel Fortran 16 (cmake)\n\n    Windows 7 x64                 Visual Studio 2012 w/ Intel Fortran 15 (cmake)\n                                  Visual Studio 2013 w/ Intel Fortran 15 (cmake)\n                                  Visual Studio 2015 w/ Intel Fortran 16 (cmake)\n                                  Visual Studio 2015 w/ Intel C, Fortran 2017 (cmake)\n                                  Visual Studio 2015 w/ MSMPI 8 (cmake)\n                                  Cygwin(CYGWIN_NT-6.1 2.8.0(0.309/5/3)\n                                      gcc and gfortran compilers (GCC 5.4.0)\n                                      (cmake and autotools)\n\n    Windows 10                    Visual Studio 2015 w/ Intel Fortran 16 (cmake)\n                                  Cygwin(CYGWIN_NT-6.1 2.8.0(0.309/5/3)\n                                      gcc and gfortran compilers (GCC 5.4.0)\n                                      (cmake and autotools)\n\n    Windows 10 x64                Visual Studio 2015 w/ Intel Fortran 16 (cmake)\n\n    Mac OS X Yosemite 10.10.5     Apple clang/clang++ version 6.1 from Xcode 7.0\n    64-bit                        gfortran GNU Fortran (GCC) 4.9.2\n    (osx1010dev/osx1010test)      Intel icc/icpc/ifort version 15.0.3\n\n    Mac OS X El Capitan 10.11.6   Apple clang/clang++ version 7.3.0 from Xcode 7.3\n    64-bit                        gfortran GNU Fortran (GCC) 5.2.0\n    (osx1011dev/osx1011test)      Intel icc/icpc/ifort version 16.0.2\n\n    Mac OS Sierra 10.12.6         Apple LLVM version 8.1.0 (clang/clang++-802.0.42)\n    64-bit                        gfortran GNU Fortran (GCC) 7.1.0\n    (swallow/kite)                Intel icc/icpc/ifort version 17.0.2\n\n\nTested Configuration Features Summary\n=====================================\n\n    In the tables below\n          y   = tested\n          n   = not tested in this release\n          C   = Cluster\n          W   = Workstation\n          x   = not working in this release\n          dna = does not apply\n          ( ) = footnote appears below second table\n          <blank> = testing incomplete on this feature or platform\n\nPlatform                              C         F90/   F90      C++  zlib  SZIP\n                                      parallel  F2003  parallel\nSolaris2.11 32-bit                      n        y/y    n        y    y     y\nSolaris2.11 64-bit                      n        y/n    n        y    y     y\nWindows 7                               y        y/y    n        y    y     y\nWindows 7 x64                           y        y/y    y        y    y     y\nWindows 7 Cygwin                        n        y/n    n        y    y     y\nWindows 7 x64 Cygwin                    n        y/n    n        y    y     y\nWindows 10                              y        y/y    n        y    y     y\nWindows 10 x64                          y        y/y    n        y    y     y\nMac OS X Mountain Lion 10.8.5 64-bit    n        y/y    n        y    y     y\nMac OS X Mavericks 10.9.5 64-bit        n        y/y    n        y    y     y\nMac OS X Yosemite 10.10.5 64-bit        n        y/y    n        y    y     y\nMac OS X El Capitan 10.11.6 64-bit      n        y/y    n        y    y     y\nCentOS 7.2 Linux 2.6.32 x86_64 PGI      n        y/y    n        y    y     y\nCentOS 7.2 Linux 2.6.32 x86_64 GNU      y        y/y    y        y    y     y\nCentOS 7.2 Linux 2.6.32 x86_64 Intel    n        y/y    n        y    y     y\nLinux 2.6.32-573.18.1.el6.ppc64         n        y/y    n        y    y     y\n\n\nPlatform                                 Shared  Shared    Shared    Thread-\n                                         C libs  F90 libs  C++ libs  safe\nSolaris2.11 32-bit                         y       y         y         y\nSolaris2.11 64-bit                         y       y         y         y\nWindows 7                                  y       y         y         y\nWindows 7 x64                              y       y         y         y\nWindows 7 Cygwin                           n       n         n         y\nWindows 7 x64 Cygwin                       n       n         n         y\nWindows 10                                 y       y         y         y\nWindows 10 x64                             y       y         y         y\nMac OS X Mountain Lion 10.8.5 64-bit       y       n         y         y\nMac OS X Mavericks 10.9.5 64-bit           y       n         y         y\nMac OS X Yosemite 10.10.5 64-bit           y       n         y         y\nMac OS X El Capitan 10.11.6 64-bit         y       n         y         y\nCentOS 7.2 Linux 2.6.32 x86_64 PGI         y       y         y         n\nCentOS 7.2 Linux 2.6.32 x86_64 GNU         y       y         y         y\nCentOS 7.2 Linux 2.6.32 x86_64 Intel       y       y         y         n\nLinux 2.6.32-573.18.1.el6.ppc64            y       y         y         n\n\nCompiler versions for each platform are listed in the preceding\n\"Supported Platforms\" table.\n\n\nMore Tested Platforms\n=====================\nThe following platforms are not supported but have been tested for this release.\n\n    Linux 2.6.32-573.22.1.el6    GNU C (gcc), Fortran (gfortran), C++ (g++)\n    #1 SMP x86_64 GNU/Linux       compilers:\n    (mayll/platypus)                 Version 4.4.7 20120313\n                                     Version 4.9.3, 5.3.0, 6.2.0\n                                  PGI C, Fortran, C++ for 64-bit target on\n                                  x86-64;\n                                      Version 17.10-0\n                                  Intel(R) C (icc), C++ (icpc), Fortran (icc)\n                                  compilers:\n                                     Version 17.0.4.196 Build 20170411\n                                  MPICH 3.1.4 compiled with GCC 4.9.3\n\n    Linux 3.10.0-327.18.2.el7     GNU C (gcc) and C++ (g++) compilers\n    #1 SMP x86_64 GNU/Linux          Version 4.8.5 20150623 (Red Hat 4.8.5-4)\n    (jelly)                       with NAG Fortran Compiler Release 6.1(Tozai)\n                                  GCC Version 7.1.0\n                                  OpenMPI 3.0.0-GCC-7.2.0-2.29\n                                  Intel(R) C (icc) and C++ (icpc) compilers\n                                     Version 17.0.0.098 Build 20160721\n                                  with NAG Fortran Compiler Release 6.1(Tozai)\n\n    Linux 3.10.0-327.10.1.el7     MPICH 3.2 compiled with GCC 5.3.0\n    #1 SMP x86_64 GNU/Linux\n    (moohan)\n\n    Linux 2.6.32-573.18.1.el6.ppc64  MPICH mpich 3.1.4 compiled with\n    #1 SMP ppc64 GNU/Linux           IBM XL C/C++ for Linux, V13.1\n    (ostrich)                        and IBM XL Fortran for Linux, V15.1\n\n    Debian 8.4 3.16.0-4-amd64 #1 SMP Debian 3.16.36-1 x86_64 GNU/Linux\n                                  gcc, g++ (Debian 4.9.2-10) 4.9.2\n                                  GNU Fortran (Debian 4.9.2-10) 4.9.2\n                                  (cmake and autotools)\n\n    Fedora 24  4.7.2-201.fc24.x86_64 #1 SMP x86_64 x86_64 x86_64 GNU/Linux\n                                  gcc, g++ (GCC) 6.1.1 20160621\n                                      (Red Hat 6.1.1-3)\n                                  GNU Fortran (GCC) 6.1.1 20160621\n                                      (Red Hat 6.1.1-3)\n                                  (cmake and autotools)\n\n    Ubuntu 16.04.1 4.4.0-38-generic #57-Ubuntu SMP x86_64 GNU/Linux\n                                  gcc, g++ (Ubuntu 5.4.0-6ubuntu1~16.04.2)\n                                      5.4.0 20160609\n                                  GNU Fortran (Ubuntu 5.4.0-6ubuntu1~16.04.2)\n                                      5.4.0 20160609\n                                  (cmake and autotools)\n\n\nKnown Problems\n==============\n\n    At present, metadata cache images may not be generated by parallel\n    applications.  Parallel applications can read files with metadata cache\n    images, but since this is a collective operation, a deadlock is possible\n    if one or more processes do not participate.\n\n    Three tests fail with OpenMPI 3.0.0/GCC-7.2.0-2.29:\n        testphdf5 (ecdsetw, selnone, cchunk1, cchunk3, cchunk4, and actualio)\n        t_shapesame (sscontig2)\n        t_pflush1/fails on exit\n    The first two tests fail attempting collective writes.\n\n    Known problems in previous releases can be found in the HISTORY*.txt files\n    in the HDF5 source. Please report any new problems found to\n    help@hdfgroup.org.\n\n\n%%%%1.10.1%%%%\n\nHDF5 version 1.10.1 released on 2017-04-27\n================================================================================\n\nINTRODUCTION\n\nThis document describes the differences between HDF5-1.10.0-patch1 and\nHDF5 1.10.1, and contains information on the platforms tested and known\nproblems in HDF5-1.10.1. For more details check the HISTORY*.txt files\nin the HDF5 source.\n\nLinks to HDF5 1.10.1 source code, documentation, and additional materials can\nbe found on The HDF5 web page at:\n\n     https://support.hdfgroup.org/HDF5/\n\nThe HDF5 1.10.1 release can be obtained from:\n\n     https://support.hdfgroup.org/HDF5/release/obtain5.html\n\nUser documentation for the snapshot can be accessed directly at this location:\n\n     https://support.hdfgroup.org/HDF5/doc/\n\nNew features in the HDF5-1.10.x release series, including brief general\ndescriptions of some new and modified APIs, are described in the \"New Features\nin HDF5 Release 1.10\" document:\n\n     https://support.hdfgroup.org/HDF5/docNewFeatures/index.html\n\nAll new and modified APIs are listed in detail in the \"HDF5 Software Changes\nfrom Release to Release\" document, in the section \"Release 10.1 (current\nrelease) versus Release 1.10.0\n\n     https://support.hdfgroup.org/HDF5/doc/ADGuide/Changes.html\n\nIf you have any questions or comments, please send them to the HDF Help Desk:\n\n    help@hdfgroup.org\n\n\nCONTENTS\n\n- Major New Features Introduced in HDF5 1.10.1\n- Other New Features and Enhancements\n- Support for New Platforms, Languages, and Compilers\n- Bug Fixes since HDF5-1.10.0-patch1\n- Supported Platforms\n- Tested Configuration Features Summary\n- More Tested Platforms\n- Known Problems\n\n\nMajor New Features Introduced in HDF5 1.10.1\n============================================\n\nFor links to the RFCs and documentation in this section please view\nhttps://support.hdfgroup.org/HDF5/docNewFeatures in a web browser.\n\n________________________________________\nMetadata Cache Image\n________________________________________\n\n    HDF5 metadata is typically small, and scattered throughout the HDF5 file.\n    This can affect performance, particularly on large HPC systems. The\n    Metadata Cache Image feature can improve performance by writing the\n    metadata cache in a single block on file close, and then populating the\n    cache with the contents of this block on file open, thus avoiding the many\n    small I/O operations that would otherwise be required on file open and\n    close. See the RFC for complete details regarding this feature. Also,\n    see the Fine Tuning the Metadata Cache documentation.\n\n    At present, metadata cache images may not be generated by parallel\n    applications.  Parallel applications can read files with metadata cache\n    images, but since this is a collective operation, a deadlock is possible\n    if one or more processes do not participate.\n\n________________________________________\nMetadata Cache Evict on Close\n________________________________________\n\n    The HDF5 library's metadata cache is fairly conservative about holding on\n    to HDF5 object metadata (object headers, chunk index structures, etc.),\n    which can cause the cache size to grow, resulting in memory pressure on\n    an application or system. The \"evict on close\" property will cause all\n    metadata for an object to be evicted from the cache as long as metadata\n    is not referenced from any other open object. See the Fine Tuning the\n    Metadata Cache documentation for information on the APIs.\n\n    At present, evict on close is disabled in parallel builds.\n\n________________________________________\nPaged Aggregation\n________________________________________\n\n    The current HDF5 file space allocation accumulates small pieces of metadata\n    and raw data in aggregator blocks which are not page aligned and vary\n    widely in sizes. The paged aggregation feature was implemented to provide\n    efficient paged access of these small pieces of metadata and raw data.\n    See the RFC for details. Also, see the File Space Management documentation.\n\n________________________________________\nPage Buffering\n________________________________________\n\n    Small and random I/O accesses on parallel file systems result in poor\n    performance for applications. Page buffering in conjunction with paged\n    aggregation can improve performance by giving an application control of\n    minimizing HDF5 I/O requests to a specific granularity and alignment.\n    See the RFC for details. Also, see the Page Buffering documentation.\n\n    At present, page buffering is disabled in parallel builds.\n\n\n\nOther New Features and Enhancements\n===================================\n\n    Library\n    -------\n    - Added a mechanism for disabling the SWMR file locking scheme.\n\n      The file locking calls used in HDF5 1.10.0 (including patch1)\n      will fail when the underlying file system does not support file\n      locking or where locks have been disabled. To disable all file\n      locking operations, an environment variable named\n      HDF5_USE_FILE_LOCKING can be set to the five-character string\n      'FALSE'. This does not fundamentally change HDF5 library\n      operation (aside from initial file open/create, SWMR is lock-free),\n      but users will have to be more careful about opening files\n      to avoid problematic access patterns (i.e.: multiple writers)\n      that the file locking was designed to prevent.\n\n      Additionally, the error message that is emitted when file lock\n      operations set errno to ENOSYS (typical when file locking has been\n      disabled) has been updated to describe the problem and potential\n      resolution better.\n\n      (DER, 2016/10/26, HDFFV-9918)\n\n    - The return type of H5Pget_driver_info() has been changed from void *\n      to const void *.\n\n      The pointer returned by this function points to internal library\n      memory and should not be freed by the user.\n\n      (DER, 2016/11/04, HDFFV-10017)\n\n    - The direct I/O VFD has been removed from the list of VFDs that\n      support SWMR.\n\n      This configuration was never officially tested and several SWMR\n      tests fail when this VFD is set.\n\n      (DER, 2016/11/03, HDFFV-10169)\n\n    Configuration:\n    --------------\n    - The minimum version of CMake required to build HDF5 is now 3.2.2.\n\n      (ADB, 2017/01/10)\n\n    - An --enable/disable-developer-warnings option has been added to\n      configure.\n\n      This disables warnings that do not indicate poor code quality such\n      as -Winline and gcc's -Wsuggest-attribute. Developer warnings are\n      disabled by default.\n\n      (DER, 2017/01/10)\n\n    - A bin/restore.sh script was added that reverts autogen.sh processing.\n\n      (DER, 2016/11/08)\n\n    - CMake: Added NAMESPACE hdf5:: to package configuration files to allow\n      projects using installed HDF5 binaries built with CMake to link with\n      them without specifying the HDF5 library location via IMPORTED_LOCATION.\n\n      (ABD, 2016/10/17, HDFFV-10003)\n\n    - CMake: Changed the CTEST_BUILD_CONFIGURATION option to\n      CTEST_CONFIGURATION_TYPE as recommended by the CMake documentation.\n\n      (ABD, 2016/10/17, HDFFV-9971)\n\n\n    Fortran Library:\n    ----------------\n\n    - The HDF5 Fortran library can now be compiled with the NAG compiler.\n\n      (MSB, 2017/2/10, HDFFV-9973)\n\n\n    C++ Library:\n    ------------\n\n    - The following C++ API wrappers have been added to the C++ Library:\n\n        // Sets/Gets the strategy and the threshold value that the library\n        // will employ in managing file space.\n        FileCreatPropList::setFileSpaceStrategy - H5Pset_file_space_strategy\n        FileCreatPropList::getFileSpaceStrategy - H5Pget_file_space_strategy\n\n        // Sets/Gets the file space page size for paged aggregation.\n        FileCreatPropList::setFileSpacePagesize - H5Pset_file_space_page_size\n        FileCreatPropList::getFileSpacePagesize - H5Pget_file_space_page_size\n\n        // Checks if the given ID is valid.\n        IdComponent::isValid - H5Iis_valid\n\n        // Sets/Gets the number of soft or user-defined links that can be\n        // traversed before a failure occurs.\n        LinkAccPropList::setNumLinks - H5Pset_nlinks\n        LinkAccPropList::getNumLinks - H5Pget_nlinks\n\n        // Returns a copy of the creation property list of a datatype.\n        DataType::getCreatePlist - H5Tget_create_plist\n\n        // Opens/Closes an object within a group or a file, regardless of object\n        // type\n        Group::getObjId - H5Oopen\n        Group::closeObjId - H5Oclose\n\n        // Maps elements of a virtual dataset to elements of the source dataset.\n        DSetCreatPropList::setVirtual - H5Pset_virtual\n\n        // Gets general information about this file.\n        H5File::getFileInfo - H5Fget_info2\n\n        // Returns the number of members in a type.\n        IdComponent::getNumMembers - H5Inmembers\n\n        // Determines if an element type exists.\n        IdComponent::typeExists - H5Itype_exists\n\n        // Determines if an object exists.\n        H5Location::exists - H5Lexists.\n\n        // Returns the header version of an HDF5 object.\n        H5Object::objVersion - H5Oget_info for version\n\n      (BMR, 2017/03/20, HDFFV-10004, HDFFV-10139, HDFFV-10145)\n\n    - New exception: ObjHeaderIException for H5O interface.\n\n      (BMR, 2017/03/15, HDFFV-10145)\n\n    - New class LinkAccPropList for link access property list, to be used by\n      wrappers of H5Lexists.\n\n      (BMR, 2017/01/04, HDFFV-10145)\n\n    - New constructors to open datatypes in ArrayType, CompType, DataType,\n      EnumType, FloatType, IntType, StrType, and VarLenType.\n\n      (BMR, 2016/12/26, HDFFV-10056)\n\n    - New member functions:\n\n        DSetCreatPropList::setNbit() to setup N-bit compression for a dataset.\n\n        ArrayType::getArrayNDims() const\n        ArrayType::getArrayDims() const\n        both to replace the non-const versions.\n\n      (BMR, 2016/04/25, HDFFV-8623, HDFFV-9725)\n\n\n    Tools:\n    ------\n     - The following options have been added to h5clear:\n       -s: clear the status_flags field in the file's superblock\n       -m: Remove the metadata cache image from the file\n\n       (QAK, 2017/03/22, PR#361)\n\n\n    High-Level APIs:\n    ---------------\n     - Added New Fortran 2003 API for h5tbmake_table_f.\n\n       (MSB, 2017/02/10, HDFFV-8486)\n\n\n\nSupport for New Platforms, Languages, and Compilers\n===================================================\n\n    - Added NAG compiler\n\n\n\nBug Fixes since HDF5-1.10.0-patch1 release\n==================================\n\n    Library\n    -------\n    - Outdated data structure was used in H5D_CHUNK_DEBUG blocks, causing\n      compilation errors when H5D_CHUNK_DEBUG was defined.  This is fixed.\n\n      (BMR, 2017/04/04, HDFFV-8089)\n\n    - SWMR implementation in the HDF5 1.10.0 and 1.10.0-patch1 releases has a\n      broken metadata flush dependency that manifested itself with the following\n      error at the end of the HDF5 error stack:\n\n      H5Dint.c line 846 in H5D__swmr_setup(): dataspace chunk index must be 0\n      for SWMR access, chunkno = 1\n      major: Dataset\n      minor: Bad value\n\n      It was also reported at https://github.com/areaDetector/ADCore/issues/203\n\n      The flush dependency is fixed in this release.\n\n    - Changed the plugins dlopen option from RTLD_NOW to RTLD_LAZY\n\n      (ABD, 2016/12/12, PR#201)\n\n    - A number of issues were fixed when reading/writing from/to corrupted\n      files to ensure that the library fails gracefully in these cases:\n\n      * Writing to a corrupted file that has an object message which is\n        incorrectly marked as sharable on disk results in a buffer overflow /\n        invalid write instead of a clean error message.\n\n      * Decoding data from a corrupted file with a dataset encoded with the\n        H5Z_NBIT decoding can result in a code execution vulnerability under\n        the context of the application using the HDF5 library.\n\n      * When decoding an array datatype from a corrupted file, the HDF5 library\n        fails to return an error in production if the number of dimensions\n        decoded is greater than the maximum rank.\n\n      * When decoding an \"old style\" array datatype from a corrupted file, the\n        HDF5 library fails to return an error in production if the number of\n        dimensions decoded is greater than the maximum rank.\n\n      (NAF, 2016/10/06, HDFFV-9950, HDFFV-9951, HDFFV-9992, HDFFV-9993)\n\n    - Fixed an error that would occur when copying an object with an attribute\n      which is a compound datatype consisting of a variable length string.\n\n      (VC, 2016/08/24, HDFFV-7991)\n\n    - H5DOappend will no longer fail if a dataset has no append callback\n      registered.\n\n      (VC, 2016/08/14, HDFFV-9960)\n\n    - Fixed an issue where H5Pset_alignment could result in misaligned blocks\n      with some input combinations, causing an assertion failure in debug mode.\n\n      (NAF, 2016/08/11, HDFFV-9948)\n\n    - Fixed a problem where a plugin compiled into a DLL in the default plugin\n      directory could not be found by the HDF5 library at runtime on Windows\n      when the HDF5_PLUGIN_PATH environment variable was not set.\n\n      (ABD, 2016/08/01, HDFFV-9706)\n\n    - Fixed an error that would occur when calling H5Adelete on an attribute\n      which is attached to an externally linked object in the target file and\n      whose datatype is a committed datatype in the main file.\n\n      (VC, 2016/07/06, HDFFV-9940)\n\n    - (a) Throw an error instead of assertion when v1 btree level hits the 1\n          byte limit.\n      (b) Modifications to better handle error recovery when conversion by\n          h5format_convert fails.\n\n      (VC, 2016/05/29, HDFFV-9434)\n\n    - Fixed a memory leak where an array used by the library to track SWMR\n      read retries was unfreed.\n\n      The leaked memory was small (on the order of a few tens of ints) and\n      allocated per-file. The memory was allocated (and lost) only when a\n      file was opened for SWMR access.\n\n      (DER, 2016/04/27, HDFFV-9786)\n\n    - Fixed a memory leak that could occur when opening a file for the first\n      time (including creating) and the call fails.\n\n      This occurred when the file-driver-specific info was not cleaned up.\n      The amount of memory leaked varied with the file driver, but would\n      normally be less than 1 kB.\n\n      (DER, 2016/12/06, HDFFV-10168)\n\n    - Fixed a failure in collective metadata writes.\n\n      This failure only appeared when collective metadata writes\n      were enabled (via H5Pset_coll_metadata_write()).\n\n      (JRM, 2017/04/10, HDFFV-10055)\n\n\n    Parallel Library\n    ----------------\n    - Fixed a bug that could occur when allocating a chunked dataset in parallel\n      with an alignment set and an alignment threshold greater than the chunk\n      size but less than or equal to the raw data aggregator size.\n\n      (NAF, 2016/08/11, HDFFV-9969)\n\n\n    Configuration\n    -------------\n    - Configuration will check for the strtoll and strtoull functions\n      before using alternatives\n\n      (ABD, 2017/03/17, PR#340)\n\n    - CMake uses a Windows pdb directory variable if available and\n      will generate both static and shared pdb files.\n\n      (ABD, 2017/02/06, HDFFV-9875)\n\n    - CMake now builds shared versions of tools.\n\n      (ABD, 2017/02/01, HDFFV-10123)\n\n    - Makefiles and test scripts have been updated to correctly remove files\n      created when running \"make check\" and to avoid removing any files under\n      source control.  In-source builds followed by \"make clean\" and \"make\n      distclean\" should result in the original source files.\n      (LRK, 2017/01/17, HDFFV-10099)\n\n    - The tools directory has been divided into two separate source and test\n      directories. This resolves a build dependency and, as a result,\n      'make check' will no longer fail in the tools directory if 'make' was\n      not executed first.\n\n      (ABD, 2016/10/27, HDFFV-9719)\n\n    - CMake: Fixed a timeout error that would occasionally occur when running\n      the virtual file driver tests simultaneously due to test directory\n      and file name collisions.\n\n      (ABD, 2016/09/19, HDFFV-9431)\n\n    - CMake: Fixed a command length overflow error by converting custom\n      commands inside CMakeTest.cmake files into regular dependencies and\n      targets.\n\n      (ABD, 2016/07/12, HDFFV-9939)\n\n    - Fixed a problem preventing HDF5 to be built on 32-bit CYGWIN by\n      condensing cygwin configuration files into a single file and\n      removing outdated compiler settings.\n\n      (ABD, 2016/07/12, HDFFV-9946)\n\n\n    Fortran\n    --------\n    - Changed H5S_ALL_F from INTEGER to INTEGER(HID_T)\n\n      (MSB, 2016/10/14, HDFFV-9987)\n\n\n    Tools\n    -----\n    - h5diff now correctly ignores strpad in comparing strings.\n\n      (ABD, 2017/03/03, HDFFV-10128)\n\n    - h5repack now correctly parses the command line filter options.\n\n      (ABD, 2017/01/24, HDFFV-10046)\n\n    - h5diff now correctly returns an error when it cannot read data due\n      to an unavailable filter plugin.\n\n      (ADB 2017/01/18, HDFFV-9994 )\n\n    - Fixed an error in the compiler wrapper scripts (h5cc, h5fc, et al.)\n      in which they would erroneously drop the file argument specified via\n      the -o flag when the -o flag was specified before the -c flag on the\n      command line, resulting in a failure to compile.\n\n      (LRK, 2016/11/04, HDFFV-9938, HDFFV-9530)\n\n    - h5repack User Defined (UD) filter parameters were not parsed correctly.\n\n      The UD filter parameters were not being parsed correctly. Reworked coding\n      section to parse the correct values and verify number of parameters.\n\n      (ABD, 2016/10/19, HDFFV-9996, HDFFV-9974, HDFFV-9515, HDFFV-9039)\n\n    - h5repack allows the --enable-error-stack option on the command line.\n\n      (ADB, 2016/08/08, HDFFV-9775)\n\n\n    C++ APIs\n    --------\n    - The member function H5Location::getNumObjs() is moved to\n      class Group because the objects are in a group or a file only,\n      and H5Object::getNumAttrs to H5Location to get the number of\n      attributes at a given location.\n\n      (BMR, 2017/03/17, PR#466)\n\n    - Due to the change in the C API, the overloaded functions of\n      PropList::setProperty now need const for some arguments.  They are\n      planned for deprecation and are replaced by new versions with proper\n      consts.\n\n      (BMR, 2017/03/17, PR#344)\n\n    - The high-level API Packet Table (PT) did not write data correctly when\n      the datatype is a compound type that has string type as one of the\n      members.  This problem started in 1.8.15, after the fix of HDFFV-9042\n      was applied, which caused the Packet Table to use native type to access\n      the data.  It should be up to the application to specify whether the\n      buffer to be read into memory is in the machine's native architecture.\n      Thus, the PT is fixed to not use native type but to make a copy of the\n      user's provided datatype during creation or the packet table's datatype\n      during opening.  If an application wishes to use native type to read the\n      data, then the application will request that.  However, the Packet Table\n      doesn't provide a way to specify memory datatype in this release.  This\n      feature will be available in future releases.\n\n      (BMR, 2016/10/27, HDFFV-9758)\n\n    - The obsolete macros H5_NO_NAMESPACE and H5_NO_STD have been removed from\n      the HDF5 C++ API library.\n\n      (BMR, 2016/10/23, HDFFV-9532)\n\n    - The problem where a user-defined function cannot access both, attribute\n      and dataset, using only one argument is now fixed.\n\n      (BMR, 2016/10/11, HDFFV-9920)\n\n    - In-memory array information, ArrayType::rank and\n      ArrayType::dimensions, were removed. This is an implementation\n      detail and should not affect applications.\n\n      (BMR, 2016/04/25, HDFFV-9725)\n\n\n    Testing\n    -------\n    - Fixed a problem that caused tests using SWMR to occasionally fail when\n      running \"make check\" using parallel make.\n\n      (LRK, 2016/03/22, PR#338, PR#346, PR#358)\n\n\nSupported Platforms\n===================\n\n    Linux 2.6.32-573.18.1.el6.ppc64 gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-4)\n    #1 SMP ppc64 GNU/Linux        g++ (GCC) 4.4.7 20120313 (Red Hat 4.4.7-4)\n    (ostrich)                     GNU Fortran (GCC) 4.4.7 20120313\n                                      (Red Hat 4.4.7-4)\n                                  IBM XL C/C++ V13.1\n                                  IBM XL Fortran V15.1\n\n    Linux 3.10.0-327.10.1.el7     GNU C (gcc), Fortran (gfortran), C++ (g++)\n    #1 SMP x86_64 GNU/Linux       compilers:\n    (kituo/moohan)                  Version 4.8.5 20150623 (Red Hat 4.8.5-4)\n                                    Version 4.9.3, Version 5.2.0\n                                  Intel(R) C (icc), C++ (icpc), Fortran (icc)\n                                  compilers:\n                                     Version 15.0.3.187 Build 20150407\n                                  MPICH 3.1.4 compiled with GCC 4.9.3\n\n    SunOS 5.11 32- and 64-bit     Sun C 5.12 SunOS_sparc\n    (emu)                         Sun Fortran 95 8.6 SunOS_sparc\n                                  Sun C++ 5.12 SunOS_sparc\n\n    Windows 7                     Visual Studio 2012 w/ Intel Fortran 15 (cmake)\n                                  Visual Studio 2013 w/ Intel Fortran 15 (cmake)\n                                  Visual Studio 2015 w/ Intel Fortran 16 (cmake)\n\n    Windows 7 x64                 Visual Studio 2012 w/ Intel Fortran 15 (cmake)\n                                  Visual Studio 2013 w/ Intel Fortran 15 (cmake)\n                                  Visual Studio 2015 w/ Intel Fortran 16 (cmake)\n                                  Visual Studio 2015 w/ MSMPI 8 (cmake)\n                                  Cygwin(CYGWIN_NT-6.1 2.8.0(0.309/5/3)\n                                      gcc and gfortran compilers (GCC 5.4.0)\n                                      (cmake and autotools)\n\n    Windows 10                    Visual Studio 2015 w/ Intel Fortran 16 (cmake)\n                                  Cygwin(CYGWIN_NT-6.1 2.8.0(0.309/5/3)\n                                      gcc and gfortran compilers (GCC 5.4.0)\n                                      (cmake and autotools)\n\n    Windows 10 x64                Visual Studio 2015 w/ Intel Fortran 16 (cmake)\n\n    Mac OS X Mt. Lion 10.8.5      Apple clang/clang++ version 5.1 from Xcode 5.1\n    64-bit                        gfortran GNU Fortran (GCC) 4.8.2\n    (swallow/kite)                Intel icc/icpc/ifort version 15.0.3\n\n    Mac OS X Mavericks 10.9.5     Apple clang/clang++ version 6.0 from Xcode 6.2\n    64-bit                        gfortran GNU Fortran (GCC) 4.9.2\n    (wren/quail)                  Intel icc/icpc/ifort version 15.0.3\n\n    Mac OS X Yosemite 10.10.5     Apple clang/clang++ version 6.1 from Xcode 7.0\n    64-bit                        gfortran GNU Fortran (GCC) 4.9.2\n    (osx1010dev/osx1010test)      Intel icc/icpc/ifort version 15.0.3\n\n    Mac OS X El Capitan 10.11.6   Apple clang/clang++ version 7.3 from Xcode 7.3\n    64-bit                        gfortran GNU Fortran (GCC) 5.2.0\n    (osx1010dev/osx1010test)      Intel icc/icpc/ifort version 16.0.2\n\n\nTested Configuration Features Summary\n=====================================\n\n    In the tables below\n          y   = tested\n          n   = not tested in this release\n          C   = Cluster\n          W   = Workstation\n          x   = not working in this release\n          dna = does not apply\n          ( ) = footnote appears below second table\n          <blank> = testing incomplete on this feature or platform\n\nPlatform                              C         F90/   F90      C++  zlib  SZIP\n                                      parallel  F2003  parallel\nSolaris2.11 32-bit                      n        y/y    n        y    y     y\nSolaris2.11 64-bit                      n        y/n    n        y    y     y\nWindows 7                               y        y/y    n        y    y     y\nWindows 7 x64                           y        y/y    y        y    y     y\nWindows 7 Cygwin                        n        y/n    n        y    y     y\nWindows 7 x64 Cygwin                    n        y/n    n        y    y     y\nWindows 10                              y        y/y    n        y    y     y\nWindows 10 x64                          y        y/y    n        y    y     y\nMac OS X Mountain Lion 10.8.5 64-bit    n        y/y    n        y    y     y\nMac OS X Mavericks 10.9.5 64-bit        n        y/y    n        y    y     y\nMac OS X Yosemite 10.10.5 64-bit        n        y/y    n        y    y     y\nMac OS X El Capitan 10.11.6 64-bit      n        y/y    n        y    y     y\nCentOS 7.2 Linux 2.6.32 x86_64 PGI      n        y/y    n        y    y     y\nCentOS 7.2 Linux 2.6.32 x86_64 GNU      y        y/y    y        y    y     y\nCentOS 7.2 Linux 2.6.32 x86_64 Intel    n        y/y    n        y    y     y\nLinux 2.6.32-573.18.1.el6.ppc64         n        y/y    n        y    y     y\n\n\nPlatform                                 Shared  Shared    Shared    Thread-\n                                         C libs  F90 libs  C++ libs  safe\nSolaris2.11 32-bit                         y       y         y         y\nSolaris2.11 64-bit                         y       y         y         y\nWindows 7                                  y       y         y         y\nWindows 7 x64                              y       y         y         y\nWindows 7 Cygwin                           n       n         n         y\nWindows 7 x64 Cygwin                       n       n         n         y\nWindows 10                                 y       y         y         y\nWindows 10 x64                             y       y         y         y\nMac OS X Mountain Lion 10.8.5 64-bit       y       n         y         y\nMac OS X Mavericks 10.9.5 64-bit           y       n         y         y\nMac OS X Yosemite 10.10.5 64-bit           y       n         y         y\nMac OS X El Capitan 10.11.6 64-bit         y       n         y         y\nCentOS 7.2 Linux 2.6.32 x86_64 PGI         y       y         y         n\nCentOS 7.2 Linux 2.6.32 x86_64 GNU         y       y         y         y\nCentOS 7.2 Linux 2.6.32 x86_64 Intel       y       y         y         n\nLinux 2.6.32-573.18.1.el6.ppc64            y       y         y         n\n\nCompiler versions for each platform are listed in the preceding\n\"Supported Platforms\" table.\n\n\nMore Tested Platforms\n=====================\n\nThe following platforms are not supported but have been tested for this release.\n\n    Linux 2.6.32-573.22.1.el6     GNU C (gcc), Fortran (gfortran), C++ (g++)\n    #1 SMP x86_64 GNU/Linux       compilers:\n    (mayll/platypus)                 Version 4.4.7 20120313\n                                     Version 4.8.4\n                                  PGI C, Fortran, C++ for 64-bit target on\n                                  x86-64;\n                                      Version 16.10-0\n                                  Intel(R) C (icc), C++ (icpc), Fortran (icc)\n                                  compilers:\n                                     Version 15.0.3.187 (Build 20150407)\n                                  MPICH 3.1.4 compiled with GCC 4.9.3\n\n    Linux 3.10.0-327.18.2.el7     GNU C (gcc) and C++ (g++) compilers\n    #1 SMP x86_64 GNU/Linux          Version 4.8.5 20150623 (Red Hat 4.8.5-4)\n    (jelly)                       with NAG Fortran Compiler Release 6.1(Tozai)\n                                  Intel(R) C (icc) and C++ (icpc) compilers\n                                     Version 15.0.3.187 (Build 20150407)\n                                  with NAG Fortran Compiler Release 6.1(Tozai)\n\n    Linux 2.6.32-573.18.1.el6.ppc64  MPICH mpich 3.1.4 compiled with\n    #1 SMP ppc64 GNU/Linux           IBM XL C/C++ for Linux, V13.1\n    (ostrich)                        and IBM XL Fortran for Linux, V15.1\n\n    Debian 8.4 3.16.0-4-amd64 #1 SMP Debian 3.16.36-1 x86_64 GNU/Linux\n                                  gcc, g++ (Debian 4.9.2-10) 4.9.2\n                                  GNU Fortran (Debian 4.9.2-10) 4.9.2\n                                  (cmake and autotools)\n\n    Fedora 24  4.7.2-201.fc24.x86_64 #1 SMP x86_64 x86_64 x86_64 GNU/Linux\n                                  gcc, g++ (GCC) 6.1.1 20160621\n                                      (Red Hat 6.1.1-3)\n                                  GNU Fortran (GCC) 6.1.1 20160621\n                                      (Red Hat 6.1.1-3)\n                                  (cmake and autotools)\n\n    Ubuntu 16.04.1 4.4.0-38-generic #57-Ubuntu SMP x86_64 GNU/Linux\n                                  gcc, g++ (Ubuntu 5.4.0-6ubuntu1~16.04.2)\n                                      5.4.0 20160609\n                                  GNU Fortran (Ubuntu 5.4.0-6ubuntu1~16.04.2)\n                                      5.4.0 20160609\n                                  (cmake and autotools)\n\n\nKnown Problems\n==============\n\n    At present, metadata cache images may not be generated by parallel\n    applications.  Parallel applications can read files with metadata cache\n    images, but since this is a collective operation, a deadlock is possible\n    if one or more processes do not participate.\n\n    Known problems in previous releases can be found in the HISTORY*.txt files\n    in the HDF5 source. Please report any new problems found to\n    help@hdfgroup.org.\n\n\n%%%%1.10.0-patch1%%%%\n\n\nHDF5 version 1.10.0-patch1 released on 2016-05-23\n================================================================================\n\nINTRODUCTION\n\nThis document describes the differences between HDF5-1.8 series and\nHDF5 1.10.0 releases, and contains information on the platforms\ntested.\n\nLinks to HDF5 1.10.0 source code can be found on The HDF Group's\ndevelopment FTP server at the following location:\n\n    https://www.hdfgroup.org/HDF5/release/obtain5110.html\n\nUser documentation can be accessed directly at this location:\n\n    https://www.hdfgroup.org/HDF5/docNewFeatures/\n\nFor more information, see the HDF5 home page:\n\n    https://www.hdfgroup.org/HDF5/\n\nIf you have any questions or comments, please send them to the HDF\nHelp Desk:\n\n    help@hdfgroup.org\n\n\n\nCONTENTS\n\n- New Features\n- Issues Addressed in this Release\n- Supported Platforms\n- Tested Configuration Features Summary\n- More Tested Platforms\n- Known Problems and Limitations\n\n\n\nNew Features\n============\nThis release supports the following features:\n\n    Configuration\n    -------------\n    - API Compatibility with HDF5 1.8 Flag Was Added\n\n      The 1.10 version of the HDF5 Library can be configured to operate\n      identically to the 1.8 library with the --with-default-api-version=v18\n      configure flag. This allows existing code to be compiled with the 1.10\n      library without requiring immediate changes to the application source\n      code. For addtional configuration options and other details, see\n      \"API Compatibility Macros in HDF5\" at\n      https://www.hdfgroup.org/HDF5/doc/RM/APICompatMacros.html.\n\n    - Autotools Configuration Has Been Extensively Reworked\n\n      The autotools configuration options have been updated to allow more\n      fine-grained control of the build options and to correct some bugs.\n      See configure --help for comprehensive information on each option.\n\n      Specific changes:\n\n      * --enable-debug and --enable-production are no longer accepted.\n        Use --enable-build-mode=(debug | production) instead. These set\n        appropriate defaults for symbols, optimizations, and other\n        configuration options. These defaults can be overridden by the\n        user.\n\n      * Extra debug output messages are no longer enabled with\n        --enable-debug=<package list>. Use --enable-internal-debug=<pkg list>\n        instead.\n\n      * A new --enable-symbols option allows symbols to be generated\n        independently of the build mode. --disable-symbols can be used\n        to strip symbols from the binary.\n\n      * A new --enable-asserts option sets/unsets NDEBUG. This is\n        independent of the build mode. This also enables some extra\n        low-overhead debug checks in the library.\n\n      * A new --enable-profiling option sets profiling flags. This is\n        independent of the build mode.\n\n      * A new --enable-optimization option sets the optimization level.\n        This is independent of the build mode.\n\n      * Many of these options can take a flags string that will be used\n        to build the library. This can be useful for specifying custom\n        optimization flags such as -Os and -Ofast.\n\n      * gnu C++ and Fortran use configure sub-files that update the\n        build flags and turn on warnings. The increase in warnings when\n        building these wrapper libraries is due to these flag changes\n        and not to a decrease in code quality.\n\n      * The option to clear file buffers has been removed. Any buffer that\n        will eventually be written to disk will now always be memset\n        to zero. This prevents the previous contents of the buffer from\n        being written to the disk if the buffer contents are not\n        completely overwritten, which has security implications.\n\n    - LFS Changes\n\n      The way the autotools handle large file support (LFS) has been\n      overhauled in this release.\n\n      * We assume ftello and fseeko exist\n\n      * We no longer explicitly use the *64 I/O functions. Instead, we\n        rely on a mapping provided by _FILE_OFFSET_BITS or its equivalent.\n\n      * _LARGEFILE(64)_SOURCE is no longer exported via AM_CPPFLAGS.\n\n\n\n    Parallel Library\n    -----------------\n    - Collective Metadata I/O\n\n      Calls for HDF5 metadata can result in many small reads and writes.\n      On metadata reads, collective metadata I/O can improve performance\n      by allowing the library to perform optimizations when reading the\n      metadata by having one rank read the data and broadcasting it to\n      all other ranks.\n\n      Collective metadata I/O improves metadata write performance through\n      the construction of an MPI derived datatype that is then written\n      collectively in a single call. For more information, see\n      https://www.hdfgroup.org/HDF5/docNewFeatures/NewFeaturesCollectiveMetadataIoDocs.html.\n\n\n\n    Library\n    --------\n    - Concurrent Access to HDF5 Files - Single Writer/ Multple Reader (SWMR)\n\n      The Single Writer/ Multiple Reader or SWMR feature enables users to\n      read data concurrently while writing it. Communications between the\n      processes and file locking are not required. The processes can run\n      on the same or on different platforms as long as they share a common\n      file system that is POSIX compliant. For more information, see the\n      Single-Writer/Multiple-Reader (SWMR) documentation at\n      https://www.hdfgroup.org/HDF5/docNewFeatures/NewFeaturesSwmrDocs.html.\n\n    - Virtual Dataset (VDS)\n\n      The VDS feature enables data to be accessed across HDF5 files\n      using standard HDF5 objects such as groups and datasets without\n      rewriting or rearranging the data. An HDF5 virtual dataset (VDS)\n      is an HDF5 dataset that is composed of source HDF5 datasets in\n      a predefined mapping. VDS can be used with the SWMR feature. For\n      documentation, check\n      https://www.hdfgroup.org/HDF5/docNewFeatures/NewFeaturesVirtualDatasetDocs.html.\n\n    - Persistent Free File Space Tracking\n\n      Usage patterns when working with an HDF5 file sometimes result in\n      wasted space within the file. This can also impair access times\n      when working with the resulting files. The new file space management\n      feature provides strategies for managing space in a file to improve\n      performance in both of these areas. For more information, see\n      https://www.hdfgroup.org/HDF5/docNewFeatures/NewFeaturesFileSpaceMgmtDocs.html.\n\n    - Version 3 Metadata Cache\n\n      The version 3 metadata cache moves management of metadata I/O from \n      the clients to the metadata cache proper.  This change is essential for\n      SWMR and other features that have yet to be released.\n\n\n\n    C++ Library\n    ------------\n    - New Member Function Added to H5::ArrayType\n\n      The assignment operator ArrayType::operator= was added because\n      ArrayType has pointer data members.\n\n      (BMR - 2016/03/07, HDFFV-9562)\n\n\n\n    Tools\n    ------\n    - h5watch\n\n      The h5watch tool allows users to output new records appended to\n      a dataset under SWMR access as it grows. The functionality is\n      similar to the Unix user command \"tail\" with the follow option,\n      which outputs appended data as the file grows. For more\n      information, see\n      https://www.hdfgroup.org/HDF5/docNewFeatures/NewFeaturesSwmrDocs.html#Tools.\n\n    - h5format_convert\n\n      The h5format_convert tool allows users to convert the indexing\n      type of a chunked dataset made with a 1.10.x version of the HDF5\n      Library when the latest file format is used to the 1.8.x version 1 B-tree indexing\n      type. For example, datasets created using SWMR access, can be\n      converted to be accessed by the HDF5 1.18 library and tools. The\n      tool does not rewrite raw data, but it does rewrite HDF5 metadata.\n\n\n\n    High-Level APIs\n    ----------------\n    - H5DOappend\n\n      The function appends data to a dataset along a specified dimension.\n\n\n    C Packet Table API\n    ------------------\n    - Replacement of a Public Function with H5PTcreate\n\n      The existing function H5PTcreate_fl limits applications so they\n      can use the deflate compression only. The public function\n      H5PTcreate has been added to replace H5PTcreate_fl. H5PTcreate\n      takes a property list identifier to provide flexibility on\n      creation properties.\n\n      (BMR - 2016/03/04, HDFFV-8623)\n\n    - New Public Functions: H5PTget_dataset and H5PTget_type\n\n      Two accessor functions have been added. H5PTget_dataset returns\n      the identifier of the dataset associated with the packet table, \n      and H5PTget_type returns the identifier of the datatype used by\n      the packet table.\n\n      (BMR, 2016/03/04, HDFFV-8623)\n\n    - Regarding #ifdef VLPT_REMOVED\n\n      The #ifdef VLPT_REMOVED blocks have been removed from the packet\n      table (PT) library source except for the following functions:\n        + H5PTis_varlen() has been made available again\n        + H5PTfree_vlen_readbuff() is now H5PTfree_vlen_buff()\n\n      (BMR - 2016/03/04, HDFFV-442)\n\n    C++ Packet Table API\n    --------------------\n    - New Constructor Added to FL_PacketTable\n\n      An overloaded constructor has been added to FL_PacketTable and\n      takes a property list identifier to provide flexibility on\n      creation properties.\n\n      (BMR - 2016/03/08, HDFFV-8623)\n\n    - New Public Functions\n\n      Two accessor wrappers are added to class PacketTable.\n      PacketTable::GetDataset() returns the identifier of the dataset\n      associated with the packet table, and PacketTable::GetDatatype()\n      returns the identifier of the datatype that the packet table uses.\n\n      (BMR - 2016/03/04, HDFFV-8623)\n\n    - Member Functions with \"char*\" as an Argument\n\n      Overloaded functions were added to provide the \"const char*\"\n      argument; the existing version will be deprecated in future\n      releases.\n\n      (BMR - 2016/03/04, HDFFV-8623)\n\n    - Regarding #ifdef VLPT_REMOVED\n\n      The #ifdef VLPT_REMOVED blocks have been removed from the packet\n      table library source code except for the following functions:\n        + VL_PacketTable::IsVariableLength() was moved to PacketTable\n        + VL_PacketTable::FreeReadBuff() is now PacketTable::FreeBuff()\n\n      (BMR - 2016/03/04, HDFFV-442)\n\n\n\n    Java Wrapper Library\n    --------------------\n\n    The Java HDF5 JNI library has been integrated into the HDF5 repository.\n    The configure option is \"--enable-java\", and the CMake option is\n    HDF5_BUILD_JAVA:BOOL=ON. The package hierarchy has changed from the\n    HDF5 1.8 JNI, which was \"ncsa.hdf.hdflib.hdf5\", to HDF5 1.10,\n    \"hdf.hdflib.hdf5\".\n\n    A number of new APIs were added including some for VDS and SWMR.\n\n\n\n    Other Important Changes\n    -----------------------\n\n    The hid_t type was changed from 32-bit to a 64-bit value.\n\n\n\nIssues Addressed in this Release Since 1.10.0\n=============================================\n\n     - h5diff would return from a compare attributes abnormally if one of the datatypes\n       was a vlen. This resulted in a memory leak as well as an incorrect report of\n       attribute comparison.\n\n       Fixed.\n       (ADB - 2016/04/26, HDFFV-9784)\n\n     - The JUnit-interface test may fail on Solaris platforms. The result of\n       a test for verifying the content of the error stack to stdout is\n       in a different order on Solaris then other platforms.\n\n       This test is skipped on Solaris\n       (ADB - 2016/04/21, HDFFV-9734)\n\n     - When building HDF5 with Java using CMake and specifying Debug for CMAKE_BUILD_TYPE,\n       there was a missing command argument for the tests of the examples.\n\n       Fixed.\n       (ADB - 2016/04/21, HDFFV-9743)\n\n     - Changed h5diff to print a warning when a dataset is virtual, enabling\n       the data to be compared. In addition h5repack failed to copy the data\n       of a virtual dataset to the new file. Function H5D__get_space_status changed\n       to correctly determine the H5D_space_status_t allocation value.\n\n       CMake added the Fixed Array indexing tests that were only in the autotools\n       test scripts.\n\n       Fixed and tests added for vds issues.\n       (ADB,NAF - 2016/04/21, HDFFV-9756)\n\n     - CMake added the h5format_convert tool and tests that were only in the autotools\n       build and test scripts. The autotools test script was reworked to allow CMake\n       to execute the test suite in parallel.\n\n       Also, h5clear tool and tests were added to the misc folder.\n\n       Fixed.\n       (ADB - 2016/04/21, HDFFV-9766)\n\n     - CMake added the h5watch tool and argument tests that were only in the autotools\n       build and test scripts. The POSIX only tests were not added to CMake.\n\n       CMake HL tools files were refactored to move the CMake test scripts into each tool folder.\n\n       Fixed.\n       (ADB - 2016/04/21, HDFFV-9770)\n\n     - Configure fails to detect valid real KINDs on FreeBSD 9.3 (i386) with Fortran enabled.\n\n       Fixed. Added the exponential option to SELECTED_REAL_KIND to distinguish \n       KINDs of same precision\n       (MSB - 2016/05/14,HDFFV-9912)\n\n\n     - Corrected the f90 H5AWRITE_F integer interface's buf to be INTENT(IN).\n       (MSB - 2016/05/14) \n\n     - Configure fails in sed command on FreeBSD 9.3 (i386) with Fortran enabled.\n  \n       Fixed.\n       (MSB - 2016/05/14,HDFFV-9912)\n\n     - Compile time error in H5f90global.F90 with IBM XL Fortran 14.1.0.13 on BG/Q with Fortran\n       enabled.\n    \n       Fixed.\n       (MSB - 2016/05/16,HDFFV-9917)\n\n     - A cmake build with Fortran enabled does not install module h5fortkit\n\n       Fixed. \n       (MSB - 2016/05/23,HDFFV-9923)\n\n\nIssues Addressed in this Release Since alpha1\n=============================================\n\n     - H5Pget_virtual_printf_gap, H5Pget_virtual_view, H5Pget_efile_prefix\n\n       The correct access property list settings from the\n       H5Pget_virtual_printf_gap, H5Pget_virtual_view, and\n       H5Pget_efile_prefix function calls could not be retrieved\n       using H5Dget_access_plist().\n\n       Fixed.\n\n       (DER and NAF - 2016/03/14, HDFFV-9716)\n\n     - h5dump\n\n       When h5dump was provided with the name of a non-existing file or\n       when optional arguments were the last option on the command line,\n       h5dump would segfault.\n\n       Fixed.\n\n       (ADB 2016/02/28 HDFFV-9639, HDFFV-9684)\n\n     - No Error Message for Corrupt Metadata\n\n       The HDF5 Library did not propagate an error when it encountered\n       corrupt metadata in an HDF5 file. The issue was fixed for a\n       specific file provided by a user. If you still see the problem,\n       please contact help@hdfgroup.org\n\n       Fixed.\n\n       (MC - 2016/02/18, HDFFV-9670)\n\n     - Problem Reading Chunked Datasets with a String Datatype Larger\n       Than the Chunk Size in Bytes\n\n       When the latest file format was used and when a chunked dataset\n       was created with a datatype with the size bigger than a chunk\n       size, the data could not be read back. The issue was reported\n       for chunked datasets with a string datatype and was confirmed\n       for other datatypes with the sizes bigger than the chunk size in\n       bytes.\n\n       Fixed.\n\n       (JM - 2016/02/13, HDFFV-9672)\n\n     - Control over the Location of External Files\n\n       Users were unable to specify the locations of external files.\n\n       Two APIs - H5Pget_efile_prefix and H5Pset_efile_prefix - were\n       added so that users could specify the locations of external files.\n\n       (DER - 2016/02/04, HDFFV-8740)\n\n\n\nIssues Addressed in this Release Since alpha0\n=============================================\n    - h5format_convert\n\n      The h5format_convert tool did not downgrade the version of the\n      superblock.\n\n      Fixed. The tool now will downgrade the version of the superblock.\n\n      (EIP 2016/01/11)\n\n    - Crashes with multiple threads: invalid pointers\n\n      It was reported that alpha0 crashed when used with multiple\n      threads. The issue exists in the HDF5 Library versions 1.8 and\n      1.9. The problem is related to a shared file pointer used in some\n      miscellaneous data structures. The thread-safe library exposed\n      paths in the library where a file pointer became invalid.\n\n      The alpha1 release contains the fixes for the specific use case\n      as described in HDFFV-9643. We will keep working on identifying\n      and fixing other paths in the library with similar problems.\n\n      (EIP - 2016/01/15, HDFFV-9643)\n\n\n\nSupported Platforms\n===================\nThe following platforms are supported and have been tested for this release.\nThey are built with the configure process unless specified otherwise.\n\n    AIX 6.1                       xlc/xlc_r 10.1.0.5\n    (NASA G-ADA)                  xlC/xlC_r 10.1.0.5\n                                  xlf90/xlf90_r 12.1.0.6\n\n    Linux 2.6.32-573.22.1.el6     GNU C (gcc), Fortran (gfortran), C++ (g++)\n    #1 SMP x86_64 GNU/Linux       compilers:\n    (mayll/platypus)                 Version 4.4.7 20120313 (Red Hat 4.4.7-16)\n                                     Version 4.9.3, Version 5.2.0\n                                  PGI C, Fortran, C++ for 64-bit target on\n                                  x86-64;\n                                      Version 15.7-0\n                                  Intel(R) C (icc), C++ (icpc), Fortran (icc)\n                                  compilers:\n                                     Version 15.0.3.187 Build 20150407\n                                  MPICH 3.1.4 compiled with GCC 4.9.3\n\n    Linux 2.6.32-573.18.1.el6.ppc64 gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-11)\n    #1 SMP ppc64 GNU/Linux        g++ (GCC) 4.4.7 20120313 (Red Hat 4.4.7-11)\n    (ostrich)                     GNU Fortran (GCC) 4.4.7 20120313 (Red Hat 4.4.7-11)\n                                  IBM XL C/C++ V13.1\n                                  IBM XL Fortran V15.1\n\n    Linux 3.10.0-327.10.1.el7   GNU C (gcc), Fortran (gfortran), C++ (g++)\n    #1 SMP x86_64 GNU/Linux       compilers:\n    (kituo/moohan)                  Version 4.8.5 20150623 (Red Hat 4.8.5-4)\n                                    Version 4.9.3, Version 5.2.0\n                                  Intel(R) C (icc), C++ (icpc), Fortran (icc)\n                                  compilers:\n                                     Version 15.0.3.187 Build 20150407\n                                  MPICH 3.1.4 compiled with GCC 4.9.3\n\n    SunOS 5.11 32- and 64-bit     Sun C 5.12 SunOS_sparc\n    (emu)                         Sun Fortran 95 8.6 SunOS_sparc\n                                  Sun C++ 5.12 SunOS_sparc\n\n    Windows 7                     Visual Studio 2012 w/ Intel Fortran 15 (cmake)\n                                  Visual Studio 2013 w/ Intel Fortran 15 (cmake)\n                                  Visual Studio 2015 w/ Intel Fortran 16 (cmake)\n                                  Cygwin(CYGWIN_NT-6.1 2.2.1(0.289/5/3) gcc(4.9.3) compiler and gfortran)\n                                  (cmake and autotools)\n\n    Windows 7 x64                 Visual Studio 2012 w/ Intel Fortran 15 (cmake)\n                                  Visual Studio 2013 w/ Intel Fortran 15 (cmake)\n                                  Visual Studio 2015 w/ Intel Fortran 16 (cmake)\n\n    Windows 8.1                   Visual Studio 2012 w/ Intel Fortran 15 (cmake)\n                                  Visual Studio 2013 w/ Intel Fortran 15 (cmake)\n\n    Windows 8.1 x64               Visual Studio 2012 w/ Intel Fortran 15 (cmake)\n                                  Visual Studio 2013 w/ Intel Fortran 15 (cmake)\n\n    Mac OS X Mt. Lion 10.8.5      Apple clang/clang++ version 5.1 from Xcode 5.1\n    64-bit                        gfortran GNU Fortran (GCC) 4.8.2\n    (swallow/kite)                Intel icc/icpc/ifort version 15.0.3\n\n    Mac OS X Mavericks 10.9.5     Apple clang/clang++ version 6.0 from Xcode 6.2\n    64-bit                        gfortran GNU Fortran (GCC) 4.9.2\n    (wren/quail)                  Intel icc/icpc/ifort version 15.0.3\n\n    Mac OS X Yosemite 10.10.5     Apple clang/clang++ version 6.0 from Xcode 7.0\n    64-bit                        gfortran GNU Fortran (GCC) 4.9.2\n    (osx1010dev/osx1010test)      Intel icc/icpc/ifort version 15.0.3\n\n    Mac OS X El Capitan 10.11.4   Apple clang/clang++ version 7.3.0 from Xcode 7.3\n    64-bit                        gfortran GNU Fortran (GCC) 5.2.0\n    (osx1010dev/osx1010test)      Intel icc/icpc/ifort version 15.0.3\n\n\n\nTested Configuration Features Summary\n=====================================\n\n    In the tables below\n          y   = tested\n          n   = not tested in this release\n          C   = Cluster\n          W   = Workstation\n          x   = not working in this release\n          dna = does not apply\n          ( ) = footnote appears below second table\n          <blank> = testing incomplete on this feature or platform\n\nPlatform                              C         F90/   F90      C++  zlib  SZIP\n                                      parallel  F2003  parallel\nSunOS 5.11 32-bit                       n        y/y    n        y    y     y\nSunOS 5.11 64-bit                       n        y/y    n        y    y     y\nWindows 7                               y        y/y    n        y    y     y\nWindows 7 x64                           y        y/y    n        y    y     y\nWindows 7 Cygwin                        n        y/y    n        y    y     n\nWindows 8.1                             n        y/y    n        y    y     y\nWindows 8.1 x64                         n        y/y    n        y    y     y\nMac OS X Mountain Lion 10.8.5 64-bit    n        y/y    n        y    y     y\nMac OS X Mavericks 10.9.5 64-bit        n        y/y    n        y    y     y\nMac OS X Yosemeti 10.10.5 64-bit        n        y/y    n        y    y     y\nAIX 6.1 32- and 64-bit                  n        y/n    n        y    y     y\nCentOS 6.7 Linux 2.6.32 x86_64 GNU      y        y/y    y        y    y     y\nCentOS 6.7 Linux 2.6.32 x86_64 Intel    n        y/y    n        y    y     y\nCentOS 6.7 Linux 2.6.32 x86_64 PGI      n        y/y    n        y    y     y\nCentOS 7.1 Linux 3.10.0 x86_64 GNU      y        y/y    y        y    y     y\nCentOS 7.1 Linux 3.10.0 x86_64 Intel    n        y/y    n        y    y     y\nLinux 2.6.32-431.11.2.el6.ppc64         n        y/n    n        y    y     y\n\nPlatform                                 Shared  Shared    Shared    Thread-\n                                         C libs  F90 libs  C++ libs  safe\nSunOS 5.11 32-bit                          y       y         y         y\nSunOS 5.11 64-bit                          y       y         y         y\nWindows 7                                  y       y         y         y\nWindows 7 x64                              y       y         y         y\nWindows 7 Cygwin                           n       n         n         y\nWindows 8.1                                y       y         y         y\nWindows 8.1 x64                            y       y         y         y\nMac OS X Mountain Lion 10.8.5 64-bit       y       n         y         y\nMac OS X Mavericks 10.9.5 64-bit           y       n         y         y\nMac OS X Yosemeti 10.10.5 64-bit           y       n         y         y\nAIX 6.1 32- and 64-bit                     y       n         n         y\nCentOS 6.7 Linux 2.6.32 x86_64 GNU         y       y         y         y\nCentOS 6.7 Linux 2.6.32 x86_64 Intel       y       y         y         y\nCentOS 6.7 Linux 2.6.32 x86_64 PGI         y       y         y         y\nCentOS 7.1 Linux 3.10.0 x86_64 GNU         y       y         y         y\nCentOS 7.1 Linux 3.10.0 x86_64 Intel       y       y         y         y\nLinux 2.6.32-431.11.2.el6.ppc64            y       y         y         y\n\nCompiler versions for each platform are listed in the preceding\n\"Supported Platforms\" table.\n\n\n\nMore Tested Platforms\n=====================\nThe following platforms are not supported but have been tested for this release.\n\n    Linux 2.6.18-431.11.2.el6     g95 (GCC 4.0.3 (g95 0.94!)\n    #1 SMP x86_64 GNU/Linux\n    (platypus)\n\n    Windows 7                     Visual Studio 2008  (cmake)\n\n    Windows 7 x64                 Visual Studio 2008  (cmake)\n\n    Windows 7 x64                 Visual Studio 2010  (cmake) with SWMR using GPFS\n\n    Windows 10                    Visual Studio 2013 w/ Intel Fortran 15 (cmake)\n\n    Windows 10 x64                Visual Studio 2013 w/ Intel Fortran 15 (cmake)\n\n    Debian7.5.0 3.2.0-4-amd64 #1 SMP Debian 3.2.51-1 x86_64 GNU/Linux\n                                  gcc (Debian 4.7.2-5) 4.7.2\n                                  GNU Fortran (Debian 4.7.2-5) 4.7.2\n                                  (cmake and autotools)\n\n    Fedora20 3.15.3-200.fc20.x86_64 #1 SMP x86_64 x86_64 x86_64 GNU/Linux\n                                  gcc (GCC) 4.8.3 20140624 (Red Hat 4.8.3-1)\n                                  GNU Fortran (GCC) 4.8.3 20140624 (Red Hat 4.8.3-1)\n                                  (cmake and autotools)\n\n    SUSE 13.1 3.11.10-17-desktop #1 SMP PREEMPT x86_64 x86_64 x86_64 GNU/Linux\n                                  gcc (SUSE Linux) 4.8.1\n                                  GNU Fortran (SUSE Linux) 4.8.1\n                                  (cmake and autotools)\n\n    Ubuntu 14.04 3.13.0-35-generic #62-Ubuntu SMP x86_64 GNU/Linux\n                                  gcc (Ubuntu/Linaro 4.9.1-0ubuntu1) 4.9.1\n                                  GNU Fortran (Ubuntu/Linaro 4.9.1-0ubuntu1) 4.9.1\n                                  (cmake and autotools)\n\n    hopper.nersc.gov              PrgEnv-gnu/5.2.40\n                                  gcc (GCC) 4.9.2 20141030 (Cray Inc.)\n                                  GNU Fortran (GCC) 4.9.2 20141030 (Cray Inc.)\n                                  g++ (GCC) 4.9.2 20141030 (Cray Inc.)\n\n\n\nKnown Problems and Limitations\n==============================\nThis section contains the list of known problems and limitations introduced\nin this release of HDF5.\n\nNote: this list is not exhaustive of all known issues discovered in HDF5\nsoftware to date. For a list of significant problems and known workarounds\nidentified in past releases, please refer to:\n\nhttps://www.hdfgroup.org/HDF5/release/known_problems/\n\nThe HDF Group also maintains a JIRA issue-tracking database which is used to\ncapture all known issues which are too numerous to reasonably list in this\ndocument. The HDF Group is taking steps to make our JIRA issue database\nopen to the public, and this section will refer to that database in a future\nrelease. In the meantime, please contact help@hdfgroup.org if you come across\nan issue not listed here or at the link above, and we will provide any\ninformation about known workarounds that we have or add it to our list of\nknown issues if it is a new issue.\n\n - The flush/refresh test occasionally fails on OS X platforms. This is\n   being investigated but no fix or workaround is available at this time.\n   (DER - 2016/03/22, HDFFV-9731)\n\n - The VDS/SWMR test will fail with a segmentation fault if the library\n   is built with --enable-using-memchecker. The is due to a VDS shutdown\n   procedure freeing a shared resource too early when the memory\n   checker changes are built. This problem does not arise when the\n   memory checker changes are not used since the internal library free\n   lists behave differently. The memory checker configure option should\n   normally only be used under special circumstances so this should not\n   affect most users. Users should be aware that the --enable-using-memchecker\n   + VDS combination may cause a segfault, however, so Valgrind et al. may\n   have to be used with an HDF5 library built without the feature if this\n   proves to be a problem.\n   (DER - 2016/03/21, HDFFV-9732)\n\n - SWMR feature limitations\n   The SWMR feature will only work if an HDF5 file under SWMR access resides\n   on a file system that obeys POSIX write() ordering semantics. Because of\n   this, SWMR will not work on  network file systems such as NFS or SMB/Windows\n   file shares since those systems do not guarantee write odering. SWMR\n   regression tests are likely to fail if run on a network file system. SWMR\n   is currently not tested on Windows though it can be tested manually\n   (some of the SWMR test programs are built by CMake), and there are no\n   obvious reasons for it to not work on NTFS or GPFS.\n   (EIP - 2016/03/20, HDFFV-9733)\n\n - VDS feature limitation\n   Currently, the path to a VDS source file is interpreted as relative to the\n   directory where the executable program runs and not to the HDF5 file with\n   the VDS dataset unless a full path to the source file is specified during\n   the mapping.\n   (EIP - 2016/03/20, HDFFV-9724)\n\n - The H5Lexists API changed behavior in HDF5-1.10 when used with a file handle\n   and root group name (\"/\"):\n\n   H5Lexists(fileid, \"/\")\n\n   In HDF5-1.8 it returns false (0) and in HDF5-1.10 it returns true (1).\n   The documentation will be updated with information regarding this change.\n   (LRK - 2016/03/30, HDFFV-8746)\n\n\n%%%%1.10.0%%%%\n\nHDF5 version 1.10.0 released on 2016-03-30\n================================================================================\n\n\n\nINTRODUCTION\n\nThis document describes the differences between HDF5-1.8 series and\nHDF5 1.10.0 releases, and contains information on the platforms\ntested.\n\nLinks to HDF5 1.10.0 source code can be found on The HDF Group's\ndevelopment FTP server at the following location:\n\n    https://www.hdfgroup.org/HDF5/release/obtain5110.html\n\nUser documentation can be accessed directly at this location:\n\n    https://www.hdfgroup.org/HDF5/docNewFeatures/\n\nFor more information, see the HDF5 home page:\n\n    https://www.hdfgroup.org/HDF5/\n\nIf you have any questions or comments, please send them to the HDF\nHelp Desk:\n\n    help@hdfgroup.org\n\n\n\nCONTENTS\n\n- New Features\n- Issues Addressed in this Release\n- Supported Platforms\n- Tested Configuration Features Summary\n- More Tested Platforms\n- Known Problems and Limitations\n\n\n\nNew Features\n============\nThis release supports the following features:\n\n    Configuration\n    -------------\n    - API Compatibility with HDF5 1.8 Flag Was Added\n\n      The 1.10 version of the HDF5 Library can be configured to operate\n      identically to the 1.8 library with the --with-default-api-version=v18\n      configure flag. This allows existing code to be compiled with the 1.10\n      library without requiring immediate changes to the application source\n      code. For addtional configuration options and other details, see\n      \"API Compatibility Macros in HDF5\" at\n      https://www.hdfgroup.org/HDF5/doc/RM/APICompatMacros.html.\n\n    - Autotools Configuration Has Been Extensively Reworked\n\n      The autotools configuration options have been updated to allow more\n      fine-grained control of the build options and to correct some bugs.\n      See configure --help for comprehensive information on each option.\n\n      Specific changes:\n\n      * --enable-debug and --enable-production are no longer accepted.\n        Use --enable-build-mode=(debug | production) instead. These set\n        appropriate defaults for symbols, optimizations, and other\n        configuration options. These defaults can be overridden by the\n        user.\n\n      * Extra debug output messages are no longer enabled with\n        --enable-debug=<package list>. Use --enable-internal-debug=<pkg list>\n        instead.\n\n      * A new --enable-symbols option allows symbols to be generated\n        independently of the build mode. --disable-symbols can be used\n        to strip symbols from the binary.\n\n      * A new --enable-asserts option sets/unsets NDEBUG. This is\n        independent of the build mode. This also enables some extra\n        low-overhead debug checks in the library.\n\n      * A new --enable-profiling option sets profiling flags. This is\n        independent of the build mode.\n\n      * A new --enable-optimization option sets the optimization level.\n        This is independent of the build mode.\n\n      * Many of these options can take a flags string that will be used\n        to build the library. This can be useful for specifying custom\n        optimization flags such as -Os and -Ofast.\n\n      * gnu C++ and Fortran use configure sub-files that update the\n        build flags and turn on warnings. The increase in warnings when\n        building these wrapper libraries is due to these flag changes\n        and not to a decrease in code quality.\n\n      * The option to clear file buffers has been removed. Any buffer that\n        will eventually be written to disk will now always be memset\n        to zero. This prevents the previous contents of the buffer from\n        being written to the disk if the buffer contents are not\n        completely overwritten, which has security implications.\n\n    - LFS Changes\n\n      The way the autotools handle large file support (LFS) has been\n      overhauled in this release.\n\n      * We assume ftello and fseeko exist\n\n      * We no longer explicitly use the *64 I/O functions. Instead, we\n        rely on a mapping provided by _FILE_OFFSET_BITS or its equivalent.\n\n      * _LARGEFILE(64)_SOURCE is no longer exported via AM_CPPFLAGS.\n\n\n\n    Parallel Library\n    -----------------\n    - Collective Metadata I/O\n\n      Calls for HDF5 metadata can result in many small reads and writes.\n      On metadata reads, collective metadata I/O can improve performance\n      by allowing the library to perform optimizations when reading the\n      metadata by having one rank read the data and broadcasting it to\n      all other ranks.\n\n      Collective metadata I/O improves metadata write performance through\n      the construction of an MPI derived datatype that is then written\n      collectively in a single call. For more information, see\n      https://www.hdfgroup.org/HDF5/docNewFeatures/NewFeaturesCollectiveMetadataIoDocs.html.\n\n\n\n    Library\n    --------\n    - Concurrent Access to HDF5 Files - Single Writer/ Multple Reader (SWMR)\n\n      The Single Writer/ Multiple Reader or SWMR feature enables users to\n      read data concurrently while writing it. Communications between the\n      processes and file locking are not required. The processes can run\n      on the same or on different platforms as long as they share a common\n      file system that is POSIX compliant. For more information, see the\n      Single-Writer/Multiple-Reader (SWMR) documentation at\n      https://www.hdfgroup.org/HDF5/docNewFeatures/NewFeaturesSwmrDocs.html.\n\n    - Virtual Dataset (VDS)\n\n      The VDS feature enables data to be accessed across HDF5 files\n      using standard HDF5 objects such as groups and datasets without\n      rewriting or rearranging the data. An HDF5 virtual dataset (VDS)\n      is an HDF5 dataset that is composed of source HDF5 datasets in\n      a predefined mapping. VDS can be used with the SWMR feature. For\n      documentation, check\n      https://www.hdfgroup.org/HDF5/docNewFeatures/NewFeaturesVirtualDatasetDocs.html.\n\n    - Persistent Free File Space Tracking\n\n      Usage patterns when working with an HDF5 file sometimes result in\n      wasted space within the file. This can also impair access times\n      when working with the resulting files. The new file space management\n      feature provides strategies for managing space in a file to improve\n      performance in both of these areas. For more information, see\n      https://www.hdfgroup.org/HDF5/docNewFeatures/NewFeaturesFileSpaceMgmtDocs.html.\n\n    - Version 3 Metadata Cache\n\n      The version 3 metadata cache moves management of metadata I/O from \n      the clients to the metadata cache proper.  This change is essential for\n      SWMR and other features that have yet to be released.\n\n\n\n    C++ Library\n    ------------\n    - New Member Function Added to H5::ArrayType\n\n      The assignment operator ArrayType::operator= was added because\n      ArrayType has pointer data members.\n\n      (BMR - 2016/03/07, HDFFV-9562)\n\n\n\n    Tools\n    ------\n    - h5watch\n\n      The h5watch tool allows users to output new records appended to\n      a dataset under SWMR access as it grows. The functionality is\n      similar to the Unix user command \"tail\" with the follow option,\n      which outputs appended data as the file grows. For more\n      information, see\n      https://www.hdfgroup.org/HDF5/docNewFeatures/NewFeaturesSwmrDocs.html#Tools.\n\n    - h5format_convert\n\n      The h5format_convert tool allows users to convert the indexing\n      type of a chunked dataset made with a 1.10.x version of the HDF5\n      Library when the latest file format is used to the 1.8.x version 1 B-tree indexing\n      type. For example, datasets created using SWMR access, can be\n      converted to be accessed by the HDF5 1.18 library and tools. The\n      tool does not rewrite raw data, but it does rewrite HDF5 metadata.\n\n\n\n    High-Level APIs\n    ----------------\n    - H5DOappend\n\n      The function appends data to a dataset along a specified dimension.\n\n\n    C Packet Table API\n    ------------------\n    - Replacement of a Public Function with H5PTcreate\n\n      The existing function H5PTcreate_fl limits applications so they\n      can use the deflate compression only. The public function\n      H5PTcreate has been added to replace H5PTcreate_fl. H5PTcreate\n      takes a property list identifier to provide flexibility on\n      creation properties.\n\n      (BMR - 2016/03/04, HDFFV-8623)\n\n    - New Public Functions: H5PTget_dataset and H5PTget_type\n\n      Two accessor functions have been added. H5PTget_dataset returns\n      the identifier of the dataset associated with the packet table, \n      and H5PTget_type returns the identifier of the datatype used by\n      the packet table.\n\n      (BMR, 2016/03/04, HDFFV-8623)\n\n    - Regarding #ifdef VLPT_REMOVED\n\n      The #ifdef VLPT_REMOVED blocks have been removed from the packet\n      table (PT) library source except for the following functions:\n        + H5PTis_varlen() has been made available again\n        + H5PTfree_vlen_readbuff() is now H5PTfree_vlen_buff()\n\n      (BMR - 2016/03/04, HDFFV-442)\n\n    C++ Packet Table API\n    --------------------\n    - New Constructor Added to FL_PacketTable\n\n      An overloaded constructor has been added to FL_PacketTable and\n      takes a property list identifier to provide flexibility on\n      creation properties.\n\n      (BMR - 2016/03/08, HDFFV-8623)\n\n    - New Public Functions\n\n      Two accessor wrappers are added to class PacketTable.\n      PacketTable::GetDataset() returns the identifier of the dataset\n      associated with the packet table, and PacketTable::GetDatatype()\n      returns the identifier of the datatype that the packet table uses.\n\n      (BMR - 2016/03/04, HDFFV-8623)\n\n    - Member Functions with \"char*\" as an Argument\n\n      Overloaded functions were added to provide the \"const char*\"\n      argument; the existing version will be deprecated in future\n      releases.\n\n      (BMR - 2016/03/04, HDFFV-8623)\n\n    - Regarding #ifdef VLPT_REMOVED\n\n      The #ifdef VLPT_REMOVED blocks have been removed from the packet\n      table library source code except for the following functions:\n        + VL_PacketTable::IsVariableLength() was moved to PacketTable\n        + VL_PacketTable::FreeReadBuff() is now PacketTable::FreeBuff()\n\n      (BMR - 2016/03/04, HDFFV-442)\n\n\n\n    Java Wrapper Library\n    --------------------\n\n    The Java HDF5 JNI library has been integrated into the HDF5 repository.\n    The configure option is \"--enable-java\", and the CMake option is\n    HDF5_BUILD_JAVA:BOOL=ON. The package hierarchy has changed from the\n    HDF5 1.8 JNI, which was \"ncsa.hdf.hdflib.hdf5\", to HDF5 1.10,\n    \"hdf.hdflib.hdf5\".\n\n    A number of new APIs were added including some for VDS and SWMR.\n\n\n\n    Other Important Changes\n    -----------------------\n\n    The hid_t type was changed from 32-bit to a 64-bit value.\n\n\n\nIssues Addressed in this Release Since alpha1\n=============================================\n\n     - H5Pget_virtual_printf_gap, H5Pget_virtual_view, H5Pget_efile_prefix\n\n       The correct access property list settings from the\n       H5Pget_virtual_printf_gap, H5Pget_virtual_view, and\n       H5Pget_efile_prefix function calls could not be retrieved\n       using H5Dget_access_plist().\n\n       Fixed.\n\n       (DER and NAF - 2016/03/14, HDFFV-9716)\n\n     - h5dump\n\n       When h5dump was provided with the name of a non-existing file or\n       when optional arguments were the last option on the command line,\n       h5dump would segfault.\n\n       Fixed.\n\n       (ADB 2016/02/28 HDFFV-9639, HDFFV-9684)\n\n     - No Error Message for Corrupt Metadata\n\n       The HDF5 Library did not propagate an error when it encountered\n       corrupt metadata in an HDF5 file. The issue was fixed for a\n       specific file provided by a user. If you still see the problem,\n       please contact help@hdfgroup.org\n\n       Fixed.\n\n       (MC - 2016/02/18, HDFFV-9670)\n\n     - Problem Reading Chunked Datasets with a String Datatype Larger\n       Than the Chunk Size in Bytes\n\n       When the latest file format was used and when a chunked dataset\n       was created with a datatype with the size bigger than a chunk\n       size, the data could not be read back. The issue was reported\n       for chunked datasets with a string datatype and was confirmed\n       for other datatypes with the sizes bigger than the chunk size in\n       bytes.\n\n       Fixed.\n\n       (JM - 2016/02/13, HDFFV-9672)\n\n     - Control over the Location of External Files\n\n       Users were unable to specify the locations of external files.\n\n       Two APIs - H5Pget_efile_prefix and H5Pset_efile_prefix - were\n       added so that users could specify the locations of external files.\n\n       (DER - 2016/02/04, HDFFV-8740)\n\n\n\nIssues Addressed in this Release Since alpha0\n=============================================\n    - h5format_convert\n\n      The h5format_convert tool did not downgrade the version of the\n      superblock.\n\n      Fixed. The tool now will downgrade the version of the superblock.\n\n      (EIP 2016/01/11)\n\n    - Crashes with multiple threads: invalid pointers\n\n      It was reported that alpha0 crashed when used with multiple\n      threads. The issue exists in the HDF5 Library versions 1.8 and\n      1.9. The problem is related to a shared file pointer used in some\n      miscellaneous data structures. The thread-safe library exposed\n      paths in the library where a file pointer became invalid.\n\n      The alpha1 release contains the fixes for the specific use case\n      as described in HDFFV-9643. We will keep working on identifying\n      and fixing other paths in the library with similar problems.\n\n      (EIP - 2016/01/15, HDFFV-9643)\n\n\n\nSupported Platforms\n===================\nThe following platforms are supported and have been tested for this release.\nThey are built with the configure process unless specified otherwise.\n\n    AIX 6.1                       xlc/xlc_r 10.1.0.5\n    (NASA G-ADA)                  xlC/xlC_r 10.1.0.5\n                                  xlf90/xlf90_r 12.1.0.6\n\n    Linux 2.6.32-573.18.1.el6    GNU C (gcc), Fortran (gfortran), C++ (g++)\n    #1 SMP x86_64 GNU/Linux       compilers:\n    (mayll/platypus)                 Version 4.4.7 20120313 (Red Hat 4.4.7-16)\n                                     Version 4.9.3, Version 5.2.0\n                                  PGI C, Fortran, C++ for 64-bit target on\n                                  x86-64;\n                                      Version 15.7-0\n                                  Intel(R) C (icc), C++ (icpc), Fortran (icc)\n                                  compilers:\n                                     Version 15.0.3.187 Build 20150407\n                                  MPICH 3.1.4 compiled with GCC 4.9.3\n\n    Linux 2.6.32-504.8.1.el6.ppc64 gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-11)\n    #1 SMP ppc64 GNU/Linux        g++ (GCC) 4.4.7 20120313 (Red Hat 4.4.7-11)\n    (ostrich)                     GNU Fortran (GCC) 4.4.7 20120313 (Red Hat 4.4.7-11)\n                                  IBM XL C/C++ V13.1\n                                  IBM XL Fortran V15.1\n\n    Linux 3.10.0-327.10.1.el7   GNU C (gcc), Fortran (gfortran), C++ (g++)\n    #1 SMP x86_64 GNU/Linux       compilers:\n    (kituo/moohan)                  Version 4.8.5 20150623 (Red Hat 4.8.5-4)\n                                    Version 4.9.3, Version 5.2.0\n                                  Intel(R) C (icc), C++ (icpc), Fortran (icc)\n                                  compilers:\n                                     Version 15.0.3.187 Build 20150407\n                                  MPICH 3.1.4 compiled with GCC 4.9.3\n\n    SunOS 5.11 32- and 64-bit     Sun C 5.12 SunOS_sparc\n    (emu)                         Sun Fortran 95 8.6 SunOS_sparc\n                                  Sun C++ 5.12 SunOS_sparc\n\n    Windows 7                     Visual Studio 2012 w/ Intel Fortran 15 (cmake)\n                                  Visual Studio 2013 w/ Intel Fortran 15 (cmake)\n                                  Visual Studio 2015 w/ Intel Fortran 16 (cmake)\n                                  Cygwin(CYGWIN_NT-6.1 2.2.1(0.289/5/3) gcc(4.9.3) compiler and gfortran)\n                                  (cmake and autotools)\n\n    Windows 7 x64                 Visual Studio 2012 w/ Intel Fortran 15 (cmake)\n                                  Visual Studio 2013 w/ Intel Fortran 15 (cmake)\n                                  Visual Studio 2015 w/ Intel Fortran 16 (cmake)\n\n    Windows 8.1                   Visual Studio 2012 w/ Intel Fortran 15 (cmake)\n                                  Visual Studio 2013 w/ Intel Fortran 15 (cmake)\n\n    Windows 8.1 x64               Visual Studio 2012 w/ Intel Fortran 15 (cmake)\n                                  Visual Studio 2013 w/ Intel Fortran 15 (cmake)\n\n    Mac OS X Mt. Lion 10.8.5      Apple clang/clang++ version 5.1 from Xcode 5.1\n    64-bit                  gfortran GNU Fortran (GCC) 4.8.2\n    (swallow/kite)                Intel icc/icpc/ifort version 15.0.3\n\n    Mac OS X Mavericks 10.9.5     Apple clang/clang++ version 6.0 from Xcode 6.2.0\n    64-bit                  gfortran GNU Fortran (GCC) 4.9.2\n    (wren/quail)                  Intel icc/icpc/ifort version 15.0.3\n\n    Mac OS X Yosemite 10.10.5     Apple clang/clang++ version 6.0 from Xcode 7.0.0\n    64-bit                  gfortran GNU Fortran (GCC) 4.9.2\n    (osx1010dev/osx1010test)      Intel icc/icpc/ifort version 15.0.3\n\n    Mac OS X El Capitan 10.11.3     Apple clang/clang++ version 7.0.2 from Xcode 7.0.2\n    64-bit                  gfortran GNU Fortran (GCC) 5.2.0\n    (osx1010dev/osx1010test)      Intel icc/icpc/ifort version 15.0.3\n\n\n\nTested Configuration Features Summary\n=====================================\n\n    In the tables below\n          y   = tested\n          n   = not tested in this release\n          C   = Cluster\n          W   = Workstation\n          x   = not working in this release\n          dna = does not apply\n          ( ) = footnote appears below second table\n          <blank> = testing incomplete on this feature or platform\n\nPlatform                              C         F90/   F90      C++  zlib  SZIP\n                                      parallel  F2003  parallel\nSunOS 5.11 32-bit                       n        y/y    n        y    y     y\nSunOS 5.11 64-bit                       n        y/y    n        y    y     y\nWindows 7                               y        y/y    n        y    y     y\nWindows 7 x64                           y        y/y    n        y    y     y\nWindows 7 Cygwin                        n        y/y    n        y    y     n\nWindows 8.1                             n        y/y    n        y    y     y\nWindows 8.1 x64                         n        y/y    n        y    y     y\nMac OS X Mountain Lion 10.8.5 64-bit    n        y/y    n        y    y     y\nMac OS X Mavericks 10.9.5 64-bit        n        y/y    n        y    y     y\nMac OS X Yosemeti 10.10.5 64-bit        n        y/y    n        y    y     y\nAIX 6.1 32- and 64-bit                  n        y/n    n        y    y     y\nCentOS 6.7 Linux 2.6.32 x86_64 GNU      y        y/y    y        y    y     y\nCentOS 6.7 Linux 2.6.32 x86_64 Intel    n        y/y    n        y    y     y\nCentOS 6.7 Linux 2.6.32 x86_64 PGI      n        y/y    n        y    y     y\nCentOS 7.1 Linux 3.10.0 x86_64 GNU      y        y/y    y        y    y     y\nCentOS 7.1 Linux 3.10.0 x86_64 Intel    n        y/y    n        y    y     y\nLinux 2.6.32-431.11.2.el6.ppc64         n        y/n    n        y    y     y\n\nPlatform                                 Shared  Shared    Shared    Thread-\n                                         C libs  F90 libs  C++ libs  safe\nSunOS 5.11 32-bit                          y       y         y         y\nSunOS 5.11 64-bit                          y       y         y         y\nWindows 7                                  y       y         y         y\nWindows 7 x64                              y       y         y         y\nWindows 7 Cygwin                           n       n         n         y\nWindows 8.1                                y       y         y         y\nWindows 8.1 x64                            y       y         y         y\nMac OS X Mountain Lion 10.8.5 64-bit       y       n         y         y\nMac OS X Mavericks 10.9.5 64-bit           y       n         y         y\nMac OS X Yosemeti 10.10.5 64-bit           y       n         y         y\nAIX 6.1 32- and 64-bit                     y       n         n         y\nCentOS 6.7 Linux 2.6.32 x86_64 GNU         y       y         y         y\nCentOS 6.7 Linux 2.6.32 x86_64 Intel       y       y         y         y\nCentOS 6.7 Linux 2.6.32 x86_64 PGI         y       y         y         y\nCentOS 7.1 Linux 3.10.0 x86_64 GNU         y       y         y         y\nCentOS 7.1 Linux 3.10.0 x86_64 Intel       y       y         y         y\nLinux 2.6.32-431.11.2.el6.ppc64            y       y         y         y\n\nCompiler versions for each platform are listed in the preceding\n\"Supported Platforms\" table.\n\n\n\nMore Tested Platforms\n=====================\nThe following platforms are not supported but have been tested for this release.\n\n    Linux 2.6.18-431.11.2.el6     g95 (GCC 4.0.3 (g95 0.94!)\n    #1 SMP x86_64 GNU/Linux\n    (platypus)\n\n    Windows 7                     Visual Studio 2008  (cmake)\n\n    Windows 7 x64                 Visual Studio 2008  (cmake)\n\n    Windows 7 x64                 Visual Studio 2010  (cmake) with SWMR using GPFS\n\n    Windows 10                    Visual Studio 2013 w/ Intel Fortran 15 (cmake)\n\n    Windows 10 x64                Visual Studio 2013 w/ Intel Fortran 15 (cmake)\n\n    Debian7.5.0 3.2.0-4-amd64 #1 SMP Debian 3.2.51-1 x86_64 GNU/Linux\n                                  gcc (Debian 4.7.2-5) 4.7.2\n                                  GNU Fortran (Debian 4.7.2-5) 4.7.2\n                                  (cmake and autotools)\n\n    Fedora20 3.15.3-200.fc20.x86_64 #1 SMP x86_64 x86_64 x86_64 GNU/Linux\n                                  gcc (GCC) 4.8.3 20140624 (Red Hat 4.8.3-1)\n                                  GNU Fortran (GCC) 4.8.3 20140624 (Red Hat 4.8.3-1)\n                                  (cmake and autotools)\n\n    SUSE 13.1 3.11.10-17-desktop #1 SMP PREEMPT x86_64 x86_64 x86_64 GNU/Linux\n                                  gcc (SUSE Linux) 4.8.1\n                                  GNU Fortran (SUSE Linux) 4.8.1\n                                  (cmake and autotools)\n\n    Ubuntu 14.04 3.13.0-35-generic #62-Ubuntu SMP x86_64 GNU/Linux\n                                  gcc (Ubuntu/Linaro 4.9.1-0ubuntu1) 4.9.1\n                                  GNU Fortran (Ubuntu/Linaro 4.9.1-0ubuntu1) 4.9.1\n                                  (cmake and autotools)\n\n    hopper.nersc.gov              PrgEnv-gnu/5.2.40\n                                  gcc (GCC) 4.9.2 20141030 (Cray Inc.)\n                                  GNU Fortran (GCC) 4.9.2 20141030 (Cray Inc.)\n                                  g++ (GCC) 4.9.2 20141030 (Cray Inc.)\n\n\n\nKnown Problems and Limitations\n==============================\nThis section contains the list of known problems and limitations introduced\nin this release of HDF5.\n\nNote: this list is not exhaustive of all known issues discovered in HDF5\nsoftware to date. For a list of significant problems and known workarounds\nidentified in past releases, please refer to:\n\nhttps://www.hdfgroup.org/HDF5/release/known_problems/\n\nThe HDF Group also maintains a JIRA issue-tracking database which is used to\ncapture all known issues which are too numerous to reasonably list in this\ndocument. The HDF Group is taking steps to make our JIRA issue database\nopen to the public, and this section will refer to that database in a future\nrelease. In the meantime, please contact help@hdfgroup.org if you come across\nan issue not listed here or at the link above, and we will provide any\ninformation about known workarounds that we have or add it to our list of\nknown issues if it is a new issue.\n\n - The JUnit-interface test may fail on Solaris platforms. The result of\n   a test for verifying the content of the error stack to stdout is\n   in a different order on Solaris then other platforms. Use make -i option\n   to test beyond the java/test folder.\n   (ADB - 2016/03/22, HDFFV-9734)\n\n - The flush/refresh test occasionally fails on OS X platforms. This is\n   being investigated but no fix or workaround is available at this time.\n   (DER - 2016/03/22, HDFFV-9731)\n\n - The VDS/SWMR test will fail with a segmentation fault if the library\n   is built with --enable-using-memchecker. The is due to a VDS shutdown\n   procedure freeing a shared resource too early when the memory\n   checker changes are built. This problem does not arise when the\n   memory checker changes are not used since the internal library free\n   lists behave differently. The memory checker configure option should\n   normally only be used under special circumstances so this should not\n   affect most users. Users should be aware that the --enable-using-memchecker\n   + VDS combination may cause a segfault, however, so Valgrind et al. may\n   have to be used with an HDF5 library built without the feature if this\n   proves to be a problem.\n   (DER - 2016/03/21, HDFFV-9732)\n\n - SWMR feature limitations\n   The SWMR feature will only work if an HDF5 file under SWMR access resides\n   on a file system that obeys POSIX write() ordering semantics. Because of\n   this, SWMR will not work on  network file systems such as NFS or SMB/Windows\n   file shares since those systems do not guarantee write odering. SWMR\n   regression tests are likely to fail if run on a network file system. SWMR\n   is currently not tested on Windows though it can be tested manually\n   (some of the SWMR test programs are built by CMake), and there are no\n   obvious reasons for it to not work on NTFS or GPFS.\n   (EIP - 2016/03/20, HDFFV-9733)\n\n - VDS feature limitation\n   Currently, the path to a VDS source file is interpreted as relative to the\n   directory where the executable program runs and not to the HDF5 file with\n   the VDS dataset unless a full path to the source file is specified during\n   the mapping.\n   (EIP - 2016/03/20, HDFFV-9724)\n\n - When building HDF5 with Java using CMake and specifying Debug for CMAKE_BUILD_TYPE,\n   there is a missing command argument for the tests of the examples.\n\n   This error can be avoided by not building Java with Debug, HDF5_BUILD_JAVA:BOOL=OFF, \n   or not building Examples, HDF5_BUILD_EXAMPLES:BOOL=OFF.\n   (LRK - 2016/03/30, HDFFV-9743) \n\n - The H5Lexists API changed behavior in HDF5-1.10 when used with a file handle \n   and root group name (\"/\"):\n\n   H5Lexists(fileid, \"/\")\n\n   In HDF5-1.8 it returns false (0) and in HDF5-1.10 it returns true (1). \n   The documentation will be updated with information regarding this change.\n   (LRK - 2016/03/30, HDFFV-8746)\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/java/test/TestH5PL.java": "/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Copyright by The HDF Group.                                               *\n * Copyright by the Board of Trustees of the University of Illinois.         *\n * All rights reserved.                                                      *\n *                                                                           *\n * This file is part of HDF5.  The full HDF5 copyright notice, including     *\n * terms governing use, modification, and redistribution, is contained in    *\n * the COPYING file, which can be found at the root of the source code       *\n * distribution tree, or in https://support.hdfgroup.org/ftp/HDF5/releases.  *\n * If you do not have access to either file, you may request a copy from     *\n * help@hdfgroup.org.                                                        *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\npackage test;\n\nimport static org.junit.Assert.assertTrue;\nimport static org.junit.Assert.fail;\nimport hdf.hdf5lib.H5;\nimport hdf.hdf5lib.HDF5Constants;\nimport hdf.hdf5lib.exceptions.HDF5LibraryException;\n\nimport org.junit.After;\nimport org.junit.Before;\nimport org.junit.Ignore;\nimport org.junit.Rule;\nimport org.junit.Test;\nimport org.junit.rules.TestName;\n\npublic class TestH5PL {\n    @Rule public TestName testname = new TestName();\n    private static String FILENAME = \"h5_dlopenChunk.h5\";\n    private static String DATASETNAME = \"DS1\";\n    private static final int DIM_X = 6;\n    private static final int DIM_Y = 8;\n    private static final int CHUNK_X = 4;\n    private static final int CHUNK_Y = 4;\n    private static final int RANK = 2;\n    private static final int NDIMS = 2;\n    private static final int H5Z_FILTER_DYNLIB4 = 260;\n\n    @Before\n    public void checkOpenIDs() {\n        assertTrue(\"H5 open ids is 0\",H5.getOpenIDCount()==0);\n        System.out.print(testname.getMethodName());\n    }\n    @After\n    public void nextTestName() {\n        System.out.println();\n    }\n\n    @Test\n    public void TestH5PLplugins() {\n        try {\n            int plugin_flags = H5.H5PLget_loading_state();\n            assertTrue(\"H5.H5PLget_loading_state: \"+plugin_flags, plugin_flags == HDF5Constants.H5PL_ALL_PLUGIN);\n            int new_setting = plugin_flags & ~HDF5Constants.H5PL_FILTER_PLUGIN;\n            H5.H5PLset_loading_state (new_setting);\n            int changed_flags = H5.H5PLget_loading_state();\n            assertTrue(\"H5.H5PLget_loading_state: \"+changed_flags, changed_flags == new_setting);\n            H5.H5PLset_loading_state (plugin_flags);\n            changed_flags = H5.H5PLget_loading_state();\n            assertTrue(\"H5.H5PLget_loading_state: \"+changed_flags, changed_flags == HDF5Constants.H5PL_ALL_PLUGIN);\n        }\n        catch (Throwable err) {\n            err.printStackTrace();\n            fail(\"TestH5PLplugins \" + err);\n        }\n    }\n\n    @Test\n    public void TestH5PLpaths() {\n        try {\n            // Get the original number of paths\n            int nStartPaths = H5.H5PLsize();\n\n            int nPaths;                     /* # paths from H5PLSize()      */\n            int nTruePaths = nStartPaths;   /* What the # paths should be   */\n            int index;                      /* Path table index             */\n            String path;                    /* Path from H5PLget()          */\n\n            // APPEND a path and ensure it was added correctly\n            String pathAppend = \"path_append\";\n            H5.H5PLappend(pathAppend);\n\n            nPaths = H5.H5PLsize();\n            nTruePaths++;\n            assertTrue(\"# paths should be \" + nTruePaths + \" but was \" + nPaths, nTruePaths == nPaths);\n\n            index = nTruePaths - 1;\n            path = H5.H5PLget(index);\n            assertTrue(\"Path should be \" + pathAppend + \" but was \" + path, path.compareToIgnoreCase(pathAppend) == 0);\n\n            // PREPEND a path and ensure it was added correctly\n            String pathPrepend = \"path_prepend\";\n            H5.H5PLprepend(pathPrepend);\n\n            nPaths = H5.H5PLsize();\n            nTruePaths++;\n            assertTrue(\"# paths should be \" + nTruePaths + \" but was \" + nPaths, nTruePaths == nPaths);\n\n            index = 0;\n            path = H5.H5PLget(index);\n            assertTrue(\"Path should be \" + pathPrepend + \" but was \" + path, path.compareToIgnoreCase(pathPrepend) == 0);\n\n            // INSERT a path and ensure it was added correctly\n            // Inserting at the index == # of start paths ensures we're in the middle\n            String pathInsert = \"path_insert\";\n            index = nStartPaths;\n            H5.H5PLinsert(pathInsert, index);\n\n            nPaths = H5.H5PLsize();\n            nTruePaths++;\n            assertTrue(\"# paths should be \" + nTruePaths + \" but was \" + nPaths, nTruePaths == nPaths);\n\n            path = H5.H5PLget(index);\n            assertTrue(\"Path should be \" + pathInsert + \" but was \" + path, path.compareToIgnoreCase(pathInsert) == 0);\n\n            // REPLACE the path we just added and ensure it updated correctly\n            String pathReplace = \"path_replace\";\n            index = nStartPaths;\n            H5.H5PLreplace(pathReplace, index);\n\n            nPaths = H5.H5PLsize();\n            assertTrue(\"# paths should be \" + nTruePaths + \" but was \" + nPaths, nTruePaths == nPaths);\n\n            path = H5.H5PLget(index);\n            assertTrue(\"Path should be \" + pathReplace + \" but was \" + path, path.compareToIgnoreCase(pathReplace) == 0);\n\n            // REMOVE the path we just replaced and check that the table was compacted\n            // The (index+1) path should move down to fill the space when the path is removed.\n            index = nStartPaths;\n            String pathRemove = H5.H5PLget(index + 1);\n            H5.H5PLremove(index);\n\n            nPaths = H5.H5PLsize();\n            nTruePaths--;\n            assertTrue(\"# paths should be \" + nTruePaths + \" but was \" + nPaths, nTruePaths == nPaths);\n\n            path = H5.H5PLget(index);\n            assertTrue(\"Path should be \" + pathRemove + \" but was \" + path, path.compareToIgnoreCase(pathRemove) == 0);\n        }\n        catch (Throwable err) {\n            err.printStackTrace();\n            fail(\"TestH5PLpaths \" + err);\n        }\n    }\n\n    @Ignore\n    public void TestH5PLdlopen() {\n        long file_id = -1;\n        long filespace_id = -1;\n        long dataset_id = -1;\n        long fapl_id = -1;\n        long dcpl_id = -1;\n        try {\n            int[]  cd_values = {9, 0, 0, 0};\n            int[] libversion = {0, 0, 0};\n            long[] dims = { DIM_X, DIM_Y };\n            long[] chunk_dims = { CHUNK_X, CHUNK_Y };\n            int[][] dset_data = new int[DIM_X][DIM_Y];\n            int[] mdc_nelmts = {0};\n            long[] rdcc_nelmts = {0};\n            long[] rdcc_nbytes = {0};\n            double[] rdcc_w0 = {0};\n\n            // Initialize data to \"1\", to make it easier to see the selections.\n            for (int indx = 0; indx < DIM_X; indx++)\n                for (int jndx = 0; jndx < DIM_Y; jndx++)\n                    dset_data[indx][jndx] = 1;\n\n            // Create a new file using default properties.\n            try {\n                file_id = H5.H5Fcreate(FILENAME, HDF5Constants.H5F_ACC_TRUNC, HDF5Constants.H5P_DEFAULT,\n                        HDF5Constants.H5P_DEFAULT);\n            }\n            catch (Exception e) {\n                e.printStackTrace();\n                fail(\"TestH5PLdlopen H5Fcreate:\" + e);\n            }\n\n            // Create dataspace. Setting maximum size to NULL sets the maximum\n            // size to be the current size.\n            try {\n                filespace_id = H5.H5Screate_simple(RANK, dims, null);\n            }\n            catch (Exception e) {\n                e.printStackTrace();\n                fail(\"TestH5PLdlopen H5Screate_simple:\" + e);\n            }\n\n            // Create the dataset creation property list.\n            try {\n                dcpl_id = H5.H5Pcreate(HDF5Constants.H5P_DATASET_CREATE);\n            }\n            catch (Exception e) {\n                e.printStackTrace();\n                fail(\"TestH5PLdlopen H5Pcreate:\" + e);\n            }\n\n            // Set the chunk size.\n            try {\n                if (dcpl_id >= 0)\n                    H5.H5Pset_chunk(dcpl_id, NDIMS, chunk_dims);\n            }\n            catch (Exception e) {\n                e.printStackTrace();\n                fail(\"TestH5PLdlopen H5Pset_chunk:\" + e);\n            }\n\n            try {\n                H5.H5get_libversion(libversion);\n                cd_values[1] = libversion[0];\n                cd_values[2] = libversion[1];\n                cd_values[3] = libversion[2];\n                if (dcpl_id >= 0)\n                    H5.H5Pset_filter(dcpl_id, H5Z_FILTER_DYNLIB4, HDF5Constants.H5Z_FLAG_MANDATORY, 4, cd_values);\n            }\n            catch (Exception e) {\n                e.printStackTrace();\n                fail(\"TestH5PLdlopen H5Pset_filter:\" + e);\n            }\n\n            // Create the chunked dataset.\n            try {\n                if ((file_id >= 0) && (filespace_id >= 0) && (dcpl_id >= 0))\n                    dataset_id = H5.H5Dcreate(file_id, DATASETNAME, HDF5Constants.H5T_NATIVE_INT, filespace_id,\n                            HDF5Constants.H5P_DEFAULT, dcpl_id, HDF5Constants.H5P_DEFAULT);\n            }\n            catch (Exception e) {\n                e.printStackTrace();\n                fail(\"TestH5PLdlopen H5Dcreate:\" + e);\n            }\n\n            try {\n                if (dataset_id >= 0)\n                    H5.H5Dwrite(dataset_id, HDF5Constants.H5T_NATIVE_INT, HDF5Constants.H5S_ALL, HDF5Constants.H5S_ALL,\n                            HDF5Constants.H5S_ALL, dset_data);\n            }\n            catch (Exception e) {\n                e.printStackTrace();\n                fail(\"TestH5PLdlopen H5Dwrite:\" + e);\n            }\n        }\n        catch (Throwable err) {\n            err.printStackTrace();\n            fail(\"TestH5PLdlopen \" + err);\n        }\n        finally {\n            // End access to the dataset and release resources used by it.\n            if (dcpl_id >= 0)\n                try {H5.H5Pclose_class(dcpl_id);} catch (Throwable err) {}\n            if (dataset_id >= 0)\n                try {H5.H5Dclose(dataset_id);} catch (Throwable err) {}\n            if (filespace_id >= 0)\n                try {H5.H5Sclose(filespace_id);} catch (Throwable err) {}\n            if (file_id >= 0)\n                try {H5.H5Fclose(file_id);} catch (Throwable err) {}\n        }\n    }\n}\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/config/cmake_ext_mod/hdf.ico",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/config/cmake_ext_mod/hdf.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/config/cmake_ext_mod/hdf.icns",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/hl/test/test_table_le.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/hl/test/test_ds_le.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/hl/test/test_table_cray.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/hl/test/test_ld.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/hl/test/test_ds_be.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/hl/test/test_table_be.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/hl/tools/gif2h5/testfiles/image1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/hl/tools/gif2h5/testfiles/ex_image2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/hl/tools/gif2h5/testfiles/h52giftst.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/tbogus.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/be_data.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/corrupt_stab_msg.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/family_v16_00002.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/tmtimeo.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/family_v16_00003.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/multi_file_v16-r.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/test_filters_be.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/mergemsg.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/family_v16_00000.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/btree_idx_1_6.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/none.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/tmtimen.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/bad_compound.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/group_old.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/tarrold.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/bad_offset.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/btree_idx_1_8.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/multi_file_v16-s.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/fsm_aggr_nopersist.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/be_extlink1.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/filter_error.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/be_extlink2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/h5fc_ext3_isf.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/tbad_msg_count.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/le_extlink1.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/POSIX_Order_Write_Test_Report.docx",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/le_extlink2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/filespace_1_8.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/noencoder.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/file_image_core_test.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/tlayouto.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/paged_nopersist.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/fsm_aggr_persist.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/h5fc_ext_none.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/fill18.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/le_data.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/tsizeslheap.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/aggr.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/paged_persist.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/filespace_1_6.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/deflate.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/h5fc_ext2_sf.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/fill_old.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/th5s.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/family_v16_00001.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/POSIX_Order_Write_Test_Report.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/h5fc_ext1_i.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/specmetaread.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/h5fc_ext1_f.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/test_filters_le.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/memleak_H5O_dtype_decode_helper_H5Odtype.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/test/h5fc_ext2_if.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5jam/testfiles/twithub513.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5jam/testfiles/twithub.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5jam/testfiles/tall.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_uint8be_ex-3.dat",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_nested_8bit_enum.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_fletcher.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_nested_8bit_enum_deflated.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_int32le_1d_ex-0.dat",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_int32le_3d_ex-0.dat",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_f32le_ex.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_refs.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_uint8be_ex.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/bounds_latest_latest.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_layout.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_shuffle.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_attr.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_layout.UD.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_paged_nopersist.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_f32le.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_int32le_3d_ex.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_hlink.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_soffset.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_named_dtypes.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_layout3.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_int32le_2d_ex-0.dat",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_ext.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_fsm_aggr_nopersist.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_none.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_uint8be_ex-0.dat",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_int32le_3d.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_int32le_2d.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_fill.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_f32le_ex-0.dat",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_int32le_2d_ex.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_deflate.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_paged_persist.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_layouto.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_early.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_fsm_aggr_persist.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_layout2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_int32le_1d_ex.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_szip.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_filters.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_nbit.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_uint8be_ex-1.dat",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_attr_refs.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_uint8be.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_uint8be_ex-2.dat",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_aggr.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_objs.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5repack/testfiles/h5repack_int32le_1d.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5copy/testfiles/h5copytst_new.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5copy/testfiles/h5copy_ref.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5copy/testfiles/h5copy_extlinks_trg.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5copy/testfiles/h5copy_extlinks_src.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5copy/testfiles/h5copytst.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5copy/testfiles/tudfilter.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5copy/testfiles/tudfilter2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5stat/testfiles/h5stat_newgrat.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5stat/testfiles/h5stat_filters.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5stat/testfiles/h5stat_threshold.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5stat/testfiles/h5stat_idx.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5stat/testfiles/h5stat_err_old_fill.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5stat/testfiles/h5stat_err_refcount.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5stat/testfiles/h5stat_tsohm.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5stat/testfiles/h5stat_err_old_layout.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_grp_recurse_ext2-2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_dset_zero_dim_size2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/diff_strings1.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_dset2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_ext2softlink_src.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/diff_strings2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_attr3.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_attr_v_level2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_exclude3-2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_grp_recurse2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/non_comparables1.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_attr_v_level1.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_dset1.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_comp_vl_strs.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/non_comparables2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_types.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_exclude2-1.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/compounds_array_vlen2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_hyper1.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_exclude1-2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_softlinks.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_danglelinks2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_exclude2-2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_links.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_linked_softlink.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_grp_recurse_ext2-1.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_empty.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_dtypes.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/tudfilter.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_danglelinks1.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_attr2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/tudfilter2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_ext2softlink_trg.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_dset3.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_enum_invalid_values.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_attr1.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_extlink_trg.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_basic1.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/compounds_array_vlen1.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_grp_recurse_ext2-3.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_grp_recurse1.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_basic2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_grp_recurse_ext1.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_exclude1-1.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_hyper2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_extlink_src.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_exclude3-1.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5diff/testfiles/h5diff_dset_zero_dim_size1.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/misc/testfiles/h5clear_sec2_v0.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/misc/testfiles/h5clear_fsm_persist_equal.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/misc/testfiles/h5clear_mdc_image.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/misc/testfiles/h5clear_fsm_persist_user_equal.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/misc/testfiles/h5clear_fsm_persist_noclose.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/misc/testfiles/h5clear_fsm_persist_less.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/misc/testfiles/mod_h5clear_mdc_image.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/misc/testfiles/h5clear_log_v3.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/misc/testfiles/h5clear_status_noclose.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/misc/testfiles/latest_h5clear_log_v3.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/misc/testfiles/h5clear_sec2_v2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/misc/testfiles/h5clear_fsm_persist_greater.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/misc/testfiles/h5clear_fsm_persist_user_greater.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/misc/testfiles/h5clear_sec2_v3.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/misc/testfiles/latest_h5clear_sec2_v3.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/misc/testfiles/h5clear_fsm_persist_user_less.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5format_convert/testfiles/old_h5fc_ext3_isf.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5format_convert/testfiles/old_h5fc_ext2_sf.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5format_convert/testfiles/h5fc_edge_v3.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5format_convert/testfiles/h5fc_err_level.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5format_convert/testfiles/old_h5fc_ext_none.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5format_convert/testfiles/old_h5fc_ext1_s.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5format_convert/testfiles/old_h5fc_ext2_if.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5format_convert/testfiles/h5fc_ext1_s.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5format_convert/testfiles/old_h5fc_ext1_f.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5format_convert/testfiles/h5fc_ext3_isf.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5format_convert/testfiles/old_h5fc_ext2_is.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5format_convert/testfiles/h5fc_non_v3.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5format_convert/testfiles/h5fc_ext_none.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5format_convert/testfiles/h5fc_ext2_is.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5format_convert/testfiles/h5fc_ext2_sf.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5format_convert/testfiles/old_h5fc_ext1_i.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5format_convert/testfiles/h5fc_ext1_i.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5format_convert/testfiles/h5fc_ext1_f.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5format_convert/testfiles/h5fc_ext2_if.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5import/testfiles/binuin32.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5import/testfiles/txtin32.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5import/testfiles/txtstr.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5import/testfiles/txtuin32.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5import/testfiles/binuin16.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5import/testfiles/txtin16.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5import/testfiles/txtuin16.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5import/testfiles/binin8.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5import/testfiles/txtfp64.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5import/testfiles/textpfe.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5import/testfiles/binin8w.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5import/testfiles/binin32.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5import/testfiles/binin16.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5import/testfiles/txtin8.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5import/testfiles/binfp64.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/test/h5import/testfiles/txtfp32.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/family_file00015.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tcmpdints.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tbitnopaque.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tfamily00001.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/family_file00009.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tarray8.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tdatareg.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/zerodim.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/file_space.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tgrp_comments.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tattrreg.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/test35.nc",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tnamed_dtype_attr.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tarray1_big.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tgrpnullspace.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tname-sp.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tscalarintsize.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tmulti-s.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/family_file00016.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/trefer_ext2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tbitfields.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tnestedcomp.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tldouble.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tstring-at.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tref.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tarray6.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tsaf.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tvlstr.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tstr3.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tfamily00000.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tfamily00003.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tbigdims.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/thlink.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tcmpdintarray.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tref-escapes-at.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tfpformat.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tcompound_complex.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tmulti-l.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tdset2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tints4dims.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tempty.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tloop2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tstring.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tgroup.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/family_file00006.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tfilters.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tlonglinks.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/torderattr.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tintsattrs.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/topaque.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tobjref.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/family_file00012.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tsoftlinks.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tintsnodata.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tcompound2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tvldtypes4.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tnullspace.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tstr2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tstr.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/textlinksrc.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tarray2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tmany.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tscalarstring.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tno-subset.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tname-lt.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/family_file00007.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/family_file00008.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tsplit_file-m.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/family_file00010.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tattr.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tdset_idx.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/thyperslab.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tvldtypes2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/family_file00002.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tfvalues.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tcompound.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tfcontents1.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tudfilter.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/trefer_param.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/trefer_reg_1d.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/trefer_ext1.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tmulti-b.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tname-gt.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/family_file00005.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/trefer_obj.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/filter_fail.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tname-quot.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/family_file00014.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tcmpdattrintsize.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/family_file00000.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/t128bit_float.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tname-amp.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/family_file00013.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tarray4.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tudlink.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tnestedcmpddt.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/trefer_reg.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/family_file00011.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/packedbits.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tloop.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tattr2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tvldtypes5.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tarray7.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/err_attr_dspace.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tscalarattrintsize.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tattrintsize.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tcompound_complex2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tfamily00004.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tarray5.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tbinary.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tslink.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/family_file00003.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/textlink.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/family_file00017.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tattr4_be.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/trefer_compat.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tname-apos.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/family_file00004.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tnodata.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tvldtypes1.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tordergr.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/textlinktar.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/trefer_grp.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tenum.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tdset.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tfcontents2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/trefer_attr.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/trefer_obj_del.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tlarge_objname.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tscalarintattrsize.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/charsets.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/taindices.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/textlinkfar.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tvldtypes3.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/family_file00001.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tcmpdintsize.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tmulti-o.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tall.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tarray3.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tarray1.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tchar.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tref-escapes.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tvms.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/tvlenstr_array.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/4_0.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/2_a.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/1_d.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/3_2_vds.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/2_b.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/4_1.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/d.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/f-0.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/5_vds.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/a.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/1_f.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/2_d.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/2_c.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/1_e.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/1_a.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/vds-eiger.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/4_2.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/1_vds.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/1_b.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/1_c.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/5_a.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/4_vds.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/5_c.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/5_b.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/vds-percival-unlim-maxmin.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/2_e.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/2_vds.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/3_1_vds.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/f-3.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/c.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/tools/testfiles/vds/b.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/c++/src/C2Cppfunction_map.htm",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/c++/src/header.html",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/c++/src/header_files/image002.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/c++/src/header_files/help.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/c++/src/header_files/hdf_logo.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/c++/src/header_files/image001.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/c++/test/th5s.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/java/lib/hamcrest-core.jar",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/java/lib/junit.jar",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/java/lib/slf4j-api-1.7.25.jar",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/java/lib/ext/slf4j-simple-1.7.25.jar",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/java/lib/ext/slf4j-nop-1.7.25.jar",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/java/test/h5ex_g_iterate.orig",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/java/examples/groups/h5ex_g_iterate.h5",
        "/tmp/vanessa/spack-stage/spack-stage-hdf5-1.12.0-4zsjwwwweevqnvrr5ethr32tqnj3ac3t/spack-src/java/examples/groups/h5ex_g_visit.h5"
    ],
    "total_files": 3228
}