{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-launchmon-master-bgtb6k345dhvxrzwvc7t56mbj2wissb3/spack-src/configure.ac": "dnl $Header: $\ndnl\ndnl configure.ac\ndnl\ndnl --------------------------------------------------------------------------------\ndnl Copyright (c) 2008, Lawrence Livermore National Security, LLC. Produced at\ndnl the Lawrence Livermore National Laboratory. Written by Dong H. Ahn <ahn1@llnl.gov>.\ndnl LLNL-CODE-409469. All rights reserved.\ndnl\ndnl  This file is part of LaunchMON. For details, see\ndnl  https://computing.llnl.gov/?set=resources&page=os_projects\ndnl\ndnl  Please also read LICENSE -- Our Notice and GNU Lesser General Public License.\ndnl\ndnl\ndnl  This program is free software; you can redistribute it and/or modify it under the\ndnl  terms of the GNU General Public License (as published by the Free Software\ndnl  Foundation) version 2.1 dated February 1999.\ndnl\ndnl  This program is distributed in the hope that it will be useful, but WITHOUT ANY\ndnl  WARRANTY; without even the IMPLIED WARRANTY OF MERCHANTABILITY or\ndnl  FITNESS FOR A PARTICULAR PURPOSE. See the terms and conditions of the GNU\ndnl  General Public License for more details.\ndnl\ndnl  You should have received a copy of the GNU Lesser General Public License along\ndnl  with this program; if not, write to the Free Software Foundation, Inc., 59 Temple\ndnl  Place, Suite 330, Boston, MA 02111-1307 USA\ndnl --------------------------------------------------------------------------------\ndnl\ndnl   Update Log:\ndnl         Apr 28 2016 DHA: Modernize autotool support\ndnl         Apr 01 2015 ADG/KMD: Added Cray CTI support.\ndnl         Feb 20 2015 andrewg@cray.com: Added Cray support.\ndnl         Apr 30 2014 DHA: Declare 1.0.1 -- this doesn't have Cray support though.\ndnl         Apr 15 2014 DHA: Drop tools/cobo/test\ndnl         Mar 10 2014 MPL: Add secure handshake\ndnl         Aug 03 2010 DHA: Added X_AC_MW_HOSTLIST support\ndnl         Dec 28 2009 DHA: Deprecated X_AC_PREFIX_CONFIG_H to better support\ndnl                          binary distribution\ndnl         Mar 20 2009 DHA: Increase LMON_CURRENT by one as we've added\ndnl                          a few more API calls. Similarly, increase\ndnl                          LMON_AGE as this still supports 0th interface.\ndnl         Mar 11 2009 DHA: Added check for env, ssh|rsh, and totalview\ndnl         Mar 06 2009 DHA: Deprecate X_AC_THREAD_DB,\ndnl                          Added dlfcn.h presence check\ndnl         Jun 06 2008 DHA: File created.\ndnl\n\nAC_PREREQ(2.59)\n\ndnl Users shouldn't bootstrap configure from the release tarball so\ndnl this technique should be okay\nAC_INIT([LaunchMON],\n        m4_esyscmd([git describe --always | awk '/.*/ {printf \"%s\",$1; exit}']))\n\ndnl\ndnl This implements 2nd LMON interface (increase current when the\ndnl interface is changed, added, or removed.\ndnl\nAC_SUBST(LMON_CURRENT, 2)\n\ndnl\ndnl This is the 1st revision (increase revision when the\ndnl implementation has been changed but the interface stays the same)\ndnl\nAC_SUBST(LMON_REVISION, 0)\n\ndnl\ndnl Increase age when the interface has been added not removed.\ndnl\nAC_SUBST(LMON_AGE, 1)\n\ndnl -----------------------------------------------\ndnl AC_CONFIG support\ndnl -----------------------------------------------\nAC_CONFIG_AUX_DIR([config])\nAC_CONFIG_MACRO_DIR([config])\nAC_CONFIG_SRCDIR([configure.ac])\nAC_CONFIG_HEADER([config.h])\ndnl config.guess and config.sub must be distributed\nAC_CANONICAL_SYSTEM\n\ndnl\ndnl Check for pkg-config\ndnl\nPKG_PROG_PKG_CONFIG\n\n\ndnl -----------------------------------------------\ndnl Automake support\ndnl -----------------------------------------------\ndnl The new form for AM_INIT_AUTOMAKE takes only one argument\nAM_INIT_AUTOMAKE\ndnl If you don't want silent make, make V=1\nAM_SILENT_RULES([yes])\ndnl You don't want configure to rebuild Makefile.ins\nAM_MAINTAINER_MODE\n\ndnl -----------------------------------------------\ndnl Checks for the OS/CPU/RM type\ndnl -----------------------------------------------\nX_AC_PLATFORM\nX_AC_SLURM_MPAO_WR\n\ndnl -----------------------------------------------\ndnl Checks whether to enable SGI hostnames\ndnl -----------------------------------------------\nX_AC_SGI_HOSTNAMES\n\ndnl -----------------------------------------------\ndnl enable debug support\ndnl -----------------------------------------------\nX_AC_ENABLE_DEBUG\n\ndnl -----------------------------------------------\ndnl enable verbose support\ndnl -----------------------------------------------\nX_AC_ENABLE_VERBOSE\n\ndnl -----------------------------------------------\ndnl COBO is now the only comm. fab choice use to\ndnl bootstrap launchmon's\ndnl distributed components\ndnl -----------------------------------------------\nAC_DEFINE(COBO_BASED, 1, [Define 1 for COBO_BASED])\nAC_DEFINE(TEST_MORE_COLL, 1, [Define test more coll support])\nAC_DEFINE(TOOL_HOST_ENV, \"LMON_FE_WHERETOCONNECT_ADDR\", [Define TOOL_HOST_ENV])\nAC_DEFINE(TOOL_PORT_ENV, \"LMON_FE_WHERETOCONNECT_PORT\", [Define TOOL_PORT_ENV] )\nAC_DEFINE(TOOL_SS_ENV, \"LMON_SHARED_SECRET\", [Define TOOL_SS_ENV])\nAC_DEFINE(TOOL_SCH_ENV, \"LMON_SEC_CHK\", [Define TOOL_SCH_ENV])\nAC_SUBST(COMMLOC, $builddir/tools/cobo/src)\nAC_SUBST(LIBCOMM, libcobo.la)\nAC_ARG_VAR(COBOPORT, [Beginning port for COBO port scanning])\nif test \"x$COBOPORT\" = \"x\"; then\n    AC_DEFINE(COBO_BEGIN_PORT, 20101, [\n        Define the beginning port for COBO port scanning])\nelse\n    AC_DEFINE_UNQUOTED(COBO_BEGIN_PORT, [$COBOPORT], [\n        Define the beginning port for COBO port scanning])\nfi\nAC_DEFINE(COBO_PORT_RANGE, 32, [Define 32 for COBO_BASED])\n\ndnl -----------------------------------------------\ndnl with GCRYPT support?\ndnl -----------------------------------------------\nAM_PATH_LIBGCRYPT([1.2.0],[\n    AC_DEFINE([HAVE_GCRYPT],[1],[Gcrypt library is available])\n    HAVE_GCRYPT=1\n    # checking for available algorithms...\n    GCRYPT_CFLAGS=`$LIBGCRYPT_CONFIG --cflags`\n    GCRYPT_LIBS=`$LIBGCRYPT_CONFIG --libs`\n    AC_SUBST(GCRYPT_CFLAGS)\n    AC_SUBST(GCRYPT_LIBS)\n    ],[\n    # complain only if explicitely required\n    AC_MSG_ERROR([cannot configure required gcrypt library])\n    ])\n\ndnl -----------------------------------------------\ndnl Choose a security model for handshakes\ndnl -----------------------------------------------\nAC_CHECK_HEADERS([sys/types.h])\nX_AC_HANDSHAKE\n\ndnl -----------------------------------------------\ndnl enable tracing cost measurement codes?\ndnl -----------------------------------------------\nX_AC_TRACING_COST\n\ndnl -----------------------------------------------\ndnl Checks for NNODES and Ncores per node\ndnl for testing\ndnl -----------------------------------------------\nX_AC_TESTNNODES\nX_AC_NCORE_SMP\nX_AC_TEST_RM\nX_AC_MW_HOSTLIST\nX_AC_TEST_INSTALLED\n\ndnl -----------------------------------------------\ndnl Checks for programs\ndnl -----------------------------------------------\nAC_PROG_CXX\nAC_PROG_INSTALL\nAC_PROG_LIBTOOL\nAC_PROG_CC_C_O\nAM_PROG_CC_C_O\nAC_PATH_PROGS(envcmd,env,[/bin/env], /usr/local/bin:/usr/bin:/bin)\nAC_PATH_PROGS(sshcmd,ssh rsh,[/usr/bin/ssh],/usr/local/bin:/usr/bin:/bin)\nAC_PATH_PROGS(rshcmd,rsh ssh,[/usr/bin/rsh],/usr/local/bin:/usr/bin:/bin)\nAC_PATH_PROGS(tvcmd,totalview,[totalview],/usr/local/bin:/usr/bin:/bin)\nAC_DEFINE_UNQUOTED(ENVCMD,[\"$envcmd\"],[env command found])\nAC_DEFINE_UNQUOTED(SSHCMD,[\"$sshcmd\"],[ssh or its equivalent found])\nAC_DEFINE_UNQUOTED(RSHCMD,[\"$rshcmd\"],[rsh or its equivalent found])\nAC_DEFINE_UNQUOTED(TVCMD,[\"$tvcmd\"],[totalview found])\nAC_DEFINE_UNQUOTED(LMON_PREFIX, [\"$prefix\"], [install prefix])\n\ndnl -----------------------------------------------\ndnl Checks for the libraries\ndnl -----------------------------------------------\nAC_MSG_CHECKING(for libelf)\nAC_CHECK_LIB(elf,elf_begin,libelf_found=yes,libelf_found=no)\nif test \"$libelf_found\" = yes; then\n     AC_SUBST(LIBELF,-lelf)\nelse\n     AC_MSG_ERROR([libelf is needed to build this package])\nfi\n\nAC_MSG_CHECKING(for pthread)\nAC_CHECK_LIB(pthread,pthread_create,libpthread_found=yes,libpthread_found=no)\nif test \"$libpthread_found\" = yes; then\n     AC_SUBST(LIBPTHREAD,-lpthread)\nelse\n     AC_MSG_ERROR([libpthread is needed to build this package])\nfi\n\nAC_MSG_CHECKING(for librt)\nAC_CHECK_LIB(rt,clock_gettime,librt_found=yes,librt_found=no)\nif test \"$librt_found\" = yes; then\n     AC_SUBST(LIBRT,-lrt)\nelse\n     AC_MSG_ERROR([librt is needed to build this package])\nfi\n\nAC_MSG_CHECKING(for libdl)\nAC_CHECK_LIB(dl,dlopen,libdl_found=yes,libdl_found=no)\nif test \"$libdl_found\" = yes; then\n     AC_SUBST(LIBDL,-ldl)\nelse\n     AC_MSG_ERROR([libdl is needed to build this package])\nfi\n\nLX_FIND_MPI\n\ndnl -----------------------------------------------\ndnl Checks for header files.\ndnl Note: I don't think we made the code base conditionally\ndnl compiled depending on the existence of these checks.\ndnl But the code at least errors out during compililation\ndnl if they don't exist\ndnl -----------------------------------------------\nAC_LANG_PUSH([C++])\nAC_CHECK_HEADERS([stack vector map list iostream string algorithm fstream sstream cxxabi.h])\nAC_LANG_POP([C++])\nAC_HEADER_SYS_WAIT\n\ndnl\ndnl Jun 07 2012 DHA TODO: We need to check boost/tokenizer.hpp;\ndnl doing so generates whole lot of errors on some platforms\ndnl so I'm skipping that check for now. We need to\ndnl revisit that issue.\n\nAC_CHECK_HEADERS([libelf.h libelf/libelf.h],[],[],\n[[#include <elf.h>]])\n\nif test \"$ac_cv_header_libelf_h\" = \"yes\" ; then\n     AC_DEFINE(LOCATION_OF_LIBELFHEADER, [<libelf.h>],\n       [Define to header that first defines elf.])\nelif test \"$ac_cv_header_libelf_libelf_h\" = \"yes\"; then\n     AC_DEFINE(HAVE_LIBELF_H, 1, [Define 1 if we have libelf/libelf.h])\n     AC_DEFINE(LOCATION_OF_LIBELFHEADER, [<libelf/libelf.h>],\n       [Define to header that first defines elf.])\nfi\n\ndnl -----------------------------------------------\ndnl Checks for typedefs, structures, and compiler characteristics.\ndnl -----------------------------------------------\nAC_HEADER_STDBOOL\nAC_C_CONST\nAC_TYPE_PID_T\nAC_HEADER_TIME\nAC_CHECK_TYPES([struct user_regs_struct,\n                struct user_pt_regs,\n                struct user_fpregs_struct,\n                struct user_fpsimd_struct,\n                struct user_fpsimd_state],\n                ,,[#include <sys/user.h>])\n\ndnl -----------------------------------------------\ndnl Checks for library functions.\ndnl -----------------------------------------------\nAC_FUNC_FORK\nAC_FUNC_MALLOC\nAC_HEADER_STDC\nAC_TYPE_SIGNAL\nAC_FUNC_STAT\nAC_FUNC_STRFTIME\nAC_FUNC_VPRINTF\nAC_CHECK_FUNCS([gettimeofday memset strdup])\n\ndnl -----------------------------------------------\ndnl configure's OUTPUTS\ndnl -----------------------------------------------\nAC_CONFIG_FILES([\n  Makefile\n  tools/Makefile\n  tools/ciod/Makefile\n  tools/cobo/Makefile\n  tools/cobo/src/Makefile\n  tools/alps/Makefile\n  tools/alps/src/Makefile\n  tools/cti/Makefile\n  tools/handshake/Makefile\n  launchmon/Makefile\n  launchmon/src/Makefile\n  launchmon/src/linux/Makefile\n  launchmon/src/linux/lmon_api/Makefile\n  launchmon/man/Makefile\n  etc/Makefile\n  etc/pkg-specs/Makefile\n  etc/pkg-specs/llnl/Makefile\n  test/Makefile\n  test/src/Makefile])\nAC_OUTPUT\n\n",
        "/tmp/vanessa/spack-stage/spack-stage-launchmon-master-bgtb6k345dhvxrzwvc7t56mbj2wissb3/spack-src/launchmon/src/linux/Makefile.am": "## $Header: $\n##\n## Makefile.am -- Process this file with automake to produce Makefile.in \n##\n##\n##--------------------------------------------------------------------------------\n## Copyright (c) 2008, Lawrence Livermore National Security, LLC. Produced at\n## the Lawrence Livermore National Laboratory. Written by Dong H. Ahn\n## <ahn1@llnl.gov>. LLNL-CODE-409469. All rights reserved.\n##\n## This file is part of LaunchMON. For details, see\n## https://computing.llnl.gov/?set=resources&page=os_projects\n##\n## Please also read LICENSE.txt -- Our Notice and GNU Lesser General Public\n## License.\n##\n##\n## This program is free software; you can redistribute it and/or modify it under\n## the terms of the GNU General Public License (as published by the Free\n## Software Foundation) version 2.1 dated February 1999.\n##\n## This program is distributed in the hope that it will be useful, but WITHOUT\n## ANY WARRANTY; without even the IMPLIED WARRANTY OF MERCHANTABILITY or\n## FITNESS FOR A PARTICULAR PURPOSE. See the terms and conditions of the GNU\n## General Public License for more details.\n##\n## You should have received a copy of the GNU Lesser General Public License\n## along with this program; if not, write to the Free Software Foundation,\n## Inc., 59 Temple\n## Place, Suite 330, Boston, MA 02111-1307 USA\n##--------------------------------------------------------------------------------\n##\n##  Update Log:\n##        Apr 29 2016 DHA: Mondernize build support\n##        Mar 09 2009 DHA: Added -rdynamic to export process control \n##                         primities to the dynamic symbol table for\n##                         dlopen to pick up.\n##        Mar 06 2009 DHA: Added sdbg_linux_thr_db.[hxx|cxx] for \n##                         runtime loading support.\n##                         of the thread debug library.\n##                         Deprecated LIBTHRDDB.\n##        Jun 12 2008 DHA: Added header files to the dependency list\n##                         of launchmon_SOURCES.\n##        Jun 06 2008 DHA: Taken from the old Makefile, converting\n##                         to automake Makefile.am.\n##        Mar 17 2008 DHA: Added PMGR Collective support.\n##        Feb 09 2008 DHA: Added LLNS Copyright.\n##        Dec 27 2006 DHA: Created file.\n##\n\nSUBDIRS = lmon_api\nBASE_SRC_DIR = $(top_srcdir)/launchmon/src\nAPI_SRC_DIR = $(srcdir)/lmon_api\nVPATH = $(BASE_SRC_DIR):$(srcdir):$(API_SRC_DIR)\nAM_CPPFLAGS = -I$(BASE_SRC_DIR) -I@ARCHHEADER@\n\nbin_PROGRAMS = launchmon\nlaunchmon_SOURCES = \\\n  main.cxx \\\n  sdbg_linux_launchmon.cxx \\\n  $(API_SRC_DIR)/lmon_lmonp_msg.cxx \\\n  sdbg_linux_mach.cxx \\\n  $(API_SRC_DIR)/lmon_say_msg.cxx \\\n  sdbg_proc_service.cxx \\\n  $(BASE_SRC_DIR)/sdbg_self_trace.cxx \\\n  $(BASE_SRC_DIR)/sdbg_opt.cxx \\\n  $(BASE_SRC_DIR)/sdbg_rm_map.cxx \\\n  $(BASE_SRC_DIR)/sdbg_base_bp.hxx \\\n  $(BASE_SRC_DIR)/sdbg_base_launchmon_impl.hxx  \\\n  $(BASE_SRC_DIR)/sdbg_base_tracer.hxx \\\n  $(BASE_SRC_DIR)/sdbg_self_trace.hxx \\\n  $(BASE_SRC_DIR)/sdbg_base_driver.hxx \\\n  $(BASE_SRC_DIR)/sdbg_base_mach.hxx \\\n  $(BASE_SRC_DIR)/sdbg_signal_hlr.hxx \\\n  $(BASE_SRC_DIR)/sdbg_base_driver_impl.hxx  \\\n  $(BASE_SRC_DIR)/sdbg_base_mach_impl.hxx  \\\n  $(BASE_SRC_DIR)/sdbg_event_manager.hxx \\\n  $(BASE_SRC_DIR)/sdbg_signal_hlr_impl.hxx \\\n  $(BASE_SRC_DIR)/sdbg_base_exception.hxx \\\n  $(BASE_SRC_DIR)/sdbg_base_symtab.hxx \\\n  $(BASE_SRC_DIR)/sdbg_event_manager_impl.hxx  \\\n  $(BASE_SRC_DIR)/sdbg_std.hxx \\\n  $(BASE_SRC_DIR)/sdbg_base_launchmon.hxx \\\n  $(BASE_SRC_DIR)/sdbg_base_symtab_impl.hxx \\\n  $(BASE_SRC_DIR)/sdbg_opt.hxx \\\n  $(BASE_SRC_DIR)/sdbg_rm_map.hxx \\\n  $(BASE_SRC_DIR)/sdbg_base_spawner.hxx \\\n  sdbg_linux_bp.hxx \\\n  sdbg_linux_launchmon.hxx  \\\n  sdbg_linux_ptracer_impl.hxx  \\\n  sdbg_linux_symtab_impl.hxx \\\n  sdbg_proc_service.hxx \\\n  sdbg_linux_driver.hxx  \\\n  sdbg_linux_mach.hxx \\\n  sdbg_linux_std.hxx \\\n  sdbg_linux_driver_impl.hxx \\\n  sdbg_linux_ptracer.hxx \\\n  sdbg_linux_symtab.hxx \n\nlaunchmon_LDADD = @LIBELF@ @LIBDL@\nlaunchmon_CFLAGS = @LNCHR_BIT_FLAGS@ #$(AM_CFLAGS)\nlaunchmon_CXXFLAGS = @LNCHR_BIT_FLAGS@ #$(AM_CXXFLAGS)\nlaunchmon_LDFLAGS = -rdynamic @LNCHR_BIT_FLAGS@ $(AM_LDFLAGS)\n\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-launchmon-master-bgtb6k345dhvxrzwvc7t56mbj2wissb3/spack-src/.git/objects/pack/pack-5557a53207be39d4c44db12c16c472de2ead8d26.idx",
        "/tmp/vanessa/spack-stage/spack-stage-launchmon-master-bgtb6k345dhvxrzwvc7t56mbj2wissb3/spack-src/.git/objects/pack/pack-5557a53207be39d4c44db12c16c472de2ead8d26.pack"
    ],
    "total_files": 252
}