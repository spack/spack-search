{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/unix/tcl.m4": "#------------------------------------------------------------------------\n# SC_PATH_TCLCONFIG --\n#\n#\tLocate the tclConfig.sh file and perform a sanity check on\n#\tthe Tcl compile flags\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\n#\tAdds the following arguments to configure:\n#\t\t--with-tcl=...\n#\n#\tDefines the following vars:\n#\t\tTCL_BIN_DIR\tFull path to the directory containing\n#\t\t\t\tthe tclConfig.sh file\n#------------------------------------------------------------------------\n\nAC_DEFUN([SC_PATH_TCLCONFIG], [\n    #\n    # Ok, lets find the tcl configuration\n    # First, look for one uninstalled.\n    # the alternative search directory is invoked by --with-tcl\n    #\n\n    if test x\"${no_tcl}\" = x ; then\n\t# we reset no_tcl in case something fails here\n\tno_tcl=true\n\tAC_ARG_WITH(tcl,\n\t    AC_HELP_STRING([--with-tcl],\n\t\t[directory containing tcl configuration (tclConfig.sh)]),\n\t    with_tclconfig=\"${withval}\")\n\tAC_MSG_CHECKING([for Tcl configuration])\n\tAC_CACHE_VAL(ac_cv_c_tclconfig,[\n\n\t    # First check to see if --with-tcl was specified.\n\t    if test x\"${with_tclconfig}\" != x ; then\n\t\tcase \"${with_tclconfig}\" in\n\t\t    */tclConfig.sh )\n\t\t\tif test -f \"${with_tclconfig}\"; then\n\t\t\t    AC_MSG_WARN([--with-tcl argument should refer to directory containing tclConfig.sh, not to tclConfig.sh itself])\n\t\t\t    with_tclconfig=\"`echo \"${with_tclconfig}\" | sed 's!/tclConfig\\.sh$!!'`\"\n\t\t\tfi ;;\n\t\tesac\n\t\tif test -f \"${with_tclconfig}/tclConfig.sh\" ; then\n\t\t    ac_cv_c_tclconfig=\"`(cd \"${with_tclconfig}\"; pwd)`\"\n\t\telse\n\t\t    AC_MSG_ERROR([${with_tclconfig} directory doesn't contain tclConfig.sh])\n\t\tfi\n\t    fi\n\n\t    # then check for a private Tcl installation\n\t    if test x\"${ac_cv_c_tclconfig}\" = x ; then\n\t\tfor i in \\\n\t\t\t../tcl \\\n\t\t\t`ls -dr ../tcl[[8-9]].[[0-9]].[[0-9]]* 2>/dev/null` \\\n\t\t\t`ls -dr ../tcl[[8-9]].[[0-9]] 2>/dev/null` \\\n\t\t\t`ls -dr ../tcl[[8-9]].[[0-9]]* 2>/dev/null` \\\n\t\t\t../../tcl \\\n\t\t\t`ls -dr ../../tcl[[8-9]].[[0-9]].[[0-9]]* 2>/dev/null` \\\n\t\t\t`ls -dr ../../tcl[[8-9]].[[0-9]] 2>/dev/null` \\\n\t\t\t`ls -dr ../../tcl[[8-9]].[[0-9]]* 2>/dev/null` \\\n\t\t\t../../../tcl \\\n\t\t\t`ls -dr ../../../tcl[[8-9]].[[0-9]].[[0-9]]* 2>/dev/null` \\\n\t\t\t`ls -dr ../../../tcl[[8-9]].[[0-9]] 2>/dev/null` \\\n\t\t\t`ls -dr ../../../tcl[[8-9]].[[0-9]]* 2>/dev/null` ; do\n\t\t    if test -f \"$i/unix/tclConfig.sh\" ; then\n\t\t\tac_cv_c_tclconfig=\"`(cd $i/unix; pwd)`\"\n\t\t\tbreak\n\t\t    fi\n\t\tdone\n\t    fi\n\n\t    # on Darwin, check in Framework installation locations\n\t    if test \"`uname -s`\" = \"Darwin\" -a x\"${ac_cv_c_tclconfig}\" = x ; then\n\t\tfor i in `ls -d ~/Library/Frameworks 2>/dev/null` \\\n\t\t\t`ls -d /Library/Frameworks 2>/dev/null` \\\n\t\t\t`ls -d /Network/Library/Frameworks 2>/dev/null` \\\n\t\t\t`ls -d /System/Library/Frameworks 2>/dev/null` \\\n\t\t\t; do\n\t\t    if test -f \"$i/Tcl.framework/tclConfig.sh\" ; then\n\t\t\tac_cv_c_tclconfig=\"`(cd $i/Tcl.framework; pwd)`\"\n\t\t\tbreak\n\t\t    fi\n\t\tdone\n\t    fi\n\n\t    # check in a few common install locations\n\t    if test x\"${ac_cv_c_tclconfig}\" = x ; then\n\t\tfor i in `ls -d ${libdir} 2>/dev/null` \\\n\t\t\t`ls -d ${exec_prefix}/lib 2>/dev/null` \\\n\t\t\t`ls -d ${prefix}/lib 2>/dev/null` \\\n\t\t\t`ls -d /usr/local/lib 2>/dev/null` \\\n\t\t\t`ls -d /usr/contrib/lib 2>/dev/null` \\\n\t\t\t`ls -d /usr/lib 2>/dev/null` \\\n\t\t\t`ls -d /usr/lib64 2>/dev/null` \\\n\t\t\t; do\n\t\t    if test -f \"$i/tclConfig.sh\" ; then\n\t\t\tac_cv_c_tclconfig=\"`(cd $i; pwd)`\"\n\t\t\tbreak\n\t\t    fi\n\t\tdone\n\t    fi\n\n\t    # check in a few other private locations\n\t    if test x\"${ac_cv_c_tclconfig}\" = x ; then\n\t\tfor i in \\\n\t\t\t${srcdir}/../tcl \\\n\t\t\t`ls -dr ${srcdir}/../tcl[[8-9]].[[0-9]].[[0-9]]* 2>/dev/null` \\\n\t\t\t`ls -dr ${srcdir}/../tcl[[8-9]].[[0-9]] 2>/dev/null` \\\n\t\t\t`ls -dr ${srcdir}/../tcl[[8-9]].[[0-9]]* 2>/dev/null` ; do\n\t\t    if test -f \"$i/unix/tclConfig.sh\" ; then\n\t\t\tac_cv_c_tclconfig=\"`(cd $i/unix; pwd)`\"\n\t\t\tbreak\n\t\t    fi\n\t\tdone\n\t    fi\n\t])\n\n\tif test x\"${ac_cv_c_tclconfig}\" = x ; then\n\t    TCL_BIN_DIR=\"# no Tcl configs found\"\n\t    AC_MSG_ERROR([Can't find Tcl configuration definitions. Use --with-tcl to specify a directory containing tclConfig.sh])\n\telse\n\t    no_tcl=\n\t    TCL_BIN_DIR=\"${ac_cv_c_tclconfig}\"\n\t    AC_MSG_RESULT([found ${TCL_BIN_DIR}/tclConfig.sh])\n\tfi\n    fi\n])\n\n#------------------------------------------------------------------------\n# SC_PATH_TKCONFIG --\n#\n#\tLocate the tkConfig.sh file\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\n#\tAdds the following arguments to configure:\n#\t\t--with-tk=...\n#\n#\tDefines the following vars:\n#\t\tTK_BIN_DIR\tFull path to the directory containing\n#\t\t\t\tthe tkConfig.sh file\n#------------------------------------------------------------------------\n\nAC_DEFUN([SC_PATH_TKCONFIG], [\n    #\n    # Ok, lets find the tk configuration\n    # First, look for one uninstalled.\n    # the alternative search directory is invoked by --with-tk\n    #\n\n    if test x\"${no_tk}\" = x ; then\n\t# we reset no_tk in case something fails here\n\tno_tk=true\n\tAC_ARG_WITH(tk,\n\t    AC_HELP_STRING([--with-tk],\n\t\t[directory containing tk configuration (tkConfig.sh)]),\n\t    with_tkconfig=\"${withval}\")\n\tAC_MSG_CHECKING([for Tk configuration])\n\tAC_CACHE_VAL(ac_cv_c_tkconfig,[\n\n\t    # First check to see if --with-tkconfig was specified.\n\t    if test x\"${with_tkconfig}\" != x ; then\n\t\tcase \"${with_tkconfig}\" in\n\t\t    */tkConfig.sh )\n\t\t\tif test -f \"${with_tkconfig}\"; then\n\t\t\t    AC_MSG_WARN([--with-tk argument should refer to directory containing tkConfig.sh, not to tkConfig.sh itself])\n\t\t\t    with_tkconfig=\"`echo \"${with_tkconfig}\" | sed 's!/tkConfig\\.sh$!!'`\"\n\t\t\tfi ;;\n\t\tesac\n\t\tif test -f \"${with_tkconfig}/tkConfig.sh\" ; then\n\t\t    ac_cv_c_tkconfig=\"`(cd \"${with_tkconfig}\"; pwd)`\"\n\t\telse\n\t\t    AC_MSG_ERROR([${with_tkconfig} directory doesn't contain tkConfig.sh])\n\t\tfi\n\t    fi\n\n\t    # then check for a private Tk library\n\t    if test x\"${ac_cv_c_tkconfig}\" = x ; then\n\t\tfor i in \\\n\t\t\t../tk \\\n\t\t\t`ls -dr ../tk[[8-9]].[[0-9]].[[0-9]]* 2>/dev/null` \\\n\t\t\t`ls -dr ../tk[[8-9]].[[0-9]] 2>/dev/null` \\\n\t\t\t`ls -dr ../tk[[8-9]].[[0-9]]* 2>/dev/null` \\\n\t\t\t../../tk \\\n\t\t\t`ls -dr ../../tk[[8-9]].[[0-9]].[[0-9]]* 2>/dev/null` \\\n\t\t\t`ls -dr ../../tk[[8-9]].[[0-9]] 2>/dev/null` \\\n\t\t\t`ls -dr ../../tk[[8-9]].[[0-9]]* 2>/dev/null` \\\n\t\t\t../../../tk \\\n\t\t\t`ls -dr ../../../tk[[8-9]].[[0-9]].[[0-9]]* 2>/dev/null` \\\n\t\t\t`ls -dr ../../../tk[[8-9]].[[0-9]] 2>/dev/null` \\\n\t\t\t`ls -dr ../../../tk[[8-9]].[[0-9]]* 2>/dev/null` ; do\n\t\t    if test -f \"$i/unix/tkConfig.sh\" ; then\n\t\t\tac_cv_c_tkconfig=\"`(cd $i/unix; pwd)`\"\n\t\t\tbreak\n\t\t    fi\n\t\tdone\n\t    fi\n\n\t    # on Darwin, check in Framework installation locations\n\t    if test \"`uname -s`\" = \"Darwin\" -a x\"${ac_cv_c_tkconfig}\" = x ; then\n\t\tfor i in `ls -d ~/Library/Frameworks 2>/dev/null` \\\n\t\t\t`ls -d /Library/Frameworks 2>/dev/null` \\\n\t\t\t`ls -d /Network/Library/Frameworks 2>/dev/null` \\\n\t\t\t`ls -d /System/Library/Frameworks 2>/dev/null` \\\n\t\t\t; do\n\t\t    if test -f \"$i/Tk.framework/tkConfig.sh\" ; then\n\t\t\tac_cv_c_tkconfig=\"`(cd $i/Tk.framework; pwd)`\"\n\t\t\tbreak\n\t\t    fi\n\t\tdone\n\t    fi\n\n\t    # check in a few common install locations\n\t    if test x\"${ac_cv_c_tkconfig}\" = x ; then\n\t\tfor i in `ls -d ${libdir} 2>/dev/null` \\\n\t\t\t`ls -d ${exec_prefix}/lib 2>/dev/null` \\\n\t\t\t`ls -d ${prefix}/lib 2>/dev/null` \\\n\t\t\t`ls -d /usr/local/lib 2>/dev/null` \\\n\t\t\t`ls -d /usr/contrib/lib 2>/dev/null` \\\n\t\t\t`ls -d /usr/lib 2>/dev/null` \\\n\t\t\t`ls -d /usr/lib64 2>/dev/null` \\\n\t\t\t; do\n\t\t    if test -f \"$i/tkConfig.sh\" ; then\n\t\t\tac_cv_c_tkconfig=\"`(cd $i; pwd)`\"\n\t\t\tbreak\n\t\t    fi\n\t\tdone\n\t    fi\n\n\t    # check in a few other private locations\n\t    if test x\"${ac_cv_c_tkconfig}\" = x ; then\n\t\tfor i in \\\n\t\t\t${srcdir}/../tk \\\n\t\t\t`ls -dr ${srcdir}/../tk[[8-9]].[[0-9]].[[0-9]]* 2>/dev/null` \\\n\t\t\t`ls -dr ${srcdir}/../tk[[8-9]].[[0-9]] 2>/dev/null` \\\n\t\t\t`ls -dr ${srcdir}/../tk[[8-9]].[[0-9]]* 2>/dev/null` ; do\n\t\t    if test -f \"$i/unix/tkConfig.sh\" ; then\n\t\t\tac_cv_c_tkconfig=\"`(cd $i/unix; pwd)`\"\n\t\t\tbreak\n\t\t    fi\n\t\tdone\n\t    fi\n\t])\n\n\tif test x\"${ac_cv_c_tkconfig}\" = x ; then\n\t    TK_BIN_DIR=\"# no Tk configs found\"\n\t    AC_MSG_ERROR([Can't find Tk configuration definitions. Use --with-tk to specify a directory containing tkConfig.sh])\n\telse\n\t    no_tk=\n\t    TK_BIN_DIR=\"${ac_cv_c_tkconfig}\"\n\t    AC_MSG_RESULT([found ${TK_BIN_DIR}/tkConfig.sh])\n\tfi\n    fi\n])\n\n#------------------------------------------------------------------------\n# SC_LOAD_TCLCONFIG --\n#\n#\tLoad the tclConfig.sh file\n#\n# Arguments:\n#\n#\tRequires the following vars to be set:\n#\t\tTCL_BIN_DIR\n#\n# Results:\n#\n#\tSubstitutes the following vars:\n#\t\tTCL_BIN_DIR\n#\t\tTCL_SRC_DIR\n#\t\tTCL_LIB_FILE\n#------------------------------------------------------------------------\n\nAC_DEFUN([SC_LOAD_TCLCONFIG], [\n    AC_MSG_CHECKING([for existence of ${TCL_BIN_DIR}/tclConfig.sh])\n\n    if test -f \"${TCL_BIN_DIR}/tclConfig.sh\" ; then\n        AC_MSG_RESULT([loading])\n\t. \"${TCL_BIN_DIR}/tclConfig.sh\"\n    else\n        AC_MSG_RESULT([could not find ${TCL_BIN_DIR}/tclConfig.sh])\n    fi\n\n    # eval is required to do the TCL_DBGX substitution\n    eval \"TCL_LIB_FILE=\\\"${TCL_LIB_FILE}\\\"\"\n    eval \"TCL_STUB_LIB_FILE=\\\"${TCL_STUB_LIB_FILE}\\\"\"\n\n    # If the TCL_BIN_DIR is the build directory (not the install directory),\n    # then set the common variable name to the value of the build variables.\n    # For example, the variable TCL_LIB_SPEC will be set to the value\n    # of TCL_BUILD_LIB_SPEC. An extension should make use of TCL_LIB_SPEC\n    # instead of TCL_BUILD_LIB_SPEC since it will work with both an\n    # installed and uninstalled version of Tcl.\n    if test -f \"${TCL_BIN_DIR}/Makefile\" ; then\n        TCL_LIB_SPEC=\"${TCL_BUILD_LIB_SPEC}\"\n        TCL_STUB_LIB_SPEC=\"${TCL_BUILD_STUB_LIB_SPEC}\"\n        TCL_STUB_LIB_PATH=\"${TCL_BUILD_STUB_LIB_PATH}\"\n    elif test \"`uname -s`\" = \"Darwin\"; then\n\t# If Tcl was built as a framework, attempt to use the libraries\n\t# from the framework at the given location so that linking works\n\t# against Tcl.framework installed in an arbitrary location.\n\tcase ${TCL_DEFS} in\n\t    *TCL_FRAMEWORK*)\n\t\tif test -f \"${TCL_BIN_DIR}/${TCL_LIB_FILE}\"; then\n\t\t    for i in \"`cd \"${TCL_BIN_DIR}\"; pwd`\" \\\n\t\t\t     \"`cd \"${TCL_BIN_DIR}\"/../..; pwd`\"; do\n\t\t\tif test \"`basename \"$i\"`\" = \"${TCL_LIB_FILE}.framework\"; then\n\t\t\t    TCL_LIB_SPEC=\"-F`dirname \"$i\" | sed -e 's/ /\\\\\\\\ /g'` -framework ${TCL_LIB_FILE}\"\n\t\t\t    break\n\t\t\tfi\n\t\t    done\n\t\tfi\n\t\tif test -f \"${TCL_BIN_DIR}/${TCL_STUB_LIB_FILE}\"; then\n\t\t    TCL_STUB_LIB_SPEC=\"-L`echo \"${TCL_BIN_DIR}\"  | sed -e 's/ /\\\\\\\\ /g'` ${TCL_STUB_LIB_FLAG}\"\n\t\t    TCL_STUB_LIB_PATH=\"${TCL_BIN_DIR}/${TCL_STUB_LIB_FILE}\"\n\t\tfi\n\t\t;;\n\tesac\n    fi\n\n    # eval is required to do the TCL_DBGX substitution\n    eval \"TCL_LIB_FLAG=\\\"${TCL_LIB_FLAG}\\\"\"\n    eval \"TCL_LIB_SPEC=\\\"${TCL_LIB_SPEC}\\\"\"\n    eval \"TCL_STUB_LIB_FLAG=\\\"${TCL_STUB_LIB_FLAG}\\\"\"\n    eval \"TCL_STUB_LIB_SPEC=\\\"${TCL_STUB_LIB_SPEC}\\\"\"\n\n    AC_SUBST(TCL_VERSION)\n    AC_SUBST(TCL_PATCH_LEVEL)\n    AC_SUBST(TCL_BIN_DIR)\n    AC_SUBST(TCL_SRC_DIR)\n\n    AC_SUBST(TCL_LIB_FILE)\n    AC_SUBST(TCL_LIB_FLAG)\n    AC_SUBST(TCL_LIB_SPEC)\n\n    AC_SUBST(TCL_STUB_LIB_FILE)\n    AC_SUBST(TCL_STUB_LIB_FLAG)\n    AC_SUBST(TCL_STUB_LIB_SPEC)\n])\n\n#------------------------------------------------------------------------\n# SC_LOAD_TKCONFIG --\n#\n#\tLoad the tkConfig.sh file\n#\n# Arguments:\n#\n#\tRequires the following vars to be set:\n#\t\tTK_BIN_DIR\n#\n# Results:\n#\n#\tSets the following vars that should be in tkConfig.sh:\n#\t\tTK_BIN_DIR\n#------------------------------------------------------------------------\n\nAC_DEFUN([SC_LOAD_TKCONFIG], [\n    AC_MSG_CHECKING([for existence of ${TK_BIN_DIR}/tkConfig.sh])\n\n    if test -f \"${TK_BIN_DIR}/tkConfig.sh\" ; then\n        AC_MSG_RESULT([loading])\n\t. \"${TK_BIN_DIR}/tkConfig.sh\"\n    else\n        AC_MSG_RESULT([could not find ${TK_BIN_DIR}/tkConfig.sh])\n    fi\n\n    # eval is required to do the TK_DBGX substitution\n    eval \"TK_LIB_FILE=\\\"${TK_LIB_FILE}\\\"\"\n    eval \"TK_STUB_LIB_FILE=\\\"${TK_STUB_LIB_FILE}\\\"\"\n\n    # If the TK_BIN_DIR is the build directory (not the install directory),\n    # then set the common variable name to the value of the build variables.\n    # For example, the variable TK_LIB_SPEC will be set to the value\n    # of TK_BUILD_LIB_SPEC. An extension should make use of TK_LIB_SPEC\n    # instead of TK_BUILD_LIB_SPEC since it will work with both an\n    # installed and uninstalled version of Tcl.\n    if test -f \"${TK_BIN_DIR}/Makefile\" ; then\n        TK_LIB_SPEC=\"${TK_BUILD_LIB_SPEC}\"\n        TK_STUB_LIB_SPEC=\"${TK_BUILD_STUB_LIB_SPEC}\"\n        TK_STUB_LIB_PATH=\"${TK_BUILD_STUB_LIB_PATH}\"\n    elif test \"`uname -s`\" = \"Darwin\"; then\n\t# If Tk was built as a framework, attempt to use the libraries\n\t# from the framework at the given location so that linking works\n\t# against Tk.framework installed in an arbitrary location.\n\tcase ${TK_DEFS} in\n\t    *TK_FRAMEWORK*)\n\t\tif test -f \"${TK_BIN_DIR}/${TK_LIB_FILE}\"; then\n\t\t    for i in \"`cd \"${TK_BIN_DIR}\"; pwd`\" \\\n\t\t\t     \"`cd \"${TK_BIN_DIR}\"/../..; pwd`\"; do\n\t\t\tif test \"`basename \"$i\"`\" = \"${TK_LIB_FILE}.framework\"; then\n\t\t\t    TK_LIB_SPEC=\"-F`dirname \"$i\" | sed -e 's/ /\\\\\\\\ /g'` -framework ${TK_LIB_FILE}\"\n\t\t\t    break\n\t\t\tfi\n\t\t    done\n\t\tfi\n\t\tif test -f \"${TK_BIN_DIR}/${TK_STUB_LIB_FILE}\"; then\n\t\t    TK_STUB_LIB_SPEC=\"-L` echo \"${TK_BIN_DIR}\"  | sed -e 's/ /\\\\\\\\ /g'` ${TK_STUB_LIB_FLAG}\"\n\t\t    TK_STUB_LIB_PATH=\"${TK_BIN_DIR}/${TK_STUB_LIB_FILE}\"\n\t\tfi\n\t\t;;\n\tesac\n    fi\n\n    # eval is required to do the TK_DBGX substitution\n    eval \"TK_LIB_FLAG=\\\"${TK_LIB_FLAG}\\\"\"\n    eval \"TK_LIB_SPEC=\\\"${TK_LIB_SPEC}\\\"\"\n    eval \"TK_STUB_LIB_FLAG=\\\"${TK_STUB_LIB_FLAG}\\\"\"\n    eval \"TK_STUB_LIB_SPEC=\\\"${TK_STUB_LIB_SPEC}\\\"\"\n\n    AC_SUBST(TK_VERSION)\n    AC_SUBST(TK_BIN_DIR)\n    AC_SUBST(TK_SRC_DIR)\n\n    AC_SUBST(TK_LIB_FILE)\n    AC_SUBST(TK_LIB_FLAG)\n    AC_SUBST(TK_LIB_SPEC)\n\n    AC_SUBST(TK_STUB_LIB_FILE)\n    AC_SUBST(TK_STUB_LIB_FLAG)\n    AC_SUBST(TK_STUB_LIB_SPEC)\n])\n\n#------------------------------------------------------------------------\n# SC_PROG_TCLSH\n#\tLocate a tclsh shell installed on the system path. This macro\n#\twill only find a Tcl shell that already exists on the system.\n#\tIt will not find a Tcl shell in the Tcl build directory or\n#\ta Tcl shell that has been installed from the Tcl build directory.\n#\tIf a Tcl shell can't be located on the PATH, then TCLSH_PROG will\n#\tbe set to \"\". Extensions should take care not to create Makefile\n#\trules that are run by default and depend on TCLSH_PROG. An\n#\textension can't assume that an executable Tcl shell exists at\n#\tbuild time.\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\tSubstitutes the following vars:\n#\t\tTCLSH_PROG\n#------------------------------------------------------------------------\n\nAC_DEFUN([SC_PROG_TCLSH], [\n    AC_MSG_CHECKING([for tclsh])\n    AC_CACHE_VAL(ac_cv_path_tclsh, [\n\tsearch_path=`echo ${PATH} | sed -e 's/:/ /g'`\n\tfor dir in $search_path ; do\n\t    for j in `ls -r $dir/tclsh[[8-9]]* 2> /dev/null` \\\n\t\t    `ls -r $dir/tclsh* 2> /dev/null` ; do\n\t\tif test x\"$ac_cv_path_tclsh\" = x ; then\n\t\t    if test -f \"$j\" ; then\n\t\t\tac_cv_path_tclsh=$j\n\t\t\tbreak\n\t\t    fi\n\t\tfi\n\t    done\n\tdone\n    ])\n\n    if test -f \"$ac_cv_path_tclsh\" ; then\n\tTCLSH_PROG=\"$ac_cv_path_tclsh\"\n\tAC_MSG_RESULT([$TCLSH_PROG])\n    else\n\t# It is not an error if an installed version of Tcl can't be located.\n\tTCLSH_PROG=\"\"\n\tAC_MSG_RESULT([No tclsh found on PATH])\n    fi\n    AC_SUBST(TCLSH_PROG)\n])\n\n#------------------------------------------------------------------------\n# SC_BUILD_TCLSH\n#\tDetermine the fully qualified path name of the tclsh executable\n#\tin the Tcl build directory. This macro will correctly determine\n#\tthe name of the tclsh executable even if tclsh has not yet\n#\tbeen built in the build directory. The build tclsh must be used\n#\twhen running tests from an extension build directory. It is not\n#\tcorrect to use the TCLSH_PROG in cases like this.\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\tSubstitutes the following values:\n#\t\tBUILD_TCLSH\n#------------------------------------------------------------------------\n\nAC_DEFUN([SC_BUILD_TCLSH], [\n    AC_MSG_CHECKING([for tclsh in Tcl build directory])\n    BUILD_TCLSH=\"${TCL_BIN_DIR}\"/tclsh\n    AC_MSG_RESULT([$BUILD_TCLSH])\n    AC_SUBST(BUILD_TCLSH)\n])\n\n#------------------------------------------------------------------------\n# SC_ENABLE_SHARED --\n#\n#\tAllows the building of shared libraries\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\n#\tAdds the following arguments to configure:\n#\t\t--enable-shared=yes|no\n#\n#\tDefines the following vars:\n#\t\tSTATIC_BUILD\tUsed for building import/export libraries\n#\t\t\t\ton Windows.\n#\n#\tSets the following vars:\n#\t\tSHARED_BUILD\tValue of 1 or 0\n#------------------------------------------------------------------------\n\nAC_DEFUN([SC_ENABLE_SHARED], [\n    AC_MSG_CHECKING([how to build libraries])\n    AC_ARG_ENABLE(shared,\n\tAC_HELP_STRING([--enable-shared],\n\t    [build and link with shared libraries (default: on)]),\n\t[tcl_ok=$enableval], [tcl_ok=yes])\n\n    if test \"${enable_shared+set}\" = set; then\n\tenableval=\"$enable_shared\"\n\ttcl_ok=$enableval\n    else\n\ttcl_ok=yes\n    fi\n\n    if test \"$tcl_ok\" = \"yes\" ; then\n\tAC_MSG_RESULT([shared])\n\tSHARED_BUILD=1\n    else\n\tAC_MSG_RESULT([static])\n\tSHARED_BUILD=0\n\tAC_DEFINE(STATIC_BUILD, 1, [Is this a static build?])\n    fi\n])\n\n#------------------------------------------------------------------------\n# SC_ENABLE_FRAMEWORK --\n#\n#\tAllows the building of shared libraries into frameworks\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\n#\tAdds the following arguments to configure:\n#\t\t--enable-framework=yes|no\n#\n#\tSets the following vars:\n#\t\tFRAMEWORK_BUILD\tValue of 1 or 0\n#------------------------------------------------------------------------\n\nAC_DEFUN([SC_ENABLE_FRAMEWORK], [\n    if test \"`uname -s`\" = \"Darwin\" ; then\n\tAC_MSG_CHECKING([how to package libraries])\n\tAC_ARG_ENABLE(framework,\n\t    AC_HELP_STRING([--enable-framework],\n\t\t[package shared libraries in MacOSX frameworks (default: off)]),\n\t    [enable_framework=$enableval], [enable_framework=no])\n\tif test $enable_framework = yes; then\n\t    if test $SHARED_BUILD = 0; then\n\t\tAC_MSG_WARN([Frameworks can only be built if --enable-shared is yes])\n\t\tenable_framework=no\n\t    fi\n\t    if test $tcl_corefoundation = no; then\n\t\tAC_MSG_WARN([Frameworks can only be used when CoreFoundation is available])\n\t\tenable_framework=no\n\t    fi\n\tfi\n\tif test $enable_framework = yes; then\n\t    AC_MSG_RESULT([framework])\n\t    FRAMEWORK_BUILD=1\n\telse\n\t    if test $SHARED_BUILD = 1; then\n\t\tAC_MSG_RESULT([shared library])\n\t    else\n\t\tAC_MSG_RESULT([static library])\n\t    fi\n\t    FRAMEWORK_BUILD=0\n\tfi\n    fi\n])\n\n#------------------------------------------------------------------------\n# SC_ENABLE_THREADS --\n#\n#\tSpecify if thread support should be enabled\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\n#\tAdds the following arguments to configure:\n#\t\t--enable-threads\n#\n#\tSets the following vars:\n#\t\tTHREADS_LIBS\tThread library(s)\n#\n#\tDefines the following vars:\n#\t\tTCL_THREADS\n#\t\t_REENTRANT\n#\t\t_THREAD_SAFE\n#\n#------------------------------------------------------------------------\n\nAC_DEFUN([SC_ENABLE_THREADS], [\n    AC_ARG_ENABLE(threads,\n\tAC_HELP_STRING([--enable-threads],\n\t    [build with threads (default: on)]),\n\t[tcl_ok=$enableval], [tcl_ok=yes])\n\n    if test \"${TCL_THREADS}\" = 1; then\n\ttcl_threaded_core=1;\n    fi\n\n    if test \"$tcl_ok\" = \"yes\" -o \"${TCL_THREADS}\" = 1; then\n\tTCL_THREADS=1\n\t# USE_THREAD_ALLOC tells us to try the special thread-based\n\t# allocator that significantly reduces lock contention\n\tAC_DEFINE(USE_THREAD_ALLOC, 1,\n\t    [Do we want to use the threaded memory allocator?])\n\tAC_DEFINE(_REENTRANT, 1, [Do we want the reentrant OS API?])\n\tif test \"`uname -s`\" = \"SunOS\" ; then\n\t    AC_DEFINE(_POSIX_PTHREAD_SEMANTICS, 1,\n\t\t    [Do we really want to follow the standard? Yes we do!])\n\tfi\n\tAC_DEFINE(_THREAD_SAFE, 1, [Do we want the thread-safe OS API?])\n\tAC_CHECK_LIB(pthread,pthread_mutex_init,tcl_ok=yes,tcl_ok=no)\n\tif test \"$tcl_ok\" = \"no\"; then\n\t    # Check a little harder for __pthread_mutex_init in the same\n\t    # library, as some systems hide it there until pthread.h is\n\t    # defined.  We could alternatively do an AC_TRY_COMPILE with\n\t    # pthread.h, but that will work with libpthread really doesn't\n\t    # exist, like AIX 4.2.  [Bug: 4359]\n\t    AC_CHECK_LIB(pthread, __pthread_mutex_init,\n\t\ttcl_ok=yes, tcl_ok=no)\n\tfi\n\n\tif test \"$tcl_ok\" = \"yes\"; then\n\t    # The space is needed\n\t    THREADS_LIBS=\" -lpthread\"\n\telse\n\t    AC_CHECK_LIB(pthreads, pthread_mutex_init,\n\t\ttcl_ok=yes, tcl_ok=no)\n\t    if test \"$tcl_ok\" = \"yes\"; then\n\t\t# The space is needed\n\t\tTHREADS_LIBS=\" -lpthreads\"\n\t    else\n\t\tAC_CHECK_LIB(c, pthread_mutex_init,\n\t\t    tcl_ok=yes, tcl_ok=no)\n\t\tif test \"$tcl_ok\" = \"no\"; then\n\t\t    AC_CHECK_LIB(c_r, pthread_mutex_init,\n\t\t\ttcl_ok=yes, tcl_ok=no)\n\t\t    if test \"$tcl_ok\" = \"yes\"; then\n\t\t\t# The space is needed\n\t\t\tTHREADS_LIBS=\" -pthread\"\n\t\t    else\n\t\t\tTCL_THREADS=0\n\t\t\tAC_MSG_WARN([Don't know how to find pthread lib on your system - you must disable thread support or edit the LIBS in the Makefile...])\n\t\t    fi\n\t\tfi\n\t    fi\n\tfi\n\n\t# Does the pthread-implementation provide\n\t# 'pthread_attr_setstacksize' ?\n\n\tac_saved_libs=$LIBS\n\tLIBS=\"$LIBS $THREADS_LIBS\"\n\tAC_CHECK_FUNCS(pthread_attr_setstacksize pthread_atfork)\n\tLIBS=$ac_saved_libs\n    else\n\tTCL_THREADS=0\n    fi\n    # Do checking message here to not mess up interleaved configure output\n    AC_MSG_CHECKING([for building with threads])\n    if test \"${TCL_THREADS}\" = 1; then\n\tAC_DEFINE(TCL_THREADS, 1, [Are we building with threads enabled?])\n\tif test \"${tcl_threaded_core}\" = 1; then\n\t    AC_MSG_RESULT([yes (threaded core)])\n\telse\n\t    AC_MSG_RESULT([yes])\n\tfi\n    else\n\tAC_MSG_RESULT([no])\n    fi\n\n    AC_SUBST(TCL_THREADS)\n])\n\n#------------------------------------------------------------------------\n# SC_ENABLE_SYMBOLS --\n#\n#\tSpecify if debugging symbols should be used.\n#\tMemory (TCL_MEM_DEBUG) and compile (TCL_COMPILE_DEBUG) debugging\n#\tcan also be enabled.\n#\n# Arguments:\n#\tnone\n#\n#\tRequires the following vars to be set in the Makefile:\n#\t\tCFLAGS_DEBUG\n#\t\tCFLAGS_OPTIMIZE\n#\t\tLDFLAGS_DEBUG\n#\t\tLDFLAGS_OPTIMIZE\n#\n# Results:\n#\n#\tAdds the following arguments to configure:\n#\t\t--enable-symbols\n#\n#\tDefines the following vars:\n#\t\tCFLAGS_DEFAULT\tSets to $(CFLAGS_DEBUG) if true\n#\t\t\t\tSets to $(CFLAGS_OPTIMIZE) if false\n#\t\tLDFLAGS_DEFAULT\tSets to $(LDFLAGS_DEBUG) if true\n#\t\t\t\tSets to $(LDFLAGS_OPTIMIZE) if false\n#\t\tDBGX\t\tFormerly used as debug library extension;\n#\t\t\t\talways blank now.\n#\n#------------------------------------------------------------------------\n\nAC_DEFUN([SC_ENABLE_SYMBOLS], [\n    AC_MSG_CHECKING([for build with symbols])\n    AC_ARG_ENABLE(symbols,\n\tAC_HELP_STRING([--enable-symbols],\n\t    [build with debugging symbols (default: off)]),\n\t[tcl_ok=$enableval], [tcl_ok=no])\n# FIXME: Currently, LDFLAGS_DEFAULT is not used, it should work like CFLAGS_DEFAULT.\n    DBGX=\"\"\n    if test \"$tcl_ok\" = \"no\"; then\n\tCFLAGS_DEFAULT='$(CFLAGS_OPTIMIZE)'\n\tLDFLAGS_DEFAULT='$(LDFLAGS_OPTIMIZE)'\n\tAC_DEFINE(NDEBUG, 1, [Is no debugging enabled?])\n\tAC_MSG_RESULT([no])\n\tAC_DEFINE(TCL_CFG_OPTIMIZED, 1, [Is this an optimized build?])\n    else\n\tCFLAGS_DEFAULT='$(CFLAGS_DEBUG)'\n\tLDFLAGS_DEFAULT='$(LDFLAGS_DEBUG)'\n\tif test \"$tcl_ok\" = \"yes\"; then\n\t    AC_MSG_RESULT([yes (standard debugging)])\n\tfi\n    fi\n    AC_SUBST(CFLAGS_DEFAULT)\n    AC_SUBST(LDFLAGS_DEFAULT)\n\n    if test \"$tcl_ok\" = \"mem\" -o \"$tcl_ok\" = \"all\"; then\n\tAC_DEFINE(TCL_MEM_DEBUG, 1, [Is memory debugging enabled?])\n    fi\n\n    ifelse($1,bccdebug,dnl Only enable 'compile' for the Tcl core itself\n\tif test \"$tcl_ok\" = \"compile\" -o \"$tcl_ok\" = \"all\"; then\n\t    AC_DEFINE(TCL_COMPILE_DEBUG, 1, [Is bytecode debugging enabled?])\n\t    AC_DEFINE(TCL_COMPILE_STATS, 1, [Are bytecode statistics enabled?])\n\tfi)\n\n    if test \"$tcl_ok\" != \"yes\" -a \"$tcl_ok\" != \"no\"; then\n\tif test \"$tcl_ok\" = \"all\"; then\n\t    AC_MSG_RESULT([enabled symbols mem ]ifelse($1,bccdebug,[compile ])[debugging])\n\telse\n\t    AC_MSG_RESULT([enabled $tcl_ok debugging])\n\tfi\n    fi\n])\n\n#------------------------------------------------------------------------\n# SC_ENABLE_LANGINFO --\n#\n#\tAllows use of modern nl_langinfo check for better l10n.\n#\tThis is only relevant for Unix.\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\n#\tAdds the following arguments to configure:\n#\t\t--enable-langinfo=yes|no (default is yes)\n#\n#\tDefines the following vars:\n#\t\tHAVE_LANGINFO\tTriggers use of nl_langinfo if defined.\n#------------------------------------------------------------------------\n\nAC_DEFUN([SC_ENABLE_LANGINFO], [\n    AC_ARG_ENABLE(langinfo,\n\tAC_HELP_STRING([--enable-langinfo],\n\t    [use nl_langinfo if possible to determine encoding at startup, otherwise use old heuristic (default: on)]),\n\t[langinfo_ok=$enableval], [langinfo_ok=yes])\n\n    HAVE_LANGINFO=0\n    if test \"$langinfo_ok\" = \"yes\"; then\n\tAC_CHECK_HEADER(langinfo.h,[langinfo_ok=yes],[langinfo_ok=no])\n    fi\n    AC_MSG_CHECKING([whether to use nl_langinfo])\n    if test \"$langinfo_ok\" = \"yes\"; then\n\tAC_CACHE_VAL(tcl_cv_langinfo_h, [\n\t    AC_TRY_COMPILE([#include <langinfo.h>], [nl_langinfo(CODESET);],\n\t\t    [tcl_cv_langinfo_h=yes],[tcl_cv_langinfo_h=no])])\n\tAC_MSG_RESULT([$tcl_cv_langinfo_h])\n\tif test $tcl_cv_langinfo_h = yes; then\n\t    AC_DEFINE(HAVE_LANGINFO, 1, [Do we have nl_langinfo()?])\n\tfi\n    else\n\tAC_MSG_RESULT([$langinfo_ok])\n    fi\n])\n\n#--------------------------------------------------------------------\n# SC_CONFIG_MANPAGES\n#\n#\tDecide whether to use symlinks for linking the manpages,\n#\twhether to compress the manpages after installation, and\n#\twhether to add a package name suffix to the installed\n#\tmanpages to avoidfile name clashes.\n#\tIf compression is enabled also find out what file name suffix\n#\tthe given compression program is using.\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\n#\tAdds the following arguments to configure:\n#\t\t--enable-man-symlinks\n#\t\t--enable-man-compression=PROG\n#\t\t--enable-man-suffix[=STRING]\n#\n#\tDefines the following variable:\n#\n#\tMAN_FLAGS -\tThe apropriate flags for installManPage\n#\t\t\taccording to the user's selection.\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN([SC_CONFIG_MANPAGES], [\n    AC_MSG_CHECKING([whether to use symlinks for manpages])\n    AC_ARG_ENABLE(man-symlinks,\n\tAC_HELP_STRING([--enable-man-symlinks],\n\t    [use symlinks for the manpages (default: off)]),\n\ttest \"$enableval\" != \"no\" && MAN_FLAGS=\"$MAN_FLAGS --symlinks\",\n\tenableval=\"no\")\n    AC_MSG_RESULT([$enableval])\n\n    AC_MSG_CHECKING([whether to compress the manpages])\n    AC_ARG_ENABLE(man-compression,\n\tAC_HELP_STRING([--enable-man-compression=PROG],\n\t    [compress the manpages with PROG (default: off)]),\n\t[case $enableval in\n\t    yes) AC_MSG_ERROR([missing argument to --enable-man-compression]);;\n\t    no)  ;;\n\t    *)   MAN_FLAGS=\"$MAN_FLAGS --compress $enableval\";;\n\tesac],\n\tenableval=\"no\")\n    AC_MSG_RESULT([$enableval])\n    if test \"$enableval\" != \"no\"; then\n\tAC_MSG_CHECKING([for compressed file suffix])\n\ttouch TeST\n\t$enableval TeST\n\tZ=`ls TeST* | sed 's/^....//'`\n\trm -f TeST*\n\tMAN_FLAGS=\"$MAN_FLAGS --extension $Z\"\n\tAC_MSG_RESULT([$Z])\n    fi\n\n    AC_MSG_CHECKING([whether to add a package name suffix for the manpages])\n    AC_ARG_ENABLE(man-suffix,\n\tAC_HELP_STRING([--enable-man-suffix=STRING],\n\t    [use STRING as a suffix to manpage file names (default: no, AC_PACKAGE_NAME if enabled without specifying STRING)]),\n\t[case $enableval in\n\t    yes) enableval=\"AC_PACKAGE_NAME\" MAN_FLAGS=\"$MAN_FLAGS --suffix $enableval\";;\n\t    no)  ;;\n\t    *)   MAN_FLAGS=\"$MAN_FLAGS --suffix $enableval\";;\n\tesac],\n\tenableval=\"no\")\n    AC_MSG_RESULT([$enableval])\n\n    AC_SUBST(MAN_FLAGS)\n])\n\n#--------------------------------------------------------------------\n# SC_CONFIG_SYSTEM\n#\n#\tDetermine what the system is (some things cannot be easily checked\n#\ton a feature-driven basis, alas). This can usually be done via the\n#\t\"uname\" command, but there are a few systems, like Next, where\n#\tthis doesn't work.\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\tDefines the following var:\n#\n#\tsystem -\tSystem/platform/version identification code.\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN([SC_CONFIG_SYSTEM], [\n    AC_CACHE_CHECK([system version], tcl_cv_sys_version, [\n\tif test -f /usr/lib/NextStep/software_version; then\n\t    tcl_cv_sys_version=NEXTSTEP-`awk '/3/,/3/' /usr/lib/NextStep/software_version`\n\telse\n\t    tcl_cv_sys_version=`uname -s`-`uname -r`\n\t    if test \"$?\" -ne 0 ; then\n\t\tAC_MSG_WARN([can't find uname command])\n\t\ttcl_cv_sys_version=unknown\n\t    else\n\t\t# Special check for weird MP-RAS system (uname returns weird\n\t\t# results, and the version is kept in special file).\n\n\t\tif test -r /etc/.relid -a \"X`uname -n`\" = \"X`uname -s`\" ; then\n\t\t    tcl_cv_sys_version=MP-RAS-`awk '{print $[3]}' /etc/.relid`\n\t\tfi\n\t\tif test \"`uname -s`\" = \"AIX\" ; then\n\t\t    tcl_cv_sys_version=AIX-`uname -v`.`uname -r`\n\t\tfi\n\t    fi\n\tfi\n    ])\n    system=$tcl_cv_sys_version\n])\n\n#--------------------------------------------------------------------\n# SC_CONFIG_CFLAGS\n#\n#\tTry to determine the proper flags to pass to the compiler\n#\tfor building shared libraries and other such nonsense.\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\n#\tDefines and substitutes the following vars:\n#\n#       DL_OBJS -       Name of the object file that implements dynamic\n#                       loading for Tcl on this system.\n#       DL_LIBS -       Library file(s) to include in tclsh and other base\n#                       applications in order for the \"load\" command to work.\n#       LDFLAGS -      Flags to pass to the compiler when linking object\n#                       files into an executable application binary such\n#                       as tclsh.\n#       LD_SEARCH_FLAGS-Flags to pass to ld, such as \"-R /usr/local/tcl/lib\",\n#                       that tell the run-time dynamic linker where to look\n#                       for shared libraries such as libtcl.so.  Depends on\n#                       the variable LIB_RUNTIME_DIR in the Makefile. Could\n#                       be the same as CC_SEARCH_FLAGS if ${CC} is used to link.\n#       CC_SEARCH_FLAGS-Flags to pass to ${CC}, such as \"-Wl,-rpath,/usr/local/tcl/lib\",\n#                       that tell the run-time dynamic linker where to look\n#                       for shared libraries such as libtcl.so.  Depends on\n#                       the variable LIB_RUNTIME_DIR in the Makefile.\n#       MAKE_LIB -      Command to execute to build the a library;\n#                       differs when building shared or static.\n#       MAKE_STUB_LIB -\n#                       Command to execute to build a stub library.\n#       INSTALL_LIB -   Command to execute to install a library;\n#                       differs when building shared or static.\n#       INSTALL_STUB_LIB -\n#                       Command to execute to install a stub library.\n#       STLIB_LD -      Base command to use for combining object files\n#                       into a static library.\n#       SHLIB_CFLAGS -  Flags to pass to cc when compiling the components\n#                       of a shared library (may request position-independent\n#                       code, among other things).\n#       SHLIB_LD -      Base command to use for combining object files\n#                       into a shared library.\n#       SHLIB_LD_LIBS - Dependent libraries for the linker to scan when\n#                       creating shared libraries.  This symbol typically\n#                       goes at the end of the \"ld\" commands that build\n#                       shared libraries. The value of the symbol is\n#                       \"${LIBS}\" if all of the dependent libraries should\n#                       be specified when creating a shared library.  If\n#                       dependent libraries should not be specified (as on\n#                       SunOS 4.x, where they cause the link to fail, or in\n#                       general if Tcl and Tk aren't themselves shared\n#                       libraries), then this symbol has an empty string\n#                       as its value.\n#       SHLIB_SUFFIX -  Suffix to use for the names of dynamically loadable\n#                       extensions.  An empty string means we don't know how\n#                       to use shared libraries on this platform.\n# TCL_SHLIB_LD_EXTRAS - Additional element which are added to SHLIB_LD_LIBS\n#  TK_SHLIB_LD_EXTRAS   for the build of Tcl and Tk, but not recorded in the\n#                       tclConfig.sh, since they are only used for the build\n#                       of Tcl and Tk.\n#                       Examples: MacOS X records the library version and\n#                       compatibility version in the shared library.  But\n#                       of course the Tcl version of this is only used for Tcl.\n#       LIB_SUFFIX -    Specifies everything that comes after the \"libfoo\"\n#                       in a static or shared library name, using the $VERSION variable\n#                       to put the version in the right place.  This is used\n#                       by platforms that need non-standard library names.\n#                       Examples:  ${VERSION}.so.1.1 on NetBSD, since it needs\n#                       to have a version after the .so, and ${VERSION}.a\n#                       on AIX, since a shared library needs to have\n#                       a .a extension whereas shared objects for loadable\n#                       extensions have a .so extension.  Defaults to\n#                       ${VERSION}${SHLIB_SUFFIX}.\n#       TCL_LIBS -\n#                       Libs to use when linking Tcl shell or some other\n#                       shell that includes Tcl libs.\n#\tCFLAGS_DEBUG -\n#\t\t\tFlags used when running the compiler in debug mode\n#\tCFLAGS_OPTIMIZE -\n#\t\t\tFlags used when running the compiler in optimize mode\n#\tCFLAGS -\tAdditional CFLAGS added as necessary (usually 64-bit)\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN([SC_CONFIG_CFLAGS], [\n\n    # Step 0.a: Enable 64 bit support?\n\n    AC_MSG_CHECKING([if 64bit support is requested])\n    AC_ARG_ENABLE(64bit,\n\tAC_HELP_STRING([--enable-64bit],\n\t    [enable 64bit support (default: off)]),\n\t[do64bit=$enableval], [do64bit=no])\n    AC_MSG_RESULT([$do64bit])\n\n    # Step 0.b: Enable Solaris 64 bit VIS support?\n\n    AC_MSG_CHECKING([if 64bit Sparc VIS support is requested])\n    AC_ARG_ENABLE(64bit-vis,\n\tAC_HELP_STRING([--enable-64bit-vis],\n\t    [enable 64bit Sparc VIS support (default: off)]),\n\t[do64bitVIS=$enableval], [do64bitVIS=no])\n    AC_MSG_RESULT([$do64bitVIS])\n    # Force 64bit on with VIS\n    AS_IF([test \"$do64bitVIS\" = \"yes\"], [do64bit=yes])\n\n    # Step 0.c: Check if visibility support is available. Do this here so\n    # that platform specific alternatives can be used below if this fails.\n\n    AC_CACHE_CHECK([if compiler supports visibility \"hidden\"],\n\ttcl_cv_cc_visibility_hidden, [\n\thold_cflags=$CFLAGS; CFLAGS=\"$CFLAGS -Werror\"\n\tAC_TRY_LINK([\n\t    extern __attribute__((__visibility__(\"hidden\"))) void f(void);\n\t    void f(void) {}], [f();], tcl_cv_cc_visibility_hidden=yes,\n\t    tcl_cv_cc_visibility_hidden=no)\n\tCFLAGS=$hold_cflags])\n    AS_IF([test $tcl_cv_cc_visibility_hidden = yes], [\n\tAC_DEFINE(MODULE_SCOPE,\n\t    [extern __attribute__((__visibility__(\"hidden\")))],\n\t    [Compiler support for module scope symbols])\n\tAC_DEFINE(HAVE_HIDDEN, [1], [Compiler support for module scope symbols])\n    ])\n\n    # Step 0.d: Disable -rpath support?\n\n    AC_MSG_CHECKING([if rpath support is requested])\n    AC_ARG_ENABLE(rpath,\n\tAC_HELP_STRING([--disable-rpath],\n\t    [disable rpath support (default: on)]),\n\t[doRpath=$enableval], [doRpath=yes])\n    AC_MSG_RESULT([$doRpath])\n\n    # Step 1: set the variable \"system\" to hold the name and version number\n    # for the system.\n\n    SC_CONFIG_SYSTEM\n\n    # Step 2: check for existence of -ldl library.  This is needed because\n    # Linux can use either -ldl or -ldld for dynamic loading.\n\n    AC_CHECK_LIB(dl, dlopen, have_dl=yes, have_dl=no)\n\n    # Require ranlib early so we can override it in special cases below.\n\n    AC_REQUIRE([AC_PROG_RANLIB])\n\n    # Step 3: set configuration options based on system name and version.\n\n    do64bit_ok=no\n    # default to '{$LIBS}' and set to \"\" on per-platform necessary basis\n    SHLIB_LD_LIBS='${LIBS}'\n    LDFLAGS_ORIG=\"$LDFLAGS\"\n    # When ld needs options to work in 64-bit mode, put them in\n    # LDFLAGS_ARCH so they eventually end up in LDFLAGS even if [load]\n    # is disabled by the user. [Bug 1016796]\n    LDFLAGS_ARCH=\"\"\n    UNSHARED_LIB_SUFFIX=\"\"\n    TCL_TRIM_DOTS='`echo ${VERSION} | tr -d .`'\n    ECHO_VERSION='`echo ${VERSION}`'\n    TCL_LIB_VERSIONS_OK=ok\n    CFLAGS_DEBUG=-g\n    AS_IF([test \"$GCC\" = yes], [\n\tCFLAGS_OPTIMIZE=-O2\n\tCFLAGS_WARNING=\"-Wall\"\n    ], [\n\tCFLAGS_OPTIMIZE=-O\n\tCFLAGS_WARNING=\"\"\n    ])\n    AC_CHECK_TOOL(AR, ar)\n    STLIB_LD='${AR} cr'\n    LD_LIBRARY_PATH_VAR=\"LD_LIBRARY_PATH\"\n    PLAT_OBJS=\"\"\n    PLAT_SRCS=\"\"\n    LDAIX_SRC=\"\"\n    AS_IF([test x\"${SHLIB_VERSION}\" = x], [SHLIB_VERSION=\"1.0\"])\n    case $system in\n\tAIX-*)\n\t    AS_IF([test \"${TCL_THREADS}\" = \"1\" -a \"$GCC\" != \"yes\"], [\n\t\t# AIX requires the _r compiler when gcc isn't being used\n\t\tcase \"${CC}\" in\n\t\t    *_r|*_r\\ *)\n\t\t\t# ok ...\n\t\t\t;;\n\t\t    *)\n\t\t\t# Make sure only first arg gets _r\n\t\t    \tCC=`echo \"$CC\" | sed -e 's/^\\([[^ ]]*\\)/\\1_r/'`\n\t\t\t;;\n\t\tesac\n\t\tAC_MSG_RESULT([Using $CC for compiling with threads])\n\t    ])\n\t    LIBS=\"$LIBS -lc\"\n\t    SHLIB_CFLAGS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    LD_LIBRARY_PATH_VAR=\"LIBPATH\"\n\n\t    # ldAix No longer needed with use of -bexpall/-brtl\n\t    # but some extensions may still reference it\n\t    LDAIX_SRC='$(UNIX_DIR)/ldAix'\n\n\t    # Check to enable 64-bit flags for compiler/linker\n\t    AS_IF([test \"$do64bit\" = yes], [\n\t\tAS_IF([test \"$GCC\" = yes], [\n\t\t    AC_MSG_WARN([64bit mode not supported with GCC on $system])\n\t\t], [\n\t\t    do64bit_ok=yes\n\t\t    CFLAGS=\"$CFLAGS -q64\"\n\t\t    LDFLAGS_ARCH=\"-q64\"\n\t\t    RANLIB=\"${RANLIB} -X64\"\n\t\t    AR=\"${AR} -X64\"\n\t\t    SHLIB_LD_FLAGS=\"-b64\"\n\t\t])\n\t    ])\n\n\t    AS_IF([test \"`uname -m`\" = ia64], [\n\t\t# AIX-5 uses ELF style dynamic libraries on IA-64, but not PPC\n\t\tSHLIB_LD=\"/usr/ccs/bin/ld -G -z text\"\n\t\t# AIX-5 has dl* in libc.so\n\t\tDL_LIBS=\"\"\n\t\tAS_IF([test \"$GCC\" = yes], [\n\t\t    CC_SEARCH_FLAGS='-Wl,-R,${LIB_RUNTIME_DIR}'\n\t\t], [\n\t\t    CC_SEARCH_FLAGS='-R${LIB_RUNTIME_DIR}'\n\t\t])\n\t\tLD_SEARCH_FLAGS='-R ${LIB_RUNTIME_DIR}'\n\t    ], [\n\t\tAS_IF([test \"$GCC\" = yes], [\n\t\t    SHLIB_LD='${CC} -shared -Wl,-bexpall'\n\t\t], [\n\t\t    SHLIB_LD=\"/bin/ld -bhalt:4 -bM:SRE -bexpall -H512 -T512 -bnoentry\"\n\t\t    LDFLAGS=\"$LDFLAGS -brtl\"\n\t\t])\n\t\tSHLIB_LD=\"${SHLIB_LD} ${SHLIB_LD_FLAGS}\"\n\t\tDL_LIBS=\"-ldl\"\n\t\tCC_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'\n\t\tLD_SEARCH_FLAGS=${CC_SEARCH_FLAGS}\n\t    ])\n\t    ;;\n\tBeOS*)\n\t    SHLIB_CFLAGS=\"-fPIC\"\n\t    SHLIB_LD='${CC} -nostart'\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\n\t    #-----------------------------------------------------------\n\t    # Check for inet_ntoa in -lbind, for BeOS (which also needs\n\t    # -lsocket, even if the network functions are in -lnet which\n\t    # is always linked to, for compatibility.\n\t    #-----------------------------------------------------------\n\t    AC_CHECK_LIB(bind, inet_ntoa, [LIBS=\"$LIBS -lbind -lsocket\"])\n\t    ;;\n\tBSD/OS-2.1*|BSD/OS-3*)\n\t    SHLIB_CFLAGS=\"\"\n\t    SHLIB_LD=\"shlicc -r\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    CC_SEARCH_FLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tBSD/OS-4.*)\n\t    SHLIB_CFLAGS=\"-export-dynamic -fPIC\"\n\t    SHLIB_LD='${CC} -shared'\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    LDFLAGS=\"$LDFLAGS -export-dynamic\"\n\t    CC_SEARCH_FLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tCYGWIN_*|MINGW32*)\n\t    SHLIB_CFLAGS=\"\"\n\t    SHLIB_LD='${CC} -shared'\n\t    SHLIB_SUFFIX=\".dll\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    PLAT_OBJS='${CYGWIN_OBJS}'\n\t    PLAT_SRCS='${CYGWIN_SRCS}'\n\t    DL_LIBS=\"-ldl\"\n\t    CC_SEARCH_FLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    TCL_NEEDS_EXP_FILE=1\n\t    TCL_EXPORT_FILE_SUFFIX='${VERSION}\\$\\{DBGX\\}.dll.a'\n\t    SHLIB_LD_LIBS=\"${SHLIB_LD_LIBS} -Wl,--out-implib,\\$[@].a\"\n\t    AC_CACHE_CHECK(for Cygwin version of gcc,\n\t\tac_cv_cygwin,\n\t\tAC_TRY_COMPILE([\n\t\t#ifdef __CYGWIN__\n\t\t    #error cygwin\n\t\t#endif\n\t\t], [],\n\t\tac_cv_cygwin=no,\n\t\tac_cv_cygwin=yes)\n\t    )\n\t    if test \"$ac_cv_cygwin\" = \"no\"; then\n\t\tAC_MSG_ERROR([${CC} is not a cygwin compiler.])\n\t    fi\n\t    if test \"x${TCL_THREADS}\" = \"x0\"; then\n\t\tAC_MSG_ERROR([CYGWIN compile is only supported with --enable-threads])\n\t    fi\n\t    do64bit_ok=yes\n\t    if test \"x${SHARED_BUILD}\" = \"x1\"; then\n\t\techo \"running cd ../win; ${CONFIG_SHELL-/bin/sh} ./configure $ac_configure_args\"\n\t\t# The eval makes quoting arguments work.\n\t\tif cd ../win; eval ${CONFIG_SHELL-/bin/sh} ./configure $ac_configure_args; cd ../unix\n\t\tthen :\n\t\telse\n\t\t    { echo \"configure: error: configure failed for ../win\" 1>&2; exit 1; }\n\t\tfi\n\t    fi\n\t    ;;\n\tdgux*)\n\t    SHLIB_CFLAGS=\"-K PIC\"\n\t    SHLIB_LD='${CC} -G'\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    CC_SEARCH_FLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tHaiku*)\n\t    LDFLAGS=\"$LDFLAGS -Wl,--export-dynamic\"\n\t    SHLIB_CFLAGS=\"-fPIC\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    SHLIB_LD='${CC} -shared ${CFLAGS} ${LDFLAGS}'\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-lroot\"\n\t    AC_CHECK_LIB(network, inet_ntoa, [LIBS=\"$LIBS -lnetwork\"])\n\t    ;;\n\tHP-UX-*.11.*)\n\t    # Use updated header definitions where possible\n\t    AC_DEFINE(_XOPEN_SOURCE_EXTENDED, 1, [Do we want to use the XOPEN network library?])\n\t    AC_DEFINE(_XOPEN_SOURCE, 1, [Do we want to use the XOPEN network library?])\n\t    LIBS=\"$LIBS -lxnet\"               # Use the XOPEN network library\n\n\t    AS_IF([test \"`uname -m`\" = ia64], [\n\t\tSHLIB_SUFFIX=\".so\"\n\t    ], [\n\t\tSHLIB_SUFFIX=\".sl\"\n\t    ])\n\t    AC_CHECK_LIB(dld, shl_load, tcl_ok=yes, tcl_ok=no)\n\t    AS_IF([test \"$tcl_ok\" = yes], [\n\t\tSHLIB_CFLAGS=\"+z\"\n\t\tSHLIB_LD=\"ld -b\"\n\t\tDL_OBJS=\"tclLoadShl.o\"\n\t\tDL_LIBS=\"-ldld\"\n\t\tLDFLAGS=\"$LDFLAGS -Wl,-E\"\n\t\tCC_SEARCH_FLAGS='-Wl,+s,+b,${LIB_RUNTIME_DIR}:.'\n\t\tLD_SEARCH_FLAGS='+s +b ${LIB_RUNTIME_DIR}:.'\n\t\tLD_LIBRARY_PATH_VAR=\"SHLIB_PATH\"\n\t    ])\n\t    AS_IF([test \"$GCC\" = yes], [\n\t\tSHLIB_LD='${CC} -shared'\n\t\tLD_SEARCH_FLAGS=${CC_SEARCH_FLAGS}\n\t    ], [\n\t\tCFLAGS=\"$CFLAGS -z\"\n\t    ])\n\n\t    # Users may want PA-RISC 1.1/2.0 portable code - needs HP cc\n\t    #CFLAGS=\"$CFLAGS +DAportable\"\n\n\t    # Check to enable 64-bit flags for compiler/linker\n\t    AS_IF([test \"$do64bit\" = \"yes\"], [\n\t\tAS_IF([test \"$GCC\" = yes], [\n\t\t    case `${CC} -dumpmachine` in\n\t\t\thppa64*)\n\t\t\t    # 64-bit gcc in use.  Fix flags for GNU ld.\n\t\t\t    do64bit_ok=yes\n\t\t\t    SHLIB_LD='${CC} -shared'\n\t\t\t    AS_IF([test $doRpath = yes], [\n\t\t\t\tCC_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'])\n\t\t\t    LD_SEARCH_FLAGS=${CC_SEARCH_FLAGS}\n\t\t\t    ;;\n\t\t\t*)\n\t\t\t    AC_MSG_WARN([64bit mode not supported with GCC on $system])\n\t\t\t    ;;\n\t\t    esac\n\t\t], [\n\t\t    do64bit_ok=yes\n\t\t    CFLAGS=\"$CFLAGS +DD64\"\n\t\t    LDFLAGS_ARCH=\"+DD64\"\n\t\t])\n\t    ]) ;;\n\tHP-UX-*.08.*|HP-UX-*.09.*|HP-UX-*.10.*)\n\t    SHLIB_SUFFIX=\".sl\"\n\t    AC_CHECK_LIB(dld, shl_load, tcl_ok=yes, tcl_ok=no)\n\t    AS_IF([test \"$tcl_ok\" = yes], [\n\t\tSHLIB_CFLAGS=\"+z\"\n\t\tSHLIB_LD=\"ld -b\"\n\t\tSHLIB_LD_LIBS=\"\"\n\t\tDL_OBJS=\"tclLoadShl.o\"\n\t\tDL_LIBS=\"-ldld\"\n\t\tLDFLAGS=\"$LDFLAGS -Wl,-E\"\n\t\tCC_SEARCH_FLAGS='-Wl,+s,+b,${LIB_RUNTIME_DIR}:.'\n\t\tLD_SEARCH_FLAGS='+s +b ${LIB_RUNTIME_DIR}:.'\n\t\tLD_LIBRARY_PATH_VAR=\"SHLIB_PATH\"\n\t    ]) ;;\n\tIRIX-5.*)\n\t    SHLIB_CFLAGS=\"\"\n\t    SHLIB_LD=\"ld -shared -rdata_shared\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"\"\n\t    AC_LIBOBJ(mkstemp)\n\t    AS_IF([test $doRpath = yes], [\n\t\tCC_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'\n\t\tLD_SEARCH_FLAGS='-rpath ${LIB_RUNTIME_DIR}'])\n\t    ;;\n\tIRIX-6.*)\n\t    SHLIB_CFLAGS=\"\"\n\t    SHLIB_LD=\"ld -n32 -shared -rdata_shared\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"\"\n\t    AC_LIBOBJ(mkstemp)\n\t    AS_IF([test $doRpath = yes], [\n\t\tCC_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'\n\t\tLD_SEARCH_FLAGS='-rpath ${LIB_RUNTIME_DIR}'])\n\t    AS_IF([test \"$GCC\" = yes], [\n\t\tCFLAGS=\"$CFLAGS -mabi=n32\"\n\t\tLDFLAGS=\"$LDFLAGS -mabi=n32\"\n\t    ], [\n\t\tcase $system in\n\t\t    IRIX-6.3)\n\t\t\t# Use to build 6.2 compatible binaries on 6.3.\n\t\t\tCFLAGS=\"$CFLAGS -n32 -D_OLD_TERMIOS\"\n\t\t\t;;\n\t\t    *)\n\t\t\tCFLAGS=\"$CFLAGS -n32\"\n\t\t\t;;\n\t\tesac\n\t\tLDFLAGS=\"$LDFLAGS -n32\"\n\t    ])\n\t    ;;\n\tIRIX64-6.*)\n\t    SHLIB_CFLAGS=\"\"\n\t    SHLIB_LD=\"ld -n32 -shared -rdata_shared\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"\"\n\t    AC_LIBOBJ(mkstemp)\n\t    AS_IF([test $doRpath = yes], [\n\t\tCC_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'\n\t\tLD_SEARCH_FLAGS='-rpath ${LIB_RUNTIME_DIR}'])\n\n\t    # Check to enable 64-bit flags for compiler/linker\n\n\t    AS_IF([test \"$do64bit\" = yes], [\n\t        AS_IF([test \"$GCC\" = yes], [\n\t            AC_MSG_WARN([64bit mode not supported by gcc])\n\t        ], [\n\t            do64bit_ok=yes\n\t            SHLIB_LD=\"ld -64 -shared -rdata_shared\"\n\t            CFLAGS=\"$CFLAGS -64\"\n\t            LDFLAGS_ARCH=\"-64\"\n\t        ])\n\t    ])\n\t    ;;\n\tLinux*|GNU*|NetBSD-Debian)\n\t    SHLIB_CFLAGS=\"-fPIC\"\n\t    SHLIB_SUFFIX=\".so\"\n\n\t    CFLAGS_OPTIMIZE=\"-O2\"\n\t    # egcs-2.91.66 on Redhat Linux 6.0 generates lots of warnings\n\t    # when you inline the string and math operations.  Turn this off to\n\t    # get rid of the warnings.\n\t    #CFLAGS_OPTIMIZE=\"${CFLAGS_OPTIMIZE} -D__NO_STRING_INLINES -D__NO_MATH_INLINES\"\n\n\t    SHLIB_LD='${CC} -shared ${CFLAGS} ${LDFLAGS}'\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    LDFLAGS=\"$LDFLAGS -Wl,--export-dynamic\"\n\t    AS_IF([test $doRpath = yes], [\n\t\tCC_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'])\n\t    LD_SEARCH_FLAGS=${CC_SEARCH_FLAGS}\n\t    AS_IF([test \"`uname -m`\" = \"alpha\"], [CFLAGS=\"$CFLAGS -mieee\"])\n\t    AS_IF([test $do64bit = yes], [\n\t\tAC_CACHE_CHECK([if compiler accepts -m64 flag], tcl_cv_cc_m64, [\n\t\t    hold_cflags=$CFLAGS\n\t\t    CFLAGS=\"$CFLAGS -m64\"\n\t\t    AC_TRY_LINK(,, tcl_cv_cc_m64=yes, tcl_cv_cc_m64=no)\n\t\t    CFLAGS=$hold_cflags])\n\t\tAS_IF([test $tcl_cv_cc_m64 = yes], [\n\t\t    CFLAGS=\"$CFLAGS -m64\"\n\t\t    do64bit_ok=yes\n\t\t])\n\t   ])\n\n\t    # The combo of gcc + glibc has a bug related to inlining of\n\t    # functions like strtod(). The -fno-builtin flag should address\n\t    # this problem but it does not work. The -fno-inline flag is kind\n\t    # of overkill but it works. Disable inlining only when one of the\n\t    # files in compat/*.c is being linked in.\n\n\t    AS_IF([test x\"${USE_COMPAT}\" != x],[CFLAGS=\"$CFLAGS -fno-inline\"])\n\t    ;;\n\tLynx*)\n\t    SHLIB_CFLAGS=\"-fPIC\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    CFLAGS_OPTIMIZE=-02\n\t    SHLIB_LD='${CC} -shared'\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-mshared -ldl\"\n\t    LD_FLAGS=\"-Wl,--export-dynamic\"\n\t    AS_IF([test $doRpath = yes], [\n\t\tCC_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'\n\t\tLD_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'])\n\t    ;;\n\tMP-RAS-02*)\n\t    SHLIB_CFLAGS=\"-K PIC\"\n\t    SHLIB_LD='${CC} -G'\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    CC_SEARCH_FLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tMP-RAS-*)\n\t    SHLIB_CFLAGS=\"-K PIC\"\n\t    SHLIB_LD='${CC} -G'\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    LDFLAGS=\"$LDFLAGS -Wl,-Bexport\"\n\t    CC_SEARCH_FLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tOpenBSD-*)\n\t    arch=`arch -s`\n\t    case \"$arch\" in\n\t    vax)\n\t\t# Equivalent using configure option --disable-load\n\t\t# Step 4 will set the necessary variables\n\t\tDL_OBJS=\"\"\n\t\tSHLIB_LD_LIBS=\"\"\n\t\tLDFLAGS=\"\"\n\t\t;;\n\t    *)\n\t\tcase \"$arch\" in\n\t\talpha|sparc|sparc64)\n\t\t    SHLIB_CFLAGS=\"-fPIC\"\n\t\t    ;;\n\t\t*)\n\t\t    SHLIB_CFLAGS=\"-fpic\"\n\t\t    ;;\n\t\tesac\n\t\tSHLIB_LD='${CC} -shared ${SHLIB_CFLAGS}'\n\t\tSHLIB_SUFFIX=\".so\"\n\t\tDL_OBJS=\"tclLoadDl.o\"\n\t\tDL_LIBS=\"\"\n\t\tAS_IF([test $doRpath = yes], [\n\t\t    CC_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'])\n\t\tLD_SEARCH_FLAGS=${CC_SEARCH_FLAGS}\n\t\tSHARED_LIB_SUFFIX='${TCL_TRIM_DOTS}.so.${SHLIB_VERSION}'\n\t\tLDFLAGS=\"-Wl,-export-dynamic\"\n\t\t;;\n\t    esac\n\t    case \"$arch\" in\n\t    vax)\n\t\tCFLAGS_OPTIMIZE=\"-O1\"\n\t\t;;\n\t    sh)\n\t\tCFLAGS_OPTIMIZE=\"-O0\"\n\t\t;;\n\t    *)\n\t\tCFLAGS_OPTIMIZE=\"-O2\"\n\t\t;;\n\t    esac\n\t    AS_IF([test \"${TCL_THREADS}\" = \"1\"], [\n\t\t# On OpenBSD:\tCompile with -pthread\n\t\t#\t\tDon't link with -lpthread\n\t\tLIBS=`echo $LIBS | sed s/-lpthread//`\n\t\tCFLAGS=\"$CFLAGS -pthread\"\n\t    ])\n\t    # OpenBSD doesn't do version numbers with dots.\n\t    UNSHARED_LIB_SUFFIX='${TCL_TRIM_DOTS}.a'\n\t    TCL_LIB_VERSIONS_OK=nodots\n\t    ;;\n\tNetBSD-*)\n\t    # NetBSD has ELF and can use 'cc -shared' to build shared libs\n\t    SHLIB_CFLAGS=\"-fPIC\"\n\t    SHLIB_LD='${CC} -shared ${SHLIB_CFLAGS}'\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"\"\n\t    LDFLAGS=\"$LDFLAGS -export-dynamic\"\n\t    AS_IF([test $doRpath = yes], [\n\t\tCC_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'])\n\t    LD_SEARCH_FLAGS=${CC_SEARCH_FLAGS}\n\t    AS_IF([test \"${TCL_THREADS}\" = \"1\"], [\n\t\t# The -pthread needs to go in the CFLAGS, not LIBS\n\t\tLIBS=`echo $LIBS | sed s/-pthread//`\n\t\tCFLAGS=\"$CFLAGS -pthread\"\n\t    \tLDFLAGS=\"$LDFLAGS -pthread\"\n\t    ])\n\t    ;;\n\tFreeBSD-*)\n\t    # This configuration from FreeBSD Ports.\n\t    SHLIB_CFLAGS=\"-fPIC\"\n\t    SHLIB_LD=\"${CC} -shared\"\n\t    SHLIB_LD_LIBS=\"${SHLIB_LD_LIBS} -Wl,-soname,\\$[@]\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"\"\n\t    LDFLAGS=\"\"\n\t    AS_IF([test $doRpath = yes], [\n\t\tCC_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'\n\t\tLD_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'])\n\t    AS_IF([test \"${TCL_THREADS}\" = \"1\"], [\n\t\t# The -pthread needs to go in the LDFLAGS, not LIBS\n\t\tLIBS=`echo $LIBS | sed s/-pthread//`\n\t\tCFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n\t\tLDFLAGS=\"$LDFLAGS $PTHREAD_LIBS\"])\n\t    case $system in\n\t    FreeBSD-3.*)\n\t\t# Version numbers are dot-stripped by system policy.\n\t\tTCL_TRIM_DOTS=`echo ${VERSION} | tr -d .`\n\t\tUNSHARED_LIB_SUFFIX='${TCL_TRIM_DOTS}.a'\n\t\tSHARED_LIB_SUFFIX='${TCL_TRIM_DOTS}.so'\n\t\tTCL_LIB_VERSIONS_OK=nodots\n\t\t;;\n\t    esac\n\t    ;;\n\tDarwin-*)\n\t    CFLAGS_OPTIMIZE=\"-Os\"\n\t    SHLIB_CFLAGS=\"-fno-common\"\n\t    # To avoid discrepancies between what headers configure sees during\n\t    # preprocessing tests and compiling tests, move any -isysroot and\n\t    # -mmacosx-version-min flags from CFLAGS to CPPFLAGS:\n\t    CPPFLAGS=\"${CPPFLAGS} `echo \" ${CFLAGS}\" | \\\n\t\tawk 'BEGIN {FS=\" +-\";ORS=\" \"}; {for (i=2;i<=NF;i++) \\\n\t\tif ([$]i~/^(isysroot|mmacosx-version-min)/) print \"-\"[$]i}'`\"\n\t    CFLAGS=\"`echo \" ${CFLAGS}\" | \\\n\t\tawk 'BEGIN {FS=\" +-\";ORS=\" \"}; {for (i=2;i<=NF;i++) \\\n\t\tif (!([$]i~/^(isysroot|mmacosx-version-min)/)) print \"-\"[$]i}'`\"\n\t    AS_IF([test $do64bit = yes], [\n\t\tcase `arch` in\n\t\t    ppc)\n\t\t\tAC_CACHE_CHECK([if compiler accepts -arch ppc64 flag],\n\t\t\t\ttcl_cv_cc_arch_ppc64, [\n\t\t\t    hold_cflags=$CFLAGS\n\t\t\t    CFLAGS=\"$CFLAGS -arch ppc64 -mpowerpc64 -mcpu=G5\"\n\t\t\t    AC_TRY_LINK(,, tcl_cv_cc_arch_ppc64=yes,\n\t\t\t\t    tcl_cv_cc_arch_ppc64=no)\n\t\t\t    CFLAGS=$hold_cflags])\n\t\t\tAS_IF([test $tcl_cv_cc_arch_ppc64 = yes], [\n\t\t\t    CFLAGS=\"$CFLAGS -arch ppc64 -mpowerpc64 -mcpu=G5\"\n\t\t\t    do64bit_ok=yes\n\t\t\t]);;\n\t\t    i386)\n\t\t\tAC_CACHE_CHECK([if compiler accepts -arch x86_64 flag],\n\t\t\t\ttcl_cv_cc_arch_x86_64, [\n\t\t\t    hold_cflags=$CFLAGS\n\t\t\t    CFLAGS=\"$CFLAGS -arch x86_64\"\n\t\t\t    AC_TRY_LINK(,, tcl_cv_cc_arch_x86_64=yes,\n\t\t\t\t    tcl_cv_cc_arch_x86_64=no)\n\t\t\t    CFLAGS=$hold_cflags])\n\t\t\tAS_IF([test $tcl_cv_cc_arch_x86_64 = yes], [\n\t\t\t    CFLAGS=\"$CFLAGS -arch x86_64\"\n\t\t\t    do64bit_ok=yes\n\t\t\t]);;\n\t\t    *)\n\t\t\tAC_MSG_WARN([Don't know how enable 64-bit on architecture `arch`]);;\n\t\tesac\n\t    ], [\n\t\t# Check for combined 32-bit and 64-bit fat build\n\t\tAS_IF([echo \"$CFLAGS \" |grep -E -q -- '-arch (ppc64|x86_64) ' \\\n\t\t    && echo \"$CFLAGS \" |grep -E -q -- '-arch (ppc|i386) '], [\n\t\t    fat_32_64=yes])\n\t    ])\n\t    SHLIB_LD='${CC} -dynamiclib ${CFLAGS} ${LDFLAGS}'\n\t    AC_CACHE_CHECK([if ld accepts -single_module flag], tcl_cv_ld_single_module, [\n\t\thold_ldflags=$LDFLAGS\n\t\tLDFLAGS=\"$LDFLAGS -dynamiclib -Wl,-single_module\"\n\t\tAC_TRY_LINK(, [int i;], tcl_cv_ld_single_module=yes, tcl_cv_ld_single_module=no)\n\t\tLDFLAGS=$hold_ldflags])\n\t    AS_IF([test $tcl_cv_ld_single_module = yes], [\n\t\tSHLIB_LD=\"${SHLIB_LD} -Wl,-single_module\"\n\t    ])\n\t    SHLIB_SUFFIX=\".dylib\"\n\t    DL_OBJS=\"tclLoadDyld.o\"\n\t    DL_LIBS=\"\"\n\t    # Don't use -prebind when building for Mac OS X 10.4 or later only:\n\t    AS_IF([test \"`echo \"${MACOSX_DEPLOYMENT_TARGET}\" | awk -F '10\\\\.' '{print int([$]2)}'`\" -lt 4 -a \\\n\t\t\"`echo \"${CPPFLAGS}\" | awk -F '-mmacosx-version-min=10\\\\.' '{print int([$]2)}'`\" -lt 4], [\n\t\tLDFLAGS=\"$LDFLAGS -prebind\"])\n\t    LDFLAGS=\"$LDFLAGS -headerpad_max_install_names\"\n\t    AC_CACHE_CHECK([if ld accepts -search_paths_first flag],\n\t\t    tcl_cv_ld_search_paths_first, [\n\t\thold_ldflags=$LDFLAGS\n\t\tLDFLAGS=\"$LDFLAGS -Wl,-search_paths_first\"\n\t\tAC_TRY_LINK(, [int i;], tcl_cv_ld_search_paths_first=yes,\n\t\t\ttcl_cv_ld_search_paths_first=no)\n\t\tLDFLAGS=$hold_ldflags])\n\t    AS_IF([test $tcl_cv_ld_search_paths_first = yes], [\n\t\tLDFLAGS=\"$LDFLAGS -Wl,-search_paths_first\"\n\t    ])\n\t    AS_IF([test \"$tcl_cv_cc_visibility_hidden\" != yes], [\n\t\tAC_DEFINE(MODULE_SCOPE, [__private_extern__],\n\t\t    [Compiler support for module scope symbols])\n\t    ])\n\t    CC_SEARCH_FLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    LD_LIBRARY_PATH_VAR=\"DYLD_LIBRARY_PATH\"\n\t    AC_DEFINE(MAC_OSX_TCL, 1, [Is this a Mac I see before me?])\n\t    PLAT_OBJS='${MAC_OSX_OBJS}'\n\t    PLAT_SRCS='${MAC_OSX_SRCS}'\n\t    AC_MSG_CHECKING([whether to use CoreFoundation])\n\t    AC_ARG_ENABLE(corefoundation,\n\t\tAC_HELP_STRING([--enable-corefoundation],\n\t\t    [use CoreFoundation API on MacOSX (default: on)]),\n\t\t[tcl_corefoundation=$enableval], [tcl_corefoundation=yes])\n\t    AC_MSG_RESULT([$tcl_corefoundation])\n\t    AS_IF([test $tcl_corefoundation = yes], [\n\t\tAC_CACHE_CHECK([for CoreFoundation.framework],\n\t\t\ttcl_cv_lib_corefoundation, [\n\t\t    hold_libs=$LIBS\n\t\t    AS_IF([test \"$fat_32_64\" = yes], [\n\t\t\tfor v in CFLAGS CPPFLAGS LDFLAGS; do\n\t\t\t    # On Tiger there is no 64-bit CF, so remove 64-bit\n\t\t\t    # archs from CFLAGS et al. while testing for\n\t\t\t    # presence of CF. 64-bit CF is disabled in\n\t\t\t    # tclUnixPort.h if necessary.\n\t\t\t    eval 'hold_'$v'=\"$'$v'\";'$v'=\"`echo \"$'$v' \"|sed -e \"s/-arch ppc64 / /g\" -e \"s/-arch x86_64 / /g\"`\"'\n\t\t\tdone])\n\t\t    LIBS=\"$LIBS -framework CoreFoundation\"\n\t\t    AC_TRY_LINK([#include <CoreFoundation/CoreFoundation.h>],\n\t\t\t[CFBundleRef b = CFBundleGetMainBundle();],\n\t\t\ttcl_cv_lib_corefoundation=yes,\n\t\t\ttcl_cv_lib_corefoundation=no)\n\t\t    AS_IF([test \"$fat_32_64\" = yes], [\n\t\t\tfor v in CFLAGS CPPFLAGS LDFLAGS; do\n\t\t\t    eval $v'=\"$hold_'$v'\"'\n\t\t        done])\n\t\t    LIBS=$hold_libs])\n\t\tAS_IF([test $tcl_cv_lib_corefoundation = yes], [\n\t\t    LIBS=\"$LIBS -framework CoreFoundation\"\n\t\t    AC_DEFINE(HAVE_COREFOUNDATION, 1,\n\t\t\t[Do we have access to Darwin CoreFoundation.framework?])\n\t\t], [tcl_corefoundation=no])\n\t\tAS_IF([test \"$fat_32_64\" = yes -a $tcl_corefoundation = yes],[\n\t\t    AC_CACHE_CHECK([for 64-bit CoreFoundation],\n\t\t\t    tcl_cv_lib_corefoundation_64, [\n\t\t\tfor v in CFLAGS CPPFLAGS LDFLAGS; do\n\t\t\t    eval 'hold_'$v'=\"$'$v'\";'$v'=\"`echo \"$'$v' \"|sed -e \"s/-arch ppc / /g\" -e \"s/-arch i386 / /g\"`\"'\n\t\t\tdone\n\t\t\tAC_TRY_LINK([#include <CoreFoundation/CoreFoundation.h>],\n\t\t\t    [CFBundleRef b = CFBundleGetMainBundle();],\n\t\t\t    tcl_cv_lib_corefoundation_64=yes,\n\t\t\t    tcl_cv_lib_corefoundation_64=no)\n\t\t\tfor v in CFLAGS CPPFLAGS LDFLAGS; do\n\t\t\t    eval $v'=\"$hold_'$v'\"'\n\t\t\tdone])\n\t\t    AS_IF([test $tcl_cv_lib_corefoundation_64 = no], [\n\t\t\tAC_DEFINE(NO_COREFOUNDATION_64, 1,\n\t\t\t    [Is Darwin CoreFoundation unavailable for 64-bit?])\n                        LDFLAGS=\"$LDFLAGS -Wl,-no_arch_warnings\"\n\t\t    ])\n\t\t])\n\t    ])\n\t    ;;\n\tNEXTSTEP-*)\n\t    SHLIB_CFLAGS=\"\"\n\t    SHLIB_LD='${CC} -nostdlib -r'\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadNext.o\"\n\t    DL_LIBS=\"\"\n\t    CC_SEARCH_FLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tOS/390-*)\n\t    SHLIB_LD_LIBS=\"\"\n\t    CFLAGS_OPTIMIZE=\"\"\t\t# Optimizer is buggy\n\t    AC_DEFINE(_OE_SOCKETS, 1,\t# needed in sys/socket.h\n\t\t[Should OS/390 do the right thing with sockets?])\n\t    ;;\n\tOSF1-1.0|OSF1-1.1|OSF1-1.2)\n\t    # OSF/1 1.[012] from OSF, and derivatives, including Paragon OSF/1\n\t    SHLIB_CFLAGS=\"\"\n\t    # Hack: make package name same as library name\n\t    SHLIB_LD='ld -R -export $@:'\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadOSF.o\"\n\t    DL_LIBS=\"\"\n\t    CC_SEARCH_FLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tOSF1-1.*)\n\t    # OSF/1 1.3 from OSF using ELF, and derivatives, including AD2\n\t    SHLIB_CFLAGS=\"-fPIC\"\n\t    AS_IF([test \"$SHARED_BUILD\" = 1], [SHLIB_LD=\"ld -shared\"], [\n\t        SHLIB_LD=\"ld -non_shared\"\n\t    ])\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"\"\n\t    CC_SEARCH_FLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tOSF1-V*)\n\t    # Digital OSF/1\n\t    SHLIB_CFLAGS=\"\"\n\t    AS_IF([test \"$SHARED_BUILD\" = 1], [\n\t        SHLIB_LD='ld -shared -expect_unresolved \"*\"'\n\t    ], [\n\t        SHLIB_LD='ld -non_shared -expect_unresolved \"*\"'\n\t    ])\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"\"\n\t    AS_IF([test $doRpath = yes], [\n\t\tCC_SEARCH_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'\n\t\tLD_SEARCH_FLAGS='-rpath ${LIB_RUNTIME_DIR}'])\n\t    AS_IF([test \"$GCC\" = yes], [CFLAGS=\"$CFLAGS -mieee\"], [\n\t\tCFLAGS=\"$CFLAGS -DHAVE_TZSET -std1 -ieee\"])\n\t    # see pthread_intro(3) for pthread support on osf1, k.furukawa\n\t    AS_IF([test \"${TCL_THREADS}\" = 1], [\n\t\tCFLAGS=\"$CFLAGS -DHAVE_PTHREAD_ATTR_SETSTACKSIZE\"\n\t\tCFLAGS=\"$CFLAGS -DTCL_THREAD_STACK_MIN=PTHREAD_STACK_MIN*64\"\n\t\tLIBS=`echo $LIBS | sed s/-lpthreads//`\n\t\tAS_IF([test \"$GCC\" = yes], [\n\t\t    LIBS=\"$LIBS -lpthread -lmach -lexc\"\n\t\t], [\n\t\t    CFLAGS=\"$CFLAGS -pthread\"\n\t\t    LDFLAGS=\"$LDFLAGS -pthread\"\n\t\t])\n\t    ])\n\t    ;;\n\tQNX-6*)\n\t    # QNX RTP\n\t    # This may work for all QNX, but it was only reported for v6.\n\t    SHLIB_CFLAGS=\"-fPIC\"\n\t    SHLIB_LD=\"ld -Bshareable -x\"\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    # dlopen is in -lc on QNX\n\t    DL_LIBS=\"\"\n\t    CC_SEARCH_FLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tSCO_SV-3.2*)\n\t    # Note, dlopen is available only on SCO 3.2.5 and greater. However,\n\t    # this test works, since \"uname -s\" was non-standard in 3.2.4 and\n\t    # below.\n\t    AS_IF([test \"$GCC\" = yes], [\n\t    \tSHLIB_CFLAGS=\"-fPIC -melf\"\n\t    \tLDFLAGS=\"$LDFLAGS -melf -Wl,-Bexport\"\n\t    ], [\n\t    \tSHLIB_CFLAGS=\"-Kpic -belf\"\n\t    \tLDFLAGS=\"$LDFLAGS -belf -Wl,-Bexport\"\n\t    ])\n\t    SHLIB_LD=\"ld -G\"\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"\"\n\t    CC_SEARCH_FLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tSINIX*5.4*)\n\t    SHLIB_CFLAGS=\"-K PIC\"\n\t    SHLIB_LD='${CC} -G'\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    CC_SEARCH_FLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n\tSunOS-4*)\n\t    SHLIB_CFLAGS=\"-PIC\"\n\t    SHLIB_LD=\"ld\"\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    CC_SEARCH_FLAGS='-L${LIB_RUNTIME_DIR}'\n\t    LD_SEARCH_FLAGS=${CC_SEARCH_FLAGS}\n\n\t    # SunOS can't handle version numbers with dots in them in library\n\t    # specs, like -ltcl7.5, so use -ltcl75 instead.  Also, it\n\t    # requires an extra version number at the end of .so file names.\n\t    # So, the library has to have a name like libtcl75.so.1.0\n\n\t    SHARED_LIB_SUFFIX='${TCL_TRIM_DOTS}.so.${SHLIB_VERSION}'\n\t    UNSHARED_LIB_SUFFIX='${TCL_TRIM_DOTS}.a'\n\t    TCL_LIB_VERSIONS_OK=nodots\n\t    ;;\n\tSunOS-5.[[0-6]])\n\t    # Careful to not let 5.10+ fall into this case\n\n\t    # Note: If _REENTRANT isn't defined, then Solaris\n\t    # won't define thread-safe library routines.\n\n\t    AC_DEFINE(_REENTRANT, 1, [Do we want the reentrant OS API?])\n\t    AC_DEFINE(_POSIX_PTHREAD_SEMANTICS, 1,\n\t\t[Do we really want to follow the standard? Yes we do!])\n\n\t    SHLIB_CFLAGS=\"-KPIC\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    AS_IF([test \"$GCC\" = yes], [\n\t\tSHLIB_LD='${CC} -shared'\n\t\tCC_SEARCH_FLAGS='-Wl,-R,${LIB_RUNTIME_DIR}'\n\t\tLD_SEARCH_FLAGS=${CC_SEARCH_FLAGS}\n\t    ], [\n\t\tSHLIB_LD=\"/usr/ccs/bin/ld -G -z text\"\n\t\tCC_SEARCH_FLAGS='-R ${LIB_RUNTIME_DIR}'\n\t\tLD_SEARCH_FLAGS=${CC_SEARCH_FLAGS}\n\t    ])\n\t    ;;\n\tSunOS-5*)\n\t    # Note: If _REENTRANT isn't defined, then Solaris\n\t    # won't define thread-safe library routines.\n\n\t    AC_DEFINE(_REENTRANT, 1, [Do we want the reentrant OS API?])\n\t    AC_DEFINE(_POSIX_PTHREAD_SEMANTICS, 1,\n\t\t[Do we really want to follow the standard? Yes we do!])\n\n\t    SHLIB_CFLAGS=\"-KPIC\"\n\n\t    # Check to enable 64-bit flags for compiler/linker\n\t    AS_IF([test \"$do64bit\" = yes], [\n\t\tarch=`isainfo`\n\t\tAS_IF([test \"$arch\" = \"sparcv9 sparc\"], [\n\t\t    AS_IF([test \"$GCC\" = yes], [\n\t\t\tAS_IF([test \"`${CC} -dumpversion | awk -F. '{print [$]1}'`\" -lt 3], [\n\t\t\t    AC_MSG_WARN([64bit mode not supported with GCC < 3.2 on $system])\n\t\t\t], [\n\t\t\t    do64bit_ok=yes\n\t\t\t    CFLAGS=\"$CFLAGS -m64 -mcpu=v9\"\n\t\t\t    LDFLAGS=\"$LDFLAGS -m64 -mcpu=v9\"\n\t\t\t    SHLIB_CFLAGS=\"-fPIC\"\n\t\t\t])\n\t\t    ], [\n\t\t\tdo64bit_ok=yes\n\t\t\tAS_IF([test \"$do64bitVIS\" = yes], [\n\t\t\t    CFLAGS=\"$CFLAGS -xarch=v9a\"\n\t\t\t    LDFLAGS_ARCH=\"-xarch=v9a\"\n\t\t\t], [\n\t\t\t    CFLAGS=\"$CFLAGS -xarch=v9\"\n\t\t\t    LDFLAGS_ARCH=\"-xarch=v9\"\n\t\t\t])\n\t\t\t# Solaris 64 uses this as well\n\t\t\t#LD_LIBRARY_PATH_VAR=\"LD_LIBRARY_PATH_64\"\n\t\t    ])\n\t\t], [AS_IF([test \"$arch\" = \"amd64 i386\"], [\n\t\t    AS_IF([test \"$GCC\" = yes], [\n\t\t\tcase $system in\n\t\t\t    SunOS-5.1[[1-9]]*|SunOS-5.[[2-9]][[0-9]]*)\n\t\t\t\tdo64bit_ok=yes\n\t\t\t\tCFLAGS=\"$CFLAGS -m64\"\n\t\t\t\tLDFLAGS=\"$LDFLAGS -m64\";;\n\t\t\t    *)\n\t\t\t\tAC_MSG_WARN([64bit mode not supported with GCC on $system]);;\n\t\t\tesac\n\t\t    ], [\n\t\t\tdo64bit_ok=yes\n\t\t\tcase $system in\n\t\t\t    SunOS-5.1[[1-9]]*|SunOS-5.[[2-9]][[0-9]]*)\n\t\t\t\tCFLAGS=\"$CFLAGS -m64\"\n\t\t\t\tLDFLAGS=\"$LDFLAGS -m64\";;\n\t\t\t    *)\n\t\t\t\tCFLAGS=\"$CFLAGS -xarch=amd64\"\n\t\t\t\tLDFLAGS=\"$LDFLAGS -xarch=amd64\";;\n\t\t\tesac\n\t\t    ])\n\t\t], [AC_MSG_WARN([64bit mode not supported for $arch])])])\n\t    ])\n\n\t    #--------------------------------------------------------------------\n\t    # On Solaris 5.x i386 with the sunpro compiler we need to link\n\t    # with sunmath to get floating point rounding control\n\t    #--------------------------------------------------------------------\n\t    AS_IF([test \"$GCC\" = yes],[use_sunmath=no],[\n\t\tarch=`isainfo`\n\t\tAC_MSG_CHECKING([whether to use -lsunmath for fp rounding control])\n\t\tAS_IF([test \"$arch\" = \"amd64 i386\" -o \"$arch\" = \"i386\"], [\n\t\t\tAC_MSG_RESULT([yes])\n\t\t\tMATH_LIBS=\"-lsunmath $MATH_LIBS\"\n\t\t\tAC_CHECK_HEADER(sunmath.h)\n\t\t\tuse_sunmath=yes\n\t\t\t], [\n\t\t\tAC_MSG_RESULT([no])\n\t\t\tuse_sunmath=no\n\t\t])\n\t    ])\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    AS_IF([test \"$GCC\" = yes], [\n\t\tSHLIB_LD='${CC} -shared'\n\t\tCC_SEARCH_FLAGS='-Wl,-R,${LIB_RUNTIME_DIR}'\n\t\tLD_SEARCH_FLAGS=${CC_SEARCH_FLAGS}\n\t\tAS_IF([test \"$do64bit_ok\" = yes], [\n\t\t    AS_IF([test \"$arch\" = \"sparcv9 sparc\"], [\n\t\t\t# We need to specify -static-libgcc or we need to\n\t\t\t# add the path to the sparv9 libgcc.\n\t\t\tSHLIB_LD=\"$SHLIB_LD -m64 -mcpu=v9 -static-libgcc\"\n\t\t\t# for finding sparcv9 libgcc, get the regular libgcc\n\t\t\t# path, remove so name and append 'sparcv9'\n\t\t\t#v9gcclibdir=\"`gcc -print-file-name=libgcc_s.so` | ...\"\n\t\t\t#CC_SEARCH_FLAGS=\"${CC_SEARCH_FLAGS},-R,$v9gcclibdir\"\n\t\t    ], [AS_IF([test \"$arch\" = \"amd64 i386\"], [\n\t\t\tSHLIB_LD=\"$SHLIB_LD -m64 -static-libgcc\"\n\t\t    ])])\n\t\t])\n\t    ], [\n\t\tAS_IF([test \"$use_sunmath\" = yes], [textmode=textoff],[textmode=text])\n\t\tcase $system in\n\t\t    SunOS-5.[[1-9]][[0-9]]*|SunOS-5.[[7-9]])\n\t\t\tSHLIB_LD=\"\\${CC} -G -z $textmode \\${LDFLAGS}\";;\n\t\t    *)\n\t\t\tSHLIB_LD=\"/usr/ccs/bin/ld -G -z $textmode\";;\n\t\tesac\n\t\tCC_SEARCH_FLAGS='-Wl,-R,${LIB_RUNTIME_DIR}'\n\t\tLD_SEARCH_FLAGS='-R ${LIB_RUNTIME_DIR}'\n\t    ])\n\t    ;;\n\tUNIX_SV* | UnixWare-5*)\n\t    SHLIB_CFLAGS=\"-KPIC\"\n\t    SHLIB_LD='${CC} -G'\n\t    SHLIB_LD_LIBS=\"\"\n\t    SHLIB_SUFFIX=\".so\"\n\t    DL_OBJS=\"tclLoadDl.o\"\n\t    DL_LIBS=\"-ldl\"\n\t    # Some UNIX_SV* systems (unixware 1.1.2 for example) have linkers\n\t    # that don't grok the -Bexport option.  Test that it does.\n\t    AC_CACHE_CHECK([for ld accepts -Bexport flag], tcl_cv_ld_Bexport, [\n\t\thold_ldflags=$LDFLAGS\n\t\tLDFLAGS=\"$LDFLAGS -Wl,-Bexport\"\n\t\tAC_TRY_LINK(, [int i;], tcl_cv_ld_Bexport=yes, tcl_cv_ld_Bexport=no)\n\t        LDFLAGS=$hold_ldflags])\n\t    AS_IF([test $tcl_cv_ld_Bexport = yes], [\n\t\tLDFLAGS=\"$LDFLAGS -Wl,-Bexport\"\n\t    ])\n\t    CC_SEARCH_FLAGS=\"\"\n\t    LD_SEARCH_FLAGS=\"\"\n\t    ;;\n    esac\n\n    AS_IF([test \"$do64bit\" = yes -a \"$do64bit_ok\" = no], [\n\tAC_MSG_WARN([64bit support being disabled -- don't know magic for this platform])\n    ])\n\n    AS_IF([test \"$do64bit\" = yes -a \"$do64bit_ok\" = yes], [\n\tAC_DEFINE(TCL_CFG_DO64BIT, 1, [Is this a 64-bit build?])\n    ])\n\ndnl # Add any CPPFLAGS set in the environment to our CFLAGS, but delay doing so\ndnl # until the end of configure, as configure's compile and link tests use\ndnl # both CPPFLAGS and CFLAGS (unlike our compile and link) but configure's\ndnl # preprocessing tests use only CPPFLAGS.\n    AC_CONFIG_COMMANDS_PRE([CFLAGS=\"${CFLAGS} ${CPPFLAGS}\"; CPPFLAGS=\"\"])\n\n    # Step 4: disable dynamic loading if requested via a command-line switch.\n\n    AC_ARG_ENABLE(load,\n\tAC_HELP_STRING([--enable-load],\n\t    [allow dynamic loading and \"load\" command (default: on)]),\n\t[tcl_ok=$enableval], [tcl_ok=yes])\n    AS_IF([test \"$tcl_ok\" = no], [DL_OBJS=\"\"])\n\n    AS_IF([test \"x$DL_OBJS\" != x], [BUILD_DLTEST=\"\\$(DLTEST_TARGETS)\"], [\n\tAC_MSG_WARN([Can't figure out how to do dynamic loading or shared libraries on this system.])\n\tSHLIB_CFLAGS=\"\"\n\tSHLIB_LD=\"\"\n\tSHLIB_SUFFIX=\"\"\n\tDL_OBJS=\"tclLoadNone.o\"\n\tDL_LIBS=\"\"\n\tLDFLAGS=\"$LDFLAGS_ORIG\"\n\tCC_SEARCH_FLAGS=\"\"\n\tLD_SEARCH_FLAGS=\"\"\n\tBUILD_DLTEST=\"\"\n    ])\n    LDFLAGS=\"$LDFLAGS $LDFLAGS_ARCH\"\n\n    # If we're running gcc, then change the C flags for compiling shared\n    # libraries to the right flags for gcc, instead of those for the\n    # standard manufacturer compiler.\n\n    AS_IF([test \"$DL_OBJS\" != \"tclLoadNone.o\" -a \"$GCC\" = yes], [\n\tcase $system in\n\t    AIX-*) ;;\n\t    BSD/OS*) ;;\n\t    CYGWIN_*|MINGW32_*) ;;\n\t    IRIX*) ;;\n\t    NetBSD-*|FreeBSD-*|OpenBSD-*) ;;\n\t    Darwin-*) ;;\n\t    SCO_SV-3.2*) ;;\n\t    *) SHLIB_CFLAGS=\"-fPIC\" ;;\n\tesac])\n\n    AS_IF([test \"$tcl_cv_cc_visibility_hidden\" != yes], [\n\tAC_DEFINE(MODULE_SCOPE, [extern],\n\t    [No Compiler support for module scope symbols])\n    ])\n\n    AS_IF([test \"$SHARED_LIB_SUFFIX\" = \"\"], [\n\tSHARED_LIB_SUFFIX='${VERSION}${SHLIB_SUFFIX}'])\n    AS_IF([test \"$UNSHARED_LIB_SUFFIX\" = \"\"], [\n\tUNSHARED_LIB_SUFFIX='${VERSION}.a'])\n    DLL_INSTALL_DIR=\"\\$(LIB_INSTALL_DIR)\"\n\n    AS_IF([test \"${SHARED_BUILD}\" = 1 -a \"${SHLIB_SUFFIX}\" != \"\"], [\n        LIB_SUFFIX=${SHARED_LIB_SUFFIX}\n        MAKE_LIB='${SHLIB_LD} -o [$]@ ${OBJS} ${SHLIB_LD_LIBS} ${TCL_SHLIB_LD_EXTRAS} ${TK_SHLIB_LD_EXTRAS} ${LD_SEARCH_FLAGS}'\n        AS_IF([test \"${SHLIB_SUFFIX}\" = \".dll\"], [\n            INSTALL_LIB='$(INSTALL_LIBRARY) $(LIB_FILE) \"$(BIN_INSTALL_DIR)/$(LIB_FILE)\";if test -f $(LIB_FILE).a; then $(INSTALL_DATA) $(LIB_FILE).a \"$(LIB_INSTALL_DIR)\"; fi;'\n            DLL_INSTALL_DIR=\"\\$(BIN_INSTALL_DIR)\"\n        ], [\n            INSTALL_LIB='$(INSTALL_LIBRARY) $(LIB_FILE) \"$(LIB_INSTALL_DIR)/$(LIB_FILE)\"'\n        ])\n    ], [\n        LIB_SUFFIX=${UNSHARED_LIB_SUFFIX}\n\n        AS_IF([test \"$RANLIB\" = \"\"], [\n            MAKE_LIB='$(STLIB_LD) [$]@ ${OBJS}'\n        ], [\n            MAKE_LIB='${STLIB_LD} [$]@ ${OBJS} ; ${RANLIB} [$]@'\n        ])\n        INSTALL_LIB='$(INSTALL_LIBRARY) $(LIB_FILE) \"$(LIB_INSTALL_DIR)/$(LIB_FILE)\"'\n    ])\n\n    # Stub lib does not depend on shared/static configuration\n    AS_IF([test \"$RANLIB\" = \"\"], [\n        MAKE_STUB_LIB='${STLIB_LD} [$]@ ${STUB_LIB_OBJS}'\n    ], [\n        MAKE_STUB_LIB='${STLIB_LD} [$]@ ${STUB_LIB_OBJS} ; ${RANLIB} [$]@'\n    ])\n    INSTALL_STUB_LIB='$(INSTALL_LIBRARY) $(STUB_LIB_FILE) \"$(LIB_INSTALL_DIR)/$(STUB_LIB_FILE)\"'\n\n    # Define TCL_LIBS now that we know what DL_LIBS is.\n    # The trick here is that we don't want to change the value of TCL_LIBS if\n    # it is already set when tclConfig.sh had been loaded by Tk.\n    AS_IF([test \"x${TCL_LIBS}\" = x], [\n        TCL_LIBS=\"${DL_LIBS} ${LIBS} ${MATH_LIBS}\"])\n    AC_SUBST(TCL_LIBS)\n\n\t# See if the compiler supports casting to a union type.\n\t# This is used to stop gcc from printing a compiler\n\t# warning when initializing a union member.\n\n\tAC_CACHE_CHECK(for cast to union support,\n\t    tcl_cv_cast_to_union,\n\t    AC_TRY_COMPILE([],\n\t    [\n\t\t  union foo { int i; double d; };\n\t\t  union foo f = (union foo) (int) 0;\n\t    ],\n\t    tcl_cv_cast_to_union=yes,\n\t    tcl_cv_cast_to_union=no)\n\t)\n\tif test \"$tcl_cv_cast_to_union\" = \"yes\"; then\n\t    AC_DEFINE(HAVE_CAST_TO_UNION, 1,\n\t\t    [Defined when compiler supports casting to union type.])\n\tfi\n\n    # FIXME: This subst was left in only because the TCL_DL_LIBS\n    # entry in tclConfig.sh uses it. It is not clear why someone\n    # would use TCL_DL_LIBS instead of TCL_LIBS.\n    AC_SUBST(DL_LIBS)\n\n    AC_SUBST(DL_OBJS)\n    AC_SUBST(PLAT_OBJS)\n    AC_SUBST(PLAT_SRCS)\n    AC_SUBST(LDAIX_SRC)\n    AC_SUBST(CFLAGS)\n    AC_SUBST(CFLAGS_DEBUG)\n    AC_SUBST(CFLAGS_OPTIMIZE)\n    AC_SUBST(CFLAGS_WARNING)\n\n    AC_SUBST(LDFLAGS)\n    AC_SUBST(LDFLAGS_DEBUG)\n    AC_SUBST(LDFLAGS_OPTIMIZE)\n    AC_SUBST(CC_SEARCH_FLAGS)\n    AC_SUBST(LD_SEARCH_FLAGS)\n\n    AC_SUBST(STLIB_LD)\n    AC_SUBST(SHLIB_LD)\n    AC_SUBST(TCL_SHLIB_LD_EXTRAS)\n    AC_SUBST(TK_SHLIB_LD_EXTRAS)\n    AC_SUBST(SHLIB_LD_LIBS)\n    AC_SUBST(SHLIB_CFLAGS)\n    AC_SUBST(SHLIB_SUFFIX)\n    AC_DEFINE_UNQUOTED(TCL_SHLIB_EXT,\"${SHLIB_SUFFIX}\",\n\t[What is the default extension for shared libraries?])\n\n    AC_SUBST(MAKE_LIB)\n    AC_SUBST(MAKE_STUB_LIB)\n    AC_SUBST(INSTALL_LIB)\n    AC_SUBST(DLL_INSTALL_DIR)\n    AC_SUBST(INSTALL_STUB_LIB)\n    AC_SUBST(RANLIB)\n])\n\n#--------------------------------------------------------------------\n# SC_MISSING_POSIX_HEADERS\n#\n#\tSupply substitutes for missing POSIX header files.  Special\n#\tnotes:\n#\t    - stdlib.h doesn't define strtol, strtoul, or\n#\t      strtod insome versions of SunOS\n#\t    - some versions of string.h don't declare procedures such\n#\t      as strstr\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\n#\tDefines some of the following vars:\n#\t\tNO_DIRENT_H\n#\t\tNO_VALUES_H\n#\t\tNO_STDLIB_H\n#\t\tNO_STRING_H\n#\t\tNO_SYS_WAIT_H\n#\t\tNO_DLFCN_H\n#\t\tHAVE_SYS_PARAM_H\n#\n#\t\tHAVE_STRING_H ?\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN([SC_MISSING_POSIX_HEADERS], [\n    AC_CACHE_CHECK([dirent.h], tcl_cv_dirent_h, [\n    AC_TRY_LINK([#include <sys/types.h>\n#include <dirent.h>], [\n#ifndef _POSIX_SOURCE\n#   ifdef __Lynx__\n\t/*\n\t * Generate compilation error to make the test fail:  Lynx headers\n\t * are only valid if really in the POSIX environment.\n\t */\n\n\tmissing_procedure();\n#   endif\n#endif\nDIR *d;\nstruct dirent *entryPtr;\nchar *p;\nd = opendir(\"foobar\");\nentryPtr = readdir(d);\np = entryPtr->d_name;\nclosedir(d);\n], tcl_cv_dirent_h=yes, tcl_cv_dirent_h=no)])\n\n    if test $tcl_cv_dirent_h = no; then\n\tAC_DEFINE(NO_DIRENT_H, 1, [Do we have <dirent.h>?])\n    fi\n\n    AC_CHECK_HEADER(float.h, , [AC_DEFINE(NO_FLOAT_H, 1, [Do we have <float.h>?])])\n    AC_CHECK_HEADER(values.h, , [AC_DEFINE(NO_VALUES_H, 1, [Do we have <values.h>?])])\n    AC_CHECK_HEADER(stdlib.h, tcl_ok=1, tcl_ok=0)\n    AC_EGREP_HEADER(strtol, stdlib.h, , tcl_ok=0)\n    AC_EGREP_HEADER(strtoul, stdlib.h, , tcl_ok=0)\n    AC_EGREP_HEADER(strtod, stdlib.h, , tcl_ok=0)\n    if test $tcl_ok = 0; then\n\tAC_DEFINE(NO_STDLIB_H, 1, [Do we have <stdlib.h>?])\n    fi\n    AC_CHECK_HEADER(string.h, tcl_ok=1, tcl_ok=0)\n    AC_EGREP_HEADER(strstr, string.h, , tcl_ok=0)\n    AC_EGREP_HEADER(strerror, string.h, , tcl_ok=0)\n\n    # See also memmove check below for a place where NO_STRING_H can be\n    # set and why.\n\n    if test $tcl_ok = 0; then\n\tAC_DEFINE(NO_STRING_H, 1, [Do we have <string.h>?])\n    fi\n\n    AC_CHECK_HEADER(sys/wait.h, , [AC_DEFINE(NO_SYS_WAIT_H, 1, [Do we have <sys/wait.h>?])])\n    AC_CHECK_HEADER(dlfcn.h, , [AC_DEFINE(NO_DLFCN_H, 1, [Do we have <dlfcn.h>?])])\n\n    # OS/390 lacks sys/param.h (and doesn't need it, by chance).\n    AC_HAVE_HEADERS(sys/param.h)\n])\n\n#--------------------------------------------------------------------\n# SC_PATH_X\n#\n#\tLocate the X11 header files and the X11 library archive.  Try\n#\tthe ac_path_x macro first, but if it doesn't find the X stuff\n#\t(e.g. because there's no xmkmf program) then check through\n#\ta list of possible directories.  Under some conditions the\n#\tautoconf macro will return an include directory that contains\n#\tno include files, so double-check its result just to be safe.\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\n#\tSets the following vars:\n#\t\tXINCLUDES\n#\t\tXLIBSW\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN([SC_PATH_X], [\n    AC_PATH_X\n    not_really_there=\"\"\n    if test \"$no_x\" = \"\"; then\n\tif test \"$x_includes\" = \"\"; then\n\t    AC_TRY_CPP([#include <X11/Xlib.h>], , not_really_there=\"yes\")\n\telse\n\t    if test ! -r $x_includes/X11/Xlib.h; then\n\t\tnot_really_there=\"yes\"\n\t    fi\n\tfi\n    fi\n    if test \"$no_x\" = \"yes\" -o \"$not_really_there\" = \"yes\"; then\n\tAC_MSG_CHECKING([for X11 header files])\n\tfound_xincludes=\"no\"\n\tAC_TRY_CPP([#include <X11/Xlib.h>], found_xincludes=\"yes\", found_xincludes=\"no\")\n\tif test \"$found_xincludes\" = \"no\"; then\n\t    dirs=\"/usr/unsupported/include /usr/local/include /usr/X386/include /usr/X11R6/include /usr/X11R5/include /usr/include/X11R5 /usr/include/X11R4 /usr/openwin/include /usr/X11/include /usr/sww/include\"\n\t    for i in $dirs ; do\n\t\tif test -r $i/X11/Xlib.h; then\n\t\t    AC_MSG_RESULT([$i])\n\t\t    XINCLUDES=\" -I$i\"\n\t\t    found_xincludes=\"yes\"\n\t\t    break\n\t\tfi\n\t    done\n\tfi\n    else\n\tif test \"$x_includes\" != \"\"; then\n\t    XINCLUDES=\"-I$x_includes\"\n\t    found_xincludes=\"yes\"\n\tfi\n    fi\n    if test \"$found_xincludes\" = \"no\"; then\n\tAC_MSG_RESULT([couldn't find any!])\n    fi\n\n    if test \"$no_x\" = yes; then\n\tAC_MSG_CHECKING([for X11 libraries])\n\tXLIBSW=nope\n\tdirs=\"/usr/unsupported/lib /usr/local/lib /usr/X386/lib /usr/X11R6/lib /usr/X11R5/lib /usr/lib/X11R5 /usr/lib/X11R4 /usr/openwin/lib /usr/X11/lib /usr/sww/X11/lib\"\n\tfor i in $dirs ; do\n\t    if test -r $i/libX11.a -o -r $i/libX11.so -o -r $i/libX11.sl -o -r $i/libX11.dylib; then\n\t\tAC_MSG_RESULT([$i])\n\t\tXLIBSW=\"-L$i -lX11\"\n\t\tx_libraries=\"$i\"\n\t\tbreak\n\t    fi\n\tdone\n    else\n\tif test \"$x_libraries\" = \"\"; then\n\t    XLIBSW=-lX11\n\telse\n\t    XLIBSW=\"-L$x_libraries -lX11\"\n\tfi\n    fi\n    if test \"$XLIBSW\" = nope ; then\n\tAC_CHECK_LIB(Xwindow, XCreateWindow, XLIBSW=-lXwindow)\n    fi\n    if test \"$XLIBSW\" = nope ; then\n\tAC_MSG_RESULT([could not find any!  Using -lX11.])\n\tXLIBSW=-lX11\n    fi\n])\n\n#--------------------------------------------------------------------\n# SC_BLOCKING_STYLE\n#\n#\tThe statements below check for systems where POSIX-style\n#\tnon-blocking I/O (O_NONBLOCK) doesn't work or is unimplemented.\n#\tOn these systems (mostly older ones), use the old BSD-style\n#\tFIONBIO approach instead.\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\n#\tDefines some of the following vars:\n#\t\tHAVE_SYS_IOCTL_H\n#\t\tHAVE_SYS_FILIO_H\n#\t\tUSE_FIONBIO\n#\t\tO_NONBLOCK\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN([SC_BLOCKING_STYLE], [\n    AC_CHECK_HEADERS(sys/ioctl.h)\n    AC_CHECK_HEADERS(sys/filio.h)\n    SC_CONFIG_SYSTEM\n    AC_MSG_CHECKING([FIONBIO vs. O_NONBLOCK for nonblocking I/O])\n    case $system in\n\tOSF*)\n\t    AC_DEFINE(USE_FIONBIO, 1, [Should we use FIONBIO?])\n\t    AC_MSG_RESULT([FIONBIO])\n\t    ;;\n\tSunOS-4*)\n\t    AC_DEFINE(USE_FIONBIO, 1, [Should we use FIONBIO?])\n\t    AC_MSG_RESULT([FIONBIO])\n\t    ;;\n\t*)\n\t    AC_MSG_RESULT([O_NONBLOCK])\n\t    ;;\n    esac\n])\n\n#--------------------------------------------------------------------\n# SC_TIME_HANLDER\n#\n#\tChecks how the system deals with time.h, what time structures\n#\tare used on the system, and what fields the structures have.\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\n#\tDefines some of the following vars:\n#\t\tUSE_DELTA_FOR_TZ\n#\t\tHAVE_TM_GMTOFF\n#\t\tHAVE_TM_TZADJ\n#\t\tHAVE_TIMEZONE_VAR\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN([SC_TIME_HANDLER], [\n    AC_CHECK_HEADERS(sys/time.h)\n    AC_HEADER_TIME\n\n    AC_CHECK_FUNCS(gmtime_r localtime_r mktime)\n\n    AC_CACHE_CHECK([tm_tzadj in struct tm], tcl_cv_member_tm_tzadj, [\n\tAC_TRY_COMPILE([#include <time.h>], [struct tm tm; tm.tm_tzadj;],\n\t    tcl_cv_member_tm_tzadj=yes, tcl_cv_member_tm_tzadj=no)])\n    if test $tcl_cv_member_tm_tzadj = yes ; then\n\tAC_DEFINE(HAVE_TM_TZADJ, 1, [Should we use the tm_tzadj field of struct tm?])\n    fi\n\n    AC_CACHE_CHECK([tm_gmtoff in struct tm], tcl_cv_member_tm_gmtoff, [\n\tAC_TRY_COMPILE([#include <time.h>], [struct tm tm; tm.tm_gmtoff;],\n\t    tcl_cv_member_tm_gmtoff=yes, tcl_cv_member_tm_gmtoff=no)])\n    if test $tcl_cv_member_tm_gmtoff = yes ; then\n\tAC_DEFINE(HAVE_TM_GMTOFF, 1, [Should we use the tm_gmtoff field of struct tm?])\n    fi\n\n    #\n    # Its important to include time.h in this check, as some systems\n    # (like convex) have timezone functions, etc.\n    #\n    AC_CACHE_CHECK([long timezone variable], tcl_cv_timezone_long, [\n\tAC_TRY_COMPILE([#include <time.h>],\n\t    [extern long timezone;\n\t    timezone += 1;\n\t    exit (0);],\n\t    tcl_cv_timezone_long=yes, tcl_cv_timezone_long=no)])\n    if test $tcl_cv_timezone_long = yes ; then\n\tAC_DEFINE(HAVE_TIMEZONE_VAR, 1, [Should we use the global timezone variable?])\n    else\n\t#\n\t# On some systems (eg IRIX 6.2), timezone is a time_t and not a long.\n\t#\n\tAC_CACHE_CHECK([time_t timezone variable], tcl_cv_timezone_time, [\n\t    AC_TRY_COMPILE([#include <time.h>],\n\t\t[extern time_t timezone;\n\t\ttimezone += 1;\n\t\texit (0);],\n\t\ttcl_cv_timezone_time=yes, tcl_cv_timezone_time=no)])\n\tif test $tcl_cv_timezone_time = yes ; then\n\t    AC_DEFINE(HAVE_TIMEZONE_VAR, 1, [Should we use the global timezone variable?])\n\tfi\n    fi\n])\n\n#--------------------------------------------------------------------\n# SC_BUGGY_STRTOD\n#\n#\tUnder Solaris 2.4, strtod returns the wrong value for the\n#\tterminating character under some conditions.  Check for this\n#\tand if the problem exists use a substitute procedure\n#\t\"fixstrtod\" (provided by Tcl) that corrects the error.\n#\tAlso, on Compaq's Tru64 Unix 5.0,\n#\tstrtod(\" \") returns 0.0 instead of a failure to convert.\n#\n# Arguments:\n#\tnone\n#\n# Results:\n#\n#\tMight defines some of the following vars:\n#\t\tstrtod (=fixstrtod)\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN([SC_BUGGY_STRTOD], [\n    AC_CHECK_FUNC(strtod, tcl_strtod=1, tcl_strtod=0)\n    if test \"$tcl_strtod\" = 1; then\n\tAC_CACHE_CHECK([for Solaris2.4/Tru64 strtod bugs], tcl_cv_strtod_buggy,[\n\t    AC_TRY_RUN([\n\t\textern double strtod();\n\t\tint main() {\n\t\t    char *infString=\"Inf\", *nanString=\"NaN\", *spaceString=\" \";\n\t\t    char *term;\n\t\t    double value;\n\t\t    value = strtod(infString, &term);\n\t\t    if ((term != infString) && (term[-1] == 0)) {\n\t\t\texit(1);\n\t\t    }\n\t\t    value = strtod(nanString, &term);\n\t\t    if ((term != nanString) && (term[-1] == 0)) {\n\t\t\texit(1);\n\t\t    }\n\t\t    value = strtod(spaceString, &term);\n\t\t    if (term == (spaceString+1)) {\n\t\t\texit(1);\n\t\t    }\n\t\t    exit(0);\n\t\t}], tcl_cv_strtod_buggy=ok, tcl_cv_strtod_buggy=buggy,\n\t\t    tcl_cv_strtod_buggy=buggy)])\n\tif test \"$tcl_cv_strtod_buggy\" = buggy; then\n\t    AC_LIBOBJ([fixstrtod])\n\t    USE_COMPAT=1\n\t    AC_DEFINE(strtod, fixstrtod, [Do we want to use the strtod() in compat?])\n\tfi\n    fi\n])\n\n#--------------------------------------------------------------------\n# SC_TCL_LINK_LIBS\n#\n#\tSearch for the libraries needed to link the Tcl shell.\n#\tThings like the math library (-lm) and socket stuff (-lsocket vs.\n#\t-lnsl) are dealt with here.\n#\n# Arguments:\n#\tNone.\n#\n# Results:\n#\n#\tMight append to the following vars:\n#\t\tLIBS\n#\t\tMATH_LIBS\n#\n#\tMight define the following vars:\n#\t\tHAVE_NET_ERRNO_H\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN([SC_TCL_LINK_LIBS], [\n    #--------------------------------------------------------------------\n    # On a few very rare systems, all of the libm.a stuff is\n    # already in libc.a.  Set compiler flags accordingly.\n    # Also, Linux requires the \"ieee\" library for math to work\n    # right (and it must appear before \"-lm\").\n    #--------------------------------------------------------------------\n\n    AC_CHECK_FUNC(sin, MATH_LIBS=\"\", MATH_LIBS=\"-lm\")\n    AC_CHECK_LIB(ieee, main, [MATH_LIBS=\"-lieee $MATH_LIBS\"])\n\n    #--------------------------------------------------------------------\n    # Interactive UNIX requires -linet instead of -lsocket, plus it\n    # needs net/errno.h to define the socket-related error codes.\n    #--------------------------------------------------------------------\n\n    AC_CHECK_LIB(inet, main, [LIBS=\"$LIBS -linet\"])\n    AC_CHECK_HEADER(net/errno.h, [\n\tAC_DEFINE(HAVE_NET_ERRNO_H, 1, [Do we have <net/errno.h>?])])\n\n    #--------------------------------------------------------------------\n    #\tCheck for the existence of the -lsocket and -lnsl libraries.\n    #\tThe order here is important, so that they end up in the right\n    #\torder in the command line generated by make.  Here are some\n    #\tspecial considerations:\n    #\t1. Use \"connect\" and \"accept\" to check for -lsocket, and\n    #\t   \"gethostbyname\" to check for -lnsl.\n    #\t2. Use each function name only once:  can't redo a check because\n    #\t   autoconf caches the results of the last check and won't redo it.\n    #\t3. Use -lnsl and -lsocket only if they supply procedures that\n    #\t   aren't already present in the normal libraries.  This is because\n    #\t   IRIX 5.2 has libraries, but they aren't needed and they're\n    #\t   bogus:  they goof up name resolution if used.\n    #\t4. On some SVR4 systems, can't use -lsocket without -lnsl too.\n    #\t   To get around this problem, check for both libraries together\n    #\t   if -lsocket doesn't work by itself.\n    #--------------------------------------------------------------------\n\n    tcl_checkBoth=0\n    AC_CHECK_FUNC(connect, tcl_checkSocket=0, tcl_checkSocket=1)\n    if test \"$tcl_checkSocket\" = 1; then\n\tAC_CHECK_FUNC(setsockopt, , [AC_CHECK_LIB(socket, setsockopt,\n\t    LIBS=\"$LIBS -lsocket\", tcl_checkBoth=1)])\n    fi\n    if test \"$tcl_checkBoth\" = 1; then\n\ttk_oldLibs=$LIBS\n\tLIBS=\"$LIBS -lsocket -lnsl\"\n\tAC_CHECK_FUNC(accept, tcl_checkNsl=0, [LIBS=$tk_oldLibs])\n    fi\n    AC_CHECK_FUNC(gethostbyname, , [AC_CHECK_LIB(nsl, gethostbyname,\n\t    [LIBS=\"$LIBS -lnsl\"])])\n])\n\n#--------------------------------------------------------------------\n# SC_TCL_EARLY_FLAGS\n#\n#\tCheck for what flags are needed to be passed so the correct OS\n#\tfeatures are available.\n#\n# Arguments:\n#\tNone\n#\n# Results:\n#\n#\tMight define the following vars:\n#\t\t_ISOC99_SOURCE\n#\t\t_LARGEFILE64_SOURCE\n#\t\t_LARGEFILE_SOURCE64\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN([SC_TCL_EARLY_FLAG],[\n    AC_CACHE_VAL([tcl_cv_flag_]translit($1,[A-Z],[a-z]),\n\tAC_TRY_COMPILE([$2], $3, [tcl_cv_flag_]translit($1,[A-Z],[a-z])=no,\n\t    AC_TRY_COMPILE([[#define ]$1[ 1\n]$2], $3,\n\t\t[tcl_cv_flag_]translit($1,[A-Z],[a-z])=yes,\n\t\t[tcl_cv_flag_]translit($1,[A-Z],[a-z])=no)))\n    if test [\"x${tcl_cv_flag_]translit($1,[A-Z],[a-z])[}\" = \"xyes\"] ; then\n\tAC_DEFINE($1, 1, [Add the ]$1[ flag when building])\n\ttcl_flags=\"$tcl_flags $1\"\n    fi\n])\n\nAC_DEFUN([SC_TCL_EARLY_FLAGS],[\n    AC_MSG_CHECKING([for required early compiler flags])\n    tcl_flags=\"\"\n    SC_TCL_EARLY_FLAG(_ISOC99_SOURCE,[#include <stdlib.h>],\n\t[char *p = (char *)strtoll; char *q = (char *)strtoull;])\n    SC_TCL_EARLY_FLAG(_LARGEFILE64_SOURCE,[#include <sys/stat.h>],\n\t[struct stat64 buf; int i = stat64(\"/\", &buf);])\n    SC_TCL_EARLY_FLAG(_LARGEFILE_SOURCE64,[#include <sys/stat.h>],\n\t[char *p = (char *)open64;])\n    if test \"x${tcl_flags}\" = \"x\" ; then\n\tAC_MSG_RESULT([none])\n    else\n\tAC_MSG_RESULT([${tcl_flags}])\n    fi\n])\n\n#--------------------------------------------------------------------\n# SC_TCL_64BIT_FLAGS\n#\n#\tCheck for what is defined in the way of 64-bit features.\n#\n# Arguments:\n#\tNone\n#\n# Results:\n#\n#\tMight define the following vars:\n#\t\tTCL_WIDE_INT_IS_LONG\n#\t\tTCL_WIDE_INT_TYPE\n#\t\tHAVE_STRUCT_DIRENT64\n#\t\tHAVE_STRUCT_STAT64\n#\t\tHAVE_TYPE_OFF64_T\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN([SC_TCL_64BIT_FLAGS], [\n    AC_MSG_CHECKING([for 64-bit integer type])\n    AC_CACHE_VAL(tcl_cv_type_64bit,[\n\ttcl_cv_type_64bit=none\n\t# See if the compiler knows natively about __int64\n\tAC_TRY_COMPILE(,[__int64 value = (__int64) 0;],\n\t    tcl_type_64bit=__int64, tcl_type_64bit=\"long long\")\n\t# See if we should use long anyway  Note that we substitute in the\n\t# type that is our current guess for a 64-bit type inside this check\n\t# program, so it should be modified only carefully...\n        AC_TRY_COMPILE(,[switch (0) {\n            case 1: case (sizeof(]${tcl_type_64bit}[)==sizeof(long)): ;\n        }],tcl_cv_type_64bit=${tcl_type_64bit})])\n    if test \"${tcl_cv_type_64bit}\" = none ; then\n\tAC_DEFINE(TCL_WIDE_INT_IS_LONG, 1, [Are wide integers to be implemented with C 'long's?])\n\tAC_MSG_RESULT([using long])\n    else\n\tAC_DEFINE_UNQUOTED(TCL_WIDE_INT_TYPE,${tcl_cv_type_64bit},\n\t    [What type should be used to define wide integers?])\n\tAC_MSG_RESULT([${tcl_cv_type_64bit}])\n\n\t# Now check for auxiliary declarations\n\tAC_CACHE_CHECK([for struct dirent64], tcl_cv_struct_dirent64,[\n\t    AC_TRY_COMPILE([#include <sys/types.h>\n#include <dirent.h>],[struct dirent64 p;],\n\t\ttcl_cv_struct_dirent64=yes,tcl_cv_struct_dirent64=no)])\n\tif test \"x${tcl_cv_struct_dirent64}\" = \"xyes\" ; then\n\t    AC_DEFINE(HAVE_STRUCT_DIRENT64, 1, [Is 'struct dirent64' in <sys/types.h>?])\n\tfi\n\n\tAC_CACHE_CHECK([for struct stat64], tcl_cv_struct_stat64,[\n\t    AC_TRY_COMPILE([#include <sys/stat.h>],[struct stat64 p;\n],\n\t\ttcl_cv_struct_stat64=yes,tcl_cv_struct_stat64=no)])\n\tif test \"x${tcl_cv_struct_stat64}\" = \"xyes\" ; then\n\t    AC_DEFINE(HAVE_STRUCT_STAT64, 1, [Is 'struct stat64' in <sys/stat.h>?])\n\tfi\n\n\tAC_CHECK_FUNCS(open64 lseek64)\n\tAC_MSG_CHECKING([for off64_t])\n\tAC_CACHE_VAL(tcl_cv_type_off64_t,[\n\t    AC_TRY_COMPILE([#include <sys/types.h>],[off64_t offset;\n],\n\t\ttcl_cv_type_off64_t=yes,tcl_cv_type_off64_t=no)])\n\tdnl Define HAVE_TYPE_OFF64_T only when the off64_t type and the\n\tdnl functions lseek64 and open64 are defined.\n\tif test \"x${tcl_cv_type_off64_t}\" = \"xyes\" && \\\n\t        test \"x${ac_cv_func_lseek64}\" = \"xyes\" && \\\n\t        test \"x${ac_cv_func_open64}\" = \"xyes\" ; then\n\t    AC_DEFINE(HAVE_TYPE_OFF64_T, 1, [Is off64_t in <sys/types.h>?])\n\t    AC_MSG_RESULT([yes])\n\telse\n\t    AC_MSG_RESULT([no])\n\tfi\n    fi\n])\n\n#--------------------------------------------------------------------\n# SC_TCL_CFG_ENCODING\tTIP #59\n#\n#\tDeclare the encoding to use for embedded configuration information.\n#\n# Arguments:\n#\tNone.\n#\n# Results:\n#\tMight append to the following vars:\n#\t\tDEFS\t(implicit)\n#\n#\tWill define the following vars:\n#\t\tTCL_CFGVAL_ENCODING\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN([SC_TCL_CFG_ENCODING], [\n    AC_ARG_WITH(encoding,\n\tAC_HELP_STRING([--with-encoding],\n\t    [encoding for configuration values (default: iso8859-1)]),\n\twith_tcencoding=${withval})\n\n    if test x\"${with_tcencoding}\" != x ; then\n\tAC_DEFINE_UNQUOTED(TCL_CFGVAL_ENCODING,\"${with_tcencoding}\",\n\t    [What encoding should be used for embedded configuration info?])\n    else\n\tAC_DEFINE(TCL_CFGVAL_ENCODING,\"iso8859-1\",\n\t    [What encoding should be used for embedded configuration info?])\n    fi\n])\n\n#--------------------------------------------------------------------\n# SC_TCL_CHECK_BROKEN_FUNC\n#\n#\tCheck for broken function.\n#\n# Arguments:\n#\tfuncName - function to test for\n#\tadvancedTest - the advanced test to run if the function is present\n#\n# Results:\n#\tMight cause compatability versions of the function to be used.\n#\tMight affect the following vars:\n#\t\tUSE_COMPAT\t(implicit)\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN([SC_TCL_CHECK_BROKEN_FUNC],[\n    AC_CHECK_FUNC($1, tcl_ok=1, tcl_ok=0)\n    if test [\"$tcl_ok\"] = 1; then\n\tAC_CACHE_CHECK([proper ]$1[ implementation], [tcl_cv_]$1[_unbroken],\n\t    AC_TRY_RUN([[int main() {]$2[}]],[tcl_cv_]$1[_unbroken]=ok,\n\t\t[tcl_cv_]$1[_unbroken]=broken,[tcl_cv_]$1[_unbroken]=unknown))\n\tif test [\"$tcl_cv_]$1[_unbroken\"] = \"ok\"; then\n\t    tcl_ok=1\n\telse\n\t    tcl_ok=0\n\tfi\n    fi\n    if test [\"$tcl_ok\"] = 0; then\n\tAC_LIBOBJ($1)\n\tUSE_COMPAT=1\n    fi\n])\n\n#--------------------------------------------------------------------\n# SC_TCL_GETHOSTBYADDR_R\n#\n#\tCheck if we have MT-safe variant of gethostbyaddr().\n#\n# Arguments:\n#\tNone\n#\n# Results:\n#\n#\tMight define the following vars:\n#\t\tHAVE_GETHOSTBYADDR_R\n#\t\tHAVE_GETHOSTBYADDR_R_7\n#\t\tHAVE_GETHOSTBYADDR_R_8\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN([SC_TCL_GETHOSTBYADDR_R], [AC_CHECK_FUNC(gethostbyaddr_r, [\n    AC_CACHE_CHECK([for gethostbyaddr_r with 7 args], tcl_cv_api_gethostbyaddr_r_7, [\n    AC_TRY_COMPILE([\n\t#include <netdb.h>\n    ], [\n\tchar *addr;\n\tint length;\n\tint type;\n\tstruct hostent *result;\n\tchar buffer[2048];\n\tint buflen = 2048;\n\tint h_errnop;\n\n\t(void) gethostbyaddr_r(addr, length, type, result, buffer, buflen,\n\t\t\t       &h_errnop);\n    ], tcl_cv_api_gethostbyaddr_r_7=yes, tcl_cv_api_gethostbyaddr_r_7=no)])\n    tcl_ok=$tcl_cv_api_gethostbyaddr_r_7\n    if test \"$tcl_ok\" = yes; then\n\tAC_DEFINE(HAVE_GETHOSTBYADDR_R_7, 1,\n\t    [Define to 1 if gethostbyaddr_r takes 7 args.])\n    else\n\tAC_CACHE_CHECK([for gethostbyaddr_r with 8 args], tcl_cv_api_gethostbyaddr_r_8, [\n\tAC_TRY_COMPILE([\n\t    #include <netdb.h>\n\t], [\n\t    char *addr;\n\t    int length;\n\t    int type;\n\t    struct hostent *result, *resultp;\n\t    char buffer[2048];\n\t    int buflen = 2048;\n\t    int h_errnop;\n\n\t    (void) gethostbyaddr_r(addr, length, type, result, buffer, buflen,\n\t\t\t\t   &resultp, &h_errnop);\n\t], tcl_cv_api_gethostbyaddr_r_8=yes, tcl_cv_api_gethostbyaddr_r_8=no)])\n\ttcl_ok=$tcl_cv_api_gethostbyaddr_r_8\n\tif test \"$tcl_ok\" = yes; then\n\t    AC_DEFINE(HAVE_GETHOSTBYADDR_R_8, 1,\n\t\t[Define to 1 if gethostbyaddr_r takes 8 args.])\n\tfi\n    fi\n    if test \"$tcl_ok\" = yes; then\n\tAC_DEFINE(HAVE_GETHOSTBYADDR_R, 1,\n\t    [Define to 1 if gethostbyaddr_r is available.])\n    fi\n])])\n\n#--------------------------------------------------------------------\n# SC_TCL_GETHOSTBYNAME_R\n#\n#\tCheck to see what variant of gethostbyname_r() we have.\n#\tBased on David Arnold's example from the comp.programming.threads\n#\tFAQ Q213\n#\n# Arguments:\n#\tNone\n#\n# Results:\n#\n#\tMight define the following vars:\n#\t\tHAVE_GETHOSTBYADDR_R\n#\t\tHAVE_GETHOSTBYADDR_R_3\n#\t\tHAVE_GETHOSTBYADDR_R_5\n#\t\tHAVE_GETHOSTBYADDR_R_6\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN([SC_TCL_GETHOSTBYNAME_R], [AC_CHECK_FUNC(gethostbyname_r, [\n    AC_CACHE_CHECK([for gethostbyname_r with 6 args], tcl_cv_api_gethostbyname_r_6, [\n    AC_TRY_COMPILE([\n\t#include <netdb.h>\n    ], [\n\tchar *name;\n\tstruct hostent *he, *res;\n\tchar buffer[2048];\n\tint buflen = 2048;\n\tint h_errnop;\n\n\t(void) gethostbyname_r(name, he, buffer, buflen, &res, &h_errnop);\n    ], tcl_cv_api_gethostbyname_r_6=yes, tcl_cv_api_gethostbyname_r_6=no)])\n    tcl_ok=$tcl_cv_api_gethostbyname_r_6\n    if test \"$tcl_ok\" = yes; then\n\tAC_DEFINE(HAVE_GETHOSTBYNAME_R_6, 1,\n\t    [Define to 1 if gethostbyname_r takes 6 args.])\n    else\n\tAC_CACHE_CHECK([for gethostbyname_r with 5 args], tcl_cv_api_gethostbyname_r_5, [\n\tAC_TRY_COMPILE([\n\t    #include <netdb.h>\n\t], [\n\t    char *name;\n\t    struct hostent *he;\n\t    char buffer[2048];\n\t    int buflen = 2048;\n\t    int h_errnop;\n\n\t    (void) gethostbyname_r(name, he, buffer, buflen, &h_errnop);\n\t], tcl_cv_api_gethostbyname_r_5=yes, tcl_cv_api_gethostbyname_r_5=no)])\n\ttcl_ok=$tcl_cv_api_gethostbyname_r_5\n\tif test \"$tcl_ok\" = yes; then\n\t    AC_DEFINE(HAVE_GETHOSTBYNAME_R_5, 1,\n\t\t[Define to 1 if gethostbyname_r takes 5 args.])\n\telse\n\t    AC_CACHE_CHECK([for gethostbyname_r with 3 args], tcl_cv_api_gethostbyname_r_3, [\n\t    AC_TRY_COMPILE([\n\t\t#include <netdb.h>\n\t    ], [\n\t\tchar *name;\n\t\tstruct hostent *he;\n\t\tstruct hostent_data data;\n\n\t\t(void) gethostbyname_r(name, he, &data);\n\t    ], tcl_cv_api_gethostbyname_r_3=yes, tcl_cv_api_gethostbyname_r_3=no)])\n\t    tcl_ok=$tcl_cv_api_gethostbyname_r_3\n\t    if test \"$tcl_ok\" = yes; then\n\t\tAC_DEFINE(HAVE_GETHOSTBYNAME_R_3, 1,\n\t\t    [Define to 1 if gethostbyname_r takes 3 args.])\n\t    fi\n\tfi\n    fi\n    if test \"$tcl_ok\" = yes; then\n\tAC_DEFINE(HAVE_GETHOSTBYNAME_R, 1,\n\t    [Define to 1 if gethostbyname_r is available.])\n    fi\n])])\n\n#--------------------------------------------------------------------\n# SC_TCL_GETPWUID_R\n#\n#\tCheck if we have MT-safe variant of getpwuid() and if yes,\n#\twhich one exactly.\n#\n# Arguments:\n#\tNone\n#\n# Results:\n#\n#\tMight define the following vars:\n#\t\tHAVE_GETPWUID_R\n#\t\tHAVE_GETPWUID_R_4\n#\t\tHAVE_GETPWUID_R_5\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN([SC_TCL_GETPWUID_R], [AC_CHECK_FUNC(getpwuid_r, [\n    AC_CACHE_CHECK([for getpwuid_r with 5 args], tcl_cv_api_getpwuid_r_5, [\n    AC_TRY_COMPILE([\n\t#include <sys/types.h>\n\t#include <pwd.h>\n    ], [\n\tuid_t uid;\n\tstruct passwd pw, *pwp;\n\tchar buf[512];\n\tint buflen = 512;\n\n\t(void) getpwuid_r(uid, &pw, buf, buflen, &pwp);\n    ], tcl_cv_api_getpwuid_r_5=yes, tcl_cv_api_getpwuid_r_5=no)])\n    tcl_ok=$tcl_cv_api_getpwuid_r_5\n    if test \"$tcl_ok\" = yes; then\n\tAC_DEFINE(HAVE_GETPWUID_R_5, 1,\n\t    [Define to 1 if getpwuid_r takes 5 args.])\n    else\n\tAC_CACHE_CHECK([for getpwuid_r with 4 args], tcl_cv_api_getpwuid_r_4, [\n\tAC_TRY_COMPILE([\n\t    #include <sys/types.h>\n\t    #include <pwd.h>\n\t], [\n\t    uid_t uid;\n\t    struct passwd pw;\n\t    char buf[512];\n\t    int buflen = 512;\n\n\t    (void)getpwnam_r(uid, &pw, buf, buflen);\n\t], tcl_cv_api_getpwuid_r_4=yes, tcl_cv_api_getpwuid_r_4=no)])\n\ttcl_ok=$tcl_cv_api_getpwuid_r_4\n\tif test \"$tcl_ok\" = yes; then\n\t    AC_DEFINE(HAVE_GETPWUID_R_4, 1,\n\t\t[Define to 1 if getpwuid_r takes 4 args.])\n\tfi\n    fi\n    if test \"$tcl_ok\" = yes; then\n\tAC_DEFINE(HAVE_GETPWUID_R, 1,\n\t    [Define to 1 if getpwuid_r is available.])\n    fi\n])])\n\n#--------------------------------------------------------------------\n# SC_TCL_GETPWNAM_R\n#\n#\tCheck if we have MT-safe variant of getpwnam() and if yes,\n#\twhich one exactly.\n#\n# Arguments:\n#\tNone\n#\n# Results:\n#\n#\tMight define the following vars:\n#\t\tHAVE_GETPWNAM_R\n#\t\tHAVE_GETPWNAM_R_4\n#\t\tHAVE_GETPWNAM_R_5\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN([SC_TCL_GETPWNAM_R], [AC_CHECK_FUNC(getpwnam_r, [\n    AC_CACHE_CHECK([for getpwnam_r with 5 args], tcl_cv_api_getpwnam_r_5, [\n    AC_TRY_COMPILE([\n\t#include <sys/types.h>\n\t#include <pwd.h>\n    ], [\n\tchar *name;\n\tstruct passwd pw, *pwp;\n\tchar buf[512];\n\tint buflen = 512;\n\n\t(void) getpwnam_r(name, &pw, buf, buflen, &pwp);\n    ], tcl_cv_api_getpwnam_r_5=yes, tcl_cv_api_getpwnam_r_5=no)])\n    tcl_ok=$tcl_cv_api_getpwnam_r_5\n    if test \"$tcl_ok\" = yes; then\n\tAC_DEFINE(HAVE_GETPWNAM_R_5, 1,\n\t    [Define to 1 if getpwnam_r takes 5 args.])\n    else\n\tAC_CACHE_CHECK([for getpwnam_r with 4 args], tcl_cv_api_getpwnam_r_4, [\n\tAC_TRY_COMPILE([\n\t    #include <sys/types.h>\n\t    #include <pwd.h>\n\t], [\n\t    char *name;\n\t    struct passwd pw;\n\t    char buf[512];\n\t    int buflen = 512;\n\n\t    (void)getpwnam_r(name, &pw, buf, buflen);\n\t], tcl_cv_api_getpwnam_r_4=yes, tcl_cv_api_getpwnam_r_4=no)])\n\ttcl_ok=$tcl_cv_api_getpwnam_r_4\n\tif test \"$tcl_ok\" = yes; then\n\t    AC_DEFINE(HAVE_GETPWNAM_R_4, 1,\n\t\t[Define to 1 if getpwnam_r takes 4 args.])\n\tfi\n    fi\n    if test \"$tcl_ok\" = yes; then\n\tAC_DEFINE(HAVE_GETPWNAM_R, 1,\n\t    [Define to 1 if getpwnam_r is available.])\n    fi\n])])\n\n#--------------------------------------------------------------------\n# SC_TCL_GETGRGID_R\n#\n#\tCheck if we have MT-safe variant of getgrgid() and if yes,\n#\twhich one exactly.\n#\n# Arguments:\n#\tNone\n#\n# Results:\n#\n#\tMight define the following vars:\n#\t\tHAVE_GETGRGID_R\n#\t\tHAVE_GETGRGID_R_4\n#\t\tHAVE_GETGRGID_R_5\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN([SC_TCL_GETGRGID_R], [AC_CHECK_FUNC(getgrgid_r, [\n    AC_CACHE_CHECK([for getgrgid_r with 5 args], tcl_cv_api_getgrgid_r_5, [\n    AC_TRY_COMPILE([\n\t#include <sys/types.h>\n\t#include <grp.h>\n    ], [\n\tgid_t gid;\n\tstruct group gr, *grp;\n\tchar buf[512];\n\tint buflen = 512;\n\n\t(void) getgrgid_r(gid, &gr, buf, buflen, &grp);\n    ], tcl_cv_api_getgrgid_r_5=yes, tcl_cv_api_getgrgid_r_5=no)])\n    tcl_ok=$tcl_cv_api_getgrgid_r_5\n    if test \"$tcl_ok\" = yes; then\n\tAC_DEFINE(HAVE_GETGRGID_R_5, 1,\n\t    [Define to 1 if getgrgid_r takes 5 args.])\n    else\n\tAC_CACHE_CHECK([for getgrgid_r with 4 args], tcl_cv_api_getgrgid_r_4, [\n\tAC_TRY_COMPILE([\n\t    #include <sys/types.h>\n\t    #include <grp.h>\n\t], [\n\t    gid_t gid;\n\t    struct group gr;\n\t    char buf[512];\n\t    int buflen = 512;\n\n\t    (void)getgrgid_r(gid, &gr, buf, buflen);\n\t], tcl_cv_api_getgrgid_r_4=yes, tcl_cv_api_getgrgid_r_4=no)])\n\ttcl_ok=$tcl_cv_api_getgrgid_r_4\n\tif test \"$tcl_ok\" = yes; then\n\t    AC_DEFINE(HAVE_GETGRGID_R_4, 1,\n\t\t[Define to 1 if getgrgid_r takes 4 args.])\n\tfi\n    fi\n    if test \"$tcl_ok\" = yes; then\n\tAC_DEFINE(HAVE_GETGRGID_R, 1,\n\t    [Define to 1 if getgrgid_r is available.])\n    fi\n])])\n\n#--------------------------------------------------------------------\n# SC_TCL_GETGRNAM_R\n#\n#\tCheck if we have MT-safe variant of getgrnam() and if yes,\n#\twhich one exactly.\n#\n# Arguments:\n#\tNone\n#\n# Results:\n#\n#\tMight define the following vars:\n#\t\tHAVE_GETGRNAM_R\n#\t\tHAVE_GETGRNAM_R_4\n#\t\tHAVE_GETGRNAM_R_5\n#\n#--------------------------------------------------------------------\n\nAC_DEFUN([SC_TCL_GETGRNAM_R], [AC_CHECK_FUNC(getgrnam_r, [\n    AC_CACHE_CHECK([for getgrnam_r with 5 args], tcl_cv_api_getgrnam_r_5, [\n    AC_TRY_COMPILE([\n\t#include <sys/types.h>\n\t#include <grp.h>\n    ], [\n\tchar *name;\n\tstruct group gr, *grp;\n\tchar buf[512];\n\tint buflen = 512;\n\n\t(void) getgrnam_r(name, &gr, buf, buflen, &grp);\n    ], tcl_cv_api_getgrnam_r_5=yes, tcl_cv_api_getgrnam_r_5=no)])\n    tcl_ok=$tcl_cv_api_getgrnam_r_5\n    if test \"$tcl_ok\" = yes; then\n\tAC_DEFINE(HAVE_GETGRNAM_R_5, 1,\n\t    [Define to 1 if getgrnam_r takes 5 args.])\n    else\n\tAC_CACHE_CHECK([for getgrnam_r with 4 args], tcl_cv_api_getgrnam_r_4, [\n\tAC_TRY_COMPILE([\n\t    #include <sys/types.h>\n\t    #include <grp.h>\n\t], [\n\t    char *name;\n\t    struct group gr;\n\t    char buf[512];\n\t    int buflen = 512;\n\n\t    (void)getgrnam_r(name, &gr, buf, buflen);\n\t], tcl_cv_api_getgrnam_r_4=yes, tcl_cv_api_getgrnam_r_4=no)])\n\ttcl_ok=$tcl_cv_api_getgrnam_r_4\n\tif test \"$tcl_ok\" = yes; then\n\t    AC_DEFINE(HAVE_GETGRNAM_R_4, 1,\n\t\t[Define to 1 if getgrnam_r takes 4 args.])\n\tfi\n    fi\n    if test \"$tcl_ok\" = yes; then\n\tAC_DEFINE(HAVE_GETGRNAM_R, 1,\n\t    [Define to 1 if getgrnam_r is available.])\n    fi\n])])\n\nAC_DEFUN([SC_TCL_IPV6],[\n\tNEED_FAKE_RFC2553=0\n\tAC_CHECK_FUNCS(getnameinfo getaddrinfo freeaddrinfo gai_strerror,,[NEED_FAKE_RFC2553=1])\n\tAC_CHECK_TYPES([\n\t\tstruct addrinfo,\n\t\tstruct in6_addr,\n\t\tstruct sockaddr_in6,\n\t\tstruct sockaddr_storage],,[NEED_FAKE_RFC2553=1],[[\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\n#include <netdb.h>\n]])\nif test \"x$NEED_FAKE_RFC2553\" = \"x1\"; then\n   AC_DEFINE([NEED_FAKE_RFC2553], 1,\n        [Use compat implementation of getaddrinfo() and friends])\n   AC_LIBOBJ([fake-rfc2553])\n   AC_CHECK_FUNC(strlcpy)\nfi\n])\n# Local Variables:\n# mode: autoconf\n# End:\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/library/images/pwrdLogo100.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/library/images/logoMed.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/library/images/logo64.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/library/images/tai-ku.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/library/images/pwrdLogo175.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/library/images/pwrdLogo200.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/library/images/logoLarge.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/library/images/pwrdLogo150.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/library/images/logo100.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/library/images/pwrdLogo75.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/library/demos/images/teapot.ppm",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/library/demos/images/ouster.png",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/library/demos/images/earthris.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/library/demos/images/earth.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/library/demos/images/tcllogo.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/tests/teapot.ppm",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/tests/earth.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/tests/pwrdLogo150.gif",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor70.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor7c.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/wish.ico",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor18.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor0c.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor46.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor78.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor00.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor92.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor66.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor06.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor80.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor96.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor0a.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor84.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor6c.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor16.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor54.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor68.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor6a.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/lamp.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor74.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor30.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor90.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor3c.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor3a.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor6e.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/buttons.bmp",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/tk.ico",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor8e.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor7e.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor82.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor12.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor5a.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor26.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor32.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor62.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor9a.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor52.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor76.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor50.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor40.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor36.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor04.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor4c.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor38.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor10.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor56.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor3e.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor14.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor86.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor2c.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor72.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor4a.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor48.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor5e.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor22.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor0e.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor2a.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor20.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor58.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor1a.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor8c.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor98.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor08.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor64.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor2e.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor44.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor88.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor8a.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor7a.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor1e.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor94.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor28.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor5c.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor1c.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor34.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor4e.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor42.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor24.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor60.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/win/rc/cursor02.cur",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/macosx/Tk.tiff",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/macosx/Wish.icns",
        "/tmp/vanessa/spack-stage/spack-stage-tk-8.6.5-fu6upvesv6gw4p3z46avhhx3qop2dqt2/spack-src/macosx/Tk.icns"
    ],
    "total_files": 877
}