{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/ltmain.sh": "# ltmain.sh - Provide generalized library-building support services.\n# NOTE: Changing this file will not affect anything until you rerun configure.\n#\n# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005\n# Free Software Foundation, Inc.\n# Originally by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n#\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that program.\n\nbasename=\"s,^.*/,,g\"\n\n# Work around backward compatibility issue on IRIX 6.5. On IRIX 6.4+, sh\n# is ksh but when the shell is invoked as \"sh\" and the current value of\n# the _XPG environment variable is not equal to 1 (one), the special\n# positional parameter $0, within a function call, is the name of the\n# function.\nprogpath=\"$0\"\n\n# The name of this program:\nprogname=`echo \"$progpath\" | $SED $basename`\nmodename=\"$progname\"\n\n# Global variables:\nEXIT_SUCCESS=0\nEXIT_FAILURE=1\n\nPROGRAM=ltmain.sh\nPACKAGE=libtool\nVERSION=1.5.22\nTIMESTAMP=\" (1.1220.2.365 2005/12/18 22:14:06)\"\n\n# See if we are running on zsh, and set the options which allow our\n# commands through without removal of \\ escapes.\nif test -n \"${ZSH_VERSION+set}\" ; then\n  setopt NO_GLOB_SUBST\nfi\n\n# Check that we have a working $echo.\nif test \"X$1\" = X--no-reexec; then\n  # Discard the --no-reexec flag, and continue.\n  shift\nelif test \"X$1\" = X--fallback-echo; then\n  # Avoid inline document here, it may be left over\n  :\nelif test \"X`($echo '\\t') 2>/dev/null`\" = 'X\\t'; then\n  # Yippee, $echo works!\n  :\nelse\n  # Restart under the correct shell, and then maybe $echo will work.\n  exec $SHELL \"$progpath\" --no-reexec ${1+\"$@\"}\nfi\n\nif test \"X$1\" = X--fallback-echo; then\n  # used as fallback echo\n  shift\n  cat <<EOF\n$*\nEOF\n  exit $EXIT_SUCCESS\nfi\n\ndefault_mode=\nhelp=\"Try \\`$progname --help' for more information.\"\nmagic=\"%%%MAGIC variable%%%\"\nmkdir=\"mkdir\"\nmv=\"mv -f\"\nrm=\"rm -f\"\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nXsed=\"${SED}\"' -e 1s/^X//'\nsed_quote_subst='s/\\([\\\\`\\\\\"$\\\\\\\\]\\)/\\\\\\1/g'\n# test EBCDIC or ASCII\ncase `echo X|tr X '\\101'` in\n A) # ASCII based system\n    # \\n is not interpreted correctly by Solaris 8 /usr/ucb/tr\n  SP2NL='tr \\040 \\012'\n  NL2SP='tr \\015\\012 \\040\\040'\n  ;;\n *) # EBCDIC based system\n  SP2NL='tr \\100 \\n'\n  NL2SP='tr \\r\\n \\100\\100'\n  ;;\nesac\n\n# NLS nuisances.\n# Only set LANG and LC_ALL to C if already set.\n# These must not be set unconditionally because not all systems understand\n# e.g. LANG=C (notably SCO).\n# We save the old values to restore during execute mode.\nif test \"${LC_ALL+set}\" = set; then\n  save_LC_ALL=\"$LC_ALL\"; LC_ALL=C; export LC_ALL\nfi\nif test \"${LANG+set}\" = set; then\n  save_LANG=\"$LANG\"; LANG=C; export LANG\nfi\n\n# Make sure IFS has a sensible default\nlt_nl='\n'\nIFS=\" \t$lt_nl\"\n\nif test \"$build_libtool_libs\" != yes && test \"$build_old_libs\" != yes; then\n  $echo \"$modename: not configured to build any kind of library\" 1>&2\n  $echo \"Fatal configuration error.  See the $PACKAGE docs for more information.\" 1>&2\n  exit $EXIT_FAILURE\nfi\n\n# Global variables.\nmode=$default_mode\nnonopt=\nprev=\nprevopt=\nrun=\nshow=\"$echo\"\nshow_help=\nexecute_dlfiles=\nduplicate_deps=no\npreserve_args=\nlo2o=\"s/\\\\.lo\\$/.${objext}/\"\no2lo=\"s/\\\\.${objext}\\$/.lo/\"\n\n#####################################\n# Shell function definitions:\n# This seems to be the best place for them\n\n# func_mktempdir [string]\n# Make a temporary directory that won't clash with other running\n# libtool processes, and avoids race conditions if possible.  If\n# given, STRING is the basename for that directory.\nfunc_mktempdir ()\n{\n    my_template=\"${TMPDIR-/tmp}/${1-$progname}\"\n\n    if test \"$run\" = \":\"; then\n      # Return a directory name, but don't create it in dry-run mode\n      my_tmpdir=\"${my_template}-$$\"\n    else\n\n      # If mktemp works, use that first and foremost\n      my_tmpdir=`mktemp -d \"${my_template}-XXXXXXXX\" 2>/dev/null`\n\n      if test ! -d \"$my_tmpdir\"; then\n\t# Failing that, at least try and use $RANDOM to avoid a race\n\tmy_tmpdir=\"${my_template}-${RANDOM-0}$$\"\n\n\tsave_mktempdir_umask=`umask`\n\tumask 0077\n\t$mkdir \"$my_tmpdir\"\n\tumask $save_mktempdir_umask\n      fi\n\n      # If we're not in dry-run mode, bomb out on failure\n      test -d \"$my_tmpdir\" || {\n        $echo \"cannot create temporary directory \\`$my_tmpdir'\" 1>&2\n\texit $EXIT_FAILURE\n      }\n    fi\n\n    $echo \"X$my_tmpdir\" | $Xsed\n}\n\n\n# func_win32_libid arg\n# return the library type of file 'arg'\n#\n# Need a lot of goo to handle *both* DLLs and import libs\n# Has to be a shell function in order to 'eat' the argument\n# that is supplied when $file_magic_command is called.\nfunc_win32_libid ()\n{\n  win32_libid_type=\"unknown\"\n  win32_fileres=`file -L $1 2>/dev/null`\n  case $win32_fileres in\n  *ar\\ archive\\ import\\ library*) # definitely import\n    win32_libid_type=\"x86 archive import\"\n    ;;\n  *ar\\ archive*) # could be an import, or static\n    if eval $OBJDUMP -f $1 | $SED -e '10q' 2>/dev/null | \\\n      $EGREP -e 'file format pe-i386(.*architecture: i386)?' >/dev/null ; then\n      win32_nmres=`eval $NM -f posix -A $1 | \\\n\t$SED -n -e '1,100{/ I /{s,.*,import,;p;q;};}'`\n      case $win32_nmres in\n      import*)  win32_libid_type=\"x86 archive import\";;\n      *)        win32_libid_type=\"x86 archive static\";;\n      esac\n    fi\n    ;;\n  *DLL*)\n    win32_libid_type=\"x86 DLL\"\n    ;;\n  *executable*) # but shell scripts are \"executable\" too...\n    case $win32_fileres in\n    *MS\\ Windows\\ PE\\ Intel*)\n      win32_libid_type=\"x86 DLL\"\n      ;;\n    esac\n    ;;\n  esac\n  $echo $win32_libid_type\n}\n\n\n# func_infer_tag arg\n# Infer tagged configuration to use if any are available and\n# if one wasn't chosen via the \"--tag\" command line option.\n# Only attempt this if the compiler in the base compile\n# command doesn't match the default compiler.\n# arg is usually of the form 'gcc ...'\nfunc_infer_tag ()\n{\n    if test -n \"$available_tags\" && test -z \"$tagname\"; then\n      CC_quoted=\n      for arg in $CC; do\n\tcase $arg in\n\t  *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\t  arg=\"\\\"$arg\\\"\"\n\t  ;;\n\tesac\n\tCC_quoted=\"$CC_quoted $arg\"\n      done\n      case $@ in\n      # Blanks in the command may have been stripped by the calling shell,\n      # but not from the CC environment variable when configure was run.\n      \" $CC \"* | \"$CC \"* | \" `$echo $CC` \"* | \"`$echo $CC` \"* | \" $CC_quoted\"* | \"$CC_quoted \"* | \" `$echo $CC_quoted` \"* | \"`$echo $CC_quoted` \"*) ;;\n      # Blanks at the start of $base_compile will cause this to fail\n      # if we don't check for them as well.\n      *)\n\tfor z in $available_tags; do\n\t  if grep \"^# ### BEGIN LIBTOOL TAG CONFIG: $z$\" < \"$progpath\" > /dev/null; then\n\t    # Evaluate the configuration.\n\t    eval \"`${SED} -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^# ### END LIBTOOL TAG CONFIG: '$z'$/p' < $progpath`\"\n\t    CC_quoted=\n\t    for arg in $CC; do\n\t    # Double-quote args containing other shell metacharacters.\n\t    case $arg in\n\t      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\t      arg=\"\\\"$arg\\\"\"\n\t      ;;\n\t    esac\n\t    CC_quoted=\"$CC_quoted $arg\"\n\t  done\n\t    case \"$@ \" in\n\t      \" $CC \"* | \"$CC \"* | \" `$echo $CC` \"* | \"`$echo $CC` \"* | \" $CC_quoted\"* | \"$CC_quoted \"* | \" `$echo $CC_quoted` \"* | \"`$echo $CC_quoted` \"*)\n\t      # The compiler in the base compile command matches\n\t      # the one in the tagged configuration.\n\t      # Assume this is the tagged configuration we want.\n\t      tagname=$z\n\t      break\n\t      ;;\n\t    esac\n\t  fi\n\tdone\n\t# If $tagname still isn't set, then no tagged configuration\n\t# was found and let the user know that the \"--tag\" command\n\t# line option must be used.\n\tif test -z \"$tagname\"; then\n\t  $echo \"$modename: unable to infer tagged configuration\"\n\t  $echo \"$modename: specify a tag with \\`--tag'\" 1>&2\n\t  exit $EXIT_FAILURE\n#        else\n#          $echo \"$modename: using $tagname tagged configuration\"\n\tfi\n\t;;\n      esac\n    fi\n}\n\n\n# func_extract_an_archive dir oldlib\nfunc_extract_an_archive ()\n{\n    f_ex_an_ar_dir=\"$1\"; shift\n    f_ex_an_ar_oldlib=\"$1\"\n\n    $show \"(cd $f_ex_an_ar_dir && $AR x $f_ex_an_ar_oldlib)\"\n    $run eval \"(cd \\$f_ex_an_ar_dir && $AR x \\$f_ex_an_ar_oldlib)\" || exit $?\n    if ($AR t \"$f_ex_an_ar_oldlib\" | sort | sort -uc >/dev/null 2>&1); then\n     :\n    else\n      $echo \"$modename: ERROR: object name conflicts: $f_ex_an_ar_dir/$f_ex_an_ar_oldlib\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n}\n\n# func_extract_archives gentop oldlib ...\nfunc_extract_archives ()\n{\n    my_gentop=\"$1\"; shift\n    my_oldlibs=${1+\"$@\"}\n    my_oldobjs=\"\"\n    my_xlib=\"\"\n    my_xabs=\"\"\n    my_xdir=\"\"\n    my_status=\"\"\n\n    $show \"${rm}r $my_gentop\"\n    $run ${rm}r \"$my_gentop\"\n    $show \"$mkdir $my_gentop\"\n    $run $mkdir \"$my_gentop\"\n    my_status=$?\n    if test \"$my_status\" -ne 0 && test ! -d \"$my_gentop\"; then\n      exit $my_status\n    fi\n\n    for my_xlib in $my_oldlibs; do\n      # Extract the objects.\n      case $my_xlib in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) my_xabs=\"$my_xlib\" ;;\n\t*) my_xabs=`pwd`\"/$my_xlib\" ;;\n      esac\n      my_xlib=`$echo \"X$my_xlib\" | $Xsed -e 's%^.*/%%'`\n      my_xdir=\"$my_gentop/$my_xlib\"\n\n      $show \"${rm}r $my_xdir\"\n      $run ${rm}r \"$my_xdir\"\n      $show \"$mkdir $my_xdir\"\n      $run $mkdir \"$my_xdir\"\n      exit_status=$?\n      if test \"$exit_status\" -ne 0 && test ! -d \"$my_xdir\"; then\n\texit $exit_status\n      fi\n      case $host in\n      *-darwin*)\n\t$show \"Extracting $my_xabs\"\n\t# Do not bother doing anything if just a dry run\n\tif test -z \"$run\"; then\n\t  darwin_orig_dir=`pwd`\n\t  cd $my_xdir || exit $?\n\t  darwin_archive=$my_xabs\n\t  darwin_curdir=`pwd`\n\t  darwin_base_archive=`$echo \"X$darwin_archive\" | $Xsed -e 's%^.*/%%'`\n\t  darwin_arches=`lipo -info \"$darwin_archive\" 2>/dev/null | $EGREP Architectures 2>/dev/null`\n\t  if test -n \"$darwin_arches\"; then \n\t    darwin_arches=`echo \"$darwin_arches\" | $SED -e 's/.*are://'`\n\t    darwin_arch=\n\t    $show \"$darwin_base_archive has multiple architectures $darwin_arches\"\n\t    for darwin_arch in  $darwin_arches ; do\n\t      mkdir -p \"unfat-$$/${darwin_base_archive}-${darwin_arch}\"\n\t      lipo -thin $darwin_arch -output \"unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}\" \"${darwin_archive}\"\n\t      cd \"unfat-$$/${darwin_base_archive}-${darwin_arch}\"\n\t      func_extract_an_archive \"`pwd`\" \"${darwin_base_archive}\"\n\t      cd \"$darwin_curdir\"\n\t      $rm \"unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}\"\n\t    done # $darwin_arches\n      ## Okay now we have a bunch of thin objects, gotta fatten them up :)\n\t    darwin_filelist=`find unfat-$$ -type f -name \\*.o -print -o -name \\*.lo -print| xargs basename | sort -u | $NL2SP`\n\t    darwin_file=\n\t    darwin_files=\n\t    for darwin_file in $darwin_filelist; do\n\t      darwin_files=`find unfat-$$ -name $darwin_file -print | $NL2SP`\n\t      lipo -create -output \"$darwin_file\" $darwin_files\n\t    done # $darwin_filelist\n\t    ${rm}r unfat-$$\n\t    cd \"$darwin_orig_dir\"\n\t  else\n\t    cd \"$darwin_orig_dir\"\n \t    func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n\t  fi # $darwin_arches\n\tfi # $run\n\t;;\n      *)\n        func_extract_an_archive \"$my_xdir\" \"$my_xabs\"\n        ;;\n      esac\n      my_oldobjs=\"$my_oldobjs \"`find $my_xdir -name \\*.$objext -print -o -name \\*.lo -print | $NL2SP`\n    done\n    func_extract_archives_result=\"$my_oldobjs\"\n}\n# End of Shell function definitions\n#####################################\n\n# Darwin sucks\neval std_shrext=\\\"$shrext_cmds\\\"\n\ndisable_libs=no\n\n# Parse our command line options once, thoroughly.\nwhile test \"$#\" -gt 0\ndo\n  arg=\"$1\"\n  shift\n\n  case $arg in\n  -*=*) optarg=`$echo \"X$arg\" | $Xsed -e 's/[-_a-zA-Z0-9]*=//'` ;;\n  *) optarg= ;;\n  esac\n\n  # If the previous option needs an argument, assign it.\n  if test -n \"$prev\"; then\n    case $prev in\n    execute_dlfiles)\n      execute_dlfiles=\"$execute_dlfiles $arg\"\n      ;;\n    tag)\n      tagname=\"$arg\"\n      preserve_args=\"${preserve_args}=$arg\"\n\n      # Check whether tagname contains only valid characters\n      case $tagname in\n      *[!-_A-Za-z0-9,/]*)\n\t$echo \"$progname: invalid tag name: $tagname\" 1>&2\n\texit $EXIT_FAILURE\n\t;;\n      esac\n\n      case $tagname in\n      CC)\n\t# Don't test for the \"default\" C tag, as we know, it's there, but\n\t# not specially marked.\n\t;;\n      *)\n\tif grep \"^# ### BEGIN LIBTOOL TAG CONFIG: $tagname$\" < \"$progpath\" > /dev/null; then\n\t  taglist=\"$taglist $tagname\"\n\t  # Evaluate the configuration.\n\t  eval \"`${SED} -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$tagname'$/,/^# ### END LIBTOOL TAG CONFIG: '$tagname'$/p' < $progpath`\"\n\telse\n\t  $echo \"$progname: ignoring unknown tag $tagname\" 1>&2\n\tfi\n\t;;\n      esac\n      ;;\n    *)\n      eval \"$prev=\\$arg\"\n      ;;\n    esac\n\n    prev=\n    prevopt=\n    continue\n  fi\n\n  # Have we seen a non-optional argument yet?\n  case $arg in\n  --help)\n    show_help=yes\n    ;;\n\n  --version)\n    $echo \"$PROGRAM (GNU $PACKAGE) $VERSION$TIMESTAMP\"\n    $echo\n    $echo \"Copyright (C) 2005  Free Software Foundation, Inc.\"\n    $echo \"This is free software; see the source for copying conditions.  There is NO\"\n    $echo \"warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n    exit $?\n    ;;\n\n  --config)\n    ${SED} -e '1,/^# ### BEGIN LIBTOOL CONFIG/d' -e '/^# ### END LIBTOOL CONFIG/,$d' $progpath\n    # Now print the configurations for the tags.\n    for tagname in $taglist; do\n      ${SED} -n -e \"/^# ### BEGIN LIBTOOL TAG CONFIG: $tagname$/,/^# ### END LIBTOOL TAG CONFIG: $tagname$/p\" < \"$progpath\"\n    done\n    exit $?\n    ;;\n\n  --debug)\n    $echo \"$progname: enabling shell trace mode\"\n    set -x\n    preserve_args=\"$preserve_args $arg\"\n    ;;\n\n  --dry-run | -n)\n    run=:\n    ;;\n\n  --features)\n    $echo \"host: $host\"\n    if test \"$build_libtool_libs\" = yes; then\n      $echo \"enable shared libraries\"\n    else\n      $echo \"disable shared libraries\"\n    fi\n    if test \"$build_old_libs\" = yes; then\n      $echo \"enable static libraries\"\n    else\n      $echo \"disable static libraries\"\n    fi\n    exit $?\n    ;;\n\n  --finish) mode=\"finish\" ;;\n\n  --mode) prevopt=\"--mode\" prev=mode ;;\n  --mode=*) mode=\"$optarg\" ;;\n\n  --preserve-dup-deps) duplicate_deps=\"yes\" ;;\n\n  --quiet | --silent)\n    show=:\n    preserve_args=\"$preserve_args $arg\"\n    ;;\n\n  --tag)\n    prevopt=\"--tag\"\n    prev=tag\n    preserve_args=\"$preserve_args --tag\"\n    ;;\n  --tag=*)\n    set tag \"$optarg\" ${1+\"$@\"}\n    shift\n    prev=tag\n    preserve_args=\"$preserve_args --tag\"\n    ;;\n\n  -dlopen)\n    prevopt=\"-dlopen\"\n    prev=execute_dlfiles\n    ;;\n\n  -*)\n    $echo \"$modename: unrecognized option \\`$arg'\" 1>&2\n    $echo \"$help\" 1>&2\n    exit $EXIT_FAILURE\n    ;;\n\n  *)\n    nonopt=\"$arg\"\n    break\n    ;;\n  esac\ndone\n\nif test -n \"$prevopt\"; then\n  $echo \"$modename: option \\`$prevopt' requires an argument\" 1>&2\n  $echo \"$help\" 1>&2\n  exit $EXIT_FAILURE\nfi\n\ncase $disable_libs in\nno) \n  ;;\nshared)\n  build_libtool_libs=no\n  build_old_libs=yes\n  ;;\nstatic)\n  build_old_libs=`case $build_libtool_libs in yes) echo no;; *) echo yes;; esac`\n  ;;\nesac\n\n# If this variable is set in any of the actions, the command in it\n# will be execed at the end.  This prevents here-documents from being\n# left over by shells.\nexec_cmd=\n\nif test -z \"$show_help\"; then\n\n  # Infer the operation mode.\n  if test -z \"$mode\"; then\n    $echo \"*** Warning: inferring the mode of operation is deprecated.\" 1>&2\n    $echo \"*** Future versions of Libtool will require --mode=MODE be specified.\" 1>&2\n    case $nonopt in\n    *cc | cc* | *++ | gcc* | *-gcc* | g++* | xlc*)\n      mode=link\n      for arg\n      do\n\tcase $arg in\n\t-c)\n\t   mode=compile\n\t   break\n\t   ;;\n\tesac\n      done\n      ;;\n    *db | *dbx | *strace | *truss)\n      mode=execute\n      ;;\n    *install*|cp|mv)\n      mode=install\n      ;;\n    *rm)\n      mode=uninstall\n      ;;\n    *)\n      # If we have no mode, but dlfiles were specified, then do execute mode.\n      test -n \"$execute_dlfiles\" && mode=execute\n\n      # Just use the default operation mode.\n      if test -z \"$mode\"; then\n\tif test -n \"$nonopt\"; then\n\t  $echo \"$modename: warning: cannot infer operation mode from \\`$nonopt'\" 1>&2\n\telse\n\t  $echo \"$modename: warning: cannot infer operation mode without MODE-ARGS\" 1>&2\n\tfi\n      fi\n      ;;\n    esac\n  fi\n\n  # Only execute mode is allowed to have -dlopen flags.\n  if test -n \"$execute_dlfiles\" && test \"$mode\" != execute; then\n    $echo \"$modename: unrecognized option \\`-dlopen'\" 1>&2\n    $echo \"$help\" 1>&2\n    exit $EXIT_FAILURE\n  fi\n\n  # Change the help message to a mode-specific one.\n  generic_help=\"$help\"\n  help=\"Try \\`$modename --help --mode=$mode' for more information.\"\n\n  # These modes are in order of execution frequency so that they run quickly.\n  case $mode in\n  # libtool compile mode\n  compile)\n    modename=\"$modename: compile\"\n    # Get the compilation command and the source file.\n    base_compile=\n    srcfile=\"$nonopt\"  #  always keep a non-empty value in \"srcfile\"\n    suppress_opt=yes\n    suppress_output=\n    arg_mode=normal\n    libobj=\n    later=\n\n    for arg\n    do\n      case $arg_mode in\n      arg  )\n\t# do not \"continue\".  Instead, add this to base_compile\n\tlastarg=\"$arg\"\n\targ_mode=normal\n\t;;\n\n      target )\n\tlibobj=\"$arg\"\n\targ_mode=normal\n\tcontinue\n\t;;\n\n      normal )\n\t# Accept any command-line options.\n\tcase $arg in\n\t-o)\n\t  if test -n \"$libobj\" ; then\n\t    $echo \"$modename: you cannot specify \\`-o' more than once\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\t  arg_mode=target\n\t  continue\n\t  ;;\n\n\t-static | -prefer-pic | -prefer-non-pic)\n\t  later=\"$later $arg\"\n\t  continue\n\t  ;;\n\n\t-no-suppress)\n\t  suppress_opt=no\n\t  continue\n\t  ;;\n\n\t-Xcompiler)\n\t  arg_mode=arg  #  the next one goes into the \"base_compile\" arg list\n\t  continue      #  The current \"srcfile\" will either be retained or\n\t  ;;            #  replaced later.  I would guess that would be a bug.\n\n\t-Wc,*)\n\t  args=`$echo \"X$arg\" | $Xsed -e \"s/^-Wc,//\"`\n\t  lastarg=\n\t  save_ifs=\"$IFS\"; IFS=','\n \t  for arg in $args; do\n\t    IFS=\"$save_ifs\"\n\n\t    # Double-quote args containing other shell metacharacters.\n\t    # Many Bourne shells cannot handle close brackets correctly\n\t    # in scan sets, so we specify it separately.\n\t    case $arg in\n\t      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\t      arg=\"\\\"$arg\\\"\"\n\t      ;;\n\t    esac\n\t    lastarg=\"$lastarg $arg\"\n\t  done\n\t  IFS=\"$save_ifs\"\n\t  lastarg=`$echo \"X$lastarg\" | $Xsed -e \"s/^ //\"`\n\n\t  # Add the arguments to base_compile.\n\t  base_compile=\"$base_compile $lastarg\"\n\t  continue\n\t  ;;\n\n\t* )\n\t  # Accept the current argument as the source file.\n\t  # The previous \"srcfile\" becomes the current argument.\n\t  #\n\t  lastarg=\"$srcfile\"\n\t  srcfile=\"$arg\"\n\t  ;;\n\tesac  #  case $arg\n\t;;\n      esac    #  case $arg_mode\n\n      # Aesthetically quote the previous argument.\n      lastarg=`$echo \"X$lastarg\" | $Xsed -e \"$sed_quote_subst\"`\n\n      case $lastarg in\n      # Double-quote args containing other shell metacharacters.\n      # Many Bourne shells cannot handle close brackets correctly\n      # in scan sets, and some SunOS ksh mistreat backslash-escaping\n      # in scan sets (worked around with variable expansion),\n      # and furthermore cannot handle '|' '&' '(' ')' in scan sets \n      # at all, so we specify them separately.\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\tlastarg=\"\\\"$lastarg\\\"\"\n\t;;\n      esac\n\n      base_compile=\"$base_compile $lastarg\"\n    done # for arg\n\n    case $arg_mode in\n    arg)\n      $echo \"$modename: you must specify an argument for -Xcompile\"\n      exit $EXIT_FAILURE\n      ;;\n    target)\n      $echo \"$modename: you must specify a target with \\`-o'\" 1>&2\n      exit $EXIT_FAILURE\n      ;;\n    *)\n      # Get the name of the library object.\n      [ -z \"$libobj\" ] && libobj=`$echo \"X$srcfile\" | $Xsed -e 's%^.*/%%'`\n      ;;\n    esac\n\n    # Recognize several different file suffixes.\n    # If the user specifies -o file.o, it is replaced with file.lo\n    xform='[cCFSifmso]'\n    case $libobj in\n    *.ada) xform=ada ;;\n    *.adb) xform=adb ;;\n    *.ads) xform=ads ;;\n    *.asm) xform=asm ;;\n    *.c++) xform=c++ ;;\n    *.cc) xform=cc ;;\n    *.ii) xform=ii ;;\n    *.class) xform=class ;;\n    *.cpp) xform=cpp ;;\n    *.cxx) xform=cxx ;;\n    *.f90) xform=f90 ;;\n    *.for) xform=for ;;\n    *.java) xform=java ;;\n    esac\n\n    libobj=`$echo \"X$libobj\" | $Xsed -e \"s/\\.$xform$/.lo/\"`\n\n    case $libobj in\n    *.lo) obj=`$echo \"X$libobj\" | $Xsed -e \"$lo2o\"` ;;\n    *)\n      $echo \"$modename: cannot determine name of library object from \\`$libobj'\" 1>&2\n      exit $EXIT_FAILURE\n      ;;\n    esac\n\n    func_infer_tag $base_compile\n\n    for arg in $later; do\n      case $arg in\n      -static)\n\tbuild_old_libs=yes\n\tcontinue\n\t;;\n\n      -prefer-pic)\n\tpic_mode=yes\n\tcontinue\n\t;;\n\n      -prefer-non-pic)\n\tpic_mode=no\n\tcontinue\n\t;;\n      esac\n    done\n\n    qlibobj=`$echo \"X$libobj\" | $Xsed -e \"$sed_quote_subst\"`\n    case $qlibobj in\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\tqlibobj=\"\\\"$qlibobj\\\"\" ;;\n    esac\n    test \"X$libobj\" != \"X$qlibobj\" \\\n\t&& $echo \"X$libobj\" | grep '[]~#^*{};<>?\"'\"'\"' \t&()|`$[]' \\\n\t&& $echo \"$modename: libobj name \\`$libobj' may not contain shell special characters.\"\n    objname=`$echo \"X$obj\" | $Xsed -e 's%^.*/%%'`\n    xdir=`$echo \"X$obj\" | $Xsed -e 's%/[^/]*$%%'`\n    if test \"X$xdir\" = \"X$obj\"; then\n      xdir=\n    else\n      xdir=$xdir/\n    fi\n    lobj=${xdir}$objdir/$objname\n\n    if test -z \"$base_compile\"; then\n      $echo \"$modename: you must specify a compilation command\" 1>&2\n      $echo \"$help\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n\n    # Delete any leftover library objects.\n    if test \"$build_old_libs\" = yes; then\n      removelist=\"$obj $lobj $libobj ${libobj}T\"\n    else\n      removelist=\"$lobj $libobj ${libobj}T\"\n    fi\n\n    $run $rm $removelist\n    trap \"$run $rm $removelist; exit $EXIT_FAILURE\" 1 2 15\n\n    # On Cygwin there's no \"real\" PIC flag so we must build both object types\n    case $host_os in\n    cygwin* | mingw* | pw32* | os2*)\n      pic_mode=default\n      ;;\n    esac\n    if test \"$pic_mode\" = no && test \"$deplibs_check_method\" != pass_all; then\n      # non-PIC code in shared libraries is not supported\n      pic_mode=default\n    fi\n\n    # Calculate the filename of the output object if compiler does\n    # not support -o with -c\n    if test \"$compiler_c_o\" = no; then\n      output_obj=`$echo \"X$srcfile\" | $Xsed -e 's%^.*/%%' -e 's%\\.[^.]*$%%'`.${objext}\n      lockfile=\"$output_obj.lock\"\n      removelist=\"$removelist $output_obj $lockfile\"\n      trap \"$run $rm $removelist; exit $EXIT_FAILURE\" 1 2 15\n    else\n      output_obj=\n      need_locks=no\n      lockfile=\n    fi\n\n    # Lock this critical section if it is needed\n    # We use this script file to make the link, it avoids creating a new file\n    if test \"$need_locks\" = yes; then\n      until $run ln \"$progpath\" \"$lockfile\" 2>/dev/null; do\n\t$show \"Waiting for $lockfile to be removed\"\n\tsleep 2\n      done\n    elif test \"$need_locks\" = warn; then\n      if test -f \"$lockfile\"; then\n\t$echo \"\\\n*** ERROR, $lockfile exists and contains:\n`cat $lockfile 2>/dev/null`\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$run $rm $removelist\n\texit $EXIT_FAILURE\n      fi\n      $echo \"$srcfile\" > \"$lockfile\"\n    fi\n\n    if test -n \"$fix_srcfile_path\"; then\n      eval srcfile=\\\"$fix_srcfile_path\\\"\n    fi\n    qsrcfile=`$echo \"X$srcfile\" | $Xsed -e \"$sed_quote_subst\"`\n    case $qsrcfile in\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n      qsrcfile=\"\\\"$qsrcfile\\\"\" ;;\n    esac\n\n    $run $rm \"$libobj\" \"${libobj}T\"\n\n    # Create a libtool object file (analogous to a \".la\" file),\n    # but don't create it if we're doing a dry run.\n    test -z \"$run\" && cat > ${libobj}T <<EOF\n# $libobj - a libtool object file\n# Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# Name of the PIC object.\nEOF\n\n    # Only build a PIC object if we are building libtool libraries.\n    if test \"$build_libtool_libs\" = yes; then\n      # Without this assignment, base_compile gets emptied.\n      fbsd_hideous_sh_bug=$base_compile\n\n      if test \"$pic_mode\" != no; then\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      else\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile\"\n      fi\n\n      if test ! -d \"${xdir}$objdir\"; then\n\t$show \"$mkdir ${xdir}$objdir\"\n\t$run $mkdir ${xdir}$objdir\n\texit_status=$?\n\tif test \"$exit_status\" -ne 0 && test ! -d \"${xdir}$objdir\"; then\n\t  exit $exit_status\n\tfi\n      fi\n\n      if test -z \"$output_obj\"; then\n\t# Place PIC objects in $objdir\n\tcommand=\"$command -o $lobj\"\n      fi\n\n      $run $rm \"$lobj\" \"$output_obj\"\n\n      $show \"$command\"\n      if $run eval \"$command\"; then :\n      else\n\ttest -n \"$output_obj\" && $run $rm $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      if test \"$need_locks\" = warn &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$echo \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$run $rm $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed, then go on to compile the next one\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$lobj\"; then\n\t$show \"$mv $output_obj $lobj\"\n\tif $run $mv $output_obj $lobj; then :\n\telse\n\t  error=$?\n\t  $run $rm $removelist\n\t  exit $error\n\tfi\n      fi\n\n      # Append the name of the PIC object to the libtool object file.\n      test -z \"$run\" && cat >> ${libobj}T <<EOF\npic_object='$objdir/$objname'\n\nEOF\n\n      # Allow error messages only from the first compilation.\n      if test \"$suppress_opt\" = yes; then\n        suppress_output=' >/dev/null 2>&1'\n      fi\n    else\n      # No PIC object so indicate it doesn't exist in the libtool\n      # object file.\n      test -z \"$run\" && cat >> ${libobj}T <<EOF\npic_object=none\n\nEOF\n    fi\n\n    # Only build a position-dependent object if we build old libraries.\n    if test \"$build_old_libs\" = yes; then\n      if test \"$pic_mode\" != yes; then\n\t# Don't build PIC code\n\tcommand=\"$base_compile $qsrcfile\"\n      else\n\tcommand=\"$base_compile $qsrcfile $pic_flag\"\n      fi\n      if test \"$compiler_c_o\" = yes; then\n\tcommand=\"$command -o $obj\"\n      fi\n\n      # Suppress compiler output if we already did a PIC compilation.\n      command=\"$command$suppress_output\"\n      $run $rm \"$obj\" \"$output_obj\"\n      $show \"$command\"\n      if $run eval \"$command\"; then :\n      else\n\t$run $rm $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      if test \"$need_locks\" = warn &&\n\t test \"X`cat $lockfile 2>/dev/null`\" != \"X$srcfile\"; then\n\t$echo \"\\\n*** ERROR, $lockfile contains:\n`cat $lockfile 2>/dev/null`\n\nbut it should contain:\n$srcfile\n\nThis indicates that another process is trying to use the same\ntemporary object file, and libtool could not work around it because\nyour compiler does not support \\`-c' and \\`-o' together.  If you\nrepeat this compilation, it may succeed, by chance, but you had better\navoid parallel builds (make -j) in this platform, or get a better\ncompiler.\"\n\n\t$run $rm $removelist\n\texit $EXIT_FAILURE\n      fi\n\n      # Just move the object if needed\n      if test -n \"$output_obj\" && test \"X$output_obj\" != \"X$obj\"; then\n\t$show \"$mv $output_obj $obj\"\n\tif $run $mv $output_obj $obj; then :\n\telse\n\t  error=$?\n\t  $run $rm $removelist\n\t  exit $error\n\tfi\n      fi\n\n      # Append the name of the non-PIC object the libtool object file.\n      # Only append if the libtool object file exists.\n      test -z \"$run\" && cat >> ${libobj}T <<EOF\n# Name of the non-PIC object.\nnon_pic_object='$objname'\n\nEOF\n    else\n      # Append the name of the non-PIC object the libtool object file.\n      # Only append if the libtool object file exists.\n      test -z \"$run\" && cat >> ${libobj}T <<EOF\n# Name of the non-PIC object.\nnon_pic_object=none\n\nEOF\n    fi\n\n    $run $mv \"${libobj}T\" \"${libobj}\"\n\n    # Unlock the critical section if it was locked\n    if test \"$need_locks\" != no; then\n      $run $rm \"$lockfile\"\n    fi\n\n    exit $EXIT_SUCCESS\n    ;;\n\n  # libtool link mode\n  link | relink)\n    modename=\"$modename: link\"\n    case $host in\n    *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2*)\n      # It is impossible to link a dll without this setting, and\n      # we shouldn't force the makefile maintainer to figure out\n      # which system we are compiling for in order to pass an extra\n      # flag for every libtool invocation.\n      # allow_undefined=no\n\n      # FIXME: Unfortunately, there are problems with the above when trying\n      # to make a dll which has undefined symbols, in which case not\n      # even a static library is built.  For now, we need to specify\n      # -no-undefined on the libtool link line when we can be certain\n      # that all symbols are satisfied, otherwise we get a static library.\n      allow_undefined=yes\n      ;;\n    *)\n      allow_undefined=yes\n      ;;\n    esac\n    libtool_args=\"$nonopt\"\n    base_compile=\"$nonopt $@\"\n    compile_command=\"$nonopt\"\n    finalize_command=\"$nonopt\"\n\n    compile_rpath=\n    finalize_rpath=\n    compile_shlibpath=\n    finalize_shlibpath=\n    convenience=\n    old_convenience=\n    deplibs=\n    old_deplibs=\n    compiler_flags=\n    linker_flags=\n    dllsearchpath=\n    lib_search_path=`pwd`\n    inst_prefix_dir=\n\n    avoid_version=no\n    dlfiles=\n    dlprefiles=\n    dlself=no\n    export_dynamic=no\n    export_symbols=\n    export_symbols_regex=\n    generated=\n    libobjs=\n    ltlibs=\n    module=no\n    no_install=no\n    objs=\n    non_pic_objects=\n    notinst_path= # paths that contain not-installed libtool libraries\n    precious_files_regex=\n    prefer_static_libs=no\n    preload=no\n    prev=\n    prevarg=\n    release=\n    rpath=\n    xrpath=\n    perm_rpath=\n    temp_rpath=\n    thread_safe=no\n    vinfo=\n    vinfo_number=no\n\n    func_infer_tag $base_compile\n\n    # We need to know -static, to get the right output filenames.\n    for arg\n    do\n      case $arg in\n      -all-static | -static)\n\tif test \"X$arg\" = \"X-all-static\"; then\n\t  if test \"$build_libtool_libs\" = yes && test -z \"$link_static_flag\"; then\n\t    $echo \"$modename: warning: complete static linking is impossible in this configuration\" 1>&2\n\t  fi\n\t  if test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=yes\n\telse\n\t  if test -z \"$pic_flag\" && test -n \"$link_static_flag\"; then\n\t    dlopen_self=$dlopen_self_static\n\t  fi\n\t  prefer_static_libs=built\n\tfi\n\tbuild_libtool_libs=no\n\tbuild_old_libs=yes\n\tbreak\n\t;;\n      esac\n    done\n\n    # See if our shared archives depend on static archives.\n    test -n \"$old_archive_from_new_cmds\" && build_old_libs=yes\n\n    # Go through the arguments, transforming them on the way.\n    while test \"$#\" -gt 0; do\n      arg=\"$1\"\n      shift\n      case $arg in\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\tqarg=\\\"`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\\\" ### testsuite: skip nested quoting test\n\t;;\n      *) qarg=$arg ;;\n      esac\n      libtool_args=\"$libtool_args $qarg\"\n\n      # If the previous option needs an argument, assign it.\n      if test -n \"$prev\"; then\n\tcase $prev in\n\toutput)\n\t  compile_command=\"$compile_command @OUTPUT@\"\n\t  finalize_command=\"$finalize_command @OUTPUT@\"\n\t  ;;\n\tesac\n\n\tcase $prev in\n\tdlfiles|dlprefiles)\n\t  if test \"$preload\" = no; then\n\t    # Add the symbol object into the linking commands.\n\t    compile_command=\"$compile_command @SYMFILE@\"\n\t    finalize_command=\"$finalize_command @SYMFILE@\"\n\t    preload=yes\n\t  fi\n\t  case $arg in\n\t  *.la | *.lo) ;;  # We handle these cases below.\n\t  force)\n\t    if test \"$dlself\" = no; then\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  self)\n\t    if test \"$prev\" = dlprefiles; then\n\t      dlself=yes\n\t    elif test \"$prev\" = dlfiles && test \"$dlopen_self\" != yes; then\n\t      dlself=yes\n\t    else\n\t      dlself=needless\n\t      export_dynamic=yes\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  *)\n\t    if test \"$prev\" = dlfiles; then\n\t      dlfiles=\"$dlfiles $arg\"\n\t    else\n\t      dlprefiles=\"$dlprefiles $arg\"\n\t    fi\n\t    prev=\n\t    continue\n\t    ;;\n\t  esac\n\t  ;;\n\texpsyms)\n\t  export_symbols=\"$arg\"\n\t  if test ! -f \"$arg\"; then\n\t    $echo \"$modename: symbol file \\`$arg' does not exist\"\n\t    exit $EXIT_FAILURE\n\t  fi\n\t  prev=\n\t  continue\n\t  ;;\n\texpsyms_regex)\n\t  export_symbols_regex=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tinst_prefix)\n\t  inst_prefix_dir=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tprecious_regex)\n\t  precious_files_regex=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\trelease)\n\t  release=\"-$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tobjectlist)\n\t  if test -f \"$arg\"; then\n\t    save_arg=$arg\n\t    moreargs=\n\t    for fil in `cat $save_arg`\n\t    do\n#\t      moreargs=\"$moreargs $fil\"\n\t      arg=$fil\n\t      # A libtool-controlled object.\n\n\t      # Check to see that this really is a libtool object.\n\t      if (${SED} -e '2q' $arg | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\t\tpic_object=\n\t\tnon_pic_object=\n\n\t\t# Read the .lo file\n\t\t# If there is no directory component, then add one.\n\t\tcase $arg in\n\t\t*/* | *\\\\*) . $arg ;;\n\t\t*) . ./$arg ;;\n\t\tesac\n\n\t\tif test -z \"$pic_object\" || \\\n\t\t   test -z \"$non_pic_object\" ||\n\t\t   test \"$pic_object\" = none && \\\n\t\t   test \"$non_pic_object\" = none; then\n\t\t  $echo \"$modename: cannot find name of object for \\`$arg'\" 1>&2\n\t\t  exit $EXIT_FAILURE\n\t\tfi\n\n\t\t# Extract subdirectory from the argument.\n\t\txdir=`$echo \"X$arg\" | $Xsed -e 's%/[^/]*$%%'`\n\t\tif test \"X$xdir\" = \"X$arg\"; then\n\t\t  xdir=\n\t\telse\n\t\t  xdir=\"$xdir/\"\n\t\tfi\n\n\t\tif test \"$pic_object\" != none; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  pic_object=\"$xdir$pic_object\"\n\n\t\t  if test \"$prev\" = dlfiles; then\n\t\t    if test \"$build_libtool_libs\" = yes && test \"$dlopen_support\" = yes; then\n\t\t      dlfiles=\"$dlfiles $pic_object\"\n\t\t      prev=\n\t\t      continue\n\t\t    else\n\t\t      # If libtool objects are unsupported, then we need to preload.\n\t\t      prev=dlprefiles\n\t\t    fi\n\t\t  fi\n\n\t\t  # CHECK ME:  I think I busted this.  -Ossama\n\t\t  if test \"$prev\" = dlprefiles; then\n\t\t    # Preload the old-style object.\n\t\t    dlprefiles=\"$dlprefiles $pic_object\"\n\t\t    prev=\n\t\t  fi\n\n\t\t  # A PIC object.\n\t\t  libobjs=\"$libobjs $pic_object\"\n\t\t  arg=\"$pic_object\"\n\t\tfi\n\n\t\t# Non-PIC object.\n\t\tif test \"$non_pic_object\" != none; then\n\t\t  # Prepend the subdirectory the object is found in.\n\t\t  non_pic_object=\"$xdir$non_pic_object\"\n\n\t\t  # A standard non-PIC object\n\t\t  non_pic_objects=\"$non_pic_objects $non_pic_object\"\n\t\t  if test -z \"$pic_object\" || test \"$pic_object\" = none ; then\n\t\t    arg=\"$non_pic_object\"\n\t\t  fi\n\t\telse\n\t\t  # If the PIC object exists, use it instead.\n\t\t  # $xdir was prepended to $pic_object above.\n\t\t  non_pic_object=\"$pic_object\"\n\t\t  non_pic_objects=\"$non_pic_objects $non_pic_object\"\n\t\tfi\n\t      else\n\t\t# Only an error if not doing a dry-run.\n\t\tif test -z \"$run\"; then\n\t\t  $echo \"$modename: \\`$arg' is not a valid libtool object\" 1>&2\n\t\t  exit $EXIT_FAILURE\n\t\telse\n\t\t  # Dry-run case.\n\n\t\t  # Extract subdirectory from the argument.\n\t\t  xdir=`$echo \"X$arg\" | $Xsed -e 's%/[^/]*$%%'`\n\t\t  if test \"X$xdir\" = \"X$arg\"; then\n\t\t    xdir=\n\t\t  else\n\t\t    xdir=\"$xdir/\"\n\t\t  fi\n\n\t\t  pic_object=`$echo \"X${xdir}${objdir}/${arg}\" | $Xsed -e \"$lo2o\"`\n\t\t  non_pic_object=`$echo \"X${xdir}${arg}\" | $Xsed -e \"$lo2o\"`\n\t\t  libobjs=\"$libobjs $pic_object\"\n\t\t  non_pic_objects=\"$non_pic_objects $non_pic_object\"\n\t\tfi\n\t      fi\n\t    done\n\t  else\n\t    $echo \"$modename: link input file \\`$save_arg' does not exist\"\n\t    exit $EXIT_FAILURE\n\t  fi\n\t  arg=$save_arg\n\t  prev=\n\t  continue\n\t  ;;\n\trpath | xrpath)\n\t  # We need an absolute path.\n\t  case $arg in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t  *)\n\t    $echo \"$modename: only absolute run-paths are allowed\" 1>&2\n\t    exit $EXIT_FAILURE\n\t    ;;\n\t  esac\n\t  if test \"$prev\" = rpath; then\n\t    case \"$rpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) rpath=\"$rpath $arg\" ;;\n\t    esac\n\t  else\n\t    case \"$xrpath \" in\n\t    *\" $arg \"*) ;;\n\t    *) xrpath=\"$xrpath $arg\" ;;\n\t    esac\n\t  fi\n\t  prev=\n\t  continue\n\t  ;;\n\txcompiler)\n\t  compiler_flags=\"$compiler_flags $qarg\"\n\t  prev=\n\t  compile_command=\"$compile_command $qarg\"\n\t  finalize_command=\"$finalize_command $qarg\"\n\t  continue\n\t  ;;\n\txlinker)\n\t  linker_flags=\"$linker_flags $qarg\"\n\t  compiler_flags=\"$compiler_flags $wl$qarg\"\n\t  prev=\n\t  compile_command=\"$compile_command $wl$qarg\"\n\t  finalize_command=\"$finalize_command $wl$qarg\"\n\t  continue\n\t  ;;\n\txcclinker)\n\t  linker_flags=\"$linker_flags $qarg\"\n\t  compiler_flags=\"$compiler_flags $qarg\"\n\t  prev=\n\t  compile_command=\"$compile_command $qarg\"\n\t  finalize_command=\"$finalize_command $qarg\"\n\t  continue\n\t  ;;\n\tshrext)\n  \t  shrext_cmds=\"$arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\tdarwin_framework|darwin_framework_skip)\n\t  test \"$prev\" = \"darwin_framework\" && compiler_flags=\"$compiler_flags $arg\"\n\t  compile_command=\"$compile_command $arg\"\n\t  finalize_command=\"$finalize_command $arg\"\n\t  prev=\n\t  continue\n\t  ;;\n\t*)\n\t  eval \"$prev=\\\"\\$arg\\\"\"\n\t  prev=\n\t  continue\n\t  ;;\n\tesac\n      fi # test -n \"$prev\"\n\n      prevarg=\"$arg\"\n\n      case $arg in\n      -all-static)\n\tif test -n \"$link_static_flag\"; then\n\t  compile_command=\"$compile_command $link_static_flag\"\n\t  finalize_command=\"$finalize_command $link_static_flag\"\n\tfi\n\tcontinue\n\t;;\n\n      -allow-undefined)\n\t# FIXME: remove this flag sometime in the future.\n\t$echo \"$modename: \\`-allow-undefined' is deprecated because it is the default\" 1>&2\n\tcontinue\n\t;;\n\n      -avoid-version)\n\tavoid_version=yes\n\tcontinue\n\t;;\n\n      -dlopen)\n\tprev=dlfiles\n\tcontinue\n\t;;\n\n      -dlpreopen)\n\tprev=dlprefiles\n\tcontinue\n\t;;\n\n      -export-dynamic)\n\texport_dynamic=yes\n\tcontinue\n\t;;\n\n      -export-symbols | -export-symbols-regex)\n\tif test -n \"$export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t  $echo \"$modename: more than one -exported-symbols argument is not allowed\"\n\t  exit $EXIT_FAILURE\n\tfi\n\tif test \"X$arg\" = \"X-export-symbols\"; then\n\t  prev=expsyms\n\telse\n\t  prev=expsyms_regex\n\tfi\n\tcontinue\n\t;;\n\n      -framework|-arch|-isysroot)\n\tcase \" $CC \" in\n\t  *\" ${arg} ${1} \"* | *\" ${arg}\t${1} \"*) \n\t\tprev=darwin_framework_skip ;;\n\t  *) compiler_flags=\"$compiler_flags $arg\"\n\t     prev=darwin_framework ;;\n\tesac\n\tcompile_command=\"$compile_command $arg\"\n\tfinalize_command=\"$finalize_command $arg\"\n\tcontinue\n\t;;\n\n      -inst-prefix-dir)\n\tprev=inst_prefix\n\tcontinue\n\t;;\n\n      # The native IRIX linker understands -LANG:*, -LIST:* and -LNO:*\n      # so, if we see these flags be careful not to treat them like -L\n      -L[A-Z][A-Z]*:*)\n\tcase $with_gcc/$host in\n\tno/*-*-irix* | /*-*-irix*)\n\t  compile_command=\"$compile_command $arg\"\n\t  finalize_command=\"$finalize_command $arg\"\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -L*)\n\tdir=`$echo \"X$arg\" | $Xsed -e 's/^-L//'`\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  absdir=`cd \"$dir\" && pwd`\n\t  if test -z \"$absdir\"; then\n\t    $echo \"$modename: cannot determine absolute directory name of \\`$dir'\" 1>&2\n\t    absdir=\"$dir\"\n\t    notinst_path=\"$notinst_path $dir\"\n\t  fi\n\t  dir=\"$absdir\"\n\t  ;;\n\tesac\n\tcase \"$deplibs \" in\n\t*\" -L$dir \"*) ;;\n\t*)\n\t  deplibs=\"$deplibs -L$dir\"\n\t  lib_search_path=\"$lib_search_path $dir\"\n\t  ;;\n\tesac\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2*)\n\t  testbindir=`$echo \"X$dir\" | $Xsed -e 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$dir:\"*) ;;\n\t  *) dllsearchpath=\"$dllsearchpath:$dir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  *) dllsearchpath=\"$dllsearchpath:$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n\tcontinue\n\t;;\n\n      -l*)\n\tif test \"X$arg\" = \"X-lc\" || test \"X$arg\" = \"X-lm\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-beos*)\n\t    # These systems don't actually have a C or math library (as such)\n\t    continue\n\t    ;;\n\t  *-*-os2*)\n\t    # These systems don't actually have a C library (as such)\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C and math libraries are in the System framework\n\t    deplibs=\"$deplibs -framework System\"\n\t    continue\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    test \"X$arg\" = \"X-lc\" && continue\n\t    ;;\n\t  esac\n\telif test \"X$arg\" = \"X-lc_r\"; then\n\t case $host in\n\t *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t   # Do not include libc_r directly, use -pthread flag.\n\t   continue\n\t   ;;\n\t esac\n\tfi\n\tdeplibs=\"$deplibs $arg\"\n\tcontinue\n\t;;\n\n      # Tru64 UNIX uses -model [arg] to determine the layout of C++\n      # classes, name mangling, and exception handling.\n      -model)\n\tcompile_command=\"$compile_command $arg\"\n\tcompiler_flags=\"$compiler_flags $arg\"\n\tfinalize_command=\"$finalize_command $arg\"\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n     -mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe)\n\tcompiler_flags=\"$compiler_flags $arg\"\n\tcompile_command=\"$compile_command $arg\"\n\tfinalize_command=\"$finalize_command $arg\"\n\tcontinue\n\t;;\n\n      -module)\n\tmodule=yes\n\tcontinue\n\t;;\n\n      # -64, -mips[0-9] enable 64-bit mode on the SGI compiler\n      # -r[0-9][0-9]* specifies the processor on the SGI compiler\n      # -xarch=*, -xtarget=* enable 64-bit mode on the Sun compiler\n      # +DA*, +DD* enable 64-bit mode on the HP compiler\n      # -q* pass through compiler args for the IBM compiler\n      # -m* pass through architecture-specific compiler args for GCC\n      # -m*, -t[45]*, -txscale* pass through architecture-specific\n      # compiler args for GCC\n      # -pg pass through profiling flag for GCC\n      # @file GCC response files\n      -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*|-pg| \\\n      -t[45]*|-txscale*|@*)\n\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\targ=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\n\tcase $arg in\n\t*[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\t  arg=\"\\\"$arg\\\"\"\n\t  ;;\n\tesac\n        compile_command=\"$compile_command $arg\"\n        finalize_command=\"$finalize_command $arg\"\n        compiler_flags=\"$compiler_flags $arg\"\n        continue\n        ;;\n\n      -shrext)\n\tprev=shrext\n\tcontinue\n\t;;\n\n      -no-fast-install)\n\tfast_install=no\n\tcontinue\n\t;;\n\n      -no-install)\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2*)\n\t  # The PATH hackery in wrapper scripts is required on Windows\n\t  # in order for the loader to find any dlls it needs.\n\t  $echo \"$modename: warning: \\`-no-install' is ignored for $host\" 1>&2\n\t  $echo \"$modename: warning: assuming \\`-no-fast-install' instead\" 1>&2\n\t  fast_install=no\n\t  ;;\n\t*) no_install=yes ;;\n\tesac\n\tcontinue\n\t;;\n\n      -no-undefined)\n\tallow_undefined=no\n\tcontinue\n\t;;\n\n      -objectlist)\n\tprev=objectlist\n\tcontinue\n\t;;\n\n      -o) prev=output ;;\n\n      -precious-files-regex)\n\tprev=precious_regex\n\tcontinue\n\t;;\n\n      -release)\n\tprev=release\n\tcontinue\n\t;;\n\n      -rpath)\n\tprev=rpath\n\tcontinue\n\t;;\n\n      -R)\n\tprev=xrpath\n\tcontinue\n\t;;\n\n      -R*)\n\tdir=`$echo \"X$arg\" | $Xsed -e 's/^-R//'`\n\t# We need an absolute path.\n\tcase $dir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n\t*)\n\t  $echo \"$modename: only absolute run-paths are allowed\" 1>&2\n\t  exit $EXIT_FAILURE\n\t  ;;\n\tesac\n\tcase \"$xrpath \" in\n\t*\" $dir \"*) ;;\n\t*) xrpath=\"$xrpath $dir\" ;;\n\tesac\n\tcontinue\n\t;;\n\n      -static)\n\t# The effects of -static are defined in a previous loop.\n\t# We used to do the same as -all-static on platforms that\n\t# didn't have a PIC flag, but the assumption that the effects\n\t# would be equivalent was wrong.  It would break on at least\n\t# Digital Unix and AIX.\n\tcontinue\n\t;;\n\n      -thread-safe)\n\tthread_safe=yes\n\tcontinue\n\t;;\n\n      -version-info)\n\tprev=vinfo\n\tcontinue\n\t;;\n      -version-number)\n\tprev=vinfo\n\tvinfo_number=yes\n\tcontinue\n\t;;\n\n      -Wc,*)\n\targs=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\" -e 's/^-Wc,//'`\n\targ=\n\tsave_ifs=\"$IFS\"; IFS=','\n\tfor flag in $args; do\n\t  IFS=\"$save_ifs\"\n\t  case $flag in\n\t    *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\t    flag=\"\\\"$flag\\\"\"\n\t    ;;\n\t  esac\n\t  arg=\"$arg $wl$flag\"\n\t  compiler_flags=\"$compiler_flags $flag\"\n\tdone\n\tIFS=\"$save_ifs\"\n\targ=`$echo \"X$arg\" | $Xsed -e \"s/^ //\"`\n\t;;\n\n      -Wl,*)\n\targs=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\" -e 's/^-Wl,//'`\n\targ=\n\tsave_ifs=\"$IFS\"; IFS=','\n\tfor flag in $args; do\n\t  IFS=\"$save_ifs\"\n\t  case $flag in\n\t    *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\t    flag=\"\\\"$flag\\\"\"\n\t    ;;\n\t  esac\n\t  arg=\"$arg $wl$flag\"\n\t  compiler_flags=\"$compiler_flags $wl$flag\"\n\t  linker_flags=\"$linker_flags $flag\"\n\tdone\n\tIFS=\"$save_ifs\"\n\targ=`$echo \"X$arg\" | $Xsed -e \"s/^ //\"`\n\t;;\n\n      -Xcompiler)\n\tprev=xcompiler\n\tcontinue\n\t;;\n\n      -Xlinker)\n\tprev=xlinker\n\tcontinue\n\t;;\n\n      -XCClinker)\n\tprev=xcclinker\n\tcontinue\n\t;;\n\n      # Some other compiler flag.\n      -* | +*)\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\targ=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\n\tcase $arg in\n\t*[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\t  arg=\"\\\"$arg\\\"\"\n\t  ;;\n\tesac\n\t;;\n\n      *.$objext)\n\t# A standard object.\n\tobjs=\"$objs $arg\"\n\t;;\n\n      *.lo)\n\t# A libtool-controlled object.\n\n\t# Check to see that this really is a libtool object.\n\tif (${SED} -e '2q' $arg | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\t  pic_object=\n\t  non_pic_object=\n\n\t  # Read the .lo file\n\t  # If there is no directory component, then add one.\n\t  case $arg in\n\t  */* | *\\\\*) . $arg ;;\n\t  *) . ./$arg ;;\n\t  esac\n\n\t  if test -z \"$pic_object\" || \\\n\t     test -z \"$non_pic_object\" ||\n\t     test \"$pic_object\" = none && \\\n\t     test \"$non_pic_object\" = none; then\n\t    $echo \"$modename: cannot find name of object for \\`$arg'\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\n\t  # Extract subdirectory from the argument.\n\t  xdir=`$echo \"X$arg\" | $Xsed -e 's%/[^/]*$%%'`\n\t  if test \"X$xdir\" = \"X$arg\"; then\n\t    xdir=\n \t  else\n\t    xdir=\"$xdir/\"\n\t  fi\n\n\t  if test \"$pic_object\" != none; then\n\t    # Prepend the subdirectory the object is found in.\n\t    pic_object=\"$xdir$pic_object\"\n\n\t    if test \"$prev\" = dlfiles; then\n\t      if test \"$build_libtool_libs\" = yes && test \"$dlopen_support\" = yes; then\n\t\tdlfiles=\"$dlfiles $pic_object\"\n\t\tprev=\n\t\tcontinue\n\t      else\n\t\t# If libtool objects are unsupported, then we need to preload.\n\t\tprev=dlprefiles\n\t      fi\n\t    fi\n\n\t    # CHECK ME:  I think I busted this.  -Ossama\n\t    if test \"$prev\" = dlprefiles; then\n\t      # Preload the old-style object.\n\t      dlprefiles=\"$dlprefiles $pic_object\"\n\t      prev=\n\t    fi\n\n\t    # A PIC object.\n\t    libobjs=\"$libobjs $pic_object\"\n\t    arg=\"$pic_object\"\n\t  fi\n\n\t  # Non-PIC object.\n\t  if test \"$non_pic_object\" != none; then\n\t    # Prepend the subdirectory the object is found in.\n\t    non_pic_object=\"$xdir$non_pic_object\"\n\n\t    # A standard non-PIC object\n\t    non_pic_objects=\"$non_pic_objects $non_pic_object\"\n\t    if test -z \"$pic_object\" || test \"$pic_object\" = none ; then\n\t      arg=\"$non_pic_object\"\n\t    fi\n\t  else\n\t    # If the PIC object exists, use it instead.\n\t    # $xdir was prepended to $pic_object above.\n\t    non_pic_object=\"$pic_object\"\n\t    non_pic_objects=\"$non_pic_objects $non_pic_object\"\n\t  fi\n\telse\n\t  # Only an error if not doing a dry-run.\n\t  if test -z \"$run\"; then\n\t    $echo \"$modename: \\`$arg' is not a valid libtool object\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  else\n\t    # Dry-run case.\n\n\t    # Extract subdirectory from the argument.\n\t    xdir=`$echo \"X$arg\" | $Xsed -e 's%/[^/]*$%%'`\n\t    if test \"X$xdir\" = \"X$arg\"; then\n\t      xdir=\n\t    else\n\t      xdir=\"$xdir/\"\n\t    fi\n\n\t    pic_object=`$echo \"X${xdir}${objdir}/${arg}\" | $Xsed -e \"$lo2o\"`\n\t    non_pic_object=`$echo \"X${xdir}${arg}\" | $Xsed -e \"$lo2o\"`\n\t    libobjs=\"$libobjs $pic_object\"\n\t    non_pic_objects=\"$non_pic_objects $non_pic_object\"\n\t  fi\n\tfi\n\t;;\n\n      *.$libext)\n\t# An archive.\n\tdeplibs=\"$deplibs $arg\"\n\told_deplibs=\"$old_deplibs $arg\"\n\tcontinue\n\t;;\n\n      *.la)\n\t# A libtool-controlled library.\n\n\tif test \"$prev\" = dlfiles; then\n\t  # This library was specified with -dlopen.\n\t  dlfiles=\"$dlfiles $arg\"\n\t  prev=\n\telif test \"$prev\" = dlprefiles; then\n\t  # The library was specified with -dlpreopen.\n\t  dlprefiles=\"$dlprefiles $arg\"\n\t  prev=\n\telse\n\t  deplibs=\"$deplibs $arg\"\n\tfi\n\tcontinue\n\t;;\n\n      # Some other compiler argument.\n      *)\n\t# Unknown arguments in both finalize_command and compile_command need\n\t# to be aesthetically quoted because they are evaled later.\n\targ=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\n\tcase $arg in\n\t*[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\t  arg=\"\\\"$arg\\\"\"\n\t  ;;\n\tesac\n\t;;\n      esac # arg\n\n      # Now actually substitute the argument into the commands.\n      if test -n \"$arg\"; then\n\tcompile_command=\"$compile_command $arg\"\n\tfinalize_command=\"$finalize_command $arg\"\n      fi\n    done # argument parsing loop\n\n    if test -n \"$prev\"; then\n      $echo \"$modename: the \\`$prevarg' option requires an argument\" 1>&2\n      $echo \"$help\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n\n    if test \"$export_dynamic\" = yes && test -n \"$export_dynamic_flag_spec\"; then\n      eval arg=\\\"$export_dynamic_flag_spec\\\"\n      compile_command=\"$compile_command $arg\"\n      finalize_command=\"$finalize_command $arg\"\n    fi\n\n    oldlibs=\n    # calculate the name of the file, without its directory\n    outputname=`$echo \"X$output\" | $Xsed -e 's%^.*/%%'`\n    libobjs_save=\"$libobjs\"\n\n    if test -n \"$shlibpath_var\"; then\n      # get the directories listed in $shlibpath_var\n      eval shlib_search_path=\\`\\$echo \\\"X\\${$shlibpath_var}\\\" \\| \\$Xsed -e \\'s/:/ /g\\'\\`\n    else\n      shlib_search_path=\n    fi\n    eval sys_lib_search_path=\\\"$sys_lib_search_path_spec\\\"\n    eval sys_lib_dlsearch_path=\\\"$sys_lib_dlsearch_path_spec\\\"\n\n    output_objdir=`$echo \"X$output\" | $Xsed -e 's%/[^/]*$%%'`\n    if test \"X$output_objdir\" = \"X$output\"; then\n      output_objdir=\"$objdir\"\n    else\n      output_objdir=\"$output_objdir/$objdir\"\n    fi\n    # Create the object directory.\n    if test ! -d \"$output_objdir\"; then\n      $show \"$mkdir $output_objdir\"\n      $run $mkdir $output_objdir\n      exit_status=$?\n      if test \"$exit_status\" -ne 0 && test ! -d \"$output_objdir\"; then\n\texit $exit_status\n      fi\n    fi\n\n    # Determine the type of output\n    case $output in\n    \"\")\n      $echo \"$modename: you must specify an output file\" 1>&2\n      $echo \"$help\" 1>&2\n      exit $EXIT_FAILURE\n      ;;\n    *.$libext) linkmode=oldlib ;;\n    *.lo | *.$objext) linkmode=obj ;;\n    *.la) linkmode=lib ;;\n    *) linkmode=prog ;; # Anything else should be a program.\n    esac\n\n    case $host in\n    *cygwin* | *mingw* | *pw32*)\n      # don't eliminate duplications in $postdeps and $predeps\n      duplicate_compiler_generated_deps=yes\n      ;;\n    *)\n      duplicate_compiler_generated_deps=$duplicate_deps\n      ;;\n    esac\n    specialdeplibs=\n\n    libs=\n    # Find all interdependent deplibs by searching for libraries\n    # that are linked more than once (e.g. -la -lb -la)\n    for deplib in $deplibs; do\n      if test \"X$duplicate_deps\" = \"Xyes\" ; then\n\tcase \"$libs \" in\n\t*\" $deplib \"*) specialdeplibs=\"$specialdeplibs $deplib\" ;;\n\tesac\n      fi\n      libs=\"$libs $deplib\"\n    done\n\n    if test \"$linkmode\" = lib; then\n      libs=\"$predeps $libs $compiler_lib_search_path $postdeps\"\n\n      # Compute libraries that are listed more than once in $predeps\n      # $postdeps and mark them as special (i.e., whose duplicates are\n      # not to be eliminated).\n      pre_post_deps=\n      if test \"X$duplicate_compiler_generated_deps\" = \"Xyes\" ; then\n\tfor pre_post_dep in $predeps $postdeps; do\n\t  case \"$pre_post_deps \" in\n\t  *\" $pre_post_dep \"*) specialdeplibs=\"$specialdeplibs $pre_post_deps\" ;;\n\t  esac\n\t  pre_post_deps=\"$pre_post_deps $pre_post_dep\"\n\tdone\n      fi\n      pre_post_deps=\n    fi\n\n    deplibs=\n    newdependency_libs=\n    newlib_search_path=\n    need_relink=no # whether we're linking any uninstalled libtool libraries\n    notinst_deplibs= # not-installed libtool libraries\n    case $linkmode in\n    lib)\n\tpasses=\"conv link\"\n\tfor file in $dlfiles $dlprefiles; do\n\t  case $file in\n\t  *.la) ;;\n\t  *)\n\t    $echo \"$modename: libraries can \\`-dlopen' only libtool libraries: $file\" 1>&2\n\t    exit $EXIT_FAILURE\n\t    ;;\n\t  esac\n\tdone\n\t;;\n    prog)\n\tcompile_deplibs=\n\tfinalize_deplibs=\n\talldeplibs=no\n\tnewdlfiles=\n\tnewdlprefiles=\n\tpasses=\"conv scan dlopen dlpreopen link\"\n\t;;\n    *)  passes=\"conv\"\n\t;;\n    esac\n    for pass in $passes; do\n      if test \"$linkmode,$pass\" = \"lib,link\" ||\n\t test \"$linkmode,$pass\" = \"prog,scan\"; then\n\tlibs=\"$deplibs\"\n\tdeplibs=\n      fi\n      if test \"$linkmode\" = prog; then\n\tcase $pass in\n\tdlopen) libs=\"$dlfiles\" ;;\n\tdlpreopen) libs=\"$dlprefiles\" ;;\n\tlink) libs=\"$deplibs %DEPLIBS% $dependency_libs\" ;;\n\tesac\n      fi\n      if test \"$pass\" = dlopen; then\n\t# Collect dlpreopened libraries\n\tsave_deplibs=\"$deplibs\"\n\tdeplibs=\n      fi\n      for deplib in $libs; do\n\tlib=\n\tfound=no\n\tcase $deplib in\n\t-mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe)\n\t  if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$deplib $compile_deplibs\"\n\t    finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t  else\n\t    compiler_flags=\"$compiler_flags $deplib\"\n\t  fi\n\t  continue\n\t  ;;\n\t-l*)\n\t  if test \"$linkmode\" != lib && test \"$linkmode\" != prog; then\n\t    $echo \"$modename: warning: \\`-l' is ignored for archives/objects\" 1>&2\n\t    continue\n\t  fi\n\t  name=`$echo \"X$deplib\" | $Xsed -e 's/^-l//'`\n\t  for searchdir in $newlib_search_path $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t    for search_ext in .la $std_shrext .so .a; do\n\t      # Search the libtool library\n\t      lib=\"$searchdir/lib${name}${search_ext}\"\n\t      if test -f \"$lib\"; then\n\t\tif test \"$search_ext\" = \".la\"; then\n\t\t  found=yes\n\t\telse\n\t\t  found=no\n\t\tfi\n\t\tbreak 2\n\t      fi\n\t    done\n\t  done\n\t  if test \"$found\" != yes; then\n\t    # deplib doesn't seem to be a libtool library\n\t    if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      deplibs=\"$deplib $deplibs\"\n\t      test \"$linkmode\" = lib && newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    continue\n\t  else # deplib is a libtool library\n\t    # If $allow_libtool_libs_with_static_runtimes && $deplib is a stdlib,\n\t    # We need to do some special things here, and not later.\n\t    if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t      case \" $predeps $postdeps \" in\n\t      *\" $deplib \"*)\n\t\tif (${SED} -e '2q' $lib |\n                    grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\t\t  library_names=\n\t\t  old_library=\n\t\t  case $lib in\n\t\t  */* | *\\\\*) . $lib ;;\n\t\t  *) . ./$lib ;;\n\t\t  esac\n\t\t  for l in $old_library $library_names; do\n\t\t    ll=\"$l\"\n\t\t  done\n\t\t  if test \"X$ll\" = \"X$old_library\" ; then # only static version available\n\t\t    found=no\n\t\t    ladir=`$echo \"X$lib\" | $Xsed -e 's%/[^/]*$%%'`\n\t\t    test \"X$ladir\" = \"X$lib\" && ladir=\".\"\n\t\t    lib=$ladir/$old_library\n\t\t    if test \"$linkmode,$pass\" = \"prog,link\"; then\n\t\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t\t    else\n\t\t      deplibs=\"$deplib $deplibs\"\n\t\t      test \"$linkmode\" = lib && newdependency_libs=\"$deplib $newdependency_libs\"\n\t\t    fi\n\t\t    continue\n\t\t  fi\n\t\tfi\n\t        ;;\n\t      *) ;;\n\t      esac\n\t    fi\n\t  fi\n\t  ;; # -l\n\t-L*)\n\t  case $linkmode in\n\t  lib)\n\t    deplibs=\"$deplib $deplibs\"\n\t    test \"$pass\" = conv && continue\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    newlib_search_path=\"$newlib_search_path \"`$echo \"X$deplib\" | $Xsed -e 's/^-L//'`\n\t    ;;\n\t  prog)\n\t    if test \"$pass\" = conv; then\n\t      deplibs=\"$deplib $deplibs\"\n\t      continue\n\t    fi\n\t    if test \"$pass\" = scan; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    newlib_search_path=\"$newlib_search_path \"`$echo \"X$deplib\" | $Xsed -e 's/^-L//'`\n\t    ;;\n\t  *)\n\t    $echo \"$modename: warning: \\`-L' is ignored for archives/objects\" 1>&2\n\t    ;;\n\t  esac # linkmode\n\t  continue\n\t  ;; # -L\n\t-R*)\n\t  if test \"$pass\" = link; then\n\t    dir=`$echo \"X$deplib\" | $Xsed -e 's/^-R//'`\n\t    # Make sure the xrpath contains only unique directories.\n\t    case \"$xrpath \" in\n\t    *\" $dir \"*) ;;\n\t    *) xrpath=\"$xrpath $dir\" ;;\n\t    esac\n\t  fi\n\t  deplibs=\"$deplib $deplibs\"\n\t  continue\n\t  ;;\n\t*.la) lib=\"$deplib\" ;;\n\t*.$libext)\n\t  if test \"$pass\" = conv; then\n\t    deplibs=\"$deplib $deplibs\"\n\t    continue\n\t  fi\n\t  case $linkmode in\n\t  lib)\n\t    valid_a_lib=no\n\t    case $deplibs_check_method in\n\t      match_pattern*)\n\t\tset dummy $deplibs_check_method\n\t        match_pattern_regex=`expr \"$deplibs_check_method\" : \"$2 \\(.*\\)\"`\n\t\tif eval $echo \\\"$deplib\\\" 2>/dev/null \\\n\t\t    | $SED 10q \\\n\t\t    | $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t  valid_a_lib=yes\n\t\tfi\n\t\t;;\n\t      pass_all)\n\t\tvalid_a_lib=yes\n\t\t;;\n            esac\n\t    if test \"$valid_a_lib\" != yes; then\n\t      $echo\n\t      $echo \"*** Warning: Trying to link with static lib archive $deplib.\"\n\t      $echo \"*** I have the capability to make that library automatically link in when\"\n\t      $echo \"*** you link to this library.  But I can only do this if you have a\"\n\t      $echo \"*** shared version of the library, which you do not appear to have\"\n\t      $echo \"*** because the file extensions .$libext of this argument makes me believe\"\n\t      $echo \"*** that it is just a static archive that I should not used here.\"\n\t    else\n\t      $echo\n\t      $echo \"*** Warning: Linking the shared library $output against the\"\n\t      $echo \"*** static library $deplib is not portable!\"\n\t      deplibs=\"$deplib $deplibs\"\n\t    fi\n\t    continue\n\t    ;;\n\t  prog)\n\t    if test \"$pass\" != link; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    fi\n\t    continue\n\t    ;;\n\t  esac # linkmode\n\t  ;; # *.$libext\n\t*.lo | *.$objext)\n\t  if test \"$pass\" = conv; then\n\t    deplibs=\"$deplib $deplibs\"\n\t  elif test \"$linkmode\" = prog; then\n\t    if test \"$pass\" = dlpreopen || test \"$dlopen_support\" != yes || test \"$build_libtool_libs\" = no; then\n\t      # If there is no dlopen support or we're linking statically,\n\t      # we need to preload.\n\t      newdlprefiles=\"$newdlprefiles $deplib\"\n\t      compile_deplibs=\"$deplib $compile_deplibs\"\n\t      finalize_deplibs=\"$deplib $finalize_deplibs\"\n\t    else\n\t      newdlfiles=\"$newdlfiles $deplib\"\n\t    fi\n\t  fi\n\t  continue\n\t  ;;\n\t%DEPLIBS%)\n\t  alldeplibs=yes\n\t  continue\n\t  ;;\n\tesac # case $deplib\n\tif test \"$found\" = yes || test -f \"$lib\"; then :\n\telse\n\t  $echo \"$modename: cannot find the library \\`$lib' or unhandled argument \\`$deplib'\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\n\t# Check to see that this really is a libtool archive.\n\tif (${SED} -e '2q' $lib | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then :\n\telse\n\t  $echo \"$modename: \\`$lib' is not a valid libtool archive\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\n\tladir=`$echo \"X$lib\" | $Xsed -e 's%/[^/]*$%%'`\n\ttest \"X$ladir\" = \"X$lib\" && ladir=\".\"\n\n\tdlname=\n\tdlopen=\n\tdlpreopen=\n\tlibdir=\n\tlibrary_names=\n\told_library=\n\t# If the library was installed with an old release of libtool,\n\t# it will not redefine variables installed, or shouldnotlink\n\tinstalled=yes\n\tshouldnotlink=no\n\tavoidtemprpath=\n\n\n\t# Read the .la file\n\tcase $lib in\n\t*/* | *\\\\*) . $lib ;;\n\t*) . ./$lib ;;\n\tesac\n\n\tif test \"$linkmode,$pass\" = \"lib,link\" ||\n\t   test \"$linkmode,$pass\" = \"prog,scan\" ||\n\t   { test \"$linkmode\" != prog && test \"$linkmode\" != lib; }; then\n\t  test -n \"$dlopen\" && dlfiles=\"$dlfiles $dlopen\"\n\t  test -n \"$dlpreopen\" && dlprefiles=\"$dlprefiles $dlpreopen\"\n\tfi\n\n\tif test \"$pass\" = conv; then\n\t  # Only check for convenience libraries\n\t  deplibs=\"$lib $deplibs\"\n\t  if test -z \"$libdir\"; then\n\t    if test -z \"$old_library\"; then\n\t      $echo \"$modename: cannot find name of link library for \\`$lib'\" 1>&2\n\t      exit $EXIT_FAILURE\n\t    fi\n\t    # It is a libtool convenience library, so add in its objects.\n\t    convenience=\"$convenience $ladir/$objdir/$old_library\"\n\t    old_convenience=\"$old_convenience $ladir/$objdir/$old_library\"\n\t    tmp_libs=\n\t    for deplib in $dependency_libs; do\n\t      deplibs=\"$deplib $deplibs\"\n              if test \"X$duplicate_deps\" = \"Xyes\" ; then\n\t        case \"$tmp_libs \" in\n\t        *\" $deplib \"*) specialdeplibs=\"$specialdeplibs $deplib\" ;;\n\t        esac\n              fi\n\t      tmp_libs=\"$tmp_libs $deplib\"\n\t    done\n\t  elif test \"$linkmode\" != prog && test \"$linkmode\" != lib; then\n\t    $echo \"$modename: \\`$lib' is not a convenience library\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\t  continue\n\tfi # $pass = conv\n\n\n\t# Get the name of the library we link against.\n\tlinklib=\n\tfor l in $old_library $library_names; do\n\t  linklib=\"$l\"\n\tdone\n\tif test -z \"$linklib\"; then\n\t  $echo \"$modename: cannot find name of link library for \\`$lib'\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\n\t# This library was specified with -dlopen.\n\tif test \"$pass\" = dlopen; then\n\t  if test -z \"$libdir\"; then\n\t    $echo \"$modename: cannot -dlopen a convenience library: \\`$lib'\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\t  if test -z \"$dlname\" ||\n\t     test \"$dlopen_support\" != yes ||\n\t     test \"$build_libtool_libs\" = no; then\n\t    # If there is no dlname, no dlopen support or we're linking\n\t    # statically, we need to preload.  We also need to preload any\n\t    # dependent libraries so libltdl's deplib preloader doesn't\n\t    # bomb out in the load deplibs phase.\n\t    dlprefiles=\"$dlprefiles $lib $dependency_libs\"\n\t  else\n\t    newdlfiles=\"$newdlfiles $lib\"\n\t  fi\n\t  continue\n\tfi # $pass = dlopen\n\n\t# We need an absolute path.\n\tcase $ladir in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs_ladir=\"$ladir\" ;;\n\t*)\n\t  abs_ladir=`cd \"$ladir\" && pwd`\n\t  if test -z \"$abs_ladir\"; then\n\t    $echo \"$modename: warning: cannot determine absolute directory name of \\`$ladir'\" 1>&2\n\t    $echo \"$modename: passing it literally to the linker, although it might fail\" 1>&2\n\t    abs_ladir=\"$ladir\"\n\t  fi\n\t  ;;\n\tesac\n\tlaname=`$echo \"X$lib\" | $Xsed -e 's%^.*/%%'`\n\n\t# Find the relevant object directory and library name.\n\tif test \"X$installed\" = Xyes; then\n\t  if test ! -f \"$libdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    $echo \"$modename: warning: library \\`$lib' was moved.\" 1>&2\n\t    dir=\"$ladir\"\n\t    absdir=\"$abs_ladir\"\n\t    libdir=\"$abs_ladir\"\n\t  else\n\t    dir=\"$libdir\"\n\t    absdir=\"$libdir\"\n\t  fi\n\t  test \"X$hardcode_automatic\" = Xyes && avoidtemprpath=yes\n\telse\n\t  if test ! -f \"$ladir/$objdir/$linklib\" && test -f \"$abs_ladir/$linklib\"; then\n\t    dir=\"$ladir\"\n\t    absdir=\"$abs_ladir\"\n\t    # Remove this search path later\n\t    notinst_path=\"$notinst_path $abs_ladir\"\n\t  else\n\t    dir=\"$ladir/$objdir\"\n\t    absdir=\"$abs_ladir/$objdir\"\n\t    # Remove this search path later\n\t    notinst_path=\"$notinst_path $abs_ladir\"\n\t  fi\n\tfi # $installed = yes\n\tname=`$echo \"X$laname\" | $Xsed -e 's/\\.la$//' -e 's/^lib//'`\n\n\t# This library was specified with -dlpreopen.\n\tif test \"$pass\" = dlpreopen; then\n\t  if test -z \"$libdir\"; then\n\t    $echo \"$modename: cannot -dlpreopen a convenience library: \\`$lib'\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\t  # Prefer using a static library (so that no silly _DYNAMIC symbols\n\t  # are required to link).\n\t  if test -n \"$old_library\"; then\n\t    newdlprefiles=\"$newdlprefiles $dir/$old_library\"\n\t  # Otherwise, use the dlname, so that lt_dlopen finds it.\n\t  elif test -n \"$dlname\"; then\n\t    newdlprefiles=\"$newdlprefiles $dir/$dlname\"\n\t  else\n\t    newdlprefiles=\"$newdlprefiles $dir/$linklib\"\n\t  fi\n\tfi # $pass = dlpreopen\n\n\tif test -z \"$libdir\"; then\n\t  # Link the convenience library\n\t  if test \"$linkmode\" = lib; then\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t  elif test \"$linkmode,$pass\" = \"prog,link\"; then\n\t    compile_deplibs=\"$dir/$old_library $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$old_library $finalize_deplibs\"\n\t  else\n\t    deplibs=\"$lib $deplibs\" # used for prog,scan pass\n\t  fi\n\t  continue\n\tfi\n\n\n\tif test \"$linkmode\" = prog && test \"$pass\" != link; then\n\t  newlib_search_path=\"$newlib_search_path $ladir\"\n\t  deplibs=\"$lib $deplibs\"\n\n\t  linkalldeplibs=no\n\t  if test \"$link_all_deplibs\" != no || test -z \"$library_names\" ||\n\t     test \"$build_libtool_libs\" = no; then\n\t    linkalldeplibs=yes\n\t  fi\n\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    case $deplib in\n\t    -L*) newlib_search_path=\"$newlib_search_path \"`$echo \"X$deplib\" | $Xsed -e 's/^-L//'`;; ### testsuite: skip nested quoting test\n\t    esac\n\t    # Need to link against all dependency_libs?\n\t    if test \"$linkalldeplibs\" = yes; then\n\t      deplibs=\"$deplib $deplibs\"\n\t    else\n\t      # Need to hardcode shared library paths\n\t      # or/and link against static libraries\n\t      newdependency_libs=\"$deplib $newdependency_libs\"\n\t    fi\n\t    if test \"X$duplicate_deps\" = \"Xyes\" ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) specialdeplibs=\"$specialdeplibs $deplib\" ;;\n\t      esac\n\t    fi\n\t    tmp_libs=\"$tmp_libs $deplib\"\n\t  done # for deplib\n\t  continue\n\tfi # $linkmode = prog...\n\n\tif test \"$linkmode,$pass\" = \"prog,link\"; then\n\t  if test -n \"$library_names\" &&\n\t     { test \"$prefer_static_libs\" = no || test -z \"$old_library\"; }; then\n\t    # We need to hardcode the library path\n\t    if test -n \"$shlibpath_var\" && test -z \"$avoidtemprpath\" ; then\n\t      # Make sure the rpath contains only unique directories.\n\t      case \"$temp_rpath \" in\n\t      *\" $dir \"*) ;;\n\t      *\" $absdir \"*) ;;\n\t      *) temp_rpath=\"$temp_rpath $absdir\" ;;\n\t      esac\n\t    fi\n\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) compile_rpath=\"$compile_rpath $absdir\"\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) finalize_rpath=\"$finalize_rpath $libdir\"\n\t      esac\n\t      ;;\n\t    esac\n\t  fi # $linkmode,$pass = prog,link...\n\n\t  if test \"$alldeplibs\" = yes &&\n\t     { test \"$deplibs_check_method\" = pass_all ||\n\t       { test \"$build_libtool_libs\" = yes &&\n\t\t test -n \"$library_names\"; }; }; then\n\t    # We only need to search for static libraries\n\t    continue\n\t  fi\n\tfi\n\n\tlink_static=no # Whether the deplib will be linked statically\n\tuse_static_libs=$prefer_static_libs\n\tif test \"$use_static_libs\" = built && test \"$installed\" = yes ; then\n\t  use_static_libs=no\n\tfi\n\tif test -n \"$library_names\" &&\n\t   { test \"$use_static_libs\" = no || test -z \"$old_library\"; }; then\n\t  if test \"$installed\" = no; then\n\t    notinst_deplibs=\"$notinst_deplibs $lib\"\n\t    need_relink=yes\n\t  fi\n\t  # This is a shared library\n\n\t  # Warn about portability, can't link against -module's on\n\t  # some systems (darwin)\n\t  if test \"$shouldnotlink\" = yes && test \"$pass\" = link ; then\n\t    $echo\n\t    if test \"$linkmode\" = prog; then\n\t      $echo \"*** Warning: Linking the executable $output against the loadable module\"\n\t    else\n\t      $echo \"*** Warning: Linking the shared library $output against the loadable module\"\n\t    fi\n\t    $echo \"*** $linklib is not portable!\"\n\t  fi\n\t  if test \"$linkmode\" = lib &&\n\t     test \"$hardcode_into_libs\" = yes; then\n\t    # Hardcode the library path.\n\t    # Skip directories that are in the system default run-time\n\t    # search path.\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $absdir \"*) ;;\n\t    *)\n\t      case \"$compile_rpath \" in\n\t      *\" $absdir \"*) ;;\n\t      *) compile_rpath=\"$compile_rpath $absdir\"\n\t      esac\n\t      ;;\n\t    esac\n\t    case \" $sys_lib_dlsearch_path \" in\n\t    *\" $libdir \"*) ;;\n\t    *)\n\t      case \"$finalize_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) finalize_rpath=\"$finalize_rpath $libdir\"\n\t      esac\n\t      ;;\n\t    esac\n\t  fi\n\n\t  if test -n \"$old_archive_from_expsyms_cmds\"; then\n\t    # figure out the soname\n\t    set dummy $library_names\n\t    realname=\"$2\"\n\t    shift; shift\n\t    libname=`eval \\\\$echo \\\"$libname_spec\\\"`\n\t    # use dlname if we got it. it's perfectly good, no?\n\t    if test -n \"$dlname\"; then\n\t      soname=\"$dlname\"\n\t    elif test -n \"$soname_spec\"; then\n\t      # bleh windows\n\t      case $host in\n\t      *cygwin* | mingw*)\n\t\tmajor=`expr $current - $age`\n\t\tversuffix=\"-$major\"\n\t\t;;\n\t      esac\n\t      eval soname=\\\"$soname_spec\\\"\n\t    else\n\t      soname=\"$realname\"\n\t    fi\n\n\t    # Make a new name for the extract_expsyms_cmds to use\n\t    soroot=\"$soname\"\n\t    soname=`$echo $soroot | ${SED} -e 's/^.*\\///'`\n\t    newlib=\"libimp-`$echo $soname | ${SED} 's/^lib//;s/\\.dll$//'`.a\"\n\n\t    # If the library has no export list, then create one now\n\t    if test -f \"$output_objdir/$soname-def\"; then :\n\t    else\n\t      $show \"extracting exported symbol list from \\`$soname'\"\n\t      save_ifs=\"$IFS\"; IFS='~'\n\t      cmds=$extract_expsyms_cmds\n\t      for cmd in $cmds; do\n\t\tIFS=\"$save_ifs\"\n\t\teval cmd=\\\"$cmd\\\"\n\t\t$show \"$cmd\"\n\t\t$run eval \"$cmd\" || exit $?\n\t      done\n\t      IFS=\"$save_ifs\"\n\t    fi\n\n\t    # Create $newlib\n\t    if test -f \"$output_objdir/$newlib\"; then :; else\n\t      $show \"generating import library for \\`$soname'\"\n\t      save_ifs=\"$IFS\"; IFS='~'\n\t      cmds=$old_archive_from_expsyms_cmds\n\t      for cmd in $cmds; do\n\t\tIFS=\"$save_ifs\"\n\t\teval cmd=\\\"$cmd\\\"\n\t\t$show \"$cmd\"\n\t\t$run eval \"$cmd\" || exit $?\n\t      done\n\t      IFS=\"$save_ifs\"\n\t    fi\n\t    # make sure the library variables are pointing to the new library\n\t    dir=$output_objdir\n\t    linklib=$newlib\n\t  fi # test -n \"$old_archive_from_expsyms_cmds\"\n\n\t  if test \"$linkmode\" = prog || test \"$mode\" != relink; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    lib_linked=yes\n\t    case $hardcode_action in\n\t    immediate | unsupported)\n\t      if test \"$hardcode_direct\" = no; then\n\t\tadd=\"$dir/$linklib\"\n\t\tcase $host in\n\t\t  *-*-sco3.2v5.0.[024]*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-sysv4*uw2*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-sysv5OpenUNIX* | *-*-sysv5UnixWare7.[01].[10]* | \\\n\t\t    *-*-unixware7*) add_dir=\"-L$dir\" ;;\n\t\t  *-*-darwin* )\n\t\t    # if the lib is a module then we can not link against\n\t\t    # it, someone is ignoring the new warnings I added\n\t\t    if /usr/bin/file -L $add 2> /dev/null |\n                      $EGREP \": [^:]* bundle\" >/dev/null ; then\n\t\t      $echo \"** Warning, lib $linklib is a module, not a shared library\"\n\t\t      if test -z \"$old_library\" ; then\n\t\t        $echo\n\t\t        $echo \"** And there doesn't seem to be a static archive available\"\n\t\t        $echo \"** The link will probably fail, sorry\"\n\t\t      else\n\t\t        add=\"$dir/$old_library\"\n\t\t      fi\n\t\t    fi\n\t\tesac\n\t      elif test \"$hardcode_minus_L\" = no; then\n\t\tcase $host in\n\t\t*-*-sunos*) add_shlibpath=\"$dir\" ;;\n\t\tesac\n\t\tadd_dir=\"-L$dir\"\n\t\tadd=\"-l$name\"\n\t      elif test \"$hardcode_shlibpath_var\" = no; then\n\t\tadd_shlibpath=\"$dir\"\n\t\tadd=\"-l$name\"\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    relink)\n\t      if test \"$hardcode_direct\" = yes; then\n\t\tadd=\"$dir/$linklib\"\n\t      elif test \"$hardcode_minus_L\" = yes; then\n\t\tadd_dir=\"-L$dir\"\n\t\t# Try looking first in the location we're being installed to.\n\t\tif test -n \"$inst_prefix_dir\"; then\n\t\t  case $libdir in\n\t\t    [\\\\/]*)\n\t\t      add_dir=\"$add_dir -L$inst_prefix_dir$libdir\"\n\t\t      ;;\n\t\t  esac\n\t\tfi\n\t\tadd=\"-l$name\"\n\t      elif test \"$hardcode_shlibpath_var\" = yes; then\n\t\tadd_shlibpath=\"$dir\"\n\t\tadd=\"-l$name\"\n\t      else\n\t\tlib_linked=no\n\t      fi\n\t      ;;\n\t    *) lib_linked=no ;;\n\t    esac\n\n\t    if test \"$lib_linked\" != yes; then\n\t      $echo \"$modename: configuration error: unsupported hardcode properties\"\n\t      exit $EXIT_FAILURE\n\t    fi\n\n\t    if test -n \"$add_shlibpath\"; then\n\t      case :$compile_shlibpath: in\n\t      *\":$add_shlibpath:\"*) ;;\n\t      *) compile_shlibpath=\"$compile_shlibpath$add_shlibpath:\" ;;\n\t      esac\n\t    fi\n\t    if test \"$linkmode\" = prog; then\n\t      test -n \"$add_dir\" && compile_deplibs=\"$add_dir $compile_deplibs\"\n\t      test -n \"$add\" && compile_deplibs=\"$add $compile_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t      if test \"$hardcode_direct\" != yes && \\\n\t\t test \"$hardcode_minus_L\" != yes && \\\n\t\t test \"$hardcode_shlibpath_var\" = yes; then\n\t\tcase :$finalize_shlibpath: in\n\t\t*\":$libdir:\"*) ;;\n\t\t*) finalize_shlibpath=\"$finalize_shlibpath$libdir:\" ;;\n\t\tesac\n\t      fi\n\t    fi\n\t  fi\n\n\t  if test \"$linkmode\" = prog || test \"$mode\" = relink; then\n\t    add_shlibpath=\n\t    add_dir=\n\t    add=\n\t    # Finalize command for both is simple: just hardcode it.\n\t    if test \"$hardcode_direct\" = yes; then\n\t      add=\"$libdir/$linklib\"\n\t    elif test \"$hardcode_minus_L\" = yes; then\n\t      add_dir=\"-L$libdir\"\n\t      add=\"-l$name\"\n\t    elif test \"$hardcode_shlibpath_var\" = yes; then\n\t      case :$finalize_shlibpath: in\n\t      *\":$libdir:\"*) ;;\n\t      *) finalize_shlibpath=\"$finalize_shlibpath$libdir:\" ;;\n\t      esac\n\t      add=\"-l$name\"\n\t    elif test \"$hardcode_automatic\" = yes; then\n\t      if test -n \"$inst_prefix_dir\" &&\n\t\t test -f \"$inst_prefix_dir$libdir/$linklib\" ; then\n\t        add=\"$inst_prefix_dir$libdir/$linklib\"\n\t      else\n\t        add=\"$libdir/$linklib\"\n\t      fi\n\t    else\n\t      # We cannot seem to hardcode it, guess we'll fake it.\n\t      add_dir=\"-L$libdir\"\n\t      # Try looking first in the location we're being installed to.\n\t      if test -n \"$inst_prefix_dir\"; then\n\t\tcase $libdir in\n\t\t  [\\\\/]*)\n\t\t    add_dir=\"$add_dir -L$inst_prefix_dir$libdir\"\n\t\t    ;;\n\t\tesac\n\t      fi\n\t      add=\"-l$name\"\n\t    fi\n\n\t    if test \"$linkmode\" = prog; then\n\t      test -n \"$add_dir\" && finalize_deplibs=\"$add_dir $finalize_deplibs\"\n\t      test -n \"$add\" && finalize_deplibs=\"$add $finalize_deplibs\"\n\t    else\n\t      test -n \"$add_dir\" && deplibs=\"$add_dir $deplibs\"\n\t      test -n \"$add\" && deplibs=\"$add $deplibs\"\n\t    fi\n\t  fi\n\telif test \"$linkmode\" = prog; then\n\t  # Here we assume that one of hardcode_direct or hardcode_minus_L\n\t  # is not unsupported.  This is valid on all known static and\n\t  # shared platforms.\n\t  if test \"$hardcode_direct\" != unsupported; then\n\t    test -n \"$old_library\" && linklib=\"$old_library\"\n\t    compile_deplibs=\"$dir/$linklib $compile_deplibs\"\n\t    finalize_deplibs=\"$dir/$linklib $finalize_deplibs\"\n\t  else\n\t    compile_deplibs=\"-l$name -L$dir $compile_deplibs\"\n\t    finalize_deplibs=\"-l$name -L$dir $finalize_deplibs\"\n\t  fi\n\telif test \"$build_libtool_libs\" = yes; then\n\t  # Not a shared library\n\t  if test \"$deplibs_check_method\" != pass_all; then\n\t    # We're trying link a shared library against a static one\n\t    # but the system doesn't support it.\n\n\t    # Just print a warning and add the library to dependency_libs so\n\t    # that the program can be linked against the static library.\n\t    $echo\n\t    $echo \"*** Warning: This system can not link to static lib archive $lib.\"\n\t    $echo \"*** I have the capability to make that library automatically link in when\"\n\t    $echo \"*** you link to this library.  But I can only do this if you have a\"\n\t    $echo \"*** shared version of the library, which you do not appear to have.\"\n\t    if test \"$module\" = yes; then\n\t      $echo \"*** But as you try to build a module library, libtool will still create \"\n\t      $echo \"*** a static module, that should work as long as the dlopening application\"\n\t      $echo \"*** is linked with the -dlopen flag to resolve symbols at runtime.\"\n\t      if test -z \"$global_symbol_pipe\"; then\n\t\t$echo\n\t\t$echo \"*** However, this would only work if libtool was able to extract symbol\"\n\t\t$echo \"*** lists from a program, using \\`nm' or equivalent, but libtool could\"\n\t\t$echo \"*** not find such a program.  So, this module is probably useless.\"\n\t\t$echo \"*** \\`nm' from GNU binutils and a full rebuild may help.\"\n\t      fi\n\t      if test \"$build_old_libs\" = no; then\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  else\n\t    deplibs=\"$dir/$old_library $deplibs\"\n\t    link_static=yes\n\t  fi\n\tfi # link shared/static library?\n\n\tif test \"$linkmode\" = lib; then\n\t  if test -n \"$dependency_libs\" &&\n\t     { test \"$hardcode_into_libs\" != yes ||\n\t       test \"$build_old_libs\" = yes ||\n\t       test \"$link_static\" = yes; }; then\n\t    # Extract -R from dependency_libs\n\t    temp_deplibs=\n\t    for libdir in $dependency_libs; do\n\t      case $libdir in\n\t      -R*) temp_xrpath=`$echo \"X$libdir\" | $Xsed -e 's/^-R//'`\n\t\t   case \" $xrpath \" in\n\t\t   *\" $temp_xrpath \"*) ;;\n\t\t   *) xrpath=\"$xrpath $temp_xrpath\";;\n\t\t   esac;;\n\t      *) temp_deplibs=\"$temp_deplibs $libdir\";;\n\t      esac\n\t    done\n\t    dependency_libs=\"$temp_deplibs\"\n\t  fi\n\n\t  newlib_search_path=\"$newlib_search_path $absdir\"\n\t  # Link against this library\n\t  test \"$link_static\" = no && newdependency_libs=\"$abs_ladir/$laname $newdependency_libs\"\n\t  # ... and its dependency_libs\n\t  tmp_libs=\n\t  for deplib in $dependency_libs; do\n\t    newdependency_libs=\"$deplib $newdependency_libs\"\n\t    if test \"X$duplicate_deps\" = \"Xyes\" ; then\n\t      case \"$tmp_libs \" in\n\t      *\" $deplib \"*) specialdeplibs=\"$specialdeplibs $deplib\" ;;\n\t      esac\n\t    fi\n\t    tmp_libs=\"$tmp_libs $deplib\"\n\t  done\n\n\t  if test \"$link_all_deplibs\" != no; then\n\t    # Add the search paths of all dependency libraries\n\t    for deplib in $dependency_libs; do\n\t      case $deplib in\n\t      -L*) path=\"$deplib\" ;;\n\t      *.la)\n\t\tdir=`$echo \"X$deplib\" | $Xsed -e 's%/[^/]*$%%'`\n\t\ttest \"X$dir\" = \"X$deplib\" && dir=\".\"\n\t\t# We need an absolute path.\n\t\tcase $dir in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) absdir=\"$dir\" ;;\n\t\t*)\n\t\t  absdir=`cd \"$dir\" && pwd`\n\t\t  if test -z \"$absdir\"; then\n\t\t    $echo \"$modename: warning: cannot determine absolute directory name of \\`$dir'\" 1>&2\n\t\t    absdir=\"$dir\"\n\t\t  fi\n\t\t  ;;\n\t\tesac\n\t\tif grep \"^installed=no\" $deplib > /dev/null; then\n\t\t  path=\"$absdir/$objdir\"\n\t\telse\n\t\t  eval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $deplib`\n\t\t  if test -z \"$libdir\"; then\n\t\t    $echo \"$modename: \\`$deplib' is not a valid libtool archive\" 1>&2\n\t\t    exit $EXIT_FAILURE\n\t\t  fi\n\t\t  if test \"$absdir\" != \"$libdir\"; then\n\t\t    $echo \"$modename: warning: \\`$deplib' seems to be moved\" 1>&2\n\t\t  fi\n\t\t  path=\"$absdir\"\n\t\tfi\n\t\tdepdepl=\n\t\tcase $host in\n\t\t*-*-darwin*)\n\t\t  # we do not want to link against static libs,\n\t\t  # but need to link against shared\n\t\t  eval deplibrary_names=`${SED} -n -e 's/^library_names=\\(.*\\)$/\\1/p' $deplib`\n\t\t  if test -n \"$deplibrary_names\" ; then\n\t\t    for tmp in $deplibrary_names ; do\n\t\t      depdepl=$tmp\n\t\t    done\n\t\t    if test -f \"$path/$depdepl\" ; then\n\t\t      depdepl=\"$path/$depdepl\"\n\t\t    fi\n\t\t    # do not add paths which are already there\n\t\t    case \" $newlib_search_path \" in\n\t\t    *\" $path \"*) ;;\n\t\t    *) newlib_search_path=\"$newlib_search_path $path\";;\n\t\t    esac\n\t\t  fi\n\t\t  path=\"\"\n\t\t  ;;\n\t\t*)\n\t\t  path=\"-L$path\"\n\t\t  ;;\n\t\tesac\n\t\t;;\n\t      -l*)\n\t\tcase $host in\n\t\t*-*-darwin*)\n\t\t  # Again, we only want to link against shared libraries\n\t\t  eval tmp_libs=`$echo \"X$deplib\" | $Xsed -e \"s,^\\-l,,\"`\n\t\t  for tmp in $newlib_search_path ; do\n\t\t    if test -f \"$tmp/lib$tmp_libs.dylib\" ; then\n\t\t      eval depdepl=\"$tmp/lib$tmp_libs.dylib\"\n\t\t      break\n\t\t    fi\n\t\t  done\n\t\t  path=\"\"\n\t\t  ;;\n\t\t*) continue ;;\n\t\tesac\n\t\t;;\n\t      *) continue ;;\n\t      esac\n\t      case \" $deplibs \" in\n\t      *\" $path \"*) ;;\n\t      *) deplibs=\"$path $deplibs\" ;;\n\t      esac\n\t      case \" $deplibs \" in\n\t      *\" $depdepl \"*) ;;\n\t      *) deplibs=\"$depdepl $deplibs\" ;;\n\t      esac\n\t    done\n\t  fi # link_all_deplibs != no\n\tfi # linkmode = lib\n      done # for deplib in $libs\n      dependency_libs=\"$newdependency_libs\"\n      if test \"$pass\" = dlpreopen; then\n\t# Link the dlpreopened libraries before other libraries\n\tfor deplib in $save_deplibs; do\n\t  deplibs=\"$deplib $deplibs\"\n\tdone\n      fi\n      if test \"$pass\" != dlopen; then\n\tif test \"$pass\" != conv; then\n\t  # Make sure lib_search_path contains only unique directories.\n\t  lib_search_path=\n\t  for dir in $newlib_search_path; do\n\t    case \"$lib_search_path \" in\n\t    *\" $dir \"*) ;;\n\t    *) lib_search_path=\"$lib_search_path $dir\" ;;\n\t    esac\n\t  done\n\t  newlib_search_path=\n\tfi\n\n\tif test \"$linkmode,$pass\" != \"prog,link\"; then\n\t  vars=\"deplibs\"\n\telse\n\t  vars=\"compile_deplibs finalize_deplibs\"\n\tfi\n\tfor var in $vars dependency_libs; do\n\t  # Add libraries to $var in reverse order\n\t  eval tmp_libs=\\\"\\$$var\\\"\n\t  new_libs=\n\t  for deplib in $tmp_libs; do\n\t    # FIXME: Pedantically, this is the right thing to do, so\n\t    #        that some nasty dependency loop isn't accidentally\n\t    #        broken:\n\t    #new_libs=\"$deplib $new_libs\"\n\t    # Pragmatically, this seems to cause very few problems in\n\t    # practice:\n\t    case $deplib in\n\t    -L*) new_libs=\"$deplib $new_libs\" ;;\n\t    -R*) ;;\n\t    *)\n\t      # And here is the reason: when a library appears more\n\t      # than once as an explicit dependence of a library, or\n\t      # is implicitly linked in more than once by the\n\t      # compiler, it is considered special, and multiple\n\t      # occurrences thereof are not removed.  Compare this\n\t      # with having the same library being listed as a\n\t      # dependency of multiple other libraries: in this case,\n\t      # we know (pedantically, we assume) the library does not\n\t      # need to be listed more than once, so we keep only the\n\t      # last copy.  This is not always right, but it is rare\n\t      # enough that we require users that really mean to play\n\t      # such unportable linking tricks to link the library\n\t      # using -Wl,-lname, so that libtool does not consider it\n\t      # for duplicate removal.\n\t      case \" $specialdeplibs \" in\n\t      *\" $deplib \"*) new_libs=\"$deplib $new_libs\" ;;\n\t      *)\n\t\tcase \" $new_libs \" in\n\t\t*\" $deplib \"*) ;;\n\t\t*) new_libs=\"$deplib $new_libs\" ;;\n\t\tesac\n\t\t;;\n\t      esac\n\t      ;;\n\t    esac\n\t  done\n\t  tmp_libs=\n\t  for deplib in $new_libs; do\n\t    case $deplib in\n\t    -L*)\n\t      case \" $tmp_libs \" in\n\t      *\" $deplib \"*) ;;\n\t      *) tmp_libs=\"$tmp_libs $deplib\" ;;\n\t      esac\n\t      ;;\n\t    *) tmp_libs=\"$tmp_libs $deplib\" ;;\n\t    esac\n\t  done\n\t  eval $var=\\\"$tmp_libs\\\"\n\tdone # for var\n      fi\n      # Last step: remove runtime libs from dependency_libs\n      # (they stay in deplibs)\n      tmp_libs=\n      for i in $dependency_libs ; do\n\tcase \" $predeps $postdeps $compiler_lib_search_path \" in\n\t*\" $i \"*)\n\t  i=\"\"\n\t  ;;\n\tesac\n\tif test -n \"$i\" ; then\n\t  tmp_libs=\"$tmp_libs $i\"\n\tfi\n      done\n      dependency_libs=$tmp_libs\n    done # for pass\n    if test \"$linkmode\" = prog; then\n      dlfiles=\"$newdlfiles\"\n      dlprefiles=\"$newdlprefiles\"\n    fi\n\n    case $linkmode in\n    oldlib)\n      if test -n \"$deplibs\"; then\n\t$echo \"$modename: warning: \\`-l' and \\`-L' are ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\t$echo \"$modename: warning: \\`-dlopen' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$rpath\"; then\n\t$echo \"$modename: warning: \\`-rpath' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$xrpath\"; then\n\t$echo \"$modename: warning: \\`-R' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$vinfo\"; then\n\t$echo \"$modename: warning: \\`-version-info/-version-number' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$release\"; then\n\t$echo \"$modename: warning: \\`-release' is ignored for archives\" 1>&2\n      fi\n\n      if test -n \"$export_symbols\" || test -n \"$export_symbols_regex\"; then\n\t$echo \"$modename: warning: \\`-export-symbols' is ignored for archives\" 1>&2\n      fi\n\n      # Now set the variables for building old libraries.\n      build_libtool_libs=no\n      oldlibs=\"$output\"\n      objs=\"$objs$old_deplibs\"\n      ;;\n\n    lib)\n      # Make sure we only generate libraries of the form `libNAME.la'.\n      case $outputname in\n      lib*)\n\tname=`$echo \"X$outputname\" | $Xsed -e 's/\\.la$//' -e 's/^lib//'`\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval libname=\\\"$libname_spec\\\"\n\t;;\n      *)\n\tif test \"$module\" = no; then\n\t  $echo \"$modename: libtool library \\`$output' must begin with \\`lib'\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\tif test \"$need_lib_prefix\" != no; then\n\t  # Add the \"lib\" prefix for modules if required\n\t  name=`$echo \"X$outputname\" | $Xsed -e 's/\\.la$//'`\n\t  eval shared_ext=\\\"$shrext_cmds\\\"\n\t  eval libname=\\\"$libname_spec\\\"\n\telse\n\t  libname=`$echo \"X$outputname\" | $Xsed -e 's/\\.la$//'`\n\tfi\n\t;;\n      esac\n\n      if test -n \"$objs\"; then\n\tif test \"$deplibs_check_method\" != pass_all; then\n\t  $echo \"$modename: cannot build libtool library \\`$output' from non-libtool objects on this host:$objs\" 2>&1\n\t  exit $EXIT_FAILURE\n\telse\n\t  $echo\n\t  $echo \"*** Warning: Linking the shared library $output against the non-libtool\"\n\t  $echo \"*** objects $objs is not portable!\"\n\t  libobjs=\"$libobjs $objs\"\n\tfi\n      fi\n\n      if test \"$dlself\" != no; then\n\t$echo \"$modename: warning: \\`-dlopen self' is ignored for libtool libraries\" 1>&2\n      fi\n\n      set dummy $rpath\n      if test \"$#\" -gt 2; then\n\t$echo \"$modename: warning: ignoring multiple \\`-rpath's for a libtool library\" 1>&2\n      fi\n      install_libdir=\"$2\"\n\n      oldlibs=\n      if test -z \"$rpath\"; then\n\tif test \"$build_libtool_libs\" = yes; then\n\t  # Building a libtool convenience library.\n\t  # Some compilers have problems with a `.al' extension so\n\t  # convenience libraries should have the same extension an\n\t  # archive normally would.\n\t  oldlibs=\"$output_objdir/$libname.$libext $oldlibs\"\n\t  build_libtool_libs=convenience\n\t  build_old_libs=yes\n\tfi\n\n\tif test -n \"$vinfo\"; then\n\t  $echo \"$modename: warning: \\`-version-info/-version-number' is ignored for convenience libraries\" 1>&2\n\tfi\n\n\tif test -n \"$release\"; then\n\t  $echo \"$modename: warning: \\`-release' is ignored for convenience libraries\" 1>&2\n\tfi\n      else\n\n\t# Parse the version information argument.\n\tsave_ifs=\"$IFS\"; IFS=':'\n\tset dummy $vinfo 0 0 0\n\tIFS=\"$save_ifs\"\n\n\tif test -n \"$8\"; then\n\t  $echo \"$modename: too many parameters to \\`-version-info'\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\n\t# convert absolute version numbers to libtool ages\n\t# this retains compatibility with .la files and attempts\n\t# to make the code below a bit more comprehensible\n\n\tcase $vinfo_number in\n\tyes)\n\t  number_major=\"$2\"\n\t  number_minor=\"$3\"\n\t  number_revision=\"$4\"\n\t  #\n\t  # There are really only two kinds -- those that\n\t  # use the current revision as the major version\n\t  # and those that subtract age and use age as\n\t  # a minor version.  But, then there is irix\n\t  # which has an extra 1 added just for fun\n\t  #\n\t  case $version_type in\n\t  darwin|linux|osf|windows)\n\t    current=`expr $number_major + $number_minor`\n\t    age=\"$number_minor\"\n\t    revision=\"$number_revision\"\n\t    ;;\n\t  freebsd-aout|freebsd-elf|sunos)\n\t    current=\"$number_major\"\n\t    revision=\"$number_minor\"\n\t    age=\"0\"\n\t    ;;\n\t  irix|nonstopux)\n\t    current=`expr $number_major + $number_minor - 1`\n\t    age=\"$number_minor\"\n\t    revision=\"$number_minor\"\n\t    ;;\n\t  esac\n\t  ;;\n\tno)\n\t  current=\"$2\"\n\t  revision=\"$3\"\n\t  age=\"$4\"\n\t  ;;\n\tesac\n\n\t# Check that each of the things are valid numbers.\n\tcase $current in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  $echo \"$modename: CURRENT \\`$current' must be a nonnegative integer\" 1>&2\n\t  $echo \"$modename: \\`$vinfo' is not valid version information\" 1>&2\n\t  exit $EXIT_FAILURE\n\t  ;;\n\tesac\n\n\tcase $revision in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  $echo \"$modename: REVISION \\`$revision' must be a nonnegative integer\" 1>&2\n\t  $echo \"$modename: \\`$vinfo' is not valid version information\" 1>&2\n\t  exit $EXIT_FAILURE\n\t  ;;\n\tesac\n\n\tcase $age in\n\t0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;\n\t*)\n\t  $echo \"$modename: AGE \\`$age' must be a nonnegative integer\" 1>&2\n\t  $echo \"$modename: \\`$vinfo' is not valid version information\" 1>&2\n\t  exit $EXIT_FAILURE\n\t  ;;\n\tesac\n\n\tif test \"$age\" -gt \"$current\"; then\n\t  $echo \"$modename: AGE \\`$age' is greater than the current interface number \\`$current'\" 1>&2\n\t  $echo \"$modename: \\`$vinfo' is not valid version information\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\n\t# Calculate the version variables.\n\tmajor=\n\tversuffix=\n\tverstring=\n\tcase $version_type in\n\tnone) ;;\n\n\tdarwin)\n\t  # Like Linux, but with the current version available in\n\t  # verstring for coding it into the library header\n\t  major=.`expr $current - $age`\n\t  versuffix=\"$major.$age.$revision\"\n\t  # Darwin ld doesn't like 0 for these options...\n\t  minor_current=`expr $current + 1`\n\t  verstring=\"${wl}-compatibility_version ${wl}$minor_current ${wl}-current_version ${wl}$minor_current.$revision\"\n\t  ;;\n\n\tfreebsd-aout)\n\t  major=\".$current\"\n\t  versuffix=\".$current.$revision\";\n\t  ;;\n\n\tfreebsd-elf)\n\t  major=\".$current\"\n\t  versuffix=\".$current\";\n\t  ;;\n\n\tirix | nonstopux)\n\t  major=`expr $current - $age + 1`\n\n\t  case $version_type in\n\t    nonstopux) verstring_prefix=nonstopux ;;\n\t    *)         verstring_prefix=sgi ;;\n\t  esac\n\t  verstring=\"$verstring_prefix$major.$revision\"\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$revision\n\t  while test \"$loop\" -ne 0; do\n\t    iface=`expr $revision - $loop`\n\t    loop=`expr $loop - 1`\n\t    verstring=\"$verstring_prefix$major.$iface:$verstring\"\n\t  done\n\n\t  # Before this point, $major must not contain `.'.\n\t  major=.$major\n\t  versuffix=\"$major.$revision\"\n\t  ;;\n\n\tlinux)\n\t  major=.`expr $current - $age`\n\t  versuffix=\"$major.$age.$revision\"\n\t  ;;\n\n\tosf)\n\t  major=.`expr $current - $age`\n\t  versuffix=\".$current.$age.$revision\"\n\t  verstring=\"$current.$age.$revision\"\n\n\t  # Add in all the interfaces that we are compatible with.\n\t  loop=$age\n\t  while test \"$loop\" -ne 0; do\n\t    iface=`expr $current - $loop`\n\t    loop=`expr $loop - 1`\n\t    verstring=\"$verstring:${iface}.0\"\n\t  done\n\n\t  # Make executables depend on our current version.\n\t  verstring=\"$verstring:${current}.0\"\n\t  ;;\n\n\tsunos)\n\t  major=\".$current\"\n\t  versuffix=\".$current.$revision\"\n\t  ;;\n\n\twindows)\n\t  # Use '-' rather than '.', since we only want one\n\t  # extension on DOS 8.3 filesystems.\n\t  major=`expr $current - $age`\n\t  versuffix=\"-$major\"\n\t  ;;\n\n\t*)\n\t  $echo \"$modename: unknown library version type \\`$version_type'\" 1>&2\n\t  $echo \"Fatal configuration error.  See the $PACKAGE docs for more information.\" 1>&2\n\t  exit $EXIT_FAILURE\n\t  ;;\n\tesac\n\n\t# Clear the version info if we defaulted, and they specified a release.\n\tif test -z \"$vinfo\" && test -n \"$release\"; then\n\t  major=\n\t  case $version_type in\n\t  darwin)\n\t    # we can't check for \"0.0\" in archive_cmds due to quoting\n\t    # problems, so we reset it completely\n\t    verstring=\n\t    ;;\n\t  *)\n\t    verstring=\"0.0\"\n\t    ;;\n\t  esac\n\t  if test \"$need_version\" = no; then\n\t    versuffix=\n\t  else\n\t    versuffix=\".0.0\"\n\t  fi\n\tfi\n\n\t# Remove version info from name if versioning should be avoided\n\tif test \"$avoid_version\" = yes && test \"$need_version\" = no; then\n\t  major=\n\t  versuffix=\n\t  verstring=\"\"\n\tfi\n\n\t# Check to see if the archive will have undefined symbols.\n\tif test \"$allow_undefined\" = yes; then\n\t  if test \"$allow_undefined_flag\" = unsupported; then\n\t    $echo \"$modename: warning: undefined symbols not allowed in $host shared libraries\" 1>&2\n\t    build_libtool_libs=no\n\t    build_old_libs=yes\n\t  fi\n\telse\n\t  # Don't allow undefined symbols.\n\t  allow_undefined_flag=\"$no_undefined_flag\"\n\tfi\n      fi\n\n      if test \"$mode\" != relink; then\n\t# Remove our outputs, but don't remove object files since they\n\t# may have been created when compiling PIC objects.\n\tremovelist=\n\ttempremovelist=`$echo \"$output_objdir/*\"`\n\tfor p in $tempremovelist; do\n\t  case $p in\n\t    *.$objext)\n\t       ;;\n\t    $output_objdir/$outputname | $output_objdir/$libname.* | $output_objdir/${libname}${release}.*)\n\t       if test \"X$precious_files_regex\" != \"X\"; then\n\t         if echo $p | $EGREP -e \"$precious_files_regex\" >/dev/null 2>&1\n\t         then\n\t\t   continue\n\t\t fi\n\t       fi\n\t       removelist=\"$removelist $p\"\n\t       ;;\n\t    *) ;;\n\t  esac\n\tdone\n\tif test -n \"$removelist\"; then\n\t  $show \"${rm}r $removelist\"\n\t  $run ${rm}r $removelist\n\tfi\n      fi\n\n      # Now set the variables for building old libraries.\n      if test \"$build_old_libs\" = yes && test \"$build_libtool_libs\" != convenience ; then\n\toldlibs=\"$oldlibs $output_objdir/$libname.$libext\"\n\n\t# Transform .lo files to .o files.\n\toldobjs=\"$objs \"`$echo \"X$libobjs\" | $SP2NL | $Xsed -e '/\\.'${libext}'$/d' -e \"$lo2o\" | $NL2SP`\n      fi\n\n      # Eliminate all temporary directories.\n      for path in $notinst_path; do\n\tlib_search_path=`$echo \"$lib_search_path \" | ${SED} -e \"s% $path % %g\"`\n\tdeplibs=`$echo \"$deplibs \" | ${SED} -e \"s% -L$path % %g\"`\n\tdependency_libs=`$echo \"$dependency_libs \" | ${SED} -e \"s% -L$path % %g\"`\n      done\n\n      if test -n \"$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\ttemp_xrpath=\n\tfor libdir in $xrpath; do\n\t  temp_xrpath=\"$temp_xrpath -R$libdir\"\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) finalize_rpath=\"$finalize_rpath $libdir\" ;;\n\t  esac\n\tdone\n\tif test \"$hardcode_into_libs\" != yes || test \"$build_old_libs\" = yes; then\n\t  dependency_libs=\"$temp_xrpath $dependency_libs\"\n\tfi\n      fi\n\n      # Make sure dlfiles contains only unique files that won't be dlpreopened\n      old_dlfiles=\"$dlfiles\"\n      dlfiles=\n      for lib in $old_dlfiles; do\n\tcase \" $dlprefiles $dlfiles \" in\n\t*\" $lib \"*) ;;\n\t*) dlfiles=\"$dlfiles $lib\" ;;\n\tesac\n      done\n\n      # Make sure dlprefiles contains only unique files\n      old_dlprefiles=\"$dlprefiles\"\n      dlprefiles=\n      for lib in $old_dlprefiles; do\n\tcase \"$dlprefiles \" in\n\t*\" $lib \"*) ;;\n\t*) dlprefiles=\"$dlprefiles $lib\" ;;\n\tesac\n      done\n\n      if test \"$build_libtool_libs\" = yes; then\n\tif test -n \"$rpath\"; then\n\t  case $host in\n\t  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-beos*)\n\t    # these systems don't actually have a c library (as such)!\n\t    ;;\n\t  *-*-rhapsody* | *-*-darwin1.[012])\n\t    # Rhapsody C library is in the System framework\n\t    deplibs=\"$deplibs -framework System\"\n\t    ;;\n\t  *-*-netbsd*)\n\t    # Don't link with libc until the a.out ld.so is fixed.\n\t    ;;\n\t  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)\n\t    # Do not include libc due to us having libc/libc_r.\n\t    ;;\n\t  *-*-sco3.2v5* | *-*-sco5v6*)\n\t    # Causes problems with __ctype\n\t    ;;\n\t  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)\n\t    # Compiler inserts libc in the correct place for threads to work\n\t    ;;\n \t  *)\n\t    # Add libc to deplibs on all other systems if necessary.\n\t    if test \"$build_libtool_need_lc\" = \"yes\"; then\n\t      deplibs=\"$deplibs -lc\"\n\t    fi\n\t    ;;\n\t  esac\n\tfi\n\n\t# Transform deplibs into only deplibs that can be linked in shared.\n\tname_save=$name\n\tlibname_save=$libname\n\trelease_save=$release\n\tversuffix_save=$versuffix\n\tmajor_save=$major\n\t# I'm not sure if I'm treating the release correctly.  I think\n\t# release should show up in the -l (ie -lgmp5) so we don't want to\n\t# add it in twice.  Is that correct?\n\trelease=\"\"\n\tversuffix=\"\"\n\tmajor=\"\"\n\tnewdeplibs=\n\tdroppeddeps=no\n\tcase $deplibs_check_method in\n\tpass_all)\n\t  # Don't check for shared/static.  Everything works.\n\t  # This might be a little naive.  We might want to check\n\t  # whether the library exists or not.  But this is on\n\t  # osf3 & osf4 and I'm not really sure... Just\n\t  # implementing what was already the behavior.\n\t  newdeplibs=$deplibs\n\t  ;;\n\ttest_compile)\n\t  # This code stresses the \"libraries are programs\" paradigm to its\n\t  # limits. Maybe even breaks it.  We compile a program, linking it\n\t  # against the deplibs as a proxy for the library.  Then we can check\n\t  # whether they linked in statically or dynamically with ldd.\n\t  $rm conftest.c\n\t  cat > conftest.c <<EOF\n\t  int main() { return 0; }\nEOF\n\t  $rm conftest\n\t  $LTCC $LTCFLAGS -o conftest conftest.c $deplibs\n\t  if test \"$?\" -eq 0 ; then\n\t    ldd_output=`ldd conftest`\n\t    for i in $deplibs; do\n\t      name=`expr $i : '-l\\(.*\\)'`\n\t      # If $name is empty we are operating on a -L argument.\n              if test \"$name\" != \"\" && test \"$name\" -ne \"0\"; then\n\t\tif test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\t  case \" $predeps $postdeps \" in\n\t\t  *\" $i \"*)\n\t\t    newdeplibs=\"$newdeplibs $i\"\n\t\t    i=\"\"\n\t\t    ;;\n\t\t  esac\n\t        fi\n\t\tif test -n \"$i\" ; then\n\t\t  libname=`eval \\\\$echo \\\"$libname_spec\\\"`\n\t\t  deplib_matches=`eval \\\\$echo \\\"$library_names_spec\\\"`\n\t\t  set dummy $deplib_matches\n\t\t  deplib_match=$2\n\t\t  if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0 ; then\n\t\t    newdeplibs=\"$newdeplibs $i\"\n\t\t  else\n\t\t    droppeddeps=yes\n\t\t    $echo\n\t\t    $echo \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t    $echo \"*** I have the capability to make that library automatically link in when\"\n\t\t    $echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t    $echo \"*** shared version of the library, which I believe you do not have\"\n\t\t    $echo \"*** because a test_compile did reveal that the linker did not use it for\"\n\t\t    $echo \"*** its dynamic dependency list that programs get resolved with at runtime.\"\n\t\t  fi\n\t\tfi\n\t      else\n\t\tnewdeplibs=\"$newdeplibs $i\"\n\t      fi\n\t    done\n\t  else\n\t    # Error occurred in the first compile.  Let's try to salvage\n\t    # the situation: Compile a separate program for each library.\n\t    for i in $deplibs; do\n\t      name=`expr $i : '-l\\(.*\\)'`\n\t      # If $name is empty we are operating on a -L argument.\n              if test \"$name\" != \"\" && test \"$name\" != \"0\"; then\n\t\t$rm conftest\n\t\t$LTCC $LTCFLAGS -o conftest conftest.c $i\n\t\t# Did it work?\n\t\tif test \"$?\" -eq 0 ; then\n\t\t  ldd_output=`ldd conftest`\n\t\t  if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\t    case \" $predeps $postdeps \" in\n\t\t    *\" $i \"*)\n\t\t      newdeplibs=\"$newdeplibs $i\"\n\t\t      i=\"\"\n\t\t      ;;\n\t\t    esac\n\t\t  fi\n\t\t  if test -n \"$i\" ; then\n\t\t    libname=`eval \\\\$echo \\\"$libname_spec\\\"`\n\t\t    deplib_matches=`eval \\\\$echo \\\"$library_names_spec\\\"`\n\t\t    set dummy $deplib_matches\n\t\t    deplib_match=$2\n\t\t    if test `expr \"$ldd_output\" : \".*$deplib_match\"` -ne 0 ; then\n\t\t      newdeplibs=\"$newdeplibs $i\"\n\t\t    else\n\t\t      droppeddeps=yes\n\t\t      $echo\n\t\t      $echo \"*** Warning: dynamic linker does not accept needed library $i.\"\n\t\t      $echo \"*** I have the capability to make that library automatically link in when\"\n\t\t      $echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t      $echo \"*** shared version of the library, which you do not appear to have\"\n\t\t      $echo \"*** because a test_compile did reveal that the linker did not use this one\"\n\t\t      $echo \"*** as a dynamic dependency that programs can get resolved with at runtime.\"\n\t\t    fi\n\t\t  fi\n\t\telse\n\t\t  droppeddeps=yes\n\t\t  $echo\n\t\t  $echo \"*** Warning!  Library $i is needed by this library but I was not able to\"\n\t\t  $echo \"***  make it link in!  You will probably need to install it or some\"\n\t\t  $echo \"*** library that it depends on before this library will be fully\"\n\t\t  $echo \"*** functional.  Installing it before continuing would be even better.\"\n\t\tfi\n\t      else\n\t\tnewdeplibs=\"$newdeplibs $i\"\n\t      fi\n\t    done\n\t  fi\n\t  ;;\n\tfile_magic*)\n\t  set dummy $deplibs_check_method\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"$2 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    name=`expr $a_deplib : '-l\\(.*\\)'`\n\t    # If $name is empty we are operating on a -L argument.\n            if test \"$name\" != \"\" && test  \"$name\" != \"0\"; then\n\t      if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  newdeplibs=\"$newdeplibs $a_deplib\"\n\t\t  a_deplib=\"\"\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tlibname=`eval \\\\$echo \\\"$libname_spec\\\"`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t  for potent_lib in $potential_libs; do\n\t\t      # Follow soft links.\n\t\t      if ls -lLd \"$potent_lib\" 2>/dev/null \\\n\t\t\t | grep \" -> \" >/dev/null; then\n\t\t\tcontinue\n\t\t      fi\n\t\t      # The statement above tries to avoid entering an\n\t\t      # endless loop below, in case of cyclic links.\n\t\t      # We might still enter an endless loop, since a link\n\t\t      # loop can be closed while we follow links,\n\t\t      # but so what?\n\t\t      potlib=\"$potent_lib\"\n\t\t      while test -h \"$potlib\" 2>/dev/null; do\n\t\t\tpotliblink=`ls -ld $potlib | ${SED} 's/.* -> //'`\n\t\t\tcase $potliblink in\n\t\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) potlib=\"$potliblink\";;\n\t\t\t*) potlib=`$echo \"X$potlib\" | $Xsed -e 's,[^/]*$,,'`\"$potliblink\";;\n\t\t\tesac\n\t\t      done\n\t\t      if eval $file_magic_cmd \\\"\\$potlib\\\" 2>/dev/null \\\n\t\t\t | ${SED} 10q \\\n\t\t\t | $EGREP \"$file_magic_regex\" > /dev/null; then\n\t\t\tnewdeplibs=\"$newdeplibs $a_deplib\"\n\t\t\ta_deplib=\"\"\n\t\t\tbreak 2\n\t\t      fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tdroppeddeps=yes\n\t\t$echo\n\t\t$echo \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\t$echo \"*** I have the capability to make that library automatically link in when\"\n\t\t$echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t$echo \"*** shared version of the library, which you do not appear to have\"\n\t\t$echo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\" ; then\n\t\t  $echo \"*** with $libname but no candidates were found. (...for file magic test)\"\n\t\telse\n\t\t  $echo \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $echo \"*** using a file magic. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t    else\n\t      # Add a -L argument.\n\t      newdeplibs=\"$newdeplibs $a_deplib\"\n\t    fi\n\t  done # Gone through all deplibs.\n\t  ;;\n\tmatch_pattern*)\n\t  set dummy $deplibs_check_method\n\t  match_pattern_regex=`expr \"$deplibs_check_method\" : \"$2 \\(.*\\)\"`\n\t  for a_deplib in $deplibs; do\n\t    name=`expr $a_deplib : '-l\\(.*\\)'`\n\t    # If $name is empty we are operating on a -L argument.\n\t    if test -n \"$name\" && test \"$name\" != \"0\"; then\n\t      if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t\tcase \" $predeps $postdeps \" in\n\t\t*\" $a_deplib \"*)\n\t\t  newdeplibs=\"$newdeplibs $a_deplib\"\n\t\t  a_deplib=\"\"\n\t\t  ;;\n\t\tesac\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tlibname=`eval \\\\$echo \\\"$libname_spec\\\"`\n\t\tfor i in $lib_search_path $sys_lib_search_path $shlib_search_path; do\n\t\t  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`\n\t\t  for potent_lib in $potential_libs; do\n\t\t    potlib=\"$potent_lib\" # see symlink-check above in file_magic test\n\t\t    if eval $echo \\\"$potent_lib\\\" 2>/dev/null \\\n\t\t        | ${SED} 10q \\\n\t\t        | $EGREP \"$match_pattern_regex\" > /dev/null; then\n\t\t      newdeplibs=\"$newdeplibs $a_deplib\"\n\t\t      a_deplib=\"\"\n\t\t      break 2\n\t\t    fi\n\t\t  done\n\t\tdone\n\t      fi\n\t      if test -n \"$a_deplib\" ; then\n\t\tdroppeddeps=yes\n\t\t$echo\n\t\t$echo \"*** Warning: linker path does not have real file for library $a_deplib.\"\n\t\t$echo \"*** I have the capability to make that library automatically link in when\"\n\t\t$echo \"*** you link to this library.  But I can only do this if you have a\"\n\t\t$echo \"*** shared version of the library, which you do not appear to have\"\n\t\t$echo \"*** because I did check the linker path looking for a file starting\"\n\t\tif test -z \"$potlib\" ; then\n\t\t  $echo \"*** with $libname but no candidates were found. (...for regex pattern test)\"\n\t\telse\n\t\t  $echo \"*** with $libname and none of the candidates passed a file format test\"\n\t\t  $echo \"*** using a regex pattern. Last file checked: $potlib\"\n\t\tfi\n\t      fi\n\t    else\n\t      # Add a -L argument.\n\t      newdeplibs=\"$newdeplibs $a_deplib\"\n\t    fi\n\t  done # Gone through all deplibs.\n\t  ;;\n\tnone | unknown | *)\n\t  newdeplibs=\"\"\n\t  tmp_deplibs=`$echo \"X $deplibs\" | $Xsed -e 's/ -lc$//' \\\n\t    -e 's/ -[LR][^ ]*//g'`\n\t  if test \"X$allow_libtool_libs_with_static_runtimes\" = \"Xyes\" ; then\n\t    for i in $predeps $postdeps ; do\n\t      # can't use Xsed below, because $i might contain '/'\n\t      tmp_deplibs=`$echo \"X $tmp_deplibs\" | ${SED} -e \"1s,^X,,\" -e \"s,$i,,\"`\n\t    done\n\t  fi\n\t  if $echo \"X $tmp_deplibs\" | $Xsed -e 's/[ \t]//g' \\\n\t    | grep . >/dev/null; then\n\t    $echo\n\t    if test \"X$deplibs_check_method\" = \"Xnone\"; then\n\t      $echo \"*** Warning: inter-library dependencies are not supported in this platform.\"\n\t    else\n\t      $echo \"*** Warning: inter-library dependencies are not known to be supported.\"\n\t    fi\n\t    $echo \"*** All declared inter-library dependencies are being dropped.\"\n\t    droppeddeps=yes\n\t  fi\n\t  ;;\n\tesac\n\tversuffix=$versuffix_save\n\tmajor=$major_save\n\trelease=$release_save\n\tlibname=$libname_save\n\tname=$name_save\n\n\tcase $host in\n\t*-*-rhapsody* | *-*-darwin1.[012])\n\t  # On Rhapsody replace the C library is the System framework\n\t  newdeplibs=`$echo \"X $newdeplibs\" | $Xsed -e 's/ -lc / -framework System /'`\n\t  ;;\n\tesac\n\n\tif test \"$droppeddeps\" = yes; then\n\t  if test \"$module\" = yes; then\n\t    $echo\n\t    $echo \"*** Warning: libtool could not satisfy all declared inter-library\"\n\t    $echo \"*** dependencies of module $libname.  Therefore, libtool will create\"\n\t    $echo \"*** a static module, that should work as long as the dlopening\"\n\t    $echo \"*** application is linked with the -dlopen flag.\"\n\t    if test -z \"$global_symbol_pipe\"; then\n\t      $echo\n\t      $echo \"*** However, this would only work if libtool was able to extract symbol\"\n\t      $echo \"*** lists from a program, using \\`nm' or equivalent, but libtool could\"\n\t      $echo \"*** not find such a program.  So, this module is probably useless.\"\n\t      $echo \"*** \\`nm' from GNU binutils and a full rebuild may help.\"\n\t    fi\n\t    if test \"$build_old_libs\" = no; then\n\t      oldlibs=\"$output_objdir/$libname.$libext\"\n\t      build_libtool_libs=module\n\t      build_old_libs=yes\n\t    else\n\t      build_libtool_libs=no\n\t    fi\n\t  else\n\t    $echo \"*** The inter-library dependencies that have been dropped here will be\"\n\t    $echo \"*** automatically added whenever a program is linked with this library\"\n\t    $echo \"*** or is declared to -dlopen it.\"\n\n\t    if test \"$allow_undefined\" = no; then\n\t      $echo\n\t      $echo \"*** Since this library must not contain undefined symbols,\"\n\t      $echo \"*** because either the platform does not support them or\"\n\t      $echo \"*** it was explicitly requested with -no-undefined,\"\n\t      $echo \"*** libtool will only create a static version of it.\"\n\t      if test \"$build_old_libs\" = no; then\n\t\toldlibs=\"$output_objdir/$libname.$libext\"\n\t\tbuild_libtool_libs=module\n\t\tbuild_old_libs=yes\n\t      else\n\t\tbuild_libtool_libs=no\n\t      fi\n\t    fi\n\t  fi\n\tfi\n\t# Done checking deplibs!\n\tdeplibs=$newdeplibs\n      fi\n\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    new_libs=\"$new_libs -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) new_libs=\"$new_libs $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) new_libs=\"$new_libs $deplib\" ;;\n\tesac\n      done\n      deplibs=\"$new_libs\"\n\n\n      # All the library-specific variables (install_libdir is set above).\n      library_names=\n      old_library=\n      dlname=\n\n      # Test again, we may have decided not to build it any more\n      if test \"$build_libtool_libs\" = yes; then\n\tif test \"$hardcode_into_libs\" = yes; then\n\t  # Hardcode the library paths\n\t  hardcode_libdirs=\n\t  dep_rpath=\n\t  rpath=\"$finalize_rpath\"\n\t  test \"$mode\" != relink && rpath=\"$compile_rpath$rpath\"\n\t  for libdir in $rpath; do\n\t    if test -n \"$hardcode_libdir_flag_spec\"; then\n\t      if test -n \"$hardcode_libdir_separator\"; then\n\t\tif test -z \"$hardcode_libdirs\"; then\n\t\t  hardcode_libdirs=\"$libdir\"\n\t\telse\n\t\t  # Just accumulate the unique libdirs.\n\t\t  case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t\t  *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t    ;;\n\t\t  *)\n\t\t    hardcode_libdirs=\"$hardcode_libdirs$hardcode_libdir_separator$libdir\"\n\t\t    ;;\n\t\t  esac\n\t\tfi\n\t      else\n\t\teval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t\tdep_rpath=\"$dep_rpath $flag\"\n\t      fi\n\t    elif test -n \"$runpath_var\"; then\n\t      case \"$perm_rpath \" in\n\t      *\" $libdir \"*) ;;\n\t      *) perm_rpath=\"$perm_rpath $libdir\" ;;\n\t      esac\n\t    fi\n\t  done\n\t  # Substitute the hardcoded libdirs into the rpath.\n\t  if test -n \"$hardcode_libdir_separator\" &&\n\t     test -n \"$hardcode_libdirs\"; then\n\t    libdir=\"$hardcode_libdirs\"\n\t    if test -n \"$hardcode_libdir_flag_spec_ld\"; then\n\t      eval dep_rpath=\\\"$hardcode_libdir_flag_spec_ld\\\"\n\t    else\n\t      eval dep_rpath=\\\"$hardcode_libdir_flag_spec\\\"\n\t    fi\n\t  fi\n\t  if test -n \"$runpath_var\" && test -n \"$perm_rpath\"; then\n\t    # We should set the runpath_var.\n\t    rpath=\n\t    for dir in $perm_rpath; do\n\t      rpath=\"$rpath$dir:\"\n\t    done\n\t    eval \"$runpath_var='$rpath\\$$runpath_var'; export $runpath_var\"\n\t  fi\n\t  test -n \"$dep_rpath\" && deplibs=\"$dep_rpath $deplibs\"\n\tfi\n\n\tshlibpath=\"$finalize_shlibpath\"\n\ttest \"$mode\" != relink && shlibpath=\"$compile_shlibpath$shlibpath\"\n\tif test -n \"$shlibpath\"; then\n\t  eval \"$shlibpath_var='$shlibpath\\$$shlibpath_var'; export $shlibpath_var\"\n\tfi\n\n\t# Get the real and link names of the library.\n\teval shared_ext=\\\"$shrext_cmds\\\"\n\teval library_names=\\\"$library_names_spec\\\"\n\tset dummy $library_names\n\trealname=\"$2\"\n\tshift; shift\n\n\tif test -n \"$soname_spec\"; then\n\t  eval soname=\\\"$soname_spec\\\"\n\telse\n\t  soname=\"$realname\"\n\tfi\n\tif test -z \"$dlname\"; then\n\t  dlname=$soname\n\tfi\n\n\tlib=\"$output_objdir/$realname\"\n\tlinknames=\n\tfor link\n\tdo\n\t  linknames=\"$linknames $link\"\n\tdone\n\n\t# Use standard objects if they are pic\n\ttest -z \"$pic_flag\" && libobjs=`$echo \"X$libobjs\" | $SP2NL | $Xsed -e \"$lo2o\" | $NL2SP`\n\n\t# Prepare the list of exported symbols\n\tif test -z \"$export_symbols\"; then\n\t  if test \"$always_export_symbols\" = yes || test -n \"$export_symbols_regex\"; then\n\t    $show \"generating symbol list for \\`$libname.la'\"\n\t    export_symbols=\"$output_objdir/$libname.exp\"\n\t    $run $rm $export_symbols\n\t    cmds=$export_symbols_cmds\n\t    save_ifs=\"$IFS\"; IFS='~'\n\t    for cmd in $cmds; do\n\t      IFS=\"$save_ifs\"\n\t      eval cmd=\\\"$cmd\\\"\n\t      if len=`expr \"X$cmd\" : \".*\"` &&\n\t       test \"$len\" -le \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t        $show \"$cmd\"\n\t        $run eval \"$cmd\" || exit $?\n\t        skipped_export=false\n\t      else\n\t        # The command line is too long to execute in one step.\n\t        $show \"using reloadable object file for export list...\"\n\t        skipped_export=:\n\t\t# Break out early, otherwise skipped_export may be\n\t\t# set to false by a later but shorter cmd.\n\t\tbreak\n\t      fi\n\t    done\n\t    IFS=\"$save_ifs\"\n\t    if test -n \"$export_symbols_regex\"; then\n\t      $show \"$EGREP -e \\\"$export_symbols_regex\\\" \\\"$export_symbols\\\" > \\\"${export_symbols}T\\\"\"\n\t      $run eval '$EGREP -e \"$export_symbols_regex\" \"$export_symbols\" > \"${export_symbols}T\"'\n\t      $show \"$mv \\\"${export_symbols}T\\\" \\\"$export_symbols\\\"\"\n\t      $run eval '$mv \"${export_symbols}T\" \"$export_symbols\"'\n\t    fi\n\t  fi\n\tfi\n\n\tif test -n \"$export_symbols\" && test -n \"$include_expsyms\"; then\n\t  $run eval '$echo \"X$include_expsyms\" | $SP2NL >> \"$export_symbols\"'\n\tfi\n\n\ttmp_deplibs=\n\tfor test_deplib in $deplibs; do\n\t\tcase \" $convenience \" in\n\t\t*\" $test_deplib \"*) ;;\n\t\t*)\n\t\t\ttmp_deplibs=\"$tmp_deplibs $test_deplib\"\n\t\t\t;;\n\t\tesac\n\tdone\n\tdeplibs=\"$tmp_deplibs\"\n\n\tif test -n \"$convenience\"; then\n\t  if test -n \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t  else\n\t    gentop=\"$output_objdir/${outputname}x\"\n\t    generated=\"$generated $gentop\"\n\n\t    func_extract_archives $gentop $convenience\n\t    libobjs=\"$libobjs $func_extract_archives_result\"\n\t  fi\n\tfi\n\t\n\tif test \"$thread_safe\" = yes && test -n \"$thread_safe_flag_spec\"; then\n\t  eval flag=\\\"$thread_safe_flag_spec\\\"\n\t  linker_flags=\"$linker_flags $flag\"\n\tfi\n\n\t# Make a backup of the uninstalled library when relinking\n\tif test \"$mode\" = relink; then\n\t  $run eval '(cd $output_objdir && $rm ${realname}U && $mv $realname ${realname}U)' || exit $?\n\tfi\n\n\t# Do each of the archive commands.\n\tif test \"$module\" = yes && test -n \"$module_cmds\" ; then\n\t  if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t    eval test_cmds=\\\"$module_expsym_cmds\\\"\n\t    cmds=$module_expsym_cmds\n\t  else\n\t    eval test_cmds=\\\"$module_cmds\\\"\n\t    cmds=$module_cmds\n\t  fi\n\telse\n\tif test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t  eval test_cmds=\\\"$archive_expsym_cmds\\\"\n\t  cmds=$archive_expsym_cmds\n\telse\n\t  eval test_cmds=\\\"$archive_cmds\\\"\n\t  cmds=$archive_cmds\n\t  fi\n\tfi\n\n\tif test \"X$skipped_export\" != \"X:\" &&\n\t   len=`expr \"X$test_cmds\" : \".*\" 2>/dev/null` &&\n\t   test \"$len\" -le \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  :\n\telse\n\t  # The command line is too long to link in one step, link piecewise.\n\t  $echo \"creating reloadable object files...\"\n\n\t  # Save the value of $output and $libobjs because we want to\n\t  # use them later.  If we have whole_archive_flag_spec, we\n\t  # want to use save_libobjs as it was before\n\t  # whole_archive_flag_spec was expanded, because we can't\n\t  # assume the linker understands whole_archive_flag_spec.\n\t  # This may have to be revisited, in case too many\n\t  # convenience libraries get linked in and end up exceeding\n\t  # the spec.\n\t  if test -z \"$convenience\" || test -z \"$whole_archive_flag_spec\"; then\n\t    save_libobjs=$libobjs\n\t  fi\n\t  save_output=$output\n\t  output_la=`$echo \"X$output\" | $Xsed -e \"$basename\"`\n\n\t  # Clear the reloadable object creation command queue and\n\t  # initialize k to one.\n\t  test_cmds=\n\t  concat_cmds=\n\t  objlist=\n\t  delfiles=\n\t  last_robj=\n\t  k=1\n\t  output=$output_objdir/$output_la-${k}.$objext\n\t  # Loop over the list of objects to be linked.\n\t  for obj in $save_libobjs\n\t  do\n\t    eval test_cmds=\\\"$reload_cmds $objlist $last_robj\\\"\n\t    if test \"X$objlist\" = X ||\n\t       { len=`expr \"X$test_cmds\" : \".*\" 2>/dev/null` &&\n\t\t test \"$len\" -le \"$max_cmd_len\"; }; then\n\t      objlist=\"$objlist $obj\"\n\t    else\n\t      # The command $test_cmds is almost too long, add a\n\t      # command to the queue.\n\t      if test \"$k\" -eq 1 ; then\n\t\t# The first file doesn't have a previous command to add.\n\t\teval concat_cmds=\\\"$reload_cmds $objlist $last_robj\\\"\n\t      else\n\t\t# All subsequent reloadable object files will link in\n\t\t# the last one created.\n\t\teval concat_cmds=\\\"\\$concat_cmds~$reload_cmds $objlist $last_robj\\\"\n\t      fi\n\t      last_robj=$output_objdir/$output_la-${k}.$objext\n\t      k=`expr $k + 1`\n\t      output=$output_objdir/$output_la-${k}.$objext\n\t      objlist=$obj\n\t      len=1\n\t    fi\n\t  done\n\t  # Handle the remaining objects by creating one last\n\t  # reloadable object file.  All subsequent reloadable object\n\t  # files will link in the last one created.\n\t  test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t  eval concat_cmds=\\\"\\${concat_cmds}$reload_cmds $objlist $last_robj\\\"\n\n\t  if ${skipped_export-false}; then\n\t    $show \"generating symbol list for \\`$libname.la'\"\n\t    export_symbols=\"$output_objdir/$libname.exp\"\n\t    $run $rm $export_symbols\n\t    libobjs=$output\n\t    # Append the command to create the export file.\n\t    eval concat_cmds=\\\"\\$concat_cmds~$export_symbols_cmds\\\"\n          fi\n\n\t  # Set up a command to remove the reloadable object files\n\t  # after they are used.\n\t  i=0\n\t  while test \"$i\" -lt \"$k\"\n\t  do\n\t    i=`expr $i + 1`\n\t    delfiles=\"$delfiles $output_objdir/$output_la-${i}.$objext\"\n\t  done\n\n\t  $echo \"creating a temporary reloadable object file: $output\"\n\n\t  # Loop through the commands generated above and execute them.\n\t  save_ifs=\"$IFS\"; IFS='~'\n\t  for cmd in $concat_cmds; do\n\t    IFS=\"$save_ifs\"\n\t    $show \"$cmd\"\n\t    $run eval \"$cmd\" || exit $?\n\t  done\n\t  IFS=\"$save_ifs\"\n\n\t  libobjs=$output\n\t  # Restore the value of output.\n\t  output=$save_output\n\n\t  if test -n \"$convenience\" && test -n \"$whole_archive_flag_spec\"; then\n\t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n\t  fi\n\t  # Expand the library linking commands again to reset the\n\t  # value of $libobjs for piecewise linking.\n\n\t  # Do each of the archive commands.\n\t  if test \"$module\" = yes && test -n \"$module_cmds\" ; then\n\t    if test -n \"$export_symbols\" && test -n \"$module_expsym_cmds\"; then\n\t      cmds=$module_expsym_cmds\n\t    else\n\t      cmds=$module_cmds\n\t    fi\n\t  else\n\t  if test -n \"$export_symbols\" && test -n \"$archive_expsym_cmds\"; then\n\t    cmds=$archive_expsym_cmds\n\t  else\n\t    cmds=$archive_cmds\n\t    fi\n\t  fi\n\n\t  # Append the command to remove the reloadable object files\n\t  # to the just-reset $cmds.\n\t  eval cmds=\\\"\\$cmds~\\$rm $delfiles\\\"\n\tfi\n\tsave_ifs=\"$IFS\"; IFS='~'\n\tfor cmd in $cmds; do\n\t  IFS=\"$save_ifs\"\n\t  eval cmd=\\\"$cmd\\\"\n\t  $show \"$cmd\"\n\t  $run eval \"$cmd\" || {\n\t    lt_exit=$?\n\n\t    # Restore the uninstalled library and exit\n\t    if test \"$mode\" = relink; then\n\t      $run eval '(cd $output_objdir && $rm ${realname}T && $mv ${realname}U $realname)'\n\t    fi\n\n\t    exit $lt_exit\n\t  }\n\tdone\n\tIFS=\"$save_ifs\"\n\n\t# Restore the uninstalled library and exit\n\tif test \"$mode\" = relink; then\n\t  $run eval '(cd $output_objdir && $rm ${realname}T && $mv $realname ${realname}T && $mv \"$realname\"U $realname)' || exit $?\n\n\t  if test -n \"$convenience\"; then\n\t    if test -z \"$whole_archive_flag_spec\"; then\n\t      $show \"${rm}r $gentop\"\n\t      $run ${rm}r \"$gentop\"\n\t    fi\n\t  fi\n\n\t  exit $EXIT_SUCCESS\n\tfi\n\n\t# Create links to the real library.\n\tfor linkname in $linknames; do\n\t  if test \"$realname\" != \"$linkname\"; then\n\t    $show \"(cd $output_objdir && $rm $linkname && $LN_S $realname $linkname)\"\n\t    $run eval '(cd $output_objdir && $rm $linkname && $LN_S $realname $linkname)' || exit $?\n\t  fi\n\tdone\n\n\t# If -module or -export-dynamic was specified, set the dlname.\n\tif test \"$module\" = yes || test \"$export_dynamic\" = yes; then\n\t  # On all known operating systems, these are identical.\n\t  dlname=\"$soname\"\n\tfi\n      fi\n      ;;\n\n    obj)\n      if test -n \"$deplibs\"; then\n\t$echo \"$modename: warning: \\`-l' and \\`-L' are ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\t$echo \"$modename: warning: \\`-dlopen' is ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$rpath\"; then\n\t$echo \"$modename: warning: \\`-rpath' is ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$xrpath\"; then\n\t$echo \"$modename: warning: \\`-R' is ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$vinfo\"; then\n\t$echo \"$modename: warning: \\`-version-info' is ignored for objects\" 1>&2\n      fi\n\n      if test -n \"$release\"; then\n\t$echo \"$modename: warning: \\`-release' is ignored for objects\" 1>&2\n      fi\n\n      case $output in\n      *.lo)\n\tif test -n \"$objs$old_deplibs\"; then\n\t  $echo \"$modename: cannot build library object \\`$output' from non-libtool objects\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\tlibobj=\"$output\"\n\tobj=`$echo \"X$output\" | $Xsed -e \"$lo2o\"`\n\t;;\n      *)\n\tlibobj=\n\tobj=\"$output\"\n\t;;\n      esac\n\n      # Delete the old objects.\n      $run $rm $obj $libobj\n\n      # Objects from convenience libraries.  This assumes\n      # single-version convenience libraries.  Whenever we create\n      # different ones for PIC/non-PIC, this we'll have to duplicate\n      # the extraction.\n      reload_conv_objs=\n      gentop=\n      # reload_cmds runs $LD directly, so let us get rid of\n      # -Wl from whole_archive_flag_spec\n      wl=\n\n      if test -n \"$convenience\"; then\n\tif test -n \"$whole_archive_flag_spec\"; then\n\t  eval reload_conv_objs=\\\"\\$reload_objs $whole_archive_flag_spec\\\"\n\telse\n\t  gentop=\"$output_objdir/${obj}x\"\n\t  generated=\"$generated $gentop\"\n\n\t  func_extract_archives $gentop $convenience\n\t  reload_conv_objs=\"$reload_objs $func_extract_archives_result\"\n\tfi\n      fi\n\n      # Create the old-style object.\n      reload_objs=\"$objs$old_deplibs \"`$echo \"X$libobjs\" | $SP2NL | $Xsed -e '/\\.'${libext}$'/d' -e '/\\.lib$/d' -e \"$lo2o\" | $NL2SP`\" $reload_conv_objs\" ### testsuite: skip nested quoting test\n\n      output=\"$obj\"\n      cmds=$reload_cmds\n      save_ifs=\"$IFS\"; IFS='~'\n      for cmd in $cmds; do\n\tIFS=\"$save_ifs\"\n\teval cmd=\\\"$cmd\\\"\n\t$show \"$cmd\"\n\t$run eval \"$cmd\" || exit $?\n      done\n      IFS=\"$save_ifs\"\n\n      # Exit if we aren't doing a library object file.\n      if test -z \"$libobj\"; then\n\tif test -n \"$gentop\"; then\n\t  $show \"${rm}r $gentop\"\n\t  $run ${rm}r $gentop\n\tfi\n\n\texit $EXIT_SUCCESS\n      fi\n\n      if test \"$build_libtool_libs\" != yes; then\n\tif test -n \"$gentop\"; then\n\t  $show \"${rm}r $gentop\"\n\t  $run ${rm}r $gentop\n\tfi\n\n\t# Create an invalid libtool object if no PIC, so that we don't\n\t# accidentally link it into a program.\n\t# $show \"echo timestamp > $libobj\"\n\t# $run eval \"echo timestamp > $libobj\" || exit $?\n\texit $EXIT_SUCCESS\n      fi\n\n      if test -n \"$pic_flag\" || test \"$pic_mode\" != default; then\n\t# Only do commands if we really have different PIC objects.\n\treload_objs=\"$libobjs $reload_conv_objs\"\n\toutput=\"$libobj\"\n\tcmds=$reload_cmds\n\tsave_ifs=\"$IFS\"; IFS='~'\n\tfor cmd in $cmds; do\n\t  IFS=\"$save_ifs\"\n\t  eval cmd=\\\"$cmd\\\"\n\t  $show \"$cmd\"\n\t  $run eval \"$cmd\" || exit $?\n\tdone\n\tIFS=\"$save_ifs\"\n      fi\n\n      if test -n \"$gentop\"; then\n\t$show \"${rm}r $gentop\"\n\t$run ${rm}r $gentop\n      fi\n\n      exit $EXIT_SUCCESS\n      ;;\n\n    prog)\n      case $host in\n\t*cygwin*) output=`$echo $output | ${SED} -e 's,.exe$,,;s,$,.exe,'` ;;\n      esac\n      if test -n \"$vinfo\"; then\n\t$echo \"$modename: warning: \\`-version-info' is ignored for programs\" 1>&2\n      fi\n\n      if test -n \"$release\"; then\n\t$echo \"$modename: warning: \\`-release' is ignored for programs\" 1>&2\n      fi\n\n      if test \"$preload\" = yes; then\n\tif test \"$dlopen_support\" = unknown && test \"$dlopen_self\" = unknown &&\n\t   test \"$dlopen_self_static\" = unknown; then\n\t  $echo \"$modename: warning: \\`AC_LIBTOOL_DLOPEN' not used. Assuming no dlopen support.\"\n\tfi\n      fi\n\n      case $host in\n      *-*-rhapsody* | *-*-darwin1.[012])\n\t# On Rhapsody replace the C library is the System framework\n\tcompile_deplibs=`$echo \"X $compile_deplibs\" | $Xsed -e 's/ -lc / -framework System /'`\n\tfinalize_deplibs=`$echo \"X $finalize_deplibs\" | $Xsed -e 's/ -lc / -framework System /'`\n\t;;\n      esac\n\n      case $host in\n      *darwin*)\n        # Don't allow lazy linking, it breaks C++ global constructors\n        if test \"$tagname\" = CXX ; then\n        compile_command=\"$compile_command ${wl}-bind_at_load\"\n        finalize_command=\"$finalize_command ${wl}-bind_at_load\"\n        fi\n        ;;\n      esac\n\n\n      # move library search paths that coincide with paths to not yet\n      # installed libraries to the beginning of the library search list\n      new_libs=\n      for path in $notinst_path; do\n\tcase \" $new_libs \" in\n\t*\" -L$path/$objdir \"*) ;;\n\t*)\n\t  case \" $compile_deplibs \" in\n\t  *\" -L$path/$objdir \"*)\n\t    new_libs=\"$new_libs -L$path/$objdir\" ;;\n\t  esac\n\t  ;;\n\tesac\n      done\n      for deplib in $compile_deplibs; do\n\tcase $deplib in\n\t-L*)\n\t  case \" $new_libs \" in\n\t  *\" $deplib \"*) ;;\n\t  *) new_libs=\"$new_libs $deplib\" ;;\n\t  esac\n\t  ;;\n\t*) new_libs=\"$new_libs $deplib\" ;;\n\tesac\n      done\n      compile_deplibs=\"$new_libs\"\n\n\n      compile_command=\"$compile_command $compile_deplibs\"\n      finalize_command=\"$finalize_command $finalize_deplibs\"\n\n      if test -n \"$rpath$xrpath\"; then\n\t# If the user specified any rpath flags, then add them.\n\tfor libdir in $rpath $xrpath; do\n\t  # This is the magic to use -rpath.\n\t  case \"$finalize_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) finalize_rpath=\"$finalize_rpath $libdir\" ;;\n\t  esac\n\tdone\n      fi\n\n      # Now hardcode the library paths\n      rpath=\n      hardcode_libdirs=\n      for libdir in $compile_rpath $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=\"$libdir\"\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\thardcode_libdirs=\"$hardcode_libdirs$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    rpath=\"$rpath $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) perm_rpath=\"$perm_rpath $libdir\" ;;\n\t  esac\n\tfi\n\tcase $host in\n\t*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2*)\n\t  testbindir=`$echo \"X$libdir\" | $Xsed -e 's*/lib$*/bin*'`\n\t  case :$dllsearchpath: in\n\t  *\":$libdir:\"*) ;;\n\t  *) dllsearchpath=\"$dllsearchpath:$libdir\";;\n\t  esac\n\t  case :$dllsearchpath: in\n\t  *\":$testbindir:\"*) ;;\n\t  *) dllsearchpath=\"$dllsearchpath:$testbindir\";;\n\t  esac\n\t  ;;\n\tesac\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=\"$hardcode_libdirs\"\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      compile_rpath=\"$rpath\"\n\n      rpath=\n      hardcode_libdirs=\n      for libdir in $finalize_rpath; do\n\tif test -n \"$hardcode_libdir_flag_spec\"; then\n\t  if test -n \"$hardcode_libdir_separator\"; then\n\t    if test -z \"$hardcode_libdirs\"; then\n\t      hardcode_libdirs=\"$libdir\"\n\t    else\n\t      # Just accumulate the unique libdirs.\n\t      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in\n\t      *\"$hardcode_libdir_separator$libdir$hardcode_libdir_separator\"*)\n\t\t;;\n\t      *)\n\t\thardcode_libdirs=\"$hardcode_libdirs$hardcode_libdir_separator$libdir\"\n\t\t;;\n\t      esac\n\t    fi\n\t  else\n\t    eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\t    rpath=\"$rpath $flag\"\n\t  fi\n\telif test -n \"$runpath_var\"; then\n\t  case \"$finalize_perm_rpath \" in\n\t  *\" $libdir \"*) ;;\n\t  *) finalize_perm_rpath=\"$finalize_perm_rpath $libdir\" ;;\n\t  esac\n\tfi\n      done\n      # Substitute the hardcoded libdirs into the rpath.\n      if test -n \"$hardcode_libdir_separator\" &&\n\t test -n \"$hardcode_libdirs\"; then\n\tlibdir=\"$hardcode_libdirs\"\n\teval rpath=\\\" $hardcode_libdir_flag_spec\\\"\n      fi\n      finalize_rpath=\"$rpath\"\n\n      if test -n \"$libobjs\" && test \"$build_old_libs\" = yes; then\n\t# Transform all the library objects into standard objects.\n\tcompile_command=`$echo \"X$compile_command\" | $SP2NL | $Xsed -e \"$lo2o\" | $NL2SP`\n\tfinalize_command=`$echo \"X$finalize_command\" | $SP2NL | $Xsed -e \"$lo2o\" | $NL2SP`\n      fi\n\n      dlsyms=\n      if test -n \"$dlfiles$dlprefiles\" || test \"$dlself\" != no; then\n\tif test -n \"$NM\" && test -n \"$global_symbol_pipe\"; then\n\t  dlsyms=\"${outputname}S.c\"\n\telse\n\t  $echo \"$modename: not configured to extract global symbols from dlpreopened files\" 1>&2\n\tfi\n      fi\n\n      if test -n \"$dlsyms\"; then\n\tcase $dlsyms in\n\t\"\") ;;\n\t*.c)\n\t  # Discover the nlist of each of the dlfiles.\n\t  nlist=\"$output_objdir/${outputname}.nm\"\n\n\t  $show \"$rm $nlist ${nlist}S ${nlist}T\"\n\t  $run $rm \"$nlist\" \"${nlist}S\" \"${nlist}T\"\n\n\t  # Parse the name list into a source file.\n\t  $show \"creating $output_objdir/$dlsyms\"\n\n\t  test -z \"$run\" && $echo > \"$output_objdir/$dlsyms\" \"\\\n/* $dlsyms - symbol resolution table for \\`$outputname' dlsym emulation. */\n/* Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP */\n\n#ifdef __cplusplus\nextern \\\"C\\\" {\n#endif\n\n/* Prevent the only kind of declaration conflicts we can make. */\n#define lt_preloaded_symbols some_other_symbol\n\n/* External symbol declarations for the compiler. */\\\n\"\n\n\t  if test \"$dlself\" = yes; then\n\t    $show \"generating symbol list for \\`$output'\"\n\n\t    test -z \"$run\" && $echo ': @PROGRAM@ ' > \"$nlist\"\n\n\t    # Add our own program objects to the symbol list.\n\t    progfiles=`$echo \"X$objs$old_deplibs\" | $SP2NL | $Xsed -e \"$lo2o\" | $NL2SP`\n\t    for arg in $progfiles; do\n\t      $show \"extracting global C symbols from \\`$arg'\"\n\t      $run eval \"$NM $arg | $global_symbol_pipe >> '$nlist'\"\n\t    done\n\n\t    if test -n \"$exclude_expsyms\"; then\n\t      $run eval '$EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T'\n\t      $run eval '$mv \"$nlist\"T \"$nlist\"'\n\t    fi\n\n\t    if test -n \"$export_symbols_regex\"; then\n\t      $run eval '$EGREP -e \"$export_symbols_regex\" \"$nlist\" > \"$nlist\"T'\n\t      $run eval '$mv \"$nlist\"T \"$nlist\"'\n\t    fi\n\n\t    # Prepare the list of exported symbols\n\t    if test -z \"$export_symbols\"; then\n\t      export_symbols=\"$output_objdir/$outputname.exp\"\n\t      $run $rm $export_symbols\n\t      $run eval \"${SED} -n -e '/^: @PROGRAM@ $/d' -e 's/^.* \\(.*\\)$/\\1/p' \"'< \"$nlist\" > \"$export_symbols\"'\n              case $host in\n              *cygwin* | *mingw* )\n\t        $run eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n\t\t$run eval 'cat \"$export_symbols\" >> \"$output_objdir/$outputname.def\"'\n                ;;\n              esac\n\t    else\n\t      $run eval \"${SED} -e 's/\\([].[*^$]\\)/\\\\\\\\\\1/g' -e 's/^/ /' -e 's/$/$/'\"' < \"$export_symbols\" > \"$output_objdir/$outputname.exp\"'\n\t      $run eval 'grep -f \"$output_objdir/$outputname.exp\" < \"$nlist\" > \"$nlist\"T'\n\t      $run eval 'mv \"$nlist\"T \"$nlist\"'\n              case $host in\n              *cygwin* | *mingw* )\n\t        $run eval \"echo EXPORTS \"'> \"$output_objdir/$outputname.def\"'\n\t\t$run eval 'cat \"$nlist\" >> \"$output_objdir/$outputname.def\"'\n                ;;\n              esac\n\t    fi\n\t  fi\n\n\t  for arg in $dlprefiles; do\n\t    $show \"extracting global C symbols from \\`$arg'\"\n\t    name=`$echo \"$arg\" | ${SED} -e 's%^.*/%%'`\n\t    $run eval '$echo \": $name \" >> \"$nlist\"'\n\t    $run eval \"$NM $arg | $global_symbol_pipe >> '$nlist'\"\n\t  done\n\n\t  if test -z \"$run\"; then\n\t    # Make sure we have at least an empty file.\n\t    test -f \"$nlist\" || : > \"$nlist\"\n\n\t    if test -n \"$exclude_expsyms\"; then\n\t      $EGREP -v \" ($exclude_expsyms)$\" \"$nlist\" > \"$nlist\"T\n\t      $mv \"$nlist\"T \"$nlist\"\n\t    fi\n\n\t    # Try sorting and uniquifying the output.\n\t    if grep -v \"^: \" < \"$nlist\" |\n\t\tif sort -k 3 </dev/null >/dev/null 2>&1; then\n\t\t  sort -k 3\n\t\telse\n\t\t  sort +2\n\t\tfi |\n\t\tuniq > \"$nlist\"S; then\n\t      :\n\t    else\n\t      grep -v \"^: \" < \"$nlist\" > \"$nlist\"S\n\t    fi\n\n\t    if test -f \"$nlist\"S; then\n\t      eval \"$global_symbol_to_cdecl\"' < \"$nlist\"S >> \"$output_objdir/$dlsyms\"'\n\t    else\n\t      $echo '/* NONE */' >> \"$output_objdir/$dlsyms\"\n\t    fi\n\n\t    $echo >> \"$output_objdir/$dlsyms\" \"\\\n\n#undef lt_preloaded_symbols\n\n#if defined (__STDC__) && __STDC__\n# define lt_ptr void *\n#else\n# define lt_ptr char *\n# define const\n#endif\n\n/* The mapping between symbol names and symbols. */\n\"\n\n\t    case $host in\n\t    *cygwin* | *mingw* )\n\t  $echo >> \"$output_objdir/$dlsyms\" \"\\\n/* DATA imports from DLLs on WIN32 can't be const, because\n   runtime relocations are performed -- see ld's documentation\n   on pseudo-relocs */\nstruct {\n\"\n\t      ;;\n\t    * )\n\t  $echo >> \"$output_objdir/$dlsyms\" \"\\\nconst struct {\n\"\n\t      ;;\n\t    esac\n\n\n\t  $echo >> \"$output_objdir/$dlsyms\" \"\\\n  const char *name;\n  lt_ptr address;\n}\nlt_preloaded_symbols[] =\n{\\\n\"\n\n\t    eval \"$global_symbol_to_c_name_address\" < \"$nlist\" >> \"$output_objdir/$dlsyms\"\n\n\t    $echo >> \"$output_objdir/$dlsyms\" \"\\\n  {0, (lt_ptr) 0}\n};\n\n/* This works around a problem in FreeBSD linker */\n#ifdef FREEBSD_WORKAROUND\nstatic const void *lt_preloaded_setup() {\n  return lt_preloaded_symbols;\n}\n#endif\n\n#ifdef __cplusplus\n}\n#endif\\\n\"\n\t  fi\n\n\t  pic_flag_for_symtable=\n\t  case $host in\n\t  # compiling the symbol table file with pic_flag works around\n\t  # a FreeBSD bug that causes programs to crash when -lm is\n\t  # linked before any other PIC object.  But we must not use\n\t  # pic_flag when linking with -static.  The problem exists in\n\t  # FreeBSD 2.2.6 and is fixed in FreeBSD 3.1.\n\t  *-*-freebsd2*|*-*-freebsd3.0*|*-*-freebsdelf3.0*)\n\t    case \"$compile_command \" in\n\t    *\" -static \"*) ;;\n\t    *) pic_flag_for_symtable=\" $pic_flag -DFREEBSD_WORKAROUND\";;\n\t    esac;;\n\t  *-*-hpux*)\n\t    case \"$compile_command \" in\n\t    *\" -static \"*) ;;\n\t    *) pic_flag_for_symtable=\" $pic_flag\";;\n\t    esac\n\t  esac\n\n\t  # Now compile the dynamic symbol file.\n\t  $show \"(cd $output_objdir && $LTCC  $LTCFLAGS -c$no_builtin_flag$pic_flag_for_symtable \\\"$dlsyms\\\")\"\n\t  $run eval '(cd $output_objdir && $LTCC  $LTCFLAGS -c$no_builtin_flag$pic_flag_for_symtable \"$dlsyms\")' || exit $?\n\n\t  # Clean up the generated files.\n\t  $show \"$rm $output_objdir/$dlsyms $nlist ${nlist}S ${nlist}T\"\n\t  $run $rm \"$output_objdir/$dlsyms\" \"$nlist\" \"${nlist}S\" \"${nlist}T\"\n\n\t  # Transform the symbol file into the correct name.\n          case $host in\n          *cygwin* | *mingw* )\n            if test -f \"$output_objdir/${outputname}.def\" ; then\n              compile_command=`$echo \"X$compile_command\" | $Xsed -e \"s%@SYMFILE@%$output_objdir/${outputname}.def $output_objdir/${outputname}S.${objext}%\"`\n              finalize_command=`$echo \"X$finalize_command\" | $Xsed -e \"s%@SYMFILE@%$output_objdir/${outputname}.def $output_objdir/${outputname}S.${objext}%\"`\n            else\n              compile_command=`$echo \"X$compile_command\" | $Xsed -e \"s%@SYMFILE@%$output_objdir/${outputname}S.${objext}%\"`\n              finalize_command=`$echo \"X$finalize_command\" | $Xsed -e \"s%@SYMFILE@%$output_objdir/${outputname}S.${objext}%\"`\n             fi\n            ;;\n          * )\n            compile_command=`$echo \"X$compile_command\" | $Xsed -e \"s%@SYMFILE@%$output_objdir/${outputname}S.${objext}%\"`\n            finalize_command=`$echo \"X$finalize_command\" | $Xsed -e \"s%@SYMFILE@%$output_objdir/${outputname}S.${objext}%\"`\n            ;;\n          esac\n\t  ;;\n\t*)\n\t  $echo \"$modename: unknown suffix for \\`$dlsyms'\" 1>&2\n\t  exit $EXIT_FAILURE\n\t  ;;\n\tesac\n      else\n\t# We keep going just in case the user didn't refer to\n\t# lt_preloaded_symbols.  The linker will fail if global_symbol_pipe\n\t# really was required.\n\n\t# Nullify the symbol file.\n\tcompile_command=`$echo \"X$compile_command\" | $Xsed -e \"s% @SYMFILE@%%\"`\n\tfinalize_command=`$echo \"X$finalize_command\" | $Xsed -e \"s% @SYMFILE@%%\"`\n      fi\n\n      if test \"$need_relink\" = no || test \"$build_libtool_libs\" != yes; then\n\t# Replace the output file specification.\n\tcompile_command=`$echo \"X$compile_command\" | $Xsed -e 's%@OUTPUT@%'\"$output\"'%g'`\n\tlink_command=\"$compile_command$compile_rpath\"\n\n\t# We have no uninstalled library dependencies, so finalize right now.\n\t$show \"$link_command\"\n\t$run eval \"$link_command\"\n\texit_status=$?\n\n\t# Delete the generated files.\n\tif test -n \"$dlsyms\"; then\n\t  $show \"$rm $output_objdir/${outputname}S.${objext}\"\n\t  $run $rm \"$output_objdir/${outputname}S.${objext}\"\n\tfi\n\n\texit $exit_status\n      fi\n\n      if test -n \"$shlibpath_var\"; then\n\t# We should set the shlibpath_var\n\trpath=\n\tfor dir in $temp_rpath; do\n\t  case $dir in\n\t  [\\\\/]* | [A-Za-z]:[\\\\/]*)\n\t    # Absolute path.\n\t    rpath=\"$rpath$dir:\"\n\t    ;;\n\t  *)\n\t    # Relative path: add a thisdir entry.\n\t    rpath=\"$rpath\\$thisdir/$dir:\"\n\t    ;;\n\t  esac\n\tdone\n\ttemp_rpath=\"$rpath\"\n      fi\n\n      if test -n \"$compile_shlibpath$finalize_shlibpath\"; then\n\tcompile_command=\"$shlibpath_var=\\\"$compile_shlibpath$finalize_shlibpath\\$$shlibpath_var\\\" $compile_command\"\n      fi\n      if test -n \"$finalize_shlibpath\"; then\n\tfinalize_command=\"$shlibpath_var=\\\"$finalize_shlibpath\\$$shlibpath_var\\\" $finalize_command\"\n      fi\n\n      compile_var=\n      finalize_var=\n      if test -n \"$runpath_var\"; then\n\tif test -n \"$perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $perm_rpath; do\n\t    rpath=\"$rpath$dir:\"\n\t  done\n\t  compile_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n\tif test -n \"$finalize_perm_rpath\"; then\n\t  # We should set the runpath_var.\n\t  rpath=\n\t  for dir in $finalize_perm_rpath; do\n\t    rpath=\"$rpath$dir:\"\n\t  done\n\t  finalize_var=\"$runpath_var=\\\"$rpath\\$$runpath_var\\\" \"\n\tfi\n      fi\n\n      if test \"$no_install\" = yes; then\n\t# We don't need to create a wrapper script.\n\tlink_command=\"$compile_var$compile_command$compile_rpath\"\n\t# Replace the output file specification.\n\tlink_command=`$echo \"X$link_command\" | $Xsed -e 's%@OUTPUT@%'\"$output\"'%g'`\n\t# Delete the old output file.\n\t$run $rm $output\n\t# Link the executable and exit\n\t$show \"$link_command\"\n\t$run eval \"$link_command\" || exit $?\n\texit $EXIT_SUCCESS\n      fi\n\n      if test \"$hardcode_action\" = relink; then\n\t# Fast installation is not supported\n\tlink_command=\"$compile_var$compile_command$compile_rpath\"\n\trelink_command=\"$finalize_var$finalize_command$finalize_rpath\"\n\n\t$echo \"$modename: warning: this platform does not like uninstalled shared libraries\" 1>&2\n\t$echo \"$modename: \\`$output' will be relinked during installation\" 1>&2\n      else\n\tif test \"$fast_install\" != no; then\n\t  link_command=\"$finalize_var$compile_command$finalize_rpath\"\n\t  if test \"$fast_install\" = yes; then\n\t    relink_command=`$echo \"X$compile_var$compile_command$compile_rpath\" | $Xsed -e 's%@OUTPUT@%\\$progdir/\\$file%g'`\n\t  else\n\t    # fast_install is set to needless\n\t    relink_command=\n\t  fi\n\telse\n\t  link_command=\"$compile_var$compile_command$compile_rpath\"\n\t  relink_command=\"$finalize_var$finalize_command$finalize_rpath\"\n\tfi\n      fi\n\n      # Replace the output file specification.\n      link_command=`$echo \"X$link_command\" | $Xsed -e 's%@OUTPUT@%'\"$output_objdir/$outputname\"'%g'`\n\n      # Delete the old output files.\n      $run $rm $output $output_objdir/$outputname $output_objdir/lt-$outputname\n\n      $show \"$link_command\"\n      $run eval \"$link_command\" || exit $?\n\n      # Now create the wrapper script.\n      $show \"creating $output\"\n\n      # Quote the relink command for shipping.\n      if test -n \"$relink_command\"; then\n\t# Preserve any variables that may affect compiler behavior\n\tfor var in $variables_saved_for_relink; do\n\t  if eval test -z \\\"\\${$var+set}\\\"; then\n\t    relink_command=\"{ test -z \\\"\\${$var+set}\\\" || unset $var || { $var=; export $var; }; }; $relink_command\"\n\t  elif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t    relink_command=\"$var=; export $var; $relink_command\"\n\t  else\n\t    var_value=`$echo \"X$var_value\" | $Xsed -e \"$sed_quote_subst\"`\n\t    relink_command=\"$var=\\\"$var_value\\\"; export $var; $relink_command\"\n\t  fi\n\tdone\n\trelink_command=\"(cd `pwd`; $relink_command)\"\n\trelink_command=`$echo \"X$relink_command\" | $Xsed -e \"$sed_quote_subst\"`\n      fi\n\n      # Quote $echo for shipping.\n      if test \"X$echo\" = \"X$SHELL $progpath --fallback-echo\"; then\n\tcase $progpath in\n\t[\\\\/]* | [A-Za-z]:[\\\\/]*) qecho=\"$SHELL $progpath --fallback-echo\";;\n\t*) qecho=\"$SHELL `pwd`/$progpath --fallback-echo\";;\n\tesac\n\tqecho=`$echo \"X$qecho\" | $Xsed -e \"$sed_quote_subst\"`\n      else\n\tqecho=`$echo \"X$echo\" | $Xsed -e \"$sed_quote_subst\"`\n      fi\n\n      # Only actually do things if our run command is non-null.\n      if test -z \"$run\"; then\n\t# win32 will think the script is a binary if it has\n\t# a .exe suffix, so we strip it off here.\n\tcase $output in\n\t  *.exe) output=`$echo $output|${SED} 's,.exe$,,'` ;;\n\tesac\n\t# test for cygwin because mv fails w/o .exe extensions\n\tcase $host in\n\t  *cygwin*)\n\t    exeext=.exe\n\t    outputname=`$echo $outputname|${SED} 's,.exe$,,'` ;;\n\t  *) exeext= ;;\n\tesac\n\tcase $host in\n\t  *cygwin* | *mingw* )\n            output_name=`basename $output`\n            output_path=`dirname $output`\n            cwrappersource=\"$output_path/$objdir/lt-$output_name.c\"\n            cwrapper=\"$output_path/$output_name.exe\"\n            $rm $cwrappersource $cwrapper\n            trap \"$rm $cwrappersource $cwrapper; exit $EXIT_FAILURE\" 1 2 15\n\n\t    cat > $cwrappersource <<EOF\n\n/* $cwrappersource - temporary wrapper executable for $objdir/$outputname\n   Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP\n\n   The $output program cannot be directly executed until all the libtool\n   libraries that it depends on are installed.\n\n   This wrapper executable should never be moved out of the build directory.\n   If it is, it will not operate correctly.\n\n   Currently, it simply execs the wrapper *script* \"/bin/sh $output\",\n   but could eventually absorb all of the scripts functionality and\n   exec $objdir/$outputname directly.\n*/\nEOF\n\t    cat >> $cwrappersource<<\"EOF\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <malloc.h>\n#include <stdarg.h>\n#include <assert.h>\n#include <string.h>\n#include <ctype.h>\n#include <sys/stat.h>\n\n#if defined(PATH_MAX)\n# define LT_PATHMAX PATH_MAX\n#elif defined(MAXPATHLEN)\n# define LT_PATHMAX MAXPATHLEN\n#else\n# define LT_PATHMAX 1024\n#endif\n\n#ifndef DIR_SEPARATOR\n# define DIR_SEPARATOR '/'\n# define PATH_SEPARATOR ':'\n#endif\n\n#if defined (_WIN32) || defined (__MSDOS__) || defined (__DJGPP__) || \\\n  defined (__OS2__)\n# define HAVE_DOS_BASED_FILE_SYSTEM\n# ifndef DIR_SEPARATOR_2\n#  define DIR_SEPARATOR_2 '\\\\'\n# endif\n# ifndef PATH_SEPARATOR_2\n#  define PATH_SEPARATOR_2 ';'\n# endif\n#endif\n\n#ifndef DIR_SEPARATOR_2\n# define IS_DIR_SEPARATOR(ch) ((ch) == DIR_SEPARATOR)\n#else /* DIR_SEPARATOR_2 */\n# define IS_DIR_SEPARATOR(ch) \\\n        (((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))\n#endif /* DIR_SEPARATOR_2 */\n\n#ifndef PATH_SEPARATOR_2\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR)\n#else /* PATH_SEPARATOR_2 */\n# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR_2)\n#endif /* PATH_SEPARATOR_2 */\n\n#define XMALLOC(type, num)      ((type *) xmalloc ((num) * sizeof(type)))\n#define XFREE(stale) do { \\\n  if (stale) { free ((void *) stale); stale = 0; } \\\n} while (0)\n\n/* -DDEBUG is fairly common in CFLAGS.  */\n#undef DEBUG\n#if defined DEBUGWRAPPER\n# define DEBUG(format, ...) fprintf(stderr, format, __VA_ARGS__)\n#else\n# define DEBUG(format, ...)\n#endif\n\nconst char *program_name = NULL;\n\nvoid * xmalloc (size_t num);\nchar * xstrdup (const char *string);\nconst char * base_name (const char *name);\nchar * find_executable(const char *wrapper);\nint    check_executable(const char *path);\nchar * strendzap(char *str, const char *pat);\nvoid lt_fatal (const char *message, ...);\n\nint\nmain (int argc, char *argv[])\n{\n  char **newargz;\n  int i;\n\n  program_name = (char *) xstrdup (base_name (argv[0]));\n  DEBUG(\"(main) argv[0]      : %s\\n\",argv[0]);\n  DEBUG(\"(main) program_name : %s\\n\",program_name);\n  newargz = XMALLOC(char *, argc+2);\nEOF\n\n            cat >> $cwrappersource <<EOF\n  newargz[0] = (char *) xstrdup(\"$SHELL\");\nEOF\n\n            cat >> $cwrappersource <<\"EOF\"\n  newargz[1] = find_executable(argv[0]);\n  if (newargz[1] == NULL)\n    lt_fatal(\"Couldn't find %s\", argv[0]);\n  DEBUG(\"(main) found exe at : %s\\n\",newargz[1]);\n  /* we know the script has the same name, without the .exe */\n  /* so make sure newargz[1] doesn't end in .exe */\n  strendzap(newargz[1],\".exe\");\n  for (i = 1; i < argc; i++)\n    newargz[i+1] = xstrdup(argv[i]);\n  newargz[argc+1] = NULL;\n\n  for (i=0; i<argc+1; i++)\n  {\n    DEBUG(\"(main) newargz[%d]   : %s\\n\",i,newargz[i]);\n    ;\n  }\n\nEOF\n\n            case $host_os in\n              mingw*)\n                cat >> $cwrappersource <<EOF\n  execv(\"$SHELL\",(char const **)newargz);\nEOF\n              ;;\n              *)\n                cat >> $cwrappersource <<EOF\n  execv(\"$SHELL\",newargz);\nEOF\n              ;;\n            esac\n\n            cat >> $cwrappersource <<\"EOF\"\n  return 127;\n}\n\nvoid *\nxmalloc (size_t num)\n{\n  void * p = (void *) malloc (num);\n  if (!p)\n    lt_fatal (\"Memory exhausted\");\n\n  return p;\n}\n\nchar *\nxstrdup (const char *string)\n{\n  return string ? strcpy ((char *) xmalloc (strlen (string) + 1), string) : NULL\n;\n}\n\nconst char *\nbase_name (const char *name)\n{\n  const char *base;\n\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n  /* Skip over the disk name in MSDOS pathnames. */\n  if (isalpha ((unsigned char)name[0]) && name[1] == ':')\n    name += 2;\n#endif\n\n  for (base = name; *name; name++)\n    if (IS_DIR_SEPARATOR (*name))\n      base = name + 1;\n  return base;\n}\n\nint\ncheck_executable(const char * path)\n{\n  struct stat st;\n\n  DEBUG(\"(check_executable)  : %s\\n\", path ? (*path ? path : \"EMPTY!\") : \"NULL!\");\n  if ((!path) || (!*path))\n    return 0;\n\n  if ((stat (path, &st) >= 0) &&\n      (\n        /* MinGW & native WIN32 do not support S_IXOTH or S_IXGRP */\n#if defined (S_IXOTH)\n       ((st.st_mode & S_IXOTH) == S_IXOTH) ||\n#endif\n#if defined (S_IXGRP)\n       ((st.st_mode & S_IXGRP) == S_IXGRP) ||\n#endif\n       ((st.st_mode & S_IXUSR) == S_IXUSR))\n      )\n    return 1;\n  else\n    return 0;\n}\n\n/* Searches for the full path of the wrapper.  Returns\n   newly allocated full path name if found, NULL otherwise */\nchar *\nfind_executable (const char* wrapper)\n{\n  int has_slash = 0;\n  const char* p;\n  const char* p_next;\n  /* static buffer for getcwd */\n  char tmp[LT_PATHMAX + 1];\n  int tmp_len;\n  char* concat_name;\n\n  DEBUG(\"(find_executable)  : %s\\n\", wrapper ? (*wrapper ? wrapper : \"EMPTY!\") : \"NULL!\");\n\n  if ((wrapper == NULL) || (*wrapper == '\\0'))\n    return NULL;\n\n  /* Absolute path? */\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n  if (isalpha ((unsigned char)wrapper[0]) && wrapper[1] == ':')\n  {\n    concat_name = xstrdup (wrapper);\n    if (check_executable(concat_name))\n      return concat_name;\n    XFREE(concat_name);\n  }\n  else\n  {\n#endif\n    if (IS_DIR_SEPARATOR (wrapper[0]))\n    {\n      concat_name = xstrdup (wrapper);\n      if (check_executable(concat_name))\n        return concat_name;\n      XFREE(concat_name);\n    }\n#if defined (HAVE_DOS_BASED_FILE_SYSTEM)\n  }\n#endif\n\n  for (p = wrapper; *p; p++)\n    if (*p == '/')\n    {\n      has_slash = 1;\n      break;\n    }\n  if (!has_slash)\n  {\n    /* no slashes; search PATH */\n    const char* path = getenv (\"PATH\");\n    if (path != NULL)\n    {\n      for (p = path; *p; p = p_next)\n      {\n        const char* q;\n        size_t p_len;\n        for (q = p; *q; q++)\n          if (IS_PATH_SEPARATOR(*q))\n            break;\n        p_len = q - p;\n        p_next = (*q == '\\0' ? q : q + 1);\n        if (p_len == 0)\n        {\n          /* empty path: current directory */\n          if (getcwd (tmp, LT_PATHMAX) == NULL)\n            lt_fatal (\"getcwd failed\");\n          tmp_len = strlen(tmp);\n          concat_name = XMALLOC(char, tmp_len + 1 + strlen(wrapper) + 1);\n          memcpy (concat_name, tmp, tmp_len);\n          concat_name[tmp_len] = '/';\n          strcpy (concat_name + tmp_len + 1, wrapper);\n        }\n        else\n        {\n          concat_name = XMALLOC(char, p_len + 1 + strlen(wrapper) + 1);\n          memcpy (concat_name, p, p_len);\n          concat_name[p_len] = '/';\n          strcpy (concat_name + p_len + 1, wrapper);\n        }\n        if (check_executable(concat_name))\n          return concat_name;\n        XFREE(concat_name);\n      }\n    }\n    /* not found in PATH; assume curdir */\n  }\n  /* Relative path | not found in path: prepend cwd */\n  if (getcwd (tmp, LT_PATHMAX) == NULL)\n    lt_fatal (\"getcwd failed\");\n  tmp_len = strlen(tmp);\n  concat_name = XMALLOC(char, tmp_len + 1 + strlen(wrapper) + 1);\n  memcpy (concat_name, tmp, tmp_len);\n  concat_name[tmp_len] = '/';\n  strcpy (concat_name + tmp_len + 1, wrapper);\n\n  if (check_executable(concat_name))\n    return concat_name;\n  XFREE(concat_name);\n  return NULL;\n}\n\nchar *\nstrendzap(char *str, const char *pat)\n{\n  size_t len, patlen;\n\n  assert(str != NULL);\n  assert(pat != NULL);\n\n  len = strlen(str);\n  patlen = strlen(pat);\n\n  if (patlen <= len)\n  {\n    str += len - patlen;\n    if (strcmp(str, pat) == 0)\n      *str = '\\0';\n  }\n  return str;\n}\n\nstatic void\nlt_error_core (int exit_status, const char * mode,\n          const char * message, va_list ap)\n{\n  fprintf (stderr, \"%s: %s: \", program_name, mode);\n  vfprintf (stderr, message, ap);\n  fprintf (stderr, \".\\n\");\n\n  if (exit_status >= 0)\n    exit (exit_status);\n}\n\nvoid\nlt_fatal (const char *message, ...)\n{\n  va_list ap;\n  va_start (ap, message);\n  lt_error_core (EXIT_FAILURE, \"FATAL\", message, ap);\n  va_end (ap);\n}\nEOF\n          # we should really use a build-platform specific compiler\n          # here, but OTOH, the wrappers (shell script and this C one)\n          # are only useful if you want to execute the \"real\" binary.\n          # Since the \"real\" binary is built for $host, then this\n          # wrapper might as well be built for $host, too.\n          $run $LTCC $LTCFLAGS -s -o $cwrapper $cwrappersource\n          ;;\n        esac\n        $rm $output\n        trap \"$rm $output; exit $EXIT_FAILURE\" 1 2 15\n\n\t$echo > $output \"\\\n#! $SHELL\n\n# $output - temporary wrapper script for $objdir/$outputname\n# Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP\n#\n# The $output program cannot be directly executed until all the libtool\n# libraries that it depends on are installed.\n#\n# This wrapper script should never be moved out of the build directory.\n# If it is, it will not operate correctly.\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nXsed='${SED} -e 1s/^X//'\nsed_quote_subst='$sed_quote_subst'\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nrelink_command=\\\"$relink_command\\\"\n\n# This environment variable determines our operation mode.\nif test \\\"\\$libtool_install_magic\\\" = \\\"$magic\\\"; then\n  # install mode needs the following variable:\n  notinst_deplibs='$notinst_deplibs'\nelse\n  # When we are sourced in execute mode, \\$file and \\$echo are already set.\n  if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n    echo=\\\"$qecho\\\"\n    file=\\\"\\$0\\\"\n    # Make sure echo works.\n    if test \\\"X\\$1\\\" = X--no-reexec; then\n      # Discard the --no-reexec flag, and continue.\n      shift\n    elif test \\\"X\\`(\\$echo '\\t') 2>/dev/null\\`\\\" = 'X\\t'; then\n      # Yippee, \\$echo works!\n      :\n    else\n      # Restart under the correct shell, and then maybe \\$echo will work.\n      exec $SHELL \\\"\\$0\\\" --no-reexec \\${1+\\\"\\$@\\\"}\n    fi\n  fi\\\n\"\n\t$echo >> $output \"\\\n\n  # Find the directory that this script lives in.\n  thisdir=\\`\\$echo \\\"X\\$file\\\" | \\$Xsed -e 's%/[^/]*$%%'\\`\n  test \\\"x\\$thisdir\\\" = \\\"x\\$file\\\" && thisdir=.\n\n  # Follow symbolic links until we get to the real thisdir.\n  file=\\`ls -ld \\\"\\$file\\\" | ${SED} -n 's/.*-> //p'\\`\n  while test -n \\\"\\$file\\\"; do\n    destdir=\\`\\$echo \\\"X\\$file\\\" | \\$Xsed -e 's%/[^/]*\\$%%'\\`\n\n    # If there was a directory component, then change thisdir.\n    if test \\\"x\\$destdir\\\" != \\\"x\\$file\\\"; then\n      case \\\"\\$destdir\\\" in\n      [\\\\\\\\/]* | [A-Za-z]:[\\\\\\\\/]*) thisdir=\\\"\\$destdir\\\" ;;\n      *) thisdir=\\\"\\$thisdir/\\$destdir\\\" ;;\n      esac\n    fi\n\n    file=\\`\\$echo \\\"X\\$file\\\" | \\$Xsed -e 's%^.*/%%'\\`\n    file=\\`ls -ld \\\"\\$thisdir/\\$file\\\" | ${SED} -n 's/.*-> //p'\\`\n  done\n\n  # Try to get the absolute directory name.\n  absdir=\\`cd \\\"\\$thisdir\\\" && pwd\\`\n  test -n \\\"\\$absdir\\\" && thisdir=\\\"\\$absdir\\\"\n\"\n\n\tif test \"$fast_install\" = yes; then\n\t  $echo >> $output \"\\\n  program=lt-'$outputname'$exeext\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\n  if test ! -f \\\"\\$progdir/\\$program\\\" || \\\\\n     { file=\\`ls -1dt \\\"\\$progdir/\\$program\\\" \\\"\\$progdir/../\\$program\\\" 2>/dev/null | ${SED} 1q\\`; \\\\\n       test \\\"X\\$file\\\" != \\\"X\\$progdir/\\$program\\\"; }; then\n\n    file=\\\"\\$\\$-\\$program\\\"\n\n    if test ! -d \\\"\\$progdir\\\"; then\n      $mkdir \\\"\\$progdir\\\"\n    else\n      $rm \\\"\\$progdir/\\$file\\\"\n    fi\"\n\n\t  $echo >> $output \"\\\n\n    # relink executable if necessary\n    if test -n \\\"\\$relink_command\\\"; then\n      if relink_command_output=\\`eval \\$relink_command 2>&1\\`; then :\n      else\n\t$echo \\\"\\$relink_command_output\\\" >&2\n\t$rm \\\"\\$progdir/\\$file\\\"\n\texit $EXIT_FAILURE\n      fi\n    fi\n\n    $mv \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\" 2>/dev/null ||\n    { $rm \\\"\\$progdir/\\$program\\\";\n      $mv \\\"\\$progdir/\\$file\\\" \\\"\\$progdir/\\$program\\\"; }\n    $rm \\\"\\$progdir/\\$file\\\"\n  fi\"\n\telse\n\t  $echo >> $output \"\\\n  program='$outputname'\n  progdir=\\\"\\$thisdir/$objdir\\\"\n\"\n\tfi\n\n\t$echo >> $output \"\\\n\n  if test -f \\\"\\$progdir/\\$program\\\"; then\"\n\n\t# Export our shlibpath_var if we have one.\n\tif test \"$shlibpath_overrides_runpath\" = yes && test -n \"$shlibpath_var\" && test -n \"$temp_rpath\"; then\n\t  $echo >> $output \"\\\n    # Add our own library path to $shlibpath_var\n    $shlibpath_var=\\\"$temp_rpath\\$$shlibpath_var\\\"\n\n    # Some systems cannot cope with colon-terminated $shlibpath_var\n    # The second colon is a workaround for a bug in BeOS R4 sed\n    $shlibpath_var=\\`\\$echo \\\"X\\$$shlibpath_var\\\" | \\$Xsed -e 's/::*\\$//'\\`\n\n    export $shlibpath_var\n\"\n\tfi\n\n\t# fixup the dll searchpath if we need to.\n\tif test -n \"$dllsearchpath\"; then\n\t  $echo >> $output \"\\\n    # Add the dll search path components to the executable PATH\n    PATH=$dllsearchpath:\\$PATH\n\"\n\tfi\n\n\t$echo >> $output \"\\\n    if test \\\"\\$libtool_execute_magic\\\" != \\\"$magic\\\"; then\n      # Run the actual program with our arguments.\n\"\n\tcase $host in\n\t# Backslashes separate directories on plain windows\n\t*-*-mingw | *-*-os2*)\n\t  $echo >> $output \"\\\n      exec \\\"\\$progdir\\\\\\\\\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n\t  ;;\n\n\t*)\n\t  $echo >> $output \"\\\n      exec \\\"\\$progdir/\\$program\\\" \\${1+\\\"\\$@\\\"}\n\"\n\t  ;;\n\tesac\n\t$echo >> $output \"\\\n      \\$echo \\\"\\$0: cannot exec \\$program \\${1+\\\"\\$@\\\"}\\\"\n      exit $EXIT_FAILURE\n    fi\n  else\n    # The program doesn't exist.\n    \\$echo \\\"\\$0: error: \\\\\\`\\$progdir/\\$program' does not exist\\\" 1>&2\n    \\$echo \\\"This script is just a wrapper for \\$program.\\\" 1>&2\n    $echo \\\"See the $PACKAGE documentation for more information.\\\" 1>&2\n    exit $EXIT_FAILURE\n  fi\nfi\\\n\"\n\tchmod +x $output\n      fi\n      exit $EXIT_SUCCESS\n      ;;\n    esac\n\n    # See if we need to build an old-fashioned archive.\n    for oldlib in $oldlibs; do\n\n      if test \"$build_libtool_libs\" = convenience; then\n\toldobjs=\"$libobjs_save\"\n\taddlibs=\"$convenience\"\n\tbuild_libtool_libs=no\n      else\n\tif test \"$build_libtool_libs\" = module; then\n\t  oldobjs=\"$libobjs_save\"\n\t  build_libtool_libs=no\n\telse\n\t  oldobjs=\"$old_deplibs $non_pic_objects\"\n\tfi\n\taddlibs=\"$old_convenience\"\n      fi\n\n      if test -n \"$addlibs\"; then\n\tgentop=\"$output_objdir/${outputname}x\"\n\tgenerated=\"$generated $gentop\"\n\n\tfunc_extract_archives $gentop $addlibs\n\toldobjs=\"$oldobjs $func_extract_archives_result\"\n      fi\n\n      # Do each command in the archive commands.\n      if test -n \"$old_archive_from_new_cmds\" && test \"$build_libtool_libs\" = yes; then\n       cmds=$old_archive_from_new_cmds\n      else\n\t# POSIX demands no paths to be encoded in archives.  We have\n\t# to avoid creating archives with duplicate basenames if we\n\t# might have to extract them afterwards, e.g., when creating a\n\t# static archive out of a convenience library, or when linking\n\t# the entirety of a libtool archive into another (currently\n\t# not supported by libtool).\n\tif (for obj in $oldobjs\n\t    do\n\t      $echo \"X$obj\" | $Xsed -e 's%^.*/%%'\n\t    done | sort | sort -uc >/dev/null 2>&1); then\n\t  :\n\telse\n\t  $echo \"copying selected object files to avoid basename conflicts...\"\n\n\t  if test -z \"$gentop\"; then\n\t    gentop=\"$output_objdir/${outputname}x\"\n\t    generated=\"$generated $gentop\"\n\n\t    $show \"${rm}r $gentop\"\n\t    $run ${rm}r \"$gentop\"\n\t    $show \"$mkdir $gentop\"\n\t    $run $mkdir \"$gentop\"\n\t    exit_status=$?\n\t    if test \"$exit_status\" -ne 0 && test ! -d \"$gentop\"; then\n\t      exit $exit_status\n\t    fi\n\t  fi\n\n\t  save_oldobjs=$oldobjs\n\t  oldobjs=\n\t  counter=1\n\t  for obj in $save_oldobjs\n\t  do\n\t    objbase=`$echo \"X$obj\" | $Xsed -e 's%^.*/%%'`\n\t    case \" $oldobjs \" in\n\t    \" \") oldobjs=$obj ;;\n\t    *[\\ /]\"$objbase \"*)\n\t      while :; do\n\t\t# Make sure we don't pick an alternate name that also\n\t\t# overlaps.\n\t\tnewobj=lt$counter-$objbase\n\t\tcounter=`expr $counter + 1`\n\t\tcase \" $oldobjs \" in\n\t\t*[\\ /]\"$newobj \"*) ;;\n\t\t*) if test ! -f \"$gentop/$newobj\"; then break; fi ;;\n\t\tesac\n\t      done\n\t      $show \"ln $obj $gentop/$newobj || cp $obj $gentop/$newobj\"\n\t      $run ln \"$obj\" \"$gentop/$newobj\" ||\n\t      $run cp \"$obj\" \"$gentop/$newobj\"\n\t      oldobjs=\"$oldobjs $gentop/$newobj\"\n\t      ;;\n\t    *) oldobjs=\"$oldobjs $obj\" ;;\n\t    esac\n\t  done\n\tfi\n\n\teval cmds=\\\"$old_archive_cmds\\\"\n\n\tif len=`expr \"X$cmds\" : \".*\"` &&\n\t     test \"$len\" -le \"$max_cmd_len\" || test \"$max_cmd_len\" -le -1; then\n\t  cmds=$old_archive_cmds\n\telse\n\t  # the command line is too long to link in one step, link in parts\n\t  $echo \"using piecewise archive linking...\"\n\t  save_RANLIB=$RANLIB\n\t  RANLIB=:\n\t  objlist=\n\t  concat_cmds=\n\t  save_oldobjs=$oldobjs\n\n\t  # Is there a better way of finding the last object in the list?\n\t  for obj in $save_oldobjs\n\t  do\n\t    last_oldobj=$obj\n\t  done\n\t  for obj in $save_oldobjs\n\t  do\n\t    oldobjs=\"$objlist $obj\"\n\t    objlist=\"$objlist $obj\"\n\t    eval test_cmds=\\\"$old_archive_cmds\\\"\n\t    if len=`expr \"X$test_cmds\" : \".*\" 2>/dev/null` &&\n\t       test \"$len\" -le \"$max_cmd_len\"; then\n\t      :\n\t    else\n\t      # the above command should be used before it gets too long\n\t      oldobjs=$objlist\n\t      if test \"$obj\" = \"$last_oldobj\" ; then\n\t        RANLIB=$save_RANLIB\n\t      fi\n\t      test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n\t      eval concat_cmds=\\\"\\${concat_cmds}$old_archive_cmds\\\"\n\t      objlist=\n\t    fi\n\t  done\n\t  RANLIB=$save_RANLIB\n\t  oldobjs=$objlist\n\t  if test \"X$oldobjs\" = \"X\" ; then\n\t    eval cmds=\\\"\\$concat_cmds\\\"\n\t  else\n\t    eval cmds=\\\"\\$concat_cmds~\\$old_archive_cmds\\\"\n\t  fi\n\tfi\n      fi\n      save_ifs=\"$IFS\"; IFS='~'\n      for cmd in $cmds; do\n        eval cmd=\\\"$cmd\\\"\n\tIFS=\"$save_ifs\"\n\t$show \"$cmd\"\n\t$run eval \"$cmd\" || exit $?\n      done\n      IFS=\"$save_ifs\"\n    done\n\n    if test -n \"$generated\"; then\n      $show \"${rm}r$generated\"\n      $run ${rm}r$generated\n    fi\n\n    # Now create the libtool archive.\n    case $output in\n    *.la)\n      old_library=\n      test \"$build_old_libs\" = yes && old_library=\"$libname.$libext\"\n      $show \"creating $output\"\n\n      # Preserve any variables that may affect compiler behavior\n      for var in $variables_saved_for_relink; do\n\tif eval test -z \\\"\\${$var+set}\\\"; then\n\t  relink_command=\"{ test -z \\\"\\${$var+set}\\\" || unset $var || { $var=; export $var; }; }; $relink_command\"\n\telif eval var_value=\\$$var; test -z \"$var_value\"; then\n\t  relink_command=\"$var=; export $var; $relink_command\"\n\telse\n\t  var_value=`$echo \"X$var_value\" | $Xsed -e \"$sed_quote_subst\"`\n\t  relink_command=\"$var=\\\"$var_value\\\"; export $var; $relink_command\"\n\tfi\n      done\n      # Quote the link command for shipping.\n      relink_command=\"(cd `pwd`; $SHELL $progpath $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)\"\n      relink_command=`$echo \"X$relink_command\" | $Xsed -e \"$sed_quote_subst\"`\n      if test \"$hardcode_automatic\" = yes ; then\n\trelink_command=\n      fi\n\n\n      # Only create the output if not a dry run.\n      if test -z \"$run\"; then\n\tfor installed in no yes; do\n\t  if test \"$installed\" = yes; then\n\t    if test -z \"$install_libdir\"; then\n\t      break\n\t    fi\n\t    output=\"$output_objdir/$outputname\"i\n\t    # Replace all uninstalled libtool libraries with the installed ones\n\t    newdependency_libs=\n\t    for deplib in $dependency_libs; do\n\t      case $deplib in\n\t      *.la)\n\t\tname=`$echo \"X$deplib\" | $Xsed -e 's%^.*/%%'`\n\t\teval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $deplib`\n\t\tif test -z \"$libdir\"; then\n\t\t  $echo \"$modename: \\`$deplib' is not a valid libtool archive\" 1>&2\n\t\t  exit $EXIT_FAILURE\n\t\tfi\n\t\tnewdependency_libs=\"$newdependency_libs $libdir/$name\"\n\t\t;;\n\t      *) newdependency_libs=\"$newdependency_libs $deplib\" ;;\n\t      esac\n\t    done\n\t    dependency_libs=\"$newdependency_libs\"\n\t    newdlfiles=\n\t    for lib in $dlfiles; do\n\t      name=`$echo \"X$lib\" | $Xsed -e 's%^.*/%%'`\n\t      eval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t      if test -z \"$libdir\"; then\n\t\t$echo \"$modename: \\`$lib' is not a valid libtool archive\" 1>&2\n\t\texit $EXIT_FAILURE\n\t      fi\n\t      newdlfiles=\"$newdlfiles $libdir/$name\"\n\t    done\n\t    dlfiles=\"$newdlfiles\"\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      name=`$echo \"X$lib\" | $Xsed -e 's%^.*/%%'`\n\t      eval libdir=`${SED} -n -e 's/^libdir=\\(.*\\)$/\\1/p' $lib`\n\t      if test -z \"$libdir\"; then\n\t\t$echo \"$modename: \\`$lib' is not a valid libtool archive\" 1>&2\n\t\texit $EXIT_FAILURE\n\t      fi\n\t      newdlprefiles=\"$newdlprefiles $libdir/$name\"\n\t    done\n\t    dlprefiles=\"$newdlprefiles\"\n\t  else\n\t    newdlfiles=\n\t    for lib in $dlfiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=\"$lib\" ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      newdlfiles=\"$newdlfiles $abs\"\n\t    done\n\t    dlfiles=\"$newdlfiles\"\n\t    newdlprefiles=\n\t    for lib in $dlprefiles; do\n\t      case $lib in\n\t\t[\\\\/]* | [A-Za-z]:[\\\\/]*) abs=\"$lib\" ;;\n\t\t*) abs=`pwd`\"/$lib\" ;;\n\t      esac\n\t      newdlprefiles=\"$newdlprefiles $abs\"\n\t    done\n\t    dlprefiles=\"$newdlprefiles\"\n\t  fi\n\t  $rm $output\n\t  # place dlname in correct position for cygwin\n\t  tdlname=$dlname\n\t  case $host,$output,$installed,$module,$dlname in\n\t    *cygwin*,*lai,yes,no,*.dll | *mingw*,*lai,yes,no,*.dll) tdlname=../bin/$dlname ;;\n\t  esac\n\t  $echo > $output \"\\\n# $outputname - a libtool library file\n# Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP\n#\n# Please DO NOT delete this file!\n# It is necessary for linking the library.\n\n# The name that we can dlopen(3).\ndlname='$tdlname'\n\n# Names of this library.\nlibrary_names='$library_names'\n\n# The name of the static archive.\nold_library='$old_library'\n\n# Libraries that this one depends upon.\ndependency_libs='$dependency_libs'\n\n# Version information for $libname.\ncurrent=$current\nage=$age\nrevision=$revision\n\n# Is this an already installed library?\ninstalled=$installed\n\n# Should we warn about portability when linking against -modules?\nshouldnotlink=$module\n\n# Files to dlopen/dlpreopen\ndlopen='$dlfiles'\ndlpreopen='$dlprefiles'\n\n# Directory that this library needs to be installed in:\nlibdir='$install_libdir'\"\n\t  if test \"$installed\" = no && test \"$need_relink\" = yes; then\n\t    $echo >> $output \"\\\nrelink_command=\\\"$relink_command\\\"\"\n\t  fi\n\tdone\n      fi\n\n      # Do a symbolic link so that the libtool archive can be found in\n      # LD_LIBRARY_PATH before the program is installed.\n      $show \"(cd $output_objdir && $rm $outputname && $LN_S ../$outputname $outputname)\"\n      $run eval '(cd $output_objdir && $rm $outputname && $LN_S ../$outputname $outputname)' || exit $?\n      ;;\n    esac\n    exit $EXIT_SUCCESS\n    ;;\n\n  # libtool install mode\n  install)\n    modename=\"$modename: install\"\n\n    # There may be an optional sh(1) argument at the beginning of\n    # install_prog (especially on Windows NT).\n    if test \"$nonopt\" = \"$SHELL\" || test \"$nonopt\" = /bin/sh ||\n       # Allow the use of GNU shtool's install command.\n       $echo \"X$nonopt\" | grep shtool > /dev/null; then\n      # Aesthetically quote it.\n      arg=`$echo \"X$nonopt\" | $Xsed -e \"$sed_quote_subst\"`\n      case $arg in\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\targ=\"\\\"$arg\\\"\"\n\t;;\n      esac\n      install_prog=\"$arg \"\n      arg=\"$1\"\n      shift\n    else\n      install_prog=\n      arg=$nonopt\n    fi\n\n    # The real first argument should be the name of the installation program.\n    # Aesthetically quote it.\n    arg=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\n    case $arg in\n    *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n      arg=\"\\\"$arg\\\"\"\n      ;;\n    esac\n    install_prog=\"$install_prog$arg\"\n\n    # We need to accept at least all the BSD install flags.\n    dest=\n    files=\n    opts=\n    prev=\n    install_type=\n    isdir=no\n    stripme=\n    for arg\n    do\n      if test -n \"$dest\"; then\n\tfiles=\"$files $dest\"\n\tdest=$arg\n\tcontinue\n      fi\n\n      case $arg in\n      -d) isdir=yes ;;\n      -f) \n      \tcase \" $install_prog \" in\n\t*[\\\\\\ /]cp\\ *) ;;\n\t*) prev=$arg ;;\n\tesac\n\t;;\n      -g | -m | -o) prev=$arg ;;\n      -s)\n\tstripme=\" -s\"\n\tcontinue\n\t;;\n      -*)\n\t;;\n      *)\n\t# If the previous option needed an argument, then skip it.\n\tif test -n \"$prev\"; then\n\t  prev=\n\telse\n\t  dest=$arg\n\t  continue\n\tfi\n\t;;\n      esac\n\n      # Aesthetically quote the argument.\n      arg=`$echo \"X$arg\" | $Xsed -e \"$sed_quote_subst\"`\n      case $arg in\n      *[\\[\\~\\#\\^\\&\\*\\(\\)\\{\\}\\|\\;\\<\\>\\?\\'\\ \\\t]*|*]*|\"\")\n\targ=\"\\\"$arg\\\"\"\n\t;;\n      esac\n      install_prog=\"$install_prog $arg\"\n    done\n\n    if test -z \"$install_prog\"; then\n      $echo \"$modename: you must specify an install program\" 1>&2\n      $echo \"$help\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n\n    if test -n \"$prev\"; then\n      $echo \"$modename: the \\`$prev' option requires an argument\" 1>&2\n      $echo \"$help\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n\n    if test -z \"$files\"; then\n      if test -z \"$dest\"; then\n\t$echo \"$modename: no file or destination specified\" 1>&2\n      else\n\t$echo \"$modename: you must specify a destination\" 1>&2\n      fi\n      $echo \"$help\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n\n    # Strip any trailing slash from the destination.\n    dest=`$echo \"X$dest\" | $Xsed -e 's%/$%%'`\n\n    # Check to see that the destination is a directory.\n    test -d \"$dest\" && isdir=yes\n    if test \"$isdir\" = yes; then\n      destdir=\"$dest\"\n      destname=\n    else\n      destdir=`$echo \"X$dest\" | $Xsed -e 's%/[^/]*$%%'`\n      test \"X$destdir\" = \"X$dest\" && destdir=.\n      destname=`$echo \"X$dest\" | $Xsed -e 's%^.*/%%'`\n\n      # Not a directory, so check to see that there is only one file specified.\n      set dummy $files\n      if test \"$#\" -gt 2; then\n\t$echo \"$modename: \\`$dest' is not a directory\" 1>&2\n\t$echo \"$help\" 1>&2\n\texit $EXIT_FAILURE\n      fi\n    fi\n    case $destdir in\n    [\\\\/]* | [A-Za-z]:[\\\\/]*) ;;\n    *)\n      for file in $files; do\n\tcase $file in\n\t*.lo) ;;\n\t*)\n\t  $echo \"$modename: \\`$destdir' must be an absolute directory name\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit $EXIT_FAILURE\n\t  ;;\n\tesac\n      done\n      ;;\n    esac\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=\"$magic\"\n\n    staticlibs=\n    future_libdirs=\n    current_libdirs=\n    for file in $files; do\n\n      # Do each installation.\n      case $file in\n      *.$libext)\n\t# Do the static libraries later.\n\tstaticlibs=\"$staticlibs $file\"\n\t;;\n\n      *.la)\n\t# Check to see that this really is a libtool archive.\n\tif (${SED} -e '2q' $file | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then :\n\telse\n\t  $echo \"$modename: \\`$file' is not a valid libtool archive\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\n\tlibrary_names=\n\told_library=\n\trelink_command=\n\t# If there is no directory component, then add one.\n\tcase $file in\n\t*/* | *\\\\*) . $file ;;\n\t*) . ./$file ;;\n\tesac\n\n\t# Add the libdir to current_libdirs if it is the destination.\n\tif test \"X$destdir\" = \"X$libdir\"; then\n\t  case \"$current_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) current_libdirs=\"$current_libdirs $libdir\" ;;\n\t  esac\n\telse\n\t  # Note the libdir as a future libdir.\n\t  case \"$future_libdirs \" in\n\t  *\" $libdir \"*) ;;\n\t  *) future_libdirs=\"$future_libdirs $libdir\" ;;\n\t  esac\n\tfi\n\n\tdir=`$echo \"X$file\" | $Xsed -e 's%/[^/]*$%%'`/\n\ttest \"X$dir\" = \"X$file/\" && dir=\n\tdir=\"$dir$objdir\"\n\n\tif test -n \"$relink_command\"; then\n\t  # Determine the prefix the user has applied to our future dir.\n\t  inst_prefix_dir=`$echo \"$destdir\" | $SED \"s%$libdir\\$%%\"`\n\n\t  # Don't allow the user to place us outside of our expected\n\t  # location b/c this prevents finding dependent libraries that\n\t  # are installed to the same prefix.\n\t  # At present, this check doesn't affect windows .dll's that\n\t  # are installed into $libdir/../bin (currently, that works fine)\n\t  # but it's something to keep an eye on.\n\t  if test \"$inst_prefix_dir\" = \"$destdir\"; then\n\t    $echo \"$modename: error: cannot install \\`$file' to a directory not ending in $libdir\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\n\t  if test -n \"$inst_prefix_dir\"; then\n\t    # Stick the inst_prefix_dir data into the link command.\n\t    relink_command=`$echo \"$relink_command\" | $SED \"s%@inst_prefix_dir@%-inst-prefix-dir $inst_prefix_dir%\"`\n\t  else\n\t    relink_command=`$echo \"$relink_command\" | $SED \"s%@inst_prefix_dir@%%\"`\n\t  fi\n\n\t  $echo \"$modename: warning: relinking \\`$file'\" 1>&2\n\t  $show \"$relink_command\"\n\t  if $run eval \"$relink_command\"; then :\n\t  else\n\t    $echo \"$modename: error: relink \\`$file' with the above command before installing it\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\tfi\n\n\t# See the names of the shared library.\n\tset dummy $library_names\n\tif test -n \"$2\"; then\n\t  realname=\"$2\"\n\t  shift\n\t  shift\n\n\t  srcname=\"$realname\"\n\t  test -n \"$relink_command\" && srcname=\"$realname\"T\n\n\t  # Install the shared library and build the symlinks.\n\t  $show \"$install_prog $dir/$srcname $destdir/$realname\"\n\t  $run eval \"$install_prog $dir/$srcname $destdir/$realname\" || exit $?\n\t  if test -n \"$stripme\" && test -n \"$striplib\"; then\n\t    $show \"$striplib $destdir/$realname\"\n\t    $run eval \"$striplib $destdir/$realname\" || exit $?\n\t  fi\n\n\t  if test \"$#\" -gt 0; then\n\t    # Delete the old symlinks, and create new ones.\n\t    # Try `ln -sf' first, because the `ln' binary might depend on\n\t    # the symlink we replace!  Solaris /bin/ln does not understand -f,\n\t    # so we also need to try rm && ln -s.\n\t    for linkname\n\t    do\n\t      if test \"$linkname\" != \"$realname\"; then\n                $show \"(cd $destdir && { $LN_S -f $realname $linkname || { $rm $linkname && $LN_S $realname $linkname; }; })\"\n                $run eval \"(cd $destdir && { $LN_S -f $realname $linkname || { $rm $linkname && $LN_S $realname $linkname; }; })\"\n\t      fi\n\t    done\n\t  fi\n\n\t  # Do each command in the postinstall commands.\n\t  lib=\"$destdir/$realname\"\n\t  cmds=$postinstall_cmds\n\t  save_ifs=\"$IFS\"; IFS='~'\n\t  for cmd in $cmds; do\n\t    IFS=\"$save_ifs\"\n\t    eval cmd=\\\"$cmd\\\"\n\t    $show \"$cmd\"\n\t    $run eval \"$cmd\" || {\n\t      lt_exit=$?\n\n\t      # Restore the uninstalled library and exit\n\t      if test \"$mode\" = relink; then\n\t\t$run eval '(cd $output_objdir && $rm ${realname}T && $mv ${realname}U $realname)'\n\t      fi\n\n\t      exit $lt_exit\n\t    }\n\t  done\n\t  IFS=\"$save_ifs\"\n\tfi\n\n\t# Install the pseudo-library for information purposes.\n\tname=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n\tinstname=\"$dir/$name\"i\n\t$show \"$install_prog $instname $destdir/$name\"\n\t$run eval \"$install_prog $instname $destdir/$name\" || exit $?\n\n\t# Maybe install the static library, too.\n\ttest -n \"$old_library\" && staticlibs=\"$staticlibs $dir/$old_library\"\n\t;;\n\n      *.lo)\n\t# Install (i.e. copy) a libtool object.\n\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=\"$destdir/$destname\"\n\telse\n\t  destfile=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n\t  destfile=\"$destdir/$destfile\"\n\tfi\n\n\t# Deduce the name of the destination old-style object file.\n\tcase $destfile in\n\t*.lo)\n\t  staticdest=`$echo \"X$destfile\" | $Xsed -e \"$lo2o\"`\n\t  ;;\n\t*.$objext)\n\t  staticdest=\"$destfile\"\n\t  destfile=\n\t  ;;\n\t*)\n\t  $echo \"$modename: cannot copy a libtool object to \\`$destfile'\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit $EXIT_FAILURE\n\t  ;;\n\tesac\n\n\t# Install the libtool object if requested.\n\tif test -n \"$destfile\"; then\n\t  $show \"$install_prog $file $destfile\"\n\t  $run eval \"$install_prog $file $destfile\" || exit $?\n\tfi\n\n\t# Install the old object if enabled.\n\tif test \"$build_old_libs\" = yes; then\n\t  # Deduce the name of the old-style object file.\n\t  staticobj=`$echo \"X$file\" | $Xsed -e \"$lo2o\"`\n\n\t  $show \"$install_prog $staticobj $staticdest\"\n\t  $run eval \"$install_prog \\$staticobj \\$staticdest\" || exit $?\n\tfi\n\texit $EXIT_SUCCESS\n\t;;\n\n      *)\n\t# Figure out destination file name, if it wasn't already specified.\n\tif test -n \"$destname\"; then\n\t  destfile=\"$destdir/$destname\"\n\telse\n\t  destfile=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n\t  destfile=\"$destdir/$destfile\"\n\tfi\n\n\t# If the file is missing, and there is a .exe on the end, strip it\n\t# because it is most likely a libtool script we actually want to\n\t# install\n\tstripped_ext=\"\"\n\tcase $file in\n\t  *.exe)\n\t    if test ! -f \"$file\"; then\n\t      file=`$echo $file|${SED} 's,.exe$,,'`\n\t      stripped_ext=\".exe\"\n\t    fi\n\t    ;;\n\tesac\n\n\t# Do a test to see if this is really a libtool program.\n\tcase $host in\n\t*cygwin*|*mingw*)\n\t    wrapper=`$echo $file | ${SED} -e 's,.exe$,,'`\n\t    ;;\n\t*)\n\t    wrapper=$file\n\t    ;;\n\tesac\n\tif (${SED} -e '4q' $wrapper | grep \"^# Generated by .*$PACKAGE\")>/dev/null 2>&1; then\n\t  notinst_deplibs=\n\t  relink_command=\n\n\t  # Note that it is not necessary on cygwin/mingw to append a dot to\n\t  # foo even if both foo and FILE.exe exist: automatic-append-.exe\n\t  # behavior happens only for exec(3), not for open(2)!  Also, sourcing\n\t  # `FILE.' does not work on cygwin managed mounts.\n\t  #\n\t  # If there is no directory component, then add one.\n\t  case $wrapper in\n\t  */* | *\\\\*) . ${wrapper} ;;\n\t  *) . ./${wrapper} ;;\n\t  esac\n\n\t  # Check the variables that should have been set.\n\t  if test -z \"$notinst_deplibs\"; then\n\t    $echo \"$modename: invalid libtool wrapper script \\`$wrapper'\" 1>&2\n\t    exit $EXIT_FAILURE\n\t  fi\n\n\t  finalize=yes\n\t  for lib in $notinst_deplibs; do\n\t    # Check to see that each library is installed.\n\t    libdir=\n\t    if test -f \"$lib\"; then\n\t      # If there is no directory component, then add one.\n\t      case $lib in\n\t      */* | *\\\\*) . $lib ;;\n\t      *) . ./$lib ;;\n\t      esac\n\t    fi\n\t    libfile=\"$libdir/\"`$echo \"X$lib\" | $Xsed -e 's%^.*/%%g'` ### testsuite: skip nested quoting test\n\t    if test -n \"$libdir\" && test ! -f \"$libfile\"; then\n\t      $echo \"$modename: warning: \\`$lib' has not been installed in \\`$libdir'\" 1>&2\n\t      finalize=no\n\t    fi\n\t  done\n\n\t  relink_command=\n\t  # Note that it is not necessary on cygwin/mingw to append a dot to\n\t  # foo even if both foo and FILE.exe exist: automatic-append-.exe\n\t  # behavior happens only for exec(3), not for open(2)!  Also, sourcing\n\t  # `FILE.' does not work on cygwin managed mounts.\n\t  #\n\t  # If there is no directory component, then add one.\n\t  case $wrapper in\n\t  */* | *\\\\*) . ${wrapper} ;;\n\t  *) . ./${wrapper} ;;\n\t  esac\n\n\t  outputname=\n\t  if test \"$fast_install\" = no && test -n \"$relink_command\"; then\n\t    if test \"$finalize\" = yes && test -z \"$run\"; then\n\t      tmpdir=`func_mktempdir`\n\t      file=`$echo \"X$file$stripped_ext\" | $Xsed -e 's%^.*/%%'`\n\t      outputname=\"$tmpdir/$file\"\n\t      # Replace the output file specification.\n\t      relink_command=`$echo \"X$relink_command\" | $Xsed -e 's%@OUTPUT@%'\"$outputname\"'%g'`\n\n\t      $show \"$relink_command\"\n\t      if $run eval \"$relink_command\"; then :\n\t      else\n\t\t$echo \"$modename: error: relink \\`$file' with the above command before installing it\" 1>&2\n\t\t${rm}r \"$tmpdir\"\n\t\tcontinue\n\t      fi\n\t      file=\"$outputname\"\n\t    else\n\t      $echo \"$modename: warning: cannot relink \\`$file'\" 1>&2\n\t    fi\n\t  else\n\t    # Install the binary that we compiled earlier.\n\t    file=`$echo \"X$file$stripped_ext\" | $Xsed -e \"s%\\([^/]*\\)$%$objdir/\\1%\"`\n\t  fi\n\tfi\n\n\t# remove .exe since cygwin /usr/bin/install will append another\n\t# one anyway \n\tcase $install_prog,$host in\n\t*/usr/bin/install*,*cygwin*)\n\t  case $file:$destfile in\n\t  *.exe:*.exe)\n\t    # this is ok\n\t    ;;\n\t  *.exe:*)\n\t    destfile=$destfile.exe\n\t    ;;\n\t  *:*.exe)\n\t    destfile=`$echo $destfile | ${SED} -e 's,.exe$,,'`\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n\t$show \"$install_prog$stripme $file $destfile\"\n\t$run eval \"$install_prog\\$stripme \\$file \\$destfile\" || exit $?\n\ttest -n \"$outputname\" && ${rm}r \"$tmpdir\"\n\t;;\n      esac\n    done\n\n    for file in $staticlibs; do\n      name=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n\n      # Set up the ranlib parameters.\n      oldlib=\"$destdir/$name\"\n\n      $show \"$install_prog $file $oldlib\"\n      $run eval \"$install_prog \\$file \\$oldlib\" || exit $?\n\n      if test -n \"$stripme\" && test -n \"$old_striplib\"; then\n\t$show \"$old_striplib $oldlib\"\n\t$run eval \"$old_striplib $oldlib\" || exit $?\n      fi\n\n      # Do each command in the postinstall commands.\n      cmds=$old_postinstall_cmds\n      save_ifs=\"$IFS\"; IFS='~'\n      for cmd in $cmds; do\n\tIFS=\"$save_ifs\"\n\teval cmd=\\\"$cmd\\\"\n\t$show \"$cmd\"\n\t$run eval \"$cmd\" || exit $?\n      done\n      IFS=\"$save_ifs\"\n    done\n\n    if test -n \"$future_libdirs\"; then\n      $echo \"$modename: warning: remember to run \\`$progname --finish$future_libdirs'\" 1>&2\n    fi\n\n    if test -n \"$current_libdirs\"; then\n      # Maybe just do a dry run.\n      test -n \"$run\" && current_libdirs=\" -n$current_libdirs\"\n      exec_cmd='$SHELL $progpath $preserve_args --finish$current_libdirs'\n    else\n      exit $EXIT_SUCCESS\n    fi\n    ;;\n\n  # libtool finish mode\n  finish)\n    modename=\"$modename: finish\"\n    libdirs=\"$nonopt\"\n    admincmds=\n\n    if test -n \"$finish_cmds$finish_eval\" && test -n \"$libdirs\"; then\n      for dir\n      do\n\tlibdirs=\"$libdirs $dir\"\n      done\n\n      for libdir in $libdirs; do\n\tif test -n \"$finish_cmds\"; then\n\t  # Do each command in the finish commands.\n\t  cmds=$finish_cmds\n\t  save_ifs=\"$IFS\"; IFS='~'\n\t  for cmd in $cmds; do\n\t    IFS=\"$save_ifs\"\n\t    eval cmd=\\\"$cmd\\\"\n\t    $show \"$cmd\"\n\t    $run eval \"$cmd\" || admincmds=\"$admincmds\n       $cmd\"\n\t  done\n\t  IFS=\"$save_ifs\"\n\tfi\n\tif test -n \"$finish_eval\"; then\n\t  # Do the single finish_eval.\n\t  eval cmds=\\\"$finish_eval\\\"\n\t  $run eval \"$cmds\" || admincmds=\"$admincmds\n       $cmds\"\n\tfi\n      done\n    fi\n\n    # Exit here if they wanted silent mode.\n    test \"$show\" = : && exit $EXIT_SUCCESS\n\n    $echo \"X----------------------------------------------------------------------\" | $Xsed\n    $echo \"Libraries have been installed in:\"\n    for libdir in $libdirs; do\n      $echo \"   $libdir\"\n    done\n    $echo\n    $echo \"If you ever happen to want to link against installed libraries\"\n    $echo \"in a given directory, LIBDIR, you must either use libtool, and\"\n    $echo \"specify the full pathname of the library, or use the \\`-LLIBDIR'\"\n    $echo \"flag during linking and do at least one of the following:\"\n    if test -n \"$shlibpath_var\"; then\n      $echo \"   - add LIBDIR to the \\`$shlibpath_var' environment variable\"\n      $echo \"     during execution\"\n    fi\n    if test -n \"$runpath_var\"; then\n      $echo \"   - add LIBDIR to the \\`$runpath_var' environment variable\"\n      $echo \"     during linking\"\n    fi\n    if test -n \"$hardcode_libdir_flag_spec\"; then\n      libdir=LIBDIR\n      eval flag=\\\"$hardcode_libdir_flag_spec\\\"\n\n      $echo \"   - use the \\`$flag' linker flag\"\n    fi\n    if test -n \"$admincmds\"; then\n      $echo \"   - have your system administrator run these commands:$admincmds\"\n    fi\n    if test -f /etc/ld.so.conf; then\n      $echo \"   - have your system administrator add LIBDIR to \\`/etc/ld.so.conf'\"\n    fi\n    $echo\n    $echo \"See any operating system documentation about shared libraries for\"\n    $echo \"more information, such as the ld(1) and ld.so(8) manual pages.\"\n    $echo \"X----------------------------------------------------------------------\" | $Xsed\n    exit $EXIT_SUCCESS\n    ;;\n\n  # libtool execute mode\n  execute)\n    modename=\"$modename: execute\"\n\n    # The first argument is the command name.\n    cmd=\"$nonopt\"\n    if test -z \"$cmd\"; then\n      $echo \"$modename: you must specify a COMMAND\" 1>&2\n      $echo \"$help\"\n      exit $EXIT_FAILURE\n    fi\n\n    # Handle -dlopen flags immediately.\n    for file in $execute_dlfiles; do\n      if test ! -f \"$file\"; then\n\t$echo \"$modename: \\`$file' is not a file\" 1>&2\n\t$echo \"$help\" 1>&2\n\texit $EXIT_FAILURE\n      fi\n\n      dir=\n      case $file in\n      *.la)\n\t# Check to see that this really is a libtool archive.\n\tif (${SED} -e '2q' $file | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then :\n\telse\n\t  $echo \"$modename: \\`$lib' is not a valid libtool archive\" 1>&2\n\t  $echo \"$help\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\n\t# Read the libtool library.\n\tdlname=\n\tlibrary_names=\n\n\t# If there is no directory component, then add one.\n\tcase $file in\n\t*/* | *\\\\*) . $file ;;\n\t*) . ./$file ;;\n\tesac\n\n\t# Skip this library if it cannot be dlopened.\n\tif test -z \"$dlname\"; then\n\t  # Warn if it was a shared library.\n\t  test -n \"$library_names\" && $echo \"$modename: warning: \\`$file' was not linked with \\`-export-dynamic'\"\n\t  continue\n\tfi\n\n\tdir=`$echo \"X$file\" | $Xsed -e 's%/[^/]*$%%'`\n\ttest \"X$dir\" = \"X$file\" && dir=.\n\n\tif test -f \"$dir/$objdir/$dlname\"; then\n\t  dir=\"$dir/$objdir\"\n\telse\n\t  $echo \"$modename: cannot find \\`$dlname' in \\`$dir' or \\`$dir/$objdir'\" 1>&2\n\t  exit $EXIT_FAILURE\n\tfi\n\t;;\n\n      *.lo)\n\t# Just add the directory containing the .lo file.\n\tdir=`$echo \"X$file\" | $Xsed -e 's%/[^/]*$%%'`\n\ttest \"X$dir\" = \"X$file\" && dir=.\n\t;;\n\n      *)\n\t$echo \"$modename: warning \\`-dlopen' is ignored for non-libtool libraries and objects\" 1>&2\n\tcontinue\n\t;;\n      esac\n\n      # Get the absolute pathname.\n      absdir=`cd \"$dir\" && pwd`\n      test -n \"$absdir\" && dir=\"$absdir\"\n\n      # Now add the directory to shlibpath_var.\n      if eval \"test -z \\\"\\$$shlibpath_var\\\"\"; then\n\teval \"$shlibpath_var=\\\"\\$dir\\\"\"\n      else\n\teval \"$shlibpath_var=\\\"\\$dir:\\$$shlibpath_var\\\"\"\n      fi\n    done\n\n    # This variable tells wrapper scripts just to set shlibpath_var\n    # rather than running their programs.\n    libtool_execute_magic=\"$magic\"\n\n    # Check if any of the arguments is a wrapper script.\n    args=\n    for file\n    do\n      case $file in\n      -*) ;;\n      *)\n\t# Do a test to see if this is really a libtool program.\n\tif (${SED} -e '4q' $file | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\t  # If there is no directory component, then add one.\n\t  case $file in\n\t  */* | *\\\\*) . $file ;;\n\t  *) . ./$file ;;\n\t  esac\n\n\t  # Transform arg to wrapped name.\n\t  file=\"$progdir/$program\"\n\tfi\n\t;;\n      esac\n      # Quote arguments (to preserve shell metacharacters).\n      file=`$echo \"X$file\" | $Xsed -e \"$sed_quote_subst\"`\n      args=\"$args \\\"$file\\\"\"\n    done\n\n    if test -z \"$run\"; then\n      if test -n \"$shlibpath_var\"; then\n\t# Export the shlibpath_var.\n\teval \"export $shlibpath_var\"\n      fi\n\n      # Restore saved environment variables\n      if test \"${save_LC_ALL+set}\" = set; then\n\tLC_ALL=\"$save_LC_ALL\"; export LC_ALL\n      fi\n      if test \"${save_LANG+set}\" = set; then\n\tLANG=\"$save_LANG\"; export LANG\n      fi\n\n      # Now prepare to actually exec the command.\n      exec_cmd=\"\\$cmd$args\"\n    else\n      # Display what would be done.\n      if test -n \"$shlibpath_var\"; then\n\teval \"\\$echo \\\"\\$shlibpath_var=\\$$shlibpath_var\\\"\"\n\t$echo \"export $shlibpath_var\"\n      fi\n      $echo \"$cmd$args\"\n      exit $EXIT_SUCCESS\n    fi\n    ;;\n\n  # libtool clean and uninstall mode\n  clean | uninstall)\n    modename=\"$modename: $mode\"\n    rm=\"$nonopt\"\n    files=\n    rmforce=\n    exit_status=0\n\n    # This variable tells wrapper scripts just to set variables rather\n    # than running their programs.\n    libtool_install_magic=\"$magic\"\n\n    for arg\n    do\n      case $arg in\n      -f) rm=\"$rm $arg\"; rmforce=yes ;;\n      -*) rm=\"$rm $arg\" ;;\n      *) files=\"$files $arg\" ;;\n      esac\n    done\n\n    if test -z \"$rm\"; then\n      $echo \"$modename: you must specify an RM program\" 1>&2\n      $echo \"$help\" 1>&2\n      exit $EXIT_FAILURE\n    fi\n\n    rmdirs=\n\n    origobjdir=\"$objdir\"\n    for file in $files; do\n      dir=`$echo \"X$file\" | $Xsed -e 's%/[^/]*$%%'`\n      if test \"X$dir\" = \"X$file\"; then\n\tdir=.\n\tobjdir=\"$origobjdir\"\n      else\n\tobjdir=\"$dir/$origobjdir\"\n      fi\n      name=`$echo \"X$file\" | $Xsed -e 's%^.*/%%'`\n      test \"$mode\" = uninstall && objdir=\"$dir\"\n\n      # Remember objdir for removal later, being careful to avoid duplicates\n      if test \"$mode\" = clean; then\n\tcase \" $rmdirs \" in\n\t  *\" $objdir \"*) ;;\n\t  *) rmdirs=\"$rmdirs $objdir\" ;;\n\tesac\n      fi\n\n      # Don't error if the file doesn't exist and rm -f was used.\n      if (test -L \"$file\") >/dev/null 2>&1 \\\n\t|| (test -h \"$file\") >/dev/null 2>&1 \\\n\t|| test -f \"$file\"; then\n\t:\n      elif test -d \"$file\"; then\n\texit_status=1\n\tcontinue\n      elif test \"$rmforce\" = yes; then\n\tcontinue\n      fi\n\n      rmfiles=\"$file\"\n\n      case $name in\n      *.la)\n\t# Possibly a libtool archive, so verify it.\n\tif (${SED} -e '2q' $file | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\t  . $dir/$name\n\n\t  # Delete the libtool libraries and symlinks.\n\t  for n in $library_names; do\n\t    rmfiles=\"$rmfiles $objdir/$n\"\n\t  done\n\t  test -n \"$old_library\" && rmfiles=\"$rmfiles $objdir/$old_library\"\n\n\t  case \"$mode\" in\n\t  clean)\n\t    case \"  $library_names \" in\n\t    # \"  \" in the beginning catches empty $dlname\n\t    *\" $dlname \"*) ;;\n\t    *) rmfiles=\"$rmfiles $objdir/$dlname\" ;;\n\t    esac\n\t     test -n \"$libdir\" && rmfiles=\"$rmfiles $objdir/$name $objdir/${name}i\"\n\t    ;;\n\t  uninstall)\n\t    if test -n \"$library_names\"; then\n\t      # Do each command in the postuninstall commands.\n\t      cmds=$postuninstall_cmds\n\t      save_ifs=\"$IFS\"; IFS='~'\n\t      for cmd in $cmds; do\n\t\tIFS=\"$save_ifs\"\n\t\teval cmd=\\\"$cmd\\\"\n\t\t$show \"$cmd\"\n\t\t$run eval \"$cmd\"\n\t\tif test \"$?\" -ne 0 && test \"$rmforce\" != yes; then\n\t\t  exit_status=1\n\t\tfi\n\t      done\n\t      IFS=\"$save_ifs\"\n\t    fi\n\n\t    if test -n \"$old_library\"; then\n\t      # Do each command in the old_postuninstall commands.\n\t      cmds=$old_postuninstall_cmds\n\t      save_ifs=\"$IFS\"; IFS='~'\n\t      for cmd in $cmds; do\n\t\tIFS=\"$save_ifs\"\n\t\teval cmd=\\\"$cmd\\\"\n\t\t$show \"$cmd\"\n\t\t$run eval \"$cmd\"\n\t\tif test \"$?\" -ne 0 && test \"$rmforce\" != yes; then\n\t\t  exit_status=1\n\t\tfi\n\t      done\n\t      IFS=\"$save_ifs\"\n\t    fi\n\t    # FIXME: should reinstall the best remaining shared library.\n\t    ;;\n\t  esac\n\tfi\n\t;;\n\n      *.lo)\n\t# Possibly a libtool object, so verify it.\n\tif (${SED} -e '2q' $file | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\n\t  # Read the .lo file\n\t  . $dir/$name\n\n\t  # Add PIC object to the list of files to remove.\n\t  if test -n \"$pic_object\" \\\n\t     && test \"$pic_object\" != none; then\n\t    rmfiles=\"$rmfiles $dir/$pic_object\"\n\t  fi\n\n\t  # Add non-PIC object to the list of files to remove.\n\t  if test -n \"$non_pic_object\" \\\n\t     && test \"$non_pic_object\" != none; then\n\t    rmfiles=\"$rmfiles $dir/$non_pic_object\"\n\t  fi\n\tfi\n\t;;\n\n      *)\n\tif test \"$mode\" = clean ; then\n\t  noexename=$name\n\t  case $file in\n\t  *.exe)\n\t    file=`$echo $file|${SED} 's,.exe$,,'`\n\t    noexename=`$echo $name|${SED} 's,.exe$,,'`\n\t    # $file with .exe has already been added to rmfiles,\n\t    # add $file without .exe\n\t    rmfiles=\"$rmfiles $file\"\n\t    ;;\n\t  esac\n\t  # Do a test to see if this is a libtool program.\n\t  if (${SED} -e '4q' $file | grep \"^# Generated by .*$PACKAGE\") >/dev/null 2>&1; then\n\t    relink_command=\n\t    . $dir/$noexename\n\n\t    # note $name still contains .exe if it was in $file originally\n\t    # as does the version of $file that was added into $rmfiles\n\t    rmfiles=\"$rmfiles $objdir/$name $objdir/${name}S.${objext}\"\n\t    if test \"$fast_install\" = yes && test -n \"$relink_command\"; then\n\t      rmfiles=\"$rmfiles $objdir/lt-$name\"\n\t    fi\n\t    if test \"X$noexename\" != \"X$name\" ; then\n\t      rmfiles=\"$rmfiles $objdir/lt-${noexename}.c\"\n\t    fi\n\t  fi\n\tfi\n\t;;\n      esac\n      $show \"$rm $rmfiles\"\n      $run $rm $rmfiles || exit_status=1\n    done\n    objdir=\"$origobjdir\"\n\n    # Try to remove the ${objdir}s in the directories where we deleted files\n    for dir in $rmdirs; do\n      if test -d \"$dir\"; then\n\t$show \"rmdir $dir\"\n\t$run rmdir $dir >/dev/null 2>&1\n      fi\n    done\n\n    exit $exit_status\n    ;;\n\n  \"\")\n    $echo \"$modename: you must specify a MODE\" 1>&2\n    $echo \"$generic_help\" 1>&2\n    exit $EXIT_FAILURE\n    ;;\n  esac\n\n  if test -z \"$exec_cmd\"; then\n    $echo \"$modename: invalid operation mode \\`$mode'\" 1>&2\n    $echo \"$generic_help\" 1>&2\n    exit $EXIT_FAILURE\n  fi\nfi # test -z \"$show_help\"\n\nif test -n \"$exec_cmd\"; then\n  eval exec $exec_cmd\n  exit $EXIT_FAILURE\nfi\n\n# We need to display help for each of the modes.\ncase $mode in\n\"\") $echo \\\n\"Usage: $modename [OPTION]... [MODE-ARG]...\n\nProvide generalized library-building support services.\n\n    --config          show all configuration variables\n    --debug           enable verbose shell tracing\n-n, --dry-run         display commands without modifying any files\n    --features        display basic configuration information and exit\n    --finish          same as \\`--mode=finish'\n    --help            display this help message and exit\n    --mode=MODE       use operation mode MODE [default=inferred from MODE-ARGS]\n    --quiet           same as \\`--silent'\n    --silent          don't print informational messages\n    --tag=TAG         use configuration variables from tag TAG\n    --version         print version information\n\nMODE must be one of the following:\n\n      clean           remove files from the build directory\n      compile         compile a source file into a libtool object\n      execute         automatically set library path, then run a program\n      finish          complete the installation of libtool libraries\n      install         install libraries or executables\n      link            create a library or an executable\n      uninstall       remove libraries from an installed directory\n\nMODE-ARGS vary depending on the MODE.  Try \\`$modename --help --mode=MODE' for\na more detailed description of MODE.\n\nReport bugs to <bug-libtool@gnu.org>.\"\n  exit $EXIT_SUCCESS\n  ;;\n\nclean)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=clean RM [RM-OPTION]... FILE...\n\nRemove files from the build directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically \\`/bin/rm').  RM-OPTIONS are options (such as \\`-f') to be passed\nto RM.\n\nIf FILE is a libtool library, object or program, all the files associated\nwith it are deleted. Otherwise, only FILE itself is deleted using RM.\"\n  ;;\n\ncompile)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=compile COMPILE-COMMAND... SOURCEFILE\n\nCompile a source file into a libtool library object.\n\nThis mode accepts the following additional options:\n\n  -o OUTPUT-FILE    set the output file name to OUTPUT-FILE\n  -prefer-pic       try to building PIC objects only\n  -prefer-non-pic   try to building non-PIC objects only\n  -static           always build a \\`.o' file suitable for static linking\n\nCOMPILE-COMMAND is a command to be used in creating a \\`standard' object file\nfrom the given SOURCEFILE.\n\nThe output file name is determined by removing the directory component from\nSOURCEFILE, then substituting the C source code suffix \\`.c' with the\nlibrary object suffix, \\`.lo'.\"\n  ;;\n\nexecute)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=execute COMMAND [ARGS]...\n\nAutomatically set library path, then run a program.\n\nThis mode accepts the following additional options:\n\n  -dlopen FILE      add the directory containing FILE to the library path\n\nThis mode sets the library path environment variable according to \\`-dlopen'\nflags.\n\nIf any of the ARGS are libtool executable wrappers, then they are translated\ninto their corresponding uninstalled binary, and any of their required library\ndirectories are added to the library path.\n\nThen, COMMAND is executed, with ARGS as arguments.\"\n  ;;\n\nfinish)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=finish [LIBDIR]...\n\nComplete the installation of libtool libraries.\n\nEach LIBDIR is a directory that contains libtool libraries.\n\nThe commands that this mode executes may require superuser privileges.  Use\nthe \\`--dry-run' option if you just want to see what would be executed.\"\n  ;;\n\ninstall)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=install INSTALL-COMMAND...\n\nInstall executables or libraries.\n\nINSTALL-COMMAND is the installation command.  The first component should be\neither the \\`install' or \\`cp' program.\n\nThe rest of the components are interpreted as arguments to that command (only\nBSD-compatible install options are recognized).\"\n  ;;\n\nlink)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=link LINK-COMMAND...\n\nLink object files or libraries together to form another library, or to\ncreate an executable program.\n\nLINK-COMMAND is a command using the C compiler that you would use to create\na program from several object files.\n\nThe following components of LINK-COMMAND are treated specially:\n\n  -all-static       do not do any dynamic linking at all\n  -avoid-version    do not add a version suffix if possible\n  -dlopen FILE      \\`-dlpreopen' FILE if it cannot be dlopened at runtime\n  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols\n  -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)\n  -export-symbols SYMFILE\n\t\t    try to export only the symbols listed in SYMFILE\n  -export-symbols-regex REGEX\n\t\t    try to export only the symbols matching REGEX\n  -LLIBDIR          search LIBDIR for required installed libraries\n  -lNAME            OUTPUT-FILE requires the installed library libNAME\n  -module           build a library that can dlopened\n  -no-fast-install  disable the fast-install mode\n  -no-install       link a not-installable executable\n  -no-undefined     declare that a library does not refer to external symbols\n  -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects\n  -objectlist FILE  Use a list of object files found in FILE to specify objects\n  -precious-files-regex REGEX\n                    don't remove output files matching REGEX\n  -release RELEASE  specify package release information\n  -rpath LIBDIR     the created library will eventually be installed in LIBDIR\n  -R[ ]LIBDIR       add LIBDIR to the runtime path of programs and libraries\n  -static           do not do any dynamic linking of libtool libraries\n  -version-info CURRENT[:REVISION[:AGE]]\n\t\t    specify library version info [each variable defaults to 0]\n\nAll other options (arguments beginning with \\`-') are ignored.\n\nEvery other argument is treated as a filename.  Files ending in \\`.la' are\ntreated as uninstalled libtool libraries, other files are standard or library\nobject files.\n\nIf the OUTPUT-FILE ends in \\`.la', then a libtool library is created,\nonly library objects (\\`.lo' files) may be specified, and \\`-rpath' is\nrequired, except when creating a convenience library.\n\nIf OUTPUT-FILE ends in \\`.a' or \\`.lib', then a standard library is created\nusing \\`ar' and \\`ranlib', or on Windows using \\`lib'.\n\nIf OUTPUT-FILE ends in \\`.lo' or \\`.${objext}', then a reloadable object file\nis created, otherwise an executable program is created.\"\n  ;;\n\nuninstall)\n  $echo \\\n\"Usage: $modename [OPTION]... --mode=uninstall RM [RM-OPTION]... FILE...\n\nRemove libraries from an installation directory.\n\nRM is the name of the program to use to delete files associated with each FILE\n(typically \\`/bin/rm').  RM-OPTIONS are options (such as \\`-f') to be passed\nto RM.\n\nIf FILE is a libtool library, all the files associated with it are deleted.\nOtherwise, only FILE itself is deleted using RM.\"\n  ;;\n\n*)\n  $echo \"$modename: invalid operation mode \\`$mode'\" 1>&2\n  $echo \"$help\" 1>&2\n  exit $EXIT_FAILURE\n  ;;\nesac\n\n$echo\n$echo \"Try \\`$modename --help' for more information about other modes.\"\n\nexit $?\n\n# The TAGs below are defined such that we never get into a situation\n# in which we disable both kinds of libraries.  Given conflicting\n# choices, we go for a static library, that is the most portable,\n# since we can't tell whether shared libraries were disabled because\n# the user asked for that or because the platform doesn't support\n# them.  This is particularly important on AIX, because we don't\n# support having both static and shared libraries enabled at the same\n# time on that platform, so we default to a shared-only configuration.\n# If a disable-shared tag is given, we'll fallback to a static-only\n# configuration.  But we'll never go from static-only to shared-only.\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-shared\ndisable_libs=shared\n# ### END LIBTOOL TAG CONFIG: disable-shared\n\n# ### BEGIN LIBTOOL TAG CONFIG: disable-static\ndisable_libs=static\n# ### END LIBTOOL TAG CONFIG: disable-static\n\n# Local Variables:\n# mode:shell-script\n# sh-indentation:2\n# End:\n",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/aclocal.m4": "# generated automatically by aclocal 1.9.6 -*- Autoconf -*-\n\n# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n# 2005  Free Software Foundation, Inc.\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n# PARTICULAR PURPOSE.\n\n# libtool.m4 - Configure libtool for the host system. -*-Autoconf-*-\n\n# serial 48 AC_PROG_LIBTOOL\n\n\n# AC_PROVIDE_IFELSE(MACRO-NAME, IF-PROVIDED, IF-NOT-PROVIDED)\n# -----------------------------------------------------------\n# If this macro is not defined by Autoconf, define it here.\nm4_ifdef([AC_PROVIDE_IFELSE],\n         [],\n         [m4_define([AC_PROVIDE_IFELSE],\n\t         [m4_ifdef([AC_PROVIDE_$1],\n\t\t           [$2], [$3])])])\n\n\n# AC_PROG_LIBTOOL\n# ---------------\nAC_DEFUN([AC_PROG_LIBTOOL],\n[AC_REQUIRE([_AC_PROG_LIBTOOL])dnl\ndnl If AC_PROG_CXX has already been expanded, run AC_LIBTOOL_CXX\ndnl immediately, otherwise, hook it in at the end of AC_PROG_CXX.\n  AC_PROVIDE_IFELSE([AC_PROG_CXX],\n    [AC_LIBTOOL_CXX],\n    [define([AC_PROG_CXX], defn([AC_PROG_CXX])[AC_LIBTOOL_CXX\n  ])])\ndnl And a similar setup for Fortran 77 support\n  AC_PROVIDE_IFELSE([AC_PROG_F77],\n    [AC_LIBTOOL_F77],\n    [define([AC_PROG_F77], defn([AC_PROG_F77])[AC_LIBTOOL_F77\n])])\n\ndnl Quote A][M_PROG_GCJ so that aclocal doesn't bring it in needlessly.\ndnl If either AC_PROG_GCJ or A][M_PROG_GCJ have already been expanded, run\ndnl AC_LIBTOOL_GCJ immediately, otherwise, hook it in at the end of both.\n  AC_PROVIDE_IFELSE([AC_PROG_GCJ],\n    [AC_LIBTOOL_GCJ],\n    [AC_PROVIDE_IFELSE([A][M_PROG_GCJ],\n      [AC_LIBTOOL_GCJ],\n      [AC_PROVIDE_IFELSE([LT_AC_PROG_GCJ],\n\t[AC_LIBTOOL_GCJ],\n      [ifdef([AC_PROG_GCJ],\n\t     [define([AC_PROG_GCJ], defn([AC_PROG_GCJ])[AC_LIBTOOL_GCJ])])\n       ifdef([A][M_PROG_GCJ],\n\t     [define([A][M_PROG_GCJ], defn([A][M_PROG_GCJ])[AC_LIBTOOL_GCJ])])\n       ifdef([LT_AC_PROG_GCJ],\n\t     [define([LT_AC_PROG_GCJ],\n\t\tdefn([LT_AC_PROG_GCJ])[AC_LIBTOOL_GCJ])])])])\n])])# AC_PROG_LIBTOOL\n\n\n# _AC_PROG_LIBTOOL\n# ----------------\nAC_DEFUN([_AC_PROG_LIBTOOL],\n[AC_REQUIRE([AC_LIBTOOL_SETUP])dnl\nAC_BEFORE([$0],[AC_LIBTOOL_CXX])dnl\nAC_BEFORE([$0],[AC_LIBTOOL_F77])dnl\nAC_BEFORE([$0],[AC_LIBTOOL_GCJ])dnl\n\n# This can be used to rebuild libtool when needed\nLIBTOOL_DEPS=\"$ac_aux_dir/ltmain.sh\"\n\n# Always use our own libtool.\nLIBTOOL='$(SHELL) $(top_builddir)/libtool'\nAC_SUBST(LIBTOOL)dnl\n\n# Prevent multiple expansion\ndefine([AC_PROG_LIBTOOL], [])\n])# _AC_PROG_LIBTOOL\n\n\n# AC_LIBTOOL_SETUP\n# ----------------\nAC_DEFUN([AC_LIBTOOL_SETUP],\n[AC_PREREQ(2.50)dnl\nAC_REQUIRE([AC_ENABLE_SHARED])dnl\nAC_REQUIRE([AC_ENABLE_STATIC])dnl\nAC_REQUIRE([AC_ENABLE_FAST_INSTALL])dnl\nAC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_PROG_LD])dnl\nAC_REQUIRE([AC_PROG_LD_RELOAD_FLAG])dnl\nAC_REQUIRE([AC_PROG_NM])dnl\n\nAC_REQUIRE([AC_PROG_LN_S])dnl\nAC_REQUIRE([AC_DEPLIBS_CHECK_METHOD])dnl\n# Autoconf 2.13's AC_OBJEXT and AC_EXEEXT macros only works for C compilers!\nAC_REQUIRE([AC_OBJEXT])dnl\nAC_REQUIRE([AC_EXEEXT])dnl\ndnl\n\nAC_LIBTOOL_SYS_MAX_CMD_LEN\nAC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE\nAC_LIBTOOL_OBJDIR\n\nAC_REQUIRE([_LT_AC_SYS_COMPILER])dnl\n_LT_AC_PROG_ECHO_BACKSLASH\n\ncase $host_os in\naix3*)\n  # AIX sometimes has problems with the GCC collect2 program.  For some\n  # reason, if we set the COLLECT_NAMES environment variable, the problems\n  # vanish in a puff of smoke.\n  if test \"X${COLLECT_NAMES+set}\" != Xset; then\n    COLLECT_NAMES=\n    export COLLECT_NAMES\n  fi\n  ;;\nesac\n\n# Sed substitution that helps us do robust quoting.  It backslashifies\n# metacharacters that are still active within double-quoted strings.\nXsed='sed -e 1s/^X//'\n[sed_quote_subst='s/\\([\\\\\"\\\\`$\\\\\\\\]\\)/\\\\\\1/g']\n\n# Same as above, but do not quote variable references.\n[double_quote_subst='s/\\([\\\\\"\\\\`\\\\\\\\]\\)/\\\\\\1/g']\n\n# Sed substitution to delay expansion of an escaped shell variable in a\n# double_quote_subst'ed string.\ndelay_variable_subst='s/\\\\\\\\\\\\\\\\\\\\\\$/\\\\\\\\\\\\$/g'\n\n# Sed substitution to avoid accidental globbing in evaled expressions\nno_glob_subst='s/\\*/\\\\\\*/g'\n\n# Constants:\nrm=\"rm -f\"\n\n# Global variables:\ndefault_ofile=libtool\ncan_build_shared=yes\n\n# All known linkers require a `.a' archive for static linking (except MSVC,\n# which needs '.lib').\nlibext=a\nltmain=\"$ac_aux_dir/ltmain.sh\"\nofile=\"$default_ofile\"\nwith_gnu_ld=\"$lt_cv_prog_gnu_ld\"\n\nAC_CHECK_TOOL(AR, ar, false)\nAC_CHECK_TOOL(RANLIB, ranlib, :)\nAC_CHECK_TOOL(STRIP, strip, :)\n\nold_CC=\"$CC\"\nold_CFLAGS=\"$CFLAGS\"\n\n# Set sane defaults for various variables\ntest -z \"$AR\" && AR=ar\ntest -z \"$AR_FLAGS\" && AR_FLAGS=cru\ntest -z \"$AS\" && AS=as\ntest -z \"$CC\" && CC=cc\ntest -z \"$LTCC\" && LTCC=$CC\ntest -z \"$LTCFLAGS\" && LTCFLAGS=$CFLAGS\ntest -z \"$DLLTOOL\" && DLLTOOL=dlltool\ntest -z \"$LD\" && LD=ld\ntest -z \"$LN_S\" && LN_S=\"ln -s\"\ntest -z \"$MAGIC_CMD\" && MAGIC_CMD=file\ntest -z \"$NM\" && NM=nm\ntest -z \"$SED\" && SED=sed\ntest -z \"$OBJDUMP\" && OBJDUMP=objdump\ntest -z \"$RANLIB\" && RANLIB=:\ntest -z \"$STRIP\" && STRIP=:\ntest -z \"$ac_objext\" && ac_objext=o\n\n# Determine commands to create old-style static archives.\nold_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs'\nold_postinstall_cmds='chmod 644 $oldlib'\nold_postuninstall_cmds=\n\nif test -n \"$RANLIB\"; then\n  case $host_os in\n  openbsd*)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB -t \\$oldlib\"\n    ;;\n  *)\n    old_postinstall_cmds=\"$old_postinstall_cmds~\\$RANLIB \\$oldlib\"\n    ;;\n  esac\n  old_archive_cmds=\"$old_archive_cmds~\\$RANLIB \\$oldlib\"\nfi\n\n_LT_CC_BASENAME([$compiler])\n\n# Only perform the check for file, if the check method requires it\ncase $deplibs_check_method in\nfile_magic*)\n  if test \"$file_magic_cmd\" = '$MAGIC_CMD'; then\n    AC_PATH_MAGIC\n  fi\n  ;;\nesac\n\nAC_PROVIDE_IFELSE([AC_LIBTOOL_DLOPEN], enable_dlopen=yes, enable_dlopen=no)\nAC_PROVIDE_IFELSE([AC_LIBTOOL_WIN32_DLL],\nenable_win32_dll=yes, enable_win32_dll=no)\n\nAC_ARG_ENABLE([libtool-lock],\n    [AC_HELP_STRING([--disable-libtool-lock],\n\t[avoid locking (might break parallel builds)])])\ntest \"x$enable_libtool_lock\" != xno && enable_libtool_lock=yes\n\nAC_ARG_WITH([pic],\n    [AC_HELP_STRING([--with-pic],\n\t[try to use only PIC/non-PIC objects @<:@default=use both@:>@])],\n    [pic_mode=\"$withval\"],\n    [pic_mode=default])\ntest -z \"$pic_mode\" && pic_mode=default\n\n# Use C for the default configuration in the libtool script\ntagname=\nAC_LIBTOOL_LANG_C_CONFIG\n_LT_AC_TAGCONFIG\n])# AC_LIBTOOL_SETUP\n\n\n# _LT_AC_SYS_COMPILER\n# -------------------\nAC_DEFUN([_LT_AC_SYS_COMPILER],\n[AC_REQUIRE([AC_PROG_CC])dnl\n\n# If no C compiler was specified, use CC.\nLTCC=${LTCC-\"$CC\"}\n\n# If no C compiler flags were specified, use CFLAGS.\nLTCFLAGS=${LTCFLAGS-\"$CFLAGS\"}\n\n# Allow CC to be a program name with arguments.\ncompiler=$CC\n])# _LT_AC_SYS_COMPILER\n\n\n# _LT_CC_BASENAME(CC)\n# -------------------\n# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.\nAC_DEFUN([_LT_CC_BASENAME],\n[for cc_temp in $1\"\"; do\n  case $cc_temp in\n    compile | *[[\\\\/]]compile | ccache | *[[\\\\/]]ccache ) ;;\n    distcc | *[[\\\\/]]distcc | purify | *[[\\\\/]]purify ) ;;\n    \\-*) ;;\n    *) break;;\n  esac\ndone\ncc_basename=`$echo \"X$cc_temp\" | $Xsed -e 's%.*/%%' -e \"s%^$host_alias-%%\"`\n])\n\n\n# _LT_COMPILER_BOILERPLATE\n# ------------------------\n# Check for compiler boilerplate output or warnings with\n# the simple compiler test code.\nAC_DEFUN([_LT_COMPILER_BOILERPLATE],\n[ac_outfile=conftest.$ac_objext\nprintf \"$lt_simple_compile_test_code\" >conftest.$ac_ext\neval \"$ac_compile\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_compiler_boilerplate=`cat conftest.err`\n$rm conftest*\n])# _LT_COMPILER_BOILERPLATE\n\n\n# _LT_LINKER_BOILERPLATE\n# ----------------------\n# Check for linker boilerplate output or warnings with\n# the simple link test code.\nAC_DEFUN([_LT_LINKER_BOILERPLATE],\n[ac_outfile=conftest.$ac_objext\nprintf \"$lt_simple_link_test_code\" >conftest.$ac_ext\neval \"$ac_link\" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err\n_lt_linker_boilerplate=`cat conftest.err`\n$rm conftest*\n])# _LT_LINKER_BOILERPLATE\n\n\n# _LT_AC_SYS_LIBPATH_AIX\n# ----------------------\n# Links a minimal program and checks the executable\n# for the system default hardcoded library path. In most cases,\n# this is /usr/lib:/lib, but when the MPI compilers are used\n# the location of the communication and MPI libs are included too.\n# If we don't find anything, use the default library path according\n# to the aix ld manual.\nAC_DEFUN([_LT_AC_SYS_LIBPATH_AIX],\n[AC_LINK_IFELSE(AC_LANG_PROGRAM,[\naix_libpath=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\\(.*\\)$/\\1/; p; }\n}'`\n# Check for a 64-bit object if we didn't find anything.\nif test -z \"$aix_libpath\"; then aix_libpath=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e '/Import File Strings/,/^$/ { /^0/ { s/^0  *\\(.*\\)$/\\1/; p; }\n}'`; fi],[])\nif test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n])# _LT_AC_SYS_LIBPATH_AIX\n\n\n# _LT_AC_SHELL_INIT(ARG)\n# ----------------------\nAC_DEFUN([_LT_AC_SHELL_INIT],\n[ifdef([AC_DIVERSION_NOTICE],\n\t     [AC_DIVERT_PUSH(AC_DIVERSION_NOTICE)],\n\t [AC_DIVERT_PUSH(NOTICE)])\n$1\nAC_DIVERT_POP\n])# _LT_AC_SHELL_INIT\n\n\n# _LT_AC_PROG_ECHO_BACKSLASH\n# --------------------------\n# Add some code to the start of the generated configure script which\n# will find an echo command which doesn't interpret backslashes.\nAC_DEFUN([_LT_AC_PROG_ECHO_BACKSLASH],\n[_LT_AC_SHELL_INIT([\n# Check that we are running under the correct shell.\nSHELL=${CONFIG_SHELL-/bin/sh}\n\ncase X$ECHO in\nX*--fallback-echo)\n  # Remove one level of quotation (which was required for Make).\n  ECHO=`echo \"$ECHO\" | sed 's,\\\\\\\\\\[$]\\\\[$]0,'[$]0','`\n  ;;\nesac\n\necho=${ECHO-echo}\nif test \"X[$]1\" = X--no-reexec; then\n  # Discard the --no-reexec flag, and continue.\n  shift\nelif test \"X[$]1\" = X--fallback-echo; then\n  # Avoid inline document here, it may be left over\n  :\nelif test \"X`($echo '\\t') 2>/dev/null`\" = 'X\\t' ; then\n  # Yippee, $echo works!\n  :\nelse\n  # Restart under the correct shell.\n  exec $SHELL \"[$]0\" --no-reexec ${1+\"[$]@\"}\nfi\n\nif test \"X[$]1\" = X--fallback-echo; then\n  # used as fallback echo\n  shift\n  cat <<EOF\n[$]*\nEOF\n  exit 0\nfi\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\nif test -z \"$ECHO\"; then\nif test \"X${echo_test_string+set}\" != Xset; then\n# find a string as large as possible, as long as the shell can cope with it\n  for cmd in 'sed 50q \"[$]0\"' 'sed 20q \"[$]0\"' 'sed 10q \"[$]0\"' 'sed 2q \"[$]0\"' 'echo test'; do\n    # expected sizes: less than 2Kb, 1Kb, 512 bytes, 16 bytes, ...\n    if (echo_test_string=`eval $cmd`) 2>/dev/null &&\n       echo_test_string=`eval $cmd` &&\n       (test \"X$echo_test_string\" = \"X$echo_test_string\") 2>/dev/null\n    then\n      break\n    fi\n  done\nfi\n\nif test \"X`($echo '\\t') 2>/dev/null`\" = 'X\\t' &&\n   echo_testing_string=`($echo \"$echo_test_string\") 2>/dev/null` &&\n   test \"X$echo_testing_string\" = \"X$echo_test_string\"; then\n  :\nelse\n  # The Solaris, AIX, and Digital Unix default echo programs unquote\n  # backslashes.  This makes it impossible to quote backslashes using\n  #   echo \"$something\" | sed 's/\\\\/\\\\\\\\/g'\n  #\n  # So, first we look for a working echo in the user's PATH.\n\n  lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\n  for dir in $PATH /usr/ucb; do\n    IFS=\"$lt_save_ifs\"\n    if (test -f $dir/echo || test -f $dir/echo$ac_exeext) &&\n       test \"X`($dir/echo '\\t') 2>/dev/null`\" = 'X\\t' &&\n       echo_testing_string=`($dir/echo \"$echo_test_string\") 2>/dev/null` &&\n       test \"X$echo_testing_string\" = \"X$echo_test_string\"; then\n      echo=\"$dir/echo\"\n      break\n    fi\n  done\n  IFS=\"$lt_save_ifs\"\n\n  if test \"X$echo\" = Xecho; then\n    # We didn't find a better echo, so look for alternatives.\n    if test \"X`(print -r '\\t') 2>/dev/null`\" = 'X\\t' &&\n       echo_testing_string=`(print -r \"$echo_test_string\") 2>/dev/null` &&\n       test \"X$echo_testing_string\" = \"X$echo_test_string\"; then\n      # This shell has a builtin print -r that does the trick.\n      echo='print -r'\n    elif (test -f /bin/ksh || test -f /bin/ksh$ac_exeext) &&\n\t test \"X$CONFIG_SHELL\" != X/bin/ksh; then\n      # If we have ksh, try running configure again with it.\n      ORIGINAL_CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}\n      export ORIGINAL_CONFIG_SHELL\n      CONFIG_SHELL=/bin/ksh\n      export CONFIG_SHELL\n      exec $CONFIG_SHELL \"[$]0\" --no-reexec ${1+\"[$]@\"}\n    else\n      # Try using printf.\n      echo='printf %s\\n'\n      if test \"X`($echo '\\t') 2>/dev/null`\" = 'X\\t' &&\n\t echo_testing_string=`($echo \"$echo_test_string\") 2>/dev/null` &&\n\t test \"X$echo_testing_string\" = \"X$echo_test_string\"; then\n\t# Cool, printf works\n\t:\n      elif echo_testing_string=`($ORIGINAL_CONFIG_SHELL \"[$]0\" --fallback-echo '\\t') 2>/dev/null` &&\n\t   test \"X$echo_testing_string\" = 'X\\t' &&\n\t   echo_testing_string=`($ORIGINAL_CONFIG_SHELL \"[$]0\" --fallback-echo \"$echo_test_string\") 2>/dev/null` &&\n\t   test \"X$echo_testing_string\" = \"X$echo_test_string\"; then\n\tCONFIG_SHELL=$ORIGINAL_CONFIG_SHELL\n\texport CONFIG_SHELL\n\tSHELL=\"$CONFIG_SHELL\"\n\texport SHELL\n\techo=\"$CONFIG_SHELL [$]0 --fallback-echo\"\n      elif echo_testing_string=`($CONFIG_SHELL \"[$]0\" --fallback-echo '\\t') 2>/dev/null` &&\n\t   test \"X$echo_testing_string\" = 'X\\t' &&\n\t   echo_testing_string=`($CONFIG_SHELL \"[$]0\" --fallback-echo \"$echo_test_string\") 2>/dev/null` &&\n\t   test \"X$echo_testing_string\" = \"X$echo_test_string\"; then\n\techo=\"$CONFIG_SHELL [$]0 --fallback-echo\"\n      else\n\t# maybe with a smaller string...\n\tprev=:\n\n\tfor cmd in 'echo test' 'sed 2q \"[$]0\"' 'sed 10q \"[$]0\"' 'sed 20q \"[$]0\"' 'sed 50q \"[$]0\"'; do\n\t  if (test \"X$echo_test_string\" = \"X`eval $cmd`\") 2>/dev/null\n\t  then\n\t    break\n\t  fi\n\t  prev=\"$cmd\"\n\tdone\n\n\tif test \"$prev\" != 'sed 50q \"[$]0\"'; then\n\t  echo_test_string=`eval $prev`\n\t  export echo_test_string\n\t  exec ${ORIGINAL_CONFIG_SHELL-${CONFIG_SHELL-/bin/sh}} \"[$]0\" ${1+\"[$]@\"}\n\telse\n\t  # Oops.  We lost completely, so just stick with echo.\n\t  echo=echo\n\tfi\n      fi\n    fi\n  fi\nfi\nfi\n\n# Copy echo and quote the copy suitably for passing to libtool from\n# the Makefile, instead of quoting the original, which is used later.\nECHO=$echo\nif test \"X$ECHO\" = \"X$CONFIG_SHELL [$]0 --fallback-echo\"; then\n   ECHO=\"$CONFIG_SHELL \\\\\\$\\[$]0 --fallback-echo\"\nfi\n\nAC_SUBST(ECHO)\n])])# _LT_AC_PROG_ECHO_BACKSLASH\n\n\n# _LT_AC_LOCK\n# -----------\nAC_DEFUN([_LT_AC_LOCK],\n[AC_ARG_ENABLE([libtool-lock],\n    [AC_HELP_STRING([--disable-libtool-lock],\n\t[avoid locking (might break parallel builds)])])\ntest \"x$enable_libtool_lock\" != xno && enable_libtool_lock=yes\n\n# Some flags need to be propagated to the compiler or linker for good\n# libtool support.\ncase $host in\nia64-*-hpux*)\n  # Find out which ABI we are using.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.$ac_objext` in\n    *ELF-32*)\n      HPUX_IA64_MODE=\"32\"\n      ;;\n    *ELF-64*)\n      HPUX_IA64_MODE=\"64\"\n      ;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n*-*-irix6*)\n  # Find out which ABI we are using.\n  echo '[#]line __oline__ \"configure\"' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n   if test \"$lt_cv_prog_gnu_ld\" = yes; then\n    case `/usr/bin/file conftest.$ac_objext` in\n    *32-bit*)\n      LD=\"${LD-ld} -melf32bsmip\"\n      ;;\n    *N32*)\n      LD=\"${LD-ld} -melf32bmipn32\"\n      ;;\n    *64-bit*)\n      LD=\"${LD-ld} -melf64bmip\"\n      ;;\n    esac\n   else\n    case `/usr/bin/file conftest.$ac_objext` in\n    *32-bit*)\n      LD=\"${LD-ld} -32\"\n      ;;\n    *N32*)\n      LD=\"${LD-ld} -n32\"\n      ;;\n    *64-bit*)\n      LD=\"${LD-ld} -64\"\n      ;;\n    esac\n   fi\n  fi\n  rm -rf conftest*\n  ;;\n\nx86_64-*linux*|ppc*-*linux*|powerpc*-*linux*|s390*-*linux*|sparc*-*linux*)\n  # Find out which ABI we are using.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n    *32-bit*)\n      case $host in\n        x86_64-*linux*)\n          LD=\"${LD-ld} -m elf_i386\"\n          ;;\n        ppc64-*linux*|powerpc64-*linux*)\n          LD=\"${LD-ld} -m elf32ppclinux\"\n          ;;\n        s390x-*linux*)\n          LD=\"${LD-ld} -m elf_s390\"\n          ;;\n        sparc64-*linux*)\n          LD=\"${LD-ld} -m elf32_sparc\"\n          ;;\n      esac\n      ;;\n    *64-bit*)\n      case $host in\n        x86_64-*linux*)\n          LD=\"${LD-ld} -m elf_x86_64\"\n          ;;\n        ppc*-*linux*|powerpc*-*linux*)\n          LD=\"${LD-ld} -m elf64ppc\"\n          ;;\n        s390*-*linux*)\n          LD=\"${LD-ld} -m elf64_s390\"\n          ;;\n        sparc*-*linux*)\n          LD=\"${LD-ld} -m elf64_sparc\"\n          ;;\n      esac\n      ;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n\n*-*-sco3.2v5*)\n  # On SCO OpenServer 5, we need -belf to get full-featured binaries.\n  SAVE_CFLAGS=\"$CFLAGS\"\n  CFLAGS=\"$CFLAGS -belf\"\n  AC_CACHE_CHECK([whether the C compiler needs -belf], lt_cv_cc_needs_belf,\n    [AC_LANG_PUSH(C)\n     AC_TRY_LINK([],[],[lt_cv_cc_needs_belf=yes],[lt_cv_cc_needs_belf=no])\n     AC_LANG_POP])\n  if test x\"$lt_cv_cc_needs_belf\" != x\"yes\"; then\n    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf\n    CFLAGS=\"$SAVE_CFLAGS\"\n  fi\n  ;;\nsparc*-*solaris*)\n  # Find out which ABI we are using.\n  echo 'int i;' > conftest.$ac_ext\n  if AC_TRY_EVAL(ac_compile); then\n    case `/usr/bin/file conftest.o` in\n    *64-bit*)\n      case $lt_cv_prog_gnu_ld in\n      yes*) LD=\"${LD-ld} -m elf64_sparc\" ;;\n      *)    LD=\"${LD-ld} -64\" ;;\n      esac\n      ;;\n    esac\n  fi\n  rm -rf conftest*\n  ;;\n\nAC_PROVIDE_IFELSE([AC_LIBTOOL_WIN32_DLL],\n[*-*-cygwin* | *-*-mingw* | *-*-pw32*)\n  AC_CHECK_TOOL(DLLTOOL, dlltool, false)\n  AC_CHECK_TOOL(AS, as, false)\n  AC_CHECK_TOOL(OBJDUMP, objdump, false)\n  ;;\n  ])\nesac\n\nneed_locks=\"$enable_libtool_lock\"\n\n])# _LT_AC_LOCK\n\n\n# AC_LIBTOOL_COMPILER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#\t\t[OUTPUT-FILE], [ACTION-SUCCESS], [ACTION-FAILURE])\n# ----------------------------------------------------------------\n# Check whether the given compiler option works\nAC_DEFUN([AC_LIBTOOL_COMPILER_OPTION],\n[AC_REQUIRE([LT_AC_PROG_SED])\nAC_CACHE_CHECK([$1], [$2],\n  [$2=no\n  ifelse([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])\n   printf \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n   lt_compiler_flag=\"$3\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   # The option is referenced via a variable to avoid confusing sed.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:__oline__: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>conftest.err)\n   ac_status=$?\n   cat conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:__oline__: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s \"$ac_outfile\"; then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings other than the usual output.\n     $echo \"X$_lt_compiler_boilerplate\" | $Xsed -e '/^$/d' >conftest.exp\n     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then\n       $2=yes\n     fi\n   fi\n   $rm conftest*\n])\n\nif test x\"[$]$2\" = xyes; then\n    ifelse([$5], , :, [$5])\nelse\n    ifelse([$6], , :, [$6])\nfi\n])# AC_LIBTOOL_COMPILER_OPTION\n\n\n# AC_LIBTOOL_LINKER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,\n#                          [ACTION-SUCCESS], [ACTION-FAILURE])\n# ------------------------------------------------------------\n# Check whether the given compiler option works\nAC_DEFUN([AC_LIBTOOL_LINKER_OPTION],\n[AC_CACHE_CHECK([$1], [$2],\n  [$2=no\n   save_LDFLAGS=\"$LDFLAGS\"\n   LDFLAGS=\"$LDFLAGS $3\"\n   printf \"$lt_simple_link_test_code\" > conftest.$ac_ext\n   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then\n     # The linker can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     if test -s conftest.err; then\n       # Append any errors to the config.log.\n       cat conftest.err 1>&AS_MESSAGE_LOG_FD\n       $echo \"X$_lt_linker_boilerplate\" | $Xsed -e '/^$/d' > conftest.exp\n       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2\n       if diff conftest.exp conftest.er2 >/dev/null; then\n         $2=yes\n       fi\n     else\n       $2=yes\n     fi\n   fi\n   $rm conftest*\n   LDFLAGS=\"$save_LDFLAGS\"\n])\n\nif test x\"[$]$2\" = xyes; then\n    ifelse([$4], , :, [$4])\nelse\n    ifelse([$5], , :, [$5])\nfi\n])# AC_LIBTOOL_LINKER_OPTION\n\n\n# AC_LIBTOOL_SYS_MAX_CMD_LEN\n# --------------------------\nAC_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN],\n[# find the maximum length of command line arguments\nAC_MSG_CHECKING([the maximum length of command line arguments])\nAC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl\n  i=0\n  teststring=\"ABCD\"\n\n  case $build_os in\n  msdosdjgpp*)\n    # On DJGPP, this test can blow up pretty badly due to problems in libc\n    # (any single argument exceeding 2000 bytes causes a buffer overrun\n    # during glob expansion).  Even if it were fixed, the result of this\n    # check would be larger than it should be.\n    lt_cv_sys_max_cmd_len=12288;    # 12K is about right\n    ;;\n\n  gnu*)\n    # Under GNU Hurd, this test is not required because there is\n    # no limit to the length of command line arguments.\n    # Libtool will interpret -1 as no limit whatsoever\n    lt_cv_sys_max_cmd_len=-1;\n    ;;\n\n  cygwin* | mingw*)\n    # On Win9x/ME, this test blows up -- it succeeds, but takes\n    # about 5 minutes as the teststring grows exponentially.\n    # Worse, since 9x/ME are not pre-emptively multitasking,\n    # you end up with a \"frozen\" computer, even though with patience\n    # the test eventually succeeds (with a max line length of 256k).\n    # Instead, let's just punt: use the minimum linelength reported by\n    # all of the supported platforms: 8192 (on NT/2K/XP).\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  amigaos*)\n    # On AmigaOS with pdksh, this test takes hours, literally.\n    # So we just punt and use a minimum line length of 8192.\n    lt_cv_sys_max_cmd_len=8192;\n    ;;\n\n  netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)\n    # This has been around since 386BSD, at least.  Likely further.\n    if test -x /sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`\n    elif test -x /usr/sbin/sysctl; then\n      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`\n    else\n      lt_cv_sys_max_cmd_len=65536\t# usable default for all BSDs\n    fi\n    # And add a safety zone\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 4`\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\* 3`\n    ;;\n\n  interix*)\n    # We know the value 262144 and hardcode it with a safety zone (like BSD)\n    lt_cv_sys_max_cmd_len=196608\n    ;;\n\n  osf*)\n    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure\n    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not\n    # nice to cause kernel panics so lets avoid the loop below.\n    # First set a reasonable default.\n    lt_cv_sys_max_cmd_len=16384\n    #\n    if test -x /sbin/sysconfig; then\n      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in\n        *1*) lt_cv_sys_max_cmd_len=-1 ;;\n      esac\n    fi\n    ;;\n  sco3.2v5*)\n    lt_cv_sys_max_cmd_len=102400\n    ;;\n  sysv5* | sco5v6* | sysv4.2uw2*)\n    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`\n    if test -n \"$kargmax\"; then\n      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[[ \t]]//'`\n    else\n      lt_cv_sys_max_cmd_len=32768\n    fi\n    ;;\n  *)\n    # If test is not a shell built-in, we'll probably end up computing a\n    # maximum length that is only half of the actual maximum length, but\n    # we can't tell.\n    SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}\n    while (test \"X\"`$SHELL [$]0 --fallback-echo \"X$teststring\" 2>/dev/null` \\\n\t       = \"XX$teststring\") >/dev/null 2>&1 &&\n\t    new_result=`expr \"X$teststring\" : \".*\" 2>&1` &&\n\t    lt_cv_sys_max_cmd_len=$new_result &&\n\t    test $i != 17 # 1/2 MB should be enough\n    do\n      i=`expr $i + 1`\n      teststring=$teststring$teststring\n    done\n    teststring=\n    # Add a significant safety factor because C++ compilers can tack on massive\n    # amounts of additional arguments before passing them to the linker.\n    # It appears as though 1/2 is a usable value.\n    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \\/ 2`\n    ;;\n  esac\n])\nif test -n $lt_cv_sys_max_cmd_len ; then\n  AC_MSG_RESULT($lt_cv_sys_max_cmd_len)\nelse\n  AC_MSG_RESULT(none)\nfi\n])# AC_LIBTOOL_SYS_MAX_CMD_LEN\n\n\n# _LT_AC_CHECK_DLFCN\n# ------------------\nAC_DEFUN([_LT_AC_CHECK_DLFCN],\n[AC_CHECK_HEADERS(dlfcn.h)dnl\n])# _LT_AC_CHECK_DLFCN\n\n\n# _LT_AC_TRY_DLOPEN_SELF (ACTION-IF-TRUE, ACTION-IF-TRUE-W-USCORE,\n#                           ACTION-IF-FALSE, ACTION-IF-CROSS-COMPILING)\n# ---------------------------------------------------------------------\nAC_DEFUN([_LT_AC_TRY_DLOPEN_SELF],\n[AC_REQUIRE([_LT_AC_CHECK_DLFCN])dnl\nif test \"$cross_compiling\" = yes; then :\n  [$4]\nelse\n  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n  lt_status=$lt_dlunknown\n  cat > conftest.$ac_ext <<EOF\n[#line __oline__ \"configure\"\n#include \"confdefs.h\"\n\n#if HAVE_DLFCN_H\n#include <dlfcn.h>\n#endif\n\n#include <stdio.h>\n\n#ifdef RTLD_GLOBAL\n#  define LT_DLGLOBAL\t\tRTLD_GLOBAL\n#else\n#  ifdef DL_GLOBAL\n#    define LT_DLGLOBAL\t\tDL_GLOBAL\n#  else\n#    define LT_DLGLOBAL\t\t0\n#  endif\n#endif\n\n/* We may have to define LT_DLLAZY_OR_NOW in the command line if we\n   find out it does not work in some platform. */\n#ifndef LT_DLLAZY_OR_NOW\n#  ifdef RTLD_LAZY\n#    define LT_DLLAZY_OR_NOW\t\tRTLD_LAZY\n#  else\n#    ifdef DL_LAZY\n#      define LT_DLLAZY_OR_NOW\t\tDL_LAZY\n#    else\n#      ifdef RTLD_NOW\n#        define LT_DLLAZY_OR_NOW\tRTLD_NOW\n#      else\n#        ifdef DL_NOW\n#          define LT_DLLAZY_OR_NOW\tDL_NOW\n#        else\n#          define LT_DLLAZY_OR_NOW\t0\n#        endif\n#      endif\n#    endif\n#  endif\n#endif\n\n#ifdef __cplusplus\nextern \"C\" void exit (int);\n#endif\n\nvoid fnord() { int i=42;}\nint main ()\n{\n  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);\n  int status = $lt_dlunknown;\n\n  if (self)\n    {\n      if (dlsym (self,\"fnord\"))       status = $lt_dlno_uscore;\n      else if (dlsym( self,\"_fnord\")) status = $lt_dlneed_uscore;\n      /* dlclose (self); */\n    }\n  else\n    puts (dlerror ());\n\n    exit (status);\n}]\nEOF\n  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext} 2>/dev/null; then\n    (./conftest; exit; ) >&AS_MESSAGE_LOG_FD 2>/dev/null\n    lt_status=$?\n    case x$lt_status in\n      x$lt_dlno_uscore) $1 ;;\n      x$lt_dlneed_uscore) $2 ;;\n      x$lt_dlunknown|x*) $3 ;;\n    esac\n  else :\n    # compilation failed\n    $3\n  fi\nfi\nrm -fr conftest*\n])# _LT_AC_TRY_DLOPEN_SELF\n\n\n# AC_LIBTOOL_DLOPEN_SELF\n# ----------------------\nAC_DEFUN([AC_LIBTOOL_DLOPEN_SELF],\n[AC_REQUIRE([_LT_AC_CHECK_DLFCN])dnl\nif test \"x$enable_dlopen\" != xyes; then\n  enable_dlopen=unknown\n  enable_dlopen_self=unknown\n  enable_dlopen_self_static=unknown\nelse\n  lt_cv_dlopen=no\n  lt_cv_dlopen_libs=\n\n  case $host_os in\n  beos*)\n    lt_cv_dlopen=\"load_add_on\"\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ;;\n\n  mingw* | pw32*)\n    lt_cv_dlopen=\"LoadLibrary\"\n    lt_cv_dlopen_libs=\n   ;;\n\n  cygwin*)\n    lt_cv_dlopen=\"dlopen\"\n    lt_cv_dlopen_libs=\n   ;;\n\n  darwin*)\n  # if libdl is installed we need to link against it\n    AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-ldl\"],[\n    lt_cv_dlopen=\"dyld\"\n    lt_cv_dlopen_libs=\n    lt_cv_dlopen_self=yes\n    ])\n   ;;\n\n  *)\n    AC_CHECK_FUNC([shl_load],\n\t  [lt_cv_dlopen=\"shl_load\"],\n      [AC_CHECK_LIB([dld], [shl_load],\n\t    [lt_cv_dlopen=\"shl_load\" lt_cv_dlopen_libs=\"-dld\"],\n\t[AC_CHECK_FUNC([dlopen],\n\t      [lt_cv_dlopen=\"dlopen\"],\n\t  [AC_CHECK_LIB([dl], [dlopen],\n\t\t[lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-ldl\"],\n\t    [AC_CHECK_LIB([svld], [dlopen],\n\t\t  [lt_cv_dlopen=\"dlopen\" lt_cv_dlopen_libs=\"-lsvld\"],\n\t      [AC_CHECK_LIB([dld], [dld_link],\n\t\t    [lt_cv_dlopen=\"dld_link\" lt_cv_dlopen_libs=\"-dld\"])\n\t      ])\n\t    ])\n\t  ])\n\t])\n      ])\n    ;;\n  esac\n\n  if test \"x$lt_cv_dlopen\" != xno; then\n    enable_dlopen=yes\n  else\n    enable_dlopen=no\n  fi\n\n  case $lt_cv_dlopen in\n  dlopen)\n    save_CPPFLAGS=\"$CPPFLAGS\"\n    test \"x$ac_cv_header_dlfcn_h\" = xyes && CPPFLAGS=\"$CPPFLAGS -DHAVE_DLFCN_H\"\n\n    save_LDFLAGS=\"$LDFLAGS\"\n    wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $export_dynamic_flag_spec\\\"\n\n    save_LIBS=\"$LIBS\"\n    LIBS=\"$lt_cv_dlopen_libs $LIBS\"\n\n    AC_CACHE_CHECK([whether a program can dlopen itself],\n\t  lt_cv_dlopen_self, [dnl\n\t  _LT_AC_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self=yes, lt_cv_dlopen_self=yes,\n\t    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)\n    ])\n\n    if test \"x$lt_cv_dlopen_self\" = xyes; then\n      wl=$lt_prog_compiler_wl eval LDFLAGS=\\\"\\$LDFLAGS $lt_prog_compiler_static\\\"\n      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],\n    \t  lt_cv_dlopen_self_static, [dnl\n\t  _LT_AC_TRY_DLOPEN_SELF(\n\t    lt_cv_dlopen_self_static=yes, lt_cv_dlopen_self_static=yes,\n\t    lt_cv_dlopen_self_static=no,  lt_cv_dlopen_self_static=cross)\n      ])\n    fi\n\n    CPPFLAGS=\"$save_CPPFLAGS\"\n    LDFLAGS=\"$save_LDFLAGS\"\n    LIBS=\"$save_LIBS\"\n    ;;\n  esac\n\n  case $lt_cv_dlopen_self in\n  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;\n  *) enable_dlopen_self=unknown ;;\n  esac\n\n  case $lt_cv_dlopen_self_static in\n  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;\n  *) enable_dlopen_self_static=unknown ;;\n  esac\nfi\n])# AC_LIBTOOL_DLOPEN_SELF\n\n\n# AC_LIBTOOL_PROG_CC_C_O([TAGNAME])\n# ---------------------------------\n# Check to see if options -c and -o are simultaneously supported by compiler\nAC_DEFUN([AC_LIBTOOL_PROG_CC_C_O],\n[AC_REQUIRE([_LT_AC_SYS_COMPILER])dnl\nAC_CACHE_CHECK([if $compiler supports -c -o file.$ac_objext],\n  [_LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1)],\n  [_LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1)=no\n   $rm -r conftest 2>/dev/null\n   mkdir conftest\n   cd conftest\n   mkdir out\n   printf \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n   lt_compiler_flag=\"-o out/conftest2.$ac_objext\"\n   # Insert the option either (1) after the last *FLAGS variable, or\n   # (2) before a word containing \"conftest.\", or (3) at the end.\n   # Note that $ac_compile itself does not contain backslashes and begins\n   # with a dollar sign (not a hyphen), so the echo should work correctly.\n   lt_compile=`echo \"$ac_compile\" | $SED \\\n   -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n   -e 's: [[^ ]]*conftest\\.: $lt_compiler_flag&:; t' \\\n   -e 's:$: $lt_compiler_flag:'`\n   (eval echo \"\\\"\\$as_me:__oline__: $lt_compile\\\"\" >&AS_MESSAGE_LOG_FD)\n   (eval \"$lt_compile\" 2>out/conftest.err)\n   ac_status=$?\n   cat out/conftest.err >&AS_MESSAGE_LOG_FD\n   echo \"$as_me:__oline__: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n   if (exit $ac_status) && test -s out/conftest2.$ac_objext\n   then\n     # The compiler can only warn and ignore the option if not recognized\n     # So say no if there are warnings\n     $echo \"X$_lt_compiler_boilerplate\" | $Xsed -e '/^$/d' > out/conftest.exp\n     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2\n     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then\n       _LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n     fi\n   fi\n   chmod u+w . 2>&AS_MESSAGE_LOG_FD\n   $rm conftest*\n   # SGI C++ compiler will create directory out/ii_files/ for\n   # template instantiation\n   test -d out/ii_files && $rm out/ii_files/* && rmdir out/ii_files\n   $rm out/* && rmdir out\n   cd ..\n   rmdir conftest\n   $rm conftest*\n])\n])# AC_LIBTOOL_PROG_CC_C_O\n\n\n# AC_LIBTOOL_SYS_HARD_LINK_LOCKS([TAGNAME])\n# -----------------------------------------\n# Check to see if we can do hard links to lock some files if needed\nAC_DEFUN([AC_LIBTOOL_SYS_HARD_LINK_LOCKS],\n[AC_REQUIRE([_LT_AC_LOCK])dnl\n\nhard_links=\"nottested\"\nif test \"$_LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1)\" = no && test \"$need_locks\" != no; then\n  # do not overwrite the value of need_locks provided by the user\n  AC_MSG_CHECKING([if we can lock with hard links])\n  hard_links=yes\n  $rm conftest*\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  touch conftest.a\n  ln conftest.a conftest.b 2>&5 || hard_links=no\n  ln conftest.a conftest.b 2>/dev/null && hard_links=no\n  AC_MSG_RESULT([$hard_links])\n  if test \"$hard_links\" = no; then\n    AC_MSG_WARN([`$CC' does not support `-c -o', so `make -j' may be unsafe])\n    need_locks=warn\n  fi\nelse\n  need_locks=no\nfi\n])# AC_LIBTOOL_SYS_HARD_LINK_LOCKS\n\n\n# AC_LIBTOOL_OBJDIR\n# -----------------\nAC_DEFUN([AC_LIBTOOL_OBJDIR],\n[AC_CACHE_CHECK([for objdir], [lt_cv_objdir],\n[rm -f .libs 2>/dev/null\nmkdir .libs 2>/dev/null\nif test -d .libs; then\n  lt_cv_objdir=.libs\nelse\n  # MS-DOS does not allow filenames that begin with a dot.\n  lt_cv_objdir=_libs\nfi\nrmdir .libs 2>/dev/null])\nobjdir=$lt_cv_objdir\n])# AC_LIBTOOL_OBJDIR\n\n\n# AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH([TAGNAME])\n# ----------------------------------------------\n# Check hardcoding attributes.\nAC_DEFUN([AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH],\n[AC_MSG_CHECKING([how to hardcode library paths into programs])\n_LT_AC_TAGVAR(hardcode_action, $1)=\nif test -n \"$_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)\" || \\\n   test -n \"$_LT_AC_TAGVAR(runpath_var, $1)\" || \\\n   test \"X$_LT_AC_TAGVAR(hardcode_automatic, $1)\" = \"Xyes\" ; then\n\n  # We can hardcode non-existant directories.\n  if test \"$_LT_AC_TAGVAR(hardcode_direct, $1)\" != no &&\n     # If the only mechanism to avoid hardcoding is shlibpath_var, we\n     # have to relink, otherwise we might link with an installed library\n     # when we should be linking with a yet-to-be-installed one\n     ## test \"$_LT_AC_TAGVAR(hardcode_shlibpath_var, $1)\" != no &&\n     test \"$_LT_AC_TAGVAR(hardcode_minus_L, $1)\" != no; then\n    # Linking always hardcodes the temporary library directory.\n    _LT_AC_TAGVAR(hardcode_action, $1)=relink\n  else\n    # We can link without hardcoding, and we can hardcode nonexisting dirs.\n    _LT_AC_TAGVAR(hardcode_action, $1)=immediate\n  fi\nelse\n  # We cannot hardcode anything, or else we can only hardcode existing\n  # directories.\n  _LT_AC_TAGVAR(hardcode_action, $1)=unsupported\nfi\nAC_MSG_RESULT([$_LT_AC_TAGVAR(hardcode_action, $1)])\n\nif test \"$_LT_AC_TAGVAR(hardcode_action, $1)\" = relink; then\n  # Fast installation is not supported\n  enable_fast_install=no\nelif test \"$shlibpath_overrides_runpath\" = yes ||\n     test \"$enable_shared\" = no; then\n  # Fast installation is not necessary\n  enable_fast_install=needless\nfi\n])# AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH\n\n\n# AC_LIBTOOL_SYS_LIB_STRIP\n# ------------------------\nAC_DEFUN([AC_LIBTOOL_SYS_LIB_STRIP],\n[striplib=\nold_striplib=\nAC_MSG_CHECKING([whether stripping libraries is possible])\nif test -n \"$STRIP\" && $STRIP -V 2>&1 | grep \"GNU strip\" >/dev/null; then\n  test -z \"$old_striplib\" && old_striplib=\"$STRIP --strip-debug\"\n  test -z \"$striplib\" && striplib=\"$STRIP --strip-unneeded\"\n  AC_MSG_RESULT([yes])\nelse\n# FIXME - insert some real tests, host_os isn't really good enough\n  case $host_os in\n   darwin*)\n       if test -n \"$STRIP\" ; then\n         striplib=\"$STRIP -x\"\n         AC_MSG_RESULT([yes])\n       else\n  AC_MSG_RESULT([no])\nfi\n       ;;\n   *)\n  AC_MSG_RESULT([no])\n    ;;\n  esac\nfi\n])# AC_LIBTOOL_SYS_LIB_STRIP\n\n\n# AC_LIBTOOL_SYS_DYNAMIC_LINKER\n# -----------------------------\n# PORTME Fill in your ld.so characteristics\nAC_DEFUN([AC_LIBTOOL_SYS_DYNAMIC_LINKER],\n[AC_MSG_CHECKING([dynamic linker characteristics])\nlibrary_names_spec=\nlibname_spec='lib$name'\nsoname_spec=\nshrext_cmds=\".so\"\npostinstall_cmds=\npostuninstall_cmds=\nfinish_cmds=\nfinish_eval=\nshlibpath_var=\nshlibpath_overrides_runpath=unknown\nversion_type=none\ndynamic_linker=\"$host_os ld.so\"\nsys_lib_dlsearch_path_spec=\"/lib /usr/lib\"\nif test \"$GCC\" = yes; then\n  sys_lib_search_path_spec=`$CC -print-search-dirs | grep \"^libraries:\" | $SED -e \"s/^libraries://\" -e \"s,=/,/,g\"`\n  if echo \"$sys_lib_search_path_spec\" | grep ';' >/dev/null ; then\n    # if the path contains \";\" then we assume it to be the separator\n    # otherwise default to the standard path separator (i.e. \":\") - it is\n    # assumed that no part of a normal pathname contains \";\" but that should\n    # okay in the real world where \";\" in dirpaths is itself problematic.\n    sys_lib_search_path_spec=`echo \"$sys_lib_search_path_spec\" | $SED -e 's/;/ /g'`\n  else\n    sys_lib_search_path_spec=`echo \"$sys_lib_search_path_spec\" | $SED  -e \"s/$PATH_SEPARATOR/ /g\"`\n  fi\nelse\n  sys_lib_search_path_spec=\"/lib /usr/lib /usr/local/lib\"\nfi\nneed_lib_prefix=unknown\nhardcode_into_libs=no\n\n# when you set need_version to no, make sure it does not cause -set_version\n# flags to be left without arguments\nneed_version=unknown\n\ncase $host_os in\naix3*)\n  version_type=linux\n  library_names_spec='${libname}${release}${shared_ext}$versuffix $libname.a'\n  shlibpath_var=LIBPATH\n\n  # AIX 3 has no versioning support, so we append a major version to the name.\n  soname_spec='${libname}${release}${shared_ext}$major'\n  ;;\n\naix4* | aix5*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  hardcode_into_libs=yes\n  if test \"$host_cpu\" = ia64; then\n    # AIX 5 supports IA64\n    library_names_spec='${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext}$versuffix $libname${shared_ext}'\n    shlibpath_var=LD_LIBRARY_PATH\n  else\n    # With GCC up to 2.95.x, collect2 would create an import file\n    # for dependence libraries.  The import file would start with\n    # the line `#! .'.  This would cause the generated library to\n    # depend on `.', always an invalid library.  This was fixed in\n    # development snapshots of GCC prior to 3.0.\n    case $host_os in\n      aix4 | aix4.[[01]] | aix4.[[01]].*)\n      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'\n\t   echo ' yes '\n\t   echo '#endif'; } | ${CC} -E - | grep yes > /dev/null; then\n\t:\n      else\n\tcan_build_shared=no\n      fi\n      ;;\n    esac\n    # AIX (on Power*) has no versioning support, so currently we can not hardcode correct\n    # soname into executable. Probably we can add versioning support to\n    # collect2, so additional links can be useful in future.\n    if test \"$aix_use_runtimelinking\" = yes; then\n      # If using run time linking (on AIX 4.2 or later) use lib<name>.so\n      # instead of lib<name>.a to let people know that these are not\n      # typical AIX shared libraries.\n      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    else\n      # We preserve .a as extension for shared libraries through AIX4.2\n      # and later when we are not doing run time linking.\n      library_names_spec='${libname}${release}.a $libname.a'\n      soname_spec='${libname}${release}${shared_ext}$major'\n    fi\n    shlibpath_var=LIBPATH\n  fi\n  ;;\n\namigaos*)\n  library_names_spec='$libname.ixlibrary $libname.a'\n  # Create ${libname}_ixlibrary.a entries in /sys/libs.\n  finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`$echo \"X$lib\" | $Xsed -e '\\''s%^.*/\\([[^/]]*\\)\\.ixlibrary$%\\1%'\\''`; test $rm /sys/libs/${libname}_ixlibrary.a; $show \"cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a\"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'\n  ;;\n\nbeos*)\n  library_names_spec='${libname}${shared_ext}'\n  dynamic_linker=\"$host_os ld.so\"\n  shlibpath_var=LIBRARY_PATH\n  ;;\n\nbsdi[[45]]*)\n  version_type=linux\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib\"\n  sys_lib_dlsearch_path_spec=\"/shlib /usr/lib /usr/local/lib\"\n  # the default ld.so.conf also contains /usr/contrib/lib and\n  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow\n  # libtool to hard-code these into programs\n  ;;\n\ncygwin* | mingw* | pw32*)\n  version_type=windows\n  shrext_cmds=\".dll\"\n  need_version=no\n  need_lib_prefix=no\n\n  case $GCC,$host_os in\n  yes,cygwin* | yes,mingw* | yes,pw32*)\n    library_names_spec='$libname.dll.a'\n    # DLL is installed to $(libdir)/../bin by postinstall_cmds\n    postinstall_cmds='base_file=`basename \\${file}`~\n      dlpath=`$SHELL 2>&1 -c '\\''. $dir/'\\''\\${base_file}'\\''i;echo \\$dlname'\\''`~\n      dldir=$destdir/`dirname \\$dlpath`~\n      test -d \\$dldir || mkdir -p \\$dldir~\n      $install_prog $dir/$dlname \\$dldir/$dlname~\n      chmod a+x \\$dldir/$dlname'\n    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\\''. $file; echo \\$dlname'\\''`~\n      dlpath=$dir/\\$dldll~\n       $rm \\$dlpath'\n    shlibpath_overrides_runpath=yes\n\n    case $host_os in\n    cygwin*)\n      # Cygwin DLLs use 'cyg' prefix rather than 'lib'\n      soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\n      sys_lib_search_path_spec=\"/usr/lib /lib/w32api /lib /usr/local/lib\"\n      ;;\n    mingw*)\n      # MinGW DLLs use traditional 'lib' prefix\n      soname_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\n      sys_lib_search_path_spec=`$CC -print-search-dirs | grep \"^libraries:\" | $SED -e \"s/^libraries://\" -e \"s,=/,/,g\"`\n      if echo \"$sys_lib_search_path_spec\" | [grep ';[c-zC-Z]:/' >/dev/null]; then\n        # It is most probably a Windows format PATH printed by\n        # mingw gcc, but we are running on Cygwin. Gcc prints its search\n        # path with ; separators, and with drive letters. We can handle the\n        # drive letters (cygwin fileutils understands them), so leave them,\n        # especially as we might pass files found there to a mingw objdump,\n        # which wouldn't understand a cygwinified path. Ahh.\n        sys_lib_search_path_spec=`echo \"$sys_lib_search_path_spec\" | $SED -e 's/;/ /g'`\n      else\n        sys_lib_search_path_spec=`echo \"$sys_lib_search_path_spec\" | $SED  -e \"s/$PATH_SEPARATOR/ /g\"`\n      fi\n      ;;\n    pw32*)\n      # pw32 DLLs use 'pw' prefix rather than 'lib'\n      library_names_spec='`echo ${libname} | sed -e 's/^lib/pw/'``echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'\n      ;;\n    esac\n    ;;\n\n  *)\n    library_names_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext} $libname.lib'\n    ;;\n  esac\n  dynamic_linker='Win32 ld.exe'\n  # FIXME: first we should search . and the directory the executable is in\n  shlibpath_var=PATH\n  ;;\n\ndarwin* | rhapsody*)\n  dynamic_linker=\"$host_os dyld\"\n  version_type=darwin\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${versuffix}$shared_ext ${libname}${release}${major}$shared_ext ${libname}$shared_ext'\n  soname_spec='${libname}${release}${major}$shared_ext'\n  shlibpath_overrides_runpath=yes\n  shlibpath_var=DYLD_LIBRARY_PATH\n  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'\n  # Apple's gcc prints 'gcc -print-search-dirs' doesn't operate the same.\n  if test \"$GCC\" = yes; then\n    sys_lib_search_path_spec=`$CC -print-search-dirs | tr \"\\n\" \"$PATH_SEPARATOR\" | sed -e 's/libraries:/@libraries:/' | tr \"@\" \"\\n\" | grep \"^libraries:\" | sed -e \"s/^libraries://\" -e \"s,=/,/,g\" -e \"s,$PATH_SEPARATOR, ,g\" -e \"s,.*,& /lib /usr/lib /usr/local/lib,g\"`\n  else\n    sys_lib_search_path_spec='/lib /usr/lib /usr/local/lib'\n  fi\n  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'\n  ;;\n\ndgux*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname$shared_ext'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\nfreebsd1*)\n  dynamic_linker=no\n  ;;\n\nkfreebsd*-gnu)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='GNU ld.so'\n  ;;\n\nfreebsd* | dragonfly*)\n  # DragonFly does not have aout.  When/if they implement a new\n  # versioning mechanism, adjust this.\n  if test -x /usr/bin/objformat; then\n    objformat=`/usr/bin/objformat`\n  else\n    case $host_os in\n    freebsd[[123]]*) objformat=aout ;;\n    *) objformat=elf ;;\n    esac\n  fi\n  version_type=freebsd-$objformat\n  case $version_type in\n    freebsd-elf*)\n      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'\n      need_version=no\n      need_lib_prefix=no\n      ;;\n    freebsd-*)\n      library_names_spec='${libname}${release}${shared_ext}$versuffix $libname${shared_ext}$versuffix'\n      need_version=yes\n      ;;\n  esac\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_os in\n  freebsd2*)\n    shlibpath_overrides_runpath=yes\n    ;;\n  freebsd3.[[01]]* | freebsdelf3.[[01]]*)\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  freebsd3.[[2-9]]* | freebsdelf3.[[2-9]]* | \\\n  freebsd4.[[0-5]] | freebsdelf4.[[0-5]] | freebsd4.1.1 | freebsdelf4.1.1)\n    shlibpath_overrides_runpath=no\n    hardcode_into_libs=yes\n    ;;\n  freebsd*) # from 4.6 on\n    shlibpath_overrides_runpath=yes\n    hardcode_into_libs=yes\n    ;;\n  esac\n  ;;\n\ngnu*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  hardcode_into_libs=yes\n  ;;\n\nhpux9* | hpux10* | hpux11*)\n  # Give a soname corresponding to the major version so that dld.sl refuses to\n  # link against other versions.\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  case $host_cpu in\n  ia64*)\n    shrext_cmds='.so'\n    hardcode_into_libs=yes\n    dynamic_linker=\"$host_os dld.so\"\n    shlibpath_var=LD_LIBRARY_PATH\n    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    if test \"X$HPUX_IA64_MODE\" = X32; then\n      sys_lib_search_path_spec=\"/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib\"\n    else\n      sys_lib_search_path_spec=\"/usr/lib/hpux64 /usr/local/lib/hpux64\"\n    fi\n    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n    ;;\n   hppa*64*)\n     shrext_cmds='.sl'\n     hardcode_into_libs=yes\n     dynamic_linker=\"$host_os dld.sl\"\n     shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH\n     shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.\n     library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n     soname_spec='${libname}${release}${shared_ext}$major'\n     sys_lib_search_path_spec=\"/usr/lib/pa20_64 /usr/ccs/lib/pa20_64\"\n     sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec\n     ;;\n   *)\n    shrext_cmds='.sl'\n    dynamic_linker=\"$host_os dld.sl\"\n    shlibpath_var=SHLIB_PATH\n    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    ;;\n  esac\n  # HP-UX runs *really* slowly unless shared libraries are mode 555.\n  postinstall_cmds='chmod 555 $lib'\n  ;;\n\ninterix3*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $host_os in\n    nonstopux*) version_type=nonstopux ;;\n    *)\n\tif test \"$lt_cv_prog_gnu_ld\" = yes; then\n\t\tversion_type=linux\n\telse\n\t\tversion_type=irix\n\tfi ;;\n  esac\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='${libname}${release}${shared_ext}$major'\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext} $libname${shared_ext}'\n  case $host_os in\n  irix5* | nonstopux*)\n    libsuff= shlibsuff=\n    ;;\n  *)\n    case $LD in # libtool.m4 will add one of these switches to LD\n    *-32|*\"-32 \"|*-melf32bsmip|*\"-melf32bsmip \")\n      libsuff= shlibsuff= libmagic=32-bit;;\n    *-n32|*\"-n32 \"|*-melf32bmipn32|*\"-melf32bmipn32 \")\n      libsuff=32 shlibsuff=N32 libmagic=N32;;\n    *-64|*\"-64 \"|*-melf64bmip|*\"-melf64bmip \")\n      libsuff=64 shlibsuff=64 libmagic=64-bit;;\n    *) libsuff= shlibsuff= libmagic=never-match;;\n    esac\n    ;;\n  esac\n  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH\n  shlibpath_overrides_runpath=no\n  sys_lib_search_path_spec=\"/usr/lib${libsuff} /lib${libsuff} /usr/local/lib${libsuff}\"\n  sys_lib_dlsearch_path_spec=\"/usr/lib${libsuff} /lib${libsuff}\"\n  hardcode_into_libs=yes\n  ;;\n\n# No shared lib support for Linux oldld, aout, or coff.\nlinux*oldld* | linux*aout* | linux*coff*)\n  dynamic_linker=no\n  ;;\n\n# This must be Linux ELF.\nlinux*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -n $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  # This implies no fast_install, which is unacceptable.\n  # Some rework will be needed to allow for fast_install\n  # before this can be enabled.\n  hardcode_into_libs=yes\n\n  # Append ld.so.conf contents to the search path\n  if test -f /etc/ld.so.conf; then\n    lt_ld_extra=`awk '/^include / { system(sprintf(\"cd /etc; cat %s\", \\[$]2)); skip = 1; } { if (!skip) print \\[$]0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;s/[:,\t]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;/^$/d' | tr '\\n' ' '`\n    sys_lib_dlsearch_path_spec=\"/lib /usr/lib $lt_ld_extra\"\n  fi\n\n  # We used to test for /lib/ld.so.1 and disable shared libraries on\n  # powerpc, because MkLinux only supported shared libraries with the\n  # GNU dynamic linker.  Since this was broken with cross compilers,\n  # most powerpc-linux boxes support dynamic linking these days and\n  # people can always --disable-shared, the test was removed, and we\n  # assume the GNU/Linux dynamic linker is in use.\n  dynamic_linker='GNU/Linux ld.so'\n  ;;\n\nknetbsd*-gnu)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=no\n  hardcode_into_libs=yes\n  dynamic_linker='GNU ld.so'\n  ;;\n\nnetbsd*)\n  version_type=sunos\n  need_lib_prefix=no\n  need_version=no\n  if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'\n    finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n    dynamic_linker='NetBSD (a.out) ld.so'\n  else\n    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'\n    soname_spec='${libname}${release}${shared_ext}$major'\n    dynamic_linker='NetBSD ld.elf_so'\n  fi\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  ;;\n\nnewsos6)\n  version_type=linux\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\nnto-qnx*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  ;;\n\nopenbsd*)\n  version_type=sunos\n  sys_lib_dlsearch_path_spec=\"/usr/lib\"\n  need_lib_prefix=no\n  # Some older versions of OpenBSD (3.3 at least) *do* need versioned libs.\n  case $host_os in\n    openbsd3.3 | openbsd3.3.*) need_version=yes ;;\n    *)                         need_version=no  ;;\n  esac\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/sbin\" ldconfig -m $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n    case $host_os in\n      openbsd2.[[89]] | openbsd2.[[89]].*)\n\tshlibpath_overrides_runpath=no\n\t;;\n      *)\n\tshlibpath_overrides_runpath=yes\n\t;;\n      esac\n  else\n    shlibpath_overrides_runpath=yes\n  fi\n  ;;\n\nos2*)\n  libname_spec='$name'\n  shrext_cmds=\".dll\"\n  need_lib_prefix=no\n  library_names_spec='$libname${shared_ext} $libname.a'\n  dynamic_linker='OS/2 ld.exe'\n  shlibpath_var=LIBPATH\n  ;;\n\nosf3* | osf4* | osf5*)\n  version_type=osf\n  need_lib_prefix=no\n  need_version=no\n  soname_spec='${libname}${release}${shared_ext}$major'\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  shlibpath_var=LD_LIBRARY_PATH\n  sys_lib_search_path_spec=\"/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib\"\n  sys_lib_dlsearch_path_spec=\"$sys_lib_search_path_spec\"\n  ;;\n\nsolaris*)\n  version_type=linux\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  hardcode_into_libs=yes\n  # ldd complains unless libraries are executable\n  postinstall_cmds='chmod +x $lib'\n  ;;\n\nsunos4*)\n  version_type=sunos\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'\n  finish_cmds='PATH=\"\\$PATH:/usr/etc\" ldconfig $libdir'\n  shlibpath_var=LD_LIBRARY_PATH\n  shlibpath_overrides_runpath=yes\n  if test \"$with_gnu_ld\" = yes; then\n    need_lib_prefix=no\n  fi\n  need_version=yes\n  ;;\n\nsysv4 | sysv4.3*)\n  version_type=linux\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  case $host_vendor in\n    sni)\n      shlibpath_overrides_runpath=no\n      need_lib_prefix=no\n      export_dynamic_flag_spec='${wl}-Blargedynsym'\n      runpath_var=LD_RUN_PATH\n      ;;\n    siemens)\n      need_lib_prefix=no\n      ;;\n    motorola)\n      need_lib_prefix=no\n      need_version=no\n      shlibpath_overrides_runpath=no\n      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'\n      ;;\n  esac\n  ;;\n\nsysv4*MP*)\n  if test -d /usr/nec ;then\n    version_type=linux\n    library_names_spec='$libname${shared_ext}.$versuffix $libname${shared_ext}.$major $libname${shared_ext}'\n    soname_spec='$libname${shared_ext}.$major'\n    shlibpath_var=LD_LIBRARY_PATH\n  fi\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  version_type=freebsd-elf\n  need_lib_prefix=no\n  need_version=no\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  hardcode_into_libs=yes\n  if test \"$with_gnu_ld\" = yes; then\n    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'\n    shlibpath_overrides_runpath=no\n  else\n    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'\n    shlibpath_overrides_runpath=yes\n    case $host_os in\n      sco3.2v5*)\n        sys_lib_search_path_spec=\"$sys_lib_search_path_spec /lib\"\n\t;;\n    esac\n  fi\n  sys_lib_dlsearch_path_spec='/usr/lib'\n  ;;\n\nuts4*)\n  version_type=linux\n  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'\n  soname_spec='${libname}${release}${shared_ext}$major'\n  shlibpath_var=LD_LIBRARY_PATH\n  ;;\n\n*)\n  dynamic_linker=no\n  ;;\nesac\nAC_MSG_RESULT([$dynamic_linker])\ntest \"$dynamic_linker\" = no && can_build_shared=no\n\nvariables_saved_for_relink=\"PATH $shlibpath_var $runpath_var\"\nif test \"$GCC\" = yes; then\n  variables_saved_for_relink=\"$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH\"\nfi\n])# AC_LIBTOOL_SYS_DYNAMIC_LINKER\n\n\n# _LT_AC_TAGCONFIG\n# ----------------\nAC_DEFUN([_LT_AC_TAGCONFIG],\n[AC_ARG_WITH([tags],\n    [AC_HELP_STRING([--with-tags@<:@=TAGS@:>@],\n        [include additional configurations @<:@automatic@:>@])],\n    [tagnames=\"$withval\"])\n\nif test -f \"$ltmain\" && test -n \"$tagnames\"; then\n  if test ! -f \"${ofile}\"; then\n    AC_MSG_WARN([output file `$ofile' does not exist])\n  fi\n\n  if test -z \"$LTCC\"; then\n    eval \"`$SHELL ${ofile} --config | grep '^LTCC='`\"\n    if test -z \"$LTCC\"; then\n      AC_MSG_WARN([output file `$ofile' does not look like a libtool script])\n    else\n      AC_MSG_WARN([using `LTCC=$LTCC', extracted from `$ofile'])\n    fi\n  fi\n  if test -z \"$LTCFLAGS\"; then\n    eval \"`$SHELL ${ofile} --config | grep '^LTCFLAGS='`\"\n  fi\n\n  # Extract list of available tagged configurations in $ofile.\n  # Note that this assumes the entire list is on one line.\n  available_tags=`grep \"^available_tags=\" \"${ofile}\" | $SED -e 's/available_tags=\\(.*$\\)/\\1/' -e 's/\\\"//g'`\n\n  lt_save_ifs=\"$IFS\"; IFS=\"${IFS}$PATH_SEPARATOR,\"\n  for tagname in $tagnames; do\n    IFS=\"$lt_save_ifs\"\n    # Check whether tagname contains only valid characters\n    case `$echo \"X$tagname\" | $Xsed -e 's:[[-_ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890,/]]::g'` in\n    \"\") ;;\n    *)  AC_MSG_ERROR([invalid tag name: $tagname])\n\t;;\n    esac\n\n    if grep \"^# ### BEGIN LIBTOOL TAG CONFIG: $tagname$\" < \"${ofile}\" > /dev/null\n    then\n      AC_MSG_ERROR([tag name \\\"$tagname\\\" already exists])\n    fi\n\n    # Update the list of available tags.\n    if test -n \"$tagname\"; then\n      echo appending configuration tag \\\"$tagname\\\" to $ofile\n\n      case $tagname in\n      CXX)\n\tif test -n \"$CXX\" && ( test \"X$CXX\" != \"Xno\" &&\n\t    ( (test \"X$CXX\" = \"Xg++\" && `g++ -v >/dev/null 2>&1` ) ||\n\t    (test \"X$CXX\" != \"Xg++\"))) ; then\n\t  AC_LIBTOOL_LANG_CXX_CONFIG\n\telse\n\t  tagname=\"\"\n\tfi\n\t;;\n\n      F77)\n\tif test -n \"$F77\" && test \"X$F77\" != \"Xno\"; then\n\t  AC_LIBTOOL_LANG_F77_CONFIG\n\telse\n\t  tagname=\"\"\n\tfi\n\t;;\n\n      GCJ)\n\tif test -n \"$GCJ\" && test \"X$GCJ\" != \"Xno\"; then\n\t  AC_LIBTOOL_LANG_GCJ_CONFIG\n\telse\n\t  tagname=\"\"\n\tfi\n\t;;\n\n      RC)\n\tAC_LIBTOOL_LANG_RC_CONFIG\n\t;;\n\n      *)\n\tAC_MSG_ERROR([Unsupported tag name: $tagname])\n\t;;\n      esac\n\n      # Append the new tag name to the list of available tags.\n      if test -n \"$tagname\" ; then\n      available_tags=\"$available_tags $tagname\"\n    fi\n    fi\n  done\n  IFS=\"$lt_save_ifs\"\n\n  # Now substitute the updated list of available tags.\n  if eval \"sed -e 's/^available_tags=.*\\$/available_tags=\\\"$available_tags\\\"/' \\\"$ofile\\\" > \\\"${ofile}T\\\"\"; then\n    mv \"${ofile}T\" \"$ofile\"\n    chmod +x \"$ofile\"\n  else\n    rm -f \"${ofile}T\"\n    AC_MSG_ERROR([unable to update list of available tagged configurations.])\n  fi\nfi\n])# _LT_AC_TAGCONFIG\n\n\n# AC_LIBTOOL_DLOPEN\n# -----------------\n# enable checks for dlopen support\nAC_DEFUN([AC_LIBTOOL_DLOPEN],\n [AC_BEFORE([$0],[AC_LIBTOOL_SETUP])\n])# AC_LIBTOOL_DLOPEN\n\n\n# AC_LIBTOOL_WIN32_DLL\n# --------------------\n# declare package support for building win32 DLLs\nAC_DEFUN([AC_LIBTOOL_WIN32_DLL],\n[AC_BEFORE([$0], [AC_LIBTOOL_SETUP])\n])# AC_LIBTOOL_WIN32_DLL\n\n\n# AC_ENABLE_SHARED([DEFAULT])\n# ---------------------------\n# implement the --enable-shared flag\n# DEFAULT is either `yes' or `no'.  If omitted, it defaults to `yes'.\nAC_DEFUN([AC_ENABLE_SHARED],\n[define([AC_ENABLE_SHARED_DEFAULT], ifelse($1, no, no, yes))dnl\nAC_ARG_ENABLE([shared],\n    [AC_HELP_STRING([--enable-shared@<:@=PKGS@:>@],\n\t[build shared libraries @<:@default=]AC_ENABLE_SHARED_DEFAULT[@:>@])],\n    [p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_shared=yes ;;\n    no) enable_shared=no ;;\n    *)\n      enable_shared=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=\"$IFS\"; IFS=\"${IFS}$PATH_SEPARATOR,\"\n      for pkg in $enableval; do\n\tIFS=\"$lt_save_ifs\"\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_shared=yes\n\tfi\n      done\n      IFS=\"$lt_save_ifs\"\n      ;;\n    esac],\n    [enable_shared=]AC_ENABLE_SHARED_DEFAULT)\n])# AC_ENABLE_SHARED\n\n\n# AC_DISABLE_SHARED\n# -----------------\n# set the default shared flag to --disable-shared\nAC_DEFUN([AC_DISABLE_SHARED],\n[AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\nAC_ENABLE_SHARED(no)\n])# AC_DISABLE_SHARED\n\n\n# AC_ENABLE_STATIC([DEFAULT])\n# ---------------------------\n# implement the --enable-static flag\n# DEFAULT is either `yes' or `no'.  If omitted, it defaults to `yes'.\nAC_DEFUN([AC_ENABLE_STATIC],\n[define([AC_ENABLE_STATIC_DEFAULT], ifelse($1, no, no, yes))dnl\nAC_ARG_ENABLE([static],\n    [AC_HELP_STRING([--enable-static@<:@=PKGS@:>@],\n\t[build static libraries @<:@default=]AC_ENABLE_STATIC_DEFAULT[@:>@])],\n    [p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_static=yes ;;\n    no) enable_static=no ;;\n    *)\n     enable_static=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=\"$IFS\"; IFS=\"${IFS}$PATH_SEPARATOR,\"\n      for pkg in $enableval; do\n\tIFS=\"$lt_save_ifs\"\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_static=yes\n\tfi\n      done\n      IFS=\"$lt_save_ifs\"\n      ;;\n    esac],\n    [enable_static=]AC_ENABLE_STATIC_DEFAULT)\n])# AC_ENABLE_STATIC\n\n\n# AC_DISABLE_STATIC\n# -----------------\n# set the default static flag to --disable-static\nAC_DEFUN([AC_DISABLE_STATIC],\n[AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\nAC_ENABLE_STATIC(no)\n])# AC_DISABLE_STATIC\n\n\n# AC_ENABLE_FAST_INSTALL([DEFAULT])\n# ---------------------------------\n# implement the --enable-fast-install flag\n# DEFAULT is either `yes' or `no'.  If omitted, it defaults to `yes'.\nAC_DEFUN([AC_ENABLE_FAST_INSTALL],\n[define([AC_ENABLE_FAST_INSTALL_DEFAULT], ifelse($1, no, no, yes))dnl\nAC_ARG_ENABLE([fast-install],\n    [AC_HELP_STRING([--enable-fast-install@<:@=PKGS@:>@],\n    [optimize for fast installation @<:@default=]AC_ENABLE_FAST_INSTALL_DEFAULT[@:>@])],\n    [p=${PACKAGE-default}\n    case $enableval in\n    yes) enable_fast_install=yes ;;\n    no) enable_fast_install=no ;;\n    *)\n      enable_fast_install=no\n      # Look at the argument we got.  We use all the common list separators.\n      lt_save_ifs=\"$IFS\"; IFS=\"${IFS}$PATH_SEPARATOR,\"\n      for pkg in $enableval; do\n\tIFS=\"$lt_save_ifs\"\n\tif test \"X$pkg\" = \"X$p\"; then\n\t  enable_fast_install=yes\n\tfi\n      done\n      IFS=\"$lt_save_ifs\"\n      ;;\n    esac],\n    [enable_fast_install=]AC_ENABLE_FAST_INSTALL_DEFAULT)\n])# AC_ENABLE_FAST_INSTALL\n\n\n# AC_DISABLE_FAST_INSTALL\n# -----------------------\n# set the default to --disable-fast-install\nAC_DEFUN([AC_DISABLE_FAST_INSTALL],\n[AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\nAC_ENABLE_FAST_INSTALL(no)\n])# AC_DISABLE_FAST_INSTALL\n\n\n# AC_LIBTOOL_PICMODE([MODE])\n# --------------------------\n# implement the --with-pic flag\n# MODE is either `yes' or `no'.  If omitted, it defaults to `both'.\nAC_DEFUN([AC_LIBTOOL_PICMODE],\n[AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\npic_mode=ifelse($#,1,$1,default)\n])# AC_LIBTOOL_PICMODE\n\n\n# AC_PROG_EGREP\n# -------------\n# This is predefined starting with Autoconf 2.54, so this conditional\n# definition can be removed once we require Autoconf 2.54 or later.\nm4_ifndef([AC_PROG_EGREP], [AC_DEFUN([AC_PROG_EGREP],\n[AC_CACHE_CHECK([for egrep], [ac_cv_prog_egrep],\n   [if echo a | (grep -E '(a|b)') >/dev/null 2>&1\n    then ac_cv_prog_egrep='grep -E'\n    else ac_cv_prog_egrep='egrep'\n    fi])\n EGREP=$ac_cv_prog_egrep\n AC_SUBST([EGREP])\n])])\n\n\n# AC_PATH_TOOL_PREFIX\n# -------------------\n# find a file program which can recognise shared library\nAC_DEFUN([AC_PATH_TOOL_PREFIX],\n[AC_REQUIRE([AC_PROG_EGREP])dnl\nAC_MSG_CHECKING([for $1])\nAC_CACHE_VAL(lt_cv_path_MAGIC_CMD,\n[case $MAGIC_CMD in\n[[\\\\/*] |  ?:[\\\\/]*])\n  lt_cv_path_MAGIC_CMD=\"$MAGIC_CMD\" # Let the user override the test with a path.\n  ;;\n*)\n  lt_save_MAGIC_CMD=\"$MAGIC_CMD\"\n  lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\ndnl $ac_dummy forces splitting on constant user-supplied paths.\ndnl POSIX.2 word splitting is done only on the output of word expansions,\ndnl not every word.  This closes a longstanding sh security hole.\n  ac_dummy=\"ifelse([$2], , $PATH, [$2])\"\n  for ac_dir in $ac_dummy; do\n    IFS=\"$lt_save_ifs\"\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f $ac_dir/$1; then\n      lt_cv_path_MAGIC_CMD=\"$ac_dir/$1\"\n      if test -n \"$file_magic_test_file\"; then\n\tcase $deplibs_check_method in\n\t\"file_magic \"*)\n\t  file_magic_regex=`expr \"$deplibs_check_method\" : \"file_magic \\(.*\\)\"`\n\t  MAGIC_CMD=\"$lt_cv_path_MAGIC_CMD\"\n\t  if eval $file_magic_cmd \\$file_magic_test_file 2> /dev/null |\n\t    $EGREP \"$file_magic_regex\" > /dev/null; then\n\t    :\n\t  else\n\t    cat <<EOF 1>&2\n\n*** Warning: the command libtool uses to detect shared libraries,\n*** $file_magic_cmd, produces output that libtool cannot recognize.\n*** The result is that libtool may fail to recognize shared libraries\n*** as such.  This will affect the creation of libtool libraries that\n*** depend on shared libraries, but programs linked with such libtool\n*** libraries will work regardless of this problem.  Nevertheless, you\n*** may want to report the problem to your system manager and/or to\n*** bug-libtool@gnu.org\n\nEOF\n\t  fi ;;\n\tesac\n      fi\n      break\n    fi\n  done\n  IFS=\"$lt_save_ifs\"\n  MAGIC_CMD=\"$lt_save_MAGIC_CMD\"\n  ;;\nesac])\nMAGIC_CMD=\"$lt_cv_path_MAGIC_CMD\"\nif test -n \"$MAGIC_CMD\"; then\n  AC_MSG_RESULT($MAGIC_CMD)\nelse\n  AC_MSG_RESULT(no)\nfi\n])# AC_PATH_TOOL_PREFIX\n\n\n# AC_PATH_MAGIC\n# -------------\n# find a file program which can recognise a shared library\nAC_DEFUN([AC_PATH_MAGIC],\n[AC_PATH_TOOL_PREFIX(${ac_tool_prefix}file, /usr/bin$PATH_SEPARATOR$PATH)\nif test -z \"$lt_cv_path_MAGIC_CMD\"; then\n  if test -n \"$ac_tool_prefix\"; then\n    AC_PATH_TOOL_PREFIX(file, /usr/bin$PATH_SEPARATOR$PATH)\n  else\n    MAGIC_CMD=:\n  fi\nfi\n])# AC_PATH_MAGIC\n\n\n# AC_PROG_LD\n# ----------\n# find the pathname to the GNU or non-GNU linker\nAC_DEFUN([AC_PROG_LD],\n[AC_ARG_WITH([gnu-ld],\n    [AC_HELP_STRING([--with-gnu-ld],\n\t[assume the C compiler uses GNU ld @<:@default=no@:>@])],\n    [test \"$withval\" = no || with_gnu_ld=yes],\n    [with_gnu_ld=no])\nAC_REQUIRE([LT_AC_PROG_SED])dnl\nAC_REQUIRE([AC_PROG_CC])dnl\nAC_REQUIRE([AC_CANONICAL_HOST])dnl\nAC_REQUIRE([AC_CANONICAL_BUILD])dnl\nac_prog=ld\nif test \"$GCC\" = yes; then\n  # Check if gcc -print-prog-name=ld gives a path.\n  AC_MSG_CHECKING([for ld used by $CC])\n  case $host in\n  *-*-mingw*)\n    # gcc leaves a trailing carriage return which upsets mingw\n    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\\015'` ;;\n  *)\n    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;\n  esac\n  case $ac_prog in\n    # Accept absolute paths.\n    [[\\\\/]]* | ?:[[\\\\/]]*)\n      re_direlt='/[[^/]][[^/]]*/\\.\\./'\n      # Canonicalize the pathname of ld\n      ac_prog=`echo $ac_prog| $SED 's%\\\\\\\\%/%g'`\n      while echo $ac_prog | grep \"$re_direlt\" > /dev/null 2>&1; do\n\tac_prog=`echo $ac_prog| $SED \"s%$re_direlt%/%\"`\n      done\n      test -z \"$LD\" && LD=\"$ac_prog\"\n      ;;\n  \"\")\n    # If it fails, then pretend we aren't using GCC.\n    ac_prog=ld\n    ;;\n  *)\n    # If it is relative, then search for the first ld in PATH.\n    with_gnu_ld=unknown\n    ;;\n  esac\nelif test \"$with_gnu_ld\" = yes; then\n  AC_MSG_CHECKING([for GNU ld])\nelse\n  AC_MSG_CHECKING([for non-GNU ld])\nfi\nAC_CACHE_VAL(lt_cv_path_LD,\n[if test -z \"$LD\"; then\n  lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\n  for ac_dir in $PATH; do\n    IFS=\"$lt_save_ifs\"\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$ac_prog\" || test -f \"$ac_dir/$ac_prog$ac_exeext\"; then\n      lt_cv_path_LD=\"$ac_dir/$ac_prog\"\n      # Check to see if the program is GNU ld.  I'd rather use --version,\n      # but apparently some variants of GNU ld only accept -v.\n      # Break only if it was the GNU/non-GNU ld that we prefer.\n      case `\"$lt_cv_path_LD\" -v 2>&1 </dev/null` in\n      *GNU* | *'with BFD'*)\n\ttest \"$with_gnu_ld\" != no && break\n\t;;\n      *)\n\ttest \"$with_gnu_ld\" != yes && break\n\t;;\n      esac\n    fi\n  done\n  IFS=\"$lt_save_ifs\"\nelse\n  lt_cv_path_LD=\"$LD\" # Let the user override the test with a path.\nfi])\nLD=\"$lt_cv_path_LD\"\nif test -n \"$LD\"; then\n  AC_MSG_RESULT($LD)\nelse\n  AC_MSG_RESULT(no)\nfi\ntest -z \"$LD\" && AC_MSG_ERROR([no acceptable ld found in \\$PATH])\nAC_PROG_LD_GNU\n])# AC_PROG_LD\n\n\n# AC_PROG_LD_GNU\n# --------------\nAC_DEFUN([AC_PROG_LD_GNU],\n[AC_REQUIRE([AC_PROG_EGREP])dnl\nAC_CACHE_CHECK([if the linker ($LD) is GNU ld], lt_cv_prog_gnu_ld,\n[# I'd rather use --version here, but apparently some GNU lds only accept -v.\ncase `$LD -v 2>&1 </dev/null` in\n*GNU* | *'with BFD'*)\n  lt_cv_prog_gnu_ld=yes\n  ;;\n*)\n  lt_cv_prog_gnu_ld=no\n  ;;\nesac])\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n])# AC_PROG_LD_GNU\n\n\n# AC_PROG_LD_RELOAD_FLAG\n# ----------------------\n# find reload flag for linker\n#   -- PORTME Some linkers may need a different reload flag.\nAC_DEFUN([AC_PROG_LD_RELOAD_FLAG],\n[AC_CACHE_CHECK([for $LD option to reload object files],\n  lt_cv_ld_reload_flag,\n  [lt_cv_ld_reload_flag='-r'])\nreload_flag=$lt_cv_ld_reload_flag\ncase $reload_flag in\n\"\" | \" \"*) ;;\n*) reload_flag=\" $reload_flag\" ;;\nesac\nreload_cmds='$LD$reload_flag -o $output$reload_objs'\ncase $host_os in\n  darwin*)\n    if test \"$GCC\" = yes; then\n      reload_cmds='$LTCC $LTCFLAGS -nostdlib ${wl}-r -o $output$reload_objs'\n    else\n      reload_cmds='$LD$reload_flag -o $output$reload_objs'\n    fi\n    ;;\nesac\n])# AC_PROG_LD_RELOAD_FLAG\n\n\n# AC_DEPLIBS_CHECK_METHOD\n# -----------------------\n# how to check for library dependencies\n#  -- PORTME fill in with the dynamic library characteristics\nAC_DEFUN([AC_DEPLIBS_CHECK_METHOD],\n[AC_CACHE_CHECK([how to recognise dependent libraries],\nlt_cv_deplibs_check_method,\n[lt_cv_file_magic_cmd='$MAGIC_CMD'\nlt_cv_file_magic_test_file=\nlt_cv_deplibs_check_method='unknown'\n# Need to set the preceding variable on all platforms that support\n# interlibrary dependencies.\n# 'none' -- dependencies not supported.\n# `unknown' -- same as none, but documents that we really don't know.\n# 'pass_all' -- all dependencies passed with no checks.\n# 'test_compile' -- check by making test program.\n# 'file_magic [[regex]]' -- check by looking for files in library path\n# which responds to the $file_magic_cmd with a given extended regex.\n# If you have `file' or equivalent on your system and you're not sure\n# whether `pass_all' will *always* work, you probably want this one.\n\ncase $host_os in\naix4* | aix5*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbeos*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nbsdi[[45]]*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib)'\n  lt_cv_file_magic_cmd='/usr/bin/file -L'\n  lt_cv_file_magic_test_file=/shlib/libc.so\n  ;;\n\ncygwin*)\n  # func_win32_libid is a shell function defined in ltmain.sh\n  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'\n  lt_cv_file_magic_cmd='func_win32_libid'\n  ;;\n\nmingw* | pw32*)\n  # Base MSYS/MinGW do not provide the 'file' command needed by\n  # func_win32_libid shell function, so use a weaker test based on 'objdump'.\n  lt_cv_deplibs_check_method='file_magic file format pei*-i386(.*architecture: i386)?'\n  lt_cv_file_magic_cmd='$OBJDUMP -f'\n  ;;\n\ndarwin* | rhapsody*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nfreebsd* | kfreebsd*-gnu | dragonfly*)\n  if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then\n    case $host_cpu in\n    i*86 )\n      # Not sure whether the presence of OpenBSD here was a mistake.\n      # Let's accept both of them until this is cleared up.\n      lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD|DragonFly)/i[[3-9]]86 (compact )?demand paged shared library'\n      lt_cv_file_magic_cmd=/usr/bin/file\n      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`\n      ;;\n    esac\n  else\n    lt_cv_deplibs_check_method=pass_all\n  fi\n  ;;\n\ngnu*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nhpux10.20* | hpux11*)\n  lt_cv_file_magic_cmd=/usr/bin/file\n  case $host_cpu in\n  ia64*)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|ELF-[[0-9]][[0-9]]) shared object file - IA64'\n    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so\n    ;;\n  hppa*64*)\n    [lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF-[0-9][0-9]) shared object file - PA-RISC [0-9].[0-9]']\n    lt_cv_file_magic_test_file=/usr/lib/pa20_64/libc.sl\n    ;;\n  *)\n    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|PA-RISC[[0-9]].[[0-9]]) shared library'\n    lt_cv_file_magic_test_file=/usr/lib/libc.sl\n    ;;\n  esac\n  ;;\n\ninterix3*)\n  # PIC code is broken on Interix 3.x, that's why |\\.a not |_pic\\.a here\n  lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|\\.a)$'\n  ;;\n\nirix5* | irix6* | nonstopux*)\n  case $LD in\n  *-32|*\"-32 \") libmagic=32-bit;;\n  *-n32|*\"-n32 \") libmagic=N32;;\n  *-64|*\"-64 \") libmagic=64-bit;;\n  *) libmagic=never-match;;\n  esac\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\n# This must be Linux ELF.\nlinux*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nnetbsd*)\n  if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so|_pic\\.a)$'\n  fi\n  ;;\n\nnewos6*)\n  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (executable|dynamic lib)'\n  lt_cv_file_magic_cmd=/usr/bin/file\n  lt_cv_file_magic_test_file=/usr/lib/libnls.so\n  ;;\n\nnto-qnx*)\n  lt_cv_deplibs_check_method=unknown\n  ;;\n\nopenbsd*)\n  if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|\\.so|_pic\\.a)$'\n  else\n    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\\.so\\.[[0-9]]+\\.[[0-9]]+|_pic\\.a)$'\n  fi\n  ;;\n\nosf3* | osf4* | osf5*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsolaris*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\n\nsysv4 | sysv4.3*)\n  case $host_vendor in\n  motorola)\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib) M[[0-9]][[0-9]]* Version [[0-9]]'\n    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`\n    ;;\n  ncr)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  sequent)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB (shared object|dynamic lib )'\n    ;;\n  sni)\n    lt_cv_file_magic_cmd='/bin/file'\n    lt_cv_deplibs_check_method=\"file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB dynamic lib\"\n    lt_cv_file_magic_test_file=/lib/libc.so\n    ;;\n  siemens)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  pc)\n    lt_cv_deplibs_check_method=pass_all\n    ;;\n  esac\n  ;;\n\nsysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)\n  lt_cv_deplibs_check_method=pass_all\n  ;;\nesac\n])\nfile_magic_cmd=$lt_cv_file_magic_cmd\ndeplibs_check_method=$lt_cv_deplibs_check_method\ntest -z \"$deplibs_check_method\" && deplibs_check_method=unknown\n])# AC_DEPLIBS_CHECK_METHOD\n\n\n# AC_PROG_NM\n# ----------\n# find the pathname to a BSD-compatible name lister\nAC_DEFUN([AC_PROG_NM],\n[AC_CACHE_CHECK([for BSD-compatible nm], lt_cv_path_NM,\n[if test -n \"$NM\"; then\n  # Let the user override the test.\n  lt_cv_path_NM=\"$NM\"\nelse\n  lt_nm_to_check=\"${ac_tool_prefix}nm\"\n  if test -n \"$ac_tool_prefix\" && test \"$build\" = \"$host\"; then \n    lt_nm_to_check=\"$lt_nm_to_check nm\"\n  fi\n  for lt_tmp_nm in $lt_nm_to_check; do\n    lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\n    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do\n      IFS=\"$lt_save_ifs\"\n      test -z \"$ac_dir\" && ac_dir=.\n      tmp_nm=\"$ac_dir/$lt_tmp_nm\"\n      if test -f \"$tmp_nm\" || test -f \"$tmp_nm$ac_exeext\" ; then\n\t# Check to see if the nm accepts a BSD-compat flag.\n\t# Adding the `sed 1q' prevents false positives on HP-UX, which says:\n\t#   nm: unknown option \"B\" ignored\n\t# Tru64's nm complains that /dev/null is an invalid object file\n\tcase `\"$tmp_nm\" -B /dev/null 2>&1 | sed '1q'` in\n\t*/dev/null* | *'Invalid file or object type'*)\n\t  lt_cv_path_NM=\"$tmp_nm -B\"\n\t  break\n\t  ;;\n\t*)\n\t  case `\"$tmp_nm\" -p /dev/null 2>&1 | sed '1q'` in\n\t  */dev/null*)\n\t    lt_cv_path_NM=\"$tmp_nm -p\"\n\t    break\n\t    ;;\n\t  *)\n\t    lt_cv_path_NM=${lt_cv_path_NM=\"$tmp_nm\"} # keep the first match, but\n\t    continue # so that we can try to find one that supports BSD flags\n\t    ;;\n\t  esac\n\t  ;;\n\tesac\n      fi\n    done\n    IFS=\"$lt_save_ifs\"\n  done\n  test -z \"$lt_cv_path_NM\" && lt_cv_path_NM=nm\nfi])\nNM=\"$lt_cv_path_NM\"\n])# AC_PROG_NM\n\n\n# AC_CHECK_LIBM\n# -------------\n# check for math library\nAC_DEFUN([AC_CHECK_LIBM],\n[AC_REQUIRE([AC_CANONICAL_HOST])dnl\nLIBM=\ncase $host in\n*-*-beos* | *-*-cygwin* | *-*-pw32* | *-*-darwin*)\n  # These system don't have libm, or don't need it\n  ;;\n*-ncr-sysv4.3*)\n  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM=\"-lmw\")\n  AC_CHECK_LIB(m, cos, LIBM=\"$LIBM -lm\")\n  ;;\n*)\n  AC_CHECK_LIB(m, cos, LIBM=\"-lm\")\n  ;;\nesac\n])# AC_CHECK_LIBM\n\n\n# AC_LIBLTDL_CONVENIENCE([DIRECTORY])\n# -----------------------------------\n# sets LIBLTDL to the link flags for the libltdl convenience library and\n# LTDLINCL to the include flags for the libltdl header and adds\n# --enable-ltdl-convenience to the configure arguments.  Note that\n# AC_CONFIG_SUBDIRS is not called here.  If DIRECTORY is not provided,\n# it is assumed to be `libltdl'.  LIBLTDL will be prefixed with\n# '${top_builddir}/' and LTDLINCL will be prefixed with '${top_srcdir}/'\n# (note the single quotes!).  If your package is not flat and you're not\n# using automake, define top_builddir and top_srcdir appropriately in\n# the Makefiles.\nAC_DEFUN([AC_LIBLTDL_CONVENIENCE],\n[AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\n  case $enable_ltdl_convenience in\n  no) AC_MSG_ERROR([this package needs a convenience libltdl]) ;;\n  \"\") enable_ltdl_convenience=yes\n      ac_configure_args=\"$ac_configure_args --enable-ltdl-convenience\" ;;\n  esac\n  LIBLTDL='${top_builddir}/'ifelse($#,1,[$1],['libltdl'])/libltdlc.la\n  LTDLINCL='-I${top_srcdir}/'ifelse($#,1,[$1],['libltdl'])\n  # For backwards non-gettext consistent compatibility...\n  INCLTDL=\"$LTDLINCL\"\n])# AC_LIBLTDL_CONVENIENCE\n\n\n# AC_LIBLTDL_INSTALLABLE([DIRECTORY])\n# -----------------------------------\n# sets LIBLTDL to the link flags for the libltdl installable library and\n# LTDLINCL to the include flags for the libltdl header and adds\n# --enable-ltdl-install to the configure arguments.  Note that\n# AC_CONFIG_SUBDIRS is not called here.  If DIRECTORY is not provided,\n# and an installed libltdl is not found, it is assumed to be `libltdl'.\n# LIBLTDL will be prefixed with '${top_builddir}/'# and LTDLINCL with\n# '${top_srcdir}/' (note the single quotes!).  If your package is not\n# flat and you're not using automake, define top_builddir and top_srcdir\n# appropriately in the Makefiles.\n# In the future, this macro may have to be called after AC_PROG_LIBTOOL.\nAC_DEFUN([AC_LIBLTDL_INSTALLABLE],\n[AC_BEFORE([$0],[AC_LIBTOOL_SETUP])dnl\n  AC_CHECK_LIB(ltdl, lt_dlinit,\n  [test x\"$enable_ltdl_install\" != xyes && enable_ltdl_install=no],\n  [if test x\"$enable_ltdl_install\" = xno; then\n     AC_MSG_WARN([libltdl not installed, but installation disabled])\n   else\n     enable_ltdl_install=yes\n   fi\n  ])\n  if test x\"$enable_ltdl_install\" = x\"yes\"; then\n    ac_configure_args=\"$ac_configure_args --enable-ltdl-install\"\n    LIBLTDL='${top_builddir}/'ifelse($#,1,[$1],['libltdl'])/libltdl.la\n    LTDLINCL='-I${top_srcdir}/'ifelse($#,1,[$1],['libltdl'])\n  else\n    ac_configure_args=\"$ac_configure_args --enable-ltdl-install=no\"\n    LIBLTDL=\"-lltdl\"\n    LTDLINCL=\n  fi\n  # For backwards non-gettext consistent compatibility...\n  INCLTDL=\"$LTDLINCL\"\n])# AC_LIBLTDL_INSTALLABLE\n\n\n# AC_LIBTOOL_CXX\n# --------------\n# enable support for C++ libraries\nAC_DEFUN([AC_LIBTOOL_CXX],\n[AC_REQUIRE([_LT_AC_LANG_CXX])\n])# AC_LIBTOOL_CXX\n\n\n# _LT_AC_LANG_CXX\n# ---------------\nAC_DEFUN([_LT_AC_LANG_CXX],\n[AC_REQUIRE([AC_PROG_CXX])\nAC_REQUIRE([_LT_AC_PROG_CXXCPP])\n_LT_AC_SHELL_INIT([tagnames=${tagnames+${tagnames},}CXX])\n])# _LT_AC_LANG_CXX\n\n# _LT_AC_PROG_CXXCPP\n# ------------------\nAC_DEFUN([_LT_AC_PROG_CXXCPP],\n[\nAC_REQUIRE([AC_PROG_CXX])\nif test -n \"$CXX\" && ( test \"X$CXX\" != \"Xno\" &&\n    ( (test \"X$CXX\" = \"Xg++\" && `g++ -v >/dev/null 2>&1` ) ||\n    (test \"X$CXX\" != \"Xg++\"))) ; then\n  AC_PROG_CXXCPP\nfi\n])# _LT_AC_PROG_CXXCPP\n\n# AC_LIBTOOL_F77\n# --------------\n# enable support for Fortran 77 libraries\nAC_DEFUN([AC_LIBTOOL_F77],\n[AC_REQUIRE([_LT_AC_LANG_F77])\n])# AC_LIBTOOL_F77\n\n\n# _LT_AC_LANG_F77\n# ---------------\nAC_DEFUN([_LT_AC_LANG_F77],\n[AC_REQUIRE([AC_PROG_F77])\n_LT_AC_SHELL_INIT([tagnames=${tagnames+${tagnames},}F77])\n])# _LT_AC_LANG_F77\n\n\n# AC_LIBTOOL_GCJ\n# --------------\n# enable support for GCJ libraries\nAC_DEFUN([AC_LIBTOOL_GCJ],\n[AC_REQUIRE([_LT_AC_LANG_GCJ])\n])# AC_LIBTOOL_GCJ\n\n\n# _LT_AC_LANG_GCJ\n# ---------------\nAC_DEFUN([_LT_AC_LANG_GCJ],\n[AC_PROVIDE_IFELSE([AC_PROG_GCJ],[],\n  [AC_PROVIDE_IFELSE([A][M_PROG_GCJ],[],\n    [AC_PROVIDE_IFELSE([LT_AC_PROG_GCJ],[],\n      [ifdef([AC_PROG_GCJ],[AC_REQUIRE([AC_PROG_GCJ])],\n\t [ifdef([A][M_PROG_GCJ],[AC_REQUIRE([A][M_PROG_GCJ])],\n\t   [AC_REQUIRE([A][C_PROG_GCJ_OR_A][M_PROG_GCJ])])])])])])\n_LT_AC_SHELL_INIT([tagnames=${tagnames+${tagnames},}GCJ])\n])# _LT_AC_LANG_GCJ\n\n\n# AC_LIBTOOL_RC\n# -------------\n# enable support for Windows resource files\nAC_DEFUN([AC_LIBTOOL_RC],\n[AC_REQUIRE([LT_AC_PROG_RC])\n_LT_AC_SHELL_INIT([tagnames=${tagnames+${tagnames},}RC])\n])# AC_LIBTOOL_RC\n\n\n# AC_LIBTOOL_LANG_C_CONFIG\n# ------------------------\n# Ensure that the configuration vars for the C compiler are\n# suitably defined.  Those variables are subsequently used by\n# AC_LIBTOOL_CONFIG to write the compiler configuration to `libtool'.\nAC_DEFUN([AC_LIBTOOL_LANG_C_CONFIG], [_LT_AC_LANG_C_CONFIG])\nAC_DEFUN([_LT_AC_LANG_C_CONFIG],\n[lt_save_CC=\"$CC\"\nAC_LANG_PUSH(C)\n\n# Source file extension for C test sources.\nac_ext=c\n\n# Object file extension for compiled C test sources.\nobjext=o\n_LT_AC_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"int some_variable = 0;\\n\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='int main(){return(0);}\\n'\n\n_LT_AC_SYS_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\nAC_LIBTOOL_PROG_COMPILER_NO_RTTI($1)\nAC_LIBTOOL_PROG_COMPILER_PIC($1)\nAC_LIBTOOL_PROG_CC_C_O($1)\nAC_LIBTOOL_SYS_HARD_LINK_LOCKS($1)\nAC_LIBTOOL_PROG_LD_SHLIBS($1)\nAC_LIBTOOL_SYS_DYNAMIC_LINKER($1)\nAC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH($1)\nAC_LIBTOOL_SYS_LIB_STRIP\nAC_LIBTOOL_DLOPEN_SELF\n\n# Report which library types will actually be built\nAC_MSG_CHECKING([if libtool supports shared libraries])\nAC_MSG_RESULT([$can_build_shared])\n\nAC_MSG_CHECKING([whether to build shared libraries])\ntest \"$can_build_shared\" = \"no\" && enable_shared=no\n\n# On AIX, shared libraries and static libraries use the same namespace, and\n# are all built from PIC.\ncase $host_os in\naix3*)\n  test \"$enable_shared\" = yes && enable_static=no\n  if test -n \"$RANLIB\"; then\n    archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n    postinstall_cmds='$RANLIB $lib'\n  fi\n  ;;\n\naix4* | aix5*)\n  if test \"$host_cpu\" != ia64 && test \"$aix_use_runtimelinking\" = no ; then\n    test \"$enable_shared\" = yes && enable_static=no\n  fi\n    ;;\nesac\nAC_MSG_RESULT([$enable_shared])\n\nAC_MSG_CHECKING([whether to build static libraries])\n# Make sure either enable_shared or enable_static is yes.\ntest \"$enable_shared\" = yes || enable_static=yes\nAC_MSG_RESULT([$enable_static])\n\nAC_LIBTOOL_CONFIG($1)\n\nAC_LANG_POP\nCC=\"$lt_save_CC\"\n])# AC_LIBTOOL_LANG_C_CONFIG\n\n\n# AC_LIBTOOL_LANG_CXX_CONFIG\n# --------------------------\n# Ensure that the configuration vars for the C compiler are\n# suitably defined.  Those variables are subsequently used by\n# AC_LIBTOOL_CONFIG to write the compiler configuration to `libtool'.\nAC_DEFUN([AC_LIBTOOL_LANG_CXX_CONFIG], [_LT_AC_LANG_CXX_CONFIG(CXX)])\nAC_DEFUN([_LT_AC_LANG_CXX_CONFIG],\n[AC_LANG_PUSH(C++)\nAC_REQUIRE([AC_PROG_CXX])\nAC_REQUIRE([_LT_AC_PROG_CXXCPP])\n\n_LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_AC_TAGVAR(allow_undefined_flag, $1)=\n_LT_AC_TAGVAR(always_export_symbols, $1)=no\n_LT_AC_TAGVAR(archive_expsym_cmds, $1)=\n_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_AC_TAGVAR(hardcode_direct, $1)=no\n_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)=\n_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_AC_TAGVAR(hardcode_minus_L, $1)=no\n_LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n_LT_AC_TAGVAR(hardcode_automatic, $1)=no\n_LT_AC_TAGVAR(module_cmds, $1)=\n_LT_AC_TAGVAR(module_expsym_cmds, $1)=\n_LT_AC_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_AC_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_AC_TAGVAR(no_undefined_flag, $1)=\n_LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Dependencies to place before and after the object being linked:\n_LT_AC_TAGVAR(predep_objects, $1)=\n_LT_AC_TAGVAR(postdep_objects, $1)=\n_LT_AC_TAGVAR(predeps, $1)=\n_LT_AC_TAGVAR(postdeps, $1)=\n_LT_AC_TAGVAR(compiler_lib_search_path, $1)=\n\n# Source file extension for C++ test sources.\nac_ext=cpp\n\n# Object file extension for compiled C++ test sources.\nobjext=o\n_LT_AC_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"int some_variable = 0;\\n\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='int main(int, char *[[]]) { return(0); }\\n'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_AC_SYS_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=$CC\nlt_save_LD=$LD\nlt_save_GCC=$GCC\nGCC=$GXX\nlt_save_with_gnu_ld=$with_gnu_ld\nlt_save_path_LD=$lt_cv_path_LD\nif test -n \"${lt_cv_prog_gnu_ldcxx+set}\"; then\n  lt_cv_prog_gnu_ld=$lt_cv_prog_gnu_ldcxx\nelse\n  $as_unset lt_cv_prog_gnu_ld\nfi\nif test -n \"${lt_cv_path_LDCXX+set}\"; then\n  lt_cv_path_LD=$lt_cv_path_LDCXX\nelse\n  $as_unset lt_cv_path_LD\nfi\ntest -z \"${LDCXX+set}\" || LD=$LDCXX\nCC=${CXX-\"c++\"}\ncompiler=$CC\n_LT_AC_TAGVAR(compiler, $1)=$CC\n_LT_CC_BASENAME([$compiler])\n\n# We don't want -fno-exception wen compiling C++ code, so set the\n# no_builtin_flag separately\nif test \"$GXX\" = yes; then\n  _LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin'\nelse\n  _LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\nfi\n\nif test \"$GXX\" = yes; then\n  # Set up default GNU C++ configuration\n\n  AC_PROG_LD\n\n  # Check if GNU C++ uses GNU ld as the underlying linker, since the\n  # archiving commands below assume that GNU ld is being used.\n  if test \"$with_gnu_ld\" = yes; then\n    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n    _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}--rpath ${wl}$libdir'\n    _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\n    # If archive_cmds runs LD, not CC, wlarc should be empty\n    # XXX I think wlarc can be eliminated in ltcf-cxx, but I need to\n    #     investigate it a little bit more. (MM)\n    wlarc='${wl}'\n\n    # ancient GNU ld didn't support --whole-archive et. al.\n    if eval \"`$CC -print-prog-name=ld` --help 2>&1\" | \\\n\tgrep 'no-whole-archive' > /dev/null; then\n      _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n    else\n      _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n  else\n    with_gnu_ld=no\n    wlarc=\n\n    # A generic and very simple default shared library creation\n    # command for GNU C++ for the case where it uses the native\n    # linker, instead of GNU ld.  If possible, this setting should\n    # overridden to take advantage of the native linker features on\n    # the platform it is being used on.\n    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n  fi\n\n  # Commands to make compiler produce verbose output that lists\n  # what \"hidden\" libraries, object files and flags are used when\n  # linking a shared library.\n  output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep \"\\-L\"'\n\nelse\n  GXX=no\n  with_gnu_ld=no\n  wlarc=\nfi\n\n# PORTME: fill in a description of your system's C++ link characteristics\nAC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\n_LT_AC_TAGVAR(ld_shlibs, $1)=yes\ncase $host_os in\n  aix3*)\n    # FIXME: insert proper C++ library support\n    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    ;;\n  aix4* | aix5*)\n    if test \"$host_cpu\" = ia64; then\n      # On IA64, the linker does run time linking by default, so we don't\n      # have to do anything special.\n      aix_use_runtimelinking=no\n      exp_sym_flag='-Bexport'\n      no_entry_flag=\"\"\n    else\n      aix_use_runtimelinking=no\n\n      # Test if we are trying to use run time linking or normal\n      # AIX style linking. If -brtl is somewhere in LDFLAGS, we\n      # need to do runtime linking.\n      case $host_os in aix4.[[23]]|aix4.[[23]].*|aix5*)\n\tfor ld_flag in $LDFLAGS; do\n\t  case $ld_flag in\n\t  *-brtl*)\n\t    aix_use_runtimelinking=yes\n\t    break\n\t    ;;\n\t  esac\n\tdone\n\t;;\n      esac\n\n      exp_sym_flag='-bexport'\n      no_entry_flag='-bnoentry'\n    fi\n\n    # When large executables or shared objects are built, AIX ld can\n    # have problems creating the table of contents.  If linking a library\n    # or program results in \"error TOC overflow\" add -mminimal-toc to\n    # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n    # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n    _LT_AC_TAGVAR(archive_cmds, $1)=''\n    _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n    _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=':'\n    _LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n\n    if test \"$GXX\" = yes; then\n      case $host_os in aix4.[[012]]|aix4.[[012]].*)\n      # We only want to do this on AIX 4.2 and lower, the check\n      # below for broken collect2 doesn't work under 4.3+\n\tcollect2name=`${CC} -print-prog-name=collect2`\n\tif test -f \"$collect2name\" && \\\n\t   strings \"$collect2name\" | grep resolve_lib_name >/dev/null\n\tthen\n\t  # We have reworked collect2\n\t  _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n\telse\n\t  # We have old collect2\n\t  _LT_AC_TAGVAR(hardcode_direct, $1)=unsupported\n\t  # It fails to find uninstalled libraries when the uninstalled\n\t  # path is not listed in the libpath.  Setting hardcode_minus_L\n\t  # to unsupported forces relinking\n\t  _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n\t  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n\t  _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=\n\tfi\n\t;;\n      esac\n      shared_flag='-shared'\n      if test \"$aix_use_runtimelinking\" = yes; then\n\tshared_flag=\"$shared_flag \"'${wl}-G'\n      fi\n    else\n      # not using gcc\n      if test \"$host_cpu\" = ia64; then\n\t# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n\t# chokes on -Wl,-G. The following line is correct:\n\tshared_flag='-G'\n      else\n\tif test \"$aix_use_runtimelinking\" = yes; then\n\t  shared_flag='${wl}-G'\n\telse\n\t  shared_flag='${wl}-bM:SRE'\n\tfi\n      fi\n    fi\n\n    # It seems that -bexpall does not export symbols beginning with\n    # underscore (_), so it is better to generate a list of symbols to export.\n    _LT_AC_TAGVAR(always_export_symbols, $1)=yes\n    if test \"$aix_use_runtimelinking\" = yes; then\n      # Warning - without using the other runtime loading flags (-brtl),\n      # -berok will link without error, but may produce a broken library.\n      _LT_AC_TAGVAR(allow_undefined_flag, $1)='-berok'\n      # Determine the default libpath from the value encoded in an empty executable.\n      _LT_AC_SYS_LIBPATH_AIX\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\n      _LT_AC_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags `if test \"x${allow_undefined_flag}\" != \"x\"; then echo \"${wl}${allow_undefined_flag}\"; else :; fi` '\"\\${wl}$exp_sym_flag:\\$export_symbols $shared_flag\"\n     else\n      if test \"$host_cpu\" = ia64; then\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $libdir:/usr/lib:/lib'\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags ${wl}${allow_undefined_flag} '\"\\${wl}$exp_sym_flag:\\$export_symbols\"\n      else\n\t# Determine the default libpath from the value encoded in an empty executable.\n\t_LT_AC_SYS_LIBPATH_AIX\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\t# Warning - without using the other run time loading flags,\n\t# -berok will link without error, but may produce a broken library.\n\t_LT_AC_TAGVAR(no_undefined_flag, $1)=' ${wl}-bernotok'\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-berok'\n\t# Exported symbols can be pulled into shared objects from archives\n\t_LT_AC_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t_LT_AC_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t# This is similar to how AIX traditionally builds its shared libraries.\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'\n      fi\n    fi\n    ;;\n\n  beos*)\n    if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then\n      _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported\n      # Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n      # support --undefined.  This deserves some investigation.  FIXME\n      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n    else\n      _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    fi\n    ;;\n\n  chorus*)\n    case $cc_basename in\n      *)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n    esac\n    ;;\n\n  cygwin* | mingw* | pw32*)\n    # _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n    # as there is no search path for DLLs.\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n    _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported\n    _LT_AC_TAGVAR(always_export_symbols, $1)=no\n    _LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n\n    if $LD --help 2>&1 | grep 'auto-import' > /dev/null; then\n      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n      # If the export-symbols file already is a .def file (1st line\n      # is EXPORTS), use it as is; otherwise, prepend...\n      _LT_AC_TAGVAR(archive_expsym_cmds, $1)='if test \"x`$SED 1q $export_symbols`\" = xEXPORTS; then\n\tcp $export_symbols $output_objdir/$soname.def;\n      else\n\techo EXPORTS > $output_objdir/$soname.def;\n\tcat $export_symbols >> $output_objdir/$soname.def;\n      fi~\n      $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n    else\n      _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    fi\n  ;;\n      darwin* | rhapsody*)\n        case $host_os in\n        rhapsody* | darwin1.[[012]])\n         _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-undefined ${wl}suppress'\n         ;;\n       *) # Darwin 1.3 on\n         if test -z ${MACOSX_DEPLOYMENT_TARGET} ; then\n           _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-flat_namespace ${wl}-undefined ${wl}suppress'\n         else\n           case ${MACOSX_DEPLOYMENT_TARGET} in\n             10.[[012]])\n               _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-flat_namespace ${wl}-undefined ${wl}suppress'\n               ;;\n             10.*)\n               _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-undefined ${wl}dynamic_lookup'\n               ;;\n           esac\n         fi\n         ;;\n        esac\n      _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_AC_TAGVAR(hardcode_direct, $1)=no\n      _LT_AC_TAGVAR(hardcode_automatic, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n      _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=''\n      _LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n\n    if test \"$GXX\" = yes ; then\n      lt_int_apple_cc_single_mod=no\n      output_verbose_link_cmd='echo'\n      if $CC -dumpspecs 2>&1 | $EGREP 'single_module' >/dev/null ; then\n       lt_int_apple_cc_single_mod=yes\n      fi\n      if test \"X$lt_int_apple_cc_single_mod\" = Xyes ; then\n       _LT_AC_TAGVAR(archive_cmds, $1)='$CC -dynamiclib -single_module $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring'\n      else\n          _LT_AC_TAGVAR(archive_cmds, $1)='$CC -r -keep_private_externs -nostdlib -o ${lib}-master.o $libobjs~$CC -dynamiclib $allow_undefined_flag -o $lib ${lib}-master.o $deplibs $compiler_flags -install_name $rpath/$soname $verstring'\n        fi\n        _LT_AC_TAGVAR(module_cmds, $1)='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'\n        # Don't fix this by using the ld -exported_symbols_list flag, it doesn't exist in older darwin lds\n          if test \"X$lt_int_apple_cc_single_mod\" = Xyes ; then\n            _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -dynamiclib -single_module $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n          else\n            _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -r -keep_private_externs -nostdlib -o ${lib}-master.o $libobjs~$CC -dynamiclib $allow_undefined_flag -o $lib ${lib}-master.o $deplibs $compiler_flags -install_name $rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n          fi\n            _LT_AC_TAGVAR(module_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag  -o $lib -bundle $libobjs $deplibs$compiler_flags~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n      else\n      case $cc_basename in\n        xlc*)\n         output_verbose_link_cmd='echo'\n          _LT_AC_TAGVAR(archive_cmds, $1)='$CC -qmkshrobj ${wl}-single_module $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-install_name ${wl}`echo $rpath/$soname` $verstring'\n          _LT_AC_TAGVAR(module_cmds, $1)='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'\n          # Don't fix this by using the ld -exported_symbols_list flag, it doesn't exist in older darwin lds\n          _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -qmkshrobj ${wl}-single_module $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-install_name ${wl}$rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n          _LT_AC_TAGVAR(module_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag  -o $lib -bundle $libobjs $deplibs$compiler_flags~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n          ;;\n       *)\n         _LT_AC_TAGVAR(ld_shlibs, $1)=no\n          ;;\n      esac\n      fi\n        ;;\n\n  dgux*)\n    case $cc_basename in\n      ec++*)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      ghcx*)\n\t# Green Hills C++ Compiler\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      *)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n    esac\n    ;;\n  freebsd[[12]]*)\n    # C++ shared libraries reported to be fairly broken before switch to ELF\n    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    ;;\n  freebsd-elf*)\n    _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n    ;;\n  freebsd* | kfreebsd*-gnu | dragonfly*)\n    # FreeBSD 3 and later use GNU C++ and GNU ld with standard ELF\n    # conventions\n    _LT_AC_TAGVAR(ld_shlibs, $1)=yes\n    ;;\n  gnu*)\n    ;;\n  hpux9*)\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n    _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n    _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n    _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n    _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t# but as the default\n\t\t\t\t# location of the library.\n\n    case $cc_basename in\n    CC*)\n      # FIXME: insert proper C++ library support\n      _LT_AC_TAGVAR(ld_shlibs, $1)=no\n      ;;\n    aCC*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$rm $output_objdir/$soname~$CC -b ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n      # Commands to make compiler produce verbose output that lists\n      # what \"hidden\" libraries, object files and flags are used when\n      # linking a shared library.\n      #\n      # There doesn't appear to be a way to prevent this compiler from\n      # explicitly linking system object files so we need to strip them\n      # from the output so that they don't get included in the library\n      # dependencies.\n      output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | grep \"[[-]]L\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; echo $list'\n      ;;\n    *)\n      if test \"$GXX\" = yes; then\n        _LT_AC_TAGVAR(archive_cmds, $1)='$rm $output_objdir/$soname~$CC -shared -nostdlib -fPIC ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n      else\n        # FIXME: insert proper C++ library support\n        _LT_AC_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n    esac\n    ;;\n  hpux10*|hpux11*)\n    if test $with_gnu_ld = no; then\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n      case $host_cpu in\n      hppa*64*|ia64*)\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)='+b $libdir'\n        ;;\n      *)\n\t_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n        ;;\n      esac\n    fi\n    case $host_cpu in\n    hppa*64*|ia64*)\n      _LT_AC_TAGVAR(hardcode_direct, $1)=no\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n    *)\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,\n\t\t\t\t\t      # but as the default\n\t\t\t\t\t      # location of the library.\n      ;;\n    esac\n\n    case $cc_basename in\n      CC*)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      aCC*)\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t  ;;\n\tesac\n\t# Commands to make compiler produce verbose output that lists\n\t# what \"hidden\" libraries, object files and flags are used when\n\t# linking a shared library.\n\t#\n\t# There doesn't appear to be a way to prevent this compiler from\n\t# explicitly linking system object files so we need to strip them\n\t# from the output so that they don't get included in the library\n\t# dependencies.\n\toutput_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | grep \"\\-L\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; echo $list'\n\t;;\n      *)\n\tif test \"$GXX\" = yes; then\n\t  if test $with_gnu_ld = no; then\n\t    case $host_cpu in\n\t    hppa*64*)\n\t      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t      ;;\n\t    ia64*)\n\t      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t      ;;\n\t    *)\n\t      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t      ;;\n\t    esac\n\t  fi\n\telse\n\t  # FIXME: insert proper C++ library support\n\t  _LT_AC_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n    esac\n    ;;\n  interix3*)\n    _LT_AC_TAGVAR(hardcode_direct, $1)=no\n    _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n    _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n    # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n    # Instead, shared libraries are loaded at an image base (0x10000000 by\n    # default) and relocated if they conflict, which is a slow very memory\n    # consuming and fragmenting process.  To avoid this, we pick a random,\n    # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n    # time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n    _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed \"s,^,_,\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n    ;;\n  irix5* | irix6*)\n    case $cc_basename in\n      CC*)\n\t# SGI C++\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -all -multigot $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -soname $soname `test -n \"$verstring\" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'\n\n\t# Archives containing C++ object files must be created using\n\t# \"CC -ar\", where \"CC\" is the IRIX C++ compiler.  This is\n\t# necessary to make sure instantiated templates are included\n\t# in the archive.\n\t_LT_AC_TAGVAR(old_archive_cmds, $1)='$CC -ar -WR,-u -o $oldlib $oldobjs'\n\t;;\n      *)\n\tif test \"$GXX\" = yes; then\n\t  if test \"$with_gnu_ld\" = no; then\n\t    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t  else\n\t    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && echo ${wl}-set_version ${wl}$verstring` -o $lib'\n\t  fi\n\tfi\n\t_LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n\t;;\n    esac\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n    _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n    ;;\n  linux*)\n    case $cc_basename in\n      KCC*)\n\t# Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t# KCC will only create a shared library if the output file\n\t# ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t# to its proper name (with version) after linking.\n\t_LT_AC_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib ${wl}-retain-symbols-file,$export_symbols; mv \\$templib $lib'\n\t# Commands to make compiler produce verbose output that lists\n\t# what \"hidden\" libraries, object files and flags are used when\n\t# linking a shared library.\n\t#\n\t# There doesn't appear to be a way to prevent this compiler from\n\t# explicitly linking system object files so we need to strip them\n\t# from the output so that they don't get included in the library\n\t# dependencies.\n\toutput_verbose_link_cmd='templist=`$CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1 | grep \"ld\"`; rm -f libconftest$shared_ext; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; echo $list'\n\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}--rpath,$libdir'\n\t_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\n\t# Archives containing C++ object files must be created using\n\t# \"CC -Bstatic\", where \"CC\" is the KAI C++ compiler.\n\t_LT_AC_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs'\n\t;;\n      icpc*)\n\t# Intel C++\n\twith_gnu_ld=yes\n\t# version 8.0 and above of icpc choke on multiply defined symbols\n\t# if we add $predep_objects and $postdep_objects, however 7.1 and\n\t# earlier do not add the objects themselves.\n\tcase `$CC -V 2>&1` in\n\t*\"Version 7.\"*)\n  \t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n  \t  _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\t  ;;\n\t*)  # Version 8.0 or newer\n\t  tmp_idyn=\n\t  case $host_cpu in\n\t    ia64*) tmp_idyn=' -i_dynamic';;\n\t  esac\n  \t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t  _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared'\"$tmp_idyn\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n\t  ;;\n\tesac\n\t_LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\t_LT_AC_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive$convenience ${wl}--no-whole-archive'\n\t;;\n      pgCC*)\n        # Portland Group C++ compiler\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'\n  \t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'\n\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}--rpath ${wl}$libdir'\n\t_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n\t_LT_AC_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; $echo \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n        ;;\n      cxx*)\n\t# Compaq C++\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname  -o $lib ${wl}-retain-symbols-file $wl$export_symbols'\n\n\trunpath_var=LD_RUN_PATH\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t# Commands to make compiler produce verbose output that lists\n\t# what \"hidden\" libraries, object files and flags are used when\n\t# linking a shared library.\n\t#\n\t# There doesn't appear to be a way to prevent this compiler from\n\t# explicitly linking system object files so we need to strip them\n\t# from the output so that they don't get included in the library\n\t# dependencies.\n\toutput_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep \"ld\"`; templist=`echo $templist | $SED \"s/\\(^.*ld.*\\)\\( .*ld .*$\\)/\\1/\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; echo $list'\n\t;;\n    esac\n    ;;\n  lynxos*)\n    # FIXME: insert proper C++ library support\n    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    ;;\n  m88k*)\n    # FIXME: insert proper C++ library support\n    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    ;;\n  mvs*)\n    case $cc_basename in\n      cxx*)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      *)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n    esac\n    ;;\n  netbsd*)\n    if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -Bshareable  -o $lib $predep_objects $libobjs $deplibs $postdep_objects $linker_flags'\n      wlarc=\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n    fi\n    # Workaround some broken pre-1.5 toolchains\n    output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep conftest.$objext | $SED -e \"s:-lgcc -lc -lgcc::\"'\n    ;;\n  openbsd2*)\n    # C++ shared libraries are fairly broken\n    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    ;;\n  openbsd*)\n    _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n    _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n    if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n      _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-retain-symbols-file,$export_symbols -o $lib'\n      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n      _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n    fi\n    output_verbose_link_cmd='echo'\n    ;;\n  osf3*)\n    case $cc_basename in\n      KCC*)\n\t# Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t# KCC will only create a shared library if the output file\n\t# ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t# to its proper name (with version) after linking.\n\t_LT_AC_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t# Archives containing C++ object files must be created using\n\t# \"CC -Bstatic\", where \"CC\" is the KAI C++ compiler.\n\t_LT_AC_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs'\n\n\t;;\n      RCC*)\n\t# Rational C++ 2.4.1\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      cxx*)\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $soname `test -n \"$verstring\" && echo ${wl}-set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'\n\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t# Commands to make compiler produce verbose output that lists\n\t# what \"hidden\" libraries, object files and flags are used when\n\t# linking a shared library.\n\t#\n\t# There doesn't appear to be a way to prevent this compiler from\n\t# explicitly linking system object files so we need to strip them\n\t# from the output so that they don't get included in the library\n\t# dependencies.\n\toutput_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep \"ld\" | grep -v \"ld:\"`; templist=`echo $templist | $SED \"s/\\(^.*ld.*\\)\\( .*ld.*$\\)/\\1/\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; echo $list'\n\t;;\n      *)\n\tif test \"$GXX\" = yes && test \"$with_gnu_ld\" = no; then\n\t  _LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib ${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\n\t  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t  _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t  # Commands to make compiler produce verbose output that lists\n\t  # what \"hidden\" libraries, object files and flags are used when\n\t  # linking a shared library.\n\t  output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep \"\\-L\"'\n\n\telse\n\t  # FIXME: insert proper C++ library support\n\t  _LT_AC_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n    esac\n    ;;\n  osf4* | osf5*)\n    case $cc_basename in\n      KCC*)\n\t# Kuck and Associates, Inc. (KAI) C++ Compiler\n\n\t# KCC will only create a shared library if the output file\n\t# ends with \".so\" (or \".sl\" for HP-UX), so rename the library\n\t# to its proper name (with version) after linking.\n\t_LT_AC_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\\''s/\\([[^()0-9A-Za-z{}]]\\)/\\\\\\\\\\1/g'\\''`; templib=`echo $lib | $SED -e \"s/\\${tempext}\\..*/.so/\"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \\$templib; mv \\$templib $lib'\n\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t# Archives containing C++ object files must be created using\n\t# the KAI C++ compiler.\n\t_LT_AC_TAGVAR(old_archive_cmds, $1)='$CC -o $oldlib $oldobjs'\n\t;;\n      RCC*)\n\t# Rational C++ 2.4.1\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      cxx*)\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname `test -n \"$verstring\" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done~\n\t  echo \"-hidden\">> $lib.exp~\n\t  $CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname -Wl,-input -Wl,$lib.exp  `test -n \"$verstring\" && echo -set_version\t$verstring` -update_registry ${output_objdir}/so_locations -o $lib~\n\t  $rm $lib.exp'\n\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n\t_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t# Commands to make compiler produce verbose output that lists\n\t# what \"hidden\" libraries, object files and flags are used when\n\t# linking a shared library.\n\t#\n\t# There doesn't appear to be a way to prevent this compiler from\n\t# explicitly linking system object files so we need to strip them\n\t# from the output so that they don't get included in the library\n\t# dependencies.\n\toutput_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep \"ld\" | grep -v \"ld:\"`; templist=`echo $templist | $SED \"s/\\(^.*ld.*\\)\\( .*ld.*$\\)/\\1/\"`; list=\"\"; for z in $templist; do case $z in conftest.$objext) list=\"$list $z\";; *.$objext);; *) list=\"$list $z\";;esac; done; echo $list'\n\t;;\n      *)\n\tif test \"$GXX\" = yes && test \"$with_gnu_ld\" = no; then\n\t  _LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib ${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n \"$verstring\" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\n\t  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n\t  _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t  # Commands to make compiler produce verbose output that lists\n\t  # what \"hidden\" libraries, object files and flags are used when\n\t  # linking a shared library.\n\t  output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep \"\\-L\"'\n\n\telse\n\t  # FIXME: insert proper C++ library support\n\t  _LT_AC_TAGVAR(ld_shlibs, $1)=no\n\tfi\n\t;;\n    esac\n    ;;\n  psos*)\n    # FIXME: insert proper C++ library support\n    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    ;;\n  sunos4*)\n    case $cc_basename in\n      CC*)\n\t# Sun C++ 4.x\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      lcc*)\n\t# Lucid\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      *)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n    esac\n    ;;\n  solaris*)\n    case $cc_basename in\n      CC*)\n\t# Sun C++ 4.2, 5.x and Centerline C++\n        _LT_AC_TAGVAR(archive_cmds_need_lc,$1)=yes\n\t_LT_AC_TAGVAR(no_undefined_flag, $1)=' -zdefs'\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag}  -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~$echo \"local: *; };\" >> $lib.exp~\n\t$CC -G${allow_undefined_flag}  ${wl}-M ${wl}$lib.exp -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$rm $lib.exp'\n\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t_LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n\tcase $host_os in\n\t  solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n\t  *)\n\t    # The C++ compiler is used as linker so we must use $wl\n\t    # flag to pass the commands to the underlying system\n\t    # linker. We must also pass each convience library through\n\t    # to the system linker between allextract/defaultextract.\n\t    # The C++ compiler will combine linker options so we\n\t    # cannot just pass the convience library names through\n\t    # without $wl.\n\t    # Supported since Solaris 2.6 (maybe 2.5.1?)\n\t    _LT_AC_TAGVAR(whole_archive_flag_spec, $1)='${wl}-z ${wl}allextract`for conv in $convenience\\\"\\\"; do test -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; $echo \\\"$new_convenience\\\"` ${wl}-z ${wl}defaultextract'\n\t    ;;\n\tesac\n\t_LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n\n\toutput_verbose_link_cmd='echo'\n\n\t# Archives containing C++ object files must be created using\n\t# \"CC -xar\", where \"CC\" is the Sun C++ compiler.  This is\n\t# necessary to make sure instantiated templates are included\n\t# in the archive.\n\t_LT_AC_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'\n\t;;\n      gcx*)\n\t# Green Hills C++ Compiler\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'\n\n\t# The C++ compiler must be used to create the archive.\n\t_LT_AC_TAGVAR(old_archive_cmds, $1)='$CC $LDFLAGS -archive -o $oldlib $oldobjs'\n\t;;\n      *)\n\t# GNU C++ compiler with Solaris linker\n\tif test \"$GXX\" = yes && test \"$with_gnu_ld\" = no; then\n\t  _LT_AC_TAGVAR(no_undefined_flag, $1)=' ${wl}-z ${wl}defs'\n\t  if $CC --version | grep -v '^2\\.7' > /dev/null; then\n\t    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'\n\t    _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~$echo \"local: *; };\" >> $lib.exp~\n\t\t$CC -shared -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$rm $lib.exp'\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    output_verbose_link_cmd=\"$CC -shared $CFLAGS -v conftest.$objext 2>&1 | grep \\\"\\-L\\\"\"\n\t  else\n\t    # g++ 2.7 appears to require `-G' NOT `-shared' on this\n\t    # platform.\n\t    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -G -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'\n\t    _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~$echo \"local: *; };\" >> $lib.exp~\n\t\t$CC -G -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$rm $lib.exp'\n\n\t    # Commands to make compiler produce verbose output that lists\n\t    # what \"hidden\" libraries, object files and flags are used when\n\t    # linking a shared library.\n\t    output_verbose_link_cmd=\"$CC -G $CFLAGS -v conftest.$objext 2>&1 | grep \\\"\\-L\\\"\"\n\t  fi\n\n\t  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $wl$libdir'\n\tfi\n\t;;\n    esac\n    ;;\n  sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)\n    _LT_AC_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n    _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n    _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n    runpath_var='LD_RUN_PATH'\n\n    case $cc_basename in\n      CC*)\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t;;\n      *)\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t;;\n    esac\n    ;;\n  sysv5* | sco3.2v5* | sco5v6*)\n    # Note: We can NOT use -z defs as we might desire, because we do not\n    # link with -lc, and that would cause any symbols used from libc to\n    # always be unresolved, which means just about no library would\n    # ever link correctly.  If we're not using GNU ld we use -z text\n    # though, which does catch some bad symbols but isn't as heavy-handed\n    # as -z defs.\n    # For security reasons, it is highly recommended that you always\n    # use absolute paths for naming shared libraries, and exclude the\n    # DT_RUNPATH tag from executables and libraries.  But doing so\n    # requires that you compile everything twice, which is a pain.\n    # So that behaviour is only enabled if SCOABSPATH is set to a\n    # non-empty value in the environment.  Most likely only useful for\n    # creating official distributions of packages.\n    # This is a hack until libtool officially supports absolute path\n    # names for shared libraries.\n    _LT_AC_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n    _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-z,nodefs'\n    _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n    _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='`test -z \"$SCOABSPATH\" && echo ${wl}-R,$libdir`'\n    _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=':'\n    _LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n    _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Bexport'\n    runpath_var='LD_RUN_PATH'\n\n    case $cc_basename in\n      CC*)\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,\\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,\\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t;;\n      *)\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,\\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,\\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t;;\n    esac\n    ;;\n  tandem*)\n    case $cc_basename in\n      NCC*)\n\t# NonStop-UX NCC 3.20\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n      *)\n\t# FIXME: insert proper C++ library support\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t;;\n    esac\n    ;;\n  vxworks*)\n    # FIXME: insert proper C++ library support\n    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    ;;\n  *)\n    # FIXME: insert proper C++ library support\n    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n    ;;\nesac\nAC_MSG_RESULT([$_LT_AC_TAGVAR(ld_shlibs, $1)])\ntest \"$_LT_AC_TAGVAR(ld_shlibs, $1)\" = no && can_build_shared=no\n\n_LT_AC_TAGVAR(GCC, $1)=\"$GXX\"\n_LT_AC_TAGVAR(LD, $1)=\"$LD\"\n\nAC_LIBTOOL_POSTDEP_PREDEP($1)\nAC_LIBTOOL_PROG_COMPILER_PIC($1)\nAC_LIBTOOL_PROG_CC_C_O($1)\nAC_LIBTOOL_SYS_HARD_LINK_LOCKS($1)\nAC_LIBTOOL_PROG_LD_SHLIBS($1)\nAC_LIBTOOL_SYS_DYNAMIC_LINKER($1)\nAC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH($1)\n\nAC_LIBTOOL_CONFIG($1)\n\nAC_LANG_POP\nCC=$lt_save_CC\nLDCXX=$LD\nLD=$lt_save_LD\nGCC=$lt_save_GCC\nwith_gnu_ldcxx=$with_gnu_ld\nwith_gnu_ld=$lt_save_with_gnu_ld\nlt_cv_path_LDCXX=$lt_cv_path_LD\nlt_cv_path_LD=$lt_save_path_LD\nlt_cv_prog_gnu_ldcxx=$lt_cv_prog_gnu_ld\nlt_cv_prog_gnu_ld=$lt_save_with_gnu_ld\n])# AC_LIBTOOL_LANG_CXX_CONFIG\n\n# AC_LIBTOOL_POSTDEP_PREDEP([TAGNAME])\n# ------------------------------------\n# Figure out \"hidden\" library dependencies from verbose\n# compiler output when linking a shared library.\n# Parse the compiler output and extract the necessary\n# objects, libraries and library flags.\nAC_DEFUN([AC_LIBTOOL_POSTDEP_PREDEP],[\ndnl we can't use the lt_simple_compile_test_code here,\ndnl because it contains code intended for an executable,\ndnl not a library.  It's possible we should let each\ndnl tag define a new lt_????_link_test_code variable,\ndnl but it's only used here...\nifelse([$1],[],[cat > conftest.$ac_ext <<EOF\nint a;\nvoid foo (void) { a = 0; }\nEOF\n],[$1],[CXX],[cat > conftest.$ac_ext <<EOF\nclass Foo\n{\npublic:\n  Foo (void) { a = 0; }\nprivate:\n  int a;\n};\nEOF\n],[$1],[F77],[cat > conftest.$ac_ext <<EOF\n      subroutine foo\n      implicit none\n      integer*4 a\n      a=0\n      return\n      end\nEOF\n],[$1],[GCJ],[cat > conftest.$ac_ext <<EOF\npublic class foo {\n  private int a;\n  public void bar (void) {\n    a = 0;\n  }\n};\nEOF\n])\ndnl Parse the compiler output and extract the necessary\ndnl objects, libraries and library flags.\nif AC_TRY_EVAL(ac_compile); then\n  # Parse the compiler output and extract the necessary\n  # objects, libraries and library flags.\n\n  # Sentinel used to keep track of whether or not we are before\n  # the conftest object file.\n  pre_test_object_deps_done=no\n\n  # The `*' in the case matches for architectures that use `case' in\n  # $output_verbose_cmd can trigger glob expansion during the loop\n  # eval without this substitution.\n  output_verbose_link_cmd=`$echo \"X$output_verbose_link_cmd\" | $Xsed -e \"$no_glob_subst\"`\n\n  for p in `eval $output_verbose_link_cmd`; do\n    case $p in\n\n    -L* | -R* | -l*)\n       # Some compilers place space between \"-{L,R}\" and the path.\n       # Remove the space.\n       if test $p = \"-L\" \\\n\t  || test $p = \"-R\"; then\n\t prev=$p\n\t continue\n       else\n\t prev=\n       fi\n\n       if test \"$pre_test_object_deps_done\" = no; then\n\t case $p in\n\t -L* | -R*)\n\t   # Internal compiler library paths should come after those\n\t   # provided the user.  The postdeps already come after the\n\t   # user supplied libs so there is no need to process them.\n\t   if test -z \"$_LT_AC_TAGVAR(compiler_lib_search_path, $1)\"; then\n\t     _LT_AC_TAGVAR(compiler_lib_search_path, $1)=\"${prev}${p}\"\n\t   else\n\t     _LT_AC_TAGVAR(compiler_lib_search_path, $1)=\"${_LT_AC_TAGVAR(compiler_lib_search_path, $1)} ${prev}${p}\"\n\t   fi\n\t   ;;\n\t # The \"-l\" case would never come before the object being\n\t # linked, so don't bother handling this case.\n\t esac\n       else\n\t if test -z \"$_LT_AC_TAGVAR(postdeps, $1)\"; then\n\t   _LT_AC_TAGVAR(postdeps, $1)=\"${prev}${p}\"\n\t else\n\t   _LT_AC_TAGVAR(postdeps, $1)=\"${_LT_AC_TAGVAR(postdeps, $1)} ${prev}${p}\"\n\t fi\n       fi\n       ;;\n\n    *.$objext)\n       # This assumes that the test object file only shows up\n       # once in the compiler output.\n       if test \"$p\" = \"conftest.$objext\"; then\n\t pre_test_object_deps_done=yes\n\t continue\n       fi\n\n       if test \"$pre_test_object_deps_done\" = no; then\n\t if test -z \"$_LT_AC_TAGVAR(predep_objects, $1)\"; then\n\t   _LT_AC_TAGVAR(predep_objects, $1)=\"$p\"\n\t else\n\t   _LT_AC_TAGVAR(predep_objects, $1)=\"$_LT_AC_TAGVAR(predep_objects, $1) $p\"\n\t fi\n       else\n\t if test -z \"$_LT_AC_TAGVAR(postdep_objects, $1)\"; then\n\t   _LT_AC_TAGVAR(postdep_objects, $1)=\"$p\"\n\t else\n\t   _LT_AC_TAGVAR(postdep_objects, $1)=\"$_LT_AC_TAGVAR(postdep_objects, $1) $p\"\n\t fi\n       fi\n       ;;\n\n    *) ;; # Ignore the rest.\n\n    esac\n  done\n\n  # Clean up.\n  rm -f a.out a.exe\nelse\n  echo \"libtool.m4: error: problem compiling $1 test program\"\nfi\n\n$rm -f confest.$objext\n\n# PORTME: override above test on systems where it is broken\nifelse([$1],[CXX],\n[case $host_os in\ninterix3*)\n  # Interix 3.5 installs completely hosed .la files for C++, so rather than\n  # hack all around it, let's just trust \"g++\" to DTRT.\n  _LT_AC_TAGVAR(predep_objects,$1)=\n  _LT_AC_TAGVAR(postdep_objects,$1)=\n  _LT_AC_TAGVAR(postdeps,$1)=\n  ;;\n\nsolaris*)\n  case $cc_basename in\n  CC*)\n    # Adding this requires a known-good setup of shared libraries for\n    # Sun compiler versions before 5.6, else PIC objects from an old\n    # archive will be linked into the output, leading to subtle bugs.\n    _LT_AC_TAGVAR(postdeps,$1)='-lCstd -lCrun'\n    ;;\n  esac\n  ;;\nesac\n])\n\ncase \" $_LT_AC_TAGVAR(postdeps, $1) \" in\n*\" -lc \"*) _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no ;;\nesac\n])# AC_LIBTOOL_POSTDEP_PREDEP\n\n# AC_LIBTOOL_LANG_F77_CONFIG\n# --------------------------\n# Ensure that the configuration vars for the C compiler are\n# suitably defined.  Those variables are subsequently used by\n# AC_LIBTOOL_CONFIG to write the compiler configuration to `libtool'.\nAC_DEFUN([AC_LIBTOOL_LANG_F77_CONFIG], [_LT_AC_LANG_F77_CONFIG(F77)])\nAC_DEFUN([_LT_AC_LANG_F77_CONFIG],\n[AC_REQUIRE([AC_PROG_F77])\nAC_LANG_PUSH(Fortran 77)\n\n_LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n_LT_AC_TAGVAR(allow_undefined_flag, $1)=\n_LT_AC_TAGVAR(always_export_symbols, $1)=no\n_LT_AC_TAGVAR(archive_expsym_cmds, $1)=\n_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)=\n_LT_AC_TAGVAR(hardcode_direct, $1)=no\n_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)=\n_LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)=\n_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=\n_LT_AC_TAGVAR(hardcode_minus_L, $1)=no\n_LT_AC_TAGVAR(hardcode_automatic, $1)=no\n_LT_AC_TAGVAR(module_cmds, $1)=\n_LT_AC_TAGVAR(module_expsym_cmds, $1)=\n_LT_AC_TAGVAR(link_all_deplibs, $1)=unknown\n_LT_AC_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n_LT_AC_TAGVAR(no_undefined_flag, $1)=\n_LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\n_LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n\n# Source file extension for f77 test sources.\nac_ext=f\n\n# Object file extension for compiled f77 test sources.\nobjext=o\n_LT_AC_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"      subroutine t\\n      return\\n      end\\n\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code=\"      program t\\n      end\\n\"\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_AC_SYS_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=\"$CC\"\nCC=${F77-\"f77\"}\ncompiler=$CC\n_LT_AC_TAGVAR(compiler, $1)=$CC\n_LT_CC_BASENAME([$compiler])\n\nAC_MSG_CHECKING([if libtool supports shared libraries])\nAC_MSG_RESULT([$can_build_shared])\n\nAC_MSG_CHECKING([whether to build shared libraries])\ntest \"$can_build_shared\" = \"no\" && enable_shared=no\n\n# On AIX, shared libraries and static libraries use the same namespace, and\n# are all built from PIC.\ncase $host_os in\naix3*)\n  test \"$enable_shared\" = yes && enable_static=no\n  if test -n \"$RANLIB\"; then\n    archive_cmds=\"$archive_cmds~\\$RANLIB \\$lib\"\n    postinstall_cmds='$RANLIB $lib'\n  fi\n  ;;\naix4* | aix5*)\n  if test \"$host_cpu\" != ia64 && test \"$aix_use_runtimelinking\" = no ; then\n    test \"$enable_shared\" = yes && enable_static=no\n  fi\n  ;;\nesac\nAC_MSG_RESULT([$enable_shared])\n\nAC_MSG_CHECKING([whether to build static libraries])\n# Make sure either enable_shared or enable_static is yes.\ntest \"$enable_shared\" = yes || enable_static=yes\nAC_MSG_RESULT([$enable_static])\n\n_LT_AC_TAGVAR(GCC, $1)=\"$G77\"\n_LT_AC_TAGVAR(LD, $1)=\"$LD\"\n\nAC_LIBTOOL_PROG_COMPILER_PIC($1)\nAC_LIBTOOL_PROG_CC_C_O($1)\nAC_LIBTOOL_SYS_HARD_LINK_LOCKS($1)\nAC_LIBTOOL_PROG_LD_SHLIBS($1)\nAC_LIBTOOL_SYS_DYNAMIC_LINKER($1)\nAC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH($1)\n\nAC_LIBTOOL_CONFIG($1)\n\nAC_LANG_POP\nCC=\"$lt_save_CC\"\n])# AC_LIBTOOL_LANG_F77_CONFIG\n\n\n# AC_LIBTOOL_LANG_GCJ_CONFIG\n# --------------------------\n# Ensure that the configuration vars for the C compiler are\n# suitably defined.  Those variables are subsequently used by\n# AC_LIBTOOL_CONFIG to write the compiler configuration to `libtool'.\nAC_DEFUN([AC_LIBTOOL_LANG_GCJ_CONFIG], [_LT_AC_LANG_GCJ_CONFIG(GCJ)])\nAC_DEFUN([_LT_AC_LANG_GCJ_CONFIG],\n[AC_LANG_SAVE\n\n# Source file extension for Java test sources.\nac_ext=java\n\n# Object file extension for compiled Java test sources.\nobjext=o\n_LT_AC_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code=\"class foo {}\\n\"\n\n# Code to be used in simple link tests\nlt_simple_link_test_code='public class conftest { public static void main(String[[]] argv) {}; }\\n'\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_AC_SYS_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=\"$CC\"\nCC=${GCJ-\"gcj\"}\ncompiler=$CC\n_LT_AC_TAGVAR(compiler, $1)=$CC\n_LT_CC_BASENAME([$compiler])\n\n# GCJ did not exist at the time GCC didn't implicitly link libc in.\n_LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n\n_LT_AC_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds\n\nAC_LIBTOOL_PROG_COMPILER_NO_RTTI($1)\nAC_LIBTOOL_PROG_COMPILER_PIC($1)\nAC_LIBTOOL_PROG_CC_C_O($1)\nAC_LIBTOOL_SYS_HARD_LINK_LOCKS($1)\nAC_LIBTOOL_PROG_LD_SHLIBS($1)\nAC_LIBTOOL_SYS_DYNAMIC_LINKER($1)\nAC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH($1)\n\nAC_LIBTOOL_CONFIG($1)\n\nAC_LANG_RESTORE\nCC=\"$lt_save_CC\"\n])# AC_LIBTOOL_LANG_GCJ_CONFIG\n\n\n# AC_LIBTOOL_LANG_RC_CONFIG\n# -------------------------\n# Ensure that the configuration vars for the Windows resource compiler are\n# suitably defined.  Those variables are subsequently used by\n# AC_LIBTOOL_CONFIG to write the compiler configuration to `libtool'.\nAC_DEFUN([AC_LIBTOOL_LANG_RC_CONFIG], [_LT_AC_LANG_RC_CONFIG(RC)])\nAC_DEFUN([_LT_AC_LANG_RC_CONFIG],\n[AC_LANG_SAVE\n\n# Source file extension for RC test sources.\nac_ext=rc\n\n# Object file extension for compiled RC test sources.\nobjext=o\n_LT_AC_TAGVAR(objext, $1)=$objext\n\n# Code to be used in simple compile tests\nlt_simple_compile_test_code='sample MENU { MENUITEM \"&Soup\", 100, CHECKED }\\n'\n\n# Code to be used in simple link tests\nlt_simple_link_test_code=\"$lt_simple_compile_test_code\"\n\n# ltmain only uses $CC for tagged configurations so make sure $CC is set.\n_LT_AC_SYS_COMPILER\n\n# save warnings/boilerplate of simple test code\n_LT_COMPILER_BOILERPLATE\n_LT_LINKER_BOILERPLATE\n\n# Allow CC to be a program name with arguments.\nlt_save_CC=\"$CC\"\nCC=${RC-\"windres\"}\ncompiler=$CC\n_LT_AC_TAGVAR(compiler, $1)=$CC\n_LT_CC_BASENAME([$compiler])\n_LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes\n\nAC_LIBTOOL_CONFIG($1)\n\nAC_LANG_RESTORE\nCC=\"$lt_save_CC\"\n])# AC_LIBTOOL_LANG_RC_CONFIG\n\n\n# AC_LIBTOOL_CONFIG([TAGNAME])\n# ----------------------------\n# If TAGNAME is not passed, then create an initial libtool script\n# with a default configuration from the untagged config vars.  Otherwise\n# add code to config.status for appending the configuration named by\n# TAGNAME from the matching tagged config vars.\nAC_DEFUN([AC_LIBTOOL_CONFIG],\n[# The else clause should only fire when bootstrapping the\n# libtool distribution, otherwise you forgot to ship ltmain.sh\n# with your package, and you will get complaints that there are\n# no rules to generate ltmain.sh.\nif test -f \"$ltmain\"; then\n  # See if we are running on zsh, and set the options which allow our commands through\n  # without removal of \\ escapes.\n  if test -n \"${ZSH_VERSION+set}\" ; then\n    setopt NO_GLOB_SUBST\n  fi\n  # Now quote all the things that may contain metacharacters while being\n  # careful not to overquote the AC_SUBSTed values.  We take copies of the\n  # variables and quote the copies for generation of the libtool script.\n  for var in echo old_CC old_CFLAGS AR AR_FLAGS EGREP RANLIB LN_S LTCC LTCFLAGS NM \\\n    SED SHELL STRIP \\\n    libname_spec library_names_spec soname_spec extract_expsyms_cmds \\\n    old_striplib striplib file_magic_cmd finish_cmds finish_eval \\\n    deplibs_check_method reload_flag reload_cmds need_locks \\\n    lt_cv_sys_global_symbol_pipe lt_cv_sys_global_symbol_to_cdecl \\\n    lt_cv_sys_global_symbol_to_c_name_address \\\n    sys_lib_search_path_spec sys_lib_dlsearch_path_spec \\\n    old_postinstall_cmds old_postuninstall_cmds \\\n    _LT_AC_TAGVAR(compiler, $1) \\\n    _LT_AC_TAGVAR(CC, $1) \\\n    _LT_AC_TAGVAR(LD, $1) \\\n    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1) \\\n    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1) \\\n    _LT_AC_TAGVAR(lt_prog_compiler_static, $1) \\\n    _LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1) \\\n    _LT_AC_TAGVAR(export_dynamic_flag_spec, $1) \\\n    _LT_AC_TAGVAR(thread_safe_flag_spec, $1) \\\n    _LT_AC_TAGVAR(whole_archive_flag_spec, $1) \\\n    _LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1) \\\n    _LT_AC_TAGVAR(old_archive_cmds, $1) \\\n    _LT_AC_TAGVAR(old_archive_from_new_cmds, $1) \\\n    _LT_AC_TAGVAR(predep_objects, $1) \\\n    _LT_AC_TAGVAR(postdep_objects, $1) \\\n    _LT_AC_TAGVAR(predeps, $1) \\\n    _LT_AC_TAGVAR(postdeps, $1) \\\n    _LT_AC_TAGVAR(compiler_lib_search_path, $1) \\\n    _LT_AC_TAGVAR(archive_cmds, $1) \\\n    _LT_AC_TAGVAR(archive_expsym_cmds, $1) \\\n    _LT_AC_TAGVAR(postinstall_cmds, $1) \\\n    _LT_AC_TAGVAR(postuninstall_cmds, $1) \\\n    _LT_AC_TAGVAR(old_archive_from_expsyms_cmds, $1) \\\n    _LT_AC_TAGVAR(allow_undefined_flag, $1) \\\n    _LT_AC_TAGVAR(no_undefined_flag, $1) \\\n    _LT_AC_TAGVAR(export_symbols_cmds, $1) \\\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1) \\\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1) \\\n    _LT_AC_TAGVAR(hardcode_libdir_separator, $1) \\\n    _LT_AC_TAGVAR(hardcode_automatic, $1) \\\n    _LT_AC_TAGVAR(module_cmds, $1) \\\n    _LT_AC_TAGVAR(module_expsym_cmds, $1) \\\n    _LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1) \\\n    _LT_AC_TAGVAR(exclude_expsyms, $1) \\\n    _LT_AC_TAGVAR(include_expsyms, $1); do\n\n    case $var in\n    _LT_AC_TAGVAR(old_archive_cmds, $1) | \\\n    _LT_AC_TAGVAR(old_archive_from_new_cmds, $1) | \\\n    _LT_AC_TAGVAR(archive_cmds, $1) | \\\n    _LT_AC_TAGVAR(archive_expsym_cmds, $1) | \\\n    _LT_AC_TAGVAR(module_cmds, $1) | \\\n    _LT_AC_TAGVAR(module_expsym_cmds, $1) | \\\n    _LT_AC_TAGVAR(old_archive_from_expsyms_cmds, $1) | \\\n    _LT_AC_TAGVAR(export_symbols_cmds, $1) | \\\n    extract_expsyms_cmds | reload_cmds | finish_cmds | \\\n    postinstall_cmds | postuninstall_cmds | \\\n    old_postinstall_cmds | old_postuninstall_cmds | \\\n    sys_lib_search_path_spec | sys_lib_dlsearch_path_spec)\n      # Double-quote double-evaled strings.\n      eval \"lt_$var=\\\\\\\"\\`\\$echo \\\"X\\$$var\\\" | \\$Xsed -e \\\"\\$double_quote_subst\\\" -e \\\"\\$sed_quote_subst\\\" -e \\\"\\$delay_variable_subst\\\"\\`\\\\\\\"\"\n      ;;\n    *)\n      eval \"lt_$var=\\\\\\\"\\`\\$echo \\\"X\\$$var\\\" | \\$Xsed -e \\\"\\$sed_quote_subst\\\"\\`\\\\\\\"\"\n      ;;\n    esac\n  done\n\n  case $lt_echo in\n  *'\\[$]0 --fallback-echo\"')\n    lt_echo=`$echo \"X$lt_echo\" | $Xsed -e 's/\\\\\\\\\\\\\\[$]0 --fallback-echo\"[$]/[$]0 --fallback-echo\"/'`\n    ;;\n  esac\n\nifelse([$1], [],\n  [cfgfile=\"${ofile}T\"\n  trap \"$rm \\\"$cfgfile\\\"; exit 1\" 1 2 15\n  $rm -f \"$cfgfile\"\n  AC_MSG_NOTICE([creating $ofile])],\n  [cfgfile=\"$ofile\"])\n\n  cat <<__EOF__ >> \"$cfgfile\"\nifelse([$1], [],\n[#! $SHELL\n\n# `$echo \"$cfgfile\" | sed 's%^.*/%%'` - Provide generalized library-building support services.\n# Generated automatically by $PROGRAM (GNU $PACKAGE $VERSION$TIMESTAMP)\n# NOTE: Changes made to this file will be lost: look at ltmain.sh.\n#\n# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001\n# Free Software Foundation, Inc.\n#\n# This file is part of GNU Libtool:\n# Originally by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996\n#\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that program.\n\n# A sed program that does not truncate output.\nSED=$lt_SED\n\n# Sed that helps us avoid accidentally triggering echo(1) options like -n.\nXsed=\"$SED -e 1s/^X//\"\n\n# The HP-UX ksh and POSIX shell print the target directory to stdout\n# if CDPATH is set.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\n# The names of the tagged configurations supported by this script.\navailable_tags=\n\n# ### BEGIN LIBTOOL CONFIG],\n[# ### BEGIN LIBTOOL TAG CONFIG: $tagname])\n\n# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:\n\n# Shell to use when invoking shell scripts.\nSHELL=$lt_SHELL\n\n# Whether or not to build shared libraries.\nbuild_libtool_libs=$enable_shared\n\n# Whether or not to build static libraries.\nbuild_old_libs=$enable_static\n\n# Whether or not to add -lc for building shared libraries.\nbuild_libtool_need_lc=$_LT_AC_TAGVAR(archive_cmds_need_lc, $1)\n\n# Whether or not to disallow shared libs when runtime libs are static\nallow_libtool_libs_with_static_runtimes=$_LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)\n\n# Whether or not to optimize for fast installation.\nfast_install=$enable_fast_install\n\n# The host system.\nhost_alias=$host_alias\nhost=$host\nhost_os=$host_os\n\n# The build system.\nbuild_alias=$build_alias\nbuild=$build\nbuild_os=$build_os\n\n# An echo program that does not interpret backslashes.\necho=$lt_echo\n\n# The archiver.\nAR=$lt_AR\nAR_FLAGS=$lt_AR_FLAGS\n\n# A C compiler.\nLTCC=$lt_LTCC\n\n# LTCC compiler flags.\nLTCFLAGS=$lt_LTCFLAGS\n\n# A language-specific compiler.\nCC=$lt_[]_LT_AC_TAGVAR(compiler, $1)\n\n# Is the compiler the GNU C compiler?\nwith_gcc=$_LT_AC_TAGVAR(GCC, $1)\n\n# An ERE matcher.\nEGREP=$lt_EGREP\n\n# The linker used to build libraries.\nLD=$lt_[]_LT_AC_TAGVAR(LD, $1)\n\n# Whether we need hard or soft links.\nLN_S=$lt_LN_S\n\n# A BSD-compatible nm program.\nNM=$lt_NM\n\n# A symbol stripping program\nSTRIP=$lt_STRIP\n\n# Used to examine libraries when file_magic_cmd begins \"file\"\nMAGIC_CMD=$MAGIC_CMD\n\n# Used on cygwin: DLL creation program.\nDLLTOOL=\"$DLLTOOL\"\n\n# Used on cygwin: object dumper.\nOBJDUMP=\"$OBJDUMP\"\n\n# Used on cygwin: assembler.\nAS=\"$AS\"\n\n# The name of the directory that contains temporary libtool files.\nobjdir=$objdir\n\n# How to create reloadable object files.\nreload_flag=$lt_reload_flag\nreload_cmds=$lt_reload_cmds\n\n# How to pass a linker flag through the compiler.\nwl=$lt_[]_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)\n\n# Object file suffix (normally \"o\").\nobjext=\"$ac_objext\"\n\n# Old archive suffix (normally \"a\").\nlibext=\"$libext\"\n\n# Shared library suffix (normally \".so\").\nshrext_cmds='$shrext_cmds'\n\n# Executable file suffix (normally \"\").\nexeext=\"$exeext\"\n\n# Additional compiler flags for building library objects.\npic_flag=$lt_[]_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)\npic_mode=$pic_mode\n\n# What is the maximum length of a command?\nmax_cmd_len=$lt_cv_sys_max_cmd_len\n\n# Does compiler simultaneously support -c and -o options?\ncompiler_c_o=$lt_[]_LT_AC_TAGVAR(lt_cv_prog_compiler_c_o, $1)\n\n# Must we lock files when doing compilation?\nneed_locks=$lt_need_locks\n\n# Do we need the lib prefix for modules?\nneed_lib_prefix=$need_lib_prefix\n\n# Do we need a version for libraries?\nneed_version=$need_version\n\n# Whether dlopen is supported.\ndlopen_support=$enable_dlopen\n\n# Whether dlopen of programs is supported.\ndlopen_self=$enable_dlopen_self\n\n# Whether dlopen of statically linked programs is supported.\ndlopen_self_static=$enable_dlopen_self_static\n\n# Compiler flag to prevent dynamic linking.\nlink_static_flag=$lt_[]_LT_AC_TAGVAR(lt_prog_compiler_static, $1)\n\n# Compiler flag to turn off builtin functions.\nno_builtin_flag=$lt_[]_LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)\n\n# Compiler flag to allow reflexive dlopens.\nexport_dynamic_flag_spec=$lt_[]_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)\n\n# Compiler flag to generate shared objects directly from archives.\nwhole_archive_flag_spec=$lt_[]_LT_AC_TAGVAR(whole_archive_flag_spec, $1)\n\n# Compiler flag to generate thread-safe objects.\nthread_safe_flag_spec=$lt_[]_LT_AC_TAGVAR(thread_safe_flag_spec, $1)\n\n# Library versioning type.\nversion_type=$version_type\n\n# Format of library name prefix.\nlibname_spec=$lt_libname_spec\n\n# List of archive names.  First name is the real one, the rest are links.\n# The last name is the one that the linker finds with -lNAME.\nlibrary_names_spec=$lt_library_names_spec\n\n# The coded name of the library, if different from the real name.\nsoname_spec=$lt_soname_spec\n\n# Commands used to build and install an old-style archive.\nRANLIB=$lt_RANLIB\nold_archive_cmds=$lt_[]_LT_AC_TAGVAR(old_archive_cmds, $1)\nold_postinstall_cmds=$lt_old_postinstall_cmds\nold_postuninstall_cmds=$lt_old_postuninstall_cmds\n\n# Create an old-style archive from a shared archive.\nold_archive_from_new_cmds=$lt_[]_LT_AC_TAGVAR(old_archive_from_new_cmds, $1)\n\n# Create a temporary old-style archive to link instead of a shared archive.\nold_archive_from_expsyms_cmds=$lt_[]_LT_AC_TAGVAR(old_archive_from_expsyms_cmds, $1)\n\n# Commands used to build and install a shared archive.\narchive_cmds=$lt_[]_LT_AC_TAGVAR(archive_cmds, $1)\narchive_expsym_cmds=$lt_[]_LT_AC_TAGVAR(archive_expsym_cmds, $1)\npostinstall_cmds=$lt_postinstall_cmds\npostuninstall_cmds=$lt_postuninstall_cmds\n\n# Commands used to build a loadable module (assumed same as above if empty)\nmodule_cmds=$lt_[]_LT_AC_TAGVAR(module_cmds, $1)\nmodule_expsym_cmds=$lt_[]_LT_AC_TAGVAR(module_expsym_cmds, $1)\n\n# Commands to strip libraries.\nold_striplib=$lt_old_striplib\nstriplib=$lt_striplib\n\n# Dependencies to place before the objects being linked to create a\n# shared library.\npredep_objects=$lt_[]_LT_AC_TAGVAR(predep_objects, $1)\n\n# Dependencies to place after the objects being linked to create a\n# shared library.\npostdep_objects=$lt_[]_LT_AC_TAGVAR(postdep_objects, $1)\n\n# Dependencies to place before the objects being linked to create a\n# shared library.\npredeps=$lt_[]_LT_AC_TAGVAR(predeps, $1)\n\n# Dependencies to place after the objects being linked to create a\n# shared library.\npostdeps=$lt_[]_LT_AC_TAGVAR(postdeps, $1)\n\n# The library search path used internally by the compiler when linking\n# a shared library.\ncompiler_lib_search_path=$lt_[]_LT_AC_TAGVAR(compiler_lib_search_path, $1)\n\n# Method to check whether dependent libraries are shared objects.\ndeplibs_check_method=$lt_deplibs_check_method\n\n# Command to use when deplibs_check_method == file_magic.\nfile_magic_cmd=$lt_file_magic_cmd\n\n# Flag that allows shared libraries with undefined symbols to be built.\nallow_undefined_flag=$lt_[]_LT_AC_TAGVAR(allow_undefined_flag, $1)\n\n# Flag that forces no undefined symbols.\nno_undefined_flag=$lt_[]_LT_AC_TAGVAR(no_undefined_flag, $1)\n\n# Commands used to finish a libtool library installation in a directory.\nfinish_cmds=$lt_finish_cmds\n\n# Same as above, but a single script fragment to be evaled but not shown.\nfinish_eval=$lt_finish_eval\n\n# Take the output of nm and produce a listing of raw symbols and C names.\nglobal_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe\n\n# Transform the output of nm in a proper C declaration\nglobal_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl\n\n# Transform the output of nm in a C name address pair\nglobal_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address\n\n# This is the shared library runtime path variable.\nrunpath_var=$runpath_var\n\n# This is the shared library path variable.\nshlibpath_var=$shlibpath_var\n\n# Is shlibpath searched before the hard-coded library search path?\nshlibpath_overrides_runpath=$shlibpath_overrides_runpath\n\n# How to hardcode a shared library path into an executable.\nhardcode_action=$_LT_AC_TAGVAR(hardcode_action, $1)\n\n# Whether we should hardcode library paths into libraries.\nhardcode_into_libs=$hardcode_into_libs\n\n# Flag to hardcode \\$libdir into a binary during linking.\n# This must work even if \\$libdir does not exist.\nhardcode_libdir_flag_spec=$lt_[]_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)\n\n# If ld is used when linking, flag to hardcode \\$libdir into\n# a binary during linking. This must work even if \\$libdir does\n# not exist.\nhardcode_libdir_flag_spec_ld=$lt_[]_LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)\n\n# Whether we need a single -rpath flag with a separated argument.\nhardcode_libdir_separator=$lt_[]_LT_AC_TAGVAR(hardcode_libdir_separator, $1)\n\n# Set to yes if using DIR/libNAME${shared_ext} during linking hardcodes DIR into the\n# resulting binary.\nhardcode_direct=$_LT_AC_TAGVAR(hardcode_direct, $1)\n\n# Set to yes if using the -LDIR flag during linking hardcodes DIR into the\n# resulting binary.\nhardcode_minus_L=$_LT_AC_TAGVAR(hardcode_minus_L, $1)\n\n# Set to yes if using SHLIBPATH_VAR=DIR during linking hardcodes DIR into\n# the resulting binary.\nhardcode_shlibpath_var=$_LT_AC_TAGVAR(hardcode_shlibpath_var, $1)\n\n# Set to yes if building a shared library automatically hardcodes DIR into the library\n# and all subsequent libraries and executables linked against it.\nhardcode_automatic=$_LT_AC_TAGVAR(hardcode_automatic, $1)\n\n# Variables whose values should be saved in libtool wrapper scripts and\n# restored at relink time.\nvariables_saved_for_relink=\"$variables_saved_for_relink\"\n\n# Whether libtool must link a program against all its dependency libraries.\nlink_all_deplibs=$_LT_AC_TAGVAR(link_all_deplibs, $1)\n\n# Compile-time system search path for libraries\nsys_lib_search_path_spec=$lt_sys_lib_search_path_spec\n\n# Run-time system search path for libraries\nsys_lib_dlsearch_path_spec=$lt_sys_lib_dlsearch_path_spec\n\n# Fix the shell variable \\$srcfile for the compiler.\nfix_srcfile_path=\"$_LT_AC_TAGVAR(fix_srcfile_path, $1)\"\n\n# Set to yes if exported symbols are required.\nalways_export_symbols=$_LT_AC_TAGVAR(always_export_symbols, $1)\n\n# The commands to list exported symbols.\nexport_symbols_cmds=$lt_[]_LT_AC_TAGVAR(export_symbols_cmds, $1)\n\n# The commands to extract the exported symbol list from a shared archive.\nextract_expsyms_cmds=$lt_extract_expsyms_cmds\n\n# Symbols that should not be listed in the preloaded symbols.\nexclude_expsyms=$lt_[]_LT_AC_TAGVAR(exclude_expsyms, $1)\n\n# Symbols that must always be exported.\ninclude_expsyms=$lt_[]_LT_AC_TAGVAR(include_expsyms, $1)\n\nifelse([$1],[],\n[# ### END LIBTOOL CONFIG],\n[# ### END LIBTOOL TAG CONFIG: $tagname])\n\n__EOF__\n\nifelse([$1],[], [\n  case $host_os in\n  aix3*)\n    cat <<\\EOF >> \"$cfgfile\"\n\n# AIX sometimes has problems with the GCC collect2 program.  For some\n# reason, if we set the COLLECT_NAMES environment variable, the problems\n# vanish in a puff of smoke.\nif test \"X${COLLECT_NAMES+set}\" != Xset; then\n  COLLECT_NAMES=\n  export COLLECT_NAMES\nfi\nEOF\n    ;;\n  esac\n\n  # We use sed instead of cat because bash on DJGPP gets confused if\n  # if finds mixed CR/LF and LF-only lines.  Since sed operates in\n  # text mode, it properly converts lines to CR/LF.  This bash problem\n  # is reportedly fixed, but why not run on old versions too?\n  sed '$q' \"$ltmain\" >> \"$cfgfile\" || (rm -f \"$cfgfile\"; exit 1)\n\n  mv -f \"$cfgfile\" \"$ofile\" || \\\n    (rm -f \"$ofile\" && cp \"$cfgfile\" \"$ofile\" && rm -f \"$cfgfile\")\n  chmod +x \"$ofile\"\n])\nelse\n  # If there is no Makefile yet, we rely on a make rule to execute\n  # `config.status --recheck' to rerun these tests and create the\n  # libtool script then.\n  ltmain_in=`echo $ltmain | sed -e 's/\\.sh$/.in/'`\n  if test -f \"$ltmain_in\"; then\n    test -f Makefile && make \"$ltmain\"\n  fi\nfi\n])# AC_LIBTOOL_CONFIG\n\n\n# AC_LIBTOOL_PROG_COMPILER_NO_RTTI([TAGNAME])\n# -------------------------------------------\nAC_DEFUN([AC_LIBTOOL_PROG_COMPILER_NO_RTTI],\n[AC_REQUIRE([_LT_AC_SYS_COMPILER])dnl\n\n_LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\n\nif test \"$GCC\" = yes; then\n  _LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin'\n\n  AC_LIBTOOL_COMPILER_OPTION([if $compiler supports -fno-rtti -fno-exceptions],\n    lt_cv_prog_compiler_rtti_exceptions,\n    [-fno-rtti -fno-exceptions], [],\n    [_LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=\"$_LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1) -fno-rtti -fno-exceptions\"])\nfi\n])# AC_LIBTOOL_PROG_COMPILER_NO_RTTI\n\n\n# AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE\n# ---------------------------------\nAC_DEFUN([AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE],\n[AC_REQUIRE([AC_CANONICAL_HOST])\nAC_REQUIRE([AC_PROG_NM])\nAC_REQUIRE([AC_OBJEXT])\n# Check for command to grab the raw symbol name followed by C symbol from nm.\nAC_MSG_CHECKING([command to parse $NM output from $compiler object])\nAC_CACHE_VAL([lt_cv_sys_global_symbol_pipe],\n[\n# These are sane defaults that work on at least a few old systems.\n# [They come from Ultrix.  What could be older than Ultrix?!! ;)]\n\n# Character class describing NM global symbol codes.\nsymcode='[[BCDEGRST]]'\n\n# Regexp to match symbols that can be accessed directly from C.\nsympat='\\([[_A-Za-z]][[_A-Za-z0-9]]*\\)'\n\n# Transform an extracted symbol line into a proper C declaration\nlt_cv_sys_global_symbol_to_cdecl=\"sed -n -e 's/^. .* \\(.*\\)$/extern int \\1;/p'\"\n\n# Transform an extracted symbol line into symbol name and symbol address\nlt_cv_sys_global_symbol_to_c_name_address=\"sed -n -e 's/^: \\([[^ ]]*\\) $/  {\\\\\\\"\\1\\\\\\\", (lt_ptr) 0},/p' -e 's/^$symcode \\([[^ ]]*\\) \\([[^ ]]*\\)$/  {\\\"\\2\\\", (lt_ptr) \\&\\2},/p'\"\n\n# Define system-specific variables.\ncase $host_os in\naix*)\n  symcode='[[BCDT]]'\n  ;;\ncygwin* | mingw* | pw32*)\n  symcode='[[ABCDGISTW]]'\n  ;;\nhpux*) # Its linker distinguishes data from code symbols\n  if test \"$host_cpu\" = ia64; then\n    symcode='[[ABCDEGRST]]'\n  fi\n  lt_cv_sys_global_symbol_to_cdecl=\"sed -n -e 's/^T .* \\(.*\\)$/extern int \\1();/p' -e 's/^$symcode* .* \\(.*\\)$/extern char \\1;/p'\"\n  lt_cv_sys_global_symbol_to_c_name_address=\"sed -n -e 's/^: \\([[^ ]]*\\) $/  {\\\\\\\"\\1\\\\\\\", (lt_ptr) 0},/p' -e 's/^$symcode* \\([[^ ]]*\\) \\([[^ ]]*\\)$/  {\\\"\\2\\\", (lt_ptr) \\&\\2},/p'\"\n  ;;\nlinux*)\n  if test \"$host_cpu\" = ia64; then\n    symcode='[[ABCDGIRSTW]]'\n    lt_cv_sys_global_symbol_to_cdecl=\"sed -n -e 's/^T .* \\(.*\\)$/extern int \\1();/p' -e 's/^$symcode* .* \\(.*\\)$/extern char \\1;/p'\"\n    lt_cv_sys_global_symbol_to_c_name_address=\"sed -n -e 's/^: \\([[^ ]]*\\) $/  {\\\\\\\"\\1\\\\\\\", (lt_ptr) 0},/p' -e 's/^$symcode* \\([[^ ]]*\\) \\([[^ ]]*\\)$/  {\\\"\\2\\\", (lt_ptr) \\&\\2},/p'\"\n  fi\n  ;;\nirix* | nonstopux*)\n  symcode='[[BCDEGRST]]'\n  ;;\nosf*)\n  symcode='[[BCDEGQRST]]'\n  ;;\nsolaris*)\n  symcode='[[BDRT]]'\n  ;;\nsco3.2v5*)\n  symcode='[[DT]]'\n  ;;\nsysv4.2uw2*)\n  symcode='[[DT]]'\n  ;;\nsysv5* | sco5v6* | unixware* | OpenUNIX*)\n  symcode='[[ABDT]]'\n  ;;\nsysv4)\n  symcode='[[DFNSTU]]'\n  ;;\nesac\n\n# Handle CRLF in mingw tool chain\nopt_cr=\ncase $build_os in\nmingw*)\n  opt_cr=`echo 'x\\{0,1\\}' | tr x '\\015'` # option cr in regexp\n  ;;\nesac\n\n# If we're using GNU nm, then use its standard symbol codes.\ncase `$NM -V 2>&1` in\n*GNU* | *'with BFD'*)\n  symcode='[[ABCDGIRSTW]]' ;;\nesac\n\n# Try without a prefix undercore, then with it.\nfor ac_symprfx in \"\" \"_\"; do\n\n  # Transform symcode, sympat, and symprfx into a raw symbol and a C symbol.\n  symxfrm=\"\\\\1 $ac_symprfx\\\\2 \\\\2\"\n\n  # Write the raw and C identifiers.\n  lt_cv_sys_global_symbol_pipe=\"sed -n -e 's/^.*[[ \t]]\\($symcode$symcode*\\)[[ \t]][[ \t]]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'\"\n\n  # Check to see that the pipe works correctly.\n  pipe_works=no\n\n  rm -f conftest*\n  cat > conftest.$ac_ext <<EOF\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nchar nm_test_var;\nvoid nm_test_func(){}\n#ifdef __cplusplus\n}\n#endif\nint main(){nm_test_var='a';nm_test_func();return(0);}\nEOF\n\n  if AC_TRY_EVAL(ac_compile); then\n    # Now try to grab the symbols.\n    nlist=conftest.nm\n    if AC_TRY_EVAL(NM conftest.$ac_objext \\| $lt_cv_sys_global_symbol_pipe \\> $nlist) && test -s \"$nlist\"; then\n      # Try sorting and uniquifying the output.\n      if sort \"$nlist\" | uniq > \"$nlist\"T; then\n\tmv -f \"$nlist\"T \"$nlist\"\n      else\n\trm -f \"$nlist\"T\n      fi\n\n      # Make sure that we snagged all the symbols we need.\n      if grep ' nm_test_var$' \"$nlist\" >/dev/null; then\n\tif grep ' nm_test_func$' \"$nlist\" >/dev/null; then\n\t  cat <<EOF > conftest.$ac_ext\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\nEOF\n\t  # Now generate the symbol file.\n\t  eval \"$lt_cv_sys_global_symbol_to_cdecl\"' < \"$nlist\" | grep -v main >> conftest.$ac_ext'\n\n\t  cat <<EOF >> conftest.$ac_ext\n#if defined (__STDC__) && __STDC__\n# define lt_ptr_t void *\n#else\n# define lt_ptr_t char *\n# define const\n#endif\n\n/* The mapping between symbol names and symbols. */\nconst struct {\n  const char *name;\n  lt_ptr_t address;\n}\nlt_preloaded_symbols[[]] =\n{\nEOF\n\t  $SED \"s/^$symcode$symcode* \\(.*\\) \\(.*\\)$/  {\\\"\\2\\\", (lt_ptr_t) \\&\\2},/\" < \"$nlist\" | grep -v main >> conftest.$ac_ext\n\t  cat <<\\EOF >> conftest.$ac_ext\n  {0, (lt_ptr_t) 0}\n};\n\n#ifdef __cplusplus\n}\n#endif\nEOF\n\t  # Now try linking the two files.\n\t  mv conftest.$ac_objext conftstm.$ac_objext\n\t  lt_save_LIBS=\"$LIBS\"\n\t  lt_save_CFLAGS=\"$CFLAGS\"\n\t  LIBS=\"conftstm.$ac_objext\"\n\t  CFLAGS=\"$CFLAGS$_LT_AC_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)\"\n\t  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext}; then\n\t    pipe_works=yes\n\t  fi\n\t  LIBS=\"$lt_save_LIBS\"\n\t  CFLAGS=\"$lt_save_CFLAGS\"\n\telse\n\t  echo \"cannot find nm_test_func in $nlist\" >&AS_MESSAGE_LOG_FD\n\tfi\n      else\n\techo \"cannot find nm_test_var in $nlist\" >&AS_MESSAGE_LOG_FD\n      fi\n    else\n      echo \"cannot run $lt_cv_sys_global_symbol_pipe\" >&AS_MESSAGE_LOG_FD\n    fi\n  else\n    echo \"$progname: failed program was:\" >&AS_MESSAGE_LOG_FD\n    cat conftest.$ac_ext >&5\n  fi\n  rm -f conftest* conftst*\n\n  # Do not use the global_symbol_pipe unless it works.\n  if test \"$pipe_works\" = yes; then\n    break\n  else\n    lt_cv_sys_global_symbol_pipe=\n  fi\ndone\n])\nif test -z \"$lt_cv_sys_global_symbol_pipe\"; then\n  lt_cv_sys_global_symbol_to_cdecl=\nfi\nif test -z \"$lt_cv_sys_global_symbol_pipe$lt_cv_sys_global_symbol_to_cdecl\"; then\n  AC_MSG_RESULT(failed)\nelse\n  AC_MSG_RESULT(ok)\nfi\n]) # AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE\n\n\n# AC_LIBTOOL_PROG_COMPILER_PIC([TAGNAME])\n# ---------------------------------------\nAC_DEFUN([AC_LIBTOOL_PROG_COMPILER_PIC],\n[_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)=\n_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=\n_LT_AC_TAGVAR(lt_prog_compiler_static, $1)=\n\nAC_MSG_CHECKING([for $compiler option to produce PIC])\n ifelse([$1],[CXX],[\n  # C++ specific cases for pic, static, wl, etc.\n  if test \"$GXX\" = yes; then\n    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n    aix*)\n      # All AIX code is PIC.\n      if test \"$host_cpu\" = ia64; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n    amigaos*)\n      # FIXME: we need at least 68020 code to build shared libraries, but\n      # adding the `-m68020' flag to GCC prevents building anything better,\n      # like `-m68040'.\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n      ;;\n    beos* | cygwin* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n    mingw* | os2* | pw32*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'\n      ;;\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n    *djgpp*)\n      # DJGPP does not support shared libraries at all\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=\n      ;;\n    interix3*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n    hpux*)\n      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but\n      # not for PA HP-UX.\n      case $host_cpu in\n      hppa*64*|ia64*)\n\t;;\n      *)\n\t_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n    *)\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n  else\n    case $host_os in\n      aix4* | aix5*)\n\t# All AIX code is PIC.\n\tif test \"$host_cpu\" = ia64; then\n\t  # AIX 5 now supports IA64 processor\n\t  _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\telse\n\t  _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n\tfi\n\t;;\n      chorus*)\n\tcase $cc_basename in\n\tcxch68*)\n\t  # Green Hills C++ Compiler\n\t  # _LT_AC_TAGVAR(lt_prog_compiler_static, $1)=\"--no_auto_instantiation -u __main -u __premain -u _abort -r $COOL_DIR/lib/libOrb.a $MVME_DIR/lib/CC/libC.a $MVME_DIR/lib/classix/libcx.s.a\"\n\t  ;;\n\tesac\n\t;;\n       darwin*)\n         # PIC is the default on this platform\n         # Common symbols not allowed in MH_DYLIB files\n         case $cc_basename in\n           xlc*)\n           _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-qnocommon'\n           _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n           ;;\n         esac\n       ;;\n      dgux*)\n\tcase $cc_basename in\n\t  ec++*)\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  ghcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      freebsd* | kfreebsd*-gnu | dragonfly*)\n\t# FreeBSD uses GNU C++\n\t;;\n      hpux9* | hpux10* | hpux11*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'\n\t    if test \"$host_cpu\" != ia64; then\n\t      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t    fi\n\t    ;;\n\t  aCC*)\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'\n\t    case $host_cpu in\n\t    hppa*64*|ia64*)\n\t      # +Z the default\n\t      ;;\n\t    *)\n\t      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t      ;;\n\t    esac\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      interix*)\n\t# This is c89, which is MS Visual C++ (no shared libs)\n\t# Anyone wants to do a port?\n\t;;\n      irix5* | irix6* | nonstopux*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    # CC pic flag -KPIC is the default.\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      linux*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    # KAI C++ Compiler\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t    ;;\n\t  icpc* | ecpc*)\n\t    # Intel C++\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\t    ;;\n\t  pgCC*)\n\t    # Portland Group C++ compiler.\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  cxx*)\n\t    # Compaq C++\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      lynxos*)\n\t;;\n      m88k*)\n\t;;\n      mvs*)\n\tcase $cc_basename in\n\t  cxx*)\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-W c,exportall'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      netbsd*)\n\t;;\n      osf3* | osf4* | osf5*)\n\tcase $cc_basename in\n\t  KCC*)\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'\n\t    ;;\n\t  RCC*)\n\t    # Rational C++ 2.4.1\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  cxx*)\n\t    # Digital/Compaq C++\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    # Make sure the PIC flag is empty.  It appears that all Alpha\n\t    # Linux and Compaq Tru64 Unix objects are PIC.\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      psos*)\n\t;;\n      solaris*)\n\tcase $cc_basename in\n\t  CC*)\n\t    # Sun C++ 4.2, 5.x and Centerline C++\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n\t    ;;\n\t  gcx*)\n\t    # Green Hills C++ Compiler\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sunos4*)\n\tcase $cc_basename in\n\t  CC*)\n\t    # Sun C++ 4.x\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\t  lcc*)\n\t    # Lucid\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      tandem*)\n\tcase $cc_basename in\n\t  NCC*)\n\t    # NonStop-UX NCC 3.20\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    ;;\n\t  *)\n\t    ;;\n\tesac\n\t;;\n      sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n\tcase $cc_basename in\n\t  CC*)\n\t    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n\t    ;;\n\tesac\n\t;;\n      vxworks*)\n\t;;\n      *)\n\t_LT_AC_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n\t;;\n    esac\n  fi\n],\n[\n  if test \"$GCC\" = yes; then\n    _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n    _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-static'\n\n    case $host_os in\n      aix*)\n      # All AIX code is PIC.\n      if test \"$host_cpu\" = ia64; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    amigaos*)\n      # FIXME: we need at least 68020 code to build shared libraries, but\n      # adding the `-m68020' flag to GCC prevents building anything better,\n      # like `-m68040'.\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'\n      ;;\n\n    beos* | cygwin* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)\n      # PIC is the default for these OSes.\n      ;;\n\n    mingw* | pw32* | os2*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'\n      ;;\n\n    darwin* | rhapsody*)\n      # PIC is the default on this platform\n      # Common symbols not allowed in MH_DYLIB files\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'\n      ;;\n\n    interix3*)\n      # Interix 3.x gcc -fpic/-fPIC options generate broken code.\n      # Instead, we relocate shared libraries at runtime.\n      ;;\n\n    msdosdjgpp*)\n      # Just because we use GCC doesn't mean we suddenly get shared libraries\n      # on systems that don't support them.\n      _LT_AC_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      enable_shared=no\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic\n      fi\n      ;;\n\n    hpux*)\n      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but\n      # not for PA HP-UX.\n      case $host_cpu in\n      hppa*64*|ia64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n\t;;\n      esac\n      ;;\n\n    *)\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n      ;;\n    esac\n  else\n    # PORTME Check for flag to pass linker flags through the system compiler.\n    case $host_os in\n    aix*)\n      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      if test \"$host_cpu\" = ia64; then\n\t# AIX 5 now supports IA64 processor\n\t_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      else\n\t_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'\n      fi\n      ;;\n      darwin*)\n        # PIC is the default on this platform\n        # Common symbols not allowed in MH_DYLIB files\n       case $cc_basename in\n         xlc*)\n         _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-qnocommon'\n         _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n         ;;\n       esac\n       ;;\n\n    mingw* | pw32* | os2*)\n      # This hack is so that the source file can tell whether it is being\n      # built for inclusion in a dll (and should export symbols for example).\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'\n      ;;\n\n    hpux9* | hpux10* | hpux11*)\n      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but\n      # not for PA HP-UX.\n      case $host_cpu in\n      hppa*64*|ia64*)\n\t# +Z the default\n\t;;\n      *)\n\t_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='+Z'\n\t;;\n      esac\n      # Is there a better lt_prog_compiler_static that works with the bundled CC?\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # PIC (with -KPIC) is the default.\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    newsos6)\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    linux*)\n      case $cc_basename in\n      icc* | ecc*)\n\t_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n\t_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-static'\n        ;;\n      pgcc* | pgf77* | pgf90* | pgf95*)\n        # Portland Group compilers (*not* the Pentium gcc compiler,\n\t# which looks to be a dead project)\n\t_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n\t_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'\n\t_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n        ;;\n      ccc*)\n        _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n        # All Alpha code is PIC.\n        _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n        ;;\n      esac\n      ;;\n\n    osf3* | osf4* | osf5*)\n      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      # All OSF/1 code is PIC.\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'\n      ;;\n\n    solaris*)\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      case $cc_basename in\n      f77* | f90* | f95*)\n\t_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld ';;\n      *)\n\t_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,';;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4 | sysv4.2uw2* | sysv4.3*)\n      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec ;then\n\t_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-Kconform_pic'\n\t_LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      fi\n      ;;\n\n    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)\n      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    unicos*)\n      _LT_AC_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'\n      _LT_AC_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n\n    uts4*)\n      _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-pic'\n      _LT_AC_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n      ;;\n\n    *)\n      _LT_AC_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no\n      ;;\n    esac\n  fi\n])\nAC_MSG_RESULT([$_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)])\n\n#\n# Check to make sure the PIC flag actually works.\n#\nif test -n \"$_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)\"; then\n  AC_LIBTOOL_COMPILER_OPTION([if $compiler PIC flag $_LT_AC_TAGVAR(lt_prog_compiler_pic, $1) works],\n    _LT_AC_TAGVAR(lt_prog_compiler_pic_works, $1),\n    [$_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)ifelse([$1],[],[ -DPIC],[ifelse([$1],[CXX],[ -DPIC],[])])], [],\n    [case $_LT_AC_TAGVAR(lt_prog_compiler_pic, $1) in\n     \"\" | \" \"*) ;;\n     *) _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=\" $_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)\" ;;\n     esac],\n    [_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=\n     _LT_AC_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no])\nfi\ncase $host_os in\n  # For platforms which do not support PIC, -DPIC is meaningless:\n  *djgpp*)\n    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=\n    ;;\n  *)\n    _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)=\"$_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)ifelse([$1],[],[ -DPIC],[ifelse([$1],[CXX],[ -DPIC],[])])\"\n    ;;\nesac\n\n#\n# Check to make sure the static flag actually works.\n#\nwl=$_LT_AC_TAGVAR(lt_prog_compiler_wl, $1) eval lt_tmp_static_flag=\\\"$_LT_AC_TAGVAR(lt_prog_compiler_static, $1)\\\"\nAC_LIBTOOL_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works],\n  _LT_AC_TAGVAR(lt_prog_compiler_static_works, $1),\n  $lt_tmp_static_flag,\n  [],\n  [_LT_AC_TAGVAR(lt_prog_compiler_static, $1)=])\n])\n\n\n# AC_LIBTOOL_PROG_LD_SHLIBS([TAGNAME])\n# ------------------------------------\n# See if the linker supports building shared libraries.\nAC_DEFUN([AC_LIBTOOL_PROG_LD_SHLIBS],\n[AC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])\nifelse([$1],[CXX],[\n  _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  case $host_os in\n  aix4* | aix5*)\n    # If we're using GNU nm, then we don't want the \"-C\" option.\n    # -C means demangle to AIX nm, but means don't demangle with GNU nm\n    if $NM -V 2>&1 | grep 'GNU' > /dev/null; then\n      _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\[$]2 == \"T\") || (\\[$]2 == \"D\") || (\\[$]2 == \"B\")) && ([substr](\\[$]3,1,1) != \".\")) { print \\[$]3 } }'\\'' | sort -u > $export_symbols'\n    else\n      _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\[$]2 == \"T\") || (\\[$]2 == \"D\") || (\\[$]2 == \"B\")) && ([substr](\\[$]3,1,1) != \".\")) { print \\[$]3 } }'\\'' | sort -u > $export_symbols'\n    fi\n    ;;\n  pw32*)\n    _LT_AC_TAGVAR(export_symbols_cmds, $1)=\"$ltdll_cmds\"\n  ;;\n  cygwin* | mingw*)\n    _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]] /s/.* \\([[^ ]]*\\)/\\1 DATA/;/^.* __nm__/s/^.* __nm__\\([[^ ]]*\\) [[^ ]]*/\\1 DATA/;/^I /d;/^[[AITW]] /s/.* //'\\'' | sort | uniq > $export_symbols'\n  ;;\n  *)\n    _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  ;;\n  esac\n],[\n  runpath_var=\n  _LT_AC_TAGVAR(allow_undefined_flag, $1)=\n  _LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=no\n  _LT_AC_TAGVAR(archive_cmds, $1)=\n  _LT_AC_TAGVAR(archive_expsym_cmds, $1)=\n  _LT_AC_TAGVAR(old_archive_From_new_cmds, $1)=\n  _LT_AC_TAGVAR(old_archive_from_expsyms_cmds, $1)=\n  _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)=\n  _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\n  _LT_AC_TAGVAR(thread_safe_flag_spec, $1)=\n  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)=\n  _LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)=\n  _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=\n  _LT_AC_TAGVAR(hardcode_direct, $1)=no\n  _LT_AC_TAGVAR(hardcode_minus_L, $1)=no\n  _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n  _LT_AC_TAGVAR(link_all_deplibs, $1)=unknown\n  _LT_AC_TAGVAR(hardcode_automatic, $1)=no\n  _LT_AC_TAGVAR(module_cmds, $1)=\n  _LT_AC_TAGVAR(module_expsym_cmds, $1)=\n  _LT_AC_TAGVAR(always_export_symbols, $1)=no\n  _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\\''s/.* //'\\'' | sort | uniq > $export_symbols'\n  # include_expsyms should be a list of space-separated symbols to be *always*\n  # included in the symbol list\n  _LT_AC_TAGVAR(include_expsyms, $1)=\n  # exclude_expsyms can be an extended regexp of symbols to exclude\n  # it will be wrapped by ` (' and `)$', so one must not match beginning or\n  # end of line.  Example: `a|bc|.*d.*' will exclude the symbols `a' and `bc',\n  # as well as any symbol that contains `d'.\n  _LT_AC_TAGVAR(exclude_expsyms, $1)=\"_GLOBAL_OFFSET_TABLE_\"\n  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out\n  # platforms (ab)use it in PIC code, but their linkers get confused if\n  # the symbol is explicitly referenced.  Since portable code cannot\n  # rely on this symbol name, it's probably fine to never include it in\n  # preloaded symbol tables.\n  extract_expsyms_cmds=\n  # Just being paranoid about ensuring that cc_basename is set.\n  _LT_CC_BASENAME([$compiler])\n  case $host_os in\n  cygwin* | mingw* | pw32*)\n    # FIXME: the MSVC++ port hasn't been tested in a loooong time\n    # When not using gcc, we currently assume that we are using\n    # Microsoft Visual C++.\n    if test \"$GCC\" != yes; then\n      with_gnu_ld=no\n    fi\n    ;;\n  interix*)\n    # we just hope/assume this is gcc and not c89 (= MSVC++)\n    with_gnu_ld=yes\n    ;;\n  openbsd*)\n    with_gnu_ld=no\n    ;;\n  esac\n\n  _LT_AC_TAGVAR(ld_shlibs, $1)=yes\n  if test \"$with_gnu_ld\" = yes; then\n    # If archive_cmds runs LD, not CC, wlarc should be empty\n    wlarc='${wl}'\n\n    # Set some defaults for GNU ld with shared library support. These\n    # are reset later if shared libraries are not supported. Putting them\n    # here allows them to be overridden if necessary.\n    runpath_var=LD_RUN_PATH\n    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}--rpath ${wl}$libdir'\n    _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'\n    # ancient GNU ld didn't support --whole-archive et. al.\n    if $LD --help 2>&1 | grep 'no-whole-archive' > /dev/null; then\n\t_LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\"$wlarc\"'--whole-archive$convenience '\"$wlarc\"'--no-whole-archive'\n      else\n  \t_LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n    supports_anon_versioning=no\n    case `$LD -v 2>/dev/null` in\n      *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.10.*) ;; # catch versions < 2.11\n      *\\ 2.11.93.0.2\\ *) supports_anon_versioning=yes ;; # RH7.3 ...\n      *\\ 2.11.92.0.12\\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...\n      *\\ 2.11.*) ;; # other 2.11 versions\n      *) supports_anon_versioning=yes ;;\n    esac\n\n    # See if GNU ld supports shared libraries.\n    case $host_os in\n    aix3* | aix4* | aix5*)\n      # On AIX/PPC, the GNU linker is very broken\n      if test \"$host_cpu\" != ia64; then\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\tcat <<EOF 1>&2\n\n*** Warning: the GNU linker, at least up to release 2.9.1, is reported\n*** to be unable to reliably create shared libraries on AIX.\n*** Therefore, libtool is disabling shared libraries support.  If you\n*** really care for shared libraries, you may want to modify your PATH\n*** so that a non-GNU linker is found, and then restart.\n\nEOF\n      fi\n      ;;\n\n    amigaos*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$rm $output_objdir/a2ixlibrary.data~$echo \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$echo \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$echo \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$echo \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n\n      # Samuel A. Falvo II <kc5tja@dolphin.openprojects.net> reports\n      # that the semantics of dynamic libraries on AmigaOS, at least up\n      # to version 4, is to share data among multiple programs linked\n      # with the same dynamic library.  Since this doesn't match the\n      # behavior of shared libraries on other platforms, we can't use\n      # them.\n      _LT_AC_TAGVAR(ld_shlibs, $1)=no\n      ;;\n\n    beos*)\n      if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported\n\t# Joseph Beckenbach <jrb3@best.com> says some releases of gcc\n\t# support --undefined.  This deserves some investigation.  FIXME\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n      else\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    cygwin* | mingw* | pw32*)\n      # _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,\n      # as there is no search path for DLLs.\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_AC_TAGVAR(always_export_symbols, $1)=no\n      _LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\\''/^[[BCDGRS]] /s/.* \\([[^ ]]*\\)/\\1 DATA/'\\'' | $SED -e '\\''/^[[AITW]] /s/.* //'\\'' | sort | uniq > $export_symbols'\n\n      if $LD --help 2>&1 | grep 'auto-import' > /dev/null; then\n        _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n\t# If the export-symbols file already is a .def file (1st line\n\t# is EXPORTS), use it as is; otherwise, prepend...\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='if test \"x`$SED 1q $export_symbols`\" = xEXPORTS; then\n\t  cp $export_symbols $output_objdir/$soname.def;\n\telse\n\t  echo EXPORTS > $output_objdir/$soname.def;\n\t  cat $export_symbols >> $output_objdir/$soname.def;\n\tfi~\n\t$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'\n      else\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    interix3*)\n      _LT_AC_TAGVAR(hardcode_direct, $1)=no\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.\n      # Instead, shared libraries are loaded at an image base (0x10000000 by\n      # default) and relocated if they conflict, which is a slow very memory\n      # consuming and fragmenting process.  To avoid this, we pick a random,\n      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link\n      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.\n      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed \"s,^,_,\" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \\* 262144 + 1342177280` -o $lib'\n      ;;\n\n    linux*)\n      if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then\n\ttmp_addflag=\n\tcase $cc_basename,$host_cpu in\n\tpgcc*)\t\t\t\t# Portland Group C compiler\n\t  _LT_AC_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; $echo \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t  tmp_addflag=' $pic_flag'\n\t  ;;\n\tpgf77* | pgf90* | pgf95*)\t# Portland Group f77 and f90 compilers\n\t  _LT_AC_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\\\"\\\"; do test  -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; $echo \\\"$new_convenience\\\"` ${wl}--no-whole-archive'\n\t  tmp_addflag=' $pic_flag -Mnomain' ;;\n\tecc*,ia64* | icc*,ia64*)\t\t# Intel C compiler on ia64\n\t  tmp_addflag=' -i_dynamic' ;;\n\tefc*,ia64* | ifort*,ia64*)\t# Intel Fortran compiler on ia64\n\t  tmp_addflag=' -i_dynamic -nofor_main' ;;\n\tifc* | ifort*)\t\t\t# Intel Fortran compiler\n\t  tmp_addflag=' -nofor_main' ;;\n\tesac\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared'\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\n\tif test $supports_anon_versioning = yes; then\n\t  _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo \"{ global:\" > $output_objdir/$libname.ver~\n  cat $export_symbols | sed -e \"s/\\(.*\\)/\\1;/\" >> $output_objdir/$libname.ver~\n  $echo \"local: *; };\" >> $output_objdir/$libname.ver~\n\t  $CC -shared'\"$tmp_addflag\"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'\n\tfi\n      else\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'\n\twlarc=\n      else\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n      fi\n      ;;\n\n    solaris*)\n      if $LD -v 2>&1 | grep 'BFD 2\\.8' > /dev/null; then\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\tcat <<EOF 1>&2\n\n*** Warning: The releases 2.8.* of the GNU linker cannot reliably\n*** create shared libraries on Solaris systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.9.1 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\nEOF\n      elif $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)\n      case `$LD -v 2>&1` in\n        *\\ [[01]].* | *\\ 2.[[0-9]].* | *\\ 2.1[[0-5]].*) \n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n\tcat <<_LT_EOF 1>&2\n\n*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 can not\n*** reliably create shared libraries on SCO systems.  Therefore, libtool\n*** is disabling shared libraries support.  We urge you to upgrade GNU\n*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify\n*** your PATH or compiler configuration so that the native linker is\n*** used, and then restart.\n\n_LT_EOF\n\t;;\n\t*)\n\t  if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then\n\t    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='`test -z \"$SCOABSPATH\" && echo ${wl}-rpath,$libdir`'\n\t    _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname,\\${SCOABSPATH:+${install_libdir}/}$soname -o $lib'\n\t    _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname,\\${SCOABSPATH:+${install_libdir}/}$soname,-retain-symbols-file,$export_symbols -o $lib'\n\t  else\n\t    _LT_AC_TAGVAR(ld_shlibs, $1)=no\n\t  fi\n\t;;\n      esac\n      ;;\n\n    sunos4*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      wlarc=\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      if $LD --help 2>&1 | grep ': supported targets:.* elf' > /dev/null; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n      else\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=no\n      fi\n      ;;\n    esac\n\n    if test \"$_LT_AC_TAGVAR(ld_shlibs, $1)\" = no; then\n      runpath_var=\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)=\n      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)=\n      _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=\n    fi\n  else\n    # PORTME fill in a description of your system's linker (not GNU ld)\n    case $host_os in\n    aix3*)\n      _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_AC_TAGVAR(always_export_symbols, $1)=yes\n      _LT_AC_TAGVAR(archive_expsym_cmds, $1)='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'\n      # Note: this linker hardcodes the directories in LIBPATH if there\n      # are no directories specified by -L.\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n      if test \"$GCC\" = yes && test -z \"$lt_prog_compiler_static\"; then\n\t# Neither direct hardcoding nor static linking is supported with a\n\t# broken collect2.\n\t_LT_AC_TAGVAR(hardcode_direct, $1)=unsupported\n      fi\n      ;;\n\n    aix4* | aix5*)\n      if test \"$host_cpu\" = ia64; then\n\t# On IA64, the linker does run time linking by default, so we don't\n\t# have to do anything special.\n\taix_use_runtimelinking=no\n\texp_sym_flag='-Bexport'\n\tno_entry_flag=\"\"\n      else\n\t# If we're using GNU nm, then we don't want the \"-C\" option.\n\t# -C means demangle to AIX nm, but means don't demangle with GNU nm\n\tif $NM -V 2>&1 | grep 'GNU' > /dev/null; then\n\t  _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\[$]2 == \"T\") || (\\[$]2 == \"D\") || (\\[$]2 == \"B\")) && ([substr](\\[$]3,1,1) != \".\")) { print \\[$]3 } }'\\'' | sort -u > $export_symbols'\n\telse\n\t  _LT_AC_TAGVAR(export_symbols_cmds, $1)='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\[$]2 == \"T\") || (\\[$]2 == \"D\") || (\\[$]2 == \"B\")) && ([substr](\\[$]3,1,1) != \".\")) { print \\[$]3 } }'\\'' | sort -u > $export_symbols'\n\tfi\n\taix_use_runtimelinking=no\n\n\t# Test if we are trying to use run time linking or normal\n\t# AIX style linking. If -brtl is somewhere in LDFLAGS, we\n\t# need to do runtime linking.\n\tcase $host_os in aix4.[[23]]|aix4.[[23]].*|aix5*)\n\t  for ld_flag in $LDFLAGS; do\n  \t  if (test $ld_flag = \"-brtl\" || test $ld_flag = \"-Wl,-brtl\"); then\n  \t    aix_use_runtimelinking=yes\n  \t    break\n  \t  fi\n\t  done\n\t  ;;\n\tesac\n\n\texp_sym_flag='-bexport'\n\tno_entry_flag='-bnoentry'\n      fi\n\n      # When large executables or shared objects are built, AIX ld can\n      # have problems creating the table of contents.  If linking a library\n      # or program results in \"error TOC overflow\" add -mminimal-toc to\n      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not\n      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.\n\n      _LT_AC_TAGVAR(archive_cmds, $1)=''\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n\n      if test \"$GCC\" = yes; then\n\tcase $host_os in aix4.[[012]]|aix4.[[012]].*)\n\t# We only want to do this on AIX 4.2 and lower, the check\n\t# below for broken collect2 doesn't work under 4.3+\n\t  collect2name=`${CC} -print-prog-name=collect2`\n\t  if test -f \"$collect2name\" && \\\n  \t   strings \"$collect2name\" | grep resolve_lib_name >/dev/null\n\t  then\n  \t  # We have reworked collect2\n  \t  _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n\t  else\n  \t  # We have old collect2\n  \t  _LT_AC_TAGVAR(hardcode_direct, $1)=unsupported\n  \t  # It fails to find uninstalled libraries when the uninstalled\n  \t  # path is not listed in the libpath.  Setting hardcode_minus_L\n  \t  # to unsupported forces relinking\n  \t  _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n  \t  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n  \t  _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=\n\t  fi\n\t  ;;\n\tesac\n\tshared_flag='-shared'\n\tif test \"$aix_use_runtimelinking\" = yes; then\n\t  shared_flag=\"$shared_flag \"'${wl}-G'\n\tfi\n      else\n\t# not using gcc\n\tif test \"$host_cpu\" = ia64; then\n  \t# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release\n  \t# chokes on -Wl,-G. The following line is correct:\n\t  shared_flag='-G'\n\telse\n\t  if test \"$aix_use_runtimelinking\" = yes; then\n\t    shared_flag='${wl}-G'\n\t  else\n\t    shared_flag='${wl}-bM:SRE'\n\t  fi\n\tfi\n      fi\n\n      # It seems that -bexpall does not export symbols beginning with\n      # underscore (_), so it is better to generate a list of symbols to export.\n      _LT_AC_TAGVAR(always_export_symbols, $1)=yes\n      if test \"$aix_use_runtimelinking\" = yes; then\n\t# Warning - without using the other runtime loading flags (-brtl),\n\t# -berok will link without error, but may produce a broken library.\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)='-berok'\n       # Determine the default libpath from the value encoded in an empty executable.\n       _LT_AC_SYS_LIBPATH_AIX\n       _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags `if test \"x${allow_undefined_flag}\" != \"x\"; then echo \"${wl}${allow_undefined_flag}\"; else :; fi` '\"\\${wl}$exp_sym_flag:\\$export_symbols $shared_flag\"\n       else\n\tif test \"$host_cpu\" = ia64; then\n\t  _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $libdir:/usr/lib:/lib'\n\t  _LT_AC_TAGVAR(allow_undefined_flag, $1)=\"-z nodefs\"\n\t  _LT_AC_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs '\"\\${wl}$no_entry_flag\"' $compiler_flags ${wl}${allow_undefined_flag} '\"\\${wl}$exp_sym_flag:\\$export_symbols\"\n\telse\n\t # Determine the default libpath from the value encoded in an empty executable.\n\t _LT_AC_SYS_LIBPATH_AIX\n\t _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'\"$aix_libpath\"\n\t  # Warning - without using the other run time loading flags,\n\t  # -berok will link without error, but may produce a broken library.\n\t  _LT_AC_TAGVAR(no_undefined_flag, $1)=' ${wl}-bernotok'\n\t  _LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-berok'\n\t  # Exported symbols can be pulled into shared objects from archives\n\t  _LT_AC_TAGVAR(whole_archive_flag_spec, $1)='$convenience'\n\t  _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=yes\n\t  # This is similar to how AIX traditionally builds its shared libraries.\n\t  _LT_AC_TAGVAR(archive_expsym_cmds, $1)=\"\\$CC $shared_flag\"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'\n\tfi\n      fi\n      ;;\n\n    amigaos*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$rm $output_objdir/a2ixlibrary.data~$echo \"#define NAME $libname\" > $output_objdir/a2ixlibrary.data~$echo \"#define LIBRARY_ID 1\" >> $output_objdir/a2ixlibrary.data~$echo \"#define VERSION $major\" >> $output_objdir/a2ixlibrary.data~$echo \"#define REVISION $revision\" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n      # see comment about different semantics on the GNU ld section\n      _LT_AC_TAGVAR(ld_shlibs, $1)=no\n      ;;\n\n    bsdi[[45]]*)\n      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)=-rdynamic\n      ;;\n\n    cygwin* | mingw* | pw32*)\n      # When not using gcc, we currently assume that we are using\n      # Microsoft Visual C++.\n      # hardcode_libdir_flag_spec is actually meaningless, as there is\n      # no search path for DLLs.\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)=' '\n      _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported\n      # Tell ltmain to make .lib files, not .a files.\n      libext=lib\n      # Tell ltmain to make .dll files, not .so files.\n      shrext_cmds=\".dll\"\n      # FIXME: Setting linknames here is a bad hack.\n      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -o $lib $libobjs $compiler_flags `echo \"$deplibs\" | $SED -e '\\''s/ -lc$//'\\''` -link -dll~linknames='\n      # The linker will automatically build a .lib file if we build a DLL.\n      _LT_AC_TAGVAR(old_archive_From_new_cmds, $1)='true'\n      # FIXME: Should let the user specify the lib program.\n      _LT_AC_TAGVAR(old_archive_cmds, $1)='lib /OUT:$oldlib$oldobjs$old_deplibs'\n      _LT_AC_TAGVAR(fix_srcfile_path, $1)='`cygpath -w \"$srcfile\"`'\n      _LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=yes\n      ;;\n\n    darwin* | rhapsody*)\n      case $host_os in\n        rhapsody* | darwin1.[[012]])\n         _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-undefined ${wl}suppress'\n         ;;\n       *) # Darwin 1.3 on\n         if test -z ${MACOSX_DEPLOYMENT_TARGET} ; then\n           _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-flat_namespace ${wl}-undefined ${wl}suppress'\n         else\n           case ${MACOSX_DEPLOYMENT_TARGET} in\n             10.[[012]])\n               _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-flat_namespace ${wl}-undefined ${wl}suppress'\n               ;;\n             10.*)\n               _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-undefined ${wl}dynamic_lookup'\n               ;;\n           esac\n         fi\n         ;;\n      esac\n      _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_AC_TAGVAR(hardcode_direct, $1)=no\n      _LT_AC_TAGVAR(hardcode_automatic, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=unsupported\n      _LT_AC_TAGVAR(whole_archive_flag_spec, $1)=''\n      _LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n    if test \"$GCC\" = yes ; then\n    \toutput_verbose_link_cmd='echo'\n        _LT_AC_TAGVAR(archive_cmds, $1)='$CC -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring'\n      _LT_AC_TAGVAR(module_cmds, $1)='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'\n      # Don't fix this by using the ld -exported_symbols_list flag, it doesn't exist in older darwin lds\n      _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n      _LT_AC_TAGVAR(module_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag  -o $lib -bundle $libobjs $deplibs$compiler_flags~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n    else\n      case $cc_basename in\n        xlc*)\n         output_verbose_link_cmd='echo'\n         _LT_AC_TAGVAR(archive_cmds, $1)='$CC -qmkshrobj $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-install_name ${wl}`echo $rpath/$soname` $verstring'\n         _LT_AC_TAGVAR(module_cmds, $1)='$CC $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'\n          # Don't fix this by using the ld -exported_symbols_list flag, it doesn't exist in older darwin lds\n         _LT_AC_TAGVAR(archive_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC -qmkshrobj $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-install_name ${wl}$rpath/$soname $verstring~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n          _LT_AC_TAGVAR(module_expsym_cmds, $1)='sed -e \"s,#.*,,\" -e \"s,^[    ]*,,\" -e \"s,^\\(..*\\),_&,\" < $export_symbols > $output_objdir/${libname}-symbols.expsym~$CC $allow_undefined_flag  -o $lib -bundle $libobjs $deplibs$compiler_flags~nmedit -s $output_objdir/${libname}-symbols.expsym ${lib}'\n          ;;\n       *)\n         _LT_AC_TAGVAR(ld_shlibs, $1)=no\n          ;;\n      esac\n    fi\n      ;;\n\n    dgux*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    freebsd1*)\n      _LT_AC_TAGVAR(ld_shlibs, $1)=no\n      ;;\n\n    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor\n    # support.  Future versions do this automatically, but an explicit c++rt0.o\n    # does not break anything, and helps significantly (at the cost of a little\n    # extra space).\n    freebsd2.2*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # Unfortunately, older versions of FreeBSD 2 do not have this feature.\n    freebsd2*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.\n    freebsd* | kfreebsd*-gnu | dragonfly*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -o $lib $libobjs $deplibs $compiler_flags'\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    hpux9*)\n      if test \"$GCC\" = yes; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$rm $output_objdir/$soname~$CC -shared -fPIC ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n      else\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$rm $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'\n      fi\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n\n      # hardcode_minus_L: Not really in the search PATH,\n      # but as the default location of the library.\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n      ;;\n\n    hpux10*)\n      if test \"$GCC\" = yes -a \"$with_gnu_ld\" = no; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      if test \"$with_gnu_ld\" = no; then\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n\t_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\t_LT_AC_TAGVAR(hardcode_direct, $1)=yes\n\t_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\n\t# hardcode_minus_L: Not really in the search PATH,\n\t# but as the default location of the library.\n\t_LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n      fi\n      ;;\n\n    hpux11*)\n      if test \"$GCC\" = yes -a \"$with_gnu_ld\" = no; then\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tesac\n      else\n\tcase $host_cpu in\n\thppa*64*)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tia64*)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\t*)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'\n\t  ;;\n\tesac\n      fi\n      if test \"$with_gnu_ld\" = no; then\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'\n\t_LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n\n\tcase $host_cpu in\n\thppa*64*|ia64*)\n\t  _LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)='+b $libdir'\n\t  _LT_AC_TAGVAR(hardcode_direct, $1)=no\n\t  _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n\t  ;;\n\t*)\n\t  _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n\t  _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n\n\t  # hardcode_minus_L: Not really in the search PATH,\n\t  # but as the default location of the library.\n\t  _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n\t  ;;\n\tesac\n      fi\n      ;;\n\n    irix5* | irix6* | nonstopux*)\n      if test \"$GCC\" = yes; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n      else\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -shared $libobjs $deplibs $linker_flags -soname $soname `test -n \"$verstring\" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec_ld, $1)='-rpath $libdir'\n      fi\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    netbsd*)\n      if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out\n      else\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF\n      fi\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    newsos6)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    openbsd*)\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      if test -z \"`echo __ELF__ | $CC -E - | grep __ELF__`\" || test \"$host_os-$host_cpu\" = \"openbsd2.8-powerpc\"; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-retain-symbols-file,$export_symbols'\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t_LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'\n      else\n       case $host_os in\n\t openbsd[[01]].* | openbsd2.[[0-7]] | openbsd2.[[0-7]].*)\n\t   _LT_AC_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n\t   _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n\t   ;;\n\t *)\n\t   _LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'\n\t   _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'\n\t   ;;\n       esac\n      fi\n      ;;\n\n    os2*)\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported\n      _LT_AC_TAGVAR(archive_cmds, $1)='$echo \"LIBRARY $libname INITINSTANCE\" > $output_objdir/$libname.def~$echo \"DESCRIPTION \\\"$libname\\\"\" >> $output_objdir/$libname.def~$echo DATA >> $output_objdir/$libname.def~$echo \" SINGLE NONSHARED\" >> $output_objdir/$libname.def~$echo EXPORTS >> $output_objdir/$libname.def~emxexp $libobjs >> $output_objdir/$libname.def~$CC -Zdll -Zcrtdll -o $lib $libobjs $deplibs $compiler_flags $output_objdir/$libname.def'\n      _LT_AC_TAGVAR(old_archive_From_new_cmds, $1)='emximp -o $output_objdir/$libname.a $output_objdir/$libname.def'\n      ;;\n\n    osf3*)\n      if test \"$GCC\" = yes; then\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n \"$verstring\" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n      else\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -shared${allow_undefined_flag} $libobjs $deplibs $linker_flags -soname $soname `test -n \"$verstring\" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'\n      fi\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    osf4* | osf5*)\t# as osf3* with the addition of -msym flag\n      if test \"$GCC\" = yes; then\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\\*'\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n \"$verstring\" && echo ${wl}-set_version ${wl}$verstring` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'\n      else\n\t_LT_AC_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \\*'\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -shared${allow_undefined_flag} $libobjs $deplibs $linker_flags -msym -soname $soname `test -n \"$verstring\" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf \"%s %s\\\\n\" -exported_symbol \"\\$i\" >> $lib.exp; done; echo \"-hidden\">> $lib.exp~\n\t$LD -shared${allow_undefined_flag} -input $lib.exp $linker_flags $libobjs $deplibs -soname $soname `test -n \"$verstring\" && echo -set_version $verstring` -update_registry ${output_objdir}/so_locations -o $lib~$rm $lib.exp'\n\n\t# Both c and cxx compiler support -rpath directly\n\t_LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'\n      fi\n      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=:\n      ;;\n\n    solaris*)\n      _LT_AC_TAGVAR(no_undefined_flag, $1)=' -z text'\n      if test \"$GCC\" = yes; then\n\twlarc='${wl}'\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~$echo \"local: *; };\" >> $lib.exp~\n\t  $CC -shared ${wl}-M ${wl}$lib.exp ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags~$rm $lib.exp'\n      else\n\twlarc=''\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$echo \"{ global:\" > $lib.exp~cat $export_symbols | $SED -e \"s/\\(.*\\)/\\1;/\" >> $lib.exp~$echo \"local: *; };\" >> $lib.exp~\n  \t$LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$rm $lib.exp'\n      fi\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      case $host_os in\n      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;\n      *)\n \t# The compiler driver will combine linker options so we\n \t# cannot just pass the convience library names through\n \t# without $wl, iff we do not link with $LD.\n \t# Luckily, gcc supports the same syntax we need for Sun Studio.\n \t# Supported since Solaris 2.6 (maybe 2.5.1?)\n \tcase $wlarc in\n \t'')\n \t  _LT_AC_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract' ;;\n \t*)\n \t  _LT_AC_TAGVAR(whole_archive_flag_spec, $1)='${wl}-z ${wl}allextract`for conv in $convenience\\\"\\\"; do test -n \\\"$conv\\\" && new_convenience=\\\"$new_convenience,$conv\\\"; done; $echo \\\"$new_convenience\\\"` ${wl}-z ${wl}defaultextract' ;;\n \tesac ;;\n      esac\n      _LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n      ;;\n\n    sunos4*)\n      if test \"x$host_vendor\" = xsequent; then\n\t# Use $CC to link under sequent, because it throws in some extra .o\n\t# files that make .init and .fini sections work.\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h $soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'\n      fi\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_AC_TAGVAR(hardcode_direct, $1)=yes\n      _LT_AC_TAGVAR(hardcode_minus_L, $1)=yes\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4)\n      case $host_vendor in\n\tsni)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_AC_TAGVAR(hardcode_direct, $1)=yes # is this really true???\n\t;;\n\tsiemens)\n\t  ## LD is ld it makes a PLAMLIB\n\t  ## CC just makes a GrossModule.\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_AC_TAGVAR(reload_cmds, $1)='$CC -r -o $output$reload_objs'\n\t  _LT_AC_TAGVAR(hardcode_direct, $1)=no\n        ;;\n\tmotorola)\n\t  _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t  _LT_AC_TAGVAR(hardcode_direct, $1)=no #Motorola manual says yes, but my tests say they lie\n\t;;\n      esac\n      runpath_var='LD_RUN_PATH'\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    sysv4.3*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='-Bexport'\n      ;;\n\n    sysv4*MP*)\n      if test -d /usr/nec; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n\t_LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n\trunpath_var=LD_RUN_PATH\n\thardcode_runpath_var=yes\n\t_LT_AC_TAGVAR(ld_shlibs, $1)=yes\n      fi\n      ;;\n\n    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7*)\n      _LT_AC_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n      _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      runpath_var='LD_RUN_PATH'\n\n      if test \"$GCC\" = yes; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    sysv5* | sco3.2v5* | sco5v6*)\n      # Note: We can NOT use -z defs as we might desire, because we do not\n      # link with -lc, and that would cause any symbols used from libc to\n      # always be unresolved, which means just about no library would\n      # ever link correctly.  If we're not using GNU ld we use -z text\n      # though, which does catch some bad symbols but isn't as heavy-handed\n      # as -z defs.\n      _LT_AC_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'\n      _LT_AC_TAGVAR(allow_undefined_flag, $1)='${wl}-z,nodefs'\n      _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='`test -z \"$SCOABSPATH\" && echo ${wl}-R,$libdir`'\n      _LT_AC_TAGVAR(hardcode_libdir_separator, $1)=':'\n      _LT_AC_TAGVAR(link_all_deplibs, $1)=yes\n      _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Bexport'\n      runpath_var='LD_RUN_PATH'\n\n      if test \"$GCC\" = yes; then\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,\\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,\\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'\n      else\n\t_LT_AC_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,\\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'\n\t_LT_AC_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,\\${SCOABSPATH:+${install_libdir}/}$soname -o $lib $libobjs $deplibs $compiler_flags'\n      fi\n      ;;\n\n    uts4*)\n      _LT_AC_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'\n      _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'\n      _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no\n      ;;\n\n    *)\n      _LT_AC_TAGVAR(ld_shlibs, $1)=no\n      ;;\n    esac\n  fi\n])\nAC_MSG_RESULT([$_LT_AC_TAGVAR(ld_shlibs, $1)])\ntest \"$_LT_AC_TAGVAR(ld_shlibs, $1)\" = no && can_build_shared=no\n\n#\n# Do we need to explicitly link libc?\n#\ncase \"x$_LT_AC_TAGVAR(archive_cmds_need_lc, $1)\" in\nx|xyes)\n  # Assume -lc should be added\n  _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=yes\n\n  if test \"$enable_shared\" = yes && test \"$GCC\" = yes; then\n    case $_LT_AC_TAGVAR(archive_cmds, $1) in\n    *'~'*)\n      # FIXME: we may have to deal with multi-command sequences.\n      ;;\n    '$CC '*)\n      # Test whether the compiler implicitly links with -lc since on some\n      # systems, -lgcc has to come before -lc. If gcc already passes -lc\n      # to ld, don't add -lc before -lgcc.\n      AC_MSG_CHECKING([whether -lc should be explicitly linked in])\n      $rm conftest*\n      printf \"$lt_simple_compile_test_code\" > conftest.$ac_ext\n\n      if AC_TRY_EVAL(ac_compile) 2>conftest.err; then\n        soname=conftest\n        lib=conftest\n        libobjs=conftest.$ac_objext\n        deplibs=\n        wl=$_LT_AC_TAGVAR(lt_prog_compiler_wl, $1)\n\tpic_flag=$_LT_AC_TAGVAR(lt_prog_compiler_pic, $1)\n        compiler_flags=-v\n        linker_flags=-v\n        verstring=\n        output_objdir=.\n        libname=conftest\n        lt_save_allow_undefined_flag=$_LT_AC_TAGVAR(allow_undefined_flag, $1)\n        _LT_AC_TAGVAR(allow_undefined_flag, $1)=\n        if AC_TRY_EVAL(_LT_AC_TAGVAR(archive_cmds, $1) 2\\>\\&1 \\| grep \\\" -lc \\\" \\>/dev/null 2\\>\\&1)\n        then\n\t  _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no\n        else\n\t  _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=yes\n        fi\n        _LT_AC_TAGVAR(allow_undefined_flag, $1)=$lt_save_allow_undefined_flag\n      else\n        cat conftest.err 1>&5\n      fi\n      $rm conftest*\n      AC_MSG_RESULT([$_LT_AC_TAGVAR(archive_cmds_need_lc, $1)])\n      ;;\n    esac\n  fi\n  ;;\nesac\n])# AC_LIBTOOL_PROG_LD_SHLIBS\n\n\n# _LT_AC_FILE_LTDLL_C\n# -------------------\n# Be careful that the start marker always follows a newline.\nAC_DEFUN([_LT_AC_FILE_LTDLL_C], [\n# /* ltdll.c starts here */\n# #define WIN32_LEAN_AND_MEAN\n# #include <windows.h>\n# #undef WIN32_LEAN_AND_MEAN\n# #include <stdio.h>\n#\n# #ifndef __CYGWIN__\n# #  ifdef __CYGWIN32__\n# #    define __CYGWIN__ __CYGWIN32__\n# #  endif\n# #endif\n#\n# #ifdef __cplusplus\n# extern \"C\" {\n# #endif\n# BOOL APIENTRY DllMain (HINSTANCE hInst, DWORD reason, LPVOID reserved);\n# #ifdef __cplusplus\n# }\n# #endif\n#\n# #ifdef __CYGWIN__\n# #include <cygwin/cygwin_dll.h>\n# DECLARE_CYGWIN_DLL( DllMain );\n# #endif\n# HINSTANCE __hDllInstance_base;\n#\n# BOOL APIENTRY\n# DllMain (HINSTANCE hInst, DWORD reason, LPVOID reserved)\n# {\n#   __hDllInstance_base = hInst;\n#   return TRUE;\n# }\n# /* ltdll.c ends here */\n])# _LT_AC_FILE_LTDLL_C\n\n\n# _LT_AC_TAGVAR(VARNAME, [TAGNAME])\n# ---------------------------------\nAC_DEFUN([_LT_AC_TAGVAR], [ifelse([$2], [], [$1], [$1_$2])])\n\n\n# old names\nAC_DEFUN([AM_PROG_LIBTOOL],   [AC_PROG_LIBTOOL])\nAC_DEFUN([AM_ENABLE_SHARED],  [AC_ENABLE_SHARED($@)])\nAC_DEFUN([AM_ENABLE_STATIC],  [AC_ENABLE_STATIC($@)])\nAC_DEFUN([AM_DISABLE_SHARED], [AC_DISABLE_SHARED($@)])\nAC_DEFUN([AM_DISABLE_STATIC], [AC_DISABLE_STATIC($@)])\nAC_DEFUN([AM_PROG_LD],        [AC_PROG_LD])\nAC_DEFUN([AM_PROG_NM],        [AC_PROG_NM])\n\n# This is just to silence aclocal about the macro not being used\nifelse([AC_DISABLE_FAST_INSTALL])\n\nAC_DEFUN([LT_AC_PROG_GCJ],\n[AC_CHECK_TOOL(GCJ, gcj, no)\n  test \"x${GCJFLAGS+set}\" = xset || GCJFLAGS=\"-g -O2\"\n  AC_SUBST(GCJFLAGS)\n])\n\nAC_DEFUN([LT_AC_PROG_RC],\n[AC_CHECK_TOOL(RC, windres, no)\n])\n\n# NOTE: This macro has been submitted for inclusion into   #\n#  GNU Autoconf as AC_PROG_SED.  When it is available in   #\n#  a released version of Autoconf we should remove this    #\n#  macro and use it instead.                               #\n# LT_AC_PROG_SED\n# --------------\n# Check for a fully-functional sed program, that truncates\n# as few characters as possible.  Prefer GNU sed if found.\nAC_DEFUN([LT_AC_PROG_SED],\n[AC_MSG_CHECKING([for a sed that does not truncate output])\nAC_CACHE_VAL(lt_cv_path_SED,\n[# Loop through the user's path and test for sed and gsed.\n# Then use that list of sed's as ones to test for truncation.\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n  for lt_ac_prog in sed gsed; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      if $as_executable_p \"$as_dir/$lt_ac_prog$ac_exec_ext\"; then\n        lt_ac_sed_list=\"$lt_ac_sed_list $as_dir/$lt_ac_prog$ac_exec_ext\"\n      fi\n    done\n  done\ndone\nlt_ac_max=0\nlt_ac_count=0\n# Add /usr/xpg4/bin/sed as it is typically found on Solaris\n# along with /bin/sed that truncates output.\nfor lt_ac_sed in $lt_ac_sed_list /usr/xpg4/bin/sed; do\n  test ! -f $lt_ac_sed && continue\n  cat /dev/null > conftest.in\n  lt_ac_count=0\n  echo $ECHO_N \"0123456789$ECHO_C\" >conftest.in\n  # Check for GNU sed and select it if it is found.\n  if \"$lt_ac_sed\" --version 2>&1 < /dev/null | grep 'GNU' > /dev/null; then\n    lt_cv_path_SED=$lt_ac_sed\n    break\n  fi\n  while true; do\n    cat conftest.in conftest.in >conftest.tmp\n    mv conftest.tmp conftest.in\n    cp conftest.in conftest.nl\n    echo >>conftest.nl\n    $lt_ac_sed -e 's/a$//' < conftest.nl >conftest.out || break\n    cmp -s conftest.out conftest.nl || break\n    # 10000 chars as input seems more than enough\n    test $lt_ac_count -gt 10 && break\n    lt_ac_count=`expr $lt_ac_count + 1`\n    if test $lt_ac_count -gt $lt_ac_max; then\n      lt_ac_max=$lt_ac_count\n      lt_cv_path_SED=$lt_ac_sed\n    fi\n  done\ndone\n])\nSED=$lt_cv_path_SED\nAC_MSG_RESULT([$SED])\n])\n\n# Copyright (C) 2002, 2003, 2005  Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_AUTOMAKE_VERSION(VERSION)\n# ----------------------------\n# Automake X.Y traces this macro to ensure aclocal.m4 has been\n# generated from the m4 files accompanying Automake X.Y.\nAC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version=\"1.9\"])\n\n# AM_SET_CURRENT_AUTOMAKE_VERSION\n# -------------------------------\n# Call AM_AUTOMAKE_VERSION so it can be traced.\n# This function is AC_REQUIREd by AC_INIT_AUTOMAKE.\nAC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],\n\t [AM_AUTOMAKE_VERSION([1.9.6])])\n\n# AM_AUX_DIR_EXPAND                                         -*- Autoconf -*-\n\n# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# For projects using AC_CONFIG_AUX_DIR([foo]), Autoconf sets\n# $ac_aux_dir to `$srcdir/foo'.  In other projects, it is set to\n# `$srcdir', `$srcdir/..', or `$srcdir/../..'.\n#\n# Of course, Automake must honor this variable whenever it calls a\n# tool from the auxiliary directory.  The problem is that $srcdir (and\n# therefore $ac_aux_dir as well) can be either absolute or relative,\n# depending on how configure is run.  This is pretty annoying, since\n# it makes $ac_aux_dir quite unusable in subdirectories: in the top\n# source directory, any form will work fine, but in subdirectories a\n# relative path needs to be adjusted first.\n#\n# $ac_aux_dir/missing\n#    fails when called from a subdirectory if $ac_aux_dir is relative\n# $top_srcdir/$ac_aux_dir/missing\n#    fails if $ac_aux_dir is absolute,\n#    fails when called from a subdirectory in a VPATH build with\n#          a relative $ac_aux_dir\n#\n# The reason of the latter failure is that $top_srcdir and $ac_aux_dir\n# are both prefixed by $srcdir.  In an in-source build this is usually\n# harmless because $srcdir is `.', but things will broke when you\n# start a VPATH build or use an absolute $srcdir.\n#\n# So we could use something similar to $top_srcdir/$ac_aux_dir/missing,\n# iff we strip the leading $srcdir from $ac_aux_dir.  That would be:\n#   am_aux_dir='\\$(top_srcdir)/'`expr \"$ac_aux_dir\" : \"$srcdir//*\\(.*\\)\"`\n# and then we would define $MISSING as\n#   MISSING=\"\\${SHELL} $am_aux_dir/missing\"\n# This will work as long as MISSING is not called from configure, because\n# unfortunately $(top_srcdir) has no meaning in configure.\n# However there are other variables, like CC, which are often used in\n# configure, and could therefore not use this \"fixed\" $ac_aux_dir.\n#\n# Another solution, used here, is to always expand $ac_aux_dir to an\n# absolute PATH.  The drawback is that using absolute paths prevent a\n# configured tree to be moved without reconfiguration.\n\nAC_DEFUN([AM_AUX_DIR_EXPAND],\n[dnl Rely on autoconf to set up CDPATH properly.\nAC_PREREQ([2.50])dnl\n# expand $ac_aux_dir to an absolute path\nam_aux_dir=`cd $ac_aux_dir && pwd`\n])\n\n# AM_CONDITIONAL                                            -*- Autoconf -*-\n\n# Copyright (C) 1997, 2000, 2001, 2003, 2004, 2005\n# Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# serial 7\n\n# AM_CONDITIONAL(NAME, SHELL-CONDITION)\n# -------------------------------------\n# Define a conditional.\nAC_DEFUN([AM_CONDITIONAL],\n[AC_PREREQ(2.52)dnl\n ifelse([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],\n\t[$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl\nAC_SUBST([$1_TRUE])\nAC_SUBST([$1_FALSE])\nif $2; then\n  $1_TRUE=\n  $1_FALSE='#'\nelse\n  $1_TRUE='#'\n  $1_FALSE=\nfi\nAC_CONFIG_COMMANDS_PRE(\n[if test -z \"${$1_TRUE}\" && test -z \"${$1_FALSE}\"; then\n  AC_MSG_ERROR([[conditional \"$1\" was never defined.\nUsually this means the macro was only invoked conditionally.]])\nfi])])\n\n\n# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005\n# Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# serial 8\n\n# There are a few dirty hacks below to avoid letting `AC_PROG_CC' be\n# written in clear, in which case automake, when reading aclocal.m4,\n# will think it sees a *use*, and therefore will trigger all it's\n# C support machinery.  Also note that it means that autoscan, seeing\n# CC etc. in the Makefile, will ask for an AC_PROG_CC use...\n\n\n# _AM_DEPENDENCIES(NAME)\n# ----------------------\n# See how the compiler implements dependency checking.\n# NAME is \"CC\", \"CXX\", \"GCJ\", or \"OBJC\".\n# We try a few techniques and use that to set a single cache variable.\n#\n# We don't AC_REQUIRE the corresponding AC_PROG_CC since the latter was\n# modified to invoke _AM_DEPENDENCIES(CC); we would have a circular\n# dependency, and given that the user is not expected to run this macro,\n# just rely on AC_PROG_CC.\nAC_DEFUN([_AM_DEPENDENCIES],\n[AC_REQUIRE([AM_SET_DEPDIR])dnl\nAC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl\nAC_REQUIRE([AM_MAKE_INCLUDE])dnl\nAC_REQUIRE([AM_DEP_TRACK])dnl\n\nifelse([$1], CC,   [depcc=\"$CC\"   am_compiler_list=],\n       [$1], CXX,  [depcc=\"$CXX\"  am_compiler_list=],\n       [$1], OBJC, [depcc=\"$OBJC\" am_compiler_list='gcc3 gcc'],\n       [$1], GCJ,  [depcc=\"$GCJ\"  am_compiler_list='gcc3 gcc'],\n                   [depcc=\"$$1\"   am_compiler_list=])\n\nAC_CACHE_CHECK([dependency style of $depcc],\n               [am_cv_$1_dependencies_compiler_type],\n[if test -z \"$AMDEP_TRUE\" && test -f \"$am_depcomp\"; then\n  # We make a subdir and do the tests there.  Otherwise we can end up\n  # making bogus files that we don't know about and never remove.  For\n  # instance it was reported that on HP-UX the gcc test will end up\n  # making a dummy file named `D' -- because `-MD' means `put the output\n  # in D'.\n  mkdir conftest.dir\n  # Copy depcomp to subdir because otherwise we won't find it if we're\n  # using a relative directory.\n  cp \"$am_depcomp\" conftest.dir\n  cd conftest.dir\n  # We will build objects and dependencies in a subdirectory because\n  # it helps to detect inapplicable dependency modes.  For instance\n  # both Tru64's cc and ICC support -MD to output dependencies as a\n  # side effect of compilation, but ICC will put the dependencies in\n  # the current directory while Tru64 will put them in the object\n  # directory.\n  mkdir sub\n\n  am_cv_$1_dependencies_compiler_type=none\n  if test \"$am_compiler_list\" = \"\"; then\n     am_compiler_list=`sed -n ['s/^#*\\([a-zA-Z0-9]*\\))$/\\1/p'] < ./depcomp`\n  fi\n  for depmode in $am_compiler_list; do\n    # Setup a source with many dependencies, because some compilers\n    # like to wrap large dependency lists on column 80 (with \\), and\n    # we should not choose a depcomp mode which is confused by this.\n    #\n    # We need to recreate these files for each test, as the compiler may\n    # overwrite some of them when testing with obscure command lines.\n    # This happens at least with the AIX C compiler.\n    : > sub/conftest.c\n    for i in 1 2 3 4 5 6; do\n      echo '#include \"conftst'$i'.h\"' >> sub/conftest.c\n      # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with\n      # Solaris 8's {/usr,}/bin/sh.\n      touch sub/conftst$i.h\n    done\n    echo \"${am__include} ${am__quote}sub/conftest.Po${am__quote}\" > confmf\n\n    case $depmode in\n    nosideeffect)\n      # after this tag, mechanisms are not by side-effect, so they'll\n      # only be used when explicitly requested\n      if test \"x$enable_dependency_tracking\" = xyes; then\n\tcontinue\n      else\n\tbreak\n      fi\n      ;;\n    none) break ;;\n    esac\n    # We check with `-c' and `-o' for the sake of the \"dashmstdout\"\n    # mode.  It turns out that the SunPro C++ compiler does not properly\n    # handle `-M -o', and we need to detect this.\n    if depmode=$depmode \\\n       source=sub/conftest.c object=sub/conftest.${OBJEXT-o} \\\n       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \\\n       $SHELL ./depcomp $depcc -c -o sub/conftest.${OBJEXT-o} sub/conftest.c \\\n         >/dev/null 2>conftest.err &&\n       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&\n       grep sub/conftest.${OBJEXT-o} sub/conftest.Po > /dev/null 2>&1 &&\n       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then\n      # icc doesn't choke on unknown options, it will just issue warnings\n      # or remarks (even with -Werror).  So we grep stderr for any message\n      # that says an option was ignored or not supported.\n      # When given -MP, icc 7.0 and 7.1 complain thusly:\n      #   icc: Command line warning: ignoring option '-M'; no argument required\n      # The diagnosis changed in icc 8.0:\n      #   icc: Command line remark: option '-MP' not supported\n      if (grep 'ignoring option' conftest.err ||\n          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else\n        am_cv_$1_dependencies_compiler_type=$depmode\n        break\n      fi\n    fi\n  done\n\n  cd ..\n  rm -rf conftest.dir\nelse\n  am_cv_$1_dependencies_compiler_type=none\nfi\n])\nAC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])\nAM_CONDITIONAL([am__fastdep$1], [\n  test \"x$enable_dependency_tracking\" != xno \\\n  && test \"$am_cv_$1_dependencies_compiler_type\" = gcc3])\n])\n\n\n# AM_SET_DEPDIR\n# -------------\n# Choose a directory name for dependency files.\n# This macro is AC_REQUIREd in _AM_DEPENDENCIES\nAC_DEFUN([AM_SET_DEPDIR],\n[AC_REQUIRE([AM_SET_LEADING_DOT])dnl\nAC_SUBST([DEPDIR], [\"${am__leading_dot}deps\"])dnl\n])\n\n\n# AM_DEP_TRACK\n# ------------\nAC_DEFUN([AM_DEP_TRACK],\n[AC_ARG_ENABLE(dependency-tracking,\n[  --disable-dependency-tracking  speeds up one-time build\n  --enable-dependency-tracking   do not reject slow dependency extractors])\nif test \"x$enable_dependency_tracking\" != xno; then\n  am_depcomp=\"$ac_aux_dir/depcomp\"\n  AMDEPBACKSLASH='\\'\nfi\nAM_CONDITIONAL([AMDEP], [test \"x$enable_dependency_tracking\" != xno])\nAC_SUBST([AMDEPBACKSLASH])\n])\n\n# Generate code to set up dependency tracking.              -*- Autoconf -*-\n\n# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005\n# Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n#serial 3\n\n# _AM_OUTPUT_DEPENDENCY_COMMANDS\n# ------------------------------\nAC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS],\n[for mf in $CONFIG_FILES; do\n  # Strip MF so we end up with the name of the file.\n  mf=`echo \"$mf\" | sed -e 's/:.*$//'`\n  # Check whether this is an Automake generated Makefile or not.\n  # We used to match only the files named `Makefile.in', but\n  # some people rename them; so instead we look at the file content.\n  # Grep'ing the first line is not enough: some people post-process\n  # each Makefile.in and add a new line on top of each file to say so.\n  # So let's grep whole file.\n  if grep '^#.*generated by automake' $mf > /dev/null 2>&1; then\n    dirpart=`AS_DIRNAME(\"$mf\")`\n  else\n    continue\n  fi\n  # Extract the definition of DEPDIR, am__include, and am__quote\n  # from the Makefile without running `make'.\n  DEPDIR=`sed -n 's/^DEPDIR = //p' < \"$mf\"`\n  test -z \"$DEPDIR\" && continue\n  am__include=`sed -n 's/^am__include = //p' < \"$mf\"`\n  test -z \"am__include\" && continue\n  am__quote=`sed -n 's/^am__quote = //p' < \"$mf\"`\n  # When using ansi2knr, U may be empty or an underscore; expand it\n  U=`sed -n 's/^U = //p' < \"$mf\"`\n  # Find all dependency output files, they are included files with\n  # $(DEPDIR) in their names.  We invoke sed twice because it is the\n  # simplest approach to changing $(DEPDIR) to its actual value in the\n  # expansion.\n  for file in `sed -n \"\n    s/^$am__include $am__quote\\(.*(DEPDIR).*\\)$am__quote\"'$/\\1/p' <\"$mf\" | \\\n       sed -e 's/\\$(DEPDIR)/'\"$DEPDIR\"'/g' -e 's/\\$U/'\"$U\"'/g'`; do\n    # Make sure the directory exists.\n    test -f \"$dirpart/$file\" && continue\n    fdir=`AS_DIRNAME([\"$file\"])`\n    AS_MKDIR_P([$dirpart/$fdir])\n    # echo \"creating $dirpart/$file\"\n    echo '# dummy' > \"$dirpart/$file\"\n  done\ndone\n])# _AM_OUTPUT_DEPENDENCY_COMMANDS\n\n\n# AM_OUTPUT_DEPENDENCY_COMMANDS\n# -----------------------------\n# This macro should only be invoked once -- use via AC_REQUIRE.\n#\n# This code is only required when automatic dependency tracking\n# is enabled.  FIXME.  This creates each `.P' file that we will\n# need in order to bootstrap the dependency handling code.\nAC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS],\n[AC_CONFIG_COMMANDS([depfiles],\n     [test x\"$AMDEP_TRUE\" != x\"\" || _AM_OUTPUT_DEPENDENCY_COMMANDS],\n     [AMDEP_TRUE=\"$AMDEP_TRUE\" ac_aux_dir=\"$ac_aux_dir\"])\n])\n\n# Do all the work for Automake.                             -*- Autoconf -*-\n\n# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n# Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# serial 12\n\n# This macro actually does too much.  Some checks are only needed if\n# your package does certain things.  But this isn't really a big deal.\n\n# AM_INIT_AUTOMAKE(PACKAGE, VERSION, [NO-DEFINE])\n# AM_INIT_AUTOMAKE([OPTIONS])\n# -----------------------------------------------\n# The call with PACKAGE and VERSION arguments is the old style\n# call (pre autoconf-2.50), which is being phased out.  PACKAGE\n# and VERSION should now be passed to AC_INIT and removed from\n# the call to AM_INIT_AUTOMAKE.\n# We support both call styles for the transition.  After\n# the next Automake release, Autoconf can make the AC_INIT\n# arguments mandatory, and then we can depend on a new Autoconf\n# release and drop the old call support.\nAC_DEFUN([AM_INIT_AUTOMAKE],\n[AC_PREREQ([2.58])dnl\ndnl Autoconf wants to disallow AM_ names.  We explicitly allow\ndnl the ones we care about.\nm4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl\nAC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl\nAC_REQUIRE([AC_PROG_INSTALL])dnl\n# test to see if srcdir already configured\nif test \"`cd $srcdir && pwd`\" != \"`pwd`\" &&\n   test -f $srcdir/config.status; then\n  AC_MSG_ERROR([source directory already configured; run \"make distclean\" there first])\nfi\n\n# test whether we have cygpath\nif test -z \"$CYGPATH_W\"; then\n  if (cygpath --version) >/dev/null 2>/dev/null; then\n    CYGPATH_W='cygpath -w'\n  else\n    CYGPATH_W=echo\n  fi\nfi\nAC_SUBST([CYGPATH_W])\n\n# Define the identity of the package.\ndnl Distinguish between old-style and new-style calls.\nm4_ifval([$2],\n[m4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl\n AC_SUBST([PACKAGE], [$1])dnl\n AC_SUBST([VERSION], [$2])],\n[_AM_SET_OPTIONS([$1])dnl\n AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl\n AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl\n\n_AM_IF_OPTION([no-define],,\n[AC_DEFINE_UNQUOTED(PACKAGE, \"$PACKAGE\", [Name of package])\n AC_DEFINE_UNQUOTED(VERSION, \"$VERSION\", [Version number of package])])dnl\n\n# Some tools Automake needs.\nAC_REQUIRE([AM_SANITY_CHECK])dnl\nAC_REQUIRE([AC_ARG_PROGRAM])dnl\nAM_MISSING_PROG(ACLOCAL, aclocal-${am__api_version})\nAM_MISSING_PROG(AUTOCONF, autoconf)\nAM_MISSING_PROG(AUTOMAKE, automake-${am__api_version})\nAM_MISSING_PROG(AUTOHEADER, autoheader)\nAM_MISSING_PROG(MAKEINFO, makeinfo)\nAM_PROG_INSTALL_SH\nAM_PROG_INSTALL_STRIP\nAC_REQUIRE([AM_PROG_MKDIR_P])dnl\n# We need awk for the \"check\" target.  The system \"awk\" is bad on\n# some platforms.\nAC_REQUIRE([AC_PROG_AWK])dnl\nAC_REQUIRE([AC_PROG_MAKE_SET])dnl\nAC_REQUIRE([AM_SET_LEADING_DOT])dnl\n_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],\n              [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],\n\t      \t\t     [_AM_PROG_TAR([v7])])])\n_AM_IF_OPTION([no-dependencies],,\n[AC_PROVIDE_IFELSE([AC_PROG_CC],\n                  [_AM_DEPENDENCIES(CC)],\n                  [define([AC_PROG_CC],\n                          defn([AC_PROG_CC])[_AM_DEPENDENCIES(CC)])])dnl\nAC_PROVIDE_IFELSE([AC_PROG_CXX],\n                  [_AM_DEPENDENCIES(CXX)],\n                  [define([AC_PROG_CXX],\n                          defn([AC_PROG_CXX])[_AM_DEPENDENCIES(CXX)])])dnl\n])\n])\n\n\n# When config.status generates a header, we must update the stamp-h file.\n# This file resides in the same directory as the config header\n# that is generated.  The stamp files are numbered to have different names.\n\n# Autoconf calls _AC_AM_CONFIG_HEADER_HOOK (when defined) in the\n# loop where config.status creates the headers, so we can generate\n# our stamp files there.\nAC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK],\n[# Compute $1's index in $config_headers.\n_am_stamp_count=1\nfor _am_header in $config_headers :; do\n  case $_am_header in\n    $1 | $1:* )\n      break ;;\n    * )\n      _am_stamp_count=`expr $_am_stamp_count + 1` ;;\n  esac\ndone\necho \"timestamp for $1\" >`AS_DIRNAME([$1])`/stamp-h[]$_am_stamp_count])\n\n# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_PROG_INSTALL_SH\n# ------------------\n# Define $install_sh.\nAC_DEFUN([AM_PROG_INSTALL_SH],\n[AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl\ninstall_sh=${install_sh-\"$am_aux_dir/install-sh\"}\nAC_SUBST(install_sh)])\n\n# Copyright (C) 2003, 2005  Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# serial 2\n\n# Check whether the underlying file-system supports filenames\n# with a leading dot.  For instance MS-DOS doesn't.\nAC_DEFUN([AM_SET_LEADING_DOT],\n[rm -rf .tst 2>/dev/null\nmkdir .tst 2>/dev/null\nif test -d .tst; then\n  am__leading_dot=.\nelse\n  am__leading_dot=_\nfi\nrmdir .tst 2>/dev/null\nAC_SUBST([am__leading_dot])])\n\n# Check to see how 'make' treats includes.\t            -*- Autoconf -*-\n\n# Copyright (C) 2001, 2002, 2003, 2005  Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# serial 3\n\n# AM_MAKE_INCLUDE()\n# -----------------\n# Check to see how make treats includes.\nAC_DEFUN([AM_MAKE_INCLUDE],\n[am_make=${MAKE-make}\ncat > confinc << 'END'\nam__doit:\n\t@echo done\n.PHONY: am__doit\nEND\n# If we don't find an include directive, just comment out the code.\nAC_MSG_CHECKING([for style of include used by $am_make])\nam__include=\"#\"\nam__quote=\n_am_result=none\n# First try GNU make style include.\necho \"include confinc\" > confmf\n# We grep out `Entering directory' and `Leaving directory'\n# messages which can occur if `w' ends up in MAKEFLAGS.\n# In particular we don't look at `^make:' because GNU make might\n# be invoked under some other name (usually \"gmake\"), in which\n# case it prints its new name instead of `make'.\nif test \"`$am_make -s -f confmf 2> /dev/null | grep -v 'ing directory'`\" = \"done\"; then\n   am__include=include\n   am__quote=\n   _am_result=GNU\nfi\n# Now try BSD make style include.\nif test \"$am__include\" = \"#\"; then\n   echo '.include \"confinc\"' > confmf\n   if test \"`$am_make -s -f confmf 2> /dev/null`\" = \"done\"; then\n      am__include=.include\n      am__quote=\"\\\"\"\n      _am_result=BSD\n   fi\nfi\nAC_SUBST([am__include])\nAC_SUBST([am__quote])\nAC_MSG_RESULT([$_am_result])\nrm -f confinc confmf\n])\n\n# Fake the existence of programs that GNU maintainers use.  -*- Autoconf -*-\n\n# Copyright (C) 1997, 1999, 2000, 2001, 2003, 2005\n# Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# serial 4\n\n# AM_MISSING_PROG(NAME, PROGRAM)\n# ------------------------------\nAC_DEFUN([AM_MISSING_PROG],\n[AC_REQUIRE([AM_MISSING_HAS_RUN])\n$1=${$1-\"${am_missing_run}$2\"}\nAC_SUBST($1)])\n\n\n# AM_MISSING_HAS_RUN\n# ------------------\n# Define MISSING if not defined so far and test if it supports --run.\n# If it does, set am_missing_run to use it, otherwise, to nothing.\nAC_DEFUN([AM_MISSING_HAS_RUN],\n[AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl\ntest x\"${MISSING+set}\" = xset || MISSING=\"\\${SHELL} $am_aux_dir/missing\"\n# Use eval to expand $SHELL\nif eval \"$MISSING --run true\"; then\n  am_missing_run=\"$MISSING --run \"\nelse\n  am_missing_run=\n  AC_MSG_WARN([`missing' script is too old or missing])\nfi\n])\n\n# Copyright (C) 2003, 2004, 2005  Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_PROG_MKDIR_P\n# ---------------\n# Check whether `mkdir -p' is supported, fallback to mkinstalldirs otherwise.\n#\n# Automake 1.8 used `mkdir -m 0755 -p --' to ensure that directories\n# created by `make install' are always world readable, even if the\n# installer happens to have an overly restrictive umask (e.g. 077).\n# This was a mistake.  There are at least two reasons why we must not\n# use `-m 0755':\n#   - it causes special bits like SGID to be ignored,\n#   - it may be too restrictive (some setups expect 775 directories).\n#\n# Do not use -m 0755 and let people choose whatever they expect by\n# setting umask.\n#\n# We cannot accept any implementation of `mkdir' that recognizes `-p'.\n# Some implementations (such as Solaris 8's) are not thread-safe: if a\n# parallel make tries to run `mkdir -p a/b' and `mkdir -p a/c'\n# concurrently, both version can detect that a/ is missing, but only\n# one can create it and the other will error out.  Consequently we\n# restrict ourselves to GNU make (using the --version option ensures\n# this.)\nAC_DEFUN([AM_PROG_MKDIR_P],\n[if mkdir -p --version . >/dev/null 2>&1 && test ! -d ./--version; then\n  # We used to keeping the `.' as first argument, in order to\n  # allow $(mkdir_p) to be used without argument.  As in\n  #   $(mkdir_p) $(somedir)\n  # where $(somedir) is conditionally defined.  However this is wrong\n  # for two reasons:\n  #  1. if the package is installed by a user who cannot write `.'\n  #     make install will fail,\n  #  2. the above comment should most certainly read\n  #     $(mkdir_p) $(DESTDIR)$(somedir)\n  #     so it does not work when $(somedir) is undefined and\n  #     $(DESTDIR) is not.\n  #  To support the latter case, we have to write\n  #     test -z \"$(somedir)\" || $(mkdir_p) $(DESTDIR)$(somedir),\n  #  so the `.' trick is pointless.\n  mkdir_p='mkdir -p --'\nelse\n  # On NextStep and OpenStep, the `mkdir' command does not\n  # recognize any option.  It will interpret all options as\n  # directories to create, and then abort because `.' already\n  # exists.\n  for d in ./-p ./--version;\n  do\n    test -d $d && rmdir $d\n  done\n  # $(mkinstalldirs) is defined by Automake if mkinstalldirs exists.\n  if test -f \"$ac_aux_dir/mkinstalldirs\"; then\n    mkdir_p='$(mkinstalldirs)'\n  else\n    mkdir_p='$(install_sh) -d'\n  fi\nfi\nAC_SUBST([mkdir_p])])\n\n# Helper functions for option handling.                     -*- Autoconf -*-\n\n# Copyright (C) 2001, 2002, 2003, 2005  Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# serial 3\n\n# _AM_MANGLE_OPTION(NAME)\n# -----------------------\nAC_DEFUN([_AM_MANGLE_OPTION],\n[[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])\n\n# _AM_SET_OPTION(NAME)\n# ------------------------------\n# Set option NAME.  Presently that only means defining a flag for this option.\nAC_DEFUN([_AM_SET_OPTION],\n[m4_define(_AM_MANGLE_OPTION([$1]), 1)])\n\n# _AM_SET_OPTIONS(OPTIONS)\n# ----------------------------------\n# OPTIONS is a space-separated list of Automake options.\nAC_DEFUN([_AM_SET_OPTIONS],\n[AC_FOREACH([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])\n\n# _AM_IF_OPTION(OPTION, IF-SET, [IF-NOT-SET])\n# -------------------------------------------\n# Execute IF-SET if OPTION is set, IF-NOT-SET otherwise.\nAC_DEFUN([_AM_IF_OPTION],\n[m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])\n\n# Check to make sure that the build environment is sane.    -*- Autoconf -*-\n\n# Copyright (C) 1996, 1997, 2000, 2001, 2003, 2005\n# Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# serial 4\n\n# AM_SANITY_CHECK\n# ---------------\nAC_DEFUN([AM_SANITY_CHECK],\n[AC_MSG_CHECKING([whether build environment is sane])\n# Just in case\nsleep 1\necho timestamp > conftest.file\n# Do `set' in a subshell so we don't clobber the current shell's\n# arguments.  Must try -L first in case configure is actually a\n# symlink; some systems play weird games with the mod time of symlinks\n# (eg FreeBSD returns the mod time of the symlink's containing\n# directory).\nif (\n   set X `ls -Lt $srcdir/configure conftest.file 2> /dev/null`\n   if test \"$[*]\" = \"X\"; then\n      # -L didn't work.\n      set X `ls -t $srcdir/configure conftest.file`\n   fi\n   rm -f conftest.file\n   if test \"$[*]\" != \"X $srcdir/configure conftest.file\" \\\n      && test \"$[*]\" != \"X conftest.file $srcdir/configure\"; then\n\n      # If neither matched, then we have a broken ls.  This can happen\n      # if, for instance, CONFIG_SHELL is bash and it inherits a\n      # broken ls alias from the environment.  This has actually\n      # happened.  Such a system could not be considered \"sane\".\n      AC_MSG_ERROR([ls -t appears to fail.  Make sure there is not a broken\nalias in your environment])\n   fi\n\n   test \"$[2]\" = conftest.file\n   )\nthen\n   # Ok.\n   :\nelse\n   AC_MSG_ERROR([newly created file is older than distributed files!\nCheck your system clock])\nfi\nAC_MSG_RESULT(yes)])\n\n# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# AM_PROG_INSTALL_STRIP\n# ---------------------\n# One issue with vendor `install' (even GNU) is that you can't\n# specify the program used to strip binaries.  This is especially\n# annoying in cross-compiling environments, where the build's strip\n# is unlikely to handle the host's binaries.\n# Fortunately install-sh will honor a STRIPPROG variable, so we\n# always use install-sh in `make install-strip', and initialize\n# STRIPPROG with the value of the STRIP variable (set by the user).\nAC_DEFUN([AM_PROG_INSTALL_STRIP],\n[AC_REQUIRE([AM_PROG_INSTALL_SH])dnl\n# Installed binaries are usually stripped using `strip' when the user\n# run `make install-strip'.  However `strip' might not be the right\n# tool to use in cross-compilation environments, therefore Automake\n# will honor the `STRIP' environment variable to overrule this program.\ndnl Don't test for $cross_compiling = yes, because it might be `maybe'.\nif test \"$cross_compiling\" != no; then\n  AC_CHECK_TOOL([STRIP], [strip], :)\nfi\nINSTALL_STRIP_PROGRAM=\"\\${SHELL} \\$(install_sh) -c -s\"\nAC_SUBST([INSTALL_STRIP_PROGRAM])])\n\n# Check how to create a tarball.                            -*- Autoconf -*-\n\n# Copyright (C) 2004, 2005  Free Software Foundation, Inc.\n#\n# This file is free software; the Free Software Foundation\n# gives unlimited permission to copy and/or distribute it,\n# with or without modifications, as long as this notice is preserved.\n\n# serial 2\n\n# _AM_PROG_TAR(FORMAT)\n# --------------------\n# Check how to create a tarball in format FORMAT.\n# FORMAT should be one of `v7', `ustar', or `pax'.\n#\n# Substitute a variable $(am__tar) that is a command\n# writing to stdout a FORMAT-tarball containing the directory\n# $tardir.\n#     tardir=directory && $(am__tar) > result.tar\n#\n# Substitute a variable $(am__untar) that extract such\n# a tarball read from stdin.\n#     $(am__untar) < result.tar\nAC_DEFUN([_AM_PROG_TAR],\n[# Always define AMTAR for backward compatibility.\nAM_MISSING_PROG([AMTAR], [tar])\nm4_if([$1], [v7],\n     [am__tar='${AMTAR} chof - \"$$tardir\"'; am__untar='${AMTAR} xf -'],\n     [m4_case([$1], [ustar],, [pax],,\n              [m4_fatal([Unknown tar format])])\nAC_MSG_CHECKING([how to create a $1 tar archive])\n# Loop over all known methods to create a tar archive until one works.\n_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'\n_am_tools=${am_cv_prog_tar_$1-$_am_tools}\n# Do not fold the above two line into one, because Tru64 sh and\n# Solaris sh will not grok spaces in the rhs of `-'.\nfor _am_tool in $_am_tools\ndo\n  case $_am_tool in\n  gnutar)\n    for _am_tar in tar gnutar gtar;\n    do\n      AM_RUN_LOG([$_am_tar --version]) && break\n    done\n    am__tar=\"$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - \"'\"$$tardir\"'\n    am__tar_=\"$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - \"'\"$tardir\"'\n    am__untar=\"$_am_tar -xf -\"\n    ;;\n  plaintar)\n    # Must skip GNU tar: if it does not support --format= it doesn't create\n    # ustar tarball either.\n    (tar --version) >/dev/null 2>&1 && continue\n    am__tar='tar chf - \"$$tardir\"'\n    am__tar_='tar chf - \"$tardir\"'\n    am__untar='tar xf -'\n    ;;\n  pax)\n    am__tar='pax -L -x $1 -w \"$$tardir\"'\n    am__tar_='pax -L -x $1 -w \"$tardir\"'\n    am__untar='pax -r'\n    ;;\n  cpio)\n    am__tar='find \"$$tardir\" -print | cpio -o -H $1 -L'\n    am__tar_='find \"$tardir\" -print | cpio -o -H $1 -L'\n    am__untar='cpio -i -H $1 -d'\n    ;;\n  none)\n    am__tar=false\n    am__tar_=false\n    am__untar=false\n    ;;\n  esac\n\n  # If the value was cached, stop now.  We just wanted to have am__tar\n  # and am__untar set.\n  test -n \"${am_cv_prog_tar_$1}\" && break\n\n  # tar/untar a dummy directory, and stop if the command works\n  rm -rf conftest.dir\n  mkdir conftest.dir\n  echo GrepMe > conftest.dir/file\n  AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])\n  rm -rf conftest.dir\n  if test -s conftest.tar; then\n    AM_RUN_LOG([$am__untar <conftest.tar])\n    grep GrepMe conftest.dir/file >/dev/null 2>&1 && break\n  fi\ndone\nrm -rf conftest.dir\n\nAC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])\nAC_MSG_RESULT([$am_cv_prog_tar_$1])])\nAC_SUBST([am__tar])\nAC_SUBST([am__untar])\n]) # _AM_PROG_TAR\n\nm4_include([acinclude.m4])\n",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/bin/dx.in": "#!/bin/sh\n\n#\n# shell script to start DX.  normally called indirectly from /usr/bin/dx\n#  so that $DXROOT can be interpreted if dx isn't installed in the default\n#  directory.\n#\n\n# Name as reported with -version option \nversion_name=\"Open Visualization Data Explorer Script\"\n\n#\n# Define functions that are used first.\n#\n\n#\n# Exit function\n#\nout() {\n\techo \"$0 : $errmsg\"\n\techo \"(use -help to get usage information)\"\n\texit 1\n}\n\n# \n# simple help section\n#\nshorthelp() {\ncat << EOFshorthelp\ncommand line parameters:\n -program filename    start UI with this network\n -image               start DX with an image window as the anchor window \n -edit                start DX with an editor window as the anchor window \n -menubar             start DX with a small menubar as the anchor window \n -startup             start DX with an initial startup panel (default) \n\n -uionly              start the UI only (no exec)\n -script filename     start the exec only, in script mode, running this script\n -script              start the exec only, in script mode\n\n -host hostname       start executive on this machine\n -memory #Mbytes      set the amount of memory the exec uses\n\n -macros pathlist     directory list to search for UI macros\n -data pathlist       directory list to search for data files\n\n -prompter            start the DX Data Prompter\n -builder             start the DX Module Builder\n -tutor               start the DX Tutorial\n\n -morehelp            print man page with information about other options\n \nEOFshorthelp\n\nexit 1\n}\n\n#\n# complete help section\n#\nlonghelp() {\n\nif test -f \"$dxroot/man/catl/dx.l\" ; then\n    more \"$dxroot/man/catl/dx.l\"\nelse\n    echo \"cannot find $dxroot/man/catl/dx.l\"\n    echo \"set the DXROOT environment variable to the root of the\"\n    echo \"dx installation tree and try again.\"\nfi\nexit 1\n\ncat << EOFlonghelp\ncommand line parameters:\n -host hostname       start executive on this machine               \n -local               start executive on the current machine (default)\n\n -program filename    start UI with this network\n -script filename     run exec only, in script mode, with this script\n -script              run exec only, in script mode\n\n -image               start DX with an image window as the anchor window \n -edit                start DX with the VP Editor as the anchor \n -menubar             start DX with a small menubar as the anchor window \n -startup             start DX with an initial dialog (default) \n\n -uionly              start the UI only (no exec)\n -execonly            start the exec only (no UI) in remote mode\n -connect host:port   start a distributed exec only (no UI)\n\n -prompter            start the DX Data Prompter\n -full                start the Full Data Prompter\n -file filename       start the Data Prompter with this header file\n\n -builder             start the DX Module Builder\n -tutor               start the DX Tutorial\n\n -suppress            do not open control panels at startup in image mode\n -execute             execute the program automatically at startup\n -execute_on_change   go into execute_on_change mode at startup\n\n -optimize [memory|precision]\n                      select whether to minimize memory usage or to produce \n                      more color-accurate images.  When memory is optimized, \n                      image objects are generated with 24 bits/pixel instead \n                      of 96, and ReadImage will produce delayed color images \n                      if supported by the format. (default = precision)\n\n -memory #Mbytes      set the amount of memory the exec uses\n -processors #proc    set the number of processors the exec uses \n                      (SMP versions only)\n -log [on|off]        executive and ui logging: (default = off)\n -cache [on|off]      executive cache: (default = on)\n -trace [on|off]      executive trace: (default = off)\n -readahead [on|off]  executive readahead: (default = on)\n -timing [on|off]     module timing: (default = off)\n -highlight [on|off]  node execution highlighting: (default = on)\n -directory dirname   cd to this directory before starting exec\n -display hostname:0  set X display destination\n -metric              have the UI use metric units when possible\n\n -exec filename       execute this user executive\n -mdf filename        use this user .mdf file\n\n -key <64bit hex>     16 character hexidecimal (64 bit) number that is used\n\t\t      to encode and decode .net files.\n -encode              Encode a .net file into a binary format with a key \n                      that must be specified with the -key option.   \n                      For example, \n                        dx -encode -key 193495946952abed foo.net \n                      The resulting file can only be decoded by the DX\n                      user interface when using the same -key option.\n                      For example, \n                        dx -key 193495946952abed bar.net \n\n -dxroot dirname      dx root directory; defaults to @prefix@/dx\n\n -macros pathlist     directory list to search for UI macros\n -data pathlist       directory list to search for data files\n -include pathlist    directory list to search for script files\n -modules pathlist    directory list to search for outboard modules\n\n -colors filename     replace default color names/RGB values file\n -8bitcmap [private|shared|0-1|-1]\n                      private/shared colormap error threshold (default=0.1)\n                      -1 is equivalent to private.\n -hwrender [gl|opengl]  \n                      override default hardware rendering library on platforms\n                      where both are supported.  (default = opengl).\n\n -license <type>      force a specific license for either the UI or executive.\n                      type should be one of:\n    runtime           force a run-time license (UI or executive)\n    timed             force a timed (limited function) license (UI only)\n    develop           force a developer license (UI or executive) (default)\n\n -nodeid              print out the node id which is used for licensing\n\n -verbose             echo command lines before executing\n -echo                echo the command lines without executing them\n -outboarddebug       let user start outboard modules by hand\n -version             show version numbers of the dxexec and dxui\n\n -help                print a short help message\n -morehelp            print this help message\n\nenvironment variables:\n DXHOST               sets hostname for -host\n\n DXPROCESSORS         sets number of processors for multiprocessor DX\n DXMEMORY             sets memory limit in megabytes\n\n DXEXEC               sets filename for -exec\n DXMDF                sets filename for -mdf\n\n DXMACROS             sets pathlist for -macros\n DXDATA               sets pathlist for -data\n DXINCLUDE            sets pathlist for -include\n DXMODULES            sets pathlist for -modules\n\n DXCOLORS             sets filename for -colors\n DX8BITCMAP           sets threshold for -8bitcmap\n DXDELAYEDCOLORS      enables ReadImage to create delayed color images if the\n                      image is a tiff format image saved in a byte-with-colormap\n                      format or a GIF format. This feature is enabled if this\n                      variable is set to any value. Delayed colors use less\n                      memory.\n\n DXGAMMA              sets gamma correction for displayed images. Default is 2.\n DXGAMMA_8BIT\n DXGAMMA_12BIT\n DXGAMMA_24BIT        sets the gamma correction factor for the windows with \n                      the indicated window depth.  Overrides the value set \n                      by DXGAMMA.\n DXHWGAMMA            Sets the gamma correction for hardware-rendered images\n                      displayed to the screen using the Display and Image tools.\n                      The default value is 2.  \n\n DXHWMOD              specifies the name of the hardware rendering library \n                      to use when more than one is supported. Should be\n                      either DXhwdd.o or DXhwddOGL.o\n DXNO_BACKING_STORE   if set to anything, disables framebuffer readbacks.\n                      Setting this environment variable will improve performance\n                      of interaction with hardware rendered images, especially\n                      for machines for which readback is slow. However, some of\n                      the interactions in the image window (such as zoom) will\n                      result in a black image while interaction is taking place.\n                      Default is framebuffer readbacks are enabled.\n DXFLING              If DXFLING is set to 1, then for hardware-rendered images,\n                      in rotation mode and execute-on-change mode, if you drag the\n                      mouse across the image, and release the mouse button outside\n                      the image, the object in the image will begin to rotate, and\n                      will continue to rotate until you click inside the image. \n\n DXAXESMAXWIDTH       sets the number of digits in axes tick labels at which a\n                      switch to scientific notation is made. The default is 7.\n                      \n DX_NESTED_LOOPS      for faces, loops, and edges data, if set, allows loops other\n                      than the enclosing loop for a face to be listed first. However,\n                      there is a consequent decrease in performance if this\n                      environment variable is set.\n \n DXPIXELTYPE          sets the image type to either 24-bit color images or floating-\n                      point-based 96-bit images (the default). This affects the \n                      behavior of Render and ReadImage. This variable can be set to\n                      either DXByte (24 bits) or DXFloat (96 bits). Setting this\n                      variable to DXByte will result in images taking up less memory.\n\n DXRSH                specifies the remote shell command to use when connecting to\n                      other systems (such as those when using distributed execution).\n                      The default is the the path to rsh.\n DXRSH_NOENV          prevents the remote \"invoke dxexec\" script from being written\n                      with a full carbon copy of the local environment (only DISPLAY\n                      is set).\n\n DXROOT               sets directory for -dxroot\n \n DXSHMEM              If set to anything other than -1, forces shared memory to be\n                      used (if allowed by the architecture).  If set to -1, (if allowed\n                      by the architecture) will cause the data segment to simply be\n                      extended. Please see Appendix C of the Data Explorer User Guide\n                      for more information.\n                      \n DXSHMEMSEGMAX        Some architectures have a default configuration which limits\n                      the size of shared memory segments (see the architecture\n                      specific README file in /usr/lpp/dx), and the system\n                      configuration must be changed as root to increase the maximum\n                      allowed size of a shared memory segment.\n\n DX_SOCKET_BUFSIZE    allows the user to specify the size of the send and recieve\n                      buffers for the socket connection between the UI and the exec.\n\n DX_WEB_BROWSER       under UNIX specifies the web browser to launch for viewing the \n                      HTML documentation. Under Windows and MacOS X setting this \n                      environment variable will launch the systems default web browser.\n\n DXARGS               prepends these args to the command line\n\ncommand line parameters override environment variables.\nIf conflicting parameters are given, the last one has precedence.\nAlso, there are some other less frequently used command line options\nthat are not documented here.  See the User's Guide for a complete\nlist of options.\n\nEOFlonghelp\nexit 1\n}\n\n# Start of original dx startup script\n\n# Parse the -dxroot option so that we can handle the case in which\n# a UI installed with one DXROOT can connect to a machine with\n# another DXROOT. \n#\nx=`echo \"$*\" | grep  'dxroot'`\nARGS=\"$*\"\nif [ ! -z \"$x\" ]; then\n    while [ ! \"$*\" = \"\" ]; do\n\tcase $1 in\n\t    -dxroot)   DXROOT=$2; shift ;;\n\t    *)      \n\t    ;;\n\tesac\n\tshift\n    done\nfi\n\n\nif [ -z \"$DXROOT\" ]; then\n  prefix=@prefix@\n  DXROOT=$prefix/dx\nfi\nexport DXROOT\n\nif [ -z \"$DXDATA\" ]; then\n  DXDATA=$DXROOT/samples/data\n  if [ -d \"$DXDATA\" ]; then\n    export DXDATA\n  fi\nfi\n\n# if DXMACROS not set, default it to the usual unless dir doesn't exist\nif [ -z \"$DXMACROS\" ]; then\n  DXMACROS=$DXROOT/samples/macros\n  if [ ! -d \"$DXMACROS\" ]; then\n\tDXMACROS=\n  fi\nfi\n#\n# if JXMACROS not set and default dir exists, add it to the DXMACROS path\n# These macros are needed by dxui in order to prepare nets for operation\n# under control of DXServer.\nif [ -z \"$JXMACROS\" ]; then\n  JXMACROS=$DXROOT/java/server/dxmacros\n  if  [ -d \"$JXMACROS\" ]; then\n\tif [ -z \"$DXMACROS\" ]; then\n\t\tDXMACROS=$JXMACROS\n\telse\n\t\tDXMACROS=$DXMACROS:$JXMACROS\n\tfi\n  fi\nfi\n\nif [ ! -z \"$DXMACROS\" ]; then\n\t export DXMACROS\nfi\n\n# End of original dx startup script\n\n\n# machine type, hostname, version etc\n# current machine hostname & version\nthissys=`uname  -s | sed -e 's/ ..*$//'`\nthismach=`uname  -m`\nthishost=`hostname | sed -e 's/\\..*$//'` \nthisver=`uname  -r`\nremote=/usr/bin/rsh\nshowversion=0\n\n# determine the machine type, and set uiarch, exarch and thisver defaults\ncase $thissys in\n  FreeBSD)\n    exarch=freebsd\n    uiarch=freebsd\n\n    remote=/usr/bin/rsh\n\n    ;;\n\n  AIX*)\n    exarch=ibm6000\n    uiarch=ibm6000\n\n    thisver=`uname  -v`\n    thisver2=`uname  -v`.`uname  -r`\n\n    #\n    # The following is a work-around for a problem involved with NLS support\n    # and .net file reading on AIX.\n    #\n    LANG=C\n    LC_ALL=C\n    export LANG\n    export LC_ALL\n\n    # this is for AIX 3.2.3e, so we get the right libs at run time\n    if test \"z$thisver2\" = \"z3.2\" ; then\n\t\tLIBPATH=/usr/lib:/lib\n\t\texport LIBPATH\n    fi\n\n    ;;\n\n  IRIX*)\n    exarch=sgi\n    uiarch=sgi    \n\n    remote=/usr/bsd/rsh\n\n    if test \"z$thisver\" = \"z5.1.1.1\" ; then\n      __SGI_NO_REMOTE_GL=1\n      export __SGI_NO_REMOTE_GL\n\tfi\n\n    unset XUSERFILESEARCHPATH\n    export XUSERFILESEARCHPATH\n\n    ;;\n\n  SunOS*)\n    # the version comes out as A.B.C - we want just A\n    osver=`echo $thisver | sed -e '/.\\..\\../s/\\..$//'`\n    minorver=`echo $osver | sed -e 's/^.\\.//'`\n    majorver=$osver:r\n    if test $majorver -ge 5 ; then\n      exarch=solaris\n      uiarch=solaris\n      if test \"$LD_LIBRARY_PATH\" ; then\n        LD_LIBRARY_PATH=$LD_LIBRARY_PATH\":/usr/openwin/lib:/opt/SUNWits/Graphics-sw/xgl-3.0/lib:/usr/ucblib:/usr/local/lib\"\n      else\n        LD_LIBRARY_PATH=\"/usr/openwin/lib:/opt/SUNWits/Graphics-sw/xgl-3.0/lib:/usr/ucblib:/usr/local/lib\"\n\t  fi\n      #\n      # in Solaris 8 and higher, the inclusion of /usr/ucblib causes problems\n      # with dx launching the exec programatically (probably similar to\n      # the problem in SunOS4 below.\n      #\n      if test $minorver -ge 8 ; then\n         LD_LIBRARY_PATH=`echo \"$LD_LIBRARY_PATH\" | sed -e 's?/usr/ucblib??g' -e 's?:[:]*?:?g'`\n      fi\n\t  export LD_LIBRARY_PATH\n    else\n      exarch=sun4\n      uiarch=sun4\n      remote=/usr/ucb/rsh\n\n      #\n      # This is to work around a problem on SunOS4, in which a reference \n      # to a directory that is included by default causes\n      # 'dlopen:stub interception failed' messages to appear when attempting\n      # hw rendering.\n      #\n      if test \"$LD_LIBRARY_PATH\" ; then\n        LD_LIBRARY_PATH=`echo \"$LD_LIBRARY_PATH\" | sed -e 's?/usr/ucblib??g' -e 's?/usr/lib??g' -e 's?:[:]*?:?g'`\n        export LD_LIBRARY_PATH\n      fi\n\n    fi\n\n    # make sure we don't use openwin files\n    unset XFILESEARCHPATH\n    export XFILESEARCHPATH\n\n    ;;\n\n  HP-UX*)\n    exarch=hp700\n    uiarch=hp700\n\n    thisver=`uname  -m | cut -c1-6`\n    remote=/usr/bin/remsh\n\n    ;;\n\n  dgux)\n    exarch=aviion\n    uiarch=aviion\n\n    remote=/usr/bin/remsh\n\n    ;;\n\n  OSF1*)\n    exarch=alphax\n    uiarch=alphax\n\n    ;;\n\n  Linux)\n    exarch=linux\n    uiarch=linux\n\n    remote=/usr/bin/rsh\n\n    ;;\n\n  CYGWIN*)\n   exarch=cygwin\n   uiarch=cygwin    \n \n   remote=/usr/bin/rsh\n \n   ;;\n\n  Darwin*)\n   exarch=macos\n   uiarch=macos    \n \n   remote=/usr/bin/rsh\n \n   if [ -z \"$DXMACROS\" ]; then\n      if [ -d \"$HOME/Library/Application Support/OpenDX/macros\" ]; then\n         DXMACROS=\"$HOME/Library/Application Support/OpenDX/macros\"\n      fi\n   else\n      if [ -d \"$HOME/Library/Application Support/OpenDX/macros\" ]; then\n         DXMACROS=\"$DXMACROS:$HOME/Library/Application Support/OpenDX/macros\"\n      fi\n   fi\n   if [ ! -z \"$DXMACROS\" ]; then\n       export DXMACROS\n   fi\n\n   DX_WEB_BROWSER=1\n   export DX_WEB_BROWSER\n\n   ;;\n\n  *)\n    echo \"unknown machine type\"\n    exit 1\n\n    ;;\nesac\n\nDXARCH=$exarch\nexport DXARCH\n\n# default to running locally, from @prefix@/dx  \nexhost=$thishost\ndxroot=@prefix@/dx\nstartup=1   # run the startup window by default\n\n\n# initialize these so later they can be used, even the first time.\nxparms=\ndxargs=\"\"\nenvargs=\"\"\nuiflags=\"\"\nprompterflags=\"\"\nexmdf=\"\"\nuimdf=\"\"\nerrmsg=\"\"\nFileName=        # Name of filename given on command line w/o option\nScriptCmd=\"\"       # Script command invocation to execute\nuirestrict=\"\"\nechoparms=\nseecomline=0\nexlic=\nmotifcmd=\nmotifbind=\nbuilder=0\nencoder=0\ntutor=0\nprompter=0\nexonly=0\nuionly=0\nwizard=0\nexhilite=-B\nuimode=-edit\nexonly=0\nexmode=-r\nport=1900\ncdto=`pwd`\n\n#\n# if DXARGS defined, use them as the default args to this command.\n#  append any other command line args afterwards\n#\nif test \"$DXARGS\" ; then \n  dxargs=\"$DXARGS\"\nfi\n\n\n# have to use all env variables here to set parms, because if we use rsh\n#  to start dx on another machine, environment vars don't get propagated.\n# \nif test -n \"$DXHOST\" ; then \n  envargs=\"$envargs#-host#$DXHOST\"\nfi\nif test -n \"$DXPROCESSORS\" ; then \n  envargs=\"$envargs#-processors#$DXPROCESSORS\"\nfi\nif test -n \"$DXMEMORY\" ; then \n  envargs=\"$envargs#-memory#$DXMEMORY\"\nfi\nif test -n \"$DXEXEC\" ; then \n  envargs=\"$envargs#-exec#$DXEXEC\"\nfi\nif test -n \"$DXMDF\" ; then \n  envargs=\"$envargs#-mdf#$DXMDF\"\nfi\nif test -n \"$DXUI\" ; then \n  envargs=\"$envargs#-ui#$DXUI\"\nfi\nif test -n \"$DXMACROS\" ; then\n  envargs=\"$envargs#-macros#$DXMACROS\"\nfi\nif test -n \"$DXMODULES\" ; then\n  envargs=\"$envargs#-modules#$DXMODULES\"\nfi\nif test -n \"$DXDATA\" ; then \n  envargs=\"$envargs#-data#$DXDATA\"\nfi\nif test -n \"$DXINCLUDE\" ; then \n  envargs=\"$envargs#-include#$DXINCLUDE\"\nfi\nif test -n \"$DXCOLORS\" ; then \n  envargs=\"$envargs#-colors#$DXCOLORS\"\nfi\nif test -n \"$DX8BITCMAP\" ; then \n  envargs=\"$envargs#-8bitcmap#$DX8BITCMAP\"\nfi\nif test -n \"$DXROOT\" ; then \n  envargs=\"$envargs#-dxroot#$DXROOT\"\nfi\nif test -n \"$DXEXECROOT\" ; then\n envargs=\"$envargs#-execroot#$DXEXECROOT\"\nfi\nif test -n \"$DXUIROOT\" ; then \n  envargs=\"$envargs#-uiroot#$DXUIROOT\"\nfi\n\nfor args\ndo\n\tdsa=\"$dsa#$args\"\ndone\ndsa=`echo $dsa | sed -e \"s/^\\s*#//\"`\n\nif test -n \"$dxargs\" ; then\nset -- $dxargs\n\nfor args\ndo\n\tsdxargs=\"$sdxargs#$args\"\ndone\nfi\n\nsdxargs=`echo $sdxargs | sed -e \"s/^\\s*#//\"`\n\naenvargs=`echo $envargs | sed -e \"s/^\\s*#//\"`\n\nif test -n \"$dsa\" ; then\n  aenvargs=\"$aenvargs#$dsa\"\nfi\n\nunset dsa\n\nif test -n \"$sdxargs\" ; then\n  aenvargs=\"$aenvargs#$sdxargs\"\nfi\n\nunset sdxargs\n\nPFS=$IFS\nIFS=\"#\"\n\nenvargs=`echo $envargs | sed -e \"s/#/ /g\"`\n\nset -- $aenvargs\n\nIFS=$PFS\n\nunset aenvargs\n\n\n#\n# parse input parameters here\n#\nwhile test $# -gt 0\ndo\n  case $1 in\n  -whereami)\n    echo installed in $dxroot\n    exit 0\n    ;;\n\n  -whicharch)\n    echo $exarch\n    exit 0\n    ;;\n\n  -host)       # start the executive on this machine\n    if test $# -lt 2 ; then\n      errmsg=\"-host: missing hostname\"\n      out\n    fi\n  \tcase $2 in\n  \t  -*)\n        errmsg=\"-host: missing hostname\"\n        out ;;\n  \t  *)\n        exhost=\"$2\"\n        shift ;;\n\tesac\n    ;;\n\n  -local)       # ignore DXHOST and run local\n    exhost=$thishost\n    ;;\n   \n  -directory)    # cd here before starting exec\n    if test $# -lt 2 ; then\n      errmsg=\"-directory: missing directory name\"\n      out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-directory: missing directory name\"\n        out ;;\n      *)\n        cdto=\"$2\"\n        shift ;;\n    esac\n    ;;\n\n  -memory)       # how much memory to use\n    if test $# -lt 2 ; then\n      errmsg=\"-memory: missing parameter, must give number of Megabytes\"\n      out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-memory: missing parameter, must give number of Megabytes\"\n        out ;;\n      *)\n        exmem=\"-M$2\"\n        uimem=\"-memory $2\"\n        shift ;;\n    esac\n    ;;\n\n  -processors)   # how many processors to use (for MP)\n    if test $# -lt 2 ; then\n      errmsg=\"-processors: missing number of processors to use\"\n      out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-processors: missing number of processors to use\"\n        out ;;\n      *)\n        exproc=\"-p$2\"\n        uiproc=\"-processors $2\"\n        shift ;;\n    esac\n    ;;\n\n  -port)       # what socket number to use\n    if test $# -lt 2 ; then\n      errmsg=\"-port: missing port number\"\n      out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-port: missing port number\"\n        out ;;\n      [0-9]*)\n        port=$2 ;;\n      *)\n        errmsg=\"-port: port must be specified as a number\"\n        out ;;\n    esac\n    shift\n    ;;\n    \n  -image|-edit|-kiosk)       # start UI in image mode, edit mode, kiosk/menubar mode\n    uimode=$1\n    exonly=0\n    exmode=-r\n    startup=0\n    ;;\n\n  -wizard)\n    wizard=1\n    ;;\n\n  -menubar)      # start UI in kiosk/menubar mode\n    uimode=-kiosk\n    exonly=0\n    exmode=-r\n    startup=0\n    ;;\n\n  -encode)       # Encode a .net file\n    encoder=1\n    startup=0\n    ;;\n    \n  -key)          # the key for encoding .net files\n    if test $# -lt 2 ; then\n      errmsg=\"-key: missing number\"\n      out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-key: key must be specified as a number\"\n        out ;;\n      [A-Fa-f0-9]*)\n        key=$2 ;;\n      *)\n        errmsg=\"-key: key must be specified as a alpha numeric string\"\n        out ;;\n    esac\n    uiflags=\"$uiflags -cryptKey $key\" \n    shift\n    ;;\n\n  -execute)     # in image mode, execute once automatically\n    uiflags=\"$uiflags -execute\"\n    ;;\n\n  -execute_on_change)     # in image mode, stay in exec-on-change mode\n    uiflags=\"$uiflags -execute_on_change\"\n    ;;\n\n  -suppress)    # in image mode, don't automatically open control panels\n    uiflags=\"$uiflags -suppress\"\n    ;;\n\n  -display)       # explicitly set output device\n    if test $# -lt 2 ; then\n      errmsg=\"-display: missing X name\"\n      out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-display: missing X name\"\n        out ;;\n      *)\n        DISPLAY=$2\n        export DISPLAY\n        shift ;;\n    esac\n    ;;\n\n  -log)       # executive logging: on or off\n    if test $# -lt 2 ; then\n      errmsg=\"-log: missing parameter, must be on or off\"\n      out\n    fi\n    case $2 in\n      on)\n        exlog=-l\n        uilog=\"-log on\" ;;\n      off)\n        exlog=\n        uilog=\"-log off\" ;;\n      *)\n        errmsg=\"-log: bad parameter, must be on or off\"\n        out ;;\n    esac\n    shift\n    ;;\n\n  -cache)       # executive cache: on or off\n    if test $# -lt 2 ; then\n      errmsg=\"-cache: missing parameter, must be on or off\"\n      out\n    fi\n    case $2 in\n      on)\n        excache=\n        uicache=\"-cache on\" ;;\n      off)\n        excache=-c\n        uicache=\"-cache off\" ;;\n      *)\n        errmsg=\"-cache: bad parameter, must be on or off\"\n        out ;;\n    esac\n    shift\n    ;;\n\n  -trace)\n    if test $# -lt 2 ; then\n      errmsg=\"-trace: missing parameter, must be on or off\"\n      out\n    fi\n    case $2 in\n      on)\n        extrace=-T\n        uitrace=\"-trace on\" ;;\n      off)\n        extrace=\n        uitrace=\"-trace off\" ;;\n      *)\n        errmsg=\"-trace: bad parameter, must be on or off\"\n        out ;;\n    esac\n    shift\n    ;;\n\n  -readahead)\n    if test $# -lt 2 ; then\n      errmsg=\"-readahead: missing parameter, must be on or off\"\n      out\n    fi\n    case $2 in\n      on)\n        exread=\n        uiread=\"-readahead on\" ;;\n      off)\n        exread=-u\n        uiread=\"-readahead off\" ;;\n      *)\n        errmsg=\"-readahead: bad parameter, must be on or off\"\n        out ;;\n    esac\n    shift\n    ;;\n\n  -timing)\n    if test $# -lt 2 ; then\n      errmsg=\"-timing: missing parameter, must be on or off\"\n      out\n    fi\n    case $2 in\n      on)\n        extime=-m\n        uitime=\"-timing on\" ;;\n      off)\n        extime=\n        uitime=\"-timing off\" ;;\n      *)\n        errmsg=\"-timing: bad parameter, must be on or off\"\n        out ;;\n    esac\n    shift\n    ;;\n\n  -highlight)\n    if test $# -lt 2 ; then\n      errmsg=\"-highlight: missing parameter, must be on or off\"\n      out\n    fi\n    case $2 in\n      on)\n        exhilite=-B\n        uihilite=\"-highlight on\" ;;\n      off)\n        exhilite=\"\"\n        uihilite=\"-highlight off\" ;;\n      *)\n        errmsg=\"-highlight: bad parameter, must be on or off\"\n        out ;;\n    esac\n    shift\n    ;;\n\n  -nodeid)\n    exec \"\\\"$DXROOT/bin/NodeID\\\"\"\n    # not reached\n    ;;\n\n  -optimize)\n    if test $# -lt 2 ; then\n      errmsg=\"-optimize: missing parameter\"\n      out\n    fi\n    case $2 in\n      memory)\n        DXPIXELTYPE=DXByte \n        DXDELAYEDCOLORS=1\n        export DXPIXELTYPE\n        export DXDELAYEDCOLORS ;;\n      precision)\n        DXPIXELTYPE=DXFloat \n        unset DXDELAYEDCOLORS\n        export DXPIXELTYPE\n        export DXDELAYEDCOLORS ;;\n      *)\n        errmsg=\"-optimize: $arglist[2] bad parameter\"\n        out ;;\n    esac\n    shift\n    ;;\n\n  -script)        # exec input script, if next parm != -something\n    exonly=1\n    exmode=-R\n    startup=0\n    if test $# -ge 2 ; then\n      case $2 in\n        -*)\n          : ;;\n        *)\n          FileName=$2\n          shift ;;\n      esac\n    fi\n    ;;\n\n  -scriptcmd)      # execute this command, possibly after importing a script\n    exonly=1\n    exmode=-R\n    startup=0\n    if test $# -lt 2 ; then\n      errmsg=\"-scriptcmd: missing parameter\"\n      out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-scriptcmd: missing filename\"\n        out ;;\n      *)\n        ScriptCmd=$2\n        shift ;;\n    esac\n    ;;\n\n  -connect)      # execute this command, possibly after importing a script\n    exonly=1\n    exmode=-R\n    startup=0\n    if test $# -lt 2 ; then\n      errmsg=\"-connect: missing host:portnum\"\n      out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-connect: missing host:portnum\"\n        out ;;\n      *)\n        exconnect=$2\n        chost=`echo $exconnect | sed -e 's/^\\(.*\\):.*$/\\1/'`\n        cnum=`echo $exconnect | sed -e 's/^.*:\\([0-9.]*\\)$/\\1/'`\n        exdist=\"-s -C $cnum -H $chost\"\n        shift ;;\n    esac\n    ;;\n\n  -program)        # exec input script, if next parm != -something\n    startup=0\n    if test $# -lt 2 ; then\n      errmsg=\"-program: missing program name\"\n\t  out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-program: missing program name\"\n        out ;;\n      *)\n        FileName=$2\n        shift ;;\n    esac\n    ;;\n\n  -cfg)        # exec input script, if next parm != -something\n    if test $# -lt 2 ; then\n      errmsg=\"-cfg: missing configuration file name\"\n\t  out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-cfg: missing configuration file name\"\n        out ;;\n      *)\n        uiflags=\"$uiflags -cfg $2\"\n        shift ;;\n    esac\n    ;;\n\n  -uionly)         # startup the ui only\n    uionly=1\n    startup=0\n    ;;\n\n  -exonly|-execonly)   # startup the executable only\n    exonly=1\n    startup=0\n    ;;\n\n  -dxroot)    # override root directory for all dx files\n    if test $# -lt 2 ; then\n      errmsg=\"-dxroot: missing directory name\"\n      out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-dxroot: missing directory name\"\n        out ;;\n      *)\n        dxroot=$2\n        shift ;;\n    esac\n    ;;\n\n  -exroot|-execroot)    # override root directory for all exec files\n    if test $# -lt 2 ; then\n      errmsg=\"-execroot: missing directory name\"\n      out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-execroot: missing directory name\"\n        out ;;\n      *)\n        dxexroot=\"$2\"\n        shift ;;\n    esac\n    ;;\n\n  -uiroot)    # override root directory for all ui files\n    if test $# -lt 2 ; then\n      errmsg=\"-uiroot: missing directory name\"\n      out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-uiroot: missing directory name\"\n        out ;;\n      *)\n        dxuiroot=$2\n        shift ;;\n    esac\n    ;;\n\n  -exec)        # specific name of exec to use\n    if test $# -lt 2 ; then\n      errmsg=\"-exec: missing filename\"\n\t  out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-exec: missing filename\"\n        out ;;\n      *)\n        dxexec=$2\n        shift ;;\n    esac\n    ;;\n\n  -mdf)        # name of local mdf to use\n    if test $# -lt 2 ; then\n      errmsg=\"-mdf: missing filename\"\n\t  out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-mdf: missing filename\"\n        out ;;\n      *)\n        dxmdf=$2\n        exmdf=\"$exmdf -F \\\"$2\\\"\"\n        uimdf=\"$uimdf -mdf \\\"$2\\\"\"\n        shift ;;\n    esac\n    ;;\n\n  -dxmdf)        # name of overriding dx.mdf file to use\n    if test $# -lt 2 ; then\n      errmsg=\"-dxmdf: missing filename\"\n\t  out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-dxmdf: missing filename\"\n        out ;;\n      *)\n        uimdf=\"$uimdf -dxmdf $2\"\n        shift ;;\n    esac\n    ;;\n\n  -uimdf)        # name of overriding ui.mdf file to use\n    if test $# -lt 2 ; then\n      errmsg=\"-uimdf: missing filename\"\n\t  out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-uimdf: missing filename\"\n        out ;;\n      *)\n        uimdf=\"$uimdf -uimdf $2\"\n        shift ;;\n    esac\n    ;;\n\n  -ui)        # name of ui executable to use\n    if test $# -lt 2 ; then\n      errmsg=\"-ui: missing filename\"\n\t  out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-ui: missing filename\"\n        out ;;\n      *)\n        dxui=$2\n        shift ;;\n    esac\n    ;;\n\n  -data)        # pathlist of directories to search for data files\n    if test $# -lt 2 ; then\n      errmsg=\"-data: missing directory list\"\n\t  out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-data: missing directory list\"\n        out ;;\n      *)\n        dxdata=$2\n        shift ;;\n    esac\n    ;;\n\n  -macros)        # pathlist of dirs to search for UI macros\n    if test $# -lt 2 ; then\n      errmsg=\"-macros: missing directory list\"\n\t  out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-macros: missing directory list\"\n        out ;;\n      *)\n        dxmacros=$2\n        shift ;;\n    esac\n    ;;\n\n  -modules)        # pathlist of directories to search for outboards\n    if test $# -lt 2 ; then\n      errmsg=\"-modules: missing directory list\"\n\t  out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-modules: missing directory list\"\n        out ;;\n      *)\n        dxmodules=$2\n        shift ;;\n    esac\n    ;;\n\n  -include)        # pathlist of directories to search for script files\n    if test $# -lt 2 ; then\n      errmsg=\"-include: missing directory list\"\n\t  out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-include: missing directory list\"\n        out ;;\n      *)\n        dxinclude=$2\n        shift ;;\n    esac\n    ;;\n\n  -colors)        # filename of replacement colors file\n    if test $# -lt 2 ; then\n      errmsg=\"-colors: missing filename\"\n\t  out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-colors: missing filename\"\n        out ;;\n      *)\n        dxcolors=$2\n        shift ;;\n    esac\n    ;;\n\n  -8bitcmap)        # set tolerance for colormap match\n    if test $# -lt 2 ; then\n      errmsg=\"-8bitcmap: missing threshold\"\n\t  out\n    fi\n    case \"$2\" in\n      private)\n        dx8bitcmap=-1.0 ;;\n      shared)\n        dx8bitcmap=1.0 ;;\n      *)\n        errmsg=\"-8bitcmap: missing threshold\"\n        out ;;\n    esac\n    shift ;;\n\n  -hwrender)        # force which hardware rendering lib to use\n    if test $# -lt 2 ; then\n      errmsg=\"-hwrender: missing parameter, must be gl or opengl\"\n\t  out\n    fi\n    case \"$2\" in\n      gl)\n        DXHWMOD=DXhwdd.o\n        export DXHWMOD ;;\n      opengl)\n        DXHWMOD=DXhwdd.o\n        export DXHWMOD ;;\n      *)\n        errmsg=\"-hwrender: missing parameter, must be gl or opengl\"\n        out ;;\n    esac\n\tshift\n    ;;\n\n  -xrm)        # explicitly set an X resource name\n    if test $# -lt 2 ; then\n      errmsg=\"-xrm: missing parameter\"\n\t  out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-xrm: missing parameter\"\n        out ;;\n      *)\n        xparms=\"$xparms -xrm $2\"\n        shift ;;\n    esac\n    ;;\n\n  -verbose)       # echo stuff\n    seecomline=1\n    ;;\n\n  -uidebug)       # private flag - enable ui debugging messages\n    uidebug=-uidebug\n    ;;\n\n  -outboarddebug) # the exec will ask the user to start the outboard\n    exoutdb=\"-D\"\n    uioutdb=\"-outboarddebug\"\n    ;;\n\n  -echo)          # debug this file - only echos command line\n    echoparms=echo\n    ;;\n\n  -remoteecho)    # debug this file - echos the remote command line\n    envargs=\"$envargs -echo\"\n    ;;\n\n  -help|-shorthelp|-h)          # print short help message\n    shorthelp\n    ;;\n\n  -morehelp|-longhelp)      # print long help message\n    longhelp\n    ;;\n\n  -server|-arch|-uiarch|-minprocessors|-maxprocessors|-minmemory|-maxmemory)     # obsolete options which took an arg\n    # echo $arglist[1] obsolete, ignored\n    case $2 in\n      -*)\n        : ;;\n      *)\n        shift ;;\n    esac\n    ;;\n\n  -wait|-queue|-ibm6000)   # obsolete options w/o args\n    ;;\n  \t\n  -version)         # print the exec and ui versions \n    showversion=1\n    ;;\n\n  -prompter)      # don't start DX, start the Data Prompter instead\n    prompter=1\n    startup=0\n    ;;\n\n  -startup)      # don't start DX, start the Startup window instead\n    startup=1\n    ;;\n\n  -tutor|-tutorial)         # don't start DX, start the tutorial instead\n    tutor=1\n    startup=0\n    ;;\n\n  -builder)       # don't start DX, start the Module Builder instead\n    builder=1\n    startup=0\n    ;;\n\n  -no*|-limitImageOptions)           # ui restriction flags\n    uirestrict=\"$uirestrict $1\"\n    ;;\n\n  -metric)        # make default units metric in postscript printing\n    uiflags=\"$uiflags -metric\"\n    ;;\n\n  -restrictionLevel)\n    if test $# -lt 2 ; then\n      errmsg=\"-restrictionLevel: missing level\"\n\t  out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-restrictionLevel: missing level\"\n        out ;;\n      *)\n        uirestrict=\"$uirestrict -restrictionLevel $2\"\n        shift ;;\n    esac\n    ;;\n\n  -appHost)\n    if test $# -lt 2 ; then\n      errmsg=\"-appHost: missing host\"\n\t  out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-appHost: missing host\"\n        out ;;\n      *)\n        uiflags=\"$uiflags -appHost $2\"\n        shift ;;\n    esac\n    ;;\n\n  -appPort)\n    if test $# -lt 2 ; then\n      errmsg=\"-appPort: missing port\"\n\t  out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-appPort: missing port\"\n        out ;;\n      *)\n        uiflags=\"$uiflags -appPort $2\"\n        shift ;;\n    esac\n    ;;\n\n  -file)\n    if test $# -lt 2 ; then\n      errmsg=\"-file: missing input filename\"\n\t  out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-file: missing input filename\"\n        out ;;\n      *)\n        FileName=$2\n        shift ;;\n    esac\n    ;;\n\n  -full)\n    prompterflags=\"$prompterflags -full\"\n    ;;\n  \n  -view)\n    if test $# -lt 2 ; then\n      errmsg=\"-view: missing object filename\"\n\t  out\n    fi\n    case $2 in\n      -*)\n        errmsg=\"-view: missing object filename\"\n        out ;;\n      *)\n        uiflags=\"$uiflags -view $2\"\n        shift ;;\n    esac\n    ;;\n\n  -*)             # -anything else\n    errmsg=\"unrecognized parameter:  $arglist[1]\"\n    out\n    ;;\n    \n  *)             # filename of network\n    if test -n \"$FileName\" ; then\n      errmsg=\"input filename already set to '$FileName'; '$arglist[1]' unrecognized\"\n      out\n    fi\n    FileName=$1\n    ;;\n    \n   esac\n   shift\n   \ndone\n\n# Now set some needed results \n\ndxexroot=$dxroot\ndxuiroot=$dxroot\ndxexecdef=\"$dxexroot/bin_${exarch}/dxexec\"\nif test -z \"$dxexec\" ; then\n   dxexec=$dxexecdef\nfi\nif test -z \"$dxui\" ; then \n   dxui=\"$dxuiroot/bin_${uiarch}/dxui\"\nfi\nif test -z \"$dxdata\" ; then\n   dxdata=\"$dxroot/samples/data\"\nfi\n\n\n#\n# set the env variables which the executables will read with getenv()\n#\nif test -n \"$dxmacros\" ; then\n  DXMACROS=$dxmacros\n  export DXMACROS\nfi\nif test -n \"$dxmodules\" ; then\n  DXMODULES=$dxmodules\n  export DXMODULES\nfi\nif test -n \"$dxdata\" ; then\n  DXDATA=$dxdata\n  export DXDATA\nfi\nif test -n \"$dxinclude\" ; then\n  DXINCLUDE=$dxinclude\n  export DXINCLUDE\nfi\nif test -n \"$dxmdf\" ; then\n  DXMDF=$dxmdf\n  export DXMDF\nfi\nif test -n \"$dxcolors\" ; then\n  DXCOLORS=$dxcolors\n  export DXCOLORS\nfi\nif test -n \"$dx8bitcmap\" ; then\n  DX8BITCMAP=$dx8bitcmap\n  export DX8BITCMAP\nfi\nif test -n \"$dxexec\" ; then\n  DXEXEC=$dxexec\n  export DXEXEC\nfi\n\n#\n# guaranteed to be have values\n#\n\nif test -z \"$DXROOT\" ; then\n  DXROOT=$dxroot\n  export DXROOT\nfi\nif test \"z$dxroot\" != \"z$dxexroot\" ; then\n  DXEXECROOT=$dxexroot\n  export DXEXECROOT\nfi\nif test \"z$dxroot\" != \"z$dxuiroot\" ; then\n  DXUIROOT=$dxuiroot\n  export DXUIROOT\nfi\n# the old syntax was host,port.  disabled for now.\n# setenv DXHOST \"$exhost,$port\"\nDXHOST=\"$exhost\"\nexport DXHOST\n\n#\n# Now that the environment is set up we can test the version if requested\n#\nif test $showversion -eq 1 ; then\n  \"$dxexec\" -v \n  \"$dxui\" -version \n  echo \"$version_name, @VERSION_STRING@\"\n  exit 0\nfi\n\n#\n# set the DISPLAY var, if not already set (and if local, unix:0 is faster)\n#\nif test -z \"$DISPLAY\" ; then\n  if test \"z$exhost\" != \"z$thishost\" ; then\n    DISPLAY=\"${thishost}:0\"\n    export DISPLAY\n  else\n    DISPLAY=unix:0\n    export DISPLAY\n  fi\nfi\n\n#\n# Set some special motif bindings for the various user interfaces\n#\ncase $uiarch in\n  aviion)\n\tmotifcmd=\"-xrm\"\n    motifbind=\"\\\"*defaultVirtualBindings: osfDelete : <Key>Delete \\n osfBackSpace: <Key>BackSpace \\n osfLeft : <Key>Left \\n osfRight : <Key>Right \\n osfUp : <Key>Up \\n osfDown : <Key>Down \\n osfPageUp : <Key>Prior \\n osfPageDown : <Key>Next \\n osfInsert : <Key>Insert\\\"\"\n    ;;\n  alphax)\n\tXNLSPATH=$dxroot/lib_alphax/nls\n\texport XNLSPATH\n    ;;\n  *)\n    :\n    ;;\nesac\n\n#\n# start programs here.  by default, this script prepares the parameters\n#  for both the exec and the ui, and passes them all to the ui, which\n#  starts the exec.  if the 'exonly' flag is set, then this script only\n#  starts the exec.\n#\n\nif test  $exonly -eq 1 ; then\n  if test $uionly -eq 1 ; then\n    errmsg=\"-uionly and -execonly are mutually exclusive.\"\n    out\n  fi\nfi\n\n\n# \n# starting the tutorial instead of starting DX\n#\nif test $tutor -eq 1 ; then\n  \n  cmd=\"$DXROOT/bin_${uiarch}/tutor\"\n  if test $seecomline -eq 1 ; then\n    set\n    echo \"$echoparms exec $cmd $xparms\"\n  fi\n\n  $echoparms eval exec \\\"$cmd\\\" $xparms\n  exit 1\nfi\n\n# \n# starting the Data Prompter instead of starting DX\n#\nif test $prompter -eq 1 ; then\n  \n  if test -n \"$FileName\" ; then\n    prompterflags=\"$prompterflags -file \\\"$FileName\\\"\"\n  fi\n\n  cmd=\"$DXROOT/bin_${uiarch}/prompter\"\n  if test $seecomline -eq 1 ; then\n    set\n    echo \"$echoparms exec $cmd $prompterflags $xparms\"\n  fi\n\n  $echoparms eval exec \\\"$cmd\\\" $prompterflags $xparms\n  exit 1\nfi\n\n# \n# starting the Startup Window instead of starting DX\n#\nif test $startup -eq 1 ; then\n\n  \n  cmd=\"$DXROOT/bin_${uiarch}/startupui\"\n  if test $seecomline -eq 1 ; then\n    set\n    echo \"$echoparms exec $cmd $xparms $*\"\n  fi\n  $echoparms eval exec \\\"$cmd\\\" $xparms $*\n  exit 1\nfi\n\n# \n# starting the Module Builder instead of starting DX\n#\nif test $builder -eq 1 ; then\n\n  cmd=\"$DXROOT/bin_${uiarch}/builder\"\n  if test $seecomline -eq 1 ; then\n    set\n    echo \"exec $cmd $xparms $motifcmd $motifbind $FileName\"\n  fi\n  if test -n \"$FileName\" ; then FileName=\\\"$FileName\\\" ; fi\n  $echoparms eval exec \\\"$cmd\\\" $xparms $motifcmd $motifbind \"$FileName\"\n  exit 1\nfi\n\n# \n# starting the network encoder instead of starting DX\n#\nif test $encoder -eq 1 ; then\n  if test -z $key ; then\n    echo \"Encoding requires a key be specified with the -key option\"\n    exit 1\n  fi\n\n  Base=`echo $FileName | sed -e 's/\\.net//'`\n  CfgName=\"${Base}.cfg\"\n  FileBase=`basename $Base` \n  EncodedBase=\"${Base}-e\"\n\n  echo \"Creating encoded version of $FileName in ${EncodedBase}.net \"\n  cmd1=\"$DXROOT/bin_${uiarch}/dxencode\" \n  if test -f $CfgName ; then\n    echo \"Copying $CfgName to ${EncodedBase}.cfg\"\n    cmd2=\"cp $CfgName ${EncodedBase}.cfg\"\n  else\n    cmd2=\"\"\n  fi\n   \n  if test \"$seecomline\" -eq 1 || test \"z$echoparms\" = \"zecho\" ; then\n    if test $seecomline -eq 1 ; then\n\t  set\n    fi\n    echo \"$cmd1 \\> ${EncodedBase}.net -p $key $FileName\"\n    echo $cmd2\n  fi\n  if test \"z$echoparms\" != \"zecho\" ; then\n    eval \\\"$cmd1\\\" -p $key $FileName > ${EncodedBase}.net\n    $cmd2\n  fi\n  exit 1\nfi\n\n\n#\n# start executive\n#\nif test $exonly -eq 1 ; then\n\n  #\n  # parse the DISPLAY environment variable to pick out the machine name\n  # and display number.  also, if the local host and the execution host are\n  # different strings, use the host command or scan the /etc/hosts file to \n  # try to decide if perhaps they are simply aliases for the same machine.\n  # if you don't recognize they are the same machine, you will loop forever.\n  #\n  dhost=`echo $DISPLAY | sed -e 's/^\\(.*\\):.*$/\\1/'`\n  dnum=`echo $DISPLAY | sed -e 's/^.*:\\([0-9.]*\\)$/\\1/'`\n  if test \"z$thishost\" != \"z$exhost\" ; then\n    if test -x \"/bin/host\" ; then\n      myent=`host $thishost`\n      exent=`host $exhost`\n    else\n      myent=`sed 's/#.*$//' /etc/hosts | egrep '(^| |\t)'\"$thishost\"'( |\t|$)'`\n      exent=`sed 's/#.*$//' /etc/hosts | egrep '(^| |\t)'\"$exhost\"'( |\t|$)'`\n    fi\n  else \n    myent=$thishost\n    exent=$thishost\n  fi\n\n  # \"\n  # if the hostname isn't localhost or unix, look closer to see if it\n  # is just another alias for the local machine, or if it really is a\n  # different machine.  if a different machine, reset the display variable\n  # back to this machine, if necessary, and then execute a remote shell\n  #\n  if test \"z$exhost\" != \"zlocalhost\" -a \"z$exhost\" != \"zunix\" ; then\n    if test \"z$exent\" != \"z$myent\" ; then\n      if test \"z$dhost\" = \"zunix\" ; then\n        echo \"resetting DISPLAY variable from $DISPLAY to \\\"${thishost}:$dnum\\\"\"\n        DISPLAY=\"${thishost}:$dnum\"\n        export DISPLAY\n      fi\n  \n      dxcom=\"$remote $exhost \\\"$0\\\" -directory \\\"$cdto\\\" -display $DISPLAY $envargs $*\"\n      echo \"Starting remote command on $exhost\"\n      $echoparms eval exec $dxcom\n    fi\n  fi\n\n  dxmsg=\"Starting DX executive\"\n  echo $dxmsg\n\n  dxcom=$dxexec\n\n  exflags=\"$exmode $excache $exlog $exread $exmem $exproc $exerrlvl $extrace $exhilite $extime $exdist $exoutdb $exlic $exmdf\"\n  exflags=`echo $exflags | sed -e \"s/  */ /g\"`\n  \n  if test $seecomline -eq 1 ; then\n    set\n    echo \"$dxcom $exflags\"\n  fi\n\n  if test \"z`pwd`\" != \"z$cdto\" ; then\n    if ! test -d \"$cdto\" ; then\n      echo \"directory $cdto not found, current directory `pwd`\"\n    else\n      cd \"$cdto\"\n      if test $? -eq 0 ; then\n        echo \"current directory now `pwd`\"\n      else\n        errmsg=\"cannot change to directory $cdto\"\n        out\n      fi\n    fi\n  fi\n    \n  # -script <filename>\n  if test -n \"$FileName\" ; then\n  \n    # -script <filename> -scriptcmd \"command\"\n    if test -n \"$ScriptCmd\" ; then\n         $echoparms eval \"\\\"$dxcom\\\" $exflags <<- EOF\n\t\t\t\tinclude \\\"$FileName\\\"\n\t\t\t\t$ScriptCmd;\n\t\t\t\tEOF\"\n    else\n      $echoparms eval \\\"$dxcom\\\" $exflags \"< \\\"$FileName\\\"\"\n    fi\n\n  else\n  \n    # -scriptcmd \"command\"\n    if test -n \"$ScriptCmd\" ; then\n      $echoparms eval \"echo \\\"$ScriptCmd;\\\" | \\\"$dxcom\\\" $exflags\"\n    else\n      $echoparms eval \\\"$dxcom\\\" $exflags\n    fi\n  fi\n\n  exit $status\nfi\n\n\n#\n# start UI\n#\ndxmsg=\"Starting DX user interface\"\n\n\n#\n# check system version\n#\ncase $uiarch in\n  ibm6000)\n    if test \"z$thisver2\" != \"z3.2\" && test \"z$thisver\" != \"z4\" ; then\n      echo \"WARNING!  AIX Version seems to be other than 3.2 or 4.x\"\n      echo \"Continuing, but unexpected errors may result.\"\n    fi ;;\n  sgi)\n    # add version check here?\n     ;;\n  hp700)\n    if test \"z$thisver\" != \"z9000/7\" && test \"z$thisver\" != \"z9000/8\" ; then\n      echo \"WARNING!  This machine appears to NOT be a model 7xx/8xx\"\n      echo \"Continuing, but unexpected errors may result.\"\n    fi ;;\n  sun4|solaris|aviion|alphax|linux|freebsd|macos|cygwin)\n    ;;\n  *)\n    echo \"DX user interface does not run on this architecture\"\n    echo \"to start the executive, use the -execonly flag\"\n    out\n    ;;\nesac\n\ndxcom=$dxui\n\n# add all UI flags here\nuiflags=\"$uimode $uidepth $uidebug $uimem $uiproc $uilog $uicache $uiread $uitrace $uitime $uioutdb $uihilite $uimdf $xparms $uirestrict $uiflags\"\nuiflags=`echo $uiflags | sed -e \"s/  */ /g\"`\n\nif test -n \"$FileName\" ; then uiflags=\"$uiflags -program \\\"$FileName\\\"\" ; fi\nif test $uionly -eq 1 ; then uiflags=\"$uiflags -uionly\" ; fi\nif test $wizard -eq 1 ; then uiflags=\"$uiflags -wizard\" ; fi\nif test -n \"$cdto\" ; then uiflags=\"$uiflags -directory \\\"$cdto\\\"\" ; fi\nif test \"z$dxexec\" != \"z$dxexecdef\" ; then uiflags=\"$uiflags -exec \\\"$dxexec\\\"\" ; fi\n\necho $dxmsg\n\nif test $seecomline -eq 1 ; then\n  set\n  echo \"exec $dxcom $uiflags $motifcmd $motifbind\"\nfi\n\n$echoparms eval exec \\\"$dxcom\\\" $uiflags $motifcmd $motifbind\n\n# does not normally get here -- only if echo is set\nexit $status\n",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/src/exec/hwrender/opengl/hwLoadOGL.c": "/***********************************************************************/\n/* Open Visualization Data Explorer                                    */\n/* (C) Copyright IBM Corp. 1989,1999                                   */\n/* ALL RIGHTS RESERVED                                                 */\n/* This code licensed under the                                        */\n/*    \"IBM PUBLIC LICENSE - Open Visualization Data Explorer\"          */\n/***********************************************************************/\n\n#include <dxconfig.h>\n#include \"../hwDeclarations.h\"\n\n/*---------------------------------------------------------------------------*\\\n$Header: /src/master/dx/src/exec/hwrender/opengl/hwLoadOGL.c,v 1.8 2003/07/11\n05:50:39 davidt Exp $\n\\*---------------------------------------------------------------------------*/\n#include <stdio.h>\n#include <math.h>\n\n#if defined( HAVE_SYS_PARAM_H )\n#include <sys/param.h>\n#endif\n\n#if defined( HAVE_SYS_STAT_H )\n#include <sys/stat.h>\n#endif\n\n#if defined( HAVE_DLFCN_H )\n#include <dlfcn.h>\n#endif\n\n#if defined( HAVE_SYS_LDR_H )\n#include <sys/ldr.h>\n#endif\n\n#if defined( HAVE_STRING_H )\n#include <string.h>\n#endif\n\n#if defined( HAVE_GET_H )\n#include <get.h>\n#endif\n#if defined( HAVE_STDLIB_H )\n#include <stdlib.h>\n#endif\n\n#include \"../hwDebug.h\"\n\n#define NAMELEN 257\n#define PATHLEN 513\n\n#ifndef STANDALONE\n\nextern int isOpenGL;\n\n#if defined( DX_NATIVE_WINDOWS )\ntypedef tdmPortHandleP ( *PF_PORTHANDLE )( char * );\n#else\ntypedef tdmPortHandleP ( *PF_PORTHANDLE )( Display *, char * );\n#endif\n\n#if !defined( DEBUG ) && defined( RTLOAD )\n/* We do not do demand loading if we are in DEBUG mode */\n\n#if defined( alphax ) || defined( sgi ) || defined( solaris )\n\nstatic PF_PORTHANDLE _tryLoad( char *path, char *file, char **error )\n{\n  char buff[NAMELEN + PATHLEN]; /* tmp file path/name buffer */\n  struct stat statbuf;          /* for stat() call           */\n  extern main();                /* used to bind HW module    */\n  void *HW_handle;\n  void *entry_point;\n\n  ENTRY( ( \"_tryLoad(\\\"%s\\\", \\\"%s\\\", 0x%x)\", path, file, error ) );\n\n  /* Try to avoid automounter problems by stat of load file */\n  if ( file[0] == '/' )\n  {\n    strcpy( buff, file );\n  }\n  else\n  {\n    strcpy( buff, path );\n    strcat( buff, \"/\" );\n    strcat( buff, file );\n  }\n\n  if ( stat( buff, &statbuf ) )\n  {\n    /* Hardware unavailable: load module '%s/%s' not found */\n    *error = \"#5180\";\n    EXIT( ( \"load module not found: %s/%s\", path, file ) );\n    return NULL;\n  }\n\n  if ( ( HW_handle = dlopen( buff, RTLD_LAZY ) ) == NULL )\n  {\n    /* Hardware unavailable: unable to load module '%s/%s' */\n    *error = \"#5182\";\n    EXIT( ( \"unable to load module: %s/%s\", path, file ) );\n    return NULL;\n  }\n\n  if ( strstr( buff, \"OGL\" ) ) /* SGI Port Shares Originally AlphaX code */\n  {                            /* See which Lib We Actually Want         */\n    if ( !( entry_point = dlsym( HW_handle, \"_dxfInitPortHandleOGL\" ) ) )\n    {\n      /* Hardware unavailable: could not bind symbols for '%s/%s' */\n      *error = \"#5184\";\n      EXIT( ( \"unable to bind symbols for: %s/%s\", path, file ) );\n      return NULL;\n    }\n  }\n  else\n  {\n    if ( !( entry_point = dlsym( HW_handle, \"_dxfInitPortHandle\" ) ) )\n    {\n      /* Hardware unavailable: could not bind symbols for '%s/%s' */\n      *error = \"#5184\";\n      EXIT( ( \"unable to bind symbols for: %s/%s\", path, file ) );\n      return NULL;\n    }\n  }\n\n  EXIT( ( \"entry_point: 0x%x)\", entry_point ) );\n#if defined( DX_NATIVE_WINDOWS )\n  return (tdmPortHandleP (*)(char *))entry_point;\n#else\n  return (tdmPortHandleP (*)(Display *, char *))entry_point;\n#endif\n}\n\n#elif defined( ibm6000 )\n\n/* IBM port */\nstatic PF_PORTHANDLE _tryLoad( char *path, char *file, char **error )\n{\n  char buff[NAMELEN + PATHLEN]; /* tmp file path/name buffer */\n  struct stat statbuf;          /* for stat() call           */\n  extern main();                /* used to bind HW module    */\n  void *HW_handle;\n  int ( *entry_point )();\n\n  ENTRY( ( \"_tryLoad(\\\"%s\\\", \\\"%s\\\", 0x%x)\", path, file, error ) );\n\n  /* Try to avoid automounter problems by stat of load file */\n  strcpy( buff, path );\n  strcat( buff, \"/\" );\n  strcat( buff, file );\n\n  if ( stat( buff, &statbuf ) )\n  {\n    /* Hardware unavailable: load module '%s/%s' not found */\n    *error = \"#5180\";\n    EXIT( ( \"load module not found: %s/%s\", path, file ) );\n    return NULL;\n  }\n\n  if ( ( entry_point = load( file, L_NOAUTODEFER, path ) ) == NULL )\n  {\n    /* Hardware unavailable: unable to load module '%s/%s' */\n    *error = \"#5182\";\n    EXIT( ( \"unable to load module: %s/%s\", path, file ) );\n    return NULL;\n  }\n\n  if ( loadbind( 0, main, entry_point ) )\n  {\n    /* Hardware unavailable: could not bind symbols for '%s/%s' */\n    *error = \"#5184\";\n    EXIT( ( \"unable to bind symbols for: %s/%s\", path, file ) );\n    return NULL;\n  }\n\n  EXIT( ( \"entry_point: 0x%x)\", entry_point ) );\n  return (tdmPortHandleP (*)(Display *, char *))entry_point;\n}\n\n#else\n\n/* Windows */\n\n#include <sys/types.h>\n#include <sys/stat.h>\n\nstatic PF_PORTHANDLE _tryLoad( char *path, char *file, char **error )\n{\n  char buff[NAMELEN + PATHLEN]; /* tmp file path/name buffer */\n  char buf1[NAMELEN + PATHLEN]; /* tmp file path/name buffer */\n  HINSTANCE handle;\n  FARPROC entry;\n  int i;\n  struct _stat statbuf;\n\n  ENTRY( ( \"_tryLoad(\\\"%s\\\", \\\"%s\\\", 0x%x)\", path, file, error ) );\n\n  /* Try to avoid automounter problems by stat of load file */\n  if ( file[0] == '/' || ( file[1] == ':' && file[2] == '/' ) )\n    strcpy( buff, file );\n  else\n  {\n    strcpy( buff, path );\n    strcat( buff, \"/\" );\n    strcat( buff, file );\n  }\n\n  for ( i = 0; i < strlen( buff ); i++ )\n    if ( buff[i] == '/' )\n      buff[i] = '\\\\';\n\n  if ( stricmp( buff + ( strlen( buff ) - 4 ), \".dll\" ) )\n    strcat( buff, \".dll\" );\n\n  strcpy( buf1, buff );\n\n  if ( _stat( buf1, &statbuf ) )\n  {\n    DXMessage( \"unable to find: %s\\n\", buff );\n    *error = \"unable to find loadable hardware library\";\n    return NULL;\n  }\n\n  handle = LoadLibrary( buff );\n  if ( !handle )\n  {\n    char *errbuf;\n    DXMessage( \"unable to load: %s\\n\", buff );\n    /* Hardware unavailable: unable to load  odule '%s/%s' */\n    FormatMessage( FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM,\n                   NULL, GetLastError(),\n                   MAKELANGID( LANG_ENGLISH, SUBLANG_ENGLISH_US ),\n                   ( LPTSTR ) & errbuf, 0, NULL );\n\n    *error = errbuf;\n    EXIT( ( \"unable to load module: %s\", buff ) );\n    return NULL;\n  }\n\n  entry = GetProcAddress( handle, \"_dxfInitPortHandleOGL\" );\n  if ( !entry )\n  {\n    /* Hardware unavailable: could not bind symbols for '%s/%s' */\n    *error = \"#5184\";\n    EXIT( ( \"unable to bind symbols for: %s/%s\", buff ) );\n    return NULL;\n  }\n#if defined( DX_NATIVE_WINDOWS )\n  return (tdmPortHandleP (*)(char *))entry;\n#else\n  return (tdmPortHandleP (*)(Display *, char *))entry;\n#endif\n}\n#endif\n\n/* _HWload()\n * This does the real work in demand loading either the DX.o\n * executable (ibm6000) or the DXhw.sl shared lib (hp700) so\n * we can load the GL, OpenGL or Starbase dependent stuff on the fly\n * and simply report HW render not available if it fails.\n */\n#if defined( DX_NATIVE_WINDOWS )\nint _dxfHWload( tdmPortHandleP ( **initPP )( char * ) )\n#else\nint _dxfHWload( tdmPortHandleP ( **initPP )( Display *, char * ), Display *dpy )\n#endif\n{\n  /*\n   * NOTE!!! XXX\n   * If this code is compiled DEBUG and linked using the optimized flags to\n   * makedx, you will seg fault. This is because if we are in debug we assume\n   * the\n   * device dependent code to be staticly linked with the dxexec image, however,\n   * the optimized flags expects the code below to demand load the device\n   * dependent stuff.\n   */\n  char HWname[NAMELEN]; /* name of HW module for load()*/\n  char HWpath[PATHLEN];\n  char buff[NAMELEN + PATHLEN]; /* tmp file path/name buffer */\n  char *error, *error2;\n\n  ENTRY( ( \"_dxfHWload(0x%x)\", initPP ) );\n\n  *initPP = NULL;\n\n  if ( getenv( \"DXEXECROOT\" ) )\n  {\n    strcpy( HWpath, getenv( \"DXEXECROOT\" ) );\n    strcat( HWpath, \"/bin_\" );\n    strcat( HWpath, DXD_ARCHNAME );\n  }\n  else if ( getenv( \"DXROOT\" ) )\n  {\n    strcpy( HWpath, getenv( \"DXROOT\" ) );\n    strcat( HWpath, \"/bin_\" );\n    strcat( HWpath, DXD_ARCHNAME );\n  }\n  else\n  {\n    strcpy( HWpath, \"/usr/lpp/dx/bin_\" );\n    strcat( HWpath, DXD_ARCHNAME );\n  }\n\n  if ( getenv( \"DXHWMOD\" ) ) /* Force Lib */\n  {\n    strcpy( HWname, getenv( \"DXHWMOD\" ) );\n\n    *initPP = _tryLoad( HWpath, HWname, &error );\n\n    if ( strstr( HWname, \"OGL\" ) )\n      isOpenGL = 1;\n    else\n      isOpenGL = 0;\n\n    if ( !*initPP )\n    {\n      DXSetError( ERROR_BAD_PARAMETER, error, HWpath, HWname );\n      goto error;\n    }\n  }\n  else\n  {\n#if !defined( DX_NATIVE_WINDOWS )\n    int glx, Extra, Major, valid;\n\n    valid = XQueryExtension( dpy, \"GLX\", &Major, &Extra, &Extra );\n\n    glx = valid && Major > 0;\n#else\n    int glx = 1; /* Extension not needed for native windows */\n#endif\n\n    if ( glx )\n    {\n      isOpenGL = 1;\n#if defined( solaris )\n      *initPP = _tryLoad( HWpath, \"DXhwddOGL.so\", &error );\n#else\n      *initPP = _tryLoad( HWpath, \"DXhwddOGL.o\", &error );\n#endif\n    }\n\n#if defined( sgi ) || defined( ibm6000 ) || defined( solaris )\n    if ( !*initPP )\n    {\n      isOpenGL = 0;\n#if defined( solaris )\n      *initPP = _tryLoad( HWpath, \"DXhwdd.so\", &error2 );\n#else\n      *initPP = _tryLoad( HWpath, \"DXhwdd.o\", &error2 );\n#endif\n    }\n#endif\n\n    if ( !*initPP )\n    {\n#if defined( sgi ) || defined( ibm6000 )\n      DXSetError( ERROR_BAD_PARAMETER,\n                  \"unable to load either %s/DXhwddOGL.o or %s/DXhwdd.o\", HWpath,\n                  HWpath );\n#elif defined( solaris )\n      DXSetError( ERROR_BAD_PARAMETER,\n                  \"unable to load either %s/DXhwddOGL.so or %s/DXhwdd.so\",\n                  HWpath, HWpath );\n\n#else\n      DXSetError( ERROR_BAD_PARAMETER, \"unable to load %s/DXhwddOGL.o\",\n                  HWpath );\n#endif\n      goto error;\n    }\n  }\n\n  EXIT( ( \"OK\" ) );\n  return OK;\n\nerror:\n\n  EXIT( ( \"ERROR\" ) );\n  return ERROR;\n}\n\n#else\n\n#if defined( DX_NATIVE_WINDOWS )\ntdmPortHandleP _dxfInitPortHandleOGL( char *hostname );\ntdmPortHandleP _dxfInitPortHandle( char *hostname );\n#else\ntdmPortHandleP _dxfInitPortHandleOGL( Display *dpy, char *hostname );\ntdmPortHandleP _dxfInitPortHandle( Display *dpy, char *hostname );\n#endif\n\n#if defined( DX_NATIVE_WINDOWS )\nint _dxfHWload( tdmPortHandleP ( **initPP )( char * ) )\n#else\nint _dxfHWload( tdmPortHandleP ( **initPP )( Display *, char * ), Display *dpy )\n#endif\n{\n  ENTRY( ( \"_dxfHWload(0x%x)\", initPP ) );\n\n  *initPP = _dxfInitPortHandleOGL;\n  isOpenGL = 1;\n\n  EXIT( ( \"OK\" ) );\n  return OK;\n}\n#endif\n#endif\n",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/src/exec/hwrender/opengl/hwPortOGL.c": "/***********************************************************************/\n/* Open Visualization Data Explorer                                    */\n/* (C) Copyright IBM Corp. 1989,1999                                   */\n/* ALL RIGHTS RESERVED                                                 */\n/* This code licensed under the                                        */\n/*    \"IBM PUBLIC LICENSE - Open Visualization Data Explorer\"          */\n/***********************************************************************/\n/*---------------------------------------------------------------------------*\\\n $Source: /src/master/dx/src/exec/hwrender/opengl/hwPortOGL.c,v $\n\\*---------------------------------------------------------------------------*/\n\n#include <dxconfig.h>\n\n#if defined( HAVE_STRING_H )\n#include <string.h>\n#endif\n\n#define STRUCTURES_ONLY\n#include \"../hwDeclarations.h\"\n#include \"../hwWindow.h\"\n#include \"../hwMemory.h\"\n#include \"../hwMatrix.h\"\n#include \"../hwPortLayer.h\"\n#include \"../hwObjectHash.h\"\n#include \"../hwDebug.h\"\n\n#include \"hwPortOGL.h\"\n\n#if defined( DX_NATIVE_WINDOWS )\n#include <windows.h>\n#endif\n\n/* deal with DX/GL namespace collisions */\n#define Object dxObject\n#define Matrix dxMatrix\n#include \"../../libdx/internals.h\"\n#undef Object\n#undef Matrix\n#include <math.h>\n#include <stdlib.h> /* for getenv prototype */\n\n#if defined( HAVE_X11_XLIBXTRA_H )\n#include <x11/xlibxtra.h>\n#endif\n\nextern Error _dxf_dither( dxObject, int, int, int, int, void *,\n                          unsigned char * );\nextern Error _dxfExportHwddVersion( int version );\n\n#if defined( alphax ) || defined( sgi ) || defined( solaris )\n#if !defined( DEBUG )\n#include <dlfcn.h>\n#endif\n#endif\n\n#define DXHW_DD_VERSION 0x080000\n\n/*\n *  Next three functions are used for keeping track of all GLX contexts in\n *  use.  We need to do this in order to share display lists among\n *  contexts.\n */\n\nstatic float WS[4][4] = {\n    {1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {-1, -1, 0, 1}};\n\n#if !defined( DX_NATIVE_WINDOWS )\n\nstatic int nCtx = 0;\nstatic int ctxListSize = 0;\nstatic GLXContext *ctxList = 0;\nstatic int fontListBase = 0;\n\nstatic GLXContext getGLXContext( void )\n{\n  int i;\n\n  ENTRY( ( \"getGLXContext()\" ) );\n\n  for ( i = 0; i < ctxListSize; i++ )\n  {\n    if ( ctxList[i] )\n    {\n      EXIT( ( \"ctxList[i] = 0x%x;\", ctxList[i] ) );\n      return ctxList[i];\n    }\n  }\n\n  EXIT( ( \"context not found;\" ) );\n  return 0;\n}\n\nstatic Error remGLXContext( GLXContext ctx )\n{\n  int i;\n\n  ENTRY( ( \"remGLXContext(0x%x)\", ctx ) );\n\n  for ( i = 0; i < ctxListSize; i++ )\n    if ( ctxList[i] == ctx )\n    {\n      ctxList[i] = 0;\n      nCtx--;\n      if ( nCtx )\n      {\n        EXIT( ( \"OK;\" ) );\n        return OK;\n      }\n\n      /* clean up context list */\n      tdmFree( ctxList );\n      nCtx = 0;\n      ctxListSize = 0;\n      ctxList = 0;\n\n      /* delete font display lists */\n      if ( glIsList( fontListBase ) )\n        glDeleteLists( fontListBase, 256 );\n\n      EXIT( ( \"OK;\" ) );\n      return OK;\n    }\n\n  EXIT( ( \"ERROR;\" ) );\n  return ERROR;\n}\n\nstatic Error putGLXContext( GLXContext ctx )\n{\n#define INITSIZE 10\n  int i;\n\n  ENTRY( ( \"putGLXContext(0x%x)\", ctx ) );\n\n  if ( nCtx == ctxListSize )\n  {\n    GLXContext *newCtxList;\n\n    if ( !( newCtxList = tdmAllocate( ( ctxListSize + INITSIZE ) *\n                                      sizeof( GLXContext ) ) ) )\n    {\n      EXIT( ( \"Alloc failed;\" ) );\n      return ERROR;\n    }\n\n    for ( i = 0; i < ctxListSize; i++ )\n      newCtxList[i] = ctxList[i];\n\n    if ( ctxList )\n      tdmFree( ctxList );\n\n    ctxList = newCtxList;\n\n    ctxList[ctxListSize] = ctx;\n    for ( i = ctxListSize + 1; i < ctxListSize + INITSIZE; i++ )\n      ctxList[i] = 0;\n\n    ctxListSize += INITSIZE;\n  }\n  else\n  {\n    for ( i = 0; i < ctxListSize; i++ )\n      if ( !ctxList[i] )\n      {\n        ctxList[i] = ctx;\n        break;\n      }\n  }\n  nCtx++;\n\n  EXIT( ( \"OK;\" ) );\n  return OK;\n}\n\n/*\n *  This silly static variable is used to keep track of the X display\n *  connection used by the current GLX context.  We need it since OpenGL\n *  won't allow us to switch GLX contexts across different display\n *  connections without explicitly releasing the current one.  This isn't\n *  required if all the GLX contexts use the same display.  We think it's a\n *  bug and the issue is being brought before the ARB. (4/7/94)\n */\nstatic Display *CurrentDpy = 0;\n#endif\n\n/*\n *  PORT LAYER SECTION\n */\nstatic translationO _dxf_CREATE_HW_TRANSLATION( void *win )\n{\n#if defined( DX_NATIVE_WINDOWS )\n  return NULL;\n#else\n  int i;\n  DEFWINDATA( win );\n  hwTranslationP ret;\n  char *gammaStr;\n\n  ENTRY( ( \"_dxf_CREATE_HW_TRANSLATION (0x%x)\", win ) );\n\n  if ( !( ret = (hwTranslationP)tdmAllocate( sizeof( translationT ) ) ) )\n  {\n    EXIT( ( \"ERROR: Alloc failed ret = 0\" ) );\n    return 0;\n  }\n\n  ret->dpy = DPY;\n  ret->visual = NULL;\n  ret->cmap = CLRMAP;\n  ret->depth = 24;\n  ret->invertY = FALSE;\n#if sgi\n  ret->gamma = 1.0;\n#else\n  ret->gamma = 2.0;\n#endif\n  ret->translationType = ThreeMap;\n  ret->redRange = 256;\n  ret->greenRange = 256;\n  ret->blueRange = 256;\n  ret->usefulBits = 8;\n  ret->rtable = &ret->data[256 * 3];\n  ret->gtable = &ret->data[256 * 2];\n  ret->btable = &ret->data[256];\n  ret->table = NULL;\n\n  for ( i = 0; i < 256; i++ )\n  {\n    ret->rtable[i] = i << 24;\n    ret->gtable[i] = i << 16;\n    ret->btable[i] = i << 8;\n  }\n\n  if ( ( gammaStr = getenv( \"DXHWGAMMA\" ) ) )\n  {\n    ret->gamma = atof( gammaStr );\n    if ( ret->gamma < 0 )\n      ret->gamma = 0.0;\n    PRINT( ( \"gamma environment var: \", atof( gammaStr ) ) );\n    PRINT( ( \"gamma: \", ret->gamma ) );\n  }\n\n  EXIT( ( \"ret = 0x%x\", ret ) );\n  return (translationO)ret;\n#endif\n}\n\n#if defined( DX_NATIVE_WINDOWS )\n\nstatic void *_dxf_CREATE_WINDOW( void *globals, char *winName, int w, int h )\n{\n  DEFGLOBALDATA( globals );\n  OGLWindow *oglw = GetOGLWPtr( XWINID );\n  char *doGLStereo;\n\n  /* Initialize the hwRender port private context */\n  PORT_HANDLE->private = tdmAllocateZero( sizeof( tdmOGLctxT ) );\n  if ( !PORT_HANDLE->private )\n  {\n    DXErrorGoto( ERROR_INTERNAL, \"#13000\" );\n  }\n  else\n  {\n    int nMyPixelFormatID;\n    char *str;\n    GLint mcp;\n    int checkID;                    /* for verifying window */\n    PIXELFORMATDESCRIPTOR checkPfd; /*   capabilites        */\n    static PIXELFORMATDESCRIPTOR pfd = {sizeof( PIXELFORMATDESCRIPTOR ), 1,\n                                        PFD_DRAW_TO_WINDOW |\n                                            PFD_SUPPORT_OPENGL |\n                                            PFD_DOUBLEBUFFER,\n                                        PFD_TYPE_RGBA, 24, 0, 0, 0, 0, 0, 0, 0,\n                                        0, 0, 0, 0, 0, 0, 16, 0, 0,\n                                        PFD_MAIN_PLANE, 0, 0, 0, 0};\n    DEFPORT( PORT_HANDLE );\n\n    /* check if we should request stereo window */\n    if ( ( doGLStereo = getenv( \"DX_USE_GL_STEREO\" ) ) != NULL )\n    {\n      if ( atoi( doGLStereo ) )\n      {\n        pfd.dwFlags |= PFD_STEREO;\n      }\n    }\n\n    OGLHDC = GetDC( XWINID );\n\n    nMyPixelFormatID = ChoosePixelFormat( OGLHDC, &pfd );\n    if ( !nMyPixelFormatID )\n      return NULL;\n\n    SetPixelFormat( OGLHDC, nMyPixelFormatID, &pfd );\n    OGLHRC = wglCreateContext( OGLHDC );\n\n    /* initialize, then check if we got a stereo window */\n    USEGLSTEREO = 0;\n    checkID = GetPixelFormat( OGLHDC );\n    if ( DescribePixelFormat( OGLHDC, checkID, sizeof( PIXELFORMATDESCRIPTOR ),\n                              &checkPfd ) &&\n         ( ( checkPfd.dwFlags & PFD_STEREO ) != 0 ) )\n    {\n      USEGLSTEREO = 1;\n    }\n    wglMakeCurrent( OGLHDC, OGLHRC );\n\n    OGLXWIN = XWINID;\n    WINWIDTH = w;\n    WINHEIGHT = h;\n    XMAXSCREEN = 1024;\n    YMAXSCREEN = 1024;\n    OGLWINT = _wdata;\n\n    glGetIntegerv( GL_MAX_CLIP_PLANES, &mcp );\n    MAX_CLIP_PLANES = mcp;\n\n    if ( NULL != ( str = getenv( \"DX_USE_DISPLAYLISTS\" ) ) )\n    {\n      if ( atoi( str ) )\n      {\n        _dxf_setFlags( _dxf_SERVICES_FLAGS(), SF_USE_DISPLAYLISTS );\n        DO_DISPLAY_LISTS = 1;\n      }\n      else\n        DO_DISPLAY_LISTS = 1;\n    }\n    else\n    {\n      _dxf_setFlags( _dxf_SERVICES_FLAGS(), SF_USE_DISPLAYLISTS );\n      DO_DISPLAY_LISTS = 1;\n    }\n    DO_DISPLAY_LISTS = 0;\n\n    glEnable( GL_NORMALIZE );\n    wglMakeCurrent( NULL, NULL );\n  }\n\nskip:\n  return (void *)&XWINID;\n\nerror:\n  return NULL;\n}\n\n#else\n\nstatic void *_dxf_CREATE_WINDOW( void *globals, char *winName, int w, int h )\n{\n  /*\n   *  Create a new hardware graphics window with specified name and\n   *  dimensions.  Return the X identifier associated with the window.\n   */\n\n  Window xid;\n  Visual *vis;\n  XVisualInfo *vi;\n  XWindowAttributes attr;\n  XSetWindowAttributes sattr;\n  int depth, screen;\n  GLXContext oglctx, oglctx_share;\n  DEFGLOBALDATA( globals );\n  char *str;\n\n/* The following code was changed to fix problems in intel and on Stylus\n*/\n\n/* index into glattr struct */\n#define R_DEPTH 3\n#define G_DEPTH 5\n#define B_DEPTH 7\n#define IMAGE_DEPTH 9\n\n  static int glattr[] = {GLX_RGBA,             /* 0   */\n                         GLX_DOUBLEBUFFER,     /* 1   */\n                         GLX_RED_SIZE,     8,  /* 2,3 */\n                         GLX_GREEN_SIZE,   8,  /* 4,5 */\n                         GLX_BLUE_SIZE,    8,  /* 6,7 */\n                         GLX_DEPTH_SIZE,   23, /* 8,9 */\n                         0                     /* 10  */\n  };\n\n  ENTRY(\n      ( \"_dxf_CREATE_WINDOW (0x%x, \\\"%s\\\", %d, %d)\", globals, winName, w, h ) );\n  if ( !glXQueryExtension( DPY, 0, 0 ) )\n  {\n    PRINT( ( \"GLX extension not supported by this server\" ) );\n    DXSetError( ERROR_NOT_IMPLEMENTED, \"GLX extension not installed\\n\" );\n    goto error;\n  }\n  screen = DefaultScreen( DPY );\n  if ( ( vi = glXChooseVisual( DPY, screen, glattr ) ) != NULL )\n    goto got_visual;\n\n/* for pc hardware driver bug - relax the image depth requirement\n * and see what you get.  if it is >= 23, it's ok.\n */\n#if defined( intelnt ) || defined( WIN32 )\n  glattr[IMAGE_DEPTH] = 0;\n#else\n  glattr[IMAGE_DEPTH] = 1;\n#endif\n  if ( ( vi = glXChooseVisual( DPY, screen, glattr ) ) != NULL )\n  {\n    glXGetConfig( DPY, vi, GLX_DEPTH_SIZE, &depth );\n    if ( depth >= 16 )\n      goto got_visual;\n    XFree( vi );\n  }\n\n  glattr[R_DEPTH] = 5;\n  glattr[G_DEPTH] = 5;\n  glattr[B_DEPTH] = 5;\n  if ( ( vi = glXChooseVisual( DPY, screen, glattr ) ) != NULL )\n  {\n    glXGetConfig( DPY, vi, GLX_DEPTH_SIZE, &depth );\n    if ( depth >= 16 )\n      goto got_visual;\n    XFree( vi );\n  }\n\n  glattr[R_DEPTH] = 4;\n  glattr[G_DEPTH] = 4;\n  glattr[B_DEPTH] = 4;\n  if ( ( vi = glXChooseVisual( DPY, screen, glattr ) ) != NULL )\n  {\n    glXGetConfig( DPY, vi, GLX_DEPTH_SIZE, &depth );\n    if ( depth >= 16 )\n      goto got_visual;\n    XFree( vi );\n  }\n\n  glattr[R_DEPTH] = 3;\n  glattr[G_DEPTH] = 3;\n  glattr[B_DEPTH] = 2;\n  if ( ( vi = glXChooseVisual( DPY, screen, glattr ) ) != NULL )\n  {\n    glXGetConfig( DPY, vi, GLX_DEPTH_SIZE, &depth );\n    if ( depth >= 16 )\n      goto got_visual;\n    XFree( vi );\n  }\n\n  glattr[IMAGE_DEPTH] = 0;\n  if ( ( vi = glXChooseVisual( DPY, screen, glattr ) ) != NULL )\n  {\n    glXGetConfig( DPY, vi, GLX_DEPTH_SIZE, &depth );\n    if ( depth >= 16 )\n      goto got_visual;\n    XFree( vi );\n  }\n\n  PRINT( ( \"Unable to find acceptable X visual\" ) );\n\n  /* request any visual and tell the user what we got vs what we wanted */\n  if ( ( vi = glXChooseVisual( DPY, screen, NULL ) ) != NULL )\n  {\n    DXWarning( \"Direct or True color window required\" );\n    DXWarning( \"with double buffering, a depth of at least 23\" );\n    DXWarning( \"and either 24, 12 or 8 bit colors\" );\n    DXWarning( \"Default X window is class %d, depth %d, %d bit colors\",\n               vi->class, vi->depth, vi->bits_per_rgb );\n    XFree( vi );\n  }\n  DXSetError( ERROR_NOT_IMPLEMENTED,\n              \"Unable to open an X window which can be used with OpenGL\" );\n  goto error;\n\ngot_visual:\n\n  PRINT( ( \"visual depth = %d\", vi->depth ) );\n  PRINT( ( \"visual class = %d\", vi->class ) );\n  PRINT( ( \"visual bits per rgb = %d\", vi->bits_per_rgb ) );\n  PRINT( ( \"visual colormap size = %d\", vi->colormap_size ) );\n\n  vis = vi->visual;\n  depth = vi->depth;\n\n  /* find an existing GLX context with which to share display lists */\n  oglctx_share = getGLXContext();\n\n  /* create a GLX direct rendering context */\n  if ( !( oglctx = glXCreateContext( DPY, vi, NULL, TRUE ) ) )\n  {\n    if ( !( oglctx = glXCreateContext( DPY, vi, NULL, FALSE ) ) )\n    {\n      PRINT( ( \"Unable to create GLX rendering context\" ) );\n      DXErrorGoto( ERROR_INTERNAL, \"#13670\" );\n    }\n  }\n  /* release visual info structure */\n  XFree( vi );\n\n  /* create colormap and X window */\n  sattr.border_pixel = None;\n  sattr.background_pixel = None;\n  sattr.colormap =\n      XCreateColormap( DPY, XRootWindow( DPY, screen ), vis, AllocNone );\n\n  if ( !( XWINID = xid = XCreateWindow(\n              DPY, XRootWindow( DPY, screen ), 0, 0, w, h, 0, depth,\n              InputOutput, vis, CWBackPixel | CWBorderPixel | CWColormap,\n              &sattr ) ) )\n  {\n    PRINT( ( \"Could not create X window\" ) );\n    DXErrorGoto( ERROR_INTERNAL, \"#13770\" );\n  }\n\n  PIXDEPTH = depth;\n\n  PRINT( ( \"X Display: 0x%x\", DPY ) );\n  PRINT( ( \"X Window: 0x%x\", xid ) );\n  PRINT( ( \"GLX context: 0x%x\", oglctx ) );\n  PRINT( ( \"getenv('DISPLAY') = \\\"%s\\\"\", getenv( \"DISPLAY\" ) ) );\n\n  /*\n   *  Bind the GLX context to the X window.  If there is already a GLX\n   *  context in use, we have to explicitly release it since DX uses\n   *  separate display connections for each window.  We think this is a\n   *  bug in OpenGL.\n   */\n\n  if ( !getenv( \"IGNORE_GLXWAITX\" ) )\n    glXWaitX();\n\n  if ( CurrentDpy )\n    glXMakeCurrent( CurrentDpy, None, NULL );\n\n  if ( glXMakeCurrent( DPY, xid, oglctx ) )\n  {\n    CurrentDpy = DPY;\n  }\n  else\n  {\n    PRINT( ( \"glXMakeCurrent() failed\" ) );\n    DXErrorGoto( ERROR_INTERNAL, \"#13670\" );\n  }\n\n  /* put GLX context in list of existing contexts */\n  if ( !putGLXContext( oglctx ) )\n  {\n    PRINT( ( \"Unable to record GLX context\" ) );\n    DXErrorGoto( ERROR_INTERNAL, \"#13000\" );\n  }\n\n  /* install the colormap for the UI to manage, if color is not static */\n  if ( !getenv( \"IGNORE_GLXWAITX\" ) )\n    glXWaitGL();\n  XGetWindowAttributes( DPY, xid, &attr );\n  CLRMAP = attr.colormap;\n  XInstallColormap( DPY, CLRMAP );\n\n  /* if this is 1st GLX context in this process, create font display lists */\n  if ( !oglctx_share )\n  {\n    Font f;\n    if ( !( fontListBase = glGenLists( 256 ) ) )\n    {\n      PRINT( ( \"Unable to allocate font display lists\" ) );\n      DXErrorGoto( ERROR_INTERNAL, \"#13000\" );\n    }\n\n    f = XLoadFont( DPY, \"9x15\" );\n    if ( !getenv( \"IGNORE_GLXWAITX\" ) )\n      glXUseXFont( f, 0, 256, fontListBase );\n    XUnloadFont( DPY, f );\n  }\n\n  /* Initialize the hwRender port private context */\n  if ( !( PORT_HANDLE->private = tdmAllocateZero( sizeof( tdmOGLctxT ) ) ) )\n  {\n    PRINT( ( \"out of memory allocating private context\" ) );\n    DXErrorGoto( ERROR_INTERNAL, \"#13000\" );\n  }\n  else\n  {\n    DEFPORT( PORT_HANDLE );\n\n    OGLDPY = DPY;\n    OGLSCREEN = screen;\n    OGLXWIN = xid;\n    OGLCTX = oglctx;\n    WINWIDTH = w;\n    WINHEIGHT = h;\n    XMAXSCREEN = DisplayWidth( DPY, screen ) - 1;\n    YMAXSCREEN = DisplayHeight( DPY, screen ) - 1;\n    OGLWINT = _wdata;\n    FONTLISTBASE = fontListBase;\n    {\n      GLint mcp;\n      glGetIntegerv( GL_MAX_CLIP_PLANES, &mcp );\n      MAX_CLIP_PLANES = mcp;\n    }\n\n    if ( NULL != ( str = getenv( \"DX_USE_DISPLAYLISTS\" ) ) )\n    {\n      if ( atoi( str ) )\n      {\n        _dxf_setFlags( _dxf_SERVICES_FLAGS(), SF_USE_DISPLAYLISTS );\n        DO_DISPLAY_LISTS = 1;\n      }\n      else\n        DO_DISPLAY_LISTS = 0;\n    }\n    else\n    {\n      _dxf_setFlags( _dxf_SERVICES_FLAGS(), SF_USE_DISPLAYLISTS );\n      DO_DISPLAY_LISTS = 1;\n    }\n\n    if ( !( OGLTRANSLATION =\n                (hwTranslationP)_dxf_CREATE_HW_TRANSLATION( LWIN ) ) )\n    {\n      PRINT( ( \"out of memory allocating translation table\" ) );\n      DXErrorGoto( ERROR_INTERNAL, \"#13000\" );\n    }\n  }\n\n  OGL_FAIL_ON_ERROR( _dxf_CREATE_WINDOW );\n  EXIT( ( \"xid = 0x%x\", xid ) );\n  return (void *)xid;\n\nerror:\n\n  OGL_FAIL_ON_ERROR( _dxf_CREATE_WINDOW );\n  EXIT( ( \"ERROR: xid = NULL\" ) );\n  return NULL;\n}\n\n#endif\n\n/*\n * These are only used on the DEC alpha to see what kind of\n * graphics adapter we are on.  For certain adapters we need to\n * disable certain things.\n */\n#if defined( alphax )\nstatic GLboolean isVendor( char *vendor )\n{\n  char vendor_string[256];\n  strcpy( vendor_string, glGetString( GL_VENDOR ) );\n  return !strcmp( vendor_string, vendor );\n}\n\nstatic GLboolean isRenderer( char *renderer )\n{\n  char renderer_string[256];\n  strcpy( renderer_string, glGetString( GL_RENDERER ) );\n  return !strcmp( renderer_string, renderer );\n}\n#endif\n\nstatic Error _dxf_INIT_RENDER_MODULE( void *globals )\n{\n  /*\n   *  This routine is called once, after the graphics window has been\n   *  created.  It's function is loosely defined to encompass all the\n   *  `first time' initialization of the graphics window.\n   */\n\n  DEFGLOBALDATA( globals );\n\n  ENTRY( ( \"_dxf_INIT_RENDER_MODULE (0x%x)\", globals ) );\n\n  /* Mark the save buffer unallocated. */\n  SAVE_BUF = (void *)NULL;\n  SAVE_BUF_SIZE = 0;\n  BUFFER_MODE = DoubleBufferMode;\n\n  /* enable Z buffering */\n  glEnable( GL_DEPTH_TEST );\n\n#if defined( newBroken )\n  glEnable( GL_BLEND );\n  glBlendFunc( GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA );\n#endif\n\n  /* Byte Align the Pixel Buffer */\n  glPixelStorei( GL_UNPACK_ALIGNMENT, 1 );\n  glPixelStorei( GL_PACK_ALIGNMENT, 1 );\n\n#if defined( sgi )\n  /*\n     Temporary fix for SGI OpenGL problem :\n     gl[Read|Write]Buffer(* GL_RGB *) when ! using glColor4*()\n  */\n  _dxf_setFlags( _dxf_SERVICES_FLAGS(), SF_INVALIDATE_BACKSTORE );\n#endif\n\n/* For this release we will use the glColorMaterial mechanism even\n   though it is not being used correctly in the macros in hwPortUtilOGL.c\n   We do this because fixing the problem exposes a bug on the DEC\n   HW */\n#if 1\n  glEnable( GL_COLOR_MATERIAL );\n#else\n  glDisable( GL_COLOR_MATERIAL );\n#endif\n  /*\n   * Explicitly set draw buffer to BACK because default value\n   * differs on different implementations, and set the ReadBuffer\n   * to FRONT for consistancy.  Don't do it on the DEC becuase that\n   * causes problems with FRONT/BACK buffer management.\n   */\n  glDrawBuffer( GL_BACK );\n\n#if !defined( alphax )\n  glReadBuffer( GL_FRONT );\n#endif\n\n  /* IBM's Soft OpenGL seems to default to styled lines */\n  glDisable( GL_LINE_STIPPLE );\n\n  /* Renormalize the normals after transformation */\n  glEnable( GL_NORMALIZE );\n\n#if defined( alphax )\n  if ( isVendor( \"DEC\" ) && isRenderer( \"PXG\" ) )\n    if ( !getenv( \"DX_PXG_TRANSPARENCY\" ) )\n      _dxf_setFlags( _dxf_SERVICES_FLAGS(), SF_TRANSPARENT_OFF );\n#endif\n\n  EXIT( ( \"TRUE;\" ) );\n  return TRUE;\n}\n\nstatic void *_dxf_ALLOCATE_PIXEL_ARRAY( void *ctx, int width, int height )\n{\n  void *ret;\n\n  ENTRY( ( \"_dxf_ALLOCATE_PIXEL_ARRAY(0x%x, %d, %d)\", ctx, width, height ) );\n\n  ret = tdmAllocateLocal( width * height * sizeof( int32 ) );\n\n  EXIT( ( \"ret = 0x%x\", ret ) );\n  return ret;\n}\n\nstatic void _dxf_FREE_PIXEL_ARRAY( void *ctx, void *pixels )\n{\n  ENTRY( ( \"_dxf_FREE_PIXEL_ARRAY(0x%x, 0x%x)\", ctx, pixels ) );\n\n  if ( pixels )\n    tdmFree( pixels );\n\n  EXIT( ( \"\" ) );\n}\n\nstatic void _dxf_DESTROY_WINDOW( void *win )\n{\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n\n  ENTRY( ( \"_dxf_DESTROY_WINDOW (0x%x)\", win ) );\n\n  if ( PORT_CTX )\n  {\n#if !defined( DX_NATIVE_WINDOWS )\n    glXMakeCurrent( DPY, XWINID, OGLCTX );\n    /* remove GLX context from list of existing contexts */\n    remGLXContext( OGLCTX );\n#endif\n\n    if ( SAVE_BUF )\n    {\n      _dxf_FREE_PIXEL_ARRAY( PORT_CTX, SAVE_BUF );\n      SAVE_BUF = (void *)NULL;\n    }\n\n#if !defined( DX_NATIVE_WINDOWS )\n    if ( OGLTRANSLATION )\n    {\n      tdmFree( OGLTRANSLATION );\n      OGLTRANSLATION = NULL;\n    }\n\n    /* we no longer have a display associated with current GLX context */\n    CurrentDpy = 0;\n#endif\n\n    if ( DISPLAY_LIST_HASH )\n      _dxf_DeleteDisplayListHash( DISPLAY_LIST_HASH );\n\n    if ( TEXTURE_HASH )\n      _dxf_DeleteObjectHash( TEXTURE_HASH );\n\n#if defined( DX_NATIVE_WINDOWS )\n    if ( OGLHRC )\n      wglDeleteContext( OGLHRC );\n    DeleteDC( OGLHDC );\n#else\n    /* OpenGL is a lot happier if we set context NULL before destroying */\n    glXMakeCurrent( DPY, None, NULL );\n\n    PRINT( ( \"Destroying GLX context 0x%x on display 0x%x\", OGLCTX, OGLDPY ) );\n    glXDestroyContext( DPY, OGLCTX );\n#endif\n\n    tdmFree( PORT_CTX );\n    PORT_HANDLE->private = (void *)NULL;\n  }\n\n  EXIT( ( \"\" ) );\n}\n\n#if defined( DX_NATIVE_WINDOWS )\nstatic void _dxf_SET_OUTPUT_WINDOW( void *win, HRGN hrgn )\n#else\nstatic void _dxf_SET_OUTPUT_WINDOW( void *win, Window w )\n#endif\n{\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n\n  ENTRY( ( \"_dxf_SET_OUTPUT_WINDOW(0x%x)\", win ) );\n\n  RT_IFNDEF( DXMAKE_CURRENT )\n#if !defined( DX_NATIVE_WINDOWS )\n  if ( CurrentDpy )\n    /* release context on current display */\n    glXMakeCurrent( CurrentDpy, None, NULL );\n\n  if ( glXMakeCurrent( DPY, w, OGLCTX ) )\n  {\n    CurrentDpy = DPY;\n    EXIT( ( \"\" ) );\n  }\n  else\n  {\n    EXIT( ( \"glXMakeCurrent failed\" ) );\n  }\n#endif\n  RT_ELSE\n  EXIT( ( \"No action RT_IFNDEF'd\" ) );\n  RT_ENDIF\n}\n\nstatic int _dxf_SET_BACKGROUND_COLOR( void *ctx, RGBColor c )\n{\n  DEFCONTEXT( ctx );\n\n  ENTRY( ( \"_dxf_SET_BACKGROUND_COLOR (0x%x, 0x%x)\", ctx, &c ) );\n  CPRINT( c );\n\n#if defined( DX_NATIVE_WINDOWS )\n  c.r = ( c.r <= 0.0 ) ? 0.0 : pow( c.r, 1. / 0.5 );\n  c.g = ( c.g <= 0.0 ) ? 0.0 : pow( c.g, 1. / 0.5 );\n  c.b = ( c.b <= 0.0 ) ? 0.0 : pow( c.b, 1. / 0.5 );\n#else\n  c.r = ( c.r <= 0.0 ) ? 0.0 : pow( c.r, 1. / OGLTRANSLATION->gamma );\n  c.g = ( c.g <= 0.0 ) ? 0.0 : pow( c.g, 1. / OGLTRANSLATION->gamma );\n  c.b = ( c.b <= 0.0 ) ? 0.0 : pow( c.b, 1. / OGLTRANSLATION->gamma );\n#endif\n\n  BACKGROUND_COLOR = c;\n  glClearColor( c.r, c.g, c.b, 0 );\n\n  OGL_FAIL_ON_ERROR( _dxf_SET_BACKGROUND_COLOR );\n\n  EXIT( ( \"\" ) );\n\n  return OK;\n}\n\nstatic void _dxf_INIT_RENDER_PASS( void *win, int bufferMode, int zBufferMode )\n{\n  /*\n   *  Clear the window and prepare for a rendering pass.\n   */\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n\n  ENTRY( ( \"_dxf_INIT_RENDER_PASS (0x%x, %d, %d)\", win, bufferMode,\n           zBufferMode ) );\n\n  _dxfChangeBufferMode( win, bufferMode );\n  SAVE_BUF_VALID = FALSE;\n\n  OGL_FAIL_ON_ERROR( _dxf_INIT_RENDER_PASS );\n\n  glEnable( GL_BLEND );\n  OGL_FAIL_ON_ERROR( glEnableBlend );\n  glBlendFunc( GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA );\n  OGL_FAIL_ON_ERROR( glBlendFunc );\n  // glAlphaFunc(GL_GREATER, 0.0);\n  // OGL_FAIL_ON_ERROR(glAlphaFunc);\n\n  EXIT( ( \"\" ) );\n}\n\n/* #if defined(DX_NATIVE_WINDOWS) */\nstatic void _dxf_END_RENDER_PASS( void *win )\n{\n#if defined( DX_NATIVE_WINDOWS )\n  OGLWindow *oglw;\n#endif\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n  glDisable( GL_BLEND );\n  OGL_FAIL_ON_ERROR( _dxf_END_RENDER_PASS );\n\n#if defined( DX_NATIVE_WINDOWS )\n  oglw = GetOGLWPtr( XWINID );\n\n  glFlush();\n  SwapBuffers( OGLHDC );\n  EndPaint( XWINID, &oglw->ps );\n#endif\n}\n/* #endif */\n\nstatic void _dxf_SET_VIEWPORT( void *ctx, int left, int right, int bottom,\n                               int top )\n{\n/*\n *  Set up viewport in pixels.\n */\n\n#if defined( DX_NATIVE_WINDOWS )\n  DEFCONTEXT( ctx );\n  wglMakeCurrent( OGLHDC, OGLHRC );\n#endif\n\n  ENTRY( ( \"_dxf_SET_VIEWPORT (0x%x, %d, %d, %d, %d)\", ctx, left, right, bottom,\n           top ) );\n\n  glViewport( left, bottom, ( right - left ) + 1, ( top - bottom ) + 1 );\n\n  OGL_FAIL_ON_ERROR( _dxf_SET_VIEWPORT );\n  EXIT( ( \"\" ) );\n}\n\nstatic void _dxf_CLEAR_AREA( void *ctx, int left, int right, int bottom,\n                             int top )\n{\n\n  ENTRY( ( \"_dxf_CLEAR_AREA(0x%x, %d, %d, %d, %d)\", ctx, left, right, bottom,\n           top ) );\n\n  glPushAttrib( GL_VIEWPORT_BIT );\n  glViewport( left, bottom, ( right - left ) + 1, ( top - bottom ) + 1 );\n  glClear( GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT );\n  glPopAttrib();\n\n  OGL_FAIL_ON_ERROR( _dxf_CLEAR_AREA );\n  EXIT( ( \"\" ) );\n}\n\nstatic void _dxf_SET_WINDOW_SIZE( void *win, int w, int h )\n{\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n\n  ENTRY( ( \"_dxf_SET_WINDOW_SIZE (0x%x, %d, %d)\", win, w, h ) );\n\n  WINHEIGHT = h;\n  WINWIDTH = w;\n\n#if defined( DX_NATIVE_WINDOWS )\n  MoveWindow( XWINID, 0, 0, w, h, FALSE );\n  _dxf_SET_VIEWPORT( PORT_CTX, 0, w - 1, 0, h - 1 );\n#else\n  if ( !getenv( \"IGNORE_GLXWAITX\" ) )\n    glXWaitGL();\n\n  XResizeWindow( DPY, XWINID, w, h );\n\n  if ( !getenv( \"IGNORE_GLXWAITX\" ) )\n    glXWaitX();\n\n  _dxf_SET_VIEWPORT( PORT_CTX, 0, w - 1, 0, h - 1 );\n#endif\n\n  OGL_FAIL_ON_ERROR( _dxf_SET_WINDOW_SIZE );\n  EXIT( ( \"\" ) );\n}\n\nstatic void _dxf_MAKE_PROJECTION_MATRIX( int projection, float width,\n                                         float aspect, float Near, float Far,\n                                         register float M[4][4] )\n{\n  /*\n   *  Compute a projection matrix for a simple orthographic or perspective\n   *  camera model (no oblique projections).  This matrix projects view\n   *  coordinates into a normalized projection coordinate system spanning\n   *  [-1..1] in X, Y, and Z.\n   *\n   *  The Near and Far parameters are distances from the view coordinate\n   *  origin along the line of sight.  The Z clipping planes are at -Near\n   *  and -Far since we are using a right-handed coordinate system.  For\n   *  perspective, Near and Far must be positive in order to avoid drawing\n   *  objects at or behind the eyepoint depth.\n   *\n   *  The perspective depth scaling is handled as in Newman & Sproull\n   *  Chap. 23, except for their left-handed orientation and a different\n   *  range for the projection depth [D..F], which for GL is [1..-1].\n   *\n   *  In the non-oblique perspective matrix of Equation 23-4,\n   *  Zs = (Ze*M33 + M43) / (Ze*M34)\n   *     = M33/M34 + (M43/M34)/Ze\n   *     = a + b/Ze\n   *\n   *  In this formulation, M34 = S/D = fov/2.  Alternatively, if we use\n   *  M34 = 1, then M33 = a and M43 = b.  We must then divide M11 and M22\n   *  by fov/2 (the same as is done for an ordinary ortho projection).\n   *\n   *  Substituting D and F for Ze in Equation 23-2 (Zs = a +b/Ze) produces\n   *  a + b/D = 1 and a + b/F = -1.  Solving results in a = 1 - 2*F/(F-D)\n   *  and b = 2*F*D/(F-D).\n   *\n   *  The projection matrix so produced seems to have adequate precision\n   *  to represent view angles down to 0.001 degree, which is what DX\n   *  requires.\n   */\n\n  ENTRY( ( \"_dxf_MAKE_PROJECTION_MATRIX (%d, %f, %f, %f, %f, 0x%x)\", projection,\n           width, aspect, Near, Far, M ) );\n\n  Far = -Far;\n  Near = -Near;\n\n  M[0][0] = 1 / ( width / 2 );\n  M[0][1] = 0;\n  M[0][2] = 0;\n  M[0][3] = 0;\n  M[1][0] = 0;\n  M[1][1] = M[0][0] / aspect;\n  M[1][2] = 0;\n  M[1][3] = 0;\n  M[2][0] = 0;\n  M[2][1] = 0; /* M[2][2]=1 ; M[2][3]=0 ; */\n  M[3][0] = 0;\n  M[3][1] = 0; /* M[3][2]=0 ; M[3][3]=1 ; */\n\n  if ( projection )\n  {\n    /* perspective */\n    M[2][2] = 1 - ( 2 * Far ) / ( Far - Near );\n    M[3][2] = ( 2 * Far * Near ) / ( Far - Near );\n    M[2][3] = -1; /* Ze < 0, but clipper wants positive w */\n    M[3][3] = 0;\n  }\n  else\n  {\n    /* orthographic */\n    M[2][2] = 1 / ( ( Far - Near ) / 2 );\n    M[3][2] = -Near * M[2][2] - 1;\n    M[2][3] = 0;\n    M[3][3] = 1;\n  }\n\n  MPRINT( M );\n  EXIT( ( \"\" ) );\n}\n\nstatic void _dxf_SET_ORTHO_PROJECTION( void *ctx, float width, float aspect,\n                                       float Near, float Far )\n{\n  /*\n   *  Set up an orthographic view projection.\n   */\n  float M[4][4];\n\n  ENTRY( ( \"_dxf_SET_ORTHO_PROJECTION (0x%x %f, %f, %f, %f)\", ctx, width,\n           aspect, Near, Far ) );\n\n  _dxf_MAKE_PROJECTION_MATRIX( 0, width, aspect, Near, Far, M );\n\n  glMatrixMode( GL_PROJECTION );\n  glLoadMatrixf( (GLfloat *)M );\n  glMatrixMode( GL_MODELVIEW );\n\n  MPRINT( M );\n  OGL_FAIL_ON_ERROR( _dxf_SET_ORTHO_PROJECTION );\n  EXIT( ( \"\" ) );\n}\n\nstatic void _dxf_SET_PERSPECTIVE_PROJECTION( void *ctx, float xfov,\n                                             float aspect, float Near,\n                                             float Far )\n{\n  /*\n   *  Set up a perspective projection.\n   */\n  float M[4][4];\n\n  ENTRY( ( \"_dxf_SET_PERSPECTIVE_PROJECTION (0x%x, %f, %f, %f, %f)\", ctx, xfov,\n           aspect, Near, Far ) );\n\n  _dxf_MAKE_PROJECTION_MATRIX( 1, xfov, aspect, Near, Far, M );\n\n  glMatrixMode( GL_PROJECTION );\n  glLoadMatrixf( (GLfloat *)M );\n  glMatrixMode( GL_MODELVIEW );\n\n  MPRINT( M );\n  OGL_FAIL_ON_ERROR( _dxf_SET_PERSPECTIVE_PROJECTION );\n  EXIT( ( \"\" ) );\n}\n\nstatic void _dxf_GET_PROJECTION( void *ctx, float M[4][4] )\n{\n  /*\n     Fetch the current Projection matrix\n  */\n  ENTRY( ( \"_dxf_GET_PROJECTION(0x%x)\", ctx ) );\n  glGetFloatv( GL_PROJECTION_MATRIX, (float *)M );\n  MPRINT( M );\n  OGL_FAIL_ON_ERROR( _dxf_GET_PROJECTION );\n  EXIT( ( \"\" ) );\n}\n\nstatic void _dxf_GET_MATRIX( void *ctx, float M[4][4] )\n{\n  /*\n     Fetch the current modelview matrix\n  */\n  ENTRY( ( \"_dxf_GET_MATRIX(0x%x)\", ctx ) );\n  glGetFloatv( GL_MODELVIEW_MATRIX, (float *)M );\n  MPRINT( M );\n  OGL_FAIL_ON_ERROR( _dxf_GET_MATRIX );\n  EXIT( ( \"\" ) );\n}\n\nstatic void _dxf_LOAD_MATRIX( void *ctx, float M[4][4] )\n{\n  /*\n   *  Load (replace) M onto the hardware matrix stack.\n   */\n  ENTRY( ( \"_dxf_LOAD_MATRIX (0x%x, 0x%x)\", ctx, M ) );\n\n  glLoadMatrixf( (GLfloat *)M );\n\n  MPRINT( M );\n  OGL_FAIL_ON_ERROR( _dxf_LOAD_MATRIX );\n  EXIT( ( \"\" ) );\n}\n\nstatic void _dxf_PUSH_MULTIPLY_MATRIX( void *ctx, float M[4][4] )\n{\n  /*\n   *  Pushing and multiplying are combined here since some API's (such as\n   *  Starbase) don't provide a separate push.\n   */\n\n  ENTRY( ( \"_dxf_PUSH_MULTIPLY_MATRIX (0x%x, 0x%x)\", ctx, M ) );\n\n  OGL_FAIL_ON_ERROR( into_dxf_PUSH_MULTIPLY_MATRIX );\n  glPushMatrix();\n  glMultMatrixf( (GLfloat *)M );\n\n  MPRINT( M );\n  OGL_FAIL_ON_ERROR( _dxf_PUSH_MULTIPLY_MATRIX );\n  EXIT( ( \"\" ) );\n}\n\nstatic void _dxf_PUSH_REPLACE_MATRIX( void *ctx, float M[4][4] )\n{\n  /*\n   *  Pushing and loading are combined here since some API's (such as\n   *  Starbase) don't provide a separate push.\n   */\n  ENTRY( ( \"_dxf_PUSH_REPLACE_MATRIX (0x%x, 0x%x)\", ctx, M ) );\n\n  glPushMatrix();\n  glLoadMatrixf( (GLfloat *)M );\n\n  MPRINT( M );\n  OGL_FAIL_ON_ERROR( _dxf_PUSH_REPLACE_MATRIX );\n  EXIT( ( \"\" ) );\n}\n\nstatic void _dxf_REPLACE_VIEW_MATRIX( void *ctx, float M[4][4] )\n{\n  /*\n   *  This is a badly named routine.  It actually replaces the projection\n   *  matrix.\n   */\n  ENTRY( ( \"_dxf_REPLACE_VIEW_MATRIX (0x%x, 0x%x)\", ctx, M ) );\n\n  glMatrixMode( GL_PROJECTION );\n  glLoadMatrixf( (GLfloat *)M );\n  glMatrixMode( GL_MODELVIEW );\n\n  MPRINT( M );\n  OGL_FAIL_ON_ERROR( _dxf_REPLACE_VIEW_MATRIX );\n  EXIT( ( \"\" ) );\n}\n\nstatic void _dxf_POP_MATRIX( void *ctx )\n{\n  ENTRY( ( \"_dxf_POP_MATRIX (0x%x)\", ctx ) );\n\n  glPopMatrix();\n\n  OGL_FAIL_ON_ERROR( _dxf_POP_MATRIX );\n  EXIT( ( \"\" ) );\n}\n\n#if defined( DX_NATIVE_WINDOWS )\n\nstatic void _dxf_SWAP_BUFFERS( void *ctx )\n\n#else\nstatic void _dxf_SWAP_BUFFERS( void *ctx, Window w )\n\n#endif\n{\n  DEFCONTEXT( ctx );\n\n  ENTRY( ( \"_dxf_SWAP_BUFFERS(0x%x)\", ctx ) );\n\n#if defined( DX_NATIVE_WINDOWS )\n  SwapBuffers( OGLHDC );\n#else\n  glXSwapBuffers( OGLDPY, w );\n#endif\n\n  OGL_FAIL_ON_ERROR( _dxf_SWAP_BUFFERS );\n  EXIT( ( \"\" ) );\n}\n\nstatic Error _dxf_ClearBuffer( void *win )\n{\n  glClear( GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT );\n  return OK;\n}\n\nstatic void _dxf_SET_MATERIAL_SPECULAR( void *ctx, float r, float g, float b,\n                                        float power )\n{\n  /*\n   *  Set material specular color and shininess.  OpenGL range for specular\n   *  power is 0-128.  Material diffuse and ambient colors are set when\n   *  generating OpenGL graphics primitives in hwPortUtilOGL.c.  DX\n   *  doesn't use the notion of varying specular properties across a\n   *  single material's surface.\n   */\n  float color[4];\n\n  ENTRY( ( \"_dxf_SET_MATERIAL_SPECULAR (0x%x, %f, %f, %f, %f)\", ctx, r, g, b,\n           power ) );\n\n  power = ( power < 0 ? 0 : ( power > 127 ? 127 : power ) );\n  color[0] = r;\n  color[1] = g;\n  color[2] = b;\n  color[3] = 1;\n\n  glMaterialf( GL_FRONT_AND_BACK, GL_SHININESS, power );\n  glMaterialfv( GL_FRONT_AND_BACK, GL_SPECULAR, color );\n\n  OGL_FAIL_ON_ERROR( _dxf_SET_MATERIAL_SPECULAR );\n  EXIT( ( \"\" ) );\n}\n\nstatic void _dxf_SET_GLOBAL_LIGHT_ATTRIBUTES( void *ctx, int on )\n{\n  /*\n   *  Set global lighting attributes.  Some API's, like IBM GL, can only\n   *  set certain lighting attributes such as attenuation globally across\n   *  all defined lights; these API's should do the appropriate\n   *  initialization through this call.  If `on' is FALSE, turn lighting\n   *  completely off.\n   *\n   *  For OpenGL, we will keep some default values: no local viewer for\n   *  specular reflection computations, and one-sided instead of two-sided\n   *  lighting. Note that GL_LIGHTING is also turned on and off in the\n   *  geometry rendering routines in hwPortUtilOGL.c.\n   */\n  ENTRY( ( \"_dxf_SET_GLOBAL_LIGHT_ATTRIBUTES(0x%x, %d)\", ctx, on ) );\n\n  if ( on )\n  {\n    /*\n     *  Specify no pervasive ambient lighting over the entire scene.\n     *  Ambient lighting is handled with specific ambient lights passed to\n     *  _dxf_DEFINE_LIGHT().\n     *\n     *  tjm says this will probably change soon.\n     */\n\n    glEnable( GL_LIGHTING );\n    /*\n     * Try this some day:\n     * glLightModel(GL_LIGHT_MODEL_TWO_SIDED, GL_TRUE);\n     */\n  }\n  else\n  {\n    glDisable( GL_LIGHTING );\n  }\n\n  OGL_FAIL_ON_ERROR( _dxf_SET_GLOBAL_LIGHT_ATTRIBUTES );\n  EXIT( ( \"\" ) );\n}\n\nstatic int _dxf_DEFINE_LIGHT( void *win, int n, Light light )\n{\n  /*\n   *  Define and switch on light `id' using the attributes specified by\n   *  the `light' parameter.  If `light' is NULL, turn off light `id'.\n   *  If more lights are defined than supported by the API, the extra\n   *  lights are ignored.\n   */\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n  RGBColor color;\n  Vector direction;\n  float gamma;\n  float new[4];\n  int lightNumber = GL_LIGHT0 + ( n - 1 );\n\n  ENTRY( ( \"_dxf_DEFINE_LIGHT (0x%x, %d, 0x%x)\", win, n, light ) );\n\n#if defined( DX_NATIVE_WINDOWS )\n  gamma = 2;\n#else\n  gamma = OGLTRANSLATION->gamma;\n#endif\n\n  if ( n > 8 )\n  {\n    /* some API's don't support more than 8 lights */\n    DXWarning( \"#5195\" );\n    EXIT( ( \"more than 8 lights\" ) );\n    return OK;\n  }\n\n  if ( !light )\n  {\n    if ( n == 0 )\n    {\n      new[0] = new[1] = new[2] = 0.0;\n      new[3] = 1;\n      glLightModelfv( GL_LIGHT_MODEL_AMBIENT, new );\n    }\n    else\n    {\n      /* turn this light off */\n      PRINT( ( \"switching off light %d\", n ) );\n      glDisable( lightNumber );\n    }\n    EXIT( ( \"OK\" ) );\n    return OK;\n  }\n\n  if ( DXQueryCameraDistantLight( light, &direction, &color ) )\n  {\n    /* Some funny DEBUGGING stuff left in */\n    PRINT( ( \"camera-relative, light direction\" ) );\n    SPRINT( direction );\n    PRINT( ( \"color\" ) );\n    CPRINT( color );\n\n    if ( n == 0 )\n    {\n      PRINT( ( \"tried to redefine light 0\" ) );\n      DXErrorGoto( ERROR_INTERNAL, \"#13740\" );\n    }\n\n    /* load identity for camera relative-light */\n    glPushMatrix();\n    glLoadIdentity();\n\n    new[0] = direction.x;\n    new[1] = direction.y;\n    new[2] = direction.z;\n    new[3] = 0.0; /* homogeneous representation of distant light */\n\n    glLightfv( lightNumber, GL_POSITION, new );\n\n    /* set diffuse color.  ambient illumination supplied by separate light */\n    new[0] = pow( color.r, 1. / gamma );\n    new[1] = pow( color.g, 1. / gamma );\n    new[2] = pow( color.b, 1. / gamma );\n    new[3] = 1;\n    glLightfv( lightNumber, GL_DIFFUSE, new );\n\n    /* set specular color */\n    glLightfv( lightNumber, GL_SPECULAR, new );\n\n    /* switch on the light */\n    glEnable( lightNumber );\n\n    /* pop identity matrix */\n    glPopMatrix();\n  }\n  else if ( DXQueryDistantLight( light, &direction, &color ) )\n  {\n    PRINT( ( \"world-absolute, light direction\" ) );\n    SPRINT( direction );\n    PRINT( ( \"color\" ) );\n    CPRINT( color );\n\n    if ( n == 0 )\n    {\n      PRINT( ( \"tried to redefine light 0\" ) );\n      DXErrorGoto( ERROR_INTERNAL, \"#13740\" );\n    }\n\n    new[0] = direction.x;\n    new[1] = direction.y;\n    new[2] = direction.z;\n    new[3] = 0.0; /* homogeneous representation of distance light */\n\n    glLightfv( lightNumber, GL_POSITION, new );\n\n    /* set diffuse color.  ambient illumination supplied by separate light */\n    new[0] = pow( color.r, 1. / gamma );\n    new[1] = pow( color.g, 1. / gamma );\n    new[2] = pow( color.b, 1. / gamma );\n    new[3] = 1;\n    glLightfv( lightNumber, GL_DIFFUSE, new );\n\n    /* set specular color */\n    glLightfv( lightNumber, GL_SPECULAR, new );\n\n    /* switch on the light */\n    glEnable( lightNumber );\n  }\n  else if ( DXQueryAmbientLight( light, &color ) )\n  {\n    PRINT( ( \"ambient\" ) );\n    PRINT( ( \"color\" ) );\n    CPRINT( color );\n\n    new[0] = pow( color.r, 1. / gamma );\n    new[1] = pow( color.g, 1. / gamma );\n    new[2] = pow( color.b, 1. / gamma );\n    new[3] = 1;\n    glLightModelfv( GL_LIGHT_MODEL_AMBIENT, new );\n  }\n  else\n  {\n    PRINT( ( \"invalid light\" ) );\n    DXErrorGoto( ERROR_DATA_INVALID, \"#13750\" );\n  }\n\n  OGL_FAIL_ON_ERROR( _dxf_DEFINE_LIGHT );\n  EXIT( ( \"OK\" ) );\n  return OK;\n\nerror:\n\n  OGL_FAIL_ON_ERROR( _dxf_DEFINE_LIGHT );\n  EXIT( ( \"ERROR\" ) );\n  return ERROR;\n}\n\nstatic int _dxf_READ_APPROX_BACKSTORE( void *win, int camw, int camh )\n{\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n\n  ENTRY( ( \"_dxf_READ_APPROX_BACKSTORE(0x%x, %d, %d)\", win, camw, camh ) );\n\n  if ( SAVE_BUF_SIZE != camw * camh )\n  {\n    if ( SAVE_BUF )\n    {\n      _dxf_FREE_PIXEL_ARRAY( PORT_CTX, SAVE_BUF );\n      SAVE_BUF = (void *)NULL;\n    }\n\n    /* allocate a buffer */\n    SAVE_BUF_SIZE = camw * camh;\n    if ( !( SAVE_BUF = _dxf_ALLOCATE_PIXEL_ARRAY( PORT_CTX, camw, camh ) ) )\n    {\n      PRINT( ( \"Out of memory in _dxf_READ_APPROX_BACKSTORE\" ) );\n      DXErrorGoto( ERROR_NO_MEMORY, \"#13790\" );\n    }\n    /*\n     * If we are running against an adapter that does not do\n     * readpixels well (i.e. E&S) then simply fill\n     * the buffer with black pixels.  Return OK so\n     * common layer uses the buffer for the interactors.\n     */\n    if ( _dxf_isFlagsSet( _dxf_SERVICES_FLAGS(), SF_INVALIDATE_BACKSTORE ) )\n    {\n#if 0\n      bzero(SAVE_BUF,SAVE_BUF_SIZE*sizeof(GLuint));\n#else\n      memset( SAVE_BUF, 0, SAVE_BUF_SIZE * sizeof( GLuint ) );\n#endif\n      EXIT( ( \"OK\" ) );\n      return OK;\n    }\n  }\n\n  /*\n   * DX hardware renderer expects pixels to be packed into 32-bit integers,\n   * so we use GL_RGBA format with a type of GL_UNSIGNED_BYTE.  Default\n   * read buffer is GL_BACK, so we must explicitly set GL_FRONT.\n   *\n   * Don't do the read if we are running against hardware that\n   * does not do readpixels well.\n   */\n  if ( !_dxf_isFlagsSet( _dxf_SERVICES_FLAGS(), SF_INVALIDATE_BACKSTORE ) )\n  {\n\n    glReadBuffer( GL_FRONT );\n    glReadPixels( 0, 0, camw, camh, GL_RGBA, GL_UNSIGNED_BYTE, SAVE_BUF );\n\n    /* Reset to Back buffer */\n    glReadBuffer( GL_BACK );\n  }\n\n  OGL_FAIL_ON_ERROR( _dxf_READ_APPROX_BACKSTORE );\n  EXIT( ( \"OK\" ) );\n  return OK;\n\nerror:\n\n  OGL_FAIL_ON_ERROR( _dxf_READ_APPROX_BACKSTORE );\n  EXIT( ( \"ERROR\" ) );\n  return ERROR;\n}\n\n/*\n * This function is only called if SAVE_BUFFER_VALID is TRUE\n * This will never be the case when SF_INVALIDATE_BACKSTORE\n * services flag is set.\n */\nstatic void _dxf_WRITE_APPROX_BACKSTORE( void *win, int camw, int camh )\n{\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n\n  ENTRY( ( \"_dxf_WRITE_APPROX_BACKSTORE(0x%x, %d, %d)\", win, camw, camh ) );\n\n  /* Draw saved backstore into front buffer */\n  glDrawBuffer( GL_FRONT );\n\n  /* Disable Z-buffer */\n  glDisable( GL_DEPTH_TEST );\n\n  SET_RASTER_SCREEN( 0, 0 );\n  glDrawPixels( camw, PIXH, GL_RGBA, GL_UNSIGNED_BYTE, SAVE_BUF );\n\n  /* make it visible */\n  glFlush();\n\n  /* Reset draws for normal operations */\n  glDrawBuffer( GL_BACK );\n  glEnable( GL_DEPTH_TEST );\n\n  /* redraw interactor echos; don't save them in SAVE_BUF */\n  _dxfRedrawInteractorEchos( INTERACTOR_DATA );\n\n  OGL_FAIL_ON_ERROR( _dxf_WRITE_APPROX_BACKSTORE );\n  EXIT( ( \"\" ) );\n}\n\nstatic void _dxf_WRITE_PIXEL_RECT( void *win, unsigned char *buf, int x, int y,\n                                   int w, int h )\n{\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n\n  ENTRY( ( \"_dxf_WRITE_PIXEL_RECT(0x%x, 0x%x, %d, %d, %d, %d)\", win, buf, x, y,\n           w, h ) );\n\n  /* There still seems to be a bug here.  When the window is resized\n   * larger than the 2d image, there is junk and gray in the new area.\n   * Also...with multiple vertical arranged 2d images, the top image\n   * is chopped off at the top (sometimes)\n   */\n  SET_RASTER_SCREEN( 0, 0 );\n  glDrawPixels( w, h, GL_RGBA, GL_UNSIGNED_BYTE, buf );\n\n  /* This finish should be a flush */\n  glFinish();\n\n  OGL_FAIL_ON_ERROR( _dxf_WRITE_PIXEL_RECT );\n  EXIT( ( \"\" ) );\n}\n\nstatic Error _dxf_DRAW_IMAGE( void *win, dxObject image, translationO dummy )\n{\n#if defined( DX_NATIVE_WINDOWS )\n  return ERROR;\n#else\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n  int x, y, w, h;\n  unsigned char *pixels = NULL;\n  void *translation = OGLTRANSLATION;\n\n  ENTRY( ( \"_dxf_DRAW_IMAGE(0x%x, 0x%x, 0x%x)\", win, image, dummy ) );\n\n  if ( !DXGetImageBounds( image, &x, &y, &w, &h ) )\n    goto error;\n\n  if ( !( pixels = tdmAllocateZero( sizeof( uint32 ) * w * h ) ) )\n    goto error;\n\n  if ( !_dxf_dither( image, w, h, x, y, translation, pixels ) )\n    goto error;\n\n  _dxf_WRITE_PIXEL_RECT( win, pixels, 0, 0, w, h );\n\n  tdmFree( pixels );\n  pixels = NULL;\n\n  OGL_FAIL_ON_ERROR( _dxf_DRAW_IMAGE );\n  EXIT( ( \"OK\" ) );\n  return OK;\n\nerror:\n  if ( pixels )\n  {\n    tdmFree( pixels );\n    pixels = NULL;\n  }\n\n  OGL_FAIL_ON_ERROR( _dxf_DRAW_IMAGE );\n  EXIT( ( \"ERROR\" ) );\n  return ERROR;\n#endif\n}\n\nstatic int _dxf_ADD_CLIP_PLANES( void *win, Point *pt, Vector *normal,\n                                 int count )\n{\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n  int planeCount;\n  ClipPlane *planes = NULL;\n  float view[4][4];\n  double dview[4][4], datview[4][4];\n  int i;\n\n  ENTRY( ( \"_dxf_ADD_CLIP_PLANES(0x%x, 0x%x, 0x%x, %d)\", win, pt, normal,\n           count ) );\n\n  planes = (ClipPlane *)DXAllocate( count * sizeof( ClipPlane ) );\n  if ( !planes )\n    goto error;\n\n  planeCount = CLIP_PLANE_CNT;\n  CLIP_PLANE_CNT += count;\n\n  if ( CLIP_PLANE_CNT > MAX_CLIP_PLANES )\n  {\n    /* Too many clip planes specified, clip object ignored */\n    DXWarning( \"#13890\", MAX_CLIP_PLANES );\n    EXIT( ( \"CNT > MAX\" ) );\n    return OK;\n  }\n\n  /*\n   * pt and normal are in world coordinates. Because the view matrix is\n   * in the PROJECTION_MATRIX for xgl, this implies that we have view\n   * coordinates for clip planes (not world as the document says).\n   *\n   * So we need to apply the inverse of the clipping transform to the\n   * pt and normal to correct for this.\n   */\n  /* !!!!! This is unused !!!!! */\n  _dxfGetViewMatrix( MATRIX_STACK, view );\n  COPYMATRIX( dview, view );\n  _dxfAdjointTranspose( datview, dview );\n\n  for ( i = 0; i < count; i++ )\n  {\n    planes[planeCount].a = normal[i].x;\n    planes[planeCount].b = normal[i].y;\n    planes[planeCount].c = normal[i].z;\n    planes[planeCount].d = -DXDot( normal[i], pt[i] );\n    planeCount++;\n  }\n\n  planeCount--;\n  for ( i = 0; i < count; i++ )\n  {\n    glClipPlane( GL_CLIP_PLANE0 + planeCount, (GLdouble *)&planes[planeCount] );\n    glEnable( GL_CLIP_PLANE0 + planeCount );\n    planeCount--;\n  }\n\n  DXFree( (Pointer)planes );\n  OGL_FAIL_ON_ERROR( _dxf_ADD_CLIP_PLANES );\n  EXIT( ( \"OK\" ) );\n  return OK;\n\nerror:\n\n  DXFree( (Pointer)planes );\n  OGL_FAIL_ON_ERROR( _dxf_ADD_CLIP_PLANES );\n  EXIT( ( \"ERROR\" ) );\n  return ERROR;\n}\n\nstatic int _dxf_REMOVE_CLIP_PLANES( void *win, int count )\n{\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n  int i;\n  int planeCount;\n\n  ENTRY( ( \"_dxf_REMOVE_CLIP_PLANES (0x%x, %d)\", win, count ) );\n\n  if ( CLIP_PLANE_CNT > MAX_CLIP_PLANES )\n  {\n    CLIP_PLANE_CNT -= count;\n    EXIT( ( \"CNT > MAX\" ) );\n    return OK;\n  }\n\n  planeCount = CLIP_PLANE_CNT;\n  CLIP_PLANE_CNT -= count;\n\n  if ( count > planeCount )\n  {\n    /* Too many clip planes deleted */\n    DXErrorGoto( ERROR_INTERNAL, \"#13900\" );\n  }\n\n  planeCount--;\n  for ( i = 0; i < count; i++ )\n  {\n    glDisable( GL_CLIP_PLANE0 + planeCount );\n    planeCount--;\n  }\n\n  OGL_FAIL_ON_ERROR( _dxf_REMOVE_CLIP_PLANES );\n  EXIT( ( \"OK\" ) );\n  return OK;\n\nerror:\n\n  OGL_FAIL_ON_ERROR( _dxf_REMOVE_CLIP_PLANES );\n  EXIT( ( \"ERROR\" ) );\n  return ERROR;\n}\n\nstatic int _dxf_GET_VERSION( char **dsoStr )\n{\n  static char *DXHW_LIB_FLAVOR = \"OpenGL\";\n\n  ENTRY( ( \"_dxf_GET_VERSION(void)\" ) );\n  if ( dsoStr )\n    if ( *dsoStr )\n      *dsoStr = DXHW_LIB_FLAVOR;\n  return ( DXHW_DD_VERSION );\n  EXIT( ( \"OK\" ) );\n}\n\n/*\n *  STUB SECTION\n */\nstatic void _dxf_SET_SINGLE_BUFFER_MODE( void *ctx )\n{\n  ENTRY( ( \"_dxf_SET_SINGLE_BUFFER_MODE(0x%x)\", ctx ) );\n  EXIT( ( \"ERROR: stub\" ) );\n}\n\nstatic void _dxf_SET_DOUBLE_BUFFER_MODE( void *ctx )\n{\n  ENTRY( ( \"_dxf_SET_DOUBLE_BUFFER_MODE(0x%x)\", ctx ) );\n  EXIT( ( \"ERROR: stub\" ) );\n}\n\n/*\nstatic void _dxf_INIT_SW_RENDER_PASS (void *win)\n{\n  ENTRY((\"_dxf_INIT_SW_RENDER_PASS(0x%x)\",win));\n  EXIT((\"ERROR: stub\"));\n}\n*/\n\n/*\n *  PORT HANDLE SECTION\n */\nextern tdmInteractorEchoT _dxd_hwInteractorEchoPortOGL;\n\nextern Error _dxf_DrawOpaqueOGL( tdmPortHandleP portHandle, xfieldP xf,\n                                 RGBColor ambientColor, int buttonUp );\nextern Error _dxf_DrawTranslucentOGL( void *globals, RGBColor *ambientColor,\n                                      int buttonUp );\nint _dxf_READ_IMAGE( void *win, void *buf );\n\nstatic Error _dxf_StartFrame( void *win )\n{\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n\n#if defined( DX_NATIVE_WINDOWS )\n  wglMakeCurrent( OGLHDC, OGLHRC );\n#endif\n\n  if ( DO_DISPLAY_LISTS )\n  {\n    if ( TEXTURE_HASH )\n      _dxf_ResetObjectHash( TEXTURE_HASH );\n    else\n      TEXTURE_HASH = _dxf_InitObjectHash();\n\n    if ( DISPLAY_LIST_HASH )\n      _dxf_ResetDisplayListHash( DISPLAY_LIST_HASH );\n    else\n      DISPLAY_LIST_HASH = _dxf_InitDisplayListHash();\n  }\n\n  return OK;\n}\n\nstatic Error _dxf_EndFrame( void *win )\n{\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n\n  if ( DO_DISPLAY_LISTS )\n  {\n    if ( TEXTURE_HASH )\n      TEXTURE_HASH = _dxf_CullObjectHash( TEXTURE_HASH );\n\n    if ( DISPLAY_LIST_HASH )\n      DISPLAY_LIST_HASH = _dxf_CullDisplayListHash( DISPLAY_LIST_HASH );\n  }\n\n  return OK;\n}\n\nstatic tdmDrawPortT _oglDrawPort = {\n    /* AllocatePixelArray */ _dxf_ALLOCATE_PIXEL_ARRAY,\n    /* AddClipPlanes */ _dxf_ADD_CLIP_PLANES,\n    /* ClearArea */ _dxf_CLEAR_AREA,\n    /* CreateHwTranslation */ _dxf_CREATE_HW_TRANSLATION,\n    /* CreateWindow */ _dxf_CREATE_WINDOW,\n    /* DefineLight */ _dxf_DEFINE_LIGHT,\n    /* DestroyWindow */ _dxf_DESTROY_WINDOW,\n    /* DrawClip */ NULL,\n    /* DrawImage */ _dxf_DRAW_IMAGE,\n    /* DrawOpaque */ _dxf_DrawOpaqueOGL,\n    /* RemoveClipPlanes */ _dxf_REMOVE_CLIP_PLANES,\n    /* FreePixelArray */ _dxf_FREE_PIXEL_ARRAY,\n    /* InitRenderModule */ _dxf_INIT_RENDER_MODULE,\n    /* InitRenderPass */ _dxf_INIT_RENDER_PASS,\n    /* LoadMatrix */ _dxf_LOAD_MATRIX,\n    /* MakeProjectionMatrix */ _dxf_MAKE_PROJECTION_MATRIX,\n    /* PopMatrix */ _dxf_POP_MATRIX,\n    /* PushMultiplyMatrix */ _dxf_PUSH_MULTIPLY_MATRIX,\n    /* PushReplaceMatrix */ _dxf_PUSH_REPLACE_MATRIX,\n    /* ReadApproxBackstore */ _dxf_READ_APPROX_BACKSTORE,\n    /* ReplaceViewMatrix */ _dxf_REPLACE_VIEW_MATRIX,\n    /* SetBackgroundColor */ _dxf_SET_BACKGROUND_COLOR,\n    /* SetDoubleBufferMode */ _dxf_SET_DOUBLE_BUFFER_MODE,\n    /* SetGlobalLightAttributes */ _dxf_SET_GLOBAL_LIGHT_ATTRIBUTES,\n    /* SetMaterialSpecular */ _dxf_SET_MATERIAL_SPECULAR,\n    /* SetOrthoProjection */ _dxf_SET_ORTHO_PROJECTION,\n    /* SetOutputWindow */ _dxf_SET_OUTPUT_WINDOW,\n    /* SetPerspectiveProjection */ _dxf_SET_PERSPECTIVE_PROJECTION,\n    /* SetSingleBufferMode */ _dxf_SET_SINGLE_BUFFER_MODE,\n    /* SetViewport */ _dxf_SET_VIEWPORT,\n    /* SetWindowSize */ _dxf_SET_WINDOW_SIZE,\n    /* SwapBuffers */ _dxf_SWAP_BUFFERS,\n    /* WriteApproxBackstore */ _dxf_WRITE_APPROX_BACKSTORE,\n    /* WriteImage */ _dxf_WRITE_PIXEL_RECT,\n    /* Drawtransparent */ _dxf_DrawTranslucentOGL,\n    /* GetMartix */ _dxf_GET_MATRIX,\n    /* GetProjection */ _dxf_GET_PROJECTION,\n    /* GetVersion */ _dxf_GET_VERSION,\n    /* ReadImage */ _dxf_READ_IMAGE,\n    /* StartFrame */ _dxf_StartFrame,\n    /* EndFrame */ _dxf_EndFrame,\n    /* ClearBuffer */ _dxf_ClearBuffer};\n\nstatic void _dxfUninitPortHandle( tdmPortHandleP portHandle )\n{\n  ENTRY( ( \"_dxfUninitPortHandle(0x%x)\", portHandle ) );\n\n  if ( portHandle )\n  {\n    portHandle->portFuncs = NULL;\n    portHandle->echoFuncs = NULL;\n    /*\n     * Don't free portHandle->private here cause it's\n     * done in DESTROY_WINDOW as PORT_CTX\n     */\n    tdmFree( portHandle );\n  }\n\n  EXIT( ( \"\" ) );\n}\n\n#if defined( DX_NATIVE_WINDOWS )\ntdmPortHandleP _dxfInitPortHandleOGL( char *hostname )\n#else\ntdmPortHandleP _dxfInitPortHandleOGL( Display *dpy, char *hostname )\n#endif\n{\n  tdmPortHandleP ret;\n\n  ENTRY( ( \"_dxfInitPortHandleOGL(0x%x, \\\"%s\\\")\", dpy, hostname ) );\n\n#if 0\n/* Not needed with newer Exceeds > 6.2 */\n#if defined( intelnt ) || defined( WIN32 )\n  HCLXtInit();\n#endif\n#endif\n\n  _dxf_setFlags( _dxf_SERVICES_FLAGS(), SF_TMESH | SF_QMESH | SF_POLYLINES |\n                                            SF_DOES_TRANS |\n                                            SF_VOLUME_BOUNDARY );\n\n#if !defined( DEBUG ) && defined( RTLOAD )\n/* If the hardware rendering load module requires a newer set of\n * DX exported symbols than those available in the calling dxexec\n * return NULL.\n */\n#if defined( alphax ) || defined( sgi ) || defined( solaris )\n  /* If the hardware rendering load module requires a newer set of\n   * DX exported symbols than those available in the calling dxexec\n   */\n  {\n    int execSymbolInterface;\n    void *( *symVer )();\n    void *( *expVer )();\n    void *DX_handle;\n\n    if ( !( DX_handle = dlopen( NULL, RTLD_LAZY ) ) )\n    {\n      DXSetError( ERROR_UNEXPECTED, dlerror() );\n      EXIT( ( \"ERROR\" ) );\n      return NULL;\n    }\n\n    if ( ( symVer = (void * (*)())dlsym( DX_handle, \"DXSymbolInterface\" ) ) &&\n         ( expVer =\n               (void * (*)())dlsym( DX_handle, \"_dxfExportHwddVersion\" ) ) )\n    {\n      PRINT( ( \"found DXSymbolInterface;\" ) );\n      ( *symVer )( &execSymbolInterface );\n      ( *expVer )( DXD_HWDD_INTERFACE_VERSION );\n    }\n    else\n    {\n      execSymbolInterface = 0;\n    }\n\n    if ( LOCAL_DXD_SYMBOL_INTERFACE_VERSION > execSymbolInterface )\n    {\n      DXSetError( ERROR_UNEXPECTED, \"#13910\", \"hardware rendering\",\n                  \"DX Symbol Interface\" );\n      EXIT( ( \"ERROR\" ) );\n      return NULL;\n    }\n  }\n#elif !defined( DXD_WIN )\n  {\n    int execSymbolInterface;\n\n    if ( !loadbind( 0, _dxfInitPortHandleOGL, DXSymbolInterface ) )\n    {\n      DXSymbolInterface( &execSymbolInterface );\n      _dxfExportHwddVersion( DXD_HWDD_INTERFACE_VERSION );\n    }\n    else\n    {\n      execSymbolInterface = 0;\n    }\n\n    if ( LOCAL_DXD_SYMBOL_INTERFACE_VERSION > execSymbolInterface )\n    {\n      DXSetError( ERROR_UNEXPECTED, \"#13910\", \"hardware rendering\",\n                  \"DX Symbol Interface\" );\n      EXIT( ( \"ERROR: Symbol interface\" ) );\n      return NULL;\n    }\n  }\n#else\n  _dxfExportHwddVersion( DXD_HWDD_INTERFACE_VERSION );\n#endif\n#else\n  _dxfExportHwddVersion( DXD_HWDD_INTERFACE_VERSION );\n#endif\n\n  ret = (tdmPortHandleP)tdmAllocateLocal( sizeof( tdmPortHandleT ) );\n\n  if ( ret )\n  {\n    ret->portFuncs = &_oglDrawPort;\n    ret->echoFuncs = &_dxd_hwInteractorEchoPortOGL;\n    ret->uninitP = _dxfUninitPortHandle;\n    ret->private = NULL;\n  }\n\n  EXIT( ( \"ret = 0x%x\", ret ) );\n  return ret;\n}\n\nint _dxf_READ_IMAGE( void *win, void *buf )\n{\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n\n  ENTRY( ( \"_dxf_READ_IMAGE (0x%x, 0x%x)\", win, buf ) );\n#if defined( DX_NATIVE_WINDOWS )\n  if ( wglMakeCurrent( OGLHDC, OGLHRC ) )\n#else\n  if ( glXMakeCurrent( DPY, XWINID, OGLCTX ) )\n#endif\n  {\n    glReadBuffer( GL_FRONT );\n    glReadPixels( 0, 0, PIXW, PIXH, GL_RGB, GL_UNSIGNED_BYTE, buf );\n  }\n\n  EXIT( ( \"OK\" ) );\n  return OK;\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/src/exec/hwrender/xgl/hwPortXGL.c": "/***********************************************************************/\n/* Open Visualization Data Explorer                                    */\n/* (C) Copyright IBM Corp. 1989,1999                                   */\n/* ALL RIGHTS RESERVED                                                 */\n/* This code licensed under the                                        */\n/*    \"IBM PUBLIC LICENSE - Open Visualization Data Explorer\"          */\n/***********************************************************************/\n/*********************************************************************/\n/*                     I.B.M. CONFIENTIAL                            */\n/*********************************************************************/\n\n#include <dxconfig.h>\n\n/*---------------------------------------------------------------------------*\\\n $Source: /src/master/dx/src/exec/hwrender/xgl/hwPortXGL.c,v $\n\n This file contains the implementation of the basic DX porting layer for the\n Sun XGL graphics API.\n\n XGL splits its transform pipeline into\n\n     local model(LM) -> global model(GM) -> world(WC) -> virtual DC -> DC\n\n Lighting occurs in world coordinates and the viewing matrix is assumed to\n go from WC directly to VDC.  In the DX port we stuff only the projection\n matrix into the view transform and composite the local modeling, global\n modeling, and viewing matrices into a model/view matrix.\n\n Directional light sources in XGL point in the direction of the propagation\n of the light, not toward the light sources themselves.\n\n Specular reflections have to be explicitly enabled. XGL seems to perform a\n local viewer computation for specularity.\n\n XGL provides an implicit window resize policy, but we must be able to\n provide viewports smaller than the entire DC range for some renderings.\n Therefore we set XGL_CTX_VDC_MAP to XGL_VDC_MAP_OFF and explicitly set the\n viewport whenever the window size changes.\n\n If the graphics window is to be reparented (owned by the UI process), then\n it must be created from a window covering the whole screen; otherwise, the\n device viewport cannot be made larger than the initial window size.  This\n does not seem to be a restriction for children of the root window.\n\n According the \"SPARCstation 2GS / \"SPARCstation 2GT Technical White Paper\"\n from Sun, the GT will accelerate screen door transparency.  There isn't any\n mention of this in the XGL manuals.  Screen door is implemented here by\n using a surface fill stipple; however, it's really slow in the GS, so it's\n only enabled for the GT.\n\n $Log: hwPortXGL.c,v $\n Revision 1.5  2000/05/16 18:48:37  gda\n Changes to compile using MS compilers under Cygwin\n\n Revision 1.4  1999/05/10 15:45:40  gda\n Copyright message\n\n Revision 1.4  1999/05/10 15:45:40  gda\n Copyright message\n\n Revision 1.3  1999/05/03 14:06:43  gda\n moved to using dxconfig.h rather than command-line defines\n\n Revision 1.2  1999/04/21 18:40:10  gda\n COLORMAP -> CLRMAP due to conflict on cygwin\n\n Revision 1.1.1.1  1999/03/24 15:18:36  gda\n Initial CVS Version\n\n Revision 1.1.1.1  1999/03/19 20:59:49  gda\n Initial CVS\n\n Revision 10.1  1999/02/23 21:02:42  gda\n OpenDX Baseline\n\n Revision 9.10  1998/01/12 14:09:03  svs\n added necessary arg to call to SWAP\n\n * Revision 9.9  1998/01/09  14:02:41  gda\n * stereo compatibility\n *\n Revision 9.8  1997/08/25 20:13:53  paula\n all routines in this file must be static.\n\n * Revision 9.7  1997/07/31  15:00:12  svs\n * use _dxf_DrawOpaque, which exists, rather than _drawOpaque, which doesn't\n *\n * Revision 9.6  1997/07/29  17:14:55  svs\n * fixed args to DrawTranslucent\n *\n * Revision 9.5  1997/07/29  14:55:56  gda\n * fixed _dxf_DrawTrans to reflect correct arg list.  Looks\n * like xgl doesn't handle transparency.\n *\n * Revision 9.4  1997/06/27  13:35:25  gda\n * StartFrame and EndFrame, usefule (elsewhere) for\n * display list hashing\n *\n * Revision 9.3  1997/06/17  01:36:26  gda\n * *** empty log message ***\n *\n * Revision 9.1.1.2  1997/06/10  21:15:12  gda\n * near, far\n *\n * Revision 9.1.1.1  1997/05/22  22:34:00  svs\n * wintel build AND 3.1.4 demand fixes\n *\n * Revision 9.1  1997/05/22  22:33:56  svs\n * Copy of release 3.1.4 code\n *\n * Revision 8.5  1996/12/20  13:46:26  svs\n * moved SERVICES_FLAGS to hw independent part\n *\n * Revision 8.4  1996/05/07  13:46:41  gda\n * added ReadImage call\n *\n * Revision 8.3  1996/05/03  17:54:20  gda\n * removed questionable 'static' from def. of dxf_SERVICES_FLAGS\n *\n * Revision 8.2  1996/01/18  17:08:39  c1orrang\n * added stubs for 8.0 transparency\n *\n * Revision 8.1  1995/10/16  12:55:05  c1orrang\n * solaris gamma correction <JKAROL307>\n *\n * Revision 8.0  1995/10/03  22:15:36  nsc\n * Copy of release 3.1 code\n *\n * Revision 7.16  1995/08/30  21:09:08  c1orrang\n * Re-doublebuffered solaris build w/ DX_SINGLE_BUFFER_SUN flag\n *\n * Revision 7.15  1994/08/04  08:26:23  nsc\n * ifdef out solaris changes which don't compile under old version of xgl\n *\n * Revision 7.14  94/06/30  16:57:47  nsc\n * changes to make hardware rendering work under solaris.\n * we can't read pixels back from the adaptor, so we are:\n * running single buffered and using X to read back the bytes\n * under the gnomon, and we are allocating our own pixel buffers\n * instead of using the ones created by the system\n *\n * Revision 7.13  94/06/24  17:05:11  nsc\n * add code for solaris only which goes into single\n * buffer mode until we can work around the double\n * buffer mode bug.\n *\n * Revision 7.0.2.6  1994/06/20  17:57:01  ellen\n * oops...made xgl_context_post/xgl_context_flush change specific for\n * solaris (and not for sun4)\n *\n * Revision 7.0.2.5  94/06/20  17:35:21  ellen\n * Changed all xgl_context_post to xgl_context_flush (ctx, XGL_FLUSH_BUFFERS)\nfor\n * solaris.\n *\n * Revision 7.0.2.4  94/06/08  20:04:36  jrush\n * Interface to WRITE_PIXEL_RECT changed from unsigned long *\n * to uint32 * in comman layer because of DEC port.  This\n *  would have caused a compile time warning in this\n * code thus the change.\n *\n * Revision 7.12  1994/06/08  20:03:37  jrush\n * Interface to WRITE_PIXEL_RECT changed from unsigned long *\n * to uint32 * in comman layer because of DEC port.  This\n * would have caused a compile time warning in this\n * code thus the change.\n *\n * Revision 7.11  1994/06/06  17:58:31  mjh\n * redraw interactor echos in _dxf_WRITE_APPROX_BACKSTORE(), since it's no\n * longer done by _dxfProcessEvents().  Fixes <MJH13>.\n *\n * Revision 7.10  94/04/21  15:35:27  tjm\n * added polylines to sun and hp, fixed mem leak in xf->origConnections and\n * added performance timing marks to sun and hp\n *\n * Revision 7.9  94/04/12  08:12:27  tjm\n * Fixed CREATE_WIN to use messages file and return error value\n *\n * Revision 7.8  94/03/31  15:55:19  tjm\n * added versioning\n *\n * Revision 7.7  94/03/29  09:13:30  tjm\n * added versioning\n *\n * Revision 7.6  94/03/23  16:34:20  tjm\n * added model clipping\n *\n * Revision 7.5  94/03/09  17:16:27  tjm\n * restored DrawOpaque interface, use TRANSLATION->gamma for gamma correction\n *\n * Revision 7.4  94/02/24  18:31:53  mjh\n * sun4/xgl maintenance: part 3, remove references to original DX field in\n * the xfield data structure.  XGL objects are now cached on the address of\n * the xfield.  XGL port now no longer requires STUBBED_CALLS preprocessor\n * definition.\n *\n * Revision 7.3  94/02/07  16:01:06  tjm\n * added services flags to sgi, hp and sun\n *\n * Revision 7.2  94/01/20  20:10:32  ellen\n * Added mask to pixels in _dxf_DRAW_IMAGE, and added some error\n * checking for WRITE_PIXEL_RECT, and cleaned up some #if 0\n *\n * Revision 7.1  94/01/18  19:00:07  svs\n * changes since release 2.0.1\n *\n * Revision 6.5  94/01/18  12:32:43  ellen\n * Cleaned up DRAW_IMAGE to use _dxf_dither, so that the xgl\n * code is more like the 6000 and sgi and software for\n * 2-d images without camera.   Still need to do gamma correction\n * after the RCS branch.\n *\n * Revision 6.4  94/01/11  17:52:46  ellen\n * Added code to validImage to handle multiple sized arranged\n * 2-d images.  It initializes the space around a small\n * image and handles the bug where the image would wrap\n * with 3 images of multiple sizes.\n *\n * Revision 6.3  93/12/20  18:19:18  jdurko\n * set numplanes to PIXDEPTH\n *\n * Revision 6.2  93/12/13  18:02:06  tjm\n * removed tdmAdapter struct\n *\n * Revision 6.1  93/11/16  10:26:11  svs\n * ship level code, release 2.0\n *\n * Revision 1.19  93/10/21  11:00:59  tjm\n * removed XCloseDisplay calls. This is now done in _dxfDeletePortHandle\n *\n *\n * Revision 1.18  93/09/29  17:56:16  mjh\n * apply hideous screen object hack\n *\n * Revision 1.17  93/09/29  14:49:20  tjm\n * fixed <PITTS21> wrong background color on sun. 2 problems negative colors\n * in image (now clamp to 0.0) and const colors ignored for mesh primitives\n * (now set const colors when no normals)\n *\n * Revision 1.16  93/09/23  08:01:01  tjm\n * fixed WRITE_APPROX_BACKING store. Previously we were redrawing every timee\n * we needed to refresh.\n *\n * Revision 1.15  93/09/22  15:18:57  tjm\n * XGL drawing now returns error code, script windows resize to image, and\n * you can now open a 2nd hw window\n *\n * Revision 1.14  93/09/14  17:40:29  tjm\n * made changes to support used of LMC_AD for gl, also glObjects\n *\n * Revision 1.13  93/09/13  18:40:39  ellen\n * Added code for single and multiple 2-d images.  Still\n * need to add code to Clamp color between 0.0 and 1.0 in\n * validImage.  This code should be in hwrender for HP and\n * Sun.\n *\n * Revision 1.12  93/08/25  17:20:27  jdurko\n * don't free portHandle->private anymore\n *\n * Revision 1.11  93/08/25  17:06:04  jdurko\n * set PORT_CTX to NULL after freeing just in case.\n *\n * Revision 1.10  93/08/24  10:56:37  jdurko\n * put back xgl_open() call\n *\n * Revision 1.9  93/08/23  18:29:46  tjm\n * changed demand load interface\n *\n * Revision 1.8  93/08/23  11:42:55  tjm\n * added demand loading\n *\n * Revision 1.7  93/07/28  16:29:09  tjm\n * removed XCloseDisplay, this caused problems with code that reuses the\n * XDisplay\n *\n * Revision 1.6  93/07/24  19:08:06  tjm\n * fixed bug with REPLACE_VIEW_MATRIX, z is now 0,+1 not -1,+1\n *\n * Revision 1.5  93/07/23  17:29:16  ellen\n * Set available in hwIsAvailable\n *\n * Revision 1.4  93/07/14  13:29:01  tjm\n * added solaris ifdefs\n *\n * Revision 1.3  93/07/14  13:16:53  tjm\n * added solaris stuff\n *\n * Revision 1.2  93/06/29  11:29:26  tjm\n * removed debug statement allowing single buffer.\n *\n * Revision 1.1  93/06/29  10:01:37  tjm\n * Initial revision\n *\n * Revision 5.5  93/06/03  15:39:17  ellen\n * Added guts to _DXF_SET_BACKGROUND_COLOR.\n *\n * Revision 5.4  93/05/18  14:56:23  mjh\n * Disable screen door even on GT.  Hardware acceleration is only\n * available through XGL 3.0.\n *\n * Revision 5.3  93/05/11  18:03:51  mjh\n * Implement screen door transparency for the GT.\n *\n * Revision 5.2  93/05/06  18:40:23  ellen\n * Changed DXWarning, DXError*, and DXSetError with code numbers.\n *\n * Revision 5.1  93/03/30  14:41:44  ellen\n * Moved these files from the 5.0.2 Branch\n *\n * Revision 5.0.2.21  93/03/29  15:38:47  ellen\n * Cleaned up lots of memory leakiness.  Still need to turn off\n * error notification for xgl during tmeshes and drawing big chunks.\n *\n * Revision 5.0.2.20  93/03/22  18:39:26  ellen\n * There is a bug on xgl (BUG ID#1123335).  No NULL is\n * returned on failed xgl_object_create.  Need to use xgl_object_set to\n * set error notification on _dxf_ALLOCATE_PIXEL_ARRAY.\n *\n * Revision 5.0.2.19  93/03/12  18:18:23  ellen\n * *** empty log message ***\n *\n * Revision 5.0.2.18  93/03/10  16:25:38  mjh\n * check light number < MAX_LIGHTS-1\n *\n * Revision 5.0.2.17  93/02/25  17:45:46  ellen\n * Added code to _dxf_GRAPHICS_NOT_AVAILABLE\n * to check for hostname, display, xgl, etc.\n *\n * Revision 5.0.2.16  93/02/10  16:15:29  mjh\n * flush XGL output queue before swapping buffers, not after.\n *\n * Revision 5.0.2.15  93/02/04  19:21:58  mjh\n * Create scratch XGL context in _dxf_CREATE_WINDOW(), not\n * _dxf_INIT_RENDER_MODULE().  The cursor interactor is created before the\n * latter routine is called, and it requires a scratch context.\n * Take sqrt() of specular exponent to match software renderer more\n * closely.\n * Create all raster objects with a color type of RGB.\n * Miscellaneous changes to commentary.\n *\n * Revision 5.0.2.14  93/02/02  15:34:14  mjh\n * Fix resize when graphics window is reparented by UI.  Reparenting\n * seems to restrict the size of the graphics window to a maximum of\n * its initial creation size.\n *\n * Revision 5.0.2.13  93/02/01  22:19:40  mjh\n * Implement pixel read/write, gnomon and zoom box echos.\n *\n * Revision 5.0.2.12  93/01/25  15:06:34  owens\n * added _dxf_SET_BACKGROUND_COLOR\n *\n * Revision 5.0.2.11  93/01/13  16:57:44  mjh\n * go into double buffer mode in _dxf_INIT_RENDER_MODULE().  Apparently DX\n * no longer calls _dxf_DOUBLE_BUFFER_MODE() explicitly upon window creation.\n *\n * Revision 5.0.2.10  93/01/12  23:00:17  owens\n * reversed sense of _dxf_GRAPHICS_NOT_AVAILABLE to a rather silly and\n * unobvious interpretation\n *\n * Revision 5.0.2.9  93/01/12  19:06:35  mjh\n * fix double buffering\n *\n * Revision 5.0.2.8  93/01/10  22:17:30  mjh\n * add lighting\n *\n * Revision 5.0.2.7  93/01/09  00:26:49  mjh\n * frame buffer stuff\n *\n * Revision 5.0.2.6  93/01/08  16:55:21  mjh\n * fix visual selection\n *\n * Revision 5.0.2.5  93/01/08  13:33:41  mjh\n * implement transformation pipeline\n *\n * Revision 5.0.2.4  93/01/07  03:52:24  mjh\n * peruse available visuals.  keep track of number of windows open\n * so that xgl_open() and xgl_close() can be called appropriately.\n *\n * Revision 5.0.2.3  93/01/06  17:00:25  mjh\n * window creation and destruction\n *\n * Revision 5.0.2.2  93/01/06  04:41:31  mjh\n * initial revision\n *\n\\*---------------------------------------------------------------------------*/\n\n/*\n * try to work around solaris bug by not using double buffering.\n * nsc 21jun94\n */\nint SunSingleBug = 0;\n\n/*\n *  following define marks workaround code for Sun XGL bug\n *  Ref ID #1239569   Bug ID #1123335  3/18/93\n */\n#define XGL_ALLOC_BUG 1\n\n#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <dlfcn.h>\n\n#define STRUCTURES_ONLY\n#include \"hwDeclarations.h\"\n#include \"hwWindow.h\"\n#include \"hwMatrix.h\"\n#include \"hwPortXGL.h\"\n#include \"hwInteractor.h\"\n#include \"hwSort.h\"\n\n#ifndef STANDALONE\n#include \"hwMemory.h\"\n#endif\n\n#include \"hwDebug.h\"\n\n#include \"hwPortLayer.h\"\n\n/* for translationT structure */\n#define Object dxObject\n#define Matrix dxMatrix\n#include \"internals.h\"\n#undef Object\n#undef Matrix\n\n#ifndef MAXHOSTNAMELEN\n#define MAXHOSTNAMELEN 64\n#endif\n\n#if 1\n#define ___ansi_fflush( n ) fflush( n )\n#endif\n\n#define DXHW_DD_VERSION 0x080000\n\nvoid _dxf_SET_VIEWPORT( void *ctx, int left, int right, int bottom, int top );\nvoid _dxf_SET_GLOBAL_LIGHT_ATTRIBUTES( void *ctx, int on );\nvoid *_dxf_ALLOCATE_PIXEL_ARRAY( void *ctx, int width, int height );\nvoid _dxf_FREE_PIXEL_ARRAY( void *ctx, void *pixels );\nvoid _dxf_SINGLE_BUFFER_MODE( void *ctx );\nvoid _dxf_DOUBLE_BUFFER_MODE( void *ctx );\nstatic void _dxf_WRITE_PIXEL_RECT( void *win, uint32 *foo, int x, int y,\n                                   int camw, int camh );\nstatic hwTranslationP _dxf_CREATE_HW_TRANSLATION( void *win );\n\n/* The XGL system state object, one per process (XGL session) */\n#ifdef solaris\nstatic Xgl_sys_state sys_st;\n#else\nstatic Xgl_sys_st sys_st;\n#endif\nstatic int _num_windows_open = 0;\nstatic int stackDepth = -5000;\n\n/* Used by _dxf_ALLOCATE_PIXEL_ARRAY because of bug */\nstatic int error_flag = 0;\n\n/* 50% screen door transparency pattern */\nstatic unsigned long screen_50[32] = {\n    0x55555555, 0xaaaaaaaa, 0x55555555, 0xaaaaaaaa, 0x55555555, 0xaaaaaaaa,\n    0x55555555, 0xaaaaaaaa, 0x55555555, 0xaaaaaaaa, 0x55555555, 0xaaaaaaaa,\n    0x55555555, 0xaaaaaaaa, 0x55555555, 0xaaaaaaaa, 0x55555555, 0xaaaaaaaa,\n    0x55555555, 0xaaaaaaaa, 0x55555555, 0xaaaaaaaa, 0x55555555, 0xaaaaaaaa,\n    0x55555555, 0xaaaaaaaa, 0x55555555, 0xaaaaaaaa, 0x55555555, 0xaaaaaaaa,\n    0x55555555, 0xaaaaaaaa};\n\nstatic Visual *_tdmGetVisual( Display *dpy, int scr, int depth,\n                              int visualClass )\n{\n  int n, i;\n  Visual *vis;\n  XVisualInfo desc, *info, *v;\n\n  desc.screen = scr;\n  desc.depth = depth;\n  info = XGetVisualInfo( dpy, VisualScreenMask | VisualDepthMask, &desc, &n );\n\n  for ( vis = 0, v = info, i = 0; i < n; i++, v++ )\n    if ( v->class == visualClass )\n    {\n      vis = v->visual;\n      break;\n    }\n\n  XFree( (char *)info );\n  return vis;\n}\n\nstatic void _tdmGetHardwareVisual( Display *dpy, int scr, int *depth,\n                                   Visual **vis )\n{\n  /*\n   *  Try to find a visual which will give the best results on this\n   *  particular frame buffer.\n   */\n\n  DPRINT( \"\\n(_tdmGetHardwareVisual\" );\n  if ( ( *vis = _tdmGetVisual( dpy, scr, 24, TrueColor ) ) )\n  {\n    DPRINT( \"\\nfound a TrueColor visual\" );\n    *depth = 24;\n  }\n  else if ( ( *vis = _tdmGetVisual( dpy, scr, 24, DirectColor ) ) )\n  {\n    DPRINT( \"\\nfound a DirectColor visual\" );\n    *depth = 24;\n  }\n  else if ( ( *vis = _tdmGetVisual( dpy, scr, 8, PseudoColor ) ) )\n  {\n    DPRINT( \"\\nfound a PseudoColor visual\" );\n    *depth = 8;\n  }\n  else\n    *depth = 0;\n\n  DPRINT( \")\" );\n}\n#ifdef solaris\n_tdmEnufMemory( Xgl_sys_state sys_st )\n{\n  Xgl_error_info errInfo;\n\n  xgl_object_get( sys_st, XGL_SYS_ST_ERROR_INFO, &errInfo );\n  error_flag = (int)errInfo.category;\n}\n#else\nstatic void _tdmEnufMemory( Xgl_error_type type, int num, char *msg,\n                            char *op_name, char *obj_name, char *operand )\n{\n  DPRINT( \"\\n(_tdmEnufMemory)\" );\n  msg = NULL;\n  error_flag = num;\n}\n#endif\n\nstatic int _dxf_SET_BACKGROUND_COLOR( void *ctx, RGBColor background_color )\n{\n  Xgl_color color;\n  DEFCONTEXT( ctx );\n  DPRINT( \"\\n(_dxf_SET_BACKGROUND_COLOR)\" );\n\n  color.rgb.r = pow( background_color.r, 1. / XGLTRANSLATION->gamma );\n  color.rgb.g = pow( background_color.g, 1. / XGLTRANSLATION->gamma );\n  color.rgb.b = pow( background_color.b, 1. / XGLTRANSLATION->gamma );\n\n  xgl_object_set( XGLCTX, XGL_CTX_BACKGROUND_COLOR, &color, 0 );\n}\n\nvoid *_dxf_CREATE_WINDOW( void *globals, char *winName, int w, int h )\n{\n  /*\n   *  Create a new hardware graphics window with specified name and\n   *  dimensions.  Return the X identifier associated with the window.\n   */\n\n  DEFGLOBALDATA( globals );\n  Window xid;\n  Visual *vis;\n  XSetWindowAttributes attrs;\n  int screen, depth, buffers;\n  tdmXGLctx tdmCtx = 0;\n  DPRINT( \"\\n(xglTDM_CREATE_WINDOW\" );\n\n/*\n * we can't seem to read pixels back from the adaptor correctly.\n * since we can't figure out if it's an xgl bug or some bug in our code\n * and we can't display the gnomon correctly without getting the pixels\n * back, the workaround for now is to run single buffer (so X knows which\n * buffer is visible since there is only 1) and to use X to read the\n * pixels back instead of asking the xgl lib for them.  nsc 30jun94\n */\n\n#if 0\n#if solaris\n  SunSingleBug = 1;\n  _dxf_setFlags(_dxf_SERVICES_FLAGS(), SF_INVALIDATE_BACKSTORE);\n#endif\n#else\n  if ( getenv( \"DX_SINGLE_BUFFER_SUN\" ) )\n  {\n    SunSingleBug = 1;\n    _dxf_setFlags( _dxf_SERVICES_FLAGS(), SF_INVALIDATE_BACKSTORE );\n  }\n#endif\n\n  /*\n   *  Allocate context for XGL-specific data.\n   *  It's deallocated in _dxf_DESTROY_WINDOW().\n   */\n\n  if ( !( tdmCtx = PORT_HANDLE->private =\n              (void *)tdmAllocateZero( sizeof( tdmXGLctxT ) ) ) )\n  {\n    DPRINT( \"\\nout of memory allocating private context)\" );\n    DXErrorGoto( ERROR_INTERNAL, \"#13000\" );\n  }\n  else\n#if 0\n      memset ((void *)tdmCtx, 0, sizeof(tdmXGLctxT)) ;\n#else\n  {\n    DEFPORT( PORT_HANDLE );\n    XGLTRANSLATION = _dxf_CREATE_HW_TRANSLATION( LWIN );\n  }\n#endif\n\n    /*\n     *  Open an X window with an appropriate visual type.\n     */\n\n    screen = DefaultScreen( DPY );\n  tdmCtx->screen_xmax = DisplayWidth( DPY, screen ) - 1;\n  tdmCtx->screen_ymax = DisplayHeight( DPY, screen ) - 1;\n\n  _tdmGetHardwareVisual( DPY, screen, &depth, &vis );\n  DPRINT1( \"\\nvisual depth: %d\", depth );\n  if ( depth == 0 )\n  {\n    /* Unable to find acceptable X visual */\n    DXErrorGoto( ERROR_INTERNAL, \"#11720\" );\n  }\n\n  attrs.border_pixel = None;\n  attrs.background_pixel = None;\n  attrs.colormap =\n      XCreateColormap( DPY, DefaultRootWindow( DPY ), vis, AllocNone );\n\n  if ( PARENT_WINDOW )\n  {\n    /* UI will reparent and clip this window */\n    w = tdmCtx->screen_xmax + 1;\n    h = tdmCtx->screen_ymax + 1;\n  }\n\n  if ( !( xid = XCreateWindow(\n              DPY, DefaultRootWindow( DPY ), 0, 0, w, h, 0, depth, InputOutput,\n              vis, CWBackPixel | CWBorderPixel | CWColormap, &attrs ) ) )\n  {\n    DPRINT( \"\\nCould not create X window)\" );\n    DXErrorGoto( ERROR_INTERNAL, \"#13770\" );\n  }\n  else\n    XStoreName( DPY, xid, isdigit( winName[0] ) ? \"DX\" : winName );\n\n  tdmCtx->num_planes = PIXDEPTH = depth;\n\n  /*\n   *  initialize XGL window objects\n   */\n\n  tdmCtx->xgl_x_win.X_display = DPY;\n  tdmCtx->xgl_x_win.X_window = xid;\n  tdmCtx->xgl_x_win.X_screen = screen;\n\n  tdmCtx->obj_desc.win_ras.type = XGL_WIN_X;\n  tdmCtx->obj_desc.win_ras.desc = &tdmCtx->xgl_x_win;\n\n/* create raster from X window, request double buffers and DXRGB colors */\n/*  Called Sun Software about bug.  xgl_object_create fails, but\n *  doesn't return a NULL (as documented).\n *  Ref ID #1239569   Bug ID #1123335  3/18/93\n */\n#ifdef XGL_ALLOC_BUG\n  error_flag = 0;\n  xgl_object_set( sys_st, XGL_SYS_ST_ERROR_NOTIFICATION_FUNCTION,\n                  _tdmEnufMemory, NULL );\n#endif\n\n  tdmCtx->ras = xgl_object_create(\n      sys_st, XGL_WIN_RAS, &tdmCtx->obj_desc, XGL_DEV_COLOR_TYPE, XGL_COLOR_RGB,\n      XGL_WIN_RAS_BUFFERS_REQUESTED, ( SunSingleBug ? 1 : 2 ), NULL );\n\n#ifdef XGL_ALLOC_BUG\n  if ( error_flag != 0 || !tdmCtx->ras )\n#else\n  if ( !tdmCtx->ras )\n#endif\n  {\n    DXErrorGoto( ERROR_INTERNAL, \"could not create xgl raster\" );\n  }\n\n  /* check result of numbuffer request */\n  xgl_object_get( tdmCtx->ras, XGL_WIN_RAS_BUFFERS_ALLOCATED,\n                  &tdmCtx->num_buffers );\n\n  if ( SunSingleBug )\n  {\n    DPRINT1( \"\\nrequested 1 buffers, got %d\", tdmCtx->num_buffers );\n    if ( tdmCtx->num_buffers != 1 )\n      DPRINT( \"\\ndidn't get expected number of buffers\" );\n  }\n  else\n  {\n    DPRINT1( \"\\nrequested 2 buffers, got %d\", tdmCtx->num_buffers );\n    if ( tdmCtx->num_buffers < 2 )\n      DPRINT( \"\\nhardware double buffering not available\" );\n  }\n\n  /* get raster current maximum coordinates */\n  xgl_object_get( tdmCtx->ras, XGL_DEV_MAXIMUM_COORDINATES,\n                  &tdmCtx->dev_max_coords );\n\n  DPRINT1( \"\\nmaximum X value: %f\", tdmCtx->dev_max_coords.x );\n  DPRINT1( \"\\nmaximum Y value: %f\", tdmCtx->dev_max_coords.y );\n  DPRINT1( \"\\nmaximum Z value: %f\", tdmCtx->dev_max_coords.z );\n\n  /* create XGL graphics context */\n  tdmCtx->xglctx = xgl_object_create(\n      sys_st, XGL_3D_CTX, NULL, XGL_CTX_DEVICE, tdmCtx->ras,\n      XGL_CTX_MODEL_TRANS_STACK_SIZE, 64, XGL_CTX_VDC_ORIENTATION,\n      XGL_Y_UP_Z_TOWARD, XGL_CTX_VDC_MAP, XGL_VDC_MAP_OFF,\n#ifdef solaris\n      XGL_3D_CTX_HLHSR_MODE, XGL_HLHSR_Z_BUFFER,\n#else\n      XGL_3D_CTX_HLHSR_MODE, XGL_HLHSR_ZBUFFER,\n#endif\n      XGL_CTX_NEW_FRAME_ACTION,\n      XGL_CTX_NEW_FRAME_CLEAR | XGL_CTX_NEW_FRAME_HLHSR_ACTION,\n      XGL_CTX_CLIP_PLANES, XGL_CLIP_XMIN | XGL_CLIP_XMAX | XGL_CLIP_YMIN |\n                               XGL_CLIP_YMAX | XGL_CLIP_ZMIN | XGL_CLIP_ZMAX,\n      XGL_CTX_DEFERRAL_MODE, XGL_DEFER_ASTI, XGL_3D_CTX_LIGHT_NUM, MAX_LIGHTS,\n      NULL );\n\n#ifdef XGL_ALLOC_BUG\n  if ( error_flag != 0 || !tdmCtx->xglctx )\n#else\n  if ( !tdmCtx->xglctx )\n#endif\n  {\n    DXErrorGoto( ERROR_INTERNAL, \"could not create xgl graphics context\" );\n  }\n\n  stackDepth = 0;\n  DPRINT1( \"\\nStack Depth = %d\", stackDepth );\n\n  /* create a scratch XGL context */\n  tdmCtx->xgl_tmp_ctx =\n      xgl_object_create( sys_st, XGL_3D_CTX, NULL,\n#ifdef solaris\n                         XGL_3D_CTX_HLHSR_MODE, XGL_HLHSR_Z_BUFFER,\n#endif\n                         NULL );\n\n#ifdef XGL_ALLOC_BUG\n  if ( error_flag != 0 || !tdmCtx->xgl_tmp_ctx )\n#else\n  if ( !tdmCtx->xgl_tmp_ctx )\n#endif\n  {\n    DXErrorGoto( ERROR_INTERNAL,\n                 \"could not create scratch xgl graphics context\" );\n  }\n\n/* get some additional info about the hardware */\n#ifdef solaris\n  tdmCtx->hw_info = (Xgl_inquire *)xgl_inquire( sys_st, &tdmCtx->obj_desc );\n#else\n  tdmCtx->hw_info = (Xgl_inquire *)xgl_inquire( &tdmCtx->obj_desc );\n#endif\n  DPRINT1( \"\\nframe buffer name: %s\", tdmCtx->hw_info->name );\n\n#if 0\n  if (strcmp (tdmCtx->hw_info->name, \"Sun:GT\"))\n      tdmCtx->use_screen_door = 0 ;\n  else\n      tdmCtx->use_screen_door = 1 ;\n#else\n  /*\n   *  Turns out that hardware acceleration for screen door transparency is\n   *  only available through XGL 3.0 or SunPhigs 2.0.\n   */\n  tdmCtx->use_screen_door = 0;\n#endif\n\n/* ship all buffered XGL commands */\n#ifndef solaris\n  xgl_context_post( tdmCtx->xglctx, 0 );\n#else\n  xgl_context_flush( tdmCtx->xglctx, XGL_FLUSH_BUFFERS );\n#endif\n\n  /* OK, we have at least one window open now */\n  _num_windows_open++;\n\n  DPRINT( \")\" );\n  return (void *)xid;\n\nerror:\n  if ( tdmCtx )\n  {\n    if ( tdmCtx->ras )\n      xgl_object_destroy( tdmCtx->ras );\n    if ( tdmCtx->xglctx )\n      xgl_object_destroy( tdmCtx->xglctx );\n    tdmFree( tdmCtx );\n  }\n\n  DPRINT( \"\\nerror)\" );\n  return 0;\n}\n\nvoid _dxf_DESTROY_WINDOW( void *win )\n{\n  /*\n   *  Destroy specified window and its resources.\n   */\n\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n  DPRINT( \"\\n(xglTDM_DESTROY_WINDOW\" );\n\n  if ( SAVE_BUF )\n  {\n    _dxf_FREE_PIXEL_ARRAY( PORT_CTX, SAVE_BUF );\n    SAVE_BUF = (void *)NULL;\n  }\n\n  if ( XGLTRANSLATION )\n  {\n    tdmFree( XGLTRANSLATION );\n    XGLTRANSLATION = NULL;\n  }\n\n  if ( SW_BUF )\n  {\n    tdmFree( SW_BUF );\n    SW_BUF = NULL;\n    SW_BUF_SIZE = 0;\n  }\n\n  if ( PORT_CTX )\n  {\n\n    if ( XGLCTX )\n    {\n#ifndef solaris\n      xgl_context_post( XGLCTX, 0 );\n#else\n      xgl_context_flush( XGLCTX, XGL_FLUSH_BUFFERS );\n#endif\n      xgl_object_destroy( XGLCTX );\n    }\n\n    if ( XGLRAS )\n      xgl_object_destroy( XGLRAS );\n    if ( XGLTMPCTX )\n      xgl_object_destroy( XGLTMPCTX );\n    if ( TMP_TRANSFORM )\n      xgl_object_destroy( TMP_TRANSFORM );\n    if ( SCREEN_DOOR_50 )\n      xgl_object_destroy( SCREEN_DOOR_50 );\n    if ( HW_INFO )\n      DXFree( HW_INFO );     /* xgl allocated this data... */\n    tdmFree( PORT_CTX );     /* ...we allocated this */\n    PORT_CTX = (void *)NULL; /* in case we try to free again */\n  }\n\n  _num_windows_open--;\n\n  DPRINT( \")\" );\n}\n\nvoid _dxf_SET_OUTPUT_WINDOW( void *win, Window w )\n{\n  /*\n   *  Direct all graphics to specified window.  Not needed for XGL.\n   */\n}\n\nvoid _dxf_SET_WINDOW_SIZE( void *win, int w, int h )\n{\n  /*\n   *  Set graphics window to the specified size.\n   */\n\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n  DPRINT( \"\\n(xglTDM_SET_WINDOW_SIZE\" );\n  DPRINT1( \"\\n%dx\", w );\n  DPRINT1( \"%d\", h );\n\n  VP_XMAX = w - 1;\n  VP_YMAX = h - 1;\n  XResizeWindow( DPY, XWINID, w - 1, h - 1 );\n  XSync( DPY, False );\n  _dxf_SET_VIEWPORT( PORT_CTX, 0, w - 1, 0, h - 1 );\n  DPRINT( \")\" );\n}\n\nError _dxf_INIT_RENDER_MODULE( void *globals )\n{\n  /*\n   *  This routine is called once, after the graphics window has been\n   *  created.  It's function is loosely defined to encompass all the\n   *  `first time' initialization of graphics window.\n   */\n\n  DEFGLOBALDATA( globals );\n  DEFPORT( PORT_HANDLE );\n  DPRINT( \"\\n(xglTDM_INIT_RENDER_MODULE\" );\n\n#ifdef XGL_ALLOC_BUG\n  error_flag = 0;\n#endif\n\n  /* create a scratch transform object */\n  TMP_TRANSFORM = xgl_object_create( sys_st, XGL_TRANS, NULL, 0 );\n\n#ifdef XGL_ALLOC_BUG\n  if ( error_flag != 0 || !TMP_TRANSFORM )\n#else\n  if ( !TMP_TRANSFORM )\n#endif\n    DXErrorGoto( ERROR_NO_MEMORY, \"#13000\" );\n\n  /* treat global modeling transform as composite of model and view */\n  xgl_object_get( XGLCTX, XGL_CTX_GLOBAL_MODEL_TRANS, &MODEL_VIEW_TRANSFORM );\n\n  /* treat viewing transform as a projection matrix */\n  xgl_object_get( XGLCTX, XGL_CTX_VIEW_TRANS, &PROJECTION_TRANSFORM );\n\n  /* create screen door transparency pattern */\n  SCREEN_DOOR_50 =\n      xgl_object_create( sys_st, XGL_MEM_RAS, 0, XGL_RAS_DEPTH, 1,\n                         XGL_RAS_WIDTH, 32, XGL_RAS_HEIGHT, 32, NULL );\n\n#ifdef XGL_ALLOC_BUG\n  if ( error_flag != 0 || !SCREEN_DOOR_50 )\n#else\n  if ( !SCREEN_DOOR_50 )\n#endif\n    DXErrorGoto( ERROR_NO_MEMORY, \"#13000\" );\n\n#ifdef solaris\n  xgl_object_set( SCREEN_DOOR_50, XGL_MEM_RAS_IMAGE_BUFFER_ADDR, &screen_50,\n                  0 );\n#else\n  xgl_object_set( SCREEN_DOOR_50, XGL_MEM_RAS_MEMORY_ADDRESS, &screen_50, 0 );\n#endif\n\n  if ( SunSingleBug )\n  {\n    /* go into single buffer mode */\n    _dxf_SINGLE_BUFFER_MODE( PORT_CTX );\n    BUFFER_MODE = SingleBufferMode;\n  }\n  else\n  {\n    /* go into double buffer mode */\n    _dxf_DOUBLE_BUFFER_MODE( PORT_CTX );\n    BUFFER_MODE = DoubleBufferMode;\n  }\n\n  /* initialize all lights OFF.  they have active default values. */\n  _dxf_SET_GLOBAL_LIGHT_ATTRIBUTES( PORT_CTX, 0 );\n\n  /* mark the image hardware approximation save buffer unallocated */\n  SAVE_BUF = 0;\n  SAVE_BUF_SIZE = 0;\n\n#if 0\n  /*\n   *  Try to load the rendering options file.  We need to do this to set\n   *  up rendering approximation options this even though the options file\n   *  itself is not used.  Crufty.\n   */\n  if (!_dxfLoadRenderOptionsFile(globals))\n      DXErrorGoto(ERROR_DATA_INVALID, \"#13760\") ;\n#endif\n\n  DPRINT( \")\" );\n  return 1;\n\nerror:\n  DPRINT( \"\\nerror)\" );\n  return 0;\n}\n\nvoid _dxf_SINGLE_BUFFER_MODE( void *ctx )\n{\n  /*\n   *  Go into single buffer mode\n   */\n\n  DEFCONTEXT( ctx );\n  int num_buffers;\n  DPRINT( \"\\n(xgl_TDM_SINGLE_BUFFER_MODE\" );\n\n  xgl_object_set( XGLRAS, XGL_WIN_RAS_BUF_DRAW, 0, XGL_WIN_RAS_BUF_DISPLAY, 0,\n                  XGL_WIN_RAS_BUFFERS_REQUESTED, 1, 0 );\n\n  /* check result of single buffer request */\n  xgl_object_get( XGLRAS, XGL_WIN_RAS_BUFFERS_ALLOCATED, &num_buffers );\n\n  DPRINT1( \"\\nrequested 1 buffers, got %d\", num_buffers );\n\n  DRAW_BUFFER = 0;\n  DISPLAY_BUFFER = 0;\n  DOUBLE_BUFFER_MODE = 0;\n  BUFFER_CONFIG_MODE = BOTHBUFFERS;\n\n#ifndef solaris\n  xgl_context_post( XGLCTX, 0 );\n#else\n  xgl_context_flush( XGLCTX, XGL_FLUSH_BUFFERS );\n#endif\n  DPRINT( \")\" );\n}\n\nvoid _dxf_DOUBLE_BUFFER_MODE( void *ctx )\n{\n  /*\n   *  Go into double buffer mode.\n   */\n\n  DEFCONTEXT( ctx );\n  DPRINT( \"\\n(xglTDM_DOUBLE_BUFFER_MODE\" );\n\n  if ( NUM_BUFFERS > 1 )\n  {\n    xgl_object_set( XGLRAS, XGL_WIN_RAS_BUFFERS_REQUESTED, 2, 0 );\n\n    xgl_object_set( XGLRAS, XGL_WIN_RAS_BUF_DRAW, 1, XGL_WIN_RAS_BUF_DISPLAY, 0,\n                    0 );\n\n    DRAW_BUFFER = 1;\n    DISPLAY_BUFFER = 0;\n    DOUBLE_BUFFER_MODE = 1;\n    BUFFER_CONFIG_MODE = BCKBUFFER;\n\n#ifndef solaris\n    xgl_context_post( XGLCTX, 0 );\n#else\n    xgl_context_flush( XGLCTX, XGL_FLUSH_BUFFERS );\n#endif\n  }\n  DPRINT( \")\" );\n}\n\nvoid _dxf_SWAP_BUFFERS( void *ctx, Window w )\n{\n  /*\n   *  Switch front and back buffers.  This is always called at the end of\n   *  a rendering pass regardless of double/single buffer mode.  Always\n   *  flush XGL output queue before swapping buffers.\n   */\n\n  DEFCONTEXT( ctx );\n  DPRINT( \"\\n(xglTDM_SWAP_BUFFERS\" );\n\n#ifndef solaris\n  xgl_context_post( XGLCTX, 0 );\n#else\n  xgl_context_flush( XGLCTX, XGL_FLUSH_BUFFERS );\n#endif\n\n  if ( DOUBLE_BUFFER_MODE )\n    if ( DISPLAY_BUFFER == 1 )\n    {\n      xgl_object_set( XGLRAS, XGL_WIN_RAS_BUF_DRAW, 1, XGL_WIN_RAS_BUF_DISPLAY,\n                      0, NULL );\n      DRAW_BUFFER = 1;\n      DISPLAY_BUFFER = 0;\n    }\n    else\n    {\n      xgl_object_set( XGLRAS, XGL_WIN_RAS_BUF_DRAW, 0, XGL_WIN_RAS_BUF_DISPLAY,\n                      1, NULL );\n      DRAW_BUFFER = 0;\n      DISPLAY_BUFFER = 1;\n    }\n  DPRINT( \")\" );\n}\n\nvoid _dxf_CLEAR_AREA( void *ctx, int left, int right, int bottom, int top )\n{\n  /*\n   *  Clear image and zbuffer planes in specified pixel bounds.\n   */\n\n  DEFCONTEXT( ctx );\n  int vp_left, vp_right, vp_bottom, vp_top;\n\n  DPRINT( \"\\n(xglTDM_CLEAR_AREA\" );\n  DPRINT1( \"\\nleft right bottom top %d, \", left );\n  DPRINT1( \"%d, \", right );\n  DPRINT1( \"%d, \", bottom );\n  DPRINT1( \"%d \", top );\n\n  /* save original viewport */\n  vp_left = VP_LEFT;\n  vp_right = VP_RIGHT;\n  vp_bottom = VP_BOTTOM;\n  vp_top = VP_TOP;\n\n  /* set new viewport */\n  _dxf_SET_VIEWPORT( ctx, left, right, bottom, top );\n\n  /* clear rendering surface */\n  xgl_context_new_frame( XGLCTX );\n\n  /* reset the original viewport */\n  _dxf_SET_VIEWPORT( ctx, vp_left, vp_right, vp_bottom, vp_top );\n  DPRINT( \")\" );\n}\n\nvoid _dxf_WRITE_PRECISE_RENDERING( void *win, int camw, int camh )\n{\n  /*\n   *  DXWrite pixels from software rendering buffer (SW_BUF) into the main\n   *  graphics window.  camw and camh are the DX camera resolutions in width\n   *  and height; these may differ from the graphics window dimensions.\n   */\n\n  DEFWINDATA( win );\n}\n\nstatic int _dxf_READ_APPROX_BACKSTORE( void *win, int camw, int camh )\n{\n  /*\n   *  DXRead pixels from the main graphics window into the hardware saveunder\n   *  buffer (SAVE_BUF). camw and camh are the DX camera resolutions in width\n   *  and height; these may differ from the graphics window dimensions.\n   *\n   *  This is required in the XGL port for interactor echos, even though\n   *  we don't use _dxf_WRITE_APPROX_BACKSTORE().\n   */\n\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n\n  DPRINT( \"\\n(xglTDM_READ_APPROX_BACKSTORE\" );\n  DPRINT1( \"\\nSAVE_BUF = 0x%x\", SAVE_BUF );\n\n  if ( SAVE_BUF_SIZE != camw * camh )\n  {\n    if ( SAVE_BUF )\n    {\n      _dxf_FREE_PIXEL_ARRAY( PORT_CTX, SAVE_BUF );\n      SAVE_BUF = (void *)NULL;\n    }\n\n    SAVE_BUF_SIZE = camw * camh;\n    DPRINT1( \"\\nSAVE_BUF_SIZE = %d\", SAVE_BUF_SIZE );\n\n    /* allocate a buffer */\n    if ( !( SAVE_BUF = _dxf_ALLOCATE_PIXEL_ARRAY( PORT_CTX, camw, camh ) ) )\n    {\n      DPRINT( \"\\nout of memory)\" );\n      DXSetError( ERROR_NO_MEMORY, \"#13000\" );\n      return 0;\n    }\n    /*\n     * If we are running against an adapter that does not do\n     * readpixels well (i.e. E&S) then simply fill\n     * the buffer with black pixels.  Return OK so\n     * common layer uses the buffer for the interactors.\n     */\n    if ( _dxf_isFlagsSet( _dxf_SERVICES_FLAGS(), SF_INVALIDATE_BACKSTORE ) )\n    {\n\n#if defined( PRIVATE_PIXELS )\n      Xgl_usgn32 *pixarray;\n\n      /* get address of buffer associated with portctx and zero it */\n      xgl_object_get( SAVE_BUF, XGL_MEM_RAS_IMAGE_BUFFER_ADDR, &pixarray );\n      /* the +1 is because the buffer needs to have an even width */\n      bzero( pixarray, ( camw + 1 ) * camh * ( ( NUM_PLANES < 24 ) ? 1 : 4 ) );\n#endif\n      DPRINT( \"done)\" );\n      return OK;\n    }\n  }\n\n  if ( !_dxf_isFlagsSet( _dxf_SERVICES_FLAGS(), SF_INVALIDATE_BACKSTORE ) )\n  {\n    /* read entire extent of image from frame buffer */\n    _dxf_READ_BUFFER( PORT_CTX, 0, 0, camw - 1, camh - 1, SAVE_BUF );\n  }\n\n  DPRINT( \")\" );\n  return 1;\n}\n\nvoid _dxf_WRITE_APPROX_BACKSTORE( void *win, int camw, int camh )\n{\n  /*\n   *  DXWrite pixels from hardware saveunder buffer (SAVE_BUF) into the main\n   *  graphics window.  camw and camh are the DX camera resolutions in width\n   *  and height; these may differ from the graphics window dimensions.\n   *\n   */\n\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n  DPRINT( \"\\n(xglTDM_WRITE_APPROX_BACKSTORE\" );\n\n  _dxf_WRITE_BUFFER( PORT_CTX, 0, 0, camw - 1, camh - 1, SAVE_BUF );\n\n  /* redraw interactor echos; can't save them in SAVE_BUF */\n  _dxfRedrawInteractorEchos( INTERACTOR_DATA );\n\n/* ensure that draw buffer rendering is completed */\n#ifndef solaris\n  xgl_context_post( XGLTMPCTX, 0 );\n#else\n  xgl_context_flush( XGLTMPCTX, XGL_FLUSH_BUFFERS );\n#endif\n\n  _dxf_SWAP_BUFFERS( PORT_CTX, (Window)win );\n\n  DPRINT( \"\\ndone)\" );\n}\n\nvoid _dxf_INIT_RENDER_PASS( void *win, int bufferMode, int zBufferMode )\n{\n  /*\n   *  Clear the window and prepare for a rendering pass.\n   */\n\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n  DPRINT( \"\\n(xglTDM_INIT_RENDER_PASS\" );\n\n  /* next call made to convince DI layer we're really in double buffer mode */\n  _dxfChangeBufferMode( win, bufferMode );\n\n  SAVE_BUF_VALID = FALSE;\n\n  DPRINT( \")\" );\n}\n\nvoid _dxf_INIT_SW_RENDER_PASS( void *win )\n{\n  /*\n   *  Clear the screen and prepare for writing a software-rendered image.\n   */\n\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n  DPRINT( \"\\n(xglTDM_INIT_SW_RENDER_PASS\" );\n\n  xgl_context_new_frame( XGLCTX );\n\n  DPRINT( \")\" );\n}\n\nvoid _dxf_MAKE_PROJECTION_MATRIX( int projection, float width, float aspect,\n                                  float Near, float Far,\n                                  register float M[4][4] )\n{\n  /*\n   *  Return a projection matrix for a simple orthographic or perspective\n   *  camera model (no oblique projections).  This matrix projects view\n   *  coordinates into a normalized projection coordinate system spanning\n   *  -1..1 in X and Y.\n   *\n   *  The projection parameter is 1 for perspective views and 0 for\n   *  orthogonal views.  Width is in world units for orthogonal views.\n   *  For perspective views, the width parameter is the field of view\n   *  expressed as the ratio of field width to eye distance, or twice the\n   *  tangent of half the angle of view.  Aspect is the height of the\n   *  window expressed as a fraction of the window width.\n   *\n   *  The Near and Far parameters are distances from the view coordinate\n   *  origin along the line of sight.  The Z clipping planes are at -Near\n   *  and -Far since we are using a right-handed coordinate system.  For\n   *  perspective, Near and Far must be positive in order to avoid drawing\n   *  objects at or behind the eyepoint depth.\n   *\n   *  XGL provides default view clip bounds and a default VDC window of\n   *  [-1,1] x [-1,1] x [0,1], so we don't need to alter it.  We use\n   *  right-handed coordinate systems in DX; for perspective projections,\n   *  the derivation of the projection matrix is easiest if we transform\n   *  visible primitives into the -w half-space.  The Sun hardware cannot\n   *  accelerate clipping in -w, so we negate a few matrix elements to\n   *  force w positive.\n   */\n\n  DPRINT( \"\\n(xglTDM_MAKE_PROJECTION_MATRIX\" );\n\n  M[0][0] = 1 / ( width / 2 );\n  M[0][1] = 0;\n  M[0][2] = 0;\n  M[0][3] = 0;\n  M[1][0] = 0;\n  M[1][1] = M[0][0] / aspect;\n  M[1][2] = 0;\n  M[1][3] = 0;\n  M[2][0] = 0;\n  M[2][1] = 0;\n  M[2][2] = 1;\n  M[2][3] = 0;\n  M[3][0] = 0;\n  M[3][1] = 0;\n  M[3][2] = 0;\n  M[3][3] = 1;\n\n  Far = -Far;\n  Near = -Near;\n\n  if ( projection )\n  {\n    /* perspective: see Newman & Sproull equations 23-2 and 23-4 */\n    float alpha = 1 / ( 1 - Far / Near );\n    float beta = -Far / ( 1 - Far / Near );\n\n    /* negate matrix elements to force w positive */\n    M[2][2] = -alpha;\n    M[3][2] = -beta;\n    M[2][3] = -1;\n    M[3][3] = 0;\n  }\n  else\n  {\n    /* orthographic */\n    M[2][2] = -1 / ( Far - Near );\n    M[3][2] = 1 + ( Near / ( Far - Near ) );\n  }\n\n  DPRINT( \")\" );\n}\n\nvoid _dxf_SET_ORTHO_PROJECTION( void *ctx, float width, float aspect,\n                                float Near, float Far )\n{\n  /*\n   *  Set up an orthographic view projection and load it into the hardware.\n   */\n\n  DEFCONTEXT( ctx );\n  float M[4][4];\n\n  DPRINT( \"\\n(xglTDM_SET_ORTHO_PROJECTION\" );\n  DPRINT1( \"\\nwidth aspect %f, \", width );\n  DPRINT1( \"%f\", aspect );\n  DPRINT1( \"\\nNear  Far    %f, \", Near );\n  DPRINT1( \"%f\", Far );\n\n  _dxf_MAKE_PROJECTION_MATRIX( 0, width, aspect, Near, Far, M );\n\n  /*\n   *  Make XGL's model/world transformation pipeline act like GL's\n   *  view/projection pipeline split by loading only the projection\n   *  component into the viewing matrix.\n   *\n   *  Note: this maps the GL (and TDM) notion of view coordinates into\n   *  XGL's world coordinates.\n   */\n\n  xgl_transform_write( PROJECTION_TRANSFORM, (void *)M );\n\n  DPRINT( \"\\ncalled xgl_transform_write() with matrix\\n\" );\n  MPRINT( M );\n  DPRINT( \")\" );\n}\n\nvoid _dxf_SET_PERSPECTIVE_PROJECTION( void *ctx, float fov, float aspect,\n                                      float Near, float Far )\n{\n  /*\n   *  Set up a perspective projection and load it into the hardware.\n   */\n\n  DEFCONTEXT( ctx );\n  float M[4][4];\n\n  DPRINT( \"\\n(xglTDM_SET_PERSPECTIVE_PROJECTION\" );\n  DPRINT1( \"\\nfov  aspect %f, \", fov );\n  DPRINT1( \"%f\", aspect );\n  DPRINT1( \"\\nNear Far    %f, \", Near );\n  DPRINT1( \"%f\", Far );\n\n  _dxf_MAKE_PROJECTION_MATRIX( 1, fov, aspect, Near, Far, M );\n\n  /*\n   *  Make XGL's model/world transformation pipeline act like GL's\n   *  view/projection pipeline split by loading only the projection\n   *  component into the viewing matrix.\n   *\n   *  Note: this maps the GL (and tdm) notion of view coordinates into\n   *  XGL's world coordinates.\n   */\n\n  xgl_transform_write( PROJECTION_TRANSFORM, (void *)M );\n\n  DPRINT( \"\\ncalled xgl_transform_write() with matrix\\n\" );\n  MPRINT( M );\n  DPRINT( \")\" );\n}\n\nvoid _dxf_REPLACE_VIEW_MATRIX( void *ctx, float M[4][4] )\n{\n  float M2[4][4];\n  DEFCONTEXT( ctx );\n  DPRINT( \"\\n(_dxf_REPLACE_VIEW_MATRIX\\n\" );\n  MPRINT( M );\n\n  if ( M[0][0] == 1.0 && M[0][1] == 0.0 && M[0][2] == 0.0 && M[0][3] == 0.0 &&\n       M[1][0] == 0.0 && M[1][1] == 1.0 && M[1][2] == 0.0 && M[1][3] == 0.0 &&\n       M[2][0] == 0.0 && M[2][1] == 0.0 && M[2][2] == 1.0 && M[2][3] == 0.0 &&\n       M[3][0] == 0.0 && M[3][1] == 0.0 && M[3][2] == 0.0 && M[3][3] == 1.0 )\n  {\n    /*\n     *  Here is a hideous hack for screen objects...\n     *  Default Z for M is -1,+1: we need 0,+1 here, so scale and translate.\n     */\n\n    DPRINT( \"\\nreceived screen object identity matrix...\" );\n\n    COPYMATRIX( M2, M );\n    M2[2][2] *= -0.5;\n    M2[3][2] = M2[3][2] * ( -0.5 ) + 0.5;\n\n    xgl_transform_write( PROJECTION_TRANSFORM, (void *)M2 );\n    DPRINT( \"\\ncalled xgl_transform_write() with:\\n\" );\n    MPRINT( M2 );\n  }\n  else\n    xgl_transform_write( PROJECTION_TRANSFORM, (void *)M );\n\n  DPRINT( \")\" );\n}\n\nvoid _dxf_SET_VIEWPORT( void *ctx, int left, int right, int bottom, int top )\n{\n  /*\n   *  Set up viewport in pixels.\n   */\n\n  DEFCONTEXT( ctx );\n#ifdef solaris\n  Xgl_bounds_d3d vp;\n#else\n  Xgl_bounds_f3d vp;\n#endif\n\n  DPRINT( \"\\n(xglTDM_SET_VIEWPORT\" );\n  DPRINT1( \"\\nleft right bottom top: %d, \", left );\n  DPRINT1( \"%d, \", right );\n  DPRINT1( \"%d, \", bottom );\n  DPRINT1( \"%d\", top );\n\n  vp.xmin = left;\n  vp.xmax = right;\n  vp.ymin = VP_YMAX - top;\n  vp.ymax = VP_YMAX - bottom;\n  vp.zmin = 0;\n  vp.zmax = VP_ZMAX;\n\n  DPRINT( \"\\nsetting XGL_CTX_DC_VIEWPORT\" );\n  DPRINT1( \"\\nvp.xmin %f\", vp.xmin );\n  DPRINT1( \" vp.xmax %f\", vp.xmax );\n  DPRINT1( \"\\nvp.ymin %f\", vp.ymin );\n  DPRINT1( \" vp.ymax %f\", vp.ymax );\n  DPRINT1( \"\\nvp.zmin %f\", vp.zmin );\n  DPRINT1( \" vp.zmax %f\", vp.zmax );\n\n  xgl_object_set( XGLCTX, XGL_CTX_DC_VIEWPORT, &vp, 0 );\n#ifndef solaris\n  xgl_context_post( XGLCTX, 0 );\n#else\n  xgl_context_flush( XGLCTX, XGL_FLUSH_BUFFERS );\n#endif\n\n  /* save viewport dimensions */\n  VP_LEFT = left;\n  VP_RIGHT = right;\n  VP_BOTTOM = bottom;\n  VP_TOP = top;\n  DPRINT( \")\" );\n}\n\nvoid _dxf_LOAD_MATRIX( void *ctx, float M[4][4] )\n{\n  /*\n   *  Load (replace) M onto the hardware matrix stack.\n   */\n\n  DEFCONTEXT( ctx );\n  DPRINT( \"\\n(xglTDM_LOAD_MATRIX\\n\" );\n  MPRINT( M );\n\n  xgl_transform_write( MODEL_VIEW_TRANSFORM, (void *)M );\n\n  DPRINT( \")\" );\n}\n\nvoid _dxf_PUSH_MULTIPLY_MATRIX( void *ctx, float M[4][4] )\n{\n  /*\n   *  Pushing and multiplying are combined here since some API's (such as\n   *  Starbase) don't provide a separate push.\n   */\n\n  DEFCONTEXT( ctx );\n  DPRINT( \"\\n(xglTDM_PUSH_MULTIPLY_MATRIX\\n\" );\n  MPRINT( M );\n\n  stackDepth++;\n  DPRINT1( \"\\nStack Depth = %d\", stackDepth );\n\n  xgl_context_update_model_trans( XGLCTX, XGL_MTR_PUSH | XGL_MTR_GLOBAL_TRANS );\n  xgl_transform_write( TMP_TRANSFORM, (void *)M );\n  xgl_transform_multiply( MODEL_VIEW_TRANSFORM, TMP_TRANSFORM,\n                          MODEL_VIEW_TRANSFORM );\n\n  DPRINT( \")\" );\n}\n\nvoid _dxf_PUSH_REPLACE_MATRIX( void *ctx, float M[4][4] )\n{\n  /*\n   *  Pushing and loading are combined here since some API's (such as\n   *  Starbase) don't provide a separate push.\n   */\n\n  DEFCONTEXT( ctx );\n  DPRINT( \"\\n(xglTDM_PUSH_REPLACE_MATRIX\\n\" );\n  MPRINT( M );\n\n  stackDepth++;\n  DPRINT1( \"\\nStack Depth = %d\", stackDepth );\n\n  xgl_context_update_model_trans( XGLCTX, XGL_MTR_PUSH | XGL_MTR_GLOBAL_TRANS );\n  xgl_transform_write( MODEL_VIEW_TRANSFORM, (void *)M );\n\n  DPRINT( \")\" );\n}\n\nvoid _dxf_POP_MATRIX( void *ctx )\n{\n  /*\n   *  Pop the hardware matrix stack.\n   */\n\n  DEFCONTEXT( ctx );\n  DPRINT( \"\\n(xglTDM_POP_MATRIX\" );\n\n  stackDepth--;\n  DPRINT1( \"\\nStack Depth = %d\", stackDepth );\n\n  xgl_context_update_model_trans( XGLCTX, XGL_MTR_POP | XGL_MTR_GLOBAL_TRANS );\n\n  DPRINT( \")\" );\n}\n\nvoid _dxf_SET_MATERIAL_SPECULAR( void *ctx, float r, float g, float b,\n                                 float exponent )\n{\n  /*\n   *  Set specular reflection coefficients for red, green, and blue; set\n   *  specular exponent (shininess) from exponent.\n   */\n\n  Xgl_color spec;\n  DEFCONTEXT( ctx );\n  DPRINT( \"\\n(xglTDM_SET_MATERIAL_SPECULAR\" );\n\n  spec.rgb.r = r;\n  spec.rgb.g = g;\n  spec.rgb.b = b;\n\n  /* fudge the specular exponent to match software renderer better */\n  exponent = pow( exponent, 1. / XGLTRANSLATION->gamma );\n\n  xgl_object_set( XGLCTX, XGL_3D_CTX_SURF_FRONT_SPECULAR_COLOR, &spec, 0 );\n  xgl_object_set( XGLCTX, XGL_3D_CTX_SURF_FRONT_SPECULAR_POWER, exponent, 0 );\n  DPRINT( \")\" );\n}\n\nvoid _dxf_SET_GLOBAL_LIGHT_ATTRIBUTES( void *ctx, int on )\n{\n  /*\n   *  Set global lighting attributes.  Some API's, like IBM GL, can only\n   *  set certain lighting attributes such as attenuation globally across\n   *  all defined lights; these API's should do the appropriate\n   *  initialization through this call.  If `on' is FALSE, turn lighting\n   *  completely off.\n   */\n\n  DEFCONTEXT( ctx );\n  DPRINT( \"\\n(xglTDM_SET_GLOBAL_LIGHT_ATTRIBUTES\" );\n\n  xgl_object_set(\n      XGLCTX, XGL_CTX_SURF_FRONT_COLOR_SELECTOR,\n      XGL_SURF_COLOR_VERTEX_ILLUM_INDEP, XGL_3D_CTX_SURF_FRONT_LIGHT_COMPONENT,\n      XGL_LIGHT_ENABLE_COMP_AMBIENT | XGL_LIGHT_ENABLE_COMP_DIFFUSE |\n          XGL_LIGHT_ENABLE_COMP_SPECULAR,\n      NULL );\n\n  if ( !on )\n  {\n    int i;\n    Xgl_boolean light_switches[MAX_LIGHTS];\n\n    xgl_object_get( XGLCTX, XGL_3D_CTX_LIGHT_SWITCHES, light_switches );\n\n    for ( i = 0; i < MAX_LIGHTS; i++ )\n      light_switches[i] = 0;\n\n    xgl_object_set( XGLCTX, XGL_3D_CTX_LIGHT_SWITCHES, light_switches, NULL );\n  }\n\n  DPRINT( \")\" );\n}\n\nvoid *_dxf_ALLOCATE_PIXEL_ARRAY( void *ctx, int width, int height )\n{\n  /*\n   *  DXAllocate storage for a pixel array.\n   */\n\n  DEFCONTEXT( ctx );\n  void *foo;\n  int nbytes;\n#if defined( PRIVATE_PIXELS )\n  Xgl_usgn32 *private_pix = NULL;\n#endif\n  DPRINT( \"\\n(xglTDM_ALLOCATE_PIXEL_ARRAY\" );\n\n#if defined( PRIVATE_PIXELS )\n  nbytes = ( width + 1 ) * ( height ) * ( NUM_PLANES < 24 ? 1 : 4 );\n  private_pix = (Xgl_usgn32 *)DXAllocate( nbytes );\n  if ( !private_pix )\n  {\n    DPRINT( \")\" );\n    return NULL;\n  }\n#endif\n\n/*  Called Sun Software about bug.  xgl_object_create fails, but\n *  doesn't return a NULL (as documented).\n *  Ref ID #1239569   Bug ID #1123335  3/18/93\n */\n#ifdef XGL_ALLOC_BUG\n  error_flag = 0;\n  xgl_object_set( sys_st, XGL_SYS_ST_ERROR_NOTIFICATION_FUNCTION,\n                  _tdmEnufMemory, NULL );\n\n  foo = (void *)xgl_object_create(\n      sys_st, XGL_MEM_RAS, 0, XGL_DEV_COLOR_TYPE, XGL_COLOR_RGB,\n#if defined( PRIVATE_PIXELS )\n      XGL_MEM_RAS_IMAGE_BUFFER_ADDR, private_pix, XGL_RAS_SOURCE_BUFFER,\n      XGL_BUFFER_SEL_DRAW,\n#endif\n      XGL_RAS_DEPTH, ( NUM_PLANES < 24 ? 8 : 32 ), XGL_RAS_WIDTH, width,\n      XGL_RAS_HEIGHT, height, NULL );\n\n  if ( error_flag == 0 && foo )\n  {\n    DPRINT( \")\" );\n    return (void *)foo;\n  }\n  else\n  {\n    DPRINT( \"error)\" );\n    DXSetError( ERROR_NO_MEMORY, \"#13000\" );\n    return NULL;\n  }\n#else\n  return (void *)xgl_object_create( sys_st, XGL_MEM_RAS, 0, XGL_DEV_COLOR_TYPE,\n                                    XGL_COLOR_RGB, XGL_RAS_DEPTH,\n                                    ( NUM_PLANES < 24 ? 8 : 32 ), XGL_RAS_WIDTH,\n                                    width, XGL_RAS_HEIGHT, height, NULL );\n#endif\n}\n\nvoid _dxf_FREE_PIXEL_ARRAY( void *ctx, void *pixels )\n{\n  Xgl_usgn32 *pixarray;\n\n  /*\n   *  Free pixel array storage.\n   */\n\n  DPRINT( \"\\n(xglTDM_FREE_PIXEL_ARRAY\" );\n  if ( pixels )\n  {\n\n#if defined( PRIVATE_PIXELS )\n    /* get address of buffer associated with portctx and zero it */\n    xgl_object_get( (Xgl_ras)pixels, XGL_MEM_RAS_IMAGE_BUFFER_ADDR, &pixarray );\n    DXFree( (Pointer)pixarray );\n\n    xgl_object_set( (Xgl_ras)pixels, XGL_MEM_RAS_IMAGE_BUFFER_ADDR, NULL,\n                    NULL );\n#endif\n\n    xgl_object_destroy( (Xgl_ras)pixels );\n  }\n  DPRINT( \")\" );\n}\n\ntypedef struct argbS\n{\n  float a, b, g, r;\n} argbT, *argbP;\n\nError _dxf_DRAW_IMAGE( void *win, dxObject image, hwTranslationP dummy )\n{\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n  int x, y, camw, camh;\n  int i, n;\n  unsigned long *pixels = NULL;\n  void *translation = XGLTRANSLATION;\n  DPRINT( \"\\n(_dxf_DRAW_IMAGE\" );\n\n  if ( !DXGetImageBounds( image, &x, &y, &camw, &camh ) )\n    goto error;\n\n  if ( !( pixels = tdmAllocateZero( sizeof( unsigned long ) * camw * camh ) ) )\n    goto error;\n\n  if ( !_dxf_dither( image, camw, camh, x, y, translation, pixels ) )\n    goto error;\n\n  n = camw * camh * sizeof( argbT );\n  if ( n != SW_BUF_SIZE )\n  {\n    if ( SW_BUF )\n      tdmFree( SW_BUF );\n    SW_BUF = (void *)NULL;\n    SW_BUF = (void *)tdmAllocateZero( n );\n    if ( !SW_BUF )\n    {\n      SW_BUF_SIZE = 0;\n      goto error;\n    }\n    else\n      SW_BUF_SIZE = n;\n  }\n\n  for ( i = 0; i < camw * camh; i++ )\n  {\n    ( (argbP)SW_BUF )[i].r = (float)( ( pixels[i] & 0xFF ) / 255.0 );\n    ( (argbP)SW_BUF )[i].g = (float)( ( ( pixels[i] >> 8 ) & 0xFF ) / 255.0 );\n    ( (argbP)SW_BUF )[i].b = (float)( ( ( pixels[i] >> 16 ) & 0xFF ) / 255.0 );\n  }\n\n  SW_BUF_CURRENT = TRUE;\n\n  /* Check for error */\n  _dxf_WRITE_PIXEL_RECT( win, NULL, 0, 0, camw, camh );\n\n  if ( pixels )\n  {\n    tdmFree( pixels );\n    pixels = NULL;\n  }\n  DPRINT( \")\" );\n  return OK;\n\nerror:\n  if ( pixels )\n  {\n    tdmFree( pixels );\n    pixels = NULL;\n  }\n\n  if ( SW_BUF )\n  {\n    tdmFree( SW_BUF );\n    SW_BUF = NULL;\n    SW_BUF_SIZE = 0;\n  }\n\n  DPRINT( \")\" );\n  return ERROR;\n}\n\nstatic hwTranslationP _dxf_CREATE_HW_TRANSLATION( void *win )\n{\n  DEFWINDATA( win );\n  hwTranslationP ret;\n  int i;\n\n  if ( !( ret = (hwTranslationP)tdmAllocate( sizeof( translationT ) ) ) )\n    return NULL;\n\n  ret->dpy = DPY;\n  ret->visual = NULL;\n  ret->cmap = (void *)CLRMAP;\n  ret->depth = 24;\n  ret->invertY = TRUE;\n\n#if defined( sun4 )\n  ret->gamma = 2.0;\n#else\n  ret->gamma = 1.0;\n#endif\n\n  ret->translationType = ThreeMap;\n  ret->redRange = 256;\n  ret->greenRange = 256;\n  ret->blueRange = 256;\n  ret->usefulBits = 8;\n  ret->rtable = &ret->data[0];\n  ret->gtable = &ret->data[256];\n  ret->btable = &ret->data[256 * 2];\n  ret->table = NULL;\n\n  for ( i = 0; i < 256; i++ )\n  {\n    ret->rtable[i] = i;\n    ret->gtable[i] = i << 8;\n    ret->btable[i] = i << 16;\n  }\n  return ret;\n}\n\nstatic void _dxf_WRITE_PIXEL_RECT( void *win, uint32 *foo, int x, int y,\n                                   int camw, int camh )\n{\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n  int i;\n  void *image;\n  Xgl_pt_i2d pos;\n  Xgl_color color;\n  DPRINT( \"\\n(_dxf_WRITE_PIXEL_RECT\" );\n\n  DPRINT1( \"\\n camera width: %d,\", camw );\n  DPRINT1( \" camera height: %d\", camh );\n\n  if ( !( image = _dxf_ALLOCATE_PIXEL_ARRAY( PORT_CTX, camw, camh ) ) )\n    goto error;\n\n  /* set pixel array as rendering surface for XGL context */\n  xgl_object_set( XGLTMPCTX, XGL_CTX_DEVICE, image, NULL );\n\n  for ( pos.y = 0; pos.y < ( camh ); pos.y++ )\n  {\n    for ( pos.x = 0; pos.x < camw; pos.x++ )\n    {\n      i = ( pos.y * camw ) + pos.x;\n      color.rgb.r = (float)( (argbP)SW_BUF )[i].r;\n      color.rgb.g = (float)( (argbP)SW_BUF )[i].g;\n      color.rgb.b = (float)( (argbP)SW_BUF )[i].b;\n      xgl_context_set_pixel( XGLTMPCTX, &pos, &color );\n    }\n  }\n\n  _dxf_WRITE_BUFFER( PORT_CTX, 0, 0, camw - 1, camh - 1, image );\n\n/* ensure that draw buffer rendering is completed */\n#ifndef solaris\n  xgl_context_post( XGLTMPCTX, 0 );\n#else\n  xgl_context_flush( XGLTMPCTX, XGL_FLUSH_BUFFERS );\n#endif\n\n  if ( image )\n    _dxf_FREE_PIXEL_ARRAY( PORT_CTX, image );\n\n  DPRINT( \")\" );\n  return /* OK */;\n\nerror:\n  if ( image )\n    _dxf_FREE_PIXEL_ARRAY( PORT_CTX, image );\n  DPRINT( \")\" );\n  return /* 0 */;\n}\n\nstatic hwFlagsT servicesFlags =\n    ( SF_VOLUME_BOUNDARY | SF_TMESH | SF_QMESH | SF_POLYLINES );\n\nint _dxf_DEFINE_LIGHT( void *win, int n, Light light )\n\n{\n  /*\n   *  Define and switch on light `id' using the attributes specified by\n   *  the DX `light' parameter.  If `light' is NULL, turn off light `id'.\n   *  If more lights are defined than supported by the API, the extra\n   *  lights are ignored.\n   *\n   *  Note that XGL does not transform lights by the current\n   *  transformation matrix as GL does, and requires that the lights be\n   *  expressed in world coordinates.  Since we have loaded only the\n   *  projection component of the view into the context's view matrix, we\n   *  must convert the DX world coordinates into view coordinates\n   *  ourselves.\n   */\n\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n  float view[4][4], x, y, z;\n  Xgl_light xgl_lights[MAX_LIGHTS];\n  Xgl_boolean xgl_light_switches[MAX_LIGHTS];\n  Xgl_pt_f3d xgl_direction, xgl_position;\n  Xgl_color xgl_light_color;\n  RGBColor color;\n  Vector direction;\n  float iGamma = 1.0;\n  DPRINT1( \"\\n(xglTDM_DEFINE_LIGHT:%d\", n );\n\n  if ( n > MAX_LIGHTS - 1 )\n  {\n    /* Only first %d lights are used */\n    DXWarning( \"#5190\", MAX_LIGHTS - 1 );\n    goto error;\n  }\n\n  xgl_object_get( XGLCTX, XGL_3D_CTX_LIGHTS, xgl_lights );\n  xgl_object_get( XGLCTX, XGL_3D_CTX_LIGHT_SWITCHES, xgl_light_switches );\n\n  if ( !light )\n    /* turn off light n */\n    xgl_light_switches[n] = 0;\n  else if ( DXQueryDistantLight( light, &direction, &color ) )\n  {\n    DPRINT( \"\\ndirectional\\n\" );\n    SPRINT( direction );\n    /* NB: XGL direction is direction of light propagation! */\n\n    DPRINT( \"\\nworld-relative\" );\n\n    if ( n == 0 )\n    {\n      /* 0 is the ambient light */\n      DXErrorGoto( ERROR_INTERNAL, \"#13740\" );\n    }\n\n    xgl_light_switches[n] = 1;\n\n    _dxfGetCompositeMatrix( MATRIX_STACK, view );\n    xgl_direction.x = -( direction.x * view[0][0] + direction.y * view[1][0] +\n                         direction.z * view[2][0] );\n    xgl_direction.y = -( direction.x * view[0][1] + direction.y * view[1][1] +\n                         direction.z * view[2][1] );\n    xgl_direction.z = -( direction.x * view[0][2] + direction.y * view[1][2] +\n                         direction.z * view[2][2] );\n\n    xgl_light_color.rgb.r = color.r;\n    xgl_light_color.rgb.g = color.g;\n    xgl_light_color.rgb.b = color.b;\n\n    DPRINT1( \"\\nXGL light propagation direction: %f\", xgl_direction.x );\n    DPRINT1( \" %f\", xgl_direction.y );\n    DPRINT1( \" %f\", xgl_direction.z );\n    DPRINT( \"\\ncolor\\n\" );\n    CPRINT( color );\n\n    xgl_object_set( xgl_lights[n], XGL_LIGHT_TYPE, XGL_LIGHT_DIRECTIONAL,\n                    XGL_LIGHT_COLOR, &xgl_light_color, XGL_LIGHT_DIRECTION,\n                    &xgl_direction, NULL );\n  }\n  else if ( DXQueryCameraDistantLight( light, &direction, &color ) )\n  {\n\n    DPRINT( \"\\ncamera-relative\" );\n\n    if ( n == 0 )\n    {\n      /* 0 is the ambient light */\n      DXErrorGoto( ERROR_INTERNAL, \"#13740\" );\n    }\n\n    xgl_light_switches[n] = 1;\n\n    xgl_direction.x = -direction.x;\n    xgl_direction.y = -direction.y;\n    xgl_direction.z = -direction.z;\n\n    xgl_light_color.rgb.r = color.r;\n    xgl_light_color.rgb.g = color.g;\n    xgl_light_color.rgb.b = color.b;\n\n    DPRINT1( \"\\nXGL light propagation direction: %f\", xgl_direction.x );\n    DPRINT1( \" %f\", xgl_direction.y );\n    DPRINT1( \" %f\", xgl_direction.z );\n    DPRINT( \"\\ncolor\\n\" );\n    CPRINT( color );\n\n    xgl_object_set( xgl_lights[n], XGL_LIGHT_TYPE, XGL_LIGHT_DIRECTIONAL,\n                    XGL_LIGHT_COLOR, &xgl_light_color, XGL_LIGHT_DIRECTION,\n                    &xgl_direction, NULL );\n  }\n  else if ( DXQueryAmbientLight( light, &color ) )\n  {\n\n    DPRINT( \"\\nambient\" );\n\n    xgl_light_switches[n] = 1;\n\n    iGamma = 1. / XGLTRANSLATION->gamma;\n    xgl_light_color.rgb.r = (float)pow( color.r, iGamma );\n    xgl_light_color.rgb.g = (float)pow( color.g, iGamma );\n    xgl_light_color.rgb.b = (float)pow( color.b, iGamma );\n    DPRINT( \"\\ncolor\\n\" );\n    CPRINT( color );\n\n    xgl_object_set( xgl_lights[n], XGL_LIGHT_TYPE, XGL_LIGHT_AMBIENT,\n                    XGL_LIGHT_COLOR, &xgl_light_color, NULL );\n  }\n  else\n  {\n    DPRINT( \"\\nunknown light type\" );\n    DXErrorGoto( ERROR_DATA_INVALID, \"#13751\" );\n  }\n\n  xgl_object_set( XGLCTX, XGL_3D_CTX_LIGHT_SWITCHES, xgl_light_switches, NULL );\n\n  DPRINT( \")\" );\n  return TRUE;\n\nerror:\n  DPRINT( \"\\nerror)\" );\n  return FALSE;\n}\n\nstatic int _dxf_ADD_CLIP_PLANES( void *win, Point *pt, Vector *normal,\n                                 int count )\n{\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n  Xgl_usgn32 planeCount;\n  Xgl_plane planes[MAX_CLIP_PLANES];\n  float view[4][4];\n  double dview[4][4], datview[4][4];\n  int i;\n\n  planeCount = CLIP_PLANE_CNT;\n  CLIP_PLANE_CNT += count;\n\n  if ( CLIP_PLANE_CNT > MAX_CLIP_PLANES )\n  {\n    /* too many clip planes specified, clip object ignored */\n    DXWarning( \"#13890\" );\n    return OK;\n  }\n\n  xgl_object_get( XGLCTX, XGL_3D_CTX_MODEL_CLIP_PLANES, planes );\n\n  /*\n   * pt and normal are in world coordinates. Because the view matrix is\n   * in the PROJECTION_MATRIX for xgl, this implies that we have view\n   * coordinates for clip planes (not world as the document says).\n   *\n   * So we need to apply the inverse of the clipping transform to the\n   * pt and normal to correct for this.\n   */\n  _dxfGetViewMatrix( MATRIX_STACK, view );\n  COPYMATRIX( dview, view );\n  _dxfAdjointTranspose( datview, dview );\n\n  for ( i = 0; i < count; i++ )\n  {\n    planes[planeCount].pt.x = pt[i].x;\n    planes[planeCount].pt.y = pt[i].y;\n    planes[planeCount].pt.z = pt[i].z;\n\n    planes[planeCount].normal.x = normal[i].x;\n    planes[planeCount].normal.y = normal[i].y;\n    planes[planeCount].normal.z = normal[i].z;\n\n    APPLY3( (float *)&planes[planeCount].pt, dview );\n    APPLY3( (float *)&planes[planeCount].normal, datview );\n\n    planeCount++;\n  }\n\n  xgl_object_set( XGLCTX, XGL_3D_CTX_MODEL_CLIP_PLANE_NUM, planeCount, 0 );\n  xgl_object_set( XGLCTX, XGL_3D_CTX_MODEL_CLIP_PLANES, planes, 0 );\n\n  return OK;\n\nerror:\n\n  return ERROR;\n}\n\nstatic int _dxf_REMOVE_CLIP_PLANES( void *win, int count )\n{\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n  Xgl_usgn32 planeCount;\n\n  if ( CLIP_PLANE_CNT > MAX_CLIP_PLANES )\n  {\n    CLIP_PLANE_CNT -= count;\n    return OK;\n  }\n\n  planeCount = CLIP_PLANE_CNT;\n  CLIP_PLANE_CNT -= count;\n\n  if ( planeCount < count )\n  {\n    /* Too many clip planes deleted */\n    DXErrorGoto( ERROR_INTERNAL, \"#13900\" );\n  }\n\n  planeCount -= count;\n  xgl_object_set( XGLCTX, XGL_3D_CTX_MODEL_CLIP_PLANE_NUM, planeCount, 0 );\n\n  return OK;\n\nerror:\n\n  return ERROR;\n}\n\nstatic int _dxf_GET_VERSION( char **dsoStr )\n{\n  static char *DXHW_LIB_FLAVOR = \"XGL\";\n\n  ENTRY( ( \"_dxf_GET_VERSION(void)\" ) );\n  if ( dsoStr )\n    if ( *dsoStr )\n      *dsoStr = DXHW_LIB_FLAVOR;\n  return ( DXHW_DD_VERSION );\n  EXIT( ( \"OK\" ) );\n}\n\nError _dxf_DrawTrans( void *globals, RGBColor ambientColor, int buttonUp )\n{\n  DEFGLOBALDATA( globals );\n  DEFPORT( PORT_HANDLE );\n  SortListP sl = (SortListP)SORTLIST;\n  SortD sorted = sl->sortList;\n  int nSorted = sl->itemCount;\n  int i, j;\n\n  for ( i = 0; i < nSorted; i = j )\n    for ( j = i; j < nSorted && sorted[j].xfp == sorted[i].xfp; j++ )\n      _dxf_DrawOpaque( PORT_HANDLE, (xfieldP)sorted[i].xfp, ( j - i ),\n                       ambientColor, buttonUp );\n\n  return OK;\n}\n\nextern Error _dxf_DrawOpaque( tdmPortHandleP portHandle, xfieldP xf,\n                              RGBColor ambientColor, int buttonUp );\n\nstatic Error _dxf_StartFrame( void *win )\n{\n  return OK;\n}\n\nstatic Error _dxf_EndFrame( void *win )\n{\n  return OK;\n}\n\nstatic void _dxf_ClearBuffer( void *win )\n{\n  DEFWINDATA( win );\n  DEFPORT( PORT_HANDLE );\n  xgl_context_new_frame( XGLCTX );\n}\n\nstatic tdmDrawPortT _DrawPort = {\n    /* AllocatePixelArray */ _dxf_ALLOCATE_PIXEL_ARRAY,\n    /* AddClipPlane */ _dxf_ADD_CLIP_PLANES,\n    /* ClearArea */ _dxf_CLEAR_AREA,\n    /* CreateHwTranslation */ _dxf_CREATE_HW_TRANSLATION,\n    /* CreateWindow */ _dxf_CREATE_WINDOW,\n    /* DefineLight */ _dxf_DEFINE_LIGHT,\n    /* DestroyWindow */ _dxf_DESTROY_WINDOW,\n    /* DrawClip */ NULL,\n    /* DrawImage */ _dxf_DRAW_IMAGE,\n    /* Drawopaque */ _dxf_DrawOpaque,\n    /* RemoveClipPlane */ _dxf_REMOVE_CLIP_PLANES,\n    /* FreePixelArray */ _dxf_FREE_PIXEL_ARRAY,\n    /* InitRenderModule */ _dxf_INIT_RENDER_MODULE,\n    /* InitRenderPass */ _dxf_INIT_RENDER_PASS,\n    /* LoadMatrix */ _dxf_LOAD_MATRIX,\n    /* MakeProjectionMatrix */ _dxf_MAKE_PROJECTION_MATRIX,\n    /* PopMatrix */ _dxf_POP_MATRIX,\n    /* PushMultiplyMatrix */ _dxf_PUSH_MULTIPLY_MATRIX,\n    /* PushReplaceMatrix */ _dxf_PUSH_REPLACE_MATRIX,\n    /* ReadApproxBackstore */ _dxf_READ_APPROX_BACKSTORE,\n    /* ReplaceViewMatrix */ _dxf_REPLACE_VIEW_MATRIX,\n    /* SetBackgroundColor */ _dxf_SET_BACKGROUND_COLOR,\n    /* SetDoubleBufferMode */ _dxf_DOUBLE_BUFFER_MODE,\n    /* SetGlobalLightAttributes */ _dxf_SET_GLOBAL_LIGHT_ATTRIBUTES,\n    /* SetMaterialSpecular */ _dxf_SET_MATERIAL_SPECULAR,\n    /* SetOrthoProjection */ _dxf_SET_ORTHO_PROJECTION,\n    /* SetOutputWindow */ _dxf_SET_OUTPUT_WINDOW,\n    /* SetPerspectiveProjection */ _dxf_SET_PERSPECTIVE_PROJECTION,\n    /* SetSingleBufferMode */ _dxf_SINGLE_BUFFER_MODE,\n    /* SetViewport */ _dxf_SET_VIEWPORT,\n    /* SetWindowSize */ _dxf_SET_WINDOW_SIZE,\n    /* SwapBuffers */ _dxf_SWAP_BUFFERS,\n    /* WriteApproxBackstore */ _dxf_WRITE_APPROX_BACKSTORE,\n    /* WritePixelRect */ _dxf_WRITE_PIXEL_RECT,\n\n    /* End of functions available to 2.0 and 2.0.1 DX release */\n\n    /* DrawTransparent */ _dxf_DrawTrans,\n    /* GetMatrix */ NULL,\n    /* GetProjection */ NULL,\n    /* GetVersion */ _dxf_GET_VERSION,\n    /* ReadImage */ NULL,\n    /* StartFrame */ _dxf_StartFrame,\n    /* EndFrame */ _dxf_EndFrame,\n    /* Clear Buffer */ _dxf_ClearBuffer};\n\n#ifndef STANDALONE\n\nextern tdmInteractorEchoT _dxd_hwInteractorEchoPort;\n\nvoid _dxfUninitPortHandle( tdmPortHandleP portHandle )\n{\n  if ( portHandle )\n  {\n    portHandle->portFuncs = NULL;\n    portHandle->echoFuncs = NULL;\n    if ( _num_windows_open == 0 && sys_st != NULL )\n      xgl_close( sys_st );\n    /*\n     *  Note: portHandle->private is\n     *  freed in DESTROY_WINDOW as PORT_CTX\n     */\n    tdmFree( portHandle );\n  }\n}\n\ntdmPortHandleP _dxfInitPortHandle( Display *dpy, char *hostname )\n{\n  /*\n   *  Return 1 if hardware graphics rendering is not available.\n   */\n\n  int len = MAXHOSTNAMELEN - 1;\n  char *displayString;\n  unsigned int displaysize;\n  Window xid;\n  Visual *vis;\n  XSetWindowAttributes attrs;\n  int screen, depth;\n  Xgl_usgn32 num_buffers;\n  int w, h;\n  Xgl_win_ras ras = 0;\n  Xgl_X_window xgl_x_win;\n  Xgl_obj_desc obj_desc;\n  Xgl_inquire *inq_info = 0;\n#ifdef solaris\n  Xgl_sys_state tmp_sys_st = NULL;\n#else\n  Xgl_sys_st tmp_sys_st = NULL;\n#endif\n\n  int proto = XGL_WIN_X_PROTO_DEFAULT;\n  tdmPortHandleP ret;\n\n  DPRINT( \"\\n(xglTDM_GRAPHICS_NOT_AVAILABLE\" );\n\n  _dxf_setFlags( _dxf_SERVICES_FLAGS(),\n                 SF_VOLUME_BOUNDARY | SF_TMESH | SF_QMESH | SF_POLYLINES );\n\n#ifndef DEBUG\n  {\n    int execSymbolInterface;\n    void *( *symVer )();\n    void *( *expVer )();\n    void *DX_handle;\n\n    /* If the hardware rendering load module requires a newer set of\n     * DX exported symbols than those available in the calling dxexec\n     */\n    if ( !( DX_handle = dlopen( (const char *)0, RTLD_LAZY ) ) )\n    {\n      DXSetError( ERROR_UNEXPECTED, dlerror() );\n      goto error;\n    }\n\n    if ( ( symVer = (void * (*)())dlsym( DX_handle, \"DXSymbolInterface\" ) ) &&\n         ( expVer =\n               (void * (*)())dlsym( DX_handle, \"_dxfExportHwddVersion\" ) ) )\n    {\n      printf( \"found DXSymbolInterface\" );\n      ( *symVer )( &execSymbolInterface );\n      ( *expVer )( DXD_HWDD_INTERFACE_VERSION );\n    }\n    else\n    {\n      execSymbolInterface = 0;\n    }\n\n    if ( LOCAL_DXD_SYMBOL_INTERFACE_VERSION > execSymbolInterface )\n    {\n      DXSetError( ERROR_UNEXPECTED, \"#13910\", \"hardware rendering\",\n                  \"DX Symbol Interface\" );\n      goto error;\n    }\n  }\n\n#endif\n  /*\n   *  Initialize XGL the first time a window is opened.  There is no\n   *  \"initialize API\" port layer function; we don't get a chance to do\n   *  anything until DX creates a hardware window.\n   */\n\n  if ( _num_windows_open == 0 )\n    sys_st = xgl_open( NULL );\n  if ( sys_st == NULL )\n    goto error;\n\n  /* Get all of the visual information about the screen: */\n  screen = DefaultScreen( dpy );\n  w = DisplayWidth( dpy, screen ) - 1;\n  h = DisplayHeight( dpy, screen ) - 1;\n\n  _tdmGetHardwareVisual( dpy, screen, &depth, &vis );\n  if ( depth == 0 )\n  {\n    /* Hardware rendering is unavailable on host '%s' */\n    DXSetError( ERROR_BAD_PARAMETER, \"#13675\", hostname );\n    goto error;\n  }\n\n  /* Create Colormap and Window */\n  attrs.border_pixel = None;\n  attrs.background_pixel = None;\n  attrs.colormap =\n      XCreateColormap( dpy, DefaultRootWindow( dpy ), vis, AllocNone );\n  if ( !( xid = XCreateWindow(\n              dpy, DefaultRootWindow( dpy ), 0, 0, w, h, 0, depth, InputOutput,\n              vis, CWBackPixel | CWBorderPixel | CWColormap, &attrs ) ) )\n  {\n    /* Hardware rendering is unavailable on host '%s' */\n    DXSetError( ERROR_BAD_PARAMETER, \"#13675\", hostname );\n    goto error;\n  }\n\n  /*  initialize XGL window objects */\n  xgl_x_win.X_display = (void *)dpy;\n  xgl_x_win.X_window = (Xgl_usgn32)xid;\n  xgl_x_win.X_screen = (int)screen;\n\n  obj_desc.win_ras.type = XGL_WIN_X | proto;\n  obj_desc.win_ras.desc = &xgl_x_win;\n\n#ifdef solaris\n  inq_info = (Xgl_inquire *)xgl_inquire( sys_st, &obj_desc );\n#else\n  inq_info = (Xgl_inquire *)xgl_inquire( &obj_desc );\n#endif\n  if ( !inq_info )\n  {\n    /* Hardware rendering is unavailable on host '%s' */\n    DXSetError( ERROR_BAD_PARAMETER, \"#13675\", hostname );\n    goto error;\n  }\n\n  /* create raster from X window, request double buffers and DXRGB colors */\n  obj_desc.win_ras.type = XGL_WIN_X;\n\n/*  Called Sun Software about bug.  xgl_object_create fails, but\n *  doesn't return a NULL (as documented).\n *  Ref ID #1239569   Bug ID #1123335  3/18/93\n */\n#ifdef XGL_ALLOC_BUG\n  error_flag = 0;\n  xgl_object_set( sys_st, XGL_SYS_ST_ERROR_NOTIFICATION_FUNCTION,\n                  _tdmEnufMemory, NULL );\n#endif\n  ras = xgl_object_create( sys_st, XGL_WIN_RAS, &obj_desc, XGL_DEV_COLOR_TYPE,\n                           XGL_COLOR_RGB, XGL_WIN_RAS_BUFFERS_REQUESTED, 2,\n                           NULL );\n\n#ifdef XGL_ALLOC_BUG\n  if ( error_flag != 0 || !ras )\n#else\n  if ( !ras )\n#endif\n  {\n    /* Hardware rendering is unavailable on host '%s' */\n    DXSetError( ERROR_BAD_PARAMETER, \"#13675\", hostname );\n    goto error;\n  }\n\n  /* check result of double buffer request */\n  xgl_object_get( ras, XGL_WIN_RAS_BUFFERS_ALLOCATED, &num_buffers );\n\n  DPRINT1( \"\\nrequested 2 buffers, got %d\", num_buffers );\n\n  if ( num_buffers < 2 )\n  {\n    /* Hardware rendering is unavailable on host '%s' */\n    DPRINT( \"\\nhardware double buffering not available\" );\n    DXSetError( ERROR_BAD_PARAMETER, \"#13675\", hostname );\n    goto error;\n  }\n\n  /* clean up */\n  if ( ras )\n  {\n    if ( inq_info )\n      DXFree( (Xgl_inquire *)inq_info );\n    xgl_object_destroy( ras );\n  }\n\n  ret = (tdmPortHandleP)tdmAllocateLocal( sizeof( tdmPortHandleT ) );\n\n  if ( ret )\n  {\n    ret->portFuncs = &_DrawPort;\n    ret->echoFuncs = &_dxd_hwInteractorEchoPort;\n    ret->uninitP = _dxfUninitPortHandle;\n    ret->private = NULL;\n  }\n\n  DPRINT( \")\" );\n  return ret;\n\nerror:\n  DPRINT( \"\\nerror)\" );\n  if ( sys_st )\n  {\n    if ( inq_info )\n      tdmFree( (char *)inq_info );\n    if ( ras )\n      xgl_object_destroy( ras );\n    xgl_close( sys_st );\n  }\n  return NULL;\n}\n#endif\n",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/src/exec/hwrender/xgl/hwLoad.c": "/***********************************************************************/\n/* Open Visualization Data Explorer                                    */\n/* (C) Copyright IBM Corp. 1989,1999                                   */\n/* ALL RIGHTS RESERVED                                                 */\n/* This code licensed under the                                        */\n/*    \"IBM PUBLIC LICENSE - Open Visualization Data Explorer\"          */\n/***********************************************************************/\n/*********************************************************************/\n/*                     I.B.M. CONFIENTIAL                           */\n/*********************************************************************/\n\n#include <dxconfig.h>\n\n/*---------------------------------------------------------------------------*\\\n $Source: /src/master/dx/src/exec/hwrender/xgl/hwLoad.c,v $\n\\*---------------------------------------------------------------------------*/\n#include <stdio.h>\n#include <math.h>\n#include <sys/param.h>\n\n#include <dlfcn.h>\n#include <stdlib.h>\n#include <sys/stat.h>\n#include <errno.h>\n#include <sys/utsname.h>\n\n#include \"hwDeclarations.h\"\n\ntdmPortHandleP _dxfInitPortHandle( Display *dpy, char *hostname );\n\n/* HWload()\n * This does the real work in demand loading either the DX.o\n * executable (ibm6000) or the DXhw.sl shared lib (hp700) so\n * we can load the GL or Starbase dependent stuff on the fly\n * and simply report HW render not available if it fails.\n */\n\nint _dxfHWload( tdmPortHandleP ( **initPP )( Display *, char * ), Display *dsp )\n{\n\n#if !defined( DEBUG )\n\n  char HWname[257], HWpath[513]; /* name of HW module for load()*/\n  extern main();                 /* used to bind HW module     \t*/\n  int ( *HW )();                 /* HW entry point from load() call */\n  struct stat statbuf;           /* for stat() call       \t*/\n  static void *HW_handle;        /* for shl_load() call\t\t*/\n  volatile double dummy;         /* for demand load hack see below */\n  struct utsname unamebuf;       /* for uname() call */\n\n#if defined( sun4 )\n\n  /*\n   * XXX demand load hack.  This call is just to insure that infinity is\n   * linked into the exec because XGL calls in DXhwdd.so will need it\n   * latter.  Because libm is archive only (no .so), only referenced\n   * symbols from it are bound into the exec.  We also can't simply link\n   * DXhwdd.so with -lm because it is not PIC and the assert pure-text\n   * fails.  If SUN gives us a better solution to prob #1366834 we will\n   * fix this.\n   */\n\n  dummy = infinity();\n\n  /*\n  * If this is the sun4 build of DX, but user is running solaris\n  * then fail.\n  */\n  uname( &unamebuf );\n\n  if ( unamebuf.release[0] == '5' )\n  {\n    DXSetError( ERROR_BAD_PARAMETER, \"Hardware rendering not available. \" );\n    goto error;\n  }\n\n#endif\n\n  if ( getenv( \"DXHWMOD\" ) )\n    strcpy( HWname, getenv( \"DXHWMOD\" ) );\n  else\n    strcpy( HWname, \"DXhwdd.so\" );\n\n  if ( getenv( \"DXEXECROOT\" ) )\n  {\n    strcpy( HWpath, getenv( \"DXEXECROOT\" ) );\n    strcat( HWpath, \"/bin_\" );\n    strcat( HWpath, DXD_ARCHNAME );\n    strcat( HWpath, \"/\" );\n    strcat( HWpath, HWname );\n    if ( !stat( HWpath, &statbuf ) )\n      goto loadlib;\n  }\n\n  if ( getenv( \"DXROOT\" ) )\n  {\n    strcpy( HWpath, getenv( \"DXROOT\" ) );\n    strcat( HWpath, \"/bin_\" );\n    strcat( HWpath, DXD_ARCHNAME );\n    strcat( HWpath, \"/\" );\n    strcat( HWpath, HWname );\n    if ( !stat( HWpath, &statbuf ) )\n      goto loadlib;\n  }\n\n  strcpy( HWpath, \"/usr/lpp/dx/bin_\" );\n  strcat( HWpath, DXD_ARCHNAME );\n  strcat( HWpath, \"/\" );\n  strcat( HWpath, HWname );\n  if ( !stat( HWpath, &statbuf ) )\n    goto loadlib;\n\n  DXSetError( ERROR_BAD_PARAMETER, \"Hardware rendering not available: \"\n                                   \"%s not found.\",\n              HWpath );\n  goto error;\n\nloadlib:\n\n  if ( ( HW_handle = dlopen( HWpath, RTLD_LAZY ) ) == NULL )\n  {\n    DXSetError( ERROR_BAD_PARAMETER, dlerror() ); /* FIX THIS */\n    /*DXSetError (ERROR_BAD_PARAMETER,\"Hardware rendering not available: \"\n                \"/usr/lib/libxgl.a not found.\");  */\n    goto error;\n  }\n  if ( ( *initPP = (tdmPortHandleP (*)())dlsym(\n             HW_handle, \"_dxfInitPortHandle\" ) ) == (tdmPortHandleP (*)())NULL )\n  {\n    DXSetError( ERROR_UNEXPECTED, dlerror() );\n    goto error;\n  }\n  return OK;\n\nerror:\n\n  return ERROR;\n#else\n\n  *initPP = _dxfInitPortHandle;\n  return OK;\n\n#endif\n}\n",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/src/exec/dpexec/loader.c": "/***********************************************************************/\n/* Open Visualization Data Explorer                                    */\n/* (C) Copyright IBM Corp. 1989,1999                                   */\n/* ALL RIGHTS RESERVED                                                 */\n/* This code licensed under the                                        */\n/*    \"IBM PUBLIC LICENSE - Open Visualization Data Explorer\"          */\n/***********************************************************************/\n\n#include <dxconfig.h>\n#include \"loader.h\"\n\n/*\n * system dependent code:  dynamically load or unload an executable file.\n *   this is used for adding modules or functions to an already\n *   running executive.  the new code is compiled into a separate executable\n *   with a single entry point.\n *\n * the three functions which are available in this file are:\n *   load a file and call the entry point, which must be the routine DXEnter\n *   load a file and return the entry point DXEnter without executing it\n *   unload a previously loaded file\n *\n * a fourth function may be necessary - reload an already loaded file\n *   which would imply unloading it first and then loading it again.\n *   this might be more useful for development than for normal running.\n *   where the alternative is to disconnect and reconnect to server.\n *\n * each system does this differently, and some don't support the function\n *   at all, so the default case is to return error.\n *\n * look carefully at this file - if you add an architecture you have\n *   to change two places.  the include files and handles you use to id\n *   the loaded segments vary by system, and then the actual code is\n *   also system dependent.\n */\n\n#include <dx/dx.h>\n#include <stdio.h>\n#include <stdlib.h>\n\n#if defined( HAVE_SYS_ERRNO_H )\n#include <sys/errno.h>\n#endif\n\n#if defined( HAVE_ERRNO_H )\n#include <errno.h>\n#endif\n\n#include <sys/stat.h>\n\n#if defined( DXD_NON_UNIX_DIR_SEPARATOR )\n#define DX_DIR_SEPARATOR ';'\n#else\n#define DX_DIR_SEPARATOR ':'\n#endif\n\n/* include files and definition of the 'handle' used to identify\n * the loaded segment.\n */\n\n#if defined( hp700 )\n\n#include <dl.h>\ntypedef shl_t Handle;\n#define __HANDLE_DEF\n\n#endif /* hp700 */\n\n#if !defined( hp700 ) && !defined( intelnt ) && !defined( WIN32 )\n\n#include <dlfcn.h>\ntypedef void *Handle;\n#define __HANDLE_DEF\n\n/* for some reason, the prototypes in the header file are for _dlXXX and not\n * dlXXX when __STDC__ is defined.  i don't understand, but i'll play along.\n */\n#if defined( aviion )\n#define dlopen _dlopen\n#define dlsym _dlsym\n#define dlclose _dlclose\n#define dlerror _dlerror\n#endif\n\n#endif /* sun4 or solaris or sgi or alpha or aviion of linux */\n\n/* default for unsupported platforms */\n#ifndef __HANDLE_DEF\n\ntypedef int Handle;\n\n#endif\n\n#ifdef DXD_WIN\n#define EntryPt FARPROC\n#else\ntypedef int ( *EntryPt )();\n#endif\n\n/* current load state */\ntypedef enum ls\n{\n  L_UNKNOWN,\n  L_LOADED,\n  L_UNLOADED,\n  L_RELOADED,\n  L_ERROR\n} Ls;\n\nstruct loadtable\n{\n  Ls loadstate;\n  char *filename;\n  Handle h;\n  EntryPt func;\n  struct loadtable *next;\n};\n\n#define ALREADY_LOADED ( ( EntryPt )( -1 ) )\n\nstatic struct loadtable **ltp = NULL;\nstatic lock_type *ltl;\n\nError _dxf_initloader()\n{\n  if ( !ltp )\n  {\n    ltp = (struct loadtable **)DXAllocateZero( DXProcessors( 0 ) *\n                                               sizeof( struct loadtable * ) );\n    if ( !ltp )\n      return ERROR;\n\n    ltl = (lock_type *)DXAllocate( sizeof( lock_type ) );\n    if ( !ltl )\n      return ERROR;\n\n    if ( DXcreate_lock( ltl, \"loader\" ) != OK )\n      return ERROR;\n  }\n  return OK;\n}\n\n/* put these in a header file - should they be public DXxxx() functions\n *  (then the prototypes go in <dx/dx.h>), or should they be semiprivate\n *  _dxfEx() function (then the prototypes go in one of the exec headers)?\n *\n * the basic question is would a user write something which used these\n * or are they much too low level?\n */\n\n/*\n * loadobjfile should return a code saying whether it did anything or\n * whether the obj file was already loaded.  if it was loaded, do you\n * really want to call the run part again?  right now you can't tell.\n * that would mean making the function one of the parms set and returned\n * by the func, and yes/no/already done would be the return value.\n * or ok/error would be the return code, &func would be set and &already done\n * would also be a parm set and returned.\n */\n\nstatic struct loadtable *get_tp_entry( char *filename );\nstatic struct loadtable *set_tp_entry( Ls loadstate, char *filename, Handle h,\n                                       EntryPt func );\nstatic Error findfile( char *inname, char **outname, char *envvar );\n\n#if 0 /* ibm6000 */\n\nAIX 4.2 and greater now supports the dl functions. All the specific ibm6000\nloader code is no longer used. How many people are still running AIX 4.1 or \nlower? Pull an older version of this file from cvs if the older loader code\nis needed. The notes on compilation below need updated.\n\n/* \n * to make a dynamically loaded module, you have to link with these flags:\n *\n *  -qmkshrobj       construct a shared object with C++\n *\n *  -bI:dxexec.imp   this lists the symbols in the exec which your module\n *                   will be able to call at runtime - like all the libdx\n *                   functions.  otherwise, they will be undefined when \n *                   trying to link this module independently of the exec.\n *\n *  -G               same as calling -berok -brtl -bnortllib -bsymbolic \n *                   -bnoautoexp -bM:SRE. -berok is definitely needed to\n *                   ignore the dxexec undefined symbols and -bM:SER for\n *                   a reentrant library.\n *\n * the exec doesn't have to be linked with any special flags, except to export\n *  its sybols (see below) because it isn't expecting to call any of the \n *  subroutines defined in these modules directly - it is only going to call\n *  the single entry point, and it makes that call by address and not by name.\n *  It must export its symbol table so that loaded modules will be able to \n *  access dx routines from within the exec.\n *\n *  -bE:dxexec.exp\n *\n * if we wanted the exec to be able to call directly into the dynamically\n *  loaded module code by subroutine names, then at link time the exec would\n *  need either an .exp file or the module object code itself on the link line,\n *  and the module would need to have been linked with -bE:xxx.exp which\n *  contained a list of symbol names to be made public.\n */\n\n#endif /* ibm6000 */\n\n#if 0 /* comment */\n\nok the other other plan:\nwe expand the filename with DXMODULES as a search path and use\nstat until we find a file (any file or an executable file?)\n\nthen we look thru the linked list and see if we have already loaded\nthat file.  if so, we say ok and return, unless it is a reload command\nin which case we go ahead and first unload it and then load it.\n\nif it was not originally loaded, we put it in the linked list with\nthe state and the full pathname we found it under and whatever we\nneed to save in order to be able to unload it (that last part is\nsystem dependent).\n\nif we are unloading a file, find it in the linked list, unload\nit and then either leave the block in the list but marked unloaded\nor remove it from the list.  i do not know if it would help for the\nnext time.  might if we are planning to unload and reload often.\n\nare there limits to the number of loadable segments?  i cannot find\nanything in the man pages about that.  run a test, i suppose.\n\n\nah, and now the MP questions.  if we load the segment before we\nfork, does it stay with the process space on fork?  and afterwards,\nhow do we get it loaded in each segment?  does it load at exactly\nthe same place in each image?  or does this table have to be on a\nper processor basis?  then that blows the single entry point in the\nfunction table.  for MP systems and loadable modules, maybe they\nall have to be specified on the command line, and the init routine\nhas to load them all before the first fork.  \n\n\napparently on the sgi you are going to have to load it into each\nexecutable, at least after the fork.  i got errors running MP but\nit worked fine UP.\n\n#endif /* comment */\n\n#if hp700\n\n#define __ROUTINES_DEF\n\n/*\n * to make a dynamically loaded module, you have to link with these flags:\n *\n * these make it shareable, which seems to be what we want given the\n * comments in the ld(1) man page about the overhead with non-shared\n * but loadable files (see the comments in the DEPENDENCIES section\n * of the ld(1) man page, in the series 700/800 section about the -A option.\n *\n * -ldld  something about dynamic load library?\n *\n * +z     compile-time option to make the code position independent\n * -b     to make the object sharable\n *\n * -e entry_point  to set the entry point, which MUST be DXEntry for this\n *                 architecture, because it doesn't look like there is a\n *                 way to ask for the entry point by address, only by\n *                 symbol name.\n *\n * -q      mark the file demand loadable\n *\n * generally useful option - should we add this to the default cflags\n * for all our builds?\n * -z       make null pointer references generate a seg fault\n *\n * generates extra overhead because the new text is loaded into\n * a read/write segment instead of the initial read-only text segement.\n * -A name  incremental loading (incompatible with -b?)\n *\n * -B type  set the binding - load dynamic libs at startup time or at\n *          time of first reference\n *\n * -E       mark all symbols as exported to shared libs.  the man page\n *          says there is an option to only mark those which are used.\n *          (how does it know?)\n *\n * NOT SUPPORTED in the 700/800 version (300/400 only)\n * -V num   set a decimal version stamp for ident purposes\n *\n * -c filename read options from an indirect file\n *             each line contains options separated by white space\n *             # is the comment character, ## is a real hash char\n *\n * +e symbol  export this symbol\n *\n * +E symbol  set the elaborator function ??\n *\n * +I symbol  set the initializer function ??\n *\n *\n */\n\nPFI DXLoadObjFile( char *fname, char *envvar )\n{\n  Handle handle;\n  int ( *func )();\n  char *foundname = NULL;\n  struct loadtable *lp = NULL;\n\n  /* look at DXMODULES here and if you can't find the file and it\n   * doesn't start with '/', start prepending dirnames until you find it\n   * or you get to the end of the path.\n   */\n  DXDebug( \"L\", \"trying to load `%s'\", fname );\n  if ( !findfile( fname, &foundname, envvar ) )\n    return NULL;\n\n  DXDebug( \"L\", \"found at `%s'\", foundname );\n  if ( ( ( lp = get_tp_entry( foundname ) ) != NULL ) &&\n       ( lp->loadstate == L_LOADED ) )\n  {\n    DXDebug( \"L\", \"`%s' was already loaded\", foundname );\n    DXFree( (Pointer)foundname );\n    return ALREADY_LOADED;\n  }\n\n  /* args are:\n   *  filename, options, address.   they recommend 0 for the address\n   *  (tells the system gets to pick a load address), and the flags\n   *  have to have one of BIND_IMMEDIATE or BIND_DEFERRED (what to do\n   *  with symbols - resolve them all now, or resolve them when they\n   *  are referenced).\n   */\n  handle = shl_load( foundname, BIND_IMMEDIATE, 0L );\n  if ( handle == NULL )\n  {\n    DXSetError( ERROR_DATA_INVALID, \"cannot load file '%s'\", foundname );\n    DXFree( (Pointer)foundname );\n    return NULL;\n  }\n\n  if ( shl_findsym( &handle, \"DXEntry\", TYPE_PROCEDURE, (long *)&func ) < 0 )\n  {\n    DXSetError( ERROR_DATA_INVALID,\n                \"cannot find entry point 'DXEntry' in file '%s'\", foundname );\n    DXFree( (Pointer)foundname );\n    return NULL;\n  }\n\n  if ( !set_tp_entry( L_LOADED, foundname, handle, func ) )\n  {\n    DXFree( (Pointer)foundname );\n    return NULL;\n  }\n\n  DXFree( (Pointer)foundname );\n  return func;\n}\n\nError DXLoadAndRunObjFile( char *fname, char *envvar )\n{\n  int ( *func )();\n\n  func = DXLoadObjFile( fname, envvar );\n  if ( func == NULL )\n    return ERROR;\n  if ( func == ALREADY_LOADED )\n    return OK;\n\n  if ( DXQueryDebug( \"L\" ) )\n    DXEnableDebug( \"F\", 1 );\n\n  ( *func )();\n\n  if ( DXQueryDebug( \"L\" ) )\n    DXEnableDebug( \"F\", 1 );\n\n  if ( DXGetError() != ERROR_NONE )\n    return ERROR;\n\n  return OK;\n}\n\nError DXUnloadObjFile( char *fname, char *envvar )\n{\n  char *foundname = NULL;\n  struct loadtable *lp = NULL;\n\n  if ( !findfile( fname, &foundname, envvar ) )\n    return ERROR;\n\n  if ( ( ( lp = get_tp_entry( foundname ) ) != NULL ) &&\n       ( lp->loadstate == L_UNLOADED ) )\n  {\n    DXDebug( \"L\", \"`%s' found but already unloaded\", foundname );\n    DXFree( (Pointer)foundname );\n    return OK;\n  }\n\n  if ( !lp )\n  {\n    DXDebug( \"L\", \"`%s' not found in load list\", foundname );\n    DXSetError( ERROR_BAD_PARAMETER,\n                \"cannot unload `%s'; not found in load list\", foundname );\n    DXFree( (Pointer)foundname );\n    return OK;\n  }\n\n  if ( shl_unload( lp->h ) < 0 )\n  {\n    DXSetError( ERROR_DATA_INVALID, \"cannot unload file '%s', %s\", foundname,\n                strerror( errno ) );\n    DXFree( (Pointer)foundname );\n    return ERROR;\n  }\n\n  if ( !set_tp_entry( L_UNLOADED, foundname, (Handle)0, (EntryPt)0 ) )\n  {\n    DXFree( (Pointer)foundname );\n    return ERROR;\n  }\n\n  DXFree( (Pointer)foundname );\n  return OK;\n}\n\n#endif /* hp700 */\n\n#if !defined( hp700 ) && !defined( intelnt ) && !defined( WIN32 )\n\n#define __ROUTINES_DEF\n\n/*\n * to make a dynamically loaded module, you have to link with these flags:\n *\n * < lots more stuff here >\n *\n * -Bdynamic\n *\n * -e DXEntry ??\n *\n */\n\nPFI DXLoadObjFile( char *fname, char *envvar )\n{\n  Handle handle;\n  int ( *func )();\n  char *foundname = NULL;\n  struct loadtable *lp = NULL;\n\n  /* look at DXMODULES here and if you can't find the file and it\n   * doesn't start with '/', start prepending dirnames until you find it\n   * or you get to the end of the path.\n   */\n  DXDebug( \"L\", \"trying to load `%s'\", fname );\n  if ( !findfile( fname, &foundname, envvar ) )\n    return NULL;\n\n  DXDebug( \"L\", \"found at `%s'\", foundname );\n  if ( ( ( lp = get_tp_entry( foundname ) ) != NULL ) &&\n       ( lp->loadstate == L_LOADED ) )\n  {\n    DXDebug( \"L\", \"`%s' was already loaded\", foundname );\n    DXFree( (Pointer)foundname );\n    return ALREADY_LOADED;\n  }\n\n  /* args are:\n   *  filename, mode.  the mode is: RTLD_LAZY (defer binding of procs)\n   *  other vals are reserved for future expansion.\n   */\n  handle = dlopen( foundname, RTLD_LAZY | RTLD_GLOBAL );\n  if ( handle == NULL )\n  {\n    char *cp = dlerror();\n    if ( cp )\n      DXSetError( ERROR_DATA_INVALID, \"cannot load file '%s', %s\", fname, cp );\n    else\n      DXSetError( ERROR_DATA_INVALID, \"cannot load file '%s'\", fname );\n    DXFree( (Pointer)foundname );\n    return NULL;\n  }\n\n  if ( ( func = (PFI)dlsym( handle, \"DXEntry\" ) ) == NULL )\n  {\n    DXSetError( ERROR_DATA_INVALID,\n                \"cannot find entry point 'DXEntry' in file '%s'\", foundname );\n    DXFree( (Pointer)foundname );\n    return NULL;\n  }\n\n  if ( !set_tp_entry( L_LOADED, foundname, handle, func ) )\n  {\n    DXFree( (Pointer)foundname );\n    return NULL;\n  }\n\n  DXFree( (Pointer)foundname );\n  return func;\n}\n\nError DXLoadAndRunObjFile( char *fname, char *envvar )\n{\n  int ( *func )();\n\n  func = DXLoadObjFile( fname, envvar );\n  if ( func == NULL )\n    return ERROR;\n  if ( func == ALREADY_LOADED )\n    return OK;\n\n  if ( DXQueryDebug( \"L\" ) )\n    DXEnableDebug( \"F\", 1 );\n\n  ( *func )();\n\n  if ( DXQueryDebug( \"L\" ) )\n    DXEnableDebug( \"F\", 0 );\n\n  if ( DXGetError() != ERROR_NONE )\n    return ERROR;\n\n  return OK;\n}\n\nError DXUnloadObjFile( char *fname, char *envvar )\n{\n  char *foundname = NULL;\n  struct loadtable *lp = NULL;\n\n  if ( !findfile( fname, &foundname, envvar ) )\n    return ERROR;\n\n  if ( ( ( lp = get_tp_entry( foundname ) ) != NULL ) &&\n       ( lp->loadstate == L_UNLOADED ) )\n  {\n    DXDebug( \"L\", \"`%s' found but already unloaded\", foundname );\n    DXFree( (Pointer)foundname );\n    return OK;\n  }\n\n  if ( !lp )\n  {\n    DXDebug( \"L\", \"`%s' not found in load list\", foundname );\n    DXSetError( ERROR_BAD_PARAMETER,\n                \"cannot unload `%s'; not found in load list\", foundname );\n    DXFree( (Pointer)foundname );\n    return OK;\n  }\n\n  if ( dlclose( lp->h ) < 0 )\n  {\n    DXSetError( ERROR_DATA_INVALID, \"cannot unload file '%s', %s\", foundname,\n                strerror( errno ) );\n    DXFree( (Pointer)foundname );\n    return ERROR;\n  }\n\n  if ( !set_tp_entry( L_UNLOADED, foundname, (Handle)0, (EntryPt)0 ) )\n  {\n    DXFree( (Pointer)foundname );\n    return ERROR;\n  }\n\n  DXFree( (Pointer)foundname );\n  return OK;\n}\n\n#endif /* sun4, etc */\n\n#if defined( intelnt ) || defined( WIN32 )\n\n#define __ROUTINES_DEF 1\n\nPFI DXLoadObjFile( char *fname, char *envvar )\n{\n  char szName[128], szStr[128];\n  HINSTANCE hinst;\n  FARPROC func;\n  char *foundname = NULL;\n  struct loadtable *lp = NULL;\n\n  /* look at DXMODULES here and if you can't find the file and it\n   * doesn't start with '/', start prepending dirnames until you find it\n   * or you get to the end of the path.\n   */\n  strcpy( szName, fname );\n\n  sprintf( szStr, \"%s.dll\", szName );\n\n  DXDebug( \"L\", \"trying to load `%s'\", fname );\n  if ( !findfile( szStr, &foundname, envvar ) )\n    return NULL;\n\n  DXDebug( \"L\", \"found at `%s'\", foundname );\n  if ( ( ( lp = get_tp_entry( foundname ) ) != NULL ) &&\n       ( lp->loadstate == L_LOADED ) )\n  {\n    DXDebug( \"L\", \"`%s' was already loaded\", foundname );\n    DXFree( (Pointer)foundname );\n    return (PFI)ALREADY_LOADED;\n  }\n\n  /* args are:\n   *  filename, options, address.   they recommend 0 for the address\n   *  (tells the system gets to pick a load address), and the flags\n   *  have to have one of BIND_IMMEDIATE or BIND_DEFERRED (what to do\n   *  with symbols - resolve them all now, or resolve them when they\n   *  are referenced).\n   */\n  hinst = LoadLibrary( foundname );\n  if ( hinst == NULL )\n  {\n    DXSetError( ERROR_DATA_INVALID, \"cannot load file '%s'\", foundname );\n    DXFree( (Pointer)foundname );\n    return NULL;\n  }\n\n  strcpy( szStr, \"DXEntry\" );\n\n  func = GetProcAddress( hinst, szStr );\n  if ( func == NULL )\n  {\n    DXSetError( ERROR_DATA_INVALID, \"cannot load file `%s', %s\", foundname,\n                szStr );\n    DXFree( (Pointer)foundname );\n    return NULL;\n  }\n\n  if ( !set_tp_entry( L_LOADED, foundname, hinst, func ) )\n  {\n    DXFree( (Pointer)foundname );\n    return NULL;\n  }\n\n  DXFree( (Pointer)foundname );\n  return (PFI)func;\n}\n\nError DXLoadAndRunObjFile( char *fname, char *envvar )\n{\n  /*   int (*func)();   */\n  FARPROC func;\n\n  func = (FARPROC)DXLoadObjFile( fname, envvar );\n  if ( func == NULL )\n    return ERROR;\n  if ( func == ALREADY_LOADED )\n    return OK;\n\n  if ( DXQueryDebug( \"L\" ) )\n    DXEnableDebug( \"F\", 1 );\n\n  ( *func )();\n\n  if ( DXQueryDebug( \"L\" ) )\n    DXEnableDebug( \"F\", 0 );\n\n  if ( DXGetError() != ERROR_NONE )\n    return ERROR;\n\n  return OK;\n}\n\nError DXUnloadObjFile( char *fname, char *envvar )\n{\n  char *foundname = NULL;\n  struct loadtable *lp = NULL;\n\n  if ( !findfile( fname, &foundname, envvar ) )\n    return ERROR;\n\n  if ( ( ( lp = get_tp_entry( foundname ) ) != NULL ) &&\n       ( lp->loadstate == L_UNLOADED ) )\n  {\n    DXDebug( \"L\", \"`%s' found but already unloaded\", foundname );\n    DXFree( (Pointer)foundname );\n    return OK;\n  }\n\n  if ( !lp )\n  {\n    DXDebug( \"L\", \"`%s' not found in load list\", foundname );\n    DXSetError( ERROR_BAD_PARAMETER,\n                \"cannot unload `%s'; not found in load list\", foundname );\n    DXFree( (Pointer)foundname );\n    return OK;\n  }\n\n  if ( !FreeLibrary( (HMODULE)lp->h ) )\n  {\n    DXSetError( ERROR_INVALID_DATA, \"cannot unload file '%s', %s\", foundname,\n                strerror( errno ) );\n    DXFree( (Pointer)foundname );\n    return ERROR;\n  }\n\n  if ( !set_tp_entry( L_UNLOADED, foundname, (Handle)0, (EntryPt)0 ) )\n  {\n    DXFree( (Pointer)foundname );\n    return ERROR;\n  }\n\n  DXFree( (Pointer)foundname );\n  return OK;\n}\n\n#if defined( DX_NATIVE_WINDOWS )\n\nvoid DXFreeLoadedObjectFiles()\n{\n  struct loadtable *np;\n\n  while ( ( np = ltp[DXProcessorId()] ) != NULL )\n  {\n    FreeLibrary( (HMODULE)np->h );\n    ltp[DXProcessorId()] = np->next;\n    DXFree( (Pointer)np );\n  }\n}\n\n#endif /* DX_NATIVE_WINDOWS */\n\n#endif /*   DXD_WIN         */\n\n/* this is the default case - if one of the previous sections\n *  doesn't get used, this one does.  it just sets error messages.\n */\n\n#ifndef __ROUTINES_DEF\n\nPFI DXLoadObjFile( char *fname, char *envvar )\n{\n  DXSetError( ERROR_NOT_IMPLEMENTED,\n              \"dynamic loading of modules not supported on the %s platform\",\n              DXD_ARCHNAME );\n  return NULL;\n}\n\nError DXLoadAndRunObjFile( char *fname, char *envvar )\n{\n  DXSetError( ERROR_NOT_IMPLEMENTED,\n              \"dynamic loading of modules not supported on the %s platform\",\n              DXD_ARCHNAME );\n  return ERROR;\n}\n\nError DXUnloadObjFile( char *fname, char *envvar )\n{\n  /* the unload routine needs the entry point address, which we\n   * wouldn't need to save unless this is an important function.\n   */\n  DXSetError( ERROR_NOT_IMPLEMENTED,\n              \"cannot unload a dynamically loaded file on the %s platform\",\n              DXD_ARCHNAME );\n  return ERROR;\n}\n\n#endif /* !SUPPORTED */\n\n/* worker routine section */\nstatic struct loadtable *get_tp_entry( char *filename )\n{\n  struct loadtable *np;\n  int id = DXProcessorId();\n\n  if ( !ltp[id] )\n    return NULL;\n\n  for ( np = ltp[id]; np; np = np->next )\n    if ( !strcmp( np->filename, filename ) )\n      return np;\n\n  return NULL;\n}\n\nstatic struct loadtable *set_tp_entry( Ls loadstate, char *filename, Handle h,\n                                       EntryPt func )\n{\n  struct loadtable *np;\n  int id = DXProcessorId();\n\n  if ( !filename )\n    return NULL;\n\n  np = (struct loadtable *)DXAllocate( sizeof( struct loadtable ) );\n  if ( !np )\n    return NULL;\n\n  np->loadstate = loadstate;\n  np->filename = (char *)DXAllocate( strlen( filename ) + 1 );\n  if ( !np->filename )\n  {\n    DXFree( (Pointer)np );\n    return NULL;\n  }\n\n  strcpy( np->filename, filename );\n  np->h = h;\n  np->func = func;\n  np->next = NULL;\n\n  if ( ltp[id] )\n  {\n    np->next = ltp[id]->next;\n    ltp[id]->next = np;\n  }\n  else\n    ltp[id] = np;\n\n  return np;\n}\n\n/*\n * locate a file using each part of the DXMODULES path\n *  if that environment variable is defined.\n *  return the actual pathname if successful in 'outname'\n */\nstatic Error findfile( char *inname, char **outname, char *envvar )\n{\n  return _dxf_fileSearch( inname, outname, NULL,\n                          envvar ? envvar : \"DXMODULES\" );\n}\n\n/* func for searching for a filename.   this routine belongs in libdx.\n * there are several duplicate routines like this in the importers.\n *\n * usage:\n *  extension can be null; otherwise inname.extension will be tried\n *  if inname starts with / then it is an absolute pathname and no further\n *   searching is done (besides trying an extension if given).\n *  environment can be null; otherwise it is expected to be the name of\n *   an environment variable whose value is a (string) directory list\n *   (e.g. dir1:dir2:dir3).   inname and inname.extension will be tried\n *   in each dir until the file is found or we run out of dirs.\n *\n *  the complete filename (suitable for passing to open()) will be returned\n *   in *outname.  this checks that the file is not a dir, and is readable.\n *  the caller is responsible for calling DXFree() on outname when finished.\n *  if this routine returns error, outname will be NULL and no space needs\n *   to be freed.\n */\nError _dxf_fileSearch( char *inname, char **outname, char *extension,\n                       char *environment )\n{\n  struct stat sb;\n  char *datadir = NULL, *cp;\n  int bytes = 0;\n\n  *outname = NULL;\n\n  if ( !inname )\n  {\n    DXSetError( ERROR_INTERNAL, \"filename must be specified to fileSearch\" );\n    return ERROR;\n  }\n\n/* simple check for mode bits - it has to match the given mode and it\n * can't be a directory.  i had originally planned to check for the\n * execute bits, but on alpha shared obj files don't have to be marked\n * executable to be loaded, so i changed it to just check to be sure\n * the file can be read by someone.\n */\n#ifdef DXD_WIN\n#define MODE_OK( m ) !S_ISDIR( m )\n#else\n#define MODE_OK( m ) \\\n  ( !S_ISDIR( m ) && ( m & ( S_IRUSR | S_IRGRP | S_IROTH ) ) )\n#endif\n#define MODE_ERR \"'%s' is not a plain file or cannot be opened for reading\"\n\n  /* try to open the filename as given, and save the name\n   *  for error messages later.\n   */\n  DXDebug( \"L\", \"trying at (A) to stat `%s'\", inname );\n  if ( stat( inname, &sb ) == 0 )\n  {\n    if ( !MODE_OK( sb.st_mode ) )\n    {\n      DXSetError( ERROR_BAD_PARAMETER, MODE_ERR, inname );\n      return ERROR;\n    }\n\n    /* if not absolute pathname, some loaders don't seem to\n     * want to search the current dir w/o ./ in front of the\n     * filename.\n     */\n    *outname = (char *)DXAllocateLocalZero( strlen( inname ) + 3 );\n    if ( !*outname )\n      goto error;\n\n#ifdef DXD_NON_UNIX_DIR_SEPARATOR\n    if ( inname[0] != '/' && inname[0] != '\\\\' && inname[1] != ':' )\n    {\n      strcpy( *outname, \"./\" );\n      strcat( *outname, inname );\n    }\n    else\n      strcpy( *outname, inname );\n#else\n    if ( inname[0] != '/' )\n    {\n      strcpy( *outname, \"./\" );\n      strcat( *outname, inname );\n    }\n    else\n      strcpy( *outname, inname );\n#endif\n    return OK;\n  }\n\n/* if absolute pathname and no optional extension, it's not found.\n */\n#ifdef DXD_NON_UNIX_DIR_SEPARATOR\n  if ( ( inname[0] == '/' || inname[0] == '\\\\' || inname[1] == ':' ) &&\n       extension == NULL )\n  {\n#else\n  if ( inname[0] == '/' && extension == NULL )\n  {\n#endif\n    DXSetError( ERROR_BAD_PARAMETER, \"#10903\", \"file\", inname );\n    return ERROR;\n  }\n\n  /* try the name as given with extension\n   */\n  if ( extension )\n  {\n    /* space for basename, extension and ./ in front if found.\n     */\n    *outname = (char *)DXAllocateLocalZero( strlen( inname ) +\n                                            strlen( extension ) + 4 );\n    if ( !*outname )\n      goto error;\n\n/* if not absolute pathname, start it with ./ (see comment above) */\n#ifdef DXD_NON_UNIX_DIR_SEPARATOR\n    if ( inname[0] != '/' && inname[0] != '\\\\' && inname[1] != ':' )\n    {\n      strcpy( *outname, \"./\" );\n      strcat( *outname, inname );\n    }\n    else\n      strcpy( *outname, inname );\n#else\n    if ( inname[0] != '/' )\n    {\n      strcpy( *outname, \"./\" );\n      strcat( *outname, inname );\n    }\n    else\n      strcpy( *outname, inname );\n#endif\n\n    /* now add .extension */\n    strcat( *outname, \".\" );\n    strcat( *outname, extension );\n\n    DXDebug( \"L\", \"trying at (A1) to stat `%s'\", *outname );\n    if ( stat( *outname, &sb ) == 0 )\n    {\n      if ( !MODE_OK( sb.st_mode ) )\n      {\n        DXSetError( ERROR_BAD_PARAMETER, MODE_ERR, *outname );\n        goto error;\n      }\n\n      return OK;\n    }\n  }\n\n  /* ok, now start on the environment variable pathlist.\n   * if there's no pathlist or this is an absolute pathname\n   * it won't be found.\n   */\n  datadir = (char *)getenv( environment );\n#ifdef DXD_NON_UNIX_DIR_SEPARATOR\n  if ( !datadir || ( ( inname[1] == ':' ) || ( inname[0] == '/' ) ||\n                     ( inname[0] == '\\\\' ) ) )\n  {\n#else\n  if ( !datadir || ( inname[0] == '/' ) )\n  {\n#endif\n    DXSetError( ERROR_BAD_PARAMETER, \"#12247\", inname, environment );\n    return ERROR;\n  }\n\n  /* bytes is the full length of the datadir var, so it has to be\n   * long enough for any individual dir in the list.\n   */\n  DXDebug( \"L\", \"%s is `%s'\", environment, datadir );\n  bytes = strlen( inname ) + 5 + strlen( datadir ) +\n          ( extension ? strlen( extension ) : 0 );\n\n  *outname = (char *)DXAllocateZero( bytes );\n  if ( !*outname )\n    return ERROR;\n\n  /* use each part of the pathname with the filename, and each without\n   * and with the extension if it's given.\n   */\n  while ( datadir )\n  {\n\n/* if not absolute pathname, start it with ./ (see comment above) */\n#ifdef DXD_NON_UNIX_DIR_SEPARATOR\n    if ( datadir[0] != '/' && datadir[0] != '\\\\' && datadir[1] != ':' )\n    {\n      strcpy( *outname, \"./\" );\n      strcat( *outname, datadir );\n    }\n    else\n      strcpy( *outname, datadir );\n#else\n    if ( datadir[0] != '/' )\n    {\n      strcpy( *outname, \"./\" );\n      strcat( *outname, datadir );\n    }\n    else\n      strcpy( *outname, datadir );\n#endif\n    if ( ( cp = strchr( *outname, DX_DIR_SEPARATOR ) ) != NULL )\n      *cp = '\\0';\n    strcat( *outname, \"/\" );\n    strcat( *outname, inname );\n\n    DXDebug( \"L\", \"trying at (B) to stat `%s'\", *outname );\n\n#ifdef DXD_NON_UNIX_DIR_SEPARATOR\n\n    {\n      int i;\n      for ( i = 0; i < strlen( *outname ); i++ )\n        if ( ( *outname )[i] == '\\\\' )\n          ( *outname )[i] = '/';\n    }\n\n#endif\n\n    if ( stat( *outname, &sb ) == 0 )\n    {\n      if ( !MODE_OK( sb.st_mode ) )\n      {\n        DXSetError( ERROR_BAD_PARAMETER, MODE_ERR, *outname );\n        goto error;\n      }\n\n      return OK;\n    }\n\n    if ( extension )\n    {\n      strcat( *outname, \".\" );\n      strcat( *outname, extension );\n      DXDebug( \"L\", \"trying at (B1) to stat `%s'\", *outname );\n\n      if ( stat( *outname, &sb ) == 0 )\n      {\n        if ( !MODE_OK( sb.st_mode ) )\n        {\n          DXSetError( ERROR_BAD_PARAMETER, MODE_ERR, *outname );\n          goto error;\n        }\n\n        return OK;\n      }\n    }\n\n    datadir = strchr( datadir, DX_DIR_SEPARATOR );\n    if ( datadir )\n      datadir++;\n  }\n\n  /* if you get here, you didn't find the file.  fall thru\n   *  into error section.\n   */\n  DXSetError( ERROR_BAD_PARAMETER, \"#12247\", inname, environment );\n\nerror:\n  if ( *outname )\n  {\n    DXFree( ( Pointer ) * outname );\n    *outname = NULL;\n  }\n\n  return ERROR;\n}\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/src/uipp/ui/logo.dat",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/.git/objects/pack/pack-1ad27be38fe464651d445d534ed804ada1dfbe29.pack",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/.git/objects/pack/pack-1ad27be38fe464651d445d534ed804ada1dfbe29.idx",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/dxdawn.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/simfdp.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/matpa1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/fulldp.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/imagwin.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/grparts.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/strtsrvo.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/inputcfg.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/vrtordu1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/autoexp.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/saveas.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/rendopts.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/seqctrl.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/xmpmacro.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/selctint.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/hello1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/hello2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/cmputcfg.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/prodarz.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/xmodf13.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/excutgrp.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/helpwin.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/savimg.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/macrname.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/matpa3.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/xgrpasgn.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/xirega.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/opacintg.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/xmodf2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/arch.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/javatls.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/flexmp.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/flesurf.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/xmodf12.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/dataorg.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/strngint.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/shcomps.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/dinhd.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/flcgh_08.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/transfrm.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/xmodf8.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/hand.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/foot-ur.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/selattr.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/xproda.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/xmodf4.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/patrx2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/flcgh_11.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/xmesha.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/xmodf9.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/flcgh_06.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/framctrl.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/gridtype.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/flcgh_07.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/quikovx.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/findtool.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/xmodf1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/griddb.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/colormap.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/colomap1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/xgroup.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/foot-fc.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/adctlpt.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/modbuild.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/confgdb.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/veclist.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/matpa4.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/vertord.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/htswork.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/impconf.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/patry2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/usefle.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/flcgh_04d.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/flcgh_04.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/dialint.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/3dcurs.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/xmodf7.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/stepint.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/patry1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/flcgh_05d.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/exticon.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/skwdgrid.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/flehole.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/dxicon8.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/navigate.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/flcgh_02.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/intlabl.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/spacer.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/map2plan.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/flcgh_09.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/flcgh_01.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/sealevel.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/map.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/brwswin.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/vrtordu2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/flseldb.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/txtmesh.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/setattr.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/filesel.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/vuctrl.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/example1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/strtsrv.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/datapr1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/patrx1.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/flcgh_03d.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/prtimg.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/foot-qs.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/startup.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/opendb.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/flselint.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/hdrdat.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/sgroup.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/irggrid.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/fragment.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/genwave.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/optbox.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/ctpangrp.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/reorient.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/ctpanacc.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/xmodf11.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/fldobj.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/xmodf3.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/xmodf10.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/reggrid.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/foot-ug.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/flcgh_03.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/cmaped.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/textint.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/autoax.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/ctrlpan.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/camera.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/prodarxy.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/datdpnd.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/slidint.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/majcomp.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/throtdb.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/mapdform.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/flcgh_10.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/xmodf6.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/flcgh_05.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/wrpdgrid.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/flcgh_02d.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/html/images/matpa2.gif",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/fonts/cyril_d.dx",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/fonts/greek_d.dx",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/fonts/variable.dx",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/fonts/roman_tser.dx",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/fonts/greek_s.dx",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/fonts/roman_d.dx",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/fonts/script_d.dx",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/fonts/script_s.dx",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/fonts/gothicger_t.dx",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/fonts/roman_dser.dx",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/fonts/gothiceng_t.dx",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/fonts/gothicit_t.dx",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/fonts/pitman.dx",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/fonts/roman_s.dx",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/fonts/roman_ext.dx",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/fonts/area.dx",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/fonts/italic_d.dx",
        "/tmp/vanessa/spack-stage/spack-stage-opendx-master-ppoitkybhopprnnkgxbevjowidbhiwyw/spack-src/fonts/italic_t.dx"
    ],
    "total_files": 3166
}