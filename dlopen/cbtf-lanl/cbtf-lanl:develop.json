{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-cbtf-lanl-develop-jywzxegecucm5eo7nvxv4f5m7ocmt372/spack-src/configure.ac": "################################################################################\n# Copyright (c) 2013 Krell Institute. All Rights Reserved.\n#\n# This program is free software; you can redistribute it and/or modify it under\n# the terms of the GNU General Public License as published by the Free Software\n# Foundation; either version 2 of the License, or (at your option) any later\n# version.\n#\n# This program is distributed in the hope that it will be useful, but WITHOUT\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n# details.\n#\n# You should have received a copy of the GNU General Public License along with\n# this program; if not, write to the Free Software Foundation, Inc., 59 Temple\n# Place, Suite 330, Boston, MA  02111-1307  USA\n################################################################################\n\nAC_INIT([contrib], [1.0])\nAC_COPYRIGHT([[Copyright (c) 2013 Krell Institute. All Rights Reserved.]])\n\nAC_CONFIG_MACRO_DIR([m4])\nAM_INIT_AUTOMAKE\nAM_CONFIG_HEADER([config.h])\n\nAH_TOP([\n/*******************************************************************************\n** Copyright (c) 2013 Krell Institute. All Rights Reserved.\n**\n** This library is free software; you can redistribute it and/or modify it under\n** the terms of the GNU Lesser General Public License as published by the Free\n** Software Foundation; either version 2.1 of the License, or (at your option)\n** any later version.\n**\n** This library is distributed in the hope that it will be useful, but WITHOUT\n** ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n** FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more\n** details.\n**\n** You should have received a copy of the GNU Lesser General Public License\n** along with this library; if not, write to the Free Software Foundation, Inc.,\n** 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n*******************************************************************************/\n])\n\nAC_GNU_SOURCE\nAC_PROG_CC\nAC_PROG_CXX\nAC_PROG_LIBTOOL\nAC_PROG_INSTALL\n\nLT_CONFIG_LTDL_DIR([libltdl])\nLT_INIT([dlopen])\nLTDL_INIT([recursive])\n\nAC_PATH_PROG([RPCGEN], rpcgen)\nAC_PROG_LN_S\n\n################################################################################\n# Handle PowerPC and X86-64 Special Cases\n################################################################################\nAC_ARG_WITH(ppc64_bitmode,\n            AC_HELP_STRING([--with-ppc64-bitmode=<32,64>],\n                           [Specify ppc64 library bit mode @<:@64@:>@]),\n            ppc64_bitmode=$withval, ppc64_bitmode=\"64\")\n\nAC_MSG_CHECKING([Configuring for host = $host  with ppc64_bitmode = $ppc64_bitmode])\n\ncase \"$host\" in\n    powerpc-*-linux*)\n        AC_MSG_CHECKING([Configuring for powerpc-star-linux])\n\n        abi_libdir=\"lib\"\n        alt_abi_libdir=\"lib64\"\n        if test x\"$libdir\" == x'${exec_prefix}/lib64'; then\n            libdir='${exec_prefix}/lib'\n        fi\n\tLDFLAGS=\"-DLIB_DIR=lib $LDFLAGS\"\n\n        ;;\n    powerpc64-*-*)\n\n        AC_MSG_CHECKING([Configuring for powerpc64-star-linux with ppc64_bitmode = $ppc64_bitmode])\n        if test \"$ppc64_bitmode\" = \"64\" ; then\n                AC_MSG_CHECKING([Configuring for 64 bit powerpc64-star-linux host])\n                abi_libdir=\"lib64\"\n                alt_abi_libdir=\"lib\"\n                if test x\"$libdir\" == x'${exec_prefix}/lib'; then\n                    libdir='${exec_prefix}/lib64'\n                fi\n\t\tLDFLAGS=\"-DLIB_DIR=lib64 $LDFLAGS\"\n                CFLAGS=\"-m64 $CFLAGS\"\n                CXXFLAGS=\"-m64 $CXXFLAGS\"\n                CPPFLAGS=\"-m64 $CPPFLAGS\"\n        elif test \"$ppc64_bitmode\" = \"32\" ; then\n                AC_MSG_CHECKING([Configuring for 32 bit powerpc64-star-linux host])\n                abi_libdir=\"lib\"\n                alt_abi_libdir=\"lib64\"\n                if test x\"$libdir\" == x'${exec_prefix}/lib64'; then\n                    libdir='${exec_prefix}/lib'\n                fi\n\t\tLDFLAGS=\"-DLIB_DIR=lib $LDFLAGS\"\n        fi\n        ;;\n\n    x86_64-*-linux*)\n        AC_MSG_CHECKING([Configuring for x86_64--star-linux host])\n        if test x\"$libdir\" == x'${exec_prefix}/lib'; then\n            libdir='${exec_prefix}/lib64'\n        fi\n        abi_libdir=\"lib64\"\n        alt_abi_libdir=\"lib\"\n\tLDFLAGS=\"-DLIB_DIR=lib64 $LDFLAGS\"\n        ;;\n\n    *)\n        AC_MSG_CHECKING([Configuring for default host])\n        abi_libdir=\"lib\"\n        alt_abi_libdir=\"lib64\"\n\tLDFLAGS=\"-DLIB_DIR=lib $LDFLAGS\"\n        ;;\nesac\ntopdir_execprefix=${exec_prefix}\nAC_SUBST(topdir_execprefix)\n\nabi_libdir_name=${abi_libdir}\nAC_SUBST(abi_libdir_name)\nalt_abi_libdir_name=${alt_abi_libdir}\nAC_SUBST(alt_abi_libdir_name)\n\ncbtf_platform=`uname -i`\ncbtf_hardware_platform=$cbtf_platform\nAC_MSG_CHECKING([Checking for cbtf_hardware_platform=$cbtf_hardware_platform])\nAC_SUBST(cbtf_hardware_platform)\n\n\n################################################################################\n# Begin Target O/S Specification\n################################################################################\n\ntarget_os=$host\nAC_MSG_CHECKING(for Target O/S)\nAC_ARG_WITH(target-os,\n    AC_HELP_STRING([--with-target-os=TARGET_OS],\n                   [target os specification @<:@$host@:>@]),\n                    TARGET_OS=$withval, TARGET_OS=\"$host\")\n\n\nAM_CONDITIONAL(HAVE_TARGET_STATIC, false)\nAM_CONDITIONAL(BUILD_TARGETED, false)\n\nbuild_targeted=0\ncase \"$TARGET_OS\" in\n    cray-xk)\n\tAC_DEFINE(TARGET_OS_CRAYXK, 1, [Do not define if not building for targeted cray-xk.])\n\tAC_DEFINE_UNQUOTED(TARGET_OS,cray-xk,\n\t\t\t[Name targeted OS])\n\t;;\n    cray-xe)\n\tAC_DEFINE(TARGET_OS_CRAYXE, 1, [Do not define if not building for targeted cray-xe.])\n\tAC_DEFINE_UNQUOTED(TARGET_OS,cray-xe,\n\t\t\t[Name targeted OS])\n\t;;\n    cray-xt5)\n\tAC_DEFINE(TARGET_OS_CRAYXT5, 1, [Do not define if not building for targeted cray-xt5.])\n\tAC_DEFINE_UNQUOTED(TARGET_OS,cray-xt5,\n\t\t\t[Name targeted OS])\n\t;;\n    cray-xt4)\n\tAC_DEFINE(TARGET_OS_CRAYXT4, 1, [Do not define if not building for targeted cray-xt4.])\n\tAC_DEFINE_UNQUOTED(TARGET_OS,cray-xt4,\n\t\t\t[Name targeted OS])\n\t;;\n    bgl)\n        AM_CONDITIONAL(HAVE_TARGET_STATIC, true)\n        AC_DEFINE([HAVE_TARGET_STATIC], [1],[Define to 1 targeted static builds.])\n\tAM_CONDITIONAL(BUILD_TARGETED, true)\n\tAC_DEFINE(BUILD_TARGETED, 1, [Define to 0 if not building a targeted runtime.])\n\tAC_DEFINE(TARGET_OS_BGL, 1, [Do not define if not building for targeted bgl.])\n\tAC_DEFINE_UNQUOTED(TARGET_OS,bgl,\n\t\t\t[Name targeted OS])\n\tbuild_targeted=1\n\t;;\n    bgp)\n        AM_CONDITIONAL(HAVE_TARGET_STATIC, true)\n        AC_DEFINE([HAVE_TARGET_STATIC], [1],[Define to 1 targeted static builds.])\n\tAM_CONDITIONAL(BUILD_TARGETED, true)\n\tAC_DEFINE(BUILD_TARGETED, 1, [Define to 0 if not building a targeted runtime.])\n\tAC_DEFINE(TARGET_OS_BGP, 1, [Do not define if not building for targeted bgp.])\n\tAC_DEFINE_UNQUOTED(TARGET_OS,bgp,\n\t\t\t   [Name targeted OS])\n\tbuild_targeted=1\n\t;; \n    bgq)\n        AM_CONDITIONAL(HAVE_TARGET_STATIC, true)\n        AC_DEFINE([HAVE_TARGET_STATIC], [1],[Define to 1 targeted static builds.])\n\tAM_CONDITIONAL(BUILD_TARGETED, true)\n\tAC_DEFINE(BUILD_TARGETED, 1, [Define to 0 if not building a targeted runtime.])\n\tAC_DEFINE(TARGET_OS_BGQ, 1, [Do not define if not building for targeted bgq.])\n\tAC_DEFINE_UNQUOTED(TARGET_OS,bgq,\n                           [Name targeted OS])\n\tbuild_targeted=1\n        ;;\n    *)\n        AM_CONDITIONAL(HAVE_TARGET_STATIC, false)\n        AC_DEFINE([HAVE_TARGET_STATIC], [0],[Define to 0 for targeted non-static builds.])\n\tAM_CONDITIONAL(BUILD_TARGETED, false)\n\tAC_DEFINE(BUILD_TARGETED, 0, [Define to 1 if building a targeted runtime.])\n\tAC_DEFINE_UNQUOTED(TARGET_OS,$host,\n\t\t\t   [Name targeted OS])\n\tbuild_targeted=0\n\t;; \nesac\n\nAC_SUBST(BUILD_TARGETED)\nAC_SUBST(TARGET_OS)\n################################################################################\n# End Target O/S Specification\n################################################################################\n\n################################################################################\n# Check for Additional Packages\n################################################################################\n\n\nAX_BOOST_BASE([1.35.0])\nAX_BOOST_DATE_TIME()\nAX_BOOST_SYSTEM()\nAX_BOOST_THREAD()\nAX_BOOST_FILESYSTEM()\nAX_BOOST_UNIT_TEST_FRAMEWORK()\nAX_BOOST_PROGRAM_OPTIONS()\n\n\nAX_XERCESC()\nif test \"$LIBXERCES_C_LIBS\" = \"-lxerces-c\" ; then\n  AX_XERCESC_VERSION()\nfi\n\nAX_CBTF()\nAX_CBTF_XML()\nAX_CBTF_CORE()\nAX_MRNET()\nAX_CBTF_MRNET()\n\nAC_CONFIG_FILES([\n    Makefile\n    memTool/Makefile\n    psTool/Makefile\n])\n\nAC_OUTPUT\n"
    },
    "skipped": [],
    "total_files": 75
}