{
    "matches": {
        "/tmp/vanessa/spack-stage/spack-stage-clfft-2.12.2-26h4kb2ursasbj2l2vrkhsxwmcjmeahp/spack-src/src/include/sharedLibrary.h": "/* ************************************************************************\n * Copyright 2013 Advanced Micro Devices, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ************************************************************************/\n\n\n#pragma once\n#ifndef _SHAREDLIBRARY_H_\n#define _SHAREDLIBRARY_H_\n#include <string>\n\n//\t_WIN32 is defined for both 32 & 64 bit environments\n#if defined( _WIN32 )\n\t#define WIN32_LEAN_AND_MEAN\t\t\t// Exclude rarely-used stuff from Windows headers\n\t// Windows Header Files:\n\t#include <windows.h>\n#else\n\t#include <dlfcn.h>\n#endif\n\ninline void* LoadSharedLibrary( std::string unixPrefix, std::string libraryName, bool quiet )\n{\n#if defined( _WIN32 )\n\tlibraryName += \".dll\";\n\n\t//\tHMODULE is actually the load address; function returns NULL if it cannot find the shared library\n\tHMODULE fileHandle\t= ::LoadLibraryExA( libraryName.c_str( ), NULL, NULL );\n#elif defined(__linux__)\n        tstring linuxName = unixPrefix;\n\tlinuxName += libraryName += \".so\";\n\tvoid* fileHandle = ::dlopen( linuxName.c_str( ), RTLD_NOW );\n\tif( !quiet && !fileHandle )\n\t{\n\t\tstd::cerr << ::dlerror( ) << std::endl;\n\t}\n#elif defined(__APPLE__)\n  tstring appleName = unixPrefix;\n  appleName += libraryName += \".dylib\";\n  void* fileHandle = ::dlopen( appleName.c_str( ), RTLD_NOW );\n  if( !quiet && !fileHandle )\n  {\n          std::cerr << ::dlerror( ) << std::endl;\n  }\n#elif defined(__FreeBSD_kernel__)\n        tstring freebsdName = unixPrefix;\n        freebsdName += libraryName += \".so\";\n        void* fileHandle = ::dlopen( freebsdName.c_str( ), RTLD_NOW );\n        if( !quiet && !fileHandle )\n        {\n                std::cerr << ::dlerror( ) << std::endl;\n        }\n#else\n        #error \"unsupported platform\"\n#endif\n\n\treturn fileHandle;\n}\n\n//\tIf the function succeeds, the return value is nonzero.\n//\tIf the function fails, the return value is zero.\ninline int FreeSharedLibrary( void*& libHandle )\n{\n\tint result\t= 0;\n\n#if defined( _WIN32 )\n\tif( libHandle != 0 )\n\t\tresult = ::FreeLibrary( reinterpret_cast< HMODULE >( libHandle ) );\n#else\n\tif( libHandle != 0 )\n\t\tresult = ( ::dlclose( libHandle ) == 0 );\n#endif\n\n\tlibHandle\t= NULL;\n\n\treturn result;\n}\n\n//\tThis takes a shared module handle returned from LoadSharedLibrary, and a text string of a symbol\n//\tto load from the module, and returns a pointer to that symbol.  If the symbol is not found, NULL\n//\tis returned.  If the module handle is NULL, NULL is returned.\ninline void* LoadFunctionAddr( void* libHandle, std::string funcName )\n{\n\tif( libHandle == NULL )\n\t\treturn NULL;\n\n#if defined( _WIN32 )\n\tHMODULE fileHandle = reinterpret_cast< HMODULE >( libHandle );\n\n\tvoid* pFunc\t= reinterpret_cast< void* >( ::GetProcAddress( fileHandle, funcName.c_str( ) ) );\n#else\n\tvoid* pFunc = ::dlsym( libHandle, funcName.c_str( ) );\n#endif\n\n\treturn pFunc;\n}\n\n#endif // _SHAREDLIBRARY_H_\n",
        "/tmp/vanessa/spack-stage/spack-stage-clfft-2.12.2-26h4kb2ursasbj2l2vrkhsxwmcjmeahp/spack-src/src/callback-client/CMakeLists.txt": "# ########################################################################\n# Copyright 2015 Advanced Micro Devices, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ########################################################################\n\n\n#  client\nset( Client.Source\tcallback-client.cpp\n                    openCL.misc.cpp\n                    stdafx.cpp )\n\nset( Client.Headers client.h\n                    openCL.misc.h\n                    ../statTimer/statisticalTimer.extern.h\n                    ../include/unicode.compatibility.h\n                    ../include/stdafx.h\n                    ../include/targetver.h\n                    ../include/clFFT.h )\n\nset( Client.Files ${Client.Source} ${Client.Headers} )\n\nset( DL_LIB \"\" )\nif( WIN32 )\n\tadd_definitions( \"/D_CONSOLE\" )\nelseif( APPLE )\n\tset( CMAKE_CXX_FLAGS \"-std=c++11 -stdlib=libc++ ${CMAKE_CXX_FLAGS}\" )\nelse( )\n\t# To use the dlopen() and dlclose() functions, we should link with libdl\n\tset( DL_LIB \"-ldl -lrt\" )\nendif( )\n\n# Include standard OpenCL headers\ninclude_directories( ${Boost_INCLUDE_DIRS} ${OPENCL_INCLUDE_DIRS} ${FFTW_INCLUDE_DIRS} ../../../common ${PROJECT_BINARY_DIR}/include ../include )\n\nadd_executable( clFFT-callback-client ${Client.Files} )\n\ntarget_link_libraries( clFFT-callback-client clFFT ${Boost_LIBRARIES} ${OPENCL_LIBRARIES} ${FFTW_LIBRARIES} ${DL_LIB} )\n\nset_target_properties( clFFT-callback-client PROPERTIES VERSION ${CLFFT_VERSION} )\nset_target_properties( clFFT-callback-client PROPERTIES RUNTIME_OUTPUT_DIRECTORY \"${PROJECT_BINARY_DIR}/staging\" )\nif( APPLE )\n    # properly deal with RPATH on mac\n    set_target_properties( clFFT-callback-client PROPERTIES INSTALL_RPATH \"@loader_path/../lib${SUFFIX_LIB}\")\nendif()\n\ninstall( TARGETS clFFT-callback-client\n        RUNTIME DESTINATION bin${SUFFIX_BIN}\n        LIBRARY DESTINATION lib${SUFFIX_LIB}\n        ARCHIVE DESTINATION lib${SUFFIX_LIB}/import\n        )\n",
        "/tmp/vanessa/spack-stage/spack-stage-clfft-2.12.2-26h4kb2ursasbj2l2vrkhsxwmcjmeahp/spack-src/src/client/CMakeLists.txt": "# ########################################################################\n# Copyright 2013 Advanced Micro Devices, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ########################################################################\n\n\n#  client\nset( Client.Source\tclient.cpp\n                    openCL.misc.cpp\n                    stdafx.cpp )\n\nset( Client.Headers client.h\n                    openCL.misc.h\n                    ../statTimer/statisticalTimer.extern.h\n                    ../include/unicode.compatibility.h\n                    ../include/stdafx.h\n                    ../include/targetver.h\n                    ../include/clFFT.h )\n\nset( Client.Files ${Client.Source} ${Client.Headers} )\n\nset( RT_LIB \"\" )\nif( WIN32 )\n\tadd_definitions( \"/D_CONSOLE\" )\nelseif( NOT APPLE )\n\t# To use the dlopen() and dlclose() functions, we should link with libdl\n\tset( RT_LIB \"-lrt\" )\nendif( )\n\n# Include standard OpenCL headers\ninclude_directories( ${Boost_INCLUDE_DIRS} ${OPENCL_INCLUDE_DIRS} ../../../common ${PROJECT_BINARY_DIR}/include ../include )\n\nadd_executable( clFFT-client ${Client.Files} )\n\ntarget_link_libraries( clFFT-client clFFT ${Boost_LIBRARIES} ${OPENCL_LIBRARIES} ${CMAKE_DL_LIBS} ${RT_LIB} )\n\nset_target_properties( clFFT-client PROPERTIES VERSION ${CLFFT_VERSION} )\nset_target_properties( clFFT-client PROPERTIES RUNTIME_OUTPUT_DIRECTORY \"${PROJECT_BINARY_DIR}/staging\" )\nif( APPLE )\n    # properly deal with RPATH on mac\n    set_target_properties( clFFT-client PROPERTIES INSTALL_RPATH \"@loader_path/../lib${SUFFIX_LIB}\")\nendif()\n\ninstall( TARGETS clFFT-client\n        RUNTIME DESTINATION bin${SUFFIX_BIN}\n        LIBRARY DESTINATION lib${SUFFIX_LIB}\n        ARCHIVE DESTINATION lib${SUFFIX_LIB}/import\n        )\n"
    },
    "skipped": [
        "/tmp/vanessa/spack-stage/spack-stage-clfft-2.12.2-26h4kb2ursasbj2l2vrkhsxwmcjmeahp/spack-src/src/library/plan.cpp",
        "/tmp/vanessa/spack-stage/spack-stage-clfft-2.12.2-26h4kb2ursasbj2l2vrkhsxwmcjmeahp/spack-src/src/scripts/perf/manual.pdf",
        "/tmp/vanessa/spack-stage/spack-stage-clfft-2.12.2-26h4kb2ursasbj2l2vrkhsxwmcjmeahp/spack-src/docs/realfft_fwdinv.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-clfft-2.12.2-26h4kb2ursasbj2l2vrkhsxwmcjmeahp/spack-src/docs/realfft_ex_n7.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-clfft-2.12.2-26h4kb2ursasbj2l2vrkhsxwmcjmeahp/spack-src/docs/realfft_expl_02.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-clfft-2.12.2-26h4kb2ursasbj2l2vrkhsxwmcjmeahp/spack-src/docs/realfft_expl_06.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-clfft-2.12.2-26h4kb2ursasbj2l2vrkhsxwmcjmeahp/spack-src/docs/realfft_ex_n8.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-clfft-2.12.2-26h4kb2ursasbj2l2vrkhsxwmcjmeahp/spack-src/docs/realfft_1dlen.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-clfft-2.12.2-26h4kb2ursasbj2l2vrkhsxwmcjmeahp/spack-src/docs/realfft_expl_04.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-clfft-2.12.2-26h4kb2ursasbj2l2vrkhsxwmcjmeahp/spack-src/docs/realfft_expl_05.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-clfft-2.12.2-26h4kb2ursasbj2l2vrkhsxwmcjmeahp/spack-src/docs/realfft_expl_07.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-clfft-2.12.2-26h4kb2ursasbj2l2vrkhsxwmcjmeahp/spack-src/docs/realfft_expl_08.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-clfft-2.12.2-26h4kb2ursasbj2l2vrkhsxwmcjmeahp/spack-src/docs/realfft_expl_01.jpg",
        "/tmp/vanessa/spack-stage/spack-stage-clfft-2.12.2-26h4kb2ursasbj2l2vrkhsxwmcjmeahp/spack-src/docs/realfft_expl_03.jpg"
    ],
    "total_files": 159
}